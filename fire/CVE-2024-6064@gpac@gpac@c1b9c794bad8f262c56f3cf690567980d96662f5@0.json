{
  "cve_id": "CVE-2024-6064",
  "cve_desc": "A vulnerability was found in GPAC 2.5-DEV-rev228-g11067ea92-master. It has been declared as problematic. This vulnerability affects the function xmt_node_end of the file src/scene_manager/loader_xmt.c of the component MP4Box. The manipulation leads to use after free. Local access is required to approach this attack. The exploit has been disclosed to the public and may be used. The name of the patch is f4b3e4d2f91bc1749e7a924a8ab171af03a355a8/c1b9c794bad8f262c56f3cf690567980d96662f5. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-268792.",
  "repo": "gpac/gpac",
  "patch_hash": "c1b9c794bad8f262c56f3cf690567980d96662f5",
  "patch_info": {
    "commit_hash": "c1b9c794bad8f262c56f3cf690567980d96662f5",
    "repo": "gpac/gpac",
    "commit_url": "https://github.com/gpac/gpac/commit/c1b9c794bad8f262c56f3cf690567980d96662f5",
    "files": [
      "src/scene_manager/loader_xmt.c"
    ],
    "message": "xmt links double free (#2874)",
    "before_after_code_files": [
      "src/scene_manager/loader_xmt.c||src/scene_manager/loader_xmt.c"
    ]
  },
  "patch_diff": {
    "src/scene_manager/loader_xmt.c||src/scene_manager/loader_xmt.c": [
      "File: src/scene_manager/loader_xmt.c -> src/scene_manager/loader_xmt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "605: }",
      "608: static u32 xmt_get_next_node_id(GF_XMTParser *parser)",
      "609: {",
      "610:  u32 ID;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "608: static void xmt_remove_link_for_descriptor(GF_XMTParser* parser, GF_Descriptor* desc) {",
      "610:  u32 i=0;",
      "611:  XMT_ODLink *l, *to_del=NULL;",
      "612:  while ((l = (XMT_ODLink*)gf_list_enum(parser->od_links, &i)) ) {",
      "613:   if (l->od && l->od == (GF_ObjectDescriptor*)desc) {",
      "614:    l->od = NULL;",
      "615:    to_del = l;",
      "616:    break;",
      "617:   }",
      "618:  }",
      "619:  if (to_del) {",
      "621:   i=0;",
      "622:   GF_Descriptor* subdesc;",
      "623:   while ((subdesc = gf_list_enum(((GF_ObjectDescriptor*)desc)->ESDescriptors, &i))) {",
      "624:    if (subdesc) xmt_remove_link_for_descriptor(parser, subdesc);",
      "625:   }",
      "627:   gf_list_del_item(parser->od_links, to_del);",
      "628:   if (to_del->desc_name) gf_free(to_del->desc_name);",
      "629:   gf_list_del(to_del->mf_urls);",
      "630:   gf_free(to_del);",
      "631:  }",
      "633:  XMT_ESDLink *esdl, *esdl_del=NULL;",
      "634:  i=0;",
      "635:  while ((esdl = (XMT_ESDLink *)gf_list_enum(parser->esd_links, &i))) {",
      "636:   if (esdl->esd && esdl->esd == (GF_ESD*)desc) {",
      "637:    esdl->esd = NULL;",
      "638:    esdl_del = esdl;",
      "639:    break;",
      "640:   }",
      "641:  }",
      "643:  if (esdl_del) {",
      "644:   gf_list_del_item(parser->esd_links, esdl_del);",
      "645:   if (esdl_del->desc_name) gf_free(esdl_del->desc_name);",
      "646:   gf_free(esdl_del);",
      "647:  }",
      "649: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1996:   e = gf_odf_desc_add_desc(parent, desc);",
      "1997:   if (e) {",
      "1998:    xmt_report(parser, GF_OK, \"Invalid child descriptor\");",
      "1999:    gf_odf_desc_del(desc);",
      "2000:    return NULL;",
      "2001:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2043:    xmt_remove_link_for_descriptor(parser, desc);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2672:    }",
      "2673:    else if (!parser->od_command) {",
      "2674:     xmt_report(parser, GF_OK, \"Warning: descriptor %s defined outside scene scope - skipping\", name);",
      "2675:     gf_odf_desc_del(desc);",
      "2683:    } else {",
      "2684:     switch (parser->od_command->tag) {",
      "2685:     case GF_ODF_ESD_UPDATE_TAG:",
      "",
      "[Removed Lines]",
      "2676:     XMT_ODLink *prev_l = gf_list_last(parser->od_links);",
      "2677:     if ((GF_Descriptor *) prev_l->od == desc) {",
      "2678:      gf_list_pop_back(parser->od_links);",
      "2679:      if (prev_l->desc_name) gf_free(prev_l->desc_name);",
      "2680:      gf_list_del(prev_l->mf_urls);",
      "2681:      gf_free(prev_l);",
      "2682:     }",
      "",
      "[Added Lines]",
      "2721:     xmt_remove_link_for_descriptor(parser, desc);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a7f0f490151c5682898c0237807108e1f83949d0",
      "candidate_info": {
        "commit_hash": "a7f0f490151c5682898c0237807108e1f83949d0",
        "repo": "gpac/gpac",
        "commit_url": "https://github.com/gpac/gpac/commit/a7f0f490151c5682898c0237807108e1f83949d0",
        "files": [
          "src/scene_manager/loader_xmt.c"
        ],
        "message": "improve c1b9c794 (#2874)",
        "before_after_code_files": [
          "src/scene_manager/loader_xmt.c||src/scene_manager/loader_xmt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "src/scene_manager/loader_xmt.c||src/scene_manager/loader_xmt.c"
          ],
          "candidate": [
            "src/scene_manager/loader_xmt.c||src/scene_manager/loader_xmt.c"
          ]
        }
      },
      "candidate_diff": {
        "src/scene_manager/loader_xmt.c||src/scene_manager/loader_xmt.c": [
          "File: src/scene_manager/loader_xmt.c -> src/scene_manager/loader_xmt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "610:  u32 i=0;",
          "611:  XMT_ODLink *l, *to_del=NULL;",
          "612:  while ((l = (XMT_ODLink*)gf_list_enum(parser->od_links, &i)) ) {",
          "613:   if (l->od && l->od == (GF_ObjectDescriptor*)desc) {",
          "614:    l->od = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "613:  if (!desc) return;",
          "616:  if (desc->tag == GF_ODF_IOD_TAG || desc->tag == GF_ODF_OD_TAG) {",
          "617:   GF_Descriptor* subdesc = NULL;",
          "618:   u32 i=0;",
          "619:   while ((subdesc = gf_list_enum(((GF_ObjectDescriptor*)desc)->ESDescriptors, &i))) {",
          "620:    if (subdesc) xmt_remove_link_for_descriptor(parser, subdesc);",
          "621:   }",
          "622:  }",
          "624:  i=0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "616:    break;",
          "617:   }",
          "618:  }",
          "627:   gf_list_del_item(parser->od_links, to_del);",
          "628:   if (to_del->desc_name) gf_free(to_del->desc_name);",
          "629:   gf_list_del(to_del->mf_urls);",
          "630:   gf_free(to_del);",
          "631:  }",
          "633:  XMT_ESDLink *esdl, *esdl_del=NULL;",
          "634:  i=0;",
          "635:  while ((esdl = (XMT_ESDLink *)gf_list_enum(parser->esd_links, &i))) {",
          "",
          "[Removed Lines]",
          "619:  if (to_del) {",
          "621:   i=0;",
          "622:   GF_Descriptor* subdesc;",
          "623:   while ((subdesc = gf_list_enum(((GF_ObjectDescriptor*)desc)->ESDescriptors, &i))) {",
          "624:    if (subdesc) xmt_remove_link_for_descriptor(parser, subdesc);",
          "625:   }",
          "",
          "[Added Lines]",
          "633:  if (to_del) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f4b3e4d2f91bc1749e7a924a8ab171af03a355a8",
      "candidate_info": {
        "commit_hash": "f4b3e4d2f91bc1749e7a924a8ab171af03a355a8",
        "repo": "gpac/gpac",
        "commit_url": "https://github.com/gpac/gpac/commit/f4b3e4d2f91bc1749e7a924a8ab171af03a355a8",
        "files": [
          "src/scene_manager/loader_xmt.c"
        ],
        "message": "fixed #2874",
        "before_after_code_files": [
          "src/scene_manager/loader_xmt.c||src/scene_manager/loader_xmt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "src/scene_manager/loader_xmt.c||src/scene_manager/loader_xmt.c"
          ],
          "candidate": [
            "src/scene_manager/loader_xmt.c||src/scene_manager/loader_xmt.c"
          ]
        }
      },
      "candidate_diff": {
        "src/scene_manager/loader_xmt.c||src/scene_manager/loader_xmt.c": [
          "File: src/scene_manager/loader_xmt.c -> src/scene_manager/loader_xmt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2673:    else if (!parser->od_command) {",
          "2674:     xmt_report(parser, GF_OK, \"Warning: descriptor %s defined outside scene scope - skipping\", name);",
          "2675:     gf_odf_desc_del(desc);",
          "2676:    } else {",
          "2677:     switch (parser->od_command->tag) {",
          "2678:     case GF_ODF_ESD_UPDATE_TAG:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2676:     XMT_ODLink *prev_l = gf_list_last(parser->od_links);",
          "2677:     if ((GF_Descriptor *) prev_l->od == desc) {",
          "2678:      gf_list_pop_back(parser->od_links);",
          "2679:      if (prev_l->desc_name) gf_free(prev_l->desc_name);",
          "2680:      gf_list_del(prev_l->mf_urls);",
          "2681:      gf_free(prev_l);",
          "2682:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}