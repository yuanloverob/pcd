{
  "cve_id": "CVE-2023-35853",
  "cve_desc": "In Suricata before 6.0.13, an adversary who controls an external source of Lua rules may be able to execute Lua code. This is addressed in 6.0.13 by disabling Lua unless allow-rules is true in the security lua configuration section.",
  "repo": "OISF/suricata",
  "patch_hash": "b95bbcc66db526ffcc880eb439dbe8abc87a81da",
  "patch_info": {
    "commit_hash": "b95bbcc66db526ffcc880eb439dbe8abc87a81da",
    "repo": "OISF/suricata",
    "commit_url": "https://github.com/OISF/suricata/commit/b95bbcc66db526ffcc880eb439dbe8abc87a81da",
    "files": [
      "src/detect-lua.c",
      "suricata.yaml.in"
    ],
    "message": "lua: disable lua rules by default\n\nTo protect against possible supply chain attacks, disable Lua rules by\ndefault. They can be enabled under the \"security\" section of\nsuricata.yaml.\n\nTicket: #6122",
    "before_after_code_files": [
      "src/detect-lua.c||src/detect-lua.c",
      "suricata.yaml.in||suricata.yaml.in"
    ]
  },
  "patch_diff": {
    "src/detect-lua.c||src/detect-lua.c": [
      "File: src/detect-lua.c -> src/detect-lua.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1002:     DetectLuaData *lua = NULL;",
      "1003:     SigMatch *sm = NULL;",
      "1005:     lua = DetectLuaParse(de_ctx, str);",
      "1006:     if (lua == NULL)",
      "1007:         goto error;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1007:     int enabled = 0;",
      "1008:     (void)ConfGetBool(\"security.lua.allow-rules\", &enabled);",
      "1009:     if (!enabled) {",
      "1010:         SCLogError(SC_ERR_NO_LUA_SUPPORT,",
      "1011:                 \"Lua rules disabled by security configuration: security.lua.allow-rules\");",
      "1012:         goto error;",
      "1013:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1157: static int LuaMatchTest01(void)",
      "1158: {",
      "1159:     const char script[] =",
      "1160:         \"function init (args)\\n\"",
      "1161:         \"   local needs = {}\\n\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1169:     ConfSetFinal(\"security.lua.allow-rules\", \"true\");",
      "",
      "---------------"
    ],
    "suricata.yaml.in||suricata.yaml.in": [
      "File: suricata.yaml.in -> suricata.yaml.in",
      "--- Hunk 1 ---",
      "[Context before]",
      "1014: #  user: suri",
      "1015: #  group: suri",
      "1017: # Some logging modules will use that name in event as identifier. The default",
      "1018: # value is the hostname",
      "1019: #sensor-name: suricata",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1017: security:",
      "1018:   lua:",
      "1019:     # Allow Lua rules. Disabled by default.",
      "1020:     #allow-rules: false",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f119b2970130da7265eea61413633d5756e21045",
      "candidate_info": {
        "commit_hash": "f119b2970130da7265eea61413633d5756e21045",
        "repo": "OISF/suricata",
        "commit_url": "https://github.com/OISF/suricata/commit/f119b2970130da7265eea61413633d5756e21045",
        "files": [
          "src/detect-lua.c",
          "suricata.yaml.in"
        ],
        "message": "lua: disable lua rules by default\n\nTo protect against possible supply chain attacks, disable Lua rules by\ndefault. They can be enabled under the \"security\" section of\nsuricata.yaml.\n\nTicket: #6122",
        "before_after_code_files": [
          "src/detect-lua.c||src/detect-lua.c",
          "suricata.yaml.in||suricata.yaml.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/detect-lua.c||src/detect-lua.c",
            "suricata.yaml.in||suricata.yaml.in"
          ],
          "candidate": [
            "src/detect-lua.c||src/detect-lua.c",
            "suricata.yaml.in||suricata.yaml.in"
          ]
        }
      },
      "candidate_diff": {
        "src/detect-lua.c||src/detect-lua.c": [
          "File: src/detect-lua.c -> src/detect-lua.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1015:     DetectLuaData *lua = NULL;",
          "1016:     SigMatch *sm = NULL;",
          "1018:     lua = DetectLuaParse(de_ctx, str);",
          "1019:     if (lua == NULL)",
          "1020:         goto error;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1020:     int enabled = 0;",
          "1021:     (void)ConfGetBool(\"security.lua.allow-rules\", &enabled);",
          "1022:     if (!enabled) {",
          "1023:         SCLogError(\"Lua rules disabled by security configuration: security.lua.allow-rules\");",
          "1024:         goto error;",
          "1025:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1170: static int LuaMatchTest01(void)",
          "1171: {",
          "1172:     const char script[] =",
          "1173:         \"function init (args)\\n\"",
          "1174:         \"   local needs = {}\\n\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1181:     ConfSetFinal(\"security.lua.allow-rules\", \"true\");",
          "",
          "---------------"
        ],
        "suricata.yaml.in||suricata.yaml.in": [
          "File: suricata.yaml.in -> suricata.yaml.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "1191:         - /etc/",
          "1192:         - @e_sysconfdir@",
          "1194: # Some logging modules will use that name in event as identifier. The default",
          "1195: # value is the hostname",
          "1196: #sensor-name: suricata",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1194:   lua:",
          "1195:     # Allow Lua rules. Disabled by default.",
          "1196:     #allow-rules: false",
          "",
          "---------------"
        ]
      }
    }
  ]
}