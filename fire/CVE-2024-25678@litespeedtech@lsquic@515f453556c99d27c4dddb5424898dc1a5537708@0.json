{
  "cve_id": "CVE-2024-25678",
  "cve_desc": "In LiteSpeed QUIC (LSQUIC) Library before 4.0.4, DCID validation is mishandled.",
  "repo": "litespeedtech/lsquic",
  "patch_hash": "515f453556c99d27c4dddb5424898dc1a5537708",
  "patch_info": {
    "commit_hash": "515f453556c99d27c4dddb5424898dc1a5537708",
    "repo": "litespeedtech/lsquic",
    "commit_url": "https://github.com/litespeedtech/lsquic/commit/515f453556c99d27c4dddb5424898dc1a5537708",
    "files": [
      "src/liblsquic/lsquic_full_conn_ietf.c"
    ],
    "message": "Release 4.0.4",
    "before_after_code_files": [
      "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c"
    ]
  },
  "patch_diff": {
    "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c": [
      "File: src/liblsquic/lsquic_full_conn_ietf.c -> src/liblsquic/lsquic_full_conn_ietf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "7284:     struct conn_cid_elem *cce;",
      "7288:     for (cce = lconn->cn_cces; cce < END_OF_CCES(lconn); ++cce)",
      "7289:         if (cce - lconn->cn_cces != lconn->cn_cur_cce_idx",
      "",
      "[Removed Lines]",
      "7286:     LSQ_DEBUG(\"peer switched its DCID, attempt to switch own SCID\");",
      "",
      "[Added Lines]",
      "7286:     LSQ_DEBUGC(\"peer switched its DCID to %\"CID_FMT",
      "7287:               \", attempt to switch own SCID\", CID_BITS(dcid_in));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "7545:                                                     << packet_in->pi_path_id);",
      "7546:                 }",
      "7547:             }",
      "7549:             {",
      "7550:                 if (0 != on_dcid_change(conn, &packet_in->pi_dcid))",
      "7551:                     return -1;",
      "",
      "[Removed Lines]",
      "7548:             else if (is_dcid_changed)",
      "",
      "[Added Lines]",
      "7549:             else if (is_dcid_changed",
      "7550:                 && !LSQUIC_CIDS_EQ(CN_SCID(&conn->ifc_conn),",
      "7551:                                    &packet_in->pi_dcid))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c8cb6aa3e2abd5f8398af9f5687f0ad7298b51cf",
      "candidate_info": {
        "commit_hash": "c8cb6aa3e2abd5f8398af9f5687f0ad7298b51cf",
        "repo": "litespeedtech/lsquic",
        "commit_url": "https://github.com/litespeedtech/lsquic/commit/c8cb6aa3e2abd5f8398af9f5687f0ad7298b51cf",
        "files": [
          "CHANGELOG",
          "docs/conf.py",
          "include/lsquic.h",
          "src/liblsquic/lsquic_full_conn_ietf.c",
          "src/liblsquic/lsquic_parse_common.c",
          "src/liblsquic/lsquic_send_ctl.c",
          "src/liblsquic/lsquic_send_ctl.h"
        ],
        "message": "Release 4.0.6",
        "before_after_code_files": [
          "include/lsquic.h||include/lsquic.h",
          "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c",
          "src/liblsquic/lsquic_parse_common.c||src/liblsquic/lsquic_parse_common.c",
          "src/liblsquic/lsquic_send_ctl.c||src/liblsquic/lsquic_send_ctl.c",
          "src/liblsquic/lsquic_send_ctl.h||src/liblsquic/lsquic_send_ctl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c"
          ],
          "candidate": [
            "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c"
          ]
        }
      },
      "candidate_diff": {
        "include/lsquic.h||include/lsquic.h": [
          "File: include/lsquic.h -> include/lsquic.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define LSQUIC_MAJOR_VERSION 4",
          "29: #define LSQUIC_MINOR_VERSION 0",
          "",
          "[Removed Lines]",
          "30: #define LSQUIC_PATCH_VERSION 5",
          "",
          "[Added Lines]",
          "30: #define LSQUIC_PATCH_VERSION 6",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c": [
          "File: src/liblsquic/lsquic_full_conn_ietf.c -> src/liblsquic/lsquic_full_conn_ietf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1933:         conn->ifc_flags |= IFC_ACK_HAD_MISS;",
          "1934:     else",
          "1935:         conn->ifc_flags &= ~IFC_ACK_HAD_MISS;",
          "1937:               \" on outgoing queue\", w, packet_out->po_packno);",
          "1938:     if (conn->ifc_n_cons_unretx >= conn->ifc_ping_unretx_thresh &&",
          "1939:                 !lsquic_send_ctl_have_outgoing_retx_frames(&conn->ifc_send_ctl))",
          "",
          "[Removed Lines]",
          "1936:     LSQ_DEBUG(\"Put %d bytes of ACK frame into packet %\" PRIu64",
          "",
          "[Added Lines]",
          "1936:     LSQ_DEBUG(\"Put %d bytes of ACK frame into packet #%\" PRIu64",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1945:         conn->ifc_ping_unretx_thresh = 12",
          "1946:                     + lsquic_crand_get_nybble(conn->ifc_enpub->enp_crand);",
          "1947:     }",
          "1949:     conn->ifc_n_slack_akbl[pns] = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1947:         conn->ifc_n_cons_unretx = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7941:     struct ietf_full_conn *const conn = (struct ietf_full_conn *) lconn;",
          "7942:     int s;",
          "7945:         conn->ifc_n_cons_unretx = 0;",
          "7946:     else",
          "7947:         ++conn->ifc_n_cons_unretx;",
          "",
          "[Removed Lines]",
          "7944:     if (packet_out->po_frame_types & (IQUIC_FRAME_RETX_MASK | QUIC_FTBIT_ACK))",
          "",
          "[Added Lines]",
          "7945:     if (packet_out->po_frame_types & (IQUIC_FRAME_RETX_MASK))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8574:                     || 0 != lsquic_send_ctl_n_scheduled(&conn->ifc_send_ctl))",
          "8575:                 )",
          "8576:         {",
          "8578:             generate_connection_close_packet(conn);",
          "8579:             tick |= TICK_SEND|TICK_CLOSE;",
          "8580:         }",
          "",
          "[Removed Lines]",
          "8577:             RETURN_IF_OUT_OF_PACKETS();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_parse_common.c||src/liblsquic/lsquic_parse_common.c": [
          "File: src/liblsquic/lsquic_parse_common.c -> src/liblsquic/lsquic_parse_common.c"
        ],
        "src/liblsquic/lsquic_send_ctl.c||src/liblsquic/lsquic_send_ctl.c": [
          "File: src/liblsquic/lsquic_send_ctl.c -> src/liblsquic/lsquic_send_ctl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1704: static int",
          "1705: send_ctl_can_send (struct lsquic_send_ctl *ctl)",
          "1706: {",
          "1707:     const unsigned n_out = send_ctl_all_bytes_out(ctl);",
          "1712:         ctl->sc_conn_pub->conn_cap.cc_sent,",
          "1714:     if (ctl->sc_flags & SC_PACE)",
          "1715:     {",
          "1717:             return 0;",
          "1718:         if (lsquic_pacer_can_schedule(&ctl->sc_pacer,",
          "1719:                                ctl->sc_n_scheduled + ctl->sc_n_in_flight_all))",
          "",
          "[Removed Lines]",
          "1708:     LSQ_DEBUG(\"%s: n_out: %u (unacked_all: %u); cwnd: %\"PRIu64",
          "1709:         \"; ccfc: %\"PRIu64\"/%\"PRIu64, __func__,",
          "1710:         n_out, ctl->sc_bytes_unacked_all,",
          "1711:         ctl->sc_ci->cci_get_cwnd(CGP(ctl)),",
          "1713:         ctl->sc_conn_pub->conn_cap.cc_max);",
          "1716:         if (n_out >= ctl->sc_ci->cci_get_cwnd(CGP(ctl)))",
          "",
          "[Added Lines]",
          "1707:     uint64_t cwnd = ctl->sc_ci->cci_get_cwnd(CGP(ctl));",
          "1709:     LSQ_DEBUG(\"%s: sc_flags: 0x%X, b_out: %u = (%u + %u); b_retx: %u; cwnd: %\"PRIu64",
          "1710:         \"; ccfc: %\"PRIu64\"/%\"PRIu64\"; n_scheduled: %d, n_in_flight_all: %d\"",
          "1711:         \"; pa_burst: %d; pa_next: %lu; pa_now: %lu\"",
          "1712:         , __func__, ctl->sc_flags,",
          "1713:         n_out, ctl->sc_bytes_unacked_all, ctl->sc_bytes_scheduled,",
          "1714:         ctl->sc_bytes_unacked_retx, cwnd,",
          "1716:         ctl->sc_conn_pub->conn_cap.cc_max,",
          "1717:         ctl->sc_n_scheduled, ctl->sc_n_in_flight_all,",
          "1718:         ctl->sc_pacer.pa_burst_tokens,",
          "1719:         ctl->sc_pacer.pa_next_sched, ctl->sc_pacer.pa_now);",
          "1723:         if (n_out >= cwnd)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1728:         return 0;",
          "1729:     }",
          "1730:     else",
          "1732: }",
          "",
          "[Removed Lines]",
          "1731:         return n_out < ctl->sc_ci->cci_get_cwnd(CGP(ctl));",
          "",
          "[Added Lines]",
          "1738:         return n_out < cwnd;",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_send_ctl.h||src/liblsquic/lsquic_send_ctl.h": [
          "File: src/liblsquic/lsquic_send_ctl.h -> src/liblsquic/lsquic_send_ctl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "285: #define lsquic_send_ctl_n_stop_waiting(ctl) \\",
          "286:                                     (+(ctl)->sc_n_stop_waiting)",
          "292: void",
          "293: lsquic_send_ctl_drop_scheduled (lsquic_send_ctl_t *);",
          "315: enum packno_bits",
          "316: lsquic_send_ctl_packno_bits (struct lsquic_send_ctl *, enum packnum_space);",
          "",
          "[Removed Lines]",
          "288: #define lsquic_send_ctl_n_stop_waiting_reset(ctl) do {      \\",
          "289:     (ctl)->sc_n_stop_waiting = 0;                           \\",
          "290: } while (0)",
          "295: #define lsquic_send_ctl_tick_in(ctl, now) do {              \\",
          "296:     if ((ctl)->sc_flags & SC_PACE)                          \\",
          "297:     {                                                       \\",
          "298:         (ctl)->sc_flags |= SC_SCHED_TICK;                   \\",
          "299:         lsquic_pacer_tick_in(&(ctl)->sc_pacer, now);        \\",
          "300:     }                                                       \\",
          "301:     (ctl)->sc_flags &= ~SC_APP_LIMITED;                     \\",
          "302: } while (0)",
          "304: #define lsquic_send_ctl_tick_out(ctl) do {                  \\",
          "305:     if ((ctl)->sc_flags & SC_PACE)                          \\",
          "306:         lsquic_pacer_tick_out(&(ctl)->sc_pacer);            \\",
          "307: } while (0)",
          "309: #define lsquic_send_ctl_next_pacer_time(ctl) (              \\",
          "310:     ((ctl)->sc_flags & SC_PACE)                             \\",
          "311:         && lsquic_pacer_delayed(&(ctl)->sc_pacer)           \\",
          "312:         ? lsquic_pacer_next_sched(&(ctl)->sc_pacer)         \\",
          "313:         : 0 )",
          "",
          "[Added Lines]",
          "288: static inline void",
          "289: lsquic_send_ctl_n_stop_waiting_reset(lsquic_send_ctl_t *ctl)",
          "290: {",
          "291:     ctl->sc_n_stop_waiting = 0;",
          "292: }",
          "297: static inline void",
          "298: lsquic_send_ctl_tick_in(lsquic_send_ctl_t *ctl, lsquic_time_t now)",
          "299: {",
          "300:     if ((ctl)->sc_flags & SC_PACE)",
          "301:     {",
          "302:         (ctl)->sc_flags |= SC_SCHED_TICK;",
          "303:         lsquic_pacer_tick_in(&(ctl)->sc_pacer, now);",
          "304:     }",
          "305:     (ctl)->sc_flags &= ~SC_APP_LIMITED;",
          "306: }",
          "308: static inline void",
          "309: lsquic_send_ctl_tick_out(lsquic_send_ctl_t *ctl)",
          "310: {",
          "311:     if ((ctl)->sc_flags & SC_PACE)",
          "312:         lsquic_pacer_tick_out(&(ctl)->sc_pacer);",
          "313: }",
          "315: static inline lsquic_time_t",
          "316: lsquic_send_ctl_next_pacer_time(lsquic_send_ctl_t *ctl)",
          "317: {",
          "318:     return ((ctl)->sc_flags & SC_PACE)",
          "319:             && lsquic_pacer_delayed(&(ctl)->sc_pacer)",
          "320:             ? lsquic_pacer_next_sched(&(ctl)->sc_pacer)",
          "321:             : 0;",
          "322: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "46c448d8656bb42fae39d6de8a837097884fcaac",
      "candidate_info": {
        "commit_hash": "46c448d8656bb42fae39d6de8a837097884fcaac",
        "repo": "litespeedtech/lsquic",
        "commit_url": "https://github.com/litespeedtech/lsquic/commit/46c448d8656bb42fae39d6de8a837097884fcaac",
        "files": [
          "CHANGELOG",
          "docs/conf.py",
          "include/lsquic.h",
          "src/liblsquic/lsquic_full_conn_ietf.c",
          "src/liblsquic/lsquic_stream.c"
        ],
        "message": "Release 4.0.4",
        "before_after_code_files": [
          "include/lsquic.h||include/lsquic.h",
          "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c",
          "src/liblsquic/lsquic_stream.c||src/liblsquic/lsquic_stream.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c"
          ],
          "candidate": [
            "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c"
          ]
        }
      },
      "candidate_diff": {
        "include/lsquic.h||include/lsquic.h": [
          "File: include/lsquic.h -> include/lsquic.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define LSQUIC_MAJOR_VERSION 4",
          "29: #define LSQUIC_MINOR_VERSION 0",
          "",
          "[Removed Lines]",
          "30: #define LSQUIC_PATCH_VERSION 3",
          "",
          "[Added Lines]",
          "30: #define LSQUIC_PATCH_VERSION 4",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c": [
          "File: src/liblsquic/lsquic_full_conn_ietf.c -> src/liblsquic/lsquic_full_conn_ietf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "755:     struct ietf_full_conn *const conn = (struct ietf_full_conn *) ctx;",
          "756:     struct lsquic_stream *stream;",
          "757:     struct lsquic_hash_elem *el;",
          "759:     if (lsquic_conn_cap_avail(&conn->ifc_pub.conn_cap) == 0)",
          "760:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "758:     int has_send_flag;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "769:         stream = lsquic_hashelem_getdata(el);",
          "770:         if (lsquic_stream_is_blocked(stream))",
          "771:         {",
          "775:             stream->sm_qflags |= SMQF_SEND_BLOCKED;",
          "776:             LSQ_DEBUG(\"set SEND_BLOCKED flag on stream %\"PRIu64, stream->id);",
          "778:         }",
          "779:     }",
          "780: }",
          "",
          "[Removed Lines]",
          "772:             if (!(stream->sm_qflags & SMQF_SENDING_FLAGS))",
          "773:                 TAILQ_INSERT_TAIL(&conn->ifc_pub.sending_streams, stream,",
          "774:                                                             next_send_stream);",
          "777:             return;",
          "",
          "[Added Lines]",
          "773:             has_send_flag = (stream->sm_qflags & SMQF_SENDING_FLAGS);",
          "776:             if (!lsquic_sendctl_gen_stream_blocked_frame(",
          "777:                         stream->conn_pub->send_ctl, stream))",
          "778:             {",
          "779:                 LSQ_DEBUG(\"failed to send STREAM_BLOCKED frame for\"",
          "780:                         \" stream %\"PRIu64 \" immedately, postpone.\", stream->id);",
          "781:                 if (!has_send_flag)",
          "782:                     TAILQ_INSERT_TAIL(&conn->ifc_pub.sending_streams, stream,",
          "783:                                                             next_send_stream);",
          "784:             }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7387:     enum was_missing was_missing;",
          "7388:     int is_rechist_empty;",
          "7389:     unsigned char saved_path_id;",
          "7391:     if (HETY_RETRY == packet_in->pi_header_type)",
          "7392:         return process_retry_packet(conn, packet_in);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7397:     int is_dcid_changed;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "7489:         }",
          "7490:     }",
          "7492:     if (pns == PNS_INIT)",
          "7493:         conn->ifc_conn.cn_esf.i->esfi_set_iscid(conn->ifc_conn.cn_enc_session,",
          "7494:                                                                     packet_in);",
          "7496:     {",
          "7500:     }",
          "7502:     EV_LOG_PACKET_IN(LSQUIC_LOG_CONN_ID, packet_in);",
          "7504:     is_rechist_empty = lsquic_rechist_is_empty(&conn->ifc_rechist[pns]);",
          "",
          "[Removed Lines]",
          "7495:     else if (pns == PNS_HSK)",
          "7497:         if ((conn->ifc_flags & (IFC_SERVER | IFC_IGNORE_INIT)) == IFC_SERVER)",
          "7498:             ignore_init(conn);",
          "7499:         lsquic_send_ctl_maybe_calc_rough_rtt(&conn->ifc_send_ctl, pns - 1);",
          "",
          "[Added Lines]",
          "7500:     is_dcid_changed = !LSQUIC_CIDS_EQ(CN_SCID(&conn->ifc_conn),",
          "7501:                                         &packet_in->pi_dcid);",
          "7505:     else",
          "7507:         if (is_dcid_changed)",
          "7508:         {",
          "7509:             if (LSQUIC_CIDS_EQ(&conn->ifc_conn.cn_cces[0].cce_cid,",
          "7510:                             &packet_in->pi_dcid)",
          "7511:                 && !(conn->ifc_conn.cn_cces[0].cce_flags & CCE_SEQNO))",
          "7512:             {",
          "7513:                 ABORT_QUIETLY(0, TEC_PROTOCOL_VIOLATION,",
          "7514:                             \"protocol violation detected bad dcid\");",
          "7515:                 return -1;",
          "7516:             }",
          "7517:         }",
          "7518:         if (pns == PNS_HSK)",
          "7519:         {",
          "7520:             if ((conn->ifc_flags & (IFC_SERVER | IFC_IGNORE_INIT)) == IFC_SERVER)",
          "7521:                 ignore_init(conn);",
          "7522:             lsquic_send_ctl_maybe_calc_rough_rtt(&conn->ifc_send_ctl, pns - 1);",
          "7523:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "7522:                                                     << packet_in->pi_path_id);",
          "7523:                 }",
          "7524:             }",
          "7527:             {",
          "7528:                 if (0 != on_dcid_change(conn, &packet_in->pi_dcid))",
          "7529:                     return -1;",
          "",
          "[Removed Lines]",
          "7525:             else if (!LSQUIC_CIDS_EQ(CN_SCID(&conn->ifc_conn),",
          "7526:                                                     &packet_in->pi_dcid))",
          "",
          "[Added Lines]",
          "7548:             else if (is_dcid_changed)",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_stream.c||src/liblsquic/lsquic_stream.c": [
          "File: src/liblsquic/lsquic_stream.c -> src/liblsquic/lsquic_stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2437:     else",
          "2438:         stream_dispatch_write_events_loop(stream);",
          "2441:     progress = !((stream->sm_qflags & SMQF_WRITE_Q_FLAGS) == q_flags &&",
          "2442:                         stream->tosend_off == tosend_off &&",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2440:     if ((stream->sm_qflags & SMQF_SEND_BLOCKED) &&",
          "2441:         (stream->sm_bflags & SMBF_IETF))",
          "2442:     {",
          "2443:         lsquic_sendctl_gen_stream_blocked_frame(stream->conn_pub->send_ctl, stream);",
          "2444:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9c877a41776ca8f9c59834c04614ed30a908f2f1",
      "candidate_info": {
        "commit_hash": "9c877a41776ca8f9c59834c04614ed30a908f2f1",
        "repo": "litespeedtech/lsquic",
        "commit_url": "https://github.com/litespeedtech/lsquic/commit/9c877a41776ca8f9c59834c04614ed30a908f2f1",
        "files": [
          "CHANGELOG",
          "docs/conf.py",
          "include/lsquic.h",
          "src/liblsquic/lsquic_full_conn.c",
          "src/liblsquic/lsquic_full_conn_ietf.c",
          "src/liblsquic/lsquic_send_ctl.c",
          "src/liblsquic/lsquic_stream.c"
        ],
        "message": "Release 4.0.5",
        "before_after_code_files": [
          "include/lsquic.h||include/lsquic.h",
          "src/liblsquic/lsquic_full_conn.c||src/liblsquic/lsquic_full_conn.c",
          "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c",
          "src/liblsquic/lsquic_send_ctl.c||src/liblsquic/lsquic_send_ctl.c",
          "src/liblsquic/lsquic_stream.c||src/liblsquic/lsquic_stream.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c"
          ],
          "candidate": [
            "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c"
          ]
        }
      },
      "candidate_diff": {
        "include/lsquic.h||include/lsquic.h": [
          "File: include/lsquic.h -> include/lsquic.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define LSQUIC_MAJOR_VERSION 4",
          "29: #define LSQUIC_MINOR_VERSION 0",
          "",
          "[Removed Lines]",
          "30: #define LSQUIC_PATCH_VERSION 4",
          "",
          "[Added Lines]",
          "30: #define LSQUIC_PATCH_VERSION 5",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "318: #define LSQUIC_DF_STTL               86400",
          "319: #define LSQUIC_DF_MAX_INCHOATE     (1 * 1000 * 1000)",
          "322: #define LSQUIC_DF_SUPPORT_SREJ_CLIENT  0",
          "",
          "[Removed Lines]",
          "321: #define LSQUIC_DF_SUPPORT_SREJ_SERVER  0",
          "",
          "[Added Lines]",
          "321: #define LSQUIC_DF_SUPPORT_SREJ_SERVER  1",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_full_conn.c||src/liblsquic/lsquic_full_conn.c": [
          "File: src/liblsquic/lsquic_full_conn.c -> src/liblsquic/lsquic_full_conn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "905:     for (n = 0; received; ++n)",
          "906:     {",
          "911:             lsquic_rechist_received(&conn->fc_rechist, n + 1, 0);",
          "913:     }",
          "",
          "[Removed Lines]",
          "907:         if (received & (1U << n))",
          "912:         received &= ~(1U << n);",
          "",
          "[Added Lines]",
          "907:         if (received & (1ULL << n))",
          "912:         received &= ~(1ULL << n);",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c": [
          "File: src/liblsquic/lsquic_full_conn_ietf.c -> src/liblsquic/lsquic_full_conn_ietf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "491:     unsigned                    ifc_max_pack_tol_sent;",
          "492: #endif",
          "495:     lsquic_time_t               ifc_last_live_update;",
          "496:     struct conn_path            ifc_paths[N_PATHS];",
          "497:     union {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "495:     unsigned short              ifc_min_dg_sz,",
          "496:                                 ifc_max_dg_sz;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "520:     lsquic_time_t               ifc_ping_period;",
          "521:     struct lsquic_hash         *ifc_bpus;",
          "522:     uint64_t                    ifc_last_max_data_off_sent;",
          "525:     struct packet_tolerance_stats",
          "526:                                 ifc_pts;",
          "527: #if LSQUIC_CONN_STATS",
          "",
          "[Removed Lines]",
          "523:     unsigned short              ifc_min_dg_sz,",
          "524:                                 ifc_max_dg_sz;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "768:                          el = lsquic_hash_next(conn->ifc_pub.all_streams))",
          "769:     {",
          "770:         stream = lsquic_hashelem_getdata(el);",
          "772:         {",
          "773:             has_send_flag = (stream->sm_qflags & SMQF_SENDING_FLAGS);",
          "774:             stream->sm_qflags |= SMQF_SEND_BLOCKED;",
          "",
          "[Removed Lines]",
          "771:         if (lsquic_stream_is_blocked(stream))",
          "",
          "[Added Lines]",
          "771:         if (lsquic_stream_is_blocked(stream)",
          "772:             && !lsquic_stream_is_write_reset(stream))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "782:                     TAILQ_INSERT_TAIL(&conn->ifc_pub.sending_streams, stream,",
          "783:                                                             next_send_stream);",
          "784:             }",
          "785:         }",
          "786:     }",
          "787: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "786:             return;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2882:                                             struct lsquic_stream *stream)",
          "2883: {",
          "2884:     int r = 1;",
          "2885:     if (stream->sm_qflags & SMQF_SEND_MAX_STREAM_DATA)",
          "2886:         r &= generate_max_stream_data_frame(conn, stream);",
          "2887:     if (stream->sm_qflags & SMQF_SEND_BLOCKED)",
          "2889:     if (stream->sm_qflags & SMQF_SEND_RST)",
          "2890:         r &= generate_rst_stream_frame(conn, stream);",
          "2891:     if (stream->sm_qflags & SMQF_SEND_STOP_SENDING)",
          "",
          "[Removed Lines]",
          "2888:         r &= lsquic_sendctl_gen_stream_blocked_frame(&conn->ifc_send_ctl, stream);",
          "",
          "[Added Lines]",
          "2888:     LSQ_DEBUG(\"process_stream_ready_to_send: stream: %\"PRIu64\", \"",
          "2889:               \"sm_qflags: %d. stream_flags: %d, sm_bflags: %d, \", stream->id,",
          "2890:               stream->sm_qflags, stream->stream_flags, stream->sm_bflags);",
          "2895:     {",
          "2896:         if (lsquic_stream_is_write_reset(stream))",
          "2897:         {",
          "2898:             stream->sm_qflags &= ~SMQF_SEND_BLOCKED;",
          "2899:             if (!(stream->sm_qflags & SMQF_SENDING_FLAGS))",
          "2900:                 TAILQ_REMOVE(&stream->conn_pub->sending_streams, stream,",
          "2901:                              next_send_stream);",
          "2902:         }",
          "2903:         else",
          "2904:             r &= lsquic_sendctl_gen_stream_blocked_frame(&conn->ifc_send_ctl,",
          "2905:                                                          stream);",
          "2906:     }",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_send_ctl.c||src/liblsquic/lsquic_send_ctl.c": [
          "File: src/liblsquic/lsquic_send_ctl.c -> src/liblsquic/lsquic_send_ctl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2976:     unsigned need;",
          "2977:     uint64_t off;",
          "2978:     int sz;",
          "2980:     off = lsquic_stream_combined_send_off(stream);",
          "2981:     need = pf->pf_stream_blocked_frame_size(stream->id, off);",
          "2982:     packet_out = lsquic_send_ctl_get_packet_for_stream(ctl, need,",
          "2983:                        stream->conn_pub->path, stream);",
          "2984:     if (!packet_out)",
          "2986:     sz = pf->pf_gen_stream_blocked_frame(",
          "2987:                          packet_out->po_data + packet_out->po_data_sz,",
          "2988:                          lsquic_packet_out_avail(packet_out), stream->id, off);",
          "",
          "[Removed Lines]",
          "2985:         return 0;",
          "",
          "[Added Lines]",
          "2979:     int is_err;",
          "2986:     {",
          "2987:         LSQ_DEBUG(\"failed to get packet_out with lsquic_send_ctl_get_packet_for_stream\");",
          "2988:         packet_out = lsquic_send_ctl_get_writeable_packet(ctl,",
          "2989:                             PNS_APP, need, stream->conn_pub->path, 0, &is_err);",
          "2990:         if (!packet_out)",
          "2991:         {",
          "2992:             LSQ_DEBUG(\"cannot get writeable packet for STREAM_BLOCKED frame\");",
          "2993:             return 0;",
          "2994:         }",
          "2995:     }",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_stream.c||src/liblsquic/lsquic_stream.c": [
          "File: src/liblsquic/lsquic_stream.c -> src/liblsquic/lsquic_stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1334:                                     && !(stream->sm_qflags & SMQF_SEND_RST))",
          "1335:         stream_reset(stream, 0, 0);",
          "1337:     maybe_finish_stream(stream);",
          "1338:     maybe_schedule_call_on_close(stream);",
          "1339: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1337:     if (stream->sm_qflags & (SMQF_SEND_WUF | SMQF_SEND_BLOCKED \\",
          "1338:                              | SMQF_SEND_STOP_SENDING))",
          "1339:     {",
          "1340:         stream->sm_qflags &= ~(SMQF_SEND_WUF | SMQF_SEND_BLOCKED \\",
          "1341:                                | SMQF_SEND_STOP_SENDING);",
          "1342:         if (!(stream->sm_qflags & SMQF_SENDING_FLAGS))",
          "1343:             TAILQ_REMOVE(&stream->conn_pub->sending_streams, stream, next_send_stream);",
          "1344:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f416a13afeb974cd69a7d4ae2bd478cd9deb8286",
      "candidate_info": {
        "commit_hash": "f416a13afeb974cd69a7d4ae2bd478cd9deb8286",
        "repo": "litespeedtech/lsquic",
        "commit_url": "https://github.com/litespeedtech/lsquic/commit/f416a13afeb974cd69a7d4ae2bd478cd9deb8286",
        "files": [
          "CHANGELOG",
          "Dockerfile",
          "README.md",
          "docs/conf.py",
          "include/lsquic.h",
          "qir/run_endpoint.sh",
          "src/liblsquic/lsquic_full_conn_ietf.c"
        ],
        "message": "Release 4.0.7",
        "before_after_code_files": [
          "include/lsquic.h||include/lsquic.h",
          "qir/run_endpoint.sh||qir/run_endpoint.sh",
          "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c"
          ],
          "candidate": [
            "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c"
          ]
        }
      },
      "candidate_diff": {
        "include/lsquic.h||include/lsquic.h": [
          "File: include/lsquic.h -> include/lsquic.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define LSQUIC_MAJOR_VERSION 4",
          "29: #define LSQUIC_MINOR_VERSION 0",
          "",
          "[Removed Lines]",
          "30: #define LSQUIC_PATCH_VERSION 6",
          "",
          "[Added Lines]",
          "30: #define LSQUIC_PATCH_VERSION 7",
          "",
          "---------------"
        ],
        "qir/run_endpoint.sh||qir/run_endpoint.sh": [
          "File: qir/run_endpoint.sh -> qir/run_endpoint.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/bin/bash",
          "2: #",
          "3: # run_endpoint.sh -- QUIC Interop Runner script for lsquic",
          "4: #",
          "6: /setup.sh",
          "8: if [ \"$ROLE\" == \"client\" ]; then",
          "9:     # Wait for the simulator to start up.",
          "10:     /wait-for-it.sh sim:57832 -s -t 30",
          "11: fi",
          "13: echo TEST_PARAMS: $TEST_PARAMS",
          "14: echo REQUESTS: \"'$REQUESTS'\"",
          "15: eval $(perl <<'PERL'",
          "16:     @paths = split /\\s+/, $ENV{REQUESTS};",
          "17:     s~^https?://[^/]+~-p ~ for @paths;",
          "18:     print \"PATHS='@paths'\\n\";",
          "19:     $server = $ENV{REQUESTS};",
          "20:     $server =~ s~^https?://~~;",
          "21:     $server =~ s~/.*~~;",
          "22:     ($server, $port) = split /:/, $server;",
          "23:     print \"SERVER=$server\\n\";",
          "24:     print \"PORT=$port\\n\";",
          "25:     print \"N_REQS=\", scalar(@paths), \"\\n\";",
          "26:     print \"N_reqs=\", scalar(@paths), \"\\n\";",
          "27:     if (@paths > 100) {",
          "28:         print \"W=100\\n\";",
          "29:     } else {",
          "30:         print \"W=1\\n\";",
          "31:     }",
          "32: PERL",
          "33: )",
          "34: echo paths: $PATHS",
          "35: echo server: $SERVER",
          "36: echo port: $PORT",
          "38: # lsquic command-line tools create one file per connection when -G option",
          "39: # is used.  Here we make a copy and give it required name.",
          "40: #",
          "41: function maybe_create_keylog() {",
          "42:     local NAME=/logs/keys.log",
          "43:     if ls /logs/*.keys; then",
          "44:         # There may be more than one of these, as one file is created per",
          "45:         # connection.",
          "46:         cat /logs/*.keys > $NAME",
          "47:     fi",
          "48:     if [ -f $NAME ]; then",
          "49:         echo $NAME exists",
          "50:     else",
          "51:         echo $NAME does not exit",
          "52:     fi",
          "53: }",
          "55: if [ \"$ROLE\" = server ]; then",
          "56:     if [ ! -z \"$TESTCASE\" ]; then",
          "57:         case \"$TESTCASE\" in",
          "58:             http3)",
          "59:                 VERSIONS='-o version=h3-29 -o version=h3'",
          "60:                 ;;",
          "61:             v2)",
          "62:                 VERSIONS='-o version=h3-v2 -o version=h3 -Q hq-interop'",
          "63:                 ;;",
          "64:             handshake|transfer|longrtt|resumption|blackhole|multiconnect|chacha20|zerortt)",
          "65:                 VERSIONS='-o version=h3-29 -o version=h3 -o scid_iss_rate=0 -Q hq-interop'",
          "66:                 ;;",
          "67:             retry)",
          "68:                 VERSIONS='-o version=h3-29 -o version=h3 -o srej=1 -Q hq-interop'",
          "69:                 FORCE_RETRY=1",
          "70:                 ;;",
          "71:             ecn)",
          "72:                 VERSIONS='-o version=h3-29 -o version=h3 -Q hq-interop'",
          "73:                 ECN='-o ecn=1'",
          "74:                 ;;",
          "76:         esac",
          "77:     fi",
          "78:     echo SERVER_PARAMS: $SERVER_PARAMS",
          "79:     exec env LSQUIC_FORCE_RETRY=$FORCE_RETRY /usr/bin/http_server $VERSIONS $ECN \\",
          "80:         -c server,/certs/cert.pem,/certs/priv.key \\",
          "81:         -c server4,/certs/cert.pem,/certs/priv.key \\",
          "82:         -c server6,/certs/cert.pem,/certs/priv.key \\",
          "83:         -c server46,/certs/cert.pem,/certs/priv.key \\",
          "84:         -s ::0:443 -s 0.0.0.0:443 -s 193.167.100.100:12345 \\",
          "85:         -r /www -L debug 2>/logs/$TESTCASE.out",
          "86: elif [ \"$ROLE\" = debug-server ]; then",
          "87:     exec /usr/bin/http_server $SERVER_PARAMS",
          "88: elif [ \"$ROLE\" = client ]; then",
          "89:     if [ ! -z \"$TESTCASE\" ]; then",
          "90:         case \"$TESTCASE\" in",
          "91:             http3)",
          "92:                 VERSIONS='-o version=h3'",
          "93:                 ;;",
          "94:             v2)",
          "95:                 VERSIONS='-o version=h3-v2 -o version=h3 -Q hq-interop'",
          "96:                 ;;",
          "97:             handshake|transfer|longrtt|retry|multiplexing|blackhole)",
          "98:                 VERSIONS='-o version=h3 -Q hq-interop'",
          "99:                 ;;",
          "100:             multiconnect)",
          "101:                 VERSIONS='-o version=h3 -Q hq-interop'",
          "102:                 N_REQS=1",
          "103:                 ;;",
          "104:             ecn)",
          "105:                 VERSIONS='-o version=h3 -Q hq-interop'",
          "106:                 ECN='-o ecn=1'",
          "107:                 ;;",
          "108:             resumption)",
          "109:                 VERSIONS='-o version=h3 -Q hq-interop'",
          "110:                 RESUME='-0 /logs/resume.file'",
          "111:                 ;;",
          "113:         esac",
          "114:     fi",
          "115:     echo CLIENT_PARAMS: $CLIENT_PARAMS",
          "116:     if [ \"$TESTCASE\" = resumption ]; then",
          "117:         # Fetch first file:",
          "118:         /usr/bin/http_client $VERSIONS -s $SERVER:$PORT $PATHS \\",
          "119:             -r 1 -R 1 $RESUME \\",
          "120:             -B -7 /downloads -G /logs \\",
          "121:             -L debug 2>/logs/$TESTCASE-req1.out || exit $?",
          "122:         PATHS=`echo \"$PATHS\" | sed 's~-p /[^ ]* ~~'`",
          "123:         N_REQS=1",
          "124:         N_reqs=1",
          "125:         W=1",
          "126:         echo \"first request successful, new args: $N_REQS; $N_reqs; $PATHS\"",
          "127:     fi",
          "128:     /usr/bin/http_client $VERSIONS -s $SERVER:$PORT $PATHS \\",
          "129:         -r $N_reqs -R $N_REQS -w $W $ECN $RESUME \\",
          "130:         -B -7 /downloads -G /logs \\",
          "131:         -L debug 2>/logs/$TESTCASE.out",
          "132:     EXIT_CODE=$?",
          "133:     maybe_create_keylog",
          "134:     sync",
          "135:     exit $EXIT_CODE",
          "136: else",
          "137:     echo hi",
          "138:     exit 127",
          "139: fi",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c": [
          "File: src/liblsquic/lsquic_full_conn_ietf.c -> src/liblsquic/lsquic_full_conn_ietf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7524:                                                                     packet_in);",
          "7525:     else",
          "7526:     {",
          "7528:         {",
          "7529:             if (LSQUIC_CIDS_EQ(&conn->ifc_conn.cn_cces[0].cce_cid,",
          "7530:                             &packet_in->pi_dcid)",
          "",
          "[Removed Lines]",
          "7527:         if (is_dcid_changed)",
          "",
          "[Added Lines]",
          "7527:         if (is_dcid_changed && HETY_0RTT != packet_in->pi_header_type)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0b9f50b5f0f2ce2968eaa68294db7af69abe88fc",
      "candidate_info": {
        "commit_hash": "0b9f50b5f0f2ce2968eaa68294db7af69abe88fc",
        "repo": "litespeedtech/lsquic",
        "commit_url": "https://github.com/litespeedtech/lsquic/commit/0b9f50b5f0f2ce2968eaa68294db7af69abe88fc",
        "files": [
          "CHANGELOG",
          "docs/conf.py",
          "include/lsquic.h",
          "src/liblsquic/lsquic_send_ctl.c"
        ],
        "message": "Release 4.0.9",
        "before_after_code_files": [
          "include/lsquic.h||include/lsquic.h",
          "src/liblsquic/lsquic_send_ctl.c||src/liblsquic/lsquic_send_ctl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/lsquic.h||include/lsquic.h": [
          "File: include/lsquic.h -> include/lsquic.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define LSQUIC_MAJOR_VERSION 4",
          "29: #define LSQUIC_MINOR_VERSION 0",
          "",
          "[Removed Lines]",
          "30: #define LSQUIC_PATCH_VERSION 8",
          "",
          "[Added Lines]",
          "30: #define LSQUIC_PATCH_VERSION 9",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_send_ctl.c||src/liblsquic/lsquic_send_ctl.c": [
          "File: src/liblsquic/lsquic_send_ctl.c -> src/liblsquic/lsquic_send_ctl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3170:     LSQ_DEBUG(\"drop oversized buffered packet #%\"PRIu64, packet_out->po_packno);",
          "3171:     TAILQ_REMOVE(&packet_q->bpq_packets, packet_out, po_next);",
          "3173:     assert(packet_out->po_loss_chain == packet_out);",
          "3174:     send_ctl_destroy_packet(ctl, packet_out);",
          "3175:     return 0;",
          "",
          "[Removed Lines]",
          "3172:     ++packet_q->bpq_count;",
          "",
          "[Added Lines]",
          "3172:     --packet_q->bpq_count;",
          "",
          "---------------"
        ]
      }
    }
  ]
}