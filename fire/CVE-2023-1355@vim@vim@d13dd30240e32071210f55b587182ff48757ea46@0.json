{
  "cve_id": "CVE-2023-1355",
  "cve_desc": "NULL Pointer Dereference in GitHub repository vim/vim prior to 9.0.1402.",
  "repo": "vim/vim",
  "patch_hash": "d13dd30240e32071210f55b587182ff48757ea46",
  "patch_info": {
    "commit_hash": "d13dd30240e32071210f55b587182ff48757ea46",
    "repo": "vim/vim",
    "commit_url": "https://github.com/vim/vim/commit/d13dd30240e32071210f55b587182ff48757ea46",
    "files": [
      "src/testdir/test_vim9_class.vim",
      "src/version.c",
      "src/vim9class.c"
    ],
    "message": "patch 9.0.1402: crash when using null_class\n\nProblem:    Crash when using null_class.\nSolution:   Give an error when trying to use a null class.",
    "before_after_code_files": [
      "src/testdir/test_vim9_class.vim||src/testdir/test_vim9_class.vim",
      "src/version.c||src/version.c",
      "src/vim9class.c||src/vim9class.c"
    ]
  },
  "patch_diff": {
    "src/testdir/test_vim9_class.vim||src/testdir/test_vim9_class.vim": [
      "File: src/testdir/test_vim9_class.vim -> src/testdir/test_vim9_class.vim",
      "--- Hunk 1 ---",
      "[Context before]",
      "203:   v9.CheckScriptSuccess(lines)",
      "204: enddef",
      "206: def Test_class_interface_wrong_end()",
      "207:   var lines =<< trim END",
      "208:       vim9script",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "206: def Test_using_null_class()",
      "207:   var lines =<< trim END",
      "208:       @_ = null_class.member",
      "209:   END",
      "210:   v9.CheckDefExecAndScriptFailure(lines, ['E715:', 'E1363:'])",
      "211: enddef",
      "",
      "---------------"
    ],
    "src/version.c||src/version.c": [
      "File: src/version.c -> src/version.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "696: static int included_patches[] =",
      "699:     1401,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "699:     1402,",
      "",
      "---------------"
    ],
    "src/vim9class.c||src/vim9class.c": [
      "File: src/vim9class.c -> src/vim9class.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1262:  cl = rettv->vval.v_object->obj_class;",
      "1263:     }",
      "1265:     if (*name_end == '(')",
      "1266:     {",
      "1267:  int on_class = rettv->v_type == VAR_CLASS;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1265:     if (cl == NULL)",
      "1266:     {",
      "1267:  emsg(_(e_incomplete_type));",
      "1268:  return FAIL;",
      "1269:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b90e3bc491c02bd6e4db1a1c1849ce3d21811c43",
      "candidate_info": {
        "commit_hash": "b90e3bc491c02bd6e4db1a1c1849ce3d21811c43",
        "repo": "vim/vim",
        "commit_url": "https://github.com/vim/vim/commit/b90e3bc491c02bd6e4db1a1c1849ce3d21811c43",
        "files": [
          "runtime/doc/tags",
          "runtime/doc/vim9class.txt",
          "src/errors.h",
          "src/testdir/test_vim9_class.vim",
          "src/version.c",
          "src/vim9class.c"
        ],
        "message": "patch 9.0.1951: Vim9: hard to debug vim9_class errors from CI\n\nProblem:  Vim9: hard to debug vim9_class errors from CI\nSolution: Include the line number in assert_xxx() calls.  Include the\n          entire error message in the tests.  Fix the indentation in the\n          test file.  Add tags for new error codes.\n\ncloses: #13206\n\nSigned-off-by: Christian Brabandt <cb@256bit.org>\nCo-authored-by: Yegappan Lakshmanan <yegappan@yahoo.com>",
        "before_after_code_files": [
          "src/errors.h||src/errors.h",
          "src/testdir/test_vim9_class.vim||src/testdir/test_vim9_class.vim",
          "src/version.c||src/version.c",
          "src/vim9class.c||src/vim9class.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/testdir/test_vim9_class.vim||src/testdir/test_vim9_class.vim",
            "src/version.c||src/version.c",
            "src/vim9class.c||src/vim9class.c"
          ],
          "candidate": [
            "src/testdir/test_vim9_class.vim||src/testdir/test_vim9_class.vim",
            "src/version.c||src/version.c",
            "src/vim9class.c||src/vim9class.c"
          ]
        }
      },
      "candidate_diff": {
        "src/errors.h||src/errors.h": [
          "File: src/errors.h -> src/errors.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "3523:  INIT(= N_(\"E1385: Class method \\\"%s\\\" accessible only using class \\\"%s\\\"\"));",
          "3524: EXTERN char e_object_method_str_accessible_only_using_object_str[]",
          "3525:  INIT(= N_(\"E1386: Object method \\\"%s\\\" accessible only using class \\\"%s\\\" object\"));",
          "3527:  INIT(= N_(\"E1387: Public variable not supported in an interface\"));",
          "3528: EXTERN char e_public_keyword_not_supported_for_method[]",
          "3529:  INIT(= N_(\"E1388: Public keyword not supported for a method\"));",
          "",
          "[Removed Lines]",
          "3526: EXTERN char e_public_member_not_supported_in_interface[]",
          "",
          "[Added Lines]",
          "3529: EXTERN char e_public_variable_not_supported_in_interface[]",
          "",
          "---------------"
        ],
        "src/testdir/test_vim9_class.vim||src/testdir/test_vim9_class.vim": [
          "File: src/testdir/test_vim9_class.vim -> src/testdir/test_vim9_class.vim",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: def Test_class_basic()",
          "7:   # Class supported only in \"vim9script\"",
          "8:   var lines =<< trim END",
          "11:   END",
          "14:   # First character in a class name should be capitalized.",
          "15:   lines =<< trim END",
          "19:   END",
          "22:   # Only alphanumeric characters are supported in a class name",
          "23:   lines =<< trim END",
          "27:   END",
          "30:   # Unsupported keyword (instead of class)",
          "31:   lines =<< trim END",
          "35:   END",
          "38:   # Only the completed word \"class\" should be recognized",
          "39:   lines =<< trim END",
          "43:   END",
          "46:   # The complete \"endclass\" should be specified.",
          "47:   lines =<< trim END",
          "51:   END",
          "54:   # Additional words after \"endclass\"",
          "55:   lines =<< trim END",
          "59:   END",
          "62:   # Additional commands after \"endclass\"",
          "63:   lines =<< trim END",
          "67:   END",
          "70:   # Use \"this\" without any member variable name",
          "71:   lines =<< trim END",
          "76:   END",
          "79:   # Use \"this.\" without any member variable name",
          "80:   lines =<< trim END",
          "85:   END",
          "88:   # Space between \"this\" and \".<variable>\"",
          "89:   lines =<< trim END",
          "94:   END",
          "97:   # Space between \"this.\" and the member variable name",
          "98:   lines =<< trim END",
          "103:   END",
          "106:   # Use \"that\" instead of \"this\"",
          "107:   lines =<< trim END",
          "113:   END",
          "116:   # Member variable without a type or initialization",
          "117:   lines =<< trim END",
          "122:   END",
          "125:   # Use a non-existing member variable in new()",
          "126:   lines =<< trim END",
          "134:   END",
          "137:   # Space before \":\" in a member variable declaration",
          "138:   lines =<< trim END",
          "143:   END",
          "146:   # No space after \":\" in a member variable declaration",
          "147:   lines =<< trim END",
          "152:   END",
          "155:   # Test for unsupported comment specifier",
          "156:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "9:       class NotWorking",
          "10:       endclass",
          "12:   v9.CheckSourceFailure(lines, 'E1316:')",
          "16:       vim9script",
          "17:       class notWorking",
          "18:       endclass",
          "20:   v9.CheckSourceFailure(lines, 'E1314:')",
          "24:       vim9script",
          "25:       class Not@working",
          "26:       endclass",
          "28:   v9.CheckSourceFailure(lines, 'E1315:')",
          "32:       vim9script",
          "33:       abstract noclass Something",
          "34:       endclass",
          "36:   v9.CheckSourceFailure(lines, 'E475:')",
          "40:       vim9script",
          "41:       abstract classy Something",
          "42:       endclass",
          "44:   v9.CheckSourceFailure(lines, 'E475:')",
          "48:       vim9script",
          "49:       class Something",
          "50:       endcl",
          "52:   v9.CheckSourceFailure(lines, 'E1065:')",
          "56:       vim9script",
          "57:       class Something",
          "58:       endclass school's out",
          "60:   v9.CheckSourceFailure(lines, 'E488:')",
          "64:       vim9script",
          "65:       class Something",
          "66:       endclass | echo 'done'",
          "68:   v9.CheckSourceFailure(lines, 'E488:')",
          "72:       vim9script",
          "73:       class Something",
          "74:         this",
          "75:       endclass",
          "77:   v9.CheckSourceFailure(lines, 'E1317:')",
          "81:       vim9script",
          "82:       class Something",
          "83:         this.",
          "84:       endclass",
          "86:   v9.CheckSourceFailure(lines, 'E1317:')",
          "90:       vim9script",
          "91:       class Something",
          "92:         this .count",
          "93:       endclass",
          "95:   v9.CheckSourceFailure(lines, 'E1317:')",
          "99:       vim9script",
          "100:       class Something",
          "101:         this. count",
          "102:       endclass",
          "104:   v9.CheckSourceFailure(lines, 'E1317:')",
          "108:       vim9script",
          "109:       class Something",
          "110:         this.count: number",
          "111:         that.count",
          "112:       endclass",
          "114:   v9.CheckSourceFailure(lines, 'E1318: Not a valid command in a class: that.count')",
          "118:       vim9script",
          "119:       class Something",
          "120:         this.count",
          "121:       endclass",
          "123:   v9.CheckSourceFailure(lines, 'E1022:')",
          "127:       vim9script",
          "128:       class Something",
          "129:         def new()",
          "130:           this.state = 0",
          "131:         enddef",
          "132:       endclass",
          "133:       var obj = Something.new()",
          "135:   v9.CheckSourceFailure(lines, 'E1326: Variable not found on object \"Something\": state')",
          "139:       vim9script",
          "140:       class Something",
          "141:         this.count : number",
          "142:       endclass",
          "144:   v9.CheckSourceFailure(lines, 'E1059:')",
          "148:       vim9script",
          "149:       class Something",
          "150:         this.count:number",
          "151:       endclass",
          "153:   v9.CheckSourceFailure(lines, 'E1069:')",
          "",
          "[Added Lines]",
          "9:     class NotWorking",
          "10:     endclass",
          "12:   v9.CheckSourceFailure(lines, 'E1316: Class can only be defined in Vim9 script', 1)",
          "16:     vim9script",
          "17:     class notWorking",
          "18:     endclass",
          "20:   v9.CheckSourceFailure(lines, 'E1314: Class name must start with an uppercase letter: notWorking', 2)",
          "24:     vim9script",
          "25:     class Not@working",
          "26:     endclass",
          "28:   v9.CheckSourceFailure(lines, 'E1315: White space required after name: Not@working', 2)",
          "32:     vim9script",
          "33:     abstract noclass Something",
          "34:     endclass",
          "36:   v9.CheckSourceFailure(lines, 'E475: Invalid argument: noclass Something', 2)",
          "40:     vim9script",
          "41:     abstract classy Something",
          "42:     endclass",
          "44:   v9.CheckSourceFailure(lines, 'E475: Invalid argument: classy Something', 2)",
          "48:     vim9script",
          "49:     class Something",
          "50:     endcl",
          "52:   v9.CheckSourceFailure(lines, 'E1065: Command cannot be shortened: endcl', 3)",
          "56:     vim9script",
          "57:     class Something",
          "58:     endclass school's out",
          "60:   v9.CheckSourceFailure(lines, \"E488: Trailing characters: school's out\", 3)",
          "64:     vim9script",
          "65:     class Something",
          "66:     endclass | echo 'done'",
          "68:   v9.CheckSourceFailure(lines, \"E488: Trailing characters: | echo 'done'\", 3)",
          "72:     vim9script",
          "73:     class Something",
          "74:       this",
          "75:     endclass",
          "77:   v9.CheckSourceFailure(lines, 'E1317: Invalid object variable declaration: this', 3)",
          "81:     vim9script",
          "82:     class Something",
          "83:       this.",
          "84:     endclass",
          "86:   v9.CheckSourceFailure(lines, 'E1317: Invalid object variable declaration: this.', 3)",
          "90:     vim9script",
          "91:     class Something",
          "92:       this .count",
          "93:     endclass",
          "95:   v9.CheckSourceFailure(lines, 'E1317: Invalid object variable declaration: this .count', 3)",
          "99:     vim9script",
          "100:     class Something",
          "101:       this. count",
          "102:     endclass",
          "104:   v9.CheckSourceFailure(lines, 'E1317: Invalid object variable declaration: this. count', 3)",
          "108:     vim9script",
          "109:     class Something",
          "110:       this.count: number",
          "111:       that.count",
          "112:     endclass",
          "114:   v9.CheckSourceFailure(lines, 'E1318: Not a valid command in a class: that.count', 4)",
          "118:     vim9script",
          "119:     class Something",
          "120:       this.count",
          "121:     endclass",
          "123:   v9.CheckSourceFailure(lines, 'E1022: Type or initialization required', 3)",
          "127:     vim9script",
          "128:     class Something",
          "129:       def new()",
          "130:         this.state = 0",
          "131:       enddef",
          "132:     endclass",
          "133:     var obj = Something.new()",
          "135:   v9.CheckSourceFailure(lines, 'E1326: Variable not found on object \"Something\": state', 1)",
          "139:     vim9script",
          "140:     class Something",
          "141:       this.count : number",
          "142:     endclass",
          "144:   v9.CheckSourceFailure(lines, 'E1059: No white space allowed before colon: count : number', 3)",
          "148:     vim9script",
          "149:     class Something",
          "150:       this.count:number",
          "151:     endclass",
          "153:   v9.CheckSourceFailure(lines, \"E1069: White space required after ':'\", 3)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:       #{",
          "161:     endclass",
          "162:   END",
          "165:   # Test for using class as a bool",
          "166:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "163:   v9.CheckSourceFailure(lines, 'E1170:')",
          "",
          "[Added Lines]",
          "163:   v9.CheckSourceFailure(lines, 'E1170: Cannot use #{ to start a comment', 3)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "170:     if A",
          "171:     endif",
          "172:   END",
          "175:   # Test for using object as a bool",
          "176:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "173:   v9.CheckSourceFailure(lines, 'E1319: Using a class as a Number')",
          "",
          "[Added Lines]",
          "173:   v9.CheckSourceFailure(lines, 'E1319: Using a class as a Number', 4)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "181:     if a",
          "182:     endif",
          "183:   END",
          "186:   # Test for using class as a float",
          "187:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "184:   v9.CheckSourceFailure(lines, 'E1320: Using an object as a Number')",
          "",
          "[Added Lines]",
          "184:   v9.CheckSourceFailure(lines, 'E1320: Using an object as a Number', 5)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "190:     endclass",
          "191:     sort([1.1, A], 'f')",
          "192:   END",
          "195:   # Test for using object as a float",
          "196:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "193:   v9.CheckSourceFailure(lines, 'E1321: Using a class as a Float')",
          "",
          "[Added Lines]",
          "193:   v9.CheckSourceFailure(lines, 'E1321: Using a class as a Float', 4)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "200:     var a = A.new()",
          "201:     sort([1.1, a], 'f')",
          "202:   END",
          "205:   # Test for using class as a string",
          "206:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "203:   v9.CheckSourceFailure(lines, 'E1322: Using an object as a Float')",
          "",
          "[Added Lines]",
          "203:   v9.CheckSourceFailure(lines, 'E1322: Using an object as a Float', 5)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "209:     endclass",
          "210:     :exe 'call ' .. A",
          "211:   END",
          "214:   # Test for using object as a string",
          "215:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "212:   v9.CheckSourceFailure(lines, 'E1323: Using a class as a String')",
          "",
          "[Added Lines]",
          "212:   v9.CheckSourceFailure(lines, 'E1323: Using a class as a String', 4)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "219:     var a = A.new()",
          "220:     :exe 'call ' .. a",
          "221:   END",
          "224:   # Test creating a class with member variables and methods, calling a object",
          "225:   # method.  Check for using type() and typename() with a class and an object.",
          "226:   lines =<< trim END",
          "251:   END",
          "252:   v9.CheckSourceSuccess(lines)",
          "",
          "[Removed Lines]",
          "222:   v9.CheckSourceFailure(lines, 'E1324: Using an object as a String')",
          "227:       vim9script",
          "229:       class TextPosition",
          "230:         this.lnum: number",
          "231:         this.col: number",
          "233:         # make a nicely formatted string",
          "234:         def ToString(): string",
          "235:           return $'({this.lnum}, {this.col})'",
          "236:         enddef",
          "237:       endclass",
          "239:       # use the automatically generated new() method",
          "240:       var pos = TextPosition.new(2, 12)",
          "241:       assert_equal(2, pos.lnum)",
          "242:       assert_equal(12, pos.col)",
          "244:       # call an object method",
          "245:       assert_equal('(2, 12)', pos.ToString())",
          "247:       assert_equal(v:t_class, type(TextPosition))",
          "248:       assert_equal(v:t_object, type(pos))",
          "249:       assert_equal('class<TextPosition>', typename(TextPosition))",
          "250:       assert_equal('object<TextPosition>', typename(pos))",
          "",
          "[Added Lines]",
          "222:   v9.CheckSourceFailure(lines, 'E1324: Using an object as a String', 5)",
          "227:     vim9script",
          "229:     class TextPosition",
          "230:       this.lnum: number",
          "231:       this.col: number",
          "233:       # make a nicely formatted string",
          "234:       def ToString(): string",
          "235:         return $'({this.lnum}, {this.col})'",
          "236:       enddef",
          "237:     endclass",
          "239:     # use the automatically generated new() method",
          "240:     var pos = TextPosition.new(2, 12)",
          "241:     assert_equal(2, pos.lnum)",
          "242:     assert_equal(12, pos.col)",
          "244:     # call an object method",
          "245:     assert_equal('(2, 12)', pos.ToString())",
          "247:     assert_equal(v:t_class, type(TextPosition))",
          "248:     assert_equal(v:t_object, type(pos))",
          "249:     assert_equal('class<TextPosition>', typename(TextPosition))",
          "250:     assert_equal('object<TextPosition>', typename(pos))",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "262:     var a = A.new()",
          "263:     var v = a. Foo()",
          "264:   END",
          "267:   # Using an object without specifying a method or a member variable",
          "268:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "265:   v9.CheckSourceFailure(lines, 'E1202:')",
          "",
          "[Added Lines]",
          "265:   v9.CheckSourceFailure(lines, \"E1202: No white space allowed after '.'\", 8)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "275:     var a = A.new()",
          "276:     var v = a.",
          "277:   END",
          "280:   # Error when parsing the arguments of an object method.",
          "281:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "278:   v9.CheckSourceFailure(lines, 'E15:')",
          "",
          "[Added Lines]",
          "278:   v9.CheckSourceFailure(lines, 'E15: Invalid expression: \"a.\"', 8)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "287:     var a = A.new()",
          "288:     var v = a.Foo(,)",
          "289:   END",
          "292:   # Use a multi-line initialization for a member variable",
          "293:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "290:   v9.CheckSourceFailure(lines, 'E15:')",
          "",
          "[Added Lines]",
          "290:   v9.CheckSourceFailure(lines, 'E15: Invalid expression: \"a.Foo(,)\"', 7)",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "368: def Test_class_defined_twice()",
          "369:   # class defined twice should fail",
          "370:   var lines =<< trim END",
          "376:   END",
          "379:   # one class, reload same script twice is OK",
          "380:   lines =<< trim END",
          "384:   END",
          "385:   writefile(lines, 'XclassTwice.vim', 'D')",
          "386:   source XclassTwice.vim",
          "",
          "[Removed Lines]",
          "371:       vim9script",
          "372:       class There",
          "373:       endclass",
          "374:       class There",
          "375:       endclass",
          "377:   v9.CheckSourceFailure(lines, 'E1041: Redefining script item: \"There\"')",
          "381:       vim9script",
          "382:       class There",
          "383:       endclass",
          "",
          "[Added Lines]",
          "371:     vim9script",
          "372:     class There",
          "373:     endclass",
          "374:     class There",
          "375:     endclass",
          "377:   v9.CheckSourceFailure(lines, 'E1041: Redefining script item: \"There\"', 4)",
          "381:     vim9script",
          "382:     class There",
          "383:     endclass",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "390: def Test_returning_null_object()",
          "391:   # this was causing an internal error",
          "392:   var lines =<< trim END",
          "403:   END",
          "404:   v9.CheckSourceSuccess(lines)",
          "405: enddef",
          "407: def Test_using_null_class()",
          "408:   var lines =<< trim END",
          "410:   END",
          "412: enddef",
          "414: def Test_class_interface_wrong_end()",
          "415:   var lines =<< trim END",
          "420:   END",
          "423:   lines =<< trim END",
          "428:   END",
          "430: enddef",
          "432: def Test_object_not_set()",
          "433:   # Use an uninitialized object in script context",
          "434:   var lines =<< trim END",
          "444:   END",
          "447:   # Use an uninitialized object from a def function",
          "448:   lines =<< trim END",
          "461:       enddef",
          "463:   END",
          "466:   # Pass an uninitialized object variable to a \"new\" function and try to call an",
          "467:   # object method.",
          "468:   lines =<< trim END",
          "485:   END",
          "488:   # TODO: this should not give an error but be handled at runtime",
          "489:   lines =<< trim END",
          "502:       enddef",
          "504:   END",
          "506: enddef",
          "508: \" Null object assignment and comparison",
          "",
          "[Removed Lines]",
          "393:       vim9script",
          "395:       class BufferList",
          "396:           def Current(): any",
          "397:               return null_object",
          "398:           enddef",
          "399:       endclass",
          "401:       var buffers = BufferList.new()",
          "402:       echo buffers.Current()",
          "409:       @_ = null_class.member",
          "411:   v9.CheckDefExecAndScriptFailure(lines, ['E715:', 'E1363:'])",
          "416:       vim9script",
          "417:       abstract class SomeName",
          "418:         this.member = 'text'",
          "419:       endinterface",
          "421:   v9.CheckSourceFailure(lines, 'E476: Invalid command: endinterface, expected endclass')",
          "424:       vim9script",
          "425:       export interface AnotherName",
          "426:         this.member: string",
          "427:       endclass",
          "429:   v9.CheckSourceFailure(lines, 'E476: Invalid command: endclass, expected endinterface')",
          "435:       vim9script",
          "437:       class State",
          "438:         this.value = 'xyz'",
          "439:       endclass",
          "441:       var state: State",
          "442:       var db = {'xyz': 789}",
          "443:       echo db[state.value]",
          "445:   v9.CheckSourceFailure(lines, 'E1360:')",
          "449:       vim9script",
          "451:       class Class",
          "452:           this.id: string",
          "453:           def Method1()",
          "454:               echo 'Method1' .. this.id",
          "455:           enddef",
          "456:       endclass",
          "458:       var obj: Class",
          "459:       def Func()",
          "460:           obj.Method1()",
          "462:       Func()",
          "464:   v9.CheckSourceFailure(lines, 'E1360:')",
          "469:       vim9script",
          "471:       class Background",
          "472:         this.background = 'dark'",
          "473:       endclass",
          "475:       class Colorscheme",
          "476:         this._bg: Background",
          "478:         def GetBackground(): string",
          "479:           return this._bg.background",
          "480:         enddef",
          "481:       endclass",
          "483:       var bg: Background           # UNINITIALIZED",
          "484:       echo Colorscheme.new(bg).GetBackground()",
          "486:   v9.CheckSourceFailure(lines, 'E1360:')",
          "490:       vim9script",
          "492:       class Class",
          "493:           this.id: string",
          "494:           def Method1()",
          "495:               echo 'Method1' .. this.id",
          "496:           enddef",
          "497:       endclass",
          "499:       var obj = null_object",
          "500:       def Func()",
          "501:           obj.Method1()",
          "503:       Func()",
          "505:   v9.CheckSourceFailure(lines, 'E1363:')",
          "",
          "[Added Lines]",
          "393:     vim9script",
          "395:     class BufferList",
          "396:       def Current(): any",
          "397:         return null_object",
          "398:       enddef",
          "399:     endclass",
          "401:     var buffers = BufferList.new()",
          "402:     echo buffers.Current()",
          "409:     @_ = null_class.member",
          "411:   v9.CheckDefExecAndScriptFailure(lines, ['E715: Dictionary required', 'E1363: Incomplete type'])",
          "416:     vim9script",
          "417:     abstract class SomeName",
          "418:       this.member = 'text'",
          "419:     endinterface",
          "421:   v9.CheckSourceFailure(lines, 'E476: Invalid command: endinterface, expected endclass', 4)",
          "424:     vim9script",
          "425:     export interface AnotherName",
          "426:       this.member: string",
          "427:     endclass",
          "429:   v9.CheckSourceFailure(lines, 'E476: Invalid command: endclass, expected endinterface', 4)",
          "435:     vim9script",
          "437:     class State",
          "438:       this.value = 'xyz'",
          "439:     endclass",
          "441:     var state: State",
          "442:     var db = {'xyz': 789}",
          "443:     echo db[state.value]",
          "445:   v9.CheckSourceFailure(lines, 'E1360: Using a null object', 9)",
          "449:     vim9script",
          "451:     class Class",
          "452:       this.id: string",
          "453:       def Method1()",
          "454:         echo 'Method1' .. this.id",
          "456:     endclass",
          "458:     var obj: Class",
          "459:     def Func()",
          "460:       obj.Method1()",
          "461:     enddef",
          "462:     Func()",
          "464:   v9.CheckSourceFailure(lines, 'E1360: Using a null object', 1)",
          "469:     vim9script",
          "471:     class Background",
          "472:       this.background = 'dark'",
          "473:     endclass",
          "475:     class Colorscheme",
          "476:       this._bg: Background",
          "478:       def GetBackground(): string",
          "479:         return this._bg.background",
          "480:       enddef",
          "481:     endclass",
          "483:     var bg: Background           # UNINITIALIZED",
          "484:     echo Colorscheme.new(bg).GetBackground()",
          "486:   v9.CheckSourceFailure(lines, 'E1360: Using a null object', 1)",
          "490:     vim9script",
          "492:     class Class",
          "493:       this.id: string",
          "494:       def Method1()",
          "495:         echo 'Method1' .. this.id",
          "497:     endclass",
          "499:     var obj = null_object",
          "500:     def Func()",
          "501:       obj.Method1()",
          "502:     enddef",
          "503:     Func()",
          "505:   v9.CheckSourceFailure(lines, 'E1363: Incomplete type', 1)",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "549: \" Test for object member initialization and disassembly",
          "550: def Test_class_member_initializer()",
          "551:   var lines =<< trim END",
          "582:   END",
          "583:   v9.CheckSourceSuccess(lines)",
          "584: enddef",
          "586: def Test_member_any_used_as_object()",
          "587:   var lines =<< trim END",
          "606:   END",
          "607:   v9.CheckSourceSuccess(lines)",
          "",
          "[Removed Lines]",
          "552:       vim9script",
          "554:       class TextPosition",
          "555:         this.lnum: number = 1",
          "556:         this.col: number = 1",
          "558:         # constructor with only the line number",
          "559:         def new(lnum: number)",
          "560:           this.lnum = lnum",
          "561:         enddef",
          "562:       endclass",
          "564:       var pos = TextPosition.new(3)",
          "565:       assert_equal(3, pos.lnum)",
          "566:       assert_equal(1, pos.col)",
          "568:       var instr = execute('disassemble TextPosition.new')",
          "569:       assert_match('new\\_s*' ..",
          "570:             '0 NEW TextPosition size \\d\\+\\_s*' ..",
          "571:             '\\d PUSHNR 1\\_s*' ..",
          "572:             '\\d STORE_THIS 0\\_s*' ..",
          "573:             '\\d PUSHNR 1\\_s*' ..",
          "574:             '\\d STORE_THIS 1\\_s*' ..",
          "575:             'this.lnum = lnum\\_s*' ..",
          "576:             '\\d LOAD arg\\[-1]\\_s*' ..",
          "577:             '\\d PUSHNR 0\\_s*' ..",
          "578:             '\\d LOAD $0\\_s*' ..",
          "579:             '\\d\\+ STOREINDEX object\\_s*' ..",
          "580:             '\\d\\+ RETURN object.*',",
          "581:             instr)",
          "588:       vim9script",
          "590:       class Inner",
          "591:         this.value: number = 0",
          "592:       endclass",
          "594:       class Outer",
          "595:         this.inner: any",
          "596:       endclass",
          "598:       def F(outer: Outer)",
          "599:         outer.inner.value = 1",
          "600:       enddef",
          "602:       var inner_obj = Inner.new(0)",
          "603:       var outer_obj = Outer.new(inner_obj)",
          "604:       F(outer_obj)",
          "605:       assert_equal(1, inner_obj.value)",
          "",
          "[Added Lines]",
          "552:     vim9script",
          "554:     class TextPosition",
          "555:       this.lnum: number = 1",
          "556:       this.col: number = 1",
          "558:       # constructor with only the line number",
          "559:       def new(lnum: number)",
          "560:         this.lnum = lnum",
          "561:       enddef",
          "562:     endclass",
          "564:     var pos = TextPosition.new(3)",
          "565:     assert_equal(3, pos.lnum)",
          "566:     assert_equal(1, pos.col)",
          "568:     var instr = execute('disassemble TextPosition.new')",
          "569:     assert_match('new\\_s*' ..",
          "570:           '0 NEW TextPosition size \\d\\+\\_s*' ..",
          "571:           '\\d PUSHNR 1\\_s*' ..",
          "572:           '\\d STORE_THIS 0\\_s*' ..",
          "573:           '\\d PUSHNR 1\\_s*' ..",
          "574:           '\\d STORE_THIS 1\\_s*' ..",
          "575:           'this.lnum = lnum\\_s*' ..",
          "576:           '\\d LOAD arg\\[-1]\\_s*' ..",
          "577:           '\\d PUSHNR 0\\_s*' ..",
          "578:           '\\d LOAD $0\\_s*' ..",
          "579:           '\\d\\+ STOREINDEX object\\_s*' ..",
          "580:           '\\d\\+ RETURN object.*',",
          "581:           instr)",
          "588:     vim9script",
          "590:     class Inner",
          "591:       this.value: number = 0",
          "592:     endclass",
          "594:     class Outer",
          "595:       this.inner: any",
          "596:     endclass",
          "598:     def F(outer: Outer)",
          "599:       outer.inner.value = 1",
          "600:     enddef",
          "602:     var inner_obj = Inner.new(0)",
          "603:     var outer_obj = Outer.new(inner_obj)",
          "604:     F(outer_obj)",
          "605:     assert_equal(1, inner_obj.value)",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "626:     var outer_obj = Outer.new(inner_obj)",
          "627:     F(outer_obj)",
          "628:   END",
          "631:   # Try modifying a non-existing variable using an \"any\" object",
          "632:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "629:   v9.CheckSourceFailure(lines, 'E1333: Cannot access private variable: _value')",
          "",
          "[Added Lines]",
          "629:   v9.CheckSourceFailure(lines, 'E1333: Cannot access private variable: _value', 1)",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "648:     var outer_obj = Outer.new(inner_obj)",
          "649:     F(outer_obj)",
          "650:   END",
          "652: enddef",
          "654: \" Nested assignment to a object variable which is of another class type",
          "",
          "[Removed Lines]",
          "651:   v9.CheckSourceFailure(lines, 'E1326: Variable not found on object \"Inner\": someval')",
          "",
          "[Added Lines]",
          "651:   v9.CheckSourceFailure(lines, 'E1326: Variable not found on object \"Inner\": someval', 1)",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "710:     Test_assign_to_nested_typed_member()",
          "711:   END",
          "714:   # Assignment where target item is read only script level",
          "715:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "712:   v9.CheckSourceFailure(lines, 'E1335: Variable \"value\" in class \"Inner\" is not writable')",
          "",
          "[Added Lines]",
          "712:   v9.CheckSourceFailure(lines, 'E1335: Variable \"value\" in class \"Inner\" is not writable', 1)",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "732:     script_outer.inner.value = 1",
          "733:     assert_equal(1, script_inner.value)",
          "734:   END",
          "736: enddef",
          "738: def Test_assignment_with_operator()",
          "739:   # Use \"+=\" to assign to a object variable",
          "740:   var lines =<< trim END",
          "761:   END",
          "762:   v9.CheckSourceSuccess(lines)",
          "763: enddef",
          "765: def Test_list_of_objects()",
          "766:   var lines =<< trim END",
          "778:       enddef",
          "782:   END",
          "783:   v9.CheckSourceSuccess(lines)",
          "784: enddef",
          "786: def Test_expr_after_using_object()",
          "787:   var lines =<< trim END",
          "801:   END",
          "802:   v9.CheckSourceSuccess(lines)",
          "803: enddef",
          "805: def Test_class_default_new()",
          "806:   var lines =<< trim END",
          "829:   END",
          "830:   v9.CheckSourceSuccess(lines)",
          "832:   lines =<< trim END",
          "852:   END",
          "853:   v9.CheckSourceSuccess(lines)",
          "855:   lines =<< trim END",
          "867:   END",
          "870:   # Using a specific value to initialize an instance variable in the new()",
          "871:   # method.",
          "872:   lines =<< trim END",
          "879:   END",
          "881: enddef",
          "883: def Test_class_new_with_object_member()",
          "884:   var lines =<< trim END",
          "908:       enddef",
          "911:   END",
          "912:   v9.CheckSourceSuccess(lines)",
          "914:   lines =<< trim END",
          "930:       enddef",
          "933:   END",
          "936:   lines =<< trim END",
          "952:       enddef",
          "955:   END",
          "958:   lines =<< trim END",
          "959:     vim9script",
          "961:     class C",
          "962:       this.str: string",
          "964:       enddef",
          "965:     endclass",
          "987:   END",
          "988:   v9.CheckSourceSuccess(lines)",
          "989: enddef",
          "991: def Test_class_object_member_inits()",
          "992:   var lines =<< trim END",
          "1004:   END",
          "1005:   v9.CheckSourceSuccess(lines)",
          "1007:   lines =<< trim END",
          "1013:   END",
          "1016:   # If the type is not specified for a member, then it should be set during",
          "1017:   # object creation and not when defining the class.",
          "1018:   lines =<< trim END",
          "1036:   END",
          "1037:   v9.CheckSourceSuccess(lines)",
          "",
          "[Removed Lines]",
          "735:   v9.CheckSourceFailure(lines, 'E1335: Variable \"value\" in class \"Inner\" is not writable')",
          "741:       vim9script",
          "743:       class Foo",
          "744:         public this.x: number",
          "746:         def Add(n: number)",
          "747:           this.x += n",
          "748:         enddef",
          "749:       endclass",
          "751:       var f =  Foo.new(3)",
          "752:       f.Add(17)",
          "753:       assert_equal(20, f.x)",
          "755:       def AddToFoo(obj: Foo)",
          "756:         obj.x += 3",
          "757:       enddef",
          "759:       AddToFoo(f)",
          "760:       assert_equal(23, f.x)",
          "767:       vim9script",
          "769:       class Foo",
          "770:         def Add()",
          "771:         enddef",
          "772:       endclass",
          "774:       def ProcessList(fooList: list<Foo>)",
          "775:         for foo in fooList",
          "776:           foo.Add()",
          "777:         endfor",
          "780:       var l: list<Foo> = [Foo.new()]",
          "781:       ProcessList(l)",
          "788:       vim9script",
          "790:       class Something",
          "791:         this.label: string = ''",
          "792:       endclass",
          "794:       def Foo(): Something",
          "795:         var v = Something.new()",
          "796:         echo 'in Foo(): ' .. typename(v)",
          "797:         return v",
          "798:       enddef",
          "800:       Foo()",
          "807:       vim9script",
          "809:       class TextPosition",
          "810:         this.lnum: number = 1",
          "811:         this.col: number = 1",
          "812:       endclass",
          "814:       var pos = TextPosition.new()",
          "815:       assert_equal(1, pos.lnum)",
          "816:       assert_equal(1, pos.col)",
          "818:       pos = TextPosition.new(v:none, v:none)",
          "819:       assert_equal(1, pos.lnum)",
          "820:       assert_equal(1, pos.col)",
          "822:       pos = TextPosition.new(3, 22)",
          "823:       assert_equal(3, pos.lnum)",
          "824:       assert_equal(22, pos.col)",
          "826:       pos = TextPosition.new(v:none, 33)",
          "827:       assert_equal(1, pos.lnum)",
          "828:       assert_equal(33, pos.col)",
          "833:       vim9script",
          "834:       class Person",
          "835:         this.name: string",
          "836:         this.age: number = 42",
          "837:         this.education: string = \"unknown\"",
          "839:         def new(this.name, this.age = v:none, this.education = v:none)",
          "840:         enddef",
          "841:       endclass",
          "843:       var piet = Person.new(\"Piet\")",
          "844:       assert_equal(\"Piet\", piet.name)",
          "845:       assert_equal(42, piet.age)",
          "846:       assert_equal(\"unknown\", piet.education)",
          "848:       var chris = Person.new(\"Chris\", 4, \"none\")",
          "849:       assert_equal(\"Chris\", chris.name)",
          "850:       assert_equal(4, chris.age)",
          "851:       assert_equal(\"none\", chris.education)",
          "856:       vim9script",
          "857:       class Person",
          "858:         this.name: string",
          "859:         this.age: number = 42",
          "860:         this.education: string = \"unknown\"",
          "862:         def new(this.name, this.age = v:none, this.education = v:none)",
          "863:         enddef",
          "864:       endclass",
          "866:       var missing = Person.new()",
          "868:   v9.CheckSourceFailure(lines, 'E119:')",
          "873:       vim9script",
          "874:       class A",
          "875:         this.val: string",
          "876:         def new(this.val = 'a')",
          "877:         enddef",
          "878:       endclass",
          "880:   v9.CheckSourceFailure(lines, \"E1328: Constructor default value must be v:none:  = 'a'\")",
          "885:       vim9script",
          "887:       class C",
          "888:         this.str: string",
          "889:         this.num: number",
          "890:         def new(this.str, this.num)",
          "891:         enddef",
          "892:         def newVals(this.str, this.num)",
          "893:         enddef",
          "894:       endclass",
          "896:       def Check()",
          "897:         try",
          "898:           var c = C.new('cats', 2)",
          "899:           assert_equal('cats', c.str)",
          "900:           assert_equal(2, c.num)",
          "902:           c = C.newVals('dogs', 4)",
          "903:           assert_equal('dogs', c.str)",
          "904:           assert_equal(4, c.num)",
          "905:         catch",
          "906:           assert_report($'Unexpected exception was caught: {v:exception}')",
          "907:         endtry",
          "910:       Check()",
          "915:       vim9script",
          "917:       class C",
          "918:         this.str: string",
          "919:         this.num: number",
          "920:         def new(this.str, this.num)",
          "921:         enddef",
          "922:       endclass",
          "924:       def Check()",
          "925:         try",
          "926:           var c = C.new(1, 2)",
          "927:         catch",
          "928:           assert_report($'Unexpected exception was caught: {v:exception}')",
          "929:         endtry",
          "932:       Check()",
          "934:   v9.CheckSourceFailure(lines, 'E1013:')",
          "937:       vim9script",
          "939:       class C",
          "940:         this.str: string",
          "941:         this.num: number",
          "942:         def newVals(this.str, this.num)",
          "943:         enddef",
          "944:       endclass",
          "946:       def Check()",
          "947:         try",
          "948:           var c = C.newVals('dogs', 'apes')",
          "949:         catch",
          "950:           assert_report($'Unexpected exception was caught: {v:exception}')",
          "951:         endtry",
          "954:       Check()",
          "956:   v9.CheckSourceFailure(lines, 'E1013:')",
          "963:       def MethodA(this.str)",
          "966:   END",
          "967:   v9.CheckSourceFailure(lines, 'E1390: Cannot use an object variable \"this.str\" except with the \"new\" method')",
          "969:   lines =<< trim END",
          "970:       vim9script",
          "972:       class C",
          "973:         this.str: string",
          "974:         def new(str: any)",
          "975:         enddef",
          "976:       endclass",
          "978:       def Check()",
          "979:         try",
          "980:           var c = C.new(1)",
          "981:         catch",
          "982:           assert_report($'Unexpected exception was caught: {v:exception}')",
          "983:         endtry",
          "984:       enddef",
          "986:       Check()",
          "993:       vim9script",
          "994:       class TextPosition",
          "995:         this.lnum: number",
          "996:         this.col = 1",
          "997:         this.addcol: number = 2",
          "998:       endclass",
          "1000:       var pos = TextPosition.new()",
          "1001:       assert_equal(0, pos.lnum)",
          "1002:       assert_equal(1, pos.col)",
          "1003:       assert_equal(2, pos.addcol)",
          "1008:       vim9script",
          "1009:       class TextPosition",
          "1010:         this.lnum",
          "1011:         this.col = 1",
          "1012:       endclass",
          "1014:   v9.CheckSourceFailure(lines, 'E1022:')",
          "1019:       vim9script",
          "1021:       var init_count = 0",
          "1022:       def Init(): string",
          "1023:         init_count += 1",
          "1024:         return 'foo'",
          "1025:       enddef",
          "1027:       class A",
          "1028:         this.str1 = Init()",
          "1029:         this.str2: string = Init()",
          "1030:         this.col = 1",
          "1031:       endclass",
          "1033:       assert_equal(init_count, 0)",
          "1034:       var a = A.new()",
          "1035:       assert_equal(init_count, 2)",
          "",
          "[Added Lines]",
          "735:   v9.CheckSourceFailure(lines, 'E1335: Variable \"value\" in class \"Inner\" is not writable', 17)",
          "741:     vim9script",
          "743:     class Foo",
          "744:       public this.x: number",
          "746:       def Add(n: number)",
          "747:         this.x += n",
          "748:       enddef",
          "749:     endclass",
          "751:     var f =  Foo.new(3)",
          "752:     f.Add(17)",
          "753:     assert_equal(20, f.x)",
          "755:     def AddToFoo(obj: Foo)",
          "756:       obj.x += 3",
          "757:     enddef",
          "759:     AddToFoo(f)",
          "760:     assert_equal(23, f.x)",
          "767:     vim9script",
          "769:     class Foo",
          "770:       def Add()",
          "772:     endclass",
          "774:     def ProcessList(fooList: list<Foo>)",
          "775:       for foo in fooList",
          "776:         foo.Add()",
          "777:       endfor",
          "778:     enddef",
          "780:     var l: list<Foo> = [Foo.new()]",
          "781:     ProcessList(l)",
          "788:     vim9script",
          "790:     class Something",
          "791:       this.label: string = ''",
          "792:     endclass",
          "794:     def Foo(): Something",
          "795:       var v = Something.new()",
          "796:       echo 'in Foo(): ' .. typename(v)",
          "797:       return v",
          "798:     enddef",
          "800:     Foo()",
          "807:     vim9script",
          "809:     class TextPosition",
          "810:       this.lnum: number = 1",
          "811:       this.col: number = 1",
          "812:     endclass",
          "814:     var pos = TextPosition.new()",
          "815:     assert_equal(1, pos.lnum)",
          "816:     assert_equal(1, pos.col)",
          "818:     pos = TextPosition.new(v:none, v:none)",
          "819:     assert_equal(1, pos.lnum)",
          "820:     assert_equal(1, pos.col)",
          "822:     pos = TextPosition.new(3, 22)",
          "823:     assert_equal(3, pos.lnum)",
          "824:     assert_equal(22, pos.col)",
          "826:     pos = TextPosition.new(v:none, 33)",
          "827:     assert_equal(1, pos.lnum)",
          "828:     assert_equal(33, pos.col)",
          "833:     vim9script",
          "834:     class Person",
          "835:       this.name: string",
          "836:       this.age: number = 42",
          "837:       this.education: string = \"unknown\"",
          "839:       def new(this.name, this.age = v:none, this.education = v:none)",
          "840:       enddef",
          "841:     endclass",
          "843:     var piet = Person.new(\"Piet\")",
          "844:     assert_equal(\"Piet\", piet.name)",
          "845:     assert_equal(42, piet.age)",
          "846:     assert_equal(\"unknown\", piet.education)",
          "848:     var chris = Person.new(\"Chris\", 4, \"none\")",
          "849:     assert_equal(\"Chris\", chris.name)",
          "850:     assert_equal(4, chris.age)",
          "851:     assert_equal(\"none\", chris.education)",
          "856:     vim9script",
          "857:     class Person",
          "858:       this.name: string",
          "859:       this.age: number = 42",
          "860:       this.education: string = \"unknown\"",
          "862:       def new(this.name, this.age = v:none, this.education = v:none)",
          "863:       enddef",
          "864:     endclass",
          "866:     var missing = Person.new()",
          "868:   v9.CheckSourceFailure(lines, 'E119: Not enough arguments for function: new', 11)",
          "873:     vim9script",
          "874:     class A",
          "875:       this.val: string",
          "876:       def new(this.val = 'a')",
          "877:       enddef",
          "878:     endclass",
          "880:   v9.CheckSourceFailure(lines, \"E1328: Constructor default value must be v:none:  = 'a'\", 4)",
          "885:     vim9script",
          "887:     class C",
          "888:       this.str: string",
          "889:       this.num: number",
          "890:       def new(this.str, this.num)",
          "891:       enddef",
          "892:       def newVals(this.str, this.num)",
          "894:     endclass",
          "896:     def Check()",
          "897:       try",
          "898:         var c = C.new('cats', 2)",
          "899:         assert_equal('cats', c.str)",
          "900:         assert_equal(2, c.num)",
          "902:         c = C.newVals('dogs', 4)",
          "903:         assert_equal('dogs', c.str)",
          "904:         assert_equal(4, c.num)",
          "905:       catch",
          "906:         assert_report($'Unexpected exception was caught: {v:exception}')",
          "907:       endtry",
          "908:     enddef",
          "910:     Check()",
          "915:     vim9script",
          "917:     class C",
          "918:       this.str: string",
          "919:       this.num: number",
          "920:       def new(this.str, this.num)",
          "922:     endclass",
          "924:     def Check()",
          "925:       try",
          "926:         var c = C.new(1, 2)",
          "927:       catch",
          "928:         assert_report($'Unexpected exception was caught: {v:exception}')",
          "929:       endtry",
          "930:     enddef",
          "932:     Check()",
          "934:   v9.CheckSourceFailure(lines, 'E1013: Argument 1: type mismatch, expected string but got number', 2)",
          "937:     vim9script",
          "939:     class C",
          "940:       this.str: string",
          "941:       this.num: number",
          "942:       def newVals(this.str, this.num)",
          "944:     endclass",
          "946:     def Check()",
          "947:       try",
          "948:         var c = C.newVals('dogs', 'apes')",
          "949:       catch",
          "950:         assert_report($'Unexpected exception was caught: {v:exception}')",
          "951:       endtry",
          "952:     enddef",
          "954:     Check()",
          "956:   v9.CheckSourceFailure(lines, 'E1013: Argument 2: type mismatch, expected number but got string', 2)",
          "963:       def new(str: any)",
          "967:     def Check()",
          "968:       try",
          "969:         var c = C.new(1)",
          "970:       catch",
          "971:         assert_report($'Unexpected exception was caught: {v:exception}')",
          "972:       endtry",
          "973:     enddef",
          "975:     Check()",
          "982:     vim9script",
          "983:     class TextPosition",
          "984:       this.lnum: number",
          "985:       this.col = 1",
          "986:       this.addcol: number = 2",
          "987:     endclass",
          "989:     var pos = TextPosition.new()",
          "990:     assert_equal(0, pos.lnum)",
          "991:     assert_equal(1, pos.col)",
          "992:     assert_equal(2, pos.addcol)",
          "997:     vim9script",
          "998:     class TextPosition",
          "999:       this.lnum",
          "1000:       this.col = 1",
          "1001:     endclass",
          "1003:   v9.CheckSourceFailure(lines, 'E1022: Type or initialization required', 3)",
          "1008:     vim9script",
          "1010:     var init_count = 0",
          "1011:     def Init(): string",
          "1012:       init_count += 1",
          "1013:       return 'foo'",
          "1014:     enddef",
          "1016:     class A",
          "1017:       this.str1 = Init()",
          "1018:       this.str2: string = Init()",
          "1019:       this.col = 1",
          "1020:     endclass",
          "1022:     assert_equal(init_count, 0)",
          "1023:     var a = A.new()",
          "1024:     assert_equal(init_count, 2)",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1044:     endclass",
          "1045:     var a = A.new()",
          "1046:   END",
          "1049:   # Test for initializing an object member with an special type",
          "1050:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "1047:   v9.CheckSourceFailure(lines, 'E1001:')",
          "",
          "[Added Lines]",
          "1036:   v9.CheckSourceFailure(lines, 'E1001: Variable not found: init_val', 1)",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1053:        this.value: void",
          "1054:     endclass",
          "1055:   END",
          "1057: enddef",
          "1059: \" Test for instance variable access",
          "1060: def Test_instance_variable_access()",
          "1061:   var lines =<< trim END",
          "1085:   END",
          "1086:   v9.CheckSourceSuccess(lines)",
          "",
          "[Removed Lines]",
          "1056:   v9.CheckSourceFailure(lines, 'E1330: Invalid type for object variable: void')",
          "1062:       vim9script",
          "1063:       class Triple",
          "1064:          this._one = 1",
          "1065:          this.two = 2",
          "1066:          public this.three = 3",
          "1068:          def GetOne(): number",
          "1069:            return this._one",
          "1070:          enddef",
          "1071:       endclass",
          "1073:       var trip = Triple.new()",
          "1074:       assert_equal(1, trip.GetOne())",
          "1075:       assert_equal(2, trip.two)",
          "1076:       assert_equal(3, trip.three)",
          "1077:       assert_fails('echo trip._one', 'E1333')",
          "1079:       assert_fails('trip._one = 11', 'E1333')",
          "1080:       assert_fails('trip.two = 22', 'E1335')",
          "1081:       trip.three = 33",
          "1082:       assert_equal(33, trip.three)",
          "1084:       assert_fails('trip.four = 4', 'E1326')",
          "",
          "[Added Lines]",
          "1045:   v9.CheckSourceFailure(lines, 'E1330: Invalid type for object variable: void', 3)",
          "1051:     vim9script",
          "1052:     class Triple",
          "1053:        this._one = 1",
          "1054:        this.two = 2",
          "1055:        public this.three = 3",
          "1057:        def GetOne(): number",
          "1058:          return this._one",
          "1059:        enddef",
          "1060:     endclass",
          "1062:     var trip = Triple.new()",
          "1063:     assert_equal(1, trip.GetOne())",
          "1064:     assert_equal(2, trip.two)",
          "1065:     assert_equal(3, trip.three)",
          "1066:     assert_fails('echo trip._one', 'E1333: Cannot access private variable: _one')",
          "1068:     assert_fails('trip._one = 11', 'E1333: Cannot access private variable: _one')",
          "1069:     assert_fails('trip.two = 22', 'E1335: Variable \"two\" in class \"Triple\" is not writable')",
          "1070:     trip.three = 33",
          "1071:     assert_equal(33, trip.three)",
          "1073:     assert_fails('trip.four = 4', 'E1326: Variable not found on object \"Triple\": four')",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1092:       public this._val = 10",
          "1093:     endclass",
          "1094:   END",
          "1097:   lines =<< trim END",
          "1130:   END",
          "1131:   v9.CheckSourceSuccess(lines)",
          "1133:   lines =<< trim END",
          "1146:   END",
          "1149:   lines =<< trim END",
          "1172:   END",
          "1173:   v9.CheckSourceSuccess(lines)",
          "",
          "[Removed Lines]",
          "1095:   v9.CheckSourceFailure(lines, 'E1332:')",
          "1098:       vim9script",
          "1100:       class MyCar",
          "1101:         this.make: string",
          "1102:         this.age = 5",
          "1104:         def new(make_arg: string)",
          "1105:           this.make = make_arg",
          "1106:         enddef",
          "1108:         def GetMake(): string",
          "1109:           return $\"make = {this.make}\"",
          "1110:         enddef",
          "1111:         def GetAge(): number",
          "1112:           return this.age",
          "1113:         enddef",
          "1114:       endclass",
          "1116:       var c = MyCar.new(\"abc\")",
          "1117:       assert_equal('make = abc', c.GetMake())",
          "1119:       c = MyCar.new(\"def\")",
          "1120:       assert_equal('make = def', c.GetMake())",
          "1122:       var c2 = MyCar.new(\"123\")",
          "1123:       assert_equal('make = 123', c2.GetMake())",
          "1125:       def CheckCar()",
          "1126:         assert_equal(\"make = def\", c.GetMake())",
          "1127:         assert_equal(5, c.GetAge())",
          "1128:       enddef",
          "1129:       CheckCar()",
          "1134:       vim9script",
          "1136:       class MyCar",
          "1137:         this.make: string",
          "1139:         def new(make_arg: string)",
          "1140:             this.make = make_arg",
          "1141:         enddef",
          "1142:       endclass",
          "1144:       var c = MyCar.new(\"abc\")",
          "1145:       var c = MyCar.new(\"def\")",
          "1147:   v9.CheckSourceFailure(lines, 'E1041:')",
          "1150:       vim9script",
          "1152:       class Foo",
          "1153:         this.x: list<number> = []",
          "1155:         def Add(n: number): any",
          "1156:           this.x->add(n)",
          "1157:           return this",
          "1158:         enddef",
          "1159:       endclass",
          "1161:       echo Foo.new().Add(1).Add(2).x",
          "1162:       echo Foo.new().Add(1).Add(2)",
          "1163:             .x",
          "1164:       echo Foo.new().Add(1)",
          "1165:             .Add(2).x",
          "1166:       echo Foo.new()",
          "1167:             .Add(1).Add(2).x",
          "1168:       echo Foo.new()",
          "1169:             .Add(1)",
          "1170:             .Add(2)",
          "1171:             .x",
          "",
          "[Added Lines]",
          "1084:   v9.CheckSourceFailure(lines, 'E1332: Public variable name cannot start with underscore: public this._val = 10', 3)",
          "1087:     vim9script",
          "1089:     class MyCar",
          "1090:       this.make: string",
          "1091:       this.age = 5",
          "1093:       def new(make_arg: string)",
          "1094:         this.make = make_arg",
          "1095:       enddef",
          "1097:       def GetMake(): string",
          "1098:         return $\"make = {this.make}\"",
          "1099:       enddef",
          "1100:       def GetAge(): number",
          "1101:         return this.age",
          "1102:       enddef",
          "1103:     endclass",
          "1105:     var c = MyCar.new(\"abc\")",
          "1106:     assert_equal('make = abc', c.GetMake())",
          "1108:     c = MyCar.new(\"def\")",
          "1109:     assert_equal('make = def', c.GetMake())",
          "1111:     var c2 = MyCar.new(\"123\")",
          "1112:     assert_equal('make = 123', c2.GetMake())",
          "1114:     def CheckCar()",
          "1115:       assert_equal(\"make = def\", c.GetMake())",
          "1116:       assert_equal(5, c.GetAge())",
          "1117:     enddef",
          "1118:     CheckCar()",
          "1123:     vim9script",
          "1125:     class MyCar",
          "1126:       this.make: string",
          "1128:       def new(make_arg: string)",
          "1129:         this.make = make_arg",
          "1130:       enddef",
          "1131:     endclass",
          "1133:     var c = MyCar.new(\"abc\")",
          "1134:     var c = MyCar.new(\"def\")",
          "1136:   v9.CheckSourceFailure(lines, 'E1041: Redefining script item: \"c\"', 12)",
          "1139:     vim9script",
          "1141:     class Foo",
          "1142:       this.x: list<number> = []",
          "1144:       def Add(n: number): any",
          "1145:         this.x->add(n)",
          "1146:         return this",
          "1147:       enddef",
          "1148:     endclass",
          "1150:     echo Foo.new().Add(1).Add(2).x",
          "1151:     echo Foo.new().Add(1).Add(2)",
          "1152:           .x",
          "1153:     echo Foo.new().Add(1)",
          "1154:           .Add(2).x",
          "1155:     echo Foo.new()",
          "1156:           .Add(1).Add(2).x",
          "1157:     echo Foo.new()",
          "1158:           .Add(1)",
          "1159:           .Add(2)",
          "1160:           .x",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1179:       pub this.val = 1",
          "1180:     endclass",
          "1181:   END",
          "1184:   # Test for \"public\" keyword must be followed by \"this\" or \"static\".",
          "1185:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "1182:   v9.CheckSourceFailure(lines, 'E1065:')",
          "",
          "[Added Lines]",
          "1171:   v9.CheckSourceFailure(lines, 'E1065: Command cannot be shortened: pub this.val = 1', 3)",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1188:       public val = 1",
          "1189:     endclass",
          "1190:   END",
          "1193:   # Modify a instance variable using the class name in the script context",
          "1194:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "1191:   v9.CheckSourceFailure(lines, 'E1331:')",
          "",
          "[Added Lines]",
          "1180:   v9.CheckSourceFailure(lines, 'E1331: Public must be followed by \"this\" or \"static\"', 3)",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1198:     endclass",
          "1199:     A.val = 1",
          "1200:   END",
          "1203:   # Read a instance variable using the class name in the script context",
          "1204:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "1201:   v9.CheckSourceFailure(lines, 'E1376: Object variable \"val\" accessible only using class \"A\" object')",
          "",
          "[Added Lines]",
          "1190:   v9.CheckSourceFailure(lines, 'E1376: Object variable \"val\" accessible only using class \"A\" object', 5)",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1208:     endclass",
          "1209:     var i = A.val",
          "1210:   END",
          "1213:   # Modify a instance variable using the class name in a def function",
          "1214:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "1211:   v9.CheckSourceFailure(lines, 'E1376: Object variable \"val\" accessible only using class \"A\" object')",
          "",
          "[Added Lines]",
          "1200:   v9.CheckSourceFailure(lines, 'E1376: Object variable \"val\" accessible only using class \"A\" object', 5)",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1221:     enddef",
          "1222:     T()",
          "1223:   END",
          "1226:   # Read a instance variable using the class name in a def function",
          "1227:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "1224:   v9.CheckSourceFailure(lines, 'E1376: Object variable \"val\" accessible only using class \"A\" object')",
          "",
          "[Added Lines]",
          "1213:   v9.CheckSourceFailure(lines, 'E1376: Object variable \"val\" accessible only using class \"A\" object', 1)",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1234:     enddef",
          "1235:     T()",
          "1236:   END",
          "1239:   # Access from child class extending a class:",
          "1240:   lines =<< trim END",
          "1262:   END",
          "1263:   v9.CheckSourceSuccess(lines)",
          "1264: enddef",
          "",
          "[Removed Lines]",
          "1237:   v9.CheckSourceFailure(lines, 'E1376: Object variable \"val\" accessible only using class \"A\" object')",
          "1241:       vim9script",
          "1242:       class A",
          "1243:         this.ro_obj_var = 10",
          "1244:         public this.rw_obj_var = 20",
          "1245:         this._priv_obj_var = 30",
          "1246:       endclass",
          "1248:       class B extends A",
          "1249:         def Foo()",
          "1250:           var x: number",
          "1251:           x = this.ro_obj_var",
          "1252:           this.ro_obj_var = 0",
          "1253:           x = this.rw_obj_var",
          "1254:           this.rw_obj_var = 0",
          "1255:           x = this._priv_obj_var",
          "1256:           this._priv_obj_var = 0",
          "1257:         enddef",
          "1258:       endclass",
          "1260:       var b = B.new()",
          "1261:       b.Foo()",
          "",
          "[Added Lines]",
          "1226:   v9.CheckSourceFailure(lines, 'E1376: Object variable \"val\" accessible only using class \"A\" object', 1)",
          "1230:     vim9script",
          "1231:     class A",
          "1232:       this.ro_obj_var = 10",
          "1233:       public this.rw_obj_var = 20",
          "1234:       this._priv_obj_var = 30",
          "1235:     endclass",
          "1237:     class B extends A",
          "1238:       def Foo()",
          "1239:         var x: number",
          "1240:         x = this.ro_obj_var",
          "1241:         this.ro_obj_var = 0",
          "1242:         x = this.rw_obj_var",
          "1243:         this.rw_obj_var = 0",
          "1244:         x = this._priv_obj_var",
          "1245:         this._priv_obj_var = 0",
          "1246:       enddef",
          "1247:     endclass",
          "1249:     var b = B.new()",
          "1250:     b.Foo()",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1272:       stat this.val = 1",
          "1273:     endclass",
          "1274:   END",
          "1277:   # Test for \"static\" cannot be followed by \"this\".",
          "1278:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "1275:   v9.CheckSourceFailure(lines, 'E1065:')",
          "",
          "[Added Lines]",
          "1264:   v9.CheckSourceFailure(lines, 'E1065: Command cannot be shortened: stat this.val = 1', 3)",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1281:       static this.val = 1",
          "1282:     endclass",
          "1283:   END",
          "1286:   # Test for \"static\" cannot be followed by \"public\".",
          "1287:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "1284:   v9.CheckSourceFailure(lines, 'E1368: Static cannot be followed by \"this\" in a variable name')",
          "",
          "[Added Lines]",
          "1273:   v9.CheckSourceFailure(lines, 'E1368: Static cannot be followed by \"this\" in a variable name', 3)",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1290:       static public val = 1",
          "1291:     endclass",
          "1292:   END",
          "1295:   # A readonly class variable cannot be modified from a child class",
          "1296:   lines =<< trim END",
          "1310:   END",
          "1313:   # A private class variable cannot be accessed from a child class",
          "1314:   lines =<< trim END",
          "1328:   END",
          "1331:   # A private class variable cannot be modified from a child class",
          "1332:   lines =<< trim END",
          "1346:   END",
          "1349:   # Access from child class extending a class and from script context",
          "1350:   lines =<< trim END",
          "1376:   END",
          "1377:   v9.CheckSourceSuccess(lines)",
          "1378: enddef",
          "1380: def Test_class_object_compare()",
          "1381:   var class_lines =<< trim END",
          "1387:   END",
          "1389:   # used at the script level and in a compiled function",
          "1390:   var test_lines =<< trim END",
          "1404:   END",
          "1406:   v9.CheckSourceSuccess(class_lines + test_lines)",
          "1407:   v9.CheckSourceSuccess(",
          "1410:   for op in ['>', '>=', '<', '<=', '=~', '!~']",
          "1411:     var op_lines = [",
          "",
          "[Removed Lines]",
          "1293:   v9.CheckSourceFailure(lines, 'E1022: Type or initialization required')",
          "1297:       vim9script",
          "1298:       class A",
          "1299:         static ro_class_var = 40",
          "1300:       endclass",
          "1302:       class B extends A",
          "1303:         def Foo()",
          "1304:           A.ro_class_var = 50",
          "1305:         enddef",
          "1306:       endclass",
          "1308:       var b = B.new()",
          "1309:       b.Foo()",
          "1311:   v9.CheckSourceFailure(lines, 'E1335: Variable \"ro_class_var\" in class \"A\" is not writable')",
          "1315:       vim9script",
          "1316:       class A",
          "1317:         static _priv_class_var = 60",
          "1318:       endclass",
          "1320:       class B extends A",
          "1321:         def Foo()",
          "1322:           var i = A._priv_class_var",
          "1323:         enddef",
          "1324:       endclass",
          "1326:       var b = B.new()",
          "1327:       b.Foo()",
          "1329:   v9.CheckSourceFailure(lines, 'E1333: Cannot access private variable: _priv_class_var')",
          "1333:       vim9script",
          "1334:       class A",
          "1335:         static _priv_class_var = 60",
          "1336:       endclass",
          "1338:       class B extends A",
          "1339:         def Foo()",
          "1340:           A._priv_class_var = 0",
          "1341:         enddef",
          "1342:       endclass",
          "1344:       var b = B.new()",
          "1345:       b.Foo()",
          "1347:   v9.CheckSourceFailure(lines, 'E1333: Cannot access private variable: _priv_class_var')",
          "1351:       vim9script",
          "1352:       class A",
          "1353:         static ro_class_var = 10",
          "1354:         public static rw_class_var = 20",
          "1355:         static _priv_class_var = 30",
          "1356:       endclass",
          "1358:       class B extends A",
          "1359:         def Foo()",
          "1360:           var x: number",
          "1361:           x = A.ro_class_var",
          "1362:           assert_equal(10, x)",
          "1363:           x = A.rw_class_var",
          "1364:           assert_equal(25, x)",
          "1365:           A.rw_class_var = 20",
          "1366:           assert_equal(20, A.rw_class_var)",
          "1367:         enddef",
          "1368:       endclass",
          "1370:       assert_equal(10, A.ro_class_var)",
          "1371:       assert_equal(20, A.rw_class_var)",
          "1372:       A.rw_class_var = 25",
          "1373:       assert_equal(25, A.rw_class_var)",
          "1374:       var b = B.new()",
          "1375:       b.Foo()",
          "1382:       vim9script",
          "1383:       class Item",
          "1384:         this.nr = 0",
          "1385:         this.name = 'xx'",
          "1386:       endclass",
          "1391:       var i1 = Item.new()",
          "1392:       assert_equal(i1, i1)",
          "1393:       assert_true(i1 is i1)",
          "1394:       var i2 = Item.new()",
          "1395:       assert_equal(i1, i2)",
          "1396:       assert_false(i1 is i2)",
          "1397:       var i3 = Item.new(0, 'xx')",
          "1398:       assert_equal(i1, i3)",
          "1400:       var io1 = Item.new(1, 'xx')",
          "1401:       assert_notequal(i1, io1)",
          "1402:       var io2 = Item.new(0, 'yy')",
          "1403:       assert_notequal(i1, io2)",
          "1408:       class_lines + ['def Test()'] + test_lines + ['enddef', 'Test()'])",
          "",
          "[Added Lines]",
          "1282:   v9.CheckSourceFailure(lines, 'E1022: Type or initialization required', 3)",
          "1286:     vim9script",
          "1287:     class A",
          "1288:       static ro_class_var = 40",
          "1289:     endclass",
          "1291:     class B extends A",
          "1292:       def Foo()",
          "1293:         A.ro_class_var = 50",
          "1294:       enddef",
          "1295:     endclass",
          "1297:     var b = B.new()",
          "1298:     b.Foo()",
          "1300:   v9.CheckSourceFailure(lines, 'E1335: Variable \"ro_class_var\" in class \"A\" is not writable', 1)",
          "1304:     vim9script",
          "1305:     class A",
          "1306:       static _priv_class_var = 60",
          "1307:     endclass",
          "1309:     class B extends A",
          "1310:       def Foo()",
          "1311:         var i = A._priv_class_var",
          "1312:       enddef",
          "1313:     endclass",
          "1315:     var b = B.new()",
          "1316:     b.Foo()",
          "1318:   v9.CheckSourceFailure(lines, 'E1333: Cannot access private variable: _priv_class_var', 1)",
          "1322:     vim9script",
          "1323:     class A",
          "1324:       static _priv_class_var = 60",
          "1325:     endclass",
          "1327:     class B extends A",
          "1328:       def Foo()",
          "1329:         A._priv_class_var = 0",
          "1330:       enddef",
          "1331:     endclass",
          "1333:     var b = B.new()",
          "1334:     b.Foo()",
          "1336:   v9.CheckSourceFailure(lines, 'E1333: Cannot access private variable: _priv_class_var', 1)",
          "1340:     vim9script",
          "1341:     class A",
          "1342:       static ro_class_var = 10",
          "1343:       public static rw_class_var = 20",
          "1344:       static _priv_class_var = 30",
          "1345:     endclass",
          "1347:     class B extends A",
          "1348:       def Foo()",
          "1349:         var x: number",
          "1350:         x = A.ro_class_var",
          "1351:         assert_equal(10, x)",
          "1352:         x = A.rw_class_var",
          "1353:         assert_equal(25, x)",
          "1354:         A.rw_class_var = 20",
          "1355:         assert_equal(20, A.rw_class_var)",
          "1356:       enddef",
          "1357:     endclass",
          "1359:     assert_equal(10, A.ro_class_var)",
          "1360:     assert_equal(20, A.rw_class_var)",
          "1361:     A.rw_class_var = 25",
          "1362:     assert_equal(25, A.rw_class_var)",
          "1363:     var b = B.new()",
          "1364:     b.Foo()",
          "1371:     vim9script",
          "1372:     class Item",
          "1373:       this.nr = 0",
          "1374:       this.name = 'xx'",
          "1375:     endclass",
          "1380:     var i1 = Item.new()",
          "1381:     assert_equal(i1, i1)",
          "1382:     assert_true(i1 is i1)",
          "1383:     var i2 = Item.new()",
          "1384:     assert_equal(i1, i2)",
          "1385:     assert_false(i1 is i2)",
          "1386:     var i3 = Item.new(0, 'xx')",
          "1387:     assert_equal(i1, i3)",
          "1389:     var io1 = Item.new(1, 'xx')",
          "1390:     assert_notequal(i1, io1)",
          "1391:     var io2 = Item.new(0, 'yy')",
          "1392:     assert_notequal(i1, io2)",
          "1397:     class_lines + ['def Test()'] + test_lines + ['enddef', 'Test()'])",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1413:           'var i2 = Item.new()',",
          "1414:           'echo i1 ' .. op .. ' i2',",
          "1415:           ]",
          "1417:     v9.CheckSourceFailure(class_lines",
          "1418:           + ['def Test()'] + op_lines + ['enddef', 'Test()'], 'E1153: Invalid operation for object')",
          "1419:   endfor",
          "",
          "[Removed Lines]",
          "1416:     v9.CheckSourceFailure(class_lines + op_lines, 'E1153: Invalid operation for object')",
          "",
          "[Added Lines]",
          "1405:     v9.CheckSourceFailure(class_lines + op_lines, 'E1153: Invalid operation for object', 8)",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1422: def Test_object_type()",
          "1423:   var lines =<< trim END",
          "1442:   END",
          "1443:   v9.CheckSourceSuccess(lines)",
          "1445:   lines =<< trim END",
          "1456:   END",
          "1459:   lines =<< trim END",
          "1474:   END",
          "1475:   v9.CheckSourceSuccess(lines)",
          "1477:   lines =<< trim END",
          "1494:   END",
          "1495:   v9.CheckSourceSuccess(lines)",
          "1496: enddef",
          "",
          "[Removed Lines]",
          "1424:       vim9script",
          "1426:       class One",
          "1427:         this.one = 1",
          "1428:       endclass",
          "1429:       class Two",
          "1430:         this.two = 2",
          "1431:       endclass",
          "1432:       class TwoMore extends Two",
          "1433:         this.more = 9",
          "1434:       endclass",
          "1436:       var o: One = One.new()",
          "1437:       var t: Two = Two.new()",
          "1438:       var m: TwoMore = TwoMore.new()",
          "1439:       var tm: Two = TwoMore.new()",
          "1441:       t = m",
          "1446:       vim9script",
          "1448:       class One",
          "1449:         this.one = 1",
          "1450:       endclass",
          "1451:       class Two",
          "1452:         this.two = 2",
          "1453:       endclass",
          "1455:       var o: One = Two.new()",
          "1457:   v9.CheckSourceFailure(lines, 'E1012: Type mismatch; expected object<One> but got object<Two>')",
          "1460:       vim9script",
          "1462:       interface One",
          "1463:         def GetMember(): number",
          "1464:       endinterface",
          "1465:       class Two implements One",
          "1466:         this.one = 1",
          "1467:         def GetMember(): number",
          "1468:           return this.one",
          "1469:         enddef",
          "1470:       endclass",
          "1472:       var o: One = Two.new(5)",
          "1473:       assert_equal(5, o.GetMember())",
          "1478:       vim9script",
          "1480:       class Num",
          "1481:         this.n: number = 0",
          "1482:       endclass",
          "1484:       def Ref(name: string): func(Num): Num",
          "1485:         return (arg: Num): Num => {",
          "1486:           return eval(name)(arg)",
          "1487:         }",
          "1488:       enddef",
          "1490:       const Fn = Ref('Double')",
          "1491:       var Double = (m: Num): Num => Num.new(m.n * 2)",
          "1493:       echo Fn(Num.new(4))",
          "",
          "[Added Lines]",
          "1413:     vim9script",
          "1415:     class One",
          "1416:       this.one = 1",
          "1417:     endclass",
          "1418:     class Two",
          "1419:       this.two = 2",
          "1420:     endclass",
          "1421:     class TwoMore extends Two",
          "1422:       this.more = 9",
          "1423:     endclass",
          "1425:     var o: One = One.new()",
          "1426:     var t: Two = Two.new()",
          "1427:     var m: TwoMore = TwoMore.new()",
          "1428:     var tm: Two = TwoMore.new()",
          "1430:     t = m",
          "1435:     vim9script",
          "1437:     class One",
          "1438:       this.one = 1",
          "1439:     endclass",
          "1440:     class Two",
          "1441:       this.two = 2",
          "1442:     endclass",
          "1444:     var o: One = Two.new()",
          "1446:   v9.CheckSourceFailure(lines, 'E1012: Type mismatch; expected object<One> but got object<Two>', 10)",
          "1449:     vim9script",
          "1451:     interface One",
          "1452:       def GetMember(): number",
          "1453:     endinterface",
          "1454:     class Two implements One",
          "1455:       this.one = 1",
          "1456:       def GetMember(): number",
          "1457:         return this.one",
          "1458:       enddef",
          "1459:     endclass",
          "1461:     var o: One = Two.new(5)",
          "1462:     assert_equal(5, o.GetMember())",
          "1467:     vim9script",
          "1469:     class Num",
          "1470:       this.n: number = 0",
          "1471:     endclass",
          "1473:     def Ref(name: string): func(Num): Num",
          "1474:       return (arg: Num): Num => {",
          "1475:         return eval(name)(arg)",
          "1476:       }",
          "1477:     enddef",
          "1479:     const Fn = Ref('Double')",
          "1480:     var Double = (m: Num): Num => Num.new(m.n * 2)",
          "1482:     echo Fn(Num.new(4))",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1498: def Test_class_member()",
          "1499:   # check access rules",
          "1500:   var lines =<< trim END",
          "1536:   END",
          "1537:   v9.CheckSourceSuccess(lines)",
          "1539:   # example in the help",
          "1540:   lines =<< trim END",
          "1555:   END",
          "1556:   v9.CheckSourceSuccess(lines)",
          "1558:   # using static class member twice",
          "1559:   lines =<< trim END",
          "1572:   END",
          "1573:   v9.CheckSourceSuccess(lines)",
          "1575:   # access private member in lambda",
          "1576:   lines =<< trim END",
          "1590:   END",
          "1591:   v9.CheckSourceSuccess(lines)",
          "1593:   # access private member in lambda body",
          "1594:   lines =<< trim END",
          "1611:   END",
          "1612:   v9.CheckSourceSuccess(lines)",
          "1614:   # check shadowing",
          "1615:   lines =<< trim END",
          "1627:   END",
          "1630:   # Use a local variable in a method with the same name as a class variable",
          "1631:   lines =<< trim END",
          "1644:   END",
          "1647:   # Test for using an invalid type for a member variable",
          "1648:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "1501:       vim9script",
          "1502:       class TextPos",
          "1503:          this.lnum = 1",
          "1504:          this.col = 1",
          "1505:          static counter = 0",
          "1506:          static _secret = 7",
          "1507:          public static  anybody = 42",
          "1509:          static def AddToCounter(nr: number)",
          "1510:            counter += nr",
          "1511:          enddef",
          "1512:       endclass",
          "1514:       assert_equal(0, TextPos.counter)",
          "1515:       TextPos.AddToCounter(3)",
          "1516:       assert_equal(3, TextPos.counter)",
          "1517:       assert_fails('echo TextPos.noSuchMember', 'E1337:')",
          "1519:       def GetCounter(): number",
          "1520:         return TextPos.counter",
          "1521:       enddef",
          "1522:       assert_equal(3, GetCounter())",
          "1524:       assert_fails('TextPos.noSuchMember = 2', 'E1337:')",
          "1525:       assert_fails('TextPos.counter = 5', 'E1335:')",
          "1526:       assert_fails('TextPos.counter += 5', 'E1335:')",
          "1528:       assert_fails('echo TextPos._secret', 'E1333:')",
          "1529:       assert_fails('TextPos._secret = 8', 'E1333:')",
          "1531:       assert_equal(42, TextPos.anybody)",
          "1532:       TextPos.anybody = 12",
          "1533:       assert_equal(12, TextPos.anybody)",
          "1534:       TextPos.anybody += 5",
          "1535:       assert_equal(17, TextPos.anybody)",
          "1541:         vim9script",
          "1542:  class OtherThing",
          "1543:     this.size: number",
          "1544:     static totalSize: number",
          "1546:     def new(this.size)",
          "1547:        totalSize += this.size",
          "1548:     enddef",
          "1549:  endclass",
          "1550:         assert_equal(0, OtherThing.totalSize)",
          "1551:         var to3 = OtherThing.new(3)",
          "1552:         assert_equal(3, OtherThing.totalSize)",
          "1553:         var to7 = OtherThing.new(7)",
          "1554:         assert_equal(10, OtherThing.totalSize)",
          "1560:       vim9script",
          "1562:       class HTML",
          "1563:         static author: string = 'John Doe'",
          "1565:         static def MacroSubstitute(s: string): string",
          "1566:           return substitute(s, '{{author}}', author, 'gi')",
          "1567:         enddef",
          "1568:       endclass",
          "1570:       assert_equal('some text', HTML.MacroSubstitute('some text'))",
          "1571:       assert_equal('some text', HTML.MacroSubstitute('some text'))",
          "1577:       vim9script",
          "1579:       class Foo",
          "1580:         this._x: number = 0",
          "1582:         def Add(n: number): number",
          "1583:           const F = (): number => this._x + n",
          "1584:           return F()",
          "1585:         enddef",
          "1586:       endclass",
          "1588:       var foo = Foo.new()",
          "1589:       assert_equal(5, foo.Add(5))",
          "1595:       vim9script",
          "1597:       class Foo",
          "1598:         this._x: number = 6",
          "1600:         def Add(n: number): number",
          "1601:           var Lam = () => {",
          "1602:             this._x = this._x + n",
          "1603:           }",
          "1604:           Lam()",
          "1605:           return this._x",
          "1606:         enddef",
          "1607:       endclass",
          "1609:       var foo = Foo.new()",
          "1610:       assert_equal(13, foo.Add(7))",
          "1616:       vim9script",
          "1618:       class Some",
          "1619:         static count = 0",
          "1620:         def Method(count: number)",
          "1621:           echo count",
          "1622:         enddef",
          "1623:       endclass",
          "1625:       var s = Some.new()",
          "1626:       s.Method(7)",
          "1628:   v9.CheckSourceFailure(lines, 'E1340: Argument already declared in the class: count')",
          "1632:       vim9script",
          "1634:       class Some",
          "1635:         static count = 0",
          "1636:         def Method(arg: number)",
          "1637:           var count = 3",
          "1638:           echo arg count",
          "1639:         enddef",
          "1640:       endclass",
          "1642:       var s = Some.new()",
          "1643:       s.Method(7)",
          "1645:   v9.CheckSourceFailure(lines, 'E1341: Variable already declared in the class: count')",
          "",
          "[Added Lines]",
          "1490:     vim9script",
          "1491:     class TextPos",
          "1492:        this.lnum = 1",
          "1493:        this.col = 1",
          "1494:        static counter = 0",
          "1495:        static _secret = 7",
          "1496:        public static  anybody = 42",
          "1498:        static def AddToCounter(nr: number)",
          "1499:          counter += nr",
          "1500:        enddef",
          "1501:     endclass",
          "1503:     assert_equal(0, TextPos.counter)",
          "1504:     TextPos.AddToCounter(3)",
          "1505:     assert_equal(3, TextPos.counter)",
          "1506:     assert_fails('echo TextPos.noSuchMember', 'E1337: Class variable \"noSuchMember\" not found in class \"TextPos\"')",
          "1508:     def GetCounter(): number",
          "1509:       return TextPos.counter",
          "1510:     enddef",
          "1511:     assert_equal(3, GetCounter())",
          "1513:     assert_fails('TextPos.noSuchMember = 2', 'E1337: Class variable \"noSuchMember\" not found in class \"TextPos\"')",
          "1514:     assert_fails('TextPos.counter = 5', 'E1335: Variable \"counter\" in class \"TextPos\" is not writable')",
          "1515:     assert_fails('TextPos.counter += 5', 'E1335: Variable \"counter\" in class \"TextPos\" is not writable')",
          "1517:     assert_fails('echo TextPos._secret', 'E1333: Cannot access private variable: _secret')",
          "1518:     assert_fails('TextPos._secret = 8', 'E1333: Cannot access private variable: _secret')",
          "1520:     assert_equal(42, TextPos.anybody)",
          "1521:     TextPos.anybody = 12",
          "1522:     assert_equal(12, TextPos.anybody)",
          "1523:     TextPos.anybody += 5",
          "1524:     assert_equal(17, TextPos.anybody)",
          "1530:     vim9script",
          "1531:     class OtherThing",
          "1532:       this.size: number",
          "1533:       static totalSize: number",
          "1535:       def new(this.size)",
          "1536:         totalSize += this.size",
          "1537:       enddef",
          "1538:     endclass",
          "1539:     assert_equal(0, OtherThing.totalSize)",
          "1540:     var to3 = OtherThing.new(3)",
          "1541:     assert_equal(3, OtherThing.totalSize)",
          "1542:     var to7 = OtherThing.new(7)",
          "1543:     assert_equal(10, OtherThing.totalSize)",
          "1549:     vim9script",
          "1551:     class HTML",
          "1552:       static author: string = 'John Doe'",
          "1554:       static def MacroSubstitute(s: string): string",
          "1555:         return substitute(s, '{{author}}', author, 'gi')",
          "1556:       enddef",
          "1557:     endclass",
          "1559:     assert_equal('some text', HTML.MacroSubstitute('some text'))",
          "1560:     assert_equal('some text', HTML.MacroSubstitute('some text'))",
          "1566:     vim9script",
          "1568:     class Foo",
          "1569:       this._x: number = 0",
          "1571:       def Add(n: number): number",
          "1572:         const F = (): number => this._x + n",
          "1573:         return F()",
          "1574:       enddef",
          "1575:     endclass",
          "1577:     var foo = Foo.new()",
          "1578:     assert_equal(5, foo.Add(5))",
          "1584:     vim9script",
          "1586:     class Foo",
          "1587:       this._x: number = 6",
          "1589:       def Add(n: number): number",
          "1590:         var Lam = () => {",
          "1591:           this._x = this._x + n",
          "1592:         }",
          "1593:         Lam()",
          "1594:         return this._x",
          "1595:       enddef",
          "1596:     endclass",
          "1598:     var foo = Foo.new()",
          "1599:     assert_equal(13, foo.Add(7))",
          "1605:     vim9script",
          "1607:     class Some",
          "1608:       static count = 0",
          "1609:       def Method(count: number)",
          "1610:         echo count",
          "1611:       enddef",
          "1612:     endclass",
          "1614:     var s = Some.new()",
          "1615:     s.Method(7)",
          "1617:   v9.CheckSourceFailure(lines, 'E1340: Argument already declared in the class: count', 5)",
          "1621:     vim9script",
          "1623:     class Some",
          "1624:       static count = 0",
          "1625:       def Method(arg: number)",
          "1626:         var count = 3",
          "1627:         echo arg count",
          "1628:       enddef",
          "1629:     endclass",
          "1631:     var s = Some.new()",
          "1632:     s.Method(7)",
          "1634:   v9.CheckSourceFailure(lines, 'E1341: Variable already declared in the class: count', 1)",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1651:       this.val: xxx",
          "1652:     endclass",
          "1653:   END",
          "1656:   # Test for setting a member on a null object",
          "1657:   lines =<< trim END",
          "1658:     vim9script",
          "1659:     class A",
          "1661:     endclass",
          "1663:     def F()",
          "1666:     enddef",
          "1667:     F()",
          "1668:   END",
          "1671:   # Test for accessing a member on a null object",
          "1672:   lines =<< trim END",
          "1673:     vim9script",
          "1674:     class A",
          "1676:     endclass",
          "1678:     def F()",
          "1681:     enddef",
          "1682:     F()",
          "1683:   END",
          "1686:   # Test for setting a member on a null object, at script level",
          "1687:   lines =<< trim END",
          "1688:     vim9script",
          "1689:     class A",
          "1691:     endclass",
          "1693:     var obj: A",
          "1694:     obj.val = \"\"",
          "1695:   END",
          "1696:   # FIXME(in source): this should give E1360 as well!",
          "1699:   # Test for accessing a member on a null object, at script level",
          "1700:   lines =<< trim END",
          "1701:     vim9script",
          "1702:     class A",
          "1704:     endclass",
          "1706:     var obj: A",
          "1707:     echo obj.val",
          "1708:   END",
          "1711:   # Test for no space before or after the '=' when initializing a member",
          "1712:   # variable",
          "",
          "[Removed Lines]",
          "1654:   v9.CheckSourceFailure(lines, 'E1010:')",
          "1660:         public this.val: string",
          "1664:         var obj: A",
          "1665:         obj.val = \"\"",
          "1669:   v9.CheckSourceFailure(lines, 'E1360: Using a null object')",
          "1675:         this.val: string",
          "1679:         var obj: A",
          "1680:         echo obj.val",
          "1684:   v9.CheckSourceFailure(lines, 'E1360: Using a null object')",
          "1690:         public this.val: string",
          "1697:   v9.CheckSourceFailure(lines, 'E1012: Type mismatch; expected object<A> but got string')",
          "1703:         this.val: string",
          "1709:   v9.CheckSourceFailure(lines, 'E1360: Using a null object')",
          "",
          "[Added Lines]",
          "1643:   v9.CheckSourceFailure(lines, 'E1010: Type not recognized: xxx', 3)",
          "1649:       public this.val: string",
          "1653:       var obj: A",
          "1654:       obj.val = \"\"",
          "1658:   v9.CheckSourceFailure(lines, 'E1360: Using a null object', 2)",
          "1664:       this.val: string",
          "1668:       var obj: A",
          "1669:       echo obj.val",
          "1673:   v9.CheckSourceFailure(lines, 'E1360: Using a null object', 2)",
          "1679:       public this.val: string",
          "1686:   v9.CheckSourceFailure(lines, 'E1012: Type mismatch; expected object<A> but got string', 7)",
          "1692:       this.val: string",
          "1698:   v9.CheckSourceFailure(lines, 'E1360: Using a null object', 7)",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1716:       this.val: number= 10",
          "1717:     endclass",
          "1718:   END",
          "1720:   lines =<< trim END",
          "1721:     vim9script",
          "1722:     class A",
          "1723:       this.val: number =10",
          "1724:     endclass",
          "1725:   END",
          "1728:   # Access a non-existing member",
          "1729:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "1719:   v9.CheckSourceFailure(lines, 'E1004:')",
          "1726:   v9.CheckSourceFailure(lines, 'E1004:')",
          "",
          "[Added Lines]",
          "1708:   v9.CheckSourceFailure(lines, \"E1004: White space required before and after '='\", 3)",
          "1715:   v9.CheckSourceFailure(lines, \"E1004: White space required before and after '='\", 3)",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1733:     var a = A.new()",
          "1734:     var v = a.bar",
          "1735:   END",
          "1737: enddef",
          "1739: func Test_class_garbagecollect()",
          "1740:   let lines =<< trim END",
          "1752:   END",
          "1753:   call v9.CheckSourceSuccess(lines)",
          "1755:   let lines =<< trim END",
          "1779:   END",
          "1780:   call v9.CheckSourceSuccess(lines)",
          "1781: endfunc",
          "",
          "[Removed Lines]",
          "1736:   v9.CheckSourceFailure(lines, 'E1326: Variable not found on object \"A\": bar')",
          "1741:       vim9script",
          "1743:       class Point",
          "1744:         this.p = [2, 3]",
          "1745:         static pl = ['a', 'b']",
          "1746:         static pd = {a: 'a', b: 'b'}",
          "1747:       endclass",
          "1749:       echo Point.pl Point.pd",
          "1750:       call test_garbagecollect_now()",
          "1751:       echo Point.pl Point.pd",
          "1756:       vim9script",
          "1758:       interface View",
          "1759:       endinterface",
          "1761:       class Widget",
          "1762:         this.view: View",
          "1763:       endclass",
          "1765:       class MyView implements View",
          "1766:         this.widget: Widget",
          "1768:         def new()",
          "1769:           # this will result in a circular reference to this object",
          "1770:           this.widget = Widget.new(this)",
          "1771:         enddef",
          "1772:       endclass",
          "1774:       var view = MyView.new()",
          "1776:       # overwrite \"view\", will be garbage-collected next",
          "1777:       view = MyView.new()",
          "1778:       test_garbagecollect_now()",
          "",
          "[Added Lines]",
          "1725:   v9.CheckSourceFailure(lines, 'E1326: Variable not found on object \"A\": bar', 5)",
          "1730:     vim9script",
          "1732:     class Point",
          "1733:       this.p = [2, 3]",
          "1734:       static pl = ['a', 'b']",
          "1735:       static pd = {a: 'a', b: 'b'}",
          "1736:     endclass",
          "1738:     echo Point.pl Point.pd",
          "1739:     call test_garbagecollect_now()",
          "1740:     echo Point.pl Point.pd",
          "1745:     vim9script",
          "1747:     interface View",
          "1748:     endinterface",
          "1750:     class Widget",
          "1751:       this.view: View",
          "1752:     endclass",
          "1754:     class MyView implements View",
          "1755:       this.widget: Widget",
          "1757:       def new()",
          "1758:         # this will result in a circular reference to this object",
          "1759:         this.widget = Widget.new(this)",
          "1760:       enddef",
          "1761:     endclass",
          "1763:     var view = MyView.new()",
          "1765:     # overwrite \"view\", will be garbage-collected next",
          "1766:     view = MyView.new()",
          "1767:     test_garbagecollect_now()",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1828: def Test_class_method()",
          "1829:   var lines =<< trim END",
          "1850:   END",
          "1851:   v9.CheckSourceSuccess(lines)",
          "",
          "[Removed Lines]",
          "1830:       vim9script",
          "1831:       class Value",
          "1832:         this.value = 0",
          "1833:         static objects = 0",
          "1835:         def new(v: number)",
          "1836:           this.value = v",
          "1837:           ++objects",
          "1838:         enddef",
          "1840:         static def GetCount(): number",
          "1841:           return objects",
          "1842:         enddef",
          "1843:       endclass",
          "1845:       assert_equal(0, Value.GetCount())",
          "1846:       var v1 = Value.new(2)",
          "1847:       assert_equal(1, Value.GetCount())",
          "1848:       var v2 = Value.new(7)",
          "1849:       assert_equal(2, Value.GetCount())",
          "",
          "[Added Lines]",
          "1819:     vim9script",
          "1820:     class Value",
          "1821:       this.value = 0",
          "1822:       static objects = 0",
          "1824:       def new(v: number)",
          "1825:         this.value = v",
          "1826:         ++objects",
          "1827:       enddef",
          "1829:       static def GetCount(): number",
          "1830:         return objects",
          "1831:       enddef",
          "1832:     endclass",
          "1834:     assert_equal(0, Value.GetCount())",
          "1835:     var v1 = Value.new(2)",
          "1836:     assert_equal(1, Value.GetCount())",
          "1837:     var v2 = Value.new(7)",
          "1838:     assert_equal(2, Value.GetCount())",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1860:       aaa",
          "1861:     endclass",
          "1862:   END",
          "1865:   # Test for calling a class method from another class method without the class",
          "1866:   # name prefix.",
          "",
          "[Removed Lines]",
          "1863:   v9.CheckSourceFailure(lines, 'E1318:')",
          "",
          "[Added Lines]",
          "1852:   v9.CheckSourceFailure(lines, 'E1318: Not a valid command in a class: aaa', 5)",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1889: def Test_class_defcompile()",
          "1890:   var lines =<< trim END",
          "1900:   END",
          "1903:   lines =<< trim END",
          "1913:   END",
          "1916:   lines =<< trim END",
          "1925:   END",
          "1928:   # Trying to compile a function using a non-existing class variable",
          "1929:   lines =<< trim END",
          "1930:     vim9script",
          "1931:     defcompile x.Foo()",
          "1932:   END",
          "1935:   # Trying to compile a function using a variable which is not a class",
          "1936:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "1891:       vim9script",
          "1893:       class C",
          "1894:           def Fo(i: number): string",
          "1895:               return i",
          "1896:           enddef",
          "1897:       endclass",
          "1899:       defcompile C.Fo",
          "1901:   v9.CheckSourceFailure(lines, 'E1012: Type mismatch; expected string but got number')",
          "1904:       vim9script",
          "1906:       class C",
          "1907:           static def Fc(): number",
          "1908:             return 'x'",
          "1909:           enddef",
          "1910:       endclass",
          "1912:       defcompile C.Fc",
          "1914:   v9.CheckSourceFailure(lines, 'E1012: Type mismatch; expected number but got string')",
          "1917:       vim9script",
          "1919:       class C",
          "1920:           static def new()",
          "1921:           enddef",
          "1922:       endclass",
          "1924:       defcompile C.new",
          "1926:   v9.CheckSourceFailure(lines, 'E1370: Cannot define a \"new\" method as static')",
          "1933:   v9.CheckSourceFailure(lines, 'E475:')",
          "",
          "[Added Lines]",
          "1880:     vim9script",
          "1882:     class C",
          "1883:       def Fo(i: number): string",
          "1884:         return i",
          "1885:       enddef",
          "1886:     endclass",
          "1888:     defcompile C.Fo",
          "1890:   v9.CheckSourceFailure(lines, 'E1012: Type mismatch; expected string but got number', 1)",
          "1893:     vim9script",
          "1895:     class C",
          "1896:       static def Fc(): number",
          "1897:         return 'x'",
          "1898:       enddef",
          "1899:     endclass",
          "1901:     defcompile C.Fc",
          "1903:   v9.CheckSourceFailure(lines, 'E1012: Type mismatch; expected number but got string', 1)",
          "1906:     vim9script",
          "1908:     class C",
          "1909:       static def new()",
          "1910:       enddef",
          "1911:     endclass",
          "1913:     defcompile C.new",
          "1915:   v9.CheckSourceFailure(lines, 'E1370: Cannot define a \"new\" method as static', 5)",
          "1922:   v9.CheckSourceFailure(lines, 'E475: Invalid argument: x.Foo()', 2)",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1938:     var x: number",
          "1939:     defcompile x.Foo()",
          "1940:   END",
          "1943:   # Trying to compile a function without specifying the name",
          "1944:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "1941:   v9.CheckSourceFailure(lines, 'E475:')",
          "",
          "[Added Lines]",
          "1930:   v9.CheckSourceFailure(lines, 'E475: Invalid argument: x.Foo()', 3)",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1947:     endclass",
          "1948:     defcompile A.",
          "1949:   END",
          "1952:   # Trying to compile a non-existing class object member function",
          "1953:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "1950:   v9.CheckSourceFailure(lines, 'E475:')",
          "",
          "[Added Lines]",
          "1939:   v9.CheckSourceFailure(lines, 'E475: Invalid argument: A.', 4)",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1957:     var a = A.new()",
          "1958:     defcompile a.Foo()",
          "1959:   END",
          "1961: enddef",
          "1963: def Test_class_object_to_string()",
          "1964:   var lines =<< trim END",
          "1975:   END",
          "1976:   v9.CheckSourceSuccess(lines)",
          "1977: enddef",
          "1979: def Test_interface_basics()",
          "1980:   var lines =<< trim END",
          "1986:   END",
          "1987:   v9.CheckSourceSuccess(lines)",
          "1989:   lines =<< trim END",
          "1993:   END",
          "1996:   lines =<< trim END",
          "2003:   END",
          "2004:   # The argument name and the object member name are the same, but this is not a",
          "2005:   # problem because object members are always accessed with the \"this.\" prefix.",
          "2006:   v9.CheckSourceSuccess(lines)",
          "2008:   lines =<< trim END",
          "2013:   END",
          "2016:   lines =<< trim END",
          "2023:   END",
          "2026:   lines =<< trim END",
          "2035:   END",
          "2038:   lines =<< trim END",
          "2044:   END",
          "2045:   writefile(lines, 'XdefIntf.vim', 'D')",
          "2047:   lines =<< trim END",
          "2058:   END",
          "2059:   v9.CheckScriptSuccess(lines)",
          "2061:   var imported =<< trim END",
          "2069:   END",
          "2070:   writefile(imported, 'XdefIntf2.vim', 'D')",
          "",
          "[Removed Lines]",
          "1960:   v9.CheckSourceFailureList(lines, ['E1326:', 'E475:'])",
          "1965:       vim9script",
          "1966:       class TextPosition",
          "1967:         this.lnum = 1",
          "1968:         this.col = 22",
          "1969:       endclass",
          "1971:       assert_equal(\"class TextPosition\", string(TextPosition))",
          "1973:       var pos = TextPosition.new()",
          "1974:       assert_equal(\"object of TextPosition {lnum: 1, col: 22}\", string(pos))",
          "1981:       vim9script",
          "1982:       interface Something",
          "1983:         this.ro_var: list<number>",
          "1984:         def GetCount(): number",
          "1985:       endinterface",
          "1990:       interface SomethingWrong",
          "1991:         static count = 7",
          "1992:       endinterface",
          "1994:   v9.CheckSourceFailure(lines, 'E1342:')",
          "1997:       vim9script",
          "1999:       interface Some",
          "2000:         this.value: number",
          "2001:         def Method(value: number)",
          "2002:       endinterface",
          "2009:       vim9script",
          "2010:       interface somethingWrong",
          "2011:         static count = 7",
          "2012:       endinterface",
          "2014:   v9.CheckSourceFailure(lines, 'E1343: Interface name must start with an uppercase letter: somethingWrong')",
          "2017:       vim9script",
          "2018:       interface SomethingWrong",
          "2019:         this.value: string",
          "2020:         this.count = 7",
          "2021:         def GetCount(): number",
          "2022:       endinterface",
          "2024:   v9.CheckSourceFailure(lines, 'E1344:')",
          "2027:       vim9script",
          "2028:       interface SomethingWrong",
          "2029:         this.value: string",
          "2030:         this.count: number",
          "2031:         def GetCount(): number",
          "2032:           return 5",
          "2033:         enddef",
          "2034:       endinterface",
          "2036:   v9.CheckSourceFailure(lines, 'E1345: Not a valid command in an interface: return 5')",
          "2039:       vim9script",
          "2040:       export interface EnterExit",
          "2041:           def Enter(): void",
          "2042:           def Exit(): void",
          "2043:       endinterface",
          "2048:       vim9script",
          "2049:       import './XdefIntf.vim' as defIntf",
          "2050:       export def With(ee: defIntf.EnterExit, F: func)",
          "2051:           ee.Enter()",
          "2052:           try",
          "2053:               F()",
          "2054:           finally",
          "2055:               ee.Exit()",
          "2056:           endtry",
          "2057:       enddef",
          "2062:       vim9script",
          "2063:       export abstract class EnterExit",
          "2064:           def Enter(): void",
          "2065:           enddef",
          "2066:           def Exit(): void",
          "2067:           enddef",
          "2068:       endclass",
          "",
          "[Added Lines]",
          "1949:   v9.CheckSourceFailureList(lines, ['E1326: Variable not found on object \"A\": Foo', 'E475: Invalid argument: a.Foo()'])",
          "1954:     vim9script",
          "1955:     class TextPosition",
          "1956:       this.lnum = 1",
          "1957:       this.col = 22",
          "1958:     endclass",
          "1960:     assert_equal(\"class TextPosition\", string(TextPosition))",
          "1962:     var pos = TextPosition.new()",
          "1963:     assert_equal(\"object of TextPosition {lnum: 1, col: 22}\", string(pos))",
          "1970:     vim9script",
          "1971:     interface Something",
          "1972:       this.ro_var: list<number>",
          "1973:       def GetCount(): number",
          "1974:     endinterface",
          "1979:     interface SomethingWrong",
          "1980:       static count = 7",
          "1981:     endinterface",
          "1983:   v9.CheckSourceFailure(lines, 'E1342: Interface can only be defined in Vim9 script', 1)",
          "1986:     vim9script",
          "1988:     interface Some",
          "1989:       this.value: number",
          "1990:       def Method(value: number)",
          "1991:     endinterface",
          "1998:     vim9script",
          "1999:     interface somethingWrong",
          "2000:       static count = 7",
          "2001:     endinterface",
          "2003:   v9.CheckSourceFailure(lines, 'E1343: Interface name must start with an uppercase letter: somethingWrong', 2)",
          "2006:     vim9script",
          "2007:     interface SomethingWrong",
          "2008:       this.value: string",
          "2009:       this.count = 7",
          "2010:       def GetCount(): number",
          "2011:     endinterface",
          "2013:   v9.CheckSourceFailure(lines, 'E1344: Cannot initialize a variable in an interface', 4)",
          "2016:     vim9script",
          "2017:     interface SomethingWrong",
          "2018:       this.value: string",
          "2019:       this.count: number",
          "2020:       def GetCount(): number",
          "2021:         return 5",
          "2022:       enddef",
          "2023:     endinterface",
          "2025:   v9.CheckSourceFailure(lines, 'E1345: Not a valid command in an interface: return 5', 6)",
          "2028:     vim9script",
          "2029:     export interface EnterExit",
          "2030:       def Enter(): void",
          "2031:       def Exit(): void",
          "2032:     endinterface",
          "2037:     vim9script",
          "2038:     import './XdefIntf.vim' as defIntf",
          "2039:     export def With(ee: defIntf.EnterExit, F: func)",
          "2040:       ee.Enter()",
          "2041:       try",
          "2042:         F()",
          "2043:       finally",
          "2044:         ee.Exit()",
          "2045:       endtry",
          "2046:     enddef",
          "2051:     vim9script",
          "2052:     export abstract class EnterExit",
          "2053:       def Enter(): void",
          "2054:       enddef",
          "2055:       def Exit(): void",
          "2056:       enddef",
          "2057:     endclass",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "2076: def Test_class_implements_interface()",
          "2077:   var lines =<< trim END",
          "2103:   END",
          "2104:   v9.CheckSourceSuccess(lines)",
          "2106:   lines =<< trim END",
          "2116:   END",
          "2119:   lines =<< trim END",
          "2129:   END",
          "2132:   lines =<< trim END",
          "2146:   END",
          "2149:   lines =<< trim END",
          "2163:   END",
          "2166:   # Check different order of members in class and interface works.",
          "2167:   lines =<< trim END",
          "2170:       interface Result",
          "2171:         this.label: string",
          "",
          "[Removed Lines]",
          "2078:       vim9script",
          "2080:       interface Some",
          "2081:         this.count: number",
          "2082:         def Method(nr: number)",
          "2083:       endinterface",
          "2085:       class SomeImpl implements Some",
          "2086:         this.count: number",
          "2087:         def Method(nr: number)",
          "2088:           echo nr",
          "2089:         enddef",
          "2090:       endclass",
          "2092:       interface Another",
          "2093:         this.member: string",
          "2094:       endinterface",
          "2096:       class AnotherImpl implements Some, Another",
          "2097:         this.member = 'abc'",
          "2098:         this.count = 20",
          "2099:         def Method(nr: number)",
          "2100:           echo nr",
          "2101:         enddef",
          "2102:       endclass",
          "2107:       vim9script",
          "2109:       interface Some",
          "2110:         this.count: number",
          "2111:       endinterface",
          "2113:       class SomeImpl implements Some implements Some",
          "2114:         this.count: number",
          "2115:       endclass",
          "2117:   v9.CheckSourceFailure(lines, 'E1350:')",
          "2120:       vim9script",
          "2122:       interface Some",
          "2123:         this.count: number",
          "2124:       endinterface",
          "2126:       class SomeImpl implements Some, Some",
          "2127:         this.count: number",
          "2128:       endclass",
          "2130:   v9.CheckSourceFailure(lines, 'E1351: Duplicate interface after \"implements\": Some')",
          "2133:       vim9script",
          "2135:       interface Some",
          "2136:         this.counter: number",
          "2137:         def Method(nr: number)",
          "2138:       endinterface",
          "2140:       class SomeImpl implements Some",
          "2141:         this.count: number",
          "2142:         def Method(nr: number)",
          "2143:           echo nr",
          "2144:         enddef",
          "2145:       endclass",
          "2147:   v9.CheckSourceFailure(lines, 'E1348: Variable \"counter\" of interface \"Some\" is not implemented')",
          "2150:       vim9script",
          "2152:       interface Some",
          "2153:         this.count: number",
          "2154:         def Methods(nr: number)",
          "2155:       endinterface",
          "2157:       class SomeImpl implements Some",
          "2158:         this.count: number",
          "2159:         def Method(nr: number)",
          "2160:           echo nr",
          "2161:         enddef",
          "2162:       endclass",
          "2164:   v9.CheckSourceFailure(lines, 'E1349: Method \"Methods\" of interface \"Some\" is not implemented')",
          "2168:       vim9script",
          "",
          "[Added Lines]",
          "2067:     vim9script",
          "2069:     interface Some",
          "2070:       this.count: number",
          "2071:       def Method(nr: number)",
          "2072:     endinterface",
          "2074:     class SomeImpl implements Some",
          "2075:       this.count: number",
          "2076:       def Method(nr: number)",
          "2077:         echo nr",
          "2078:       enddef",
          "2079:     endclass",
          "2081:     interface Another",
          "2082:       this.member: string",
          "2083:     endinterface",
          "2085:     class AnotherImpl implements Some, Another",
          "2086:       this.member = 'abc'",
          "2087:       this.count = 20",
          "2088:       def Method(nr: number)",
          "2089:         echo nr",
          "2090:       enddef",
          "2091:     endclass",
          "2096:     vim9script",
          "2098:     interface Some",
          "2099:       this.count: number",
          "2100:     endinterface",
          "2102:     class SomeImpl implements Some implements Some",
          "2103:       this.count: number",
          "2104:     endclass",
          "2106:   v9.CheckSourceFailure(lines, 'E1350: Duplicate \"implements\"', 7)",
          "2109:     vim9script",
          "2111:     interface Some",
          "2112:       this.count: number",
          "2113:     endinterface",
          "2115:     class SomeImpl implements Some, Some",
          "2116:       this.count: number",
          "2117:     endclass",
          "2119:   v9.CheckSourceFailure(lines, 'E1351: Duplicate interface after \"implements\": Some', 7)",
          "2122:     vim9script",
          "2124:     interface Some",
          "2125:       this.counter: number",
          "2126:       def Method(nr: number)",
          "2127:     endinterface",
          "2129:     class SomeImpl implements Some",
          "2130:       this.count: number",
          "2131:       def Method(nr: number)",
          "2132:         echo nr",
          "2133:       enddef",
          "2134:     endclass",
          "2136:   v9.CheckSourceFailure(lines, 'E1348: Variable \"counter\" of interface \"Some\" is not implemented', 13)",
          "2139:     vim9script",
          "2141:     interface Some",
          "2142:       this.count: number",
          "2143:       def Methods(nr: number)",
          "2144:     endinterface",
          "2146:     class SomeImpl implements Some",
          "2147:       this.count: number",
          "2148:       def Method(nr: number)",
          "2149:         echo nr",
          "2150:       enddef",
          "2151:     endclass",
          "2153:   v9.CheckSourceFailure(lines, 'E1349: Method \"Methods\" of interface \"Some\" is not implemented', 13)",
          "2157:     vim9script",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "2179:         this.label: string = 'label'",
          "2180:       endclass",
          "2185:         assert_equal('label', result.label)",
          "2186:         assert_equal(42, result.errpos)",
          "2187:       enddef",
          "2190:   END",
          "2191:   v9.CheckSourceSuccess(lines)",
          "",
          "[Removed Lines]",
          "2182:       def Test()",
          "2183:         var result: Result = Failure.new()",
          "2189:       Test()",
          "",
          "[Added Lines]",
          "2171:     def Test()",
          "2172:       var result: Result = Failure.new()",
          "2178:     Test()",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "2198:     class B extends A\"",
          "2199:     endclass",
          "2200:   END",
          "2203:   # Trailing characters after a class name",
          "2204:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "2201:   v9.CheckSourceFailure(lines, 'E1315:')",
          "",
          "[Added Lines]",
          "2190:   v9.CheckSourceFailure(lines, 'E1315: White space required after name: A\"', 4)",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "2206:     class A bbb",
          "2207:     endclass",
          "2208:   END",
          "2211:   # using \"implements\" with a non-existing class",
          "2212:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "2209:   v9.CheckSourceFailure(lines, 'E488:')",
          "",
          "[Added Lines]",
          "2198:   v9.CheckSourceFailure(lines, 'E488: Trailing characters: bbb', 2)",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "2214:     class A implements B",
          "2215:     endclass",
          "2216:   END",
          "2219:   # using \"implements\" with a regular class",
          "2220:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "2217:   v9.CheckSourceFailure(lines, 'E1346:')",
          "",
          "[Added Lines]",
          "2206:   v9.CheckSourceFailure(lines, 'E1346: Interface name not found: B', 3)",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "2224:     class B implements A",
          "2225:     endclass",
          "2226:   END",
          "2229:   # using \"implements\" with a variable",
          "2230:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "2227:   v9.CheckSourceFailure(lines, 'E1347:')",
          "",
          "[Added Lines]",
          "2216:   v9.CheckSourceFailure(lines, 'E1347: Not a valid interface: A', 5)",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "2233:     class A implements T",
          "2234:     endclass",
          "2235:   END",
          "2238:   # implements should be followed by a white space",
          "2239:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "2236:   v9.CheckSourceFailure(lines, 'E1347:')",
          "",
          "[Added Lines]",
          "2225:   v9.CheckSourceFailure(lines, 'E1347: Not a valid interface: T', 4)",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "2243:     class B implements A;",
          "2244:     endclass",
          "2245:   END",
          "2248:   lines =<< trim END",
          "2258:   END",
          "2261:   lines =<< trim END",
          "2271:   END",
          "2274:   lines =<< trim END",
          "2284:   END",
          "2287:   # access superclass interface members from subclass, mix variable order",
          "2288:   lines =<< trim END",
          "2289:     vim9script",
          "2291:     interface I1",
          "2294:     endinterface",
          "2296:     # NOTE: the order is swapped",
          "2297:     class A implements I1",
          "2308:     endclass",
          "2310:     class B extends A",
          "2315:     endclass",
          "2317:     class C extends B",
          "2322:     endclass",
          "2324:     def F2(i: I1): list<number>",
          "2326:     enddef",
          "2328:     var oa = A.new()",
          "",
          "[Removed Lines]",
          "2246:   v9.CheckSourceFailure(lines, 'E1315:')",
          "2249:       vim9script",
          "2251:       interface One",
          "2252:         def IsEven(nr: number): bool",
          "2253:       endinterface",
          "2254:       class Two implements One",
          "2255:         def IsEven(nr: number): string",
          "2256:         enddef",
          "2257:       endclass",
          "2259:   v9.CheckSourceFailure(lines, 'E1383: Method \"IsEven\": type mismatch, expected func(number): bool but got func(number): string')",
          "2262:       vim9script",
          "2264:       interface One",
          "2265:         def IsEven(nr: number): bool",
          "2266:       endinterface",
          "2267:       class Two implements One",
          "2268:         def IsEven(nr: bool): bool",
          "2269:         enddef",
          "2270:       endclass",
          "2272:   v9.CheckSourceFailure(lines, 'E1383: Method \"IsEven\": type mismatch, expected func(number): bool but got func(bool): bool')",
          "2275:       vim9script",
          "2277:       interface One",
          "2278:         def IsEven(nr: number): bool",
          "2279:       endinterface",
          "2280:       class Two implements One",
          "2281:         def IsEven(nr: number, ...extra: list<number>): bool",
          "2282:         enddef",
          "2283:       endclass",
          "2285:   v9.CheckSourceFailure(lines, 'E1383: Method \"IsEven\": type mismatch, expected func(number): bool but got func(number, ...list<number>): bool')",
          "2292:         this.mvar1: number",
          "2293:         this.mvar2: number",
          "2298:         this.mvar2: number",
          "2299:         this.mvar1: number",
          "2300:         public static svar2: number",
          "2301:         public static svar1: number",
          "2302:         def new()",
          "2303:             svar1 = 11",
          "2304:             svar2 = 12",
          "2305:             this.mvar1 = 111",
          "2306:             this.mvar2 = 112",
          "2307:         enddef",
          "2311:         def new()",
          "2312:             this.mvar1 = 121",
          "2313:             this.mvar2 = 122",
          "2314:         enddef",
          "2318:         def new()",
          "2319:             this.mvar1 = 131",
          "2320:             this.mvar2 = 132",
          "2321:         enddef",
          "2325:         return [ i.mvar1, i.mvar2 ]",
          "",
          "[Added Lines]",
          "2235:   v9.CheckSourceFailure(lines, 'E1315: White space required after name: A;', 4)",
          "2238:     vim9script",
          "2240:     interface One",
          "2241:       def IsEven(nr: number): bool",
          "2242:     endinterface",
          "2243:     class Two implements One",
          "2244:       def IsEven(nr: number): string",
          "2245:       enddef",
          "2246:     endclass",
          "2248:   v9.CheckSourceFailure(lines, 'E1383: Method \"IsEven\": type mismatch, expected func(number): bool but got func(number): string', 9)",
          "2251:     vim9script",
          "2253:     interface One",
          "2254:       def IsEven(nr: number): bool",
          "2255:     endinterface",
          "2256:     class Two implements One",
          "2257:       def IsEven(nr: bool): bool",
          "2258:       enddef",
          "2259:     endclass",
          "2261:   v9.CheckSourceFailure(lines, 'E1383: Method \"IsEven\": type mismatch, expected func(number): bool but got func(bool): bool', 9)",
          "2264:     vim9script",
          "2266:     interface One",
          "2267:       def IsEven(nr: number): bool",
          "2268:     endinterface",
          "2269:     class Two implements One",
          "2270:       def IsEven(nr: number, ...extra: list<number>): bool",
          "2271:       enddef",
          "2272:     endclass",
          "2274:   v9.CheckSourceFailure(lines, 'E1383: Method \"IsEven\": type mismatch, expected func(number): bool but got func(number, ...list<number>): bool', 9)",
          "2281:       this.mvar1: number",
          "2282:       this.mvar2: number",
          "2287:       this.mvar2: number",
          "2288:       this.mvar1: number",
          "2289:       public static svar2: number",
          "2290:       public static svar1: number",
          "2291:       def new()",
          "2292:         svar1 = 11",
          "2293:         svar2 = 12",
          "2294:         this.mvar1 = 111",
          "2295:         this.mvar2 = 112",
          "2296:       enddef",
          "2300:       def new()",
          "2301:         this.mvar1 = 121",
          "2302:         this.mvar2 = 122",
          "2303:       enddef",
          "2307:       def new()",
          "2308:         this.mvar1 = 131",
          "2309:         this.mvar2 = 132",
          "2310:       enddef",
          "2314:       return [ i.mvar1, i.mvar2 ]",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "2341:     vim9script",
          "2343:     interface I1",
          "2346:     endinterface",
          "2348:     interface I2",
          "2351:     endinterface",
          "2353:     class A implements I1",
          "2364:     endclass",
          "2366:     class B extends A implements I2",
          "2379:     endclass",
          "2381:     class C extends B",
          "2390:     endclass",
          "2392:     def F2(i: I1): list<number>",
          "2394:     enddef",
          "2396:     def F4(i: I2): list<number>",
          "2398:     enddef",
          "2400:     var oa = A.new()",
          "",
          "[Removed Lines]",
          "2344:         this.mvar1: number",
          "2345:         this.mvar2: number",
          "2349:         this.mvar3: number",
          "2350:         this.mvar4: number",
          "2354:         public static svar1: number",
          "2355:         public static svar2: number",
          "2356:         this.mvar1: number",
          "2357:         this.mvar2: number",
          "2358:         def new()",
          "2359:             svar1 = 11",
          "2360:             svar2 = 12",
          "2361:             this.mvar1 = 111",
          "2362:             this.mvar2 = 112",
          "2363:         enddef",
          "2367:         static svar3: number",
          "2368:         static svar4: number",
          "2369:         this.mvar3: number",
          "2370:         this.mvar4: number",
          "2371:         def new()",
          "2372:             svar3 = 23",
          "2373:             svar4 = 24",
          "2374:             this.mvar1 = 121",
          "2375:             this.mvar2 = 122",
          "2376:             this.mvar3 = 123",
          "2377:             this.mvar4 = 124",
          "2378:         enddef",
          "2382:         public static svar5: number",
          "2383:         def new()",
          "2384:             svar5 = 1001",
          "2385:             this.mvar1 = 131",
          "2386:             this.mvar2 = 132",
          "2387:             this.mvar3 = 133",
          "2388:             this.mvar4 = 134",
          "2389:         enddef",
          "2393:         return [ i.mvar1, i.mvar2 ]",
          "2397:         return [ i.mvar3, i.mvar4 ]",
          "",
          "[Added Lines]",
          "2333:       this.mvar1: number",
          "2334:       this.mvar2: number",
          "2338:       this.mvar3: number",
          "2339:       this.mvar4: number",
          "2343:       public static svar1: number",
          "2344:       public static svar2: number",
          "2345:       this.mvar1: number",
          "2346:       this.mvar2: number",
          "2347:       def new()",
          "2348:         svar1 = 11",
          "2349:         svar2 = 12",
          "2350:         this.mvar1 = 111",
          "2351:         this.mvar2 = 112",
          "2352:       enddef",
          "2356:       static svar3: number",
          "2357:       static svar4: number",
          "2358:       this.mvar3: number",
          "2359:       this.mvar4: number",
          "2360:       def new()",
          "2361:         svar3 = 23",
          "2362:         svar4 = 24",
          "2363:         this.mvar1 = 121",
          "2364:         this.mvar2 = 122",
          "2365:         this.mvar3 = 123",
          "2366:         this.mvar4 = 124",
          "2367:       enddef",
          "2371:       public static svar5: number",
          "2372:       def new()",
          "2373:         svar5 = 1001",
          "2374:         this.mvar1 = 131",
          "2375:         this.mvar2 = 132",
          "2376:         this.mvar3 = 133",
          "2377:         this.mvar4 = 134",
          "2378:       enddef",
          "2382:       return [ i.mvar1, i.mvar2 ]",
          "2386:       return [ i.mvar3, i.mvar4 ]",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "2543:   # No class that implements the interface.",
          "2544:   lines =<< trim END",
          "2557:   END",
          "2558:   v9.CheckSourceSuccess(lines)",
          "2559: enddef",
          "2561: def Test_class_used_as_type()",
          "2562:   var lines =<< trim END",
          "2574:   END",
          "2575:   v9.CheckSourceSuccess(lines)",
          "2577:   lines =<< trim END",
          "2593:   END",
          "2594:   v9.CheckSourceSuccess(lines)",
          "2596:   lines =<< trim END",
          "2606:   END",
          "2608: enddef",
          "2610: def Test_class_extends()",
          "2611:   var lines =<< trim END",
          "2630:   END",
          "2631:   v9.CheckSourceSuccess(lines)",
          "2633:   lines =<< trim END",
          "2644:   END",
          "2645:   v9.CheckSourceSuccess(lines)",
          "2647:   lines =<< trim END",
          "2655:   END",
          "2658:   lines =<< trim END",
          "2663:   END",
          "2666:   lines =<< trim END",
          "2672:   END",
          "2675:   lines =<< trim END",
          "2693:   END",
          "2694:   v9.CheckSourceSuccess(lines)",
          "2696:   lines =<< trim END",
          "2707:   END",
          "2710:   lines =<< trim END",
          "2720:   END",
          "2723:   lines =<< trim END",
          "2733:       def ToString(): string",
          "2735:       enddef",
          "2737:   END",
          "2740:   lines =<< trim END",
          "2750:   END",
          "2753:   lines =<< trim END",
          "2771:   END",
          "2772:   v9.CheckSourceSuccess(lines)",
          "2774:   lines =<< trim END",
          "2788:   END",
          "2791:   # base class with more than one object member",
          "2792:   lines =<< trim END",
          "2808:   END",
          "2809:   v9.CheckSourceSuccess(lines)",
          "",
          "[Removed Lines]",
          "2545:       vim9script",
          "2547:       interface IWithEE",
          "2548:           def Enter(): any",
          "2549:           def Exit(): void",
          "2550:       endinterface",
          "2552:       def With1(ee: IWithEE, F: func)",
          "2553:           var r = ee.Enter()",
          "2554:       enddef",
          "2556:       defcompile",
          "2563:       vim9script",
          "2565:       class Point",
          "2566:         this.x = 0",
          "2567:         this.y = 0",
          "2568:       endclass",
          "2570:       var p: Point",
          "2571:       p = Point.new(2, 33)",
          "2572:       assert_equal(2, p.x)",
          "2573:       assert_equal(33, p.y)",
          "2578:       vim9script",
          "2580:       interface HasX",
          "2581:         this.x: number",
          "2582:       endinterface",
          "2584:       class Point implements HasX",
          "2585:         this.x = 0",
          "2586:         this.y = 0",
          "2587:       endclass",
          "2589:       var p: Point",
          "2590:       p = Point.new(2, 33)",
          "2591:       var hx = p",
          "2592:       assert_equal(2, hx.x)",
          "2597:       vim9script",
          "2599:       class Point",
          "2600:         this.x = 0",
          "2601:         this.y = 0",
          "2602:       endclass",
          "2604:       var p: Point",
          "2605:       p = 'text'",
          "2607:   v9.CheckSourceFailure(lines, 'E1012: Type mismatch; expected object<Point> but got string')",
          "2612:       vim9script",
          "2613:       class Base",
          "2614:         this.one = 1",
          "2615:         def GetOne(): number",
          "2616:           return this.one",
          "2617:         enddef",
          "2618:       endclass",
          "2619:       class Child extends Base",
          "2620:         this.two = 2",
          "2621:         def GetTotal(): number",
          "2622:           return this.one + this.two",
          "2623:         enddef",
          "2624:       endclass",
          "2625:       var o = Child.new()",
          "2626:       assert_equal(1, o.one)",
          "2627:       assert_equal(2, o.two)",
          "2628:       assert_equal(1, o.GetOne())",
          "2629:       assert_equal(3, o.GetTotal())",
          "2634:       vim9script",
          "2635:       class Base",
          "2636:         this.one = 1",
          "2637:       endclass",
          "2638:       class Child extends Base",
          "2639:         this.two = 2",
          "2640:       endclass",
          "2641:       var o = Child.new(3, 44)",
          "2642:       assert_equal(3, o.one)",
          "2643:       assert_equal(44, o.two)",
          "2648:       vim9script",
          "2649:       class Base",
          "2650:         this.one = 1",
          "2651:       endclass",
          "2652:       class Child extends Base extends Base",
          "2653:         this.two = 2",
          "2654:       endclass",
          "2656:   v9.CheckSourceFailure(lines, 'E1352: Duplicate \"extends\"')",
          "2659:       vim9script",
          "2660:       class Child extends BaseClass",
          "2661:         this.two = 2",
          "2662:       endclass",
          "2664:   v9.CheckSourceFailure(lines, 'E1353: Class name not found: BaseClass')",
          "2667:       vim9script",
          "2668:       var SomeVar = 99",
          "2669:       class Child extends SomeVar",
          "2670:         this.two = 2",
          "2671:       endclass",
          "2673:   v9.CheckSourceFailure(lines, 'E1354: Cannot extend SomeVar')",
          "2676:       vim9script",
          "2677:       class Base",
          "2678:         this.name: string",
          "2679:         def ToString(): string",
          "2680:           return this.name",
          "2681:         enddef",
          "2682:       endclass",
          "2684:       class Child extends Base",
          "2685:         this.age: number",
          "2686:         def ToString(): string",
          "2687:           return super.ToString() .. ': ' .. this.age",
          "2688:         enddef",
          "2689:       endclass",
          "2691:       var o = Child.new('John', 42)",
          "2692:       assert_equal('John: 42', o.ToString())",
          "2697:       vim9script",
          "2698:       class Child",
          "2699:         this.age: number",
          "2700:         def ToString(): number",
          "2701:           return this.age",
          "2702:         enddef",
          "2703:         def ToString(): string",
          "2704:           return this.age",
          "2705:         enddef",
          "2706:       endclass",
          "2708:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: ToString')",
          "2711:       vim9script",
          "2712:       class Child",
          "2713:         this.age: number",
          "2714:         def ToString(): string",
          "2715:           return super .ToString() .. ': ' .. this.age",
          "2716:         enddef",
          "2717:       endclass",
          "2718:       var o = Child.new(42)",
          "2719:       echo o.ToString()",
          "2721:   v9.CheckSourceFailure(lines, 'E1356:')",
          "2724:       vim9script",
          "2725:       class Base",
          "2726:         this.name: string",
          "2727:         def ToString(): string",
          "2728:           return this.name",
          "2729:         enddef",
          "2730:       endclass",
          "2732:       var age = 42",
          "2734:         return super.ToString() .. ': ' .. age",
          "2736:       echo ToString()",
          "2738:   v9.CheckSourceFailure(lines, 'E1357:')",
          "2741:       vim9script",
          "2742:       class Child",
          "2743:         this.age: number",
          "2744:         def ToString(): string",
          "2745:           return super.ToString() .. ': ' .. this.age",
          "2746:         enddef",
          "2747:       endclass",
          "2748:       var o = Child.new(42)",
          "2749:       echo o.ToString()",
          "2751:   v9.CheckSourceFailure(lines, 'E1358:')",
          "2754:       vim9script",
          "2755:       class Base",
          "2756:         this.name: string",
          "2757:         static def ToString(): string",
          "2758:           return 'Base class'",
          "2759:         enddef",
          "2760:       endclass",
          "2762:       class Child extends Base",
          "2763:         this.age: number",
          "2764:         def ToString(): string",
          "2765:           return Base.ToString() .. ': ' .. this.age",
          "2766:         enddef",
          "2767:       endclass",
          "2769:       var o = Child.new('John', 42)",
          "2770:       assert_equal('Base class: 42', o.ToString())",
          "2775:       vim9script",
          "2776:       class Base",
          "2777:         this.value = 1",
          "2778:         def new(init: number)",
          "2779:           this.value = number + 1",
          "2780:         enddef",
          "2781:       endclass",
          "2782:       class Child extends Base",
          "2783:         def new()",
          "2784:           this.new(3)",
          "2785:         enddef",
          "2786:       endclass",
          "2787:       var c = Child.new()",
          "2789:   v9.CheckSourceFailure(lines, 'E1385: Class method \"new\" accessible only using class \"Child\"')",
          "2793:       vim9script",
          "2795:       class Result",
          "2796:         this.success: bool",
          "2797:         this.value: any = null",
          "2798:       endclass",
          "2800:       class Success extends Result",
          "2801:         def new(this.value = v:none)",
          "2802:           this.success = true",
          "2803:         enddef",
          "2804:       endclass",
          "2806:       var v = Success.new('asdf')",
          "2807:       assert_equal(\"object of Success {success: true, value: 'asdf'}\", string(v))",
          "",
          "[Added Lines]",
          "2534:     vim9script",
          "2536:     interface IWithEE",
          "2537:       def Enter(): any",
          "2538:       def Exit(): void",
          "2539:     endinterface",
          "2541:     def With1(ee: IWithEE, F: func)",
          "2542:       var r = ee.Enter()",
          "2543:     enddef",
          "2545:     defcompile",
          "2552:     vim9script",
          "2554:     class Point",
          "2555:       this.x = 0",
          "2556:       this.y = 0",
          "2557:     endclass",
          "2559:     var p: Point",
          "2560:     p = Point.new(2, 33)",
          "2561:     assert_equal(2, p.x)",
          "2562:     assert_equal(33, p.y)",
          "2567:     vim9script",
          "2569:     interface HasX",
          "2570:       this.x: number",
          "2571:     endinterface",
          "2573:     class Point implements HasX",
          "2574:       this.x = 0",
          "2575:       this.y = 0",
          "2576:     endclass",
          "2578:     var p: Point",
          "2579:     p = Point.new(2, 33)",
          "2580:     var hx = p",
          "2581:     assert_equal(2, hx.x)",
          "2586:     vim9script",
          "2588:     class Point",
          "2589:       this.x = 0",
          "2590:       this.y = 0",
          "2591:     endclass",
          "2593:     var p: Point",
          "2594:     p = 'text'",
          "2596:   v9.CheckSourceFailure(lines, 'E1012: Type mismatch; expected object<Point> but got string', 9)",
          "2601:     vim9script",
          "2602:     class Base",
          "2603:       this.one = 1",
          "2604:       def GetOne(): number",
          "2605:         return this.one",
          "2606:       enddef",
          "2607:     endclass",
          "2608:     class Child extends Base",
          "2609:       this.two = 2",
          "2610:       def GetTotal(): number",
          "2611:         return this.one + this.two",
          "2612:       enddef",
          "2613:     endclass",
          "2614:     var o = Child.new()",
          "2615:     assert_equal(1, o.one)",
          "2616:     assert_equal(2, o.two)",
          "2617:     assert_equal(1, o.GetOne())",
          "2618:     assert_equal(3, o.GetTotal())",
          "2623:     vim9script",
          "2624:     class Base",
          "2625:       this.one = 1",
          "2626:     endclass",
          "2627:     class Child extends Base",
          "2628:       this.two = 2",
          "2629:     endclass",
          "2630:     var o = Child.new(3, 44)",
          "2631:     assert_equal(3, o.one)",
          "2632:     assert_equal(44, o.two)",
          "2637:     vim9script",
          "2638:     class Base",
          "2639:       this.one = 1",
          "2640:     endclass",
          "2641:     class Child extends Base extends Base",
          "2642:       this.two = 2",
          "2643:     endclass",
          "2645:   v9.CheckSourceFailure(lines, 'E1352: Duplicate \"extends\"', 5)",
          "2648:     vim9script",
          "2649:     class Child extends BaseClass",
          "2650:       this.two = 2",
          "2651:     endclass",
          "2653:   v9.CheckSourceFailure(lines, 'E1353: Class name not found: BaseClass', 4)",
          "2656:     vim9script",
          "2657:     var SomeVar = 99",
          "2658:     class Child extends SomeVar",
          "2659:       this.two = 2",
          "2660:     endclass",
          "2662:   v9.CheckSourceFailure(lines, 'E1354: Cannot extend SomeVar', 5)",
          "2665:     vim9script",
          "2666:     class Base",
          "2667:       this.name: string",
          "2668:       def ToString(): string",
          "2669:         return this.name",
          "2670:       enddef",
          "2671:     endclass",
          "2673:     class Child extends Base",
          "2674:       this.age: number",
          "2675:       def ToString(): string",
          "2676:         return super.ToString() .. ': ' .. this.age",
          "2677:       enddef",
          "2678:     endclass",
          "2680:     var o = Child.new('John', 42)",
          "2681:     assert_equal('John: 42', o.ToString())",
          "2686:     vim9script",
          "2687:     class Child",
          "2688:       this.age: number",
          "2689:       def ToString(): number",
          "2690:         return this.age",
          "2691:       enddef",
          "2692:       def ToString(): string",
          "2693:         return this.age",
          "2694:       enddef",
          "2695:     endclass",
          "2697:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: ToString', 9)",
          "2700:     vim9script",
          "2701:     class Child",
          "2702:       this.age: number",
          "2703:       def ToString(): string",
          "2704:         return super .ToString() .. ': ' .. this.age",
          "2705:       enddef",
          "2706:     endclass",
          "2707:     var o = Child.new(42)",
          "2708:     echo o.ToString()",
          "2710:   v9.CheckSourceFailure(lines, 'E1356: \"super\" must be followed by a dot', 1)",
          "2713:     vim9script",
          "2714:     class Base",
          "2715:       this.name: string",
          "2717:         return this.name",
          "2719:     endclass",
          "2721:     var age = 42",
          "2722:     def ToString(): string",
          "2723:       return super.ToString() .. ': ' .. age",
          "2724:     enddef",
          "2725:     echo ToString()",
          "2727:   v9.CheckSourceFailure(lines, 'E1357: Using \"super\" not in a class method', 1)",
          "2730:     vim9script",
          "2731:     class Child",
          "2732:       this.age: number",
          "2733:       def ToString(): string",
          "2734:         return super.ToString() .. ': ' .. this.age",
          "2735:       enddef",
          "2736:     endclass",
          "2737:     var o = Child.new(42)",
          "2738:     echo o.ToString()",
          "2740:   v9.CheckSourceFailure(lines, 'E1358: Using \"super\" not in a child class', 1)",
          "2743:     vim9script",
          "2744:     class Base",
          "2745:       this.name: string",
          "2746:       static def ToString(): string",
          "2747:         return 'Base class'",
          "2748:       enddef",
          "2749:     endclass",
          "2751:     class Child extends Base",
          "2752:       this.age: number",
          "2753:       def ToString(): string",
          "2754:         return Base.ToString() .. ': ' .. this.age",
          "2755:       enddef",
          "2756:     endclass",
          "2758:     var o = Child.new('John', 42)",
          "2759:     assert_equal('Base class: 42', o.ToString())",
          "2764:     vim9script",
          "2765:     class Base",
          "2766:       this.value = 1",
          "2767:       def new(init: number)",
          "2768:         this.value = number + 1",
          "2769:       enddef",
          "2770:     endclass",
          "2771:     class Child extends Base",
          "2772:       def new()",
          "2773:         this.new(3)",
          "2774:       enddef",
          "2775:     endclass",
          "2776:     var c = Child.new()",
          "2778:   v9.CheckSourceFailure(lines, 'E1385: Class method \"new\" accessible only using class \"Child\"', 1)",
          "2782:     vim9script",
          "2784:     class Result",
          "2785:       this.success: bool",
          "2786:       this.value: any = null",
          "2787:     endclass",
          "2789:     class Success extends Result",
          "2790:       def new(this.value = v:none)",
          "2791:         this.success = true",
          "2792:       enddef",
          "2793:     endclass",
          "2795:     var v = Success.new('asdf')",
          "2796:     assert_equal(\"object of Success {success: true, value: 'asdf'}\", string(v))",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "2816:     class B extends A\"",
          "2817:     endclass",
          "2818:   END",
          "2820: enddef",
          "2822: def Test_using_base_class()",
          "",
          "[Removed Lines]",
          "2819:   v9.CheckSourceFailure(lines, 'E1315:')",
          "",
          "[Added Lines]",
          "2808:   v9.CheckSourceFailure(lines, 'E1315: White space required after name: A\"', 4)",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "2824:     vim9script",
          "2826:     class BaseEE",
          "2832:     endclass",
          "2834:     class ChildEE extends BaseEE",
          "2842:     endclass",
          "2844:     def With(ee: BaseEE)",
          "2852:     enddef",
          "2854:     g:result = ''",
          "",
          "[Removed Lines]",
          "2827:         def Enter(): any",
          "2828:             return null",
          "2829:         enddef",
          "2830:         def Exit(resource: any): void",
          "2831:         enddef",
          "2835:         def Enter(): any",
          "2836:             return 42",
          "2837:         enddef",
          "2839:         def Exit(resource: number): void",
          "2840:             g:result ..= '/exit'",
          "2841:         enddef",
          "2845:         var r = ee.Enter()",
          "2846:         try",
          "2847:             g:result ..= r",
          "2848:         finally",
          "2849:             g:result ..= '/finally'",
          "2850:             ee.Exit(r)",
          "2851:         endtry",
          "",
          "[Added Lines]",
          "2816:       def Enter(): any",
          "2817:         return null",
          "2818:       enddef",
          "2819:       def Exit(resource: any): void",
          "2820:       enddef",
          "2824:       def Enter(): any",
          "2825:         return 42",
          "2826:       enddef",
          "2828:       def Exit(resource: number): void",
          "2829:         g:result ..= '/exit'",
          "2830:       enddef",
          "2834:       var r = ee.Enter()",
          "2835:       try",
          "2836:         g:result ..= r",
          "2837:       finally",
          "2838:         g:result ..= '/finally'",
          "2839:         ee.Exit(r)",
          "2840:       endtry",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "2863:     vim9script",
          "2865:     class Base",
          "2870:     endclass",
          "2872:     class Child extends Base",
          "2876:     endclass",
          "2878:     var obj = Child.new()",
          "",
          "[Removed Lines]",
          "2866:         this.success: bool = false",
          "2867:         def Method(arg = 0)",
          "2868:             this.success = true",
          "2869:         enddef",
          "2873:         def new()",
          "2874:             super.Method()",
          "2875:         enddef",
          "",
          "[Added Lines]",
          "2855:       this.success: bool = false",
          "2856:       def Method(arg = 0)",
          "2857:         this.success = true",
          "2858:       enddef",
          "2862:       def new()",
          "2863:         super.Method()",
          "2864:       enddef",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "2884: def Test_class_import()",
          "2885:   var lines =<< trim END",
          "2891:   END",
          "2892:   writefile(lines, 'Xanimal.vim', 'D')",
          "2894:   lines =<< trim END",
          "2906:   END",
          "2907:   v9.CheckScriptSuccess(lines)",
          "2908: enddef",
          "2910: def Test_abstract_class()",
          "2911:   var lines =<< trim END",
          "2922:   END",
          "2923:   v9.CheckSourceSuccess(lines)",
          "2925:   lines =<< trim END",
          "2934:   END",
          "2937:   lines =<< trim END",
          "2941:   END",
          "2944:   # Abstract class cannot have a \"new\" function",
          "2945:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "2886:       vim9script",
          "2887:       export class Animal",
          "2888:         this.kind: string",
          "2889:         this.name: string",
          "2890:       endclass",
          "2895:       vim9script",
          "2896:       import './Xanimal.vim' as animal",
          "2898:       var a: animal.Animal",
          "2899:       a = animal.Animal.new('fish', 'Eric')",
          "2900:       assert_equal('fish', a.kind)",
          "2901:       assert_equal('Eric', a.name)",
          "2903:       var b: animal.Animal = animal.Animal.new('cat', 'Garfield')",
          "2904:       assert_equal('cat', b.kind)",
          "2905:       assert_equal('Garfield', b.name)",
          "2912:       vim9script",
          "2913:       abstract class Base",
          "2914:         this.name: string",
          "2915:       endclass",
          "2916:       class Person extends Base",
          "2917:         this.age: number",
          "2918:       endclass",
          "2919:       var p: Base = Person.new('Peter', 42)",
          "2920:       assert_equal('Peter', p.name)",
          "2921:       assert_equal(42, p.age)",
          "2926:       vim9script",
          "2927:       abstract class Base",
          "2928:         this.name: string",
          "2929:       endclass",
          "2930:       class Person extends Base",
          "2931:         this.age: number",
          "2932:       endclass",
          "2933:       var p = Base.new('Peter')",
          "2935:   v9.CheckSourceFailure(lines, 'E1325: Method not found on class \"Base\": new')",
          "2938:       abstract class Base",
          "2939:         this.name: string",
          "2940:       endclass",
          "2942:   v9.CheckSourceFailure(lines, 'E1316:')",
          "",
          "[Added Lines]",
          "2875:     vim9script",
          "2876:     export class Animal",
          "2877:       this.kind: string",
          "2878:       this.name: string",
          "2879:     endclass",
          "2884:     vim9script",
          "2885:     import './Xanimal.vim' as animal",
          "2887:     var a: animal.Animal",
          "2888:     a = animal.Animal.new('fish', 'Eric')",
          "2889:     assert_equal('fish', a.kind)",
          "2890:     assert_equal('Eric', a.name)",
          "2892:     var b: animal.Animal = animal.Animal.new('cat', 'Garfield')",
          "2893:     assert_equal('cat', b.kind)",
          "2894:     assert_equal('Garfield', b.name)",
          "2901:     vim9script",
          "2902:     abstract class Base",
          "2903:       this.name: string",
          "2904:     endclass",
          "2905:     class Person extends Base",
          "2906:       this.age: number",
          "2907:     endclass",
          "2908:     var p: Base = Person.new('Peter', 42)",
          "2909:     assert_equal('Peter', p.name)",
          "2910:     assert_equal(42, p.age)",
          "2915:     vim9script",
          "2916:     abstract class Base",
          "2917:       this.name: string",
          "2918:     endclass",
          "2919:     class Person extends Base",
          "2920:       this.age: number",
          "2921:     endclass",
          "2922:     var p = Base.new('Peter')",
          "2924:   v9.CheckSourceFailure(lines, 'E1325: Method not found on class \"Base\": new', 8)",
          "2927:     abstract class Base",
          "2928:       this.name: string",
          "2929:     endclass",
          "2931:   v9.CheckSourceFailure(lines, 'E1316: Class can only be defined in Vim9 script', 1)",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "2949:       enddef",
          "2950:     endclass",
          "2951:   END",
          "2953: enddef",
          "2955: def Test_closure_in_class()",
          "2956:   var lines =<< trim END",
          "2969:   END",
          "2970:   v9.CheckSourceSuccess(lines)",
          "2971: enddef",
          "2973: def Test_call_constructor_from_legacy()",
          "2974:   var lines =<< trim END",
          "2987:       enddef",
          "2992:   END",
          "2993:   v9.CheckSourceSuccess(lines)",
          "2994: enddef",
          "2996: def Test_defer_with_object()",
          "2997:   var lines =<< trim END",
          "3013:       enddef",
          "3021:   END",
          "3022:   v9.CheckSourceSuccess(lines)",
          "3023:   unlet g:result",
          "3025:   lines =<< trim END",
          "3050:       enddef",
          "3058:   END",
          "3059:   v9.CheckSourceSuccess(lines)",
          "3060:   unlet g:result",
          "",
          "[Removed Lines]",
          "2952:   v9.CheckSourceFailure(lines, 'E1359:')",
          "2957:       vim9script",
          "2959:       class Foo",
          "2960:         this.y: list<string> = ['B']",
          "2962:         def new()",
          "2963:           g:result = filter(['A', 'B'], (_, v) => index(this.y, v) == -1)",
          "2964:         enddef",
          "2965:       endclass",
          "2967:       Foo.new()",
          "2968:       assert_equal(['A'], g:result)",
          "2975:       vim9script",
          "2977:       var newCalled = 'false'",
          "2979:       class A",
          "2980:         def new()",
          "2981:           newCalled = 'true'",
          "2982:         enddef",
          "2983:       endclass",
          "2985:       export def F(options = {}): any",
          "2986:         return A",
          "2989:       g:p = F()",
          "2990:       legacy call p.new()",
          "2991:       assert_equal('true', newCalled)",
          "2998:       vim9script",
          "3000:       class CWithEE",
          "3001:         def Enter()",
          "3002:           g:result ..= \"entered/\"",
          "3003:         enddef",
          "3004:         def Exit()",
          "3005:           g:result ..= \"exited\"",
          "3006:         enddef",
          "3007:       endclass",
          "3009:       def With(ee: CWithEE, F: func)",
          "3010:         ee.Enter()",
          "3011:         defer ee.Exit()",
          "3012:         F()",
          "3015:       g:result = ''",
          "3016:       var obj = CWithEE.new()",
          "3017:       obj->With(() => {",
          "3018:         g:result ..= \"called/\"",
          "3019:       })",
          "3020:       assert_equal('entered/called/exited', g:result)",
          "3026:       vim9script",
          "3028:       class BaseWithEE",
          "3029:         def Enter()",
          "3030:           g:result ..= \"entered-base/\"",
          "3031:         enddef",
          "3032:         def Exit()",
          "3033:           g:result ..= \"exited-base\"",
          "3034:         enddef",
          "3035:       endclass",
          "3037:       class CWithEE extends BaseWithEE",
          "3038:         def Enter()",
          "3039:           g:result ..= \"entered-child/\"",
          "3040:         enddef",
          "3041:         def Exit()",
          "3042:           g:result ..= \"exited-child\"",
          "3043:         enddef",
          "3044:       endclass",
          "3046:       def With(ee: BaseWithEE, F: func)",
          "3047:         ee.Enter()",
          "3048:         defer ee.Exit()",
          "3049:         F()",
          "3052:       g:result = ''",
          "3053:       var obj = CWithEE.new()",
          "3054:       obj->With(() => {",
          "3055:         g:result ..= \"called/\"",
          "3056:       })",
          "3057:       assert_equal('entered-child/called/exited-child', g:result)",
          "",
          "[Added Lines]",
          "2941:   v9.CheckSourceFailure(lines, 'E1359: Cannot define a \"new\" method in an abstract class', 4)",
          "2946:     vim9script",
          "2948:     class Foo",
          "2949:       this.y: list<string> = ['B']",
          "2951:       def new()",
          "2952:         g:result = filter(['A', 'B'], (_, v) => index(this.y, v) == -1)",
          "2953:       enddef",
          "2954:     endclass",
          "2956:     Foo.new()",
          "2957:     assert_equal(['A'], g:result)",
          "2964:     vim9script",
          "2966:     var newCalled = 'false'",
          "2968:     class A",
          "2969:       def new()",
          "2970:         newCalled = 'true'",
          "2972:     endclass",
          "2974:     export def F(options = {}): any",
          "2975:       return A",
          "2976:     enddef",
          "2978:     g:p = F()",
          "2979:     legacy call p.new()",
          "2980:     assert_equal('true', newCalled)",
          "2987:     vim9script",
          "2989:     class CWithEE",
          "2990:       def Enter()",
          "2991:         g:result ..= \"entered/\"",
          "2993:       def Exit()",
          "2994:         g:result ..= \"exited\"",
          "2995:       enddef",
          "2996:     endclass",
          "2998:     def With(ee: CWithEE, F: func)",
          "2999:       ee.Enter()",
          "3000:       defer ee.Exit()",
          "3001:       F()",
          "3002:     enddef",
          "3004:     g:result = ''",
          "3005:     var obj = CWithEE.new()",
          "3006:     obj->With(() => {",
          "3007:       g:result ..= \"called/\"",
          "3008:     })",
          "3009:     assert_equal('entered/called/exited', g:result)",
          "3015:     vim9script",
          "3017:     class BaseWithEE",
          "3018:       def Enter()",
          "3019:         g:result ..= \"entered-base/\"",
          "3020:       enddef",
          "3021:       def Exit()",
          "3022:         g:result ..= \"exited-base\"",
          "3023:       enddef",
          "3024:     endclass",
          "3026:     class CWithEE extends BaseWithEE",
          "3027:       def Enter()",
          "3028:         g:result ..= \"entered-child/\"",
          "3029:       enddef",
          "3030:       def Exit()",
          "3031:         g:result ..= \"exited-child\"",
          "3033:     endclass",
          "3035:     def With(ee: BaseWithEE, F: func)",
          "3036:       ee.Enter()",
          "3037:       defer ee.Exit()",
          "3038:       F()",
          "3039:     enddef",
          "3041:     g:result = ''",
          "3042:     var obj = CWithEE.new()",
          "3043:     obj->With(() => {",
          "3044:       g:result ..= \"called/\"",
          "3045:     })",
          "3046:     assert_equal('entered-child/called/exited-child', g:result)",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "3346:     vim9script",
          "3348:     class C",
          "3352:     endclass",
          "3354:     def F0()",
          "",
          "[Removed Lines]",
          "3349:         def M1()",
          "3350:             F0()",
          "3351:         enddef",
          "",
          "[Added Lines]",
          "3338:       def M1()",
          "3339:         F0()",
          "3340:       enddef",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "3356:     enddef",
          "3358:     def F()",
          "3360:     enddef",
          "3362:     F()",
          "",
          "[Removed Lines]",
          "3359:         C.new().M1()",
          "",
          "[Added Lines]",
          "3348:       C.new().M1()",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "3442:       enddef",
          "3443:     endclass",
          "3444:   END",
          "3447:   # new() uses 'Dict' return type and returns a Dict",
          "3448:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3445:   v9.CheckSourceFailure(lines, 'E1365:')",
          "",
          "[Added Lines]",
          "3434:   v9.CheckSourceFailure(lines, 'E1365: Cannot use a return type with the \"new\" method', 11)",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "3460:     var c = C.new()",
          "3461:     assert_equal('object<C>', typename(c))",
          "3462:   END",
          "3464: enddef",
          "3466: \" Test for checking a member initialization type at run time.",
          "",
          "[Removed Lines]",
          "3463:   v9.CheckSourceFailure(lines, 'E1365:')",
          "",
          "[Added Lines]",
          "3452:   v9.CheckSourceFailure(lines, 'E1365: Cannot use a return type with the \"new\" method', 9)",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "3471:     var retnum: bool = false",
          "3473:     def F(): any",
          "3480:     enddef",
          "3482:     class C",
          "3484:     endclass",
          "3486:     var c1 = C.new()",
          "3487:     var c2 = C.new()",
          "3488:   END",
          "3490: enddef",
          "3492: \" Test for locking a variable referring to an object and reassigning to another",
          "",
          "[Removed Lines]",
          "3474:         retnum = !retnum",
          "3475:         if retnum",
          "3476:             return 1",
          "3477:         else",
          "3478:             return \"hello\"",
          "3479:         endif",
          "3483:         this._foo: bool = F()",
          "3489:   v9.CheckSourceFailure(lines, 'E1012:')",
          "",
          "[Added Lines]",
          "3463:       retnum = !retnum",
          "3464:       if retnum",
          "3465:         return 1",
          "3466:       else",
          "3467:         return \"hello\"",
          "3468:       endif",
          "3472:       this._foo: bool = F()",
          "3478:   v9.CheckSourceFailure(lines, 'E1012: Type mismatch; expected bool but got string', 0)",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "3540:     var a = A.new()",
          "3541:     a._Foo()",
          "3542:   END",
          "3545:   # Try calling a private method using an object (from a def function)",
          "3546:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3543:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()')",
          "",
          "[Added Lines]",
          "3532:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()', 9)",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "3557:     enddef",
          "3558:     T()",
          "3559:   END",
          "3562:   # Use a private method from another object method (in script context)",
          "3563:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3560:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()')",
          "",
          "[Added Lines]",
          "3549:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()', 2)",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "3611:     var a = A.new()",
          "3612:     a.Bar()",
          "3613:   END",
          "3616:   # Try calling a private method using the class name",
          "3617:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3614:   v9.CheckSourceFailure(lines, 'E117: Unknown function: _Foo')",
          "",
          "[Added Lines]",
          "3603:   v9.CheckSourceFailure(lines, 'E117: Unknown function: _Foo', 1)",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "3624:     endclass",
          "3625:     A._Foo()",
          "3626:   END",
          "3629:   # Define two private methods with the same name",
          "3630:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3627:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo')",
          "",
          "[Added Lines]",
          "3616:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo', 8)",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "3638:     endclass",
          "3639:     var a = A.new()",
          "3640:   END",
          "3643:   # Define a private method and a object method with the same name",
          "3644:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3641:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: _Foo')",
          "",
          "[Added Lines]",
          "3630:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: _Foo', 7)",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "3652:     endclass",
          "3653:     var a = A.new()",
          "3654:   END",
          "3657:   # Define an object method and a private method with the same name",
          "3658:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3655:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: Foo')",
          "",
          "[Added Lines]",
          "3644:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: Foo', 7)",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "3666:     endclass",
          "3667:     var a = A.new()",
          "3668:   END",
          "3671:   # Call a public method and a private method from a private method",
          "3672:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3669:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: _Foo')",
          "",
          "[Added Lines]",
          "3658:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: _Foo', 7)",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "3710:     var b = B.new()",
          "3711:     b.Foo()",
          "3712:   END",
          "3715:   # Call a private object method from a child class object method",
          "3716:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3713:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()')",
          "",
          "[Added Lines]",
          "3702:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()', 2)",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "3753:     var c = C.new()",
          "3754:     assert_equal(1234, c._Foo())",
          "3755:   END",
          "3758:   # Using \"_\" prefix in a method name should fail outside of a class",
          "3759:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3756:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()')",
          "",
          "[Added Lines]",
          "3745:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()', 16)",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "3763:     enddef",
          "3764:     var a = _Foo()",
          "3765:   END",
          "3767: enddef",
          "3769: \" Test for an private class method",
          "",
          "[Removed Lines]",
          "3766:   v9.CheckSourceFailure(lines, 'E1267: Function name must start with a capital: _Foo(): number')",
          "",
          "[Added Lines]",
          "3755:   v9.CheckSourceFailure(lines, 'E1267: Function name must start with a capital: _Foo(): number', 2)",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "3779:     endclass",
          "3780:     A._Foo()",
          "3781:   END",
          "3784:   # Try calling a class private method (from a def function)",
          "3785:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3782:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()')",
          "",
          "[Added Lines]",
          "3771:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()', 8)",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "3795:     enddef",
          "3796:     T()",
          "3797:   END",
          "3800:   # Try calling a class private method using an object (at the script level)",
          "3801:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3798:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()')",
          "",
          "[Added Lines]",
          "3787:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()', 1)",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "3809:     var a = A.new()",
          "3810:     a._Foo()",
          "3811:   END",
          "3814:   # Try calling a class private method using an object (from a def function)",
          "3815:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3812:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo')",
          "",
          "[Added Lines]",
          "3801:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo', 9)",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "3826:     enddef",
          "3827:     T()",
          "3828:   END",
          "3831:   # Use a class private method from an object method",
          "3832:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3829:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo')",
          "",
          "[Added Lines]",
          "3818:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo', 2)",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "3878:     endclass",
          "3879:     var a = A.new()",
          "3880:   END",
          "3883:   # Try calling a class private method from another class",
          "3884:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3881:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: Foo')",
          "",
          "[Added Lines]",
          "3870:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: Foo', 7)",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "3897:     var b = B.new()",
          "3898:     assert_equal(1234, b.Foo())",
          "3899:   END",
          "3902:   # Call a private class method from a child class object method",
          "3903:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3900:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()')",
          "",
          "[Added Lines]",
          "3889:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()', 1)",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "3919:     var c = C.new()",
          "3920:     assert_equal(1234, c.Baz())",
          "3921:   END",
          "3924:   # Call a private class method from a child class private class method",
          "3925:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3922:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()')",
          "",
          "[Added Lines]",
          "3911:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()', 1)",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "3940:     endclass",
          "3941:     assert_equal(1234, C.Baz())",
          "3942:   END",
          "3945:   # Call a private class method from a child class object",
          "3946:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "3943:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()')",
          "",
          "[Added Lines]",
          "3932:   v9.CheckSourceFailure(lines, 'E1366: Cannot access private method: _Foo()', 1)",
          "",
          "---------------",
          "--- Hunk 81 ---",
          "[Context before]",
          "3961:     var c = C.new()",
          "3962:     assert_equal(1234, C._Foo())",
          "3963:   END",
          "3965: enddef",
          "3967: \" Test for using the return value of a class/object method as a function",
          "",
          "[Removed Lines]",
          "3964:   v9.CheckSourceFailure(lines, 'E1325: Method not found on class \"C\": _Foo')",
          "",
          "[Added Lines]",
          "3953:   v9.CheckSourceFailure(lines, 'E1325: Method not found on class \"C\": _Foo', 16)",
          "",
          "---------------",
          "--- Hunk 82 ---",
          "[Context before]",
          "4017:     vim9script",
          "4019:     class A",
          "4032:     endclass",
          "4034:     class B extends A",
          "4038:     endclass",
          "4040:     class C extends B",
          "4049:     endclass",
          "4051:     var oa = A.new()",
          "",
          "[Removed Lines]",
          "4020:         static _svar: number",
          "4021:         this._mvar: number",
          "4022:         def new()",
          "4023:             _svar = 1",
          "4024:             this._mvar = 101",
          "4025:         enddef",
          "4026:         def AccessObject(): number",
          "4027:             return this._mvar",
          "4028:         enddef",
          "4029:         def AccessStaticThroughObject(): number",
          "4030:             return _svar",
          "4031:         enddef",
          "4035:         def new()",
          "4036:             this._mvar = 102",
          "4037:         enddef",
          "4041:         def new()",
          "4042:             this._mvar = 103",
          "4043:         enddef",
          "4045:         def AccessPrivateStaticThroughClassName(): number",
          "4046:             assert_equal(1, A._svar)",
          "4047:             return 444",
          "4048:         enddef",
          "",
          "[Added Lines]",
          "4009:       static _svar: number",
          "4010:       this._mvar: number",
          "4011:       def new()",
          "4012:         _svar = 1",
          "4013:         this._mvar = 101",
          "4014:       enddef",
          "4015:       def AccessObject(): number",
          "4016:         return this._mvar",
          "4017:       enddef",
          "4018:       def AccessStaticThroughObject(): number",
          "4019:         return _svar",
          "4020:       enddef",
          "4024:       def new()",
          "4025:         this._mvar = 102",
          "4026:       enddef",
          "4030:       def new()",
          "4031:         this._mvar = 103",
          "4032:       enddef",
          "4034:       def AccessPrivateStaticThroughClassName(): number",
          "4035:         assert_equal(1, A._svar)",
          "4036:         return 444",
          "4037:       enddef",
          "",
          "---------------",
          "--- Hunk 83 ---",
          "[Context before]",
          "4075:       this.val = 20",
          "4076:     endclass",
          "4077:   END",
          "4080:   # Duplicate private member variable",
          "4081:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4078:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: val')",
          "",
          "[Added Lines]",
          "4067:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: val', 4)",
          "",
          "---------------",
          "--- Hunk 84 ---",
          "[Context before]",
          "4085:       this._val = 20",
          "4086:     endclass",
          "4087:   END",
          "4090:   # Duplicate public member variable",
          "4091:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4088:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: _val')",
          "",
          "[Added Lines]",
          "4077:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: _val', 4)",
          "",
          "---------------",
          "--- Hunk 85 ---",
          "[Context before]",
          "4095:       public this.val = 20",
          "4096:     endclass",
          "4097:   END",
          "4100:   # Duplicate private member variable",
          "4101:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4098:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: val')",
          "",
          "[Added Lines]",
          "4087:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: val', 4)",
          "",
          "---------------",
          "--- Hunk 86 ---",
          "[Context before]",
          "4105:       this._val = 20",
          "4106:     endclass",
          "4107:   END",
          "4110:   # Duplicate public and private member variable",
          "4111:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4108:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: _val')",
          "",
          "[Added Lines]",
          "4097:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: _val', 4)",
          "",
          "---------------",
          "--- Hunk 87 ---",
          "[Context before]",
          "4115:       public this.val = 10",
          "4116:     endclass",
          "4117:   END",
          "4120:   # Duplicate class member variable",
          "4121:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4118:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: val')",
          "",
          "[Added Lines]",
          "4107:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: val', 4)",
          "",
          "---------------",
          "--- Hunk 88 ---",
          "[Context before]",
          "4125:       static _s: string = \"def\"",
          "4126:     endclass",
          "4127:   END",
          "4130:   # Duplicate public and private class member variable",
          "4131:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4128:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: _s')",
          "",
          "[Added Lines]",
          "4117:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: _s', 4)",
          "",
          "---------------",
          "--- Hunk 89 ---",
          "[Context before]",
          "4135:       static _s: string = \"def\"",
          "4136:     endclass",
          "4137:   END",
          "4140:   # Duplicate class and object member variable",
          "4141:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4138:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: _s')",
          "",
          "[Added Lines]",
          "4127:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: _s', 4)",
          "",
          "---------------",
          "--- Hunk 90 ---",
          "[Context before]",
          "4164:       this.val = 20",
          "4165:     endclass",
          "4166:   END",
          "4169:   # Duplicate object private member variable in a derived class",
          "4170:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4167:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: val')",
          "",
          "[Added Lines]",
          "4156:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: val', 9)",
          "",
          "---------------",
          "--- Hunk 91 ---",
          "[Context before]",
          "4178:       this._val = 20",
          "4179:     endclass",
          "4180:   END",
          "4183:   # Duplicate object private member variable in a derived class",
          "4184:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4181:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: _val')",
          "",
          "[Added Lines]",
          "4170:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: _val', 9)",
          "",
          "---------------",
          "--- Hunk 92 ---",
          "[Context before]",
          "4192:       this._val = 20",
          "4193:     endclass",
          "4194:   END",
          "4197:   # Duplicate object member variable in a derived class",
          "4198:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4195:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: _val')",
          "",
          "[Added Lines]",
          "4184:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: _val', 9)",
          "",
          "---------------",
          "--- Hunk 93 ---",
          "[Context before]",
          "4206:       this.val = 20",
          "4207:     endclass",
          "4208:   END",
          "4211:   # Two member variables with a common prefix",
          "4212:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4209:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: val')",
          "",
          "[Added Lines]",
          "4198:   v9.CheckSourceFailure(lines, 'E1369: Duplicate variable: val', 9)",
          "",
          "---------------",
          "--- Hunk 94 ---",
          "[Context before]",
          "4236:     enddef",
          "4237:     T()",
          "4238:   END",
          "4241:   # access a non-existing private object member variable",
          "4242:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4239:   v9.CheckSourceFailure(lines, 'E1333: Cannot access private variable: _val')",
          "",
          "[Added Lines]",
          "4228:   v9.CheckSourceFailure(lines, 'E1333: Cannot access private variable: _val', 2)",
          "",
          "---------------",
          "--- Hunk 95 ---",
          "[Context before]",
          "4250:     enddef",
          "4251:     T()",
          "4252:   END",
          "4255:   # private static member variable",
          "4256:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4253:   v9.CheckSourceFailure(lines, 'E1326: Variable not found on object \"A\": _a')",
          "",
          "[Added Lines]",
          "4242:   v9.CheckSourceFailure(lines, 'E1326: Variable not found on object \"A\": _a', 2)",
          "",
          "---------------",
          "--- Hunk 96 ---",
          "[Context before]",
          "4264:     enddef",
          "4265:     T()",
          "4266:   END",
          "4269:   # private static member variable",
          "4270:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4267:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"_val\" accessible only using class \"A\"')",
          "",
          "[Added Lines]",
          "4256:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"_val\" accessible only using class \"A\"', 2)",
          "",
          "---------------",
          "--- Hunk 97 ---",
          "[Context before]",
          "4278:     enddef",
          "4279:     T()",
          "4280:   END",
          "4283:   # private static class variable",
          "4284:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4281:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"_val\" accessible only using class \"A\"')",
          "",
          "[Added Lines]",
          "4270:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"_val\" accessible only using class \"A\"', 2)",
          "",
          "---------------",
          "--- Hunk 98 ---",
          "[Context before]",
          "4291:     enddef",
          "4292:     T()",
          "4293:   END",
          "4296:   # private static class variable",
          "4297:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4294:   v9.CheckSourceFailure(lines, 'E1333: Cannot access private variable: _val')",
          "",
          "[Added Lines]",
          "4283:   v9.CheckSourceFailure(lines, 'E1333: Cannot access private variable: _val', 1)",
          "",
          "---------------",
          "--- Hunk 99 ---",
          "[Context before]",
          "4304:     enddef",
          "4305:     T()",
          "4306:   END",
          "4308: enddef",
          "4310: \" Test for changing the member access of an interface in a implementation class",
          "",
          "[Removed Lines]",
          "4307:   v9.CheckSourceFailure(lines, 'E1333: Cannot access private variable: _val')",
          "",
          "[Added Lines]",
          "4296:   v9.CheckSourceFailure(lines, 'E1333: Cannot access private variable: _val', 1)",
          "",
          "---------------",
          "--- Hunk 100 ---",
          "[Context before]",
          "4318:       public this.val = 10",
          "4319:     endclass",
          "4320:   END",
          "4323:   lines =<< trim END",
          "4324:     vim9script",
          "",
          "[Removed Lines]",
          "4321:   v9.CheckSourceFailure(lines, 'E1367: Access level of variable \"val\" of interface \"A\" is different')",
          "",
          "[Added Lines]",
          "4310:   v9.CheckSourceFailure(lines, 'E1367: Access level of variable \"val\" of interface \"A\" is different', 7)",
          "",
          "---------------",
          "--- Hunk 101 ---",
          "[Context before]",
          "4329:       public this.val = 10",
          "4330:     endclass",
          "4331:   END",
          "4333: enddef",
          "4335: \" Test for trying to change a readonly member from a def function",
          "",
          "[Removed Lines]",
          "4332:   v9.CheckSourceFailure(lines, 'E1367: Access level of variable \"val\" of interface \"A\" is different')",
          "",
          "[Added Lines]",
          "4321:   v9.CheckSourceFailure(lines, 'E1367: Access level of variable \"val\" of interface \"A\" is different', 7)",
          "",
          "---------------",
          "--- Hunk 102 ---",
          "[Context before]",
          "4345:     enddef",
          "4346:     T()",
          "4347:   END",
          "4349: enddef",
          "4351: \" Test for reading and writing a class member from a def function",
          "",
          "[Removed Lines]",
          "4348:   v9.CheckSourceFailure(lines, 'E1335: Variable \"val\" in class \"A\" is not writable')",
          "",
          "[Added Lines]",
          "4337:   v9.CheckSourceFailure(lines, 'E1335: Variable \"val\" in class \"A\" is not writable', 2)",
          "",
          "---------------",
          "--- Hunk 103 ---",
          "[Context before]",
          "4407:     var a = A.new()",
          "4408:     echo a.svar2",
          "4409:   END",
          "4412:   # Cannot write to a class variable using an object in script context",
          "4413:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4410:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"svar2\" accessible only using class \"A\"')",
          "",
          "[Added Lines]",
          "4399:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"svar2\" accessible only using class \"A\"', 8)",
          "",
          "---------------",
          "--- Hunk 104 ---",
          "[Context before]",
          "4420:     var a = A.new()",
          "4421:     a.svar2 = [2]",
          "4422:   END",
          "4425:   # Cannot read from a class variable using an object in def method context",
          "4426:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4423:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"svar2\" accessible only using class \"A\"')",
          "",
          "[Added Lines]",
          "4412:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"svar2\" accessible only using class \"A\"', 8)",
          "",
          "---------------",
          "--- Hunk 105 ---",
          "[Context before]",
          "4436:     enddef",
          "4437:     T()",
          "4438:   END",
          "4441:   # Cannot write to a class variable using an object in def method context",
          "4442:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4439:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"svar2\" accessible only using class \"A\"')",
          "",
          "[Added Lines]",
          "4428:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"svar2\" accessible only using class \"A\"', 2)",
          "",
          "---------------",
          "--- Hunk 106 ---",
          "[Context before]",
          "4452:     enddef",
          "4453:     T()",
          "4454:   END",
          "4456: enddef",
          "4458: \" Test for using a interface method using a child object",
          "",
          "[Removed Lines]",
          "4455:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"svar2\" accessible only using class \"A\"')",
          "",
          "[Added Lines]",
          "4444:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"svar2\" accessible only using class \"A\"', 2)",
          "",
          "---------------",
          "--- Hunk 107 ---",
          "[Context before]",
          "4566:     class B extends A",
          "4567:     endclass",
          "4568:   END",
          "4571:   # Use abstract method in a concrete class",
          "4572:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4569:   v9.CheckSourceFailure(lines, 'E1373: Abstract method \"Foo\" is not implemented')",
          "",
          "[Added Lines]",
          "4558:   v9.CheckSourceFailure(lines, 'E1373: Abstract method \"Foo\" is not implemented', 6)",
          "",
          "---------------",
          "--- Hunk 108 ---",
          "[Context before]",
          "4577:     class B extends A",
          "4578:     endclass",
          "4579:   END",
          "4582:   # Use abstract method in an interface",
          "4583:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4580:   v9.CheckSourceFailure(lines, 'E1372: Abstract method \"abstract def Foo()\" cannot be defined in a concrete class')",
          "",
          "[Added Lines]",
          "4569:   v9.CheckSourceFailure(lines, 'E1372: Abstract method \"abstract def Foo()\" cannot be defined in a concrete class', 3)",
          "",
          "---------------",
          "--- Hunk 109 ---",
          "[Context before]",
          "4599:       abs def Foo()",
          "4600:     endclass",
          "4601:   END",
          "4604:   # Use \"abstract\" with a member variable",
          "4605:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4602:   v9.CheckSourceFailure(lines, 'E1065: Command cannot be shortened: abs def Foo()')",
          "",
          "[Added Lines]",
          "4591:   v9.CheckSourceFailure(lines, 'E1065: Command cannot be shortened: abs def Foo()', 3)",
          "",
          "---------------",
          "--- Hunk 110 ---",
          "[Context before]",
          "4608:       abstract this.val = 10",
          "4609:     endclass",
          "4610:   END",
          "4613:   # Use a static abstract method",
          "4614:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4611:   v9.CheckSourceFailure(lines, 'E1371: Abstract must be followed by \"def\" or \"static\"')",
          "",
          "[Added Lines]",
          "4600:   v9.CheckSourceFailure(lines, 'E1371: Abstract must be followed by \"def\" or \"static\"', 3)",
          "",
          "---------------",
          "--- Hunk 111 ---",
          "[Context before]",
          "4637:       enddef",
          "4638:     endclass",
          "4639:   END",
          "4642:   # Use an abstract class to invoke an abstract method",
          "4643:   # FIXME: This should fail",
          "",
          "[Removed Lines]",
          "4640:   v9.CheckSourceFailure(lines, 'E1383: Method \"Foo\": type mismatch, expected func(string, number): list<number> but got func(number, string): list<string>')",
          "",
          "[Added Lines]",
          "4629:   v9.CheckSourceFailure(lines, 'E1383: Method \"Foo\": type mismatch, expected func(string, number): list<number> but got func(number, string): list<string>', 9)",
          "",
          "---------------",
          "--- Hunk 112 ---",
          "[Context before]",
          "4691:     var b = B.new()",
          "4692:     b.Bar()",
          "4693:   END",
          "4695: enddef",
          "4697: \" Test for calling a class method using an object in a def function context and",
          "",
          "[Removed Lines]",
          "4694:   v9.CheckSourceFailure(lines, 'E1384: Class method \"Foo\" accessible only inside class \"A\"')",
          "",
          "[Added Lines]",
          "4683:   v9.CheckSourceFailure(lines, 'E1384: Class method \"Foo\" accessible only inside class \"A\"', 1)",
          "",
          "---------------",
          "--- Hunk 113 ---",
          "[Context before]",
          "4735:     var a = A.new()",
          "4736:     assert_equal('foo', a.Foo())",
          "4737:   END",
          "4740:   # def function context",
          "4741:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4738:   v9.CheckSourceFailure(lines, 'E1385: Class method \"Foo\" accessible only using class \"A\"')",
          "",
          "[Added Lines]",
          "4727:   v9.CheckSourceFailure(lines, 'E1385: Class method \"Foo\" accessible only using class \"A\"', 9)",
          "",
          "---------------",
          "--- Hunk 114 ---",
          "[Context before]",
          "4752:     enddef",
          "4753:     T()",
          "4754:   END",
          "4756: enddef",
          "4758: def Test_class_variable()",
          "",
          "[Removed Lines]",
          "4755:   v9.CheckSourceFailure(lines, 'E1385: Class method \"Foo\" accessible only using class \"A\"')",
          "",
          "[Added Lines]",
          "4744:   v9.CheckSourceFailure(lines, 'E1385: Class method \"Foo\" accessible only using class \"A\"', 2)",
          "",
          "---------------",
          "--- Hunk 115 ---",
          "[Context before]",
          "4805:     endclass",
          "4806:     B.ClassFunc()",
          "4807:   END",
          "4810:   # Reading a parent class variable from a child class method",
          "4811:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4808:   v9.CheckSourceFailure(lines, 'E1374: Class variable \"val\" accessible only inside class \"A\"')",
          "",
          "[Added Lines]",
          "4797:   v9.CheckSourceFailure(lines, 'E1374: Class variable \"val\" accessible only inside class \"A\"', 1)",
          "",
          "---------------",
          "--- Hunk 116 ---",
          "[Context before]",
          "4822:     endclass",
          "4823:     B.ClassFunc()",
          "4824:   END",
          "4827:   # Modifying a parent class variable from a child object method",
          "4828:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4825:   v9.CheckSourceFailure(lines, 'E1374: Class variable \"val\" accessible only inside class \"A\"')",
          "",
          "[Added Lines]",
          "4814:   v9.CheckSourceFailure(lines, 'E1374: Class variable \"val\" accessible only inside class \"A\"', 1)",
          "",
          "---------------",
          "--- Hunk 117 ---",
          "[Context before]",
          "4840:     var b = B.new()",
          "4841:     b.ObjFunc()",
          "4842:   END",
          "4845:   # Reading a parent class variable from a child object method",
          "4846:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4843:   v9.CheckSourceFailure(lines, 'E1374: Class variable \"val\" accessible only inside class \"A\"')",
          "",
          "[Added Lines]",
          "4832:   v9.CheckSourceFailure(lines, 'E1374: Class variable \"val\" accessible only inside class \"A\"', 1)",
          "",
          "---------------",
          "--- Hunk 118 ---",
          "[Context before]",
          "4858:     var b = B.new()",
          "4859:     b.ObjFunc()",
          "4860:   END",
          "4863:   # Modifying a class variable using an object at script level",
          "4864:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4861:   v9.CheckSourceFailure(lines, 'E1374: Class variable \"val\" accessible only inside class \"A\"')",
          "",
          "[Added Lines]",
          "4850:   v9.CheckSourceFailure(lines, 'E1374: Class variable \"val\" accessible only inside class \"A\"', 1)",
          "",
          "---------------",
          "--- Hunk 119 ---",
          "[Context before]",
          "4870:     var a = A.new()",
          "4871:     a.val = 20",
          "4872:   END",
          "4875:   # Reading a class variable using an object at script level",
          "4876:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4873:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"val\" accessible only using class \"A\"')",
          "",
          "[Added Lines]",
          "4862:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"val\" accessible only using class \"A\"', 7)",
          "",
          "---------------",
          "--- Hunk 120 ---",
          "[Context before]",
          "4882:     var a = A.new()",
          "4883:     var i = a.val",
          "4884:   END",
          "4887:   # Modifying a class variable using an object at function level",
          "4888:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4885:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"val\" accessible only using class \"A\"')",
          "",
          "[Added Lines]",
          "4874:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"val\" accessible only using class \"A\"', 7)",
          "",
          "---------------",
          "--- Hunk 121 ---",
          "[Context before]",
          "4898:     enddef",
          "4899:     T()",
          "4900:   END",
          "4903:   # Reading a class variable using an object at function level",
          "4904:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "4901:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"val\" accessible only using class \"A\"')",
          "",
          "[Added Lines]",
          "4890:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"val\" accessible only using class \"A\"', 2)",
          "",
          "---------------",
          "--- Hunk 122 ---",
          "[Context before]",
          "4913:     enddef",
          "4914:     T()",
          "4915:   END",
          "4917: enddef",
          "4919: \" Test for using a duplicate class method and class variable in a child class",
          "",
          "[Removed Lines]",
          "4916:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"val\" accessible only using class \"A\"')",
          "",
          "[Added Lines]",
          "4905:   v9.CheckSourceFailure(lines, 'E1375: Class variable \"val\" accessible only using class \"A\"', 2)",
          "",
          "---------------",
          "--- Hunk 123 ---",
          "[Context before]",
          "5012:     endclass",
          "5013:     A.Foo()",
          "5014:   END",
          "5017:   # Invoke an object method using a class in def function context",
          "5018:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "5015:   v9.CheckSourceFailure(lines, 'E1386: Object method \"Foo\" accessible only using class \"A\" object')",
          "",
          "[Added Lines]",
          "5004:   v9.CheckSourceFailure(lines, 'E1386: Object method \"Foo\" accessible only using class \"A\" object', 7)",
          "",
          "---------------",
          "--- Hunk 124 ---",
          "[Context before]",
          "5027:     enddef",
          "5028:     T()",
          "5029:   END",
          "5031: enddef",
          "5033: \" Test for duplicate class method and instance method",
          "",
          "[Removed Lines]",
          "5030:   v9.CheckSourceFailure(lines, 'E1386: Object method \"Foo\" accessible only using class \"A\" object')",
          "",
          "[Added Lines]",
          "5019:   v9.CheckSourceFailure(lines, 'E1386: Object method \"Foo\" accessible only using class \"A\" object', 1)",
          "",
          "---------------",
          "--- Hunk 125 ---",
          "[Context before]",
          "5042:       enddef",
          "5043:     endclass",
          "5044:   END",
          "5047:   # Duplicate private instance method",
          "5048:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "5045:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: Foo')",
          "",
          "[Added Lines]",
          "5034:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: Foo', 6)",
          "",
          "---------------",
          "--- Hunk 126 ---",
          "[Context before]",
          "5054:       enddef",
          "5055:     endclass",
          "5056:   END",
          "5059:   # Duplicate class method",
          "5060:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "5057:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: _Foo')",
          "",
          "[Added Lines]",
          "5046:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: _Foo', 6)",
          "",
          "---------------",
          "--- Hunk 127 ---",
          "[Context before]",
          "5066:       enddef",
          "5067:     endclass",
          "5068:   END",
          "5071:   # Duplicate private class method",
          "5072:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "5069:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: Foo')",
          "",
          "[Added Lines]",
          "5058:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: Foo', 6)",
          "",
          "---------------",
          "--- Hunk 128 ---",
          "[Context before]",
          "5078:       enddef",
          "5079:     endclass",
          "5080:   END",
          "5083:   # Duplicate private class and object method",
          "5084:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "5081:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: _Foo')",
          "",
          "[Added Lines]",
          "5070:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: _Foo', 6)",
          "",
          "---------------",
          "--- Hunk 129 ---",
          "[Context before]",
          "5090:       enddef",
          "5091:     endclass",
          "5092:   END",
          "5094: enddef",
          "5096: \" Test for an instance method access level comparison with parent instance",
          "",
          "[Removed Lines]",
          "5093:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: _Foo')",
          "",
          "[Added Lines]",
          "5082:   v9.CheckSourceFailure(lines, 'E1355: Duplicate function: _Foo', 6)",
          "",
          "---------------",
          "--- Hunk 130 ---",
          "[Context before]",
          "5110:       enddef",
          "5111:     endclass",
          "5112:   END",
          "5115:   # Public method in subclass",
          "5116:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "5113:   v9.CheckSourceFailure(lines, 'E1377: Access level of method \"_Foo\" is different in class \"A\"')",
          "",
          "[Added Lines]",
          "5102:   v9.CheckSourceFailure(lines, 'E1377: Access level of method \"_Foo\" is different in class \"A\"', 11)",
          "",
          "---------------",
          "--- Hunk 131 ---",
          "[Context before]",
          "5126:       enddef",
          "5127:     endclass",
          "5128:   END",
          "5130: enddef",
          "5132: def Test_extend_empty_class()",
          "",
          "[Removed Lines]",
          "5129:   v9.CheckSourceFailure(lines, 'E1377: Access level of method \"Foo\" is different in class \"A\"')",
          "",
          "[Added Lines]",
          "5118:   v9.CheckSourceFailure(lines, 'E1377: Access level of method \"Foo\" is different in class \"A\"', 11)",
          "",
          "---------------",
          "--- Hunk 132 ---",
          "[Context before]",
          "5164:       static num: number",
          "5165:     endinterface",
          "5166:   END",
          "5169:   lines =<< trim END",
          "5170:     vim9script",
          "",
          "[Removed Lines]",
          "5167:   v9.CheckSourceFailure(lines, 'E1378: Static member not supported in an interface')",
          "",
          "[Added Lines]",
          "5156:   v9.CheckSourceFailure(lines, 'E1378: Static member not supported in an interface', 3)",
          "",
          "---------------",
          "--- Hunk 133 ---",
          "[Context before]",
          "5172:       static _num: number",
          "5173:     endinterface",
          "5174:   END",
          "5177:   lines =<< trim END",
          "5178:     vim9script",
          "",
          "[Removed Lines]",
          "5175:   v9.CheckSourceFailure(lines, 'E1378: Static member not supported in an interface')",
          "",
          "[Added Lines]",
          "5164:   v9.CheckSourceFailure(lines, 'E1378: Static member not supported in an interface', 3)",
          "",
          "---------------",
          "--- Hunk 134 ---",
          "[Context before]",
          "5180:       public static num: number",
          "5181:     endinterface",
          "5182:   END",
          "5185:   lines =<< trim END",
          "5186:     vim9script",
          "",
          "[Removed Lines]",
          "5183:   v9.CheckSourceFailure(lines, 'E1387: Public variable not supported in an interface')",
          "",
          "[Added Lines]",
          "5172:   v9.CheckSourceFailure(lines, 'E1387: Public variable not supported in an interface', 3)",
          "",
          "---------------",
          "--- Hunk 135 ---",
          "[Context before]",
          "5188:       public static num: number",
          "5189:     endinterface",
          "5190:   END",
          "5193:   lines =<< trim END",
          "5194:     vim9script",
          "",
          "[Removed Lines]",
          "5191:   v9.CheckSourceFailure(lines, 'E1387: Public variable not supported in an interface')",
          "",
          "[Added Lines]",
          "5180:   v9.CheckSourceFailure(lines, 'E1387: Public variable not supported in an interface', 3)",
          "",
          "---------------",
          "--- Hunk 136 ---",
          "[Context before]",
          "5196:       static _num: number",
          "5197:     endinterface",
          "5198:   END",
          "5201:   lines =<< trim END",
          "5202:     vim9script",
          "",
          "[Removed Lines]",
          "5199:   v9.CheckSourceFailure(lines, 'E1378: Static member not supported in an interface')",
          "",
          "[Added Lines]",
          "5188:   v9.CheckSourceFailure(lines, 'E1378: Static member not supported in an interface', 3)",
          "",
          "---------------",
          "--- Hunk 137 ---",
          "[Context before]",
          "5204:       static def Foo(d: dict<any>): list<string>",
          "5205:     endinterface",
          "5206:   END",
          "5209:   lines =<< trim END",
          "5210:     vim9script",
          "",
          "[Removed Lines]",
          "5207:   v9.CheckSourceFailure(lines, 'E1378: Static member not supported in an interface')",
          "",
          "[Added Lines]",
          "5196:   v9.CheckSourceFailure(lines, 'E1378: Static member not supported in an interface', 3)",
          "",
          "---------------",
          "--- Hunk 138 ---",
          "[Context before]",
          "5212:       static def _Foo(d: dict<any>): list<string>",
          "5213:     endinterface",
          "5214:   END",
          "5217:   lines =<< trim END",
          "5218:     vim9script",
          "",
          "[Removed Lines]",
          "5215:   v9.CheckSourceFailure(lines, 'E1378: Static member not supported in an interface')",
          "",
          "[Added Lines]",
          "5204:   v9.CheckSourceFailure(lines, 'E1378: Static member not supported in an interface', 3)",
          "",
          "---------------",
          "--- Hunk 139 ---",
          "[Context before]",
          "5220:       this._Foo: list<string>",
          "5221:     endinterface",
          "5222:   END",
          "5225:   lines =<< trim END",
          "5226:     vim9script",
          "",
          "[Removed Lines]",
          "5223:   v9.CheckSourceFailure(lines, 'E1379: Private variable not supported in an interface')",
          "",
          "[Added Lines]",
          "5212:   v9.CheckSourceFailure(lines, 'E1379: Private variable not supported in an interface', 3)",
          "",
          "---------------",
          "--- Hunk 140 ---",
          "[Context before]",
          "5228:       def _Foo(d: dict<any>): list<string>",
          "5229:     endinterface",
          "5230:   END",
          "5232: enddef",
          "5234: \" Test for extending an interface",
          "",
          "[Removed Lines]",
          "5231:   v9.CheckSourceFailure(lines, 'E1380: Private method not supported in an interface')",
          "",
          "[Added Lines]",
          "5220:   v9.CheckSourceFailure(lines, 'E1380: Private method not supported in an interface', 3)",
          "",
          "---------------",
          "--- Hunk 141 ---",
          "[Context before]",
          "5266:       this.var2 = {a: '1'}",
          "5267:     endclass",
          "5268:   END",
          "5271:   lines =<< trim END",
          "5272:     vim9script",
          "",
          "[Removed Lines]",
          "5269:   v9.CheckSourceFailure(lines, 'E1349: Method \"Foo\" of interface \"A\" is not implemented')",
          "",
          "[Added Lines]",
          "5258:   v9.CheckSourceFailure(lines, 'E1349: Method \"Foo\" of interface \"A\" is not implemented', 10)",
          "",
          "---------------",
          "--- Hunk 142 ---",
          "[Context before]",
          "5281:       enddef",
          "5282:     endclass",
          "5283:   END",
          "5286:   # interface cannot extend a class",
          "5287:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "5284:   v9.CheckSourceFailure(lines, 'E1348: Variable \"var2\" of interface \"B\" is not implemented')",
          "",
          "[Added Lines]",
          "5273:   v9.CheckSourceFailure(lines, 'E1348: Variable \"var2\" of interface \"B\" is not implemented', 11)",
          "",
          "---------------",
          "--- Hunk 143 ---",
          "[Context before]",
          "5291:     interface B extends A",
          "5292:     endinterface",
          "5293:   END",
          "5296:   # class cannot extend an interface",
          "5297:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "5294:   v9.CheckSourceFailure(lines, 'E1354: Cannot extend A')",
          "",
          "[Added Lines]",
          "5283:   v9.CheckSourceFailure(lines, 'E1354: Cannot extend A', 5)",
          "",
          "---------------",
          "--- Hunk 144 ---",
          "[Context before]",
          "5301:     class B extends A",
          "5302:     endclass",
          "5303:   END",
          "5306:   # interface cannot implement another interface",
          "5307:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "5304:   v9.CheckSourceFailure(lines, 'E1354: Cannot extend A')",
          "",
          "[Added Lines]",
          "5293:   v9.CheckSourceFailure(lines, 'E1354: Cannot extend A', 5)",
          "",
          "---------------",
          "--- Hunk 145 ---",
          "[Context before]",
          "5311:     interface B implements A",
          "5312:     endinterface",
          "5313:   END",
          "5316:   # interface cannot extend multiple interfaces",
          "5317:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "5314:   v9.CheckSourceFailure(lines, 'E1381: Interface cannot use \"implements\"')",
          "",
          "[Added Lines]",
          "5303:   v9.CheckSourceFailure(lines, 'E1381: Interface cannot use \"implements\"', 4)",
          "",
          "---------------",
          "--- Hunk 146 ---",
          "[Context before]",
          "5323:     interface C extends A, B",
          "5324:     endinterface",
          "5325:   END",
          "5328:   # Variable type in an extended interface is of different type",
          "5329:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "5326:   v9.CheckSourceFailure(lines, 'E1315: White space required after name: A, B')",
          "",
          "[Added Lines]",
          "5315:   v9.CheckSourceFailure(lines, 'E1315: White space required after name: A, B', 6)",
          "",
          "---------------",
          "--- Hunk 147 ---",
          "[Context before]",
          "5339:       this.val2: number",
          "5340:     endinterface",
          "5341:   END",
          "5343: enddef",
          "5345: \" Test for a child class implementing an interface when some of the methods are",
          "",
          "[Removed Lines]",
          "5342:   v9.CheckSourceFailure(lines, 'E1382: Variable \"val1\": type mismatch, expected number but got string')",
          "",
          "[Added Lines]",
          "5331:   v9.CheckSourceFailure(lines, 'E1382: Variable \"val1\": type mismatch, expected number but got string', 11)",
          "",
          "---------------",
          "--- Hunk 148 ---",
          "[Context before]",
          "5436:       enddef",
          "5437:     endclass",
          "5438:   END",
          "5441:   # One of the interface methods is of different type",
          "5442:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "5439:   v9.CheckSourceFailure(lines, 'E1349: Method \"F3\" of interface \"Intf\" is not implemented')",
          "",
          "[Added Lines]",
          "5428:   v9.CheckSourceFailure(lines, 'E1349: Method \"F3\" of interface \"Intf\" is not implemented', 26)",
          "",
          "---------------",
          "--- Hunk 149 ---",
          "[Context before]",
          "5470:       enddef",
          "5471:     endclass",
          "5472:   END",
          "5475:   # One of the interface variables is not present",
          "5476:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "5473:   v9.CheckSourceFailure(lines, 'E1383: Method \"F3\": type mismatch, expected func() but got func(): number')",
          "",
          "[Added Lines]",
          "5462:   v9.CheckSourceFailure(lines, 'E1383: Method \"F3\": type mismatch, expected func() but got func(): number', 29)",
          "",
          "---------------",
          "--- Hunk 150 ---",
          "[Context before]",
          "5496:       this.var1 = [{a: 10}]",
          "5497:     endclass",
          "5498:   END",
          "5501:   # One of the interface variables is of different type",
          "5502:   lines =<< trim END",
          "",
          "[Removed Lines]",
          "5499:   v9.CheckSourceFailure(lines, 'E1348: Variable \"var3\" of interface \"Intf\" is not implemented')",
          "",
          "[Added Lines]",
          "5488:   v9.CheckSourceFailure(lines, 'E1348: Variable \"var3\" of interface \"Intf\" is not implemented', 21)",
          "",
          "---------------",
          "--- Hunk 151 ---",
          "[Context before]",
          "5523:       this.var1 = [{a: 10}]",
          "5524:     endclass",
          "5525:   END",
          "5527: enddef",
          "5529: \" Test for extending an interface with duplicate variables and methods",
          "",
          "[Removed Lines]",
          "5526:   v9.CheckSourceFailure(lines, 'E1382: Variable \"var3\": type mismatch, expected list<dict<number>> but got list<dict<string>>')",
          "",
          "[Added Lines]",
          "5515:   v9.CheckSourceFailure(lines, 'E1382: Variable \"var3\": type mismatch, expected list<dict<number>> but got list<dict<string>>', 22)",
          "",
          "---------------",
          "--- Hunk 152 ---",
          "[Context before]",
          "5594:     endclass",
          "5595:     var b = B.new()",
          "5596:   END",
          "5598: enddef",
          "5600: \" Test for assigning to a member variable in a nested class",
          "",
          "[Removed Lines]",
          "5597:   v9.CheckSourceFailure(lines, 'E1382: Variable \"val\": type mismatch, expected list<dict<string>> but got dict<number>')",
          "",
          "[Added Lines]",
          "5586:   v9.CheckSourceFailure(lines, 'E1382: Variable \"val\": type mismatch, expected list<dict<string>> but got dict<number>', 1)",
          "",
          "---------------",
          "--- Hunk 153 ---",
          "[Context before]",
          "5603:     vim9script",
          "5605:     class A",
          "5607:     endclass",
          "5609:     class B",
          "5611:     endclass",
          "5613:     class C",
          "5615:     endclass",
          "5617:     class D",
          "5619:     endclass",
          "5621:     def T(da: D)",
          "5623:     enddef",
          "5625:     var d = D.new()",
          "5626:     T(d)",
          "5627:   END",
          "5629: enddef",
          "5631: \" Test for calling methods using a null object",
          "",
          "[Removed Lines]",
          "5606:         this.value: number",
          "5610:         this.a: A = A.new()",
          "5614:         this.b: B = B.new()",
          "5618:         this.c: C = C.new()",
          "5622:         da.c.b.a.value = 10",
          "5628:   v9.CheckSourceFailure(lines, 'E1335: Variable \"value\" in class \"A\" is not writable')",
          "",
          "[Added Lines]",
          "5595:       this.value: number",
          "5599:       this.a: A = A.new()",
          "5603:       this.b: B = B.new()",
          "5607:       this.c: C = C.new()",
          "5611:       da.c.b.a.value = 10",
          "5617:   v9.CheckSourceFailure(lines, 'E1335: Variable \"value\" in class \"A\" is not writable', 1)",
          "",
          "---------------"
        ],
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "700: static int included_patches[] =",
          "703:     1950,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "703:     1951,",
          "",
          "---------------"
        ],
        "src/vim9class.c||src/vim9class.c": [
          "File: src/vim9class.c -> src/vim9class.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1577:      }",
          "1578:      if (!is_class)",
          "1579:      {",
          "1581:   break;",
          "1582:      }",
          "1583:      has_public = TRUE;",
          "",
          "[Removed Lines]",
          "1580:   emsg(_(e_public_member_not_supported_in_interface));",
          "",
          "[Added Lines]",
          "1580:   emsg(_(e_public_variable_not_supported_in_interface));",
          "",
          "---------------"
        ]
      }
    }
  ]
}