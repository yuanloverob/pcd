{
  "cve_id": "CVE-2018-12326",
  "cve_desc": "Buffer overflow in redis-cli of Redis before 4.0.10 and 5.x before 5.0 RC3 allows an attacker to achieve code execution and escalate to higher privileges via a crafted command line. NOTE: It is unclear whether there are any common situations in which redis-cli is used with, for example, a -h (aka hostname) argument from an untrusted source.",
  "repo": "antirez/redis",
  "patch_hash": "9fdcc15962f9ff4baebe6fdd947816f43f730d50",
  "patch_info": {
    "commit_hash": "9fdcc15962f9ff4baebe6fdd947816f43f730d50",
    "repo": "antirez/redis",
    "commit_url": "https://github.com/antirez/redis/commit/9fdcc15962f9ff4baebe6fdd947816f43f730d50",
    "files": [
      "src/redis-cli.c"
    ],
    "message": "Security: fix redis-cli buffer overflow.\n\nThanks to Fakhri Zulkifli for reporting it.\n\nThe fix switched to dynamic allocation, copying the final prompt in the\nstatic buffer only at the end.",
    "before_after_code_files": [
      "src/redis-cli.c||src/redis-cli.c"
    ]
  },
  "patch_diff": {
    "src/redis-cli.c||src/redis-cli.c": [
      "File: src/redis-cli.c -> src/redis-cli.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "152: }",
      "154: static void cliRefreshPrompt(void) {",
      "157:     if (config.eval_ldb) return;",
      "165:     if (config.dbnum != 0)",
      "169: }",
      "",
      "[Removed Lines]",
      "155:     int len;",
      "158:     if (config.hostsocket != NULL)",
      "159:         len = snprintf(config.prompt,sizeof(config.prompt),\"redis %s\",",
      "160:                        config.hostsocket);",
      "161:     else",
      "162:         len = anetFormatAddr(config.prompt, sizeof(config.prompt),",
      "163:                            config.hostip, config.hostport);",
      "166:         len += snprintf(config.prompt+len,sizeof(config.prompt)-len,\"[%d]\",",
      "167:             config.dbnum);",
      "168:     snprintf(config.prompt+len,sizeof(config.prompt)-len,\"> \");",
      "",
      "[Added Lines]",
      "157:     sds prompt = sdsempty();",
      "158:     if (config.hostsocket != NULL) {",
      "159:         prompt = sdscatfmt(prompt,\"redis %s\",config.hostsocket);",
      "160:     } else {",
      "161:         char addr[256];",
      "162:         anetFormatAddr(addr, sizeof(addr), config.hostip, config.hostport);",
      "163:         prompt = sdscatlen(prompt,addr,strlen(addr));",
      "164:     }",
      "168:         prompt = sdscatfmt(prompt,\"[%i]\",config.dbnum);",
      "171:     prompt = sdscatlen(prompt,\"> \",2);",
      "172:     snprintf(config.prompt,sizeof(config.prompt),\"%s\",prompt);",
      "173:     sdsfree(prompt);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "37578f2ecf32169bc68eead148feca9dab3f7e1b",
      "candidate_info": {
        "commit_hash": "37578f2ecf32169bc68eead148feca9dab3f7e1b",
        "repo": "antirez/redis",
        "commit_url": "https://github.com/antirez/redis/commit/37578f2ecf32169bc68eead148feca9dab3f7e1b",
        "files": [
          "src/redis-cli.c"
        ],
        "message": "Security: fix redis-cli buffer overflow.\n\nThanks to Fakhri Zulkifli for reporting it.\n\nThe fix switched to dynamic allocation, copying the final prompt in the\nstatic buffer only at the end.",
        "before_after_code_files": [
          "src/redis-cli.c||src/redis-cli.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/redis-cli.c||src/redis-cli.c"
          ],
          "candidate": [
            "src/redis-cli.c||src/redis-cli.c"
          ]
        }
      },
      "candidate_diff": {
        "src/redis-cli.c||src/redis-cli.c": [
          "File: src/redis-cli.c -> src/redis-cli.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "151: }",
          "153: static void cliRefreshPrompt(void) {",
          "156:     if (config.eval_ldb) return;",
          "164:     if (config.dbnum != 0)",
          "168: }",
          "",
          "[Removed Lines]",
          "154:     int len;",
          "157:     if (config.hostsocket != NULL)",
          "158:         len = snprintf(config.prompt,sizeof(config.prompt),\"redis %s\",",
          "159:                        config.hostsocket);",
          "160:     else",
          "161:         len = anetFormatAddr(config.prompt, sizeof(config.prompt),",
          "162:                            config.hostip, config.hostport);",
          "165:         len += snprintf(config.prompt+len,sizeof(config.prompt)-len,\"[%d]\",",
          "166:             config.dbnum);",
          "167:     snprintf(config.prompt+len,sizeof(config.prompt)-len,\"> \");",
          "",
          "[Added Lines]",
          "156:     sds prompt = sdsempty();",
          "157:     if (config.hostsocket != NULL) {",
          "158:         prompt = sdscatfmt(prompt,\"redis %s\",config.hostsocket);",
          "159:     } else {",
          "160:         char addr[256];",
          "161:         anetFormatAddr(addr, sizeof(addr), config.hostip, config.hostport);",
          "162:         prompt = sdscatlen(prompt,addr,strlen(addr));",
          "163:     }",
          "167:         prompt = sdscatfmt(prompt,\"[%i]\",config.dbnum);",
          "170:     prompt = sdscatlen(prompt,\"> \",2);",
          "171:     snprintf(config.prompt,sizeof(config.prompt),\"%s\",prompt);",
          "172:     sdsfree(prompt);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b80e4b692585d6b856c6904d34119e4926272dde",
      "candidate_info": {
        "commit_hash": "b80e4b692585d6b856c6904d34119e4926272dde",
        "repo": "antirez/redis",
        "commit_url": "https://github.com/antirez/redis/commit/b80e4b692585d6b856c6904d34119e4926272dde",
        "files": [
          "src/redis-cli.c"
        ],
        "message": "Security: fix redis-cli buffer overflow.\n\nThanks to Fakhri Zulkifli for reporting it.\n\nThe fix switched to dynamic allocation, copying the final prompt in the\nstatic buffer only at the end.",
        "before_after_code_files": [
          "src/redis-cli.c||src/redis-cli.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/redis-cli.c||src/redis-cli.c"
          ],
          "candidate": [
            "src/redis-cli.c||src/redis-cli.c"
          ]
        }
      },
      "candidate_diff": {
        "src/redis-cli.c||src/redis-cli.c": [
          "File: src/redis-cli.c -> src/redis-cli.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "258: }",
          "260: static void cliRefreshPrompt(void) {",
          "263:     if (config.eval_ldb) return;",
          "271:     if (config.dbnum != 0)",
          "275: }",
          "",
          "[Removed Lines]",
          "261:     int len;",
          "264:     if (config.hostsocket != NULL)",
          "265:         len = snprintf(config.prompt,sizeof(config.prompt),\"redis %s\",",
          "266:                        config.hostsocket);",
          "267:     else",
          "268:         len = anetFormatAddr(config.prompt, sizeof(config.prompt),",
          "269:                            config.hostip, config.hostport);",
          "272:         len += snprintf(config.prompt+len,sizeof(config.prompt)-len,\"[%d]\",",
          "273:             config.dbnum);",
          "274:     snprintf(config.prompt+len,sizeof(config.prompt)-len,\"> \");",
          "",
          "[Added Lines]",
          "263:     sds prompt = sdsempty();",
          "264:     if (config.hostsocket != NULL) {",
          "265:         prompt = sdscatfmt(prompt,\"redis %s\",config.hostsocket);",
          "266:     } else {",
          "267:         char addr[256];",
          "268:         anetFormatAddr(addr, sizeof(addr), config.hostip, config.hostport);",
          "269:         prompt = sdscatlen(prompt,addr,strlen(addr));",
          "270:     }",
          "274:         prompt = sdscatfmt(prompt,\"[%i]\",config.dbnum);",
          "277:     prompt = sdscatlen(prompt,\"> \",2);",
          "278:     snprintf(config.prompt,sizeof(config.prompt),\"%s\",prompt);",
          "279:     sdsfree(prompt);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ce17f76bbd95f68ab6716adcbf12d49e3822b87c",
      "candidate_info": {
        "commit_hash": "ce17f76bbd95f68ab6716adcbf12d49e3822b87c",
        "repo": "antirez/redis",
        "commit_url": "https://github.com/antirez/redis/commit/ce17f76bbd95f68ab6716adcbf12d49e3822b87c",
        "files": [
          "src/redis-cli.c"
        ],
        "message": "Security: fix redis-cli buffer overflow.\n\nThanks to Fakhri Zulkifli for reporting it.\n\nThe fix switched to dynamic allocation, copying the final prompt in the\nstatic buffer only at the end.",
        "before_after_code_files": [
          "src/redis-cli.c||src/redis-cli.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/redis-cli.c||src/redis-cli.c"
          ],
          "candidate": [
            "src/redis-cli.c||src/redis-cli.c"
          ]
        }
      },
      "candidate_diff": {
        "src/redis-cli.c||src/redis-cli.c": [
          "File: src/redis-cli.c -> src/redis-cli.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "258: }",
          "260: static void cliRefreshPrompt(void) {",
          "263:     if (config.eval_ldb) return;",
          "271:     if (config.dbnum != 0)",
          "275: }",
          "",
          "[Removed Lines]",
          "261:     int len;",
          "264:     if (config.hostsocket != NULL)",
          "265:         len = snprintf(config.prompt,sizeof(config.prompt),\"redis %s\",",
          "266:                        config.hostsocket);",
          "267:     else",
          "268:         len = anetFormatAddr(config.prompt, sizeof(config.prompt),",
          "269:                            config.hostip, config.hostport);",
          "272:         len += snprintf(config.prompt+len,sizeof(config.prompt)-len,\"[%d]\",",
          "273:             config.dbnum);",
          "274:     snprintf(config.prompt+len,sizeof(config.prompt)-len,\"> \");",
          "",
          "[Added Lines]",
          "263:     sds prompt = sdsempty();",
          "264:     if (config.hostsocket != NULL) {",
          "265:         prompt = sdscatfmt(prompt,\"redis %s\",config.hostsocket);",
          "266:     } else {",
          "267:         char addr[256];",
          "268:         anetFormatAddr(addr, sizeof(addr), config.hostip, config.hostport);",
          "269:         prompt = sdscatlen(prompt,addr,strlen(addr));",
          "270:     }",
          "274:         prompt = sdscatfmt(prompt,\"[%i]\",config.dbnum);",
          "277:     prompt = sdscatlen(prompt,\"> \",2);",
          "278:     snprintf(config.prompt,sizeof(config.prompt),\"%s\",prompt);",
          "279:     sdsfree(prompt);",
          "",
          "---------------"
        ]
      }
    }
  ]
}