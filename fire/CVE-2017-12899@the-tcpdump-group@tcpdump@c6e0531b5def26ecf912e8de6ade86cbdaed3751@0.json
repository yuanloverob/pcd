{
  "cve_id": "CVE-2017-12899",
  "cve_desc": "The DECnet parser in tcpdump before 4.9.2 has a buffer over-read in print-decnet.c:decnet_print().",
  "repo": "the-tcpdump-group/tcpdump",
  "patch_hash": "c6e0531b5def26ecf912e8de6ade86cbdaed3751",
  "patch_info": {
    "commit_hash": "c6e0531b5def26ecf912e8de6ade86cbdaed3751",
    "repo": "the-tcpdump-group/tcpdump",
    "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/c6e0531b5def26ecf912e8de6ade86cbdaed3751",
    "files": [
      "print-decnet.c",
      "tests/TESTLIST",
      "tests/decnet-oobr.out",
      "tests/decnet-oobr.pcap"
    ],
    "message": "CVE-2017-12899/DECnet: Fix bounds checking.\n\nIf we're skipping over padding before the *real* flags, check whether\nthe real flags are in the captured data before fetching it.  This fixes\na buffer over-read discovered by Kamil Frankowicz.\n\nNote one place where we don't need to do bounds checking as it's already\nbeen done.\n\nAdd a test using the capture file supplied by the reporter(s).",
    "before_after_code_files": [
      "print-decnet.c||print-decnet.c"
    ]
  },
  "patch_diff": {
    "print-decnet.c||print-decnet.c": [
      "File: print-decnet.c -> print-decnet.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "542:      length -= padlen;",
      "543:      caplen -= padlen;",
      "544:      rhp = (const union routehdr *)&(ap[sizeof(short)]);",
      "545:      mflags = EXTRACT_LE_8BITS(rhp->rh_short.sh_flags);",
      "546:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "545:      ND_TCHECK(rhp->rh_short.sh_flags);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d22cb958d769aad307264be0c9a09b56583ee607",
      "candidate_info": {
        "commit_hash": "d22cb958d769aad307264be0c9a09b56583ee607",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/d22cb958d769aad307264be0c9a09b56583ee607",
        "files": [
          "print-decnet.c"
        ],
        "message": "DECnet: Use more ND_TCHECK_n() macros",
        "before_after_code_files": [
          "print-decnet.c||print-decnet.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-decnet.c||print-decnet.c"
          ],
          "candidate": [
            "print-decnet.c||print-decnet.c"
          ]
        }
      },
      "candidate_diff": {
        "print-decnet.c||print-decnet.c": [
          "File: print-decnet.c -> print-decnet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "528:  length = pktlen;",
          "530:  rhp = (const union routehdr *)(ap + sizeof(short));",
          "532:  mflags = EXTRACT_U_1(rhp->rh_short.sh_flags);",
          "534:  if (mflags & RMF_PAD) {",
          "",
          "[Removed Lines]",
          "531:  ND_TCHECK(rhp->rh_short.sh_flags);",
          "",
          "[Added Lines]",
          "531:  ND_TCHECK_1(rhp->rh_short.sh_flags);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "545:      length -= padlen;",
          "546:      caplen -= padlen;",
          "547:      rhp = (const union routehdr *)(ap + sizeof(short));",
          "549:      mflags = EXTRACT_U_1(rhp->rh_short.sh_flags);",
          "550:  }",
          "",
          "[Removed Lines]",
          "548:      ND_TCHECK(rhp->rh_short.sh_flags);",
          "",
          "[Added Lines]",
          "548:      ND_TCHECK_1(rhp->rh_short.sh_flags);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "880:       if (nsplen < data_off)",
          "881:    goto trunc;",
          "883:       ack = EXTRACT_LE_U_2(shp->sh_seq[0]);",
          "885:    if ((ack & SGQ_NAK) == SGQ_NAK)",
          "",
          "[Removed Lines]",
          "882:       ND_TCHECK(shp->sh_seq[0]);",
          "",
          "[Added Lines]",
          "882:       ND_TCHECK_2(shp->sh_seq[0]);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "889:    data_off += sizeof(short);",
          "890:    if (nsplen < data_off)",
          "891:        goto trunc;",
          "893:           ack = EXTRACT_LE_U_2(shp->sh_seq[1]);",
          "895:        if ((ack & SGQ_ONAK) == SGQ_ONAK)",
          "",
          "[Removed Lines]",
          "892:    ND_TCHECK(shp->sh_seq[1]);",
          "",
          "[Added Lines]",
          "892:    ND_TCHECK_2(shp->sh_seq[1]);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "899:        data_off += sizeof(short);",
          "900:        if (nsplen < data_off)",
          "901:     goto trunc;",
          "903:        ack = EXTRACT_LE_U_2(shp->sh_seq[2]);",
          "904:    }",
          "905:       }",
          "",
          "[Removed Lines]",
          "902:        ND_TCHECK(shp->sh_seq[2]);",
          "",
          "[Added Lines]",
          "902:        ND_TCHECK_2(shp->sh_seq[2]);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "916:       if (nsplen < data_off)",
          "917:    goto trunc;",
          "919:       ack = EXTRACT_LE_U_2(shp->sh_seq[0]);",
          "921:    if ((ack & SGQ_NAK) == SGQ_NAK)",
          "",
          "[Removed Lines]",
          "918:       ND_TCHECK(shp->sh_seq[0]);",
          "",
          "[Added Lines]",
          "918:       ND_TCHECK_2(shp->sh_seq[0]);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "925:    data_off += sizeof(short);",
          "926:    if (nsplen < data_off)",
          "927:        goto trunc;",
          "929:           ack = EXTRACT_LE_U_2(shp->sh_seq[1]);",
          "931:        if ((ack & SGQ_ONAK) == SGQ_ONAK)",
          "",
          "[Removed Lines]",
          "928:    ND_TCHECK(shp->sh_seq[1]);",
          "",
          "[Added Lines]",
          "928:    ND_TCHECK_2(shp->sh_seq[1]);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "935:        data_off += sizeof(short);",
          "936:        if (nsplen < data_off)",
          "937:     goto trunc;",
          "939:        ack = EXTRACT_LE_U_2(shp->sh_seq[2]);",
          "940:    }",
          "941:       }",
          "",
          "[Removed Lines]",
          "938:        ND_TCHECK(shp->sh_seq[2]);",
          "",
          "[Added Lines]",
          "938:        ND_TCHECK_2(shp->sh_seq[2]);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "954:       if (nsplen < sizeof(struct seghdr) + sizeof(struct lsmsg))",
          "955:    goto trunc;",
          "957:       ack = EXTRACT_LE_U_2(shp->sh_seq[0]);",
          "959:    if ((ack & SGQ_NAK) == SGQ_NAK)",
          "960:        ND_PRINT(\"nak %u \", ack & SGQ_MASK);",
          "961:    else",
          "962:        ND_PRINT(\"ack %u \", ack & SGQ_MASK);",
          "964:           ack = EXTRACT_LE_U_2(shp->sh_seq[1]);",
          "966:        if ((ack & SGQ_ONAK) == SGQ_ONAK)",
          "967:     ND_PRINT(\"nakdat %u \", ack & SGQ_MASK);",
          "968:        else",
          "969:     ND_PRINT(\"ackdat %u \", ack & SGQ_MASK);",
          "971:        ack = EXTRACT_LE_U_2(shp->sh_seq[2]);",
          "972:    }",
          "973:       }",
          "",
          "[Removed Lines]",
          "956:       ND_TCHECK(shp->sh_seq[0]);",
          "963:    ND_TCHECK(shp->sh_seq[1]);",
          "970:        ND_TCHECK(shp->sh_seq[2]);",
          "",
          "[Added Lines]",
          "956:       ND_TCHECK_2(shp->sh_seq[0]);",
          "963:    ND_TCHECK_2(shp->sh_seq[1]);",
          "970:        ND_TCHECK_2(shp->sh_seq[2]);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1048:        ND_PRINT(\"nak %u \", ack & SGQ_MASK);",
          "1049:    else",
          "1050:        ND_PRINT(\"ack %u \", ack & SGQ_MASK);",
          "1052:           ack = EXTRACT_LE_U_2(amp->ak_acknum[1]);",
          "1054:        if ((ack & SGQ_ONAK) == SGQ_ONAK)",
          "",
          "[Removed Lines]",
          "1051:    ND_TCHECK(amp->ak_acknum[1]);",
          "",
          "[Added Lines]",
          "1051:    ND_TCHECK_2(amp->ak_acknum[1]);",
          "",
          "---------------"
        ]
      }
    }
  ]
}