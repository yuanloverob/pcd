{
  "cve_id": "CVE-2021-46784",
  "cve_desc": "In Squid 3.x through 3.5.28, 4.x through 4.17, and 5.x before 5.6, due to improper buffer management, a Denial of Service can occur when processing long Gopher server responses.",
  "repo": "squid-cache/squid",
  "patch_hash": "5e2ea2b13bd98f53e29964ca26bb0d602a8a12b9",
  "patch_info": {
    "commit_hash": "5e2ea2b13bd98f53e29964ca26bb0d602a8a12b9",
    "repo": "squid-cache/squid",
    "commit_url": "https://github.com/squid-cache/squid/commit/5e2ea2b13bd98f53e29964ca26bb0d602a8a12b9",
    "files": [
      "src/gopher.cc"
    ],
    "message": "Improve handling of Gopher responses (#1022)",
    "before_after_code_files": [
      "src/gopher.cc||src/gopher.cc"
    ]
  },
  "patch_diff": {
    "src/gopher.cc||src/gopher.cc": [
      "File: src/gopher.cc -> src/gopher.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "365:     char *lpos = NULL;",
      "366:     char *tline = NULL;",
      "367:     LOCAL_ARRAY(char, line, TEMP_BUF_SIZE);",
      "369:     char *name = NULL;",
      "370:     char *selector = NULL;",
      "371:     char *host = NULL;",
      "",
      "[Removed Lines]",
      "368:     LOCAL_ARRAY(char, tmpbuf, TEMP_BUF_SIZE);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "375:     char gtype;",
      "376:     StoreEntry *entry = NULL;",
      "379:     memset(line, '\\0', TEMP_BUF_SIZE);",
      "381:     entry = gopherState->entry;",
      "",
      "[Removed Lines]",
      "378:     memset(tmpbuf, '\\0', TEMP_BUF_SIZE);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "410:         return;",
      "411:     }",
      "415:     if (!gopherState->HTML_header_added) {",
      "416:         if (gopherState->conversion == GopherStateData::HTML_CSO_RESULT)",
      "",
      "[Removed Lines]",
      "413:     String outbuf;",
      "",
      "[Added Lines]",
      "411:     SBuf outbuf;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "582:                         break;",
      "583:                     }",
      "587:                     if ((gtype == GOPHER_TELNET) || (gtype == GOPHER_3270)) {",
      "588:                         if (strlen(escaped_selector) != 0)",
      "590:                                      icon_url, escaped_selector, rfc1738_escape_part(host),",
      "592:                         else",
      "594:                                      icon_url, rfc1738_escape_part(host), *port ? \":\" : \"\",",
      "595:                                      port, html_quote(name));",
      "597:                     } else if (gtype == GOPHER_INFO) {",
      "599:                     } else {",
      "600:                         if (strncmp(selector, \"GET /\", 5) == 0) {",
      "603:                                      icon_url, host, rfc1738_escape_unescaped(selector + 5), html_quote(name));",
      "604:                         } else if (gtype == GOPHER_WWW) {",
      "606:                                      icon_url, rfc1738_escape_unescaped(selector), html_quote(name));",
      "607:                         } else {",
      "610:                                      icon_url, host, gtype, escaped_selector, html_quote(name));",
      "611:                         }",
      "612:                     }",
      "614:                     safe_free(escaped_selector);",
      "616:                 } else {",
      "617:                     memset(line, '\\0', TEMP_BUF_SIZE);",
      "618:                     continue;",
      "",
      "[Removed Lines]",
      "585:                     memset(tmpbuf, '\\0', TEMP_BUF_SIZE);",
      "589:                             snprintf(tmpbuf, TEMP_BUF_SIZE, \"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"telnet://%s@%s%s%s/\\\">%s</A>\\n\",",
      "593:                             snprintf(tmpbuf, TEMP_BUF_SIZE, \"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"telnet://%s%s%s/\\\">%s</A>\\n\",",
      "598:                         snprintf(tmpbuf, TEMP_BUF_SIZE, \"\\t%s\\n\", html_quote(name));",
      "602:                             snprintf(tmpbuf, TEMP_BUF_SIZE, \"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"http://%s/%s\\\">%s</A>\\n\",",
      "605:                             snprintf(tmpbuf, TEMP_BUF_SIZE, \"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"%s\\\">%s</A>\\n\",",
      "609:                             snprintf(tmpbuf, TEMP_BUF_SIZE, \"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"gopher://%s/%c%s\\\">%s</A>\\n\",",
      "615:                     outbuf.append(tmpbuf);",
      "",
      "[Added Lines]",
      "585:                             outbuf.appendf(\"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"telnet://%s@%s%s%s/\\\">%s</A>\\n\",",
      "589:                             outbuf.appendf(\"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"telnet://%s%s%s/\\\">%s</A>\\n\",",
      "594:                         outbuf.appendf(\"\\t%s\\n\", html_quote(name));",
      "598:                             outbuf.appendf(\"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"http://%s/%s\\\">%s</A>\\n\",",
      "601:                             outbuf.appendf(\"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"gopher://%s/%c%s\\\">%s</A>\\n\",",
      "605:                             outbuf.appendf(\"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"gopher://%s/%c%s\\\">%s</A>\\n\",",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "645:                     break;",
      "647:                 if (gopherState->cso_recno != recno) {",
      "649:                     gopherState->cso_recno = recno;",
      "650:                 } else {",
      "652:                 }",
      "655:                 break;",
      "656:             } else {",
      "657:                 int code;",
      "",
      "[Removed Lines]",
      "648:                     snprintf(tmpbuf, TEMP_BUF_SIZE, \"</PRE><HR noshade size=\\\"1px\\\"><H2>Record# %d<br><i>%s</i></H2>\\n<PRE>\", recno, html_quote(result));",
      "651:                     snprintf(tmpbuf, TEMP_BUF_SIZE, \"%s\\n\", html_quote(result));",
      "654:                 outbuf.append(tmpbuf);",
      "",
      "[Added Lines]",
      "643:                     outbuf.appendf(\"</PRE><HR noshade size=\\\"1px\\\"><H2>Record# %d<br><i>%s</i></H2>\\n<PRE>\", recno, html_quote(result));",
      "646:                     outbuf.appendf(\"%s\\n\", html_quote(result));",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "684:                     break;",
      "685:                 }",
      "",
      "[Removed Lines]",
      "682:                     snprintf(tmpbuf, TEMP_BUF_SIZE, \"</PRE><HR noshade size=\\\"1px\\\"><H2>%s</H2>\\n<PRE>\", html_quote(result));",
      "683:                     outbuf.append(tmpbuf);",
      "",
      "[Added Lines]",
      "676:                     outbuf.appendf(\"</PRE><HR noshade size=\\\"1px\\\"><H2>%s</H2>\\n<PRE>\", html_quote(result));",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "702:         entry->flush();",
      "703:     }",
      "706:     return;",
      "707: }",
      "",
      "[Removed Lines]",
      "699:     if (outbuf.size() > 0) {",
      "700:         entry->append(outbuf.rawBuf(), outbuf.size());",
      "705:     outbuf.clean();",
      "",
      "[Added Lines]",
      "692:     if (outbuf.length() > 0) {",
      "693:         entry->append(outbuf.rawContent(), outbuf.length());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1740315dc85ade1965934b63c0a3244860bac0a1",
      "candidate_info": {
        "commit_hash": "1740315dc85ade1965934b63c0a3244860bac0a1",
        "repo": "squid-cache/squid",
        "commit_url": "https://github.com/squid-cache/squid/commit/1740315dc85ade1965934b63c0a3244860bac0a1",
        "files": [
          "src/gopher.cc"
        ],
        "message": "Improve handling of Gopher responses (#1022)",
        "before_after_code_files": [
          "src/gopher.cc||src/gopher.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/gopher.cc||src/gopher.cc"
          ],
          "candidate": [
            "src/gopher.cc||src/gopher.cc"
          ]
        }
      },
      "candidate_diff": {
        "src/gopher.cc||src/gopher.cc": [
          "File: src/gopher.cc -> src/gopher.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "365:     char *lpos = NULL;",
          "366:     char *tline = NULL;",
          "367:     LOCAL_ARRAY(char, line, TEMP_BUF_SIZE);",
          "369:     char *name = NULL;",
          "370:     char *selector = NULL;",
          "371:     char *host = NULL;",
          "",
          "[Removed Lines]",
          "368:     LOCAL_ARRAY(char, tmpbuf, TEMP_BUF_SIZE);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "375:     char gtype;",
          "376:     StoreEntry *entry = NULL;",
          "379:     memset(line, '\\0', TEMP_BUF_SIZE);",
          "381:     entry = gopherState->entry;",
          "",
          "[Removed Lines]",
          "378:     memset(tmpbuf, '\\0', TEMP_BUF_SIZE);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "410:         return;",
          "411:     }",
          "415:     if (!gopherState->HTML_header_added) {",
          "416:         if (gopherState->conversion == GopherStateData::HTML_CSO_RESULT)",
          "",
          "[Removed Lines]",
          "413:     String outbuf;",
          "",
          "[Added Lines]",
          "411:     SBuf outbuf;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "582:                         break;",
          "583:                     }",
          "587:                     if ((gtype == GOPHER_TELNET) || (gtype == GOPHER_3270)) {",
          "588:                         if (strlen(escaped_selector) != 0)",
          "592:                         else",
          "597:                     } else if (gtype == GOPHER_INFO) {",
          "599:                     } else {",
          "600:                         if (strncmp(selector, \"GET /\", 5) == 0) {",
          "604:                         } else if (gtype == GOPHER_WWW) {",
          "607:                         } else {",
          "611:                         }",
          "612:                     }",
          "614:                     safe_free(escaped_selector);",
          "616:                 } else {",
          "617:                     memset(line, '\\0', TEMP_BUF_SIZE);",
          "618:                     continue;",
          "",
          "[Removed Lines]",
          "585:                     memset(tmpbuf, '\\0', TEMP_BUF_SIZE);",
          "589:                             snprintf(tmpbuf, TEMP_BUF_SIZE, \"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"telnet://%s@%s%s%s/\\\">%s</A>\\n\",",
          "590:                                      icon_url, escaped_selector, rfc1738_escape_part(host),",
          "593:                             snprintf(tmpbuf, TEMP_BUF_SIZE, \"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"telnet://%s%s%s/\\\">%s</A>\\n\",",
          "594:                                      icon_url, rfc1738_escape_part(host), *port ? \":\" : \"\",",
          "595:                                      port, html_quote(name));",
          "598:                         snprintf(tmpbuf, TEMP_BUF_SIZE, \"\\t%s\\n\", html_quote(name));",
          "602:                             snprintf(tmpbuf, TEMP_BUF_SIZE, \"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"http://%s/%s\\\">%s</A>\\n\",",
          "603:                                      icon_url, host, rfc1738_escape_unescaped(selector + 5), html_quote(name));",
          "605:                             snprintf(tmpbuf, TEMP_BUF_SIZE, \"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"%s\\\">%s</A>\\n\",",
          "606:                                      icon_url, rfc1738_escape_unescaped(selector), html_quote(name));",
          "609:                             snprintf(tmpbuf, TEMP_BUF_SIZE, \"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"gopher://%s/%c%s\\\">%s</A>\\n\",",
          "610:                                      icon_url, host, gtype, escaped_selector, html_quote(name));",
          "615:                     outbuf.append(tmpbuf);",
          "",
          "[Added Lines]",
          "585:                             outbuf.appendf(\"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"telnet://%s@%s%s%s/\\\">%s</A>\\n\",",
          "586:                                            icon_url, escaped_selector, rfc1738_escape_part(host),",
          "589:                             outbuf.appendf(\"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"telnet://%s%s%s/\\\">%s</A>\\n\",",
          "590:                                            icon_url, rfc1738_escape_part(host), *port ? \":\" : \"\",",
          "591:                                            port, html_quote(name));",
          "594:                         outbuf.appendf(\"\\t%s\\n\", html_quote(name));",
          "598:                             outbuf.appendf(\"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"http://%s/%s\\\">%s</A>\\n\",",
          "599:                                            icon_url, host, rfc1738_escape_unescaped(selector + 5), html_quote(name));",
          "601:                             outbuf.appendf(\"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"gopher://%s/%c%s\\\">%s</A>\\n\",",
          "602:                                            icon_url, rfc1738_escape_unescaped(selector), html_quote(name));",
          "605:                             outbuf.appendf(\"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"gopher://%s/%c%s\\\">%s</A>\\n\",",
          "606:                                            icon_url, host, gtype, escaped_selector, html_quote(name));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "645:                     break;",
          "647:                 if (gopherState->cso_recno != recno) {",
          "649:                     gopherState->cso_recno = recno;",
          "650:                 } else {",
          "652:                 }",
          "655:                 break;",
          "656:             } else {",
          "657:                 int code;",
          "",
          "[Removed Lines]",
          "648:                     snprintf(tmpbuf, TEMP_BUF_SIZE, \"</PRE><HR noshade size=\\\"1px\\\"><H2>Record# %d<br><i>%s</i></H2>\\n<PRE>\", recno, html_quote(result));",
          "651:                     snprintf(tmpbuf, TEMP_BUF_SIZE, \"%s\\n\", html_quote(result));",
          "654:                 outbuf.append(tmpbuf);",
          "",
          "[Added Lines]",
          "643:                     outbuf.appendf(\"</PRE><HR noshade size=\\\"1px\\\"><H2>Record# %d<br><i>%s</i></H2>\\n<PRE>\", recno, html_quote(result));",
          "646:                     outbuf.appendf(\"%s\\n\", html_quote(result));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "684:                     break;",
          "685:                 }",
          "",
          "[Removed Lines]",
          "682:                     snprintf(tmpbuf, TEMP_BUF_SIZE, \"</PRE><HR noshade size=\\\"1px\\\"><H2>%s</H2>\\n<PRE>\", html_quote(result));",
          "683:                     outbuf.append(tmpbuf);",
          "",
          "[Added Lines]",
          "676:                     outbuf.appendf(\"</PRE><HR noshade size=\\\"1px\\\"><H2>%s</H2>\\n<PRE>\", html_quote(result));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "702:         entry->flush();",
          "703:     }",
          "706:     return;",
          "707: }",
          "",
          "[Removed Lines]",
          "699:     if (outbuf.size() > 0) {",
          "700:         entry->append(outbuf.rawBuf(), outbuf.size());",
          "705:     outbuf.clean();",
          "",
          "[Added Lines]",
          "692:     if (outbuf.length() > 0) {",
          "693:         entry->append(outbuf.rawContent(), outbuf.length());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "780c4ea1b4c9d2fb41f6962aa6ed73ae57f74b2b",
      "candidate_info": {
        "commit_hash": "780c4ea1b4c9d2fb41f6962aa6ed73ae57f74b2b",
        "repo": "squid-cache/squid",
        "commit_url": "https://github.com/squid-cache/squid/commit/780c4ea1b4c9d2fb41f6962aa6ed73ae57f74b2b",
        "files": [
          "src/gopher.cc"
        ],
        "message": "Improve handling of Gopher responses (#1022)",
        "before_after_code_files": [
          "src/gopher.cc||src/gopher.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/gopher.cc||src/gopher.cc"
          ],
          "candidate": [
            "src/gopher.cc||src/gopher.cc"
          ]
        }
      },
      "candidate_diff": {
        "src/gopher.cc||src/gopher.cc": [
          "File: src/gopher.cc -> src/gopher.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "371:     char *lpos = NULL;",
          "372:     char *tline = NULL;",
          "373:     LOCAL_ARRAY(char, line, TEMP_BUF_SIZE);",
          "375:     char *name = NULL;",
          "376:     char *selector = NULL;",
          "377:     char *host = NULL;",
          "",
          "[Removed Lines]",
          "374:     LOCAL_ARRAY(char, tmpbuf, TEMP_BUF_SIZE);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "381:     char gtype;",
          "382:     StoreEntry *entry = NULL;",
          "385:     memset(line, '\\0', TEMP_BUF_SIZE);",
          "387:     entry = gopherState->entry;",
          "",
          "[Removed Lines]",
          "384:     memset(tmpbuf, '\\0', TEMP_BUF_SIZE);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "416:         return;",
          "417:     }",
          "421:     if (!gopherState->HTML_header_added) {",
          "422:         if (gopherState->conversion == GopherStateData::HTML_CSO_RESULT)",
          "",
          "[Removed Lines]",
          "419:     String outbuf;",
          "",
          "[Added Lines]",
          "417:     SBuf outbuf;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "583:                         break;",
          "584:                     }",
          "588:                     if ((gtype == GOPHER_TELNET) || (gtype == GOPHER_3270)) {",
          "589:                         if (strlen(escaped_selector) != 0)",
          "593:                         else",
          "598:                     } else if (gtype == GOPHER_INFO) {",
          "600:                     } else {",
          "601:                         if (strncmp(selector, \"GET /\", 5) == 0) {",
          "605:                         } else {",
          "609:                         }",
          "610:                     }",
          "612:                     safe_free(escaped_selector);",
          "614:                 } else {",
          "615:                     memset(line, '\\0', TEMP_BUF_SIZE);",
          "616:                     continue;",
          "",
          "[Removed Lines]",
          "586:                     memset(tmpbuf, '\\0', TEMP_BUF_SIZE);",
          "590:                             snprintf(tmpbuf, TEMP_BUF_SIZE, \"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"telnet://%s@%s%s%s/\\\">%s</A>\\n\",",
          "591:                                      icon_url, escaped_selector, rfc1738_escape_part(host),",
          "594:                             snprintf(tmpbuf, TEMP_BUF_SIZE, \"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"telnet://%s%s%s/\\\">%s</A>\\n\",",
          "595:                                      icon_url, rfc1738_escape_part(host), *port ? \":\" : \"\",",
          "596:                                      port, html_quote(name));",
          "599:                         snprintf(tmpbuf, TEMP_BUF_SIZE, \"\\t%s\\n\", html_quote(name));",
          "603:                             snprintf(tmpbuf, TEMP_BUF_SIZE, \"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"http://%s/%s\\\">%s</A>\\n\",",
          "604:                                      icon_url, host, rfc1738_escape_unescaped(selector + 5), html_quote(name));",
          "607:                             snprintf(tmpbuf, TEMP_BUF_SIZE, \"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"gopher://%s/%c%s\\\">%s</A>\\n\",",
          "608:                                      icon_url, host, gtype, escaped_selector, html_quote(name));",
          "613:                     outbuf.append(tmpbuf);",
          "",
          "[Added Lines]",
          "586:                             outbuf.appendf(\"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"telnet://%s@%s%s%s/\\\">%s</A>\\n\",",
          "587:                                            icon_url, escaped_selector, rfc1738_escape_part(host),",
          "590:                             outbuf.appendf(\"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"telnet://%s%s%s/\\\">%s</A>\\n\",",
          "591:                                            icon_url, rfc1738_escape_part(host), *port ? \":\" : \"\",",
          "592:                                            port, html_quote(name));",
          "595:                         outbuf.appendf(\"\\t%s\\n\", html_quote(name));",
          "599:                             outbuf.appendf(\"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"http://%s/%s\\\">%s</A>\\n\",",
          "600:                                            icon_url, host, rfc1738_escape_unescaped(selector + 5), html_quote(name));",
          "601:                         } else if (gtype == GOPHER_WWW) {",
          "602:                             outbuf.appendf(\"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"gopher://%s/%c%s\\\">%s</A>\\n\",",
          "603:                                            icon_url, rfc1738_escape_unescaped(selector), html_quote(name));",
          "606:                             outbuf.appendf(\"<IMG border=\\\"0\\\" SRC=\\\"%s\\\"> <A HREF=\\\"gopher://%s/%c%s\\\">%s</A>\\n\",",
          "607:                                            icon_url, host, gtype, escaped_selector, html_quote(name));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "643:                     break;",
          "645:                 if (gopherState->cso_recno != recno) {",
          "647:                     gopherState->cso_recno = recno;",
          "648:                 } else {",
          "650:                 }",
          "653:                 break;",
          "654:             } else {",
          "655:                 int code;",
          "",
          "[Removed Lines]",
          "646:                     snprintf(tmpbuf, TEMP_BUF_SIZE, \"</PRE><HR noshade size=\\\"1px\\\"><H2>Record# %d<br><i>%s</i></H2>\\n<PRE>\", recno, html_quote(result));",
          "649:                     snprintf(tmpbuf, TEMP_BUF_SIZE, \"%s\\n\", html_quote(result));",
          "652:                 outbuf.append(tmpbuf);",
          "",
          "[Added Lines]",
          "644:                     outbuf.appendf(\"</PRE><HR noshade size=\\\"1px\\\"><H2>Record# %d<br><i>%s</i></H2>\\n<PRE>\", recno, html_quote(result));",
          "647:                     outbuf.appendf(\"%s\\n\", html_quote(result));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "682:                     break;",
          "683:                 }",
          "",
          "[Removed Lines]",
          "680:                     snprintf(tmpbuf, TEMP_BUF_SIZE, \"</PRE><HR noshade size=\\\"1px\\\"><H2>%s</H2>\\n<PRE>\", html_quote(result));",
          "681:                     outbuf.append(tmpbuf);",
          "",
          "[Added Lines]",
          "677:                     outbuf.appendf(\"</PRE><HR noshade size=\\\"1px\\\"><H2>%s</H2>\\n<PRE>\", html_quote(result));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "700:         entry->flush();",
          "701:     }",
          "704:     return;",
          "705: }",
          "",
          "[Removed Lines]",
          "697:     if (outbuf.size() > 0) {",
          "698:         entry->append(outbuf.rawBuf(), outbuf.size());",
          "703:     outbuf.clean();",
          "",
          "[Added Lines]",
          "693:     if (outbuf.length() > 0) {",
          "694:         entry->append(outbuf.rawContent(), outbuf.length());",
          "",
          "---------------"
        ]
      }
    }
  ]
}