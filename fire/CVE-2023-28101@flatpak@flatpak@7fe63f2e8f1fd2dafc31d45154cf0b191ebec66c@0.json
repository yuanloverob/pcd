{
  "cve_id": "CVE-2023-28101",
  "cve_desc": "Flatpak is a system for building, distributing, and running sandboxed desktop applications on Linux. In versions prior to 1.10.8, 1.12.8, 1.14.4, and 1.15.4, if an attacker publishes a Flatpak app with elevated permissions, they can hide those permissions from users of the `flatpak(1)` command-line interface by setting other permissions to crafted values that contain non-printable control characters such as `ESC`. A fix is available in versions 1.10.8, 1.12.8, 1.14.4, and 1.15.4. As a workaround, use a GUI like GNOME Software rather than the command-line interface, or only install apps whose maintainers you trust.",
  "repo": "flatpak/flatpak",
  "patch_hash": "7fe63f2e8f1fd2dafc31d45154cf0b191ebec66c",
  "patch_info": {
    "commit_hash": "7fe63f2e8f1fd2dafc31d45154cf0b191ebec66c",
    "repo": "flatpak/flatpak",
    "commit_url": "https://github.com/flatpak/flatpak/commit/7fe63f2e8f1fd2dafc31d45154cf0b191ebec66c",
    "files": [
      "common/flatpak-context.c",
      "common/flatpak-utils-private.h",
      "common/flatpak-utils.c",
      "tests/test-context.c",
      "tests/testcommon.c"
    ],
    "message": "Reject paths given to --filesystem/--persist with special characters\n\nThere isn't much in the way of legit reasons for this, but it's a\npotential security footgun when displaying the text.\n\nCVE-2023-28101, GHSA-h43h-fwqx-mpp8\n\nSigned-off-by: Ryan Gonzalez <ryan.gonzalez@collabora.com>\nCo-authored-by: Simon McVittie <smcv@collabora.com>",
    "before_after_code_files": [
      "common/flatpak-context.c||common/flatpak-context.c",
      "common/flatpak-utils-private.h||common/flatpak-utils-private.h",
      "common/flatpak-utils.c||common/flatpak-utils.c",
      "tests/test-context.c||tests/test-context.c",
      "tests/testcommon.c||tests/testcommon.c"
    ]
  },
  "patch_diff": {
    "common/flatpak-context.c||common/flatpak-context.c": [
      "File: common/flatpak-context.c -> common/flatpak-context.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "488:                        g_ptr_array_free (new, FALSE));",
      "489: }",
      "492: flatpak_context_set_persistent (FlatpakContext *context,",
      "494: {",
      "495:   g_hash_table_insert (context->persistent, g_strdup (path), GINT_TO_POINTER (1));",
      "496: }",
      "498: static gboolean",
      "",
      "[Removed Lines]",
      "491: static void",
      "493:                                 const char     *path)",
      "",
      "[Added Lines]",
      "492: static gboolean",
      "494:                                 const char     *path,",
      "495:                                 GError        **error)",
      "497:   if (!flatpak_validate_path_characters (path, error))",
      "498:     return FALSE;",
      "501:   return TRUE;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "854:   g_autofree char *filesystem = NULL;",
      "855:   char *slash;",
      "857:   filesystem = parse_filesystem_flags (filesystem_and_mode, negated, mode_out, error);",
      "858:   if (filesystem == NULL)",
      "859:     return FALSE;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "863:   if (!flatpak_validate_path_characters (filesystem_and_mode, error))",
      "864:     return FALSE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1510: {",
      "1511:   FlatpakContext *context = data;",
      "1515: }",
      "1517: static gboolean option_no_desktop_deprecated;",
      "",
      "[Removed Lines]",
      "1513:   flatpak_context_set_persistent (context, value);",
      "1514:   return TRUE;",
      "",
      "[Added Lines]",
      "1522:   return flatpak_context_set_persistent (context, value, error);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1703:         {",
      "1704:           const char *fs = parse_negated (filesystems[i], &remove);",
      "1705:           g_autofree char *filesystem = NULL;",
      "1706:           FlatpakFilesystemMode mode;",
      "1708:           if (!flatpak_context_parse_filesystem (fs, remove,",
      "1711:           else",
      "1712:             {",
      "1713:               g_assert (mode == FLATPAK_FILESYSTEM_MODE_NONE || !remove);",
      "",
      "[Removed Lines]",
      "1709:                                                  &filesystem, &mode, NULL))",
      "1710:             g_info (\"Unknown filesystem type %s\", filesystems[i]);",
      "",
      "[Added Lines]",
      "1714:           g_autoptr(GError) local_error = NULL;",
      "1718:                                                  &filesystem, &mode, &local_error))",
      "1719:             {",
      "1720:               if (g_error_matches (local_error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA))",
      "1721:                 {",
      "1723:                   g_propagate_error (error, g_steal_pointer (&local_error));",
      "1724:                   return FALSE;",
      "1725:                 }",
      "1726:               else",
      "1727:                 {",
      "1728:                   g_info (\"Unknown filesystem type %s\", filesystems[i]);",
      "1729:                   g_clear_error (&local_error);",
      "1730:                 }",
      "1731:             }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1724:         return FALSE;",
      "1726:       for (i = 0; persistent[i] != NULL; i++)",
      "1728:     }",
      "1730:   if (g_key_file_has_group (metakey, FLATPAK_METADATA_GROUP_SESSION_BUS_POLICY))",
      "",
      "[Removed Lines]",
      "1727:         flatpak_context_set_persistent (context, persistent[i]);",
      "",
      "[Added Lines]",
      "1748:         if (!flatpak_context_set_persistent (context, persistent[i], error))",
      "1749:           return FALSE;",
      "",
      "---------------"
    ],
    "common/flatpak-utils-private.h||common/flatpak-utils-private.h": [
      "File: common/flatpak-utils-private.h -> common/flatpak-utils-private.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "937: void   flatpak_print_escaped_string (const char        *s,",
      "938:                                      FlatpakEscapeFlags flags);",
      "940: gboolean running_under_sudo (void);",
      "942: #define FLATPAK_MESSAGE_ID \"c7b39b1e006b464599465e105b361485\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "940: gboolean flatpak_validate_path_characters (const char *path,",
      "941:                                            GError    **error);",
      "",
      "---------------"
    ],
    "common/flatpak-utils.c||common/flatpak-utils.c": [
      "File: common/flatpak-utils.c -> common/flatpak-utils.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "9250:     g_string_append_printf (result, \"\\\\U%08X\", c);",
      "9251: }",
      "9253: char *",
      "9254: flatpak_escape_string (const char        *s,",
      "9255:                        FlatpakEscapeFlags flags)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "9253: static char *",
      "9254: escape_character (gunichar c)",
      "9255: {",
      "9256:   g_autoptr(GString) res = g_string_new (\"\");",
      "9257:   append_hex_escaped_character (res, c);",
      "9258:   return g_string_free (g_steal_pointer (&res), FALSE);",
      "9259: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "9301:   g_print (\"%s\", escaped);",
      "9302: }",
      "9305: gboolean",
      "9306: running_under_sudo (void)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "9312: gboolean",
      "9313: flatpak_validate_path_characters (const char *path,",
      "9314:                                   GError    **error)",
      "9315: {",
      "9316:   while (*path)",
      "9317:     {",
      "9318:       gunichar c = g_utf8_get_char_validated (path, -1);",
      "9319:       if (c == (gunichar)-1 || c == (gunichar)-2)",
      "9320:         {",
      "9323:           g_autofree char *escaped_char = escape_character ((unsigned char)*path);",
      "9324:           g_autofree char *escaped = flatpak_escape_string (path, FLATPAK_ESCAPE_DEFAULT);",
      "9325:           g_set_error (error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA,",
      "9326:                        \"Non-UTF8 byte %s in path %s\", escaped_char, escaped);",
      "9327:           return FALSE;",
      "9328:         }",
      "9329:       else if (!is_char_safe (c))",
      "9330:         {",
      "9331:           g_autofree char *escaped_char = escape_character (c);",
      "9332:           g_autofree char *escaped = flatpak_escape_string (path, FLATPAK_ESCAPE_DEFAULT);",
      "9333:           g_set_error (error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA,",
      "9334:                        \"Non-graphical character %s in path %s\", escaped_char, escaped);",
      "9335:           return FALSE;",
      "9336:         }",
      "9338:       path = g_utf8_find_next_char (path, NULL);",
      "9339:     }",
      "9341:   return TRUE;",
      "9342: }",
      "",
      "---------------"
    ],
    "tests/test-context.c||tests/test-context.c": [
      "File: tests/test-context.c -> tests/test-context.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "129: }",
      "131: static void context_parse_args (FlatpakContext *context,",
      "132:                                 ...) G_GNUC_NULL_TERMINATED;",
      "134: static void",
      "135: context_parse_args (FlatpakContext *context,",
      "136:                     ...)",
      "137: {",
      "139:   g_autoptr(GOptionContext) oc = NULL;",
      "140:   g_autoptr(GOptionGroup) group = NULL;",
      "141:   g_autoptr(GPtrArray) args = g_ptr_array_new_with_free_func (g_free);",
      "",
      "[Removed Lines]",
      "138:   g_autoptr(GError) local_error = NULL;",
      "",
      "[Added Lines]",
      "132:                                 GError        **error,",
      "137:                     GError        **error,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "146:   g_ptr_array_add (args, g_strdup (\"argv[0]\"));",
      "150:   while ((arg = va_arg (ap, const char *)) != NULL)",
      "151:     g_ptr_array_add (args, g_strdup (arg));",
      "",
      "[Removed Lines]",
      "148:   va_start (ap, context);",
      "",
      "[Added Lines]",
      "149:   va_start (ap, error);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "158:   oc = g_option_context_new (\"\");",
      "159:   group = flatpak_context_get_options (context);",
      "160:   g_option_context_add_group (oc, group);",
      "163: }",
      "165: static void",
      "",
      "[Removed Lines]",
      "161:   g_option_context_parse_strv (oc, &argv, &local_error);",
      "162:   g_assert_no_error (local_error);",
      "",
      "[Added Lines]",
      "162:   g_option_context_parse_strv (oc, &argv, error);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "179:       g_autoptr(FlatpakContext) lowest = flatpak_context_new ();",
      "180:       g_autoptr(FlatpakContext) middle = flatpak_context_new ();",
      "181:       g_autoptr(FlatpakContext) highest = flatpak_context_new ();",
      "182:       gpointer value;",
      "184:       context_parse_args (lowest,",
      "185:                           \"--filesystem=/one\",",
      "186:                           NULL);",
      "187:       context_parse_args (middle,",
      "188:                           \"--nofilesystem=host:reset\",",
      "189:                           \"--filesystem=/two\",",
      "190:                           NULL);",
      "191:       context_parse_args (highest,",
      "192:                           \"--nofilesystem=host\",",
      "193:                           \"--filesystem=/three\",",
      "194:                           NULL);",
      "196:       g_assert_false (g_hash_table_lookup_extended (lowest->filesystems, \"host\", NULL, NULL));",
      "197:       g_assert_false (g_hash_table_lookup_extended (lowest->filesystems, \"host-reset\", NULL, NULL));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "182:       g_autoptr(GError) local_error = NULL;",
      "186:                           &local_error,",
      "189:       g_assert_no_error (local_error);",
      "191:                           &local_error,",
      "195:       g_assert_no_error (local_error);",
      "197:                           &local_error,",
      "201:       g_assert_no_error (local_error);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "273:       gpointer value;",
      "275:       context_parse_args (lowest,",
      "276:                           \"--filesystem=/one\",",
      "277:                           NULL);",
      "278:       context_parse_args (mid_low,",
      "279:                           \"--nofilesystem=host:reset\",",
      "280:                           \"--filesystem=/two\",",
      "281:                           NULL);",
      "282:       context_parse_args (mid_high,",
      "283:                           \"--filesystem=host\",",
      "284:                           \"--filesystem=/three\",",
      "285:                           NULL);",
      "286:       context_parse_args (highest,",
      "287:                           \"--nofilesystem=host\",",
      "288:                           \"--filesystem=/four\",",
      "289:                           NULL);",
      "291:       g_assert_false (g_hash_table_lookup_extended (lowest->filesystems, \"host\", NULL, NULL));",
      "292:       g_assert_false (g_hash_table_lookup_extended (lowest->filesystems, \"host-reset\", NULL, NULL));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "283:                           &local_error,",
      "286:       g_assert_no_error (local_error);",
      "288:                           &local_error,",
      "292:       g_assert_no_error (local_error);",
      "294:                           &local_error,",
      "298:       g_assert_no_error (local_error);",
      "300:                           &local_error,",
      "304:       g_assert_no_error (local_error);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "427:     }",
      "428: }",
      "430: int",
      "431: main (int argc, char *argv[])",
      "432: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "445: const char *invalid_path_args[] = {",
      "446:   \"--filesystem=/\\033[J:ro\",",
      "447:   \"--filesystem=/\\033[J\",",
      "448:   \"--persist=\\033[J\",",
      "449: };",
      "452: static void",
      "453: test_validate_path_args (void)",
      "454: {",
      "455:   gsize idx;",
      "457:   for (idx = 0; idx < G_N_ELEMENTS (invalid_path_args); idx++)",
      "458:     {",
      "459:       g_autoptr(FlatpakContext) context = flatpak_context_new ();",
      "460:       g_autoptr(GError) local_error = NULL;",
      "461:       const char *path = invalid_path_args[idx];",
      "463:       context_parse_args (context, &local_error, path, NULL);",
      "464:       g_assert_error (local_error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA);",
      "465:       g_assert (strstr (local_error->message, \"Non-graphical character\"));",
      "466:     }",
      "467: }",
      "469: typedef struct {",
      "470:   const char *key;",
      "471:   const char *value;",
      "472: } PathValidityData;",
      "474: PathValidityData invalid_path_meta[] = {",
      "475:   {FLATPAK_METADATA_KEY_FILESYSTEMS, \"\\033[J\"},",
      "476:   {FLATPAK_METADATA_KEY_PERSISTENT, \"\\033[J\"},",
      "477: };",
      "480: static void",
      "481: test_validate_path_meta (void)",
      "482: {",
      "483:   gsize idx;",
      "485:   for (idx = 0; idx < G_N_ELEMENTS (invalid_path_meta); idx++)",
      "486:     {",
      "487:       g_autoptr(FlatpakContext) context = flatpak_context_new ();",
      "488:       g_autoptr(GKeyFile) metakey = g_key_file_new ();",
      "489:       g_autoptr(GError) local_error = NULL;",
      "490:       PathValidityData *data = &invalid_path_meta[idx];",
      "491:       gboolean ret = FALSE;",
      "493:       g_key_file_set_string_list (metakey, FLATPAK_METADATA_GROUP_CONTEXT,",
      "494:                                   data->key, &data->value, 1);",
      "496:       ret = flatpak_context_load_metadata (context, metakey, &local_error);",
      "497:       g_assert_false (ret);",
      "498:       g_assert_error (local_error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA);",
      "499:       g_assert (strstr (local_error->message, \"Non-graphical character\"));",
      "500:     }",
      "502: }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "435:   g_test_add_func (\"/context/env\", test_context_env);",
      "436:   g_test_add_func (\"/context/env-fd\", test_context_env_fd);",
      "437:   g_test_add_func (\"/context/merge-fs\", test_context_merge_fs);",
      "439:   return g_test_run ();",
      "440: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "512:   g_test_add_func (\"/context/validate-path-args\", test_validate_path_args);",
      "513:   g_test_add_func (\"/context/validate-path-meta\", test_validate_path_meta);",
      "",
      "---------------"
    ],
    "tests/testcommon.c||tests/testcommon.c": [
      "File: tests/testcommon.c -> tests/testcommon.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1875:     }",
      "1876: }",
      "1878: int",
      "1879: main (int argc, char *argv[])",
      "1880: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1879: typedef struct {",
      "1880:   const char *path;",
      "1881:   gboolean ret;",
      "1882: } PathValidityData;",
      "1884: static PathValidityData paths[] = {",
      "1885:   {\"/a/b/../c.def\", TRUE},",
      "1886:   {\"\u3084\u3042\", TRUE},",
      "1888:   {\"\\u061C\", FALSE},",
      "1891:   {\"\\xF0\\x93\\x90\\xBF\", FALSE},",
      "1893:   {\"\\xD8\\1\", FALSE},",
      "1894: };",
      "1897: static void",
      "1898: test_validate_path_characters (void)",
      "1899: {",
      "1900:   gsize idx;",
      "1902:   for (idx = 0; idx < G_N_ELEMENTS (paths); idx++)",
      "1903:     {",
      "1904:       PathValidityData *data = &paths[idx];",
      "1905:       gboolean ret = FALSE;",
      "1907:       ret = flatpak_validate_path_characters (data->path, NULL);",
      "1908:       g_assert_cmpint (ret, ==, data->ret);",
      "1909:     }",
      "1910: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1909:   g_test_add_func (\"/common/str-is-integer\", test_str_is_integer);",
      "1910:   g_test_add_func (\"/common/parse-x11-display\", test_parse_x11_display);",
      "1911:   g_test_add_func (\"/common/string-escape\", test_string_escape);",
      "1913:   g_test_add_func (\"/app/looks-like-branch\", test_looks_like_branch);",
      "1914:   g_test_add_func (\"/app/columns\", test_columns);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1946:   g_test_add_func (\"/common/validate-path-characters\", test_validate_path_characters);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "872ba2db4c5f85b2d276e970b534e512bb3c488c",
      "candidate_info": {
        "commit_hash": "872ba2db4c5f85b2d276e970b534e512bb3c488c",
        "repo": "flatpak/flatpak",
        "commit_url": "https://github.com/flatpak/flatpak/commit/872ba2db4c5f85b2d276e970b534e512bb3c488c",
        "files": [
          "common/flatpak-context.c",
          "common/flatpak-utils-private.h",
          "common/flatpak-utils.c",
          "tests/test-context.c",
          "tests/testcommon.c"
        ],
        "message": "Reject paths given to --filesystem/--persist with special characters\n\nThere isn't much in the way of legit reasons for this, but it's a\npotential security footgun when displaying the text.\n\nCVE-2023-28101, GHSA-h43h-fwqx-mpp8\n\nSigned-off-by: Ryan Gonzalez <ryan.gonzalez@collabora.com>\nCo-authored-by: Simon McVittie <smcv@collabora.com>",
        "before_after_code_files": [
          "common/flatpak-context.c||common/flatpak-context.c",
          "common/flatpak-utils-private.h||common/flatpak-utils-private.h",
          "common/flatpak-utils.c||common/flatpak-utils.c",
          "tests/test-context.c||tests/test-context.c",
          "tests/testcommon.c||tests/testcommon.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "common/flatpak-context.c||common/flatpak-context.c",
            "common/flatpak-utils-private.h||common/flatpak-utils-private.h",
            "common/flatpak-utils.c||common/flatpak-utils.c",
            "tests/test-context.c||tests/test-context.c",
            "tests/testcommon.c||tests/testcommon.c"
          ],
          "candidate": [
            "common/flatpak-context.c||common/flatpak-context.c",
            "common/flatpak-utils-private.h||common/flatpak-utils-private.h",
            "common/flatpak-utils.c||common/flatpak-utils.c",
            "tests/test-context.c||tests/test-context.c",
            "tests/testcommon.c||tests/testcommon.c"
          ]
        }
      },
      "candidate_diff": {
        "common/flatpak-context.c||common/flatpak-context.c": [
          "File: common/flatpak-context.c -> common/flatpak-context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "488:                        g_ptr_array_free (new, FALSE));",
          "489: }",
          "492: flatpak_context_set_persistent (FlatpakContext *context,",
          "494: {",
          "495:   g_hash_table_insert (context->persistent, g_strdup (path), GINT_TO_POINTER (1));",
          "496: }",
          "498: static gboolean",
          "",
          "[Removed Lines]",
          "491: static void",
          "493:                                 const char     *path)",
          "",
          "[Added Lines]",
          "492: static gboolean",
          "494:                                 const char     *path,",
          "495:                                 GError        **error)",
          "497:   if (!flatpak_validate_path_characters (path, error))",
          "498:     return FALSE;",
          "501:   return TRUE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "854:   g_autofree char *filesystem = NULL;",
          "855:   char *slash;",
          "857:   filesystem = parse_filesystem_flags (filesystem_and_mode, negated, mode_out, error);",
          "858:   if (filesystem == NULL)",
          "859:     return FALSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "863:   if (!flatpak_validate_path_characters (filesystem_and_mode, error))",
          "864:     return FALSE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1510: {",
          "1511:   FlatpakContext *context = data;",
          "1515: }",
          "1517: static gboolean option_no_desktop_deprecated;",
          "",
          "[Removed Lines]",
          "1513:   flatpak_context_set_persistent (context, value);",
          "1514:   return TRUE;",
          "",
          "[Added Lines]",
          "1522:   return flatpak_context_set_persistent (context, value, error);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1703:         {",
          "1704:           const char *fs = parse_negated (filesystems[i], &remove);",
          "1705:           g_autofree char *filesystem = NULL;",
          "1706:           FlatpakFilesystemMode mode;",
          "1708:           if (!flatpak_context_parse_filesystem (fs, remove,",
          "1711:           else",
          "1712:             {",
          "1713:               g_assert (mode == FLATPAK_FILESYSTEM_MODE_NONE || !remove);",
          "",
          "[Removed Lines]",
          "1709:                                                  &filesystem, &mode, NULL))",
          "1710:             g_debug (\"Unknown filesystem type %s\", filesystems[i]);",
          "",
          "[Added Lines]",
          "1714:           g_autoptr(GError) local_error = NULL;",
          "1718:                                                  &filesystem, &mode, &local_error))",
          "1719:             {",
          "1720:               if (g_error_matches (local_error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA))",
          "1721:                 {",
          "1723:                   g_propagate_error (error, g_steal_pointer (&local_error));",
          "1724:                   return FALSE;",
          "1725:                 }",
          "1726:               else",
          "1727:                 {",
          "1728:                   g_debug (\"Unknown filesystem type %s\", filesystems[i]);",
          "1729:                   g_clear_error (&local_error);",
          "1730:                 }",
          "1731:             }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1724:         return FALSE;",
          "1726:       for (i = 0; persistent[i] != NULL; i++)",
          "1728:     }",
          "1730:   if (g_key_file_has_group (metakey, FLATPAK_METADATA_GROUP_SESSION_BUS_POLICY))",
          "",
          "[Removed Lines]",
          "1727:         flatpak_context_set_persistent (context, persistent[i]);",
          "",
          "[Added Lines]",
          "1748:         if (!flatpak_context_set_persistent (context, persistent[i], error))",
          "1749:           return FALSE;",
          "",
          "---------------"
        ],
        "common/flatpak-utils-private.h||common/flatpak-utils-private.h": [
          "File: common/flatpak-utils-private.h -> common/flatpak-utils-private.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "924: void   flatpak_print_escaped_string (const char        *s,",
          "925:                                      FlatpakEscapeFlags flags);",
          "927: #define FLATPAK_MESSAGE_ID \"c7b39b1e006b464599465e105b361485\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "927: gboolean flatpak_validate_path_characters (const char *path,",
          "928:                                            GError    **error);",
          "",
          "---------------"
        ],
        "common/flatpak-utils.c||common/flatpak-utils.c": [
          "File: common/flatpak-utils.c -> common/flatpak-utils.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "9068:     g_string_append_printf (result, \"\\\\U%08X\", c);",
          "9069: }",
          "9071: char *",
          "9072: flatpak_escape_string (const char        *s,",
          "9073:                        FlatpakEscapeFlags flags)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9071: static char *",
          "9072: escape_character (gunichar c)",
          "9073: {",
          "9074:   g_autoptr(GString) res = g_string_new (\"\");",
          "9075:   append_hex_escaped_character (res, c);",
          "9076:   return g_string_free (g_steal_pointer (&res), FALSE);",
          "9077: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9118:   g_autofree char *escaped = flatpak_escape_string (s, flags);",
          "9119:   g_print (\"%s\", escaped);",
          "9120: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9130: gboolean",
          "9131: flatpak_validate_path_characters (const char *path,",
          "9132:                                   GError    **error)",
          "9133: {",
          "9134:   while (*path)",
          "9135:     {",
          "9136:       gunichar c = g_utf8_get_char_validated (path, -1);",
          "9137:       if (c == (gunichar)-1 || c == (gunichar)-2)",
          "9138:         {",
          "9141:           g_autofree char *escaped_char = escape_character ((unsigned char)*path);",
          "9142:           g_autofree char *escaped = flatpak_escape_string (path, FLATPAK_ESCAPE_DEFAULT);",
          "9143:           g_set_error (error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA,",
          "9144:                        \"Non-UTF8 byte %s in path %s\", escaped_char, escaped);",
          "9145:           return FALSE;",
          "9146:         }",
          "9147:       else if (!is_char_safe (c))",
          "9148:         {",
          "9149:           g_autofree char *escaped_char = escape_character (c);",
          "9150:           g_autofree char *escaped = flatpak_escape_string (path, FLATPAK_ESCAPE_DEFAULT);",
          "9151:           g_set_error (error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA,",
          "9152:                        \"Non-graphical character %s in path %s\", escaped_char, escaped);",
          "9153:           return FALSE;",
          "9154:         }",
          "9156:       path = g_utf8_find_next_char (path, NULL);",
          "9157:     }",
          "9159:   return TRUE;",
          "9160: }",
          "",
          "---------------"
        ],
        "tests/test-context.c||tests/test-context.c": [
          "File: tests/test-context.c -> tests/test-context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "129: }",
          "131: static void context_parse_args (FlatpakContext *context,",
          "132:                                 ...) G_GNUC_NULL_TERMINATED;",
          "134: static void",
          "135: context_parse_args (FlatpakContext *context,",
          "136:                     ...)",
          "137: {",
          "139:   g_autoptr(GOptionContext) oc = NULL;",
          "140:   g_autoptr(GOptionGroup) group = NULL;",
          "141:   g_autoptr(GPtrArray) args = g_ptr_array_new_with_free_func (g_free);",
          "",
          "[Removed Lines]",
          "138:   g_autoptr(GError) local_error = NULL;",
          "",
          "[Added Lines]",
          "132:                                 GError        **error,",
          "137:                     GError        **error,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "146:   g_ptr_array_add (args, g_strdup (\"argv[0]\"));",
          "150:   while ((arg = va_arg (ap, const char *)) != NULL)",
          "151:     g_ptr_array_add (args, g_strdup (arg));",
          "",
          "[Removed Lines]",
          "148:   va_start (ap, context);",
          "",
          "[Added Lines]",
          "149:   va_start (ap, error);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "158:   oc = g_option_context_new (\"\");",
          "159:   group = flatpak_context_get_options (context);",
          "160:   g_option_context_add_group (oc, group);",
          "163: }",
          "165: static void",
          "",
          "[Removed Lines]",
          "161:   g_option_context_parse_strv (oc, &argv, &local_error);",
          "162:   g_assert_no_error (local_error);",
          "",
          "[Added Lines]",
          "162:   g_option_context_parse_strv (oc, &argv, error);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "179:       g_autoptr(FlatpakContext) lowest = flatpak_context_new ();",
          "180:       g_autoptr(FlatpakContext) middle = flatpak_context_new ();",
          "181:       g_autoptr(FlatpakContext) highest = flatpak_context_new ();",
          "182:       gpointer value;",
          "184:       context_parse_args (lowest,",
          "185:                           \"--filesystem=/one\",",
          "186:                           NULL);",
          "187:       context_parse_args (middle,",
          "188:                           \"--nofilesystem=host:reset\",",
          "189:                           \"--filesystem=/two\",",
          "190:                           NULL);",
          "191:       context_parse_args (highest,",
          "192:                           \"--nofilesystem=host\",",
          "193:                           \"--filesystem=/three\",",
          "194:                           NULL);",
          "196:       g_assert_false (g_hash_table_lookup_extended (lowest->filesystems, \"host\", NULL, NULL));",
          "197:       g_assert_false (g_hash_table_lookup_extended (lowest->filesystems, \"host-reset\", NULL, NULL));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182:       g_autoptr(GError) local_error = NULL;",
          "186:                           &local_error,",
          "189:       g_assert_no_error (local_error);",
          "191:                           &local_error,",
          "195:       g_assert_no_error (local_error);",
          "197:                           &local_error,",
          "201:       g_assert_no_error (local_error);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "273:       gpointer value;",
          "275:       context_parse_args (lowest,",
          "276:                           \"--filesystem=/one\",",
          "277:                           NULL);",
          "278:       context_parse_args (mid_low,",
          "279:                           \"--nofilesystem=host:reset\",",
          "280:                           \"--filesystem=/two\",",
          "281:                           NULL);",
          "282:       context_parse_args (mid_high,",
          "283:                           \"--filesystem=host\",",
          "284:                           \"--filesystem=/three\",",
          "285:                           NULL);",
          "286:       context_parse_args (highest,",
          "287:                           \"--nofilesystem=host\",",
          "288:                           \"--filesystem=/four\",",
          "289:                           NULL);",
          "291:       g_assert_false (g_hash_table_lookup_extended (lowest->filesystems, \"host\", NULL, NULL));",
          "292:       g_assert_false (g_hash_table_lookup_extended (lowest->filesystems, \"host-reset\", NULL, NULL));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "283:                           &local_error,",
          "286:       g_assert_no_error (local_error);",
          "288:                           &local_error,",
          "292:       g_assert_no_error (local_error);",
          "294:                           &local_error,",
          "298:       g_assert_no_error (local_error);",
          "300:                           &local_error,",
          "304:       g_assert_no_error (local_error);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "427:     }",
          "428: }",
          "430: int",
          "431: main (int argc, char *argv[])",
          "432: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "445: const char *invalid_path_args[] = {",
          "446:   \"--filesystem=/\\033[J:ro\",",
          "447:   \"--filesystem=/\\033[J\",",
          "448:   \"--persist=\\033[J\",",
          "449: };",
          "452: static void",
          "453: test_validate_path_args (void)",
          "454: {",
          "455:   gsize idx;",
          "457:   for (idx = 0; idx < G_N_ELEMENTS (invalid_path_args); idx++)",
          "458:     {",
          "459:       g_autoptr(FlatpakContext) context = flatpak_context_new ();",
          "460:       g_autoptr(GError) local_error = NULL;",
          "461:       const char *path = invalid_path_args[idx];",
          "463:       context_parse_args (context, &local_error, path, NULL);",
          "464:       g_assert_error (local_error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA);",
          "465:       g_assert (strstr (local_error->message, \"Non-graphical character\"));",
          "466:     }",
          "467: }",
          "469: typedef struct {",
          "470:   const char *key;",
          "471:   const char *value;",
          "472: } PathValidityData;",
          "474: PathValidityData invalid_path_meta[] = {",
          "475:   {FLATPAK_METADATA_KEY_FILESYSTEMS, \"\\033[J\"},",
          "476:   {FLATPAK_METADATA_KEY_PERSISTENT, \"\\033[J\"},",
          "477: };",
          "480: static void",
          "481: test_validate_path_meta (void)",
          "482: {",
          "483:   gsize idx;",
          "485:   for (idx = 0; idx < G_N_ELEMENTS (invalid_path_meta); idx++)",
          "486:     {",
          "487:       g_autoptr(FlatpakContext) context = flatpak_context_new ();",
          "488:       g_autoptr(GKeyFile) metakey = g_key_file_new ();",
          "489:       g_autoptr(GError) local_error = NULL;",
          "490:       PathValidityData *data = &invalid_path_meta[idx];",
          "491:       gboolean ret = FALSE;",
          "493:       g_key_file_set_string_list (metakey, FLATPAK_METADATA_GROUP_CONTEXT,",
          "494:                                   data->key, &data->value, 1);",
          "496:       ret = flatpak_context_load_metadata (context, metakey, &local_error);",
          "497:       g_assert_false (ret);",
          "498:       g_assert_error (local_error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA);",
          "499:       g_assert (strstr (local_error->message, \"Non-graphical character\"));",
          "500:     }",
          "502: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "435:   g_test_add_func (\"/context/env\", test_context_env);",
          "436:   g_test_add_func (\"/context/env-fd\", test_context_env_fd);",
          "437:   g_test_add_func (\"/context/merge-fs\", test_context_merge_fs);",
          "439:   return g_test_run ();",
          "440: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "512:   g_test_add_func (\"/context/validate-path-args\", test_validate_path_args);",
          "513:   g_test_add_func (\"/context/validate-path-meta\", test_validate_path_meta);",
          "",
          "---------------"
        ],
        "tests/testcommon.c||tests/testcommon.c": [
          "File: tests/testcommon.c -> tests/testcommon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1875:     }",
          "1876: }",
          "1878: int",
          "1879: main (int argc, char *argv[])",
          "1880: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1879: typedef struct {",
          "1880:   const char *path;",
          "1881:   gboolean ret;",
          "1882: } PathValidityData;",
          "1884: static PathValidityData paths[] = {",
          "1885:   {\"/a/b/../c.def\", TRUE},",
          "1886:   {\"\u3084\u3042\", TRUE},",
          "1888:   {\"\\u061C\", FALSE},",
          "1891:   {\"\\xF0\\x93\\x90\\xBF\", FALSE},",
          "1893:   {\"\\xD8\\1\", FALSE},",
          "1894: };",
          "1897: static void",
          "1898: test_validate_path_characters (void)",
          "1899: {",
          "1900:   gsize idx;",
          "1902:   for (idx = 0; idx < G_N_ELEMENTS (paths); idx++)",
          "1903:     {",
          "1904:       PathValidityData *data = &paths[idx];",
          "1905:       gboolean ret = FALSE;",
          "1907:       ret = flatpak_validate_path_characters (data->path, NULL);",
          "1908:       g_assert_cmpint (ret, ==, data->ret);",
          "1909:     }",
          "1910: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1909:   g_test_add_func (\"/common/str-is-integer\", test_str_is_integer);",
          "1910:   g_test_add_func (\"/common/parse-x11-display\", test_parse_x11_display);",
          "1911:   g_test_add_func (\"/common/string-escape\", test_string_escape);",
          "1913:   g_test_add_func (\"/app/looks-like-branch\", test_looks_like_branch);",
          "1914:   g_test_add_func (\"/app/columns\", test_columns);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1946:   g_test_add_func (\"/common/validate-path-characters\", test_validate_path_characters);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e88eedce76f79a5573df4fc38b344bbeaf7af024",
      "candidate_info": {
        "commit_hash": "e88eedce76f79a5573df4fc38b344bbeaf7af024",
        "repo": "flatpak/flatpak",
        "commit_url": "https://github.com/flatpak/flatpak/commit/e88eedce76f79a5573df4fc38b344bbeaf7af024",
        "files": [
          "common/flatpak-context.c",
          "common/flatpak-utils-private.h",
          "common/flatpak-utils.c",
          "tests/test-context.c",
          "tests/testcommon.c"
        ],
        "message": "Reject paths given to --filesystem/--persist with special characters\n\nThere isn't much in the way of legit reasons for this, but it's a\npotential security footgun when displaying the text.\n\nCVE-2023-28101, GHSA-h43h-fwqx-mpp8\n\nSigned-off-by: Ryan Gonzalez <ryan.gonzalez@collabora.com>\nCo-authored-by: Simon McVittie <smcv@collabora.com>",
        "before_after_code_files": [
          "common/flatpak-context.c||common/flatpak-context.c",
          "common/flatpak-utils-private.h||common/flatpak-utils-private.h",
          "common/flatpak-utils.c||common/flatpak-utils.c",
          "tests/test-context.c||tests/test-context.c",
          "tests/testcommon.c||tests/testcommon.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "common/flatpak-context.c||common/flatpak-context.c",
            "common/flatpak-utils-private.h||common/flatpak-utils-private.h",
            "common/flatpak-utils.c||common/flatpak-utils.c",
            "tests/test-context.c||tests/test-context.c",
            "tests/testcommon.c||tests/testcommon.c"
          ],
          "candidate": [
            "common/flatpak-context.c||common/flatpak-context.c",
            "common/flatpak-utils-private.h||common/flatpak-utils-private.h",
            "common/flatpak-utils.c||common/flatpak-utils.c",
            "tests/test-context.c||tests/test-context.c",
            "tests/testcommon.c||tests/testcommon.c"
          ]
        }
      },
      "candidate_diff": {
        "common/flatpak-context.c||common/flatpak-context.c": [
          "File: common/flatpak-context.c -> common/flatpak-context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "487:                        g_ptr_array_free (new, FALSE));",
          "488: }",
          "491: flatpak_context_set_persistent (FlatpakContext *context,",
          "493: {",
          "494:   g_hash_table_insert (context->persistent, g_strdup (path), GINT_TO_POINTER (1));",
          "495: }",
          "497: static gboolean",
          "",
          "[Removed Lines]",
          "490: static void",
          "492:                                 const char     *path)",
          "",
          "[Added Lines]",
          "491: static gboolean",
          "493:                                 const char     *path,",
          "494:                                 GError        **error)",
          "496:   if (!flatpak_validate_path_characters (path, error))",
          "497:     return FALSE;",
          "500:   return TRUE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "853:   g_autofree char *filesystem = NULL;",
          "854:   char *slash;",
          "856:   filesystem = parse_filesystem_flags (filesystem_and_mode, negated, mode_out, error);",
          "857:   if (filesystem == NULL)",
          "858:     return FALSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "862:   if (!flatpak_validate_path_characters (filesystem_and_mode, error))",
          "863:     return FALSE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1484: {",
          "1485:   FlatpakContext *context = data;",
          "1489: }",
          "1491: static gboolean option_no_desktop_deprecated;",
          "",
          "[Removed Lines]",
          "1487:   flatpak_context_set_persistent (context, value);",
          "1488:   return TRUE;",
          "",
          "[Added Lines]",
          "1496:   return flatpak_context_set_persistent (context, value, error);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1677:         {",
          "1678:           const char *fs = parse_negated (filesystems[i], &remove);",
          "1679:           g_autofree char *filesystem = NULL;",
          "1680:           FlatpakFilesystemMode mode;",
          "1682:           if (!flatpak_context_parse_filesystem (fs, remove,",
          "1685:           else",
          "1686:             {",
          "1687:               g_assert (mode == FLATPAK_FILESYSTEM_MODE_NONE || !remove);",
          "",
          "[Removed Lines]",
          "1683:                                                  &filesystem, &mode, NULL))",
          "1684:             g_debug (\"Unknown filesystem type %s\", filesystems[i]);",
          "",
          "[Added Lines]",
          "1688:           g_autoptr(GError) local_error = NULL;",
          "1692:                                                  &filesystem, &mode, &local_error))",
          "1693:             {",
          "1694:               if (g_error_matches (local_error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA))",
          "1695:                 {",
          "1697:                   g_propagate_error (error, g_steal_pointer (&local_error));",
          "1698:                   return FALSE;",
          "1699:                 }",
          "1700:               else",
          "1701:                 {",
          "1702:                   g_debug (\"Unknown filesystem type %s\", filesystems[i]);",
          "1703:                   g_clear_error (&local_error);",
          "1704:                 }",
          "1705:             }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1698:         return FALSE;",
          "1700:       for (i = 0; persistent[i] != NULL; i++)",
          "1702:     }",
          "1704:   if (g_key_file_has_group (metakey, FLATPAK_METADATA_GROUP_SESSION_BUS_POLICY))",
          "",
          "[Removed Lines]",
          "1701:         flatpak_context_set_persistent (context, persistent[i]);",
          "",
          "[Added Lines]",
          "1722:         if (!flatpak_context_set_persistent (context, persistent[i], error))",
          "1723:           return FALSE;",
          "",
          "---------------"
        ],
        "common/flatpak-utils-private.h||common/flatpak-utils-private.h": [
          "File: common/flatpak-utils-private.h -> common/flatpak-utils-private.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "913: void   flatpak_print_escaped_string (const char        *s,",
          "914:                                      FlatpakEscapeFlags flags);",
          "916: #define FLATPAK_MESSAGE_ID \"c7b39b1e006b464599465e105b361485\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "916: gboolean flatpak_validate_path_characters (const char *path,",
          "917:                                            GError    **error);",
          "",
          "---------------"
        ],
        "common/flatpak-utils.c||common/flatpak-utils.c": [
          "File: common/flatpak-utils.c -> common/flatpak-utils.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8641:     g_string_append_printf (result, \"\\\\U%08X\", c);",
          "8642: }",
          "8644: char *",
          "8645: flatpak_escape_string (const char        *s,",
          "8646:                        FlatpakEscapeFlags flags)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8644: static char *",
          "8645: escape_character (gunichar c)",
          "8646: {",
          "8647:   g_autoptr(GString) res = g_string_new (\"\");",
          "8648:   append_hex_escaped_character (res, c);",
          "8649:   return g_string_free (g_steal_pointer (&res), FALSE);",
          "8650: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8691:   g_autofree char *escaped = flatpak_escape_string (s, flags);",
          "8692:   g_print (\"%s\", escaped);",
          "8693: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8703: gboolean",
          "8704: flatpak_validate_path_characters (const char *path,",
          "8705:                                   GError    **error)",
          "8706: {",
          "8707:   while (*path)",
          "8708:     {",
          "8709:       gunichar c = g_utf8_get_char_validated (path, -1);",
          "8710:       if (c == (gunichar)-1 || c == (gunichar)-2)",
          "8711:         {",
          "8714:           g_autofree char *escaped_char = escape_character ((unsigned char)*path);",
          "8715:           g_autofree char *escaped = flatpak_escape_string (path, FLATPAK_ESCAPE_DEFAULT);",
          "8716:           g_set_error (error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA,",
          "8717:                        \"Non-UTF8 byte %s in path %s\", escaped_char, escaped);",
          "8718:           return FALSE;",
          "8719:         }",
          "8720:       else if (!is_char_safe (c))",
          "8721:         {",
          "8722:           g_autofree char *escaped_char = escape_character (c);",
          "8723:           g_autofree char *escaped = flatpak_escape_string (path, FLATPAK_ESCAPE_DEFAULT);",
          "8724:           g_set_error (error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA,",
          "8725:                        \"Non-graphical character %s in path %s\", escaped_char, escaped);",
          "8726:           return FALSE;",
          "8727:         }",
          "8729:       path = g_utf8_find_next_char (path, NULL);",
          "8730:     }",
          "8732:   return TRUE;",
          "8733: }",
          "",
          "---------------"
        ],
        "tests/test-context.c||tests/test-context.c": [
          "File: tests/test-context.c -> tests/test-context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: }",
          "36: static void context_parse_args (FlatpakContext *context,",
          "37:                                 ...) G_GNUC_NULL_TERMINATED;",
          "39: static void",
          "40: context_parse_args (FlatpakContext *context,",
          "41:                     ...)",
          "42: {",
          "44:   g_autoptr(GOptionContext) oc = NULL;",
          "45:   g_autoptr(GOptionGroup) group = NULL;",
          "46:   g_autoptr(GPtrArray) args = g_ptr_array_new_with_free_func (g_free);",
          "",
          "[Removed Lines]",
          "43:   g_autoptr(GError) local_error = NULL;",
          "",
          "[Added Lines]",
          "37:                                 GError        **error,",
          "42:                     GError        **error,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:   g_ptr_array_add (args, g_strdup (\"argv[0]\"));",
          "55:   while ((arg = va_arg (ap, const char *)) != NULL)",
          "56:     g_ptr_array_add (args, g_strdup (arg));",
          "",
          "[Removed Lines]",
          "53:   va_start (ap, context);",
          "",
          "[Added Lines]",
          "54:   va_start (ap, error);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "63:   oc = g_option_context_new (\"\");",
          "64:   group = flatpak_context_get_options (context);",
          "65:   g_option_context_add_group (oc, group);",
          "68: }",
          "70: static void",
          "",
          "[Removed Lines]",
          "66:   g_option_context_parse_strv (oc, &argv, &local_error);",
          "67:   g_assert_no_error (local_error);",
          "",
          "[Added Lines]",
          "67:   g_option_context_parse_strv (oc, &argv, error);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "84:       g_autoptr(FlatpakContext) lowest = flatpak_context_new ();",
          "85:       g_autoptr(FlatpakContext) middle = flatpak_context_new ();",
          "86:       g_autoptr(FlatpakContext) highest = flatpak_context_new ();",
          "87:       gpointer value;",
          "89:       context_parse_args (lowest,",
          "90:                           \"--filesystem=/one\",",
          "91:                           NULL);",
          "92:       context_parse_args (middle,",
          "93:                           \"--nofilesystem=host:reset\",",
          "94:                           \"--filesystem=/two\",",
          "95:                           NULL);",
          "96:       context_parse_args (highest,",
          "97:                           \"--nofilesystem=host\",",
          "98:                           \"--filesystem=/three\",",
          "99:                           NULL);",
          "101:       g_assert_false (g_hash_table_lookup_extended (lowest->filesystems, \"host\", NULL, NULL));",
          "102:       g_assert_false (g_hash_table_lookup_extended (lowest->filesystems, \"host-reset\", NULL, NULL));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "87:       g_autoptr(GError) local_error = NULL;",
          "91:                           &local_error,",
          "94:       g_assert_no_error (local_error);",
          "96:                           &local_error,",
          "100:       g_assert_no_error (local_error);",
          "102:                           &local_error,",
          "106:       g_assert_no_error (local_error);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "178:       gpointer value;",
          "180:       context_parse_args (lowest,",
          "181:                           \"--filesystem=/one\",",
          "182:                           NULL);",
          "183:       context_parse_args (mid_low,",
          "184:                           \"--nofilesystem=host:reset\",",
          "185:                           \"--filesystem=/two\",",
          "186:                           NULL);",
          "187:       context_parse_args (mid_high,",
          "188:                           \"--filesystem=host\",",
          "189:                           \"--filesystem=/three\",",
          "190:                           NULL);",
          "191:       context_parse_args (highest,",
          "192:                           \"--nofilesystem=host\",",
          "193:                           \"--filesystem=/four\",",
          "194:                           NULL);",
          "196:       g_assert_false (g_hash_table_lookup_extended (lowest->filesystems, \"host\", NULL, NULL));",
          "197:       g_assert_false (g_hash_table_lookup_extended (lowest->filesystems, \"host-reset\", NULL, NULL));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "188:                           &local_error,",
          "191:       g_assert_no_error (local_error);",
          "193:                           &local_error,",
          "197:       g_assert_no_error (local_error);",
          "199:                           &local_error,",
          "203:       g_assert_no_error (local_error);",
          "205:                           &local_error,",
          "209:       g_assert_no_error (local_error);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "332:     }",
          "333: }",
          "335: int",
          "336: main (int argc, char *argv[])",
          "337: {",
          "338:   g_test_init (&argc, &argv, NULL);",
          "340:   g_test_add_func (\"/context/merge-fs\", test_context_merge_fs);",
          "342:   return g_test_run ();",
          "343: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "350: const char *invalid_path_args[] = {",
          "351:   \"--filesystem=/\\033[J:ro\",",
          "352:   \"--filesystem=/\\033[J\",",
          "353:   \"--persist=\\033[J\",",
          "354: };",
          "357: static void",
          "358: test_validate_path_args (void)",
          "359: {",
          "360:   gsize idx;",
          "362:   for (idx = 0; idx < G_N_ELEMENTS (invalid_path_args); idx++)",
          "363:     {",
          "364:       g_autoptr(FlatpakContext) context = flatpak_context_new ();",
          "365:       g_autoptr(GError) local_error = NULL;",
          "366:       const char *path = invalid_path_args[idx];",
          "368:       context_parse_args (context, &local_error, path, NULL);",
          "369:       g_assert_error (local_error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA);",
          "370:       g_assert (strstr (local_error->message, \"Non-graphical character\"));",
          "371:     }",
          "372: }",
          "374: typedef struct {",
          "375:   const char *key;",
          "376:   const char *value;",
          "377: } PathValidityData;",
          "379: PathValidityData invalid_path_meta[] = {",
          "380:   {FLATPAK_METADATA_KEY_FILESYSTEMS, \"\\033[J\"},",
          "381:   {FLATPAK_METADATA_KEY_PERSISTENT, \"\\033[J\"},",
          "382: };",
          "385: static void",
          "386: test_validate_path_meta (void)",
          "387: {",
          "388:   gsize idx;",
          "390:   for (idx = 0; idx < G_N_ELEMENTS (invalid_path_meta); idx++)",
          "391:     {",
          "392:       g_autoptr(FlatpakContext) context = flatpak_context_new ();",
          "393:       g_autoptr(GKeyFile) metakey = g_key_file_new ();",
          "394:       g_autoptr(GError) local_error = NULL;",
          "395:       PathValidityData *data = &invalid_path_meta[idx];",
          "396:       gboolean ret = FALSE;",
          "398:       g_key_file_set_string_list (metakey, FLATPAK_METADATA_GROUP_CONTEXT,",
          "399:                                   data->key, &data->value, 1);",
          "401:       ret = flatpak_context_load_metadata (context, metakey, &local_error);",
          "402:       g_assert_false (ret);",
          "403:       g_assert_error (local_error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA);",
          "404:       g_assert (strstr (local_error->message, \"Non-graphical character\"));",
          "405:     }",
          "407: }",
          "415:   g_test_add_func (\"/context/validate-path-args\", test_validate_path_args);",
          "416:   g_test_add_func (\"/context/validate-path-meta\", test_validate_path_meta);",
          "",
          "---------------"
        ],
        "tests/testcommon.c||tests/testcommon.c": [
          "File: tests/testcommon.c -> tests/testcommon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1595:     }",
          "1596: }",
          "1598: int",
          "1599: main (int argc, char *argv[])",
          "1600: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1599: typedef struct {",
          "1600:   const char *path;",
          "1601:   gboolean ret;",
          "1602: } PathValidityData;",
          "1604: static PathValidityData paths[] = {",
          "1605:   {\"/a/b/../c.def\", TRUE},",
          "1606:   {\"\u3084\u3042\", TRUE},",
          "1608:   {\"\\u061C\", FALSE},",
          "1611:   {\"\\xF0\\x93\\x90\\xBF\", FALSE},",
          "1613:   {\"\\xD8\\1\", FALSE},",
          "1614: };",
          "1617: static void",
          "1618: test_validate_path_characters (void)",
          "1619: {",
          "1620:   gsize idx;",
          "1622:   for (idx = 0; idx < G_N_ELEMENTS (paths); idx++)",
          "1623:     {",
          "1624:       PathValidityData *data = &paths[idx];",
          "1625:       gboolean ret = FALSE;",
          "1627:       ret = flatpak_validate_path_characters (data->path, NULL);",
          "1628:       g_assert_cmpint (ret, ==, data->ret);",
          "1629:     }",
          "1630: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1624:   g_test_add_func (\"/common/dconf-paths\", test_dconf_paths);",
          "1625:   g_test_add_func (\"/common/decompose-ref\", test_decompose);",
          "1626:   g_test_add_func (\"/common/string-escape\", test_string_escape);",
          "1628:   g_test_add_func (\"/app/looks-like-branch\", test_looks_like_branch);",
          "1629:   g_test_add_func (\"/app/columns\", test_columns);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1661:   g_test_add_func (\"/common/validate-path-characters\", test_validate_path_characters);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "20cf7360ff92dff58abb1cebc36d1ea737d3e26c",
      "candidate_info": {
        "commit_hash": "20cf7360ff92dff58abb1cebc36d1ea737d3e26c",
        "repo": "flatpak/flatpak",
        "commit_url": "https://github.com/flatpak/flatpak/commit/20cf7360ff92dff58abb1cebc36d1ea737d3e26c",
        "files": [
          "common/flatpak-context.c",
          "common/flatpak-utils-private.h",
          "common/flatpak-utils.c",
          "tests/test-context.c",
          "tests/testcommon.c"
        ],
        "message": "Reject paths given to --filesystem/--persist with special characters\n\nThere isn't much in the way of legit reasons for this, but it's a\npotential security footgun when displaying the text.\n\nCVE-2023-28101, GHSA-h43h-fwqx-mpp8\n\nSigned-off-by: Ryan Gonzalez <ryan.gonzalez@collabora.com>\nCo-authored-by: Simon McVittie <smcv@collabora.com>",
        "before_after_code_files": [
          "common/flatpak-context.c||common/flatpak-context.c",
          "common/flatpak-utils-private.h||common/flatpak-utils-private.h",
          "common/flatpak-utils.c||common/flatpak-utils.c",
          "tests/test-context.c||tests/test-context.c",
          "tests/testcommon.c||tests/testcommon.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "common/flatpak-context.c||common/flatpak-context.c",
            "common/flatpak-utils-private.h||common/flatpak-utils-private.h",
            "common/flatpak-utils.c||common/flatpak-utils.c",
            "tests/test-context.c||tests/test-context.c",
            "tests/testcommon.c||tests/testcommon.c"
          ],
          "candidate": [
            "common/flatpak-context.c||common/flatpak-context.c",
            "common/flatpak-utils-private.h||common/flatpak-utils-private.h",
            "common/flatpak-utils.c||common/flatpak-utils.c",
            "tests/test-context.c||tests/test-context.c",
            "tests/testcommon.c||tests/testcommon.c"
          ]
        }
      },
      "candidate_diff": {
        "common/flatpak-context.c||common/flatpak-context.c": [
          "File: common/flatpak-context.c -> common/flatpak-context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "488:                        g_ptr_array_free (new, FALSE));",
          "489: }",
          "492: flatpak_context_set_persistent (FlatpakContext *context,",
          "494: {",
          "495:   g_hash_table_insert (context->persistent, g_strdup (path), GINT_TO_POINTER (1));",
          "496: }",
          "498: static gboolean",
          "",
          "[Removed Lines]",
          "491: static void",
          "493:                                 const char     *path)",
          "",
          "[Added Lines]",
          "492: static gboolean",
          "494:                                 const char     *path,",
          "495:                                 GError        **error)",
          "497:   if (!flatpak_validate_path_characters (path, error))",
          "498:     return FALSE;",
          "501:   return TRUE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "854:   g_autofree char *filesystem = NULL;",
          "855:   char *slash;",
          "857:   filesystem = parse_filesystem_flags (filesystem_and_mode, negated, mode_out, error);",
          "858:   if (filesystem == NULL)",
          "859:     return FALSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "863:   if (!flatpak_validate_path_characters (filesystem_and_mode, error))",
          "864:     return FALSE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1510: {",
          "1511:   FlatpakContext *context = data;",
          "1515: }",
          "1517: static gboolean option_no_desktop_deprecated;",
          "",
          "[Removed Lines]",
          "1513:   flatpak_context_set_persistent (context, value);",
          "1514:   return TRUE;",
          "",
          "[Added Lines]",
          "1522:   return flatpak_context_set_persistent (context, value, error);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1703:         {",
          "1704:           const char *fs = parse_negated (filesystems[i], &remove);",
          "1705:           g_autofree char *filesystem = NULL;",
          "1706:           FlatpakFilesystemMode mode;",
          "1708:           if (!flatpak_context_parse_filesystem (fs, remove,",
          "1711:           else",
          "1712:             {",
          "1713:               g_assert (mode == FLATPAK_FILESYSTEM_MODE_NONE || !remove);",
          "",
          "[Removed Lines]",
          "1709:                                                  &filesystem, &mode, NULL))",
          "1710:             g_debug (\"Unknown filesystem type %s\", filesystems[i]);",
          "",
          "[Added Lines]",
          "1714:           g_autoptr(GError) local_error = NULL;",
          "1718:                                                  &filesystem, &mode, &local_error))",
          "1719:             {",
          "1720:               if (g_error_matches (local_error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA))",
          "1721:                 {",
          "1723:                   g_propagate_error (error, g_steal_pointer (&local_error));",
          "1724:                   return FALSE;",
          "1725:                 }",
          "1726:               else",
          "1727:                 {",
          "1728:                   g_debug (\"Unknown filesystem type %s\", filesystems[i]);",
          "1729:                   g_clear_error (&local_error);",
          "1730:                 }",
          "1731:             }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1724:         return FALSE;",
          "1726:       for (i = 0; persistent[i] != NULL; i++)",
          "1728:     }",
          "1730:   if (g_key_file_has_group (metakey, FLATPAK_METADATA_GROUP_SESSION_BUS_POLICY))",
          "",
          "[Removed Lines]",
          "1727:         flatpak_context_set_persistent (context, persistent[i]);",
          "",
          "[Added Lines]",
          "1748:         if (!flatpak_context_set_persistent (context, persistent[i], error))",
          "1749:           return FALSE;",
          "",
          "---------------"
        ],
        "common/flatpak-utils-private.h||common/flatpak-utils-private.h": [
          "File: common/flatpak-utils-private.h -> common/flatpak-utils-private.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "939: void   flatpak_print_escaped_string (const char        *s,",
          "940:                                      FlatpakEscapeFlags flags);",
          "942: gboolean running_under_sudo (void);",
          "944: #define FLATPAK_MESSAGE_ID \"c7b39b1e006b464599465e105b361485\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "942: gboolean flatpak_validate_path_characters (const char *path,",
          "943:                                            GError    **error);",
          "",
          "---------------"
        ],
        "common/flatpak-utils.c||common/flatpak-utils.c": [
          "File: common/flatpak-utils.c -> common/flatpak-utils.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "9249:     g_string_append_printf (result, \"\\\\U%08X\", c);",
          "9250: }",
          "9252: char *",
          "9253: flatpak_escape_string (const char        *s,",
          "9254:                        FlatpakEscapeFlags flags)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9252: static char *",
          "9253: escape_character (gunichar c)",
          "9254: {",
          "9255:   g_autoptr(GString) res = g_string_new (\"\");",
          "9256:   append_hex_escaped_character (res, c);",
          "9257:   return g_string_free (g_steal_pointer (&res), FALSE);",
          "9258: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9300:   g_print (\"%s\", escaped);",
          "9301: }",
          "9304: gboolean",
          "9305: running_under_sudo (void)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9311: gboolean",
          "9312: flatpak_validate_path_characters (const char *path,",
          "9313:                                   GError    **error)",
          "9314: {",
          "9315:   while (*path)",
          "9316:     {",
          "9317:       gunichar c = g_utf8_get_char_validated (path, -1);",
          "9318:       if (c == (gunichar)-1 || c == (gunichar)-2)",
          "9319:         {",
          "9322:           g_autofree char *escaped_char = escape_character ((unsigned char)*path);",
          "9323:           g_autofree char *escaped = flatpak_escape_string (path, FLATPAK_ESCAPE_DEFAULT);",
          "9324:           g_set_error (error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA,",
          "9325:                        \"Non-UTF8 byte %s in path %s\", escaped_char, escaped);",
          "9326:           return FALSE;",
          "9327:         }",
          "9328:       else if (!is_char_safe (c))",
          "9329:         {",
          "9330:           g_autofree char *escaped_char = escape_character (c);",
          "9331:           g_autofree char *escaped = flatpak_escape_string (path, FLATPAK_ESCAPE_DEFAULT);",
          "9332:           g_set_error (error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA,",
          "9333:                        \"Non-graphical character %s in path %s\", escaped_char, escaped);",
          "9334:           return FALSE;",
          "9335:         }",
          "9337:       path = g_utf8_find_next_char (path, NULL);",
          "9338:     }",
          "9340:   return TRUE;",
          "9341: }",
          "",
          "---------------"
        ],
        "tests/test-context.c||tests/test-context.c": [
          "File: tests/test-context.c -> tests/test-context.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "129: }",
          "131: static void context_parse_args (FlatpakContext *context,",
          "132:                                 ...) G_GNUC_NULL_TERMINATED;",
          "134: static void",
          "135: context_parse_args (FlatpakContext *context,",
          "136:                     ...)",
          "137: {",
          "139:   g_autoptr(GOptionContext) oc = NULL;",
          "140:   g_autoptr(GOptionGroup) group = NULL;",
          "141:   g_autoptr(GPtrArray) args = g_ptr_array_new_with_free_func (g_free);",
          "",
          "[Removed Lines]",
          "138:   g_autoptr(GError) local_error = NULL;",
          "",
          "[Added Lines]",
          "132:                                 GError        **error,",
          "137:                     GError        **error,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "146:   g_ptr_array_add (args, g_strdup (\"argv[0]\"));",
          "150:   while ((arg = va_arg (ap, const char *)) != NULL)",
          "151:     g_ptr_array_add (args, g_strdup (arg));",
          "",
          "[Removed Lines]",
          "148:   va_start (ap, context);",
          "",
          "[Added Lines]",
          "149:   va_start (ap, error);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "158:   oc = g_option_context_new (\"\");",
          "159:   group = flatpak_context_get_options (context);",
          "160:   g_option_context_add_group (oc, group);",
          "163: }",
          "165: static void",
          "",
          "[Removed Lines]",
          "161:   g_option_context_parse_strv (oc, &argv, &local_error);",
          "162:   g_assert_no_error (local_error);",
          "",
          "[Added Lines]",
          "162:   g_option_context_parse_strv (oc, &argv, error);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "179:       g_autoptr(FlatpakContext) lowest = flatpak_context_new ();",
          "180:       g_autoptr(FlatpakContext) middle = flatpak_context_new ();",
          "181:       g_autoptr(FlatpakContext) highest = flatpak_context_new ();",
          "182:       gpointer value;",
          "184:       context_parse_args (lowest,",
          "185:                           \"--filesystem=/one\",",
          "186:                           NULL);",
          "187:       context_parse_args (middle,",
          "188:                           \"--nofilesystem=host:reset\",",
          "189:                           \"--filesystem=/two\",",
          "190:                           NULL);",
          "191:       context_parse_args (highest,",
          "192:                           \"--nofilesystem=host\",",
          "193:                           \"--filesystem=/three\",",
          "194:                           NULL);",
          "196:       g_assert_false (g_hash_table_lookup_extended (lowest->filesystems, \"host\", NULL, NULL));",
          "197:       g_assert_false (g_hash_table_lookup_extended (lowest->filesystems, \"host-reset\", NULL, NULL));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182:       g_autoptr(GError) local_error = NULL;",
          "186:                           &local_error,",
          "189:       g_assert_no_error (local_error);",
          "191:                           &local_error,",
          "195:       g_assert_no_error (local_error);",
          "197:                           &local_error,",
          "201:       g_assert_no_error (local_error);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "273:       gpointer value;",
          "275:       context_parse_args (lowest,",
          "276:                           \"--filesystem=/one\",",
          "277:                           NULL);",
          "278:       context_parse_args (mid_low,",
          "279:                           \"--nofilesystem=host:reset\",",
          "280:                           \"--filesystem=/two\",",
          "281:                           NULL);",
          "282:       context_parse_args (mid_high,",
          "283:                           \"--filesystem=host\",",
          "284:                           \"--filesystem=/three\",",
          "285:                           NULL);",
          "286:       context_parse_args (highest,",
          "287:                           \"--nofilesystem=host\",",
          "288:                           \"--filesystem=/four\",",
          "289:                           NULL);",
          "291:       g_assert_false (g_hash_table_lookup_extended (lowest->filesystems, \"host\", NULL, NULL));",
          "292:       g_assert_false (g_hash_table_lookup_extended (lowest->filesystems, \"host-reset\", NULL, NULL));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "283:                           &local_error,",
          "286:       g_assert_no_error (local_error);",
          "288:                           &local_error,",
          "292:       g_assert_no_error (local_error);",
          "294:                           &local_error,",
          "298:       g_assert_no_error (local_error);",
          "300:                           &local_error,",
          "304:       g_assert_no_error (local_error);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "427:     }",
          "428: }",
          "430: int",
          "431: main (int argc, char *argv[])",
          "432: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "445: const char *invalid_path_args[] = {",
          "446:   \"--filesystem=/\\033[J:ro\",",
          "447:   \"--filesystem=/\\033[J\",",
          "448:   \"--persist=\\033[J\",",
          "449: };",
          "452: static void",
          "453: test_validate_path_args (void)",
          "454: {",
          "455:   gsize idx;",
          "457:   for (idx = 0; idx < G_N_ELEMENTS (invalid_path_args); idx++)",
          "458:     {",
          "459:       g_autoptr(FlatpakContext) context = flatpak_context_new ();",
          "460:       g_autoptr(GError) local_error = NULL;",
          "461:       const char *path = invalid_path_args[idx];",
          "463:       context_parse_args (context, &local_error, path, NULL);",
          "464:       g_assert_error (local_error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA);",
          "465:       g_assert (strstr (local_error->message, \"Non-graphical character\"));",
          "466:     }",
          "467: }",
          "469: typedef struct {",
          "470:   const char *key;",
          "471:   const char *value;",
          "472: } PathValidityData;",
          "474: PathValidityData invalid_path_meta[] = {",
          "475:   {FLATPAK_METADATA_KEY_FILESYSTEMS, \"\\033[J\"},",
          "476:   {FLATPAK_METADATA_KEY_PERSISTENT, \"\\033[J\"},",
          "477: };",
          "480: static void",
          "481: test_validate_path_meta (void)",
          "482: {",
          "483:   gsize idx;",
          "485:   for (idx = 0; idx < G_N_ELEMENTS (invalid_path_meta); idx++)",
          "486:     {",
          "487:       g_autoptr(FlatpakContext) context = flatpak_context_new ();",
          "488:       g_autoptr(GKeyFile) metakey = g_key_file_new ();",
          "489:       g_autoptr(GError) local_error = NULL;",
          "490:       PathValidityData *data = &invalid_path_meta[idx];",
          "491:       gboolean ret = FALSE;",
          "493:       g_key_file_set_string_list (metakey, FLATPAK_METADATA_GROUP_CONTEXT,",
          "494:                                   data->key, &data->value, 1);",
          "496:       ret = flatpak_context_load_metadata (context, metakey, &local_error);",
          "497:       g_assert_false (ret);",
          "498:       g_assert_error (local_error, G_IO_ERROR, G_IO_ERROR_INVALID_DATA);",
          "499:       g_assert (strstr (local_error->message, \"Non-graphical character\"));",
          "500:     }",
          "502: }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "435:   g_test_add_func (\"/context/env\", test_context_env);",
          "436:   g_test_add_func (\"/context/env-fd\", test_context_env_fd);",
          "437:   g_test_add_func (\"/context/merge-fs\", test_context_merge_fs);",
          "439:   return g_test_run ();",
          "440: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "512:   g_test_add_func (\"/context/validate-path-args\", test_validate_path_args);",
          "513:   g_test_add_func (\"/context/validate-path-meta\", test_validate_path_meta);",
          "",
          "---------------"
        ],
        "tests/testcommon.c||tests/testcommon.c": [
          "File: tests/testcommon.c -> tests/testcommon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1875:     }",
          "1876: }",
          "1878: int",
          "1879: main (int argc, char *argv[])",
          "1880: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1879: typedef struct {",
          "1880:   const char *path;",
          "1881:   gboolean ret;",
          "1882: } PathValidityData;",
          "1884: static PathValidityData paths[] = {",
          "1885:   {\"/a/b/../c.def\", TRUE},",
          "1886:   {\"\u3084\u3042\", TRUE},",
          "1888:   {\"\\u061C\", FALSE},",
          "1891:   {\"\\xF0\\x93\\x90\\xBF\", FALSE},",
          "1893:   {\"\\xD8\\1\", FALSE},",
          "1894: };",
          "1897: static void",
          "1898: test_validate_path_characters (void)",
          "1899: {",
          "1900:   gsize idx;",
          "1902:   for (idx = 0; idx < G_N_ELEMENTS (paths); idx++)",
          "1903:     {",
          "1904:       PathValidityData *data = &paths[idx];",
          "1905:       gboolean ret = FALSE;",
          "1907:       ret = flatpak_validate_path_characters (data->path, NULL);",
          "1908:       g_assert_cmpint (ret, ==, data->ret);",
          "1909:     }",
          "1910: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1909:   g_test_add_func (\"/common/str-is-integer\", test_str_is_integer);",
          "1910:   g_test_add_func (\"/common/parse-x11-display\", test_parse_x11_display);",
          "1911:   g_test_add_func (\"/common/string-escape\", test_string_escape);",
          "1913:   g_test_add_func (\"/app/looks-like-branch\", test_looks_like_branch);",
          "1914:   g_test_add_func (\"/app/columns\", test_columns);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1946:   g_test_add_func (\"/common/validate-path-characters\", test_validate_path_characters);",
          "",
          "---------------"
        ]
      }
    }
  ]
}