{
  "cve_id": "CVE-2023-25670",
  "cve_desc": "TensorFlow is an open source platform for machine learning. Versions prior to 2.12.0 and 2.11.1 have a null point error in QuantizedMatMulWithBiasAndDequantize with MKL enabled. A fix is included in TensorFlow version 2.12.0 and version 2.11.1.\n",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "8a47a39d9697969206d23a523c977238717e8727",
  "patch_info": {
    "commit_hash": "8a47a39d9697969206d23a523c977238717e8727",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/8a47a39d9697969206d23a523c977238717e8727",
    "files": [
      "tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc",
      "tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc"
    ],
    "message": "Merge pull request #59437 from Intel-tensorflow:amin/fix-qmatmul\n\nPiperOrigin-RevId: 504745468",
    "before_after_code_files": [
      "tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc",
      "tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc": [
      "File: tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc -> tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "322:     } else {",
      "323:       ComputeOutputRangeForInt32(context, &min_output_value, &max_output_value);",
      "324:     }",
      "",
      "[Removed Lines]",
      "320:       min_output_value = context->input(7).flat<float>()(0);",
      "321:       max_output_value = context->input(8).flat<float>()(0);",
      "",
      "[Added Lines]",
      "320:       const Tensor& min_freezed_tensor = context->input(7);",
      "321:       const Tensor& max_freezed_tensor = context->input(8);",
      "322:       OP_REQUIRES(context,",
      "323:                   TensorShapeUtils::IsScalar(min_freezed_tensor.shape()),",
      "324:                   errors::InvalidArgument(",
      "325:                       \"`min_freezed_output` must be rank 0 but is rank \",",
      "326:                       min_freezed_tensor.dims()));",
      "327:       OP_REQUIRES(context,",
      "328:                   TensorShapeUtils::IsScalar(max_freezed_tensor.shape()),",
      "329:                   errors::InvalidArgument(",
      "330:                       \"`max_freezed_output` must be rank 0 but is rank \",",
      "331:                       max_freezed_tensor.dims()));",
      "332:       min_output_value = min_freezed_tensor.scalar<float>()();",
      "333:       max_output_value = max_freezed_tensor.scalar<float>()();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "344:   void ComputeOutputRangeForInt32(OpKernelContext* context,",
      "345:                                   float* min_output_value,",
      "346:                                   float* max_output_value) {",
      "351:     MklQuantizationRangeForMultiplication<quint8, qint8, qint32>(",
      "352:         min_input, max_input, min_weight, max_weight, min_output_value,",
      "353:         max_output_value);",
      "",
      "[Removed Lines]",
      "347:     const float min_input = context->input(3).flat<float>()(0);",
      "348:     const float max_input = context->input(4).flat<float>()(0);",
      "349:     const float min_weight = context->input(5).flat<float>()(0);",
      "350:     const float max_weight = context->input(6).flat<float>()(0);",
      "",
      "[Added Lines]",
      "359:     const float min_input = context->input(3).scalar<float>()();",
      "360:     const float max_input = context->input(4).scalar<float>()();",
      "361:     const float min_weight = context->input(5).scalar<float>()();",
      "362:     const float max_weight = context->input(6).scalar<float>()();",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "361:     params.dtypes.append(typeid(Tbias).name());",
      "362:     params.dtypes.append(typeid(Toutput).name());",
      "366:     if (std::is_same<Toutput, quint8>::value ||",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "377:     const Tensor& min_input_tensor = context->input(3);",
      "378:     const Tensor& max_input_tensor = context->input(4);",
      "379:     const Tensor& min_weight_tensor = context->input(5);",
      "380:     const Tensor& max_weight_tensor = context->input(6);",
      "382:     OP_REQUIRES(context, TensorShapeUtils::IsScalar(min_input_tensor.shape()),",
      "383:                 errors::InvalidArgument(\"`min_a` must be rank 0 but is rank \",",
      "384:                                         min_input_tensor.dims()));",
      "385:     OP_REQUIRES(context, TensorShapeUtils::IsScalar(max_input_tensor.shape()),",
      "386:                 errors::InvalidArgument(\"`max_a` must be rank 0 but is rank \",",
      "387:                                         max_input_tensor.dims()));",
      "388:     OP_REQUIRES(context, TensorShapeUtils::IsScalar(min_weight_tensor.shape()),",
      "389:                 errors::InvalidArgument(\"`min_b` must be rank 0 but is rank \",",
      "390:                                         min_weight_tensor.dims()));",
      "391:     OP_REQUIRES(context, TensorShapeUtils::IsScalar(max_weight_tensor.shape()),",
      "392:                 errors::InvalidArgument(\"`max_b` must be rank 0 but is rank \",",
      "393:                                         max_weight_tensor.dims()));",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "371:       ComputeOutputRangeForInt32(context, &min_output_value, &max_output_value);",
      "372:       float scale_int32 =",
      "373:           std::max(std::abs(min_output_value), std::abs(max_output_value));",
      "376:       float scale_eightbit =",
      "377:           std::max(std::abs(min_freezed_output), std::abs(max_freezed_output));",
      "378:       float scale = 1.0;",
      "",
      "[Removed Lines]",
      "374:       const float min_freezed_output = context->input(7).flat<float>()(0);",
      "375:       const float max_freezed_output = context->input(8).flat<float>()(0);",
      "",
      "[Added Lines]",
      "405:       const Tensor& min_freezed_tensor = context->input(7);",
      "406:       const Tensor& max_freezed_tensor = context->input(8);",
      "408:       OP_REQUIRES(context,",
      "409:                   TensorShapeUtils::IsScalar(min_freezed_tensor.shape()),",
      "410:                   errors::InvalidArgument(",
      "411:                       \"`min_freezed_output` must be rank 0 but is rank \",",
      "412:                       min_freezed_tensor.dims()));",
      "413:       OP_REQUIRES(context,",
      "414:                   TensorShapeUtils::IsScalar(max_freezed_tensor.shape()),",
      "415:                   errors::InvalidArgument(",
      "416:                       \"`max_freezed_output` must be rank 0 but is rank \",",
      "417:                       max_freezed_tensor.dims()));",
      "418:       const float min_freezed_output = min_freezed_tensor.scalar<float>()();",
      "419:       const float max_freezed_output = max_freezed_tensor.scalar<float>()();",
      "",
      "---------------"
    ],
    "tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc": [
      "File: tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc -> tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "12: See the License for the specific language governing permissions and",
      "13: limitations under the License.",
      "16: #define EIGEN_USE_THREADS",
      "18: #include <functional>",
      "",
      "[Removed Lines]",
      "15: #if defined(INTEL_MKL) && defined(ENABLE_MKL)",
      "",
      "[Added Lines]",
      "15: #if defined(INTEL_MKL)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "64:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
      "65:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
      "66:   AddInputFromArray<qint32>(TensorShape({4}), {1, 2, 3, 4});",
      "72:   TF_ASSERT_OK(RunOpKernel());",
      "",
      "[Removed Lines]",
      "67:   AddInputFromArray<float>(TensorShape({1}), {0});",
      "68:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
      "69:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
      "70:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
      "",
      "[Added Lines]",
      "67:   AddInputFromArray<float>(TensorShape({}), {0});",
      "68:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
      "69:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
      "70:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "116:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
      "117:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
      "118:   AddInputFromArray<qint32>(TensorShape({4}), {100, -200, 300, -400});",
      "124:   TF_ASSERT_OK(RunOpKernel());",
      "",
      "[Removed Lines]",
      "119:   AddInputFromArray<float>(TensorShape({1}), {0});",
      "120:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
      "121:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
      "122:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
      "",
      "[Added Lines]",
      "119:   AddInputFromArray<float>(TensorShape({}), {0});",
      "120:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
      "121:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
      "122:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "178:   AddInputFromArray<qint8>(TensorShape({3, 2}), {1, 4, 2, 5, 3, 6});",
      "180:   AddInputFromArray<float>(TensorShape({2}), {10.0f, 20.0f});",
      "186:   TF_ASSERT_OK(RunOpKernel());",
      "",
      "[Removed Lines]",
      "181:   AddInputFromArray<float>(TensorShape({1}), {-12.0f});",
      "182:   AddInputFromArray<float>(TensorShape({1}), {243.0f});",
      "183:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
      "184:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
      "",
      "[Added Lines]",
      "181:   AddInputFromArray<float>(TensorShape({}), {-12.0f});",
      "182:   AddInputFromArray<float>(TensorShape({}), {243.0f});",
      "183:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
      "184:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "240:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
      "241:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
      "242:   AddInputFromArray<qint32>(TensorShape({4}), {10, -20, 30, -40});",
      "250:   TF_ASSERT_OK(RunOpKernel());",
      "",
      "[Removed Lines]",
      "243:   AddInputFromArray<float>(TensorShape({1}), {0});",
      "244:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
      "245:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
      "246:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
      "247:   AddInputFromArray<float>(TensorShape({1}), {0});",
      "248:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
      "",
      "[Added Lines]",
      "243:   AddInputFromArray<float>(TensorShape({}), {0});",
      "244:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
      "245:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
      "246:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
      "247:   AddInputFromArray<float>(TensorShape({}), {0});",
      "248:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "308:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
      "309:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
      "310:   AddInputFromArray<qint32>(TensorShape({4}), {10, -20, 30, -40});",
      "318:   TF_ASSERT_OK(RunOpKernel());",
      "",
      "[Removed Lines]",
      "311:   AddInputFromArray<float>(TensorShape({1}), {0});",
      "312:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
      "313:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
      "314:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
      "315:   AddInputFromArray<float>(TensorShape({1}), {0});",
      "316:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
      "",
      "[Added Lines]",
      "311:   AddInputFromArray<float>(TensorShape({}), {0});",
      "312:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
      "313:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
      "314:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
      "315:   AddInputFromArray<float>(TensorShape({}), {0});",
      "316:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "375:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
      "376:   AddInputFromArray<float>(TensorShape({4}),",
      "377:                            {100.0f, -200.0f, 300.0f, -400.0f});",
      "383:   TF_ASSERT_OK(RunOpKernel());",
      "",
      "[Removed Lines]",
      "378:   AddInputFromArray<float>(TensorShape({1}), {0});",
      "379:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
      "380:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
      "381:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
      "",
      "[Added Lines]",
      "378:   AddInputFromArray<float>(TensorShape({}), {0});",
      "379:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
      "380:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
      "381:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "431:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
      "432:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
      "433:   AddInputFromArray<qint32>(TensorShape({4}), {10, -20, 30, -40});",
      "441:   TF_ASSERT_OK(RunOpKernel());",
      "",
      "[Removed Lines]",
      "434:   AddInputFromArray<float>(TensorShape({1}), {0});",
      "435:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
      "436:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
      "437:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
      "438:   AddInputFromArray<float>(TensorShape({1}), {0});",
      "439:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
      "",
      "[Added Lines]",
      "434:   AddInputFromArray<float>(TensorShape({}), {0});",
      "435:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
      "436:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
      "437:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
      "438:   AddInputFromArray<float>(TensorShape({}), {0});",
      "439:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "502:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
      "503:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
      "504:   AddInputFromArray<qint32>(TensorShape({4}), {1, 2, 3, 4});",
      "510:   int64 start_time = Env::Default()->NowMicros();",
      "511:   TF_ASSERT_OK(RunOpKernel());",
      "",
      "[Removed Lines]",
      "505:   AddInputFromArray<float>(TensorShape({1}), {0});",
      "506:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
      "507:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
      "508:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
      "",
      "[Added Lines]",
      "505:   AddInputFromArray<float>(TensorShape({}), {0});",
      "506:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
      "507:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
      "508:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "544: }  // namespace tensorflow",
      "",
      "[Removed Lines]",
      "546: #endif  // INTEL_MKL && ENABLE_MKL",
      "",
      "[Added Lines]",
      "546: #endif  // INTEL_MKL",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2648c81f05f4d15e2aa48412686b5aab6507e94e",
      "candidate_info": {
        "commit_hash": "2648c81f05f4d15e2aa48412686b5aab6507e94e",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/2648c81f05f4d15e2aa48412686b5aab6507e94e",
        "files": [
          "tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc",
          "tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc"
        ],
        "message": "Check min-max values to be scalars.",
        "before_after_code_files": [
          "tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc",
          "tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/tensorflow/tensorflow/pull/59437"
        ],
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc",
            "tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc",
            "tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc": [
          "File: tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc -> tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "322:     } else {",
          "323:       ComputeOutputRangeForInt32(context, &min_output_value, &max_output_value);",
          "324:     }",
          "",
          "[Removed Lines]",
          "320:       min_output_value = context->input(7).flat<float>()(0);",
          "321:       max_output_value = context->input(8).flat<float>()(0);",
          "",
          "[Added Lines]",
          "320:       const Tensor& min_freezed_tensor = context->input(7);",
          "321:       const Tensor& max_freezed_tensor = context->input(8);",
          "322:       OP_REQUIRES(context,",
          "323:                   TensorShapeUtils::IsScalar(min_freezed_tensor.shape()),",
          "324:                   errors::InvalidArgument(",
          "325:                       \"`min_freezed_output` must be rank 0 but is rank \",",
          "326:                       min_freezed_tensor.dims()));",
          "327:       OP_REQUIRES(context,",
          "328:                   TensorShapeUtils::IsScalar(max_freezed_tensor.shape()),",
          "329:                   errors::InvalidArgument(",
          "330:                       \"`max_freezed_output` must be rank 0 but is rank \",",
          "331:                       max_freezed_tensor.dims()));",
          "332:       min_output_value = min_freezed_tensor.scalar<float>()();",
          "333:       max_output_value = max_freezed_tensor.scalar<float>()();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "344:   void ComputeOutputRangeForInt32(OpKernelContext* context,",
          "345:                                   float* min_output_value,",
          "346:                                   float* max_output_value) {",
          "351:     MklQuantizationRangeForMultiplication<quint8, qint8, qint32>(",
          "352:         min_input, max_input, min_weight, max_weight, min_output_value,",
          "353:         max_output_value);",
          "",
          "[Removed Lines]",
          "347:     const float min_input = context->input(3).flat<float>()(0);",
          "348:     const float max_input = context->input(4).flat<float>()(0);",
          "349:     const float min_weight = context->input(5).flat<float>()(0);",
          "350:     const float max_weight = context->input(6).flat<float>()(0);",
          "",
          "[Added Lines]",
          "359:     const float min_input = context->input(3).scalar<float>()();",
          "360:     const float max_input = context->input(4).scalar<float>()();",
          "361:     const float min_weight = context->input(5).scalar<float>()();",
          "362:     const float max_weight = context->input(6).scalar<float>()();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "361:     params.dtypes.append(typeid(Tbias).name());",
          "362:     params.dtypes.append(typeid(Toutput).name());",
          "366:     if (std::is_same<Toutput, quint8>::value ||",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "377:     const Tensor& min_input_tensor = context->input(3);",
          "378:     const Tensor& max_input_tensor = context->input(4);",
          "379:     const Tensor& min_weight_tensor = context->input(5);",
          "380:     const Tensor& max_weight_tensor = context->input(6);",
          "382:     OP_REQUIRES(context, TensorShapeUtils::IsScalar(min_input_tensor.shape()),",
          "383:                 errors::InvalidArgument(\"`min_a` must be rank 0 but is rank \",",
          "384:                                         min_input_tensor.dims()));",
          "385:     OP_REQUIRES(context, TensorShapeUtils::IsScalar(max_input_tensor.shape()),",
          "386:                 errors::InvalidArgument(\"`max_a` must be rank 0 but is rank \",",
          "387:                                         max_input_tensor.dims()));",
          "388:     OP_REQUIRES(context, TensorShapeUtils::IsScalar(min_weight_tensor.shape()),",
          "389:                 errors::InvalidArgument(\"`min_b` must be rank 0 but is rank \",",
          "390:                                         min_weight_tensor.dims()));",
          "391:     OP_REQUIRES(context, TensorShapeUtils::IsScalar(max_weight_tensor.shape()),",
          "392:                 errors::InvalidArgument(\"`max_b` must be rank 0 but is rank \",",
          "393:                                         max_weight_tensor.dims()));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "371:       ComputeOutputRangeForInt32(context, &min_output_value, &max_output_value);",
          "372:       float scale_int32 =",
          "373:           std::max(std::abs(min_output_value), std::abs(max_output_value));",
          "376:       float scale_eightbit =",
          "377:           std::max(std::abs(min_freezed_output), std::abs(max_freezed_output));",
          "378:       float scale = 1.0;",
          "",
          "[Removed Lines]",
          "374:       const float min_freezed_output = context->input(7).flat<float>()(0);",
          "375:       const float max_freezed_output = context->input(8).flat<float>()(0);",
          "",
          "[Added Lines]",
          "405:       const Tensor& min_freezed_tensor = context->input(7);",
          "406:       const Tensor& max_freezed_tensor = context->input(8);",
          "408:       OP_REQUIRES(context,",
          "409:                   TensorShapeUtils::IsScalar(min_freezed_tensor.shape()),",
          "410:                   errors::InvalidArgument(",
          "411:                       \"`min_freezed_output` must be rank 0 but is rank \",",
          "412:                       min_freezed_tensor.dims()));",
          "413:       OP_REQUIRES(context,",
          "414:                   TensorShapeUtils::IsScalar(max_freezed_tensor.shape()),",
          "415:                   errors::InvalidArgument(",
          "416:                       \"`max_freezed_output` must be rank 0 but is rank \",",
          "417:                       max_freezed_tensor.dims()));",
          "418:       const float min_freezed_output = min_freezed_tensor.scalar<float>()();",
          "419:       const float max_freezed_output = max_freezed_tensor.scalar<float>()();",
          "",
          "---------------"
        ],
        "tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc": [
          "File: tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc -> tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: See the License for the specific language governing permissions and",
          "13: limitations under the License.",
          "16: #define EIGEN_USE_THREADS",
          "18: #include <functional>",
          "",
          "[Removed Lines]",
          "15: #if defined(INTEL_MKL) && defined(ENABLE_MKL)",
          "",
          "[Added Lines]",
          "15: #if defined(INTEL_MKL)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
          "65:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
          "66:   AddInputFromArray<qint32>(TensorShape({4}), {1, 2, 3, 4});",
          "72:   TF_ASSERT_OK(RunOpKernel());",
          "",
          "[Removed Lines]",
          "67:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "68:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "69:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
          "70:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
          "",
          "[Added Lines]",
          "67:   AddInputFromArray<float>(TensorShape({}), {0});",
          "68:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "69:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
          "70:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "116:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
          "117:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
          "118:   AddInputFromArray<qint32>(TensorShape({4}), {100, -200, 300, -400});",
          "124:   TF_ASSERT_OK(RunOpKernel());",
          "",
          "[Removed Lines]",
          "119:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "120:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "121:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
          "122:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
          "",
          "[Added Lines]",
          "119:   AddInputFromArray<float>(TensorShape({}), {0});",
          "120:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "121:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
          "122:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "178:   AddInputFromArray<qint8>(TensorShape({3, 2}), {1, 4, 2, 5, 3, 6});",
          "180:   AddInputFromArray<float>(TensorShape({2}), {10.0f, 20.0f});",
          "186:   TF_ASSERT_OK(RunOpKernel());",
          "",
          "[Removed Lines]",
          "181:   AddInputFromArray<float>(TensorShape({1}), {-12.0f});",
          "182:   AddInputFromArray<float>(TensorShape({1}), {243.0f});",
          "183:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
          "184:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
          "",
          "[Added Lines]",
          "181:   AddInputFromArray<float>(TensorShape({}), {-12.0f});",
          "182:   AddInputFromArray<float>(TensorShape({}), {243.0f});",
          "183:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
          "184:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "240:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
          "241:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
          "242:   AddInputFromArray<qint32>(TensorShape({4}), {10, -20, 30, -40});",
          "250:   TF_ASSERT_OK(RunOpKernel());",
          "",
          "[Removed Lines]",
          "243:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "244:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "245:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
          "246:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
          "247:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "248:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "",
          "[Added Lines]",
          "243:   AddInputFromArray<float>(TensorShape({}), {0});",
          "244:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "245:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
          "246:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
          "247:   AddInputFromArray<float>(TensorShape({}), {0});",
          "248:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "308:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
          "309:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
          "310:   AddInputFromArray<qint32>(TensorShape({4}), {10, -20, 30, -40});",
          "318:   TF_ASSERT_OK(RunOpKernel());",
          "",
          "[Removed Lines]",
          "311:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "312:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "313:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
          "314:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
          "315:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "316:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "",
          "[Added Lines]",
          "311:   AddInputFromArray<float>(TensorShape({}), {0});",
          "312:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "313:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
          "314:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
          "315:   AddInputFromArray<float>(TensorShape({}), {0});",
          "316:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "375:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
          "376:   AddInputFromArray<float>(TensorShape({4}),",
          "377:                            {100.0f, -200.0f, 300.0f, -400.0f});",
          "383:   TF_ASSERT_OK(RunOpKernel());",
          "",
          "[Removed Lines]",
          "378:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "379:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "380:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
          "381:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
          "",
          "[Added Lines]",
          "378:   AddInputFromArray<float>(TensorShape({}), {0});",
          "379:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "380:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
          "381:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "431:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
          "432:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
          "433:   AddInputFromArray<qint32>(TensorShape({4}), {10, -20, 30, -40});",
          "441:   TF_ASSERT_OK(RunOpKernel());",
          "",
          "[Removed Lines]",
          "434:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "435:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "436:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
          "437:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
          "438:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "439:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "",
          "[Added Lines]",
          "434:   AddInputFromArray<float>(TensorShape({}), {0});",
          "435:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "436:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
          "437:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
          "438:   AddInputFromArray<float>(TensorShape({}), {0});",
          "439:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "502:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
          "503:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
          "504:   AddInputFromArray<qint32>(TensorShape({4}), {1, 2, 3, 4});",
          "510:   int64 start_time = Env::Default()->NowMicros();",
          "511:   TF_ASSERT_OK(RunOpKernel());",
          "",
          "[Removed Lines]",
          "505:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "506:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "507:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
          "508:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
          "",
          "[Added Lines]",
          "505:   AddInputFromArray<float>(TensorShape({}), {0});",
          "506:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "507:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
          "508:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "544: }  // namespace tensorflow",
          "",
          "[Removed Lines]",
          "546: #endif  // INTEL_MKL && ENABLE_MKL",
          "",
          "[Added Lines]",
          "546: #endif  // INTEL_MKL",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "49b7db4dbacf684bab48245df2d4286fb4ad6afb",
      "candidate_info": {
        "commit_hash": "49b7db4dbacf684bab48245df2d4286fb4ad6afb",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/49b7db4dbacf684bab48245df2d4286fb4ad6afb",
        "files": [
          "tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc",
          "tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc"
        ],
        "message": "Check min-max values to be scalars.",
        "before_after_code_files": [
          "tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc",
          "tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc",
            "tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc",
            "tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc": [
          "File: tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc -> tensorflow/core/kernels/mkl/mkl_qmatmul_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "322:     } else {",
          "323:       ComputeOutputRangeForInt32(context, &min_output_value, &max_output_value);",
          "324:     }",
          "",
          "[Removed Lines]",
          "320:       min_output_value = context->input(7).flat<float>()(0);",
          "321:       max_output_value = context->input(8).flat<float>()(0);",
          "",
          "[Added Lines]",
          "320:       const Tensor& min_freezed_tensor = context->input(7);",
          "321:       const Tensor& max_freezed_tensor = context->input(8);",
          "322:       OP_REQUIRES(context,",
          "323:                   TensorShapeUtils::IsScalar(min_freezed_tensor.shape()),",
          "324:                   errors::InvalidArgument(",
          "325:                       \"`min_freezed_output` must be rank 0 but is rank \",",
          "326:                       min_freezed_tensor.dims()));",
          "327:       OP_REQUIRES(context,",
          "328:                   TensorShapeUtils::IsScalar(max_freezed_tensor.shape()),",
          "329:                   errors::InvalidArgument(",
          "330:                       \"`max_freezed_output` must be rank 0 but is rank \",",
          "331:                       max_freezed_tensor.dims()));",
          "332:       min_output_value = min_freezed_tensor.scalar<float>()();",
          "333:       max_output_value = max_freezed_tensor.scalar<float>()();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "344:   void ComputeOutputRangeForInt32(OpKernelContext* context,",
          "345:                                   float* min_output_value,",
          "346:                                   float* max_output_value) {",
          "351:     MklQuantizationRangeForMultiplication<quint8, qint8, qint32>(",
          "352:         min_input, max_input, min_weight, max_weight, min_output_value,",
          "353:         max_output_value);",
          "",
          "[Removed Lines]",
          "347:     const float min_input = context->input(3).flat<float>()(0);",
          "348:     const float max_input = context->input(4).flat<float>()(0);",
          "349:     const float min_weight = context->input(5).flat<float>()(0);",
          "350:     const float max_weight = context->input(6).flat<float>()(0);",
          "",
          "[Added Lines]",
          "359:     const float min_input = context->input(3).scalar<float>()();",
          "360:     const float max_input = context->input(4).scalar<float>()();",
          "361:     const float min_weight = context->input(5).scalar<float>()();",
          "362:     const float max_weight = context->input(6).scalar<float>()();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "361:     params.dtypes.append(typeid(Tbias).name());",
          "362:     params.dtypes.append(typeid(Toutput).name());",
          "366:     if (std::is_same<Toutput, quint8>::value ||",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "377:     const Tensor& min_input_tensor = context->input(3);",
          "378:     const Tensor& max_input_tensor = context->input(4);",
          "379:     const Tensor& min_weight_tensor = context->input(5);",
          "380:     const Tensor& max_weight_tensor = context->input(6);",
          "382:     OP_REQUIRES(context, TensorShapeUtils::IsScalar(min_input_tensor.shape()),",
          "383:                 errors::InvalidArgument(\"`min_a` must be rank 0 but is rank \",",
          "384:                                         min_input_tensor.dims()));",
          "385:     OP_REQUIRES(context, TensorShapeUtils::IsScalar(max_input_tensor.shape()),",
          "386:                 errors::InvalidArgument(\"`max_a` must be rank 0 but is rank \",",
          "387:                                         max_input_tensor.dims()));",
          "388:     OP_REQUIRES(context, TensorShapeUtils::IsScalar(min_weight_tensor.shape()),",
          "389:                 errors::InvalidArgument(\"`min_b` must be rank 0 but is rank \",",
          "390:                                         min_weight_tensor.dims()));",
          "391:     OP_REQUIRES(context, TensorShapeUtils::IsScalar(max_weight_tensor.shape()),",
          "392:                 errors::InvalidArgument(\"`max_b` must be rank 0 but is rank \",",
          "393:                                         max_weight_tensor.dims()));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "371:       ComputeOutputRangeForInt32(context, &min_output_value, &max_output_value);",
          "372:       float scale_int32 =",
          "373:           std::max(std::abs(min_output_value), std::abs(max_output_value));",
          "376:       float scale_eightbit =",
          "377:           std::max(std::abs(min_freezed_output), std::abs(max_freezed_output));",
          "378:       float scale = 1.0;",
          "",
          "[Removed Lines]",
          "374:       const float min_freezed_output = context->input(7).flat<float>()(0);",
          "375:       const float max_freezed_output = context->input(8).flat<float>()(0);",
          "",
          "[Added Lines]",
          "405:       const Tensor& min_freezed_tensor = context->input(7);",
          "406:       const Tensor& max_freezed_tensor = context->input(8);",
          "408:       OP_REQUIRES(context,",
          "409:                   TensorShapeUtils::IsScalar(min_freezed_tensor.shape()),",
          "410:                   errors::InvalidArgument(",
          "411:                       \"`min_freezed_output` must be rank 0 but is rank \",",
          "412:                       min_freezed_tensor.dims()));",
          "413:       OP_REQUIRES(context,",
          "414:                   TensorShapeUtils::IsScalar(max_freezed_tensor.shape()),",
          "415:                   errors::InvalidArgument(",
          "416:                       \"`max_freezed_output` must be rank 0 but is rank \",",
          "417:                       max_freezed_tensor.dims()));",
          "418:       const float min_freezed_output = min_freezed_tensor.scalar<float>()();",
          "419:       const float max_freezed_output = max_freezed_tensor.scalar<float>()();",
          "",
          "---------------"
        ],
        "tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc||tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc": [
          "File: tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc -> tensorflow/core/kernels/mkl/mkl_qmatmul_op_test.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: See the License for the specific language governing permissions and",
          "13: limitations under the License.",
          "16: #define EIGEN_USE_THREADS",
          "18: #include <functional>",
          "",
          "[Removed Lines]",
          "15: #if defined(INTEL_MKL) && defined(ENABLE_MKL)",
          "",
          "[Added Lines]",
          "15: #if defined(INTEL_MKL)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
          "65:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
          "66:   AddInputFromArray<qint32>(TensorShape({4}), {1, 2, 3, 4});",
          "72:   TF_ASSERT_OK(RunOpKernel());",
          "",
          "[Removed Lines]",
          "67:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "68:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "69:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
          "70:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
          "",
          "[Added Lines]",
          "67:   AddInputFromArray<float>(TensorShape({}), {0});",
          "68:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "69:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
          "70:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "116:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
          "117:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
          "118:   AddInputFromArray<qint32>(TensorShape({4}), {100, -200, 300, -400});",
          "124:   TF_ASSERT_OK(RunOpKernel());",
          "",
          "[Removed Lines]",
          "119:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "120:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "121:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
          "122:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
          "",
          "[Added Lines]",
          "119:   AddInputFromArray<float>(TensorShape({}), {0});",
          "120:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "121:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
          "122:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "178:   AddInputFromArray<qint8>(TensorShape({3, 2}), {1, 4, 2, 5, 3, 6});",
          "180:   AddInputFromArray<float>(TensorShape({2}), {10.0f, 20.0f});",
          "186:   TF_ASSERT_OK(RunOpKernel());",
          "",
          "[Removed Lines]",
          "181:   AddInputFromArray<float>(TensorShape({1}), {-12.0f});",
          "182:   AddInputFromArray<float>(TensorShape({1}), {243.0f});",
          "183:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
          "184:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
          "",
          "[Added Lines]",
          "181:   AddInputFromArray<float>(TensorShape({}), {-12.0f});",
          "182:   AddInputFromArray<float>(TensorShape({}), {243.0f});",
          "183:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
          "184:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "240:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
          "241:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
          "242:   AddInputFromArray<qint32>(TensorShape({4}), {10, -20, 30, -40});",
          "250:   TF_ASSERT_OK(RunOpKernel());",
          "",
          "[Removed Lines]",
          "243:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "244:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "245:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
          "246:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
          "247:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "248:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "",
          "[Added Lines]",
          "243:   AddInputFromArray<float>(TensorShape({}), {0});",
          "244:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "245:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
          "246:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
          "247:   AddInputFromArray<float>(TensorShape({}), {0});",
          "248:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "308:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
          "309:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
          "310:   AddInputFromArray<qint32>(TensorShape({4}), {10, -20, 30, -40});",
          "318:   TF_ASSERT_OK(RunOpKernel());",
          "",
          "[Removed Lines]",
          "311:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "312:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "313:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
          "314:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
          "315:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "316:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "",
          "[Added Lines]",
          "311:   AddInputFromArray<float>(TensorShape({}), {0});",
          "312:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "313:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
          "314:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
          "315:   AddInputFromArray<float>(TensorShape({}), {0});",
          "316:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "375:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
          "376:   AddInputFromArray<float>(TensorShape({4}),",
          "377:                            {100.0f, -200.0f, 300.0f, -400.0f});",
          "383:   TF_ASSERT_OK(RunOpKernel());",
          "",
          "[Removed Lines]",
          "378:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "379:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "380:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
          "381:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
          "",
          "[Added Lines]",
          "378:   AddInputFromArray<float>(TensorShape({}), {0});",
          "379:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "380:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
          "381:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "431:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
          "432:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
          "433:   AddInputFromArray<qint32>(TensorShape({4}), {10, -20, 30, -40});",
          "441:   TF_ASSERT_OK(RunOpKernel());",
          "",
          "[Removed Lines]",
          "434:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "435:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "436:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
          "437:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
          "438:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "439:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "",
          "[Added Lines]",
          "434:   AddInputFromArray<float>(TensorShape({}), {0});",
          "435:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "436:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
          "437:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
          "438:   AddInputFromArray<float>(TensorShape({}), {0});",
          "439:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "502:   AddInputFromArray<qint8>(TensorShape({3, 4}),",
          "503:                            {7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18});",
          "504:   AddInputFromArray<qint32>(TensorShape({4}), {1, 2, 3, 4});",
          "510:   int64 start_time = Env::Default()->NowMicros();",
          "511:   TF_ASSERT_OK(RunOpKernel());",
          "",
          "[Removed Lines]",
          "505:   AddInputFromArray<float>(TensorShape({1}), {0});",
          "506:   AddInputFromArray<float>(TensorShape({1}), {255.0f});",
          "507:   AddInputFromArray<float>(TensorShape({1}), {-127.0f});",
          "508:   AddInputFromArray<float>(TensorShape({1}), {127.0f});",
          "",
          "[Added Lines]",
          "505:   AddInputFromArray<float>(TensorShape({}), {0});",
          "506:   AddInputFromArray<float>(TensorShape({}), {255.0f});",
          "507:   AddInputFromArray<float>(TensorShape({}), {-127.0f});",
          "508:   AddInputFromArray<float>(TensorShape({}), {127.0f});",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "544: }  // namespace tensorflow",
          "",
          "[Removed Lines]",
          "546: #endif  // INTEL_MKL && ENABLE_MKL",
          "",
          "[Added Lines]",
          "546: #endif  // INTEL_MKL",
          "",
          "---------------"
        ]
      }
    }
  ]
}