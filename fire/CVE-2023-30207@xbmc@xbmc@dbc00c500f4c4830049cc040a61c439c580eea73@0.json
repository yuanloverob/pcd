{
  "cve_id": "CVE-2023-30207",
  "cve_desc": "A divide by zero issue discovered in Kodi Home Theater Software 19.5 and earlier allows attackers to cause a denial of service via use of crafted mp3 file.",
  "repo": "xbmc/xbmc",
  "patch_hash": "dbc00c500f4c4830049cc040a61c439c580eea73",
  "patch_info": {
    "commit_hash": "dbc00c500f4c4830049cc040a61c439c580eea73",
    "repo": "xbmc/xbmc",
    "commit_url": "https://github.com/xbmc/xbmc/commit/dbc00c500f4c4830049cc040a61c439c580eea73",
    "files": [
      "xbmc/cores/paplayer/VideoPlayerCodec.cpp"
    ],
    "message": "VideoPlayerCodec: Stop dividing by zero\n\nWhen parsing a file failed so that needed fields, in our case frameSize\nare not available a guess work like with m_channels or m_samplerate does\nnot help. Therefore fail early.",
    "before_after_code_files": [
      "xbmc/cores/paplayer/VideoPlayerCodec.cpp||xbmc/cores/paplayer/VideoPlayerCodec.cpp"
    ]
  },
  "patch_diff": {
    "xbmc/cores/paplayer/VideoPlayerCodec.cpp||xbmc/cores/paplayer/VideoPlayerCodec.cpp": [
      "File: xbmc/cores/paplayer/VideoPlayerCodec.cpp -> xbmc/cores/paplayer/VideoPlayerCodec.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "183:   int nErrors = 0;",
      "185:   {",
      "186:     uint8_t dummy[256];",
      "187:     size_t nSize = 256;",
      "",
      "[Removed Lines]",
      "184:   for (int nPacket=0; nPacket < 10 && (m_channels == 0 || m_format.m_sampleRate == 0); nPacket++)",
      "",
      "[Added Lines]",
      "184:   for (int nPacket = 0;",
      "185:        nPacket < 10 && (m_channels == 0 || m_format.m_sampleRate == 0 || m_format.m_frameSize == 0);",
      "186:        nPacket++)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "239:   if (NeedConvert(m_srcFormat.m_dataFormat))",
      "240:   {",
      "241:     m_needConvert = true;",
      "242:     m_pResampler = ActiveAE::CAEResampleFactory::Create();",
      "244:     SampleConfig dstConfig, srcConfig;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "245:     if (m_srcFormat.m_frameSize == 0)",
      "246:       return false;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "116ad7977baa1d16a85860b6bb6f322b61c1ea84",
      "candidate_info": {
        "commit_hash": "116ad7977baa1d16a85860b6bb6f322b61c1ea84",
        "repo": "xbmc/xbmc",
        "commit_url": "https://github.com/xbmc/xbmc/commit/116ad7977baa1d16a85860b6bb6f322b61c1ea84",
        "files": [
          "xbmc/cores/paplayer/VideoPlayerCodec.cpp"
        ],
        "message": "VideoPlayerCodec: Stop dividing by zero\n\nWhen parsing a file failed so that needed fields, in our case frameSize\nare not available a guess work like with m_channels or m_samplerate does\nnot help. Therefore fail early.",
        "before_after_code_files": [
          "xbmc/cores/paplayer/VideoPlayerCodec.cpp||xbmc/cores/paplayer/VideoPlayerCodec.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "xbmc/cores/paplayer/VideoPlayerCodec.cpp||xbmc/cores/paplayer/VideoPlayerCodec.cpp"
          ],
          "candidate": [
            "xbmc/cores/paplayer/VideoPlayerCodec.cpp||xbmc/cores/paplayer/VideoPlayerCodec.cpp"
          ]
        }
      },
      "candidate_diff": {
        "xbmc/cores/paplayer/VideoPlayerCodec.cpp||xbmc/cores/paplayer/VideoPlayerCodec.cpp": [
          "File: xbmc/cores/paplayer/VideoPlayerCodec.cpp -> xbmc/cores/paplayer/VideoPlayerCodec.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "174:   int nErrors = 0;",
          "176:   {",
          "177:     uint8_t dummy[256];",
          "178:     size_t nSize = 256;",
          "",
          "[Removed Lines]",
          "175:   for (int nPacket=0; nPacket < 10 && (m_channels == 0 || m_format.m_sampleRate == 0); nPacket++)",
          "",
          "[Added Lines]",
          "175:   for (int nPacket = 0;",
          "176:        nPacket < 10 && (m_channels == 0 || m_format.m_sampleRate == 0 || m_format.m_frameSize == 0);",
          "177:        nPacket++)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "230:   if (NeedConvert(m_srcFormat.m_dataFormat))",
          "231:   {",
          "232:     m_needConvert = true;",
          "233:     m_pResampler = ActiveAE::CAEResampleFactory::Create();",
          "235:     SampleConfig dstConfig, srcConfig;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "236:     if (m_srcFormat.m_frameSize == 0)",
          "237:       return false;",
          "",
          "---------------"
        ]
      }
    }
  ]
}