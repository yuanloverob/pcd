{
  "cve_id": "CVE-2023-29416",
  "cve_desc": "An issue was discovered in libbzip3.a in bzip3 before 1.3.0. A bz3_decode_block out-of-bounds write can occur with a crafted archive because bzip3 does not follow the required procedure for interacting with libsais.",
  "repo": "kspalaiologos/bzip3",
  "patch_hash": "bfa5bf82b53715dfedf048e5859a46cf248668ff",
  "patch_info": {
    "commit_hash": "bfa5bf82b53715dfedf048e5859a46cf248668ff",
    "repo": "kspalaiologos/bzip3",
    "commit_url": "https://github.com/kspalaiologos/bzip3/commit/bfa5bf82b53715dfedf048e5859a46cf248668ff",
    "files": [
      "include/common.h",
      "src/libbz3.c"
    ],
    "message": "tentative libsais safety patches",
    "before_after_code_files": [
      "include/common.h||include/common.h",
      "src/libbz3.c||src/libbz3.c"
    ]
  },
  "patch_diff": {
    "include/common.h||include/common.h": [
      "File: include/common.h -> include/common.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "23: #define KiB(x) ((x)*1024)",
      "24: #define MiB(x) ((x)*1024 * 1024)",
      "26: #include <inttypes.h>",
      "27: #include <stdint.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "25: #define BWT_BOUND(x) ((x) + 128)",
      "",
      "---------------"
    ],
    "src/libbz3.c||src/libbz3.c": [
      "File: src/libbz3.c -> src/libbz3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "502:     bz3_state->cm_state = malloc(sizeof(state));",
      "504:     bz3_state->swap_buffer = malloc(bz3_bound(block_size));",
      "508:     bz3_state->lzp_lut = calloc(1 << LZP_DICTIONARY, sizeof(s32));",
      "",
      "[Removed Lines]",
      "505:     bz3_state->sais_array = malloc((block_size + 128) * sizeof(s32));",
      "506:     memset(bz3_state->sais_array, 0, sizeof(s32) * (block_size + 128));",
      "",
      "[Added Lines]",
      "505:     bz3_state->sais_array = malloc(BWT_BOUND(block_size) * sizeof(s32));",
      "506:     memset(bz3_state->sais_array, 0, sizeof(s32) * BWT_BOUND(block_size));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "682:     }",
      "685:     if (libsais_unbwt(b1, b2, state->sais_array, size_src, NULL, bwt_idx) < 0) {",
      "686:         state->last_error = BZ3_ERR_BWT;",
      "687:         return -1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "685:     memset(state->sais_array, 0, sizeof(s32) * BWT_BOUND(state->block_size));",
      "686:     memset(b2, 0, size_src);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "646212a8f5cb22e322e155bec3da51685bd03bfc",
      "candidate_info": {
        "commit_hash": "646212a8f5cb22e322e155bec3da51685bd03bfc",
        "repo": "kspalaiologos/bzip3",
        "commit_url": "https://github.com/kspalaiologos/bzip3/commit/646212a8f5cb22e322e155bec3da51685bd03bfc",
        "files": [
          "include/common.h"
        ],
        "message": "Update common.h",
        "before_after_code_files": [
          "include/common.h||include/common.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "include/common.h||include/common.h"
          ],
          "candidate": [
            "include/common.h||include/common.h"
          ]
        }
      },
      "candidate_diff": {
        "include/common.h||include/common.h": [
          "File: include/common.h -> include/common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: #define KiB(x) ((x)*1024)",
          "24: #define MiB(x) ((x)*1024 * 1024)",
          "27: #include <inttypes.h>",
          "28: #include <stdint.h>",
          "",
          "[Removed Lines]",
          "25: #define BWT_BOUND(x) ((x) + 128)",
          "",
          "[Added Lines]",
          "25: #define BWT_BOUND(x) (bz3_bound(x) + 128)",
          "",
          "---------------"
        ]
      }
    }
  ]
}