{
  "cve_id": "CVE-2023-22745",
  "cve_desc": "tpm2-tss is an open source software implementation of the Trusted Computing Group (TCG) Trusted Platform Module (TPM) 2 Software Stack (TSS2). In affected versions `Tss2_RC_SetHandler` and `Tss2_RC_Decode` both index into `layer_handler` with an 8 bit layer number, but the array only has `TPM2_ERROR_TSS2_RC_LAYER_COUNT` entries, so trying to add a handler for higher-numbered layers or decode a response code with such a layer number reads/writes past the end of the buffer. This Buffer overrun, could result in arbitrary code execution. An example attack would be a MiTM bus attack that returns 0xFFFFFFFF for the RC. Given the common use case of TPM modules an attacker must have local access to the target machine with local system privileges which allows access to the TPM system. Usually TPM access requires administrative privilege. ",
  "repo": "tpm2-software/tpm2-tss",
  "patch_hash": "306490c8d848c367faa2d9df81f5e69dab46ffb5",
  "patch_info": {
    "commit_hash": "306490c8d848c367faa2d9df81f5e69dab46ffb5",
    "repo": "tpm2-software/tpm2-tss",
    "commit_url": "https://github.com/tpm2-software/tpm2-tss/commit/306490c8d848c367faa2d9df81f5e69dab46ffb5",
    "files": [
      "src/tss2-rc/tss2_rc.c",
      "test/unit/test_tss2_rc.c"
    ],
    "message": "tss2_rc: ensure layer number is in bounds\n\nThe layer handler array was defined as 255, the max number of uint8,\nwhich is the size of the layer field, however valid values are 0-255\nallowing for 256 possibilities and thus the array was off by one and\nneeded to be sized to 256 entries. Update the size and add tests.\n\nNote: previous implementations incorrectly dropped bits on unknown error\noutput, ie TSS2_RC of 0xFFFFFF should yeild a string of 255:0xFFFFFF,\nbut earlier implementations returned 255:0xFFFF, dropping the middle\nbits, this patch fixes that.\n\nFixes: CVE-2023-22745\n\nSigned-off-by: William Roberts <william.c.roberts@intel.com>",
    "before_after_code_files": [
      "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c",
      "test/unit/test_tss2_rc.c||test/unit/test_tss2_rc.c"
    ]
  },
  "patch_diff": {
    "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c": [
      "File: src/tss2-rc/tss2_rc.c -> src/tss2-rc/tss2_rc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: #include <stdarg.h>",
      "4: #include <stdbool.h>",
      "5: #include <stdio.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2: #ifdef HAVE_CONFIG_H",
      "3: #include \"config.h\"",
      "4: #endif",
      "5: #include <assert.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "846: static struct {",
      "847:     char name[TSS2_ERR_LAYER_NAME_MAX];",
      "848:     TSS2_RC_HANDLER handler;",
      "850:     ADD_HANDLER(\"tpm\" , tpm2_ehandler),",
      "",
      "[Removed Lines]",
      "849: } layer_handler[TPM2_ERROR_TSS2_RC_LAYER_COUNT] = {",
      "",
      "[Added Lines]",
      "852: } layer_handler[TPM2_ERROR_TSS2_RC_LAYER_COUNT + 1] = {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "881:     static __thread char buf[32];",
      "883:     clearbuf(buf);",
      "886:     return buf;",
      "887: }",
      "",
      "[Removed Lines]",
      "884:     catbuf(buf, \"0x%X\", tpm2_error_get(rc));",
      "",
      "[Added Lines]",
      "887:     catbuf(buf, \"0x%X\", rc);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "978:         catbuf(buf, \"%u:\", layer);",
      "979:     }",
      "992:     } else {",
      "994:     }",
      "996:     return buf;",
      "",
      "[Removed Lines]",
      "981:     handler = !handler ? unknown_layer_handler : handler;",
      "988:     UINT16 err_bits = tpm2_error_get(rc);",
      "989:     const char *e = err_bits ? handler(err_bits) : \"success\";",
      "990:     if (e) {",
      "991:         catbuf(buf, \"%s\", e);",
      "993:         catbuf(buf, \"0x%X\", err_bits);",
      "",
      "[Added Lines]",
      "989:     if (handler) {",
      "990:         UINT16 err_bits = tpm2_error_get(rc);",
      "991:         const char *e = err_bits ? handler(err_bits) : \"success\";",
      "992:         if (e) {",
      "993:             catbuf(buf, \"%s\", e);",
      "994:         } else {",
      "995:             catbuf(buf, \"0x%X\", err_bits);",
      "996:         }",
      "1002:         const char *e = unknown_layer_handler(rc >> 8);",
      "1003:         assert(e);",
      "1004:         catbuf(buf, \"%s\", e);",
      "",
      "---------------"
    ],
    "test/unit/test_tss2_rc.c||test/unit/test_tss2_rc.c": [
      "File: test/unit/test_tss2_rc.c -> test/unit/test_tss2_rc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "199:     e = Tss2_RC_Decode(rc);",
      "201: }",
      "203: static void",
      "",
      "[Removed Lines]",
      "200:     assert_string_equal(e, \"1:0x2A\");",
      "",
      "[Added Lines]",
      "200:     assert_string_equal(e, \"1:0x100\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "407:     assert_null(m);",
      "408: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "410: static void",
      "411: test_all_FFs(void **state)",
      "412: {",
      "413:     (void) state;",
      "415:     const char *e = Tss2_RC_Decode(0xFFFFFFFF);",
      "416:     assert_string_equal(e, \"255:0xFFFFFF\");",
      "417: }",
      "419: static void",
      "420: test_all_FFs_set_handler(void **state)",
      "421: {",
      "422:     (void) state;",
      "423:     Tss2_RC_SetHandler(0xFF, \"garbage\", custom_err_handler);",
      "424:     Tss2_RC_SetHandler(0xFF, NULL, NULL);",
      "425: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "449:             cmocka_unit_test(test_info_str_fmt0_warn),",
      "450:             cmocka_unit_test(test_info_str_fmt0_ff),",
      "451:             cmocka_unit_test(test_info_str_null),",
      "452:     };",
      "454:     return cmocka_run_group_tests(tests, NULL, NULL);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "469:             cmocka_unit_test(test_all_FFs),",
      "470:             cmocka_unit_test(test_all_FFs_set_handler)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "49107d65d5c7be430671398416bbd89dae4e34e7",
      "candidate_info": {
        "commit_hash": "49107d65d5c7be430671398416bbd89dae4e34e7",
        "repo": "tpm2-software/tpm2-tss",
        "commit_url": "https://github.com/tpm2-software/tpm2-tss/commit/49107d65d5c7be430671398416bbd89dae4e34e7",
        "files": [
          "src/tss2-rc/tss2_rc.c",
          "test/unit/test_tss2_rc.c"
        ],
        "message": "tss2_rc: ensure layer number is in bounds\n\nThe layer handler array was defined as 255, the max number of uint8,\nwhich is the size of the layer field, however valid values are 0-255\nallowing for 256 possibilities and thus the array was off by one and\nneeded to be sized to 256 entries. Update the size and add tests.\n\nNote: previous implementations incorrectly dropped bits on unknown error\noutput, ie TSS2_RC of 0xFFFFFF should yeild a string of 255:0xFFFFFF,\nbut earlier implementations returned 255:0xFFFF, dropping the middle\nbits, this patch fixes that.\n\nFixes: CVE-2023-22745\n\nSigned-off-by: William Roberts <william.c.roberts@intel.com>",
        "before_after_code_files": [
          "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c",
          "test/unit/test_tss2_rc.c||test/unit/test_tss2_rc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c",
            "test/unit/test_tss2_rc.c||test/unit/test_tss2_rc.c"
          ],
          "candidate": [
            "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c",
            "test/unit/test_tss2_rc.c||test/unit/test_tss2_rc.c"
          ]
        }
      },
      "candidate_diff": {
        "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c": [
          "File: src/tss2-rc/tss2_rc.c -> src/tss2-rc/tss2_rc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #include <stdarg.h>",
          "4: #include <stdbool.h>",
          "5: #include <stdio.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: #ifdef HAVE_CONFIG_H",
          "3: #include \"config.h\"",
          "4: #endif",
          "5: #include <assert.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "846: static struct {",
          "847:     char name[TSS2_ERR_LAYER_NAME_MAX];",
          "848:     TSS2_RC_HANDLER handler;",
          "850:     ADD_HANDLER(\"tpm\" , tpm2_ehandler),",
          "",
          "[Removed Lines]",
          "849: } layer_handler[TPM2_ERROR_TSS2_RC_LAYER_COUNT] = {",
          "",
          "[Added Lines]",
          "852: } layer_handler[TPM2_ERROR_TSS2_RC_LAYER_COUNT + 1] = {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "881:     static __thread char buf[32];",
          "883:     clearbuf(buf);",
          "886:     return buf;",
          "887: }",
          "",
          "[Removed Lines]",
          "884:     catbuf(buf, \"0x%X\", tpm2_error_get(rc));",
          "",
          "[Added Lines]",
          "887:     catbuf(buf, \"0x%X\", rc);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "978:         catbuf(buf, \"%u:\", layer);",
          "979:     }",
          "992:     } else {",
          "994:     }",
          "996:     return buf;",
          "",
          "[Removed Lines]",
          "981:     handler = !handler ? unknown_layer_handler : handler;",
          "988:     UINT16 err_bits = tpm2_error_get(rc);",
          "989:     const char *e = err_bits ? handler(err_bits) : \"success\";",
          "990:     if (e) {",
          "991:         catbuf(buf, \"%s\", e);",
          "993:         catbuf(buf, \"0x%X\", err_bits);",
          "",
          "[Added Lines]",
          "989:     if (handler) {",
          "990:         UINT16 err_bits = tpm2_error_get(rc);",
          "991:         const char *e = err_bits ? handler(err_bits) : \"success\";",
          "992:         if (e) {",
          "993:             catbuf(buf, \"%s\", e);",
          "994:         } else {",
          "995:             catbuf(buf, \"0x%X\", err_bits);",
          "996:         }",
          "1002:         const char *e = unknown_layer_handler(rc >> 8);",
          "1003:         assert(e);",
          "1004:         catbuf(buf, \"%s\", e);",
          "",
          "---------------"
        ],
        "test/unit/test_tss2_rc.c||test/unit/test_tss2_rc.c": [
          "File: test/unit/test_tss2_rc.c -> test/unit/test_tss2_rc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "199:     e = Tss2_RC_Decode(rc);",
          "201: }",
          "203: static void",
          "",
          "[Removed Lines]",
          "200:     assert_string_equal(e, \"1:0x2A\");",
          "",
          "[Added Lines]",
          "200:     assert_string_equal(e, \"1:0x100\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "407:     assert_null(m);",
          "408: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "410: static void",
          "411: test_all_FFs(void **state)",
          "412: {",
          "413:     (void) state;",
          "415:     const char *e = Tss2_RC_Decode(0xFFFFFFFF);",
          "416:     assert_string_equal(e, \"255:0xFFFFFF\");",
          "417: }",
          "419: static void",
          "420: test_all_FFs_set_handler(void **state)",
          "421: {",
          "422:     (void) state;",
          "423:     Tss2_RC_SetHandler(0xFF, \"garbage\", custom_err_handler);",
          "424:     Tss2_RC_SetHandler(0xFF, NULL, NULL);",
          "425: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "449:             cmocka_unit_test(test_info_str_fmt0_warn),",
          "450:             cmocka_unit_test(test_info_str_fmt0_ff),",
          "451:             cmocka_unit_test(test_info_str_null),",
          "452:     };",
          "454:     return cmocka_run_group_tests(tests, NULL, NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "469:             cmocka_unit_test(test_all_FFs),",
          "470:             cmocka_unit_test(test_all_FFs_set_handler)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f42c763ad85e67313db49b24eae63189334c1433",
      "candidate_info": {
        "commit_hash": "f42c763ad85e67313db49b24eae63189334c1433",
        "repo": "tpm2-software/tpm2-tss",
        "commit_url": "https://github.com/tpm2-software/tpm2-tss/commit/f42c763ad85e67313db49b24eae63189334c1433",
        "files": [
          "doc/tcti-spi-helper.md",
          "src/tss2-esys/api/Esys_StartAuthSession.c",
          "src/tss2-esys/esys_iutil.c",
          "src/tss2-esys/esys_tr.c",
          "src/tss2-mu/tpmu-types.c",
          "src/tss2-policy/tss2_policy.c",
          "src/tss2-rc/tss2_rc.c",
          "src/tss2-sys/api/Tss2_Sys_Execute.c",
          "src/tss2-tcti/tcti-i2c-helper.c",
          "src/tss2-tcti/tcti-spi-helper.c",
          "src/util/aux_util.h"
        ],
        "message": "Fix FormatStrings for non-32-bit platforms\n\nThe use of uint32_t require %PRIx32 instead of %x on\nnon-32-bit-platforms.\nChanged the FormatStrings accordingly for ESYS, MU and RC.\nMissing FAPI and tests.\n\nSigned-off-by: Andreas Fuchs <andreas.fuchs@infineon.com>",
        "before_after_code_files": [
          "src/tss2-esys/api/Esys_StartAuthSession.c||src/tss2-esys/api/Esys_StartAuthSession.c",
          "src/tss2-esys/esys_iutil.c||src/tss2-esys/esys_iutil.c",
          "src/tss2-esys/esys_tr.c||src/tss2-esys/esys_tr.c",
          "src/tss2-mu/tpmu-types.c||src/tss2-mu/tpmu-types.c",
          "src/tss2-policy/tss2_policy.c||src/tss2-policy/tss2_policy.c",
          "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c",
          "src/tss2-sys/api/Tss2_Sys_Execute.c||src/tss2-sys/api/Tss2_Sys_Execute.c",
          "src/tss2-tcti/tcti-i2c-helper.c||src/tss2-tcti/tcti-i2c-helper.c",
          "src/tss2-tcti/tcti-spi-helper.c||src/tss2-tcti/tcti-spi-helper.c",
          "src/util/aux_util.h||src/util/aux_util.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c"
          ],
          "candidate": [
            "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c"
          ]
        }
      },
      "candidate_diff": {
        "src/tss2-esys/api/Esys_StartAuthSession.c||src/tss2-esys/api/Esys_StartAuthSession.c": [
          "File: src/tss2-esys/api/Esys_StartAuthSession.c -> src/tss2-esys/api/Esys_StartAuthSession.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "436:                      tpmKeyNode->rsrc.misc.rsrc_key_pub.publicArea.nameAlg, &",
          "437:                      keyHash_size);",
          "438:             if (r != TSS2_RC_SUCCESS) {",
          "440:                 return r;",
          "441:             }",
          "442:         }",
          "443:         r = iesys_crypto_hash_get_digest_size(esysContext->in.StartAuthSession.",
          "444:                                               authHash,&authHash_size);",
          "445:         if (r != TSS2_RC_SUCCESS) {",
          "447:             return r;",
          "448:         }",
          "",
          "[Removed Lines]",
          "439:                 LOG_ERROR(\"Error: initialize auth session (%x).\", r);",
          "446:             LOG_ERROR(\"Error: initialize auth session (%x).\", r);",
          "",
          "[Added Lines]",
          "439:                 LOG_ERROR(\"Error: initialize auth session (0x%08\"PRIx32\").\", r);",
          "446:             LOG_ERROR(\"Error: initialize auth session (0x%08\"PRIx32\").\", r);",
          "",
          "---------------"
        ],
        "src/tss2-esys/esys_iutil.c||src/tss2-esys/esys_iutil.c": [
          "File: src/tss2-esys/esys_iutil.c -> src/tss2-esys/esys_iutil.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "393:         return TPM2_RC_SUCCESS;",
          "394:     }",
          "396:     return TSS2_ESYS_RC_BAD_VALUE;",
          "397: }",
          "",
          "[Removed Lines]",
          "395:     LOG_ERROR(\"Error: Esys invalid ESAPI handle (%x).\", esys_handle);",
          "",
          "[Added Lines]",
          "395:     LOG_ERROR(\"Error: Esys invalid ESAPI handle (%\"PRIx32\").\", esys_handle);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "413:     case TPM2_RH_PLATFORM_NV:",
          "414:     case TPM2_RH_ENDORSEMENT:",
          "415:     case TPM2_RH_NULL:",
          "417:                 handle);",
          "418:         return true;",
          "419:     default:",
          "",
          "[Removed Lines]",
          "416:         LOG_WARNING(\"Convert handle from TPM2_RH to ESYS_TR, got: 0x%x\",",
          "",
          "[Added Lines]",
          "416:         LOG_WARNING(\"Convert handle from TPM2_RH to ESYS_TR, got: 0x%\"PRIx32,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "574:         r = iesys_crypto_get_random2b(&esys_context->crypto_backend,",
          "575:                 &session->rsrc.misc.rsrc_session.nonceCaller,",
          "576:                 session->rsrc.misc.rsrc_session.nonceCaller.size);",
          "578:     }",
          "579:     return TSS2_RC_SUCCESS;",
          "580: }",
          "",
          "[Removed Lines]",
          "577:         return_if_error(r, \"Error: computing caller nonce (%x).\");",
          "",
          "[Added Lines]",
          "577:         return_if_error(r, \"Error: computing caller nonce.\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "612:         rsrc_session->sessionAttributes &= ~(TPMA_SESSION_ENCRYPT);",
          "613:     }",
          "616:        rsrc_session->sessionAttributes,",
          "617:        rsrc_session->origSessionAttributes);",
          "618: }",
          "",
          "[Removed Lines]",
          "615:     LOG_DEBUG(\"Session Attrs 0x%x orig 0x%x\",",
          "",
          "[Added Lines]",
          "615:     LOG_DEBUG(\"Session Attrs 0x%\"PRIx32\" orig 0x%\"PRIx32,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "633:         if (session == NULL)",
          "634:             continue;",
          "635:         IESYS_SESSION *rsrc_session = &session->rsrc.misc.rsrc_session;",
          "637:                   rsrc_session->origSessionAttributes,",
          "638:                   rsrc_session->sessionAttributes);",
          "",
          "[Removed Lines]",
          "636:         LOG_DEBUG(\"Orig Session %i Attrs 0x%x, altered Attrs x%x\", i,",
          "",
          "[Added Lines]",
          "636:         LOG_DEBUG(\"Orig Session %i Attrs 0x%\"PRIx8\", altered Attrs x%\"PRIx8, i,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1168:     if (esys_handle >= ESYS_TR_MIN_OBJECT) {",
          "1170:                   TSS2_ESYS_RC_BAD_TR);",
          "1171:         return TSS2_ESYS_RC_BAD_TR;",
          "1172:     }",
          "",
          "[Removed Lines]",
          "1169:         LOG_ERROR(\"Error: Esys handle does not exist (%x).\",",
          "",
          "[Added Lines]",
          "1169:         LOG_ERROR(\"Error: Esys handle does not exist (0x%08\"PRIx32\").\",",
          "",
          "---------------"
        ],
        "src/tss2-esys/esys_tr.c||src/tss2-esys/esys_tr.c": [
          "File: src/tss2-esys/esys_tr.c -> src/tss2-esys/esys_tr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "431:             return TSS2_RC_SUCCESS;",
          "432:         }",
          "433:     }",
          "435:     return TSS2_ESYS_RC_BAD_TR;",
          "436: }",
          "",
          "[Removed Lines]",
          "434:     LOG_ERROR(\"Error: Esys handle does not exist (%x).\", TSS2_ESYS_RC_BAD_TR);",
          "",
          "[Added Lines]",
          "434:     LOG_ERROR(\"Error: Esys handle does not exist (0x%08\"PRIx32\").\", TSS2_ESYS_RC_BAD_TR);",
          "",
          "---------------"
        ],
        "src/tss2-mu/tpmu-types.c||src/tss2-mu/tpmu-types.c": [
          "File: src/tss2-mu/tpmu-types.c -> src/tss2-mu/tpmu-types.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "285:         return TSS2_MU_RC_BAD_REFERENCE; \\",
          "286:     } \\",
          "287: \\",
          "289:     switch (selector) { \\",
          "290:     case sel: \\",
          "291:     ret = fn(op src->m, buffer, buffer_size, offset); \\",
          "",
          "[Removed Lines]",
          "288:     LOG_DEBUG(\"Marshalling \" #type \", selector %x\", selector); \\",
          "",
          "[Added Lines]",
          "288:     LOG_DEBUG(\"Marshalling \" #type \", selector 0x%\"PRIx32, selector); \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "328:     ret = TSS2_RC_SUCCESS; \\",
          "329:     break; \\",
          "330:     default: \\",
          "332:     break; \\",
          "333:     } \\",
          "334:     return ret; \\",
          "",
          "[Removed Lines]",
          "331:     LOG_DEBUG(\"wrong selector %x return error\", selector); \\",
          "",
          "[Added Lines]",
          "331:     LOG_DEBUG(\"wrong selector 0x%\"PRIx32\" return error\", selector); \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "382: { \\",
          "383:     TSS2_RC ret = TSS2_MU_RC_BAD_VALUE; \\",
          "384: \\",
          "386:     switch (selector) { \\",
          "387:     case sel: \\",
          "388:     ret = fn(buffer, buffer_size, offset, dest ? &dest->m : NULL); \\",
          "",
          "[Removed Lines]",
          "385:     LOG_DEBUG(\"Unmarshalling \" #type \", selector %x\", selector); \\",
          "",
          "[Added Lines]",
          "385:     LOG_DEBUG(\"Unmarshalling \" #type \", selector 0x%\"PRIx32, selector); \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "425:     ret = TSS2_RC_SUCCESS; \\",
          "426:     break; \\",
          "427:     default: \\",
          "429:     break; \\",
          "430:     } \\",
          "431:     return ret; \\",
          "",
          "[Removed Lines]",
          "428:     LOG_DEBUG(\"wrong selector %x return error\", selector); \\",
          "",
          "[Added Lines]",
          "428:     LOG_DEBUG(\"wrong selector 0x%\"PRIx32\" return error\", selector); \\",
          "",
          "---------------"
        ],
        "src/tss2-policy/tss2_policy.c||src/tss2-policy/tss2_policy.c": [
          "File: src/tss2-policy/tss2_policy.c -> src/tss2-policy/tss2_policy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "251:      } while (is_try_again(r));",
          "255:     return r;",
          "256: }",
          "",
          "[Removed Lines]",
          "253:     LOG_TRACE(\"finished, returning: 0x%x\", r);",
          "",
          "[Added Lines]",
          "253:     LOG_TRACE(\"finished, returning: 0x%\"PRIx32, r);",
          "",
          "---------------"
        ],
        "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c": [
          "File: src/tss2-rc/tss2_rc.c -> src/tss2-rc/tss2_rc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: #include <stdbool.h>",
          "8: #include <stdio.h>",
          "9: #include <string.h>",
          "11: #include \"tss2_rc.h\"",
          "12: #include \"tss2_sys.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10: #include <inttypes.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "641:     if (m) {",
          "642:         catbuf(buf, \"%s\", m);",
          "643:     } else {",
          "645:     }",
          "647:     return buf;",
          "",
          "[Removed Lines]",
          "644:         catbuf(buf, \"unknown error num: 0x%X\", errnum);",
          "",
          "[Added Lines]",
          "645:         catbuf(buf, \"unknown error num: 0x%\"PRIX8, errnum);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "663:     if (tpm2_rc_tpm_fmt0_V_get(rc)) {",
          "665:         if (tpm2_rc_fmt0_T_get(rc)) {",
          "667:             return buf;",
          "668:         }",
          "",
          "[Removed Lines]",
          "666:             catbuf(buf, \"Vendor specific error: 0x%X\", errnum);",
          "",
          "[Added Lines]",
          "667:             catbuf(buf, \"Vendor specific error: 0x%\"PRIX8, errnum);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "884:     static __thread char buf[32];",
          "886:     clearbuf(buf);",
          "889:     return buf;",
          "890: }",
          "",
          "[Removed Lines]",
          "887:     catbuf(buf, \"0x%X\", rc);",
          "",
          "[Added Lines]",
          "888:     catbuf(buf, \"0x%\"PRIX32, rc);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "992:         if (e) {",
          "993:             catbuf(buf, \"%s\", e);",
          "994:         } else {",
          "996:         }",
          "997:     } else {",
          "",
          "[Removed Lines]",
          "995:             catbuf(buf, \"0x%X\", err_bits);",
          "",
          "[Added Lines]",
          "996:             catbuf(buf, \"0x%\"PRIX16, err_bits);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1076:     if (m) {",
          "1077:         catbuf(buf, \"%s\", m);",
          "1078:     } else {",
          "1080:     }",
          "1082:     return buf;",
          "",
          "[Removed Lines]",
          "1079:         catbuf(buf, \"0x%X\", info->error);",
          "",
          "[Added Lines]",
          "1080:         catbuf(buf, \"0x%\"PRIX32, info->error);",
          "",
          "---------------"
        ],
        "src/tss2-sys/api/Tss2_Sys_Execute.c||src/tss2-sys/api/Tss2_Sys_Execute.c": [
          "File: src/tss2-sys/api/Tss2_Sys_Execute.c -> src/tss2-sys/api/Tss2_Sys_Execute.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:     }",
          "76:     if (response_size > ctx->maxCmdSize) {",
          "77:         ctx->previousStage = CMD_STAGE_PREPARE;",
          "79:         return TSS2_SYS_RC_INSUFFICIENT_CONTEXT;",
          "80:     }",
          "",
          "[Removed Lines]",
          "78:         LOG_ERROR(\"Response size to big: %zu > %u\", response_size, ctx->maxCmdSize);",
          "",
          "[Added Lines]",
          "78:         LOG_ERROR(\"Response size to big: %zu > %\"PRIu32, response_size, ctx->maxCmdSize);",
          "",
          "---------------"
        ],
        "src/tss2-tcti/tcti-i2c-helper.c||src/tss2-tcti/tcti-i2c-helper.c": [
          "File: src/tss2-tcti/tcti-i2c-helper.c -> src/tss2-tcti/tcti-i2c-helper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "554:         return TSS2_TCTI_RC_BAD_VALUE;",
          "555:     }",
          "558:                header.code, header.size);",
          "",
          "[Removed Lines]",
          "557:     LOGBLOB_DEBUG (cmd_buf, size, \"Sending command with TPM_CC %#x and size %\" PRIu32,",
          "",
          "[Added Lines]",
          "557:     LOGBLOB_DEBUG (cmd_buf, size, \"Sending command with TPM_CC %#\"PRIx32\" and size %\" PRIu32,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "656:     uint32_t status = i2c_tpm_helper_read_sts_reg (ctx);",
          "657:     if ((status & expected_status_bits) != expected_status_bits) {",
          "659:         return TSS2_TCTI_RC_IO_ERROR;",
          "660:     }",
          "",
          "[Removed Lines]",
          "658:         LOG_ERROR (\"Unexpected intermediate status %#x\",status);",
          "",
          "[Added Lines]",
          "658:         LOG_ERROR (\"Unexpected intermediate status %#\"PRIx32,status);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "669:     status = i2c_tpm_helper_read_sts_reg (ctx);",
          "670:     if ((status & expected_status_bits) != TCTI_I2C_HELPER_TPM_STS_VALID) {",
          "672:         return TSS2_TCTI_RC_IO_ERROR;",
          "673:     }",
          "",
          "[Removed Lines]",
          "671:         LOG_ERROR (\"Unexpected final status %#x\", status);",
          "",
          "[Added Lines]",
          "671:         LOG_ERROR (\"Unexpected final status %#\"PRIx32, status);",
          "",
          "---------------"
        ],
        "src/tss2-tcti/tcti-spi-helper.c||src/tss2-tcti/tcti-spi-helper.c": [
          "File: src/tss2-tcti/tcti-spi-helper.c -> src/tss2-tcti/tcti-spi-helper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "157:     char* access_str = (access == TCTI_SPI_HELPER_REGISTER_READ) ? \"READ\" : \"WRITE\";",
          "159:     if (err != NULL) {",
          "161:     } else {",
          "162: #if MAXLOGLEVEL < LOGL_TRACE",
          "163:         (void) buffer;",
          "164: #else",
          "166: #endif",
          "167:     }",
          "168: #endif",
          "",
          "[Removed Lines]",
          "160:         LOG_ERROR(\"%s register %#02x (%zu bytes) %s\", access_str, reg_number, cnt, err);",
          "165:         LOGBLOB_TRACE(buffer, cnt, \"%s register %#02x (%zu bytes)\", access_str, reg_number, cnt);",
          "",
          "[Added Lines]",
          "160:         LOG_ERROR(\"%s register %#02\"PRIx32\" (%zu bytes) %s\", access_str, reg_number, cnt, err);",
          "165:         LOGBLOB_TRACE(buffer, cnt, \"%s register %#02\"PRIx32\" (%zu bytes)\", access_str, reg_number, cnt);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "548:     uint32_t status = spi_tpm_helper_read_sts_reg(ctx);",
          "549:     if ((status & expected_status_bits) != expected_status_bits) {",
          "551:         return TSS2_TCTI_RC_IO_ERROR;",
          "552:     }",
          "",
          "[Removed Lines]",
          "550:         LOG_ERROR(\"Unexpected intermediate status %#x\",status);",
          "",
          "[Added Lines]",
          "550:         LOG_ERROR(\"Unexpected intermediate status %#\"PRIx32,status);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "561:     status = spi_tpm_helper_read_sts_reg(ctx);",
          "562:     if ((status & expected_status_bits) != TCTI_SPI_HELPER_TPM_STS_VALID) {",
          "564:         return TSS2_TCTI_RC_IO_ERROR;",
          "565:     }",
          "",
          "[Removed Lines]",
          "563:         LOG_ERROR(\"Unexpected final status %#x\", status);",
          "",
          "[Added Lines]",
          "563:         LOG_ERROR(\"Unexpected final status %#\"PRIx32, status);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "615:         return TSS2_TCTI_RC_BAD_VALUE;",
          "616:     }",
          "619:                header.code, header.size);",
          "",
          "[Removed Lines]",
          "618:     LOGBLOB_DEBUG (cmd_buf, size, \"Sending command with TPM_CC %#x and size %\" PRIu32,",
          "",
          "[Added Lines]",
          "618:     LOGBLOB_DEBUG (cmd_buf, size, \"Sending command with TPM_CC %#\"PRIx32\" and size %\" PRIu32,",
          "",
          "---------------"
        ],
        "src/util/aux_util.h||src/util/aux_util.h": [
          "File: src/util/aux_util.h -> src/util/aux_util.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: #define ARRAY_LEN(x) (sizeof(x)/sizeof(x[0]))",
          "23: #define TPM2_ERROR_TEXT(r) \"Error\", \"Code\", r",
          "24: #define SIZE_OF_ARY(ary) (sizeof(ary) / sizeof(ary[0]))",
          "",
          "[Removed Lines]",
          "22: #define TPM2_ERROR_FORMAT \"%s%s (0x%08x)\"",
          "",
          "[Added Lines]",
          "22: #define TPM2_ERROR_FORMAT \"%s%s (0x%08\"PRIx32\")\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "702a8715f761e0e6127fd608b58bfe15fb2fa8dd",
      "candidate_info": {
        "commit_hash": "702a8715f761e0e6127fd608b58bfe15fb2fa8dd",
        "repo": "tpm2-software/tpm2-tss",
        "commit_url": "https://github.com/tpm2-software/tpm2-tss/commit/702a8715f761e0e6127fd608b58bfe15fb2fa8dd",
        "files": [
          "src/tss2-rc/tss2_rc.c",
          "test/unit/test_tss2_rc.c"
        ],
        "message": "tss2-rc: fix unknown layer handler dropping bits\n\nThe commit (on 4.0.1 and master):\n  - 49107d65d5c7 tss2_rc: ensure layer number is in bounds\n\nIntroduces a bug where the right shift by 8 drops the lower byte going\ninto the unknown_layer handler function. This will effectively drop rc\nerror bits for unknown layers. The largest impact will be on windows\nwhere their resource manager is not a registered handler.\n\nFix this by just dumping all the bytes and not get fancy with masking\nthings out.\n\nFixes: #2550\n\nSigned-off-by: William Roberts <william.c.roberts@intel.com>",
        "before_after_code_files": [
          "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c",
          "test/unit/test_tss2_rc.c||test/unit/test_tss2_rc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c",
            "test/unit/test_tss2_rc.c||test/unit/test_tss2_rc.c"
          ],
          "candidate": [
            "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c",
            "test/unit/test_tss2_rc.c||test/unit/test_tss2_rc.c"
          ]
        }
      },
      "candidate_diff": {
        "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c": [
          "File: src/tss2-rc/tss2_rc.c -> src/tss2-rc/tss2_rc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "997:     } else {",
          "1003:         assert(e);",
          "1004:         catbuf(buf, \"%s\", e);",
          "1005:     }",
          "",
          "[Removed Lines]",
          "1002:         const char *e = unknown_layer_handler(rc >> 8);",
          "",
          "[Added Lines]",
          "1002:         const char *e = unknown_layer_handler(rc);",
          "",
          "---------------"
        ],
        "test/unit/test_tss2_rc.c||test/unit/test_tss2_rc.c": [
          "File: test/unit/test_tss2_rc.c -> test/unit/test_tss2_rc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "199:     e = Tss2_RC_Decode(rc);",
          "201: }",
          "203: static void",
          "",
          "[Removed Lines]",
          "200:     assert_string_equal(e, \"1:0x100\");",
          "",
          "[Added Lines]",
          "200:     assert_string_equal(e, \"1:0x1002A\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "413:     (void) state;",
          "415:     const char *e = Tss2_RC_Decode(0xFFFFFFFF);",
          "417: }",
          "419: static void",
          "",
          "[Removed Lines]",
          "416:     assert_string_equal(e, \"255:0xFFFFFF\");",
          "",
          "[Added Lines]",
          "416:     assert_string_equal(e, \"255:0xFFFFFFFF\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7ab42953216adec046d000a5e3085f3ee5e9cabf",
      "candidate_info": {
        "commit_hash": "7ab42953216adec046d000a5e3085f3ee5e9cabf",
        "repo": "tpm2-software/tpm2-tss",
        "commit_url": "https://github.com/tpm2-software/tpm2-tss/commit/7ab42953216adec046d000a5e3085f3ee5e9cabf",
        "files": [
          "src/tss2-rc/tss2_rc.c",
          "test/unit/test_tss2_rc.c"
        ],
        "message": "tss2_rc: ensure layer number is in bounds\n\nThe layer handler array was defined as 255, the max number of uint8,\nwhich is the size of the layer field, however valid values are 0-255\nallowing for 256 possibilities and thus the array was off by one and\nneeded to be sized to 256 entries. Update the size and add tests.\n\nNote: previous implementations incorrectly dropped bits on unknown error\noutput, ie TSS2_RC of 0xFFFFFF should yeild a string of 255:0xFFFFFF,\nbut earlier implementations returned 255:0xFFFF, dropping the middle\nbits, this patch fixes that.\n\nFixes: CVE-2023-22745\n\nSigned-off-by: William Roberts <william.c.roberts@intel.com>",
        "before_after_code_files": [
          "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c",
          "test/unit/test_tss2_rc.c||test/unit/test_tss2_rc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c",
            "test/unit/test_tss2_rc.c||test/unit/test_tss2_rc.c"
          ],
          "candidate": [
            "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c",
            "test/unit/test_tss2_rc.c||test/unit/test_tss2_rc.c"
          ]
        }
      },
      "candidate_diff": {
        "src/tss2-rc/tss2_rc.c||src/tss2-rc/tss2_rc.c": [
          "File: src/tss2-rc/tss2_rc.c -> src/tss2-rc/tss2_rc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: #include <stdarg.h>",
          "4: #include <stdbool.h>",
          "5: #include <stdio.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: #ifdef HAVE_CONFIG_H",
          "3: #include \"config.h\"",
          "4: #endif",
          "5: #include <assert.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "834: static struct {",
          "835:     char name[TSS2_ERR_LAYER_NAME_MAX];",
          "836:     TSS2_RC_HANDLER handler;",
          "838:     ADD_HANDLER(\"tpm\" , tpm2_ehandler),",
          "",
          "[Removed Lines]",
          "837: } layer_handler[TPM2_ERROR_TSS2_RC_LAYER_COUNT] = {",
          "",
          "[Added Lines]",
          "840: } layer_handler[TPM2_ERROR_TSS2_RC_LAYER_COUNT + 1] = {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "869:     static __thread char buf[32];",
          "871:     clearbuf(buf);",
          "874:     return buf;",
          "875: }",
          "",
          "[Removed Lines]",
          "872:     catbuf(buf, \"0x%X\", tpm2_error_get(rc));",
          "",
          "[Added Lines]",
          "875:     catbuf(buf, \"0x%X\", rc);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "966:         catbuf(buf, \"%u:\", layer);",
          "967:     }",
          "980:     } else {",
          "982:     }",
          "984:     return buf;",
          "",
          "[Removed Lines]",
          "969:     handler = !handler ? unknown_layer_handler : handler;",
          "976:     UINT16 err_bits = tpm2_error_get(rc);",
          "977:     const char *e = err_bits ? handler(err_bits) : \"success\";",
          "978:     if (e) {",
          "979:         catbuf(buf, \"%s\", e);",
          "981:         catbuf(buf, \"0x%X\", err_bits);",
          "",
          "[Added Lines]",
          "977:     if (handler) {",
          "978:         UINT16 err_bits = tpm2_error_get(rc);",
          "979:         const char *e = err_bits ? handler(err_bits) : \"success\";",
          "980:         if (e) {",
          "981:             catbuf(buf, \"%s\", e);",
          "982:         } else {",
          "983:             catbuf(buf, \"0x%X\", err_bits);",
          "984:         }",
          "990:         const char *e = unknown_layer_handler(rc >> 8);",
          "991:         assert(e);",
          "992:         catbuf(buf, \"%s\", e);",
          "",
          "---------------"
        ],
        "test/unit/test_tss2_rc.c||test/unit/test_tss2_rc.c": [
          "File: test/unit/test_tss2_rc.c -> test/unit/test_tss2_rc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "201:     e = Tss2_RC_Decode(rc);",
          "203: }",
          "205: static void",
          "",
          "[Removed Lines]",
          "202:     assert_string_equal(e, \"1:0x2A\");",
          "",
          "[Added Lines]",
          "202:     assert_string_equal(e, \"1:0x100\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "282:     assert_string_equal(e, \"tcti:Fails to connect to next lower layer\");",
          "283: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "285: static void",
          "286: test_all_FFs(void **state)",
          "287: {",
          "288:     (void) state;",
          "290:     const char *e = Tss2_RC_Decode(0xFFFFFFFF);",
          "291:     assert_string_equal(e, \"255:0xFFFFFF\");",
          "292: }",
          "294: static void",
          "295: test_all_FFs_set_handler(void **state)",
          "296: {",
          "297:     (void) state;",
          "298:     Tss2_RC_SetHandler(0xFF, \"garbage\", custom_err_handler);",
          "299:     Tss2_RC_SetHandler(0xFF, NULL, NULL);",
          "300: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "313:             cmocka_unit_test(test_esys),",
          "314:             cmocka_unit_test(test_mu),",
          "315:             cmocka_unit_test(test_tcti),",
          "316:     };",
          "318:     return cmocka_run_group_tests(tests, NULL, NULL);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "333:             cmocka_unit_test(test_all_FFs),",
          "334:             cmocka_unit_test(test_all_FFs_set_handler)",
          "",
          "---------------"
        ]
      }
    }
  ]
}