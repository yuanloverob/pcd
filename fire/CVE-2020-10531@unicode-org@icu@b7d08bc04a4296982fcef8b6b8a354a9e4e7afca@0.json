{
  "cve_id": "CVE-2020-10531",
  "cve_desc": "An issue was discovered in International Components for Unicode (ICU) for C/C++ through 66.1. An integer overflow, leading to a heap-based buffer overflow, exists in the UnicodeString::doAppend() function in common/unistr.cpp.",
  "repo": "unicode-org/icu",
  "patch_hash": "b7d08bc04a4296982fcef8b6b8a354a9e4e7afca",
  "patch_info": {
    "commit_hash": "b7d08bc04a4296982fcef8b6b8a354a9e4e7afca",
    "repo": "unicode-org/icu",
    "commit_url": "https://github.com/unicode-org/icu/commit/b7d08bc04a4296982fcef8b6b8a354a9e4e7afca",
    "files": [
      "icu4c/source/common/unistr.cpp",
      "icu4c/source/test/intltest/ustrtest.cpp",
      "icu4c/source/test/intltest/ustrtest.h"
    ],
    "message": "ICU-20958 Prevent SEGV_MAPERR in append\n\nSee #971",
    "before_after_code_files": [
      "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp",
      "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp",
      "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h"
    ]
  },
  "patch_diff": {
    "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp": [
      "File: icu4c/source/common/unistr.cpp -> icu4c/source/common/unistr.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1563:   }",
      "1565:   int32_t oldLength = length();",
      "1569:   const UChar* oldArray = getArrayStart();",
      "",
      "[Removed Lines]",
      "1566:   int32_t newLength = oldLength + srcLength;",
      "",
      "[Added Lines]",
      "1566:   int32_t newLength;",
      "1567:   if (uprv_add32_overflow(oldLength, srcLength, &newLength)) {",
      "1568:     setToBogus();",
      "1569:     return *this;",
      "1570:   }",
      "",
      "---------------"
    ],
    "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp": [
      "File: icu4c/source/test/intltest/ustrtest.cpp -> icu4c/source/test/intltest/ustrtest.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "67:     TESTCASE_AUTO(TestWCharPointers);",
      "68:     TESTCASE_AUTO(TestNullPointers);",
      "69:     TESTCASE_AUTO(TestUnicodeStringInsertAppendToSelf);",
      "70:     TESTCASE_AUTO_END;",
      "71: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "70:     TESTCASE_AUTO(TestLargeAppend);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2310:     str.insert(2, sub);",
      "2311:     assertEquals(\"\", u\"abbcdcde\", str);",
      "2312: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2315: void UnicodeStringTest::TestLargeAppend() {",
      "2316:     if(quick) return;",
      "2318:     IcuTestErrorCode status(*this, \"TestLargeAppend\");",
      "2320:     int32_t len = 0xAFFFFFF;",
      "2321:     UnicodeString str;",
      "2322:     char16_t *buf = str.getBuffer(len);",
      "2325:     uprv_memset(buf, 0x4e, len * 2);",
      "2326:     str.releaseBuffer(len);",
      "2327:     UnicodeString dest;",
      "2331:     int64_t total = 0;",
      "2332:     for (int32_t i = 0; i < 16; i++) {",
      "2333:         dest.append(str);",
      "2334:         total += len;",
      "2335:         if (total <= INT32_MAX) {",
      "2336:             assertFalse(\"dest is not bogus\", dest.isBogus());",
      "2337:         } else {",
      "2338:             assertTrue(\"dest should be bogus\", dest.isBogus());",
      "2339:         }",
      "2340:     }",
      "2341:     dest.remove();",
      "2342:     total = 0;",
      "2343:     for (int32_t i = 0; i < 16; i++) {",
      "2344:         dest.append(str);",
      "2345:         total += len;",
      "2346:         if (total + len <= INT32_MAX) {",
      "2347:             assertFalse(\"dest is not bogus\", dest.isBogus());",
      "2348:         } else if (total <= INT32_MAX) {",
      "2350:             UnicodeString str2;",
      "2351:             int32_t remain = INT32_MAX - total;",
      "2352:             char16_t *buf2 = str2.getBuffer(remain);",
      "2353:             if (buf2 == nullptr) {",
      "2355:                 return;",
      "2356:             }",
      "2357:             uprv_memset(buf2, 0x4e, remain * 2);",
      "2358:             str2.releaseBuffer(remain);",
      "2359:             dest.append(str2);",
      "2360:             total += remain;",
      "2361:             assertEquals(\"When a string of exactly the maximum size works\", (int64_t)INT32_MAX, total);",
      "2362:             assertEquals(\"When a string of exactly the maximum size works\", INT32_MAX, dest.length());",
      "2363:             assertFalse(\"dest is not bogus\", dest.isBogus());",
      "2366:             str2.truncate(1);",
      "2367:             dest.append(str2);",
      "2368:             total++;",
      "2369:             assertTrue(\"dest should be bogus\", dest.isBogus());",
      "2370:         } else {",
      "2371:             assertTrue(\"dest should be bogus\", dest.isBogus());",
      "2372:         }",
      "2373:     }",
      "2374: }",
      "",
      "---------------"
    ],
    "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h": [
      "File: icu4c/source/test/intltest/ustrtest.h -> icu4c/source/test/intltest/ustrtest.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "97:     void TestWCharPointers();",
      "98:     void TestNullPointers();",
      "99:     void TestUnicodeStringInsertAppendToSelf();",
      "100: };",
      "102: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "100:     void TestLargeAppend();",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "18b212f235c8b1dea3b8bbd0accd57340b32ba55",
      "candidate_info": {
        "commit_hash": "18b212f235c8b1dea3b8bbd0accd57340b32ba55",
        "repo": "unicode-org/icu",
        "commit_url": "https://github.com/unicode-org/icu/commit/18b212f235c8b1dea3b8bbd0accd57340b32ba55",
        "files": [
          "icu4c/source/common/unistr.cpp",
          "icu4c/source/test/intltest/ustrtest.cpp",
          "icu4c/source/test/intltest/ustrtest.h"
        ],
        "message": "ICU-21032 Backport to 64.x: ICU-20958 Prevent SEGV_MAPERR in append\n\nSee #971\n\n(cherry picked from commit b7d08bc04a4296982fcef8b6b8a354a9e4e7afca)",
        "before_after_code_files": [
          "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp",
          "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp",
          "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp",
            "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp",
            "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h"
          ],
          "candidate": [
            "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp",
            "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp",
            "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h"
          ]
        }
      },
      "candidate_diff": {
        "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp": [
          "File: icu4c/source/common/unistr.cpp -> icu4c/source/common/unistr.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1563:   }",
          "1565:   int32_t oldLength = length();",
          "1569:   const UChar* oldArray = getArrayStart();",
          "",
          "[Removed Lines]",
          "1566:   int32_t newLength = oldLength + srcLength;",
          "",
          "[Added Lines]",
          "1566:   int32_t newLength;",
          "1567:   if (uprv_add32_overflow(oldLength, srcLength, &newLength)) {",
          "1568:     setToBogus();",
          "1569:     return *this;",
          "1570:   }",
          "",
          "---------------"
        ],
        "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp": [
          "File: icu4c/source/test/intltest/ustrtest.cpp -> icu4c/source/test/intltest/ustrtest.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:     TESTCASE_AUTO(TestWCharPointers);",
          "68:     TESTCASE_AUTO(TestNullPointers);",
          "69:     TESTCASE_AUTO(TestUnicodeStringInsertAppendToSelf);",
          "70:     TESTCASE_AUTO_END;",
          "71: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:     TESTCASE_AUTO(TestLargeAppend);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2310:     str.insert(2, sub);",
          "2311:     assertEquals(\"\", u\"abbcdcde\", str);",
          "2312: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2315: void UnicodeStringTest::TestLargeAppend() {",
          "2316:     if(quick) return;",
          "2318:     IcuTestErrorCode status(*this, \"TestLargeAppend\");",
          "2320:     int32_t len = 0xAFFFFFF;",
          "2321:     UnicodeString str;",
          "2322:     char16_t *buf = str.getBuffer(len);",
          "2325:     uprv_memset(buf, 0x4e, len * 2);",
          "2326:     str.releaseBuffer(len);",
          "2327:     UnicodeString dest;",
          "2331:     int64_t total = 0;",
          "2332:     for (int32_t i = 0; i < 16; i++) {",
          "2333:         dest.append(str);",
          "2334:         total += len;",
          "2335:         if (total <= INT32_MAX) {",
          "2336:             assertFalse(\"dest is not bogus\", dest.isBogus());",
          "2337:         } else {",
          "2338:             assertTrue(\"dest should be bogus\", dest.isBogus());",
          "2339:         }",
          "2340:     }",
          "2341:     dest.remove();",
          "2342:     total = 0;",
          "2343:     for (int32_t i = 0; i < 16; i++) {",
          "2344:         dest.append(str);",
          "2345:         total += len;",
          "2346:         if (total + len <= INT32_MAX) {",
          "2347:             assertFalse(\"dest is not bogus\", dest.isBogus());",
          "2348:         } else if (total <= INT32_MAX) {",
          "2350:             UnicodeString str2;",
          "2351:             int32_t remain = INT32_MAX - total;",
          "2352:             char16_t *buf2 = str2.getBuffer(remain);",
          "2353:             if (buf2 == nullptr) {",
          "2355:                 return;",
          "2356:             }",
          "2357:             uprv_memset(buf2, 0x4e, remain * 2);",
          "2358:             str2.releaseBuffer(remain);",
          "2359:             dest.append(str2);",
          "2360:             total += remain;",
          "2361:             assertEquals(\"When a string of exactly the maximum size works\", (int64_t)INT32_MAX, total);",
          "2362:             assertEquals(\"When a string of exactly the maximum size works\", INT32_MAX, dest.length());",
          "2363:             assertFalse(\"dest is not bogus\", dest.isBogus());",
          "2366:             str2.truncate(1);",
          "2367:             dest.append(str2);",
          "2368:             total++;",
          "2369:             assertTrue(\"dest should be bogus\", dest.isBogus());",
          "2370:         } else {",
          "2371:             assertTrue(\"dest should be bogus\", dest.isBogus());",
          "2372:         }",
          "2373:     }",
          "2374: }",
          "",
          "---------------"
        ],
        "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h": [
          "File: icu4c/source/test/intltest/ustrtest.h -> icu4c/source/test/intltest/ustrtest.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:     void TestWCharPointers();",
          "98:     void TestNullPointers();",
          "99:     void TestUnicodeStringInsertAppendToSelf();",
          "100: };",
          "102: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:     void TestLargeAppend();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cafe6a0cd057072397b53c6e5175d21918b872ad",
      "candidate_info": {
        "commit_hash": "cafe6a0cd057072397b53c6e5175d21918b872ad",
        "repo": "unicode-org/icu",
        "commit_url": "https://github.com/unicode-org/icu/commit/cafe6a0cd057072397b53c6e5175d21918b872ad",
        "files": [
          "icu4c/source/common/unistr.cpp",
          "icu4c/source/test/intltest/ustrtest.cpp",
          "icu4c/source/test/intltest/ustrtest.h"
        ],
        "message": "ICU-21032 Backport of ICU-20958 to 61.x\n\nBackport of:\nICU-20958 Prevent SEGV_MAPERR in append\n\nSee #971\n\n(cherry picked from commit b7d08bc04a4296982fcef8b6b8a354a9e4e7afca)",
        "before_after_code_files": [
          "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp",
          "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp",
          "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp",
            "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp",
            "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h"
          ],
          "candidate": [
            "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp",
            "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp",
            "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h"
          ]
        }
      },
      "candidate_diff": {
        "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp": [
          "File: icu4c/source/common/unistr.cpp -> icu4c/source/common/unistr.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1564:   }",
          "1566:   int32_t oldLength = length();",
          "1569:   if((newLength <= getCapacity() && isBufferWritable()) ||",
          "1570:       cloneArrayIfNeeded(newLength, getGrowCapacity(newLength))) {",
          "",
          "[Removed Lines]",
          "1567:   int32_t newLength = oldLength + srcLength;",
          "",
          "[Added Lines]",
          "1567:   int32_t newLength;",
          "1568:   if (uprv_add32_overflow(oldLength, srcLength, &newLength)) {",
          "1569:     setToBogus();",
          "1570:     return *this;",
          "1571:   }",
          "1574:   const UChar* oldArray = getArrayStart();",
          "1575:   if (isBufferWritable() &&",
          "1576:       oldArray < srcChars + srcLength &&",
          "1577:       srcChars < oldArray + oldLength) {",
          "1579:     UnicodeString copy(srcChars, srcLength);",
          "1580:     if (copy.isBogus()) {",
          "1581:       setToBogus();",
          "1582:       return *this;",
          "1583:     }",
          "1584:     return doAppend(copy.getArrayStart(), 0, srcLength);",
          "1585:   }",
          "",
          "---------------"
        ],
        "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp": [
          "File: icu4c/source/test/intltest/ustrtest.cpp -> icu4c/source/test/intltest/ustrtest.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:     TESTCASE_AUTO(TestUInt16Pointers);",
          "65:     TESTCASE_AUTO(TestWCharPointers);",
          "66:     TESTCASE_AUTO(TestNullPointers);",
          "67:     TESTCASE_AUTO_END;",
          "68: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:     TESTCASE_AUTO(TestUnicodeStringInsertAppendToSelf);",
          "68:     TESTCASE_AUTO(TestLargeAppend);",
          "",
          "---------------"
        ],
        "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h": [
          "File: icu4c/source/test/intltest/ustrtest.h -> icu4c/source/test/intltest/ustrtest.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:     void TestUInt16Pointers();",
          "97:     void TestWCharPointers();",
          "98:     void TestNullPointers();",
          "99: };",
          "101: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99:     void TestUnicodeStringInsertAppendToSelf();",
          "100:     void TestLargeAppend();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3ca5d8ca1559fb52d08bad61e350f0285f3edb37",
      "candidate_info": {
        "commit_hash": "3ca5d8ca1559fb52d08bad61e350f0285f3edb37",
        "repo": "unicode-org/icu",
        "commit_url": "https://github.com/unicode-org/icu/commit/3ca5d8ca1559fb52d08bad61e350f0285f3edb37",
        "files": [
          "icu4c/source/common/unistr.cpp",
          "icu4c/source/test/intltest/ustrtest.cpp",
          "icu4c/source/test/intltest/ustrtest.h"
        ],
        "message": "ICU-21032 Backport to 66.x:  ICU-20958 Prevent SEGV_MAPERR in append\n\nSee #971\n\n(cherry picked from commit b7d08bc04a4296982fcef8b6b8a354a9e4e7afca)",
        "before_after_code_files": [
          "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp",
          "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp",
          "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp",
            "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp",
            "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h"
          ],
          "candidate": [
            "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp",
            "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp",
            "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h"
          ]
        }
      },
      "candidate_diff": {
        "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp": [
          "File: icu4c/source/common/unistr.cpp -> icu4c/source/common/unistr.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1563:   }",
          "1565:   int32_t oldLength = length();",
          "1569:   const UChar* oldArray = getArrayStart();",
          "",
          "[Removed Lines]",
          "1566:   int32_t newLength = oldLength + srcLength;",
          "",
          "[Added Lines]",
          "1566:   int32_t newLength;",
          "1567:   if (uprv_add32_overflow(oldLength, srcLength, &newLength)) {",
          "1568:     setToBogus();",
          "1569:     return *this;",
          "1570:   }",
          "",
          "---------------"
        ],
        "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp": [
          "File: icu4c/source/test/intltest/ustrtest.cpp -> icu4c/source/test/intltest/ustrtest.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:     TESTCASE_AUTO(TestWCharPointers);",
          "68:     TESTCASE_AUTO(TestNullPointers);",
          "69:     TESTCASE_AUTO(TestUnicodeStringInsertAppendToSelf);",
          "70:     TESTCASE_AUTO_END;",
          "71: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:     TESTCASE_AUTO(TestLargeAppend);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2310:     str.insert(2, sub);",
          "2311:     assertEquals(\"\", u\"abbcdcde\", str);",
          "2312: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2315: void UnicodeStringTest::TestLargeAppend() {",
          "2316:     if(quick) return;",
          "2318:     IcuTestErrorCode status(*this, \"TestLargeAppend\");",
          "2320:     int32_t len = 0xAFFFFFF;",
          "2321:     UnicodeString str;",
          "2322:     char16_t *buf = str.getBuffer(len);",
          "2325:     uprv_memset(buf, 0x4e, len * 2);",
          "2326:     str.releaseBuffer(len);",
          "2327:     UnicodeString dest;",
          "2331:     int64_t total = 0;",
          "2332:     for (int32_t i = 0; i < 16; i++) {",
          "2333:         dest.append(str);",
          "2334:         total += len;",
          "2335:         if (total <= INT32_MAX) {",
          "2336:             assertFalse(\"dest is not bogus\", dest.isBogus());",
          "2337:         } else {",
          "2338:             assertTrue(\"dest should be bogus\", dest.isBogus());",
          "2339:         }",
          "2340:     }",
          "2341:     dest.remove();",
          "2342:     total = 0;",
          "2343:     for (int32_t i = 0; i < 16; i++) {",
          "2344:         dest.append(str);",
          "2345:         total += len;",
          "2346:         if (total + len <= INT32_MAX) {",
          "2347:             assertFalse(\"dest is not bogus\", dest.isBogus());",
          "2348:         } else if (total <= INT32_MAX) {",
          "2350:             UnicodeString str2;",
          "2351:             int32_t remain = INT32_MAX - total;",
          "2352:             char16_t *buf2 = str2.getBuffer(remain);",
          "2353:             if (buf2 == nullptr) {",
          "2355:                 return;",
          "2356:             }",
          "2357:             uprv_memset(buf2, 0x4e, remain * 2);",
          "2358:             str2.releaseBuffer(remain);",
          "2359:             dest.append(str2);",
          "2360:             total += remain;",
          "2361:             assertEquals(\"When a string of exactly the maximum size works\", (int64_t)INT32_MAX, total);",
          "2362:             assertEquals(\"When a string of exactly the maximum size works\", INT32_MAX, dest.length());",
          "2363:             assertFalse(\"dest is not bogus\", dest.isBogus());",
          "2366:             str2.truncate(1);",
          "2367:             dest.append(str2);",
          "2368:             total++;",
          "2369:             assertTrue(\"dest should be bogus\", dest.isBogus());",
          "2370:         } else {",
          "2371:             assertTrue(\"dest should be bogus\", dest.isBogus());",
          "2372:         }",
          "2373:     }",
          "2374: }",
          "",
          "---------------"
        ],
        "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h": [
          "File: icu4c/source/test/intltest/ustrtest.h -> icu4c/source/test/intltest/ustrtest.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:     void TestWCharPointers();",
          "98:     void TestNullPointers();",
          "99:     void TestUnicodeStringInsertAppendToSelf();",
          "100: };",
          "102: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:     void TestLargeAppend();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f08a84e8a374d52240fd00adc3191698374e62b8",
      "candidate_info": {
        "commit_hash": "f08a84e8a374d52240fd00adc3191698374e62b8",
        "repo": "unicode-org/icu",
        "commit_url": "https://github.com/unicode-org/icu/commit/f08a84e8a374d52240fd00adc3191698374e62b8",
        "files": [
          "icu4c/source/common/unistr.cpp",
          "icu4c/source/test/intltest/ustrtest.cpp",
          "icu4c/source/test/intltest/ustrtest.h"
        ],
        "message": "ICU-21032 65.x backport ICU-20958 Prevent SEGV_MAPERR in append\n\nSee #971\n\n(cherry picked from commit b7d08bc04a4296982fcef8b6b8a354a9e4e7afca)",
        "before_after_code_files": [
          "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp",
          "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp",
          "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp",
            "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp",
            "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h"
          ],
          "candidate": [
            "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp",
            "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp",
            "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h"
          ]
        }
      },
      "candidate_diff": {
        "icu4c/source/common/unistr.cpp||icu4c/source/common/unistr.cpp": [
          "File: icu4c/source/common/unistr.cpp -> icu4c/source/common/unistr.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1563:   }",
          "1565:   int32_t oldLength = length();",
          "1569:   const UChar* oldArray = getArrayStart();",
          "",
          "[Removed Lines]",
          "1566:   int32_t newLength = oldLength + srcLength;",
          "",
          "[Added Lines]",
          "1566:   int32_t newLength;",
          "1567:   if (uprv_add32_overflow(oldLength, srcLength, &newLength)) {",
          "1568:     setToBogus();",
          "1569:     return *this;",
          "1570:   }",
          "",
          "---------------"
        ],
        "icu4c/source/test/intltest/ustrtest.cpp||icu4c/source/test/intltest/ustrtest.cpp": [
          "File: icu4c/source/test/intltest/ustrtest.cpp -> icu4c/source/test/intltest/ustrtest.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:     TESTCASE_AUTO(TestWCharPointers);",
          "68:     TESTCASE_AUTO(TestNullPointers);",
          "69:     TESTCASE_AUTO(TestUnicodeStringInsertAppendToSelf);",
          "70:     TESTCASE_AUTO_END;",
          "71: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:     TESTCASE_AUTO(TestLargeAppend);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2310:     str.insert(2, sub);",
          "2311:     assertEquals(\"\", u\"abbcdcde\", str);",
          "2312: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2315: void UnicodeStringTest::TestLargeAppend() {",
          "2316:     if(quick) return;",
          "2318:     IcuTestErrorCode status(*this, \"TestLargeAppend\");",
          "2320:     int32_t len = 0xAFFFFFF;",
          "2321:     UnicodeString str;",
          "2322:     char16_t *buf = str.getBuffer(len);",
          "2325:     uprv_memset(buf, 0x4e, len * 2);",
          "2326:     str.releaseBuffer(len);",
          "2327:     UnicodeString dest;",
          "2331:     int64_t total = 0;",
          "2332:     for (int32_t i = 0; i < 16; i++) {",
          "2333:         dest.append(str);",
          "2334:         total += len;",
          "2335:         if (total <= INT32_MAX) {",
          "2336:             assertFalse(\"dest is not bogus\", dest.isBogus());",
          "2337:         } else {",
          "2338:             assertTrue(\"dest should be bogus\", dest.isBogus());",
          "2339:         }",
          "2340:     }",
          "2341:     dest.remove();",
          "2342:     total = 0;",
          "2343:     for (int32_t i = 0; i < 16; i++) {",
          "2344:         dest.append(str);",
          "2345:         total += len;",
          "2346:         if (total + len <= INT32_MAX) {",
          "2347:             assertFalse(\"dest is not bogus\", dest.isBogus());",
          "2348:         } else if (total <= INT32_MAX) {",
          "2350:             UnicodeString str2;",
          "2351:             int32_t remain = INT32_MAX - total;",
          "2352:             char16_t *buf2 = str2.getBuffer(remain);",
          "2353:             if (buf2 == nullptr) {",
          "2355:                 return;",
          "2356:             }",
          "2357:             uprv_memset(buf2, 0x4e, remain * 2);",
          "2358:             str2.releaseBuffer(remain);",
          "2359:             dest.append(str2);",
          "2360:             total += remain;",
          "2361:             assertEquals(\"When a string of exactly the maximum size works\", (int64_t)INT32_MAX, total);",
          "2362:             assertEquals(\"When a string of exactly the maximum size works\", INT32_MAX, dest.length());",
          "2363:             assertFalse(\"dest is not bogus\", dest.isBogus());",
          "2366:             str2.truncate(1);",
          "2367:             dest.append(str2);",
          "2368:             total++;",
          "2369:             assertTrue(\"dest should be bogus\", dest.isBogus());",
          "2370:         } else {",
          "2371:             assertTrue(\"dest should be bogus\", dest.isBogus());",
          "2372:         }",
          "2373:     }",
          "2374: }",
          "",
          "---------------"
        ],
        "icu4c/source/test/intltest/ustrtest.h||icu4c/source/test/intltest/ustrtest.h": [
          "File: icu4c/source/test/intltest/ustrtest.h -> icu4c/source/test/intltest/ustrtest.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:     void TestWCharPointers();",
          "98:     void TestNullPointers();",
          "99:     void TestUnicodeStringInsertAppendToSelf();",
          "100: };",
          "102: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:     void TestLargeAppend();",
          "",
          "---------------"
        ]
      }
    }
  ]
}