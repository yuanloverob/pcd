{
  "cve_id": "CVE-2019-20326",
  "cve_desc": "A heap-based buffer overflow in _cairo_image_surface_create_from_jpeg() in extensions/cairo_io/cairo-image-surface-jpeg.c in GNOME gThumb before 3.8.3 and Linux Mint Pix before 2.4.5 allows attackers to cause a crash and potentially execute arbitrary code via a crafted JPEG file.",
  "repo": "GNOME/gthumb",
  "patch_hash": "4faa5ce2358812d23a1147953ee76f59631590ad",
  "patch_info": {
    "commit_hash": "4faa5ce2358812d23a1147953ee76f59631590ad",
    "repo": "GNOME/gthumb",
    "commit_url": "https://gitlab.gnome.org/GNOME/gthumb/commit/4faa5ce2358812d23a1147953ee76f59631590ad",
    "files": [
      "extensions/cairo_io/cairo-image-surface-jpeg.c"
    ],
    "message": "jpeg loader: do not scan more than output_height lines",
    "before_after_code_files": [
      "extensions/cairo_io/cairo-image-surface-jpeg.c||extensions/cairo_io/cairo-image-surface-jpeg.c"
    ]
  },
  "patch_diff": {
    "extensions/cairo_io/cairo-image-surface-jpeg.c||extensions/cairo_io/cairo-image-surface-jpeg.c": [
      "File: extensions/cairo_io/cairo-image-surface-jpeg.c -> extensions/cairo_io/cairo-image-surface-jpeg.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "173:  unsigned char                 *surface_row;",
      "174:  JSAMPARRAY                     buffer;",
      "175:  int                            buffer_stride;",
      "176:  JDIMENSION                     n_lines;",
      "177:  JSAMPARRAY                     buffer_row;",
      "178:  int                            l;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "176:  int                            scanned_lines;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "298:  _cairo_metadata_set_has_alpha (metadata, FALSE);",
      "299:  surface_data = _cairo_image_surface_flush_and_get_data (surface);",
      "300:  surface_row = surface_data + line_start;",
      "302:  switch (srcinfo.out_color_space) {",
      "303:  case JCS_CMYK:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "302:  scanned_lines = 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "313:      goto stop_loading;",
      "315:     n_lines = jpeg_read_scanlines (&srcinfo, buffer, srcinfo.rec_outbuf_height);",
      "317:     buffer_row = buffer;",
      "318:     for (l = 0; l < n_lines; l++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "318:     if (scanned_lines + n_lines > output_height)",
      "319:      n_lines = output_height - scanned_lines;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "350:      surface_row += line_step;",
      "351:      buffer_row += buffer_stride;",
      "352:     }",
      "353:    }",
      "354:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "356:      scanned_lines += 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "361:      goto stop_loading;",
      "363:     n_lines = jpeg_read_scanlines (&srcinfo, buffer, srcinfo.rec_outbuf_height);",
      "365:     buffer_row = buffer;",
      "366:     for (l = 0; l < n_lines; l++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "369:     if (scanned_lines + n_lines > output_height)",
      "370:      n_lines = output_height - scanned_lines;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "382:      surface_row += line_step;",
      "383:      buffer_row += buffer_stride;",
      "384:     }",
      "385:    }",
      "386:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "391:      scanned_lines += 1;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "393:      goto stop_loading;",
      "395:     n_lines = jpeg_read_scanlines (&srcinfo, buffer, srcinfo.rec_outbuf_height);",
      "397:     buffer_row = buffer;",
      "398:     for (l = 0; l < n_lines; l++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "404:     if (scanned_lines + n_lines > output_height)",
      "405:      n_lines = output_height - scanned_lines;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "416:      surface_row += line_step;",
      "417:      buffer_row += buffer_stride;",
      "418:     }",
      "419:    }",
      "420:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "428:      scanned_lines += 1;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "440:      goto stop_loading;",
      "442:     n_lines = jpeg_read_scanlines (&srcinfo, buffer, srcinfo.rec_outbuf_height);",
      "444:     buffer_row = buffer;",
      "445:     for (l = 0; l < n_lines; l++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "454:     if (scanned_lines + n_lines > output_height)",
      "455:      n_lines = output_height - scanned_lines;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "467:      surface_row += line_step;",
      "468:      buffer_row += buffer_stride;",
      "469:     }",
      "470:    }",
      "471:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "482:      scanned_lines += 1;",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "495:      goto stop_loading;",
      "497:     n_lines = jpeg_read_scanlines (&srcinfo, buffer, srcinfo.rec_outbuf_height);",
      "499:     buffer_row = buffer;",
      "500:     for (l = 0; l < n_lines; l++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "512:     if (scanned_lines + n_lines > output_height)",
      "513:      n_lines = output_height - scanned_lines;",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "529:      surface_row += line_step;",
      "530:      buffer_row += buffer_stride;",
      "531:     }",
      "532:    }",
      "533:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "547:      scanned_lines += 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "14860321ce3235d420498c4f81f21003d1fb78f4",
      "candidate_info": {
        "commit_hash": "14860321ce3235d420498c4f81f21003d1fb78f4",
        "repo": "GNOME/gthumb",
        "commit_url": "https://github.com/GNOME/gthumb/commit/14860321ce3235d420498c4f81f21003d1fb78f4",
        "files": [
          "extensions/cairo_io/cairo-image-surface-jpeg.c"
        ],
        "message": "jpeg loader: crash when the original size is too big for a cairo surface\n\nDo not scan more than CAIRO_MAX_IMAGE_SIZE lines.",
        "before_after_code_files": [
          "extensions/cairo_io/cairo-image-surface-jpeg.c||extensions/cairo_io/cairo-image-surface-jpeg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "extensions/cairo_io/cairo-image-surface-jpeg.c||extensions/cairo_io/cairo-image-surface-jpeg.c"
          ],
          "candidate": [
            "extensions/cairo_io/cairo-image-surface-jpeg.c||extensions/cairo_io/cairo-image-surface-jpeg.c"
          ]
        }
      },
      "candidate_diff": {
        "extensions/cairo_io/cairo-image-surface-jpeg.c||extensions/cairo_io/cairo-image-surface-jpeg.c": [
          "File: extensions/cairo_io/cairo-image-surface-jpeg.c -> extensions/cairo_io/cairo-image-surface-jpeg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "155:  JpegInfoFlags         info_flags;",
          "156:  gboolean                       load_scaled;",
          "157:  GthTransform                   orientation;",
          "158:  int                            destination_width;",
          "159:  int                            destination_height;",
          "160:  int                            line_start;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "158:  int                            output_width;",
          "159:  int                            output_height;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "171:  unsigned char                 *surface_row;",
          "172:  JSAMPARRAY                     buffer;",
          "173:  int                            buffer_stride;",
          "174:  JDIMENSION                     n_lines;",
          "175:  JSAMPARRAY                     buffer_row;",
          "176:  int                            l;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "176:  int                            scanned_lines;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "264:  jpeg_start_decompress (&srcinfo);",
          "266:  _cairo_image_surface_transform_get_steps (CAIRO_FORMAT_ARGB32,",
          "269:         orientation,",
          "270:         &destination_width,",
          "271:         &destination_height,",
          "",
          "[Removed Lines]",
          "267:         MIN (srcinfo.output_width, CAIRO_MAX_IMAGE_SIZE),",
          "268:         MIN (srcinfo.output_height, CAIRO_MAX_IMAGE_SIZE),",
          "",
          "[Added Lines]",
          "269:  output_width = MIN (srcinfo.output_width, CAIRO_MAX_IMAGE_SIZE);",
          "270:  output_height = MIN (srcinfo.output_height, CAIRO_MAX_IMAGE_SIZE);",
          "272:         output_width,",
          "273:         output_height,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "294:  _cairo_metadata_set_has_alpha (metadata, FALSE);",
          "295:  surface_data = _cairo_image_surface_flush_and_get_data (surface);",
          "296:  surface_row = surface_data + line_start;",
          "298:  switch (srcinfo.out_color_space) {",
          "299:  case JCS_CMYK:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "302:  scanned_lines = 0;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "304:    CMYK_table_init ();",
          "305:    cmyk_tab = CMYK_Tab;",
          "308:     if (g_cancellable_is_cancelled (cancellable))",
          "309:      goto stop_loading;",
          "311:     n_lines = jpeg_read_scanlines (&srcinfo, buffer, srcinfo.rec_outbuf_height);",
          "313:     buffer_row = buffer;",
          "314:     for (l = 0; l < n_lines; l++) {",
          "",
          "[Removed Lines]",
          "307:    while (srcinfo.output_scanline < srcinfo.output_height) {",
          "",
          "[Added Lines]",
          "313:    while (srcinfo.output_scanline < output_height) {",
          "318:     if (scanned_lines + n_lines > output_height)",
          "319:      n_lines = output_height - scanned_lines;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "318:      if (g_cancellable_is_cancelled (cancellable))",
          "319:       goto stop_loading;",
          "322:       if (srcinfo.saw_Adobe_marker) {",
          "323:        c = p_buffer[0];",
          "324:        m = p_buffer[1];",
          "",
          "[Removed Lines]",
          "321:      for (x = 0; x < srcinfo.output_width; x++) {",
          "",
          "[Added Lines]",
          "329:      for (x = 0; x < output_width; x++) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "346:      surface_row += line_step;",
          "347:      buffer_row += buffer_stride;",
          "348:     }",
          "349:    }",
          "350:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "356:      scanned_lines += 1;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "353:  case JCS_GRAYSCALE:",
          "354:   {",
          "356:     if (g_cancellable_is_cancelled (cancellable))",
          "357:      goto stop_loading;",
          "359:     n_lines = jpeg_read_scanlines (&srcinfo, buffer, srcinfo.rec_outbuf_height);",
          "361:     buffer_row = buffer;",
          "362:     for (l = 0; l < n_lines; l++) {",
          "",
          "[Removed Lines]",
          "355:    while (srcinfo.output_scanline < srcinfo.output_height) {",
          "",
          "[Added Lines]",
          "364:    while (srcinfo.output_scanline < output_height) {",
          "369:     if (scanned_lines + n_lines > output_height)",
          "370:      n_lines = output_height - scanned_lines;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "366:      if (g_cancellable_is_cancelled (cancellable))",
          "367:       goto stop_loading;",
          "370:       r = g = b = p_buffer[0];",
          "371:       pixel = CAIRO_RGBA_TO_UINT32 (r, g, b, 0xff);",
          "372:       memcpy (p_surface, &pixel, sizeof (guint32));",
          "",
          "[Removed Lines]",
          "369:      for (x = 0; x < srcinfo.output_width; x++) {",
          "",
          "[Added Lines]",
          "380:      for (x = 0; x < output_width; x++) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "378:      surface_row += line_step;",
          "379:      buffer_row += buffer_stride;",
          "380:     }",
          "381:    }",
          "382:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "391:      scanned_lines += 1;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "385:  case JCS_RGB:",
          "386:   {",
          "388:     if (g_cancellable_is_cancelled (cancellable))",
          "389:      goto stop_loading;",
          "391:     n_lines = jpeg_read_scanlines (&srcinfo, buffer, srcinfo.rec_outbuf_height);",
          "393:     buffer_row = buffer;",
          "394:     for (l = 0; l < n_lines; l++) {",
          "",
          "[Removed Lines]",
          "387:    while (srcinfo.output_scanline < srcinfo.output_height) {",
          "",
          "[Added Lines]",
          "399:    while (srcinfo.output_scanline < output_height) {",
          "404:     if (scanned_lines + n_lines > output_height)",
          "405:      n_lines = output_height - scanned_lines;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "398:      if (g_cancellable_is_cancelled (cancellable))",
          "399:       goto stop_loading;",
          "402:       r = p_buffer[0];",
          "403:       g = p_buffer[1];",
          "404:       b = p_buffer[2];",
          "",
          "[Removed Lines]",
          "401:      for (x = 0; x < srcinfo.output_width; x++) {",
          "",
          "[Added Lines]",
          "415:      for (x = 0; x < output_width; x++) {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "412:      surface_row += line_step;",
          "413:      buffer_row += buffer_stride;",
          "414:     }",
          "415:    }",
          "416:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "428:      scanned_lines += 1;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "431:    g_cr_tab = YCbCr_G_Cr_Tab;",
          "432:    b_cb_tab = YCbCr_B_Cb_Tab;",
          "435:     if (g_cancellable_is_cancelled (cancellable))",
          "436:      goto stop_loading;",
          "438:     n_lines = jpeg_read_scanlines (&srcinfo, buffer, srcinfo.rec_outbuf_height);",
          "440:     buffer_row = buffer;",
          "441:     for (l = 0; l < n_lines; l++) {",
          "",
          "[Removed Lines]",
          "434:    while (srcinfo.output_scanline < srcinfo.output_height) {",
          "",
          "[Added Lines]",
          "449:    while (srcinfo.output_scanline < output_height) {",
          "454:     if (scanned_lines + n_lines > output_height)",
          "455:      n_lines = output_height - scanned_lines;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "445:      if (g_cancellable_is_cancelled (cancellable))",
          "446:       goto stop_loading;",
          "449:       Y = p_buffer[0];",
          "450:       Cb = p_buffer[1];",
          "451:       Cr = p_buffer[2];",
          "",
          "[Removed Lines]",
          "448:      for (x = 0; x < srcinfo.output_width; x++) {",
          "",
          "[Added Lines]",
          "465:      for (x = 0; x < output_width; x++) {",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "463:      surface_row += line_step;",
          "464:      buffer_row += buffer_stride;",
          "465:     }",
          "466:    }",
          "467:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "482:      scanned_lines += 1;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "486:    CMYK_table_init ();",
          "487:    cmyk_tab = CMYK_Tab;",
          "490:     if (g_cancellable_is_cancelled (cancellable))",
          "491:      goto stop_loading;",
          "493:     n_lines = jpeg_read_scanlines (&srcinfo, buffer, srcinfo.rec_outbuf_height);",
          "495:     buffer_row = buffer;",
          "496:     for (l = 0; l < n_lines; l++) {",
          "",
          "[Removed Lines]",
          "489:    while (srcinfo.output_scanline < srcinfo.output_height) {",
          "",
          "[Added Lines]",
          "507:    while (srcinfo.output_scanline < output_height) {",
          "512:     if (scanned_lines + n_lines > output_height)",
          "513:      n_lines = output_height - scanned_lines;",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "500:      if (g_cancellable_is_cancelled (cancellable))",
          "501:       goto stop_loading;",
          "504:       Y = p_buffer[0];",
          "505:       Cb = p_buffer[1];",
          "506:       Cr = p_buffer[2];",
          "",
          "[Removed Lines]",
          "503:      for (x = 0; x < srcinfo.output_width; x++) {",
          "",
          "[Added Lines]",
          "523:      for (x = 0; x < output_width; x++) {",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "525:      surface_row += line_step;",
          "526:      buffer_row += buffer_stride;",
          "527:     }",
          "528:    }",
          "529:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "547:      scanned_lines += 1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}