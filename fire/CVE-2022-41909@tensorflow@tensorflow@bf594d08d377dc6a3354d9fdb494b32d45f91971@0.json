{
  "cve_id": "CVE-2022-41909",
  "cve_desc": "TensorFlow is an open source platform for machine learning. An input `encoded` that is not a valid `CompositeTensorVariant` tensor will trigger a segfault in `tf.raw_ops.CompositeTensorVariantToComponents`. We have patched the issue in GitHub commits bf594d08d377dc6a3354d9fdb494b32d45f91971 and 660ce5a89eb6766834bdc303d2ab3902aef99d3d. The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "bf594d08d377dc6a3354d9fdb494b32d45f91971",
  "patch_info": {
    "commit_hash": "bf594d08d377dc6a3354d9fdb494b32d45f91971",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/bf594d08d377dc6a3354d9fdb494b32d45f91971",
    "files": [
      "tensorflow/core/kernels/composite_tensor_ops.cc",
      "tensorflow/python/kernel_tests/composite_tensor_ops_test.py"
    ],
    "message": "[Security] Raise an exception when input to CompositeTensorVariantToComponents is not a valid CompositeTensorVariant tensor.\n\nSo TF won't crash.\n\nPiperOrigin-RevId: 474594628",
    "before_after_code_files": [
      "tensorflow/core/kernels/composite_tensor_ops.cc||tensorflow/core/kernels/composite_tensor_ops.cc",
      "tensorflow/python/kernel_tests/composite_tensor_ops_test.py||tensorflow/python/kernel_tests/composite_tensor_ops_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/composite_tensor_ops.cc||tensorflow/core/kernels/composite_tensor_ops.cc": [
      "File: tensorflow/core/kernels/composite_tensor_ops.cc -> tensorflow/core/kernels/composite_tensor_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "73:                                 \"tensor, but got \",",
      "74:                                 encoded_t.DebugString()));",
      "75:     auto* encoded = encoded_t.flat<Variant>()(0).get<CompositeTensorVariant>();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "76:     OP_REQUIRES(context, encoded != nullptr,",
      "77:                 errors::InvalidArgument(\"The input `encoded` is not a valid \"",
      "78:                                         \"CompositeTensorVariant tensor, got \",",
      "79:                                         encoded_t.DebugString()));",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/composite_tensor_ops_test.py||tensorflow/python/kernel_tests/composite_tensor_ops_test.py": [
      "File: tensorflow/python/kernel_tests/composite_tensor_ops_test.py -> tensorflow/python/kernel_tests/composite_tensor_ops_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: from tensorflow.python.framework import test_util",
      "26: from tensorflow.python.ops import composite_tensor_ops",
      "27: from tensorflow.python.ops import gen_composite_tensor_ops",
      "28: from tensorflow.python.ops import gradients_impl",
      "29: from tensorflow.python.ops import math_ops",
      "30: from tensorflow.python.ops import parsing_ops",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: from tensorflow.python.ops import gen_list_ops",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "97:           metadata='',",
      "98:           Tcomponents=[dtypes.int32])",
      "100:   def testRoundTripThroughTensorProto(self):",
      "101:     value = ragged_factory_ops.constant([[1, 2], [3], [4, 5, 6]])",
      "102:     encoded = composite_tensor_ops.composite_tensor_to_variants(value)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "101:   def testDecodingInvalidEncodedInputError(self):",
      "102:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
      "103:                                 'not a valid CompositeTensorVariant tensor'):",
      "104:       self.evaluate(",
      "105:           gen_composite_tensor_ops.CompositeTensorVariantToComponents(",
      "106:               encoded=gen_list_ops.EmptyTensorList(",
      "107:                   element_dtype=dtypes.int32,",
      "108:                   element_shape=[1, 2],",
      "109:                   max_num_elements=2),",
      "110:               metadata='',",
      "111:               Tcomponents=[dtypes.int32]))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2cf93c84834f1522f4d7c2ef498a76d8d08b9aa9",
      "candidate_info": {
        "commit_hash": "2cf93c84834f1522f4d7c2ef498a76d8d08b9aa9",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/2cf93c84834f1522f4d7c2ef498a76d8d08b9aa9",
        "files": [
          "tensorflow/core/kernels/composite_tensor_ops.cc",
          "tensorflow/python/kernel_tests/composite_tensor_ops_test.py"
        ],
        "message": "[Security] Raise an exception when input to CompositeTensorVariantToComponents is not a valid CompositeTensorVariant tensor.\n\nSo TF won't crash.\n\nPiperOrigin-RevId: 474594628",
        "before_after_code_files": [
          "tensorflow/core/kernels/composite_tensor_ops.cc||tensorflow/core/kernels/composite_tensor_ops.cc",
          "tensorflow/python/kernel_tests/composite_tensor_ops_test.py||tensorflow/python/kernel_tests/composite_tensor_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/composite_tensor_ops.cc||tensorflow/core/kernels/composite_tensor_ops.cc",
            "tensorflow/python/kernel_tests/composite_tensor_ops_test.py||tensorflow/python/kernel_tests/composite_tensor_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/composite_tensor_ops.cc||tensorflow/core/kernels/composite_tensor_ops.cc",
            "tensorflow/python/kernel_tests/composite_tensor_ops_test.py||tensorflow/python/kernel_tests/composite_tensor_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/composite_tensor_ops.cc||tensorflow/core/kernels/composite_tensor_ops.cc": [
          "File: tensorflow/core/kernels/composite_tensor_ops.cc -> tensorflow/core/kernels/composite_tensor_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:   void Compute(OpKernelContext* context) override {",
          "68:     Tensor encoded_t = context->input(0);",
          "69:     auto* encoded = encoded_t.flat<Variant>()(0).get<CompositeTensorVariant>();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:     OP_REQUIRES(context, encoded != nullptr,",
          "71:                 errors::InvalidArgument(\"The input `encoded` is not a valid \"",
          "72:                                         \"CompositeTensorVariant tensor, got \",",
          "73:                                         encoded_t.DebugString()));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/composite_tensor_ops_test.py||tensorflow/python/kernel_tests/composite_tensor_ops_test.py": [
          "File: tensorflow/python/kernel_tests/composite_tensor_ops_test.py -> tensorflow/python/kernel_tests/composite_tensor_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: from tensorflow.python.framework import sparse_tensor",
          "24: from tensorflow.python.framework import test_util",
          "25: from tensorflow.python.ops import composite_tensor_ops",
          "26: from tensorflow.python.ops import gradients_impl",
          "27: from tensorflow.python.ops import math_ops",
          "28: from tensorflow.python.ops import parsing_ops",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: from tensorflow.python.ops import gen_composite_tensor_ops",
          "27: from tensorflow.python.ops import gen_list_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:     with self.assertRaisesRegex(ValueError, message):",
          "84:       composite_tensor_ops.composite_tensor_to_variants(value(), spec)",
          "86:   def testRoundTripThroughTensorProto(self):",
          "87:     value = ragged_factory_ops.constant([[1, 2], [3], [4, 5, 6]])",
          "88:     encoded = composite_tensor_ops.composite_tensor_to_variants(value)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:   def testDecodingEmptyNonScalarTensorError(self):",
          "89:     if not context.executing_eagerly():",
          "90:       # Creating a variant tensor of an empty list is not allowed in eager mode.",
          "91:       return",
          "93:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
          "94:                                 'must not be an empty variant tensor'):",
          "95:       gen_composite_tensor_ops.CompositeTensorVariantToComponents(",
          "96:           encoded=constant_op.constant([], dtype=dtypes.variant),",
          "97:           metadata='',",
          "98:           Tcomponents=[dtypes.int32])",
          "100:   def testDecodingInvalidEncodedInputError(self):",
          "101:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
          "102:                                 'not a valid CompositeTensorVariant tensor'):",
          "103:       self.evaluate(",
          "104:           gen_composite_tensor_ops.CompositeTensorVariantToComponents(",
          "105:               encoded=gen_list_ops.EmptyTensorList(",
          "106:                   element_dtype=dtypes.int32,",
          "107:                   element_shape=[1, 2],",
          "108:                   max_num_elements=2),",
          "109:               metadata='',",
          "110:               Tcomponents=[dtypes.int32]))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f09ffb4820c610fb89ae072cdb6a0a1c1a476283",
      "candidate_info": {
        "commit_hash": "f09ffb4820c610fb89ae072cdb6a0a1c1a476283",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/f09ffb4820c610fb89ae072cdb6a0a1c1a476283",
        "files": [
          "tensorflow/core/kernels/composite_tensor_ops.cc",
          "tensorflow/python/kernel_tests/composite_tensor_ops_test.py"
        ],
        "message": "[Security] Raise an exception when input to CompositeTensorVariantToComponents is not a valid CompositeTensorVariant tensor.\n\nSo TF won't crash.\n\nPiperOrigin-RevId: 474594628",
        "before_after_code_files": [
          "tensorflow/core/kernels/composite_tensor_ops.cc||tensorflow/core/kernels/composite_tensor_ops.cc",
          "tensorflow/python/kernel_tests/composite_tensor_ops_test.py||tensorflow/python/kernel_tests/composite_tensor_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/composite_tensor_ops.cc||tensorflow/core/kernels/composite_tensor_ops.cc",
            "tensorflow/python/kernel_tests/composite_tensor_ops_test.py||tensorflow/python/kernel_tests/composite_tensor_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/composite_tensor_ops.cc||tensorflow/core/kernels/composite_tensor_ops.cc",
            "tensorflow/python/kernel_tests/composite_tensor_ops_test.py||tensorflow/python/kernel_tests/composite_tensor_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/composite_tensor_ops.cc||tensorflow/core/kernels/composite_tensor_ops.cc": [
          "File: tensorflow/core/kernels/composite_tensor_ops.cc -> tensorflow/core/kernels/composite_tensor_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:   void Compute(OpKernelContext* context) override {",
          "68:     Tensor encoded_t = context->input(0);",
          "69:     auto* encoded = encoded_t.flat<Variant>()(0).get<CompositeTensorVariant>();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:     OP_REQUIRES(context, encoded != nullptr,",
          "71:                 errors::InvalidArgument(\"The input `encoded` is not a valid \"",
          "72:                                         \"CompositeTensorVariant tensor, got \",",
          "73:                                         encoded_t.DebugString()));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/composite_tensor_ops_test.py||tensorflow/python/kernel_tests/composite_tensor_ops_test.py": [
          "File: tensorflow/python/kernel_tests/composite_tensor_ops_test.py -> tensorflow/python/kernel_tests/composite_tensor_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: from tensorflow.python.framework import sparse_tensor",
          "24: from tensorflow.python.framework import test_util",
          "25: from tensorflow.python.ops import composite_tensor_ops",
          "26: from tensorflow.python.ops import gradients_impl",
          "27: from tensorflow.python.ops import math_ops",
          "28: from tensorflow.python.ops import parsing_ops",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: from tensorflow.python.ops import gen_composite_tensor_ops",
          "27: from tensorflow.python.ops import gen_list_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:     with self.assertRaisesRegex(ValueError, message):",
          "84:       composite_tensor_ops.composite_tensor_to_variants(value(), spec)",
          "86:   def testRoundTripThroughTensorProto(self):",
          "87:     value = ragged_factory_ops.constant([[1, 2], [3], [4, 5, 6]])",
          "88:     encoded = composite_tensor_ops.composite_tensor_to_variants(value)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:   def testDecodingEmptyNonScalarTensorError(self):",
          "89:     if not context.executing_eagerly():",
          "90:       # Creating a variant tensor of an empty list is not allowed in eager mode.",
          "91:       return",
          "93:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
          "94:                                 'must not be an empty variant tensor'):",
          "95:       gen_composite_tensor_ops.CompositeTensorVariantToComponents(",
          "96:           encoded=constant_op.constant([], dtype=dtypes.variant),",
          "97:           metadata='',",
          "98:           Tcomponents=[dtypes.int32])",
          "100:   def testDecodingInvalidEncodedInputError(self):",
          "101:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
          "102:                                 'not a valid CompositeTensorVariant tensor'):",
          "103:       self.evaluate(",
          "104:           gen_composite_tensor_ops.CompositeTensorVariantToComponents(",
          "105:               encoded=gen_list_ops.EmptyTensorList(",
          "106:                   element_dtype=dtypes.int32,",
          "107:                   element_shape=[1, 2],",
          "108:                   max_num_elements=2),",
          "109:               metadata='',",
          "110:               Tcomponents=[dtypes.int32]))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b7fbd40d263d9aa8a006bf81e4a9d23acc484bc4",
      "candidate_info": {
        "commit_hash": "b7fbd40d263d9aa8a006bf81e4a9d23acc484bc4",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/b7fbd40d263d9aa8a006bf81e4a9d23acc484bc4",
        "files": [
          "tensorflow/core/kernels/composite_tensor_ops.cc",
          "tensorflow/python/kernel_tests/composite_tensor_ops_test.py"
        ],
        "message": "[Security] Raise an exception when input to CompositeTensorVariantToComponents is not a valid CompositeTensorVariant tensor.\n\nSo TF won't crash.\n\nPiperOrigin-RevId: 474594628",
        "before_after_code_files": [
          "tensorflow/core/kernels/composite_tensor_ops.cc||tensorflow/core/kernels/composite_tensor_ops.cc",
          "tensorflow/python/kernel_tests/composite_tensor_ops_test.py||tensorflow/python/kernel_tests/composite_tensor_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/composite_tensor_ops.cc||tensorflow/core/kernels/composite_tensor_ops.cc",
            "tensorflow/python/kernel_tests/composite_tensor_ops_test.py||tensorflow/python/kernel_tests/composite_tensor_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/composite_tensor_ops.cc||tensorflow/core/kernels/composite_tensor_ops.cc",
            "tensorflow/python/kernel_tests/composite_tensor_ops_test.py||tensorflow/python/kernel_tests/composite_tensor_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/composite_tensor_ops.cc||tensorflow/core/kernels/composite_tensor_ops.cc": [
          "File: tensorflow/core/kernels/composite_tensor_ops.cc -> tensorflow/core/kernels/composite_tensor_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:   void Compute(OpKernelContext* context) override {",
          "68:     Tensor encoded_t = context->input(0);",
          "69:     auto* encoded = encoded_t.flat<Variant>()(0).get<CompositeTensorVariant>();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:     OP_REQUIRES(context, encoded != nullptr,",
          "71:                 errors::InvalidArgument(\"The input `encoded` is not a valid \"",
          "72:                                         \"CompositeTensorVariant tensor, got \",",
          "73:                                         encoded_t.DebugString()));",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/composite_tensor_ops_test.py||tensorflow/python/kernel_tests/composite_tensor_ops_test.py": [
          "File: tensorflow/python/kernel_tests/composite_tensor_ops_test.py -> tensorflow/python/kernel_tests/composite_tensor_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: from tensorflow.python.framework import sparse_tensor",
          "24: from tensorflow.python.framework import test_util",
          "25: from tensorflow.python.ops import composite_tensor_ops",
          "26: from tensorflow.python.ops import gradients_impl",
          "27: from tensorflow.python.ops import math_ops",
          "28: from tensorflow.python.ops import parsing_ops",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: from tensorflow.python.ops import gen_composite_tensor_ops",
          "27: from tensorflow.python.ops import gen_list_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:     with self.assertRaisesRegex(ValueError, message):",
          "84:       composite_tensor_ops.composite_tensor_to_variants(value(), spec)",
          "86:   def testRoundTripThroughTensorProto(self):",
          "87:     value = ragged_factory_ops.constant([[1, 2], [3], [4, 5, 6]])",
          "88:     encoded = composite_tensor_ops.composite_tensor_to_variants(value)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:   def testDecodingEmptyNonScalarTensorError(self):",
          "89:     if not context.executing_eagerly():",
          "90:       # Creating a variant tensor of an empty list is not allowed in eager mode.",
          "91:       return",
          "93:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
          "94:                                 'must not be an empty variant tensor'):",
          "95:       gen_composite_tensor_ops.CompositeTensorVariantToComponents(",
          "96:           encoded=constant_op.constant([], dtype=dtypes.variant),",
          "97:           metadata='',",
          "98:           Tcomponents=[dtypes.int32])",
          "100:   def testDecodingInvalidEncodedInputError(self):",
          "101:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
          "102:                                 'not a valid CompositeTensorVariant tensor'):",
          "103:       self.evaluate(",
          "104:           gen_composite_tensor_ops.CompositeTensorVariantToComponents(",
          "105:               encoded=gen_list_ops.EmptyTensorList(",
          "106:                   element_dtype=dtypes.int32,",
          "107:                   element_shape=[1, 2],",
          "108:                   max_num_elements=2),",
          "109:               metadata='',",
          "110:               Tcomponents=[dtypes.int32]))",
          "",
          "---------------"
        ]
      }
    }
  ]
}