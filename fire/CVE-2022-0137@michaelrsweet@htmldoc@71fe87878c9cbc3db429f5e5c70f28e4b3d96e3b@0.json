{
  "cve_id": "CVE-2022-0137",
  "cve_desc": "A heap buffer overflow in image_set_mask function of HTMLDOC before 1.9.15 allows an attacker to write outside the buffer boundaries.",
  "repo": "michaelrsweet/htmldoc",
  "patch_hash": "71fe87878c9cbc3db429f5e5c70f28e4b3d96e3b",
  "patch_info": {
    "commit_hash": "71fe87878c9cbc3db429f5e5c70f28e4b3d96e3b",
    "repo": "michaelrsweet/htmldoc",
    "commit_url": "https://github.com/michaelrsweet/htmldoc/commit/71fe87878c9cbc3db429f5e5c70f28e4b3d96e3b",
    "files": [
      "CHANGES.md",
      "htmldoc/image.cxx"
    ],
    "message": "Fix potential heap overflow bug with GIF images (Issue #461)",
    "before_after_code_files": [
      "htmldoc/image.cxx||htmldoc/image.cxx"
    ]
  },
  "patch_diff": {
    "htmldoc/image.cxx||htmldoc/image.cxx": [
      "File: htmldoc/image.cxx -> htmldoc/image.cxx",
      "--- Hunk 1 ---",
      "[Context before]",
      "1312:        return (-1);",
      "1313:    }",
      "1315:           if (transparent >= 0)",
      "1316:           {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1315:           img->width  = (buf[5] << 8) | buf[4];",
      "1316:           img->height = (buf[7] << 8) | buf[6];",
      "1317:           img->depth  = gray ? 1 : 3;",
      "1319:    if (img->width <= 0 || img->width > 32767 || img->height <= 0 || img->height > 32767)",
      "1320:      return (-1);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1343:             image_need_mask(img);",
      "1344:    }",
      "1353:    if (!load_data)",
      "1354:      return (0);",
      "",
      "[Removed Lines]",
      "1346:           img->width  = (buf[5] << 8) | buf[4];",
      "1347:           img->height = (buf[7] << 8) | buf[6];",
      "1348:           img->depth  = gray ? 1 : 3;",
      "1350:    if (img->width <= 0 || img->width > 32767 || img->height <= 0 || img->height > 32767)",
      "1351:      return (-1);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1786:   if (img == NULL || img->mask == NULL || x < 0 || x >= img->width ||",
      "1788:     return;",
      "1790:   if (img->maskscale == 8)",
      "",
      "[Removed Lines]",
      "1787:       y < 0 || y > img->height)",
      "",
      "[Added Lines]",
      "1787:       y < 0 || y >= img->height)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "31f780487e5ddc426888638786cdc47631687275",
      "candidate_info": {
        "commit_hash": "31f780487e5ddc426888638786cdc47631687275",
        "repo": "michaelrsweet/htmldoc",
        "commit_url": "https://github.com/michaelrsweet/htmldoc/commit/31f780487e5ddc426888638786cdc47631687275",
        "files": [
          "CHANGES.md",
          "htmldoc/image.cxx"
        ],
        "message": "Fix a potential integer overflow bug in the JPEG and PNG loaders (Issue #471)\n\nAll images are now limited to 4GiB of memory usage (37837x37837 pixels).",
        "before_after_code_files": [
          "htmldoc/image.cxx||htmldoc/image.cxx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "htmldoc/image.cxx||htmldoc/image.cxx"
          ],
          "candidate": [
            "htmldoc/image.cxx||htmldoc/image.cxx"
          ]
        }
      },
      "candidate_diff": {
        "htmldoc/image.cxx||htmldoc/image.cxx": [
          "File: htmldoc/image.cxx -> htmldoc/image.cxx",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #endif // HAVE_LIBPNG",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: #define IMAGE_MAX_DIM 37837  // Maximum dimension - sqrt(4GiB / 3)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "926:   colors_used      = (int)read_dword(fp);",
          "927:   read_dword(fp);",
          "930:     return (-1);",
          "932:   if (info_size > 40)",
          "",
          "[Removed Lines]",
          "929:   if (img->width <= 0 || img->width > 8192 || img->height <= 0 || img->height > 8192 || info_size < 0)",
          "",
          "[Added Lines]",
          "936:   if (img->width <= 0 || img->width > IMAGE_MAX_DIM || img->height <= 0 || img->height > IMAGE_MAX_DIM || info_size < 0)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1278:   img->height = (buf[9] << 8) | buf[8];",
          "1279:   ncolors     = 2 << (buf[10] & 0x07);",
          "1282:     return (-1);",
          "",
          "[Removed Lines]",
          "1281:   if (img->width <= 0 || img->width > 32767 || img->height <= 0 || img->height > 32767)",
          "",
          "[Added Lines]",
          "1288:   if (img->width <= 0 || img->width > IMAGE_MAX_DIM || img->height <= 0 || img->height > IMAGE_MAX_DIM)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1326:           img->height = (buf[7] << 8) | buf[6];",
          "1327:           img->depth  = gray ? 1 : 3;",
          "1330:      return (-1);",
          "1332:           if (transparent >= 0)",
          "",
          "[Removed Lines]",
          "1329:    if (img->width <= 0 || img->width > 32767 || img->height <= 0 || img->height > 32767)",
          "",
          "[Added Lines]",
          "1336:    if (img->width <= 0 || img->width > IMAGE_MAX_DIM || img->height <= 0 || img->height > IMAGE_MAX_DIM)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1443:   img->height = (int)cinfo.output_height;",
          "1444:   img->depth  = (int)cinfo.output_components;",
          "1446:   if (!load_data)",
          "1447:   {",
          "1448:     jpeg_destroy_decompress(&cinfo);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1453:   if (img->width <= 0 || img->width > IMAGE_MAX_DIM || img->height <= 0 || img->height > IMAGE_MAX_DIM)",
          "1454:   {",
          "1455:     jpeg_destroy_decompress(&cinfo);",
          "1456:     return (-1);",
          "1457:   }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1598:   img->width  = (int)png_get_image_width(pp, info);",
          "1599:   img->height = (int)png_get_image_height(pp, info);",
          "1601:   if (color_type & PNG_COLOR_MASK_ALPHA)",
          "1602:   {",
          "1603:     if ((PSLevel == 0 && PDFVersion >= 14) || PSLevel == 3)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1614:   if (img->width <= 0 || img->width > IMAGE_MAX_DIM || img->height <= 0 || img->height > IMAGE_MAX_DIM)",
          "1615:   {",
          "1616:     png_destroy_read_struct(&pp, &info, NULL);",
          "1617:     return (-1);",
          "1618:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}