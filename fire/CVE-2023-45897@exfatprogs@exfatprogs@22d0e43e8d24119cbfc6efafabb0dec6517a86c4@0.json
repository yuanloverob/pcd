{
  "cve_id": "CVE-2023-45897",
  "cve_desc": "exfatprogs before 1.2.2 allows out-of-bounds memory access, such as in read_file_dentry_set.",
  "repo": "exfatprogs/exfatprogs",
  "patch_hash": "22d0e43e8d24119cbfc6efafabb0dec6517a86c4",
  "patch_info": {
    "commit_hash": "22d0e43e8d24119cbfc6efafabb0dec6517a86c4",
    "repo": "exfatprogs/exfatprogs",
    "commit_url": "https://github.com/exfatprogs/exfatprogs/commit/22d0e43e8d24119cbfc6efafabb0dec6517a86c4",
    "files": [
      "fsck/fsck.c"
    ],
    "message": "fsck: fix out-of-bounds memory access\n\nThe size of utf16_name is ENTRY_NAME_MAX, we should pass\nENTRY_NAME_MAX to exfat_utf16_len(), not ENTRY_NAME_MAX*2.\n\nexfat_utf16_enc() returns the length of the utf16-encoded\nfilename, it is not needed to call exfat_utf16_len().\n\nSigned-off-by: Yuezhang Mo <Yuezhang.Mo@sony.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>",
    "before_after_code_files": [
      "fsck/fsck.c||fsck/fsck.c"
    ]
  },
  "patch_diff": {
    "fsck/fsck.c||fsck/fsck.c": [
      "File: fsck/fsck.c -> fsck/fsck.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "811:   char *rename = NULL;",
      "812:   __u16 hash;",
      "813:   struct exfat_dentry *stream_de;",
      "816:   switch (num) {",
      "817:   case 1:",
      "",
      "[Removed Lines]",
      "814:   int name_len, ret;",
      "",
      "[Added Lines]",
      "814:   int ret;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "840:   if (ret < 0)",
      "841:    return ret;",
      "843:   memcpy(dentry->name_unicode, utf16_name, ENTRY_NAME_MAX * 2);",
      "846:   exfat_de_iter_get_dirty(iter, 1, &stream_de);",
      "848:   stream_de->stream_name_hash = cpu_to_le16(hash);",
      "849:  }",
      "",
      "[Removed Lines]",
      "844:   name_len = exfat_utf16_len(utf16_name, ENTRY_NAME_MAX * 2);",
      "845:   hash = exfat_calc_name_hash(iter->exfat, utf16_name, (int)name_len);",
      "847:   stream_de->stream_name_len = (__u8)name_len;",
      "",
      "[Added Lines]",
      "843:   ret >>= 1;",
      "845:   hash = exfat_calc_name_hash(iter->exfat, utf16_name, ret);",
      "847:   stream_de->stream_name_len = (__u8)ret;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "284cd95b0d089234a39677927b58ed63015406e9",
      "candidate_info": {
        "commit_hash": "284cd95b0d089234a39677927b58ed63015406e9",
        "repo": "exfatprogs/exfatprogs",
        "commit_url": "https://github.com/exfatprogs/exfatprogs/commit/284cd95b0d089234a39677927b58ed63015406e9",
        "files": [
          "fsck/fsck.c"
        ],
        "message": "fsck: do not treat volume GUID entry as unknown entry\n\nThe Volume GUID exists as a benign primary directory entry\nin the root directory and should not be deleted as an unknown\ndirectory entry.\n\nSigned-off-by: Yuezhang Mo <Yuezhang.Mo@sony.com>\nReviewed-by: Andy Wu <Andy.Wu@sony.com>\nReviewed-by: Aoyama Wataru <wataru.aoyama@sony.com>\nAcked-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>",
        "before_after_code_files": [
          "fsck/fsck.c||fsck/fsck.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/exfatprogs/exfatprogs/pull/239"
        ],
        "olp_code_files": {
          "patch": [
            "fsck/fsck.c||fsck/fsck.c"
          ],
          "candidate": [
            "fsck/fsck.c||fsck/fsck.c"
          ]
        }
      },
      "candidate_diff": {
        "fsck/fsck.c||fsck/fsck.c": [
          "File: fsck/fsck.c -> fsck/fsck.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1093:   case EXFAT_VOLUME:",
          "1094:   case EXFAT_BITMAP:",
          "1095:   case EXFAT_UPCASE:",
          "1096:    if (dir == exfat->root)",
          "1097:     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1096:   case EXFAT_GUID:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ba476603df720940a6280e6457b5c0e92dca08e",
      "candidate_info": {
        "commit_hash": "2ba476603df720940a6280e6457b5c0e92dca08e",
        "repo": "exfatprogs/exfatprogs",
        "commit_url": "https://github.com/exfatprogs/exfatprogs/commit/2ba476603df720940a6280e6457b5c0e92dca08e",
        "files": [
          "include/libexfat.h",
          "tune/tune.c"
        ],
        "message": "tune: support volume GUID\n\nThis commit adds support for adding, deleting, modifying and\nshowing volume GUID in tune.exfat.\n\nSigned-off-by: Yuezhang Mo <Yuezhang.Mo@sony.com>\nReviewed-by: Andy Wu <Andy.Wu@sony.com>\nReviewed-by: Aoyama Wataru <wataru.aoyama@sony.com>\nAcked-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>",
        "before_after_code_files": [
          "include/libexfat.h||include/libexfat.h",
          "tune/tune.c||tune/tune.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/exfatprogs/exfatprogs/pull/239"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/libexfat.h||include/libexfat.h": [
          "File: include/libexfat.h -> include/libexfat.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:  __u16 volume_label[VOLUME_LABEL_MAX_LEN];",
          "89:  int volume_label_len;",
          "90:  unsigned int volume_serial;",
          "91: };",
          "93: struct exfat;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:  const char *guid;",
          "",
          "---------------"
        ],
        "tune/tune.c||tune/tune.c": [
          "File: tune/tune.c -> tune/tune.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:  fprintf(stderr, \"Usage: tune.exfat\\n\");",
          "21:  fprintf(stderr, \"\\t-l | --print-label                    Print volume label\\n\");",
          "22:  fprintf(stderr, \"\\t-L | --set-label=label                Set volume label\\n\");",
          "23:  fprintf(stderr, \"\\t-i | --print-serial                   Print volume serial\\n\");",
          "24:  fprintf(stderr, \"\\t-I | --set-serial=value               Set volume serial\\n\");",
          "25:  fprintf(stderr, \"\\t-V | --version                        Show version\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23:  fprintf(stderr, \"\\t-u | --print-guid                     Print volume GUID\\n\");",
          "24:  fprintf(stderr, \"\\t-U | --set-guid=guid                  Set volume GUID\\n\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32: static struct option opts[] = {",
          "33:  {\"print-label\",  no_argument,  NULL, 'l' },",
          "34:  {\"set-label\",  required_argument, NULL, 'L' },",
          "35:  {\"print-serial\", no_argument,  NULL, 'i' },",
          "36:  {\"set-serial\",  required_argument, NULL, 'I' },",
          "37:  {\"version\",  no_argument,  NULL, 'V' },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:  {\"print-guid\",  no_argument,  NULL, 'u' },",
          "38:  {\"set-guid\",  required_argument, NULL, 'U' },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "59:   exfat_err(\"failed to init locale/codeset\\n\");",
          "61:  opterr = 0;",
          "63:   switch (c) {",
          "64:   case 'l':",
          "65:    flags = EXFAT_GET_VOLUME_LABEL;",
          "",
          "[Removed Lines]",
          "62:  while ((c = getopt_long(argc, argv, \"I:iL:lVvh\", opts, NULL)) != EOF)",
          "",
          "[Added Lines]",
          "66:  while ((c = getopt_long(argc, argv, \"I:iL:lU:uVvh\", opts, NULL)) != EOF)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "69:      optarg);",
          "70:    flags = EXFAT_SET_VOLUME_LABEL;",
          "71:    break;",
          "72:   case 'i':",
          "73:    flags = EXFAT_GET_VOLUME_SERIAL;",
          "74:    break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:   case 'u':",
          "77:    flags = EXFAT_GET_VOLUME_GUID;",
          "78:    break;",
          "79:   case 'U':",
          "80:    if (*optarg != '\\0' && *optarg != '\\r')",
          "81:     ui.guid = optarg;",
          "82:    flags = EXFAT_SET_VOLUME_GUID;",
          "83:    break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "140:   ret = exfat_read_volume_label(exfat);",
          "141:  else if (flags == EXFAT_SET_VOLUME_LABEL)",
          "142:   ret = exfat_set_volume_label(exfat, label_input);",
          "143: close_fd_out:",
          "144:  close(bd.dev_fd);",
          "145:  if (exfat)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "155:  else if (flags == EXFAT_GET_VOLUME_GUID)",
          "156:   ret = exfat_read_volume_guid(exfat);",
          "157:  else if (flags == EXFAT_SET_VOLUME_GUID)",
          "158:   ret = exfat_set_volume_guid(exfat, ui.guid);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ee604338e10059e22f5fe24b7ec695f09666084c",
      "candidate_info": {
        "commit_hash": "ee604338e10059e22f5fe24b7ec695f09666084c",
        "repo": "exfatprogs/exfatprogs",
        "commit_url": "https://github.com/exfatprogs/exfatprogs/commit/ee604338e10059e22f5fe24b7ec695f09666084c",
        "files": [
          "lib/exfat_dir.c"
        ],
        "message": "lib: avoid int promotion in checksum causing signed overflow\n\nThis fixes UBSan errors during fsck like:\n\nexfat_dir.c:522:54: runtime error: signed integer overflow: 2147483647 + 95\ncannot be represented in type 'int'\n\nSigned-off-by: Val Packett <val@packett.cool>\nAcked-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>",
        "before_after_code_files": [
          "lib/exfat_dir.c||lib/exfat_dir.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/exfatprogs/exfatprogs/pull/239"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/exfat_dir.c||lib/exfat_dir.c": [
          "File: lib/exfat_dir.c -> lib/exfat_dir.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "526:  bytes = (uint8_t *)dentry;",
          "531:  i = primary ? 4 : 2;",
          "534: }",
          "536: static uint16_t calc_dentry_set_checksum(struct exfat_dentry *dset, int dcount)",
          "",
          "[Removed Lines]",
          "532:  for (; i < sizeof(*dentry); i++)",
          "",
          "[Added Lines]",
          "535:  for (; i < sizeof(*dentry); i++) {",
          "538:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "559:   ch = exfat->upcase_table[le16_to_cpu(name[i])];",
          "560:   ch = cpu_to_le16(ch);",
          "564:  }",
          "565:  return chksum;",
          "566: }",
          "",
          "[Removed Lines]",
          "562:   chksum = ((chksum << 15) | (chksum >> 1)) + (ch & 0xFF);",
          "563:   chksum = ((chksum << 15) | (chksum >> 1)) + (ch >> 8);",
          "",
          "[Added Lines]",
          "568:   chksum = (chksum << 15) | (chksum >> 1);",
          "569:   chksum += ch & 0xFF;",
          "570:   chksum = (chksum << 15) | (chksum >> 1);",
          "571:   chksum += ch >> 8;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "43b6845c5ae3a59e6ad8e297a345bd75db3572b1",
      "candidate_info": {
        "commit_hash": "43b6845c5ae3a59e6ad8e297a345bd75db3572b1",
        "repo": "exfatprogs/exfatprogs",
        "commit_url": "https://github.com/exfatprogs/exfatprogs/commit/43b6845c5ae3a59e6ad8e297a345bd75db3572b1",
        "files": [
          "mkfs/mkfs.c"
        ],
        "message": "mkfs: support set volume GUID\n\nThis commits adds support for adding volume GUID in mkfs.exfat.\n\nSigned-off-by: Yuezhang Mo <Yuezhang.Mo@sony.com>\nReviewed-by: Andy Wu <Andy.Wu@sony.com>\nReviewed-by: Aoyama Wataru <wataru.aoyama@sony.com>\nAcked-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>",
        "before_after_code_files": [
          "mkfs/mkfs.c||mkfs/mkfs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/exfatprogs/exfatprogs/pull/239"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "mkfs/mkfs.c||mkfs/mkfs.c": [
          "File: mkfs/mkfs.c -> mkfs/mkfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "337: static int exfat_create_root_dir(struct exfat_blk_dev *bd,",
          "338:   struct exfat_user_input *ui)",
          "339: {",
          "342:  int nbytes;",
          "",
          "[Removed Lines]",
          "340:  struct exfat_dentry ed[3] = {0};",
          "341:  int dentries_len = sizeof(struct exfat_dentry) * 3;",
          "",
          "[Added Lines]",
          "340:  struct exfat_dentry ed[4] = {0};",
          "341:  int dentries_len = sizeof(ed);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "347:  memcpy(ed[0].vol_label, ui->volume_label, ui->volume_label_len);",
          "348:  ed[0].vol_char_cnt = ui->volume_label_len/2;",
          "362:  nbytes = pwrite(bd->dev_fd, ed, dentries_len, finfo.root_byte_off);",
          "363:  if (nbytes != dentries_len) {",
          "",
          "[Removed Lines]",
          "351:  ed[1].type = EXFAT_BITMAP;",
          "352:  ed[1].bitmap_flags = 0;",
          "353:  ed[1].bitmap_start_clu = cpu_to_le32(EXFAT_FIRST_CLUSTER);",
          "354:  ed[1].bitmap_size = cpu_to_le64(finfo.bitmap_byte_len);",
          "357:  ed[2].type = EXFAT_UPCASE;",
          "358:  ed[2].upcase_checksum = cpu_to_le32(0xe619d30d);",
          "359:  ed[2].upcase_start_clu = cpu_to_le32(finfo.ut_start_clu);",
          "360:  ed[2].upcase_size = cpu_to_le64(EXFAT_UPCASE_TABLE_SIZE);",
          "",
          "[Added Lines]",
          "351:  if (ui->guid) {",
          "352:   if (__exfat_set_volume_guid(&ed[1], ui->guid))",
          "353:    return -1;",
          "354:  } else {",
          "359:   ed[1].type = EXFAT_GUID & ~EXFAT_INVAL;",
          "360:  }",
          "363:  ed[2].type = EXFAT_BITMAP;",
          "364:  ed[2].bitmap_flags = 0;",
          "365:  ed[2].bitmap_start_clu = cpu_to_le32(EXFAT_FIRST_CLUSTER);",
          "366:  ed[2].bitmap_size = cpu_to_le64(finfo.bitmap_byte_len);",
          "369:  ed[3].type = EXFAT_UPCASE;",
          "370:  ed[3].upcase_checksum = cpu_to_le32(0xe619d30d);",
          "371:  ed[3].upcase_start_clu = cpu_to_le32(finfo.ut_start_clu);",
          "372:  ed[3].upcase_size = cpu_to_le64(EXFAT_UPCASE_TABLE_SIZE);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "373: {",
          "374:  fputs(\"Usage: mkfs.exfat\\n\"",
          "375:   \"\\t-L | --volume-label=label                              Set volume label\\n\"",
          "376:   \"\\t-c | --cluster-size=size(or suffixed by 'K' or 'M')    Specify cluster size\\n\"",
          "377:   \"\\t-b | --boundary-align=size(or suffixed by 'K' or 'M')  Specify boundary alignment\\n\"",
          "378:   \"\\t     --pack-bitmap                                     Move bitmap into FAT segment\\n\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "388:   \"\\t-U | --volume-guid=guid                                Set volume GUID\\n\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "391: static const struct option opts[] = {",
          "392:  {\"volume-label\", required_argument, NULL, 'L' },",
          "393:  {\"cluster-size\", required_argument, NULL, 'c' },",
          "394:  {\"boundary-align\", required_argument, NULL, 'b' },",
          "395:  {\"pack-bitmap\",  no_argument,  NULL, PACK_BITMAP },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "406:  {\"volume-guid\",  required_argument, NULL, 'U' },",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "615:   exfat_err(\"failed to init locale/codeset\\n\");",
          "617:  opterr = 0;",
          "619:   switch (c) {",
          "",
          "[Removed Lines]",
          "618:  while ((c = getopt_long(argc, argv, \"n:L:c:b:fVqvh\", opts, NULL)) != EOF)",
          "",
          "[Added Lines]",
          "632:  while ((c = getopt_long(argc, argv, \"n:L:U:c:b:fVqvh\", opts, NULL)) != EOF)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "632:    ui.volume_label_len = ret;",
          "633:    break;",
          "634:   }",
          "635:   case 'c':",
          "636:    ret = parse_size(optarg);",
          "637:    if (ret < 0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "649:   case 'U':",
          "650:    if (*optarg != '\\0' && *optarg != '\\r')",
          "651:     ui.guid = optarg;",
          "652:    break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fc65d9a08bd5d15e996dae66099d515b1969edd9",
      "candidate_info": {
        "commit_hash": "fc65d9a08bd5d15e996dae66099d515b1969edd9",
        "repo": "exfatprogs/exfatprogs",
        "commit_url": "https://github.com/exfatprogs/exfatprogs/commit/fc65d9a08bd5d15e996dae66099d515b1969edd9",
        "files": [
          "lib/exfat_dir.c"
        ],
        "message": "lib: fix filename comparison\n\nFilename comparison should include one more unicode character\nif there are unused characters. Otherwise, files with the same\nprefix may be found. For example, lookup a file named \"19\" but\nreturns a file named \"192\".\n\nSigned-off-by: Yuezhang Mo <Yuezhang.Mo@sony.com>\nReviewed-by: Andy Wu <Andy.Wu@sony.com>\nReviewed-by: Aoyama Wataru <wataru.aoyama@sony.com>\nAcked-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>",
        "before_after_code_files": [
          "lib/exfat_dir.c||lib/exfat_dir.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/exfatprogs/exfatprogs/pull/239"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/exfat_dir.c||lib/exfat_dir.c": [
          "File: lib/exfat_dir.c -> lib/exfat_dir.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "472:   if (retval || name_de->type != EXFAT_NAME)",
          "473:    return 1;",
          "476:   if (memcmp(name_de->dentry.name.unicode_0_14,",
          "477:       name, len * 2) != 0)",
          "478:    return 1;",
          "",
          "[Removed Lines]",
          "475:   len = MIN(name_len, ENTRY_NAME_MAX);",
          "",
          "[Added Lines]",
          "475:   len = MIN(name_len + 1, ENTRY_NAME_MAX);",
          "",
          "---------------"
        ]
      }
    }
  ]
}