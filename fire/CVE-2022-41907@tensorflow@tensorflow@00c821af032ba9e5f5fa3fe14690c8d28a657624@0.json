{
  "cve_id": "CVE-2022-41907",
  "cve_desc": "TensorFlow is an open source platform for machine learning. When `tf.raw_ops.ResizeNearestNeighborGrad` is given a large `size` input, it overflows. We have patched the issue in GitHub commit 00c821af032ba9e5f5fa3fe14690c8d28a657624. The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "00c821af032ba9e5f5fa3fe14690c8d28a657624",
  "patch_info": {
    "commit_hash": "00c821af032ba9e5f5fa3fe14690c8d28a657624",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/00c821af032ba9e5f5fa3fe14690c8d28a657624",
    "files": [
      "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
      "tensorflow/python/ops/image_ops_test.py"
    ],
    "message": "Fix tf.raw_ops.ResizeNearestNeighborGrad vulnerability with large dimensions.\n\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\nPiperOrigin-RevId: 479141644",
    "before_after_code_files": [
      "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc||tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
      "tensorflow/python/ops/image_ops_test.py||tensorflow/python/ops/image_ops_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc||tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc": [
      "File: tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc -> tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "257:     const int64_t out_width = sizes(1);",
      "259:     Tensor* output = nullptr;",
      "267:     if (output->NumElements() == 0) return;",
      "",
      "[Removed Lines]",
      "260:     OP_REQUIRES_OK(",
      "261:         context,",
      "262:         context->allocate_output(",
      "263:             0, TensorShape({batch_size, out_height, out_width, channels}),",
      "264:             &output));",
      "",
      "[Added Lines]",
      "260:     TensorShape shape;",
      "261:     OP_REQUIRES_OK(context,",
      "262:                    TensorShape::BuildTensorShape(",
      "263:                        {batch_size, out_height, out_width, channels}, &shape));",
      "264:     OP_REQUIRES_OK(context, context->allocate_output(0, shape, &output));",
      "",
      "---------------"
    ],
    "tensorflow/python/ops/image_ops_test.py||tensorflow/python/ops/image_ops_test.py": [
      "File: tensorflow/python/ops/image_ops_test.py -> tensorflow/python/ops/image_ops_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "4175:     self._assertReturns(x, x_shape, y, y_shape)",
      "4178: class ResizeImageWithCropOrPadTest(test_util.TensorFlowTestCase):",
      "4180:   def _ResizeImageWithCropOrPad(self, x, target_height, target_width,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4178: class ResizeNearestNeighborGrad(test_util.TensorFlowTestCase):",
      "4180:   def testSizeTooLarge(self):",
      "4181:     align_corners = True",
      "4182:     half_pixel_centers = False",
      "4183:     grads = constant_op.constant(1, shape=[1, 8, 16, 3], dtype=dtypes.float16)",
      "4184:     size = constant_op.constant([1879048192, 1879048192],",
      "4185:                                 shape=[2],",
      "4186:                                 dtype=dtypes.int32)",
      "4187:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
      "4188:                                 r\"Encountered overflow when multiplying\"):",
      "4189:       self.evaluate(",
      "4190:           gen_image_ops.ResizeNearestNeighborGrad(",
      "4191:               grads=grads,",
      "4192:               size=size,",
      "4193:               align_corners=align_corners,",
      "4194:               half_pixel_centers=half_pixel_centers))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5fd09dfa978500839865a1f2d77f5c0fc1a3ab96",
      "candidate_info": {
        "commit_hash": "5fd09dfa978500839865a1f2d77f5c0fc1a3ab96",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/5fd09dfa978500839865a1f2d77f5c0fc1a3ab96",
        "files": [
          "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
          "tensorflow/python/ops/image_ops_test.py"
        ],
        "message": "Fix tf.raw_ops.ResizeNearestNeighborGrad vulnerability with large dimensions. (#57995)\n\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\nPiperOrigin-RevId: 479141644",
        "before_after_code_files": [
          "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc||tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
          "tensorflow/python/ops/image_ops_test.py||tensorflow/python/ops/image_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc||tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
            "tensorflow/python/ops/image_ops_test.py||tensorflow/python/ops/image_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc||tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
            "tensorflow/python/ops/image_ops_test.py||tensorflow/python/ops/image_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc||tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc": [
          "File: tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc -> tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "257:     const int64_t out_width = sizes(1);",
          "259:     Tensor* output = nullptr;",
          "267:     if (output->NumElements() == 0) return;",
          "",
          "[Removed Lines]",
          "260:     OP_REQUIRES_OK(",
          "261:         context,",
          "262:         context->allocate_output(",
          "263:             0, TensorShape({batch_size, out_height, out_width, channels}),",
          "264:             &output));",
          "",
          "[Added Lines]",
          "260:     TensorShape shape;",
          "261:     OP_REQUIRES_OK(context,",
          "262:                    TensorShape::BuildTensorShape(",
          "263:                        {batch_size, out_height, out_width, channels}, &shape));",
          "264:     OP_REQUIRES_OK(context, context->allocate_output(0, shape, &output));",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/image_ops_test.py||tensorflow/python/ops/image_ops_test.py": [
          "File: tensorflow/python/ops/image_ops_test.py -> tensorflow/python/ops/image_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4005:     self._assertReturns(x, x_shape, y, y_shape)",
          "4008: class ResizeImageWithCropOrPadTest(test_util.TensorFlowTestCase):",
          "4010:   def _ResizeImageWithCropOrPad(self, x, target_height, target_width,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4008: class ResizeNearestNeighborGrad(test_util.TensorFlowTestCase):",
          "4010:   def testSizeTooLarge(self):",
          "4011:     align_corners = True",
          "4012:     half_pixel_centers = False",
          "4013:     grads = constant_op.constant(1, shape=[1, 8, 16, 3], dtype=dtypes.float16)",
          "4014:     size = constant_op.constant([1879048192, 1879048192],",
          "4015:                                 shape=[2],",
          "4016:                                 dtype=dtypes.int32)",
          "4017:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
          "4018:                                 r\"Encountered overflow when multiplying\"):",
          "4019:       self.evaluate(",
          "4020:           gen_image_ops.ResizeNearestNeighborGrad(",
          "4021:               grads=grads,",
          "4022:               size=size,",
          "4023:               align_corners=align_corners,",
          "4024:               half_pixel_centers=half_pixel_centers))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "36df7362a299f10df62395915d1c1570783da54b",
      "candidate_info": {
        "commit_hash": "36df7362a299f10df62395915d1c1570783da54b",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/36df7362a299f10df62395915d1c1570783da54b",
        "files": [
          "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
          "tensorflow/python/ops/image_ops_test.py"
        ],
        "message": "Fix tf.raw_ops.ResizeNearestNeighborGrad vulnerability with large dimensions. (#57997)\n\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\nPiperOrigin-RevId: 479141644",
        "before_after_code_files": [
          "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc||tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
          "tensorflow/python/ops/image_ops_test.py||tensorflow/python/ops/image_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc||tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
            "tensorflow/python/ops/image_ops_test.py||tensorflow/python/ops/image_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc||tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
            "tensorflow/python/ops/image_ops_test.py||tensorflow/python/ops/image_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc||tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc": [
          "File: tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc -> tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "257:     const int64_t out_width = sizes(1);",
          "259:     Tensor* output = nullptr;",
          "267:     if (output->NumElements() == 0) return;",
          "",
          "[Removed Lines]",
          "260:     OP_REQUIRES_OK(",
          "261:         context,",
          "262:         context->allocate_output(",
          "263:             0, TensorShape({batch_size, out_height, out_width, channels}),",
          "264:             &output));",
          "",
          "[Added Lines]",
          "260:     TensorShape shape;",
          "261:     OP_REQUIRES_OK(context,",
          "262:                    TensorShape::BuildTensorShape(",
          "263:                        {batch_size, out_height, out_width, channels}, &shape));",
          "264:     OP_REQUIRES_OK(context, context->allocate_output(0, shape, &output));",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/image_ops_test.py||tensorflow/python/ops/image_ops_test.py": [
          "File: tensorflow/python/ops/image_ops_test.py -> tensorflow/python/ops/image_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4152:     self._assertReturns(x, x_shape, y, y_shape)",
          "4155: class ResizeImageWithCropOrPadTest(test_util.TensorFlowTestCase):",
          "4157:   def _ResizeImageWithCropOrPad(self, x, target_height, target_width,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4155: class ResizeNearestNeighborGrad(test_util.TensorFlowTestCase):",
          "4157:   def testSizeTooLarge(self):",
          "4158:     align_corners = True",
          "4159:     half_pixel_centers = False",
          "4160:     grads = constant_op.constant(1, shape=[1, 8, 16, 3], dtype=dtypes.float16)",
          "4161:     size = constant_op.constant([1879048192, 1879048192],",
          "4162:                                 shape=[2],",
          "4163:                                 dtype=dtypes.int32)",
          "4164:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
          "4165:                                 r\"Encountered overflow when multiplying\"):",
          "4166:       self.evaluate(",
          "4167:           gen_image_ops.ResizeNearestNeighborGrad(",
          "4168:               grads=grads,",
          "4169:               size=size,",
          "4170:               align_corners=align_corners,",
          "4171:               half_pixel_centers=half_pixel_centers))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bbe35ceb7ba7932fcfcb0363992ade76a340f8af",
      "candidate_info": {
        "commit_hash": "bbe35ceb7ba7932fcfcb0363992ade76a340f8af",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/bbe35ceb7ba7932fcfcb0363992ade76a340f8af",
        "files": [
          "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
          "tensorflow/python/ops/image_ops_test.py"
        ],
        "message": "Fix tf.raw_ops.ResizeNearestNeighborGrad vulnerability with large dimensions. (#57996)\n\nNote: This fix will have to be cherry picked in r2.10, r2.9, and r2.8.\nPiperOrigin-RevId: 479141644",
        "before_after_code_files": [
          "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc||tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
          "tensorflow/python/ops/image_ops_test.py||tensorflow/python/ops/image_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc||tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
            "tensorflow/python/ops/image_ops_test.py||tensorflow/python/ops/image_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc||tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
            "tensorflow/python/ops/image_ops_test.py||tensorflow/python/ops/image_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc||tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc": [
          "File: tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc -> tensorflow/core/kernels/image/resize_nearest_neighbor_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "257:     const int64_t out_width = sizes(1);",
          "259:     Tensor* output = nullptr;",
          "267:     if (output->NumElements() == 0) return;",
          "",
          "[Removed Lines]",
          "260:     OP_REQUIRES_OK(",
          "261:         context,",
          "262:         context->allocate_output(",
          "263:             0, TensorShape({batch_size, out_height, out_width, channels}),",
          "264:             &output));",
          "",
          "[Added Lines]",
          "260:     TensorShape shape;",
          "261:     OP_REQUIRES_OK(context,",
          "262:                    TensorShape::BuildTensorShape(",
          "263:                        {batch_size, out_height, out_width, channels}, &shape));",
          "264:     OP_REQUIRES_OK(context, context->allocate_output(0, shape, &output));",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/image_ops_test.py||tensorflow/python/ops/image_ops_test.py": [
          "File: tensorflow/python/ops/image_ops_test.py -> tensorflow/python/ops/image_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4152:     self._assertReturns(x, x_shape, y, y_shape)",
          "4155: class ResizeImageWithCropOrPadTest(test_util.TensorFlowTestCase):",
          "4157:   def _ResizeImageWithCropOrPad(self, x, target_height, target_width,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4155: class ResizeNearestNeighborGrad(test_util.TensorFlowTestCase):",
          "4157:   def testSizeTooLarge(self):",
          "4158:     align_corners = True",
          "4159:     half_pixel_centers = False",
          "4160:     grads = constant_op.constant(1, shape=[1, 8, 16, 3], dtype=dtypes.float16)",
          "4161:     size = constant_op.constant([1879048192, 1879048192],",
          "4162:                                 shape=[2],",
          "4163:                                 dtype=dtypes.int32)",
          "4164:     with self.assertRaisesRegex(errors.InvalidArgumentError,",
          "4165:                                 r\"Encountered overflow when multiplying\"):",
          "4166:       self.evaluate(",
          "4167:           gen_image_ops.ResizeNearestNeighborGrad(",
          "4168:               grads=grads,",
          "4169:               size=size,",
          "4170:               align_corners=align_corners,",
          "4171:               half_pixel_centers=half_pixel_centers))",
          "",
          "---------------"
        ]
      }
    }
  ]
}