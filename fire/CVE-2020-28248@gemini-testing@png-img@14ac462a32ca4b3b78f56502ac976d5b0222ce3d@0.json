{
  "cve_id": "CVE-2020-28248",
  "cve_desc": "An integer overflow in the PngImg::InitStorage_() function of png-img before 3.1.0 leads to an under-allocation of heap memory and subsequently an exploitable heap-based buffer overflow when loading a crafted PNG file.",
  "repo": "gemini-testing/png-img",
  "patch_hash": "14ac462a32ca4b3b78f56502ac976d5b0222ce3d",
  "patch_info": {
    "commit_hash": "14ac462a32ca4b3b78f56502ac976d5b0222ce3d",
    "repo": "gemini-testing/png-img",
    "commit_url": "https://github.com/gemini-testing/png-img/commit/14ac462a32ca4b3b78f56502ac976d5b0222ce3d",
    "files": [
      "src/PngImg.cc"
    ],
    "message": "Handle image size overflow",
    "before_after_code_files": [
      "src/PngImg.cc||src/PngImg.cc"
    ]
  },
  "patch_diff": {
    "src/PngImg.cc||src/PngImg.cc": [
      "File: src/PngImg.cc -> src/PngImg.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "61: void PngImg::InitStorage_() {",
      "62:     rowPtrs_.resize(info_.height, nullptr);",
      "65:     for(size_t i = 0; i < info_.height; ++i) {",
      "67:     }",
      "68: }",
      "",
      "[Removed Lines]",
      "63:     data_ = new png_byte[info_.height * info_.rowbytes];",
      "66:         rowPtrs_[i] = data_ + i * info_.rowbytes;",
      "",
      "[Added Lines]",
      "64:     size_t h = info_.height;",
      "65:     size_t rb = info_.rowbytes;",
      "69:     if (h > std::numeric_limits<size_t>::max() / rb) {",
      "71:         throw std::runtime_error(\"Image is too large to allocate single buffer\");",
      "72:     }",
      "73:     data_ = new png_byte[h * rb];",
      "76:         rowPtrs_[i] = data_ + i * rb;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9fedfccb9ab2d1ccee4d7d544f3e03d505317352",
      "candidate_info": {
        "commit_hash": "9fedfccb9ab2d1ccee4d7d544f3e03d505317352",
        "repo": "gemini-testing/png-img",
        "commit_url": "https://github.com/gemini-testing/png-img/commit/9fedfccb9ab2d1ccee4d7d544f3e03d505317352",
        "files": [
          "binding.gyp"
        ],
        "message": "Enable C++ exceptions",
        "before_after_code_files": [
          "binding.gyp||binding.gyp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/gemini-testing/png-img/pull/53"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "binding.gyp||binding.gyp": [
          "File: binding.gyp -> binding.gyp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:         \"<(src_dir)/PngImgAdapter.cc\",",
          "11:         \"<(src_dir)/PngImg.cc\"",
          "12:       ],",
          "13:       \"include_dirs\": [",
          "14:         \"<!(node -e \\\"require('nan')\\\")\",",
          "15:       ],",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13:       \"cflags!\": [ \"-fno-exceptions\" ],",
          "14:       \"cflags_cc!\": [ \"-fno-exceptions\" ],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "21:             \"xcode_settings\": {",
          "22:                 \"OTHER_CPLUSPLUSFLAGS\" : [\"-std=c++11\", \"-stdlib=libc++\"],",
          "23:                 \"OTHER_LDFLAGS\": [\"-stdlib=libc++\"],",
          "25:             }",
          "26:         }],",
          "27:         [ \"OS=='linux'\", {",
          "",
          "[Removed Lines]",
          "24:                 \"MACOSX_DEPLOYMENT_TARGET\": \"10.7\"",
          "",
          "[Added Lines]",
          "26:                 \"MACOSX_DEPLOYMENT_TARGET\": \"10.7\",",
          "27:                 \"GCC_ENABLE_CPP_EXCEPTIONS\": \"YES\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "30:         [ \"OS=='win'\", {",
          "31:           \"msvs_settings\": {",
          "32:             \"VCCLCompilerTool\": {",
          "34:             },",
          "35:             \"VCLinkerTool\": {",
          "36:               \"GenerateDebugInformation\": \"false\" # Avoid 'incorrect MSPDB120.DLL version' link error",
          "",
          "[Removed Lines]",
          "33:               \"AdditionalOptions\": [\"/EHsc\", \"/wd4506\"]",
          "",
          "[Added Lines]",
          "36:               \"ExceptionHandling\": 1,",
          "37:               \"AdditionalOptions\": [\"/wd4506\"]",
          "",
          "---------------"
        ]
      }
    }
  ]
}