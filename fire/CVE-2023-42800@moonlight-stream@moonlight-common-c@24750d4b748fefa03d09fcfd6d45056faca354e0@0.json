{
  "cve_id": "CVE-2023-42800",
  "cve_desc": "Moonlight-common-c contains the core GameStream client code shared between Moonlight clients. Moonlight-common-c is vulnerable to buffer overflow starting in commit 50c0a51b10ecc5b3415ea78c21d96d679e2288f9 due to unmitigated usage of unsafe C functions and improper bounds checking. A malicious game streaming server could exploit a buffer overflow vulnerability to crash a moonlight client, or achieve remote code execution (RCE) on the client (with insufficient exploit mitigations or if mitigations can be bypassed). The bug was addressed in commit 24750d4b748fefa03d09fcfd6d45056faca354e0.",
  "repo": "moonlight-stream/moonlight-common-c",
  "patch_hash": "24750d4b748fefa03d09fcfd6d45056faca354e0",
  "patch_info": {
    "commit_hash": "24750d4b748fefa03d09fcfd6d45056faca354e0",
    "repo": "moonlight-stream/moonlight-common-c",
    "commit_url": "https://github.com/moonlight-stream/moonlight-common-c/commit/24750d4b748fefa03d09fcfd6d45056faca354e0",
    "files": [
      "src/RtspConnection.c"
    ],
    "message": "Fix buffer overflow in performRtspHandshake (CVE-2023-42800)",
    "before_after_code_files": [
      "src/RtspConnection.c||src/RtspConnection.c"
    ]
  },
  "patch_diff": {
    "src/RtspConnection.c||src/RtspConnection.c": [
      "File: src/RtspConnection.c -> src/RtspConnection.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "776:             (StreamConfig.streamingRemotely != STREAM_CFG_REMOTE || CHANNEL_COUNT_FROM_AUDIO_CONFIGURATION(StreamConfig.audioConfiguration) <= 2)) {",
      "778:         if (serverInfo->rtspSessionUrl != NULL && parseUrlAddrFromRtspUrlString(serverInfo->rtspSessionUrl, urlAddr, sizeof(urlAddr))) {",
      "780:         }",
      "781:         else {",
      "",
      "[Removed Lines]",
      "779:             strcpy(rtspTargetUrl, serverInfo->rtspSessionUrl);",
      "",
      "[Added Lines]",
      "779:             PltSafeStrcpy(rtspTargetUrl, sizeof(rtspTargetUrl), serverInfo->rtspSessionUrl);",
      "780:             rtspTargetUrl[sizeof(rtspTargetUrl) - 1] = '\\0';",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1351f382aa2d4da54ce93717b2c772ec8af5a6ec",
      "candidate_info": {
        "commit_hash": "1351f382aa2d4da54ce93717b2c772ec8af5a6ec",
        "repo": "moonlight-stream/moonlight-common-c",
        "commit_url": "https://github.com/moonlight-stream/moonlight-common-c/commit/1351f382aa2d4da54ce93717b2c772ec8af5a6ec",
        "files": [
          "src/RtspConnection.c"
        ],
        "message": "Minor cleanups to RTSP URL parsing",
        "before_after_code_files": [
          "src/RtspConnection.c||src/RtspConnection.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/RtspConnection.c||src/RtspConnection.c"
          ],
          "candidate": [
            "src/RtspConnection.c||src/RtspConnection.c"
          ]
        }
      },
      "candidate_diff": {
        "src/RtspConnection.c||src/RtspConnection.c": [
          "File: src/RtspConnection.c -> src/RtspConnection.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "702:     }",
          "707:     free(rtspUrlScratchBuffer);",
          "708:     return true;",
          "",
          "[Removed Lines]",
          "704:     PltSafeStrcpy(destination, destinationLength, rtspUrlScratchBuffer + prefixLen);",
          "705:     destination[destinationLength - 1] = '\\0';",
          "",
          "[Added Lines]",
          "704:     if (!PltSafeStrcpy(destination, destinationLength, rtspUrlScratchBuffer + prefixLen)) {",
          "705:         free(rtspUrlScratchBuffer);",
          "706:         return false;",
          "707:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "774:     if (OriginalVideoBitrate >= HIGH_AUDIO_BITRATE_THRESHOLD &&",
          "775:             (AudioCallbacks.capabilities & CAPABILITY_SLOW_OPUS_DECODER) == 0 &&",
          "776:             (StreamConfig.streamingRemotely != STREAM_CFG_REMOTE || CHANNEL_COUNT_FROM_AUDIO_CONFIGURATION(StreamConfig.audioConfiguration) <= 2)) {",
          "788:             addrToUrlSafeString(&RemoteAddr, urlAddr, sizeof(urlAddr));",
          "790:         }",
          "791:     }",
          "792:     else {",
          "793:         PltSafeStrcpy(urlAddr, sizeof(urlAddr), \"0.0.0.0\");",
          "795:     }",
          "797:     switch (AppVersionQuad[0]) {",
          "",
          "[Removed Lines]",
          "778:         if (serverInfo->rtspSessionUrl != NULL && parseUrlAddrFromRtspUrlString(serverInfo->rtspSessionUrl, urlAddr, sizeof(urlAddr))) {",
          "779:             PltSafeStrcpy(rtspTargetUrl, sizeof(rtspTargetUrl), serverInfo->rtspSessionUrl);",
          "780:             rtspTargetUrl[sizeof(rtspTargetUrl) - 1] = '\\0';",
          "781:         }",
          "782:         else {",
          "789:    snprintf(rtspTargetUrl, sizeof(rtspTargetUrl), \"rtsp%s://%s:%u\", useEnet ? \"ru\" : \"\", urlAddr, RtspPortNumber);",
          "794:   snprintf(rtspTargetUrl, sizeof(rtspTargetUrl), \"rtsp%s://%s:%u\", useEnet ? \"ru\" : \"\", urlAddr, RtspPortNumber);",
          "",
          "[Added Lines]",
          "780:         if (serverInfo->rtspSessionUrl == NULL ||",
          "781:                 !parseUrlAddrFromRtspUrlString(serverInfo->rtspSessionUrl, urlAddr, sizeof(urlAddr)) ||",
          "782:                 !PltSafeStrcpy(rtspTargetUrl, sizeof(rtspTargetUrl), serverInfo->rtspSessionUrl)) {",
          "789:             snprintf(rtspTargetUrl, sizeof(rtspTargetUrl), \"rtsp%s://%s:%u\", useEnet ? \"ru\" : \"\", urlAddr, RtspPortNumber);",
          "794:         snprintf(rtspTargetUrl, sizeof(rtspTargetUrl), \"rtsp%s://%s:%u\", useEnet ? \"ru\" : \"\", urlAddr, RtspPortNumber);",
          "",
          "---------------"
        ]
      }
    }
  ]
}