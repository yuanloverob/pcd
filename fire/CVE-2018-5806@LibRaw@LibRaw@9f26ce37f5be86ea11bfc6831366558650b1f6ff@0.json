{
  "cve_id": "CVE-2018-5806",
  "cve_desc": "An error within the \"leaf_hdr_load_raw()\" function (internal/dcraw_common.cpp) in LibRaw versions prior to 0.18.8 can be exploited to trigger a NULL pointer dereference.",
  "repo": "LibRaw/LibRaw",
  "patch_hash": "9f26ce37f5be86ea11bfc6831366558650b1f6ff",
  "patch_info": {
    "commit_hash": "9f26ce37f5be86ea11bfc6831366558650b1f6ff",
    "repo": "LibRaw/LibRaw",
    "commit_url": "https://github.com/LibRaw/LibRaw/commit/9f26ce37f5be86ea11bfc6831366558650b1f6ff",
    "files": [
      "Changelog.txt",
      "dcraw/dcraw.c",
      "internal/dcraw_common.cpp",
      "libraw/libraw_version.h"
    ],
    "message": "SA81000: LibRaw 0.18.8",
    "before_after_code_files": [
      "dcraw/dcraw.c||dcraw/dcraw.c",
      "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
      "libraw/libraw_version.h||libraw/libraw_version.h"
    ]
  },
  "patch_diff": {
    "dcraw/dcraw.c||dcraw/dcraw.c": [
      "File: dcraw/dcraw.c -> dcraw/dcraw.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2365:   unsigned tile=0, r, c, row, col;",
      "2367:   if (!filters) {",
      "2368:     pixel = (ushort *) calloc (raw_width, sizeof *pixel);",
      "2369:     merror (pixel, \"leaf_hdr_load_raw()\");",
      "2370:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2368: #ifdef LIBRAW_LIBRARY_BUILD",
      "2369:     if(!image)",
      "2370:       throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "2371: #endif",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2894:     654,665,676,687,698,710,721,732,743,754,766,777,788,799,810,822,833,844,",
      "2895:     855,866,878,889,900,911,922,933,945,956,967,978,989,1001,1012,1023 };",
      "2896:   int rb, row, col, sharp, val=0;",
      "2898:   getbits(-1);",
      "2899:   memset (pixel, 0x80, sizeof pixel);",
      "2900:   for (row=2; row < height+2; row++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2901: #ifdef LIBRAW_LIBRARY_BUILD",
      "2902:   if(width>640 || height > 480)",
      "2903:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "2904: #endif",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "15649:     i = get4();",
      "15650:     width = get2();",
      "15651:     height = get2();",
      "15659:   } else if (!memcmp (head,\"ARRI\",4)) {",
      "15660:     order = 0x4949;",
      "15661:     fseek (ifp, 20, SEEK_SET);",
      "",
      "[Removed Lines]",
      "15652:     switch (tiff_bps = i*8 / (width * height)) {",
      "15653:       case  8: load_raw = &CLASS eight_bit_load_raw;  break;",
      "15654:       case 10: load_raw = &CLASS nokia_load_raw;",
      "15655:     }",
      "15656:     raw_height = height + (top_margin = i / (width * tiff_bps/8) - height);",
      "15657:     mask[0][3] = 1;",
      "15658:     filters = 0x61616161;",
      "",
      "[Added Lines]",
      "15660: #ifdef LIBRAW_LIBRARY_BUILD",
      "15662:     if(width*height < (LIBRAW_MAX_ALLOC_MB*1024*512L) && width*height>1",
      "15663:        && i >= width * height && i <= width*height*2)",
      "15664:       {",
      "15665: #endif",
      "15666:  switch (tiff_bps = i*8 / (width * height)) {",
      "15667:  case  8: load_raw = &CLASS eight_bit_load_raw;  break;",
      "15668:  case 10: load_raw = &CLASS nokia_load_raw;",
      "15669:  }",
      "15670:  raw_height = height + (top_margin = i / (width * tiff_bps/8) - height);",
      "15671:  mask[0][3] = 1;",
      "15672:  filters = 0x61616161;",
      "15673: #ifdef LIBRAW_LIBRARY_BUILD",
      "15674:       }",
      "15675:     else",
      "15676:       is_raw = 0;",
      "15677: #endif",
      "",
      "---------------"
    ],
    "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
      "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "2077:   unsigned tile=0, r, c, row, col;",
      "2079:   if (!filters) {",
      "2080:     pixel = (ushort *) calloc (raw_width, sizeof *pixel);",
      "2081:     merror (pixel, \"leaf_hdr_load_raw()\");",
      "2082:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2080: #ifdef LIBRAW_LIBRARY_BUILD",
      "2081:     if(!image)",
      "2082:       throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "2083: #endif",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2606:     654,665,676,687,698,710,721,732,743,754,766,777,788,799,810,822,833,844,",
      "2607:     855,866,878,889,900,911,922,933,945,956,967,978,989,1001,1012,1023 };",
      "2608:   int rb, row, col, sharp, val=0;",
      "2610:   getbits(-1);",
      "2611:   memset (pixel, 0x80, sizeof pixel);",
      "2612:   for (row=2; row < height+2; row++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2613: #ifdef LIBRAW_LIBRARY_BUILD",
      "2614:   if(width>640 || height > 480)",
      "2615:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "2616: #endif",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "14311:     i = get4();",
      "14312:     width = get2();",
      "14313:     height = get2();",
      "14321:   } else if (!memcmp (head,\"ARRI\",4)) {",
      "14322:     order = 0x4949;",
      "14323:     fseek (ifp, 20, SEEK_SET);",
      "",
      "[Removed Lines]",
      "14314:     switch (tiff_bps = i*8 / (width * height)) {",
      "14315:       case  8: load_raw = &CLASS eight_bit_load_raw;  break;",
      "14316:       case 10: load_raw = &CLASS nokia_load_raw;",
      "14317:     }",
      "14318:     raw_height = height + (top_margin = i / (width * tiff_bps/8) - height);",
      "14319:     mask[0][3] = 1;",
      "14320:     filters = 0x61616161;",
      "",
      "[Added Lines]",
      "14322: #ifdef LIBRAW_LIBRARY_BUILD",
      "14324:     if(width*height < (LIBRAW_MAX_ALLOC_MB*1024*512L) && width*height>1",
      "14325:        && i >= width * height && i <= width*height*2)",
      "14326:       {",
      "14327: #endif",
      "14328:  switch (tiff_bps = i*8 / (width * height)) {",
      "14329:  case  8: load_raw = &CLASS eight_bit_load_raw;  break;",
      "14330:  case 10: load_raw = &CLASS nokia_load_raw;",
      "14331:  }",
      "14332:  raw_height = height + (top_margin = i / (width * tiff_bps/8) - height);",
      "14333:  mask[0][3] = 1;",
      "14334:  filters = 0x61616161;",
      "14335: #ifdef LIBRAW_LIBRARY_BUILD",
      "14336:       }",
      "14337:     else",
      "14338:       is_raw = 0;",
      "14339: #endif",
      "",
      "---------------"
    ],
    "libraw/libraw_version.h||libraw/libraw_version.h": [
      "File: libraw/libraw_version.h -> libraw/libraw_version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "23: #define LIBRAW_MAJOR_VERSION  0",
      "24: #define LIBRAW_MINOR_VERSION  18",
      "26: #define LIBRAW_VERSION_TAIL   Release",
      "28: #define LIBRAW_SHLIB_CURRENT   16",
      "",
      "[Removed Lines]",
      "25: #define LIBRAW_PATCH_VERSION  7",
      "",
      "[Added Lines]",
      "25: #define LIBRAW_PATCH_VERSION  8",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a928f13e5d211c5c7120448b1994ea47d7f791ba",
      "candidate_info": {
        "commit_hash": "a928f13e5d211c5c7120448b1994ea47d7f791ba",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/a928f13e5d211c5c7120448b1994ea47d7f791ba",
        "files": [
          "Changelog.txt",
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp"
        ],
        "message": "SA81000",
        "before_after_code_files": [
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
          ]
        }
      },
      "candidate_diff": {
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2728:   if (!filters || !raw_image)",
          "2729:   {",
          "2730:     pixel = (ushort *)calloc(raw_width, sizeof *pixel);",
          "2731:     merror(pixel, \"leaf_hdr_load_raw()\");",
          "2732:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2730: #ifdef LIBRAW_LIBRARY_BUILD",
          "2731:     if(!image)",
          "2732:       throw LIBRAW_EXCEPTION_IO_CORRUPT;",
          "2733: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3332:       631, 643, 654, 665, 676, 687, 698, 710, 721, 732, 743, 754,  766,  777, 788, 799, 810, 822, 833, 844, 855, 866,",
          "3333:       878, 889, 900, 911, 922, 933, 945, 956, 967, 978, 989, 1001, 1012, 1023};",
          "3334:   int rb, row, col, sharp, val = 0;",
          "3336:   getbits(-1);",
          "3337:   memset(pixel, 0x80, sizeof pixel);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3339: #ifdef LIBRAW_LIBRARY_BUILD",
          "3340:   if(width>640 || height > 480)",
          "3341:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
          "3342: #endif",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "2431:   if (!filters || !raw_image)",
          "2432:   {",
          "2433:     pixel = (ushort *)calloc(raw_width, sizeof *pixel);",
          "2434:     merror(pixel, \"leaf_hdr_load_raw()\");",
          "2435:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2433: #ifdef LIBRAW_LIBRARY_BUILD",
          "2434:     if(!image)",
          "2435:       throw LIBRAW_EXCEPTION_IO_CORRUPT;",
          "2436: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3035:       631, 643, 654, 665, 676, 687, 698, 710, 721, 732, 743, 754,  766,  777, 788, 799, 810, 822, 833, 844, 855, 866,",
          "3036:       878, 889, 900, 911, 922, 933, 945, 956, 967, 978, 989, 1001, 1012, 1023};",
          "3037:   int rb, row, col, sharp, val = 0;",
          "3039:   getbits(-1);",
          "3040:   memset(pixel, 0x80, sizeof pixel);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3042: #ifdef LIBRAW_LIBRARY_BUILD",
          "3043:   if(width>640 || height > 480)",
          "3044:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
          "3045: #endif",
          "",
          "---------------"
        ]
      }
    }
  ]
}