{
  "cve_id": "CVE-2024-25115",
  "cve_desc": "RedisBloom adds a set of probabilistic data structures to Redis. Starting in version 2.0.0 and prior to version 2.4.7 and 2.6.10, specially crafted `CF.LOADCHUNK` commands may be used by authenticated users to perform heap overflow, which may lead to remote code execution. The problem is fixed in RedisBloom 2.4.7 and 2.6.10.\n",
  "repo": "RedisBloom/RedisBloom",
  "patch_hash": "2f3b38394515fc6c9b130679bcd2435a796a49ad",
  "patch_info": {
    "commit_hash": "2f3b38394515fc6c9b130679bcd2435a796a49ad",
    "repo": "RedisBloom/RedisBloom",
    "commit_url": "https://github.com/RedisBloom/RedisBloom/commit/2f3b38394515fc6c9b130679bcd2435a796a49ad",
    "files": [
      "src/cf.c",
      "src/rebloom.c",
      "tests/flow/test_cuckoo.py"
    ],
    "message": "MOD-6344 Fix potential crash for cf.scandump and cf.loadchunk (#726)\n\nAdd boundary checks for cf.scandump and cf.loadchunk\n\nCo-authored-by: Ozan Tezcan <ozantezcan@gmail.com>",
    "before_after_code_files": [
      "src/cf.c||src/cf.c",
      "src/rebloom.c||src/rebloom.c",
      "tests/flow/test_cuckoo.py||tests/flow/test_cuckoo.py"
    ]
  },
  "patch_diff": {
    "src/cf.c||src/cf.c": [
      "File: src/cf.c -> src/cf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "84: }",
      "86: int CF_LoadEncodedChunk(const CuckooFilter *cf, long long pos, const char *data, size_t datalen) {",
      "88:         return REDISMODULE_ERR;",
      "89:     }",
      "",
      "[Removed Lines]",
      "87:     if (datalen == 0) {",
      "",
      "[Added Lines]",
      "87:     if (datalen == 0 || pos <= 0 || (size_t)(pos - 1) < datalen) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "102:         offset -= currentSize;",
      "103:     }",
      "106:     memcpy(filter->data + offset, data, datalen);",
      "107:     return REDISMODULE_OK;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "106:     if (!filter || ((size_t)offset > SIZE_MAX - datalen) ||",
      "107:         filter->bucketSize * filter->numBuckets < offset + datalen) {",
      "108:         return REDISMODULE_ERR;",
      "109:     }",
      "",
      "---------------"
    ],
    "src/rebloom.c||src/rebloom.c": [
      "File: src/rebloom.c -> src/rebloom.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "850:     }",
      "852:     long long pos;",
      "854:         return RedisModule_ReplyWithError(ctx, \"Invalid position\");",
      "855:     }",
      "",
      "[Removed Lines]",
      "853:     if (RedisModule_StringToLongLong(argv[2], &pos) != REDISMODULE_OK) {",
      "",
      "[Added Lines]",
      "853:     if (RedisModule_StringToLongLong(argv[2], &pos) != REDISMODULE_OK || pos < 0) {",
      "",
      "---------------"
    ],
    "tests/flow/test_cuckoo.py||tests/flow/test_cuckoo.py": [
      "File: tests/flow/test_cuckoo.py -> tests/flow/test_cuckoo.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "454:         # check loaded filter",
      "455:         for x in range(6):",
      "456:             self.assertEqual(1, self.cmd('cf.exists', 'cf', 'foo'))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "458:     def test_scandump_invalid(self):",
      "459:         self.cmd('FLUSHALL')",
      "460:         self.cmd('cf.reserve', 'cf', 4)",
      "461:         self.assertRaises(ResponseError, self.cmd, 'cf.loadchunk', 'cf', '-9223372036854775808', '1')",
      "462:         self.assertRaises(ResponseError, self.cmd, 'cf.loadchunk', 'cf', '922337203685477588', '1')",
      "463:         self.assertRaises(ResponseError, self.cmd, 'cf.loadchunk', 'cf', '4', 'kdoasdksaodsadsadsadsadsadadsadadsdad')",
      "464:         self.assertRaises(ResponseError, self.cmd, 'cf.loadchunk', 'cf', '4', 'abcd')",
      "465:         self.cmd('cf.add', 'cf', 'x')",
      "466:         self.assertRaises(ResponseError, self.cmd, 'cf.scandump', 'cf', '-1')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "36f53902b88d44530169fad7a881098b49ec8ee9",
      "candidate_info": {
        "commit_hash": "36f53902b88d44530169fad7a881098b49ec8ee9",
        "repo": "RedisBloom/RedisBloom",
        "commit_url": "https://github.com/RedisBloom/RedisBloom/commit/36f53902b88d44530169fad7a881098b49ec8ee9",
        "files": [
          "src/version.h"
        ],
        "message": "bump version 2.6.10",
        "before_after_code_files": [
          "src/version.h||src/version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RedisBloom/RedisBloom/pull/859"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/version.h||src/version.h": [
          "File: src/version.h -> src/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #endif",
          "19: #ifndef REBLOOM_VERSION_PATCH",
          "21: #endif",
          "23: #define REBLOOM_MODULE_VERSION                                                                     \\",
          "",
          "[Removed Lines]",
          "20: #define REBLOOM_VERSION_PATCH 9",
          "",
          "[Added Lines]",
          "20: #define REBLOOM_VERSION_PATCH 10",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a71bb387eda7ceacf0ac4499f0ff238d70f42e6e",
      "candidate_info": {
        "commit_hash": "a71bb387eda7ceacf0ac4499f0ff238d70f42e6e",
        "repo": "RedisBloom/RedisBloom",
        "commit_url": "https://github.com/RedisBloom/RedisBloom/commit/a71bb387eda7ceacf0ac4499f0ff238d70f42e6e",
        "files": [
          "src/version.h"
        ],
        "message": "see MOD-7532, bump version 2.6.14 (#19)",
        "before_after_code_files": [
          "src/version.h||src/version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RedisBloom/RedisBloom/pull/859"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/version.h||src/version.h": [
          "File: src/version.h -> src/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #endif",
          "19: #ifndef REBLOOM_VERSION_PATCH",
          "21: #endif",
          "23: #define REBLOOM_MODULE_VERSION                                                                     \\",
          "",
          "[Removed Lines]",
          "20: #define REBLOOM_VERSION_PATCH 13",
          "",
          "[Added Lines]",
          "20: #define REBLOOM_VERSION_PATCH 14",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f468ce86e96689134de057624b9b467ccf28e306",
      "candidate_info": {
        "commit_hash": "f468ce86e96689134de057624b9b467ccf28e306",
        "repo": "RedisBloom/RedisBloom",
        "commit_url": "https://github.com/RedisBloom/RedisBloom/commit/f468ce86e96689134de057624b9b467ccf28e306",
        "files": [
          "src/version.h"
        ],
        "message": "see MOD-7094, bump version 2.6.13",
        "before_after_code_files": [
          "src/version.h||src/version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RedisBloom/RedisBloom/pull/859"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/version.h||src/version.h": [
          "File: src/version.h -> src/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #endif",
          "19: #ifndef REBLOOM_VERSION_PATCH",
          "21: #endif",
          "23: #define REBLOOM_MODULE_VERSION                                                                     \\",
          "",
          "[Removed Lines]",
          "20: #define REBLOOM_VERSION_PATCH 12",
          "",
          "[Added Lines]",
          "20: #define REBLOOM_VERSION_PATCH 13",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d2991104bc455727a70d9d55d07302afd30d614",
      "candidate_info": {
        "commit_hash": "2d2991104bc455727a70d9d55d07302afd30d614",
        "repo": "RedisBloom/RedisBloom",
        "commit_url": "https://github.com/RedisBloom/RedisBloom/commit/2d2991104bc455727a70d9d55d07302afd30d614",
        "files": [
          "src/rm_cms.c",
          "tests/flow/test_cms.py"
        ],
        "message": "Fix 753 (#758)\n\nFix crash when cms.merge weights do not match number of keys\n\n- Fixes issue #753.\n- In line 193 there was '&&' instead of '||'.\n- Some streamline of code.",
        "before_after_code_files": [
          "src/rm_cms.c||src/rm_cms.c",
          "tests/flow/test_cms.py||tests/flow/test_cms.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RedisBloom/RedisBloom/pull/859"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/rm_cms.c||src/rm_cms.c": [
          "File: src/rm_cms.c -> src/rm_cms.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "186:     long long numKeys = params->numKeys;",
          "187:     int pos = RMUtil_ArgIndex(\"WEIGHTS\", argv, argc);",
          "188:     if (pos < 0) {",
          "190:             INNER_ERROR(\"CMS: wrong number of keys\");",
          "191:         }",
          "192:     } else {",
          "194:             INNER_ERROR(\"CMS: wrong number of keys/weights\");",
          "195:         }",
          "196:     }",
          "203:     size_t width = params->dest->width;",
          "204:     size_t depth = params->dest->depth;",
          "206:     for (int i = 0; i < numKeys; ++i) {",
          "207:         if (pos == -1) {",
          "208:             params->weights[i] = 1;",
          "210:                    REDISMODULE_OK) {",
          "211:             INNER_ERROR(\"CMS: invalid weight value\");",
          "212:         }",
          "215:             return REDISMODULE_ERR;",
          "216:         }",
          "217:         if (params->cmsArray[i]->width != width || params->cmsArray[i]->depth != depth) {",
          "",
          "[Removed Lines]",
          "189:         if (numKeys != argc - 3) {",
          "193:         if ((pos != 3 + numKeys) && (argc != 4 + numKeys * 2)) {",
          "198:     if (GetCMSKey(ctx, argv[1], &(params->dest), REDISMODULE_READ | REDISMODULE_WRITE) !=",
          "199:         REDISMODULE_OK) {",
          "200:         return REDISMODULE_ERR;",
          "201:     }",
          "209:         } else if (RedisModule_StringToLongLong(argv[3 + numKeys + 1 + i], &(params->weights[i])) !=",
          "213:         if (GetCMSKey(ctx, argv[3 + i], &(params->cmsArray[i]), REDISMODULE_READ) !=",
          "214:             REDISMODULE_OK) {",
          "",
          "[Added Lines]",
          "189:         if (numKeys != argc) {",
          "193:         if ((pos != numKeys) || (argc != 1 + numKeys * 2)) {",
          "204:         } else if (RedisModule_StringToLongLong(argv[numKeys + 1 + i], &(params->weights[i])) !=",
          "208:         if (GetCMSKey(ctx, argv[i], &(params->cmsArray[i]), REDISMODULE_READ) != REDISMODULE_OK) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "229:     }",
          "231:     mergeParams params = {0};",
          "232:     if (RedisModule_StringToLongLong(argv[2], &(params.numKeys)) != REDISMODULE_OK) {",
          "233:         return RedisModule_ReplyWithError(ctx, \"CMS: invalid numkeys\");",
          "234:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "227:     if (GetCMSKey(ctx, argv[1], &(params.dest), REDISMODULE_READ | REDISMODULE_WRITE) !=",
          "228:         REDISMODULE_OK) {",
          "229:         return REDISMODULE_ERR;",
          "230:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "236:     params.cmsArray = CMS_CALLOC(params.numKeys, sizeof(CMSketch *));",
          "237:     params.weights = CMS_CALLOC(params.numKeys, sizeof(long long));",
          "240:         CMS_FREE(params.cmsArray);",
          "241:         CMS_FREE(params.weights);",
          "242:         return REDISMODULE_OK;",
          "",
          "[Removed Lines]",
          "239:     if (parseMergeArgs(ctx, argv, argc, &params) != REDISMODULE_OK) {",
          "",
          "[Added Lines]",
          "239:     if (parseMergeArgs(ctx, argv + 3, argc - 3, &params) != REDISMODULE_OK) {",
          "",
          "---------------"
        ],
        "tests/flow/test_cms.py||tests/flow/test_cms.py": [
          "File: tests/flow/test_cms.py -> tests/flow/test_cms.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:         self.assertRaises(ResponseError, self.cmd, 'cms.merge', 'foo', 3, 'foo', 'weights', 'B')",
          "163:         self.assertRaises(ResponseError, self.cmd, 'cms.merge', 'foo', 'A', 'foo', 'weights', 1)",
          "164:         self.assertRaises(ResponseError, self.cmd, 'cms.merge', 'foo', 3, 'bar', 'baz' 'weights', 1, 'a')",
          "166:     def test_merge_extensive(self):",
          "167:         self.cmd('FLUSHALL')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "165:         self.assertRaises(ResponseError, self.cmd, 'cms.merge', 'foo', 3, 'bar', 'baz' 'weights', 1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "56b0974680607a120c8d81d8cec0328c4ef6ce9c",
      "candidate_info": {
        "commit_hash": "56b0974680607a120c8d81d8cec0328c4ef6ce9c",
        "repo": "RedisBloom/RedisBloom",
        "commit_url": "https://github.com/RedisBloom/RedisBloom/commit/56b0974680607a120c8d81d8cec0328c4ef6ce9c",
        "files": [
          "Makefile",
          "pack/ramp.yml",
          "sbin/pack.sh"
        ],
        "message": "Enhance packaging scripts to support additional arguments and improve module handling in Makefile and pack.sh (#839)\n\n(cherry picked from commit cbb18311ce60812ea256915dbbfbcca5d6c360e1)",
        "before_after_code_files": [
          "sbin/pack.sh||sbin/pack.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RedisBloom/RedisBloom/pull/859"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sbin/pack.sh||sbin/pack.sh": [
          "File: sbin/pack.sh -> sbin/pack.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:  cat <<-END",
          "19:   Generate RedisBloom distribution packages.",
          "23:   Argument variables:",
          "26:   RAMP=0|1            Build RAMP package",
          "27:   DEPS=0|1            Build dependencies files",
          "28:   SYM=0|1             Build debug symbols file",
          "30:   BRANCH=name         Branch name for snapshot packages",
          "31:   WITH_GITSHA=1       Append Git SHA to shapshot package names",
          "",
          "[Removed Lines]",
          "21:   [ARGVARS...] pack.sh [--help|help]",
          "24:   MODULE=path         Path of module .so",
          "",
          "[Added Lines]",
          "21:   [ARGVARS...] pack.sh [--help|help] [<module-so-path>]",
          "27:   RELEASE=1           Generate \"release\" packages (artifacts/release/)",
          "28:   SNAPSHOT=1          Generate \"shapshot\" packages (artifacts/snapshot/)",
          "30:   MODULE_NAME=name    Module name (default: bf)",
          "31:   PACKAGE_NAME=name   Package stem name",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35:   ARTDIR=dir          Directory in which packages are created (default: bin/artifacts)",
          "37:   JUST_PRINT=1        Only print package names, do not generate",
          "38:   VERBOSE=1           Print commands",
          "39:   HELP=1              Show help",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:   RAMP_YAML=path      RAMP configuration file path",
          "41:   RAMP_ARGS=args      Extra arguments to RAMP",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "70: [[ $OSNICK == rocky8 ]]  && OSNICK=rhel8",
          "71: [[ $OSNICK == rocky9 ]]  && OSNICK=rhel9",
          "73: PLATFORM=\"$OS-$OSNICK-$ARCH\"",
          "75: #----------------------------------------------------------------------------------------------",
          "82: RAMP=${RAMP:-1}",
          "86: [[ -z $ARTDIR ]] && ARTDIR=bin/artifacts",
          "87: mkdir -p $ARTDIR $ARTDIR/snapshots",
          "88: ARTDIR=$(cd $ARTDIR && pwd)",
          "90: PACKAGE_NAME=redisbloom",
          "92: DEP_NAMES=\"\"",
          "",
          "[Removed Lines]",
          "77: if [[ -z $MODULE || ! -f $MODULE ]]; then",
          "78:  eprint \"MODULE is not defined or does not refer to a file\"",
          "79:  exit 1",
          "80: fi",
          "83: DEPS=${DEPS:-0}",
          "84: SYM=${SYM:-0}",
          "",
          "[Added Lines]",
          "84: MODULE=\"$1\"",
          "87: DEPS=${DEPS:-1}",
          "88: SYM=${SYM:-1}",
          "90: RELEASE=${RELEASE:-1}",
          "91: SNAPSHOT=${SNAPSHOT:-1}",
          "97: #----------------------------------------------------------------------------------------------",
          "99: MODULE_NAME=${MODULE_NAME:-bf}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "99:  cd $ROOT",
          "101:  local stem=${PACKAGE_NAME}.${PLATFORM}",
          "105:  local fq_package=$stem.${verspec}.zip",
          "111:  local xtx_vars=\"\"",
          "116:  elif [[ -z $RAMP_VARIANT ]]; then",
          "118:  else",
          "120:  fi",
          "122:  python3 $READIES/bin/xtx \\",
          "",
          "[Removed Lines]",
          "103:  local verspec=${SEMVER}${_VARIANT}",
          "107:  [[ ! -d $ARTDIR ]] && mkdir -p $ARTDIR",
          "109:  local packfile=\"$ARTDIR/$fq_package\"",
          "112:  local dep_fname=\"${PACKAGE_NAME}.${PLATFORM}.${verspec}.tgz\"",
          "114:  if [[ -z $RAMP_YAML ]]; then",
          "115:   RAMP_YAML=$ROOT/ramp.yml",
          "117:   RAMP_YAML=$ROOT/ramp.yml",
          "119:   RAMP_YAML=$ROOT/ramp${_RAMP_VARIANT}.yml",
          "",
          "[Added Lines]",
          "112:  local stem_debug=${PACKAGE_NAME}.debug.${PLATFORM}",
          "114:  if [[ $SNAPSHOT == 0 ]]; then",
          "115:   local verspec=${SEMVER}${VARIANT}",
          "116:   local packdir=.",
          "117:   local s3base=\"\"",
          "118:  else",
          "119:   local verspec=${BRANCH}${VARIANT}",
          "120:   local packdir=snapshots",
          "121:   local s3base=snapshots/",
          "122:  fi",
          "125:  local fq_package_debug=$stem_debug.${verspec}.zip",
          "127:  [[ ! -d $ARTDIR/$packdir ]] && mkdir -p $ARTDIR/$packdir",
          "129:  local packfile=$ARTDIR/$packdir/$fq_package",
          "130:  local packfile_debug=$ARTDIR/$packdir/$fq_package_debug",
          "133:  for dep in $DEP_NAMES; do",
          "134:   eval \"export NAME_${dep}=${PACKAGE_NAME}_${dep}\"",
          "135:   local dep_fname=\"${PACKAGE_NAME}.${dep}.${PLATFORM}.${verspec}.tgz\"",
          "136:   eval \"export PATH_${dep}=${s3base}${dep_fname}\"",
          "137:   local dep_sha256=\"$ARTDIR/$packdir/${dep_fname}.sha256\"",
          "138:   eval \"export SHA256_${dep}=$(cat $dep_sha256)\"",
          "140:   xtx_vars+=\" -e NAME_$dep -e PATH_$dep -e SHA256_$dep\"",
          "141:  done",
          "143:  if [[ -n $RAMP_YAML ]]; then",
          "144:   RAMP_YAML=\"$(realpath $RAMP_YAML)\"",
          "146:   RAMP_YAML=\"$ROOT/pack/ramp.yml\"",
          "148:   RAMP_YAML=\"$ROOT/pack/ramp${_RAMP_VARIANT}.yml\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "129:  fi",
          "131:  runn rm -f /tmp/ramp.fname $packfile",
          "133:  # ROOT is required so ramp will detect the right git commit",
          "134:  cd $ROOT",
          "135:  runn @ <<-EOF",
          "136:   $RAMP_CMD pack -m /tmp/ramp.yml \\",
          "137:    $RAMP_ARGS \\",
          "138:    --verbose \\",
          "139:    --debug \\",
          "140:    --packname-file /tmp/ramp.fname \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167:    -n $MODULE_NAME \\",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "150:    exit 1",
          "151:   else",
          "152:    local packname=`cat /tmp/ramp.fname`",
          "154:   fi",
          "155:  fi",
          "161:  fi",
          "165:  cd $ROOT",
          "166: }",
          "",
          "[Removed Lines]",
          "153:    echo \"# Created $packname\"",
          "157:  cd $ARTDIR/snapshots",
          "158:  if [[ ! -z $BRANCH ]]; then",
          "159:   local snap_package=$stem.${BRANCH}${_VARIANT}.zip",
          "160:   ln -sf ../$fq_package $snap_package",
          "163:  local packname=`cat /tmp/ramp.fname`",
          "164:  echo \"Created $packname\"",
          "",
          "[Added Lines]",
          "183:    echo \"# Created $(realpath $packname)\"",
          "187:  if [[ -f $MODULE.debug ]]; then",
          "188:   runn @ <<-EOF",
          "189:    $RAMP_CMD pack -m /tmp/ramp.yml \\",
          "190:     $RAMP_ARGS \\",
          "191:     -n $MODULE_NAME \\",
          "192:     --verbose \\",
          "193:     --debug \\",
          "194:     --packname-file /tmp/ramp.fname \\",
          "195:     -o $packfile_debug \\",
          "196:     $MODULE.debug \\",
          "197:     >/tmp/ramp.err 2>&1 || true",
          "198:    EOF",
          "200:   if [[ $NOP != 1 ]]; then",
          "201:    if [[ ! -e $packfile_debug ]]; then",
          "202:     eprint \"Error generating RAMP file:\"",
          "203:     >&2 cat /tmp/ramp.err",
          "204:     exit 1",
          "205:    else",
          "206:     local packname=`cat /tmp/ramp.fname`",
          "207:     echo \"# Created $(realpath $packname)\"",
          "208:    fi",
          "209:   fi",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "170: pack_deps() {",
          "171:  local dep=\"$1\"",
          "173:  local stem=${PACKAGE_NAME}.${dep}.${PLATFORM}",
          "176:  local depdir=$(cat $ARTDIR/$dep.dir)",
          "180:  local dep_prefix_dir=$(cat $ARTDIR/$dep.prefix)",
          "194:  fi",
          "195:  runn @ <<-EOF",
          "197:   EOF",
          "199:  cd $ARTDIR/snapshots",
          "200:  if [[ -n $BRANCH ]]; then",
          "204:  fi",
          "206:  cd $ROOT",
          "",
          "[Removed Lines]",
          "174:  local verspec=${SEMVER}${_VARIANT}",
          "178:  local fq_dep=$stem.${verspec}.tgz",
          "179:  local tar_path=$ARTDIR/$fq_dep",
          "182:  { cd $depdir ;\\",
          "183:    cat $ARTDIR/$dep.files | \\",
          "184:    xargs tar -c --sort=name --owner=root:0 --group=root:0 --mtime='UTC 1970-01-01' \\",
          "185:   --transform \"s,^,$dep_prefix_dir,\" 2> /tmp/pack.err | \\",
          "186:    gzip -n - > $tar_path ; E=$?; } || true",
          "187:  rm -f $ARTDIR/$dep.prefix $ARTDIR/$dep.files $ARTDIR/$dep.dir",
          "189:  cd $ROOT",
          "190:  if [[ $E != 0 || -s /tmp/pack.err ]]; then",
          "191:   eprint \"Error creating $tar_path:\"",
          "192:   cat /tmp/pack.err >&2",
          "193:   exit 1",
          "196:   sha256sum $tar_path | awk '{print $1}' > $tar_path.sha256",
          "201:   local snap_dep=$stem.${BRANCH}${_VARIANT}.tgz",
          "202:   runn ln -sf ../$fq_dep $snap_dep",
          "203:   runn ln -sf ../$fq_dep.sha256 $snap_dep.sha256",
          "",
          "[Added Lines]",
          "220:  cd $ROOT",
          "223:  local verspec=${SEMVER}${VARIANT}",
          "224:  local fq_package=$stem.${verspec}.tgz",
          "227:  local tar_path=$ARTDIR/$fq_package",
          "230:  rm -f $tar_path",
          "231:  if [[ $NOP != 1 ]]; then",
          "232:   { cd $depdir ;\\",
          "233:     cat $ARTDIR/$dep.files | \\",
          "234:     xargs tar -c --sort=name --owner=root:0 --group=root:0 --mtime='UTC 1970-01-01' \\",
          "235:    --transform \"s,^,$dep_prefix_dir,\" 2> /tmp/pack.err | \\",
          "236:     gzip -n - > $tar_path ; E=$?; } || true",
          "237:   if [[ ! -e $tar_path || -z $(tar tzf $tar_path) ]]; then",
          "238:    eprint \"Count not create $tar_path. Aborting.\"",
          "239:    rm -f $tar_path",
          "240:    exit 1",
          "241:   fi",
          "242:  else",
          "243:   runn @ <<-EOF",
          "244:    cd $depdir",
          "245:    cat $ARTDIR/$dep.files | \\",
          "246:    xargs tar -c --sort=name --owner=root:0 --group=root:0 --mtime='UTC 1970-01-01' \\",
          "247:     --transform \"s,^,$dep_prefix_dir,\" 2> /tmp/pack.err | \\",
          "248:    gzip -n - > $tar_path ; E=$?; } || true",
          "249:    EOF",
          "252:   sha256sum $tar_path | gawk '{print $1}' > $tar_path.sha256",
          "255:  mkdir -p $ARTDIR/snapshots",
          "258:   local snap_package=$stem.${BRANCH}${VARIANT}.tgz",
          "259:   runn ln -sf ../$fq_package $snap_package",
          "260:   runn ln -sf ../$fq_package.sha256 $snap_package.sha256",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "209: #----------------------------------------------------------------------------------------------",
          "223: NUMVER=\"$(NUMERIC=1 $SBIN/getver)\"",
          "224: SEMVER=\"$($SBIN/getver)\"",
          "",
          "[Removed Lines]",
          "211: prepare_symbols_dep() {",
          "212:  if [[ ! -f $MODULE.debug ]]; then return 0; fi",
          "213:  echo \"# Preparing debug symbols dependencies ...\"",
          "214:  echo $(cd \"$(dirname $MODULE)\" && pwd) > $ARTDIR/debug.dir",
          "215:  echo $(basename $MODULE.debug) > $ARTDIR/debug.files",
          "216:  echo \"\" > $ARTDIR/debug.prefix",
          "217:  pack_deps debug",
          "218:  echo \"# Done.\"",
          "219: }",
          "221: #----------------------------------------------------------------------------------------------",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "233: #----------------------------------------------------------------------------------------------",
          "235: if [[ -z $BRANCH ]]; then",
          "236:  BRANCH=$(git rev-parse --abbrev-ref HEAD)",
          "237:  # this happens of detached HEAD",
          "238:  if [[ $BRANCH == HEAD ]]; then",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "280: git_config_add_ifnx() {",
          "281:  local key=\"$1\"",
          "282:  local val=\"$2\"",
          "283:  if [[ -z $(git config --global --get $key $val) ]]; then",
          "284:   git config --global --add $key $val",
          "285:  fi",
          "286: }",
          "289:  git_config_add_ifnx safe.directory $ROOT",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "241: fi",
          "242: BRANCH=${BRANCH//[^A-Za-z0-9._-]/_}",
          "243: if [[ $WITH_GITSHA == 1 ]]; then",
          "244:  GIT_COMMIT=$(git rev-parse --short HEAD)",
          "245:  BRANCH=\"${BRANCH}-${GIT_COMMIT}\"",
          "246: fi",
          "249: #----------------------------------------------------------------------------------------------",
          "251: if [[ $JUST_PRINT == 1 ]]; then",
          "252:  if [[ $RAMP == 1 ]]; then",
          "254:  fi",
          "255:  if [[ $DEPS == 1 ]]; then",
          "259:  fi",
          "260:  exit 0",
          "261: fi",
          "",
          "[Removed Lines]",
          "247: export BRANCH",
          "253:   echo \"${PACKAGE_NAME}.${OS}-${OSNICK}-${ARCH}.${SEMVER}${VARIANT}.zip\"",
          "256:   for dep in $DEP_NAMES; do",
          "257:    echo \"${PACKAGE_NAME}.${dep}.${OS}-${OSNICK}-${ARCH}.${SEMVER}${VARIANT}.tgz\"",
          "258:   done",
          "",
          "[Added Lines]",
          "298:  git_config_add_ifnx safe.directory $ROOT",
          "303: #----------------------------------------------------------------------------------------------",
          "305: RELEASE_ramp=${PACKAGE_NAME}.$OS-$OSNICK-$ARCH.$SEMVER${VARIANT}.zip",
          "306: SNAPSHOT_ramp=${PACKAGE_NAME}.$OS-$OSNICK-$ARCH.${BRANCH}${VARIANT}.zip",
          "308: RELEASE_deps=",
          "309: SNAPSHOT_deps=",
          "310: for dep in $DEP_NAMES; do",
          "311:  RELEASE_deps+=\" ${PACKAGE_NAME}.${dep}.$OS-$OSNICK-$ARCH.$SEMVER${VARIANT}.tgz\"",
          "312:  SNAPSHOT_deps+=\" ${PACKAGE_NAME}.${dep}.$OS-$OSNICK-$ARCH.${BRANCH}${VARIANT}.tgz\"",
          "313: done",
          "319:   [[ $RELEASE == 1 ]] && echo $RELEASE_ramp",
          "320:   [[ $SNAPSHOT == 1 ]] && echo $SNAPSHOT_ramp",
          "323:   [[ $RELEASE == 1 ]] && echo $RELEASE_deps",
          "324:   [[ $SNAPSHOT == 1 ]] && echo $SNAPSHOT_deps",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "265: mkdir -p $ARTDIR",
          "272:  for dep in $DEP_NAMES; do",
          "275:  done",
          "276:  echo \"# Done.\"",
          "277: fi",
          "",
          "[Removed Lines]",
          "267: if [[ $DEPS == 1 ]]; then",
          "268:  echo \"# Building dependencies ...\"",
          "270:  [[ $SYM == 1 ]] && prepare_symbols_dep",
          "273:   echo \"# $dep ...\"",
          "274:   pack_deps $dep",
          "",
          "[Added Lines]",
          "333: if [[ $DEPS == 1 && -n $DEP_NAMES ]]; then",
          "334:  # set up `debug` dep",
          "335:  dirname \"$(realpath \"$MODULE\")\" > \"$ARTDIR/debug.dir\"",
          "336:  echo \"$(basename \"$(realpath \"$MODULE\")\").debug\" > \"$ARTDIR/debug.files\"",
          "337:  echo \"\" > $ARTDIR/debug.prefix",
          "339:  echo \"# Building dependencies ...\"",
          "342:   if [[ $OS != macos ]]; then",
          "343:    echo \"# $dep ...\"",
          "344:    pack_deps $dep",
          "345:   fi",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "287:  fi",
          "289:  echo \"# Building RAMP $RAMP_VARIANT files ...\"",
          "291:  echo \"# Done.\"",
          "292: fi",
          "",
          "[Removed Lines]",
          "290:  pack_ramp",
          "",
          "[Added Lines]",
          "362:  [[ -z $MODULE ]] && { eprint \"Nothing to pack. Aborting.\"; exit 1; }",
          "363:  [[ ! -f $MODULE ]] && { eprint \"$MODULE does not exist. Aborting.\"; exit 1; }",
          "364:  MODULE=$(realpath $MODULE)",
          "366:  [[ $RELEASE == 1 ]] && SNAPSHOT=0 pack_ramp",
          "367:  [[ $SNAPSHOT == 1 ]] && pack_ramp",
          "",
          "---------------"
        ]
      }
    }
  ]
}