{
  "cve_id": "CVE-2017-13030",
  "cve_desc": "The PIM parser in tcpdump before 4.9.2 has a buffer over-read in print-pim.c, several functions.",
  "repo": "the-tcpdump-group/tcpdump",
  "patch_hash": "5dc1860d8267b1e0cb78c9ffa2a40bea2fdb3ddc",
  "patch_info": {
    "commit_hash": "5dc1860d8267b1e0cb78c9ffa2a40bea2fdb3ddc",
    "repo": "the-tcpdump-group/tcpdump",
    "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/5dc1860d8267b1e0cb78c9ffa2a40bea2fdb3ddc",
    "files": [
      "print-pim.c",
      "tests/TESTLIST",
      "tests/heapoverflow-in_checksum.out",
      "tests/pim_header_asan.out",
      "tests/pim_header_asan.pcap"
    ],
    "message": "CVE-2017-13030/PIM: Redo bounds checks and add length checks.\n\nUse ND_TCHECK macros to do bounds checking, and add length checks before\nthe bounds checks.\n\nAdd a bounds check that the review process found was missing.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.\n\nUpdate one test output file to reflect the changes.",
    "before_after_code_files": [
      "print-pim.c||print-pim.c"
    ]
  },
  "patch_diff": {
    "print-pim.c||print-pim.c": [
      "File: print-pim.c -> print-pim.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "169:   return;",
      "170:  }",
      "172:  ND_TCHECK2(bp[0], sizeof(struct in_addr));",
      "173:  if (ndo->ndo_vflag > 1)",
      "174:   ND_PRINT((ndo, \"\\n\"));",
      "175:  ND_PRINT((ndo, \" Upstream Nbr: %s\", ipaddr_string(ndo, bp)));",
      "177:  if (ndo->ndo_vflag > 1)",
      "178:   ND_PRINT((ndo, \"\\n\"));",
      "179:  ND_PRINT((ndo, \" Hold time: \"));",
      "181:  if (ndo->ndo_vflag < 2)",
      "182:   return;",
      "186:  ND_TCHECK2(bp[0], 4);",
      "187:  ngroups = bp[3];",
      "188:  bp += 4;",
      "",
      "[Removed Lines]",
      "176:  ND_TCHECK2(bp[6], 2);",
      "180:  unsigned_relts_print(ndo, EXTRACT_16BITS(&bp[6]));",
      "183:  bp += 8;",
      "184:  len -= 8;",
      "",
      "[Added Lines]",
      "172:  if (len < sizeof(struct in_addr))",
      "173:   goto trunc;",
      "178:  bp += 4;",
      "179:  len -= 4;",
      "180:  if (len < 4)",
      "181:   goto trunc;",
      "182:  ND_TCHECK2(bp[2], 2);",
      "186:  unsigned_relts_print(ndo, EXTRACT_16BITS(&bp[2]));",
      "189:  bp += 4;",
      "190:  len -= 4;",
      "192:  if (len < 4)",
      "193:   goto trunc;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "195:   ND_TCHECK2(bp[0], sizeof(struct in_addr));",
      "196:   ND_PRINT((ndo, \"\\n\\tGroup: %s\", ipaddr_string(ndo, bp)));",
      "203:   ND_PRINT((ndo, \" joined: %d pruned: %d\", njoin, nprune));",
      "206:   for (njp = 0; njp < (njoin + nprune); njp++) {",
      "207:    const char *type;",
      "",
      "[Removed Lines]",
      "197:   ND_TCHECK2(bp[4], sizeof(struct in_addr));",
      "198:   if (EXTRACT_32BITS(&bp[4]) != 0xffffffff)",
      "199:    ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, &bp[4])));",
      "200:   ND_TCHECK2(bp[8], 4);",
      "201:   njoin = EXTRACT_16BITS(&bp[8]);",
      "202:   nprune = EXTRACT_16BITS(&bp[10]);",
      "204:   bp += 12;",
      "205:   len -= 12;",
      "",
      "[Added Lines]",
      "203:   if (len < 4)",
      "204:    goto trunc;",
      "207:   bp += 4;",
      "208:   len -= 4;",
      "209:   if (len < 4)",
      "210:    goto trunc;",
      "211:   ND_TCHECK2(bp[0], sizeof(struct in_addr));",
      "212:   if (EXTRACT_32BITS(&bp[0]) != 0xffffffff)",
      "213:    ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, &bp[0])));",
      "214:   bp += 4;",
      "215:   len -= 4;",
      "216:   if (len < 4)",
      "217:    goto trunc;",
      "218:   ND_TCHECK2(bp[0], 4);",
      "219:   njoin = EXTRACT_16BITS(&bp[0]);",
      "220:   nprune = EXTRACT_16BITS(&bp[2]);",
      "222:   bp += 4;",
      "223:   len -= 4;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "210:     type = \"Join \";",
      "211:    else",
      "212:     type = \"Prune\";",
      "213:    ND_TCHECK2(bp[0], 6);",
      "214:    ND_PRINT((ndo, \"\\n\\t%s %s%s%s%s/%d\", type,",
      "215:        (bp[0] & 0x01) ? \"Sparse \" : \"Dense \",",
      "216:        (bp[1] & 0x80) ? \"WC \" : \"\",",
      "217:        (bp[1] & 0x40) ? \"RP \" : \"SPT \",",
      "219:    bp += 6;",
      "220:    len -= 6;",
      "221:   }",
      "",
      "[Removed Lines]",
      "218:    ipaddr_string(ndo, &bp[2]), bp[1] & 0x3f));",
      "",
      "[Added Lines]",
      "231:    if (len < 6)",
      "232:     goto trunc;",
      "238:        ipaddr_string(ndo, &bp[2]),",
      "239:        bp[1] & 0x3f));",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "230: pimv1_print(netdissect_options *ndo,",
      "231:             register const u_char *bp, register u_int len)",
      "232: {",
      "234:  register u_char type;",
      "240:  ND_TCHECK(bp[1]);",
      "241:  type = bp[1];",
      "",
      "[Removed Lines]",
      "233:  register const u_char *ep;",
      "236:  ep = (const u_char *)ndo->ndo_snapend;",
      "237:  if (bp >= ep)",
      "238:   return;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "302:  case PIMV1_TYPE_JOIN_PRUNE:",
      "303:  case PIMV1_TYPE_GRAFT:",
      "304:  case PIMV1_TYPE_GRAFT_ACK:",
      "306:    pimv1_join_prune_print(ndo, &bp[8], len - 8);",
      "307:   break;",
      "308:  }",
      "309:  ND_TCHECK(bp[4]);",
      "",
      "[Removed Lines]",
      "305:   if (ndo->ndo_vflag)",
      "",
      "[Added Lines]",
      "321:   if (ndo->ndo_vflag) {",
      "322:    if (len < 8)",
      "323:     goto trunc;",
      "325:   }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "330:  int numrps;",
      "331:  int hold;",
      "333:  ND_TCHECK(bp[0]);",
      "334:  ND_PRINT((ndo, \" auto-rp \"));",
      "335:  type = bp[0];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "352:  if (len < 8)",
      "353:   goto trunc;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "377:   int nentries;",
      "378:   char s;",
      "380:   ND_TCHECK2(bp[0], 4);",
      "381:   ND_PRINT((ndo, \" RP %s\", ipaddr_string(ndo, bp)));",
      "384:   case 0: ND_PRINT((ndo, \" PIMv?\"));",
      "385:    break;",
      "386:   case 1: ND_PRINT((ndo, \" PIMv1\"));",
      "",
      "[Removed Lines]",
      "382:   ND_TCHECK(bp[4]);",
      "383:   switch (bp[4] & 0x3) {",
      "",
      "[Added Lines]",
      "401:   if (len < 4)",
      "402:    goto trunc;",
      "405:   bp += 4;",
      "406:   len -= 4;",
      "407:   if (len < 1)",
      "408:    goto trunc;",
      "409:   ND_TCHECK(bp[0]);",
      "410:   switch (bp[0] & 0x3) {",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "390:   case 3: ND_PRINT((ndo, \" PIMv1+2\"));",
      "391:    break;",
      "392:   }",
      "398:   s = ' ';",
      "399:   for (; nentries; nentries--) {",
      "400:    ND_TCHECK2(bp[0], 6);",
      "401:    ND_PRINT((ndo, \"%c%s%s/%d\", s, bp[0] & 1 ? \"!\" : \"\",",
      "402:              ipaddr_string(ndo, &bp[2]), bp[1]));",
      "",
      "[Removed Lines]",
      "393:   if (bp[4] & 0xfc)",
      "394:    ND_PRINT((ndo, \" [rsvd=0x%02x]\", bp[4] & 0xfc));",
      "395:   ND_TCHECK(bp[5]);",
      "396:   nentries = bp[5];",
      "397:   bp += 6; len -= 6;",
      "",
      "[Added Lines]",
      "420:   if (bp[0] & 0xfc)",
      "421:    ND_PRINT((ndo, \" [rsvd=0x%02x]\", bp[0] & 0xfc));",
      "422:   bp += 1;",
      "423:   len -= 1;",
      "424:   if (len < 1)",
      "425:    goto trunc;",
      "426:   ND_TCHECK(bp[0]);",
      "427:   nentries = bp[0];",
      "428:   bp += 1;",
      "429:   len -= 1;",
      "432:    if (len < 6)",
      "433:     goto trunc;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "421: pim_print(netdissect_options *ndo,",
      "422:           register const u_char *bp, register u_int len, const u_char *bp2)",
      "423: {",
      "425:  register const struct pim *pim = (const struct pim *)bp;",
      "431:  ND_TCHECK(pim->pim_rsv);",
      "432: #endif",
      "434:  switch (PIM_VER(pim->pim_typever)) {",
      "435:  case 2:",
      "436:   if (!ndo->ndo_vflag) {",
      "",
      "[Removed Lines]",
      "424:  register const u_char *ep;",
      "427:  ep = (const u_char *)ndo->ndo_snapend;",
      "428:  if (bp >= ep)",
      "429:   return;",
      "",
      "[Added Lines]",
      "464:  ND_TCHECK(pim->pim_typever);",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "454:   break;",
      "455:  }",
      "456:  return;",
      "457: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "489: trunc:",
      "490:  ND_PRINT((ndo, \"[|pim]\"));",
      "491:  return;",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "501: enum pimv2_addrtype {",
      "502:  pimv2_unicast, pimv2_group, pimv2_source",
      "503: };",
      "",
      "[Removed Lines]",
      "499: static int pimv2_addr_len;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "525: static int",
      "526: pimv2_addr_print(netdissect_options *ndo,",
      "528: {",
      "529:  int af;",
      "535:   ND_TCHECK(bp[1]);",
      "536:   switch (bp[0]) {",
      "537:   case 1:",
      "538:    af = AF_INET;",
      "540:    break;",
      "541:   case 2:",
      "542:    af = AF_INET6;",
      "544:    break;",
      "545:   default:",
      "546:    return -1;",
      "",
      "[Removed Lines]",
      "527:                  const u_char *bp, enum pimv2_addrtype at, int silent)",
      "530:  int len, hdrlen;",
      "532:  ND_TCHECK(bp[0]);",
      "534:  if (pimv2_addr_len == 0) {",
      "539:    len = sizeof(struct in_addr);",
      "543:    len = sizeof(struct in6_addr);",
      "",
      "[Added Lines]",
      "560:                  const u_char *bp, u_int len, enum pimv2_addrtype at,",
      "561:                  u_int addr_len, int silent)",
      "564:  int hdrlen;",
      "566:  if (addr_len == 0) {",
      "567:   if (len < 2)",
      "568:    goto trunc;",
      "573:    addr_len = (u_int)sizeof(struct in_addr);",
      "577:    addr_len = (u_int)sizeof(struct in6_addr);",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "549:    return -1;",
      "550:   hdrlen = 2;",
      "551:  } else {",
      "553:   case sizeof(struct in_addr):",
      "554:    af = AF_INET;",
      "555:    break;",
      "",
      "[Removed Lines]",
      "552:   switch (pimv2_addr_len) {",
      "",
      "[Added Lines]",
      "586:   switch (addr_len) {",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "560:    return -1;",
      "561:    break;",
      "562:   }",
      "564:   hdrlen = 0;",
      "565:  }",
      "567:  bp += hdrlen;",
      "568:  switch (at) {",
      "569:  case pimv2_unicast:",
      "571:   if (af == AF_INET) {",
      "572:    if (!silent)",
      "573:     ND_PRINT((ndo, \"%s\", ipaddr_string(ndo, bp)));",
      "",
      "[Removed Lines]",
      "563:   len = pimv2_addr_len;",
      "570:   ND_TCHECK2(bp[0], len);",
      "",
      "[Added Lines]",
      "601:  len -= hdrlen;",
      "604:   if (len < addr_len)",
      "605:    goto trunc;",
      "606:   ND_TCHECK2(bp[0], addr_len);",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "576:    if (!silent)",
      "577:     ND_PRINT((ndo, \"%s\", ip6addr_string(ndo, bp)));",
      "578:   }",
      "580:  case pimv2_group:",
      "581:  case pimv2_source:",
      "583:   if (af == AF_INET) {",
      "584:    if (!silent) {",
      "585:     ND_PRINT((ndo, \"%s\", ipaddr_string(ndo, bp + 2)));",
      "",
      "[Removed Lines]",
      "579:   return hdrlen + len;",
      "582:   ND_TCHECK2(bp[0], len + 2);",
      "",
      "[Added Lines]",
      "615:   return hdrlen + addr_len;",
      "618:   if (len < addr_len + 2)",
      "619:    goto trunc;",
      "620:   ND_TCHECK2(bp[0], addr_len + 2);",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "608:     ND_PRINT((ndo, \")\"));",
      "609:    }",
      "610:   }",
      "612:  default:",
      "613:   return -1;",
      "614:  }",
      "",
      "[Removed Lines]",
      "611:   return hdrlen + 2 + len;",
      "",
      "[Added Lines]",
      "649:   return hdrlen + 2 + addr_len;",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "660:  register const struct pim *pim = (const struct pim *)bp;",
      "661:  int advance;",
      "662:  enum checksum_status cksum_status;",
      "664:  ep = (const u_char *)ndo->ndo_snapend;",
      "665:  if (bp >= ep)",
      "666:   return;",
      "667:  if (ep > bp + len)",
      "668:   ep = bp + len;",
      "669:  ND_TCHECK(pim->pim_rsv);",
      "670:  pimv2_addr_len = pim->pim_rsv;",
      "671:  if (pimv2_addr_len != 0)",
      "672:   ND_PRINT((ndo, \", RFC2117-encoding\"));",
      "674:  ND_PRINT((ndo, \", cksum 0x%04x \", EXTRACT_16BITS(&pim->pim_cksum)));",
      "675:  if (EXTRACT_16BITS(&pim->pim_cksum) == 0) {",
      "676:   ND_PRINT((ndo, \"(unverified)\"));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "701:  int pimv2_addr_len;",
      "708:  if (len < 2)",
      "709:   goto trunc;",
      "715:  if (len < 4)",
      "716:   goto trunc;",
      "717:  ND_TCHECK(pim->pim_cksum);",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "711:    break;",
      "712:   }",
      "713:  }",
      "715:  switch (PIM_TYPE(pim->pim_typever)) {",
      "716:  case PIMV2_TYPE_HELLO:",
      "717:      {",
      "718:   uint16_t otype, olen;",
      "721:    ND_TCHECK2(bp[0], 4);",
      "722:    otype = EXTRACT_16BITS(&bp[0]);",
      "723:    olen = EXTRACT_16BITS(&bp[2]);",
      "725:    ND_PRINT((ndo, \"\\n\\t  %s Option (%u), length %u, Value: \",",
      "726:              tok2str(pimv2_hello_option_values, \"Unknown\", otype),",
      "727:              otype,",
      "728:              olen));",
      "729:    bp += 4;",
      "731:    switch (otype) {",
      "732:    case PIMV2_HELLO_OPTION_HOLDTIME:",
      "733:     if (olen != 2) {",
      "",
      "[Removed Lines]",
      "719:   bp += 4;",
      "720:   while (bp < ep) {",
      "724:    ND_TCHECK2(bp[0], 4 + olen);",
      "",
      "[Added Lines]",
      "758:  bp += 4;",
      "759:  len -= 4;",
      "765:   while (len > 0) {",
      "766:    if (len < 4)",
      "767:     goto trunc;",
      "776:    len -= 4;",
      "778:    if (len < olen)",
      "779:     goto trunc;",
      "780:    ND_TCHECK2(bp[0], olen);",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "797:    case PIMV2_HELLO_OPTION_ADDRESS_LIST:",
      "798:     if (ndo->ndo_vflag > 1) {",
      "799:      const u_char *ptr = bp;",
      "800:      while (ptr < (bp+olen)) {",
      "801:       ND_PRINT((ndo, \"\\n\\t    \"));",
      "807:       ptr += advance;",
      "808:      }",
      "809:     }",
      "810:     break;",
      "",
      "[Removed Lines]",
      "802:       advance = pimv2_addr_print(ndo, ptr, pimv2_unicast, 0);",
      "803:       if (advance < 0) {",
      "804:        ND_PRINT((ndo, \"...\"));",
      "805:        break;",
      "806:       }",
      "",
      "[Added Lines]",
      "850:      u_int plen = len;",
      "853:       advance = pimv2_addr_print(ndo, ptr, plen, pimv2_unicast, pimv2_addr_len, 0);",
      "854:       if (advance < 0)",
      "855:        goto trunc;",
      "857:       plen -= advance;",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "817:    if (ndo->ndo_vflag> 1)",
      "818:     print_unknown_data(ndo, bp, \"\\n\\t    \", olen);",
      "819:    bp += olen;",
      "820:   }",
      "821:   break;",
      "822:      }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "870:    len -= olen;",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "825:  {",
      "826:   const struct ip *ip;",
      "830:   ND_PRINT((ndo, \", Flags [ %s ]\\n\\t\",",
      "831:             tok2str(pimv2_register_flag_values,",
      "832:             \"none\",",
      "837:   ip = (const struct ip *)bp;",
      "838:   switch (IP_V(ip)) {",
      "840:    ND_PRINT((ndo, \"IP-Null-header %s > %s\",",
      "841:              ipaddr_string(ndo, &ip->ip_src),",
      "842:              ipaddr_string(ndo, &ip->ip_dst)));",
      "",
      "[Removed Lines]",
      "828:   ND_TCHECK2(*(bp + 4), PIMV2_REGISTER_FLAG_LEN);",
      "833:             EXTRACT_32BITS(bp+4))));",
      "835:   bp += 8; len -= 8;",
      "",
      "[Added Lines]",
      "879:   if (len < 4)",
      "880:    goto trunc;",
      "881:   ND_TCHECK2(*bp, PIMV2_REGISTER_FLAG_LEN);",
      "886:             EXTRACT_32BITS(bp))));",
      "888:   bp += 4; len -= 4;",
      "890:   if (len == 0)",
      "891:    goto trunc;",
      "893:   ND_TCHECK(ip->ip_vhl);",
      "896:    ND_TCHECK(ip->ip_dst);",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "858:  }",
      "860:  case PIMV2_TYPE_REGISTER_STOP:",
      "864:   ND_PRINT((ndo, \" group=\"));",
      "869:   bp += advance; len -= advance;",
      "872:   ND_PRINT((ndo, \" source=\"));",
      "877:   bp += advance; len -= advance;",
      "878:   break;",
      "",
      "[Removed Lines]",
      "861:   bp += 4; len -= 4;",
      "862:   if (bp >= ep)",
      "863:    break;",
      "865:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_group, 0)) < 0) {",
      "866:    ND_PRINT((ndo, \"...\"));",
      "867:    break;",
      "868:   }",
      "870:   if (bp >= ep)",
      "871:    break;",
      "873:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_unicast, 0)) < 0) {",
      "874:    ND_PRINT((ndo, \"...\"));",
      "875:    break;",
      "876:   }",
      "",
      "[Added Lines]",
      "919:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_group, pimv2_addr_len, 0)) < 0)",
      "920:    goto trunc;",
      "923:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_unicast, pimv2_addr_len, 0)) < 0)",
      "924:    goto trunc;",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "924:   uint16_t nprune;",
      "925:   int i, j;",
      "931:    ND_PRINT((ndo, \", upstream-neighbor: \"));",
      "936:    bp += advance; len -= advance;",
      "937:   }",
      "940:   ngroup = bp[1];",
      "941:   holdtime = EXTRACT_16BITS(&bp[2]);",
      "942:   ND_PRINT((ndo, \"\\n\\t  %u group(s)\", ngroup));",
      "",
      "[Removed Lines]",
      "927:   bp += 4; len -= 4;",
      "929:    if (bp >= ep)",
      "930:     break;",
      "932:    if ((advance = pimv2_addr_print(ndo, bp, pimv2_unicast, 0)) < 0) {",
      "933:     ND_PRINT((ndo, \"...\"));",
      "934:     break;",
      "935:    }",
      "938:   if (bp + 4 > ep)",
      "939:    break;",
      "",
      "[Added Lines]",
      "977:    if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_unicast, pimv2_addr_len, 0)) < 0)",
      "978:     goto trunc;",
      "981:   if (len < 4)",
      "982:    goto trunc;",
      "983:   ND_TCHECK2(*bp, 4);",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "949:   }",
      "950:   bp += 4; len -= 4;",
      "951:   for (i = 0; i < ngroup; i++) {",
      "954:    ND_PRINT((ndo, \"\\n\\t    group #%u: \", i+1));",
      "959:    bp += advance; len -= advance;",
      "964:    njoin = EXTRACT_16BITS(&bp[0]);",
      "965:    nprune = EXTRACT_16BITS(&bp[2]);",
      "966:    ND_PRINT((ndo, \", joined sources: %u, pruned sources: %u\", njoin, nprune));",
      "967:    bp += 4; len -= 4;",
      "968:    for (j = 0; j < njoin; j++) {",
      "969:     ND_PRINT((ndo, \"\\n\\t      joined source #%u: \", j+1));",
      "974:     bp += advance; len -= advance;",
      "975:    }",
      "976:    for (j = 0; j < nprune; j++) {",
      "977:     ND_PRINT((ndo, \"\\n\\t      pruned source #%u: \", j+1));",
      "982:     bp += advance; len -= advance;",
      "983:    }",
      "984:   }",
      "986:   break;",
      "987:      }",
      "989:  case PIMV2_TYPE_BOOTSTRAP:",
      "990:  {",
      "991:   int i, j, frpcnt;",
      "996:   ND_PRINT((ndo, \" tag=%x\", EXTRACT_16BITS(bp)));",
      "999:   ND_PRINT((ndo, \" hashmlen=%d\", bp[0]));",
      "1001:   ND_PRINT((ndo, \" BSRprio=%d\", bp[1]));",
      "1002:   bp += 2;",
      "1006:   ND_PRINT((ndo, \" BSR=\"));",
      "1011:   bp += advance;",
      "1013:   for (i = 0; bp < ep; i++) {",
      "1015:    ND_PRINT((ndo, \" (group%d: \", i));",
      "1021:    bp += advance;",
      "1028:    ND_PRINT((ndo, \" RPcnt=%d\", bp[0]));",
      "1033:    ND_PRINT((ndo, \" FRPcnt=%d\", frpcnt = bp[1]));",
      "1034:    bp += 4;",
      "1036:    for (j = 0; j < frpcnt && bp < ep; j++) {",
      "1038:     ND_PRINT((ndo, \" RP%d=\", j));",
      "1040:         pimv2_unicast,",
      "1045:     bp += advance;",
      "1051:     ND_PRINT((ndo, \",holdtime=\"));",
      "1052:     unsigned_relts_print(ndo, EXTRACT_16BITS(bp));",
      "1057:     ND_PRINT((ndo, \",prio=%d\", bp[2]));",
      "1058:     bp += 4;",
      "1059:    }",
      "1060:    ND_PRINT((ndo, \")\"));",
      "1061:   }",
      "1063:   break;",
      "1064:  }",
      "1065:  case PIMV2_TYPE_ASSERT:",
      "1069:   ND_PRINT((ndo, \" group=\"));",
      "1074:   bp += advance; len -= advance;",
      "1077:   ND_PRINT((ndo, \" src=\"));",
      "1082:   bp += advance; len -= advance;",
      "1085:   if (bp[0] & 0x80)",
      "1086:    ND_PRINT((ndo, \" RPT\"));",
      "1087:   ND_PRINT((ndo, \" pref=%u\", EXTRACT_32BITS(&bp[0]) & 0x7fffffff));",
      "",
      "[Removed Lines]",
      "952:    if (bp >= ep)",
      "953:     goto jp_done;",
      "955:    if ((advance = pimv2_addr_print(ndo, bp, pimv2_group, 0)) < 0) {",
      "956:     ND_PRINT((ndo, \"...)\"));",
      "957:     goto jp_done;",
      "958:    }",
      "960:    if (bp + 4 > ep) {",
      "961:     ND_PRINT((ndo, \"...)\"));",
      "962:     goto jp_done;",
      "963:    }",
      "970:     if ((advance = pimv2_addr_print(ndo, bp, pimv2_source, 0)) < 0) {",
      "971:      ND_PRINT((ndo, \"...)\"));",
      "972:      goto jp_done;",
      "973:     }",
      "978:     if ((advance = pimv2_addr_print(ndo, bp, pimv2_source, 0)) < 0) {",
      "979:      ND_PRINT((ndo, \"...)\"));",
      "980:      goto jp_done;",
      "981:     }",
      "985:  jp_done:",
      "992:   bp += 4;",
      "995:   if (bp + sizeof(uint16_t) >= ep) break;",
      "997:   bp += sizeof(uint16_t);",
      "998:   if (bp >= ep) break;",
      "1000:   if (bp + 1 >= ep) break;",
      "1005:   if (bp >= ep) break;",
      "1007:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_unicast, 0)) < 0) {",
      "1008:    ND_PRINT((ndo, \"...\"));",
      "1009:    break;",
      "1010:   }",
      "1016:    if ((advance = pimv2_addr_print(ndo, bp, pimv2_group, 0))",
      "1017:        < 0) {",
      "1018:     ND_PRINT((ndo, \"...)\"));",
      "1019:     goto bs_done;",
      "1020:    }",
      "1024:    if (bp >= ep) {",
      "1025:     ND_PRINT((ndo, \"...)\"));",
      "1026:     goto bs_done;",
      "1027:    }",
      "1029:    if (bp + 1 >= ep) {",
      "1030:     ND_PRINT((ndo, \"...)\"));",
      "1031:     goto bs_done;",
      "1032:    }",
      "1039:     if ((advance = pimv2_addr_print(ndo, bp,",
      "1041:         0)) < 0) {",
      "1042:      ND_PRINT((ndo, \"...)\"));",
      "1043:      goto bs_done;",
      "1044:     }",
      "1047:     if (bp + 1 >= ep) {",
      "1048:      ND_PRINT((ndo, \"...)\"));",
      "1049:      goto bs_done;",
      "1050:     }",
      "1053:     if (bp + 2 >= ep) {",
      "1054:      ND_PRINT((ndo, \"...)\"));",
      "1055:      goto bs_done;",
      "1056:     }",
      "1062:     bs_done:",
      "1066:   bp += 4; len -= 4;",
      "1067:   if (bp >= ep)",
      "1068:    break;",
      "1070:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_group, 0)) < 0) {",
      "1071:    ND_PRINT((ndo, \"...\"));",
      "1072:    break;",
      "1073:   }",
      "1075:   if (bp >= ep)",
      "1076:    break;",
      "1078:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_unicast, 0)) < 0) {",
      "1079:    ND_PRINT((ndo, \"...\"));",
      "1080:    break;",
      "1081:   }",
      "1083:   if (bp + 8 > ep)",
      "1084:    break;",
      "",
      "[Added Lines]",
      "997:    if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_group, pimv2_addr_len, 0)) < 0)",
      "998:     goto trunc;",
      "1000:    if (len < 4)",
      "1001:     goto trunc;",
      "1002:    ND_TCHECK2(*bp, 4);",
      "1009:     if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_source, pimv2_addr_len, 0)) < 0)",
      "1010:      goto trunc;",
      "1015:     if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_source, pimv2_addr_len, 0)) < 0)",
      "1016:      goto trunc;",
      "1028:   if (len < 2)",
      "1029:    goto trunc;",
      "1030:   ND_TCHECK_16BITS(bp);",
      "1032:   bp += 2;",
      "1033:   len -= 2;",
      "1034:   if (len < 1)",
      "1035:    goto trunc;",
      "1036:   ND_TCHECK(bp[0]);",
      "1038:   if (len < 2)",
      "1039:    goto trunc;",
      "1040:   ND_TCHECK(bp[2]);",
      "1043:   len -= 2;",
      "1047:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_unicast, pimv2_addr_len, 0)) < 0)",
      "1048:    goto trunc;",
      "1050:   len -= advance;",
      "1055:    if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_group, pimv2_addr_len, 0)) < 0)",
      "1056:     goto trunc;",
      "1058:    len -= advance;",
      "1061:    if (len < 1)",
      "1062:     goto trunc;",
      "1063:    ND_TCHECK(bp[0]);",
      "1065:    if (len < 2)",
      "1066:     goto trunc;",
      "1067:    ND_TCHECK(bp[1]);",
      "1069:    if (len < 4)",
      "1070:     goto trunc;",
      "1072:    len -= 4;",
      "1077:     if ((advance = pimv2_addr_print(ndo, bp, len,",
      "1079:         pimv2_addr_len,",
      "1080:         0)) < 0)",
      "1081:      goto trunc;",
      "1083:     len -= advance;",
      "1085:     if (len < 2)",
      "1086:      goto trunc;",
      "1087:     ND_TCHECK_16BITS(bp);",
      "1090:     if (len < 3)",
      "1091:      goto trunc;",
      "1092:     ND_TCHECK(bp[2]);",
      "1094:     if (len < 4)",
      "1095:      goto trunc;",
      "1097:     len -= 4;",
      "1105:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_group, pimv2_addr_len, 0)) < 0)",
      "1106:    goto trunc;",
      "1109:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_unicast, pimv2_addr_len, 0)) < 0)",
      "1110:    goto trunc;",
      "1112:   if (len < 8)",
      "1113:    goto trunc;",
      "1114:   ND_TCHECK2(*bp, 8);",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "1091:  case PIMV2_TYPE_CANDIDATE_RP:",
      "1092:  {",
      "1093:   int i, pfxcnt;",
      "1098:   ND_PRINT((ndo, \" prefix-cnt=%d\", bp[0]));",
      "1099:   pfxcnt = bp[0];",
      "1101:   ND_PRINT((ndo, \" prio=%d\", bp[1]));",
      "1103:   ND_PRINT((ndo, \" holdtime=\"));",
      "1104:   unsigned_relts_print(ndo, EXTRACT_16BITS(&bp[2]));",
      "1105:   bp += 4;",
      "1109:   ND_PRINT((ndo, \" RP=\"));",
      "1114:   bp += advance;",
      "1117:   for (i = 0; i < pfxcnt && bp < ep; i++) {",
      "1118:    ND_PRINT((ndo, \" Group%d=\", i));",
      "1124:    bp += advance;",
      "1125:   }",
      "1126:   break;",
      "1127:  }",
      "1129:  case PIMV2_TYPE_PRUNE_REFRESH:",
      "1130:   ND_PRINT((ndo, \" src=\"));",
      "1135:   bp += advance;",
      "1136:   ND_PRINT((ndo, \" grp=\"));",
      "1141:   bp += advance;",
      "1142:   ND_PRINT((ndo, \" forwarder=\"));",
      "1147:   bp += advance;",
      "1149:   ND_PRINT((ndo, \" TUNR \"));",
      "1150:   unsigned_relts_print(ndo, EXTRACT_16BITS(bp));",
      "1151:   break;",
      "",
      "[Removed Lines]",
      "1094:   bp += 4;",
      "1097:   if (bp >= ep) break;",
      "1100:   if (bp + 1 >= ep) break;",
      "1102:   if (bp + 3 >= ep) break;",
      "1108:   if (bp >= ep) break;",
      "1110:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_unicast, 0)) < 0) {",
      "1111:    ND_PRINT((ndo, \"...\"));",
      "1112:    break;",
      "1113:   }",
      "1119:    if ((advance = pimv2_addr_print(ndo, bp, pimv2_group, 0))",
      "1120:        < 0) {",
      "1121:     ND_PRINT((ndo, \"...\"));",
      "1122:     break;",
      "1123:    }",
      "1131:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_unicast, 0)) < 0) {",
      "1132:    ND_PRINT((ndo, \"...\"));",
      "1133:    break;",
      "1134:   }",
      "1137:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_group, 0)) < 0) {",
      "1138:    ND_PRINT((ndo, \"...\"));",
      "1139:    break;",
      "1140:   }",
      "1143:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_unicast, 0)) < 0) {",
      "1144:    ND_PRINT((ndo, \"...\"));",
      "1145:    break;",
      "1146:   }",
      "1148:   ND_TCHECK2(bp[0], 2);",
      "",
      "[Added Lines]",
      "1126:   if (len < 1)",
      "1127:    goto trunc;",
      "1128:   ND_TCHECK(bp[0]);",
      "1131:   if (len < 2)",
      "1132:    goto trunc;",
      "1133:   ND_TCHECK(bp[1]);",
      "1135:   if (len < 4)",
      "1136:    goto trunc;",
      "1137:   ND_TCHECK_16BITS(&bp[2]);",
      "1141:   len -= 4;",
      "1145:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_unicast, pimv2_addr_len, 0)) < 0)",
      "1146:    goto trunc;",
      "1148:   len -= advance;",
      "1153:    if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_group, pimv2_addr_len, 0)) < 0)",
      "1154:     goto trunc;",
      "1156:    len -= advance;",
      "1163:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_unicast, pimv2_addr_len, 0)) < 0)",
      "1164:    goto trunc;",
      "1166:   len -= advance;",
      "1168:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_group, pimv2_addr_len, 0)) < 0)",
      "1169:    goto trunc;",
      "1171:   len -= advance;",
      "1173:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_unicast, pimv2_addr_len, 0)) < 0)",
      "1174:    goto trunc;",
      "1176:   len -= advance;",
      "1177:   if (len < 2)",
      "1178:    goto trunc;",
      "1179:   ND_TCHECK_16BITS(bp);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5ac30c65d54925a272c906528a8ad78fa4c9450b",
      "candidate_info": {
        "commit_hash": "5ac30c65d54925a272c906528a8ad78fa4c9450b",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/5ac30c65d54925a272c906528a8ad78fa4c9450b",
        "files": [
          "print-pim.c"
        ],
        "message": "Use nd_ types, add EXTRACT_ calls, clean up signed vs. unsigned.",
        "before_after_code_files": [
          "print-pim.c||print-pim.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-pim.c||print-pim.c"
          ],
          "candidate": [
            "print-pim.c||print-pim.c"
          ]
        }
      },
      "candidate_diff": {
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "126: struct pim {",
          "",
          "[Removed Lines]",
          "127:  uint8_t pim_typever;",
          "",
          "[Added Lines]",
          "127:  nd_uint8_t pim_typever;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143: pimv1_join_prune_print(netdissect_options *ndo,",
          "144:                        const u_char *bp, u_int len)",
          "145: {",
          "150:  if (ND_TTEST_LEN(bp, 30) && EXTRACT_U_1(bp + 11) == 1 &&",
          "151:      ((njoin = EXTRACT_BE_U_2(bp + 20)) + EXTRACT_BE_U_2(bp + 22)) == 1) {",
          "154:   ND_PRINT((ndo, \" RPF %s \", ipaddr_string(ndo, bp)));",
          "155:   hold = EXTRACT_BE_U_2(bp + 6);",
          "",
          "[Removed Lines]",
          "146:  int ngroups, njoin, nprune;",
          "147:  int njp;",
          "152:   int hold;",
          "",
          "[Added Lines]",
          "146:  u_int ngroups, njoin, nprune;",
          "147:  u_int njp;",
          "152:   u_int hold;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "157:    ND_PRINT((ndo, \"Hold \"));",
          "158:    unsigned_relts_print(ndo, hold);",
          "159:   }",
          "161:   ipaddr_string(ndo, bp + 26), EXTRACT_U_1(bp + 25) & 0x3f,",
          "162:   ipaddr_string(ndo, bp + 12)));",
          "163:   if (EXTRACT_BE_U_4(bp + 16) != 0xffffffff)",
          "",
          "[Removed Lines]",
          "160:   ND_PRINT((ndo, \"%s (%s/%d, %s\", njoin ? \"Join\" : \"Prune\",",
          "",
          "[Added Lines]",
          "160:   ND_PRINT((ndo, \"%s (%s/%u, %s\", njoin ? \"Join\" : \"Prune\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "195:  ngroups = EXTRACT_U_1(bp + 3);",
          "196:  bp += 4;",
          "197:  len -= 4;",
          "",
          "[Removed Lines]",
          "198:  while (ngroups--) {",
          "",
          "[Added Lines]",
          "198:  while (ngroups != 0) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "218:   ND_TCHECK_4(bp);",
          "219:   njoin = EXTRACT_BE_U_2(bp);",
          "220:   nprune = EXTRACT_BE_U_2(bp + 2);",
          "222:   bp += 4;",
          "223:   len -= 4;",
          "224:   for (njp = 0; njp < (njoin + nprune); njp++) {",
          "",
          "[Removed Lines]",
          "221:   ND_PRINT((ndo, \" joined: %d pruned: %d\", njoin, nprune));",
          "",
          "[Added Lines]",
          "221:   ND_PRINT((ndo, \" joined: %u pruned: %u\", njoin, nprune));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "231:    if (len < 6)",
          "232:     goto trunc;",
          "233:    ND_TCHECK_6(bp);",
          "235:        (EXTRACT_U_1(bp) & 0x01) ? \"Sparse \" : \"Dense \",",
          "236:        (EXTRACT_U_1(bp + 1) & 0x80) ? \"WC \" : \"\",",
          "237:        (EXTRACT_U_1(bp + 1) & 0x40) ? \"RP \" : \"SPT \",",
          "",
          "[Removed Lines]",
          "234:    ND_PRINT((ndo, \"\\n\\t%s %s%s%s%s/%d\", type,",
          "",
          "[Added Lines]",
          "234:    ND_PRINT((ndo, \"\\n\\t%s %s%s%s%s/%u\", type,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "240:    bp += 6;",
          "241:    len -= 6;",
          "242:   }",
          "243:  }",
          "244:  return;",
          "245: trunc:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243:   ngroups--;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "271:     ND_PRINT((ndo, \" Sparse-Dense-mode\"));",
          "272:     break;",
          "273:    default:",
          "275:     break;",
          "276:    }",
          "277:   }",
          "",
          "[Removed Lines]",
          "274:     ND_PRINT((ndo, \" mode-%d\", EXTRACT_U_1(bp + 8) >> 4));",
          "",
          "[Added Lines]",
          "275:     ND_PRINT((ndo, \" mode-%u\", EXTRACT_U_1(bp + 8) >> 4));",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "310:   if (EXTRACT_BE_U_4(bp + 12) != 0xffffffff)",
          "311:    ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, bp + 12)));",
          "312:   ND_TCHECK_4(bp + 24);",
          "314:       (EXTRACT_U_1(bp + 20) & 0x80) ? \"RP-tree\" : \"SPT\",",
          "315:       EXTRACT_BE_U_4(bp + 20) & 0x7fffffff,",
          "316:       EXTRACT_BE_U_4(bp + 24)));",
          "",
          "[Removed Lines]",
          "313:   ND_PRINT((ndo, \" %s pref %d metric %d\",",
          "",
          "[Added Lines]",
          "314:   ND_PRINT((ndo, \" %s pref %u metric %u\",",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "327:  }",
          "328:  ND_TCHECK_1(bp + 4);",
          "329:  if ((EXTRACT_U_1(bp + 4) >> 4) != 1)",
          "331:  return;",
          "333: trunc:",
          "",
          "[Removed Lines]",
          "330:   ND_PRINT((ndo, \" [v%d]\", EXTRACT_U_1(bp + 4) >> 4));",
          "",
          "[Added Lines]",
          "331:   ND_PRINT((ndo, \" [v%u]\", EXTRACT_U_1(bp + 4) >> 4));",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "345: cisco_autorp_print(netdissect_options *ndo,",
          "346:                    const u_char *bp, u_int len)",
          "347: {",
          "352:  if (len < 8)",
          "353:   goto trunc;",
          "",
          "[Removed Lines]",
          "348:  int type;",
          "349:  int numrps;",
          "350:  int hold;",
          "",
          "[Added Lines]",
          "349:  u_int type;",
          "350:  u_int numrps;",
          "351:  u_int hold;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "399:   char s;",
          "401:   if (len < 4)",
          "",
          "[Removed Lines]",
          "397:  while (numrps--) {",
          "398:   int nentries;",
          "",
          "[Added Lines]",
          "398:  while (numrps != 0) {",
          "399:   u_int nentries;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "428:   bp += 1;",
          "429:   len -= 1;",
          "430:   s = ' ';",
          "432:    if (len < 6)",
          "433:     goto trunc;",
          "434:    ND_TCHECK_6(bp);",
          "436:              ipaddr_string(ndo, bp + 2), EXTRACT_U_1(bp + 1)));",
          "437:    if (EXTRACT_U_1(bp) & 0x02) {",
          "438:     ND_PRINT((ndo, \" bidir\"));",
          "",
          "[Removed Lines]",
          "431:   for (; nentries; nentries--) {",
          "435:    ND_PRINT((ndo, \"%c%s%s/%d\", s, EXTRACT_U_1(bp) & 1 ? \"!\" : \"\",",
          "",
          "[Added Lines]",
          "432:   while (nentries != 0) {",
          "436:    ND_PRINT((ndo, \"%c%s%s/%u\", s, EXTRACT_U_1(bp) & 1 ? \"!\" : \"\",",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "442:    }",
          "443:    s = ',';",
          "444:    bp += 6; len -= 6;",
          "445:   }",
          "446:  }",
          "447:  return;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "446:    nentries--;",
          "448:   numrps--;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "456:           const u_char *bp, u_int len, const u_char *bp2)",
          "457: {",
          "458:  const struct pim *pim = (const struct pim *)bp;",
          "462: #endif",
          "466:  case 2:",
          "467:   if (!ndo->ndo_vflag) {",
          "468:    ND_PRINT((ndo, \"PIMv%u, %s, length %u\",",
          "471:              len));",
          "472:    return;",
          "473:   } else {",
          "474:    ND_PRINT((ndo, \"PIMv%u, length %u\\n\\t%s\",",
          "476:              len,",
          "478:    pimv2_print(ndo, bp, len, bp2);",
          "479:   }",
          "480:   break;",
          "481:  default:",
          "482:   ND_PRINT((ndo, \"PIMv%u, length %u\",",
          "484:             len));",
          "485:   break;",
          "486:  }",
          "",
          "[Removed Lines]",
          "461:  ND_TCHECK(pim->pim_rsv);",
          "464:  ND_TCHECK(pim->pim_typever);",
          "465:  switch (PIM_VER(pim->pim_typever)) {",
          "469:              PIM_VER(pim->pim_typever),",
          "470:              tok2str(pimv2_type_values,\"Unknown Type\",PIM_TYPE(pim->pim_typever)),",
          "475:              PIM_VER(pim->pim_typever),",
          "477:              tok2str(pimv2_type_values,\"Unknown Type\",PIM_TYPE(pim->pim_typever))));",
          "483:             PIM_VER(pim->pim_typever),",
          "",
          "[Added Lines]",
          "462:  uint8_t pim_typever;",
          "465:  ND_TCHECK_1(pim->pim_rsv);",
          "468:  ND_TCHECK_1(pim->pim_typever);",
          "469:  pim_typever = EXTRACT_U_1(pim->pim_typever);",
          "470:  switch (PIM_VER(pim_typever)) {",
          "474:              PIM_VER(pim_typever),",
          "475:              tok2str(pimv2_type_values,\"Unknown Type\",PIM_TYPE(pim_typever)),",
          "480:              PIM_VER(pim_typever),",
          "482:              tok2str(pimv2_type_values,\"Unknown Type\",PIM_TYPE(pim_typever))));",
          "488:             PIM_VER(pim_typever),",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "560:                  const u_char *bp, u_int len, enum pimv2_addrtype at,",
          "561:                  u_int addr_len, int silent)",
          "562: {",
          "564:  int hdrlen;",
          "566:  if (addr_len == 0) {",
          "",
          "[Removed Lines]",
          "563:  int af;",
          "",
          "[Added Lines]",
          "568:  u_int af;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "697:  const struct pim *pim = (const struct pim *)bp;",
          "698:  int advance;",
          "699:  enum checksum_status cksum_status;",
          "702:  if (len < 2)",
          "703:   goto trunc;",
          "706:  if (pimv2_addr_len != 0)",
          "707:   ND_PRINT((ndo, \", RFC2117-encoding\"));",
          "709:  if (len < 4)",
          "710:   goto trunc;",
          "711:  ND_TCHECK(pim->pim_cksum);",
          "714:   ND_PRINT((ndo, \"(unverified)\"));",
          "715:  } else {",
          "",
          "[Removed Lines]",
          "700:  int pimv2_addr_len;",
          "704:  ND_TCHECK(pim->pim_rsv);",
          "705:  pimv2_addr_len = pim->pim_rsv;",
          "712:  ND_PRINT((ndo, \", cksum 0x%04x \", EXTRACT_BE_U_2(&pim->pim_cksum)));",
          "713:  if (EXTRACT_BE_U_2(&pim->pim_cksum) == 0) {",
          "716:   if (PIM_TYPE(pim->pim_typever) == PIMV2_TYPE_REGISTER) {",
          "",
          "[Added Lines]",
          "705:  u_int pim_typever;",
          "706:  u_int pimv2_addr_len;",
          "710:  ND_TCHECK_1(pim->pim_rsv);",
          "711:  pim_typever = EXTRACT_U_1(pim->pim_typever);",
          "712:  pimv2_addr_len = EXTRACT_U_1(pim->pim_rsv);",
          "719:  ND_PRINT((ndo, \", cksum 0x%04x \", EXTRACT_BE_U_2(pim->pim_cksum)));",
          "720:  if (EXTRACT_BE_U_2(pim->pim_cksum) == 0) {",
          "723:   if (PIM_TYPE(pim_typever) == PIMV2_TYPE_REGISTER) {",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "752:  bp += 4;",
          "753:  len -= 4;",
          "756:  case PIMV2_TYPE_HELLO:",
          "757:      {",
          "758:   uint16_t otype, olen;",
          "",
          "[Removed Lines]",
          "755:  switch (PIM_TYPE(pim->pim_typever)) {",
          "",
          "[Added Lines]",
          "762:  switch (PIM_TYPE(pim_typever)) {",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "792:      override_interval = EXTRACT_BE_U_2(bp + 2);",
          "793:      t_bit = (lan_delay & 0x8000)? 1 : 0;",
          "794:      lan_delay &= ~0x8000;",
          "796:      t_bit, lan_delay, override_interval));",
          "797:     }",
          "798:     break;",
          "",
          "[Removed Lines]",
          "795:      ND_PRINT((ndo, \"\\n\\t    T-bit=%d, LAN delay %dms, Override interval %dms\",",
          "",
          "[Added Lines]",
          "802:      ND_PRINT((ndo, \"\\n\\t    T-bit=%u, LAN delay %ums, Override interval %ums\",",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "824:     if (olen != 4) {",
          "825:      ND_PRINT((ndo, \"ERROR: Option Length != 4 Bytes (%u)\", olen));",
          "826:     } else {",
          "828:      if (EXTRACT_U_1(bp + 1) != 0) {",
          "829:       ND_PRINT((ndo, \", interval \"));",
          "830:       unsigned_relts_print(ndo,",
          "",
          "[Removed Lines]",
          "827:      ND_PRINT((ndo, \"v%d\", EXTRACT_U_1(bp)));",
          "",
          "[Added Lines]",
          "834:      ND_PRINT((ndo, \"v%u\", EXTRACT_U_1(bp)));",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "904:    break;",
          "906:   default:",
          "908:    break;",
          "909:   }",
          "910:   break;",
          "",
          "[Removed Lines]",
          "907:    ND_PRINT((ndo, \"IP ver %d\", IP_V(ip)));",
          "",
          "[Added Lines]",
          "914:    ND_PRINT((ndo, \"IP ver %u\", IP_V(ip)));",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "966:   uint16_t holdtime;",
          "967:   uint16_t njoin;",
          "968:   uint16_t nprune;",
          "972:    ND_PRINT((ndo, \", upstream-neighbor: \"));",
          "973:    if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_unicast, pimv2_addr_len, 0)) < 0)",
          "974:     goto trunc;",
          "",
          "[Removed Lines]",
          "969:   int i, j;",
          "",
          "[Added Lines]",
          "976:   u_int i, j;",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1019:  case PIMV2_TYPE_BOOTSTRAP:",
          "1020:  {",
          "1024:   if (len < 2)",
          "",
          "[Removed Lines]",
          "1021:   int i, j, frpcnt;",
          "",
          "[Added Lines]",
          "1028:   u_int i, j, frpcnt;",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1030:   if (len < 1)",
          "1031:    goto trunc;",
          "1032:   ND_TCHECK_1(bp);",
          "1034:   if (len < 2)",
          "1035:    goto trunc;",
          "1036:   ND_TCHECK_1(bp + 2);",
          "1038:   bp += 2;",
          "1039:   len -= 2;",
          "",
          "[Removed Lines]",
          "1033:   ND_PRINT((ndo, \" hashmlen=%d\", EXTRACT_U_1(bp)));",
          "1037:   ND_PRINT((ndo, \" BSRprio=%d\", EXTRACT_U_1(bp + 1)));",
          "",
          "[Added Lines]",
          "1040:   ND_PRINT((ndo, \" hashmlen=%u\", EXTRACT_U_1(bp)));",
          "1044:   ND_PRINT((ndo, \" BSRprio=%u\", EXTRACT_U_1(bp + 1)));",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1048:   for (i = 0; len > 0; i++) {",
          "1051:    if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_group, pimv2_addr_len, 0)) < 0)",
          "1052:     goto trunc;",
          "1053:    bp += advance;",
          "",
          "[Removed Lines]",
          "1050:    ND_PRINT((ndo, \" (group%d: \", i));",
          "",
          "[Added Lines]",
          "1057:    ND_PRINT((ndo, \" (group%u: \", i));",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1057:    if (len < 1)",
          "1058:     goto trunc;",
          "1059:    ND_TCHECK_1(bp);",
          "1061:    if (len < 2)",
          "1062:     goto trunc;",
          "1063:    ND_TCHECK_1(bp + 1);",
          "1065:    if (len < 4)",
          "1066:     goto trunc;",
          "1067:    bp += 4;",
          "",
          "[Removed Lines]",
          "1060:    ND_PRINT((ndo, \" RPcnt=%d\", EXTRACT_U_1(bp)));",
          "1064:    ND_PRINT((ndo, \" FRPcnt=%d\", frpcnt = EXTRACT_U_1(bp + 1)));",
          "",
          "[Added Lines]",
          "1067:    ND_PRINT((ndo, \" RPcnt=%u\", EXTRACT_U_1(bp)));",
          "1071:    frpcnt = EXTRACT_U_1(bp + 1);",
          "1072:    ND_PRINT((ndo, \" FRPcnt=%u\", frpcnt));",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1070:    for (j = 0; j < frpcnt && len > 0; j++) {",
          "1073:     if ((advance = pimv2_addr_print(ndo, bp, len,",
          "1074:         pimv2_unicast,",
          "1075:         pimv2_addr_len,",
          "",
          "[Removed Lines]",
          "1072:     ND_PRINT((ndo, \" RP%d=\", j));",
          "",
          "[Added Lines]",
          "1080:     ND_PRINT((ndo, \" RP%u=\", j));",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1087:     if (len < 3)",
          "1088:      goto trunc;",
          "1089:     ND_TCHECK_1(bp + 2);",
          "1091:     if (len < 4)",
          "1092:      goto trunc;",
          "1093:     bp += 4;",
          "",
          "[Removed Lines]",
          "1090:     ND_PRINT((ndo, \",prio=%d\", EXTRACT_U_1(bp + 2)));",
          "",
          "[Added Lines]",
          "1098:     ND_PRINT((ndo, \",prio=%u\", EXTRACT_U_1(bp + 2)));",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1118:  case PIMV2_TYPE_CANDIDATE_RP:",
          "1119:  {",
          "1123:   if (len < 1)",
          "1124:    goto trunc;",
          "1125:   ND_TCHECK_1(bp);",
          "1127:   pfxcnt = EXTRACT_U_1(bp);",
          "1128:   if (len < 2)",
          "1129:    goto trunc;",
          "1130:   ND_TCHECK_1(bp + 1);",
          "1132:   if (len < 4)",
          "1133:    goto trunc;",
          "1134:   ND_TCHECK_2(bp + 2);",
          "",
          "[Removed Lines]",
          "1120:   int i, pfxcnt;",
          "1126:   ND_PRINT((ndo, \" prefix-cnt=%d\", EXTRACT_U_1(bp)));",
          "1131:   ND_PRINT((ndo, \" prio=%d\", EXTRACT_U_1(bp + 1)));",
          "",
          "[Added Lines]",
          "1128:   u_int i, pfxcnt;",
          "1134:   ND_PRINT((ndo, \" prefix-cnt=%u\", EXTRACT_U_1(bp)));",
          "1139:   ND_PRINT((ndo, \" prio=%u\", EXTRACT_U_1(bp + 1)));",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1148:   for (i = 0; i < pfxcnt && len > 0; i++) {",
          "1150:    if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_group, pimv2_addr_len, 0)) < 0)",
          "1151:     goto trunc;",
          "1152:    bp += advance;",
          "",
          "[Removed Lines]",
          "1149:    ND_PRINT((ndo, \" Group%d=\", i));",
          "",
          "[Added Lines]",
          "1157:    ND_PRINT((ndo, \" Group%u=\", i));",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1182:   default:",
          "1184:   break;",
          "1185:  }",
          "",
          "[Removed Lines]",
          "1183:   ND_PRINT((ndo, \" [type %d]\", PIM_TYPE(pim->pim_typever)));",
          "",
          "[Added Lines]",
          "1191:   ND_PRINT((ndo, \" [type %u]\", PIM_TYPE(pim_typever)));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e9e7578870b9578be040bb4c1e3f056c93810d9a",
      "candidate_info": {
        "commit_hash": "e9e7578870b9578be040bb4c1e3f056c93810d9a",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/e9e7578870b9578be040bb4c1e3f056c93810d9a",
        "files": [
          "print-pim.c"
        ],
        "message": "PIM: Use more ND_TCHECK_n() macros",
        "before_after_code_files": [
          "print-pim.c||print-pim.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-pim.c||print-pim.c"
          ],
          "candidate": [
            "print-pim.c||print-pim.c"
          ]
        }
      },
      "candidate_diff": {
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "716:  if (len < 4)",
          "717:   goto trunc;",
          "719:  ND_PRINT(\", cksum 0x%04x \", EXTRACT_BE_U_2(pim->pim_cksum));",
          "720:  if (EXTRACT_BE_U_2(pim->pim_cksum) == 0) {",
          "721:   ND_PRINT(\"(unverified)\");",
          "",
          "[Removed Lines]",
          "718:  ND_TCHECK(pim->pim_cksum);",
          "",
          "[Added Lines]",
          "718:  ND_TCHECK_2(pim->pim_cksum);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "893:   if (len == 0)",
          "894:    goto trunc;",
          "895:   ip = (const struct ip *)bp;",
          "897:   switch (IP_V(ip)) {",
          "899:    ND_TCHECK(ip->ip_dst);",
          "",
          "[Removed Lines]",
          "896:   ND_TCHECK(ip->ip_vhl);",
          "",
          "[Added Lines]",
          "896:   ND_TCHECK_1(ip->ip_vhl);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c331dc185f9a485974851c17ce1d12e28bb234d4",
      "candidate_info": {
        "commit_hash": "c331dc185f9a485974851c17ce1d12e28bb234d4",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/c331dc185f9a485974851c17ce1d12e28bb234d4",
        "files": [
          "print-pim.c"
        ],
        "message": "PIM: Use more ND_TCHECK_n() macros",
        "before_after_code_files": [
          "print-pim.c||print-pim.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-pim.c||print-pim.c"
          ],
          "candidate": [
            "print-pim.c||print-pim.c"
          ]
        }
      },
      "candidate_diff": {
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "896:   ND_TCHECK_1(ip->ip_vhl);",
          "897:   switch (IP_V(ip)) {",
          "900:    ND_PRINT(\"IP-Null-header %s > %s\",",
          "901:              ipaddr_string(ndo, &ip->ip_src),",
          "902:              ipaddr_string(ndo, &ip->ip_dst));",
          "",
          "[Removed Lines]",
          "899:    ND_TCHECK(ip->ip_dst);",
          "",
          "[Added Lines]",
          "899:    ND_TCHECK_4(ip->ip_dst);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "00b189d27cd235c958497d9b1aca6d3addd55d43",
      "candidate_info": {
        "commit_hash": "00b189d27cd235c958497d9b1aca6d3addd55d43",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/00b189d27cd235c958497d9b1aca6d3addd55d43",
        "files": [
          "print-atm.c",
          "print-bgp.c",
          "print-carp.c",
          "print-icmp6.c",
          "print-ip.c",
          "print-isakmp.c",
          "print-juniper.c",
          "print-mobility.c",
          "print-pim.c",
          "print-smb.c",
          "print-stp.c",
          "print-vrrp.c",
          "smbutil.c"
        ],
        "message": "Use more the ND_TCHECK_1() macro",
        "before_after_code_files": [
          "print-atm.c||print-atm.c",
          "print-bgp.c||print-bgp.c",
          "print-carp.c||print-carp.c",
          "print-icmp6.c||print-icmp6.c",
          "print-ip.c||print-ip.c",
          "print-isakmp.c||print-isakmp.c",
          "print-juniper.c||print-juniper.c",
          "print-mobility.c||print-mobility.c",
          "print-pim.c||print-pim.c",
          "print-smb.c||print-smb.c",
          "print-stp.c||print-stp.c",
          "print-vrrp.c||print-vrrp.c",
          "smbutil.c||smbutil.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-pim.c||print-pim.c"
          ],
          "candidate": [
            "print-pim.c||print-pim.c"
          ]
        }
      },
      "candidate_diff": {
        "print-atm.c||print-atm.c": [
          "File: print-atm.c -> print-atm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "349: {",
          "350:  uint32_t call_ref;",
          "353:  if (EXTRACT_U_1(p + PROTO_POS) == Q2931) {",
          "358:   ND_PRINT((ndo, \"Q.2931\"));",
          "360:   ND_PRINT((ndo, \":%s \",",
          "361:       tok2str(msgtype2str, \"msgtype#%d\", EXTRACT_U_1(p + MSG_TYPE_POS))));",
          "",
          "[Removed Lines]",
          "352:  ND_TCHECK(p[PROTO_POS]);",
          "359:   ND_TCHECK(p[MSG_TYPE_POS]);",
          "",
          "[Added Lines]",
          "352:  ND_TCHECK_1(p + PROTO_POS);",
          "359:   ND_TCHECK_1(p + MSG_TYPE_POS);",
          "",
          "---------------"
        ],
        "print-bgp.c||print-bgp.c": [
          "File: print-bgp.c -> print-bgp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "538:  struct in_addr addr;",
          "539:  u_int plen, plenbytes;",
          "542:  ITEMCHECK(1);",
          "543:  plen = pptr[0];",
          "544:  if (32 < plen)",
          "",
          "[Removed Lines]",
          "541:  ND_TCHECK(pptr[0]);",
          "",
          "[Added Lines]",
          "541:  ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "773:  ND_TCHECK(pptr[0]);",
          "",
          "[Added Lines]",
          "773:  ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "824:  struct in_addr addr;",
          "825:  u_int plen;",
          "830:  if ((24+64) > plen)",
          "",
          "[Removed Lines]",
          "827:  ND_TCHECK(pptr[0]);",
          "",
          "[Added Lines]",
          "827:  ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "876:     const u_char *rd;",
          "877:     const u_char *vpn_ip;",
          "882:     if (EXTRACT_U_1(pptr) != MDT_VPN_NLRI_LEN * 8)",
          "",
          "[Removed Lines]",
          "879:     ND_TCHECK(pptr[0]);",
          "",
          "[Added Lines]",
          "879:     ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1096:       }",
          "1098:       while (ttlv_len>0) {",
          "1100:    if (buflen!=0) {",
          "1101:        stringlen=snprintf(buf,buflen, \"%02x\",",
          "1102:                                                EXTRACT_U_1(pptr));",
          "",
          "[Removed Lines]",
          "1099:    ND_TCHECK(pptr[0]);",
          "",
          "[Added Lines]",
          "1099:    ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1136:  struct in6_addr addr;",
          "1137:  u_int plen, plenbytes;",
          "1140:  ITEMCHECK(1);",
          "1141:  plen = pd[0];",
          "1142:  if (128 < plen)",
          "",
          "[Removed Lines]",
          "1139:  ND_TCHECK(pd[0]);",
          "",
          "[Added Lines]",
          "1139:  ND_TCHECK_1(pd);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1214:  struct in6_addr addr;",
          "1215:  u_int plen;",
          "1220:  if ((24+64) > plen)",
          "",
          "[Removed Lines]",
          "1217:  ND_TCHECK(pptr[0]);",
          "",
          "[Added Lines]",
          "1217:  ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1253:         uint8_t addr[19];",
          "1254:  u_int plen;",
          "1259:  if (152 < plen)",
          "",
          "[Removed Lines]",
          "1256:  ND_TCHECK(pptr[0]);",
          "",
          "[Added Lines]",
          "1256:  ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1283:         uint8_t addr[19];",
          "1284:  u_int plen;",
          "1289:  if ((24+64) > plen)",
          "",
          "[Removed Lines]",
          "1286:  ND_TCHECK(pptr[0]);",
          "",
          "[Added Lines]",
          "1286:  ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1344:     while (tptr < pptr + len) {",
          "",
          "[Removed Lines]",
          "1345:         ND_TCHECK(tptr[0]);",
          "",
          "[Added Lines]",
          "1345:         ND_TCHECK_1(tptr);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1350:         if (EXTRACT_U_1(tptr) < BGP_AS_SEG_TYPE_MIN || EXTRACT_U_1(tptr) > BGP_AS_SEG_TYPE_MAX) {",
          "1351:             goto trunc;",
          "1352:         }",
          "1354:         tptr += 2 + tptr[1] * 2;",
          "1355:     }",
          "",
          "[Removed Lines]",
          "1353:         ND_TCHECK(tptr[1]);",
          "",
          "[Added Lines]",
          "1353:         ND_TCHECK_1(tptr + 1);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1430:                 as_size = bgp_attr_get_as_size(ndo, atype, pptr, len);",
          "1432:   while (tptr < pptr + len) {",
          "1434:                         ND_PRINT((ndo, \"%s\", tok2str(bgp_as_path_segment_open_values,",
          "1435:       \"?\", EXTRACT_U_1(tptr))));",
          "1437:                         for (i = 0; i < tptr[1] * as_size; i += as_size) {",
          "1438:                             ND_TCHECK2(tptr[2 + i], as_size);",
          "1439:        ND_PRINT((ndo, \"%s \",",
          "",
          "[Removed Lines]",
          "1433:    ND_TCHECK(tptr[0]);",
          "1436:    ND_TCHECK(tptr[1]);",
          "",
          "[Added Lines]",
          "1433:    ND_TCHECK_1(tptr);",
          "1436:    ND_TCHECK_1(tptr + 1);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1442:     EXTRACT_BE_U_2(tptr + i + 2) :",
          "1443:     EXTRACT_BE_U_4(tptr + i + 2))));",
          "1444:                         }",
          "1446:                         ND_PRINT((ndo, \"%s\", tok2str(bgp_as_path_segment_close_values,",
          "1447:       \"?\", EXTRACT_U_1(tptr))));",
          "1449:                         tptr += 2 + tptr[1] * as_size;",
          "1450:   }",
          "1451:   break;",
          "",
          "[Removed Lines]",
          "1445:    ND_TCHECK(tptr[0]);",
          "1448:                         ND_TCHECK(tptr[1]);",
          "",
          "[Added Lines]",
          "1445:    ND_TCHECK_1(tptr);",
          "1448:                         ND_TCHECK_1(tptr + 1);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1606:                 tptr +=3;",
          "1609:   nhlen = tptr[0];",
          "1610:                 tlen = nhlen;",
          "1611:                 tptr++;",
          "",
          "[Removed Lines]",
          "1608:   ND_TCHECK(tptr[0]);",
          "",
          "[Added Lines]",
          "1608:   ND_TCHECK_1(tptr);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1738:   ND_PRINT((ndo, \", nh-length: %u\", nhlen));",
          "1739:   tptr += tlen;",
          "1742:   snpa = tptr[0];",
          "1743:   tptr++;",
          "1745:   if (snpa) {",
          "1746:    ND_PRINT((ndo, \"\\n\\t    %u SNPA\", snpa));",
          "1747:    for (/*nothing*/; snpa > 0; snpa--) {",
          "1749:     ND_PRINT((ndo, \"\\n\\t      %d bytes\", EXTRACT_U_1(tptr)));",
          "1750:     tptr += tptr[0] + 1;",
          "1751:    }",
          "",
          "[Removed Lines]",
          "1741:   ND_TCHECK(tptr[0]);",
          "1748:     ND_TCHECK(tptr[0]);",
          "",
          "[Added Lines]",
          "1741:   ND_TCHECK_1(tptr);",
          "1748:     ND_TCHECK_1(tptr);",
          "",
          "---------------"
        ],
        "print-carp.c||print-carp.c": [
          "File: print-carp.c -> print-carp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:  int version, type;",
          "52:  const char *type_s;",
          "55:  version = (bp[0] & 0xf0) >> 4;",
          "56:  type = bp[0] & 0x0f;",
          "57:  if (type == 1)",
          "",
          "[Removed Lines]",
          "54:  ND_TCHECK(bp[0]);",
          "",
          "[Added Lines]",
          "54:  ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:   ND_PRINT((ndo, \"[ttl=%d!] \", ttl));",
          "64:  if (version != 2 || type != 1)",
          "65:   return;",
          "68:  ND_PRINT((ndo, \"vhid=%d advbase=%d advskew=%d authlen=%d \",",
          "69:      EXTRACT_U_1(bp + 1), EXTRACT_U_1(bp + 5), EXTRACT_U_1(bp + 2), EXTRACT_U_1(bp + 3)));",
          "70:  if (ndo->ndo_vflag) {",
          "",
          "[Removed Lines]",
          "66:  ND_TCHECK(bp[2]);",
          "67:  ND_TCHECK(bp[5]);",
          "",
          "[Added Lines]",
          "66:  ND_TCHECK_1(bp + 2);",
          "67:  ND_TCHECK_1(bp + 5);",
          "",
          "---------------"
        ],
        "print-icmp6.c||print-icmp6.c": [
          "File: print-icmp6.c -> print-icmp6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1490:     ND_PRINT((ndo,\" [gaddr %s\", ip6addr_string(ndo, bp + 8)));",
          "1492:     if (ndo->ndo_vflag) {",
          "1494:  if (EXTRACT_U_1(bp + 24) & 0x08) {",
          "1495:   ND_PRINT((ndo,\" sflag\"));",
          "1496:  }",
          "",
          "[Removed Lines]",
          "1493:         ND_TCHECK(bp[25]);",
          "",
          "[Added Lines]",
          "1493:         ND_TCHECK_1(bp + 25);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1756:     ND_PRINT((ndo,\", \"));",
          "1757:    ND_PRINT((ndo,\"DNS name\"));",
          "1758:    cp = (const u_char *)(ni6 + 1) + 4;",
          "1760:    if (EXTRACT_U_1(cp) == ep - cp - 1) {",
          "1762:     if (ndo->ndo_vflag)",
          "",
          "[Removed Lines]",
          "1759:    ND_TCHECK(cp[0]);",
          "",
          "[Added Lines]",
          "1759:    ND_TCHECK_1(cp);",
          "",
          "---------------"
        ],
        "print-ip.c||print-ip.c": [
          "File: print-ip.c -> print-ip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:  }",
          "68:  if ((length + 1) & 3)",
          "69:   ND_PRINT((ndo, \" [bad length %u]\", length));",
          "71:  ptr = cp[2] - 1;",
          "72:  if (ptr < 3 || ((ptr + 1) & 3) || ptr > length + 1)",
          "73:   ND_PRINT((ndo, \" [bad ptr %u]\", EXTRACT_U_1(cp + 2)));",
          "",
          "[Removed Lines]",
          "70:  ND_TCHECK(cp[2]);",
          "",
          "[Added Lines]",
          "70:  ND_TCHECK_1(cp + 2);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "113:   else if (tt == IPOPT_NOP)",
          "114:    len = 1;",
          "115:   else {",
          "117:    len = cp[1];",
          "118:    if (len < 2)",
          "119:     break;",
          "",
          "[Removed Lines]",
          "116:    ND_TCHECK(cp[1]);",
          "",
          "[Added Lines]",
          "116:    ND_TCHECK_1(cp + 1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "185:  hoplen = ((cp[3]&0xF) != IPOPT_TS_TSONLY) ? 8 : 4;",
          "186:  if ((length - 4) & (hoplen-1))",
          "187:   ND_PRINT((ndo, \"[bad length %u]\", length));",
          "189:  ptr = cp[2] - 1;",
          "190:  len = 0;",
          "191:  if (ptr < 4 || ((ptr - 4) & (hoplen-1)) || ptr > length + 1)",
          "192:   ND_PRINT((ndo, \"[bad ptr %u]\", EXTRACT_U_1(cp + 2)));",
          "194:  switch (EXTRACT_U_1(cp + 3)&0xF) {",
          "195:  case IPOPT_TS_TSONLY:",
          "196:   ND_PRINT((ndo, \"TSONLY\"));",
          "",
          "[Removed Lines]",
          "188:  ND_TCHECK(cp[2]);",
          "193:  ND_TCHECK(cp[3]);",
          "",
          "[Added Lines]",
          "188:  ND_TCHECK_1(cp + 2);",
          "193:  ND_TCHECK_1(cp + 3);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "265:    option_len = 1;",
          "267:   else {",
          "269:    option_len = cp[1];",
          "270:    if (option_len < 2) {",
          "271:     ND_PRINT((ndo, \" [bad length %u]\", option_len));",
          "",
          "[Removed Lines]",
          "268:    ND_TCHECK(cp[1]);",
          "",
          "[Added Lines]",
          "268:    ND_TCHECK_1(cp + 1);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "301:     ND_PRINT((ndo, \" [bad length %u]\", option_len));",
          "302:     break;",
          "303:    }",
          "305:    if (EXTRACT_BE_U_2(cp + 2) != 0)",
          "306:     ND_PRINT((ndo, \" value %u\", EXTRACT_BE_U_2(cp + 2)));",
          "307:    break;",
          "",
          "[Removed Lines]",
          "304:    ND_TCHECK(cp[3]);",
          "",
          "[Added Lines]",
          "304:    ND_TCHECK_1(cp + 3);",
          "",
          "---------------"
        ],
        "print-isakmp.c||print-isakmp.c": [
          "File: print-isakmp.c -> print-isakmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "918:  int totlen;",
          "919:  uint32_t t, v;",
          "922:  if (EXTRACT_U_1(p) & 0x80)",
          "923:   totlen = 4;",
          "924:  else {",
          "",
          "[Removed Lines]",
          "921:  ND_TCHECK(p[0]);",
          "",
          "[Added Lines]",
          "921:  ND_TCHECK_1(p);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "969:  int totlen;",
          "970:  uint32_t t;",
          "973:  if (EXTRACT_U_1(p) & 0x80)",
          "974:   totlen = 4;",
          "975:  else {",
          "",
          "[Removed Lines]",
          "972:  ND_TCHECK(p[0]);",
          "",
          "[Added Lines]",
          "972:  ND_TCHECK_1(p);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3095:        const u_char *bp, u_int length,",
          "3096:        const u_char *bp2)",
          "3097: {",
          "3099:  if(length == 1 && EXTRACT_U_1(bp)==0xff) {",
          "3100:   ND_PRINT((ndo, \"isakmp-nat-keep-alive\"));",
          "3101:   return;",
          "",
          "[Removed Lines]",
          "3098:  ND_TCHECK(bp[0]);",
          "",
          "[Added Lines]",
          "3098:  ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3104:  if(length < 4) {",
          "3105:   goto trunc;",
          "3106:  }",
          "",
          "[Removed Lines]",
          "3107:  ND_TCHECK(bp[3]);",
          "",
          "[Added Lines]",
          "3107:  ND_TCHECK_1(bp + 3);",
          "",
          "---------------"
        ],
        "print-juniper.c||print-juniper.c": [
          "File: print-juniper.c -> print-juniper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1317:     l2info->caplen -= l2info->header_len;",
          "1321:     while (lp->s != NULL) {",
          "1322:         if (lp->pictype == l2info->pictype) {",
          "",
          "[Removed Lines]",
          "1320:     ND_TCHECK(p[0]);",
          "",
          "[Added Lines]",
          "1320:     ND_TCHECK_1(p);",
          "",
          "---------------"
        ],
        "print-mobility.c||print-mobility.c": [
          "File: print-mobility.c -> print-mobility.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:  unsigned i, optlen;",
          "120:  for (i = 0; i < len; i += optlen) {",
          "122:   if (EXTRACT_U_1(bp + i) == IP6MOPT_PAD1)",
          "123:    optlen = 1;",
          "124:   else {",
          "125:    if (i + 1 < len) {",
          "127:     optlen = bp[i + 1] + 2;",
          "128:    }",
          "129:    else",
          "",
          "[Removed Lines]",
          "121:   ND_TCHECK(bp[i]);",
          "126:     ND_TCHECK(bp[i + 1]);",
          "",
          "[Added Lines]",
          "121:   ND_TCHECK_1(bp + i);",
          "126:     ND_TCHECK_1(bp + i + 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "131:   }",
          "132:   if (i + optlen > len)",
          "133:    goto trunc;",
          "136:   switch (EXTRACT_U_1(bp + i)) {",
          "137:   case IP6MOPT_PAD1:",
          "",
          "[Removed Lines]",
          "134:   ND_TCHECK(bp[i + optlen]);",
          "",
          "[Added Lines]",
          "134:   ND_TCHECK_1(bp + i + optlen);",
          "",
          "---------------"
        ],
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "253: {",
          "254:  register u_char type;",
          "257:  type = bp[1];",
          "259:  ND_PRINT((ndo, \" %s\", tok2str(pimv1_type_str, \"[type %u]\", type)));",
          "",
          "[Removed Lines]",
          "256:  ND_TCHECK(bp[1]);",
          "",
          "[Added Lines]",
          "256:  ND_TCHECK_1(bp + 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "325:   }",
          "326:   break;",
          "327:  }",
          "329:  if ((EXTRACT_U_1(bp + 4) >> 4) != 1)",
          "330:   ND_PRINT((ndo, \" [v%d]\", EXTRACT_U_1(bp + 4) >> 4));",
          "331:  return;",
          "",
          "[Removed Lines]",
          "328:  ND_TCHECK(bp[4]);",
          "",
          "[Added Lines]",
          "328:  ND_TCHECK_1(bp + 4);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352:  if (len < 8)",
          "353:   goto trunc;",
          "355:  ND_PRINT((ndo, \" auto-rp \"));",
          "356:  type = bp[0];",
          "357:  switch (type) {",
          "",
          "[Removed Lines]",
          "354:  ND_TCHECK(bp[0]);",
          "",
          "[Added Lines]",
          "354:  ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "366:   break;",
          "367:  }",
          "370:  numrps = bp[1];",
          "372:  ND_TCHECK_2(bp + 2);",
          "",
          "[Removed Lines]",
          "369:  ND_TCHECK(bp[1]);",
          "",
          "[Added Lines]",
          "369:  ND_TCHECK_1(bp + 1);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "406:   len -= 4;",
          "407:   if (len < 1)",
          "408:    goto trunc;",
          "410:   switch (EXTRACT_U_1(bp) & 0x3) {",
          "411:   case 0: ND_PRINT((ndo, \" PIMv?\"));",
          "412:    break;",
          "",
          "[Removed Lines]",
          "409:   ND_TCHECK(bp[0]);",
          "",
          "[Added Lines]",
          "409:   ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "423:   len -= 1;",
          "424:   if (len < 1)",
          "425:    goto trunc;",
          "427:   nentries = bp[0];",
          "428:   bp += 1;",
          "429:   len -= 1;",
          "",
          "[Removed Lines]",
          "426:   ND_TCHECK(bp[0]);",
          "",
          "[Added Lines]",
          "426:   ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "566:  if (addr_len == 0) {",
          "567:   if (len < 2)",
          "568:    goto trunc;",
          "570:   switch (EXTRACT_U_1(bp)) {",
          "571:   case 1:",
          "572:    af = AF_INET;",
          "",
          "[Removed Lines]",
          "569:   ND_TCHECK(bp[1]);",
          "",
          "[Added Lines]",
          "569:   ND_TCHECK_1(bp + 1);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1029:   len -= 2;",
          "1030:   if (len < 1)",
          "1031:    goto trunc;",
          "1033:   ND_PRINT((ndo, \" hashmlen=%d\", EXTRACT_U_1(bp)));",
          "1034:   if (len < 2)",
          "1035:    goto trunc;",
          "1037:   ND_PRINT((ndo, \" BSRprio=%d\", EXTRACT_U_1(bp + 1)));",
          "1038:   bp += 2;",
          "1039:   len -= 2;",
          "",
          "[Removed Lines]",
          "1032:   ND_TCHECK(bp[0]);",
          "1036:   ND_TCHECK(bp[2]);",
          "",
          "[Added Lines]",
          "1032:   ND_TCHECK_1(bp);",
          "1036:   ND_TCHECK_1(bp + 2);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1057:    if (len < 1)",
          "1058:     goto trunc;",
          "1060:    ND_PRINT((ndo, \" RPcnt=%d\", EXTRACT_U_1(bp)));",
          "1061:    if (len < 2)",
          "1062:     goto trunc;",
          "1064:    ND_PRINT((ndo, \" FRPcnt=%d\", frpcnt = EXTRACT_U_1(bp + 1)));",
          "1065:    if (len < 4)",
          "1066:     goto trunc;",
          "",
          "[Removed Lines]",
          "1059:    ND_TCHECK(bp[0]);",
          "1063:    ND_TCHECK(bp[1]);",
          "",
          "[Added Lines]",
          "1059:    ND_TCHECK_1(bp);",
          "1063:    ND_TCHECK_1(bp + 1);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1086:            EXTRACT_BE_U_2(bp));",
          "1087:     if (len < 3)",
          "1088:      goto trunc;",
          "1090:     ND_PRINT((ndo, \",prio=%d\", EXTRACT_U_1(bp + 2)));",
          "1091:     if (len < 4)",
          "1092:      goto trunc;",
          "",
          "[Removed Lines]",
          "1089:     ND_TCHECK(bp[2]);",
          "",
          "[Added Lines]",
          "1089:     ND_TCHECK_1(bp + 2);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1123:   if (len < 1)",
          "1124:    goto trunc;",
          "1126:   ND_PRINT((ndo, \" prefix-cnt=%d\", EXTRACT_U_1(bp)));",
          "1127:   pfxcnt = bp[0];",
          "1128:   if (len < 2)",
          "1129:    goto trunc;",
          "1131:   ND_PRINT((ndo, \" prio=%d\", EXTRACT_U_1(bp + 1)));",
          "1132:   if (len < 4)",
          "1133:    goto trunc;",
          "",
          "[Removed Lines]",
          "1125:   ND_TCHECK(bp[0]);",
          "1130:   ND_TCHECK(bp[1]);",
          "",
          "[Added Lines]",
          "1125:   ND_TCHECK_1(bp);",
          "1130:   ND_TCHECK_1(bp + 1);",
          "",
          "---------------"
        ],
        "print-smb.c||print-smb.c": [
          "File: print-smb.c -> print-smb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:     const char *f1 = NULL, *f2 = NULL;",
          "180:     int pcnt, dcnt;",
          "183:     if (request) {",
          "184:  ND_TCHECK_2(w + (14 * 2));",
          "185:  pcnt = EXTRACT_LE_U_2(w + 9 * 2);",
          "",
          "[Removed Lines]",
          "182:     ND_TCHECK(words[0]);",
          "",
          "[Added Lines]",
          "182:     ND_TCHECK_1(words);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "244:     const u_char *maxbuf = data + datalen;",
          "245:     int command;",
          "248:     command = data[0];",
          "250:     smb_fdata(ndo, param, \"BROWSE PACKET\\n|Param \", param+paramlen, unicodestr);",
          "",
          "[Removed Lines]",
          "247:     ND_TCHECK(data[0]);",
          "",
          "[Added Lines]",
          "247:     ND_TCHECK_1(data);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "400:     u_int wct, bcc;",
          "401:     const char *f1 = NULL, *f2 = NULL;",
          "404:     wct = words[0];",
          "405:     if (request)",
          "406:  f2 = \"*|Dialect=[Y]\\n\";",
          "",
          "[Removed Lines]",
          "403:     ND_TCHECK(words[0]);",
          "",
          "[Added Lines]",
          "403:     ND_TCHECK_1(words);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "442:     u_int wct, bcc;",
          "443:     const char *f1 = NULL, *f2 = NULL;",
          "446:     wct = words[0];",
          "447:     if (request) {",
          "448:  if (wct == 10)",
          "",
          "[Removed Lines]",
          "445:     ND_TCHECK(words[0]);",
          "",
          "[Added Lines]",
          "445:     ND_TCHECK_1(words);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "488:     const u_char *maxwords;",
          "489:     const char *f1 = NULL, *f2 = NULL;",
          "492:     wct = words[0];",
          "493:     if (request) {",
          "494:  f1 = \"Com2=[w]\\nOff2=[d]\\nHandle=[d]\\nLockType=[w]\\nTimeOut=[D]\\nUnlockCount=[d]\\nLockCount=[d]\\n\";",
          "496:  if (EXTRACT_U_1(words + 7) & 0x10)",
          "497:      f2 = \"*Process=[d]\\n[P2]Offset=[M]\\nLength=[M]\\n\";",
          "498:  else",
          "",
          "[Removed Lines]",
          "491:     ND_TCHECK(words[0]);",
          "495:  ND_TCHECK(words[7]);",
          "",
          "[Added Lines]",
          "491:     ND_TCHECK_1(words);",
          "495:  ND_TCHECK_1(words + 7);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "807:         \"[P4]SMB Command   =  [B]\\nError class   =  [BP1]\\nError code    =  [d]\\nFlags1        =  [B]\\nFlags2        =  [B][P13]\\nTree ID       =  [d]\\nProc ID       =  [d]\\nUID           =  [d]\\nMID           =  [d]\\nWord Count    =  [b]\\n\";",
          "808:     int smboffset;",
          "811:     request = (buf[9] & 0x80) ? 0 : 1;",
          "812:     startbuf = buf;",
          "",
          "[Removed Lines]",
          "810:     ND_TCHECK(buf[9]);",
          "",
          "[Added Lines]",
          "810:     ND_TCHECK_1(buf + 9);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "850:  int newsmboffset;",
          "852:  words = buf + smboffset;",
          "854:  wct = words[0];",
          "855:  data = words + 1 + wct * 2;",
          "856:  maxwords = min(data, maxbuf);",
          "",
          "[Removed Lines]",
          "853:  ND_TCHECK(words[0]);",
          "",
          "[Added Lines]",
          "853:  ND_TCHECK_1(words);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "899:      break;",
          "900:  if (wct == 0)",
          "901:      break;",
          "903:  command = words[1];",
          "904:  if (command == 0xFF)",
          "905:      break;",
          "",
          "[Removed Lines]",
          "902:  ND_TCHECK(words[1]);",
          "",
          "[Added Lines]",
          "902:  ND_TCHECK_1(words + 1);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1386:     if (maxbuf > ndo->ndo_snapend)",
          "1387:  maxbuf = ndo->ndo_snapend;",
          "1389:     len = EXTRACT_LE_U_2(data);",
          "1390:     command = data[4];",
          "1391:     data2 = data + len;",
          "",
          "[Removed Lines]",
          "1388:     ND_TCHECK(data[4]);",
          "",
          "[Added Lines]",
          "1388:     ND_TCHECK_1(data + 4);",
          "",
          "---------------"
        ],
        "print-stp.c||print-stp.c": [
          "File: print-stp.c -> print-stp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "305:     ND_PRINT((ndo, \"\\n\\tCIST bridge-id %s, \",",
          "306:            stp_print_bridge_id(ptr + MST_BPDU_CIST_BRIDGE_ID_OFFSET)));",
          "309:     ND_PRINT((ndo, \"CIST remaining-hops %d\", EXTRACT_U_1(ptr + MST_BPDU_CIST_REMAIN_HOPS_OFFSET)));",
          "",
          "[Removed Lines]",
          "308:     ND_TCHECK(ptr[MST_BPDU_CIST_REMAIN_HOPS_OFFSET]);",
          "",
          "[Added Lines]",
          "308:     ND_TCHECK_1(ptr + MST_BPDU_CIST_REMAIN_HOPS_OFFSET);",
          "",
          "---------------"
        ],
        "print-vrrp.c||print-vrrp.c": [
          "File: print-vrrp.c -> print-vrrp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:  const char *type_s;",
          "114:  version = (bp[0] & 0xf0) >> 4;",
          "115:  type = bp[0] & 0x0f;",
          "116:  type_s = tok2str(type2str, \"unknown type (%u)\", type);",
          "",
          "[Removed Lines]",
          "113:  ND_TCHECK(bp[0]);",
          "",
          "[Added Lines]",
          "113:  ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "119:   ND_PRINT((ndo, \", (ttl %u)\", ttl));",
          "120:  if (version < 2 || version > 3 || type != VRRP_TYPE_ADVERTISEMENT)",
          "121:   return;",
          "123:  ND_PRINT((ndo, \", vrid %u, prio %u\", EXTRACT_U_1(bp + 1), EXTRACT_U_1(bp + 2)));",
          "126:  if (version == 2) {",
          "127:   auth_type = bp[4];",
          "",
          "[Removed Lines]",
          "122:  ND_TCHECK(bp[2]);",
          "124:  ND_TCHECK(bp[5]);",
          "",
          "[Added Lines]",
          "122:  ND_TCHECK_1(bp + 2);",
          "124:  ND_TCHECK_1(bp + 5);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "162:   c = ' ';",
          "163:   bp += 8;",
          "164:   for (i = 0; i < naddrs; i++) {",
          "166:    ND_PRINT((ndo, \"%c%s\", c, ipaddr_string(ndo, bp)));",
          "167:    c = ',';",
          "168:    bp += 4;",
          "169:   }",
          "172:    ND_PRINT((ndo, \" auth \\\"\"));",
          "173:    if (fn_printn(ndo, bp, 8, ndo->ndo_snapend)) {",
          "174:     ND_PRINT((ndo, \"\\\"\"));",
          "",
          "[Removed Lines]",
          "165:    ND_TCHECK(bp[3]);",
          "171:    ND_TCHECK(bp[7]);",
          "",
          "[Added Lines]",
          "165:    ND_TCHECK_1(bp + 3);",
          "171:    ND_TCHECK_1(bp + 7);",
          "",
          "---------------"
        ],
        "smbutil.c||smbutil.c": [
          "File: smbutil.c -> smbutil.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "282:  return;",
          "283:     ND_PRINT((ndo, \"[%03X] \", i));",
          "284:     for (i = 0; i < len; /*nothing*/) {",
          "286:  ND_PRINT((ndo, \"%02X \", EXTRACT_U_1(buf + i) & 0xff));",
          "287:  i++;",
          "288:  if (i%8 == 0)",
          "",
          "[Removed Lines]",
          "285:         ND_TCHECK(buf[i]);",
          "",
          "[Added Lines]",
          "285:         ND_TCHECK_1(buf + i);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "356:  if (((s - startbuf) % 2) != 0) {",
          "358:      s++;",
          "359:  }",
          "360:     }",
          "",
          "[Removed Lines]",
          "357:      ND_TCHECK(s[0]);",
          "",
          "[Added Lines]",
          "357:      ND_TCHECK_1(s);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "366:  sp = s;",
          "367:  if (!use_unicode) {",
          "368:      for (;;) {",
          "371:   if (EXTRACT_U_1(sp) == 0)",
          "372:       break;",
          "",
          "[Removed Lines]",
          "369:   ND_TCHECK(sp[0]);",
          "",
          "[Added Lines]",
          "369:   ND_TCHECK_1(sp);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "391:     }",
          "392:     if (!use_unicode) {",
          "393:      while (strsize != 0) {",
          "395:      if (l >= MAX_UNISTR_SIZE)",
          "396:   break;",
          "397:      if (ND_ISPRINT(EXTRACT_U_1(s)))",
          "",
          "[Removed Lines]",
          "394:           ND_TCHECK(s[0]);",
          "",
          "[Added Lines]",
          "394:           ND_TCHECK_1(s);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "444:     while (*fmt && buf<maxbuf) {",
          "445:  switch (*fmt) {",
          "446:  case 'a':",
          "448:      write_bits(ndo, EXTRACT_U_1(buf), attrib_fmt);",
          "449:      buf++;",
          "450:      fmt++;",
          "",
          "[Removed Lines]",
          "447:      ND_TCHECK(buf[0]);",
          "",
          "[Added Lines]",
          "447:      ND_TCHECK_1(buf);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "472:      strncpy(bitfmt, fmt, l);",
          "473:      bitfmt[l] = '\\0';",
          "474:      fmt = p + 1;",
          "476:      write_bits(ndo, EXTRACT_U_1(buf), bitfmt);",
          "477:      buf++;",
          "478:      break;",
          "",
          "[Removed Lines]",
          "475:      ND_TCHECK(buf[0]);",
          "",
          "[Added Lines]",
          "475:      ND_TCHECK_1(buf);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "495:  case 'b':",
          "496:    {",
          "497:      unsigned int x;",
          "499:      x = buf[0];",
          "500:      ND_PRINT((ndo, \"%u (0x%x)\", x, x));",
          "501:      buf += 1;",
          "",
          "[Removed Lines]",
          "498:      ND_TCHECK(buf[0]);",
          "",
          "[Added Lines]",
          "498:      ND_TCHECK_1(buf);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "554:  case 'B':",
          "555:    {",
          "556:      unsigned int x;",
          "558:      x = buf[0];",
          "559:      ND_PRINT((ndo, \"0x%X\", x));",
          "560:      buf += 1;",
          "",
          "[Removed Lines]",
          "557:      ND_TCHECK(buf[0]);",
          "",
          "[Added Lines]",
          "557:      ND_TCHECK_1(buf);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "589:      switch (*fmt) {",
          "591:      case 'b':",
          "593:   stringlen = buf[0];",
          "594:   ND_PRINT((ndo, \"%u\", stringlen));",
          "595:   buf += 1;",
          "",
          "[Removed Lines]",
          "592:   ND_TCHECK(buf[0]);",
          "",
          "[Added Lines]",
          "592:   ND_TCHECK_1(buf);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "716:       name_type_str(name_type)));",
          "717:   break;",
          "718:      case 2:",
          "720:   name_type = buf[15];",
          "721:   ND_PRINT((ndo, \"%-15.15s NameType=0x%02X (%s)\", buf, name_type,",
          "722:       name_type_str(name_type)));",
          "",
          "[Removed Lines]",
          "719:   ND_TCHECK(buf[15]);",
          "",
          "[Added Lines]",
          "719:   ND_TCHECK_1(buf + 15);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "10a52254aeb943a15518461c055429cc42a305ef",
      "candidate_info": {
        "commit_hash": "10a52254aeb943a15518461c055429cc42a305ef",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/10a52254aeb943a15518461c055429cc42a305ef",
        "files": [
          "print-ip.c",
          "print-pim.c",
          "print-sl.c",
          "print-smb.c",
          "print-sunatm.c",
          "print-vjc.c"
        ],
        "message": "Use more the EXTRACT_U_1() macro (44/n)\n\nIn: switch (... p[n] ...) ...",
        "before_after_code_files": [
          "print-ip.c||print-ip.c",
          "print-pim.c||print-pim.c",
          "print-sl.c||print-sl.c",
          "print-smb.c||print-smb.c",
          "print-sunatm.c||print-sunatm.c",
          "print-vjc.c||print-vjc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-pim.c||print-pim.c"
          ],
          "candidate": [
            "print-pim.c||print-pim.c"
          ]
        }
      },
      "candidate_diff": {
        "print-ip.c||print-ip.c": [
          "File: print-ip.c -> print-ip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "191:  if (ptr < 4 || ((ptr - 4) & (hoplen-1)) || ptr > length + 1)",
          "192:   ND_PRINT((ndo, \"[bad ptr %u]\", EXTRACT_U_1(cp + 2)));",
          "193:  ND_TCHECK(cp[3]);",
          "195:  case IPOPT_TS_TSONLY:",
          "196:   ND_PRINT((ndo, \"TSONLY\"));",
          "197:   break;",
          "",
          "[Removed Lines]",
          "194:  switch (cp[3]&0xF) {",
          "",
          "[Added Lines]",
          "194:  switch (EXTRACT_U_1(cp + 3)&0xF) {",
          "",
          "---------------"
        ],
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "260:  switch (type) {",
          "261:  case PIMV1_TYPE_QUERY:",
          "262:   if (ND_TTEST(bp[8])) {",
          "264:    case 0:",
          "265:     ND_PRINT((ndo, \" Dense-mode\"));",
          "266:     break;",
          "",
          "[Removed Lines]",
          "263:    switch (bp[8] >> 4) {",
          "",
          "[Added Lines]",
          "263:    switch (EXTRACT_U_1(bp + 8) >> 4) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "407:   if (len < 1)",
          "408:    goto trunc;",
          "409:   ND_TCHECK(bp[0]);",
          "411:   case 0: ND_PRINT((ndo, \" PIMv?\"));",
          "412:    break;",
          "413:   case 1: ND_PRINT((ndo, \" PIMv1\"));",
          "",
          "[Removed Lines]",
          "410:   switch (bp[0] & 0x3) {",
          "",
          "[Added Lines]",
          "410:   switch (EXTRACT_U_1(bp) & 0x3) {",
          "",
          "---------------"
        ],
        "print-sl.c||print-sl.c": [
          "File: print-sl.c -> print-sl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "155:   ND_PRINT((ndo, \"%02x: \", EXTRACT_U_1(p + SLX_CHDR + CHDR_LEN - 1)));",
          "156:   return;",
          "157:  }",
          "160:  case TYPE_IP:",
          "161:   ND_PRINT((ndo, \"ip %d: \", length + SLIP_HDRLEN));",
          "",
          "[Removed Lines]",
          "158:  switch (p[SLX_CHDR] & 0xf0) {",
          "",
          "[Added Lines]",
          "158:  switch (EXTRACT_U_1(p + SLX_CHDR) & 0xf0) {",
          "",
          "---------------"
        ],
        "print-smb.c||print-smb.c": [
          "File: print-smb.c -> print-smb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1200:    ND_TCHECK(*p);",
          "1201:    if (EXTRACT_U_1(p) & 0x80)",
          "1202:        ND_PRINT((ndo, \"<GROUP> \"));",
          "1204:    case 0x00: ND_PRINT((ndo, \"B \")); break;",
          "1205:    case 0x20: ND_PRINT((ndo, \"P \")); break;",
          "1206:    case 0x40: ND_PRINT((ndo, \"M \")); break;",
          "",
          "[Removed Lines]",
          "1203:    switch (p[0] & 0x60) {",
          "",
          "[Added Lines]",
          "1203:    switch (EXTRACT_U_1(p) & 0x60) {",
          "",
          "---------------"
        ],
        "print-sunatm.c||print-sunatm.c": [
          "File: print-sunatm.c -> print-sunatm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:   ND_PRINT((ndo, EXTRACT_U_1(p + DIR_POS) & 0x80 ? \"Tx: \" : \"Rx: \"));",
          "82:  }",
          "86:  case PT_LANE:",
          "87:   traftype = ATM_LANE;",
          "",
          "[Removed Lines]",
          "84:  switch (p[DIR_POS] & 0x0f) {",
          "",
          "[Added Lines]",
          "84:  switch (EXTRACT_U_1(p + DIR_POS) & 0x0f) {",
          "",
          "---------------"
        ],
        "print-vjc.c||print-vjc.c": [
          "File: print-vjc.c -> print-vjc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "88: {",
          "89:  int i;",
          "92:  case TYPE_IP:",
          "93:   if (ndo->ndo_eflag)",
          "94:    ND_PRINT((ndo, \"(vjc type=IP) \"));",
          "",
          "[Removed Lines]",
          "91:  switch (bp[0] & 0xf0) {",
          "",
          "[Added Lines]",
          "91:  switch (EXTRACT_U_1(bp) & 0xf0) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}