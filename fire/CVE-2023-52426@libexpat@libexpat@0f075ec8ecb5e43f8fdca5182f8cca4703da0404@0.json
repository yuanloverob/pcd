{
  "cve_id": "CVE-2023-52426",
  "cve_desc": "libexpat through 2.5.0 allows recursive XML Entity Expansion if XML_DTD is undefined at compile time.",
  "repo": "libexpat/libexpat",
  "patch_hash": "0f075ec8ecb5e43f8fdca5182f8cca4703da0404",
  "patch_info": {
    "commit_hash": "0f075ec8ecb5e43f8fdca5182f8cca4703da0404",
    "repo": "libexpat/libexpat",
    "commit_url": "https://github.com/libexpat/libexpat/commit/0f075ec8ecb5e43f8fdca5182f8cca4703da0404",
    "files": [
      "expat/CMakeLists.txt",
      "expat/lib/expat.h",
      "expat/lib/internal.h",
      "expat/lib/libexpat.def.cmake",
      "expat/lib/xmlparse.c",
      "expat/xmlwf/xmlwf.c"
    ],
    "message": "lib|xmlwf|cmake: Extend scope of billion laughs attack protection\n\n.. from \"defined(XML_DTD)\" to \"defined(XML_DTD) || XML_GE==1\".",
    "before_after_code_files": [
      "expat/lib/expat.h||expat/lib/expat.h",
      "expat/lib/internal.h||expat/lib/internal.h",
      "expat/lib/libexpat.def.cmake||expat/lib/libexpat.def.cmake",
      "expat/lib/xmlparse.c||expat/lib/xmlparse.c",
      "expat/xmlwf/xmlwf.c||expat/xmlwf/xmlwf.c"
    ]
  },
  "patch_diff": {
    "expat/lib/expat.h||expat/lib/expat.h": [
      "File: expat/lib/expat.h -> expat/lib/expat.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1038: XMLPARSEAPI(const XML_Feature *)",
      "1039: XML_GetFeatureList(void);",
      "1043: XMLPARSEAPI(XML_Bool)",
      "1044: XML_SetBillionLaughsAttackProtectionMaximumAmplification(",
      "1045:     XML_Parser parser, float maximumAmplificationFactor);",
      "1048: XMLPARSEAPI(XML_Bool)",
      "1049: XML_SetBillionLaughsAttackProtectionActivationThreshold(",
      "1050:     XML_Parser parser, unsigned long long activationThresholdBytes);",
      "",
      "[Removed Lines]",
      "1041: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "1041: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------"
    ],
    "expat/lib/internal.h||expat/lib/internal.h": [
      "File: expat/lib/internal.h -> expat/lib/internal.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "154: void _INTERNAL_trim_to_complete_utf8_characters(const char *from,",
      "155:                                                 const char **fromLimRef);",
      "158: unsigned long long testingAccountingGetCountBytesDirect(XML_Parser parser);",
      "159: unsigned long long testingAccountingGetCountBytesIndirect(XML_Parser parser);",
      "160: const char *unsignedCharToPrintable(unsigned char c);",
      "",
      "[Removed Lines]",
      "157: #if defined(XML_DTD)",
      "",
      "[Added Lines]",
      "157: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------"
    ],
    "expat/lib/libexpat.def.cmake||expat/lib/libexpat.def.cmake": [
      "File: expat/lib/libexpat.def.cmake -> expat/lib/libexpat.def.cmake",
      "--- Hunk 1 ---",
      "[Context before]",
      "75:   XML_SetHashSalt @67",
      "76: ; internal @68 removed with version 2.3.1",
      "77: ; added with version 2.4.0",
      "",
      "[Removed Lines]",
      "78: @_EXPAT_COMMENT_DTD@ XML_SetBillionLaughsAttackProtectionActivationThreshold @69",
      "79: @_EXPAT_COMMENT_DTD@ XML_SetBillionLaughsAttackProtectionMaximumAmplification @70",
      "",
      "[Added Lines]",
      "78: @_EXPAT_COMMENT_DTD_OR_GE@ XML_SetBillionLaughsAttackProtectionActivationThreshold @69",
      "79: @_EXPAT_COMMENT_DTD_OR_GE@ XML_SetBillionLaughsAttackProtectionMaximumAmplification @70",
      "",
      "---------------"
    ],
    "expat/lib/xmlparse.c||expat/lib/xmlparse.c": [
      "File: expat/lib/xmlparse.c -> expat/lib/xmlparse.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "417: };",
      "420: typedef unsigned long long XmlBigCount;",
      "421: typedef struct accounting {",
      "422:   XmlBigCount countBytesDirect;",
      "",
      "[Removed Lines]",
      "419: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "419: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "571: static void parserInit(XML_Parser parser, const XML_Char *encodingName);",
      "574: static float accountingGetCurrentAmplification(XML_Parser rootParser);",
      "575: static void accountingReportStats(XML_Parser originParser, const char *epilog);",
      "576: static void accountingOnAbort(XML_Parser originParser);",
      "",
      "[Removed Lines]",
      "573: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "573: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "718:   enum XML_ParamEntityParsing m_paramEntityParsing;",
      "719: #endif",
      "720:   unsigned long m_hash_secret_salt;",
      "722:   ACCOUNTING m_accounting;",
      "723:   ENTITY_STATS m_entity_stats;",
      "724: #endif",
      "",
      "[Removed Lines]",
      "721: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "721: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1178: #endif",
      "1179:   parser->m_hash_secret_salt = 0;",
      "1182:   memset(&parser->m_accounting, 0, sizeof(ACCOUNTING));",
      "1183:   parser->m_accounting.debugLevel = getDebugLevel(\"EXPAT_ACCOUNTING_DEBUG\", 0u);",
      "1184:   parser->m_accounting.maximumAmplificationFactor",
      "",
      "[Removed Lines]",
      "1181: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "1181: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2534: #ifdef XML_ATTR_INFO",
      "2535:     {XML_FEATURE_ATTR_INFO, XML_L(\"XML_ATTR_INFO\"), 0},",
      "2536: #endif",
      "2539:     {XML_FEATURE_BILLION_LAUGHS_ATTACK_PROTECTION_MAXIMUM_AMPLIFICATION_DEFAULT,",
      "2540:      XML_L(\"XML_BLAP_MAX_AMP\"),",
      "2541:      (long int)",
      "",
      "[Removed Lines]",
      "2537: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "2537: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2550:   return features;",
      "2551: }",
      "2554: XML_Bool XMLCALL",
      "2555: XML_SetBillionLaughsAttackProtectionMaximumAmplification(",
      "2556:     XML_Parser parser, float maximumAmplificationFactor) {",
      "",
      "[Removed Lines]",
      "2553: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "2554: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2658:   int tok = XmlContentTok(parser->m_encoding, start, end, &next);",
      "2659:   switch (tok) {",
      "2660:   case XML_TOK_BOM:",
      "2662:     if (! accountingDiffTolerated(parser, tok, start, next, __LINE__,",
      "2663:                                   XML_ACCOUNT_DIRECT)) {",
      "2664:       accountingOnAbort(parser);",
      "2665:       return XML_ERROR_AMPLIFICATION_LIMIT_BREACH;",
      "2666:     }",
      "2670:        i.e. externalEntityInitProcessor3, to pass control directly to",
      "",
      "[Removed Lines]",
      "2661: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "2662: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2778:   for (;;) {",
      "2780:     int tok = XmlContentTok(enc, s, end, &next);",
      "2782:     const char *accountAfter",
      "2783:         = ((tok == XML_TOK_TRAILING_RSQB) || (tok == XML_TOK_TRAILING_CR))",
      "2784:               ? (haveMore ? s /* i.e. 0 bytes */ : end)",
      "",
      "[Removed Lines]",
      "2781: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "2782: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2844:       XML_Char ch = (XML_Char)XmlPredefinedEntityName(",
      "2845:           enc, s + enc->minBytesPerChar, next - enc->minBytesPerChar);",
      "2846:       if (ch) {",
      "2851:         accountingDiffTolerated(parser, tok, (char *)&ch,",
      "2852:                                 ((char *)&ch) + sizeof(XML_Char), __LINE__,",
      "2853:                                 XML_ACCOUNT_ENTITY_EXPANSION);",
      "2855:         if (parser->m_characterDataHandler)",
      "2856:           parser->m_characterDataHandler(parser->m_handlerArg, &ch, 1);",
      "2857:         else if (parser->m_defaultHandler)",
      "",
      "[Removed Lines]",
      "2847: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "2848: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "4053:   for (;;) {",
      "4055:     int tok = XmlCdataSectionTok(enc, s, end, &next);",
      "4057:     if (! accountingDiffTolerated(parser, tok, s, next, __LINE__, account)) {",
      "4058:       accountingOnAbort(parser);",
      "4059:       return XML_ERROR_AMPLIFICATION_LIMIT_BREACH;",
      "",
      "[Removed Lines]",
      "4056: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "4057: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "4207:   tok = XmlIgnoreSectionTok(enc, s, end, &next);",
      "4209:   if (! accountingDiffTolerated(parser, tok, s, next, __LINE__,",
      "4210:                                 XML_ACCOUNT_DIRECT)) {",
      "4211:     accountingOnAbort(parser);",
      "",
      "[Removed Lines]",
      "4208: #  ifdef XML_DTD",
      "",
      "[Added Lines]",
      "4209: #  if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "4297:   const XML_Char *storedversion = NULL;",
      "4298:   int standalone = -1;",
      "4301:   if (! accountingDiffTolerated(parser, XML_TOK_XML_DECL, s, next, __LINE__,",
      "4302:                                 XML_ACCOUNT_DIRECT)) {",
      "4303:     accountingOnAbort(parser);",
      "",
      "[Removed Lines]",
      "4300: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "4301: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "4504:        is not valid to have multiple BOMs.",
      "4506:     else if (tok == XML_TOK_BOM) {",
      "4508:       if (! accountingDiffTolerated(parser, tok, s, next, __LINE__,",
      "4509:                                     XML_ACCOUNT_DIRECT)) {",
      "4510:         accountingOnAbort(parser);",
      "",
      "[Removed Lines]",
      "4507: #  ifdef XML_DTD",
      "",
      "[Added Lines]",
      "4508: #  if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "4720:       }",
      "4721:     }",
      "4722:     role = XmlTokenRole(&parser->m_prologState, tok, s, next, enc);",
      "4724:     switch (role) {",
      "4725:     case XML_ROLE_INSTANCE_START: // bytes accounted in contentProcessor",
      "4726:     case XML_ROLE_XML_DECL:       // bytes accounted in processXmlDecl",
      "4728:       break;",
      "4729:     default:",
      "4730:       if (! accountingDiffTolerated(parser, tok, s, next, __LINE__, account)) {",
      "",
      "[Removed Lines]",
      "4723: #ifdef XML_DTD",
      "4727:     case XML_ROLE_TEXT_DECL:      // bytes accounted in processXmlDecl",
      "",
      "[Added Lines]",
      "4724: #if defined(XML_DTD) || XML_GE == 1",
      "4728: #  ifdef XML_DTD",
      "4729:     case XML_ROLE_TEXT_DECL: // bytes accounted in processXmlDecl",
      "4730: #  endif",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "5661:   for (;;) {",
      "5662:     const char *next = NULL;",
      "5663:     int tok = XmlPrologTok(parser->m_encoding, s, end, &next);",
      "5665:     if (! accountingDiffTolerated(parser, tok, s, next, __LINE__,",
      "5666:                                   XML_ACCOUNT_DIRECT)) {",
      "5667:       accountingOnAbort(parser);",
      "",
      "[Removed Lines]",
      "5664: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "5667: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "5741:       return XML_ERROR_NO_MEMORY;",
      "5742:   }",
      "5743:   entity->open = XML_TRUE;",
      "5745:   entityTrackingOnOpen(parser, entity, __LINE__);",
      "5746: #endif",
      "5747:   entity->processed = 0;",
      "",
      "[Removed Lines]",
      "5744: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "5747: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "5775:       entity->processed = (int)(next - textStart);",
      "5776:       parser->m_processor = internalEntityProcessor;",
      "5777:     } else {",
      "5779:       entityTrackingOnClose(parser, entity, __LINE__);",
      "5781:       entity->open = XML_FALSE;",
      "5782:       parser->m_openInternalEntities = openEntity->next;",
      "",
      "[Removed Lines]",
      "5778: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "5781: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "5826:     return result;",
      "5827:   }",
      "5830:   entityTrackingOnClose(parser, entity, __LINE__);",
      "5831: #endif",
      "5832:   entity->open = XML_FALSE;",
      "",
      "[Removed Lines]",
      "5829: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "5832: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "5905:     const char *next",
      "5907:     int tok = XmlAttributeValueTok(enc, ptr, end, &next);",
      "5909:     if (! accountingDiffTolerated(parser, tok, ptr, next, __LINE__, account)) {",
      "5910:       accountingOnAbort(parser);",
      "5911:       return XML_ERROR_AMPLIFICATION_LIMIT_BREACH;",
      "",
      "[Removed Lines]",
      "5908: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "5911: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "5970:       XML_Char ch = (XML_Char)XmlPredefinedEntityName(",
      "5971:           enc, ptr + enc->minBytesPerChar, next - enc->minBytesPerChar);",
      "5972:       if (ch) {",
      "5977:         accountingDiffTolerated(parser, tok, (char *)&ch,",
      "5978:                                 ((char *)&ch) + sizeof(XML_Char), __LINE__,",
      "5979:                                 XML_ACCOUNT_ENTITY_EXPANSION);",
      "5981:         if (! poolAppendChar(pool, ch))",
      "5982:           return XML_ERROR_NO_MEMORY;",
      "5983:         break;",
      "",
      "[Removed Lines]",
      "5973: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "5976: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "6055:         enum XML_Error result;",
      "6056:         const XML_Char *textEnd = entity->textPtr + entity->textLen;",
      "6057:         entity->open = XML_TRUE;",
      "6059:         entityTrackingOnOpen(parser, entity, __LINE__);",
      "6060: #endif",
      "6061:         result = appendAttributeValue(parser, parser->m_internalEncoding,",
      "6062:                                       isCdata, (const char *)entity->textPtr,",
      "6063:                                       (const char *)textEnd, pool,",
      "6064:                                       XML_ACCOUNT_ENTITY_EXPANSION);",
      "6066:         entityTrackingOnClose(parser, entity, __LINE__);",
      "6067: #endif",
      "6068:         entity->open = XML_FALSE;",
      "",
      "[Removed Lines]",
      "6058: #ifdef XML_DTD",
      "6065: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "6061: #if defined(XML_DTD) || XML_GE == 1",
      "6068: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "6119:     int tok = XmlEntityValueTok(enc, entityTextPtr, entityTextEnd, &next);",
      "6122:     if (! accountingDiffTolerated(parser, tok, entityTextPtr, next, __LINE__,",
      "6123:                                   account)) {",
      "6124:       accountingOnAbort(parser);",
      "",
      "[Removed Lines]",
      "6121: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "6124: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "7669:   return result;",
      "7670: }",
      "7674: static float",
      "7675: accountingGetCurrentAmplification(XML_Parser rootParser) {",
      "",
      "[Removed Lines]",
      "7672: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "7675: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------"
    ],
    "expat/xmlwf/xmlwf.c||expat/xmlwf/xmlwf.c": [
      "File: expat/xmlwf/xmlwf.c -> expat/xmlwf/xmlwf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1096:             \" (needs a floating point number greater or equal than 1.0)\"));",
      "1097:         exit(XMLWF_EXIT_USAGE_ERROR);",
      "1098:       }",
      "1102: #endif",
      "1103:       break;",
      "1104:     }",
      "",
      "[Removed Lines]",
      "1099: #ifndef XML_DTD",
      "1100:       ftprintf(stderr, T(\"Warning: Given amplification limit ignored\") T(",
      "1101:                            \", xmlwf has been compiled without DTD support.\\n\"));",
      "",
      "[Added Lines]",
      "1099: #if ! defined(XML_DTD) && XML_GE == 0",
      "1100:       ftprintf(stderr,",
      "1101:                T(\"Warning: Given amplification limit ignored\")",
      "1102:                    T(\", xmlwf has been compiled without DTD/GE support.\\n\"));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1117:         exit(XMLWF_EXIT_USAGE_ERROR);",
      "1118:       }",
      "1119:       attackThresholdGiven = XML_TRUE;",
      "1123: #endif",
      "1124:       break;",
      "1125:     }",
      "",
      "[Removed Lines]",
      "1120: #ifndef XML_DTD",
      "1121:       ftprintf(stderr, T(\"Warning: Given attack threshold ignored\") T(",
      "1122:                            \", xmlwf has been compiled without DTD support.\\n\"));",
      "",
      "[Added Lines]",
      "1121: #if ! defined(XML_DTD) && XML_GE == 0",
      "1122:       ftprintf(stderr,",
      "1123:                T(\"Warning: Given attack threshold ignored\")",
      "1124:                    T(\", xmlwf has been compiled without DTD/GE support.\\n\"));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1155:     }",
      "1157:     if (attackMaximumAmplification != -1.0f) {",
      "1159:       XML_SetBillionLaughsAttackProtectionMaximumAmplification(",
      "1160:           parser, attackMaximumAmplification);",
      "1161: #endif",
      "1162:     }",
      "1163:     if (attackThresholdGiven) {",
      "1165:       XML_SetBillionLaughsAttackProtectionActivationThreshold(",
      "1166:           parser, attackThresholdBytes);",
      "1167: #else",
      "",
      "[Removed Lines]",
      "1158: #ifdef XML_DTD",
      "1164: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "1160: #if defined(XML_DTD) || XML_GE == 1",
      "1166: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ed87a4793404e91c0cc0c81435fcfcc64a8be9f4",
      "candidate_info": {
        "commit_hash": "ed87a4793404e91c0cc0c81435fcfcc64a8be9f4",
        "repo": "libexpat/libexpat",
        "commit_url": "https://github.com/libexpat/libexpat/commit/ed87a4793404e91c0cc0c81435fcfcc64a8be9f4",
        "files": [
          ".github/workflows/data/expat_config_h_in__expected.txt",
          "expat/configure.ac"
        ],
        "message": "configure.ac: Define macro XML_GE as 1",
        "before_after_code_files": [
          "expat/configure.ac||expat/configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libexpat/libexpat/pull/777"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "expat/configure.ac||expat/configure.ac": [
          "File: expat/configure.ac -> expat/configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "303: dnl Some basic configuration:",
          "304: AC_DEFINE([XML_NS], 1,",
          "305:           [Define to make XML Namespaces functionality available.])",
          "306: AC_DEFINE([XML_DTD], 1,",
          "307:           [Define to make parameter entity parsing functionality available.])",
          "308: AC_DEFINE([XML_DEV_URANDOM], 1,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "306: AC_DEFINE([XML_GE], 1,",
          "307:           [Define as 1/0 to enable/disable support for general entities.])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "55fecd6aa4af4a540812b81234679cd6b5714f1b",
      "candidate_info": {
        "commit_hash": "55fecd6aa4af4a540812b81234679cd6b5714f1b",
        "repo": "libexpat/libexpat",
        "commit_url": "https://github.com/libexpat/libexpat/commit/55fecd6aa4af4a540812b81234679cd6b5714f1b",
        "files": [
          "expat/lib/xmlparse.c",
          "expat/tests/acc_tests.c"
        ],
        "message": "Drop redundant \"XML_GE == 1\" guards\n\nThese are redundant because further out there is a guard\nfor \"XML_GE == 1\" already.  In the visual world, the pattern\nis this:\n\n> #if XML_GE == 1\n> [..]\n> #  if XML_GE == 1\n> [..]\n> #  endif\n> [..]\n> #endif\n\nSpotted by Snild Dolkow, thanks!\n\nCo-authored-by: Snild Dolkow <snild@sony.com>",
        "before_after_code_files": [
          "expat/lib/xmlparse.c||expat/lib/xmlparse.c",
          "expat/tests/acc_tests.c||expat/tests/acc_tests.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libexpat/libexpat/pull/777"
        ],
        "olp_code_files": {
          "patch": [
            "expat/lib/xmlparse.c||expat/lib/xmlparse.c"
          ],
          "candidate": [
            "expat/lib/xmlparse.c||expat/lib/xmlparse.c"
          ]
        }
      },
      "candidate_diff": {
        "expat/lib/xmlparse.c||expat/lib/xmlparse.c": [
          "File: expat/lib/xmlparse.c -> expat/lib/xmlparse.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6167:     int tok = XmlEntityValueTok(enc, entityTextPtr, entityTextEnd, &next);",
          "6170:     if (! accountingDiffTolerated(parser, tok, entityTextPtr, next, __LINE__,",
          "6171:                                   account)) {",
          "6172:       accountingOnAbort(parser);",
          "6173:       result = XML_ERROR_AMPLIFICATION_LIMIT_BREACH;",
          "6174:       goto endEntityValue;",
          "6175:     }",
          "6178:     switch (tok) {",
          "6179:     case XML_TOK_PARAM_ENTITY_REF:",
          "",
          "[Removed Lines]",
          "6169: #  if XML_GE == 1",
          "6176: #  endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "expat/tests/acc_tests.c||expat/tests/acc_tests.c": [
          "File: expat/tests/acc_tests.c -> expat/tests/acc_tests.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:      https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=34302",
          "106:      https://oss-fuzz.com/testcase-detail/4860575394955264",
          "109:     {\"<!DOCTYPE r [\\n\"",
          "110:      \"<!ENTITY e \\\"111<![CDATA[2 <= 2]]>333\\\">\\n\"",
          "111:      \"]>\\n\"",
          "112:      \"<r>&e;</r>\\n\",",
          "113:      NULL, NULL, sizeof(XML_Char) * strlen(\"111<![CDATA[2 <= 2]]>333\")},",
          "116: #  ifdef XML_DTD",
          "",
          "[Removed Lines]",
          "108: #  if XML_GE == 1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "132:     {\"<!DOCTYPE root [\\n\"",
          "133:      \"<!ENTITY nine \\\"123456789\\\">\\n\"",
          "134:      \"]>\\n\"",
          "",
          "[Removed Lines]",
          "131: #  if XML_GE == 1",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ac14808b267e343e56ab653ce48dfa246b1d55f4",
      "candidate_info": {
        "commit_hash": "ac14808b267e343e56ab653ce48dfa246b1d55f4",
        "repo": "libexpat/libexpat",
        "commit_url": "https://github.com/libexpat/libexpat/commit/ac14808b267e343e56ab653ce48dfa246b1d55f4",
        "files": [
          "expat/tests/acc_tests.c"
        ],
        "message": "Mass-apply clang-format 17.0.3 using ./apply-clang-format.sh",
        "before_after_code_files": [
          "expat/tests/acc_tests.c||expat/tests/acc_tests.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libexpat/libexpat/pull/777"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "expat/tests/acc_tests.c||expat/tests/acc_tests.c": [
          "File: expat/tests/acc_tests.c -> expat/tests/acc_tests.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: #if XML_GE == 1",
          "58: START_TEST(test_accounting_precision) {",
          "59:   struct AccountingTestCase cases[] = {",
          "96: #  ifdef XML_DTD",
          "114: #  ifdef XML_DTD",
          "158: #  ifdef XML_DTD",
          "238:   };",
          "",
          "[Removed Lines]",
          "60:     {\"<e/>\", NULL, NULL, 0},",
          "61:     {\"<e></e>\", NULL, NULL, 0},",
          "64:     {\"<e k1=\\\"v2\\\" k2=\\\"v2\\\"/>\", NULL, NULL, 0},",
          "65:     {\"<e k1=\\\"v2\\\" k2=\\\"v2\\\"></e>\", NULL, NULL, 0},",
          "66:     {\"<p:e xmlns:p=\\\"https://domain.invalid/\\\" />\", NULL, NULL, 0},",
          "67:     {\"<e k=\\\"&amp;&apos;&gt;&lt;&quot;\\\" />\", NULL, NULL,",
          "68:      sizeof(XML_Char) * 5 /* number of predefined entities */},",
          "69:     {\"<e1 xmlns='https://example.org/'>\\n\"",
          "70:      \"  <e2 xmlns=''/>\\n\"",
          "71:      \"</e1>\",",
          "72:      NULL, NULL, 0},",
          "75:     {\"<e>text</e>\", NULL, NULL, 0},",
          "76:     {\"<e1><e2>text1<e3/>text2</e2></e1>\", NULL, NULL, 0},",
          "77:     {\"<e>&amp;&apos;&gt;&lt;&quot;</e>\", NULL, NULL,",
          "78:      sizeof(XML_Char) * 5 /* number of predefined entities */},",
          "79:     {\"<e>&#65;&#41;</e>\", NULL, NULL, 0},",
          "82:     {\"<?xml version=\\\"1.0\\\"?><root/>\", NULL, NULL, 0},",
          "85:     {\"  <e1>  <e2>  </e2>  </e1>  \", NULL, NULL, 0},",
          "86:     {\"<e1  ><e2  /></e1  >\", NULL, NULL, 0},",
          "87:     {\"<e1><e2 k = \\\"v\\\"/><e3 k = 'v'/></e1>\", NULL, NULL, 0},",
          "90:     {\"<!-- Comment --><e><!-- Comment --></e>\", NULL, NULL, 0},",
          "93:     {\"<?xml-stylesheet type=\\\"text/xsl\\\" href=\\\"https://domain.invalid/\\\" media=\\\"all\\\"?><e/>\",",
          "94:      NULL, NULL, 0},",
          "95:     {\"<?pi0?><?pi1 ?><?pi2  ?><r/><?pi4?>\", NULL, NULL, 0},",
          "97:     {\"<?pi0?><?pi1 ?><?pi2  ?><!DOCTYPE r SYSTEM 'first.ent'><r/>\",",
          "98:      \"<?pi3?><!ENTITY % e1 SYSTEM 'second.ent'><?pi4?>%e1;<?pi5?>\", \"<?pi6?>\",",
          "99:      0},",
          "103:     {\"<e><![CDATA[one two three]]></e>\", NULL, NULL, 0},",
          "105:      https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=34302",
          "106:      https://oss-fuzz.com/testcase-detail/4860575394955264",
          "108:     {\"<!DOCTYPE r [\\n\"",
          "109:      \"<!ENTITY e \\\"111<![CDATA[2 <= 2]]>333\\\">\\n\"",
          "110:      \"]>\\n\"",
          "111:      \"<r>&e;</r>\\n\",",
          "112:      NULL, NULL, sizeof(XML_Char) * strlen(\"111<![CDATA[2 <= 2]]>333\")},",
          "116:     {\"<!DOCTYPE r [\\n\"",
          "117:      \"<!ENTITY % draft 'INCLUDE'>\\n\"",
          "118:      \"<!ENTITY % final 'IGNORE'>\\n\"",
          "119:      \"<!ENTITY % import SYSTEM \\\"first.ent\\\">\\n\"",
          "120:      \"%import;\\n\"",
          "121:      \"]>\\n\"",
          "122:      \"<r/>\\n\",",
          "123:      \"<![%draft;[<!--1-->]]>\\n\"",
          "124:      \"<![%final;[<!--22-->]]>\",",
          "125:      NULL, sizeof(XML_Char) * (strlen(\"INCLUDE\") + strlen(\"IGNORE\"))},",
          "129:     {\"<!DOCTYPE root [\\n\"",
          "130:      \"<!ENTITY nine \\\"123456789\\\">\\n\"",
          "131:      \"]>\\n\"",
          "132:      \"<root>&nine;</root>\",",
          "133:      NULL, NULL, sizeof(XML_Char) * strlen(\"123456789\")},",
          "134:     {\"<!DOCTYPE root [\\n\"",
          "135:      \"<!ENTITY nine \\\"123456789\\\">\\n\"",
          "136:      \"]>\\n\"",
          "137:      \"<root k1=\\\"&nine;\\\"/>\",",
          "138:      NULL, NULL, sizeof(XML_Char) * strlen(\"123456789\")},",
          "139:     {\"<!DOCTYPE root [\\n\"",
          "140:      \"<!ENTITY nine \\\"123456789\\\">\\n\"",
          "141:      \"<!ENTITY nine2 \\\"&nine;&nine;\\\">\\n\"",
          "142:      \"]>\\n\"",
          "143:      \"<root>&nine2;&nine2;&nine2;</root>\",",
          "144:      NULL, NULL,",
          "147:     {\"<!DOCTYPE r [\\n\"",
          "148:      \"  <!ENTITY five SYSTEM 'first.ent'>\\n\"",
          "149:      \"]>\\n\"",
          "150:      \"<r>&five;</r>\",",
          "151:      \"12345\", NULL, 0},",
          "152:     {\"<!DOCTYPE r [\\n\"",
          "153:      \"  <!ENTITY five SYSTEM 'first.ent'>\\n\"",
          "154:      \"]>\\n\"",
          "155:      \"<r>&five;</r>\",",
          "156:      \"\\xEF\\xBB\\xBF\" /* UTF-8 BOM */, NULL, 0},",
          "160:     {\"<!DOCTYPE r [\\n\"",
          "161:      \"<!ENTITY % comment \\\"<!---->\\\">\\n\"",
          "162:      \"%comment;\\n\"",
          "163:      \"]>\\n\"",
          "164:      \"<r/>\",",
          "165:      NULL, NULL, sizeof(XML_Char) * strlen(\"<!---->\")},",
          "166:     {\"<!DOCTYPE r [\\n\"",
          "167:      \"<!ENTITY % ninedef \\\"&#60;!ENTITY nine &#34;123456789&#34;&#62;\\\">\\n\"",
          "168:      \"%ninedef;\\n\"",
          "169:      \"]>\\n\"",
          "170:      \"<r>&nine;</r>\",",
          "171:      NULL, NULL,",
          "172:      sizeof(XML_Char)",
          "174:     {\"<!DOCTYPE r [\\n\"",
          "175:      \"<!ENTITY % comment \\\"<!--1-->\\\">\\n\"",
          "176:      \"<!ENTITY % comment2 \\\"&#37;comment;<!--22-->&#37;comment;\\\">\\n\"",
          "177:      \"%comment2;\\n\"",
          "178:      \"]>\\n\"",
          "179:      \"<r/>\\n\",",
          "180:      NULL, NULL,",
          "181:      sizeof(XML_Char)",
          "183:     {\"<!DOCTYPE r [\\n\"",
          "184:      \"  <!ENTITY % five \\\"12345\\\">\\n\"",
          "185:      \"  <!ENTITY % five2def \\\"&#60;!ENTITY five2 &#34;[&#37;five;][&#37;five;]]]]&#34;&#62;\\\">\\n\"",
          "186:      \"  %five2def;\\n\"",
          "187:      \"]>\\n\"",
          "188:      \"<r>&five2;</r>\",",
          "190:      sizeof(XML_Char)",
          "192:             + 2 /* calls to \"%five;\" */ * strlen(\"12345\")",
          "193:             + /* from \"&five2;\": */ strlen(\"[12345][12345]]]]\"))},",
          "194:     {\"<!DOCTYPE r SYSTEM \\\"first.ent\\\">\\n\"",
          "195:      \"<r/>\",",
          "196:      \"<!ENTITY % comment '<!--1-->'>\\n\"",
          "197:      \"<!ENTITY % comment2 '<!--22-->%comment;<!--22-->%comment;<!--22-->'>\\n\"",
          "198:      \"%comment2;\",",
          "199:      NULL,",
          "200:      sizeof(XML_Char)",
          "202:             + 2 /* calls to \"%comment;\" */ * strlen(\"<!---->\"))},",
          "203:     {\"<!DOCTYPE r SYSTEM 'first.ent'>\\n\"",
          "204:      \"<r/>\",",
          "205:      \"<!ENTITY % e1 PUBLIC 'foo' 'second.ent'>\\n\"",
          "206:      \"<!ENTITY % e2 '<!--22-->%e1;<!--22-->'>\\n\"",
          "207:      \"%e2;\\n\",",
          "208:      \"<!--1-->\", sizeof(XML_Char) * strlen(\"<!--22--><!--1--><!--22-->\")},",
          "209:     {",
          "210:         \"<!DOCTYPE r SYSTEM 'first.ent'>\\n\"",
          "211:         \"<r/>\",",
          "212:         \"<!ENTITY % e1 SYSTEM 'second.ent'>\\n\"",
          "213:         \"<!ENTITY % e2 '%e1;'>\",",
          "214:         \"<?xml version='1.0' encoding='utf-8'?>\\n\"",
          "215:         \"hello\\n\"",
          "216:         \"xml\" /* without trailing newline! */,",
          "217:         0,",
          "218:     },",
          "219:     {",
          "220:         \"<!DOCTYPE r SYSTEM 'first.ent'>\\n\"",
          "221:         \"<r/>\",",
          "222:         \"<!ENTITY % e1 SYSTEM 'second.ent'>\\n\"",
          "223:         \"<!ENTITY % e2 '%e1;'>\",",
          "224:         \"<?xml version='1.0' encoding='utf-8'?>\\n\"",
          "225:         \"hello\\n\"",
          "226:         \"xml\\n\" /* with trailing newline! */,",
          "227:         0,",
          "228:     },",
          "229:     {\"<!DOCTYPE doc SYSTEM 'first.ent'>\\n\"",
          "230:      \"<doc></doc>\\n\",",
          "231:      \"<!ELEMENT doc EMPTY>\\n\"",
          "232:      \"<!ENTITY % e1 SYSTEM 'second.ent'>\\n\"",
          "233:      \"<!ENTITY % e2 '%e1;'>\\n\"",
          "234:      \"%e1;\\n\",",
          "235:      \"\\xEF\\xBB\\xBF<!ATTLIST doc a1 CDATA 'value'>\" /* UTF-8 BOM */,",
          "236:      strlen(\"\\xEF\\xBB\\xBF<!ATTLIST doc a1 CDATA 'value'>\")},",
          "",
          "[Added Lines]",
          "60:       {\"<e/>\", NULL, NULL, 0},",
          "61:       {\"<e></e>\", NULL, NULL, 0},",
          "64:       {\"<e k1=\\\"v2\\\" k2=\\\"v2\\\"/>\", NULL, NULL, 0},",
          "65:       {\"<e k1=\\\"v2\\\" k2=\\\"v2\\\"></e>\", NULL, NULL, 0},",
          "66:       {\"<p:e xmlns:p=\\\"https://domain.invalid/\\\" />\", NULL, NULL, 0},",
          "67:       {\"<e k=\\\"&amp;&apos;&gt;&lt;&quot;\\\" />\", NULL, NULL,",
          "68:        sizeof(XML_Char) * 5 /* number of predefined entities */},",
          "69:       {\"<e1 xmlns='https://example.org/'>\\n\"",
          "70:        \"  <e2 xmlns=''/>\\n\"",
          "71:        \"</e1>\",",
          "72:        NULL, NULL, 0},",
          "75:       {\"<e>text</e>\", NULL, NULL, 0},",
          "76:       {\"<e1><e2>text1<e3/>text2</e2></e1>\", NULL, NULL, 0},",
          "77:       {\"<e>&amp;&apos;&gt;&lt;&quot;</e>\", NULL, NULL,",
          "78:        sizeof(XML_Char) * 5 /* number of predefined entities */},",
          "79:       {\"<e>&#65;&#41;</e>\", NULL, NULL, 0},",
          "82:       {\"<?xml version=\\\"1.0\\\"?><root/>\", NULL, NULL, 0},",
          "85:       {\"  <e1>  <e2>  </e2>  </e1>  \", NULL, NULL, 0},",
          "86:       {\"<e1  ><e2  /></e1  >\", NULL, NULL, 0},",
          "87:       {\"<e1><e2 k = \\\"v\\\"/><e3 k = 'v'/></e1>\", NULL, NULL, 0},",
          "90:       {\"<!-- Comment --><e><!-- Comment --></e>\", NULL, NULL, 0},",
          "93:       {\"<?xml-stylesheet type=\\\"text/xsl\\\" href=\\\"https://domain.invalid/\\\" media=\\\"all\\\"?><e/>\",",
          "94:        NULL, NULL, 0},",
          "95:       {\"<?pi0?><?pi1 ?><?pi2  ?><r/><?pi4?>\", NULL, NULL, 0},",
          "97:       {\"<?pi0?><?pi1 ?><?pi2  ?><!DOCTYPE r SYSTEM 'first.ent'><r/>\",",
          "98:        \"<?pi3?><!ENTITY % e1 SYSTEM 'second.ent'><?pi4?>%e1;<?pi5?>\", \"<?pi6?>\",",
          "99:        0},",
          "103:       {\"<e><![CDATA[one two three]]></e>\", NULL, NULL, 0},",
          "105:          https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=34302",
          "106:          https://oss-fuzz.com/testcase-detail/4860575394955264",
          "108:       {\"<!DOCTYPE r [\\n\"",
          "109:        \"<!ENTITY e \\\"111<![CDATA[2 <= 2]]>333\\\">\\n\"",
          "110:        \"]>\\n\"",
          "111:        \"<r>&e;</r>\\n\",",
          "112:        NULL, NULL, sizeof(XML_Char) * strlen(\"111<![CDATA[2 <= 2]]>333\")},",
          "116:       {\"<!DOCTYPE r [\\n\"",
          "117:        \"<!ENTITY % draft 'INCLUDE'>\\n\"",
          "118:        \"<!ENTITY % final 'IGNORE'>\\n\"",
          "119:        \"<!ENTITY % import SYSTEM \\\"first.ent\\\">\\n\"",
          "120:        \"%import;\\n\"",
          "121:        \"]>\\n\"",
          "122:        \"<r/>\\n\",",
          "123:        \"<![%draft;[<!--1-->]]>\\n\"",
          "124:        \"<![%final;[<!--22-->]]>\",",
          "125:        NULL, sizeof(XML_Char) * (strlen(\"INCLUDE\") + strlen(\"IGNORE\"))},",
          "129:       {\"<!DOCTYPE root [\\n\"",
          "130:        \"<!ENTITY nine \\\"123456789\\\">\\n\"",
          "131:        \"]>\\n\"",
          "132:        \"<root>&nine;</root>\",",
          "133:        NULL, NULL, sizeof(XML_Char) * strlen(\"123456789\")},",
          "134:       {\"<!DOCTYPE root [\\n\"",
          "135:        \"<!ENTITY nine \\\"123456789\\\">\\n\"",
          "136:        \"]>\\n\"",
          "137:        \"<root k1=\\\"&nine;\\\"/>\",",
          "138:        NULL, NULL, sizeof(XML_Char) * strlen(\"123456789\")},",
          "139:       {\"<!DOCTYPE root [\\n\"",
          "140:        \"<!ENTITY nine \\\"123456789\\\">\\n\"",
          "141:        \"<!ENTITY nine2 \\\"&nine;&nine;\\\">\\n\"",
          "142:        \"]>\\n\"",
          "143:        \"<root>&nine2;&nine2;&nine2;</root>\",",
          "144:        NULL, NULL,",
          "147:       {\"<!DOCTYPE r [\\n\"",
          "148:        \"  <!ENTITY five SYSTEM 'first.ent'>\\n\"",
          "149:        \"]>\\n\"",
          "150:        \"<r>&five;</r>\",",
          "151:        \"12345\", NULL, 0},",
          "152:       {\"<!DOCTYPE r [\\n\"",
          "153:        \"  <!ENTITY five SYSTEM 'first.ent'>\\n\"",
          "154:        \"]>\\n\"",
          "155:        \"<r>&five;</r>\",",
          "156:        \"\\xEF\\xBB\\xBF\" /* UTF-8 BOM */, NULL, 0},",
          "160:       {\"<!DOCTYPE r [\\n\"",
          "161:        \"<!ENTITY % comment \\\"<!---->\\\">\\n\"",
          "162:        \"%comment;\\n\"",
          "163:        \"]>\\n\"",
          "164:        \"<r/>\",",
          "165:        NULL, NULL, sizeof(XML_Char) * strlen(\"<!---->\")},",
          "166:       {\"<!DOCTYPE r [\\n\"",
          "167:        \"<!ENTITY % ninedef \\\"&#60;!ENTITY nine &#34;123456789&#34;&#62;\\\">\\n\"",
          "168:        \"%ninedef;\\n\"",
          "169:        \"]>\\n\"",
          "170:        \"<r>&nine;</r>\",",
          "171:        NULL, NULL,",
          "172:        sizeof(XML_Char)",
          "174:       {\"<!DOCTYPE r [\\n\"",
          "175:        \"<!ENTITY % comment \\\"<!--1-->\\\">\\n\"",
          "176:        \"<!ENTITY % comment2 \\\"&#37;comment;<!--22-->&#37;comment;\\\">\\n\"",
          "177:        \"%comment2;\\n\"",
          "178:        \"]>\\n\"",
          "179:        \"<r/>\\n\",",
          "180:        NULL, NULL,",
          "181:        sizeof(XML_Char)",
          "183:       {\"<!DOCTYPE r [\\n\"",
          "184:        \"  <!ENTITY % five \\\"12345\\\">\\n\"",
          "185:        \"  <!ENTITY % five2def \\\"&#60;!ENTITY five2 &#34;[&#37;five;][&#37;five;]]]]&#34;&#62;\\\">\\n\"",
          "186:        \"  %five2def;\\n\"",
          "187:        \"]>\\n\"",
          "188:        \"<r>&five2;</r>\",",
          "190:        sizeof(XML_Char)",
          "192:               + 2 /* calls to \"%five;\" */ * strlen(\"12345\")",
          "193:               + /* from \"&five2;\": */ strlen(\"[12345][12345]]]]\"))},",
          "194:       {\"<!DOCTYPE r SYSTEM \\\"first.ent\\\">\\n\"",
          "195:        \"<r/>\",",
          "196:        \"<!ENTITY % comment '<!--1-->'>\\n\"",
          "197:        \"<!ENTITY % comment2 '<!--22-->%comment;<!--22-->%comment;<!--22-->'>\\n\"",
          "198:        \"%comment2;\",",
          "199:        NULL,",
          "200:        sizeof(XML_Char)",
          "202:               + 2 /* calls to \"%comment;\" */ * strlen(\"<!---->\"))},",
          "203:       {\"<!DOCTYPE r SYSTEM 'first.ent'>\\n\"",
          "204:        \"<r/>\",",
          "205:        \"<!ENTITY % e1 PUBLIC 'foo' 'second.ent'>\\n\"",
          "206:        \"<!ENTITY % e2 '<!--22-->%e1;<!--22-->'>\\n\"",
          "207:        \"%e2;\\n\",",
          "208:        \"<!--1-->\", sizeof(XML_Char) * strlen(\"<!--22--><!--1--><!--22-->\")},",
          "209:       {",
          "210:           \"<!DOCTYPE r SYSTEM 'first.ent'>\\n\"",
          "211:           \"<r/>\",",
          "212:           \"<!ENTITY % e1 SYSTEM 'second.ent'>\\n\"",
          "213:           \"<!ENTITY % e2 '%e1;'>\",",
          "214:           \"<?xml version='1.0' encoding='utf-8'?>\\n\"",
          "215:           \"hello\\n\"",
          "216:           \"xml\" /* without trailing newline! */,",
          "217:           0,",
          "218:       },",
          "219:       {",
          "220:           \"<!DOCTYPE r SYSTEM 'first.ent'>\\n\"",
          "221:           \"<r/>\",",
          "222:           \"<!ENTITY % e1 SYSTEM 'second.ent'>\\n\"",
          "223:           \"<!ENTITY % e2 '%e1;'>\",",
          "224:           \"<?xml version='1.0' encoding='utf-8'?>\\n\"",
          "225:           \"hello\\n\"",
          "226:           \"xml\\n\" /* with trailing newline! */,",
          "227:           0,",
          "228:       },",
          "229:       {\"<!DOCTYPE doc SYSTEM 'first.ent'>\\n\"",
          "230:        \"<doc></doc>\\n\",",
          "231:        \"<!ELEMENT doc EMPTY>\\n\"",
          "232:        \"<!ENTITY % e1 SYSTEM 'second.ent'>\\n\"",
          "233:        \"<!ENTITY % e2 '%e1;'>\\n\"",
          "234:        \"%e1;\\n\",",
          "235:        \"\\xEF\\xBB\\xBF<!ATTLIST doc a1 CDATA 'value'>\" /* UTF-8 BOM */,",
          "236:        strlen(\"\\xEF\\xBB\\xBF<!ATTLIST doc a1 CDATA 'value'>\")},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7767efe1aaee6efd9fc191f07fc6a54b6a602819",
      "candidate_info": {
        "commit_hash": "7767efe1aaee6efd9fc191f07fc6a54b6a602819",
        "repo": "libexpat/libexpat",
        "commit_url": "https://github.com/libexpat/libexpat/commit/7767efe1aaee6efd9fc191f07fc6a54b6a602819",
        "files": [
          "expat/tests/handlers.c"
        ],
        "message": "tests/handlers.c: Make accumulate_entity_decl robust towards value==NULL",
        "before_after_code_files": [
          "expat/tests/handlers.c||expat/tests/handlers.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libexpat/libexpat/pull/777"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "expat/tests/handlers.c||expat/tests/handlers.c": [
          "File: expat/tests/handlers.c -> expat/tests/handlers.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1853:   UNUSED_P(notationName);",
          "1854:   CharData_AppendXMLChars(storage, entityName, -1);",
          "1855:   CharData_AppendXMLChars(storage, XCS(\"=\"), 1);",
          "1857:   CharData_AppendXMLChars(storage, XCS(\"\\n\"), 1);",
          "1858: }",
          "",
          "[Removed Lines]",
          "1856:   CharData_AppendXMLChars(storage, value, value_length);",
          "",
          "[Added Lines]",
          "1856:   if (value == NULL)",
          "1857:     CharData_AppendXMLChars(storage, XCS(\"(null)\"), -1);",
          "1858:   else",
          "1859:     CharData_AppendXMLChars(storage, value, value_length);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2f18bacfcdab62a3b4b13fda193617ec9b3a10b4",
      "candidate_info": {
        "commit_hash": "2f18bacfcdab62a3b4b13fda193617ec9b3a10b4",
        "repo": "libexpat/libexpat",
        "commit_url": "https://github.com/libexpat/libexpat/commit/2f18bacfcdab62a3b4b13fda193617ec9b3a10b4",
        "files": [
          "expat/tests/basic_tests.c",
          "expat/tests/handlers.c",
          "expat/tests/handlers.h",
          "expat/tests/misc_tests.c"
        ],
        "message": "tests: Cover and adjust to XML_GE==0 self-references",
        "before_after_code_files": [
          "expat/tests/basic_tests.c||expat/tests/basic_tests.c",
          "expat/tests/handlers.c||expat/tests/handlers.c",
          "expat/tests/handlers.h||expat/tests/handlers.h",
          "expat/tests/misc_tests.c||expat/tests/misc_tests.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libexpat/libexpat/pull/777"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "expat/tests/basic_tests.c||expat/tests/basic_tests.c": [
          "File: expat/tests/basic_tests.c -> expat/tests/basic_tests.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5338:   tcase_add_test(tc_basic, test_skipped_null_loaded_ext_entity);",
          "5339:   tcase_add_test(tc_basic, test_skipped_unloaded_ext_entity);",
          "5340:   tcase_add_test__ifdef_xml_dtd(tc_basic, test_param_entity_with_trailing_cr);",
          "5345:   tcase_add_test(tc_basic, test_pi_handled_in_default);",
          "5346:   tcase_add_test(tc_basic, test_comment_handled_in_default);",
          "5347:   tcase_add_test(tc_basic, test_pi_yml);",
          "",
          "[Removed Lines]",
          "5341:   tcase_add_test(tc_basic, test_invalid_character_entity);",
          "5342:   tcase_add_test(tc_basic, test_invalid_character_entity_2);",
          "5343:   tcase_add_test(tc_basic, test_invalid_character_entity_3);",
          "5344:   tcase_add_test(tc_basic, test_invalid_character_entity_4);",
          "",
          "[Added Lines]",
          "5341:   tcase_add_test__if_xml_ge(tc_basic, test_invalid_character_entity);",
          "5342:   tcase_add_test__if_xml_ge(tc_basic, test_invalid_character_entity_2);",
          "5343:   tcase_add_test__if_xml_ge(tc_basic, test_invalid_character_entity_3);",
          "5344:   tcase_add_test__if_xml_ge(tc_basic, test_invalid_character_entity_4);",
          "",
          "---------------"
        ],
        "expat/tests/handlers.c||expat/tests/handlers.c": [
          "File: expat/tests/handlers.c -> expat/tests/handlers.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "669:   return XML_STATUS_ERROR;",
          "670: }",
          "672: int XMLCALL",
          "673: external_entity_cr_catcher(XML_Parser parser, const XML_Char *context,",
          "674:                            const XML_Char *base, const XML_Char *systemId,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "672: int XMLCALL",
          "673: external_entity_failer__if_not_xml_ge(XML_Parser parser,",
          "674:                                       const XML_Char *context,",
          "675:                                       const XML_Char *base,",
          "676:                                       const XML_Char *systemId,",
          "677:                                       const XML_Char *publicId) {",
          "678:   UNUSED_P(parser);",
          "679:   UNUSED_P(context);",
          "680:   UNUSED_P(base);",
          "681:   UNUSED_P(systemId);",
          "682:   UNUSED_P(publicId);",
          "683: #if XML_GE == 0",
          "684:   fail(",
          "685:       \"Function external_entity_suspending_failer was called despite XML_GE==0.\");",
          "686: #endif",
          "687:   return XML_STATUS_OK;",
          "688: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1860:   CharData_AppendXMLChars(storage, XCS(\"\\n\"), 1);",
          "1861: }",
          "1863: void XMLCALL",
          "1864: checking_default_handler(void *userData, const XML_Char *s, int len) {",
          "1865:   DefaultCheck *data = (DefaultCheck *)userData;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1881: void XMLCALL",
          "1882: accumulate_char_data(void *userData, const XML_Char *s, int len) {",
          "1883:   CharData *const storage = (CharData *)userData;",
          "1884:   CharData_AppendXMLChars(storage, s, len);",
          "1885: }",
          "1887: void XMLCALL",
          "1888: accumulate_start_element(void *userData, const XML_Char *name,",
          "1889:                          const XML_Char **atts) {",
          "1890:   CharData *const storage = (CharData *)userData;",
          "1891:   CharData_AppendXMLChars(storage, XCS(\"(\"), 1);",
          "1892:   CharData_AppendXMLChars(storage, name, -1);",
          "1894:   if ((atts != NULL) && (atts[0] != NULL)) {",
          "1895:     CharData_AppendXMLChars(storage, XCS(\"(\"), 1);",
          "1896:     while (atts[0] != NULL) {",
          "1897:       CharData_AppendXMLChars(storage, atts[0], -1);",
          "1898:       CharData_AppendXMLChars(storage, XCS(\"=\"), 1);",
          "1899:       CharData_AppendXMLChars(storage, atts[1], -1);",
          "1900:       atts += 2;",
          "1901:       if (atts[0] != NULL) {",
          "1902:         CharData_AppendXMLChars(storage, XCS(\",\"), 1);",
          "1903:       }",
          "1904:     }",
          "1905:     CharData_AppendXMLChars(storage, XCS(\")\"), 1);",
          "1906:   }",
          "1908:   CharData_AppendXMLChars(storage, XCS(\")\\n\"), 2);",
          "1909: }",
          "",
          "---------------"
        ],
        "expat/tests/handlers.h||expat/tests/handlers.h": [
          "File: expat/tests/handlers.h -> expat/tests/handlers.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "185:                                            const XML_Char *base,",
          "186:                                            const XML_Char *systemId,",
          "187:                                            const XML_Char *publicId);",
          "188: extern int XMLCALL external_entity_null_loader(XML_Parser parser,",
          "189:                                                const XML_Char *context,",
          "190:                                                const XML_Char *base,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "188: extern int XMLCALL external_entity_failer__if_not_xml_ge(",
          "189:     XML_Parser parser, const XML_Char *context, const XML_Char *base,",
          "190:     const XML_Char *systemId, const XML_Char *publicId);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "561:     const XML_Char *systemId, const XML_Char *publicId,",
          "562:     const XML_Char *notationName);",
          "564: typedef struct default_check {",
          "565:   const XML_Char *expected;",
          "566:   const int expectedLen;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "567: extern void XMLCALL accumulate_char_data(void *userData, const XML_Char *s,",
          "568:                                          int len);",
          "570: extern void XMLCALL accumulate_start_element(void *userData,",
          "571:                                              const XML_Char *name,",
          "572:                                              const XML_Char **atts);",
          "",
          "---------------"
        ],
        "expat/tests/misc_tests.c||expat/tests/misc_tests.c": [
          "File: expat/tests/misc_tests.c -> expat/tests/misc_tests.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "406: }",
          "407: END_TEST",
          "409: void",
          "410: make_miscellaneous_test_case(Suite *s) {",
          "411:   TCase *tc_misc = tcase_create(\"miscellaneous tests\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "409: START_TEST(test_misc_general_entities_support) {",
          "410:   const char *const doc",
          "411:       = \"<!DOCTYPE r [\\n\"",
          "412:         \"<!ENTITY e1 'v1'>\\n\"",
          "413:         \"<!ENTITY e2 SYSTEM 'v2'>\\n\"",
          "414:         \"]>\\n\"",
          "415:         \"<r a1='[&e1;]'>[&e1;][&e2;][&amp;&apos;&gt;&lt;&quot;]</r>\";",
          "417:   CharData storage;",
          "418:   CharData_Init(&storage);",
          "420:   XML_Parser parser = XML_ParserCreate(NULL);",
          "421:   XML_SetUserData(parser, &storage);",
          "422:   XML_SetStartElementHandler(parser, accumulate_start_element);",
          "423:   XML_SetExternalEntityRefHandler(parser,",
          "424:                                   external_entity_failer__if_not_xml_ge);",
          "425:   XML_SetEntityDeclHandler(parser, accumulate_entity_decl);",
          "426:   XML_SetCharacterDataHandler(parser, accumulate_char_data);",
          "428:   if (_XML_Parse_SINGLE_BYTES(parser, doc, (int)strlen(doc), XML_TRUE)",
          "429:       != XML_STATUS_OK) {",
          "430:     xml_failure(parser);",
          "431:   }",
          "433:   XML_ParserFree(parser);",
          "435:   CharData_CheckXMLChars(&storage,",
          "437: #if XML_GE == 1",
          "438:                          XCS(\"e1=v1\\n\")",
          "439:                          XCS(\"e2=(null)\\n\")",
          "440:                          XCS(\"(r(a1=[v1]))\\n\")",
          "441:                          XCS(\"[v1][][&'><\\\"]\")",
          "442: #else",
          "443:                          XCS(\"e1=&amp;e1;\\n\")",
          "444:                          XCS(\"e2=(null)\\n\")",
          "445:                          XCS(\"(r(a1=[&e1;]))\\n\")",
          "446:                          XCS(\"[&e1;][&e2;][&'><\\\"]\")",
          "447: #endif",
          "448:   );",
          "450: }",
          "451: END_TEST",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "428:   tcase_add_test(tc_misc, test_misc_tag_mismatch_reset_leak);",
          "429:   tcase_add_test(tc_misc,",
          "430:                  test_misc_create_external_entity_parser_with_null_context);",
          "431: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "475:   tcase_add_test(tc_misc, test_misc_general_entities_support);",
          "",
          "---------------"
        ]
      }
    }
  ]
}