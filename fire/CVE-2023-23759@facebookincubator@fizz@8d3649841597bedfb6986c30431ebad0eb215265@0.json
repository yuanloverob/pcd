{
  "cve_id": "CVE-2023-23759",
  "cve_desc": "There is a vulnerability in the fizz library prior to v2023.01.30.00 where a CHECK failure can be triggered remotely. This behavior requires the client supported cipher advertisement changing between the original ClientHello and the second ClientHello, crashing the process (impact is limited to denial of service).",
  "repo": "facebookincubator/fizz",
  "patch_hash": "8d3649841597bedfb6986c30431ebad0eb215265",
  "patch_info": {
    "commit_hash": "8d3649841597bedfb6986c30431ebad0eb215265",
    "repo": "facebookincubator/fizz",
    "commit_url": "https://github.com/facebookincubator/fizz/commit/8d3649841597bedfb6986c30431ebad0eb215265",
    "files": [
      "fizz/server/ServerProtocol.cpp"
    ],
    "message": "Check HelloRetryRequest cipher consistency earlier.\n\nCVE-2023-23759\n\nCo-authored-by: Facebook Community Bot <6422482+facebook-github-bot@users.noreply.github.com>\n\nDifferential Revision: D42508182",
    "before_after_code_files": [
      "fizz/server/ServerProtocol.cpp||fizz/server/ServerProtocol.cpp"
    ]
  },
  "patch_diff": {
    "fizz/server/ServerProtocol.cpp||fizz/server/ServerProtocol.cpp": [
      "File: fizz/server/ServerProtocol.cpp -> fizz/server/ServerProtocol.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1215:   auto cipher = negotiateCipher(chlo, state.context()->getSupportedCiphers());",
      "1217:   verifyCookieState(cookieState, *version, cipher);",
      "1219:   auto resStateResult = getResumptionState(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1217:   if (state.cipher().has_value() && cipher != *state.cipher()) {",
      "1218:     throw FizzException(",
      "1219:         \"cipher mismatch with previous negotiation\",",
      "1220:         AlertDescription::illegal_parameter);",
      "1221:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1284:             std::move(state.handshakeContext()),",
      "1285:             version);",
      "1293:         auto alpn = negotiateAlpn(chlo, folly::none, *state.context());",
      "1295:         auto clockSkew = getClockSkew(",
      "",
      "[Removed Lines]",
      "1287:         if (state.cipher().has_value() && cipher != *state.cipher()) {",
      "1288:           throw FizzException(",
      "1289:               \"cipher mismatch with previous negotiation\",",
      "1290:               AlertDescription::illegal_parameter);",
      "1291:         }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ef9c6567f3b6a20c7b09bf8314a37ca79b469988",
      "candidate_info": {
        "commit_hash": "ef9c6567f3b6a20c7b09bf8314a37ca79b469988",
        "repo": "facebookincubator/fizz",
        "commit_url": "https://github.com/facebookincubator/fizz/commit/ef9c6567f3b6a20c7b09bf8314a37ca79b469988",
        "files": [
          "fizz/server/ServerProtocol.cpp"
        ],
        "message": "Re-sync with internal repository",
        "before_after_code_files": [
          "fizz/server/ServerProtocol.cpp||fizz/server/ServerProtocol.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/facebookincubator/fizz/pull/86"
        ],
        "olp_code_files": {
          "patch": [
            "fizz/server/ServerProtocol.cpp||fizz/server/ServerProtocol.cpp"
          ],
          "candidate": [
            "fizz/server/ServerProtocol.cpp||fizz/server/ServerProtocol.cpp"
          ]
        }
      },
      "candidate_diff": {
        "fizz/server/ServerProtocol.cpp||fizz/server/ServerProtocol.cpp": [
          "File: fizz/server/ServerProtocol.cpp -> fizz/server/ServerProtocol.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1215:   auto cipher = negotiateCipher(chlo, state.context()->getSupportedCiphers());",
          "1217:   verifyCookieState(cookieState, *version, cipher);",
          "1219:   auto resStateResult = getResumptionState(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1217:   if (state.cipher().has_value() && cipher != *state.cipher()) {",
          "1218:     throw FizzException(",
          "1219:         \"cipher mismatch with previous negotiation\",",
          "1220:         AlertDescription::illegal_parameter);",
          "1221:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1284:             std::move(state.handshakeContext()),",
          "1285:             version);",
          "1293:         auto alpn = negotiateAlpn(chlo, folly::none, *state.context());",
          "1295:         auto clockSkew = getClockSkew(",
          "",
          "[Removed Lines]",
          "1287:         if (state.cipher().has_value() && cipher != *state.cipher()) {",
          "1288:           throw FizzException(",
          "1289:               \"cipher mismatch with previous negotiation\",",
          "1290:               AlertDescription::illegal_parameter);",
          "1291:         }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}