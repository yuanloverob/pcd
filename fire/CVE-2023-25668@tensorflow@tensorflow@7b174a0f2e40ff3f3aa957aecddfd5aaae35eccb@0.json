{
  "cve_id": "CVE-2023-25668",
  "cve_desc": "TensorFlow is an open source platform for machine learning. Attackers using Tensorflow prior to 2.12.0 or 2.11.1 can access heap memory which is not in the control of user, leading to a crash or remote code execution. The fix will be included in TensorFlow version 2.12.0 and will also cherrypick this commit on TensorFlow version 2.11.1.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "7b174a0f2e40ff3f3aa957aecddfd5aaae35eccb",
  "patch_info": {
    "commit_hash": "7b174a0f2e40ff3f3aa957aecddfd5aaae35eccb",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/7b174a0f2e40ff3f3aa957aecddfd5aaae35eccb",
    "files": [
      "tensorflow/core/ops/array_ops.cc",
      "tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
    ],
    "message": "Fix asan issue with QuantizeAndDequantizeV2/V3/V4/V4Grad shape inference functions.\n\nPiperOrigin-RevId: 487366553",
    "before_after_code_files": [
      "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
      "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
      "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "2879:                                        axis);",
      "2880:       } else if (axis != -1) {",
      "2881:         ShapeHandle input;",
      "2882:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
      "2883:         DimensionHandle depth;",
      "2884:         TF_RETURN_IF_ERROR(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2882:         if (axis >= kint32max) {",
      "2883:           return errors::InvalidArgument(",
      "2884:               \"Axis cannot be >= kint32max value, got \", axis);",
      "2885:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2914:                                        axis);",
      "2915:       } else if (axis != -1) {",
      "2916:         ShapeHandle input;",
      "2917:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
      "2918:         DimensionHandle depth;",
      "2919:         TF_RETURN_IF_ERROR(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2921:         if (axis >= kint32max) {",
      "2922:           return errors::InvalidArgument(",
      "2923:               \"Axis cannot be >= kint32max value, got \", axis);",
      "2924:         }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2945:                                        axis);",
      "2946:       } else if (axis != -1) {",
      "2947:         ShapeHandle input;",
      "2948:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
      "2949:         DimensionHandle depth;",
      "2950:         TF_RETURN_IF_ERROR(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2956:         if (axis >= kint32max) {",
      "2957:           return errors::InvalidArgument(",
      "2958:               \"Axis cannot be >= kint32max value, got \", axis);",
      "2959:         }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2981:                                        axis);",
      "2982:       } else if (axis != -1) {",
      "2983:         ShapeHandle input;",
      "2984:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
      "2985:         DimensionHandle depth;",
      "2986:         TF_RETURN_IF_ERROR(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2996:         if (axis >= kint32max) {",
      "2997:           return errors::InvalidArgument(",
      "2998:               \"Axis cannot be >= kint32max value, got \", axis);",
      "2999:         }",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py": [
      "File: tensorflow/python/kernel_tests/array_ops/array_ops_test.py -> tensorflow/python/kernel_tests/array_ops/array_ops_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1856:               max_range=input_max,",
      "1857:               axis=2**31 - 1))",
      "1860: @test_util.run_all_in_graph_and_eager_modes",
      "1861: class SortedSearchTest(test_util.TensorFlowTestCase):",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1859:   @test_util.run_v2_only",
      "1860:   def testInvalidAxis(self):",
      "1862:     @def_function.function",
      "1863:     def test_quantize_and_dequantize_v2():",
      "1864:       gen_array_ops.quantize_and_dequantize_v2(",
      "1865:           input=[2.5],",
      "1866:           input_min=[1.0],",
      "1867:           input_max=[10.0],",
      "1868:           signed_input=True,",
      "1869:           num_bits=1,",
      "1870:           range_given=True,",
      "1871:           round_mode=\"HALF_TO_EVEN\",",
      "1872:           narrow_range=True,",
      "1873:           axis=0x7fffffff)",
      "1875:     @def_function.function",
      "1876:     def test_quantize_and_dequantize_v3():",
      "1877:       gen_array_ops.quantize_and_dequantize_v3(",
      "1878:           input=[2.5],",
      "1879:           input_min=[1.0],",
      "1880:           input_max=[10.0],",
      "1881:           num_bits=1,",
      "1882:           signed_input=True,",
      "1883:           range_given=True,",
      "1884:           narrow_range=True,",
      "1885:           axis=0x7fffffff)",
      "1887:     @def_function.function",
      "1888:     def test_quantize_and_dequantize_v4():",
      "1889:       gen_array_ops.quantize_and_dequantize_v4(",
      "1890:           input=[2.5],",
      "1891:           input_min=[1.0],",
      "1892:           input_max=[10.0],",
      "1893:           signed_input=True,",
      "1894:           num_bits=1,",
      "1895:           range_given=True,",
      "1896:           round_mode=\"HALF_TO_EVEN\",",
      "1897:           narrow_range=True,",
      "1898:           axis=0x7fffffff)",
      "1900:     @def_function.function",
      "1901:     def test_quantize_and_dequantize_v4_grad():",
      "1902:       gen_array_ops.quantize_and_dequantize_v4_grad(",
      "1903:           gradients=[2.5],",
      "1904:           input=[2.5],",
      "1905:           input_min=[1.0],",
      "1906:           input_max=[10.0],",
      "1907:           axis=0x7fffffff)",
      "1909:     with self.assertRaisesRegex(",
      "1910:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
      "1911:       test_quantize_and_dequantize_v2()",
      "1913:     with self.assertRaisesRegex(",
      "1914:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
      "1915:       test_quantize_and_dequantize_v3()",
      "1917:     with self.assertRaisesRegex(",
      "1918:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
      "1919:       test_quantize_and_dequantize_v4()",
      "1921:     with self.assertRaisesRegex(",
      "1922:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
      "1923:       test_quantize_and_dequantize_v4_grad()",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "eb92930a0ee264f2f04b7c7069cc4515d79ca6f3",
      "candidate_info": {
        "commit_hash": "eb92930a0ee264f2f04b7c7069cc4515d79ca6f3",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/eb92930a0ee264f2f04b7c7069cc4515d79ca6f3",
        "files": [
          "tensorflow/core/ops/array_ops.cc",
          "tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
        ],
        "message": "Fix asan issue with QuantizeAndDequantizeV2/V3/V4/V4Grad shape inference functions.\n\nPiperOrigin-RevId: 487366553",
        "before_after_code_files": [
          "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
          "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
          "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2879:                                        axis);",
          "2880:       } else if (axis != -1) {",
          "2881:         ShapeHandle input;",
          "2882:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2883:         DimensionHandle depth;",
          "2884:         TF_RETURN_IF_ERROR(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2882:         if (axis >= kint32max) {",
          "2883:           return errors::InvalidArgument(",
          "2884:               \"Axis cannot be >= kint32max value, got \", axis);",
          "2885:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2914:                                        axis);",
          "2915:       } else if (axis != -1) {",
          "2916:         ShapeHandle input;",
          "2917:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2918:         DimensionHandle depth;",
          "2919:         TF_RETURN_IF_ERROR(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2921:         if (axis >= kint32max) {",
          "2922:           return errors::InvalidArgument(",
          "2923:               \"Axis cannot be >= kint32max value, got \", axis);",
          "2924:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2945:                                        axis);",
          "2946:       } else if (axis != -1) {",
          "2947:         ShapeHandle input;",
          "2948:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2949:         DimensionHandle depth;",
          "2950:         TF_RETURN_IF_ERROR(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2956:         if (axis >= kint32max) {",
          "2957:           return errors::InvalidArgument(",
          "2958:               \"Axis cannot be >= kint32max value, got \", axis);",
          "2959:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2981:                                        axis);",
          "2982:       } else if (axis != -1) {",
          "2983:         ShapeHandle input;",
          "2984:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2985:         DimensionHandle depth;",
          "2986:         TF_RETURN_IF_ERROR(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2996:         if (axis >= kint32max) {",
          "2997:           return errors::InvalidArgument(",
          "2998:               \"Axis cannot be >= kint32max value, got \", axis);",
          "2999:         }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py": [
          "File: tensorflow/python/kernel_tests/array_ops/array_ops_test.py -> tensorflow/python/kernel_tests/array_ops/array_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1791:               max_range=input_max,",
          "1792:               axis=2**31 - 1))",
          "1795: @test_util.run_all_in_graph_and_eager_modes",
          "1796: class SortedSearchTest(test_util.TensorFlowTestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1794:   @test_util.run_v2_only",
          "1795:   def testInvalidAxis(self):",
          "1797:     @def_function.function",
          "1798:     def test_quantize_and_dequantize_v2():",
          "1799:       gen_array_ops.quantize_and_dequantize_v2(",
          "1800:           input=[2.5],",
          "1801:           input_min=[1.0],",
          "1802:           input_max=[10.0],",
          "1803:           signed_input=True,",
          "1804:           num_bits=1,",
          "1805:           range_given=True,",
          "1806:           round_mode=\"HALF_TO_EVEN\",",
          "1807:           narrow_range=True,",
          "1808:           axis=0x7fffffff)",
          "1810:     @def_function.function",
          "1811:     def test_quantize_and_dequantize_v3():",
          "1812:       gen_array_ops.quantize_and_dequantize_v3(",
          "1813:           input=[2.5],",
          "1814:           input_min=[1.0],",
          "1815:           input_max=[10.0],",
          "1816:           num_bits=1,",
          "1817:           signed_input=True,",
          "1818:           range_given=True,",
          "1819:           narrow_range=True,",
          "1820:           axis=0x7fffffff)",
          "1822:     @def_function.function",
          "1823:     def test_quantize_and_dequantize_v4():",
          "1824:       gen_array_ops.quantize_and_dequantize_v4(",
          "1825:           input=[2.5],",
          "1826:           input_min=[1.0],",
          "1827:           input_max=[10.0],",
          "1828:           signed_input=True,",
          "1829:           num_bits=1,",
          "1830:           range_given=True,",
          "1831:           round_mode=\"HALF_TO_EVEN\",",
          "1832:           narrow_range=True,",
          "1833:           axis=0x7fffffff)",
          "1835:     @def_function.function",
          "1836:     def test_quantize_and_dequantize_v4_grad():",
          "1837:       gen_array_ops.quantize_and_dequantize_v4_grad(",
          "1838:           gradients=[2.5],",
          "1839:           input=[2.5],",
          "1840:           input_min=[1.0],",
          "1841:           input_max=[10.0],",
          "1842:           axis=0x7fffffff)",
          "1844:     with self.assertRaisesRegex(",
          "1845:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
          "1846:       test_quantize_and_dequantize_v2()",
          "1848:     with self.assertRaisesRegex(",
          "1849:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
          "1850:       test_quantize_and_dequantize_v3()",
          "1852:     with self.assertRaisesRegex(",
          "1853:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
          "1854:       test_quantize_and_dequantize_v4()",
          "1856:     with self.assertRaisesRegex(",
          "1857:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
          "1858:       test_quantize_and_dequantize_v4_grad()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1c2e7f425529ce166f597b512e3bf524f34cda1a",
      "candidate_info": {
        "commit_hash": "1c2e7f425529ce166f597b512e3bf524f34cda1a",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/1c2e7f425529ce166f597b512e3bf524f34cda1a",
        "files": [
          "tensorflow/core/ops/array_ops.cc",
          "tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
        ],
        "message": "Fix asan issue with QuantizeAndDequantizeV2/V3/V4/V4Grad shape inference functions.\n\nPiperOrigin-RevId: 487366553",
        "before_after_code_files": [
          "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
          "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
          "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2879:                                        axis);",
          "2880:       } else if (axis != -1) {",
          "2881:         ShapeHandle input;",
          "2882:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2883:         DimensionHandle depth;",
          "2884:         TF_RETURN_IF_ERROR(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2882:         if (axis >= kint32max) {",
          "2883:           return errors::InvalidArgument(",
          "2884:               \"Axis cannot be >= kint32max value, got \", axis);",
          "2885:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2914:                                        axis);",
          "2915:       } else if (axis != -1) {",
          "2916:         ShapeHandle input;",
          "2917:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2918:         DimensionHandle depth;",
          "2919:         TF_RETURN_IF_ERROR(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2921:         if (axis >= kint32max) {",
          "2922:           return errors::InvalidArgument(",
          "2923:               \"Axis cannot be >= kint32max value, got \", axis);",
          "2924:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2945:                                        axis);",
          "2946:       } else if (axis != -1) {",
          "2947:         ShapeHandle input;",
          "2948:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2949:         DimensionHandle depth;",
          "2950:         TF_RETURN_IF_ERROR(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2956:         if (axis >= kint32max) {",
          "2957:           return errors::InvalidArgument(",
          "2958:               \"Axis cannot be >= kint32max value, got \", axis);",
          "2959:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2981:                                        axis);",
          "2982:       } else if (axis != -1) {",
          "2983:         ShapeHandle input;",
          "2984:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2985:         DimensionHandle depth;",
          "2986:         TF_RETURN_IF_ERROR(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2996:         if (axis >= kint32max) {",
          "2997:           return errors::InvalidArgument(",
          "2998:               \"Axis cannot be >= kint32max value, got \", axis);",
          "2999:         }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py": [
          "File: tensorflow/python/kernel_tests/array_ops/array_ops_test.py -> tensorflow/python/kernel_tests/array_ops/array_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1855:               max_range=input_max,",
          "1856:               axis=2**31 - 1))",
          "1859: @test_util.run_all_in_graph_and_eager_modes",
          "1860: class SortedSearchTest(test_util.TensorFlowTestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1858:   @test_util.run_v2_only",
          "1859:   def testInvalidAxis(self):",
          "1861:     @def_function.function",
          "1862:     def test_quantize_and_dequantize_v2():",
          "1863:       gen_array_ops.quantize_and_dequantize_v2(",
          "1864:           input=[2.5],",
          "1865:           input_min=[1.0],",
          "1866:           input_max=[10.0],",
          "1867:           signed_input=True,",
          "1868:           num_bits=1,",
          "1869:           range_given=True,",
          "1870:           round_mode=\"HALF_TO_EVEN\",",
          "1871:           narrow_range=True,",
          "1872:           axis=0x7fffffff)",
          "1874:     @def_function.function",
          "1875:     def test_quantize_and_dequantize_v3():",
          "1876:       gen_array_ops.quantize_and_dequantize_v3(",
          "1877:           input=[2.5],",
          "1878:           input_min=[1.0],",
          "1879:           input_max=[10.0],",
          "1880:           num_bits=1,",
          "1881:           signed_input=True,",
          "1882:           range_given=True,",
          "1883:           narrow_range=True,",
          "1884:           axis=0x7fffffff)",
          "1886:     @def_function.function",
          "1887:     def test_quantize_and_dequantize_v4():",
          "1888:       gen_array_ops.quantize_and_dequantize_v4(",
          "1889:           input=[2.5],",
          "1890:           input_min=[1.0],",
          "1891:           input_max=[10.0],",
          "1892:           signed_input=True,",
          "1893:           num_bits=1,",
          "1894:           range_given=True,",
          "1895:           round_mode=\"HALF_TO_EVEN\",",
          "1896:           narrow_range=True,",
          "1897:           axis=0x7fffffff)",
          "1899:     @def_function.function",
          "1900:     def test_quantize_and_dequantize_v4_grad():",
          "1901:       gen_array_ops.quantize_and_dequantize_v4_grad(",
          "1902:           gradients=[2.5],",
          "1903:           input=[2.5],",
          "1904:           input_min=[1.0],",
          "1905:           input_max=[10.0],",
          "1906:           axis=0x7fffffff)",
          "1908:     with self.assertRaisesRegex(",
          "1909:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
          "1910:       test_quantize_and_dequantize_v2()",
          "1912:     with self.assertRaisesRegex(",
          "1913:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
          "1914:       test_quantize_and_dequantize_v3()",
          "1916:     with self.assertRaisesRegex(",
          "1917:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
          "1918:       test_quantize_and_dequantize_v4()",
          "1920:     with self.assertRaisesRegex(",
          "1921:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
          "1922:       test_quantize_and_dequantize_v4_grad()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a0c1aeb23ba74f353b7e9a76ee5d6485d6279d37",
      "candidate_info": {
        "commit_hash": "a0c1aeb23ba74f353b7e9a76ee5d6485d6279d37",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/a0c1aeb23ba74f353b7e9a76ee5d6485d6279d37",
        "files": [
          "tensorflow/core/ops/array_ops.cc",
          "tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
        ],
        "message": "Fix asan issue with QuantizeAndDequantizeV2/V3/V4/V4Grad shape inference functions.\n\nPiperOrigin-RevId: 487366553",
        "before_after_code_files": [
          "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
          "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
          "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2879:                                        axis);",
          "2880:       } else if (axis != -1) {",
          "2881:         ShapeHandle input;",
          "2882:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2883:         DimensionHandle depth;",
          "2884:         TF_RETURN_IF_ERROR(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2882:         if (axis >= kint32max) {",
          "2883:           return errors::InvalidArgument(",
          "2884:               \"Axis cannot be >= kint32max value, got \", axis);",
          "2885:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2914:                                        axis);",
          "2915:       } else if (axis != -1) {",
          "2916:         ShapeHandle input;",
          "2917:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2918:         DimensionHandle depth;",
          "2919:         TF_RETURN_IF_ERROR(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2921:         if (axis >= kint32max) {",
          "2922:           return errors::InvalidArgument(",
          "2923:               \"Axis cannot be >= kint32max value, got \", axis);",
          "2924:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2945:                                        axis);",
          "2946:       } else if (axis != -1) {",
          "2947:         ShapeHandle input;",
          "2948:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2949:         DimensionHandle depth;",
          "2950:         TF_RETURN_IF_ERROR(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2956:         if (axis >= kint32max) {",
          "2957:           return errors::InvalidArgument(",
          "2958:               \"Axis cannot be >= kint32max value, got \", axis);",
          "2959:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2981:                                        axis);",
          "2982:       } else if (axis != -1) {",
          "2983:         ShapeHandle input;",
          "2984:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2985:         DimensionHandle depth;",
          "2986:         TF_RETURN_IF_ERROR(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2996:         if (axis >= kint32max) {",
          "2997:           return errors::InvalidArgument(",
          "2998:               \"Axis cannot be >= kint32max value, got \", axis);",
          "2999:         }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py": [
          "File: tensorflow/python/kernel_tests/array_ops/array_ops_test.py -> tensorflow/python/kernel_tests/array_ops/array_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1760:               max_range=input_max,",
          "1761:               axis=2**31 - 1))",
          "1764: @test_util.run_all_in_graph_and_eager_modes",
          "1765: class SortedSearchTest(test_util.TensorFlowTestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1763:   @test_util.run_v2_only",
          "1764:   def testInvalidAxis(self):",
          "1766:     @def_function.function",
          "1767:     def test_quantize_and_dequantize_v2():",
          "1768:       gen_array_ops.quantize_and_dequantize_v2(",
          "1769:           input=[2.5],",
          "1770:           input_min=[1.0],",
          "1771:           input_max=[10.0],",
          "1772:           signed_input=True,",
          "1773:           num_bits=1,",
          "1774:           range_given=True,",
          "1775:           round_mode=\"HALF_TO_EVEN\",",
          "1776:           narrow_range=True,",
          "1777:           axis=0x7fffffff)",
          "1779:     @def_function.function",
          "1780:     def test_quantize_and_dequantize_v3():",
          "1781:       gen_array_ops.quantize_and_dequantize_v3(",
          "1782:           input=[2.5],",
          "1783:           input_min=[1.0],",
          "1784:           input_max=[10.0],",
          "1785:           num_bits=1,",
          "1786:           signed_input=True,",
          "1787:           range_given=True,",
          "1788:           narrow_range=True,",
          "1789:           axis=0x7fffffff)",
          "1791:     @def_function.function",
          "1792:     def test_quantize_and_dequantize_v4():",
          "1793:       gen_array_ops.quantize_and_dequantize_v4(",
          "1794:           input=[2.5],",
          "1795:           input_min=[1.0],",
          "1796:           input_max=[10.0],",
          "1797:           signed_input=True,",
          "1798:           num_bits=1,",
          "1799:           range_given=True,",
          "1800:           round_mode=\"HALF_TO_EVEN\",",
          "1801:           narrow_range=True,",
          "1802:           axis=0x7fffffff)",
          "1804:     @def_function.function",
          "1805:     def test_quantize_and_dequantize_v4_grad():",
          "1806:       gen_array_ops.quantize_and_dequantize_v4_grad(",
          "1807:           gradients=[2.5],",
          "1808:           input=[2.5],",
          "1809:           input_min=[1.0],",
          "1810:           input_max=[10.0],",
          "1811:           axis=0x7fffffff)",
          "1813:     with self.assertRaisesRegex(",
          "1814:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
          "1815:       test_quantize_and_dequantize_v2()",
          "1817:     with self.assertRaisesRegex(",
          "1818:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
          "1819:       test_quantize_and_dequantize_v3()",
          "1821:     with self.assertRaisesRegex(",
          "1822:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
          "1823:       test_quantize_and_dequantize_v4()",
          "1825:     with self.assertRaisesRegex(",
          "1826:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
          "1827:       test_quantize_and_dequantize_v4_grad()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fb5edf1558beaa0f553deccad904b44a0378f14b",
      "candidate_info": {
        "commit_hash": "fb5edf1558beaa0f553deccad904b44a0378f14b",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/fb5edf1558beaa0f553deccad904b44a0378f14b",
        "files": [
          "tensorflow/core/ops/array_ops.cc",
          "tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
        ],
        "message": "Fix asan issue with QuantizeAndDequantizeV2/V3/V4/V4Grad shape inference functions.\n\nPiperOrigin-RevId: 487366553",
        "before_after_code_files": [
          "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
          "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
          "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "2879:                                        axis);",
          "2880:       } else if (axis != -1) {",
          "2881:         ShapeHandle input;",
          "2882:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2883:         DimensionHandle depth;",
          "2884:         TF_RETURN_IF_ERROR(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2882:         if (axis >= kint32max) {",
          "2883:           return errors::InvalidArgument(",
          "2884:               \"Axis cannot be >= kint32max value, got \", axis);",
          "2885:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2914:                                        axis);",
          "2915:       } else if (axis != -1) {",
          "2916:         ShapeHandle input;",
          "2917:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2918:         DimensionHandle depth;",
          "2919:         TF_RETURN_IF_ERROR(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2921:         if (axis >= kint32max) {",
          "2922:           return errors::InvalidArgument(",
          "2923:               \"Axis cannot be >= kint32max value, got \", axis);",
          "2924:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2945:                                        axis);",
          "2946:       } else if (axis != -1) {",
          "2947:         ShapeHandle input;",
          "2948:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2949:         DimensionHandle depth;",
          "2950:         TF_RETURN_IF_ERROR(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2956:         if (axis >= kint32max) {",
          "2957:           return errors::InvalidArgument(",
          "2958:               \"Axis cannot be >= kint32max value, got \", axis);",
          "2959:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2981:                                        axis);",
          "2982:       } else if (axis != -1) {",
          "2983:         ShapeHandle input;",
          "2984:         TF_RETURN_IF_ERROR(c->WithRankAtLeast(c->input(0), axis + 1, &input));",
          "2985:         DimensionHandle depth;",
          "2986:         TF_RETURN_IF_ERROR(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2996:         if (axis >= kint32max) {",
          "2997:           return errors::InvalidArgument(",
          "2998:               \"Axis cannot be >= kint32max value, got \", axis);",
          "2999:         }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/array_ops/array_ops_test.py||tensorflow/python/kernel_tests/array_ops/array_ops_test.py": [
          "File: tensorflow/python/kernel_tests/array_ops/array_ops_test.py -> tensorflow/python/kernel_tests/array_ops/array_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1855:               max_range=input_max,",
          "1856:               axis=2**31 - 1))",
          "1859: @test_util.run_all_in_graph_and_eager_modes",
          "1860: class SortedSearchTest(test_util.TensorFlowTestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1858:   @test_util.run_v2_only",
          "1859:   def testInvalidAxis(self):",
          "1861:     @def_function.function",
          "1862:     def test_quantize_and_dequantize_v2():",
          "1863:       gen_array_ops.quantize_and_dequantize_v2(",
          "1864:           input=[2.5],",
          "1865:           input_min=[1.0],",
          "1866:           input_max=[10.0],",
          "1867:           signed_input=True,",
          "1868:           num_bits=1,",
          "1869:           range_given=True,",
          "1870:           round_mode=\"HALF_TO_EVEN\",",
          "1871:           narrow_range=True,",
          "1872:           axis=0x7fffffff)",
          "1874:     @def_function.function",
          "1875:     def test_quantize_and_dequantize_v3():",
          "1876:       gen_array_ops.quantize_and_dequantize_v3(",
          "1877:           input=[2.5],",
          "1878:           input_min=[1.0],",
          "1879:           input_max=[10.0],",
          "1880:           num_bits=1,",
          "1881:           signed_input=True,",
          "1882:           range_given=True,",
          "1883:           narrow_range=True,",
          "1884:           axis=0x7fffffff)",
          "1886:     @def_function.function",
          "1887:     def test_quantize_and_dequantize_v4():",
          "1888:       gen_array_ops.quantize_and_dequantize_v4(",
          "1889:           input=[2.5],",
          "1890:           input_min=[1.0],",
          "1891:           input_max=[10.0],",
          "1892:           signed_input=True,",
          "1893:           num_bits=1,",
          "1894:           range_given=True,",
          "1895:           round_mode=\"HALF_TO_EVEN\",",
          "1896:           narrow_range=True,",
          "1897:           axis=0x7fffffff)",
          "1899:     @def_function.function",
          "1900:     def test_quantize_and_dequantize_v4_grad():",
          "1901:       gen_array_ops.quantize_and_dequantize_v4_grad(",
          "1902:           gradients=[2.5],",
          "1903:           input=[2.5],",
          "1904:           input_min=[1.0],",
          "1905:           input_max=[10.0],",
          "1906:           axis=0x7fffffff)",
          "1908:     with self.assertRaisesRegex(",
          "1909:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
          "1910:       test_quantize_and_dequantize_v2()",
          "1912:     with self.assertRaisesRegex(",
          "1913:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
          "1914:       test_quantize_and_dequantize_v3()",
          "1916:     with self.assertRaisesRegex(",
          "1917:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
          "1918:       test_quantize_and_dequantize_v4()",
          "1920:     with self.assertRaisesRegex(",
          "1921:         ValueError, \"Axis cannot be >= kint32max value, got 2147483647\"):",
          "1922:       test_quantize_and_dequantize_v4_grad()",
          "",
          "---------------"
        ]
      }
    }
  ]
}