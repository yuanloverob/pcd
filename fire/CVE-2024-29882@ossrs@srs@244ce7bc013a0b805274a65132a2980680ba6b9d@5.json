{
  "cve_id": "CVE-2024-29882",
  "cve_desc": "SRS is a simple, high-efficiency, real-time video server. SRS's `/api/v1/vhosts/vid-<id>?callback=<payload>` endpoint didn't filter the callback function name which led to injecting malicious javascript payloads and executing XSS ( Cross-Site Scripting). This vulnerability is fixed in 5.0.210 and 6.0.121.",
  "repo": "ossrs/srs",
  "patch_hash": "244ce7bc013a0b805274a65132a2980680ba6b9d",
  "patch_info": {
    "commit_hash": "244ce7bc013a0b805274a65132a2980680ba6b9d",
    "repo": "ossrs/srs",
    "commit_url": "https://github.com/ossrs/srs/commit/244ce7bc013a0b805274a65132a2980680ba6b9d",
    "files": [
      "trunk/configure",
      "trunk/doc/CHANGELOG.md",
      "trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp",
      "trunk/src/kernel/srs_kernel_error.hpp",
      "trunk/src/protocol/srs_protocol_http_conn.cpp",
      "trunk/src/utest/srs_utest_protocol3.cpp",
      "trunk/src/utest/srs_utest_protocol3.hpp"
    ],
    "message": "Merge pull request from GHSA-gv9r-qcjc-5hj7\n\n* Filter JSONP callback function name. v5.0.210,v6.0.121\n\n* Add utest.\n\n* Refine utest",
    "before_after_code_files": [
      "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
      "trunk/src/kernel/srs_kernel_error.hpp||trunk/src/kernel/srs_kernel_error.hpp",
      "trunk/src/protocol/srs_protocol_http_conn.cpp||trunk/src/protocol/srs_protocol_http_conn.cpp",
      "trunk/src/utest/srs_utest_protocol3.cpp||trunk/src/utest/srs_utest_protocol3.cpp",
      "trunk/src/utest/srs_utest_protocol3.hpp||trunk/src/utest/srs_utest_protocol3.hpp"
    ]
  },
  "patch_diff": {
    "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
      "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       5",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    209",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    210",
      "",
      "---------------"
    ],
    "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
      "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       6",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    120",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    121",
      "",
      "---------------"
    ],
    "trunk/src/kernel/srs_kernel_error.hpp||trunk/src/kernel/srs_kernel_error.hpp": [
      "File: trunk/src/kernel/srs_kernel_error.hpp -> trunk/src/kernel/srs_kernel_error.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "332:     XX(ERROR_STREAM_CASTER_HEVC_VPS        , 4054, \"CasterTsHevcVps\", \"Invalid ts HEVC VPS for stream caster\") \\",
      "333:     XX(ERROR_STREAM_CASTER_HEVC_SPS        , 4055, \"CasterTsHevcSps\", \"Invalid ts HEVC SPS for stream caster\") \\",
      "334:     XX(ERROR_STREAM_CASTER_HEVC_PPS        , 4056, \"CasterTsHevcPps\", \"Invalid ts HEVC PPS for stream caster\") \\",
      "",
      "[Removed Lines]",
      "335:     XX(ERROR_STREAM_CASTER_HEVC_FORMAT     , 4057, \"CasterTsHevcFormat\", \"Invalid ts HEVC Format for stream caster\")",
      "",
      "[Added Lines]",
      "335:     XX(ERROR_STREAM_CASTER_HEVC_FORMAT     , 4057, \"CasterTsHevcFormat\", \"Invalid ts HEVC Format for stream caster\") \\",
      "336:     XX(ERROR_HTTP_JSONP                    , 4058, \"HttpJsonp\", \"Invalid callback for JSONP\")",
      "",
      "---------------"
    ],
    "trunk/src/protocol/srs_protocol_http_conn.cpp||trunk/src/protocol/srs_protocol_http_conn.cpp": [
      "File: trunk/src/protocol/srs_protocol_http_conn.cpp -> trunk/src/protocol/srs_protocol_http_conn.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "332:     }",
      "333: }",
      "335: srs_error_t SrsHttpMessage::set_url(string url, bool allow_jsonp)",
      "336: {",
      "337:     srs_error_t err = srs_success;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "336: bool srs_is_valid_jsonp_callback(std::string callback)",
      "337: {",
      "338:     for (int i = 0; i < (int)callback.length(); i++) {",
      "339:         char ch = callback.at(i);",
      "340:         bool is_alpha_beta = (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');",
      "341:         bool is_number = (ch >= '0' && ch <= '9');",
      "342:         if (!is_alpha_beta && !is_number && ch != '.' && ch != '_' && ch != '-') {",
      "343:             return false;",
      "344:         }",
      "345:     }",
      "346:     return true;",
      "347: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "375:     if (allow_jsonp) {",
      "379:         if (jsonp) {",
      "380:             jsonp_method = query_get(\"method\");",
      "381:         }",
      "382:     }",
      "384:     return err;",
      "",
      "[Removed Lines]",
      "376:         if (!query_get(\"callback\").empty()) {",
      "377:             jsonp = true;",
      "378:         }",
      "",
      "[Added Lines]",
      "390:         string callback= query_get(\"callback\");",
      "391:         jsonp = !callback.empty();",
      "397:         if (!srs_is_valid_jsonp_callback(callback)) {",
      "398:             return srs_error_new(ERROR_HTTP_JSONP, \"invalid callback=%s\", callback.c_str());",
      "399:         }",
      "",
      "---------------"
    ],
    "trunk/src/utest/srs_utest_protocol3.cpp||trunk/src/utest/srs_utest_protocol3.cpp": [
      "File: trunk/src/utest/srs_utest_protocol3.cpp -> trunk/src/utest/srs_utest_protocol3.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <srs_utest_protocol3.hpp>",
      "8: using namespace std;",
      "10: #include <srs_kernel_error.hpp>",
      "11: #include <srs_core_autofree.hpp>",
      "12: #include <srs_protocol_utility.hpp>",
      "13: #include <srs_protocol_rtmp_msg_array.hpp>",
      "14: #include <srs_protocol_rtmp_stack.hpp>",
      "15: #include <srs_kernel_utility.hpp>",
      "16: #include <srs_app_st.hpp>",
      "17: #include <srs_protocol_amf0.hpp>",
      "18: #include <srs_protocol_rtmp_stack.hpp>",
      "19: #include <srs_protocol_http_conn.hpp>",
      "20: #include <srs_protocol_protobuf.hpp>",
      "21: #include <srs_kernel_buffer.hpp>",
      "23: extern bool srs_is_valid_jsonp_callback(std::string callback);",
      "25: VOID TEST(ProtocolHttpTest, JsonpCallbackName)",
      "26: {",
      "27:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"\"));",
      "28:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"callback\"));",
      "29:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback\"));",
      "30:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback1234567890\"));",
      "31:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback-1234567890\"));",
      "32:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback_1234567890\"));",
      "33:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback.1234567890\"));",
      "34:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback1234567890-_.\"));",
      "35:     EXPECT_FALSE(srs_is_valid_jsonp_callback(\"callback()//\"));",
      "36:     EXPECT_FALSE(srs_is_valid_jsonp_callback(\"callback!\"));",
      "37:     EXPECT_FALSE(srs_is_valid_jsonp_callback(\"callback;\"));",
      "38: }",
      "",
      "---------------"
    ],
    "trunk/src/utest/srs_utest_protocol3.hpp||trunk/src/utest/srs_utest_protocol3.hpp": [
      "File: trunk/src/utest/srs_utest_protocol3.hpp -> trunk/src/utest/srs_utest_protocol3.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7: #ifndef SRS_UTEST_PROTOCOL3_HPP",
      "8: #define SRS_UTEST_PROTOCOL3_HPP",
      "11: #include <srs_utest_protocol3.hpp>",
      "13: #include <srs_utest_protocol.hpp>",
      "15: #endif",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3d8ef92a23a4f88fbd573e6707282500299319db",
      "candidate_info": {
        "commit_hash": "3d8ef92a23a4f88fbd573e6707282500299319db",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/3d8ef92a23a4f88fbd573e6707282500299319db",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_dvr.cpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/core/srs_core_version7.hpp"
        ],
        "message": "Dvr: support h265 flv fragments. v6.0.162 v7.0.24 (#4296)\n\n1. Issue\nWhen segmenting H.265 encoded FLV files using a DVR, the system does not\ncreate FLV segments at regular intervals as specified by the\n`dvr_wait_keyframe` configuration.\n\n2. Configure dvr.segment.conf\n```config\n# the config for srs to dvr in segment mode\n# @see https://ossrs.net/lts/zh-cn/docs/v4/doc/dvr\n# @see full.conf for detail config.\n\nlisten              1935;\nmax_connections     1000;\ndaemon              off;\nsrs_log_tank        console;\nvhost __defaultVhost__ {\n    dvr {\n        enabled      on;\n        dvr_path     ./objs/nginx/html/[app]/[stream].[timestamp].flv;\n        dvr_plan     segment;\n        dvr_duration    30;\n        dvr_wait_keyframe       on;\n    }\n}\n```\n\n3. Stream Push Testing\n### FFmpeg Stream Push\nDomestic FFmpeg version (codecId=12)\n```sh\nhevc-12-ffmpeg -stream_loop -1 -re -i 264_aac.flv -c:v libx265 -preset fast -b:v 2000k -maxrate 2000k -bufsize 4000k -bf 0 -c:a aac -b:a 128k -ar 44100 -ac 2 -f flv rtmp://localhost/live/livestream\n```\nFFmpeg version 6.0 or higher (supports `enhanced RTMP`)\n```sh\nffmpeg -stream_loop -1 -re -i 264_aac.flv -c:v libx265 -preset fast -b:v 2000k -maxrate 2000k -bufsize 4000k -bf 0 -c:a aac -b:a 128k -ar 44100 -ac 2 -f flv rtmp://localhost/live/livestream\n```\n\nOBS streaming (version 30.0 or above supports `enhanced RTMP`)\n\n![image](https://github.com/user-attachments/assets/fd2806c3-b0e3-44c4-a2d5-e04e6e5386ff)\n\n![image](https://github.com/user-attachments/assets/15ef9c45-e15a-426e-b70c-d4bdd5dc8055)\n\n## 4. Playback Testing\nSRS player (supports both `enhanced RTMP` and `codec=12 FLV`)\n```\nhttp://127.0.0.1:8080/players/srs_player.html\n```\nDomestic ffplay (supports `codec=12 FLV`)\n```\nhevc-12-ffplay http://127.0.0.1:8080/live/livestream.1740311867638.flv\n```\nffplay (versions above ffmpeg 6.0 support `enhanced RTMP`)\n```\nffplay http://127.0.0.1:8080/live/livestream.1740311867638.flv\n```\n\n![image](https://github.com/user-attachments/assets/711a4182-418c-4134-934f-cba41a08e06f)\n\n\n\n---------\n\n`TRANS_BY_GPT4`\n\n---------\n\nCo-authored-by: Haibo Chen <495810242@qq.com>\nCo-authored-by: john <hondaxiao@tencent.com>\nCo-authored-by: winlin <winlinvip@gmail.com>\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_dvr.cpp||trunk/src/app/srs_app_dvr.cpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/core/srs_core_version7.hpp||trunk/src/core/srs_core_version7.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_dvr.cpp||trunk/src/app/srs_app_dvr.cpp": [
          "File: trunk/src/app/srs_app_dvr.cpp -> trunk/src/app/srs_app_dvr.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "869:         char* payload = msg->payload;",
          "870:         int size = msg->size;",
          "872:         if (!is_key_frame) {",
          "873:             return err;",
          "874:         }",
          "",
          "[Removed Lines]",
          "871:         bool is_key_frame = SrsFlvVideo::h264(payload, size) && SrsFlvVideo::keyframe(payload, size) && !SrsFlvVideo::sh(payload, size);",
          "",
          "[Added Lines]",
          "872:         bool codec_ok = SrsFlvVideo::h264(payload, size);",
          "873: #ifdef SRS_H265",
          "874:         codec_ok = codec_ok? true : SrsFlvVideo::hevc(payload, size);",
          "875: #endif",
          "877:         bool is_key_frame = codec_ok && SrsFlvVideo::keyframe(payload, size) && !SrsFlvVideo::sh(payload, size);",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    161",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    162",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version7.hpp||trunk/src/core/srs_core_version7.hpp": [
          "File: trunk/src/core/srs_core_version7.hpp -> trunk/src/core/srs_core_version7.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       7",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    23",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    24",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "05c3a422a5bd163a5b61b231cdbe0b99e49bf2c0",
      "candidate_info": {
        "commit_hash": "05c3a422a5bd163a5b61b231cdbe0b99e49bf2c0",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/05c3a422a5bd163a5b61b231cdbe0b99e49bf2c0",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_http_api.cpp",
          "trunk/src/app/srs_app_http_stream.cpp",
          "trunk/src/app/srs_app_http_stream.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/core/srs_core_version7.hpp"
        ],
        "message": "HTTP-FLV: Notify connection to expire when unpublishing. v6.0.152 v7.0.11 (#4164)\n\nWhen stopping the stream, it will wait for the HTTP Streaming to exit.\nIf the HTTP Streaming goroutine hangs, it will not exit automatically.\n\n```cpp\nvoid SrsHttpStreamServer::http_unmount(SrsRequest* r)\n{\n    SrsUniquePtr<SrsLiveStream> stream(entry->stream);\n    if (stream->entry) stream->entry->enabled = false;\n    srs_usleep(...); // Wait for about 120s.\n    mux.unhandle(entry->mount, stream.get()); // Free stream.\n}\n\nsrs_error_t SrsLiveStream::serve_http(ISrsHttpResponseWriter* w, ISrsHttpMessage* r)\n{\n    err = do_serve_http(w, r); // If stuck in here for 120s+\n    alive_viewers_--; // Crash at here, because stream has been deleted.\n```\n\nWe should notify http stream connection to interrupt(expire):\n\n```cpp\nvoid SrsHttpStreamServer::http_unmount(SrsRequest* r)\n{\n    SrsUniquePtr<SrsLiveStream> stream(entry->stream);\n    if (stream->entry) stream->entry->enabled = false;\n    stream->expire(); // Notify http stream to interrupt.\n```\n\nNote that we should notify all viewers pulling stream from this http\nstream.\n\nNote that we have tried to fix this issue, but only try to wait for all\nviewers to quit, without interrupting the viewers, see\nhttps://github.com/ossrs/srs/pull/4144\n\n\n---------\n\nCo-authored-by: Jacob Su <suzp1984@gmail.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_http_api.cpp||trunk/src/app/srs_app_http_api.cpp",
          "trunk/src/app/srs_app_http_stream.cpp||trunk/src/app/srs_app_http_stream.cpp",
          "trunk/src/app/srs_app_http_stream.hpp||trunk/src/app/srs_app_http_stream.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/core/srs_core_version7.hpp||trunk/src/core/srs_core_version7.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_http_api.cpp||trunk/src/app/srs_app_http_api.cpp": [
          "File: trunk/src/app/srs_app_http_api.cpp -> trunk/src/app/srs_app_http_api.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1207: srs_error_t SrsGoApiSignal::serve_http(ISrsHttpResponseWriter* w, ISrsHttpMessage* r)",
          "1208: {",
          "1211:     std::string signal = r->query_get(\"signo\");",
          "1212:     srs_trace(\"query signo=%s\", signal.c_str());",
          "",
          "[Removed Lines]",
          "1209:     srs_error_t err = srs_success;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_http_stream.cpp||trunk/src/app/srs_app_http_stream.cpp": [
          "File: trunk/src/app/srs_app_http_stream.cpp -> trunk/src/app/srs_app_http_stream.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "583:     cache = c;",
          "584:     req = r->copy()->as_http();",
          "585:     security_ = new SrsSecurity();",
          "587: }",
          "589: SrsLiveStream::~SrsLiveStream()",
          "590: {",
          "591:     srs_freep(req);",
          "592:     srs_freep(security_);",
          "593: }",
          "595: srs_error_t SrsLiveStream::update_auth(SrsRequest* r)",
          "",
          "[Removed Lines]",
          "586:     alive_viewers_ = 0;",
          "",
          "[Added Lines]",
          "594:     srs_assert(viewers_.empty());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "634:         return srs_error_wrap(err, \"http hook\");",
          "635:     }",
          "638:     err = do_serve_http(w, r);",
          "641:     http_hooks_on_stop(r);",
          "643:     return err;",
          "",
          "[Removed Lines]",
          "637:     alive_viewers_++;",
          "639:     alive_viewers_--;",
          "",
          "[Added Lines]",
          "640:     viewers_.push_back(hc);",
          "646:     vector<ISrsExpire*>::iterator it = std::find(viewers_.begin(), viewers_.end(), hc);",
          "647:     srs_assert (it != viewers_.end());",
          "648:     viewers_.erase(it);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "646: bool SrsLiveStream::alive()",
          "647: {",
          "649: }",
          "651: srs_error_t SrsLiveStream::do_serve_http(ISrsHttpResponseWriter* w, ISrsHttpMessage* r)",
          "",
          "[Removed Lines]",
          "648:     return alive_viewers_ > 0;",
          "",
          "[Added Lines]",
          "658:     return !viewers_.empty();",
          "659: }",
          "661: void SrsLiveStream::expire()",
          "662: {",
          "663:     vector<ISrsExpire*>::iterator it;",
          "664:     for (it = viewers_.begin(); it != viewers_.end(); ++it) {",
          "665:         ISrsExpire* conn = *it;",
          "666:         conn->expire();",
          "667:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1077:     if (stream->entry) stream->entry->enabled = false;",
          "1078:     cache->stop();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1097:     stream->expire();",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_http_stream.hpp||trunk/src/app/srs_app_http_stream.hpp": [
          "File: trunk/src/app/srs_app_http_stream.hpp -> trunk/src/app/srs_app_http_stream.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: #include <srs_app_security.hpp>",
          "12: #include <srs_app_http_conn.hpp>",
          "14: class SrsAacTransmuxer;",
          "15: class SrsMp3Transmuxer;",
          "16: class SrsFlvTransmuxer;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: #include <vector>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "180: {",
          "181: private:",
          "182:     SrsRequest* req;",
          "",
          "[Removed Lines]",
          "179: class SrsLiveStream : public ISrsHttpHandler",
          "",
          "[Added Lines]",
          "181: class SrsLiveStream : public ISrsHttpHandler, public ISrsExpire",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "189: public:",
          "190:     SrsLiveStream(SrsRequest* r, SrsBufferCache* c);",
          "191:     virtual ~SrsLiveStream();",
          "",
          "[Removed Lines]",
          "188:     int alive_viewers_;",
          "",
          "[Added Lines]",
          "190:     std::vector<ISrsExpire*> viewers_;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "193: public:",
          "194:     virtual srs_error_t serve_http(ISrsHttpResponseWriter* w, ISrsHttpMessage* r);",
          "195:     virtual bool alive();",
          "196: private:",
          "197:     virtual srs_error_t do_serve_http(ISrsHttpResponseWriter* w, ISrsHttpMessage* r);",
          "198:     virtual srs_error_t http_hooks_on_play(ISrsHttpMessage* r);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "199: public:",
          "200:     virtual void expire();",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    151",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    152",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version7.hpp||trunk/src/core/srs_core_version7.hpp": [
          "File: trunk/src/core/srs_core_version7.hpp -> trunk/src/core/srs_core_version7.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       7",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    10",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    11",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "64e5658f17fcebec0354e375d50cbf08f50ab3b0",
      "candidate_info": {
        "commit_hash": "64e5658f17fcebec0354e375d50cbf08f50ab3b0",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/64e5658f17fcebec0354e375d50cbf08f50ab3b0",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/kernel/srs_kernel_rtc_rtp.cpp"
        ],
        "message": "free sample to prevent memory leak. v5.0.222 v6.0.164 (#4305)\n\n\u4fee\u590d`SrsRtpRawPayload::copy()`\u65b9\u6cd5\u4e2dsample_\u8986\u76d6\u7684\u95ee\u9898\u3002\n\n---------\n\nCo-authored-by: chundonglinlin <chundonglinlin@163.com>\nCo-authored-by: winlin <winlinvip@gmail.com>\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/kernel/srs_kernel_rtc_rtp.cpp||trunk/src/kernel/srs_kernel_rtc_rtp.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    221",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    222",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    163",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    164",
          "",
          "---------------"
        ],
        "trunk/src/kernel/srs_kernel_rtc_rtp.cpp||trunk/src/kernel/srs_kernel_rtc_rtp.cpp": [
          "File: trunk/src/kernel/srs_kernel_rtc_rtp.cpp -> trunk/src/kernel/srs_kernel_rtc_rtp.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1022:     cp->payload = payload;",
          "1023:     cp->nn_payload = nn_payload;",
          "1024:     cp->sample_ = sample_->copy();",
          "1026:     return cp;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1026:     srs_freep(cp->sample_);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "909c9efa40257793c35e1b976a2a7686a637385d",
      "candidate_info": {
        "commit_hash": "909c9efa40257793c35e1b976a2a7686a637385d",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/909c9efa40257793c35e1b976a2a7686a637385d",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/core/srs_core_version7.hpp",
          "trunk/src/kernel/srs_kernel_rtc_rtp.cpp"
        ],
        "message": "free sample to prevent memory leak. v5.0.222 v6.0.164 v7.0.26 (#4305)\n\n\u4fee\u590d`SrsRtpRawPayload::copy()`\u65b9\u6cd5\u4e2dsample_\u8986\u76d6\u7684\u95ee\u9898\u3002\n\n---------\n\nCo-authored-by: chundonglinlin <chundonglinlin@163.com>\nCo-authored-by: winlin <winlinvip@gmail.com>\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/core/srs_core_version7.hpp||trunk/src/core/srs_core_version7.hpp",
          "trunk/src/kernel/srs_kernel_rtc_rtp.cpp||trunk/src/kernel/srs_kernel_rtc_rtp.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    221",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    222",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    163",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    164",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version7.hpp||trunk/src/core/srs_core_version7.hpp": [
          "File: trunk/src/core/srs_core_version7.hpp -> trunk/src/core/srs_core_version7.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       7",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    25",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    26",
          "",
          "---------------"
        ],
        "trunk/src/kernel/srs_kernel_rtc_rtp.cpp||trunk/src/kernel/srs_kernel_rtc_rtp.cpp": [
          "File: trunk/src/kernel/srs_kernel_rtc_rtp.cpp -> trunk/src/kernel/srs_kernel_rtc_rtp.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1022:     cp->payload = payload;",
          "1023:     cp->nn_payload = nn_payload;",
          "1024:     cp->sample_ = sample_->copy();",
          "1026:     return cp;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1026:     srs_freep(cp->sample_);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "58e775ce8d782360184b4326b50417dbe8bf0cd2",
      "candidate_info": {
        "commit_hash": "58e775ce8d782360184b4326b50417dbe8bf0cd2",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/58e775ce8d782360184b4326b50417dbe8bf0cd2",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_http_stream.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/core/srs_core_version7.hpp"
        ],
        "message": "HLS:  Fix error when stream has extension. #4215 v5.0.217 v6.0.158 v7.0.19 (#4216)\n\n---------\n\nCo-authored-by: Jacob Su <suzp1984@gmail.com>\nCo-authored-by: winlin <winlinvip@gmail.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_http_stream.cpp||trunk/src/app/srs_app_http_stream.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/core/srs_core_version7.hpp||trunk/src/core/srs_core_version7.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_http_stream.cpp||trunk/src/app/srs_app_http_stream.cpp": [
          "File: trunk/src/app/srs_app_http_stream.cpp -> trunk/src/app/srs_app_http_stream.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "632:     req->stream = srs_path_basename(r->path());",
          "635:     req->ip = hc->remote_ip();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "634:     req->stream = srs_path_filename(req->stream);",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    216",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    217",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    157",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    158",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version7.hpp||trunk/src/core/srs_core_version7.hpp": [
          "File: trunk/src/core/srs_core_version7.hpp -> trunk/src/core/srs_core_version7.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       7",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    18",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    19",
          "",
          "---------------"
        ]
      }
    }
  ]
}