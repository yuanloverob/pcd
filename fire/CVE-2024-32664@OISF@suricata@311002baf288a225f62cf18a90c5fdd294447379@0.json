{
  "cve_id": "CVE-2024-32664",
  "cve_desc": "Suricata is a network Intrusion Detection System, Intrusion Prevention System and Network Security Monitoring engine. Prior to 7.0.5 and 6.0.19, specially crafted traffic or datasets can cause a limited buffer overflow. This vulnerability is fixed in 7.0.5 and 6.0.19. Workarounds include not use rules with `base64_decode` keyword with `bytes` option with value 1, 2 or 5 and for 7.0.x, setting `app-layer.protocols.smtp.mime.body-md5` to false.",
  "repo": "OISF/suricata",
  "patch_hash": "311002baf288a225f62cf18a90c5fdd294447379",
  "patch_info": {
    "commit_hash": "311002baf288a225f62cf18a90c5fdd294447379",
    "repo": "OISF/suricata",
    "commit_url": "https://github.com/OISF/suricata/commit/311002baf288a225f62cf18a90c5fdd294447379",
    "files": [
      "src/util-base64.c"
    ],
    "message": "util/base64: fix buffer overflow\n\nTicket: 6902\n\nIn case the caller of DecodeBase64 does not supply a big enough\noutput buffer.\n\n(cherry picked from commit fd47e67dc65f9111895c88fb406c938b1f857325)",
    "before_after_code_files": [
      "src/util-base64.c||src/util-base64.c"
    ]
  },
  "patch_diff": {
    "src/util-base64.c||src/util-base64.c": [
      "File: src/util-base64.c -> src/util-base64.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "156:                 ecode = BASE64_ECODE_BUF;",
      "157:                 break;",
      "158:             }",
      "161:             DecodeBase64Block(dptr, b64);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "159:             if (dest_size - *decoded_bytes < ASCII_BLOCK)",
      "160:                 return BASE64_ECODE_BUF;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "187:             return BASE64_ECODE_BUF;",
      "189:         DecodeBase64Block(dptr, b64);",
      "",
      "[Removed Lines]",
      "186:         if (dest_size - *decoded_bytes < 3)",
      "",
      "[Added Lines]",
      "188:         if (dest_size - *decoded_bytes < ASCII_BLOCK)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "194:     if (valid && bbidx > 0 && (mode != BASE64_MODE_RFC2045)) {",
      "197:         DecodeBase64Block(dptr, b64);",
      "198:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "198:         if (dest_size - *decoded_bytes < ASCII_BLOCK)",
      "199:             return BASE64_ECODE_BUF;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d5ffecf11ad2c6fe89265e518f5d7443caf26ba4",
      "candidate_info": {
        "commit_hash": "d5ffecf11ad2c6fe89265e518f5d7443caf26ba4",
        "repo": "OISF/suricata",
        "commit_url": "https://github.com/OISF/suricata/commit/d5ffecf11ad2c6fe89265e518f5d7443caf26ba4",
        "files": [
          "src/util-base64.c"
        ],
        "message": "util/base64: fix buffer overflow\n\nTicket: 6902\n\nIn case the caller of DecodeBase64 does not supply a big enough\noutput buffer.\n\n(cherry picked from commit fd47e67dc65f9111895c88fb406c938b1f857325)",
        "before_after_code_files": [
          "src/util-base64.c||src/util-base64.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/util-base64.c||src/util-base64.c"
          ],
          "candidate": [
            "src/util-base64.c||src/util-base64.c"
          ]
        }
      },
      "candidate_diff": {
        "src/util-base64.c||src/util-base64.c": [
          "File: src/util-base64.c -> src/util-base64.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "155:                 ecode = BASE64_ECODE_BUF;",
          "156:                 break;",
          "157:             }",
          "160:             DecodeBase64Block(dptr, b64);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "158:             if (dest_size - *decoded_bytes < ASCII_BLOCK)",
          "159:                 return BASE64_ECODE_BUF;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "186:             return BASE64_ECODE_BUF;",
          "188:         DecodeBase64Block(dptr, b64);",
          "",
          "[Removed Lines]",
          "185:         if (dest_size - *decoded_bytes < 3)",
          "",
          "[Added Lines]",
          "187:         if (dest_size - *decoded_bytes < ASCII_BLOCK)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "193:     if (valid && bbidx > 0 && (mode != BASE64_MODE_RFC2045)) {",
          "196:         DecodeBase64Block(dptr, b64);",
          "197:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "197:         if (dest_size - *decoded_bytes < ASCII_BLOCK)",
          "198:             return BASE64_ECODE_BUF;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd47e67dc65f9111895c88fb406c938b1f857325",
      "candidate_info": {
        "commit_hash": "fd47e67dc65f9111895c88fb406c938b1f857325",
        "repo": "OISF/suricata",
        "commit_url": "https://github.com/OISF/suricata/commit/fd47e67dc65f9111895c88fb406c938b1f857325",
        "files": [
          "src/util-base64.c"
        ],
        "message": "util/base64: fix buffer overflow\n\nTicket: 6902\n\nIn case the caller of DecodeBase64 does not supply a big enough\noutput buffer.",
        "before_after_code_files": [
          "src/util-base64.c||src/util-base64.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/util-base64.c||src/util-base64.c"
          ],
          "candidate": [
            "src/util-base64.c||src/util-base64.c"
          ]
        }
      },
      "candidate_diff": {
        "src/util-base64.c||src/util-base64.c": [
          "File: src/util-base64.c -> src/util-base64.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "156:                 ecode = BASE64_ECODE_BUF;",
          "157:                 break;",
          "158:             }",
          "161:             DecodeBase64Block(dptr, b64);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:             if (dest_size - *decoded_bytes < ASCII_BLOCK)",
          "160:                 return BASE64_ECODE_BUF;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "187:             return BASE64_ECODE_BUF;",
          "189:         DecodeBase64Block(dptr, b64);",
          "",
          "[Removed Lines]",
          "186:         if (dest_size - *decoded_bytes < 3)",
          "",
          "[Added Lines]",
          "188:         if (dest_size - *decoded_bytes < ASCII_BLOCK)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "194:     if (valid && bbidx > 0 && (mode != BASE64_MODE_RFC2045)) {",
          "197:         DecodeBase64Block(dptr, b64);",
          "198:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "198:         if (dest_size - *decoded_bytes < ASCII_BLOCK)",
          "199:             return BASE64_ECODE_BUF;",
          "",
          "---------------"
        ]
      }
    }
  ]
}