{
  "cve_id": "CVE-2022-47942",
  "cve_desc": "An issue was discovered in ksmbd in the Linux kernel 5.15 through 5.19 before 5.19.2. There is a heap-based buffer overflow in set_ntacl_dacl, related to use of SMB2_QUERY_INFO_HE after a malformed SMB2_SET_INFO_HE command.",
  "repo": "torvalds/linux",
  "patch_hash": "8f0541186e9ad1b62accc9519cc2b7a7240272a7",
  "patch_info": {
    "commit_hash": "8f0541186e9ad1b62accc9519cc2b7a7240272a7",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/8f0541186e9ad1b62accc9519cc2b7a7240272a7",
    "files": [
      "fs/ksmbd/smb2pdu.c",
      "fs/ksmbd/smbacl.c",
      "fs/ksmbd/smbacl.h",
      "fs/ksmbd/vfs.c"
    ],
    "message": "ksmbd: fix heap-based overflow in set_ntacl_dacl()\n\nThe testcase use SMB2_SET_INFO_HE command to set a malformed file attribute\nunder the label `security.NTACL`. SMB2_QUERY_INFO_HE command in testcase\ntrigger the following overflow.\n\n[ 4712.003781] ==================================================================\n[ 4712.003790] BUG: KASAN: slab-out-of-bounds in build_sec_desc+0x842/0x1dd0 [ksmbd]\n[ 4712.003807] Write of size 1060 at addr ffff88801e34c068 by task kworker/0:0/4190\n\n[ 4712.003813] CPU: 0 PID: 4190 Comm: kworker/0:0 Not tainted 5.19.0-rc5 #1\n[ 4712.003850] Workqueue: ksmbd-io handle_ksmbd_work [ksmbd]\n[ 4712.003867] Call Trace:\n[ 4712.003870]  <TASK>\n[ 4712.003873]  dump_stack_lvl+0x49/0x5f\n[ 4712.003935]  print_report.cold+0x5e/0x5cf\n[ 4712.003972]  ? ksmbd_vfs_get_sd_xattr+0x16d/0x500 [ksmbd]\n[ 4712.003984]  ? cmp_map_id+0x200/0x200\n[ 4712.003988]  ? build_sec_desc+0x842/0x1dd0 [ksmbd]\n[ 4712.004000]  kasan_report+0xaa/0x120\n[ 4712.004045]  ? build_sec_desc+0x842/0x1dd0 [ksmbd]\n[ 4712.004056]  kasan_check_range+0x100/0x1e0\n[ 4712.004060]  memcpy+0x3c/0x60\n[ 4712.004064]  build_sec_desc+0x842/0x1dd0 [ksmbd]\n[ 4712.004076]  ? parse_sec_desc+0x580/0x580 [ksmbd]\n[ 4712.004088]  ? ksmbd_acls_fattr+0x281/0x410 [ksmbd]\n[ 4712.004099]  smb2_query_info+0xa8f/0x6110 [ksmbd]\n[ 4712.004111]  ? psi_group_change+0x856/0xd70\n[ 4712.004148]  ? update_load_avg+0x1c3/0x1af0\n[ 4712.004152]  ? asym_cpu_capacity_scan+0x5d0/0x5d0\n[ 4712.004157]  ? xas_load+0x23/0x300\n[ 4712.004162]  ? smb2_query_dir+0x1530/0x1530 [ksmbd]\n[ 4712.004173]  ? _raw_spin_lock_bh+0xe0/0xe0\n[ 4712.004179]  handle_ksmbd_work+0x30e/0x1020 [ksmbd]\n[ 4712.004192]  process_one_work+0x778/0x11c0\n[ 4712.004227]  ? _raw_spin_lock_irq+0x8e/0xe0\n[ 4712.004231]  worker_thread+0x544/0x1180\n[ 4712.004234]  ? __cpuidle_text_end+0x4/0x4\n[ 4712.004239]  kthread+0x282/0x320\n[ 4712.004243]  ? process_one_work+0x11c0/0x11c0\n[ 4712.004246]  ? kthread_complete_and_exit+0x30/0x30\n[ 4712.004282]  ret_from_fork+0x1f/0x30\n\nThis patch add the buffer validation for security descriptor that is\nstored by malformed SMB2_SET_INFO_HE command. and allocate large\nresponse buffer about SMB2_O_INFO_SECURITY file info class.\n\nFixes: e2f34481b24d (\"cifsd: add server-side procedures for SMB3\")\nCc: stable@vger.kernel.org\nReported-by: zdi-disclosures@trendmicro.com # ZDI-CAN-17771\nReviewed-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
    "before_after_code_files": [
      "fs/ksmbd/smb2pdu.c||fs/ksmbd/smb2pdu.c",
      "fs/ksmbd/smbacl.c||fs/ksmbd/smbacl.c",
      "fs/ksmbd/smbacl.h||fs/ksmbd/smbacl.h",
      "fs/ksmbd/vfs.c||fs/ksmbd/vfs.c"
    ]
  },
  "patch_diff": {
    "fs/ksmbd/smb2pdu.c||fs/ksmbd/smb2pdu.c": [
      "File: fs/ksmbd/smb2pdu.c -> fs/ksmbd/smb2pdu.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "535:   struct smb2_query_info_req *req;",
      "537:   req = smb2_get_msg(work->request_buf);",
      "541:    sz = large_sz;",
      "542:  }",
      "",
      "[Removed Lines]",
      "538:   if (req->InfoType == SMB2_O_INFO_FILE &&",
      "539:       (req->FileInfoClass == FILE_FULL_EA_INFORMATION ||",
      "540:        req->FileInfoClass == FILE_ALL_INFORMATION))",
      "",
      "[Added Lines]",
      "538:   if ((req->InfoType == SMB2_O_INFO_FILE &&",
      "539:        (req->FileInfoClass == FILE_FULL_EA_INFORMATION ||",
      "540:        req->FileInfoClass == FILE_ALL_INFORMATION)) ||",
      "541:       req->InfoType == SMB2_O_INFO_SECURITY)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2988:       goto err_out;",
      "2990:      rc = build_sec_desc(user_ns,",
      "2992:            OWNER_SECINFO |",
      "2993:            GROUP_SECINFO |",
      "2994:            DACL_SECINFO,",
      "",
      "[Removed Lines]",
      "2991:            pntsd, NULL,",
      "",
      "[Added Lines]",
      "2992:            pntsd, NULL, 0,",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3833:  return 0;",
      "3834: }",
      "3836: static int smb2_calc_max_out_buf_len(struct ksmbd_work *work,",
      "3837:          unsigned short hdr2_len,",
      "3838:          unsigned int out_buf_len)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3837: static int smb2_resp_buf_len(struct ksmbd_work *work, unsigned short hdr2_len)",
      "3838: {",
      "3839:  int free_len;",
      "3841:  free_len = (int)(work->response_sz -",
      "3842:   (get_rfc1002_len(work->response_buf) + 4)) - hdr2_len;",
      "3843:  return free_len;",
      "3844: }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "3842:  if (out_buf_len > work->conn->vals->max_trans_size)",
      "3843:   return -EINVAL;",
      "3848:  if (free_len < 0)",
      "3849:   return -EINVAL;",
      "",
      "[Removed Lines]",
      "3845:  free_len = (int)(work->response_sz -",
      "3846:     (get_rfc1002_len(work->response_buf) + 4)) -",
      "3847:   hdr2_len;",
      "",
      "[Added Lines]",
      "3855:  free_len = smb2_resp_buf_len(work, hdr2_len);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "5107:  struct smb_ntsd *pntsd = (struct smb_ntsd *)rsp->Buffer, *ppntsd = NULL;",
      "5108:  struct smb_fattr fattr = {{0}};",
      "5109:  struct inode *inode;",
      "5111:  unsigned int id = KSMBD_NO_FID, pid = KSMBD_NO_FID;",
      "5112:  int addition_info = le32_to_cpu(req->AdditionalInformation);",
      "5115:  if (addition_info & ~(OWNER_SECINFO | GROUP_SECINFO | DACL_SECINFO |",
      "5116:          PROTECTED_DACL_SECINFO |",
      "",
      "[Removed Lines]",
      "5110:  __u32 secdesclen;",
      "5113:  int rc;",
      "",
      "[Added Lines]",
      "5118:  __u32 secdesclen = 0;",
      "5121:  int rc = 0, ppntsd_size = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "5157:  if (test_share_config_flag(work->tcon->share_conf,",
      "5158:        KSMBD_SHARE_FLAG_ACL_XATTR))",
      "5164:  posix_acl_release(fattr.cf_acls);",
      "5165:  posix_acl_release(fattr.cf_dacls);",
      "5166:  kfree(ppntsd);",
      "",
      "[Removed Lines]",
      "5159:   ksmbd_vfs_get_sd_xattr(work->conn, user_ns,",
      "5160:            fp->filp->f_path.dentry, &ppntsd);",
      "5162:  rc = build_sec_desc(user_ns, pntsd, ppntsd, addition_info,",
      "5163:        &secdesclen, &fattr);",
      "",
      "[Added Lines]",
      "5167:   ppntsd_size = ksmbd_vfs_get_sd_xattr(work->conn, user_ns,",
      "5168:            fp->filp->f_path.dentry,",
      "5169:            &ppntsd);",
      "5172:  if (smb2_resp_buf_len(work, 8) > ppntsd_size)",
      "5173:   rc = build_sec_desc(user_ns, pntsd, ppntsd, ppntsd_size,",
      "5174:         addition_info, &secdesclen, &fattr);",
      "",
      "---------------"
    ],
    "fs/ksmbd/smbacl.c||fs/ksmbd/smbacl.c": [
      "File: fs/ksmbd/smbacl.c -> fs/ksmbd/smbacl.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "690: static void set_ntacl_dacl(struct user_namespace *user_ns,",
      "691:       struct smb_acl *pndacl,",
      "692:       struct smb_acl *nt_dacl,",
      "693:       const struct smb_sid *pownersid,",
      "694:       const struct smb_sid *pgrpsid,",
      "695:       struct smb_fattr *fattr)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "693:       unsigned int aces_size,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "703:  if (nt_num_aces) {",
      "704:   ntace = (struct smb_ace *)((char *)nt_dacl + sizeof(struct smb_acl));",
      "705:   for (i = 0; i < nt_num_aces; i++) {",
      "709:    num_aces++;",
      "710:   }",
      "711:  }",
      "",
      "[Removed Lines]",
      "706:    memcpy((char *)pndace + size, ntace, le16_to_cpu(ntace->size));",
      "707:    size += le16_to_cpu(ntace->size);",
      "708:    ntace = (struct smb_ace *)((char *)ntace + le16_to_cpu(ntace->size));",
      "",
      "[Added Lines]",
      "707:    unsigned short nt_ace_size;",
      "709:    if (offsetof(struct smb_ace, access_req) > aces_size)",
      "710:     break;",
      "712:    nt_ace_size = le16_to_cpu(ntace->size);",
      "713:    if (nt_ace_size > aces_size)",
      "714:     break;",
      "716:    memcpy((char *)pndace + size, ntace, nt_ace_size);",
      "717:    size += nt_ace_size;",
      "718:    aces_size -= nt_ace_size;",
      "719:    ntace = (struct smb_ace *)((char *)ntace + nt_ace_size);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "879: int build_sec_desc(struct user_namespace *user_ns,",
      "880:      struct smb_ntsd *pntsd, struct smb_ntsd *ppntsd,",
      "882:      struct smb_fattr *fattr)",
      "883: {",
      "884:  int rc = 0;",
      "",
      "[Removed Lines]",
      "881:      int addition_info, __u32 *secdesclen,",
      "",
      "[Added Lines]",
      "892:      int ppntsd_size, int addition_info, __u32 *secdesclen,",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "939:   if (!ppntsd) {",
      "940:    set_mode_dacl(user_ns, dacl_ptr, fattr);",
      "943:   } else {",
      "944:    struct smb_acl *ppdacl_ptr;",
      "948:    set_ntacl_dacl(user_ns, dacl_ptr, ppdacl_ptr,",
      "950:   }",
      "951:   pntsd->dacloffset = cpu_to_le32(offset);",
      "952:   offset += le16_to_cpu(dacl_ptr->size);",
      "",
      "[Removed Lines]",
      "941:   } else if (!ppntsd->dacloffset) {",
      "942:    goto out;",
      "946:    ppdacl_ptr = (struct smb_acl *)((char *)ppntsd +",
      "947:       le32_to_cpu(ppntsd->dacloffset));",
      "949:            nowner_sid_ptr, ngroup_sid_ptr, fattr);",
      "",
      "[Added Lines]",
      "954:    unsigned int dacl_offset = le32_to_cpu(ppntsd->dacloffset);",
      "955:    int ppdacl_size, ntacl_size = ppntsd_size - dacl_offset;",
      "957:    if (!dacl_offset ||",
      "958:        (dacl_offset + sizeof(struct smb_acl) > ppntsd_size))",
      "959:     goto out;",
      "961:    ppdacl_ptr = (struct smb_acl *)((char *)ppntsd + dacl_offset);",
      "962:    ppdacl_size = le16_to_cpu(ppdacl_ptr->size);",
      "963:    if (ppdacl_size > ntacl_size ||",
      "964:        ppdacl_size < sizeof(struct smb_acl))",
      "965:     goto out;",
      "968:            ntacl_size - sizeof(struct smb_acl),",
      "969:            nowner_sid_ptr, ngroup_sid_ptr,",
      "970:            fattr);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "980:  struct smb_sid owner_sid, group_sid;",
      "981:  struct dentry *parent = path->dentry->d_parent;",
      "982:  struct user_namespace *user_ns = mnt_user_ns(path->mnt);",
      "985:  char *aces_base;",
      "986:  bool is_dir = S_ISDIR(d_inode(path->dentry)->i_mode);",
      "991:   return -ENOENT;",
      "992:  dacloffset = le32_to_cpu(parent_pntsd->dacloffset);",
      "994:   rc = -EINVAL;",
      "995:   goto free_parent_pntsd;",
      "996:  }",
      "998:  parent_pdacl = (struct smb_acl *)((char *)parent_pntsd + dacloffset);",
      "999:  num_aces = le32_to_cpu(parent_pdacl->num_aces);",
      "1000:  pntsd_type = le16_to_cpu(parent_pntsd->type);",
      "1002:  aces_base = kmalloc(sizeof(struct smb_ace) * num_aces * 2, GFP_KERNEL);",
      "1003:  if (!aces_base) {",
      "",
      "[Removed Lines]",
      "983:  int inherited_flags = 0, flags = 0, i, ace_cnt = 0, nt_size = 0;",
      "984:  int rc = 0, num_aces, dacloffset, pntsd_type, acl_len;",
      "988:  acl_len = ksmbd_vfs_get_sd_xattr(conn, user_ns,",
      "989:       parent, &parent_pntsd);",
      "990:  if (acl_len <= 0)",
      "993:  if (!dacloffset) {",
      "",
      "[Added Lines]",
      "1004:  int inherited_flags = 0, flags = 0, i, ace_cnt = 0, nt_size = 0, pdacl_size;",
      "1005:  int rc = 0, num_aces, dacloffset, pntsd_type, pntsd_size, acl_len, aces_size;",
      "1009:  pntsd_size = ksmbd_vfs_get_sd_xattr(conn, user_ns,",
      "1010:          parent, &parent_pntsd);",
      "1011:  if (pntsd_size <= 0)",
      "1014:  if (!dacloffset || (dacloffset + sizeof(struct smb_acl) > pntsd_size)) {",
      "1020:  acl_len = pntsd_size - dacloffset;",
      "1023:  pdacl_size = le16_to_cpu(parent_pdacl->size);",
      "1025:  if (pdacl_size > acl_len || pdacl_size < sizeof(struct smb_acl)) {",
      "1026:   rc = -EINVAL;",
      "1027:   goto free_parent_pntsd;",
      "1028:  }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1008:  aces = (struct smb_ace *)aces_base;",
      "1009:  parent_aces = (struct smb_ace *)((char *)parent_pdacl +",
      "1010:    sizeof(struct smb_acl));",
      "1012:  if (pntsd_type & DACL_AUTO_INHERITED)",
      "1013:   inherited_flags = INHERITED_ACE;",
      "1015:  for (i = 0; i < num_aces; i++) {",
      "1016:   flags = parent_aces->flags;",
      "1017:   if (!smb_inherit_flags(flags, is_dir))",
      "1018:    goto pass;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1039:  aces_size = acl_len - sizeof(struct smb_acl);",
      "1045:   int pace_size;",
      "1047:   if (offsetof(struct smb_ace, access_req) > aces_size)",
      "1048:    break;",
      "1050:   pace_size = le16_to_cpu(parent_aces->size);",
      "1051:   if (pace_size > aces_size)",
      "1052:    break;",
      "1054:   aces_size -= pace_size;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1057:   aces = (struct smb_ace *)((char *)aces + le16_to_cpu(aces->size));",
      "1058:   ace_cnt++;",
      "1059: pass:",
      "1062:  }",
      "1064:  if (nt_size > 0) {",
      "",
      "[Removed Lines]",
      "1060:   parent_aces =",
      "1061:    (struct smb_ace *)((char *)parent_aces + le16_to_cpu(parent_aces->size));",
      "",
      "[Added Lines]",
      "1100:   parent_aces = (struct smb_ace *)((char *)parent_aces + pace_size);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1153:  struct smb_ntsd *pntsd = NULL;",
      "1154:  struct smb_acl *pdacl;",
      "1155:  struct posix_acl *posix_acls;",
      "1157:  struct smb_sid sid;",
      "1158:  int granted = le32_to_cpu(*pdaccess & ~FILE_MAXIMAL_ACCESS_LE);",
      "1159:  struct smb_ace *ace;",
      "",
      "[Removed Lines]",
      "1156:  int rc = 0, acl_size;",
      "",
      "[Added Lines]",
      "1195:  int rc = 0, pntsd_size, acl_size, aces_size, pdacl_size, dacl_offset;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1162:  struct smb_ace *others_ace = NULL;",
      "1163:  struct posix_acl_entry *pa_entry;",
      "1164:  unsigned int sid_type = SIDOWNER;",
      "1167:  ksmbd_debug(SMB, \"check permission using windows acl\\n\");",
      "1175:  pdacl = (struct smb_acl *)((char *)pntsd + le32_to_cpu(pntsd->dacloffset));",
      "1188:  if (!pdacl->num_aces) {",
      "1191:    rc = -EACCES;",
      "1192:    goto err_out;",
      "1193:   }",
      "1196:  }",
      "1198:  if (*pdaccess & FILE_MAXIMAL_ACCESS_LE) {",
      "",
      "[Removed Lines]",
      "1165:  char *end_of_acl;",
      "1168:  acl_size = ksmbd_vfs_get_sd_xattr(conn, user_ns,",
      "1169:        path->dentry, &pntsd);",
      "1170:  if (acl_size <= 0 || !pntsd || !pntsd->dacloffset) {",
      "1171:   kfree(pntsd);",
      "1172:   return 0;",
      "1173:  }",
      "1176:  end_of_acl = ((char *)pntsd) + acl_size;",
      "1177:  if (end_of_acl <= (char *)pdacl) {",
      "1178:   kfree(pntsd);",
      "1179:   return 0;",
      "1180:  }",
      "1182:  if (end_of_acl < (char *)pdacl + le16_to_cpu(pdacl->size) ||",
      "1183:      le16_to_cpu(pdacl->size) < sizeof(struct smb_acl)) {",
      "1184:   kfree(pntsd);",
      "1185:   return 0;",
      "1186:  }",
      "1189:   if (!(le16_to_cpu(pdacl->size) - sizeof(struct smb_acl)) &&",
      "1194:   kfree(pntsd);",
      "1195:   return 0;",
      "",
      "[Added Lines]",
      "1204:  unsigned short ace_size;",
      "1207:  pntsd_size = ksmbd_vfs_get_sd_xattr(conn, user_ns,",
      "1208:          path->dentry, &pntsd);",
      "1209:  if (pntsd_size <= 0 || !pntsd)",
      "1210:   goto err_out;",
      "1212:  dacl_offset = le32_to_cpu(pntsd->dacloffset);",
      "1213:  if (!dacl_offset ||",
      "1214:      (dacl_offset + sizeof(struct smb_acl) > pntsd_size))",
      "1215:   goto err_out;",
      "1218:  acl_size = pntsd_size - dacl_offset;",
      "1219:  pdacl_size = le16_to_cpu(pdacl->size);",
      "1221:  if (pdacl_size > acl_size || pdacl_size < sizeof(struct smb_acl))",
      "1222:   goto err_out;",
      "1225:   if (!(pdacl_size - sizeof(struct smb_acl)) &&",
      "1230:   goto err_out;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1200:    DELETE;",
      "1202:   ace = (struct smb_ace *)((char *)pdacl + sizeof(struct smb_acl));",
      "1203:   for (i = 0; i < le32_to_cpu(pdacl->num_aces); i++) {",
      "1204:    granted |= le32_to_cpu(ace->access_req);",
      "1205:    ace = (struct smb_ace *)((char *)ace + le16_to_cpu(ace->size));",
      "1208:   }",
      "1210:   if (!pdacl->num_aces)",
      "",
      "[Removed Lines]",
      "1206:    if (end_of_acl < (char *)ace)",
      "1207:     goto err_out;",
      "",
      "[Added Lines]",
      "1238:   aces_size = acl_size - sizeof(struct smb_acl);",
      "1240:    if (offsetof(struct smb_ace, access_req) > aces_size)",
      "1241:     break;",
      "1242:    ace_size = le16_to_cpu(ace->size);",
      "1243:    if (ace_size > aces_size)",
      "1244:     break;",
      "1245:    aces_size -= ace_size;",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1216:  id_to_sid(uid, sid_type, &sid);",
      "1218:  ace = (struct smb_ace *)((char *)pdacl + sizeof(struct smb_acl));",
      "1219:  for (i = 0; i < le32_to_cpu(pdacl->num_aces); i++) {",
      "1220:   if (!compare_sids(&sid, &ace->sid) ||",
      "1221:       !compare_sids(&sid_unix_NFS_mode, &ace->sid)) {",
      "1222:    found = 1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1259:  aces_size = acl_size - sizeof(struct smb_acl);",
      "1261:   if (offsetof(struct smb_ace, access_req) > aces_size)",
      "1262:    break;",
      "1263:   ace_size = le16_to_cpu(ace->size);",
      "1264:   if (ace_size > aces_size)",
      "1265:    break;",
      "1266:   aces_size -= ace_size;",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "1226:    others_ace = ace;",
      "1228:   ace = (struct smb_ace *)((char *)ace + le16_to_cpu(ace->size));",
      "1231:  }",
      "1233:  if (*pdaccess & FILE_MAXIMAL_ACCESS_LE && found) {",
      "",
      "[Removed Lines]",
      "1229:   if (end_of_acl < (char *)ace)",
      "1230:    goto err_out;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "fs/ksmbd/smbacl.h||fs/ksmbd/smbacl.h": [
      "File: fs/ksmbd/smbacl.h -> fs/ksmbd/smbacl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "193: int parse_sec_desc(struct user_namespace *user_ns, struct smb_ntsd *pntsd,",
      "194:      int acl_len, struct smb_fattr *fattr);",
      "195: int build_sec_desc(struct user_namespace *user_ns, struct smb_ntsd *pntsd,",
      "197:      __u32 *secdesclen, struct smb_fattr *fattr);",
      "198: int init_acl_state(struct posix_acl_state *state, int cnt);",
      "199: void free_acl_state(struct posix_acl_state *state);",
      "",
      "[Removed Lines]",
      "196:      struct smb_ntsd *ppntsd, int addition_info,",
      "",
      "[Added Lines]",
      "196:      struct smb_ntsd *ppntsd, int ppntsd_size, int addition_info,",
      "",
      "---------------"
    ],
    "fs/ksmbd/vfs.c||fs/ksmbd/vfs.c": [
      "File: fs/ksmbd/vfs.c -> fs/ksmbd/vfs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1539:  }",
      "1542:  (*pntsd)->osidoffset = cpu_to_le32(le32_to_cpu((*pntsd)->osidoffset) -",
      "1543:         NDR_NTSD_OFFSETOF);",
      "1544:  (*pntsd)->gsidoffset = cpu_to_le32(le32_to_cpu((*pntsd)->gsidoffset) -",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1542:  if (acl.sd_size < sizeof(struct smb_ntsd)) {",
      "1543:   pr_err(\"sd size is invalid\\n\");",
      "1544:   goto out_free;",
      "1545:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6b4db2e528f650c7fb712961aac36455468d5902",
      "candidate_info": {
        "commit_hash": "6b4db2e528f650c7fb712961aac36455468d5902",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/6b4db2e528f650c7fb712961aac36455468d5902",
        "files": [
          "net/core/devlink.c"
        ],
        "message": "devlink: Fix use-after-free after a failed reload\n\nAfter a failed devlink reload, devlink parameters are still registered,\nwhich means user space can set and get their values. In the case of the\nmlxsw \"acl_region_rehash_interval\" parameter, these operations will\ntrigger a use-after-free [1].\n\nFix this by rejecting set and get operations while in the failed state.\nReturn the \"-EOPNOTSUPP\" error code which does not abort the parameters\ndump, but instead causes it to skip over the problematic parameter.\n\nAnother possible fix is to perform these checks in the mlxsw parameter\ncallbacks, but other drivers might be affected by the same problem and I\nam not aware of scenarios where these stricter checks will cause a\nregression.\n\n[1]\nmlxsw_spectrum3 0000:00:10.0: Port 125: Failed to register netdev\nmlxsw_spectrum3 0000:00:10.0: Failed to create ports\n\n==================================================================\nBUG: KASAN: use-after-free in mlxsw_sp_acl_tcam_vregion_rehash_intrvl_get+0xbd/0xd0 drivers/net/ethernet/mellanox/mlxsw/spectrum_acl_tcam.c:904\nRead of size 4 at addr ffff8880099dcfd8 by task kworker/u4:4/777\n\nCPU: 1 PID: 777 Comm: kworker/u4:4 Not tainted 5.19.0-rc7-custom-126601-gfe26f28c586d #1\nHardware name: QEMU MSN4700, BIOS rel-1.13.0-0-gf21b5a4aeb02-prebuilt.qemu.org 04/01/2014\nWorkqueue: netns cleanup_net\nCall Trace:\n <TASK>\n __dump_stack lib/dump_stack.c:88 [inline]\n dump_stack_lvl+0x92/0xbd lib/dump_stack.c:106\n print_address_description mm/kasan/report.c:313 [inline]\n print_report.cold+0x5e/0x5cf mm/kasan/report.c:429\n kasan_report+0xb9/0xf0 mm/kasan/report.c:491\n __asan_report_load4_noabort+0x14/0x20 mm/kasan/report_generic.c:306\n mlxsw_sp_acl_tcam_vregion_rehash_intrvl_get+0xbd/0xd0 drivers/net/ethernet/mellanox/mlxsw/spectrum_acl_tcam.c:904\n mlxsw_sp_acl_region_rehash_intrvl_get+0x49/0x60 drivers/net/ethernet/mellanox/mlxsw/spectrum_acl.c:1106\n mlxsw_sp_params_acl_region_rehash_intrvl_get+0x33/0x80 drivers/net/ethernet/mellanox/mlxsw/spectrum.c:3854\n devlink_param_get net/core/devlink.c:4981 [inline]\n devlink_nl_param_fill+0x238/0x12d0 net/core/devlink.c:5089\n devlink_param_notify+0xe5/0x230 net/core/devlink.c:5168\n devlink_ns_change_notify net/core/devlink.c:4417 [inline]\n devlink_ns_change_notify net/core/devlink.c:4396 [inline]\n devlink_reload+0x15f/0x700 net/core/devlink.c:4507\n devlink_pernet_pre_exit+0x112/0x1d0 net/core/devlink.c:12272\n ops_pre_exit_list net/core/net_namespace.c:152 [inline]\n cleanup_net+0x494/0xc00 net/core/net_namespace.c:582\n process_one_work+0x9fc/0x1710 kernel/workqueue.c:2289\n worker_thread+0x675/0x10b0 kernel/workqueue.c:2436\n kthread+0x30c/0x3d0 kernel/kthread.c:376\n ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:306\n </TASK>\n\nThe buggy address belongs to the physical page:\npage:ffffea0000267700 refcount:0 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x99dc\nflags: 0x100000000000000(node=0|zone=1)\nraw: 0100000000000000 0000000000000000 dead000000000122 0000000000000000\nraw: 0000000000000000 0000000000000000 00000000ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff8880099dce80: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n ffff8880099dcf00: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n>ffff8880099dcf80: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n                                                    ^\n ffff8880099dd000: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n ffff8880099dd080: ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n==================================================================\n\nFixes: 98bbf70c1c41 (\"mlxsw: spectrum: add \"acl_region_rehash_interval\" devlink param\")\nSigned-off-by: Ido Schimmel <idosch@nvidia.com>\nReviewed-by: Jiri Pirko <jiri@nvidia.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "net/core/devlink.c||net/core/devlink.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "net/core/devlink.c||net/core/devlink.c": [
          "File: net/core/devlink.c -> net/core/devlink.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5147:         const struct devlink_param *param,",
          "5148:         struct devlink_param_gset_ctx *ctx)",
          "5149: {",
          "5151:   return -EOPNOTSUPP;",
          "5152:  return param->get(devlink, param->id, ctx);",
          "5153: }",
          "",
          "[Removed Lines]",
          "5150:  if (!param->get)",
          "",
          "[Added Lines]",
          "5150:  if (!param->get || devlink->reload_failed)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5156:         const struct devlink_param *param,",
          "5157:         struct devlink_param_gset_ctx *ctx)",
          "5158: {",
          "5160:   return -EOPNOTSUPP;",
          "5161:  return param->set(devlink, param->id, ctx);",
          "5162: }",
          "",
          "[Removed Lines]",
          "5159:  if (!param->set)",
          "",
          "[Added Lines]",
          "5159:  if (!param->set || devlink->reload_failed)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cf4b7387c0a842d64bdd7c353e6d3298174a7740",
      "candidate_info": {
        "commit_hash": "cf4b7387c0a842d64bdd7c353e6d3298174a7740",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/cf4b7387c0a842d64bdd7c353e6d3298174a7740",
        "files": [
          "drivers/gpu/drm/ttm/ttm_bo.c"
        ],
        "message": "drm/ttm: Fix dummy res NULL ptr deref bug\n\nCheck the bo->resource value before accessing the resource\nmem_type.\n\nv2: Fix commit description unwrapped warning\n\n<log snip>\n[   40.191227][  T184] general protection fault, probably for non-canonical address 0xdffffc0000000002: 0000 [#1] SMP KASAN PTI\n[   40.192995][  T184] KASAN: null-ptr-deref in range [0x0000000000000010-0x0000000000000017]\n[   40.194411][  T184] CPU: 1 PID: 184 Comm: systemd-udevd Not tainted 5.19.0-rc4-00721-gb297c22b7070 #1\n[   40.196063][  T184] Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.0-debian-1.16.0-4 04/01/2014\n[   40.199605][  T184] RIP: 0010:ttm_bo_validate+0x1b3/0x240 [ttm]\n[   40.200754][  T184] Code: e8 72 c5 ff ff 83 f8 b8 74 d4 85 c0 75 54 49 8b 9e 58 01 00 00 48 b8 00 00 00 00 00 fc ff df 48 8d 7b 10 48 89 fa 48 c1 ea 03 <0f> b6 04 02 84 c0 74 04 3c 03 7e 44 8b 53 10 31 c0 85 d2 0f 85 58\n[   40.203685][  T184] RSP: 0018:ffffc900006df0c8 EFLAGS: 00010202\n[   40.204630][  T184] RAX: dffffc0000000000 RBX: 0000000000000000 RCX: 1ffff1102f4bb71b\n[   40.205864][  T184] RDX: 0000000000000002 RSI: ffffc900006df208 RDI: 0000000000000010\n[   40.207102][  T184] RBP: 1ffff920000dbe1a R08: ffffc900006df208 R09: 0000000000000000\n[   40.208394][  T184] R10: ffff88817a5f0000 R11: 0000000000000001 R12: ffffc900006df110\n[   40.209692][  T184] R13: ffffc900006df0f0 R14: ffff88817a5db800 R15: ffffc900006df208\n[   40.210862][  T184] FS:  00007f6b1d16e8c0(0000) GS:ffff88839d700000(0000) knlGS:0000000000000000\n[   40.212250][  T184] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   40.213275][  T184] CR2: 000055a1001d4ff0 CR3: 00000001700f4000 CR4: 00000000000006e0\n[   40.214469][  T184] Call Trace:\n[   40.214974][  T184]  <TASK>\n[   40.215438][  T184]  ? ttm_bo_bounce_temp_buffer+0x140/0x140 [ttm]\n[   40.216572][  T184]  ? mutex_spin_on_owner+0x240/0x240\n[   40.217456][  T184]  ? drm_vma_offset_add+0xaa/0x100 [drm]\n[   40.218457][  T184]  ttm_bo_init_reserved+0x3d6/0x540 [ttm]\n[   40.219410][  T184]  ? shmem_get_inode+0x744/0x980\n[   40.220231][  T184]  ttm_bo_init_validate+0xb1/0x200 [ttm]\n[   40.221172][  T184]  ? bo_driver_evict_flags+0x340/0x340 [drm_vram_helper]\n[   40.222530][  T184]  ? ttm_bo_init_reserved+0x540/0x540 [ttm]\n[   40.223643][  T184]  ? __do_sys_finit_module+0x11a/0x1c0\n[   40.224654][  T184]  ? __shmem_file_setup+0x102/0x280\n[   40.234764][  T184]  drm_gem_vram_create+0x305/0x480 [drm_vram_helper]\n[   40.235766][  T184]  ? bo_driver_evict_flags+0x340/0x340 [drm_vram_helper]\n[   40.236846][  T184]  ? __kasan_slab_free+0x108/0x180\n[   40.237650][  T184]  drm_gem_vram_fill_create_dumb+0x134/0x340 [drm_vram_helper]\n[   40.238864][  T184]  ? local_pci_probe+0xdf/0x180\n[   40.239674][  T184]  ? drmm_vram_helper_init+0x400/0x400 [drm_vram_helper]\n[   40.240826][  T184]  drm_client_framebuffer_create+0x19c/0x400 [drm]\n[   40.241955][  T184]  ? drm_client_buffer_delete+0x200/0x200 [drm]\n[   40.243001][  T184]  ? drm_client_pick_crtcs+0x554/0xb80 [drm]\n[   40.244030][  T184]  drm_fb_helper_generic_probe+0x23f/0x940 [drm_kms_helper]\n[   40.245226][  T184]  ? __cond_resched+0x1c/0xc0\n[   40.245987][  T184]  ? drm_fb_helper_memory_range_to_clip+0x180/0x180 [drm_kms_helper]\n[   40.247316][  T184]  ? mutex_unlock+0x80/0x100\n[   40.248005][  T184]  ? __mutex_unlock_slowpath+0x2c0/0x2c0\n[   40.249083][  T184]  drm_fb_helper_single_fb_probe+0x907/0xf00 [drm_kms_helper]\n[   40.250314][  T184]  ? drm_fb_helper_check_var+0x1180/0x1180 [drm_kms_helper]\n[   40.251540][  T184]  ? __cond_resched+0x1c/0xc0\n[   40.252321][  T184]  ? mutex_lock+0x9f/0x100\n[   40.253062][  T184]  __drm_fb_helper_initial_config_and_unlock+0xb9/0x2c0 [drm_kms_helper]\n[   40.254394][  T184]  drm_fbdev_client_hotplug+0x56f/0x840 [drm_kms_helper]\n[   40.255477][  T184]  drm_fbdev_generic_setup+0x165/0x3c0 [drm_kms_helper]\n[   40.256607][  T184]  bochs_pci_probe+0x6b7/0x900 [bochs]\n[   40.257515][  T184]  ? _raw_spin_lock_irqsave+0x87/0x100\n[   40.258312][  T184]  ? bochs_hw_init+0x480/0x480 [bochs]\n[   40.259244][  T184]  ? bochs_hw_init+0x480/0x480 [bochs]\n[   40.260186][  T184]  local_pci_probe+0xdf/0x180\n[   40.260928][  T184]  pci_call_probe+0x15f/0x500\n[   40.265798][  T184]  ? _raw_spin_lock+0x81/0x100\n[   40.266508][  T184]  ? pci_pm_suspend_noirq+0x980/0x980\n[   40.267322][  T184]  ? pci_assign_irq+0x81/0x280\n[   40.268096][  T184]  ? pci_match_device+0x351/0x6c0\n[   40.268883][  T184]  ? kernfs_put+0x18/0x40\n[   40.269611][  T184]  pci_device_probe+0xee/0x240\n[   40.270352][  T184]  really_probe+0x435/0xa80\n[   40.271021][  T184]  __driver_probe_device+0x2ab/0x480\n[   40.271828][  T184]  driver_probe_device+0x49/0x140\n[   40.272627][  T184]  __driver_attach+0x1bd/0x4c0\n[   40.273372][  T184]  ? __device_attach_driver+0x240/0x240\n[   40.274273][  T184]  bus_for_each_dev+0x11e/0x1c0\n[   40.275080][  T184]  ? subsys_dev_iter_exit+0x40/0x40\n[   40.275951][  T184]  ? klist_add_tail+0x132/0x280\n[   40.276767][  T184]  bus_add_driver+0x39b/0x580\n[   40.277574][  T184]  driver_register+0x20f/0x3c0\n[   40.278281][  T184]  ? 0xffffffffc04a2000\n[   40.278894][  T184]  do_one_initcall+0x8a/0x300\n[   40.279642][  T184]  ? trace_event_raw_event_initcall_level+0x1c0/0x1c0\n[   40.280707][  T184]  ? kasan_unpoison+0x23/0x80\n[   40.281479][  T184]  ? kasan_unpoison+0x23/0x80\n[   40.282197][  T184]  do_init_module+0x190/0x640\n[   40.282926][  T184]  load_module+0x221b/0x2780\n[   40.283611][  T184]  ? layout_and_allocate+0x5c0/0x5c0\n[   40.284401][  T184]  ? kernel_read_file+0x286/0x6c0\n[   40.285216][  T184]  ? __x64_sys_fspick+0x2c0/0x2c0\n[   40.286043][  T184]  ? mmap_region+0x4e7/0x1300\n[   40.286832][  T184]  ? __do_sys_finit_module+0x11a/0x1c0\n[   40.287743][  T184]  __do_sys_finit_module+0x11a/0x1c0\n[   40.288636][  T184]  ? __ia32_sys_init_module+0xc0/0xc0\n[   40.289557][  T184]  ? __seccomp_filter+0x15e/0xc80\n[   40.290341][  T184]  ? vm_mmap_pgoff+0x185/0x240\n[   40.291060][  T184]  do_syscall_64+0x3b/0xc0\n[   40.291763][  T184]  entry_SYSCALL_64_after_hwframe+0x46/0xb0\n[   40.292678][  T184] RIP: 0033:0x7f6b1d6279b9\n[   40.293438][  T184] Code: 00 c3 66 2e 0f 1f 84 00 00 00 00 00 0f 1f 44 00 00 48 89 f8 48 89 f7 48 89 d6 48 89 ca 4d 89 c2 4d 89 c8 4c 8b 4c 24 08 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d a7 54 0c 00 f7 d8 64 89 01 48\n[   40.296302][  T184] RSP: 002b:00007ffe7f51b798 EFLAGS: 00000246 ORIG_RAX: 0000000000000139\n[   40.297633][  T184] RAX: ffffffffffffffda RBX: 00005642dcca2880 RCX: 00007f6b1d6279b9\n[   40.298890][  T184] RDX: 0000000000000000 RSI: 00007f6b1d7b2e2d RDI: 0000000000000016\n[   40.300199][  T184] RBP: 0000000000020000 R08: 0000000000000000 R09: 00005642dccd5530\n[   40.301547][  T184] R10: 0000000000000016 R11: 0000000000000246 R12: 00007f6b1d7b2e2d\n[   40.302698][  T184] R13: 0000000000000000 R14: 00005642dcca4230 R15: 00005642dcca2880\n\nSigned-off-by: Arunpravin Paneer Selvam <Arunpravin.PaneerSelvam@amd.com>\nReported-by: kernel test robot <oliver.sang@intel.com>\nReviewed-by: Christian K\u00f6nig <christian.koenig@amd.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20220726162205.2778-1-Arunpravin.PaneerSelvam@amd.com\nLink: https://patchwork.freedesktop.org/patch/msgid/20220809095623.3569-1-Arunpravin.PaneerSelvam@amd.com\nSigned-off-by: Christian K\u00f6nig <christian.koenig@amd.com>\nCC: stable@vger.kernel.org",
        "before_after_code_files": [
          "drivers/gpu/drm/ttm/ttm_bo.c||drivers/gpu/drm/ttm/ttm_bo.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/gpu/drm/ttm/ttm_bo.c||drivers/gpu/drm/ttm/ttm_bo.c": [
          "File: drivers/gpu/drm/ttm/ttm_bo.c -> drivers/gpu/drm/ttm/ttm_bo.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "922:   ret = ttm_tt_create(bo, true);",
          "923:   if (ret)",
          "924:    return ret;",
          "",
          "[Removed Lines]",
          "921:  if (bo->resource->mem_type == TTM_PL_SYSTEM) {",
          "",
          "[Added Lines]",
          "921:  if (!bo->resource || bo->resource->mem_type == TTM_PL_SYSTEM) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1b7680c6c1f6de9904f1d9b05c952f0c64a03350",
      "candidate_info": {
        "commit_hash": "1b7680c6c1f6de9904f1d9b05c952f0c64a03350",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/1b7680c6c1f6de9904f1d9b05c952f0c64a03350",
        "files": [
          "drivers/net/ethernet/broadcom/bgmac.c"
        ],
        "message": "net: bgmac: Fix a BUG triggered by wrong bytes_compl\n\nOn one of our machines we got:\n\nkernel BUG at lib/dynamic_queue_limits.c:27!\nInternal error: Oops - BUG: 0 [#1] PREEMPT SMP ARM\nCPU: 0 PID: 1166 Comm: irq/41-bgmac Tainted: G        W  O    4.14.275-rt132 #1\nHardware name: BRCM XGS iProc\ntask: ee3415c0 task.stack: ee32a000\nPC is at dql_completed+0x168/0x178\nLR is at bgmac_poll+0x18c/0x6d8\npc : [<c03b9430>]    lr : [<c04b5a18>]    psr: 800a0313\nsp : ee32be14  ip : 000005ea  fp : 00000bd4\nr10: ee558500  r9 : c0116298  r8 : 00000002\nr7 : 00000000  r6 : ef128810  r5 : 01993267  r4 : 01993851\nr3 : ee558000  r2 : 000070e1  r1 : 00000bd4  r0 : ee52c180\nFlags: Nzcv  IRQs on  FIQs on  Mode SVC_32  ISA ARM  Segment none\nControl: 12c5387d  Table: 8e88c04a  DAC: 00000051\nProcess irq/41-bgmac (pid: 1166, stack limit = 0xee32a210)\nStack: (0xee32be14 to 0xee32c000)\nbe00:                                              ee558520 ee52c100 ef128810\nbe20: 00000000 00000002 c0116298 c04b5a18 00000000 c0a0c8c4 c0951780 00000040\nbe40: c0701780 ee558500 ee55d520 ef05b340 ef6f9780 ee558520 00000001 00000040\nbe60: ffffe000 c0a56878 ef6fa040 c0952040 0000012c c0528744 ef6f97b0 fffcfb6a\nbe80: c0a04104 2eda8000 c0a0c4ec c0a0d368 ee32bf44 c0153534 ee32be98 ee32be98\nbea0: ee32bea0 ee32bea0 ee32bea8 ee32bea8 00000000 c01462e4 ffffe000 ef6f22a8\nbec0: ffffe000 00000008 ee32bee4 c0147430 ffffe000 c094a2a8 00000003 ffffe000\nbee0: c0a54528 00208040 0000000c c0a0c8c4 c0a65980 c0124d3c 00000008 ee558520\nbf00: c094a23c c0a02080 00000000 c07a9910 ef136970 ef136970 ee30a440 ef136900\nbf20: ee30a440 00000001 ef136900 ee30a440 c016d990 00000000 c0108db0 c012500c\nbf40: ef136900 c016da14 ee30a464 ffffe000 00000001 c016dd14 00000000 c016db28\nbf60: ffffe000 ee21a080 ee30a400 00000000 ee32a000 ee30a440 c016dbfc ee25fd70\nbf80: ee21a09c c013edcc ee32a000 ee30a400 c013ec7c 00000000 00000000 00000000\nbfa0: 00000000 00000000 00000000 c0108470 00000000 00000000 00000000 00000000\nbfc0: 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000\nbfe0: 00000000 00000000 00000000 00000000 00000013 00000000 00000000 00000000\n[<c03b9430>] (dql_completed) from [<c04b5a18>] (bgmac_poll+0x18c/0x6d8)\n[<c04b5a18>] (bgmac_poll) from [<c0528744>] (net_rx_action+0x1c4/0x494)\n[<c0528744>] (net_rx_action) from [<c0124d3c>] (do_current_softirqs+0x1ec/0x43c)\n[<c0124d3c>] (do_current_softirqs) from [<c012500c>] (__local_bh_enable+0x80/0x98)\n[<c012500c>] (__local_bh_enable) from [<c016da14>] (irq_forced_thread_fn+0x84/0x98)\n[<c016da14>] (irq_forced_thread_fn) from [<c016dd14>] (irq_thread+0x118/0x1c0)\n[<c016dd14>] (irq_thread) from [<c013edcc>] (kthread+0x150/0x158)\n[<c013edcc>] (kthread) from [<c0108470>] (ret_from_fork+0x14/0x24)\nCode: a83f15e0 0200001a 0630a0e1 c3ffffea (f201f0e7)\n\nThe issue seems similar to commit 90b3b339364c (\"net: hisilicon: Fix a BUG\ntrigered by wrong bytes_compl\") and potentially introduced by commit\nb38c83dd0866 (\"bgmac: simplify tx ring index handling\").\n\nIf there is an RX interrupt between setting ring->end\nand netdev_sent_queue() we can hit the BUG_ON as bgmac_dma_tx_free()\ncan miscalculate the queue size while called from bgmac_poll().\n\nThe machine which triggered the BUG runs a v4.14 RT kernel - but the issue\nseems present in mainline too.\n\nFixes: b38c83dd0866 (\"bgmac: simplify tx ring index handling\")\nSigned-off-by: Sandor Bodo-Merle <sbodomerle@gmail.com>\nReviewed-by: Florian Fainelli <f.fainelli@gmail.com>\nLink: https://lore.kernel.org/r/20220808173939.193804-1-sbodomerle@gmail.com\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
        "before_after_code_files": [
          "drivers/net/ethernet/broadcom/bgmac.c||drivers/net/ethernet/broadcom/bgmac.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/ethernet/broadcom/bgmac.c||drivers/net/ethernet/broadcom/bgmac.c": [
          "File: drivers/net/ethernet/broadcom/bgmac.c -> drivers/net/ethernet/broadcom/bgmac.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "189:  }",
          "191:  slot->skb = skb;",
          "193:  netdev_sent_queue(net_dev, skb->len);",
          "195:  wmb();",
          "",
          "[Removed Lines]",
          "192:  ring->end += nr_frags + 1;",
          "",
          "[Added Lines]",
          "193:  ring->end += nr_frags + 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bc3c8fe3c79bcdae4d90e3726054fac5cca8ac32",
      "candidate_info": {
        "commit_hash": "bc3c8fe3c79bcdae4d90e3726054fac5cca8ac32",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/bc3c8fe3c79bcdae4d90e3726054fac5cca8ac32",
        "files": [
          "drivers/net/plip/plip.c"
        ],
        "message": "plip: avoid rcu debug splat\n\nWARNING: suspicious RCU usage\n5.2.0-rc2-00605-g2638eb8b50cfc #1 Not tainted\ndrivers/net/plip/plip.c:1110 suspicious rcu_dereference_check() usage!\n\nplip_open is called with RTNL held, switch to the correct helper.\n\nFixes: 2638eb8b50cf (\"net: ipv4: provide __rcu annotation for ifa_list\")\nReported-by: kernel test robot <oliver.sang@intel.com>\nSigned-off-by: Florian Westphal <fw@strlen.de>\nLink: https://lore.kernel.org/r/20220807115304.13257-1-fw@strlen.de\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
        "before_after_code_files": [
          "drivers/net/plip/plip.c||drivers/net/plip/plip.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/plip/plip.c||drivers/net/plip/plip.c": [
          "File: drivers/net/plip/plip.c -> drivers/net/plip/plip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1112:      have the first two bytes filled with 0xfc, from",
          "1115:   if (ifa != NULL) {",
          "1116:    dev_addr_mod(dev, 2, &ifa->ifa_local, 4);",
          "1117:   }",
          "",
          "[Removed Lines]",
          "1114:   const struct in_ifaddr *ifa = rcu_dereference(in_dev->ifa_list);",
          "",
          "[Added Lines]",
          "1114:   const struct in_ifaddr *ifa = rtnl_dereference(in_dev->ifa_list);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "31071173771e079f7bc08dacd61e0db913262fbf",
      "candidate_info": {
        "commit_hash": "31071173771e079f7bc08dacd61e0db913262fbf",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/31071173771e079f7bc08dacd61e0db913262fbf",
        "files": [
          "drivers/net/ethernet/intel/iavf/iavf_main.c"
        ],
        "message": "iavf: Fix reset error handling\n\nDo not call iavf_close in iavf_reset_task error handling. Doing so can\nlead to double call of napi_disable, which can lead to deadlock there.\nRemoving VF would lead to iavf_remove task being stuck, because it\nrequires crit_lock, which is held by iavf_close.\nCall iavf_disable_vf if reset fail, so that driver will clean up\nremaining invalid resources.\nDuring rapid VF resets, HW can fail to setup VF mailbox. Wrong\nerror handling can lead to iavf_remove being stuck with:\n[ 5218.999087] iavf 0000:82:01.0: Failed to init adminq: -53\n...\n[ 5267.189211] INFO: task repro.sh:11219 blocked for more than 30 seconds.\n[ 5267.189520]       Tainted: G S          E     5.18.0-04958-ga54ce3703613-dirty #1\n[ 5267.189764] \"echo 0 > /proc/sys/kernel/hung_task_timeout_secs\" disables this message.\n[ 5267.190062] task:repro.sh        state:D stack:    0 pid:11219 ppid:  8162 flags:0x00000000\n[ 5267.190347] Call Trace:\n[ 5267.190647]  <TASK>\n[ 5267.190927]  __schedule+0x460/0x9f0\n[ 5267.191264]  schedule+0x44/0xb0\n[ 5267.191563]  schedule_preempt_disabled+0x14/0x20\n[ 5267.191890]  __mutex_lock.isra.12+0x6e3/0xac0\n[ 5267.192237]  ? iavf_remove+0xf9/0x6c0 [iavf]\n[ 5267.192565]  iavf_remove+0x12a/0x6c0 [iavf]\n[ 5267.192911]  ? _raw_spin_unlock_irqrestore+0x1e/0x40\n[ 5267.193285]  pci_device_remove+0x36/0xb0\n[ 5267.193619]  device_release_driver_internal+0xc1/0x150\n[ 5267.193974]  pci_stop_bus_device+0x69/0x90\n[ 5267.194361]  pci_stop_and_remove_bus_device+0xe/0x20\n[ 5267.194735]  pci_iov_remove_virtfn+0xba/0x120\n[ 5267.195130]  sriov_disable+0x2f/0xe0\n[ 5267.195506]  ice_free_vfs+0x7d/0x2f0 [ice]\n[ 5267.196056]  ? pci_get_device+0x4f/0x70\n[ 5267.196496]  ice_sriov_configure+0x78/0x1a0 [ice]\n[ 5267.196995]  sriov_numvfs_store+0xfe/0x140\n[ 5267.197466]  kernfs_fop_write_iter+0x12e/0x1c0\n[ 5267.197918]  new_sync_write+0x10c/0x190\n[ 5267.198404]  vfs_write+0x24e/0x2d0\n[ 5267.198886]  ksys_write+0x5c/0xd0\n[ 5267.199367]  do_syscall_64+0x3a/0x80\n[ 5267.199827]  entry_SYSCALL_64_after_hwframe+0x46/0xb0\n[ 5267.200317] RIP: 0033:0x7f5b381205c8\n[ 5267.200814] RSP: 002b:00007fff8c7e8c78 EFLAGS: 00000246 ORIG_RAX: 0000000000000001\n[ 5267.201981] RAX: ffffffffffffffda RBX: 0000000000000002 RCX: 00007f5b381205c8\n[ 5267.202620] RDX: 0000000000000002 RSI: 00005569420ee900 RDI: 0000000000000001\n[ 5267.203426] RBP: 00005569420ee900 R08: 000000000000000a R09: 00007f5b38180820\n[ 5267.204327] R10: 000000000000000a R11: 0000000000000246 R12: 00007f5b383c06e0\n[ 5267.205193] R13: 0000000000000002 R14: 00007f5b383bb880 R15: 0000000000000002\n[ 5267.206041]  </TASK>\n[ 5267.206970] Kernel panic - not syncing: hung_task: blocked tasks\n[ 5267.207809] CPU: 48 PID: 551 Comm: khungtaskd Kdump: loaded Tainted: G S          E     5.18.0-04958-ga54ce3703613-dirty #1\n[ 5267.208726] Hardware name: Dell Inc. PowerEdge R730/0WCJNT, BIOS 2.11.0 11/02/2019\n[ 5267.209623] Call Trace:\n[ 5267.210569]  <TASK>\n[ 5267.211480]  dump_stack_lvl+0x33/0x42\n[ 5267.212472]  panic+0x107/0x294\n[ 5267.213467]  watchdog.cold.8+0xc/0xbb\n[ 5267.214413]  ? proc_dohung_task_timeout_secs+0x30/0x30\n[ 5267.215511]  kthread+0xf4/0x120\n[ 5267.216459]  ? kthread_complete_and_exit+0x20/0x20\n[ 5267.217505]  ret_from_fork+0x22/0x30\n[ 5267.218459]  </TASK>\n\nFixes: f0db78928783 (\"i40evf: use netdev variable in reset task\")\nSigned-off-by: Przemyslaw Patynowski <przemyslawx.patynowski@intel.com>\nSigned-off-by: Jedrzej Jagielski <jedrzej.jagielski@intel.com>\nTested-by: Marek Szlosek <marek.szlosek@intel.com>\nSigned-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>",
        "before_after_code_files": [
          "drivers/net/ethernet/intel/iavf/iavf_main.c||drivers/net/ethernet/intel/iavf/iavf_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/ethernet/intel/iavf/iavf_main.c||drivers/net/ethernet/intel/iavf/iavf_main.c": [
          "File: drivers/net/ethernet/intel/iavf/iavf_main.c -> drivers/net/ethernet/intel/iavf/iavf_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3087:  return;",
          "3088: reset_err:",
          "3089:  mutex_unlock(&adapter->client_lock);",
          "3090:  mutex_unlock(&adapter->crit_lock);",
          "3093:  dev_err(&adapter->pdev->dev, \"failed to allocate resources during reinit\\n\");",
          "3095: }",
          "",
          "[Removed Lines]",
          "3091:  if (running)",
          "3092:   iavf_change_state(adapter, __IAVF_RUNNING);",
          "3094:  iavf_close(netdev);",
          "",
          "[Added Lines]",
          "3089:  if (running) {",
          "3090:   set_bit(__IAVF_VSI_DOWN, adapter->vsi.state);",
          "3091:   iavf_free_traffic_irqs(adapter);",
          "3092:  }",
          "3093:  iavf_disable_vf(adapter);",
          "",
          "---------------"
        ]
      }
    }
  ]
}