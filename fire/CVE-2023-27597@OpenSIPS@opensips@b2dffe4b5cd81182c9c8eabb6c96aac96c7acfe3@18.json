{
  "cve_id": "CVE-2023-27597",
  "cve_desc": "OpenSIPS is a Session Initiation Protocol (SIP) server implementation. Prior to versions 3.1.8 and 3.2.5, when a specially crafted SIP message is processed by the function `rewrite_ruri`, a crash occurs due to a segmentation fault. This issue causes the server to crash. It affects configurations containing functions that make use of the affected code, such as the function `setport`. This issue has been fixed in version 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
  "patch_info": {
    "commit_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "files": [
      "parser/parse_uri.c"
    ],
    "message": "[core] fix parse_uri() parsing\n\nIssue discovered during OpenSIPS Security Audit 2022,\n\tby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-358f-935m-7p9c",
    "before_after_code_files": [
      "parser/parse_uri.c||parser/parse_uri.c"
    ]
  },
  "patch_diff": {
    "parser/parse_uri.c||parser/parse_uri.c": [
      "File: parser/parse_uri.c -> parser/parse_uri.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1532:   case TELS_URI_T:",
      "1534:    uri->user=uri->host;",
      "1536:    uri->host.len=0;",
      "1537:    break;",
      "1538:   case SIP_URI_T:",
      "",
      "[Removed Lines]",
      "1535:    uri->host.s=\"\";",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1543:   case URN_NENA_SERVICE_URI_T:",
      "1544:    uri->user.s=0;",
      "1545:    uri->user.len=0;",
      "1548:    break;",
      "1549:   case ERROR_URI_T:",
      "1550:    LM_ERR(\"unexpected error (BUG?)\\n\");",
      "",
      "[Removed Lines]",
      "1546:    uri->host.s=\"\";",
      "1547:    uri->host.len=0;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "80a7df2433934a880a728ae9305a9a04c37d69a4",
      "candidate_info": {
        "commit_hash": "80a7df2433934a880a728ae9305a9a04c37d69a4",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/80a7df2433934a880a728ae9305a9a04c37d69a4",
        "files": [
          "modules/clusterer/sync.c"
        ],
        "message": "clusterer: queue sync request after all send errors\n\n(cherry picked from commit 46e56d4170079eed46686c57986c2ccf5756779e)",
        "before_after_code_files": [
          "modules/clusterer/sync.c||modules/clusterer/sync.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/clusterer/sync.c||modules/clusterer/sync.c": [
          "File: modules/clusterer/sync.c -> modules/clusterer/sync.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:  cluster_info_t *cluster;",
          "94:  struct local_cap *lcap;",
          "95:  int source_id;",
          "98:  LM_DBG(\"requesting %.*s sync in cluster %d\\n\",",
          "99:         capability->len, capability->s, cluster_id);",
          "",
          "[Removed Lines]",
          "96:  int rc;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "152:   lock_release(cluster->lock);",
          "153:  } else {",
          "154:   LM_DBG(\"found donor node: %d\\n\", source_id);",
          "158:    lock_get(cluster->lock);",
          "159:    lcap->flags |= CAP_SYNC_PENDING;",
          "161:    if (cluster->current_node->flags & NODE_IS_SEED)",
          "162:     gettimeofday(&lcap->sync_req_time, NULL);",
          "163:    lock_release(cluster->lock);",
          "166:  }",
          "168:  return 0;",
          "",
          "[Removed Lines]",
          "155:   rc = send_sync_req(capability, cluster_id, source_id);",
          "156:   if (rc == CLUSTERER_DEST_DOWN || rc == CLUSTERER_CURR_DISABLED) {",
          "164:   } else if (rc == CLUSTERER_SEND_ERR)",
          "165:    return -1;",
          "",
          "[Added Lines]",
          "154:   if (send_sync_req(capability, cluster_id, source_id) !=",
          "155:    CLUSTERER_SEND_SUCCESS) {",
          "163:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "35b29e618b1175618c61747591dcf87370056102",
      "candidate_info": {
        "commit_hash": "35b29e618b1175618c61747591dcf87370056102",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/35b29e618b1175618c61747591dcf87370056102",
        "files": [
          "modules/tls_wolfssl/wolfssl_conn_ops.c"
        ],
        "message": "tls_wolfssl: fix differing TLS version for write duplicate struct\n\nWhen using a range of supported TLS versions, the WOLFSSL write duplicate\nstructure uses the highest TLS version set for the context instead of the one\nactually negociated for the current session. This may lead to errors for TLS\nwrite or shutdown operations, for ciphers that are not supported in the\nTLS version used by the write dup structure.\n\nFixes #2729",
        "before_after_code_files": [
          "modules/tls_wolfssl/wolfssl_conn_ops.c||modules/tls_wolfssl/wolfssl_conn_ops.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/tls_wolfssl/wolfssl_conn_ops.c||modules/tls_wolfssl/wolfssl_conn_ops.c": [
          "File: modules/tls_wolfssl/wolfssl_conn_ops.c -> modules/tls_wolfssl/wolfssl_conn_ops.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "305: }",
          "307: int _wolfssl_tls_async_connect(struct tcp_connection *con, int fd,",
          "308:  int timeout, trace_dest t_dst)",
          "309: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "307: static inline void _wolfssl_enforce_max_version(struct tcp_connection *c)",
          "308: {",
          "309:  int r_vers, wr_vers;",
          "311:  r_vers = wolfSSL_version(_WOLFSSL_READ_SSL(c->extra_data));",
          "312:  wr_vers = wolfSSL_version(_WOLFSSL_WRITE_SSL(c->extra_data));",
          "313:  if (r_vers == wr_vers)",
          "314:   return;",
          "316:  switch(r_vers) {",
          "317:  case SSL2_VERSION:",
          "318:   LM_BUG(\"SSLv2 should not be supported\\n\");",
          "319:   break;",
          "320:  case SSL3_VERSION:",
          "321:   wolfSSL_set_options(_WOLFSSL_WRITE_SSL(c->extra_data),",
          "322:    WOLFSSL_OP_NO_TLSv1);",
          "323:  case TLS1_VERSION:",
          "324:   wolfSSL_set_options(_WOLFSSL_WRITE_SSL(c->extra_data),",
          "325:    WOLFSSL_OP_NO_TLSv1_1);",
          "326:  case TLS1_1_VERSION:",
          "327:   wolfSSL_set_options(_WOLFSSL_WRITE_SSL(c->extra_data),",
          "328:    WOLFSSL_OP_NO_TLSv1_2);",
          "329:  case TLS1_2_VERSION:",
          "330:   wolfSSL_set_options(_WOLFSSL_WRITE_SSL(c->extra_data),",
          "331:    WOLFSSL_OP_NO_TLSv1_3);",
          "332:  case TLS1_3_VERSION:",
          "333:   break;",
          "334:  }",
          "335: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "358:     return -1;",
          "359:    }",
          "361:    return 1;",
          "362:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "391:    _wolfssl_enforce_max_version(con);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "530:    return -1;",
          "531:   }",
          "533:   LM_DBG(\"new TLS connection from %s:%d using %s\\n\",",
          "534:    ip_addr2a(&c->rcv.src_ip), c->rcv.src_port,",
          "535:    wolfSSL_get_cipher_name(ssl));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "565:   _wolfssl_enforce_max_version(c);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "636:    return -1;",
          "637:   }",
          "639:   LM_DBG(\"new TLS connection to %s:%d using %s\\n\",",
          "640:    ip_addr2a(&c->rcv.src_ip), c->rcv.src_port,",
          "641:    wolfSSL_get_cipher_name(ssl));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "673:   _wolfssl_enforce_max_version(c);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d49e1f3a89b751942c1b6340355edb38ef6446c",
      "candidate_info": {
        "commit_hash": "2d49e1f3a89b751942c1b6340355edb38ef6446c",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/2d49e1f3a89b751942c1b6340355edb38ef6446c",
        "files": [
          "msg_translator.c"
        ],
        "message": "Fix bad body re-assembling when handling a multi part with empty parts\n\nCredits for the finding and for the fix go to John Burke ( @john08burke )\nCloses #2794\n\n(cherry picked from commit b0591d285ad966c2cb13672de8071c03fcba7414)",
        "before_after_code_files": [
          "msg_translator.c||msg_translator.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "msg_translator.c||msg_translator.c": [
          "File: msg_translator.c -> msg_translator.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1262:  char *hdr, *it;",
          "1267:  if (msg->body->updated_part_count==0) {",
          "",
          "[Removed Lines]",
          "1265:  orig_offs = msg->body->part_count ? msg->body->body.s-msg->buf : msg->len ;",
          "",
          "[Added Lines]",
          "1265:  orig_offs = msg->body ? msg->body->body.s-msg->buf : msg->len ;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1915:  } else {",
          "1920:   memcpy(new_buf+*new_offs, msg->buf+*orig_offs, size );",
          "",
          "[Removed Lines]",
          "1917:   size = (msg->body->part_count) ?",
          "",
          "[Added Lines]",
          "1917:   size = (msg->body->body.s - msg->buf) - *orig_offs;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2423:   new_buf[(int)(msg->first_line.u.reply.status.s-msg->buf)+2] = '0';",
          "2425:  LM_DBG(\"copied size: orig:%d, new: %d, rest: %d\"",
          "2429:  return new_buf;",
          "",
          "[Removed Lines]",
          "2426:    \" msg=\\n%s\\n\", s_offset, offset, len-s_offset, new_buf);",
          "",
          "[Added Lines]",
          "2424:    \" msg=|\\n%s|\\n\", s_offset, offset, len-s_offset, new_buf);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0e3b402452ea7ab3e39795d40d1c231883612bd8",
      "candidate_info": {
        "commit_hash": "0e3b402452ea7ab3e39795d40d1c231883612bd8",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/0e3b402452ea7ab3e39795d40d1c231883612bd8",
        "files": [
          "modules/b2b_entities/dlg.c",
          "modules/media_exchange/media_exchange.c",
          "modules/siprec/siprec_logic.c"
        ],
        "message": "b2b_entities: free key returned by client_new\n\nprevent pkg leak of b2b_key returned by client_new\n\n(cherry picked from commit 60043ae3713052614e535371c100a3668c47af8f)",
        "before_after_code_files": [
          "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c",
          "modules/media_exchange/media_exchange.c||modules/media_exchange/media_exchange.c",
          "modules/siprec/siprec_logic.c||modules/siprec/siprec_logic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c": [
          "File: modules/b2b_entities/dlg.c -> modules/b2b_entities/dlg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "260:    LM_ERR(\"No more shared memory\\n\");",
          "261:    if(!safe)",
          "262:     lock_release(&table[hash_index].lock);",
          "263:    return 0;",
          "264:   }",
          "265:   memcpy(dlg->tag[CALLEE_LEG].s, b2b_key->s, b2b_key->len);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "263:    pkg_free(b2b_key);",
          "",
          "---------------"
        ],
        "modules/media_exchange/media_exchange.c||modules/media_exchange/media_exchange.c": [
          "File: modules/media_exchange/media_exchange.c -> modules/media_exchange/media_exchange.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "333:   LM_ERR(\"could not copy b2b client key\\n\");",
          "335:   media_b2b.entity_delete(B2B_CLIENT, b2b_key, msl->dlginfo, 1, 1);",
          "336:   goto release;",
          "337:  }",
          "338:  msl->params = mf;",
          "339:  msl->b2b_entity = B2B_CLIENT;",
          "340:  media_util_release_static();",
          "341:  return 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336:   pkg_free(b2b_key);",
          "340:  pkg_free(b2b_key);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "614:   LM_ERR(\"could not copy b2b client key\\n\");",
          "616:   media_b2b.entity_delete(B2B_CLIENT, b2b_key, msl->dlginfo, 1, 1);",
          "617:   goto unref;",
          "618:  }",
          "619:  msl->b2b_entity = B2B_CLIENT;",
          "620:  return 1;",
          "621: unref:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "619:   pkg_free(b2b_key);",
          "622:  pkg_free(b2b_key);",
          "",
          "---------------"
        ],
        "modules/siprec/siprec_logic.c||modules/siprec/siprec_logic.c": [
          "File: modules/siprec/siprec_logic.c -> modules/siprec/siprec_logic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "406:  sess->b2b_key.s = shm_malloc(client->len);",
          "407:  if (!sess->b2b_key.s) {",
          "408:   LM_ERR(\"out of shm memory!\\n\");",
          "409:   return -1;",
          "410:  }",
          "411:  memcpy(sess->b2b_key.s, client->s, client->len);",
          "412:  sess->b2b_key.len = client->len;",
          "414:  return 0;",
          "415: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "409:   pkg_free(client);",
          "414:  pkg_free(client);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "204092b4110ba76f2b99f05bf31c5d278fc76730",
      "candidate_info": {
        "commit_hash": "204092b4110ba76f2b99f05bf31c5d278fc76730",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/204092b4110ba76f2b99f05bf31c5d278fc76730",
        "files": [
          "parser/msg_parser.c",
          "parser/test/test_parser.c"
        ],
        "message": "parse_msg(): Fix heap buffer overflow edge-case (OSS-Fuzz)\n\nThis patch fixes a SIP message parsing error log which could lead to an\nunsafe printing of a non-NULL terminated string.  Fortunately, the\nOpenSIPS PKG memory allocator minimizes the severity of this overflow,\nthanks to its pre-allocated, large chunk of heap memory.\n\nSeverity: Low\nFixes OSS-Fuzz#52204\n\n(cherry picked from commit 2a6f8c67aa15ebf507cc9ff2bd881d771858fed7)",
        "before_after_code_files": [
          "parser/msg_parser.c||parser/msg_parser.c",
          "parser/test/test_parser.c||parser/test/test_parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "parser/msg_parser.c||parser/msg_parser.c": [
          "File: parser/msg_parser.c -> parser/msg_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:     if (match){",
          "240:      match++;",
          "241:     }else {",
          "243:      tmp=end;",
          "244:      goto error_bad_hdr;",
          "245:     }",
          "",
          "[Removed Lines]",
          "242:      LM_ERR(\"bad body for <%s>(%d)\\n\", hdr->name.s, hdr->type);",
          "",
          "[Added Lines]",
          "242:      LM_ERR(\"bad body for <%.*s>(%d)\\n\",",
          "243:               hdr->name.len, hdr->name.s, hdr->type);",
          "",
          "---------------"
        ],
        "parser/test/test_parser.c||parser/test/test_parser.c": [
          "File: parser/test/test_parser.c -> parser/test/test_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "152:   \"e \\xff\\xff\\xff\\xff     \\xff\\n\\xff\\xff  \",",
          "153:   -1,",
          "158:   \"d  \\x02\\x80\\0\\nt\\0:G;150=\\\"a8\",",
          "159:   -1,",
          "160:  },",
          "162:  {\"\\0\", 0},",
          "",
          "[Removed Lines]",
          "154:  },",
          "156:  {",
          "",
          "[Added Lines]",
          "154:  }, {",
          "158:  }, {",
          "160:   \"m  r\\nu:c \\x1b\\r   : ]\",",
          "161:   -1,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "173:   msg.buf = (char *)tset[i].tmsg;",
          "174:   msg.len = strlen(msg.buf);",
          "177:  }",
          "178: }",
          "",
          "[Removed Lines]",
          "176:   ok(parse_msg(msg.buf, msg.len, &msg) == tset[i].tres, \"parse-msg-0\");",
          "",
          "[Added Lines]",
          "178:   ok(parse_msg(msg.buf, msg.len, &msg) == tset[i].tres, \"parse-msg-t%d\", i);",
          "",
          "---------------"
        ]
      }
    }
  ]
}