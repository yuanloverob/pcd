{
  "cve_id": "CVE-2021-31661",
  "cve_desc": "RIOT-OS 2021.01 before commit 609c9ada34da5546cffb632a98b7ba157c112658 contains a buffer overflow that could allow attackers to obtain sensitive information.",
  "repo": "RIOT-OS/RIOT",
  "patch_hash": "609c9ada34da5546cffb632a98b7ba157c112658",
  "patch_info": {
    "commit_hash": "609c9ada34da5546cffb632a98b7ba157c112658",
    "repo": "RIOT-OS/RIOT",
    "commit_url": "https://github.com/RIOT-OS/RIOT/commit/609c9ada34da5546cffb632a98b7ba157c112658",
    "files": [
      "sys/clif/clif.c",
      "tests/unittests/tests-clif/tests-clif.c"
    ],
    "message": "Merge pull request #15945 from nmeum/pr/clif_get_attr_bounds\n\nclif: After incrementing pos, make sure it is still in bounds",
    "before_after_code_files": [
      "sys/clif/clif.c||sys/clif/clif.c",
      "tests/unittests/tests-clif/tests-clif.c||tests/unittests/tests-clif/tests-clif.c"
    ]
  },
  "patch_diff": {
    "sys/clif/clif.c||sys/clif/clif.c": [
      "File: sys/clif/clif.c -> sys/clif/clif.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "278:             attr->key_len = pos - attr->key;",
      "280:             pos++;",
      "282:                 quoted = true;",
      "283:                 pos++;",
      "284:             }",
      "",
      "[Removed Lines]",
      "281:             if (*pos == '\"') {",
      "",
      "[Added Lines]",
      "281:             if (pos == end) {",
      "282:                 break;",
      "283:             }",
      "284:             else if (*pos == '\"') {",
      "",
      "---------------"
    ],
    "tests/unittests/tests-clif/tests-clif.c||tests/unittests/tests-clif/tests-clif.c": [
      "File: tests/unittests/tests-clif/tests-clif.c -> tests/unittests/tests-clif/tests-clif.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "274:     TEST_ASSERT_EQUAL_INT(exp_attrs_numof, attrs_numof);",
      "275: }",
      "277: Test *tests_clif_tests(void)",
      "278: {",
      "279:     EMB_UNIT_TESTFIXTURES(fixtures) {",
      "280:         new_TestFixture(test_clif_encode_links),",
      "282:     };",
      "284:     EMB_UNIT_TESTCALLER(clif_tests, NULL, NULL, fixtures);",
      "",
      "[Removed Lines]",
      "281:         new_TestFixture(test_clif_decode_links)",
      "",
      "[Added Lines]",
      "277: static void test_clif_get_attr_missing_value(void)",
      "278: {",
      "279:     clif_attr_t attr;",
      "280:     char *input = \";ct=\";",
      "284:     int r = clif_get_attr(input, strlen(input), &attr);",
      "285:     TEST_ASSERT_EQUAL_INT(strlen(input), r);",
      "286: }",
      "292:         new_TestFixture(test_clif_decode_links),",
      "293:         new_TestFixture(test_clif_get_attr_missing_value),",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "767e700a5f056626cb7156d4944130104893d631",
      "candidate_info": {
        "commit_hash": "767e700a5f056626cb7156d4944130104893d631",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/767e700a5f056626cb7156d4944130104893d631",
        "files": [
          "sys/clif/clif.c",
          "tests/unittests/tests-clif/tests-clif.c"
        ],
        "message": "clif: After incrementing pos, make sure it is still in bounds\n\nWhile the for-loop condition does contain a bounds check, the pointer is\nindependently increment in the for-loop body. This increment therefore\nrequires a separate bounds check. Otherwise, the parsing loop may access\ndata outside the given buffer boundaries.",
        "before_after_code_files": [
          "sys/clif/clif.c||sys/clif/clif.c",
          "tests/unittests/tests-clif/tests-clif.c||tests/unittests/tests-clif/tests-clif.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/15945"
        ],
        "olp_code_files": {
          "patch": [
            "sys/clif/clif.c||sys/clif/clif.c",
            "tests/unittests/tests-clif/tests-clif.c||tests/unittests/tests-clif/tests-clif.c"
          ],
          "candidate": [
            "sys/clif/clif.c||sys/clif/clif.c",
            "tests/unittests/tests-clif/tests-clif.c||tests/unittests/tests-clif/tests-clif.c"
          ]
        }
      },
      "candidate_diff": {
        "sys/clif/clif.c||sys/clif/clif.c": [
          "File: sys/clif/clif.c -> sys/clif/clif.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "278:             attr->key_len = pos - attr->key;",
          "280:             pos++;",
          "282:                 quoted = true;",
          "283:                 pos++;",
          "284:             }",
          "",
          "[Removed Lines]",
          "281:             if (*pos == '\"') {",
          "",
          "[Added Lines]",
          "281:             if (pos == end) {",
          "282:                 break;",
          "283:             }",
          "284:             else if (*pos == '\"') {",
          "",
          "---------------"
        ],
        "tests/unittests/tests-clif/tests-clif.c||tests/unittests/tests-clif/tests-clif.c": [
          "File: tests/unittests/tests-clif/tests-clif.c -> tests/unittests/tests-clif/tests-clif.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "274:     TEST_ASSERT_EQUAL_INT(exp_attrs_numof, attrs_numof);",
          "275: }",
          "277: Test *tests_clif_tests(void)",
          "278: {",
          "279:     EMB_UNIT_TESTFIXTURES(fixtures) {",
          "280:         new_TestFixture(test_clif_encode_links),",
          "282:     };",
          "284:     EMB_UNIT_TESTCALLER(clif_tests, NULL, NULL, fixtures);",
          "",
          "[Removed Lines]",
          "281:         new_TestFixture(test_clif_decode_links)",
          "",
          "[Added Lines]",
          "277: static void test_clif_get_attr_missing_value(void)",
          "278: {",
          "279:     clif_attr_t attr;",
          "280:     char *input = \";ct=\";",
          "284:     int r = clif_get_attr(input, strlen(input), &attr);",
          "285:     TEST_ASSERT_EQUAL_INT(strlen(input), r);",
          "286: }",
          "292:         new_TestFixture(test_clif_decode_links),",
          "293:         new_TestFixture(test_clif_get_attr_missing_value),",
          "",
          "---------------"
        ]
      }
    }
  ]
}