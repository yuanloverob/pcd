{
  "cve_id": "CVE-2024-34702",
  "cve_desc": "Botan is a C++ cryptography library. X.509 certificates can identify elliptic curves using either an object identifier or using explicit encoding of the parameters.  Prior to 3.5.0 and 2.19.5, checking name constraints in X.509 certificates is quadratic in the number of names and name constraints. An attacker who presented a certificate chain which contained a very large number of names in the SubjectAlternativeName, signed by a CA certificate which contained a large number of name constraints, could cause a denial of service. The problem has been addressed in Botan 3.5.0 and a partial backport has also been applied and is included in Botan 2.19.5.",
  "repo": "randombit/botan",
  "patch_hash": "ff704b12e6fa351aaedd07bffdc91722e84586b8",
  "patch_info": {
    "commit_hash": "ff704b12e6fa351aaedd07bffdc91722e84586b8",
    "repo": "randombit/botan",
    "commit_url": "https://github.com/randombit/botan/commit/ff704b12e6fa351aaedd07bffdc91722e84586b8",
    "files": [
      "src/lib/x509/name_constraint.cpp",
      "src/lib/x509/pkix_types.h",
      "src/scripts/run_limbo_tests.py"
    ],
    "message": "Merge pull request #4186 from randombit/jack/fix-nc-dos\n\nAddress denial of service in name constraints processing",
    "before_after_code_files": [
      "src/lib/x509/name_constraint.cpp||src/lib/x509/name_constraint.cpp",
      "src/lib/x509/pkix_types.h||src/lib/x509/pkix_types.h",
      "src/scripts/run_limbo_tests.py||src/scripts/run_limbo_tests.py"
    ]
  },
  "patch_diff": {
    "src/lib/x509/name_constraint.cpp||src/lib/x509/name_constraint.cpp": [
      "File: src/lib/x509/name_constraint.cpp -> src/lib/x509/name_constraint.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "11: #include <botan/ber_dec.h>",
      "12: #include <botan/x509cert.h>",
      "13: #include <botan/internal/fmt.h>",
      "14: #include <botan/internal/loadstor.h>",
      "15: #include <botan/internal/parsing.h>",
      "16: #include <functional>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14: #include <botan/internal/int_utils.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "296:    }",
      "297: }",
      "299: bool NameConstraints::is_permitted(const X509_Certificate& cert, bool reject_unknown) const {",
      "300:    if(permitted().empty()) {",
      "301:       return true;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "300: namespace {",
      "302: bool exceeds_limit(size_t dn_count, size_t alt_count, size_t constraint_count) {",
      "307:    constexpr size_t MAX_NC_CHECKS = (1 << 20);",
      "309:    if(auto names = checked_add(dn_count, alt_count)) {",
      "310:       if(auto product = checked_mul(*names, constraint_count)) {",
      "311:          if(*product < MAX_NC_CHECKS) {",
      "312:             return false;",
      "313:          }",
      "314:       }",
      "315:    }",
      "316:    return true;",
      "317: }",
      "319: }  // namespace",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "304:    const auto& alt_name = cert.subject_alt_name();",
      "306:    if(reject_unknown) {",
      "307:       if(m_permitted_name_types.contains(GeneralName::NameType::Other) && !alt_name.other_names().empty()) {",
      "308:          return false;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "328:    if(exceeds_limit(cert.subject_dn().count(), alt_name.count(), permitted().size())) {",
      "329:       return false;",
      "330:    }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "417:    const auto& alt_name = cert.subject_alt_name();",
      "419:    if(reject_unknown) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "445:    if(exceeds_limit(cert.subject_dn().count(), alt_name.count(), excluded().size())) {",
      "446:       return true;",
      "447:    }",
      "",
      "---------------"
    ],
    "src/lib/x509/pkix_types.h||src/lib/x509/pkix_types.h": [
      "File: src/lib/x509/pkix_types.h -> src/lib/x509/pkix_types.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "67:       bool empty() const { return m_rdn.empty(); }",
      "69:       std::string to_string() const;",
      "71:       const std::vector<std::pair<OID, ASN1_String>>& dn_info() const { return m_rdn; }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "69:       size_t count() const { return m_rdn.size(); }",
      "",
      "---------------"
    ],
    "src/scripts/run_limbo_tests.py||src/scripts/run_limbo_tests.py": [
      "File: src/scripts/run_limbo_tests.py -> src/scripts/run_limbo_tests.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "50:     'webpki::san::wildcard-embedded-leftmost-san': 'CABF rule not RFC 5280',",
      "51:     'webpki::ca-as-leaf': 'Not applicable outside of webpki',",
      "57:     'webpki::explicit-curve': 'Deprecated but not gone yet',",
      "58:     'rfc5280::nc::invalid-dnsname-leading-period': 'Common extension',",
      "",
      "[Removed Lines]",
      "53:     'pathological::nc-dos-1': 'Todo',",
      "54:     'pathological::nc-dos-2': 'Todo',",
      "55:     'pathological::nc-dos-3': 'Todo',",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "655c2be095325492f88ea0778b155e7bcedee3b3",
      "candidate_info": {
        "commit_hash": "655c2be095325492f88ea0778b155e7bcedee3b3",
        "repo": "randombit/botan",
        "commit_url": "https://github.com/randombit/botan/commit/655c2be095325492f88ea0778b155e7bcedee3b3",
        "files": [
          "src/lib/x509/name_constraint.cpp",
          "src/lib/x509/pkix_types.h",
          "src/scripts/run_limbo_tests.py"
        ],
        "message": "Address denial of service in name constraints processing\n\nChecking a name constraint is quadratic to the number of names and\nconstraints. Place a hard limit on the total number of comparisons.\n\nThis issue was discovered and reported by Bing Shi.\n\nCVE-2024-34702",
        "before_after_code_files": [
          "src/lib/x509/name_constraint.cpp||src/lib/x509/name_constraint.cpp",
          "src/lib/x509/pkix_types.h||src/lib/x509/pkix_types.h",
          "src/scripts/run_limbo_tests.py||src/scripts/run_limbo_tests.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/randombit/botan/pull/4186"
        ],
        "olp_code_files": {
          "patch": [
            "src/lib/x509/name_constraint.cpp||src/lib/x509/name_constraint.cpp",
            "src/lib/x509/pkix_types.h||src/lib/x509/pkix_types.h",
            "src/scripts/run_limbo_tests.py||src/scripts/run_limbo_tests.py"
          ],
          "candidate": [
            "src/lib/x509/name_constraint.cpp||src/lib/x509/name_constraint.cpp",
            "src/lib/x509/pkix_types.h||src/lib/x509/pkix_types.h",
            "src/scripts/run_limbo_tests.py||src/scripts/run_limbo_tests.py"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/x509/name_constraint.cpp||src/lib/x509/name_constraint.cpp": [
          "File: src/lib/x509/name_constraint.cpp -> src/lib/x509/name_constraint.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: #include <botan/ber_dec.h>",
          "12: #include <botan/x509cert.h>",
          "13: #include <botan/internal/fmt.h>",
          "14: #include <botan/internal/loadstor.h>",
          "15: #include <botan/internal/parsing.h>",
          "16: #include <functional>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: #include <botan/internal/int_utils.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "296:    }",
          "297: }",
          "299: bool NameConstraints::is_permitted(const X509_Certificate& cert, bool reject_unknown) const {",
          "300:    if(permitted().empty()) {",
          "301:       return true;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "300: namespace {",
          "302: bool exceeds_limit(size_t dn_count, size_t alt_count, size_t constraint_count) {",
          "307:    constexpr size_t MAX_NC_CHECKS = (1 << 20);",
          "309:    if(auto names = checked_add(dn_count, alt_count)) {",
          "310:       if(auto product = checked_mul(*names, constraint_count)) {",
          "311:          if(*product < MAX_NC_CHECKS) {",
          "312:             return false;",
          "313:          }",
          "314:       }",
          "315:    }",
          "316:    return true;",
          "317: }",
          "319: }  // namespace",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "304:    const auto& alt_name = cert.subject_alt_name();",
          "306:    if(reject_unknown) {",
          "307:       if(m_permitted_name_types.contains(GeneralName::NameType::Other) && !alt_name.other_names().empty()) {",
          "308:          return false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "328:    if(exceeds_limit(cert.subject_dn().count(), alt_name.count(), permitted().size())) {",
          "329:       return false;",
          "330:    }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "417:    const auto& alt_name = cert.subject_alt_name();",
          "419:    if(reject_unknown) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "445:    if(exceeds_limit(cert.subject_dn().count(), alt_name.count(), excluded().size())) {",
          "446:       return true;",
          "447:    }",
          "",
          "---------------"
        ],
        "src/lib/x509/pkix_types.h||src/lib/x509/pkix_types.h": [
          "File: src/lib/x509/pkix_types.h -> src/lib/x509/pkix_types.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:       bool empty() const { return m_rdn.empty(); }",
          "69:       std::string to_string() const;",
          "71:       const std::vector<std::pair<OID, ASN1_String>>& dn_info() const { return m_rdn; }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "69:       size_t count() const { return m_rdn.size(); }",
          "",
          "---------------"
        ],
        "src/scripts/run_limbo_tests.py||src/scripts/run_limbo_tests.py": [
          "File: src/scripts/run_limbo_tests.py -> src/scripts/run_limbo_tests.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:     'webpki::san::wildcard-embedded-leftmost-san': 'CABF rule not RFC 5280',",
          "51:     'webpki::ca-as-leaf': 'Not applicable outside of webpki',",
          "57:     'webpki::explicit-curve': 'Deprecated but not gone yet',",
          "58:     'rfc5280::nc::invalid-dnsname-leading-period': 'Common extension',",
          "",
          "[Removed Lines]",
          "53:     'pathological::nc-dos-1': 'Todo',",
          "54:     'pathological::nc-dos-2': 'Todo',",
          "55:     'pathological::nc-dos-3': 'Todo',",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}