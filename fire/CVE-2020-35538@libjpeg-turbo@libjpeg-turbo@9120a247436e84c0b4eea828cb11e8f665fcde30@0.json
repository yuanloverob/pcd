{
  "cve_id": "CVE-2020-35538",
  "cve_desc": "A crafted input file could cause a null pointer dereference in jcopy_sample_rows() when processed by libjpeg-turbo.",
  "repo": "libjpeg-turbo/libjpeg-turbo",
  "patch_hash": "9120a247436e84c0b4eea828cb11e8f665fcde30",
  "patch_info": {
    "commit_hash": "9120a247436e84c0b4eea828cb11e8f665fcde30",
    "repo": "libjpeg-turbo/libjpeg-turbo",
    "commit_url": "https://github.com/libjpeg-turbo/libjpeg-turbo/commit/9120a247436e84c0b4eea828cb11e8f665fcde30",
    "files": [
      "ChangeLog.md",
      "jdapistd.c",
      "jdmerge.c",
      "jdmerge.h",
      "jdmrg565.c",
      "jdmrgext.c"
    ],
    "message": "Fix jpeg_skip_scanlines() segfault w/merged upsamp\n\nThe additional segfault mentioned in #244 was due to the fact that\nthe merged upsamplers use a different private structure than the\nnon-merged upsamplers.  jpeg_skip_scanlines() was assuming the latter, so\nwhen merged upsampling was enabled, jpeg_skip_scanlines() clobbered one\nof the IDCT method pointers in the merged upsampler's private structure.\n\nFor reasons unknown, the test image in #441 did not encounter this\nsegfault (too small?), but it encountered an issue similar to the one\nfixed in 5bc43c7821df982f65aa1c738f67fbf7cba8bd69, whereby it was\nnecessary to set up a dummy postprocessing function in\nread_and_discard_scanlines() when merged upsampling was enabled.\nFailing to do so caused either a segfault in merged_2v_upsample() (due\nto a NULL pointer being passed to jcopy_sample_rows()) or an error\n(\"Corrupt JPEG data: premature end of data segment\"), depending on the\nnumber of scanlines skipped and whether the first scanline skipped was\nan odd- or even-numbered row.\n\nFixes #441\nFixes #244 (for real this time)",
    "before_after_code_files": [
      "jdapistd.c||jdapistd.c",
      "jdmerge.c||jdmerge.c",
      "jdmerge.h||jdmerge.h",
      "jdmrg565.c||jdmrg565.c",
      "jdmrgext.c||jdmrgext.c"
    ]
  },
  "patch_diff": {
    "jdapistd.c||jdapistd.c": [
      "File: jdapistd.c -> jdapistd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "21: #include \"jinclude.h\"",
      "22: #include \"jdmainct.h\"",
      "23: #include \"jdcoefct.h\"",
      "24: #include \"jdsample.h\"",
      "25: #include \"jmemsys.h\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "24: #include \"jdmaster.h\"",
      "25: #include \"jdmerge.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "304: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "310: LOCAL(void)",
      "311: noop_post_process (j_decompress_ptr cinfo, JSAMPIMAGE input_buf,",
      "312:                    JDIMENSION *in_row_group_ctr,",
      "313:                    JDIMENSION in_row_groups_avail, JSAMPARRAY output_buf,",
      "314:                    JDIMENSION *out_row_ctr, JDIMENSION out_rows_avail)",
      "315: {",
      "316: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "316: read_and_discard_scanlines(j_decompress_ptr cinfo, JDIMENSION num_lines)",
      "317: {",
      "318:   JDIMENSION n;",
      "319:   void (*color_convert) (j_decompress_ptr cinfo, JSAMPIMAGE input_buf,",
      "320:                          JDIMENSION input_row, JSAMPARRAY output_buf,",
      "321:                          int num_rows) = NULL;",
      "322:   void (*color_quantize) (j_decompress_ptr cinfo, JSAMPARRAY input_buf,",
      "323:                           JSAMPARRAY output_buf, int num_rows) = NULL;",
      "325:   if (cinfo->cconvert && cinfo->cconvert->color_convert) {",
      "326:     color_convert = cinfo->cconvert->color_convert;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "331:   my_master_ptr master = (my_master_ptr)cinfo->master;",
      "337:   void (*post_process_data) (j_decompress_ptr cinfo, JSAMPIMAGE input_buf,",
      "338:                              JDIMENSION *in_row_group_ctr,",
      "339:                              JDIMENSION in_row_groups_avail,",
      "340:                              JSAMPARRAY output_buf, JDIMENSION *out_row_ctr,",
      "341:                              JDIMENSION out_rows_avail) = NULL;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "332:     cinfo->cquantize->color_quantize = noop_quantize;",
      "333:   }",
      "335:   for (n = 0; n < num_lines; n++)",
      "336:     jpeg_read_scanlines(cinfo, NULL, 1);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "353:   if (master->using_merged_upsample && cinfo->post &&",
      "354:       cinfo->post->post_process_data) {",
      "355:     post_process_data = cinfo->post->post_process_data;",
      "356:     cinfo->post->post_process_data = noop_post_process;",
      "357:   }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "341:   if (color_quantize)",
      "342:     cinfo->cquantize->color_quantize = color_quantize;",
      "343: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "368:   if (post_process_data)",
      "369:     cinfo->post->post_process_data = post_process_data;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "382: {",
      "383:   my_main_ptr main_ptr = (my_main_ptr)cinfo->main;",
      "384:   my_coef_ptr coef = (my_coef_ptr)cinfo->coef;",
      "386:   JDIMENSION i, x;",
      "387:   int y;",
      "388:   JDIMENSION lines_per_iMCU_row, lines_left_in_iMCU_row, lines_after_iMCU_row;",
      "",
      "[Removed Lines]",
      "385:   my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
      "",
      "[Added Lines]",
      "412:   my_master_ptr master = (my_master_ptr)cinfo->master;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "445:     main_ptr->buffer_full = FALSE;",
      "446:     main_ptr->rowgroup_ctr = 0;",
      "447:     main_ptr->context_state = CTX_PREPARE_FOR_IMCU;",
      "450:   }",
      "",
      "[Removed Lines]",
      "448:     upsample->next_row_out = cinfo->max_v_samp_factor;",
      "449:     upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
      "",
      "[Added Lines]",
      "475:     if (master->using_merged_upsample) {",
      "476:       my_merged_upsample_ptr upsample =",
      "477:         (my_merged_upsample_ptr)cinfo->upsample;",
      "478:       upsample->spare_full = FALSE;",
      "479:       upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
      "480:     } else {",
      "481:       my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
      "482:       upsample->next_row_out = cinfo->max_v_samp_factor;",
      "483:       upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
      "484:     }",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "458:       cinfo->output_scanline += lines_left_in_iMCU_row;",
      "459:       main_ptr->buffer_full = FALSE;",
      "460:       main_ptr->rowgroup_ctr = 0;",
      "463:     }",
      "464:   }",
      "",
      "[Removed Lines]",
      "461:       upsample->next_row_out = cinfo->max_v_samp_factor;",
      "462:       upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
      "",
      "[Added Lines]",
      "496:       if (master->using_merged_upsample) {",
      "497:         my_merged_upsample_ptr upsample =",
      "498:           (my_merged_upsample_ptr)cinfo->upsample;",
      "499:         upsample->spare_full = FALSE;",
      "500:         upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
      "501:       } else {",
      "502:         my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
      "503:         upsample->next_row_out = cinfo->max_v_samp_factor;",
      "504:         upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
      "505:       }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "494:       cinfo->output_iMCU_row += lines_to_skip / lines_per_iMCU_row;",
      "495:       increment_simple_rowgroup_ctr(cinfo, lines_to_read);",
      "496:     }",
      "498:     return num_lines;",
      "499:   }",
      "",
      "[Removed Lines]",
      "497:     upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
      "",
      "[Added Lines]",
      "540:     if (master->using_merged_upsample) {",
      "541:       my_merged_upsample_ptr upsample =",
      "542:         (my_merged_upsample_ptr)cinfo->upsample;",
      "543:       upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
      "544:     } else {",
      "545:       my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
      "546:       upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
      "547:     }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "541:   return num_lines;",
      "",
      "[Removed Lines]",
      "538:   upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
      "",
      "[Added Lines]",
      "588:   if (master->using_merged_upsample) {",
      "589:     my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;",
      "590:     upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
      "591:   } else {",
      "592:     my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
      "593:     upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
      "594:   }",
      "",
      "---------------"
    ],
    "jdmerge.c||jdmerge.c": [
      "File: jdmerge.c -> jdmerge.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "40: #define JPEG_INTERNALS",
      "41: #include \"jinclude.h\"",
      "42: #include \"jpeglib.h\"",
      "43: #include \"jsimd.h\"",
      "44: #include \"jconfigint.h\"",
      "46: #ifdef UPSAMPLE_MERGING_SUPPORTED",
      "79: #define ONE_HALF        ((JLONG)1 << (SCALEBITS - 1))",
      "80: #define FIX(x)          ((JLONG)((x) * (1L << SCALEBITS) + 0.5))",
      "",
      "[Removed Lines]",
      "51: typedef struct {",
      "55:   void (*upmethod) (j_decompress_ptr cinfo, JSAMPIMAGE input_buf,",
      "56:                     JDIMENSION in_row_group_ctr, JSAMPARRAY output_buf);",
      "69:   JSAMPROW spare_row;",
      "74: } my_upsampler;",
      "76: typedef my_upsampler *my_upsample_ptr;",
      "",
      "[Added Lines]",
      "43: #include \"jdmerge.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "189: LOCAL(void)",
      "190: build_ycc_rgb_table(j_decompress_ptr cinfo)",
      "191: {",
      "193:   int i;",
      "194:   JLONG x;",
      "195:   SHIFT_TEMPS",
      "",
      "[Removed Lines]",
      "192:   my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
      "",
      "[Added Lines]",
      "164:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "232: METHODDEF(void)",
      "233: start_pass_merged_upsample(j_decompress_ptr cinfo)",
      "234: {",
      "238:   upsample->spare_full = FALSE;",
      "",
      "[Removed Lines]",
      "235:   my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
      "",
      "[Added Lines]",
      "207:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "254:                    JDIMENSION *out_row_ctr, JDIMENSION out_rows_avail)",
      "256: {",
      "258:   JSAMPROW work_ptrs[2];",
      "",
      "[Removed Lines]",
      "257:   my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
      "",
      "[Added Lines]",
      "229:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "305:                    JDIMENSION *out_row_ctr, JDIMENSION out_rows_avail)",
      "307: {",
      "311:   (*upsample->upmethod) (cinfo, input_buf, *in_row_group_ctr,",
      "",
      "[Removed Lines]",
      "308:   my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
      "",
      "[Added Lines]",
      "280:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "566: GLOBAL(void)",
      "567: jinit_merged_upsampler(j_decompress_ptr cinfo)",
      "568: {",
      "572:     (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_IMAGE,",
      "574:   cinfo->upsample = (struct jpeg_upsampler *)upsample;",
      "575:   upsample->pub.start_pass = start_pass_merged_upsample;",
      "576:   upsample->pub.need_context_rows = FALSE;",
      "",
      "[Removed Lines]",
      "569:   my_upsample_ptr upsample;",
      "571:   upsample = (my_upsample_ptr)",
      "573:                                 sizeof(my_upsampler));",
      "",
      "[Added Lines]",
      "541:   my_merged_upsample_ptr upsample;",
      "543:   upsample = (my_merged_upsample_ptr)",
      "545:                                 sizeof(my_merged_upsampler));",
      "",
      "---------------"
    ],
    "jdmerge.h||jdmerge.h": [
      "File: jdmerge.h -> jdmerge.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12: #define JPEG_INTERNALS",
      "13: #include \"jpeglib.h\"",
      "15: #ifdef UPSAMPLE_MERGING_SUPPORTED",
      "20: typedef struct {",
      "24:   void (*upmethod) (j_decompress_ptr cinfo, JSAMPIMAGE input_buf,",
      "25:                     JDIMENSION in_row_group_ctr, JSAMPARRAY output_buf);",
      "38:   JSAMPROW spare_row;",
      "43: } my_merged_upsampler;",
      "45: typedef my_merged_upsampler *my_merged_upsample_ptr;",
      "",
      "---------------"
    ],
    "jdmrg565.c||jdmrg565.c": [
      "File: jdmrg565.c -> jdmrg565.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "19:                                   JDIMENSION in_row_group_ctr,",
      "20:                                   JSAMPARRAY output_buf)",
      "21: {",
      "23:   register int y, cred, cgreen, cblue;",
      "24:   int cb, cr;",
      "25:   register JSAMPROW outptr;",
      "",
      "[Removed Lines]",
      "22:   my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
      "",
      "[Added Lines]",
      "22:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "90:                                    JDIMENSION in_row_group_ctr,",
      "91:                                    JSAMPARRAY output_buf)",
      "92: {",
      "94:   register int y, cred, cgreen, cblue;",
      "95:   int cb, cr;",
      "96:   register JSAMPROW outptr;",
      "",
      "[Removed Lines]",
      "93:   my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
      "",
      "[Added Lines]",
      "93:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "163:                                   JDIMENSION in_row_group_ctr,",
      "164:                                   JSAMPARRAY output_buf)",
      "165: {",
      "167:   register int y, cred, cgreen, cblue;",
      "168:   int cb, cr;",
      "169:   register JSAMPROW outptr0, outptr1;",
      "",
      "[Removed Lines]",
      "166:   my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
      "",
      "[Added Lines]",
      "166:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "259:                                    JDIMENSION in_row_group_ctr,",
      "260:                                    JSAMPARRAY output_buf)",
      "261: {",
      "263:   register int y, cred, cgreen, cblue;",
      "264:   int cb, cr;",
      "265:   register JSAMPROW outptr0, outptr1;",
      "",
      "[Removed Lines]",
      "262:   my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
      "",
      "[Added Lines]",
      "262:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;",
      "",
      "---------------"
    ],
    "jdmrgext.c||jdmrgext.c": [
      "File: jdmrgext.c -> jdmrgext.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "25:                               JDIMENSION in_row_group_ctr,",
      "26:                               JSAMPARRAY output_buf)",
      "27: {",
      "29:   register int y, cred, cgreen, cblue;",
      "30:   int cb, cr;",
      "31:   register JSAMPROW outptr;",
      "",
      "[Removed Lines]",
      "28:   my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
      "",
      "[Added Lines]",
      "28:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "97:                               JDIMENSION in_row_group_ctr,",
      "98:                               JSAMPARRAY output_buf)",
      "99: {",
      "101:   register int y, cred, cgreen, cblue;",
      "102:   int cb, cr;",
      "103:   register JSAMPROW outptr0, outptr1;",
      "",
      "[Removed Lines]",
      "100:   my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
      "",
      "[Added Lines]",
      "100:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a46c111d9f3642f0ef3819e7298846ccc61869e0",
      "candidate_info": {
        "commit_hash": "a46c111d9f3642f0ef3819e7298846ccc61869e0",
        "repo": "libjpeg-turbo/libjpeg-turbo",
        "commit_url": "https://github.com/libjpeg-turbo/libjpeg-turbo/commit/a46c111d9f3642f0ef3819e7298846ccc61869e0",
        "files": [
          "CMakeLists.txt",
          "ChangeLog.md",
          "croptest.in",
          "jdapistd.c",
          "libjpeg.txt"
        ],
        "message": "Further jpeg_skip_scanlines() fixes\n\n- Introduce a partial image decompression regression test script that\n  validates the correctness of jpeg_skip_scanlines() and\n  jpeg_crop_scanlines() for a variety of cropping regions and libjpeg\n  settings.\n\n  This regression test catches the following issues:\n  #182, fixed in 5bc43c7821df982f65aa1c738f67fbf7cba8bd69\n  #237, fixed in 6e95c08649794f5018608f37250026a45ead2db8\n  #244, fixed in 398c1e9acc9b4531edceb3d77da0de5744675052\n  #441, fully fixed in this commit\n\n  It does not catch the following issues:\n  #194, fixed in 773040f9d949d5f313caf7507abaf4bd5d7ffa12\n  #244 (additional segfault), fixed in\n       9120a247436e84c0b4eea828cb11e8f665fcde30\n\n- Modify the libjpeg-turbo regression test suite (make test) so that it\n  checks for the issue reported in #441 (segfault in\n  jpeg_skip_scanlines() when used with 4:2:0 merged upsampling/color\n  conversion.)\n\n- Fix issues in jpeg_skip_scanlines() that caused incorrect output with\n  h2v2 (4:2:0) merged upsampling/color conversion.  The previous commit\n  fixed the segfault reported in #441, but that was a symptom of a\n  larger problem.  Because merged 4:2:0 upsampling uses a \"spare row\"\n  buffer, it is necessary to allow the upsampler to run when skipping\n  rows (fancy 4:2:0 upsampling, which uses context rows, also requires\n  this.)  Otherwise, if skipping starts at an odd-numbered row, the\n  output image will be incorrect.\n\n- Throw an error if jpeg_skip_scanlines() is called with two-pass color\n  quantization enabled.  With two-pass color quantization, the first\n  pass occurs within jpeg_start_decompress(), so subsequent calls to\n  jpeg_skip_scanlines() interfere with the multipass state and prevent\n  the second pass from occurring during subsequent calls to\n  jpeg_read_scanlines().",
        "before_after_code_files": [
          "croptest.in||croptest.in",
          "jdapistd.c||jdapistd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "jdapistd.c||jdapistd.c"
          ],
          "candidate": [
            "jdapistd.c||jdapistd.c"
          ]
        }
      },
      "candidate_diff": {
        "croptest.in||croptest.in": [
          "File: croptest.in -> croptest.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/bin/bash",
          "3: set -u",
          "4: set -e",
          "5: trap onexit INT",
          "6: trap onexit TERM",
          "7: trap onexit EXIT",
          "9: onexit()",
          "10: {",
          "11:  if [ -d $OUTDIR ]; then",
          "12:   rm -rf $OUTDIR",
          "13:  fi",
          "14: }",
          "16: runme()",
          "17: {",
          "18:  echo \\*\\*\\* $*",
          "19:  $*",
          "20: }",
          "22: IMAGE=vgl_6548_0026a.bmp",
          "23: WIDTH=128",
          "24: HEIGHT=95",
          "25: IMGDIR=@CMAKE_CURRENT_SOURCE_DIR@/testimages",
          "26: OUTDIR=`mktemp -d /tmp/__croptest_output.XXXXXX`",
          "27: EXEDIR=@CMAKE_CURRENT_BINARY_DIR@",
          "29: if [ -d $OUTDIR ]; then",
          "30:  rm -rf $OUTDIR",
          "31: fi",
          "32: mkdir -p $OUTDIR",
          "34: exec >$EXEDIR/croptest.log",
          "36: echo \"============================================================\"",
          "37: echo \"$IMAGE ($WIDTH x $HEIGHT)\"",
          "38: echo \"============================================================\"",
          "39: echo",
          "41: for PROGARG in \"\" -progressive; do",
          "43:  cp $IMGDIR/$IMAGE $OUTDIR",
          "44:  basename=`basename $IMAGE .bmp`",
          "45:  echo \"------------------------------------------------------------\"",
          "46:  echo \"Generating test images\"",
          "47:  echo \"------------------------------------------------------------\"",
          "48:  echo",
          "49:  runme $EXEDIR/cjpeg $PROGARG -grayscale -outfile $OUTDIR/${basename}_GRAY.jpg $IMGDIR/${basename}.bmp",
          "50:  runme $EXEDIR/cjpeg $PROGARG -sample 2x2 -outfile $OUTDIR/${basename}_420.jpg $IMGDIR/${basename}.bmp",
          "51:  runme $EXEDIR/cjpeg $PROGARG -sample 2x1 -outfile $OUTDIR/${basename}_422.jpg $IMGDIR/${basename}.bmp",
          "52:  runme $EXEDIR/cjpeg $PROGARG -sample 1x2 -outfile $OUTDIR/${basename}_440.jpg $IMGDIR/${basename}.bmp",
          "53:  runme $EXEDIR/cjpeg $PROGARG -sample 1x1 -outfile $OUTDIR/${basename}_444.jpg $IMGDIR/${basename}.bmp",
          "54:  echo",
          "56:  for NSARG in \"\" -nosmooth; do",
          "58:   for COLORSARG in \"\" \"-colors 256 -dither none -onepass\"; do",
          "60:    for Y in {0..16}; do",
          "62:     for H in {1..16}; do",
          "64:      X=$(( (Y*16)%128 ))",
          "65:      W=$(( WIDTH-X-7 ))",
          "66:      if [ $Y -le 15 ]; then",
          "67:       CROPSPEC=\"${W}x${H}+${X}+${Y}\"",
          "68:      else",
          "69:       Y2=$(( HEIGHT-H ));",
          "70:       CROPSPEC=\"${W}x${H}+${X}+${Y2}\"",
          "71:      fi",
          "73:      echo \"------------------------------------------------------------\"",
          "74:      echo $PROGARG $NSARG $COLORSARG -crop $CROPSPEC",
          "75:      echo \"------------------------------------------------------------\"",
          "76:      echo",
          "77:      for samp in GRAY 420 422 440 444; do",
          "78:       $EXEDIR/djpeg $NSARG $COLORSARG -rgb -outfile $OUTDIR/${basename}_${samp}_full.ppm $OUTDIR/${basename}_${samp}.jpg",
          "79:       convert -crop $CROPSPEC $OUTDIR/${basename}_${samp}_full.ppm $OUTDIR/${basename}_${samp}_ref.ppm",
          "80:       runme $EXEDIR/djpeg $NSARG $COLORSARG -crop $CROPSPEC -rgb -outfile $OUTDIR/${basename}_${samp}.ppm $OUTDIR/${basename}_${samp}.jpg",
          "81:       runme cmp $OUTDIR/${basename}_${samp}.ppm $OUTDIR/${basename}_${samp}_ref.ppm",
          "82:      done",
          "83:      echo",
          "85:     done",
          "87:    done",
          "89:   done",
          "91:  done",
          "93: done",
          "95: echo SUCCESS!",
          "",
          "---------------"
        ],
        "jdapistd.c||jdapistd.c": [
          "File: jdapistd.c -> jdapistd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "306: }",
          "",
          "[Removed Lines]",
          "310: LOCAL(void)",
          "311: noop_post_process (j_decompress_ptr cinfo, JSAMPIMAGE input_buf,",
          "312:                    JDIMENSION *in_row_group_ctr,",
          "313:                    JDIMENSION in_row_groups_avail, JSAMPARRAY output_buf,",
          "314:                    JDIMENSION *out_row_ctr, JDIMENSION out_rows_avail)",
          "315: {",
          "316: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "329: {",
          "330:   JDIMENSION n;",
          "331:   my_master_ptr master = (my_master_ptr)cinfo->master;",
          "332:   void (*color_convert) (j_decompress_ptr cinfo, JSAMPIMAGE input_buf,",
          "333:                          JDIMENSION input_row, JSAMPARRAY output_buf,",
          "334:                          int num_rows) = NULL;",
          "335:   void (*color_quantize) (j_decompress_ptr cinfo, JSAMPARRAY input_buf,",
          "336:                           JSAMPARRAY output_buf, int num_rows) = NULL;",
          "343:   if (cinfo->cconvert && cinfo->cconvert->color_convert) {",
          "344:     color_convert = cinfo->cconvert->color_convert;",
          "",
          "[Removed Lines]",
          "337:   void (*post_process_data) (j_decompress_ptr cinfo, JSAMPIMAGE input_buf,",
          "338:                              JDIMENSION *in_row_group_ctr,",
          "339:                              JDIMENSION in_row_groups_avail,",
          "340:                              JSAMPARRAY output_buf, JDIMENSION *out_row_ctr,",
          "341:                              JDIMENSION out_rows_avail) = NULL;",
          "",
          "[Added Lines]",
          "322:   JSAMPARRAY scanlines = NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "350:     cinfo->cquantize->color_quantize = noop_quantize;",
          "351:   }",
          "357:   }",
          "359:   for (n = 0; n < num_lines; n++)",
          "362:   if (color_convert)",
          "363:     cinfo->cconvert->color_convert = color_convert;",
          "365:   if (color_quantize)",
          "366:     cinfo->cquantize->color_quantize = color_quantize;",
          "370: }",
          "",
          "[Removed Lines]",
          "353:   if (master->using_merged_upsample && cinfo->post &&",
          "354:       cinfo->post->post_process_data) {",
          "355:     post_process_data = cinfo->post->post_process_data;",
          "356:     cinfo->post->post_process_data = noop_post_process;",
          "360:     jpeg_read_scanlines(cinfo, NULL, 1);",
          "368:   if (post_process_data)",
          "369:     cinfo->post->post_process_data = post_process_data;",
          "",
          "[Added Lines]",
          "339:   if (master->using_merged_upsample && cinfo->max_v_samp_factor == 2) {",
          "340:     my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;",
          "341:     scanlines = &upsample->spare_row;",
          "345:     jpeg_read_scanlines(cinfo, scanlines, 1);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "380: {",
          "381:   JDIMENSION rows_left;",
          "382:   my_main_ptr main_ptr = (my_main_ptr)cinfo->main;",
          "385:   main_ptr->rowgroup_ctr += rows / cinfo->max_v_samp_factor;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "365:   my_master_ptr master = (my_master_ptr)cinfo->master;",
          "367:   if (master->using_merged_upsample && cinfo->max_v_samp_factor == 2) {",
          "368:     read_and_discard_scanlines(cinfo, rows);",
          "369:     return;",
          "370:   }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "410:   my_main_ptr main_ptr = (my_main_ptr)cinfo->main;",
          "411:   my_coef_ptr coef = (my_coef_ptr)cinfo->coef;",
          "412:   my_master_ptr master = (my_master_ptr)cinfo->master;",
          "413:   JDIMENSION i, x;",
          "414:   int y;",
          "415:   JDIMENSION lines_per_iMCU_row, lines_left_in_iMCU_row, lines_after_iMCU_row;",
          "416:   JDIMENSION lines_to_skip, lines_to_read;",
          "418:   if (cinfo->global_state != DSTATE_SCANNING)",
          "419:     ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "401:   my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
          "408:   if (cinfo->quantize_colors && cinfo->two_pass_quantize)",
          "409:     ERREXIT(cinfo, JERR_NOTIMPL);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "472:     main_ptr->buffer_full = FALSE;",
          "473:     main_ptr->rowgroup_ctr = 0;",
          "474:     main_ptr->context_state = CTX_PREPARE_FOR_IMCU;",
          "482:       upsample->next_row_out = cinfo->max_v_samp_factor;",
          "483:       upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "484:     }",
          "",
          "[Removed Lines]",
          "475:     if (master->using_merged_upsample) {",
          "476:       my_merged_upsample_ptr upsample =",
          "477:         (my_merged_upsample_ptr)cinfo->upsample;",
          "478:       upsample->spare_full = FALSE;",
          "479:       upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "480:     } else {",
          "481:       my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
          "",
          "[Added Lines]",
          "468:     if (!master->using_merged_upsample) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "493:       cinfo->output_scanline += lines_left_in_iMCU_row;",
          "494:       main_ptr->buffer_full = FALSE;",
          "495:       main_ptr->rowgroup_ctr = 0;",
          "503:         upsample->next_row_out = cinfo->max_v_samp_factor;",
          "504:         upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "505:       }",
          "",
          "[Removed Lines]",
          "496:       if (master->using_merged_upsample) {",
          "497:         my_merged_upsample_ptr upsample =",
          "498:           (my_merged_upsample_ptr)cinfo->upsample;",
          "499:         upsample->spare_full = FALSE;",
          "500:         upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "501:       } else {",
          "502:         my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
          "",
          "[Added Lines]",
          "483:       if (!master->using_merged_upsample) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "537:       cinfo->output_iMCU_row += lines_to_skip / lines_per_iMCU_row;",
          "538:       increment_simple_rowgroup_ctr(cinfo, lines_to_read);",
          "539:     }",
          "546:       upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "548:     return num_lines;",
          "549:   }",
          "",
          "[Removed Lines]",
          "540:     if (master->using_merged_upsample) {",
          "541:       my_merged_upsample_ptr upsample =",
          "542:         (my_merged_upsample_ptr)cinfo->upsample;",
          "543:       upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "544:     } else {",
          "545:       my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
          "547:     }",
          "",
          "[Added Lines]",
          "521:     if (!master->using_merged_upsample)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "590:     upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "597:   return num_lines;",
          "",
          "[Removed Lines]",
          "588:   if (master->using_merged_upsample) {",
          "589:     my_merged_upsample_ptr upsample = (my_merged_upsample_ptr)cinfo->upsample;",
          "591:   } else {",
          "592:     my_upsample_ptr upsample = (my_upsample_ptr)cinfo->upsample;",
          "593:     upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "594:   }",
          "",
          "[Added Lines]",
          "563:   if (!master->using_merged_upsample)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7bc738b0fc533365a45d0db3aacfdb8395f335dd",
      "candidate_info": {
        "commit_hash": "7bc738b0fc533365a45d0db3aacfdb8395f335dd",
        "repo": "libjpeg-turbo/libjpeg-turbo",
        "commit_url": "https://github.com/libjpeg-turbo/libjpeg-turbo/commit/7bc738b0fc533365a45d0db3aacfdb8395f335dd",
        "files": [
          "ChangeLog.md",
          "jdapistd.c",
          "jdmerge.c",
          "jdmerge.h",
          "jdmrg565.c",
          "jdmrgext.c"
        ],
        "message": "Fix jpeg_skip_scanlines() segfault w/merged upsamp\n\nThe additional segfault mentioned in #244 was due to the fact that\nthe merged upsamplers use a different private structure than the\nnon-merged upsamplers.  jpeg_skip_scanlines() was assuming the latter, so\nwhen merged upsampling was enabled, jpeg_skip_scanlines() clobbered one\nof the IDCT method pointers in the merged upsampler's private structure.\n\nFor reasons unknown, the test image in #441 did not encounter this\nsegfault (too small?), but it encountered an issue similar to the one\nfixed in 5bc43c7821df982f65aa1c738f67fbf7cba8bd69, whereby it was\nnecessary to set up a dummy postprocessing function in\nread_and_discard_scanlines() when merged upsampling was enabled.\nFailing to do so caused either a segfault in merged_2v_upsample() (due\nto a NULL pointer being passed to jcopy_sample_rows()) or an error\n(\"Corrupt JPEG data: premature end of data segment\"), depending on the\nnumber of scanlines skipped and whether the first scanline skipped was\nan odd- or even-numbered row.\n\nFixes #441\nFixes #244 (for real this time)",
        "before_after_code_files": [
          "jdapistd.c||jdapistd.c",
          "jdmerge.c||jdmerge.c",
          "jdmerge.h||jdmerge.h",
          "jdmrg565.c||jdmrg565.c",
          "jdmrgext.c||jdmrgext.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "jdapistd.c||jdapistd.c",
            "jdmerge.c||jdmerge.c",
            "jdmerge.h||jdmerge.h",
            "jdmrg565.c||jdmrg565.c",
            "jdmrgext.c||jdmrgext.c"
          ],
          "candidate": [
            "jdapistd.c||jdapistd.c",
            "jdmerge.c||jdmerge.c",
            "jdmerge.h||jdmerge.h",
            "jdmrg565.c||jdmrg565.c",
            "jdmrgext.c||jdmrgext.c"
          ]
        }
      },
      "candidate_diff": {
        "jdapistd.c||jdapistd.c": [
          "File: jdapistd.c -> jdapistd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: #include \"jinclude.h\"",
          "22: #include \"jdmainct.h\"",
          "23: #include \"jdcoefct.h\"",
          "24: #include \"jdsample.h\"",
          "25: #include \"jmemsys.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #include \"jdmaster.h\"",
          "25: #include \"jdmerge.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "306: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "312: LOCAL(void)",
          "313: noop_post_process (j_decompress_ptr cinfo, JSAMPIMAGE input_buf,",
          "314:                    JDIMENSION *in_row_group_ctr,",
          "315:                    JDIMENSION in_row_groups_avail, JSAMPARRAY output_buf,",
          "316:                    JDIMENSION *out_row_ctr, JDIMENSION out_rows_avail)",
          "317: {",
          "318: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "318: read_and_discard_scanlines (j_decompress_ptr cinfo, JDIMENSION num_lines)",
          "319: {",
          "320:   JDIMENSION n;",
          "321:   void (*color_convert) (j_decompress_ptr cinfo, JSAMPIMAGE input_buf,",
          "322:                          JDIMENSION input_row, JSAMPARRAY output_buf,",
          "323:                          int num_rows) = NULL;",
          "324:   void (*color_quantize) (j_decompress_ptr cinfo, JSAMPARRAY input_buf,",
          "325:                           JSAMPARRAY output_buf, int num_rows) = NULL;",
          "327:   if (cinfo->cconvert && cinfo->cconvert->color_convert) {",
          "328:     color_convert = cinfo->cconvert->color_convert;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "333:   my_master_ptr master = (my_master_ptr) cinfo->master;",
          "339:   void (*post_process_data) (j_decompress_ptr cinfo, JSAMPIMAGE input_buf,",
          "340:                              JDIMENSION *in_row_group_ctr,",
          "341:                              JDIMENSION in_row_groups_avail,",
          "342:                              JSAMPARRAY output_buf, JDIMENSION *out_row_ctr,",
          "343:                              JDIMENSION out_rows_avail) = NULL;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "334:     cinfo->cquantize->color_quantize = noop_quantize;",
          "335:   }",
          "337:   for (n = 0; n < num_lines; n++)",
          "338:     jpeg_read_scanlines(cinfo, NULL, 1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "355:   if (master->using_merged_upsample && cinfo->post &&",
          "356:       cinfo->post->post_process_data) {",
          "357:     post_process_data = cinfo->post->post_process_data;",
          "358:     cinfo->post->post_process_data = noop_post_process;",
          "359:   }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "343:   if (color_quantize)",
          "344:     cinfo->cquantize->color_quantize = color_quantize;",
          "345: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "370:   if (post_process_data)",
          "371:     cinfo->post->post_process_data = post_process_data;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "384: {",
          "385:   my_main_ptr main_ptr = (my_main_ptr) cinfo->main;",
          "386:   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;",
          "388:   JDIMENSION i, x;",
          "389:   int y;",
          "390:   JDIMENSION lines_per_iMCU_row, lines_left_in_iMCU_row, lines_after_iMCU_row;",
          "",
          "[Removed Lines]",
          "387:   my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;",
          "",
          "[Added Lines]",
          "414:   my_master_ptr master = (my_master_ptr) cinfo->master;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "447:     main_ptr->buffer_full = FALSE;",
          "448:     main_ptr->rowgroup_ctr = 0;",
          "449:     main_ptr->context_state = CTX_PREPARE_FOR_IMCU;",
          "452:   }",
          "",
          "[Removed Lines]",
          "450:     upsample->next_row_out = cinfo->max_v_samp_factor;",
          "451:     upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "",
          "[Added Lines]",
          "477:     if (master->using_merged_upsample) {",
          "478:       my_merged_upsample_ptr upsample =",
          "479:         (my_merged_upsample_ptr) cinfo->upsample;",
          "480:       upsample->spare_full = FALSE;",
          "481:       upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "482:     } else {",
          "483:       my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;",
          "484:       upsample->next_row_out = cinfo->max_v_samp_factor;",
          "485:       upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "486:     }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "460:       cinfo->output_scanline += lines_left_in_iMCU_row;",
          "461:       main_ptr->buffer_full = FALSE;",
          "462:       main_ptr->rowgroup_ctr = 0;",
          "465:     }",
          "466:   }",
          "",
          "[Removed Lines]",
          "463:       upsample->next_row_out = cinfo->max_v_samp_factor;",
          "464:       upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "",
          "[Added Lines]",
          "498:       if (master->using_merged_upsample) {",
          "499:         my_merged_upsample_ptr upsample =",
          "500:           (my_merged_upsample_ptr) cinfo->upsample;",
          "501:         upsample->spare_full = FALSE;",
          "502:         upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "503:       } else {",
          "504:         my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;",
          "505:         upsample->next_row_out = cinfo->max_v_samp_factor;",
          "506:         upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "507:       }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "496:       cinfo->output_iMCU_row += lines_to_skip / lines_per_iMCU_row;",
          "497:       increment_simple_rowgroup_ctr(cinfo, lines_to_read);",
          "498:     }",
          "500:     return num_lines;",
          "501:   }",
          "",
          "[Removed Lines]",
          "499:     upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "",
          "[Added Lines]",
          "542:     if (master->using_merged_upsample) {",
          "543:       my_merged_upsample_ptr upsample =",
          "544:         (my_merged_upsample_ptr) cinfo->upsample;",
          "545:       upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "546:     } else {",
          "547:       my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;",
          "548:       upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "549:     }",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "543:   return num_lines;",
          "",
          "[Removed Lines]",
          "540:   upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "",
          "[Added Lines]",
          "590:   if (master->using_merged_upsample) {",
          "591:     my_merged_upsample_ptr upsample = (my_merged_upsample_ptr) cinfo->upsample;",
          "592:     upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "593:   } else {",
          "594:     my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;",
          "595:     upsample->rows_to_go = cinfo->output_height - cinfo->output_scanline;",
          "596:   }",
          "",
          "---------------"
        ],
        "jdmerge.c||jdmerge.c": [
          "File: jdmerge.c -> jdmerge.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: #define JPEG_INTERNALS",
          "41: #include \"jinclude.h\"",
          "42: #include \"jpeglib.h\"",
          "43: #include \"jsimd.h\"",
          "44: #include \"jconfigint.h\"",
          "46: #ifdef UPSAMPLE_MERGING_SUPPORTED",
          "79: #define ONE_HALF        ((JLONG) 1 << (SCALEBITS-1))",
          "80: #define FIX(x)          ((JLONG) ((x) * (1L<<SCALEBITS) + 0.5))",
          "",
          "[Removed Lines]",
          "51: typedef struct {",
          "55:   void (*upmethod) (j_decompress_ptr cinfo, JSAMPIMAGE input_buf,",
          "56:                     JDIMENSION in_row_group_ctr, JSAMPARRAY output_buf);",
          "69:   JSAMPROW spare_row;",
          "74: } my_upsampler;",
          "76: typedef my_upsampler *my_upsample_ptr;",
          "",
          "[Added Lines]",
          "43: #include \"jdmerge.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "189: LOCAL(void)",
          "190: build_ycc_rgb_table (j_decompress_ptr cinfo)",
          "191: {",
          "193:   int i;",
          "194:   JLONG x;",
          "195:   SHIFT_TEMPS",
          "",
          "[Removed Lines]",
          "192:   my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;",
          "",
          "[Added Lines]",
          "164:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr) cinfo->upsample;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "232: METHODDEF(void)",
          "233: start_pass_merged_upsample (j_decompress_ptr cinfo)",
          "234: {",
          "238:   upsample->spare_full = FALSE;",
          "",
          "[Removed Lines]",
          "235:   my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;",
          "",
          "[Added Lines]",
          "207:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr) cinfo->upsample;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "255:                     JDIMENSION out_rows_avail)",
          "257: {",
          "259:   JSAMPROW work_ptrs[2];",
          "",
          "[Removed Lines]",
          "258:   my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;",
          "",
          "[Added Lines]",
          "230:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr) cinfo->upsample;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "307:                     JDIMENSION out_rows_avail)",
          "309: {",
          "313:   (*upsample->upmethod) (cinfo, input_buf, *in_row_group_ctr,",
          "",
          "[Removed Lines]",
          "310:   my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;",
          "",
          "[Added Lines]",
          "282:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr) cinfo->upsample;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "576: GLOBAL(void)",
          "577: jinit_merged_upsampler (j_decompress_ptr cinfo)",
          "578: {",
          "582:     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,",
          "584:   cinfo->upsample = (struct jpeg_upsampler *) upsample;",
          "585:   upsample->pub.start_pass = start_pass_merged_upsample;",
          "586:   upsample->pub.need_context_rows = FALSE;",
          "",
          "[Removed Lines]",
          "579:   my_upsample_ptr upsample;",
          "581:   upsample = (my_upsample_ptr)",
          "583:                                 sizeof(my_upsampler));",
          "",
          "[Added Lines]",
          "551:   my_merged_upsample_ptr upsample;",
          "553:   upsample = (my_merged_upsample_ptr)",
          "555:                                 sizeof(my_merged_upsampler));",
          "",
          "---------------"
        ],
        "jdmerge.h||jdmerge.h": [
          "File: jdmerge.h -> jdmerge.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: #define JPEG_INTERNALS",
          "13: #include \"jpeglib.h\"",
          "15: #ifdef UPSAMPLE_MERGING_SUPPORTED",
          "20: typedef struct {",
          "24:   void (*upmethod) (j_decompress_ptr cinfo, JSAMPIMAGE input_buf,",
          "25:                     JDIMENSION in_row_group_ctr, JSAMPARRAY output_buf);",
          "38:   JSAMPROW spare_row;",
          "43: } my_merged_upsampler;",
          "45: typedef my_merged_upsampler *my_merged_upsample_ptr;",
          "",
          "---------------"
        ],
        "jdmrg565.c||jdmrg565.c": [
          "File: jdmrg565.c -> jdmrg565.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:                                    JDIMENSION in_row_group_ctr,",
          "21:                                    JSAMPARRAY output_buf)",
          "22: {",
          "24:   register int y, cred, cgreen, cblue;",
          "25:   int cb, cr;",
          "26:   register JSAMPROW outptr;",
          "",
          "[Removed Lines]",
          "23:   my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;",
          "",
          "[Added Lines]",
          "23:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr) cinfo->upsample;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:                                     JDIMENSION in_row_group_ctr,",
          "92:                                     JSAMPARRAY output_buf)",
          "93: {",
          "95:   register int y, cred, cgreen, cblue;",
          "96:   int cb, cr;",
          "97:   register JSAMPROW outptr;",
          "",
          "[Removed Lines]",
          "94:   my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;",
          "",
          "[Added Lines]",
          "94:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr) cinfo->upsample;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "165:                                    JDIMENSION in_row_group_ctr,",
          "166:                                    JSAMPARRAY output_buf)",
          "167: {",
          "169:   register int y, cred, cgreen, cblue;",
          "170:   int cb, cr;",
          "171:   register JSAMPROW outptr0, outptr1;",
          "",
          "[Removed Lines]",
          "168:   my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;",
          "",
          "[Added Lines]",
          "168:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr) cinfo->upsample;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "261:                                     JDIMENSION in_row_group_ctr,",
          "262:                                     JSAMPARRAY output_buf)",
          "263: {",
          "265:   register int y, cred, cgreen, cblue;",
          "266:   int cb, cr;",
          "267:   register JSAMPROW outptr0, outptr1;",
          "",
          "[Removed Lines]",
          "264:   my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;",
          "",
          "[Added Lines]",
          "264:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr) cinfo->upsample;",
          "",
          "---------------"
        ],
        "jdmrgext.c||jdmrgext.c": [
          "File: jdmrgext.c -> jdmrgext.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26:                                JDIMENSION in_row_group_ctr,",
          "27:                                JSAMPARRAY output_buf)",
          "28: {",
          "30:   register int y, cred, cgreen, cblue;",
          "31:   int cb, cr;",
          "32:   register JSAMPROW outptr;",
          "",
          "[Removed Lines]",
          "29:   my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;",
          "",
          "[Added Lines]",
          "29:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr) cinfo->upsample;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "99:                                JDIMENSION in_row_group_ctr,",
          "100:                                JSAMPARRAY output_buf)",
          "101: {",
          "103:   register int y, cred, cgreen, cblue;",
          "104:   int cb, cr;",
          "105:   register JSAMPROW outptr0, outptr1;",
          "",
          "[Removed Lines]",
          "102:   my_upsample_ptr upsample = (my_upsample_ptr) cinfo->upsample;",
          "",
          "[Added Lines]",
          "102:   my_merged_upsample_ptr upsample = (my_merged_upsample_ptr) cinfo->upsample;",
          "",
          "---------------"
        ]
      }
    }
  ]
}