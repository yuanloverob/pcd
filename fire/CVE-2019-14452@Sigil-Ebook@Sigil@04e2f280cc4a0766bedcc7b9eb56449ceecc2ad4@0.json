{
  "cve_id": "CVE-2019-14452",
  "cve_desc": "Sigil before 0.9.16 is vulnerable to a directory traversal, allowing attackers to write arbitrary files via a ../ (dot dot slash) in a ZIP archive entry that is mishandled during extraction.",
  "repo": "Sigil-Ebook/Sigil",
  "patch_hash": "04e2f280cc4a0766bedcc7b9eb56449ceecc2ad4",
  "patch_info": {
    "commit_hash": "04e2f280cc4a0766bedcc7b9eb56449ceecc2ad4",
    "repo": "Sigil-Ebook/Sigil",
    "commit_url": "https://github.com/Sigil-Ebook/Sigil/commit/04e2f280cc4a0766bedcc7b9eb56449ceecc2ad4",
    "files": [
      "src/Importers/ImportEPUB.cpp"
    ],
    "message": "further harden against malicious epubs and produce error message",
    "before_after_code_files": [
      "src/Importers/ImportEPUB.cpp||src/Importers/ImportEPUB.cpp"
    ]
  },
  "patch_diff": {
    "src/Importers/ImportEPUB.cpp||src/Importers/ImportEPUB.cpp": [
      "File: src/Importers/ImportEPUB.cpp -> src/Importers/ImportEPUB.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "426:             if (!qfile_name.isEmpty()) {",
      "",
      "[Removed Lines]",
      "432:          qfile_name = qfile_name.replace(\"../\",\"\");",
      "433:                 cp437_file_name = cp437_file_name.replace(\"../\",\"\");",
      "",
      "[Added Lines]",
      "435:          QString original_path = qfile_name;",
      "436:          bool evil_or_corrupt_epub = false;",
      "438:                 if (qfile_name.contains(\"\\\\\")) evil_or_corrupt_epub = true;",
      "439:          qfile_name = \"/\" + qfile_name.replace(\"\\\\\",\"\");",
      "441:                 if (qfile_name.contains(\"/../\")) evil_or_corrupt_epub = true;",
      "442:          qfile_name = qfile_name.replace(\"/../\",\"/\");",
      "444:                 while(qfile_name.startsWith(\"/\")) {",
      "445:       qfile_name = qfile_name.remove(0,1);",
      "446:   }",
      "448:                 if (cp437_file_name.contains(\"\\\\\")) evil_or_corrupt_epub = true;",
      "449:                 cp437_file_name = \"/\" + cp437_file_name.replace(\"\\\\\",\"\");",
      "451:                 if (cp437_file_name.contains(\"/../\")) evil_or_corrupt_epub = true;",
      "452:          cp437_file_name = cp437_file_name.replace(\"/../\",\"/\");",
      "454:                 while(cp437_file_name.startsWith(\"/\")) {",
      "455:       cp437_file_name = cp437_file_name.remove(0,1);",
      "456:   }",
      "458:                 if (evil_or_corrupt_epub) {",
      "459:                     unzCloseCurrentFile(zfile);",
      "460:                     unzClose(zfile);",
      "461:                     throw (EPUBLoadParseError(QString(QObject::tr(\"Possible evil or corrupt epub file name: %1\")).arg(original_path).toStdString()));",
      "462:                 }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "369eebe936e4a8c83cc54662a3412ce8bef189e4",
      "candidate_info": {
        "commit_hash": "369eebe936e4a8c83cc54662a3412ce8bef189e4",
        "repo": "Sigil-Ebook/Sigil",
        "commit_url": "https://github.com/Sigil-Ebook/Sigil/commit/369eebe936e4a8c83cc54662a3412ce8bef189e4",
        "files": [
          "src/Importers/ImportEPUB.cpp"
        ],
        "message": "do not allow zip files to have upward relative path sections",
        "before_after_code_files": [
          "src/Importers/ImportEPUB.cpp||src/Importers/ImportEPUB.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Importers/ImportEPUB.cpp||src/Importers/ImportEPUB.cpp"
          ],
          "candidate": [
            "src/Importers/ImportEPUB.cpp||src/Importers/ImportEPUB.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/Importers/ImportEPUB.cpp||src/Importers/ImportEPUB.cpp": [
          "File: src/Importers/ImportEPUB.cpp -> src/Importers/ImportEPUB.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "426:             if (!qfile_name.isEmpty()) {",
          "429:                 QDir dir(m_ExtractedFolderPath);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "432:          qfile_name = qfile_name.replace(\"../\",\"\");",
          "433:                 cp437_file_name = cp437_file_name.replace(\"../\",\"\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}