{
  "cve_id": "CVE-2020-27507",
  "cve_desc": "The Kamailio SIP before 5.5.0 server mishandles INVITE requests with duplicated fields and overlength tag, leading to a buffer overflow that crashes the server or possibly have unspecified other impact.",
  "repo": "kamailio/kamailio",
  "patch_hash": "ada3701d22b1fd579f06b4f54fa695fa988e685f",
  "patch_info": {
    "commit_hash": "ada3701d22b1fd579f06b4f54fa695fa988e685f",
    "repo": "kamailio/kamailio",
    "commit_url": "https://github.com/kamailio/kamailio/commit/ada3701d22b1fd579f06b4f54fa695fa988e685f",
    "files": [
      "src/modules/tm/t_msgbuilder.c"
    ],
    "message": "tm: do not add duplicate headers in local requests",
    "before_after_code_files": [
      "src/modules/tm/t_msgbuilder.c||src/modules/tm/t_msgbuilder.c"
    ]
  },
  "patch_diff": {
    "src/modules/tm/t_msgbuilder.c||src/modules/tm/t_msgbuilder.c": [
      "File: src/modules/tm/t_msgbuilder.c -> src/modules/tm/t_msgbuilder.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "268:  struct hdr_field *reas1, *reas_last, *hdr;",
      "269:  int hadded = 0;",
      "270:  sr_cfgenv_t *cenv = NULL;",
      "272:  invite_buf = Trans->uac[branch].request.buffer;",
      "273:  invite_len = Trans->uac[branch].request.buffer_len;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "271:  hdr_flags_t hdr_flags = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "361:   switch(hf_type) {",
      "362:    case HDR_CSEQ_T:",
      "364:     while ((s < invite_buf_end)",
      "365:      && ((*s == ':') || (*s == ' ') || (*s == '\\t') ||",
      "366:       ((*s >= '0') && (*s <= '9')))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "365:     if(hdr_flags &  HDR_CSEQ_F) {",
      "366:      LM_DBG(\"duplicate CSeq header\\n\");",
      "367:      goto errorhdr;",
      "368:     }",
      "369:     hdr_flags |=  HDR_CSEQ_F;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "381:     break;",
      "383:    case HDR_TO_T:",
      "384:     if (to_len == 0) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "390:     if(hdr_flags &  HDR_TO_F) {",
      "391:      LM_DBG(\"duplicate To header\\n\");",
      "392:      goto errorhdr;",
      "393:     }",
      "394:     hdr_flags |=  HDR_TO_F;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "395:     break;",
      "397:    case HDR_FROM_T:",
      "398:    case HDR_CALLID_T:",
      "399:    case HDR_ROUTE_T:",
      "400:    case HDR_MAXFORWARDS_T:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "411:     if(hdr_flags &  HDR_FROM_F) {",
      "412:      LM_DBG(\"duplicate From header\\n\");",
      "413:      goto errorhdr;",
      "414:     }",
      "415:     hdr_flags |=  HDR_FROM_F;",
      "416:     s = lw_next_line(s, invite_buf_end);",
      "417:     append_str(d, s1, s - s1);",
      "418:     break;",
      "421:     if(hdr_flags &  HDR_CALLID_F) {",
      "422:      LM_DBG(\"duplicate Call-Id header\\n\");",
      "423:      goto errorhdr;",
      "424:     }",
      "425:     hdr_flags |=  HDR_CALLID_F;",
      "426:     s = lw_next_line(s, invite_buf_end);",
      "427:     append_str(d, s1, s - s1);",
      "428:     break;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "496:  LM_ERR(\"HDR_EOH_T was not found\\n\");",
      "498:  shm_free(cancel_buf);",
      "499: error:",
      "500:  LM_ERR(\"cannot build %.*s request\\n\", method_len, method);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "528: errorhdr:",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f57c900b438f3233fa1e9a9d3ca8cd383a30baa6",
      "candidate_info": {
        "commit_hash": "f57c900b438f3233fa1e9a9d3ca8cd383a30baa6",
        "repo": "kamailio/kamailio",
        "commit_url": "https://github.com/kamailio/kamailio/commit/f57c900b438f3233fa1e9a9d3ca8cd383a30baa6",
        "files": [
          "src/modules/tm/t_msgbuilder.c"
        ],
        "message": "tm: do not add duplicate headers in local requests\n\n(cherry picked from commit ada3701d22b1fd579f06b4f54fa695fa988e685f)",
        "before_after_code_files": [
          "src/modules/tm/t_msgbuilder.c||src/modules/tm/t_msgbuilder.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/modules/tm/t_msgbuilder.c||src/modules/tm/t_msgbuilder.c"
          ],
          "candidate": [
            "src/modules/tm/t_msgbuilder.c||src/modules/tm/t_msgbuilder.c"
          ]
        }
      },
      "candidate_diff": {
        "src/modules/tm/t_msgbuilder.c||src/modules/tm/t_msgbuilder.c": [
          "File: src/modules/tm/t_msgbuilder.c -> src/modules/tm/t_msgbuilder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "268:  struct hdr_field *reas1, *reas_last, *hdr;",
          "269:  int hadded = 0;",
          "270:  sr_cfgenv_t *cenv = NULL;",
          "272:  invite_buf = Trans->uac[branch].request.buffer;",
          "273:  invite_len = Trans->uac[branch].request.buffer_len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "271:  hdr_flags_t hdr_flags = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "361:   switch(hf_type) {",
          "362:    case HDR_CSEQ_T:",
          "364:     while ((s < invite_buf_end)",
          "365:      && ((*s == ':') || (*s == ' ') || (*s == '\\t') ||",
          "366:       ((*s >= '0') && (*s <= '9')))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "365:     if(hdr_flags &  HDR_CSEQ_F) {",
          "366:      LM_DBG(\"duplicate CSeq header\\n\");",
          "367:      goto errorhdr;",
          "368:     }",
          "369:     hdr_flags |=  HDR_CSEQ_F;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "381:     break;",
          "383:    case HDR_TO_T:",
          "384:     if (to_len == 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "390:     if(hdr_flags &  HDR_TO_F) {",
          "391:      LM_DBG(\"duplicate To header\\n\");",
          "392:      goto errorhdr;",
          "393:     }",
          "394:     hdr_flags |=  HDR_TO_F;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "395:     break;",
          "397:    case HDR_FROM_T:",
          "398:    case HDR_CALLID_T:",
          "399:    case HDR_ROUTE_T:",
          "400:    case HDR_MAXFORWARDS_T:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "411:     if(hdr_flags &  HDR_FROM_F) {",
          "412:      LM_DBG(\"duplicate From header\\n\");",
          "413:      goto errorhdr;",
          "414:     }",
          "415:     hdr_flags |=  HDR_FROM_F;",
          "416:     s = lw_next_line(s, invite_buf_end);",
          "417:     append_str(d, s1, s - s1);",
          "418:     break;",
          "421:     if(hdr_flags &  HDR_CALLID_F) {",
          "422:      LM_DBG(\"duplicate Call-Id header\\n\");",
          "423:      goto errorhdr;",
          "424:     }",
          "425:     hdr_flags |=  HDR_CALLID_F;",
          "426:     s = lw_next_line(s, invite_buf_end);",
          "427:     append_str(d, s1, s - s1);",
          "428:     break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "496:  LM_ERR(\"HDR_EOH_T was not found\\n\");",
          "498:  shm_free(cancel_buf);",
          "499: error:",
          "500:  LM_ERR(\"cannot build %.*s request\\n\", method_len, method);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "528: errorhdr:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "31ac72f9b43862f9005a0f691a52c8439fe1e8c5",
      "candidate_info": {
        "commit_hash": "31ac72f9b43862f9005a0f691a52c8439fe1e8c5",
        "repo": "kamailio/kamailio",
        "commit_url": "https://github.com/kamailio/kamailio/commit/31ac72f9b43862f9005a0f691a52c8439fe1e8c5",
        "files": [
          "src/modules/tm/t_msgbuilder.c"
        ],
        "message": "tm: do not add duplicate headers in local requests\n\n(cherry picked from commit ada3701d22b1fd579f06b4f54fa695fa988e685f)\n(cherry picked from commit f57c900b438f3233fa1e9a9d3ca8cd383a30baa6)",
        "before_after_code_files": [
          "src/modules/tm/t_msgbuilder.c||src/modules/tm/t_msgbuilder.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/modules/tm/t_msgbuilder.c||src/modules/tm/t_msgbuilder.c"
          ],
          "candidate": [
            "src/modules/tm/t_msgbuilder.c||src/modules/tm/t_msgbuilder.c"
          ]
        }
      },
      "candidate_diff": {
        "src/modules/tm/t_msgbuilder.c||src/modules/tm/t_msgbuilder.c": [
          "File: src/modules/tm/t_msgbuilder.c -> src/modules/tm/t_msgbuilder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "268:  struct hdr_field *reas1, *reas_last, *hdr;",
          "269:  int hadded = 0;",
          "270:  sr_cfgenv_t *cenv = NULL;",
          "272:  invite_buf = Trans->uac[branch].request.buffer;",
          "273:  invite_len = Trans->uac[branch].request.buffer_len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "271:  hdr_flags_t hdr_flags = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "361:   switch(hf_type) {",
          "362:    case HDR_CSEQ_T:",
          "364:     while ((s < invite_buf_end)",
          "365:      && ((*s == ':') || (*s == ' ') || (*s == '\\t') ||",
          "366:       ((*s >= '0') && (*s <= '9')))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "365:     if(hdr_flags &  HDR_CSEQ_F) {",
          "366:      LM_DBG(\"duplicate CSeq header\\n\");",
          "367:      goto errorhdr;",
          "368:     }",
          "369:     hdr_flags |=  HDR_CSEQ_F;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "381:     break;",
          "383:    case HDR_TO_T:",
          "384:     if (to_len == 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "390:     if(hdr_flags &  HDR_TO_F) {",
          "391:      LM_DBG(\"duplicate To header\\n\");",
          "392:      goto errorhdr;",
          "393:     }",
          "394:     hdr_flags |=  HDR_TO_F;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "395:     break;",
          "397:    case HDR_FROM_T:",
          "398:    case HDR_CALLID_T:",
          "399:    case HDR_ROUTE_T:",
          "400:    case HDR_MAXFORWARDS_T:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "411:     if(hdr_flags &  HDR_FROM_F) {",
          "412:      LM_DBG(\"duplicate From header\\n\");",
          "413:      goto errorhdr;",
          "414:     }",
          "415:     hdr_flags |=  HDR_FROM_F;",
          "416:     s = lw_next_line(s, invite_buf_end);",
          "417:     append_str(d, s1, s - s1);",
          "418:     break;",
          "421:     if(hdr_flags &  HDR_CALLID_F) {",
          "422:      LM_DBG(\"duplicate Call-Id header\\n\");",
          "423:      goto errorhdr;",
          "424:     }",
          "425:     hdr_flags |=  HDR_CALLID_F;",
          "426:     s = lw_next_line(s, invite_buf_end);",
          "427:     append_str(d, s1, s - s1);",
          "428:     break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "496:  LM_ERR(\"HDR_EOH_T was not found\\n\");",
          "498:  shm_free(cancel_buf);",
          "499: error:",
          "500:  LM_ERR(\"cannot build %.*s request\\n\", method_len, method);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "528: errorhdr:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c2fd0db7f9a207a0eecf08e8ebafe0ecdc90d764",
      "candidate_info": {
        "commit_hash": "c2fd0db7f9a207a0eecf08e8ebafe0ecdc90d764",
        "repo": "kamailio/kamailio",
        "commit_url": "https://github.com/kamailio/kamailio/commit/c2fd0db7f9a207a0eecf08e8ebafe0ecdc90d764",
        "files": [
          "src/modules/tm/t_msgbuilder.c"
        ],
        "message": "tm: do not add duplicate headers in local requests\n\n(cherry picked from commit ada3701d22b1fd579f06b4f54fa695fa988e685f)\n(cherry picked from commit f57c900b438f3233fa1e9a9d3ca8cd383a30baa6)\n(cherry picked from commit 31ac72f9b43862f9005a0f691a52c8439fe1e8c5)",
        "before_after_code_files": [
          "src/modules/tm/t_msgbuilder.c||src/modules/tm/t_msgbuilder.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/modules/tm/t_msgbuilder.c||src/modules/tm/t_msgbuilder.c"
          ],
          "candidate": [
            "src/modules/tm/t_msgbuilder.c||src/modules/tm/t_msgbuilder.c"
          ]
        }
      },
      "candidate_diff": {
        "src/modules/tm/t_msgbuilder.c||src/modules/tm/t_msgbuilder.c": [
          "File: src/modules/tm/t_msgbuilder.c -> src/modules/tm/t_msgbuilder.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "282:  int hadded = 0;",
          "283:  sr_cfgenv_t *cenv = NULL;",
          "285:  invite_buf = Trans->uac[branch].request.buffer;",
          "286:  invite_len = Trans->uac[branch].request.buffer_len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "284:  hdr_flags_t hdr_flags = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "379:   switch(hf_type) {",
          "380:    case HDR_CSEQ_T:",
          "382:     while ((s < invite_buf_end)",
          "383:      && ((*s == ':') || (*s == ' ') || (*s == '\\t') ||",
          "384:       ((*s >= '0') && (*s <= '9')))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "383:     if(hdr_flags &  HDR_CSEQ_F) {",
          "384:      LM_DBG(\"duplicate CSeq header\\n\");",
          "385:      goto errorhdr;",
          "386:     }",
          "387:     hdr_flags |=  HDR_CSEQ_F;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "399:     break;",
          "401:    case HDR_TO_T:",
          "402:     if (to_len == 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "408:     if(hdr_flags &  HDR_TO_F) {",
          "409:      LM_DBG(\"duplicate To header\\n\");",
          "410:      goto errorhdr;",
          "411:     }",
          "412:     hdr_flags |=  HDR_TO_F;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "413:     break;",
          "415:    case HDR_FROM_T:",
          "416:    case HDR_CALLID_T:",
          "417:    case HDR_ROUTE_T:",
          "418:    case HDR_MAXFORWARDS_T:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "429:     if(hdr_flags &  HDR_FROM_F) {",
          "430:      LM_DBG(\"duplicate From header\\n\");",
          "431:      goto errorhdr;",
          "432:     }",
          "433:     hdr_flags |=  HDR_FROM_F;",
          "434:     s = lw_next_line(s, invite_buf_end);",
          "435:     append_str(d, s1, s - s1);",
          "436:     break;",
          "439:     if(hdr_flags &  HDR_CALLID_F) {",
          "440:      LM_DBG(\"duplicate Call-Id header\\n\");",
          "441:      goto errorhdr;",
          "442:     }",
          "443:     hdr_flags |=  HDR_CALLID_F;",
          "444:     s = lw_next_line(s, invite_buf_end);",
          "445:     append_str(d, s1, s - s1);",
          "446:     break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "516:  LM_ERR(\"HDR_EOH_T was not found\\n\");",
          "518:  shm_free(cancel_buf);",
          "519: error:",
          "520:  LM_ERR(\"cannot build %.*s request\\n\", method_len, method);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "548: errorhdr:",
          "",
          "---------------"
        ]
      }
    }
  ]
}