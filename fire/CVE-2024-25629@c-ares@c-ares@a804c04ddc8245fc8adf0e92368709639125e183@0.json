{
  "cve_id": "CVE-2024-25629",
  "cve_desc": "c-ares is a C library for asynchronous DNS requests. `ares__read_line()` is used to parse local configuration files such as `/etc/resolv.conf`, `/etc/nsswitch.conf`, the `HOSTALIASES` file, and if using a c-ares version prior to 1.27.0, the `/etc/hosts` file. If any of these configuration files has an embedded `NULL` character as the first character in a new line, it can lead to attempting to read memory prior to the start of the given buffer which may result in a crash. This issue is fixed in c-ares 1.27.0. No known workarounds exist.",
  "repo": "c-ares/c-ares",
  "patch_hash": "a804c04ddc8245fc8adf0e92368709639125e183",
  "patch_info": {
    "commit_hash": "a804c04ddc8245fc8adf0e92368709639125e183",
    "repo": "c-ares/c-ares",
    "commit_url": "https://github.com/c-ares/c-ares/commit/a804c04ddc8245fc8adf0e92368709639125e183",
    "files": [
      "src/lib/ares__read_line.c"
    ],
    "message": "Merge pull request from GHSA-mg26-v6qh-x48q",
    "before_after_code_files": [
      "src/lib/ares__read_line.c||src/lib/ares__read_line.c"
    ]
  },
  "patch_diff": {
    "src/lib/ares__read_line.c||src/lib/ares__read_line.c": [
      "File: src/lib/ares__read_line.c -> src/lib/ares__read_line.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "59:       return (offset != 0) ? 0 : (ferror(fp)) ? ARES_EFILE : ARES_EOF;",
      "60:     }",
      "61:     len = offset + ares_strlen(*buf + offset);",
      "62:     if ((*buf)[len - 1] == '\\n') {",
      "63:       (*buf)[len - 1] = 0;",
      "64:       break;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "65:     if (len == 0) {",
      "66:       offset = 0;",
      "67:       continue;",
      "68:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4082760583b10cac4a43dc069721d29d56ebac29",
      "candidate_info": {
        "commit_hash": "4082760583b10cac4a43dc069721d29d56ebac29",
        "repo": "c-ares/c-ares",
        "commit_url": "https://github.com/c-ares/c-ares/commit/4082760583b10cac4a43dc069721d29d56ebac29",
        "files": [
          "src/lib/ares__read_line.c"
        ],
        "message": "Merge pull request from GHSA-mg26-v6qh-x48q",
        "before_after_code_files": [
          "src/lib/ares__read_line.c||src/lib/ares__read_line.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/ares__read_line.c||src/lib/ares__read_line.c"
          ],
          "candidate": [
            "src/lib/ares__read_line.c||src/lib/ares__read_line.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/ares__read_line.c||src/lib/ares__read_line.c": [
          "File: src/lib/ares__read_line.c -> src/lib/ares__read_line.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:       return (offset != 0) ? 0 : (ferror(fp)) ? ARES_EFILE : ARES_EOF;",
          "60:     }",
          "61:     len = offset + ares_strlen(*buf + offset);",
          "62:     if ((*buf)[len - 1] == '\\n') {",
          "63:       (*buf)[len - 1] = 0;",
          "64:       break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:     if (len == 0) {",
          "66:       offset = 0;",
          "67:       continue;",
          "68:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "76cefd5a79f5e8882cb235de8ad0c59c09afe7c0",
      "candidate_info": {
        "commit_hash": "76cefd5a79f5e8882cb235de8ad0c59c09afe7c0",
        "repo": "c-ares/c-ares",
        "commit_url": "https://github.com/c-ares/c-ares/commit/76cefd5a79f5e8882cb235de8ad0c59c09afe7c0",
        "files": [
          "src/lib/ares__read_line.c"
        ],
        "message": "Merge pull request from GHSA-mg26-v6qh-x48q",
        "before_after_code_files": [
          "src/lib/ares__read_line.c||src/lib/ares__read_line.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/ares__read_line.c||src/lib/ares__read_line.c"
          ],
          "candidate": [
            "src/lib/ares__read_line.c||src/lib/ares__read_line.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/ares__read_line.c||src/lib/ares__read_line.c": [
          "File: src/lib/ares__read_line.c -> src/lib/ares__read_line.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:       return (offset != 0) ? 0 : (ferror(fp)) ? ARES_EFILE : ARES_EOF;",
          "60:     }",
          "61:     len = offset + ares_strlen(*buf + offset);",
          "62:     if ((*buf)[len - 1] == '\\n') {",
          "63:       (*buf)[len - 1] = 0;",
          "64:       break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:     if (len == 0) {",
          "66:       offset = 0;",
          "67:       continue;",
          "68:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a6d71edecf3652512d0c07fb60950f63daa43145",
      "candidate_info": {
        "commit_hash": "a6d71edecf3652512d0c07fb60950f63daa43145",
        "repo": "c-ares/c-ares",
        "commit_url": "https://github.com/c-ares/c-ares/commit/a6d71edecf3652512d0c07fb60950f63daa43145",
        "files": [
          "src/lib/ares__read_line.c"
        ],
        "message": "Merge pull request from GHSA-mg26-v6qh-x48q",
        "before_after_code_files": [
          "src/lib/ares__read_line.c||src/lib/ares__read_line.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/ares__read_line.c||src/lib/ares__read_line.c"
          ],
          "candidate": [
            "src/lib/ares__read_line.c||src/lib/ares__read_line.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/ares__read_line.c||src/lib/ares__read_line.c": [
          "File: src/lib/ares__read_line.c -> src/lib/ares__read_line.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:       return (offset != 0) ? 0 : (ferror(fp)) ? ARES_EFILE : ARES_EOF;",
          "60:     }",
          "61:     len = offset + ares_strlen(*buf + offset);",
          "62:     if ((*buf)[len - 1] == '\\n') {",
          "63:       (*buf)[len - 1] = 0;",
          "64:       break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:     if (len == 0) {",
          "66:       offset = 0;",
          "67:       continue;",
          "68:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd1546a7fefc15be840459087babc344789d6c34",
      "candidate_info": {
        "commit_hash": "cd1546a7fefc15be840459087babc344789d6c34",
        "repo": "c-ares/c-ares",
        "commit_url": "https://github.com/c-ares/c-ares/commit/cd1546a7fefc15be840459087babc344789d6c34",
        "files": [
          "src/lib/ares__read_line.c"
        ],
        "message": "Merge pull request from GHSA-mg26-v6qh-x48q",
        "before_after_code_files": [
          "src/lib/ares__read_line.c||src/lib/ares__read_line.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/ares__read_line.c||src/lib/ares__read_line.c"
          ],
          "candidate": [
            "src/lib/ares__read_line.c||src/lib/ares__read_line.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/ares__read_line.c||src/lib/ares__read_line.c": [
          "File: src/lib/ares__read_line.c -> src/lib/ares__read_line.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:       return (offset != 0) ? 0 : (ferror(fp)) ? ARES_EFILE : ARES_EOF;",
          "60:     }",
          "61:     len = offset + ares_strlen(*buf + offset);",
          "62:     if ((*buf)[len - 1] == '\\n') {",
          "63:       (*buf)[len - 1] = 0;",
          "64:       break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:     if (len == 0) {",
          "66:       offset = 0;",
          "67:       continue;",
          "68:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}