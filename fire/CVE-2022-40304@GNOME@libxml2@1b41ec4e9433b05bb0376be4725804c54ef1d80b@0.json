{
  "cve_id": "CVE-2022-40304",
  "cve_desc": "An issue was discovered in libxml2 before 2.10.3. Certain invalid XML entity definitions can corrupt a hash table key, potentially leading to subsequent logic errors. In one case, a double-free can be provoked.",
  "repo": "GNOME/libxml2",
  "patch_hash": "1b41ec4e9433b05bb0376be4725804c54ef1d80b",
  "patch_info": {
    "commit_hash": "1b41ec4e9433b05bb0376be4725804c54ef1d80b",
    "repo": "GNOME/libxml2",
    "commit_url": "https://github.com/GNOME/libxml2/commit/1b41ec4e9433b05bb0376be4725804c54ef1d80b",
    "files": [
      "entities.c"
    ],
    "message": "[CVE-2022-40304] Fix dict corruption caused by entity reference cycles\n\nWhen an entity reference cycle is detected, the entity content is\ncleared by setting its first byte to zero. But the entity content might\nbe allocated from a dict. In this case, the dict entry becomes corrupted\nleading to all kinds of logic errors, including memory errors like\ndouble-frees.\n\nStop storing entity content, orig, ExternalID and SystemID in a dict.\nThese values are unlikely to occur multiple times in a document, so they\nshouldn't have been stored in a dict in the first place.\n\nThanks to Ned Williamson and Nathan Wachholz working with Google Project\nZero for the report!",
    "before_after_code_files": [
      "entities.c||entities.c"
    ]
  },
  "patch_diff": {
    "entities.c||entities.c": [
      "File: entities.c -> entities.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "128:     if ((entity->children) && (entity->owner == 1) &&",
      "129:         (entity == (xmlEntityPtr) entity->children->parent))",
      "130:         xmlFreeNodeList(entity->children);",
      "161:     xmlFree(entity);",
      "162: }",
      "",
      "[Removed Lines]",
      "131:     if (dict != NULL) {",
      "132:         if ((entity->name != NULL) && (!xmlDictOwns(dict, entity->name)))",
      "133:             xmlFree((char *) entity->name);",
      "134:         if ((entity->ExternalID != NULL) &&",
      "135:      (!xmlDictOwns(dict, entity->ExternalID)))",
      "136:             xmlFree((char *) entity->ExternalID);",
      "137:         if ((entity->SystemID != NULL) &&",
      "138:      (!xmlDictOwns(dict, entity->SystemID)))",
      "139:             xmlFree((char *) entity->SystemID);",
      "140:         if ((entity->URI != NULL) && (!xmlDictOwns(dict, entity->URI)))",
      "141:             xmlFree((char *) entity->URI);",
      "142:         if ((entity->content != NULL)",
      "143:             && (!xmlDictOwns(dict, entity->content)))",
      "144:             xmlFree((char *) entity->content);",
      "145:         if ((entity->orig != NULL) && (!xmlDictOwns(dict, entity->orig)))",
      "146:             xmlFree((char *) entity->orig);",
      "147:     } else {",
      "148:         if (entity->name != NULL)",
      "149:             xmlFree((char *) entity->name);",
      "150:         if (entity->ExternalID != NULL)",
      "151:             xmlFree((char *) entity->ExternalID);",
      "152:         if (entity->SystemID != NULL)",
      "153:             xmlFree((char *) entity->SystemID);",
      "154:         if (entity->URI != NULL)",
      "155:             xmlFree((char *) entity->URI);",
      "156:         if (entity->content != NULL)",
      "157:             xmlFree((char *) entity->content);",
      "158:         if (entity->orig != NULL)",
      "159:             xmlFree((char *) entity->orig);",
      "160:     }",
      "",
      "[Added Lines]",
      "131:     if ((entity->name != NULL) &&",
      "132:         ((dict == NULL) || (!xmlDictOwns(dict, entity->name))))",
      "133:         xmlFree((char *) entity->name);",
      "134:     if (entity->ExternalID != NULL)",
      "135:         xmlFree((char *) entity->ExternalID);",
      "136:     if (entity->SystemID != NULL)",
      "137:         xmlFree((char *) entity->SystemID);",
      "138:     if (entity->URI != NULL)",
      "139:         xmlFree((char *) entity->URI);",
      "140:     if (entity->content != NULL)",
      "141:         xmlFree((char *) entity->content);",
      "142:     if (entity->orig != NULL)",
      "143:         xmlFree((char *) entity->orig);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "193:      ret->SystemID = xmlStrdup(SystemID);",
      "194:     } else {",
      "195:         ret->name = xmlDictLookup(dict, name, -1);",
      "200:     }",
      "201:     if (content != NULL) {",
      "202:         ret->length = xmlStrlen(content);",
      "208:      } else {",
      "209:         ret->length = 0;",
      "210:         ret->content = NULL;",
      "",
      "[Removed Lines]",
      "196:  if (ExternalID != NULL)",
      "197:      ret->ExternalID = xmlDictLookup(dict, ExternalID, -1);",
      "198:  if (SystemID != NULL)",
      "199:      ret->SystemID = xmlDictLookup(dict, SystemID, -1);",
      "203:  if ((dict != NULL) && (ret->length < 5))",
      "204:      ret->content = (xmlChar *)",
      "205:                     xmlDictLookup(dict, content, ret->length);",
      "206:  else",
      "207:      ret->content = xmlStrndup(content, ret->length);",
      "",
      "[Added Lines]",
      "179:  ret->ExternalID = xmlStrdup(ExternalID);",
      "180:  ret->SystemID = xmlStrdup(SystemID);",
      "184:  ret->content = xmlStrndup(content, ret->length);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "644a89e080bced793295f61f18aac8cfad6bece2",
      "candidate_info": {
        "commit_hash": "644a89e080bced793295f61f18aac8cfad6bece2",
        "repo": "GNOME/libxml2",
        "commit_url": "https://github.com/GNOME/libxml2/commit/644a89e080bced793295f61f18aac8cfad6bece2",
        "files": [
          "entities.c"
        ],
        "message": "[CVE-2022-40304] Fix dict corruption caused by entity reference cycles\n\nWhen an entity reference cycle is detected, the entity content is\ncleared by setting its first byte to zero. But the entity content might\nbe allocated from a dict. In this case, the dict entry becomes corrupted\nleading to all kinds of logic errors, including memory errors like\ndouble-frees.\n\nStop storing entity content, orig, ExternalID and SystemID in a dict.\nThese values are unlikely to occur multiple times in a document, so they\nshouldn't have been stored in a dict in the first place.\n\nThanks to Ned Williamson and Nathan Wachholz working with Google Project\nZero for the report!",
        "before_after_code_files": [
          "entities.c||entities.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "entities.c||entities.c"
          ],
          "candidate": [
            "entities.c||entities.c"
          ]
        }
      },
      "candidate_diff": {
        "entities.c||entities.c": [
          "File: entities.c -> entities.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "129:     if ((entity->children) && (entity->owner == 1) &&",
          "130:         (entity == (xmlEntityPtr) entity->children->parent))",
          "131:         xmlFreeNodeList(entity->children);",
          "162:     xmlFree(entity);",
          "163: }",
          "",
          "[Removed Lines]",
          "132:     if (dict != NULL) {",
          "133:         if ((entity->name != NULL) && (!xmlDictOwns(dict, entity->name)))",
          "134:             xmlFree((char *) entity->name);",
          "135:         if ((entity->ExternalID != NULL) &&",
          "136:      (!xmlDictOwns(dict, entity->ExternalID)))",
          "137:             xmlFree((char *) entity->ExternalID);",
          "138:         if ((entity->SystemID != NULL) &&",
          "139:      (!xmlDictOwns(dict, entity->SystemID)))",
          "140:             xmlFree((char *) entity->SystemID);",
          "141:         if ((entity->URI != NULL) && (!xmlDictOwns(dict, entity->URI)))",
          "142:             xmlFree((char *) entity->URI);",
          "143:         if ((entity->content != NULL)",
          "144:             && (!xmlDictOwns(dict, entity->content)))",
          "145:             xmlFree((char *) entity->content);",
          "146:         if ((entity->orig != NULL) && (!xmlDictOwns(dict, entity->orig)))",
          "147:             xmlFree((char *) entity->orig);",
          "148:     } else {",
          "149:         if (entity->name != NULL)",
          "150:             xmlFree((char *) entity->name);",
          "151:         if (entity->ExternalID != NULL)",
          "152:             xmlFree((char *) entity->ExternalID);",
          "153:         if (entity->SystemID != NULL)",
          "154:             xmlFree((char *) entity->SystemID);",
          "155:         if (entity->URI != NULL)",
          "156:             xmlFree((char *) entity->URI);",
          "157:         if (entity->content != NULL)",
          "158:             xmlFree((char *) entity->content);",
          "159:         if (entity->orig != NULL)",
          "160:             xmlFree((char *) entity->orig);",
          "161:     }",
          "",
          "[Added Lines]",
          "132:     if ((entity->name != NULL) &&",
          "133:         ((dict == NULL) || (!xmlDictOwns(dict, entity->name))))",
          "134:         xmlFree((char *) entity->name);",
          "135:     if (entity->ExternalID != NULL)",
          "136:         xmlFree((char *) entity->ExternalID);",
          "137:     if (entity->SystemID != NULL)",
          "138:         xmlFree((char *) entity->SystemID);",
          "139:     if (entity->URI != NULL)",
          "140:         xmlFree((char *) entity->URI);",
          "141:     if (entity->content != NULL)",
          "142:         xmlFree((char *) entity->content);",
          "143:     if (entity->orig != NULL)",
          "144:         xmlFree((char *) entity->orig);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "194:      ret->SystemID = xmlStrdup(SystemID);",
          "195:     } else {",
          "196:         ret->name = xmlDictLookup(dict, name, -1);",
          "201:     }",
          "202:     if (content != NULL) {",
          "203:         ret->length = xmlStrlen(content);",
          "209:      } else {",
          "210:         ret->length = 0;",
          "211:         ret->content = NULL;",
          "",
          "[Removed Lines]",
          "197:  if (ExternalID != NULL)",
          "198:      ret->ExternalID = xmlDictLookup(dict, ExternalID, -1);",
          "199:  if (SystemID != NULL)",
          "200:      ret->SystemID = xmlDictLookup(dict, SystemID, -1);",
          "204:  if ((dict != NULL) && (ret->length < 5))",
          "205:      ret->content = (xmlChar *)",
          "206:                     xmlDictLookup(dict, content, ret->length);",
          "207:  else",
          "208:      ret->content = xmlStrndup(content, ret->length);",
          "",
          "[Added Lines]",
          "180:  ret->ExternalID = xmlStrdup(ExternalID);",
          "181:  ret->SystemID = xmlStrdup(SystemID);",
          "185:  ret->content = xmlStrndup(content, ret->length);",
          "",
          "---------------"
        ]
      }
    }
  ]
}