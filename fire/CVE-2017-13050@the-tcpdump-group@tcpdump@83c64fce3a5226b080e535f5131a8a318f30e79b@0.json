{
  "cve_id": "CVE-2017-13050",
  "cve_desc": "The RPKI-Router parser in tcpdump before 4.9.2 has a buffer over-read in print-rpki-rtr.c:rpki_rtr_pdu_print().",
  "repo": "the-tcpdump-group/tcpdump",
  "patch_hash": "83c64fce3a5226b080e535f5131a8a318f30e79b",
  "patch_info": {
    "commit_hash": "83c64fce3a5226b080e535f5131a8a318f30e79b",
    "repo": "the-tcpdump-group/tcpdump",
    "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/83c64fce3a5226b080e535f5131a8a318f30e79b",
    "files": [
      "print-rpki-rtr.c",
      "tests/TESTLIST",
      "tests/kday2.out",
      "tests/kday3.out",
      "tests/kday4.out",
      "tests/kday5.out",
      "tests/kday7.out",
      "tests/kday8.out",
      "tests/rpki-rtr-oob.out",
      "tests/rpki-rtr-oob.pcap"
    ],
    "message": "CVE-2017-13050/RPKI-Router: fix a few bugs\n\nThe decoder didn't properly check that the PDU length stored in the PDU\nheader is correct. The only check in place was in rpki_rtr_print() and it\ntested whether the length is zero but that is not sufficient. Make all\nnecessary length and bounds checks, both generic and type-specific, in\nrpki_rtr_pdu_print() and reduce rpki_rtr_print() to a simple loop.\n\nThis also fixes a minor bug and PDU type 0 (Serial Notify from RFC 6810\nSection 5.2) is valid again.\n\nIn rpki_rtr_pdu_print() any protocol version was considered version 0,\nfix it to skip the rest of input if the PDU protocol version is unknown.\n\nIbid, the PDU type 10 (Error Report from RFC 6810 Section 5.10) case\nblock didn't consider the \"Length of Error Text\" data element mandatory,\nput it right.\n\nIbid, when printing an encapsulated PDU, give itself (via recursion)\nrespective buffer length to make it possible to tell whether the\nencapsulated PDU fits. Do not recurse deeper than 2nd level.\n\nUpdate prior RPKI-Router test cases that now stop to decode earlier\nbecause of the stricter checks.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s).",
    "before_after_code_files": [
      "print-rpki-rtr.c||print-rpki-rtr.c"
    ]
  },
  "patch_diff": {
    "print-rpki-rtr.c||print-rpki-rtr.c": [
      "File: print-rpki-rtr.c -> print-rpki-rtr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "176: {",
      "177:     const rpki_rtr_pdu *pdu_header;",
      "178:     u_int pdu_type, pdu_len, hexdump;",
      "179:     const u_char *msg;",
      "181:     pdu_header = (const rpki_rtr_pdu *)tptr;",
      "182:     pdu_type = pdu_header->pdu_type;",
      "183:     pdu_len = EXTRACT_32BITS(pdu_header->length);",
      "185:     hexdump = FALSE;",
      "187:     ND_PRINT((ndo, \"%sRPKI-RTRv%u, %s PDU (%u), length: %u\",",
      "",
      "[Removed Lines]",
      "174: static int",
      "175: rpki_rtr_pdu_print (netdissect_options *ndo, const u_char *tptr, u_int indent)",
      "184:     ND_TCHECK2(*tptr, pdu_len);",
      "",
      "[Added Lines]",
      "177: static u_int",
      "178: rpki_rtr_pdu_print (netdissect_options *ndo, const u_char *tptr, const u_int len,",
      "179:  const u_char recurse, const u_int indent)",
      "186:     ND_TCHECK_8BITS(tptr);",
      "187:     if (*tptr != 0) {",
      "194:  ND_PRINT((ndo, \"%sRPKI-RTRv%u (unknown)\", indent_string(8), *tptr));",
      "195:  return len;",
      "196:     }",
      "197:     if (len < sizeof(rpki_rtr_pdu)) {",
      "198:  ND_PRINT((ndo, \"(%u bytes is too few to decode)\", len));",
      "199:  goto invalid;",
      "200:     }",
      "201:     ND_TCHECK2(*tptr, sizeof(rpki_rtr_pdu));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "189:     pdu_header->version,",
      "190:     tok2str(rpki_rtr_pdu_values, \"Unknown\", pdu_type),",
      "191:     pdu_type, pdu_len));",
      "193:     switch (pdu_type) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:     if (pdu_len < sizeof(rpki_rtr_pdu) || pdu_len > len)",
      "217:  goto invalid;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "198:     case RPKI_RTR_SERIAL_NOTIFY_PDU:",
      "199:     case RPKI_RTR_SERIAL_QUERY_PDU:",
      "200:     case RPKI_RTR_END_OF_DATA_PDU:",
      "201:         msg = (const u_char *)(pdu_header + 1);",
      "202:  ND_PRINT((ndo, \"%sSession ID: 0x%04x, Serial: %u\",",
      "203:         indent_string(indent+2),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "227:  if (pdu_len != sizeof(rpki_rtr_pdu) + 4)",
      "228:      goto invalid;",
      "229:  ND_TCHECK2(*tptr, pdu_len);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "211:     case RPKI_RTR_RESET_QUERY_PDU:",
      "212:     case RPKI_RTR_CACHE_RESET_PDU:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "242:  if (pdu_len != sizeof(rpki_rtr_pdu))",
      "243:      goto invalid;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "217:  break;",
      "219:     case RPKI_RTR_CACHE_RESPONSE_PDU:",
      "220:  ND_PRINT((ndo, \"%sSession ID: 0x%04x\",",
      "221:         indent_string(indent+2),",
      "222:         EXTRACT_16BITS(pdu_header->u.session_id)));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "252:  if (pdu_len != sizeof(rpki_rtr_pdu))",
      "253:      goto invalid;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "226:  {",
      "227:      const rpki_rtr_pdu_ipv4_prefix *pdu;",
      "229:      pdu = (const rpki_rtr_pdu_ipv4_prefix *)tptr;",
      "230:      ND_PRINT((ndo, \"%sIPv4 Prefix %s/%u-%u, origin-as %u, flags 0x%02x\",",
      "231:      indent_string(indent+2),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "264:      if (pdu_len != sizeof(rpki_rtr_pdu) + 12)",
      "265:   goto invalid;",
      "266:      ND_TCHECK2(*tptr, pdu_len);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "239:  {",
      "240:      const rpki_rtr_pdu_ipv6_prefix *pdu;",
      "242:      pdu = (const rpki_rtr_pdu_ipv6_prefix *)tptr;",
      "243:      ND_PRINT((ndo, \"%sIPv6 Prefix %s/%u-%u, origin-as %u, flags 0x%02x\",",
      "244:      indent_string(indent+2),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "280:      if (pdu_len != sizeof(rpki_rtr_pdu) + 24)",
      "281:   goto invalid;",
      "282:      ND_TCHECK2(*tptr, pdu_len);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "253:      const rpki_rtr_pdu_error_report *pdu;",
      "254:      u_int encapsulated_pdu_length, text_length, tlen, error_code;",
      "256:      pdu = (const rpki_rtr_pdu_error_report *)tptr;",
      "257:      encapsulated_pdu_length = EXTRACT_32BITS(pdu->encapsulated_pdu_length);",
      "261:      error_code = EXTRACT_16BITS(pdu->pdu_header.u.error_code);",
      "262:      ND_PRINT((ndo, \"%sError code: %s (%u), Encapsulated PDU length: %u\",",
      "",
      "[Removed Lines]",
      "258:      ND_TCHECK2(*tptr, encapsulated_pdu_length);",
      "259:      tlen = pdu_len;",
      "",
      "[Added Lines]",
      "297:      tlen = sizeof(rpki_rtr_pdu);",
      "299:      if (pdu_len < tlen + 4)",
      "300:   goto invalid;",
      "301:      ND_TCHECK2(*tptr, tlen + 4);",
      "307:      tlen += 4;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "264:      tok2str(rpki_rtr_error_codes, \"Unknown\", error_code),",
      "265:      error_code, encapsulated_pdu_length));",
      "278:      }",
      "294:   ND_PRINT((ndo, \"%sError text: \", indent_string(indent+2)));",
      "296:    goto trunc;",
      "297:      }",
      "298:  }",
      "299:  break;",
      "301:     default:",
      "",
      "[Removed Lines]",
      "267:      tptr += sizeof(*pdu);",
      "268:      tlen -= sizeof(*pdu);",
      "273:      if (encapsulated_pdu_length &&",
      "274:   (encapsulated_pdu_length <= tlen)) {",
      "275:   ND_PRINT((ndo, \"%s-----encapsulated PDU-----\", indent_string(indent+4)));",
      "276:   if (rpki_rtr_pdu_print(ndo, tptr, indent+2))",
      "277:    goto trunc;",
      "280:      tptr += encapsulated_pdu_length;",
      "281:      tlen -= encapsulated_pdu_length;",
      "286:      text_length = 0;",
      "287:      if (tlen > 4) {",
      "288:   text_length = EXTRACT_32BITS(tptr);",
      "289:   tptr += 4;",
      "290:   tlen -= 4;",
      "291:      }",
      "292:      ND_TCHECK2(*tptr, text_length);",
      "293:      if (text_length && (text_length <= tlen )) {",
      "295:   if (fn_printn(ndo, tptr, text_length, ndo->ndo_snapend))",
      "",
      "[Added Lines]",
      "315:      if (encapsulated_pdu_length) {",
      "328:   if (pdu_len < tlen + encapsulated_pdu_length)",
      "329:       goto invalid;",
      "330:   if (! recurse) {",
      "331:       ND_TCHECK2(*tptr, tlen + encapsulated_pdu_length);",
      "332:   }",
      "333:   else {",
      "334:       ND_PRINT((ndo, \"%s-----encapsulated PDU-----\", indent_string(indent+4)));",
      "335:       rpki_rtr_pdu_print(ndo, tptr + tlen,",
      "336:    encapsulated_pdu_length, 0, indent + 2);",
      "337:   }",
      "338:   tlen += encapsulated_pdu_length;",
      "341:      if (pdu_len < tlen + 4)",
      "342:   goto invalid;",
      "343:      ND_TCHECK2(*tptr, tlen + 4);",
      "351:      text_length = EXTRACT_32BITS(tptr + tlen);",
      "352:      tlen += 4;",
      "354:      if (text_length) {",
      "355:   if (pdu_len < tlen + text_length)",
      "356:       goto invalid;",
      "359:   if (fn_printn(ndo, tptr + tlen, text_length, ndo->ndo_snapend))",
      "366:  ND_TCHECK2(*tptr, pdu_len);",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "310:     if (ndo->ndo_vflag > 1 || (ndo->ndo_vflag && hexdump)) {",
      "311:  print_unknown_data(ndo,tptr,\"\\n\\t  \", pdu_len);",
      "312:     }",
      "315: trunc:",
      "317: }",
      "319: void",
      "320: rpki_rtr_print(netdissect_options *ndo, register const u_char *pptr, register u_int len)",
      "321: {",
      "329:     if (!ndo->ndo_vflag) {",
      "330:  ND_PRINT((ndo, \", RPKI-RTR\"));",
      "331:  return;",
      "332:     }",
      "360:     }",
      "364: }",
      "",
      "[Removed Lines]",
      "313:     return 0;",
      "316:     return 1;",
      "322:     u_int tlen, pdu_type, pdu_len;",
      "323:     const u_char *tptr;",
      "324:     const rpki_rtr_pdu *pdu_header;",
      "326:     tptr = pptr;",
      "327:     tlen = len;",
      "334:     while (tlen >= sizeof(rpki_rtr_pdu)) {",
      "336:         ND_TCHECK2(*tptr, sizeof(rpki_rtr_pdu));",
      "338:  pdu_header = (const rpki_rtr_pdu *)tptr;",
      "339:         pdu_type = pdu_header->pdu_type;",
      "340:         pdu_len = EXTRACT_32BITS(pdu_header->length);",
      "341:         ND_TCHECK2(*tptr, pdu_len);",
      "344:         if (!pdu_type || !pdu_len) {",
      "345:             break;",
      "346:         }",
      "348:         if (tlen < pdu_len) {",
      "349:             goto trunc;",
      "350:         }",
      "355:  if (rpki_rtr_pdu_print(ndo, tptr, 8))",
      "356:   goto trunc;",
      "358:         tlen -= pdu_len;",
      "359:         tptr += pdu_len;",
      "361:     return;",
      "362: trunc:",
      "363:     ND_PRINT((ndo, \"\\n\\t%s\", tstr));",
      "",
      "[Added Lines]",
      "378:     return pdu_len;",
      "380: invalid:",
      "381:     ND_PRINT((ndo, \"%s\", istr));",
      "382:     ND_TCHECK2(*tptr, len);",
      "383:     return len;",
      "385:     ND_PRINT((ndo, \"\\n\\t%s\", tstr));",
      "386:     return len;",
      "396:     while (len) {",
      "397:  u_int pdu_len = rpki_rtr_pdu_print(ndo, pptr, len, 1, 8);",
      "398:  len -= pdu_len;",
      "399:  pptr += pdu_len;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3c8f3e13b03380742c24070f8a7b56fe12c6b8ee",
      "candidate_info": {
        "commit_hash": "3c8f3e13b03380742c24070f8a7b56fe12c6b8ee",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/3c8f3e13b03380742c24070f8a7b56fe12c6b8ee",
        "files": [
          "extract.h",
          "print-ah.c",
          "print-bgp.c",
          "print-bootp.c",
          "print-chdlc.c",
          "print-domain.c",
          "print-dvmrp.c",
          "print-eap.c",
          "print-fr.c",
          "print-icmp.c",
          "print-igmp.c",
          "print-isakmp.c",
          "print-isoclns.c",
          "print-juniper.c",
          "print-mobility.c",
          "print-ospf6.c",
          "print-pgm.c",
          "print-pim.c",
          "print-ppp.c",
          "print-rpki-rtr.c",
          "print-rx.c",
          "print-smb.c",
          "print-stp.c",
          "print-tftp.c",
          "print-udp.c",
          "print-vtp.c"
        ],
        "message": "Rename ND_TCHECK_/ND_TTEST_ macros\n\nNow all the macros have a name meaning a count in bytes.\n\ne.g.:\nND_TCHECK_32BITS -> ND_TCHECK_4\nND_TTEST_32BITS -> ND_TTEST_4",
        "before_after_code_files": [
          "extract.h||extract.h",
          "print-ah.c||print-ah.c",
          "print-bgp.c||print-bgp.c",
          "print-bootp.c||print-bootp.c",
          "print-chdlc.c||print-chdlc.c",
          "print-domain.c||print-domain.c",
          "print-dvmrp.c||print-dvmrp.c",
          "print-eap.c||print-eap.c",
          "print-fr.c||print-fr.c",
          "print-icmp.c||print-icmp.c",
          "print-igmp.c||print-igmp.c",
          "print-isakmp.c||print-isakmp.c",
          "print-isoclns.c||print-isoclns.c",
          "print-juniper.c||print-juniper.c",
          "print-mobility.c||print-mobility.c",
          "print-ospf6.c||print-ospf6.c",
          "print-pgm.c||print-pgm.c",
          "print-pim.c||print-pim.c",
          "print-ppp.c||print-ppp.c",
          "print-rpki-rtr.c||print-rpki-rtr.c",
          "print-rx.c||print-rx.c",
          "print-smb.c||print-smb.c",
          "print-stp.c||print-stp.c",
          "print-tftp.c||print-tftp.c",
          "print-udp.c||print-udp.c",
          "print-vtp.c||print-vtp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-rpki-rtr.c||print-rpki-rtr.c"
          ],
          "candidate": [
            "print-rpki-rtr.c||print-rpki-rtr.c"
          ]
        }
      },
      "candidate_diff": {
        "extract.h||extract.h": [
          "File: extract.h -> extract.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "392: #define ND_TTEST_8BITS(p) ND_TTEST2(*(p), 1)",
          "393: #define ND_TCHECK_8BITS(p) ND_TCHECK2(*(p), 1)",
          "395: #define ND_TTEST_16BITS(p) ND_TTEST2(*(p), 2)",
          "396: #define ND_TCHECK_16BITS(p) ND_TCHECK2(*(p), 2)",
          "398: #define ND_TTEST_24BITS(p) ND_TTEST2(*(p), 3)",
          "399: #define ND_TCHECK_24BITS(p) ND_TCHECK2(*(p), 3)",
          "401: #define ND_TTEST_32BITS(p) ND_TTEST2(*(p), 4)",
          "402: #define ND_TCHECK_32BITS(p) ND_TCHECK2(*(p), 4)",
          "404: #define ND_TTEST_40BITS(p) ND_TTEST2(*(p), 5)",
          "405: #define ND_TCHECK_40BITS(p) ND_TCHECK2(*(p), 5)",
          "407: #define ND_TTEST_48BITS(p) ND_TTEST2(*(p), 6)",
          "408: #define ND_TCHECK_48BITS(p) ND_TCHECK2(*(p), 6)",
          "410: #define ND_TTEST_56BITS(p) ND_TTEST2(*(p), 7)",
          "411: #define ND_TCHECK_56BITS(p) ND_TCHECK2(*(p), 7)",
          "413: #define ND_TTEST_64BITS(p) ND_TTEST2(*(p), 8)",
          "414: #define ND_TCHECK_64BITS(p) ND_TCHECK2(*(p), 8)",
          "416: #define ND_TTEST_128BITS(p) ND_TTEST2(*(p), 16)",
          "417: #define ND_TCHECK_128BITS(p) ND_TCHECK2(*(p), 16)",
          "",
          "[Added Lines]",
          "392: #define ND_TTEST_1(p) ND_TTEST2(*(p), 1)",
          "393: #define ND_TCHECK_1(p) ND_TCHECK2(*(p), 1)",
          "395: #define ND_TTEST_2(p) ND_TTEST2(*(p), 2)",
          "396: #define ND_TCHECK_2(p) ND_TCHECK2(*(p), 2)",
          "398: #define ND_TTEST_3(p) ND_TTEST2(*(p), 3)",
          "399: #define ND_TCHECK_3(p) ND_TCHECK2(*(p), 3)",
          "401: #define ND_TTEST_4(p) ND_TTEST2(*(p), 4)",
          "402: #define ND_TCHECK_4(p) ND_TCHECK2(*(p), 4)",
          "404: #define ND_TTEST_5(p) ND_TTEST2(*(p), 5)",
          "405: #define ND_TCHECK_5(p) ND_TCHECK2(*(p), 5)",
          "407: #define ND_TTEST_6(p) ND_TTEST2(*(p), 6)",
          "408: #define ND_TCHECK_6(p) ND_TCHECK2(*(p), 6)",
          "410: #define ND_TTEST_7(p) ND_TTEST2(*(p), 7)",
          "411: #define ND_TCHECK_7(p) ND_TCHECK2(*(p), 7)",
          "413: #define ND_TTEST_8(p) ND_TTEST2(*(p), 8)",
          "414: #define ND_TCHECK_8(p) ND_TCHECK2(*(p), 8)",
          "416: #define ND_TTEST_16(p) ND_TTEST2(*(p), 16)",
          "417: #define ND_TCHECK_16(p) ND_TCHECK2(*(p), 16)",
          "",
          "---------------"
        ],
        "print-ah.c||print-ah.c": [
          "File: print-ah.c -> print-ah.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:  ND_PRINT((ndo, \"AH(spi=0x%08x\", EXTRACT_BE_32BITS(&ah->ah_spi)));",
          "50:  if (ndo->ndo_vflag)",
          "51:   ND_PRINT((ndo, \",sumlen=%d\", sumlen));",
          "53:  ND_PRINT((ndo, \",seq=0x%x\", EXTRACT_BE_32BITS(ah + 1)));",
          "54:  if (!ND_TTEST2(*bp, sizeof(struct ah) + sumlen)) {",
          "55:   ND_PRINT((ndo, \"[truncated]):\"));",
          "",
          "[Removed Lines]",
          "52:  ND_TCHECK_32BITS(ah + 1);",
          "",
          "[Added Lines]",
          "52:  ND_TCHECK_4(ah + 1);",
          "",
          "---------------"
        ],
        "print-bgp.c||print-bgp.c": [
          "File: print-bgp.c -> print-bgp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "680:     total_length = 0;",
          "684:     addr_length = EXTRACT_8BITS(pptr);",
          "685:     pptr++;",
          "",
          "[Removed Lines]",
          "683:     ND_TCHECK_8BITS(pptr);",
          "",
          "[Added Lines]",
          "683:     ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "695:     }",
          "699:     addr_length = EXTRACT_8BITS(pptr);",
          "700:     pptr++;",
          "",
          "[Removed Lines]",
          "698:     ND_TCHECK_8BITS(pptr);",
          "",
          "[Added Lines]",
          "698:     ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "784:   return -1;",
          "788:  as_printf(ndo, asbuf, sizeof(asbuf), EXTRACT_BE_32BITS(pptr + 1));",
          "",
          "[Removed Lines]",
          "787:  ND_TCHECK_32BITS(pptr + 1);",
          "",
          "[Added Lines]",
          "787:  ND_TCHECK_4(pptr + 1);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1037: {",
          "1038:         int plen,tlen,stringlen,tlv_type,tlv_len,ttlv_len;",
          "1041:         plen=EXTRACT_BE_16BITS(pptr);",
          "1042:         tlen=plen;",
          "1043:         pptr+=2;",
          "",
          "[Removed Lines]",
          "1040:  ND_TCHECK_16BITS(pptr);",
          "",
          "[Added Lines]",
          "1040:  ND_TCHECK_2(pptr);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1458:   if (len != 4)",
          "1459:    ND_PRINT((ndo, \"invalid len\"));",
          "1460:   else {",
          "1462:    ND_PRINT((ndo, \"%u\", EXTRACT_BE_32BITS(tptr)));",
          "1463:   }",
          "1464:   break;",
          "",
          "[Removed Lines]",
          "1461:    ND_TCHECK_32BITS(tptr);",
          "",
          "[Added Lines]",
          "1461:    ND_TCHECK_4(tptr);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1504:   }",
          "1505:   while (tlen>0) {",
          "1506:    uint32_t comm;",
          "1508:    comm = EXTRACT_BE_32BITS(tptr);",
          "1509:    switch (comm) {",
          "1510:    case BGP_COMMUNITY_NO_EXPORT:",
          "",
          "[Removed Lines]",
          "1507:    ND_TCHECK_32BITS(tptr);",
          "",
          "[Added Lines]",
          "1507:    ND_TCHECK_4(tptr);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2064:                 while (tlen>0) {",
          "2065:                     uint16_t extd_comm;",
          "2068:                     extd_comm=EXTRACT_BE_16BITS(tptr);",
          "2070:       ND_PRINT((ndo, \"\\n\\t    %s (0x%04x), Flags [%s]\",",
          "",
          "[Removed Lines]",
          "2067:                     ND_TCHECK_16BITS(tptr);",
          "",
          "[Added Lines]",
          "2067:                     ND_TCHECK_2(tptr);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2250:   break;",
          "2251:  }",
          "2252:         case BGPTYPE_ATTR_SET:",
          "2254:                 if (len < 4)",
          "2255:                  goto trunc;",
          "2256:   ND_PRINT((ndo, \"\\n\\t    Origin AS: %s\",",
          "",
          "[Removed Lines]",
          "2253:                 ND_TCHECK_32BITS(tptr);",
          "",
          "[Added Lines]",
          "2253:                 ND_TCHECK_4(tptr);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2516:  length -= BGP_SIZE;",
          "2520:  if (length < 2)",
          "2521:   goto trunc;",
          "2522:  withdrawn_routes_len = EXTRACT_BE_16BITS(p);",
          "",
          "[Removed Lines]",
          "2519:  ND_TCHECK_16BITS(p);",
          "",
          "[Added Lines]",
          "2519:  ND_TCHECK_2(p);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2536:   length -= withdrawn_routes_len;",
          "2537:  }",
          "2540:  if (length < 2)",
          "2541:   goto trunc;",
          "2542:  len = EXTRACT_BE_16BITS(p);",
          "",
          "[Removed Lines]",
          "2539:  ND_TCHECK_16BITS(p);",
          "",
          "[Added Lines]",
          "2539:  ND_TCHECK_2(p);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2716:   bgpn.bgpn_minor == BGP_NOTIFY_MINOR_CEASE_RESET) &&",
          "2717:   length >= BGP_NOTIFICATION_SIZE + 1) {",
          "2718:       tptr = dat + BGP_NOTIFICATION_SIZE;",
          "2720:       shutdown_comm_length = EXTRACT_8BITS(tptr);",
          "2721:       remainder_offset = 0;",
          "",
          "[Removed Lines]",
          "2719:       ND_TCHECK_8BITS(tptr);",
          "",
          "[Added Lines]",
          "2719:       ND_TCHECK_1(tptr);",
          "",
          "---------------"
        ],
        "print-bootp.c||print-bootp.c": [
          "File: print-bootp.c -> print-bootp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "611:  bp += sizeof(int32_t);",
          "615:   tag = EXTRACT_8BITS(bp);",
          "616:   bp++;",
          "617:   if (tag == TAG_PAD && ndo->ndo_vflag < 3)",
          "",
          "[Removed Lines]",
          "614:  while (ND_TTEST_8BITS(bp)) {",
          "",
          "[Added Lines]",
          "614:  while (ND_TTEST_1(bp)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "619:   if (tag == TAG_END && ndo->ndo_vflag < 3)",
          "620:    return;",
          "621:   if (tag == TAG_EXTENDED_OPTION) {",
          "623:    tag = EXTRACT_BE_16BITS(bp + 1);",
          "",
          "[Removed Lines]",
          "622:    ND_TCHECK_16BITS(bp + 1);",
          "",
          "[Added Lines]",
          "622:    ND_TCHECK_2(bp + 1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "634:    len = 0;",
          "635:   else {",
          "638:    len = EXTRACT_8BITS(bp);",
          "639:    bp++;",
          "640:   }",
          "",
          "[Removed Lines]",
          "637:    ND_TCHECK_8BITS(bp);",
          "",
          "[Added Lines]",
          "637:    ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "645:   if (tag == TAG_PAD && ndo->ndo_vflag > 2) {",
          "646:    u_int ntag = 1;",
          "649:     bp++;",
          "650:     ntag++;",
          "651:    }",
          "",
          "[Removed Lines]",
          "647:    while (ND_TTEST_8BITS(bp) &&",
          "648:        EXTRACT_8BITS(bp) == TAG_PAD) {",
          "",
          "[Added Lines]",
          "647:    while (ND_TTEST_1(bp) &&",
          "648:           EXTRACT_8BITS(bp) == TAG_PAD) {",
          "",
          "---------------"
        ],
        "print-chdlc.c||print-chdlc.c": [
          "File: print-chdlc.c -> print-chdlc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:                 if (length < 2)",
          "96:                     goto trunc;",
          "98:                 if (*(p+1) == NLPID_CLNP ||",
          "",
          "[Removed Lines]",
          "97:                 ND_TCHECK_16BITS(p);",
          "",
          "[Added Lines]",
          "97:                 ND_TCHECK_2(p);",
          "",
          "---------------"
        ],
        "print-domain.c||print-domain.c": [
          "File: print-domain.c -> print-domain.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: {",
          "57:  register u_char i;",
          "60:   return (NULL);",
          "61:  i = EXTRACT_8BITS(cp);",
          "62:  cp++;",
          "",
          "[Removed Lines]",
          "59:  if (!ND_TTEST_8BITS(cp))",
          "",
          "[Added Lines]",
          "59:  if (!ND_TTEST_1(cp))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:    if ((i & ~INDIR_MASK) != EDNS0_ELT_BITLABEL)",
          "72:     return (NULL);",
          "73:    if ((bitlen = EXTRACT_8BITS(cp)) == 0)",
          "74:     bitlen = 256;",
          "",
          "[Removed Lines]",
          "71:    if (!ND_TTEST_8BITS(cp))",
          "",
          "[Added Lines]",
          "71:    if (!ND_TTEST_1(cp))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77:    cp += bytelen;",
          "78:   } else",
          "79:    cp += i;",
          "81:    return (NULL);",
          "82:   i = EXTRACT_8BITS(cp);",
          "83:   cp++;",
          "",
          "[Removed Lines]",
          "80:   if (!ND_TTEST_8BITS(cp))",
          "",
          "[Added Lines]",
          "80:   if (!ND_TTEST_1(cp))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "94:  const u_char *bitp, *lim;",
          "95:  char tc;",
          "98:   return(NULL);",
          "99:  if ((bitlen = EXTRACT_8BITS(cp)) == 0)",
          "100:   bitlen = 256;",
          "",
          "[Removed Lines]",
          "97:  if (!ND_TTEST_8BITS(cp))",
          "",
          "[Added Lines]",
          "97:  if (!ND_TTEST_1(cp))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "131: {",
          "132:  register u_int i;",
          "135:   return(-1);",
          "136:  i = EXTRACT_8BITS(cp);",
          "137:  if ((i & INDIR_MASK) == EDNS0_MASK) {",
          "",
          "[Removed Lines]",
          "134:  if (!ND_TTEST_8BITS(cp))",
          "",
          "[Added Lines]",
          "134:  if (!ND_TTEST_1(cp))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "140:    ND_PRINT((ndo, \"<ELT %d>\", elt));",
          "141:    return(-1);",
          "142:   }",
          "144:    return(-1);",
          "145:   if ((bitlen = EXTRACT_8BITS(cp + 1)) == 0)",
          "146:    bitlen = 256;",
          "",
          "[Removed Lines]",
          "143:   if (!ND_TTEST_8BITS(cp + 1))",
          "",
          "[Added Lines]",
          "143:   if (!ND_TTEST_1(cp + 1))",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "162:  if ((l = labellen(ndo, cp)) == (u_int)-1)",
          "163:   return(NULL);",
          "165:   return(NULL);",
          "166:  max_offset = (u_int)(cp - bp);",
          "167:  i = EXTRACT_8BITS(cp);",
          "",
          "[Removed Lines]",
          "164:  if (!ND_TTEST_8BITS(cp))",
          "",
          "[Added Lines]",
          "164:  if (!ND_TTEST_1(cp))",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "178:      rp = cp + 1;",
          "179:      compress = 1;",
          "180:     }",
          "182:      return(NULL);",
          "183:     offset = (((i << 8) | EXTRACT_8BITS(cp)) & 0x3fff);",
          "",
          "[Removed Lines]",
          "181:     if (!ND_TTEST_8BITS(cp))",
          "",
          "[Added Lines]",
          "181:     if (!ND_TTEST_1(cp))",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "199:     cp = bp + offset;",
          "200:     if ((l = labellen(ndo, cp)) == (u_int)-1)",
          "201:      return(NULL);",
          "203:      return(NULL);",
          "204:     i = EXTRACT_8BITS(cp);",
          "205:     cp++;",
          "",
          "[Removed Lines]",
          "202:     if (!ND_TTEST_8BITS(cp))",
          "",
          "[Added Lines]",
          "202:     if (!ND_TTEST_1(cp))",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "226:    ND_PRINT((ndo, \".\"));",
          "227:    if ((l = labellen(ndo, cp)) == (u_int)-1)",
          "228:     return(NULL);",
          "230:     return(NULL);",
          "231:    i = EXTRACT_8BITS(cp);",
          "232:    cp++;",
          "",
          "[Removed Lines]",
          "229:    if (!ND_TTEST_8BITS(cp))",
          "",
          "[Added Lines]",
          "229:    if (!ND_TTEST_1(cp))",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "245: {",
          "246:  register u_int i;",
          "249:   return (NULL);",
          "250:  i = EXTRACT_8BITS(cp);",
          "251:  cp++;",
          "",
          "[Removed Lines]",
          "248:  if (!ND_TTEST_8BITS(cp))",
          "",
          "[Added Lines]",
          "248:  if (!ND_TTEST_1(cp))",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "512:   int pbit, pbyte;",
          "513:   char ntop_buf[INET6_ADDRSTRLEN];",
          "516:    return(NULL);",
          "517:   pbit = EXTRACT_8BITS(cp);",
          "518:   pbyte = (pbit & ~7) / 8;",
          "",
          "[Removed Lines]",
          "515:   if (!ND_TTEST_8BITS(cp))",
          "",
          "[Added Lines]",
          "515:   if (!ND_TTEST_1(cp))",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "558:   if ((cp = ns_nprint(ndo, cp, bp)) == NULL)",
          "559:    return(NULL);",
          "560:   cp += 6;",
          "562:    return(NULL);",
          "563:   ND_PRINT((ndo, \" fudge=%u\", EXTRACT_BE_16BITS(cp)));",
          "564:   cp += 2;",
          "566:    return(NULL);",
          "567:   ND_PRINT((ndo, \" maclen=%u\", EXTRACT_BE_16BITS(cp)));",
          "568:   cp += 2 + EXTRACT_BE_16BITS(cp);",
          "570:    return(NULL);",
          "571:   ND_PRINT((ndo, \" origid=%u\", EXTRACT_BE_16BITS(cp)));",
          "572:   cp += 2;",
          "574:    return(NULL);",
          "575:   ND_PRINT((ndo, \" error=%u\", EXTRACT_BE_16BITS(cp)));",
          "576:   cp += 2;",
          "578:    return(NULL);",
          "579:   ND_PRINT((ndo, \" otherlen=%u\", EXTRACT_BE_16BITS(cp)));",
          "580:   cp += 2;",
          "",
          "[Removed Lines]",
          "561:   if (!ND_TTEST_16BITS(cp))",
          "565:   if (!ND_TTEST_16BITS(cp))",
          "569:   if (!ND_TTEST_16BITS(cp))",
          "573:   if (!ND_TTEST_16BITS(cp))",
          "577:   if (!ND_TTEST_16BITS(cp))",
          "",
          "[Added Lines]",
          "561:   if (!ND_TTEST_2(cp))",
          "565:   if (!ND_TTEST_2(cp))",
          "569:   if (!ND_TTEST_2(cp))",
          "573:   if (!ND_TTEST_2(cp))",
          "577:   if (!ND_TTEST_2(cp))",
          "",
          "---------------"
        ],
        "print-dvmrp.c||print-dvmrp.c": [
          "File: print-dvmrp.c -> print-dvmrp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:  if (bp >= ep)",
          "78:   return;",
          "81:  type = EXTRACT_8BITS(bp + 1);",
          "",
          "[Removed Lines]",
          "80:  ND_TCHECK_8BITS(bp + 1);",
          "",
          "[Added Lines]",
          "80:  ND_TCHECK_1(bp + 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "198:    }",
          "199:    origin = 0;",
          "200:    for (i = 0; i < width; ++i) {",
          "202:     origin = origin << 8 | EXTRACT_8BITS(bp);",
          "203:     bp++;",
          "204:    }",
          "205:    for ( ; i < 4; ++i)",
          "206:     origin <<= 8;",
          "209:    metric = EXTRACT_8BITS(bp);",
          "210:    bp++;",
          "211:    done = metric & 0x80;",
          "",
          "[Removed Lines]",
          "201:     ND_TCHECK_8BITS(bp);",
          "208:    ND_TCHECK_8BITS(bp);",
          "",
          "[Added Lines]",
          "201:     ND_TCHECK_1(bp);",
          "208:    ND_TCHECK_1(bp);",
          "",
          "---------------"
        ],
        "print-eap.c||print-eap.c": [
          "File: print-eap.c -> print-eap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "183:     switch (eap->type) {",
          "184:     case EAP_FRAME_TYPE_PACKET:",
          "186:         type = *(tptr);",
          "188:         len = EXTRACT_BE_16BITS(tptr + 2);",
          "189:         ND_PRINT((ndo, \", %s (%u), id %u, len %u\",",
          "190:                tok2str(eap_code_values, \"unknown\", type),",
          "",
          "[Removed Lines]",
          "185:         ND_TCHECK_8BITS(tptr);",
          "187:         ND_TCHECK_16BITS(tptr+2);",
          "",
          "[Added Lines]",
          "185:         ND_TCHECK_1(tptr);",
          "187:         ND_TCHECK_2(tptr + 2);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "195:         ND_TCHECK2(*tptr, len);",
          "199:             subtype = EXTRACT_8BITS(tptr + 4);",
          "200:             ND_PRINT((ndo, \"\\n\\t\\t Type %s (%u)\",",
          "201:                    tok2str(eap_type_values, \"unknown\", subtype),",
          "",
          "[Removed Lines]",
          "198:             ND_TCHECK_8BITS(tptr+4);",
          "",
          "[Added Lines]",
          "198:             ND_TCHECK_1(tptr + 4);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "227:                 while (count < len) {",
          "229:                     ND_PRINT((ndo, \" %s (%u),\",",
          "230:                            tok2str(eap_type_values, \"unknown\", EXTRACT_8BITS((tptr + count))),",
          "",
          "[Removed Lines]",
          "228:                     ND_TCHECK_8BITS(tptr+count);",
          "",
          "[Added Lines]",
          "228:                     ND_TCHECK_1(tptr + count);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "236:             case EAP_TYPE_TTLS:",
          "237:             case EAP_TYPE_TLS:",
          "239:                 if (subtype == EAP_TYPE_TTLS)",
          "240:                     ND_PRINT((ndo, \" TTLSv%u\",",
          "241:                            EAP_TTLS_VERSION(EXTRACT_8BITS((tptr + 5)))));",
          "",
          "[Removed Lines]",
          "238:                 ND_TCHECK_8BITS(tptr + 5);",
          "",
          "[Added Lines]",
          "238:                 ND_TCHECK_1(tptr + 5);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "246:                 if (EAP_TLS_EXTRACT_BIT_L(*(tptr+5))) {",
          "248:       ND_PRINT((ndo, \" len %u\", EXTRACT_BE_32BITS(tptr + 6)));",
          "249:                 }",
          "250:                 break;",
          "252:             case EAP_TYPE_FAST:",
          "254:                 ND_PRINT((ndo, \" FASTv%u\",",
          "255:                        EAP_TTLS_VERSION(EXTRACT_8BITS((tptr + 5)))));",
          "256:                 ND_PRINT((ndo, \" flags [%s] 0x%02x,\",",
          "",
          "[Removed Lines]",
          "247:                     ND_TCHECK_32BITS(tptr + 6);",
          "253:                 ND_TCHECK_8BITS(tptr + 5);",
          "",
          "[Added Lines]",
          "247:                     ND_TCHECK_4(tptr + 6);",
          "253:                 ND_TCHECK_1(tptr + 5);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "260:                 if (EAP_TLS_EXTRACT_BIT_L(*(tptr+5))) {",
          "262:                     ND_PRINT((ndo, \" len %u\", EXTRACT_BE_32BITS(tptr + 6)));",
          "263:                 }",
          "",
          "[Removed Lines]",
          "261:                     ND_TCHECK_32BITS(tptr + 6);",
          "",
          "[Added Lines]",
          "261:                     ND_TCHECK_4(tptr + 6);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "268:             case EAP_TYPE_AKA:",
          "269:             case EAP_TYPE_SIM:",
          "271:                 ND_PRINT((ndo, \" subtype [%s] 0x%02x,\",",
          "272:                        tok2str(eap_aka_subtype_values, \"unknown\", EXTRACT_8BITS((tptr + 5))),",
          "",
          "[Removed Lines]",
          "270:                 ND_TCHECK_8BITS(tptr + 5);",
          "",
          "[Added Lines]",
          "270:                 ND_TCHECK_1(tptr + 5);",
          "",
          "---------------"
        ],
        "print-fr.c||print-fr.c": [
          "File: print-fr.c -> print-fr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:                            const u_char *p, u_int *dlci,",
          "103:                            u_int *addr_len, uint8_t *flags, u_int length)",
          "104: {",
          "106:   return -1;",
          "107:  if ((EXTRACT_8BITS(p) & FR_EA_BIT))",
          "108:   return 0;",
          "111:   return -1;",
          "",
          "[Removed Lines]",
          "105:  if (!ND_TTEST_8BITS(p) || length < 1)",
          "110:  if (!ND_TTEST_8BITS(p+1) || length < 2)",
          "",
          "[Added Lines]",
          "105:  if (!ND_TTEST_1(p) || length < 1)",
          "110:  if (!ND_TTEST_1(p + 1) || length < 2)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "123:  p += 2;",
          "124:  length -= 2;",
          "126:   return -1;",
          "128:  if ((EXTRACT_8BITS(p) & FR_EA_BIT) == 0) {",
          "",
          "[Removed Lines]",
          "125:  if (!ND_TTEST_8BITS(p) || length < 1)",
          "",
          "[Added Lines]",
          "125:  if (!ND_TTEST_1(p) || length < 1)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "132:   length--;",
          "133:  }",
          "136:   return -1;",
          "137:  if ((EXTRACT_8BITS(p) & FR_EA_BIT) == 0)",
          "",
          "[Removed Lines]",
          "135:  if (!ND_TTEST_8BITS(p) || length < 1)",
          "",
          "[Added Lines]",
          "135:  if (!ND_TTEST_1(p) || length < 1)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "253:   return 0;",
          "254:  }",
          "257:  if (length < addr_len + 1)",
          "258:   goto trunc;",
          "",
          "[Removed Lines]",
          "256:  ND_TCHECK_8BITS(p + addr_len);",
          "",
          "[Added Lines]",
          "256:  ND_TCHECK_1(p + addr_len);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "268:                         ND_PRINT((ndo, \"UI %02x! \", EXTRACT_8BITS(p + addr_len)));",
          "269:                 } else {",
          "",
          "[Removed Lines]",
          "266:   if (!ND_TTEST_16BITS(p + addr_len) || length < addr_len + 2) {",
          "",
          "[Added Lines]",
          "266:   if (!ND_TTEST_2(p + addr_len) || length < addr_len + 2) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "285:                 }",
          "286:         }",
          "289:  if (length < addr_len + 2)",
          "290:   goto trunc;",
          "",
          "[Removed Lines]",
          "288:  ND_TCHECK_8BITS(p + addr_len + 1);",
          "",
          "[Added Lines]",
          "288:  ND_TCHECK_1(p + addr_len + 1);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "307:   hdr_len = addr_len + 1 /* UI */ + 1 /* NLPID */;",
          "308:  }",
          "311:  if (length < hdr_len)",
          "312:   goto trunc;",
          "313:  nlpid = EXTRACT_8BITS(p + hdr_len - 1);",
          "",
          "[Removed Lines]",
          "310:         ND_TCHECK_8BITS(p + hdr_len - 1);",
          "",
          "[Added Lines]",
          "310:         ND_TCHECK_1(p + hdr_len - 1);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "907:  ND_PRINT((ndo, \"%s, codeset %u\", is_ansi ? \"ANSI\" : \"CCITT\", codeset));",
          "909:  if (call_ref_length != 0) {",
          "911:   if (call_ref_length > 1 || EXTRACT_8BITS(p) != 0) {",
          "",
          "[Removed Lines]",
          "910:   ND_TCHECK_8BITS(p);",
          "",
          "[Added Lines]",
          "910:   ND_TCHECK_1(p);",
          "",
          "---------------"
        ],
        "print-icmp.c||print-icmp.c": [
          "File: print-icmp.c -> print-icmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "581:   ND_PRINT((ndo, \"\\n\\t\"));",
          "582:   ip = (const struct ip *)bp;",
          "583:                 snapend_save = ndo->ndo_snapend;",
          "585:   ip_print(ndo, bp, EXTRACT_BE_16BITS(&ip->ip_len));",
          "586:                 ndo->ndo_snapend = snapend_save;",
          "587:  }",
          "",
          "[Removed Lines]",
          "584:   ND_TCHECK_16BITS(&ip->ip_len);",
          "",
          "[Added Lines]",
          "584:   ND_TCHECK_2(&ip->ip_len);",
          "",
          "---------------"
        ],
        "print-igmp.c||print-igmp.c": [
          "File: print-igmp.c -> print-igmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "158:  ND_PRINT((ndo, \" [invalid len %d]\", len));",
          "159:  return;",
          "160:     }",
          "162:     ngroups = EXTRACT_BE_16BITS(bp + 6);",
          "163:     ND_PRINT((ndo, \", %d group record(s)\", ngroups));",
          "164:     if (ndo->ndo_vflag > 0) {",
          "",
          "[Removed Lines]",
          "161:     ND_TCHECK_16BITS(bp + 6);",
          "",
          "[Added Lines]",
          "161:     ND_TCHECK_2(bp + 6);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "215:  ND_PRINT((ndo, \" [invalid len %d]\", len));",
          "216:  return;",
          "217:     }",
          "219:     mrc = EXTRACT_8BITS(bp + 1);",
          "220:     if (mrc < 128) {",
          "221:  mrt = mrc;",
          "",
          "[Removed Lines]",
          "218:     ND_TCHECK_8BITS(bp + 1);",
          "",
          "[Added Lines]",
          "218:     ND_TCHECK_1(bp + 1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "231:         }",
          "232:  ND_PRINT((ndo, \"]\"));",
          "233:     }",
          "235:     if (EXTRACT_BE_32BITS(bp + 4) == 0)",
          "236:  return;",
          "237:     ND_PRINT((ndo, \" [gaddr %s\", ipaddr_string(ndo, &bp[4])));",
          "239:     nsrcs = EXTRACT_BE_16BITS(bp + 10);",
          "240:     if (nsrcs > 0) {",
          "241:  if (len < 12 + (nsrcs << 2))",
          "",
          "[Removed Lines]",
          "234:     ND_TCHECK_32BITS(bp + 4);",
          "238:     ND_TCHECK_16BITS(bp + 10);",
          "",
          "[Added Lines]",
          "234:     ND_TCHECK_4(bp + 4);",
          "238:     ND_TCHECK_2(bp + 10);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "267:         return;",
          "268:     }",
          "271:     switch (EXTRACT_8BITS(bp)) {",
          "272:     case 0x11:",
          "273:         ND_PRINT((ndo, \"igmp query\"));",
          "274:  if (len >= 12)",
          "275:      print_igmpv3_query(ndo, bp, len);",
          "276:  else {",
          "278:      if (EXTRACT_8BITS(bp + 1)) {",
          "279:   ND_PRINT((ndo, \" v2\"));",
          "280:   if (EXTRACT_8BITS(bp + 1) != 100)",
          "281:       ND_PRINT((ndo, \" [max resp time %u]\", EXTRACT_8BITS(bp + 1)));",
          "282:      } else",
          "283:   ND_PRINT((ndo, \" v1\"));",
          "285:      if (EXTRACT_BE_32BITS(bp + 4))",
          "286:                 ND_PRINT((ndo, \" [gaddr %s]\", ipaddr_string(ndo, &bp[4])));",
          "287:             if (len != 8)",
          "",
          "[Removed Lines]",
          "270:     ND_TCHECK_8BITS(bp);",
          "277:             ND_TCHECK_8BITS(bp + 1);",
          "284:             ND_TCHECK_32BITS(bp + 4);",
          "",
          "[Added Lines]",
          "270:     ND_TCHECK_1(bp);",
          "277:             ND_TCHECK_1(bp + 1);",
          "284:             ND_TCHECK_4(bp + 4);",
          "",
          "---------------"
        ],
        "print-isakmp.c||print-isakmp.c": [
          "File: print-isakmp.c -> print-isakmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "922:  if (p[0] & 0x80)",
          "923:   totlen = 4;",
          "924:  else {",
          "926:   totlen = 4 + EXTRACT_BE_16BITS(p + 2);",
          "927:  }",
          "928:  if (ep2 < p + totlen) {",
          "",
          "[Removed Lines]",
          "925:   ND_TCHECK_16BITS(&p[2]);",
          "",
          "[Added Lines]",
          "925:   ND_TCHECK_2(&p[2]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "930:   return ep2 + 1;",
          "931:  }",
          "934:  ND_PRINT((ndo,\"(\"));",
          "935:  t = EXTRACT_BE_16BITS(p) & 0x7fff;",
          "936:  if (map && t < nmap && map[t].type)",
          "",
          "[Removed Lines]",
          "933:  ND_TCHECK_16BITS(&p[0]);",
          "",
          "[Added Lines]",
          "933:  ND_TCHECK_2(&p[0]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "939:   ND_PRINT((ndo,\"type=#%d \", t));",
          "940:  if (p[0] & 0x80) {",
          "941:   ND_PRINT((ndo,\"value=\"));",
          "943:   v = EXTRACT_BE_16BITS(p + 2);",
          "944:   if (map && t < nmap && v < map[t].nvalue && map[t].value[v])",
          "945:    ND_PRINT((ndo,\"%s\", map[t].value[v]));",
          "",
          "[Removed Lines]",
          "942:   ND_TCHECK_16BITS(&p[2]);",
          "",
          "[Added Lines]",
          "942:   ND_TCHECK_2(&p[2]);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "973:  if (p[0] & 0x80)",
          "974:   totlen = 4;",
          "975:  else {",
          "977:   totlen = 4 + EXTRACT_BE_16BITS(p + 2);",
          "978:  }",
          "979:  if (ep2 < p + totlen) {",
          "",
          "[Removed Lines]",
          "976:   ND_TCHECK_16BITS(&p[2]);",
          "",
          "[Added Lines]",
          "976:   ND_TCHECK_2(&p[2]);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "981:   return ep2 + 1;",
          "982:  }",
          "985:  ND_PRINT((ndo,\"(\"));",
          "986:  t = EXTRACT_BE_16BITS(p) & 0x7fff;",
          "987:  ND_PRINT((ndo,\"type=#%d \", t));",
          "",
          "[Removed Lines]",
          "984:  ND_TCHECK_16BITS(&p[0]);",
          "",
          "[Added Lines]",
          "984:  ND_TCHECK_2(&p[0]);",
          "",
          "---------------"
        ],
        "print-isoclns.c||print-isoclns.c": [
          "File: print-isoclns.c -> print-isoclns.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1343:             case ESIS_OPTION_PROTOCOLS:",
          "1344:                 while (opli>0) {",
          "1346:                     ND_PRINT((ndo, \"%s (0x%02x)\",",
          "1347:                            tok2str(nlpid_values,",
          "1348:                                    \"unknown\",",
          "",
          "[Removed Lines]",
          "1345:                     ND_TCHECK_8BITS(tptr);",
          "",
          "[Added Lines]",
          "1345:                     ND_TCHECK_1(tptr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1625:           stlv_len = stlv_len - 8;",
          "1627:           while (stlv_len >= 4) {",
          "1629:             ND_PRINT((ndo, \"\\n\\t        T: %d, R: %d, RES: %d, ISID: %d\",",
          "1630:                     (EXTRACT_BE_32BITS(tptr) >> 31),",
          "1631:                     (EXTRACT_BE_32BITS(tptr) >> 30) & 0x01,",
          "",
          "[Removed Lines]",
          "1628:             ND_TCHECK_32BITS(tptr);",
          "",
          "[Added Lines]",
          "1628:             ND_TCHECK_4(tptr);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2000:     tptr+=NODE_ID_LEN;",
          "2004:      return(0);",
          "2005:  ND_PRINT((ndo, \", Metric: %d\", EXTRACT_BE_24BITS(tptr)));",
          "2006:  tptr+=3;",
          "2007:     }",
          "2010:         return(0);",
          "2012:     tptr++;",
          "",
          "[Removed Lines]",
          "2009:     if (!ND_TTEST_8BITS(tptr))",
          "",
          "[Added Lines]",
          "2009:     if (!ND_TTEST_1(tptr))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2041: isis_print_mtid(netdissect_options *ndo,",
          "2042:                 const uint8_t *tptr, const char *ident)",
          "2043: {",
          "2045:         return(0);",
          "2047:     ND_PRINT((ndo, \"%s%s\",",
          "",
          "[Removed Lines]",
          "2044:     if (!ND_TTEST_16BITS(tptr))",
          "",
          "[Added Lines]",
          "2044:     if (!ND_TTEST_2(tptr))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2073:     u_int metric, status_byte, bit_length, byte_length, sublen, processed, subtlvtype, subtlvlen;",
          "2076:         return (0);",
          "2077:     metric = EXTRACT_BE_32BITS(tptr);",
          "2078:     processed=4;",
          "2079:     tptr+=4;",
          "2081:     if (afi == AF_INET) {",
          "2083:             return (0);",
          "2084:         status_byte=EXTRACT_8BITS(tptr);",
          "2085:         tptr++;",
          "",
          "[Removed Lines]",
          "2075:     if (!ND_TTEST_32BITS(tptr))",
          "",
          "[Added Lines]",
          "2075:     if (!ND_TTEST_4(tptr))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2145:            than one subTLV - therefore the first byte must reflect",
          "2146:            the aggregate bytecount of the subTLVs for this prefix",
          "2149:             return (0);",
          "2150:         sublen=EXTRACT_8BITS(tptr);",
          "2151:         tptr++;",
          "",
          "[Removed Lines]",
          "2148:         if (!ND_TTEST_8BITS(tptr))",
          "",
          "[Added Lines]",
          "2148:         if (!ND_TTEST_1(tptr))",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2589:  switch (tlv_type) {",
          "2590:  case ISIS_TLV_AREA_ADDR:",
          "2592:      alen = EXTRACT_8BITS(tptr);",
          "2593:      tptr++;",
          "2594:      while (tmp && alen < tmp) {",
          "",
          "[Removed Lines]",
          "2591:      ND_TCHECK_8BITS(tptr);",
          "",
          "[Added Lines]",
          "2591:      ND_TCHECK_1(tptr);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2600:   tmp -= alen + 1;",
          "2602:                     break;",
          "2604:   alen = EXTRACT_8BITS(tptr);",
          "2605:   tptr++;",
          "2606:      }",
          "",
          "[Removed Lines]",
          "2603:   ND_TCHECK_8BITS(tptr);",
          "",
          "[Added Lines]",
          "2603:   ND_TCHECK_1(tptr);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2774:      }",
          "2775:      break;",
          "2776:  case ISIS_TLV_AUTH:",
          "2779:             ND_PRINT((ndo, \"\\n\\t      %s: \",",
          "2780:                    tok2str(isis_subtlv_auth_values,",
          "",
          "[Removed Lines]",
          "2777:      ND_TCHECK_8BITS(tptr);",
          "",
          "[Added Lines]",
          "2777:      ND_TCHECK_1(tptr);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2788:   break;",
          "2789:      case ISIS_SUBTLV_AUTH_MD5:",
          "2790:   for(i=1;i<tlv_len;i++) {",
          "2792:       ND_PRINT((ndo, \"%02x\", EXTRACT_8BITS(tptr + i)));",
          "2793:   }",
          "2794:   if (tlv_len != ISIS_SUBTLV_AUTH_MD5_LEN+1)",
          "",
          "[Removed Lines]",
          "2791:       ND_TCHECK_8BITS(tptr + i);",
          "",
          "[Added Lines]",
          "2791:       ND_TCHECK_1(tptr + i);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2802:   break;",
          "2803:             case ISIS_SUBTLV_AUTH_GENERIC:",
          "2805:                 key_id = EXTRACT_BE_16BITS(tptr + 1);",
          "2806:                 ND_PRINT((ndo, \"%u, password: \", key_id));",
          "2807:                 for(i=1 + sizeof(uint16_t);i<tlv_len;i++) {",
          "2809:                     ND_PRINT((ndo, \"%02x\", EXTRACT_8BITS(tptr + i)));",
          "2810:                 }",
          "2811:                 break;",
          "",
          "[Removed Lines]",
          "2804:   ND_TCHECK_16BITS(tptr + 1);",
          "2808:                     ND_TCHECK_8BITS(tptr + i);",
          "",
          "[Added Lines]",
          "2804:   ND_TCHECK_2(tptr + 1);",
          "2808:                     ND_TCHECK_1(tptr + i);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2820:  case ISIS_TLV_PTP_ADJ:",
          "2821:      tlv_ptp_adj = (const struct isis_tlv_ptp_adj *)tptr;",
          "2822:      if(tmp>=1) {",
          "2824:   ND_PRINT((ndo, \"\\n\\t      Adjacency State: %s (%u)\",",
          "2825:          tok2str(isis_ptp_adjancey_values, \"unknown\", EXTRACT_8BITS(tptr)),",
          "2826:          EXTRACT_8BITS(tptr)));",
          "",
          "[Removed Lines]",
          "2823:   ND_TCHECK_8BITS(tptr);",
          "",
          "[Added Lines]",
          "2823:   ND_TCHECK_1(tptr);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2848:  case ISIS_TLV_PROTOCOLS:",
          "2849:      ND_PRINT((ndo, \"\\n\\t      NLPID(s): \"));",
          "2850:      while (tmp>0) {",
          "2852:   ND_PRINT((ndo, \"%s (0x%02x)\",",
          "2853:                        tok2str(nlpid_values,",
          "2854:                                \"unknown\",",
          "",
          "[Removed Lines]",
          "2851:   ND_TCHECK_8BITS(tptr);",
          "",
          "[Added Lines]",
          "2851:   ND_TCHECK_1(tptr);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2864:     case ISIS_TLV_MT_PORT_CAP:",
          "2865:     {",
          "2868:       ND_PRINT((ndo, \"\\n\\t       RES: %d, MTID(s): %d\",",
          "2869:               (EXTRACT_BE_16BITS(tptr) >> 12),",
          "",
          "[Removed Lines]",
          "2866:       ND_TCHECK_16BITS(tptr);",
          "",
          "[Added Lines]",
          "2866:       ND_TCHECK_2(tptr);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2881:     case ISIS_TLV_MT_CAPABILITY:",
          "2885:       ND_PRINT((ndo, \"\\n\\t      O: %d, RES: %d, MTID(s): %d\",",
          "2886:                 (EXTRACT_BE_16BITS(tptr) >> 15) & 0x01,",
          "",
          "[Removed Lines]",
          "2883:       ND_TCHECK_16BITS(tptr);",
          "",
          "[Added Lines]",
          "2883:       ND_TCHECK_2(tptr);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2926:      if (tmp < 1)",
          "2927:          break;",
          "2929:      ND_PRINT((ndo, \", Flags: [%s]\", ISIS_MASK_TLV_SHARED_RISK_GROUP(EXTRACT_8BITS(tptr)) ? \"numbered\" : \"unnumbered\"));",
          "2930:      tptr++;",
          "2931:      tmp--;",
          "",
          "[Removed Lines]",
          "2928:      ND_TCHECK_8BITS(tptr);",
          "",
          "[Added Lines]",
          "2928:      ND_TCHECK_1(tptr);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2945:      tmp-=sizeof(struct in_addr);",
          "2947:      while (tmp>=4) {",
          "2949:                 ND_PRINT((ndo, \"\\n\\t      Link-ID: 0x%08x\", EXTRACT_BE_32BITS(tptr)));",
          "2950:                 tptr+=4;",
          "2951:                 tmp-=4;",
          "",
          "[Removed Lines]",
          "2948:                 ND_TCHECK_32BITS(tptr);",
          "",
          "[Added Lines]",
          "2948:                 ND_TCHECK_4(tptr);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "3095:             tmp-=sizeof(struct isis_metric_block);",
          "3097:             while(tmp>0) {",
          "3100:                 tptr++;",
          "3101:                 if (prefix_len < 2) {",
          "",
          "[Removed Lines]",
          "3098:                 ND_TCHECK_8BITS(tptr);",
          "",
          "[Added Lines]",
          "3098:                 ND_TCHECK_1(tptr);",
          "",
          "---------------"
        ],
        "print-juniper.c||print-juniper.c": [
          "File: print-juniper.c -> print-juniper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1373:             l2info->proto = EXTRACT_BE_16BITS(p + l2info->cookie_len);",
          "1374:             break;",
          "1375:         }",
          "",
          "[Removed Lines]",
          "1372:             ND_TCHECK_16BITS(p+l2info->cookie_len);",
          "",
          "[Added Lines]",
          "1372:             ND_TCHECK_2(p + l2info->cookie_len);",
          "",
          "---------------"
        ],
        "print-mobility.c||print-mobility.c": [
          "File: print-mobility.c -> print-mobility.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:     goto trunc;",
          "151:    }",
          "154:    ND_PRINT((ndo, \"(refresh: %u)\",",
          "155:     EXTRACT_BE_16BITS(bp + i + 2) << 2));",
          "156:    break;",
          "",
          "[Removed Lines]",
          "153:    ND_TCHECK_16BITS(&bp[i+2]);",
          "",
          "[Added Lines]",
          "153:    ND_TCHECK_2(&bp[i + 2]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159:     ND_PRINT((ndo, \"(altcoa: trunc)\"));",
          "160:     goto trunc;",
          "161:    }",
          "163:    ND_PRINT((ndo, \"(alt-CoA: %s)\", ip6addr_string(ndo, &bp[i+2])));",
          "164:    break;",
          "165:   case IP6MOPT_NONCEID:",
          "",
          "[Removed Lines]",
          "162:    ND_TCHECK_128BITS(&bp[i+2]);",
          "",
          "[Added Lines]",
          "162:    ND_TCHECK_16(&bp[i + 2]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "167:     ND_PRINT((ndo, \"(ni: trunc)\"));",
          "168:     goto trunc;",
          "169:    }",
          "172:    ND_PRINT((ndo, \"(ni: ho=0x%04x co=0x%04x)\",",
          "173:     EXTRACT_BE_16BITS(bp + i + 2),",
          "174:     EXTRACT_BE_16BITS(bp + i + 4)));",
          "",
          "[Removed Lines]",
          "170:    ND_TCHECK_16BITS(&bp[i+2]);",
          "171:    ND_TCHECK_16BITS(&bp[i+4]);",
          "",
          "[Added Lines]",
          "170:    ND_TCHECK_2(&bp[i + 2]);",
          "171:    ND_TCHECK_2(&bp[i + 4]);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "247:  case IP6M_CAREOF_TEST_INIT:",
          "248:   hlen = IP6M_MINLEN;",
          "249:   if (ndo->ndo_vflag) {",
          "251:    ND_PRINT((ndo, \" %s Init Cookie=%08x:%08x\",",
          "252:           type == IP6M_HOME_TEST_INIT ? \"Home\" : \"Care-of\",",
          "253:           EXTRACT_BE_32BITS(bp + hlen),",
          "",
          "[Removed Lines]",
          "250:    ND_TCHECK_32BITS(&bp[hlen + 4]);",
          "",
          "[Added Lines]",
          "250:    ND_TCHECK_4(&bp[hlen + 4]);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "261:   ND_PRINT((ndo, \" nonce id=0x%x\", EXTRACT_BE_16BITS(&mh->ip6m_data16[0])));",
          "262:   hlen = IP6M_MINLEN;",
          "263:   if (ndo->ndo_vflag) {",
          "265:    ND_PRINT((ndo, \" %s Init Cookie=%08x:%08x\",",
          "266:           type == IP6M_HOME_TEST ? \"Home\" : \"Care-of\",",
          "267:           EXTRACT_BE_32BITS(bp + hlen),",
          "",
          "[Removed Lines]",
          "264:    ND_TCHECK_32BITS(&bp[hlen + 4]);",
          "",
          "[Added Lines]",
          "264:    ND_TCHECK_4(&bp[hlen + 4]);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "269:   }",
          "270:   hlen += 8;",
          "271:   if (ndo->ndo_vflag) {",
          "273:    ND_PRINT((ndo, \" %s Keygen Token=%08x:%08x\",",
          "274:           type == IP6M_HOME_TEST ? \"Home\" : \"Care-of\",",
          "275:           EXTRACT_BE_32BITS(bp + hlen),",
          "",
          "[Removed Lines]",
          "272:    ND_TCHECK_32BITS(&bp[hlen + 4]);",
          "",
          "[Added Lines]",
          "272:    ND_TCHECK_4(&bp[hlen + 4]);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "281:   ND_TCHECK(mh->ip6m_data16[0]);",
          "282:   ND_PRINT((ndo, \" seq#=%u\", EXTRACT_BE_16BITS(&mh->ip6m_data16[0])));",
          "283:   hlen = IP6M_MINLEN;",
          "285:   if (bp[hlen] & 0xf0) {",
          "286:    ND_PRINT((ndo, \" \"));",
          "287:    if (bp[hlen] & 0x80)",
          "",
          "[Removed Lines]",
          "284:   ND_TCHECK_16BITS(&bp[hlen]);",
          "",
          "[Added Lines]",
          "284:   ND_TCHECK_2(&bp[hlen]);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "297:   hlen += 1;",
          "299:   hlen += 1;",
          "302:   ND_PRINT((ndo, \" lifetime=%u\", EXTRACT_BE_16BITS(bp + hlen) << 2));",
          "303:   hlen += 2;",
          "",
          "[Removed Lines]",
          "300:   ND_TCHECK_16BITS(&bp[hlen]);",
          "",
          "[Added Lines]",
          "300:   ND_TCHECK_2(&bp[hlen]);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "310:    ND_PRINT((ndo, \" K\"));",
          "312:   hlen = IP6M_MINLEN;",
          "314:   ND_PRINT((ndo, \" seq#=%u\", EXTRACT_BE_16BITS(bp + hlen)));",
          "315:   hlen += 2;",
          "318:   ND_PRINT((ndo, \" lifetime=%u\", EXTRACT_BE_16BITS(bp + hlen) << 2));",
          "319:   hlen += 2;",
          "",
          "[Removed Lines]",
          "313:   ND_TCHECK_16BITS(&bp[hlen]);",
          "316:   ND_TCHECK_16BITS(&bp[hlen]);",
          "",
          "[Added Lines]",
          "313:   ND_TCHECK_2(&bp[hlen]);",
          "316:   ND_TCHECK_2(&bp[hlen]);",
          "",
          "---------------"
        ],
        "print-ospf6.c||print-ospf6.c": [
          "File: print-ospf6.c -> print-ospf6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "737:  case OSPF_TYPE_HELLO: {",
          "738:   register const struct hello6 *hellop = (const struct hello6 *)((const uint8_t *)op + OSPF6HDR_LEN);",
          "741:   ND_PRINT((ndo, \"\\n\\tOptions [%s]\",",
          "742:             bittok2str(ospf6_option_values, \"none\",",
          "743:             EXTRACT_BE_32BITS(&hellop->hello_options))));",
          "",
          "[Removed Lines]",
          "740:   ND_TCHECK_32BITS(&hellop->hello_options);",
          "",
          "[Added Lines]",
          "740:   ND_TCHECK_4(&hellop->hello_options);",
          "",
          "---------------"
        ],
        "print-pgm.c||print-pgm.c": [
          "File: print-pgm.c -> print-pgm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "363:      bp += (2 * sizeof(uint16_t));",
          "365:      switch (EXTRACT_BE_16BITS(bp)) {",
          "366:      case AFNUM_INET:",
          "367:   ND_TCHECK2(*bp, sizeof(struct in_addr));",
          "",
          "[Removed Lines]",
          "364:      ND_TCHECK_16BITS(bp);",
          "",
          "[Added Lines]",
          "364:      ND_TCHECK_2(bp);",
          "",
          "---------------"
        ],
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1023:   if (len < 2)",
          "1024:    goto trunc;",
          "1026:   ND_PRINT((ndo, \" tag=%x\", EXTRACT_BE_16BITS(bp)));",
          "1027:   bp += 2;",
          "1028:   len -= 2;",
          "",
          "[Removed Lines]",
          "1025:   ND_TCHECK_16BITS(bp);",
          "",
          "[Added Lines]",
          "1025:   ND_TCHECK_2(bp);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1080:     if (len < 2)",
          "1081:      goto trunc;",
          "1083:     ND_PRINT((ndo, \",holdtime=\"));",
          "1084:     unsigned_relts_print(ndo,",
          "1085:            EXTRACT_BE_16BITS(bp));",
          "",
          "[Removed Lines]",
          "1082:     ND_TCHECK_16BITS(bp);",
          "",
          "[Added Lines]",
          "1082:     ND_TCHECK_2(bp);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1130:   ND_PRINT((ndo, \" prio=%d\", bp[1]));",
          "1131:   if (len < 4)",
          "1132:    goto trunc;",
          "1134:   ND_PRINT((ndo, \" holdtime=\"));",
          "1135:   unsigned_relts_print(ndo, EXTRACT_BE_16BITS(bp + 2));",
          "1136:   bp += 4;",
          "",
          "[Removed Lines]",
          "1133:   ND_TCHECK_16BITS(&bp[2]);",
          "",
          "[Added Lines]",
          "1133:   ND_TCHECK_2(&bp[2]);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1172:   len -= advance;",
          "1173:   if (len < 2)",
          "1174:    goto trunc;",
          "1176:   ND_PRINT((ndo, \" TUNR \"));",
          "1177:   unsigned_relts_print(ndo, EXTRACT_BE_16BITS(bp));",
          "1178:   break;",
          "",
          "[Removed Lines]",
          "1175:   ND_TCHECK_16BITS(bp);",
          "",
          "[Added Lines]",
          "1175:   ND_TCHECK_2(bp);",
          "",
          "---------------"
        ],
        "print-ppp.c||print-ppp.c": [
          "File: print-ppp.c -> print-ppp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "613:    ND_PRINT((ndo, \" (length bogus, should be >= 6)\"));",
          "614:    return len;",
          "615:   }",
          "617:   ND_PRINT((ndo, \": Vendor: %s (%u)\",",
          "618:    tok2str(oui_values,\"Unknown\",EXTRACT_BE_24BITS(p + 2)),",
          "619:    EXTRACT_BE_24BITS(p + 2)));",
          "",
          "[Removed Lines]",
          "616:   ND_TCHECK_24BITS(p + 2);",
          "",
          "[Added Lines]",
          "616:   ND_TCHECK_3(p + 2);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "632:    ND_PRINT((ndo, \" (length bogus, should be = 4)\"));",
          "633:    return len;",
          "634:   }",
          "636:   ND_PRINT((ndo, \": %u\", EXTRACT_BE_16BITS(p + 2)));",
          "637:   break;",
          "638:  case LCPOPT_ACCM:",
          "",
          "[Removed Lines]",
          "635:   ND_TCHECK_16BITS(p + 2);",
          "",
          "[Added Lines]",
          "635:   ND_TCHECK_2(p + 2);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "640:    ND_PRINT((ndo, \" (length bogus, should be = 6)\"));",
          "641:    return len;",
          "642:   }",
          "644:   ND_PRINT((ndo, \": 0x%08x\", EXTRACT_BE_32BITS(p + 2)));",
          "645:   break;",
          "646:  case LCPOPT_AP:",
          "",
          "[Removed Lines]",
          "643:   ND_TCHECK_32BITS(p + 2);",
          "",
          "[Added Lines]",
          "643:   ND_TCHECK_4(p + 2);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "648:    ND_PRINT((ndo, \" (length bogus, should be >= 4)\"));",
          "649:    return len;",
          "650:   }",
          "652:   ND_PRINT((ndo, \": %s\", tok2str(ppptype2str, \"Unknown Auth Proto (0x04x)\", EXTRACT_BE_16BITS(p + 2))));",
          "654:   switch (EXTRACT_BE_16BITS(p + 2)) {",
          "",
          "[Removed Lines]",
          "651:   ND_TCHECK_16BITS(p + 2);",
          "",
          "[Added Lines]",
          "651:   ND_TCHECK_2(p + 2);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "670:    ND_PRINT((ndo, \" (length bogus, should be >= 4)\"));",
          "671:    return 0;",
          "672:   }",
          "674:   if (EXTRACT_BE_16BITS(p + 2) == PPP_LQM)",
          "675:    ND_PRINT((ndo, \": LQR\"));",
          "676:   else",
          "",
          "[Removed Lines]",
          "673:   ND_TCHECK_16BITS(p+2);",
          "",
          "[Added Lines]",
          "673:   ND_TCHECK_2(p + 2);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "681:    ND_PRINT((ndo, \" (length bogus, should be = 6)\"));",
          "682:    return 0;",
          "683:   }",
          "685:   ND_PRINT((ndo, \": 0x%08x\", EXTRACT_BE_32BITS(p + 2)));",
          "686:   break;",
          "687:  case LCPOPT_PFC:",
          "",
          "[Removed Lines]",
          "684:   ND_TCHECK_32BITS(p + 2);",
          "",
          "[Added Lines]",
          "684:   ND_TCHECK_4(p + 2);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "693:    ND_PRINT((ndo, \" (length bogus, should be = 4)\"));",
          "694:    return 0;",
          "695:   }",
          "697:   ND_PRINT((ndo, \": 0x%04x\", EXTRACT_BE_16BITS(p + 2)));",
          "698:   break;",
          "699:  case LCPOPT_CBACK:",
          "",
          "[Removed Lines]",
          "696:   ND_TCHECK_16BITS(p + 2);",
          "",
          "[Added Lines]",
          "696:   ND_TCHECK_2(p + 2);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "712:    ND_PRINT((ndo, \" (length bogus, should be = 4)\"));",
          "713:    return 0;",
          "714:   }",
          "716:   ND_PRINT((ndo, \": %u\", EXTRACT_BE_16BITS(p + 2)));",
          "717:   break;",
          "718:  case LCPOPT_MLED:",
          "",
          "[Removed Lines]",
          "715:   ND_TCHECK_16BITS(p + 2);",
          "",
          "[Added Lines]",
          "715:   ND_TCHECK_2(p + 2);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "817:         ND_PRINT((ndo, \"[|mlppp]\"));",
          "818:         return;",
          "819:     }",
          "821:         ND_PRINT((ndo, \"[|mlppp]\"));",
          "822:         return;",
          "823:     }",
          "",
          "[Removed Lines]",
          "820:     if (!ND_TTEST_16BITS(p)) {",
          "",
          "[Added Lines]",
          "820:     if (!ND_TTEST_2(p)) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1072:    ND_PRINT((ndo, \" (length bogus, should be >= 4)\"));",
          "1073:    return 0;",
          "1074:   }",
          "1076:   compproto = EXTRACT_BE_16BITS(p + 2);",
          "1078:   ND_PRINT((ndo, \": %s (0x%02x):\",",
          "",
          "[Removed Lines]",
          "1075:   ND_TCHECK_16BITS(p+2);",
          "",
          "[Added Lines]",
          "1075:   ND_TCHECK_2(p + 2);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1353:    ND_PRINT((ndo, \" (length bogus, should be = 6)\"));",
          "1354:    return len;",
          "1355:   }",
          "1357:   ND_PRINT((ndo, \": Magic-Num 0x%08x\", EXTRACT_BE_32BITS(p + 2)));",
          "1358:   break;",
          "1359:  default:",
          "",
          "[Removed Lines]",
          "1356:   ND_TCHECK_32BITS(p + 2);",
          "",
          "[Added Lines]",
          "1356:   ND_TCHECK_4(p + 2);",
          "",
          "---------------"
        ],
        "print-rpki-rtr.c||print-rpki-rtr.c": [
          "File: print-rpki-rtr.c -> print-rpki-rtr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "182:     const u_char *msg;",
          "186:     if (*tptr != 0) {",
          "",
          "[Removed Lines]",
          "185:     ND_TCHECK_8BITS(tptr);",
          "",
          "[Added Lines]",
          "185:     ND_TCHECK_1(tptr);",
          "",
          "---------------"
        ],
        "print-rx.c||print-rx.c": [
          "File: print-rx.c -> print-rx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "682:  struct rx_cache_entry *rxent;",
          "683:  const struct rx_header *rxh = (const struct rx_header *) bp;",
          "686:   return;",
          "688:  rxent = &rx_cache[rx_cache_next];",
          "",
          "[Removed Lines]",
          "685:  if (!ND_TTEST_32BITS(bp + sizeof(struct rx_header)))",
          "",
          "[Added Lines]",
          "685:  if (!ND_TTEST_4(bp + sizeof(struct rx_header)))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "771:   }",
          "773: #define INTOUT() { int32_t _i; \\",
          "775:    _i = EXTRACT_BE_INT32(bp); \\",
          "776:    bp += sizeof(int32_t); \\",
          "777:    ND_PRINT((ndo, \" %d\", _i)); \\",
          "778:   }",
          "780: #define UINTOUT() { uint32_t _i; \\",
          "782:    _i = EXTRACT_BE_32BITS(bp); \\",
          "783:    bp += sizeof(uint32_t); \\",
          "784:    ND_PRINT((ndo, \" %u\", _i)); \\",
          "",
          "[Removed Lines]",
          "774:    ND_TCHECK_32BITS(bp); \\",
          "781:    ND_TCHECK_32BITS(bp); \\",
          "",
          "[Added Lines]",
          "774:    ND_TCHECK_4(bp); \\",
          "781:    ND_TCHECK_4(bp); \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "792:   }",
          "794: #define DATEOUT() { time_t _t; struct tm *tm; char str[256]; \\",
          "796:    _t = (time_t) EXTRACT_BE_INT32(bp); \\",
          "797:    bp += sizeof(int32_t); \\",
          "798:    tm = localtime(&_t); \\",
          "",
          "[Removed Lines]",
          "795:    ND_TCHECK_32BITS(bp); \\",
          "",
          "[Added Lines]",
          "795:    ND_TCHECK_4(bp); \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "900:  fs_op = EXTRACT_BE_32BITS(bp + sizeof(struct rx_header));",
          "902:  ND_PRINT((ndo, \" fs call %s\", tok2str(fs_req, \"op#%u\", fs_op)));",
          "",
          "[Removed Lines]",
          "899:  ND_TCHECK_32BITS(bp + sizeof(struct rx_header));",
          "",
          "[Added Lines]",
          "899:  ND_TCHECK_4(bp + sizeof(struct rx_header));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1006:   {",
          "1007:    uint32_t j;",
          "1009:    j = EXTRACT_BE_32BITS(bp);",
          "1010:    bp += sizeof(uint32_t);",
          "",
          "[Removed Lines]",
          "1008:    ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1008:    ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1082:   {",
          "1083:    char a[AFSOPAQUEMAX+1];",
          "1085:    i = EXTRACT_BE_32BITS(bp);",
          "1086:    bp += sizeof(uint32_t);",
          "1087:    ND_TCHECK2(bp[0], i);",
          "",
          "[Removed Lines]",
          "1084:    ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1084:    ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1113:   int32_t errcode;",
          "1116:   errcode = EXTRACT_BE_INT32(bp);",
          "1117:   bp += sizeof(int32_t);",
          "",
          "[Removed Lines]",
          "1115:   ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1115:   ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1233:  cb_op = EXTRACT_BE_32BITS(bp + sizeof(struct rx_header));",
          "1235:  ND_PRINT((ndo, \" cb call %s\", tok2str(cb_req, \"op#%u\", cb_op)));",
          "",
          "[Removed Lines]",
          "1232:  ND_TCHECK_32BITS(bp + sizeof(struct rx_header));",
          "",
          "[Added Lines]",
          "1232:  ND_TCHECK_4(bp + sizeof(struct rx_header));",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1246:   {",
          "1247:    uint32_t j, t;",
          "1249:    j = EXTRACT_BE_32BITS(bp);",
          "1250:    bp += sizeof(uint32_t);",
          "",
          "[Removed Lines]",
          "1248:    ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1248:    ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1258:    if (j == 0)",
          "1259:     ND_PRINT((ndo, \" <none!>\"));",
          "1262:    j = EXTRACT_BE_32BITS(bp);",
          "1263:    bp += sizeof(uint32_t);",
          "",
          "[Removed Lines]",
          "1261:    ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1261:    ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1270:     INTOUT();",
          "1271:     ND_PRINT((ndo, \" expires\"));",
          "1272:     DATEOUT();",
          "1274:     t = EXTRACT_BE_32BITS(bp);",
          "1275:     bp += sizeof(uint32_t);",
          "1276:     tok2str(cb_types, \"type %u\", t);",
          "",
          "[Removed Lines]",
          "1273:     ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1273:     ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1364:  pt_op = EXTRACT_BE_32BITS(bp + sizeof(struct rx_header));",
          "1366:  ND_PRINT((ndo, \" pt\"));",
          "",
          "[Removed Lines]",
          "1363:  ND_TCHECK_32BITS(bp + sizeof(struct rx_header));",
          "",
          "[Added Lines]",
          "1363:  ND_TCHECK_4(bp + sizeof(struct rx_header));",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1414:   {",
          "1415:    uint32_t j;",
          "1417:    j = EXTRACT_BE_32BITS(bp);",
          "1418:    bp += sizeof(uint32_t);",
          "",
          "[Removed Lines]",
          "1416:    ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1416:    ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1435:   {",
          "1436:    uint32_t j;",
          "1437:    ND_PRINT((ndo, \" ids:\"));",
          "1439:    i = EXTRACT_BE_32BITS(bp);",
          "1440:    bp += sizeof(uint32_t);",
          "1441:    for (j = 0; j < i; j++)",
          "",
          "[Removed Lines]",
          "1438:    ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1438:    ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1525:   {",
          "1526:    uint32_t j;",
          "1527:    ND_PRINT((ndo, \" ids:\"));",
          "1529:    i = EXTRACT_BE_32BITS(bp);",
          "1530:    bp += sizeof(uint32_t);",
          "1531:    for (j = 0; j < i; j++)",
          "",
          "[Removed Lines]",
          "1528:    ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1528:    ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1538:   {",
          "1539:    uint32_t j;",
          "1541:    j = EXTRACT_BE_32BITS(bp);",
          "1542:    bp += sizeof(uint32_t);",
          "",
          "[Removed Lines]",
          "1540:    ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1540:    ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1563:   {",
          "1564:    uint32_t j;",
          "1566:    j = EXTRACT_BE_32BITS(bp);",
          "1567:    bp += sizeof(uint32_t);",
          "1568:    for (i = 0; i < j; i++) {",
          "",
          "[Removed Lines]",
          "1565:    ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1565:    ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1618:  vldb_op = EXTRACT_BE_32BITS(bp + sizeof(struct rx_header));",
          "1620:  ND_PRINT((ndo, \" vldb\"));",
          "",
          "[Removed Lines]",
          "1617:  ND_TCHECK_32BITS(bp + sizeof(struct rx_header));",
          "",
          "[Added Lines]",
          "1617:  ND_TCHECK_4(bp + sizeof(struct rx_header));",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1645:    ND_PRINT((ndo, \" volid\"));",
          "1646:    INTOUT();",
          "1648:    i = EXTRACT_BE_32BITS(bp);",
          "1649:    bp += sizeof(uint32_t);",
          "1650:    if (i <= 2)",
          "",
          "[Removed Lines]",
          "1647:    ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1647:    ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1665:    ND_PRINT((ndo, \" volid\"));",
          "1666:    INTOUT();",
          "1668:    i = EXTRACT_BE_32BITS(bp);",
          "1669:    bp += sizeof(uint32_t);",
          "1670:    if (i <= 2)",
          "",
          "[Removed Lines]",
          "1667:    ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1667:    ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1735:   { uint32_t nservers, j;",
          "1736:    VECOUT(VLNAMEMAX);",
          "1738:    bp += sizeof(uint32_t);",
          "1739:    ND_PRINT((ndo, \" numservers\"));",
          "1741:    nservers = EXTRACT_BE_32BITS(bp);",
          "1742:    bp += sizeof(uint32_t);",
          "1743:    ND_PRINT((ndo, \" %u\", nservers));",
          "1744:    ND_PRINT((ndo, \" servers\"));",
          "1745:    for (i = 0; i < 8; i++) {",
          "1747:     if (i < nservers)",
          "1748:      ND_PRINT((ndo, \" %s\",",
          "1749:         intoa(((const struct in_addr *) bp)->s_addr)));",
          "",
          "[Removed Lines]",
          "1737:    ND_TCHECK_32BITS(bp);",
          "1740:    ND_TCHECK_32BITS(bp);",
          "1746:     ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1737:    ND_TCHECK_4(bp);",
          "1740:    ND_TCHECK_4(bp);",
          "1746:     ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1751:    }",
          "1752:    ND_PRINT((ndo, \" partitions\"));",
          "1753:    for (i = 0; i < 8; i++) {",
          "1755:     j = EXTRACT_BE_32BITS(bp);",
          "1756:     if (i < nservers && j <= 26)",
          "1757:      ND_PRINT((ndo, \" %c\", 'a' + j));",
          "",
          "[Removed Lines]",
          "1754:     ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1754:     ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1784:   { uint32_t nservers, j;",
          "1785:    VECOUT(VLNAMEMAX);",
          "1786:    ND_PRINT((ndo, \" numservers\"));",
          "1788:    nservers = EXTRACT_BE_32BITS(bp);",
          "1789:    bp += sizeof(uint32_t);",
          "1790:    ND_PRINT((ndo, \" %u\", nservers));",
          "1791:    ND_PRINT((ndo, \" servers\"));",
          "1792:    for (i = 0; i < 13; i++) {",
          "1794:     if (i < nservers)",
          "1795:      ND_PRINT((ndo, \" %s\",",
          "1796:         intoa(((const struct in_addr *) bp)->s_addr)));",
          "",
          "[Removed Lines]",
          "1787:    ND_TCHECK_32BITS(bp);",
          "1793:     ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1787:    ND_TCHECK_4(bp);",
          "1793:     ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1798:    }",
          "1799:    ND_PRINT((ndo, \" partitions\"));",
          "1800:    for (i = 0; i < 13; i++) {",
          "1802:     j = EXTRACT_BE_32BITS(bp);",
          "1803:     if (i < nservers && j <= 26)",
          "1804:      ND_PRINT((ndo, \" %c\", 'a' + j));",
          "",
          "[Removed Lines]",
          "1801:     ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1801:     ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1821:   { uint32_t nservers, j;",
          "1822:    VECOUT(VLNAMEMAX);",
          "1823:    ND_PRINT((ndo, \" numservers\"));",
          "1825:    nservers = EXTRACT_BE_32BITS(bp);",
          "1826:    bp += sizeof(uint32_t);",
          "1827:    ND_PRINT((ndo, \" %u\", nservers));",
          "",
          "[Removed Lines]",
          "1824:    ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1824:    ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1839:    bp += 4 * 13;",
          "1840:    ND_PRINT((ndo, \" partitions\"));",
          "1841:    for (i = 0; i < 13; i++) {",
          "1843:     j = EXTRACT_BE_32BITS(bp);",
          "1844:     if (i < nservers && j <= 26)",
          "1845:      ND_PRINT((ndo, \" %c\", 'a' + j));",
          "",
          "[Removed Lines]",
          "1842:     ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1842:     ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1896:  kauth_op = EXTRACT_BE_32BITS(bp + sizeof(struct rx_header));",
          "1898:  ND_PRINT((ndo, \" kauth\"));",
          "",
          "[Removed Lines]",
          "1895:  ND_TCHECK_32BITS(bp + sizeof(struct rx_header));",
          "",
          "[Added Lines]",
          "1895:  ND_TCHECK_4(bp + sizeof(struct rx_header));",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1934:    INTOUT();",
          "1935:    ND_PRINT((ndo, \" domain\"));",
          "1936:    STROUT(KANAMEMAX);",
          "1938:    i = EXTRACT_BE_32BITS(bp);",
          "1939:    bp += sizeof(uint32_t);",
          "1940:    ND_TCHECK2(bp[0], i);",
          "",
          "[Removed Lines]",
          "1937:    ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "1937:    ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "2039:  vol_op = EXTRACT_BE_32BITS(bp + sizeof(struct rx_header));",
          "2041:  ND_PRINT((ndo, \" vol call %s\", tok2str(vol_req, \"op#%u\", vol_op)));",
          "",
          "[Removed Lines]",
          "2038:  ND_TCHECK_32BITS(bp + sizeof(struct rx_header));",
          "",
          "[Added Lines]",
          "2038:  ND_TCHECK_4(bp + sizeof(struct rx_header));",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2187:    DATEOUT();",
          "2188:    {",
          "2189:     uint32_t i, j;",
          "2191:     j = EXTRACT_BE_32BITS(bp);",
          "2192:     bp += sizeof(uint32_t);",
          "2193:     for (i = 0; i < j; i++) {",
          "",
          "[Removed Lines]",
          "2190:     ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "2190:     ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "2316:     {",
          "2317:      uint32_t i, j;",
          "2319:      j = EXTRACT_BE_32BITS(bp);",
          "2320:      bp += sizeof(uint32_t);",
          "2321:      for (i = 0; i < j; i++) {",
          "",
          "[Removed Lines]",
          "2318:      ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "2318:      ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "2373:  bos_op = EXTRACT_BE_32BITS(bp + sizeof(struct rx_header));",
          "2375:  ND_PRINT((ndo, \" bos call %s\", tok2str(bos_req, \"op#%u\", bos_op)));",
          "",
          "[Removed Lines]",
          "2372:  ND_TCHECK_32BITS(bp + sizeof(struct rx_header));",
          "",
          "[Added Lines]",
          "2372:  ND_TCHECK_4(bp + sizeof(struct rx_header));",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "2532:  switch (ubik_op) {",
          "2535:    temp = EXTRACT_BE_32BITS(bp);",
          "2536:    bp += sizeof(uint32_t);",
          "2537:    ND_PRINT((ndo, \" syncsite %s\", temp ? \"yes\" : \"no\"));",
          "",
          "[Removed Lines]",
          "2534:    ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "2534:    ND_TCHECK_4(bp);",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "2563:    INTOUT();",
          "2564:    ND_PRINT((ndo, \" length\"));",
          "2565:    INTOUT();",
          "2567:    temp = EXTRACT_BE_32BITS(bp);",
          "2568:    bp += sizeof(uint32_t);",
          "2569:    tok2str(ubik_lock_types, \"type %u\", temp);",
          "",
          "[Removed Lines]",
          "2566:    ND_TCHECK_32BITS(bp);",
          "",
          "[Added Lines]",
          "2566:    ND_TCHECK_4(bp);",
          "",
          "---------------"
        ],
        "print-smb.c||print-smb.c": [
          "File: print-smb.c -> print-smb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "820:     if (ndo->ndo_vflag < 2)",
          "821:  return;",
          "824:     flags2 = EXTRACT_LE_16BITS(buf + 10);",
          "825:     unicodestr = flags2 & 0x8000;",
          "826:     nterrcodes = flags2 & 0x4000;",
          "",
          "[Removed Lines]",
          "823:     ND_TCHECK_16BITS(&buf[10]);",
          "",
          "[Added Lines]",
          "823:     ND_TCHECK_2(&buf[10]);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1167:      p = smb_fdata(ndo, p, \"Name=[n1]\\n#\", maxbuf, 0);",
          "1168:      if (p == NULL)",
          "1169:   goto out;",
          "1171:      restype = EXTRACT_BE_16BITS(p);",
          "1172:      p = smb_fdata(ndo, p, \"ResType=[rw]\\nResClass=[rw]\\nTTL=[rD]\\n\", p + 8, 0);",
          "1173:      if (p == NULL)",
          "1174:   goto out;",
          "1176:      rdlen = EXTRACT_BE_16BITS(p);",
          "1177:      ND_PRINT((ndo, \"ResourceLength=%d\\nResourceData=\\n\", rdlen));",
          "1178:      p += 2;",
          "",
          "[Removed Lines]",
          "1170:      ND_TCHECK_16BITS(p);",
          "1175:      ND_TCHECK_16BITS(p);",
          "",
          "[Added Lines]",
          "1170:      ND_TCHECK_2(p);",
          "1175:      ND_TCHECK_2(p);",
          "",
          "---------------"
        ],
        "print-stp.c||print-stp.c": [
          "File: print-stp.c -> print-stp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "281:            (float) EXTRACT_BE_16BITS(&stp_bpdu->hello_time) / STP_TIME_BASE,",
          "282:            (float) EXTRACT_BE_16BITS(&stp_bpdu->forward_delay) / STP_TIME_BASE));",
          "285:     ND_PRINT((ndo, \"\\n\\tv3len %d, \", EXTRACT_BE_16BITS(ptr + MST_BPDU_VER3_LEN_OFFSET)));",
          "287:     ND_PRINT((ndo, \"MCID Name \"));",
          "288:     if (fn_printzp(ndo, ptr + MST_BPDU_CONFIG_NAME_OFFSET, 32, ndo->ndo_snapend))",
          "289:  goto trunc;",
          "",
          "[Removed Lines]",
          "284:     ND_TCHECK_16BITS(ptr + MST_BPDU_VER3_LEN_OFFSET);",
          "286:     ND_TCHECK_32BITS(ptr + MST_BPDU_CONFIG_DIGEST_OFFSET + 12);",
          "",
          "[Added Lines]",
          "284:     ND_TCHECK_2(ptr + MST_BPDU_VER3_LEN_OFFSET);",
          "286:     ND_TCHECK_4(ptr + MST_BPDU_CONFIG_DIGEST_OFFSET + 12);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "295:            EXTRACT_BE_32BITS(ptr + MST_BPDU_CONFIG_DIGEST_OFFSET + 8),",
          "296:            EXTRACT_BE_32BITS(ptr + MST_BPDU_CONFIG_DIGEST_OFFSET + 12)));",
          "299:     ND_PRINT((ndo, \"CIST int-root-pathcost %u,\",",
          "300:             EXTRACT_BE_32BITS(ptr + MST_BPDU_CIST_INT_PATH_COST_OFFSET)));",
          "",
          "[Removed Lines]",
          "298:     ND_TCHECK_32BITS(ptr + MST_BPDU_CIST_INT_PATH_COST_OFFSET);",
          "",
          "[Added Lines]",
          "298:     ND_TCHECK_4(ptr + MST_BPDU_CIST_INT_PATH_COST_OFFSET);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "307:     ND_PRINT((ndo, \"CIST remaining-hops %d\", ptr[MST_BPDU_CIST_REMAIN_HOPS_OFFSET]));",
          "311:     v3len = EXTRACT_BE_16BITS(ptr + MST_BPDU_VER3_LEN_OFFSET);",
          "312:     if (v3len > MST_BPDU_CONFIG_INFO_LENGTH) {",
          "313:         len = v3len - MST_BPDU_CONFIG_INFO_LENGTH;",
          "",
          "[Removed Lines]",
          "310:     ND_TCHECK_16BITS(ptr + MST_BPDU_VER3_LEN_OFFSET);",
          "",
          "[Added Lines]",
          "310:     ND_TCHECK_2(ptr + MST_BPDU_VER3_LEN_OFFSET);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "355:     }",
          "357:     ptr = (const u_char *)stp_bpdu;",
          "360:     ND_PRINT((ndo, \"\\n\\tv4len %d, \", EXTRACT_BE_16BITS(ptr + offset)));",
          "361:     ND_PRINT((ndo, \"AUXMCID Name \"));",
          "",
          "[Removed Lines]",
          "358:     ND_TCHECK_32BITS(ptr + offset + SPB_BPDU_AGREEMENT_DIGEST_OFFSET + 16);",
          "",
          "[Added Lines]",
          "358:     ND_TCHECK_4(ptr + offset + SPB_BPDU_AGREEMENT_DIGEST_OFFSET + 16);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "462:             }",
          "466:             mstp_len = EXTRACT_BE_16BITS(p + MST_BPDU_VER3_LEN_OFFSET);",
          "468:             if (length < (sizeof(struct stp_bpdu_) + mstp_len)) {",
          "",
          "[Removed Lines]",
          "465:             ND_TCHECK_16BITS(p + MST_BPDU_VER3_LEN_OFFSET);",
          "",
          "[Added Lines]",
          "465:             ND_TCHECK_2(p + MST_BPDU_VER3_LEN_OFFSET);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "474:             if (stp_bpdu->protocol_version == STP_PROTO_SPB)",
          "475:             {",
          "478:               spb_len = EXTRACT_BE_16BITS(p + MST_BPDU_VER3_LEN_OFFSET + mstp_len);",
          "479:               spb_len += 2;",
          "480:               if (length < (sizeof(struct stp_bpdu_) + mstp_len + spb_len) ||",
          "",
          "[Removed Lines]",
          "477:               ND_TCHECK_16BITS(p + MST_BPDU_VER3_LEN_OFFSET + mstp_len);",
          "",
          "[Added Lines]",
          "477:               ND_TCHECK_2(p + MST_BPDU_VER3_LEN_OFFSET + mstp_len);",
          "",
          "---------------"
        ],
        "print-tftp.c||print-tftp.c": [
          "File: print-tftp.c -> print-tftp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:  if (length < 2)",
          "103:   goto trunc;",
          "105:  opcode = EXTRACT_BE_16BITS(bp);",
          "106:  cp = tok2str(op2str, \"tftp-#%d\", opcode);",
          "107:  ND_PRINT((ndo, \" %s\", cp));",
          "",
          "[Removed Lines]",
          "104:  ND_TCHECK_16BITS(bp);",
          "",
          "[Added Lines]",
          "104:  ND_TCHECK_2(bp);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "168:  case DATA:",
          "169:   if (length < 2)",
          "172:   ND_PRINT((ndo, \" block %d\", EXTRACT_BE_16BITS(bp)));",
          "173:   break;",
          "",
          "[Removed Lines]",
          "171:   ND_TCHECK_16BITS(bp);",
          "",
          "[Added Lines]",
          "171:   ND_TCHECK_2(bp);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "177:   if (length < 2)",
          "180:   ND_PRINT((ndo, \" %s\", tok2str(err2str, \"tftp-err-#%d \\\"\",",
          "181:            EXTRACT_BE_16BITS(bp))));",
          "182:   bp += 2;",
          "",
          "[Removed Lines]",
          "179:   ND_TCHECK_16BITS(bp);",
          "",
          "[Added Lines]",
          "179:   ND_TCHECK_2(bp);",
          "",
          "---------------"
        ],
        "print-udp.c||print-udp.c": [
          "File: print-udp.c -> print-udp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:  u_int ts;",
          "106:  ts = EXTRACT_BE_16BITS(hdr);",
          "107:  if ((ts & 0xf060) != 0) {",
          "110:   ND_PRINT((ndo, \"udp/vt %u %d / %d\",",
          "111:         (uint32_t)(EXTRACT_BE_16BITS(&up->uh_ulen) - sizeof(*up)),",
          "112:         ts & 0x3ff, ts >> 10));",
          "",
          "[Removed Lines]",
          "105:  ND_TCHECK_16BITS((const u_int *)hdr);",
          "109:   ND_TCHECK_16BITS(&up->uh_ulen);",
          "",
          "[Added Lines]",
          "105:  ND_TCHECK_2((const u_int *)hdr);",
          "109:   ND_TCHECK_2(&up->uh_ulen);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "115:   uint32_t i0, i1;",
          "118:   i0 = EXTRACT_BE_32BITS(&((const u_int *)hdr)[0]);",
          "120:   i1 = EXTRACT_BE_32BITS(&((const u_int *)hdr)[1]);",
          "122:   ND_PRINT((ndo, \"udp/vat %u c%d %u%s\",",
          "123:    (uint32_t)(EXTRACT_BE_16BITS(&up->uh_ulen) - sizeof(*up) - 8),",
          "124:    i0 & 0xffff,",
          "",
          "[Removed Lines]",
          "117:   ND_TCHECK_32BITS(&((const u_int *)hdr)[0]);",
          "119:   ND_TCHECK_32BITS(&((const u_int *)hdr)[1]);",
          "121:   ND_TCHECK_16BITS(&up->uh_ulen);",
          "",
          "[Added Lines]",
          "117:   ND_TCHECK_4(&((const u_int *)hdr)[0]);",
          "119:   ND_TCHECK_4(&((const u_int *)hdr)[1]);",
          "121:   ND_TCHECK_2(&up->uh_ulen);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "144:  uint32_t i0, i1;",
          "145:  const char * ptype;",
          "148:  i0 = EXTRACT_BE_32BITS(&((const u_int *)hdr)[0]);",
          "150:  i1 = EXTRACT_BE_32BITS(&((const u_int *)hdr)[1]);",
          "152:  dlen = EXTRACT_BE_16BITS(&up->uh_ulen) - sizeof(*up) - 8;",
          "153:  ip += 2;",
          "154:  len >>= 2;",
          "",
          "[Removed Lines]",
          "147:  ND_TCHECK_32BITS(&((const u_int *)hdr)[0]);",
          "149:  ND_TCHECK_32BITS(&((const u_int *)hdr)[1]);",
          "151:  ND_TCHECK_16BITS(&up->uh_ulen);",
          "",
          "[Added Lines]",
          "147:  ND_TCHECK_4(&((const u_int *)hdr)[0]);",
          "149:  ND_TCHECK_4(&((const u_int *)hdr)[1]);",
          "151:  ND_TCHECK_2(&up->uh_ulen);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "180:   i0 & 0xffff,",
          "181:   i1));",
          "182:  if (ndo->ndo_vflag) {",
          "184:   ND_PRINT((ndo, \" %u\", EXTRACT_BE_32BITS(&((const u_int *)hdr)[2])));",
          "185:   if (hasopt) {",
          "186:    u_int i2, optlen;",
          "187:    do {",
          "189:     i2 = EXTRACT_BE_32BITS(ip);",
          "190:     optlen = (i2 >> 16) & 0xff;",
          "191:     if (optlen == 0 || optlen > len) {",
          "",
          "[Removed Lines]",
          "183:   ND_TCHECK_32BITS(&((const u_int *)hdr)[2]);",
          "188:     ND_TCHECK_32BITS(ip);",
          "",
          "[Added Lines]",
          "183:   ND_TCHECK_4(&((const u_int *)hdr)[2]);",
          "188:     ND_TCHECK_4(ip);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "198:   }",
          "199:   if (hasext) {",
          "200:    u_int i2, extlen;",
          "202:    i2 = EXTRACT_BE_32BITS(ip);",
          "203:    extlen = (i2 & 0xffff) + 1;",
          "204:    if (extlen > len) {",
          "",
          "[Removed Lines]",
          "201:    ND_TCHECK_32BITS(ip);",
          "",
          "[Added Lines]",
          "201:    ND_TCHECK_4(ip);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "207:    }",
          "208:    ip += extlen;",
          "209:   }",
          "212:    ND_PRINT((ndo, \" 0x%04x\", EXTRACT_BE_32BITS(ip) >> 16));",
          "213:  }",
          "",
          "[Removed Lines]",
          "210:   ND_TCHECK_32BITS(ip);",
          "",
          "[Added Lines]",
          "210:   ND_TCHECK_4(ip);",
          "",
          "---------------"
        ],
        "print-vtp.c||print-vtp.c": [
          "File: print-vtp.c -> print-vtp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "226:  ND_PRINT((ndo, \", Config Rev %x\", EXTRACT_BE_32BITS(tptr)));",
          "",
          "[Removed Lines]",
          "225:  ND_TCHECK_32BITS(tptr);",
          "",
          "[Added Lines]",
          "225:  ND_TCHECK_4(tptr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "243:  tptr += 4;",
          "244:  while (tptr < (pptr+length)) {",
          "247:      len = *tptr;",
          "248:      if (len == 0)",
          "249:   break;",
          "",
          "[Removed Lines]",
          "246:      ND_TCHECK_8BITS(tptr);",
          "",
          "[Added Lines]",
          "246:      ND_TCHECK_1(tptr);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f085c93f59fb2332e09f3da20eef5fb2bbd04431",
      "candidate_info": {
        "commit_hash": "f085c93f59fb2332e09f3da20eef5fb2bbd04431",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/f085c93f59fb2332e09f3da20eef5fb2bbd04431",
        "files": [
          "print-ahcp.c",
          "print-aoe.c",
          "print-bfd.c",
          "print-cdp.c",
          "print-cfm.c",
          "print-dccp.c",
          "print-domain.c",
          "print-isoclns.c",
          "print-krb.c",
          "print-lldp.c",
          "print-msdp.c",
          "print-openflow-1.0.c",
          "print-ospf.c",
          "print-pim.c",
          "print-pppoe.c",
          "print-pptp.c",
          "print-radius.c",
          "print-rip.c",
          "print-rpki-rtr.c",
          "print-snmp.c",
          "print-tcp.c",
          "print-udld.c",
          "print-vtp.c",
          "smbutil.c"
        ],
        "message": "Use more the EXTRACT_U_1() macro (31/n)\n\nIn ND_PRINT() macro call(s) (step 9).\n\n*(p)",
        "before_after_code_files": [
          "print-ahcp.c||print-ahcp.c",
          "print-aoe.c||print-aoe.c",
          "print-bfd.c||print-bfd.c",
          "print-cdp.c||print-cdp.c",
          "print-cfm.c||print-cfm.c",
          "print-dccp.c||print-dccp.c",
          "print-domain.c||print-domain.c",
          "print-isoclns.c||print-isoclns.c",
          "print-krb.c||print-krb.c",
          "print-lldp.c||print-lldp.c",
          "print-msdp.c||print-msdp.c",
          "print-openflow-1.0.c||print-openflow-1.0.c",
          "print-ospf.c||print-ospf.c",
          "print-pim.c||print-pim.c",
          "print-pppoe.c||print-pppoe.c",
          "print-pptp.c||print-pptp.c",
          "print-radius.c||print-radius.c",
          "print-rip.c||print-rip.c",
          "print-rpki-rtr.c||print-rpki-rtr.c",
          "print-snmp.c||print-snmp.c",
          "print-tcp.c||print-tcp.c",
          "print-udld.c||print-udld.c",
          "print-vtp.c||print-vtp.c",
          "smbutil.c||smbutil.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-rpki-rtr.c||print-rpki-rtr.c"
          ],
          "candidate": [
            "print-rpki-rtr.c||print-rpki-rtr.c"
          ]
        }
      },
      "candidate_diff": {
        "print-ahcp.c||print-ahcp.c": [
          "File: print-ahcp.c -> print-ahcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "373:    } else {",
          "375:     ND_TCHECK_1(cp);",
          "377:     cp += 1;",
          "379:     ND_TCHECK_1(cp);",
          "381:     cp += 1;",
          "383:     ND_TCHECK_4(cp);",
          "",
          "[Removed Lines]",
          "376:     ND_PRINT((ndo, \"\\n\\tHopcount %u\", *cp));",
          "380:     ND_PRINT((ndo, \", Original Hopcount %u\", *cp));",
          "",
          "[Added Lines]",
          "376:     ND_PRINT((ndo, \"\\n\\tHopcount %u\", EXTRACT_U_1(cp)));",
          "380:     ND_PRINT((ndo, \", Original Hopcount %u\", EXTRACT_U_1(cp)));",
          "",
          "---------------"
        ],
        "print-aoe.c||print-aoe.c": [
          "File: print-aoe.c -> print-aoe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:  cp += 1;",
          "155:  ND_TCHECK_1(cp);",
          "157:  cp += 1;",
          "159:  ND_TCHECK_1(cp);",
          "161:  cp += 1;",
          "163:  ND_TCHECK_1(cp);",
          "165:  cp += 1;",
          "167:  ND_TCHECK_1(cp);",
          "169:  cp += 1;",
          "171:  ND_TCHECK_1(cp);",
          "173:  cp += 1;",
          "175:  ND_TCHECK_1(cp);",
          "177:  cp += 1;",
          "179:  ND_TCHECK_1(cp);",
          "181:  cp += 1;",
          "183:  ND_TCHECK_1(cp);",
          "185:  cp += 1;",
          "187:  ND_TCHECK_1(cp);",
          "189:  cp += 1;",
          "191:  ND_TCHECK_2(cp);",
          "",
          "[Removed Lines]",
          "156:  ND_PRINT((ndo, \", Err/Feature: %u\", *cp));",
          "160:  ND_PRINT((ndo, \", Sector Count: %u\", *cp));",
          "164:  ND_PRINT((ndo, \", Cmd/Status: %u\", *cp));",
          "168:  ND_PRINT((ndo, \"\\n\\tlba0: %u\", *cp));",
          "172:  ND_PRINT((ndo, \", lba1: %u\", *cp));",
          "176:  ND_PRINT((ndo, \", lba2: %u\", *cp));",
          "180:  ND_PRINT((ndo, \", lba3: %u\", *cp));",
          "184:  ND_PRINT((ndo, \", lba4: %u\", *cp));",
          "188:  ND_PRINT((ndo, \", lba5: %u\", *cp));",
          "",
          "[Added Lines]",
          "156:  ND_PRINT((ndo, \", Err/Feature: %u\", EXTRACT_U_1(cp)));",
          "160:  ND_PRINT((ndo, \", Sector Count: %u\", EXTRACT_U_1(cp)));",
          "164:  ND_PRINT((ndo, \", Cmd/Status: %u\", EXTRACT_U_1(cp)));",
          "168:  ND_PRINT((ndo, \"\\n\\tlba0: %u\", EXTRACT_U_1(cp)));",
          "172:  ND_PRINT((ndo, \", lba1: %u\", EXTRACT_U_1(cp)));",
          "176:  ND_PRINT((ndo, \", lba2: %u\", EXTRACT_U_1(cp)));",
          "180:  ND_PRINT((ndo, \", lba3: %u\", EXTRACT_U_1(cp)));",
          "184:  ND_PRINT((ndo, \", lba4: %u\", EXTRACT_U_1(cp)));",
          "188:  ND_PRINT((ndo, \", lba5: %u\", EXTRACT_U_1(cp)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "222:  cp += 2;",
          "224:  ND_TCHECK_1(cp);",
          "226:  cp += 1;",
          "228:  ND_TCHECK_1(cp);",
          "",
          "[Removed Lines]",
          "225:  ND_PRINT((ndo, \", Sector Count: %u\", *cp));",
          "",
          "[Added Lines]",
          "225:  ND_PRINT((ndo, \", Sector Count: %u\", EXTRACT_U_1(cp)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "366:  cp += 2;",
          "368:  ND_TCHECK_1(cp);",
          "370:  cp += 1;",
          "372:  ND_TCHECK_1(cp);",
          "",
          "[Removed Lines]",
          "369:  ND_PRINT((ndo, \", Minor: 0x%02x\", *cp));",
          "",
          "[Added Lines]",
          "369:  ND_PRINT((ndo, \", Minor: 0x%02x\", EXTRACT_U_1(cp)));",
          "",
          "---------------"
        ],
        "print-bfd.c||print-bfd.c": [
          "File: print-bfd.c -> print-bfd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "191:                  bfd_auth_header->auth_type,",
          "192:                  bfd_auth_header->auth_len));",
          "193:                 pptr += 2;",
          "196:         switch(bfd_auth_header->auth_type) {",
          "197:             case AUTH_PASSWORD:",
          "",
          "[Removed Lines]",
          "194:                 ND_PRINT((ndo, \"\\n\\t  Auth Key ID: %d\", *pptr));",
          "",
          "[Added Lines]",
          "194:                 ND_PRINT((ndo, \"\\n\\t  Auth Key ID: %d\", EXTRACT_U_1(pptr)));",
          "",
          "---------------"
        ],
        "print-cdp.c||print-cdp.c": [
          "File: print-cdp.c -> print-cdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:    if (len < 1)",
          "204:        goto trunc;",
          "206:    break;",
          "",
          "[Removed Lines]",
          "205:    ND_PRINT((ndo, \"%s\", *(tptr) ? \"full\": \"half\"));",
          "",
          "[Added Lines]",
          "205:    ND_PRINT((ndo, \"%s\", EXTRACT_U_1(tptr) ? \"full\": \"half\"));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "225:    if (len < 1)",
          "226:        goto trunc;",
          "228:    break;",
          "230:    if (len < 1)",
          "231:        goto trunc;",
          "233:    break;",
          "235:    ND_PRINT((ndo, \"'\"));",
          "",
          "[Removed Lines]",
          "227:    ND_PRINT((ndo, \"0x%02x\", *(tptr)));",
          "232:    ND_PRINT((ndo, \"0x%02x\", *(tptr)));",
          "",
          "[Added Lines]",
          "227:    ND_PRINT((ndo, \"0x%02x\", EXTRACT_U_1(tptr)));",
          "232:    ND_PRINT((ndo, \"0x%02x\", EXTRACT_U_1(tptr)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "244:    if (len < 1)",
          "245:        goto trunc;",
          "247:    if (len > 1) {",
          "248:     ND_PRINT((ndo, \"/\"));",
          "249:     (void)fn_printn(ndo, tptr + 1, len - 1, NULL);",
          "",
          "[Removed Lines]",
          "246:    ND_PRINT((ndo, \"0x%02x\", *(tptr)));",
          "",
          "[Added Lines]",
          "246:    ND_PRINT((ndo, \"0x%02x\", EXTRACT_U_1(tptr)));",
          "",
          "---------------"
        ],
        "print-cfm.c||print-cfm.c": [
          "File: print-cfm.c -> print-cfm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "588:             ND_PRINT((ndo, \", Vendor: %s (%u), Sub-Type %u\",",
          "589:                    tok2str(oui_values,\"Unknown\", EXTRACT_BE_U_3(tptr)),",
          "590:                    EXTRACT_BE_U_3(tptr),",
          "592:             hexdump = TRUE;",
          "593:             break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "591:                    EXTRACT_U_1(tptr + 3)));",
          "",
          "---------------"
        ],
        "print-dccp.c||print-dccp.c": [
          "File: print-dccp.c -> print-dccp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "542:   optlen = EXTRACT_U_1(option + 1);",
          "543:   if (optlen < 2) {",
          "544:    if (*option >= 128)",
          "546:    else",
          "547:     ND_PRINT((ndo, \"%s optlen too short\",",
          "548:        tok2str(dccp_option_values, \"Option %u\", EXTRACT_U_1(option))));",
          "",
          "[Removed Lines]",
          "545:     ND_PRINT((ndo, \"CCID option %u optlen too short\", *option));",
          "",
          "[Added Lines]",
          "545:     ND_PRINT((ndo, \"CCID option %u optlen too short\", EXTRACT_U_1(option)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "554:  if (hlen < optlen) {",
          "555:   if (*option >= 128)",
          "556:    ND_PRINT((ndo, \"CCID option %u optlen goes past header length\",",
          "558:   else",
          "559:    ND_PRINT((ndo, \"%s optlen goes past header length\",",
          "560:       tok2str(dccp_option_values, \"Option %u\", EXTRACT_U_1(option))));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "557:       EXTRACT_U_1(option)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "563:  ND_TCHECK2(*option, optlen);",
          "565:  if (*option >= 128) {",
          "567:   switch (optlen) {",
          "568:    case 4:",
          "569:     ND_PRINT((ndo, \" %u\", EXTRACT_BE_U_2(option + 2)));",
          "",
          "[Removed Lines]",
          "566:   ND_PRINT((ndo, \"CCID option %d\", *option));",
          "",
          "[Added Lines]",
          "566:   ND_PRINT((ndo, \"CCID option %d\", EXTRACT_U_1(option)));",
          "",
          "---------------"
        ],
        "print-domain.c||print-domain.c": [
          "File: print-domain.c -> print-domain.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:  ND_PRINT((ndo, \"\\\\[x\"));",
          "106:  for (bitp = cp + 1, b = bitlen; bitp < lim && b > 7; b -= 8, bitp++) {",
          "107:   ND_TCHECK(*bitp);",
          "109:  }",
          "110:  if (b > 4) {",
          "111:   ND_TCHECK(*bitp);",
          "",
          "[Removed Lines]",
          "108:   ND_PRINT((ndo, \"%02x\", *bitp));",
          "",
          "[Added Lines]",
          "108:   ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(bitp)));",
          "",
          "---------------"
        ],
        "print-isoclns.c||print-isoclns.c": [
          "File: print-isoclns.c -> print-isoclns.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "678:  }",
          "680:  if (ndo->ndo_eflag)",
          "683:  switch (*p) {",
          "",
          "[Removed Lines]",
          "681:   ND_PRINT((ndo, \"OSI NLPID %s (0x%02x): \", tok2str(nlpid_values, \"Unknown\", EXTRACT_U_1(p)), *p));",
          "",
          "[Added Lines]",
          "681:   ND_PRINT((ndo, \"OSI NLPID %s (0x%02x): \", tok2str(nlpid_values, \"Unknown\", EXTRACT_U_1(p)), EXTRACT_U_1(p)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "719:  default:",
          "720:   if (!ndo->ndo_eflag)",
          "722:   ND_PRINT((ndo, \"%slength: %u\", ndo->ndo_eflag ? \"\" : \", \", length));",
          "723:   if (length > 1)",
          "724:    print_unknown_data(ndo, p, \"\\n\\t\", length);",
          "",
          "[Removed Lines]",
          "721:    ND_PRINT((ndo, \"OSI NLPID 0x%02x unknown\", *p));",
          "",
          "[Added Lines]",
          "721:    ND_PRINT((ndo, \"OSI NLPID 0x%02x unknown\", EXTRACT_U_1(p)));",
          "",
          "---------------"
        ],
        "print-krb.c||print-krb.c": [
          "File: print-krb.c -> print-krb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:   ND_PRINT((ndo, \" (%d)\", EXTRACT_U_1(cp)));",
          "212:   cp++;",
          "213:   ND_TCHECK(*cp);",
          "215:   break;",
          "217:  case AUTH_MSG_KDC_REPLY:",
          "",
          "[Removed Lines]",
          "214:   ND_PRINT((ndo, \" (%d)\", *cp));",
          "",
          "[Added Lines]",
          "214:   ND_PRINT((ndo, \" (%d)\", EXTRACT_U_1(cp)));",
          "",
          "---------------"
        ],
        "print-lldp.c||print-lldp.c": [
          "File: print-lldp.c -> print-lldp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1209:             }",
          "1210:      ND_PRINT((ndo, \"\\n\\t    Control - Protocol Control (type 0x%x, length %d)\",",
          "1211:   LLDP_DCBX_CONTROL_TLV, tlv_len));",
          "1213:      ND_PRINT((ndo, \"\\n\\t      Max_Version: %d\", EXTRACT_U_1(tptr + 1)));",
          "1214:      ND_PRINT((ndo, \"\\n\\t      Sequence Number: %d\", EXTRACT_BE_U_4(tptr + 2)));",
          "1215:      ND_PRINT((ndo, \"\\n\\t      Acknowledgement Number: %d\",",
          "",
          "[Removed Lines]",
          "1212:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", *tptr));",
          "",
          "[Added Lines]",
          "1212:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", EXTRACT_U_1(tptr)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1221:             }",
          "1222:      ND_PRINT((ndo, \"\\n\\t    Feature - Priority Group (type 0x%x, length %d)\",",
          "1223:   LLDP_DCBX_PRIORITY_GROUPS_TLV, tlv_len));",
          "1225:      ND_PRINT((ndo, \"\\n\\t      Max_Version: %d\", EXTRACT_U_1(tptr + 1)));",
          "1226:      ND_PRINT((ndo, \"\\n\\t      Info block(0x%02X): \", EXTRACT_U_1(tptr + 2)));",
          "1227:      tval = EXTRACT_U_1(tptr + 2);",
          "",
          "[Removed Lines]",
          "1224:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", *tptr));",
          "",
          "[Added Lines]",
          "1224:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", EXTRACT_U_1(tptr)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1252:      ND_PRINT((ndo, \"\\n\\t    Feature - Priority Flow Control\"));",
          "1253:      ND_PRINT((ndo, \" (type 0x%x, length %d)\",",
          "1254:   LLDP_DCBX_PRIORITY_FLOW_CONTROL_TLV, tlv_len));",
          "1256:      ND_PRINT((ndo, \"\\n\\t      Max_Version: %d\", EXTRACT_U_1(tptr + 1)));",
          "1257:      ND_PRINT((ndo, \"\\n\\t      Info block(0x%02X): \", EXTRACT_U_1(tptr + 2)));",
          "1258:      tval = EXTRACT_U_1(tptr + 2);",
          "",
          "[Removed Lines]",
          "1255:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", *tptr));",
          "",
          "[Added Lines]",
          "1255:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", EXTRACT_U_1(tptr)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1273:             }",
          "1274:      ND_PRINT((ndo, \"\\n\\t    Feature - Application (type 0x%x, length %d)\",",
          "1275:   LLDP_DCBX_APPLICATION_TLV, tlv_len));",
          "1277:      ND_PRINT((ndo, \"\\n\\t      Max_Version: %d\", EXTRACT_U_1(tptr + 1)));",
          "1278:      ND_PRINT((ndo, \"\\n\\t      Info block(0x%02X): \", EXTRACT_U_1(tptr + 2)));",
          "1279:      tval = EXTRACT_U_1(tptr + 2);",
          "",
          "[Removed Lines]",
          "1276:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", *tptr));",
          "",
          "[Added Lines]",
          "1276:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", EXTRACT_U_1(tptr)));",
          "",
          "---------------"
        ],
        "print-msdp.c||print-msdp.c": [
          "File: print-msdp.c -> print-msdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:    else",
          "61:     ND_PRINT((ndo, \" SA-Response\"));",
          "62:    ND_TCHECK(*sp);",
          "64:    if ((u_int)((*sp * 12) + 8) < len) {",
          "65:     ND_PRINT((ndo, \" [w/data]\"));",
          "66:     if (ndo->ndo_vflag > 1) {",
          "",
          "[Removed Lines]",
          "63:    ND_PRINT((ndo, \" %u entries\", *sp));",
          "",
          "[Added Lines]",
          "63:    ND_PRINT((ndo, \" %u entries\", EXTRACT_U_1(sp)));",
          "",
          "---------------"
        ],
        "print-openflow-1.0.c||print-openflow-1.0.c": [
          "File: print-openflow-1.0.c -> print-openflow-1.0.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "784:    goto invalid;",
          "786:   ND_TCHECK_1(cp);",
          "788:   cp += 1;",
          "790:   ND_TCHECK_7(cp);",
          "",
          "[Removed Lines]",
          "787:   ND_PRINT((ndo, \", index %u\", *cp));",
          "",
          "[Added Lines]",
          "787:   ND_PRINT((ndo, \", index %u\", EXTRACT_U_1(cp)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "808:    goto invalid;",
          "810:   ND_TCHECK_1(cp);",
          "812:   cp += 1;",
          "814:   ND_TCHECK_3(cp);",
          "",
          "[Removed Lines]",
          "811:   ND_PRINT((ndo, \", index %u\", *cp));",
          "",
          "[Added Lines]",
          "811:   ND_PRINT((ndo, \", index %u\", EXTRACT_U_1(cp)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1397:  ND_TCHECK_1(cp);",
          "1398:  if (! (wildcards & OFPFW_NW_TOS))",
          "1400:  cp += 1;",
          "1402:  ND_TCHECK_1(cp);",
          "",
          "[Removed Lines]",
          "1399:   ND_PRINT((ndo, \"%smatch nw_tos 0x%02x\", pfx, *cp));",
          "",
          "[Added Lines]",
          "1399:   ND_PRINT((ndo, \"%smatch nw_tos 0x%02x\", pfx, EXTRACT_U_1(cp)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1560:   case OFPAT_SET_NW_TOS:",
          "1562:    ND_TCHECK_1(cp);",
          "1564:    cp += 1;",
          "1566:    ND_TCHECK_3(cp);",
          "",
          "[Removed Lines]",
          "1563:    ND_PRINT((ndo, \", nw_tos 0x%02x\", *cp));",
          "",
          "[Added Lines]",
          "1563:    ND_PRINT((ndo, \", nw_tos 0x%02x\", EXTRACT_U_1(cp)));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1628:  cp += 4;",
          "1630:  ND_TCHECK_1(cp);",
          "1632:  cp += 1;",
          "1634:  ND_TCHECK_3(cp);",
          "",
          "[Removed Lines]",
          "1631:  ND_PRINT((ndo, \", n_tables %u\", *cp));",
          "",
          "[Added Lines]",
          "1631:  ND_PRINT((ndo, \", n_tables %u\", EXTRACT_U_1(cp)));",
          "",
          "---------------"
        ],
        "print-ospf.c||print-ospf.c": [
          "File: print-ospf.c -> print-ospf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "231:             }",
          "232:             ND_PRINT((ndo, \"%s (%u)\",",
          "233:                    tok2str(lsa_opaque_grace_tlv_reason_values, \"Unknown\", EXTRACT_U_1(tptr)),",
          "235:             break;",
          "237:         case LS_OPAQUE_GRACE_TLV_INT_ADDRESS:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "234:                    EXTRACT_U_1(tptr)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "384:                     ND_PRINT((ndo, \"\\n\\t\\tBandwidth Constraints Model ID: %s (%u)\",",
          "385:                            tok2str(diffserv_te_bc_values, \"unknown\", EXTRACT_U_1(tptr)),",
          "387:       if (subtlv_length % 4 != 0) {",
          "388:    ND_PRINT((ndo, \"\\n\\t\\tlength %u != N x 4\", subtlv_length));",
          "389:    goto invalid;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "386:                            EXTRACT_U_1(tptr)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "440:       }",
          "441:                     ND_PRINT((ndo, \", %s (%u)\",",
          "442:                            tok2str(lsa_opaque_te_tlv_link_type_sub_tlv_values,\"unknown\",EXTRACT_U_1(tptr)),",
          "444:                     break;",
          "446:                 case LS_OPAQUE_TE_LINK_SUBTLV_SHARED_RISK_GROUP:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "443:                            EXTRACT_U_1(tptr)));",
          "",
          "---------------"
        ],
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "824:     if (olen != 4) {",
          "825:      ND_PRINT((ndo, \"ERROR: Option Length != 4 Bytes (%u)\", olen));",
          "826:     } else {",
          "828:      if (*(bp+1) != 0) {",
          "829:       ND_PRINT((ndo, \", interval \"));",
          "830:       unsigned_relts_print(ndo, *(bp+1));",
          "",
          "[Removed Lines]",
          "827:      ND_PRINT((ndo, \"v%d\", *bp));",
          "",
          "[Added Lines]",
          "827:      ND_PRINT((ndo, \"v%d\", EXTRACT_U_1(bp)));",
          "",
          "---------------"
        ],
        "print-pppoe.c||print-pppoe.c": [
          "File: print-pppoe.c -> print-pppoe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "176:      ND_PRINT((ndo, \" [%s 0x\", tok2str(pppoetag2str, \"TAG-0x%x\", tag_type)));",
          "177:      for (v=p; v<p+tag_len; v++) {",
          "179:      }",
          "180:      ND_PRINT((ndo, \"]\"));",
          "181:     }",
          "",
          "[Removed Lines]",
          "178:       ND_PRINT((ndo, \"%02X\", *v));",
          "",
          "[Added Lines]",
          "178:       ND_PRINT((ndo, \"%02X\", EXTRACT_U_1(v)));",
          "",
          "---------------"
        ],
        "print-pptp.c||print-pptp.c": [
          "File: print-pptp.c -> print-pptp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "336: pptp_err_code_print(netdissect_options *ndo,",
          "337:                     const uint8_t *err_code)",
          "338: {",
          "340:  if (ndo->ndo_vflag) {",
          "341:   ND_PRINT((ndo, \":%s\", tok2str(pptp_errcode_str, \"?\", EXTRACT_U_1(err_code))));",
          "342:  }",
          "",
          "[Removed Lines]",
          "339:  ND_PRINT((ndo, \" ERR_CODE(%u\", *err_code));",
          "",
          "[Added Lines]",
          "339:  ND_PRINT((ndo, \" ERR_CODE(%u\", EXTRACT_U_1(err_code)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "482: pptp_result_code_print(netdissect_options *ndo,",
          "483:                        const uint8_t *result_code, int ctrl_msg_type)",
          "484: {",
          "486:  if (ndo->ndo_vflag) {",
          "487:   const struct tok *dict =",
          "488:    ctrl_msg_type == PPTP_CTRL_MSG_TYPE_SCCRP    ? pptp_scrrp_str :",
          "",
          "[Removed Lines]",
          "485:  ND_PRINT((ndo, \" RESULT_CODE(%u\", *result_code));",
          "",
          "[Added Lines]",
          "485:  ND_PRINT((ndo, \" RESULT_CODE(%u\", EXTRACT_U_1(result_code)));",
          "",
          "---------------"
        ],
        "print-radius.c||print-radius.c": [
          "File: print-radius.c -> print-radius.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "594:            if (length < 3)",
          "595:               goto trunc;",
          "596:            if (*data && (*data <=0x1F) )",
          "598:            else",
          "599:               ND_PRINT((ndo, \"Tag[Unused] \"));",
          "600:            data++;",
          "",
          "[Removed Lines]",
          "597:               ND_PRINT((ndo, \"Tag[%u] \", *data));",
          "",
          "[Added Lines]",
          "597:               ND_PRINT((ndo, \"Tag[%u] \", EXTRACT_U_1(data)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "614:               if (length < 1)",
          "615:                  goto trunc;",
          "616:               if (*data)",
          "618:               else",
          "619:                 ND_PRINT((ndo, \"Tag[Unused] \"));",
          "620:               data++;",
          "",
          "[Removed Lines]",
          "617:                 ND_PRINT((ndo, \"Tag[%u] \", *data));",
          "",
          "[Added Lines]",
          "617:                 ND_PRINT((ndo, \"Tag[%u] \", EXTRACT_U_1(data)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "626:               goto trunc;",
          "627:            ND_PRINT((ndo, \"%s (0x%02x) \",",
          "628:                   tok2str(rfc4675_tagged,\"Unknown tag\",EXTRACT_U_1(data)),",
          "630:            data++;",
          "631:            length--;",
          "632:         break;",
          "633:    }",
          "635:    for (i=0; i < length && EXTRACT_U_1(data); i++, data++)",
          "638:    return;",
          "",
          "[Removed Lines]",
          "636:        ND_PRINT((ndo, \"%c\", (*data < 32 || *data > 126) ? '.' : *data));",
          "",
          "[Added Lines]",
          "629:                   EXTRACT_U_1(data)));",
          "636:        ND_PRINT((ndo, \"%c\", (EXTRACT_U_1(data) < 32 || EXTRACT_U_1(data) > 126) ? '.' : EXTRACT_U_1(data)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "693:                vendor_type,",
          "694:                vendor_length));",
          "695:         for (idx = 0; idx < vendor_length ; idx++, data++)",
          "697:         length-=vendor_length;",
          "698:     }",
          "699:     return;",
          "",
          "[Removed Lines]",
          "696:             ND_PRINT((ndo, \"%c\", (*data < 32 || *data > 126) ? '.' : *data));",
          "",
          "[Added Lines]",
          "696:             ND_PRINT((ndo, \"%c\", (EXTRACT_U_1(data) < 32 || EXTRACT_U_1(data) > 126) ? '.' : EXTRACT_U_1(data)));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "734:          if (!*data)",
          "735:             ND_PRINT((ndo, \"Tag[Unused] \"));",
          "736:          else",
          "738:          data++;",
          "739:          data_value = EXTRACT_BE_U_3(data);",
          "740:       }",
          "",
          "[Removed Lines]",
          "737:             ND_PRINT((ndo, \"Tag[%d] \", *data));",
          "",
          "[Added Lines]",
          "737:             ND_PRINT((ndo, \"Tag[%d] \", EXTRACT_U_1(data)));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "797:         case TUNNEL_PREFERENCE:",
          "798:             if (*data)",
          "800:             else",
          "801:                ND_PRINT((ndo, \"Tag[Unused] \"));",
          "802:             data++;",
          "",
          "[Removed Lines]",
          "799:                ND_PRINT((ndo, \"Tag[%d] \", *data));",
          "",
          "[Added Lines]",
          "799:                ND_PRINT((ndo, \"Tag[%d] \", EXTRACT_U_1(data)));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "806:         case EGRESS_VLAN_ID:",
          "807:             ND_PRINT((ndo, \"%s (0x%02x) \",",
          "808:                    tok2str(rfc4675_tagged,\"Unknown tag\",EXTRACT_U_1(data)),",
          "810:             data++;",
          "811:             ND_PRINT((ndo, \"%d\", EXTRACT_BE_U_3(data)));",
          "812:           break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "809:                    EXTRACT_U_1(data)));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1008:               ND_PRINT((ndo, \"User cannot change password\"));",
          "1009:            data++;",
          "1010:            ND_TCHECK_1(data);",
          "1012:            data++;",
          "1013:            ND_PRINT((ndo, \", created at: \"));",
          "1014:            ND_TCHECK_4(data);",
          "",
          "[Removed Lines]",
          "1011:            ND_PRINT((ndo, \", Min password length: %d\", *data));",
          "",
          "[Added Lines]",
          "1011:            ND_PRINT((ndo, \", Min password length: %d\", EXTRACT_U_1(data)));",
          "",
          "---------------"
        ],
        "print-rip.c||print-rip.c": [
          "File: print-rip.c -> print-rip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "138:    u_int i = 0;",
          "139:    ND_PRINT((ndo, \"\\n\\t  Simple Text Authentication data: \"));",
          "140:    for (; i < RIP_AUTHLEN; p++, i++)",
          "142:   } else if (auth_type == 3) {",
          "143:    ND_PRINT((ndo, \"\\n\\t  Auth header:\"));",
          "144:    ND_PRINT((ndo, \" Packet Len %u,\", EXTRACT_BE_U_2((const uint8_t *)ni + 4)));",
          "",
          "[Removed Lines]",
          "141:     ND_PRINT((ndo, \"%c\", ND_ISPRINT(*p) ? *p : '.'));",
          "",
          "[Added Lines]",
          "141:     ND_PRINT((ndo, \"%c\",",
          "142:       ND_ISPRINT(*p) ? EXTRACT_U_1(p) : '.'));",
          "",
          "---------------"
        ],
        "print-rpki-rtr.c||print-rpki-rtr.c": [
          "File: print-rpki-rtr.c -> print-rpki-rtr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "194:  return len;",
          "195:     }",
          "196:     if (len < sizeof(rpki_rtr_pdu)) {",
          "",
          "[Removed Lines]",
          "193:  ND_PRINT((ndo, \"%sRPKI-RTRv%u (unknown)\", indent_string(8), *tptr));",
          "",
          "[Added Lines]",
          "193:  ND_PRINT((ndo, \"%sRPKI-RTRv%u (unknown)\", indent_string(8), EXTRACT_U_1(tptr)));",
          "",
          "---------------"
        ],
        "print-snmp.c||print-snmp.c": [
          "File: print-snmp.c -> print-snmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "683:  ND_TCHECK2(*p, asnlen);",
          "684:  for (i = asnlen; i-- > 0; p++)",
          "686:  return 0;",
          "688: trunc:",
          "",
          "[Removed Lines]",
          "685:   ND_PRINT((ndo, \"_%.2x\", *p));",
          "",
          "[Added Lines]",
          "685:   ND_PRINT((ndo, \"_%.2x\", EXTRACT_U_1(p)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "712:   ND_PRINT((ndo, \"\\\"\"));",
          "713:  } else {",
          "714:   for (i = asnlen; i-- > 0; p++) {",
          "716:    first = 0;",
          "717:   }",
          "718:  }",
          "",
          "[Removed Lines]",
          "715:    ND_PRINT((ndo, first ? \"%.2x\" : \"_%.2x\", *p));",
          "",
          "[Added Lines]",
          "715:    ND_PRINT((ndo, first ? \"%.2x\" : \"_%.2x\", EXTRACT_U_1(p)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "825:   p = (const u_char *)elem->data.raw;",
          "826:   ND_TCHECK2(*p, asnlen);",
          "827:   for (i = asnlen; i-- != 0; p++) {",
          "829:   }",
          "830:   break;",
          "",
          "[Removed Lines]",
          "828:    ND_PRINT((ndo, (i == asnlen-1) ? \"%u\" : \".%u\", *p));",
          "",
          "[Added Lines]",
          "828:    ND_PRINT((ndo, (i == asnlen-1) ? \"%u\" : \".%u\", EXTRACT_U_1(p)));",
          "",
          "---------------"
        ],
        "print-tcp.c||print-tcp.c": [
          "File: print-tcp.c -> print-tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "461:                         case TCPOPT_WSCALE:",
          "462:                                 datalen = 1;",
          "463:                                 LENCHECK(datalen);",
          "465:                                 break;",
          "467:                         case TCPOPT_SACK:",
          "",
          "[Removed Lines]",
          "464:                                 ND_PRINT((ndo, \" %u\", *cp));",
          "",
          "[Added Lines]",
          "464:                                 ND_PRINT((ndo, \" %u\", EXTRACT_U_1(cp)));",
          "",
          "---------------"
        ],
        "print-udld.c||print-udld.c": [
          "File: print-udld.c -> print-udld.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:         case UDLD_TIMEOUT_INTERVAL_TLV:",
          "167:             if (len != 1)",
          "168:                 goto invalid;",
          "170:             break;",
          "172:         case UDLD_SEQ_NUMBER_TLV:",
          "",
          "[Removed Lines]",
          "169:             ND_PRINT((ndo, \", %us\", (*tptr)));",
          "",
          "[Added Lines]",
          "169:             ND_PRINT((ndo, \", %us\", (EXTRACT_U_1(tptr))));",
          "",
          "---------------"
        ],
        "print-vtp.c||print-vtp.c": [
          "File: print-vtp.c -> print-vtp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:     type = EXTRACT_U_1(tptr + 1);",
          "134:     ND_PRINT((ndo, \"VTPv%u, Message %s (0x%02x), length %u\",",
          "136:     tok2str(vtp_message_type_values,\"Unknown message type\", type),",
          "137:     type,",
          "138:     length));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135:     EXTRACT_U_1(tptr),",
          "",
          "---------------"
        ],
        "smbutil.c||smbutil.c": [
          "File: smbutil.c -> smbutil.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "638:      ND_TCHECK(*buf);",
          "639:      if (*buf != 4 && *buf != 2) {",
          "642:      }",
          "643:      len = 0;",
          "",
          "[Removed Lines]",
          "640:   ND_PRINT((ndo, \"Error! ASCIIZ buffer of type %u\", *buf));",
          "",
          "[Added Lines]",
          "640:   ND_PRINT((ndo, \"Error! ASCIIZ buffer of type %u\", EXTRACT_U_1(buf)));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03a2d9c4c1e360def4f9d0473f9b378ef2f14431",
      "candidate_info": {
        "commit_hash": "03a2d9c4c1e360def4f9d0473f9b378ef2f14431",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/03a2d9c4c1e360def4f9d0473f9b378ef2f14431",
        "files": [
          "print-ahcp.c",
          "print-arp.c",
          "print-ascii.c",
          "print-atm.c",
          "print-llc.c",
          "print-msdp.c",
          "print-radius.c",
          "print-resp.c",
          "print-rpki-rtr.c",
          "print-sl.c",
          "print-snmp.c",
          "print-telnet.c",
          "print-tftp.c",
          "smbutil.c"
        ],
        "message": "Use more the EXTRACT_U_1() macro (47/n)\n\nIn: if (... *(p) ...) ...",
        "before_after_code_files": [
          "print-ahcp.c||print-ahcp.c",
          "print-arp.c||print-arp.c",
          "print-ascii.c||print-ascii.c",
          "print-atm.c||print-atm.c",
          "print-llc.c||print-llc.c",
          "print-msdp.c||print-msdp.c",
          "print-radius.c||print-radius.c",
          "print-resp.c||print-resp.c",
          "print-rpki-rtr.c||print-rpki-rtr.c",
          "print-sl.c||print-sl.c",
          "print-snmp.c||print-snmp.c",
          "print-telnet.c||print-telnet.c",
          "print-tftp.c||print-tftp.c",
          "smbutil.c||smbutil.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-rpki-rtr.c||print-rpki-rtr.c"
          ],
          "candidate": [
            "print-rpki-rtr.c||print-rpki-rtr.c"
          ]
        }
      },
      "candidate_diff": {
        "print-ahcp.c||print-ahcp.c": [
          "File: print-ahcp.c -> print-ahcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "355:   goto invalid;",
          "357:  ND_TCHECK_1(cp);",
          "359:   goto invalid;",
          "360:  cp += 1;",
          "",
          "[Removed Lines]",
          "358:  if (*cp != AHCP_MAGIC_NUMBER)",
          "",
          "[Added Lines]",
          "358:  if (EXTRACT_U_1(cp) != AHCP_MAGIC_NUMBER)",
          "",
          "---------------"
        ],
        "print-arp.c||print-arp.c": [
          "File: print-arp.c -> print-arp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "181: isnonzero(const u_char *a, size_t len)",
          "182: {",
          "183:  while (len > 0) {",
          "185:    return (1);",
          "186:   a++;",
          "187:   len--;",
          "",
          "[Removed Lines]",
          "184:   if (*a != 0)",
          "",
          "[Added Lines]",
          "184:   if (EXTRACT_U_1(a) != 0)",
          "",
          "---------------"
        ],
        "print-ascii.c||print-ascii.c": [
          "File: print-ascii.c -> print-ascii.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: #include <stdio.h>",
          "48: #include \"netdissect.h\"",
          "50: #define ASCII_LINELENGTH 300",
          "51: #define HEXDUMP_BYTES_PER_LINE 16",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: #include \"extract.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:     ND_PRINT((ndo, \".\"));",
          "83:   } else {",
          "84:    if (!ND_ISGRAPH(s) &&",
          "",
          "[Removed Lines]",
          "81:    if (length > 1 && *cp != '\\n')",
          "",
          "[Added Lines]",
          "82:    if (length > 1 && EXTRACT_U_1(cp) != '\\n')",
          "",
          "---------------"
        ],
        "print-atm.c||print-atm.c": [
          "File: print-atm.c -> print-atm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "259:  }",
          "263:             if (ndo->ndo_eflag)",
          "264:                 ND_PRINT((ndo, \"CNLPID \"));",
          "265:             isoclns_print(ndo, p + 1, length - 1);",
          "",
          "[Removed Lines]",
          "262:         if (*p == LLC_UI) {",
          "",
          "[Added Lines]",
          "262:         if (EXTRACT_U_1(p) == LLC_UI) {",
          "",
          "---------------"
        ],
        "print-llc.c||print-llc.c": [
          "File: print-llc.c -> print-llc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "372:      ND_DEFAULTPRINT((const u_char *)p, caplen);",
          "373:     return (hdrlen);",
          "374:    }",
          "376:     if (caplen < 3 || length < 3) {",
          "377:      ND_PRINT((ndo, \"[|llc]\"));",
          "378:      if (caplen > 0)",
          "",
          "[Removed Lines]",
          "375:    if (*p == LLC_XID_FI) {",
          "",
          "[Added Lines]",
          "375:    if (EXTRACT_U_1(p) == LLC_XID_FI) {",
          "",
          "---------------"
        ],
        "print-msdp.c||print-msdp.c": [
          "File: print-msdp.c -> print-msdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:     ND_PRINT((ndo, \" SA-Response\"));",
          "62:    ND_TCHECK_1(sp);",
          "63:    ND_PRINT((ndo, \" %u entries\", EXTRACT_U_1(sp)));",
          "65:     ND_PRINT((ndo, \" [w/data]\"));",
          "66:     if (ndo->ndo_vflag > 1) {",
          "67:      ND_PRINT((ndo, \" \"));",
          "",
          "[Removed Lines]",
          "64:    if ((u_int)((*sp * 12) + 8) < len) {",
          "",
          "[Added Lines]",
          "64:    if ((u_int)((EXTRACT_U_1(sp) * 12) + 8) < len) {",
          "",
          "---------------"
        ],
        "print-radius.c||print-radius.c": [
          "File: print-radius.c -> print-radius.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "609:       case TUNNEL_ASSIGN_ID:",
          "610:       case TUNNEL_CLIENT_AUTH:",
          "611:       case TUNNEL_SERVER_AUTH:",
          "613:            {",
          "614:               if (length < 1)",
          "615:                  goto trunc;",
          "",
          "[Removed Lines]",
          "612:            if (*data <= 0x1F)",
          "",
          "[Added Lines]",
          "612:            if (EXTRACT_U_1(data) <= 0x1F)",
          "",
          "---------------"
        ],
        "print-resp.c||print-resp.c": [
          "File: print-resp.c -> print-resp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "467:     ND_TCHECK_1(bp);",
          "468:     too_large = 0;",
          "469:     neg = 0;",
          "471:         neg = 1;",
          "472:         bp++;",
          "473:         len--;",
          "",
          "[Removed Lines]",
          "470:     if (*bp == '-') {",
          "",
          "[Added Lines]",
          "470:     if (EXTRACT_U_1(bp) == '-') {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "512:         bp++;",
          "513:         goto invalid;",
          "514:     }",
          "",
          "[Removed Lines]",
          "511:     if (*bp != '\\r') {",
          "",
          "[Added Lines]",
          "511:     if (EXTRACT_U_1(bp) != '\\r') {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "517:     if (len == 0)",
          "518:         goto trunc;",
          "519:     ND_TCHECK_1(bp);",
          "521:         bp++;",
          "522:         goto invalid;",
          "523:     }",
          "",
          "[Removed Lines]",
          "520:     if (*bp != '\\n') {",
          "",
          "[Added Lines]",
          "520:     if (EXTRACT_U_1(bp) != '\\n') {",
          "",
          "---------------"
        ],
        "print-rpki-rtr.c||print-rpki-rtr.c": [
          "File: print-rpki-rtr.c -> print-rpki-rtr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "185:     ND_TCHECK_1(tptr);",
          "",
          "[Removed Lines]",
          "186:     if (*tptr != 0) {",
          "",
          "[Added Lines]",
          "186:     if (EXTRACT_U_1(tptr) != 0) {",
          "",
          "---------------"
        ],
        "print-sl.c||print-sl.c": [
          "File: print-sl.c -> print-sl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "198: {",
          "199:  register u_int i;",
          "202:   i = EXTRACT_BE_U_2(cp);",
          "203:   cp += 2;",
          "204:  }",
          "",
          "[Removed Lines]",
          "201:  if ((i = *cp++) == 0) {",
          "",
          "[Added Lines]",
          "201:  if ((i = EXTRACT_U_1(cp)) == 0) {",
          "202:   cp++;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "212: {",
          "213:  register short i;",
          "216:   i = EXTRACT_BE_U_2(cp);",
          "217:   cp += 2;",
          "218:  }",
          "",
          "[Removed Lines]",
          "215:  if ((i = *cp++) == 0) {",
          "",
          "[Added Lines]",
          "216:  if ((i = EXTRACT_U_1(cp)) == 0) {",
          "217:   cp++;",
          "",
          "---------------"
        ],
        "print-snmp.c||print-snmp.c": [
          "File: print-snmp.c -> print-snmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "772:   for (; i-- > 0; p++) {",
          "773:    ND_TCHECK_1(p);",
          "774:    o = (o << ASN_SHIFT7) + (*p & ~ASN_BIT8);",
          "776:            continue;",
          "",
          "[Removed Lines]",
          "775:    if (*p & ASN_LONGLEN)",
          "",
          "[Added Lines]",
          "775:    if (EXTRACT_U_1(p) & ASN_LONGLEN)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "924:  for (*oidlen = 0; i-- > 0; p++) {",
          "925:   ND_TCHECK_1(p);",
          "926:          o = (o << ASN_SHIFT7) + (*p & ~ASN_BIT8);",
          "928:       continue;",
          "",
          "[Removed Lines]",
          "927:   if (*p & ASN_LONGLEN)",
          "",
          "[Added Lines]",
          "927:   if (EXTRACT_U_1(p) & ASN_LONGLEN)",
          "",
          "---------------"
        ],
        "print-telnet.c||print-telnet.c": [
          "File: print-telnet.c -> print-telnet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "444:    p++;",
          "445:   }",
          "446:   ND_TCHECK_1(p);",
          "448:    goto pktend;",
          "450:   switch (x) {",
          "",
          "[Removed Lines]",
          "447:   if (*p != IAC)",
          "",
          "[Added Lines]",
          "447:   if (EXTRACT_U_1(p) != IAC)",
          "",
          "---------------"
        ],
        "print-tftp.c||print-tftp.c": [
          "File: print-tftp.c -> print-tftp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:   while (length != 0) {",
          "142:    ND_TCHECK_1(bp);",
          "144:     ND_PRINT((ndo, \" \"));",
          "145:    ui = fn_printztn(ndo, bp, length, ndo->ndo_snapend);",
          "146:    if (ui == 0)",
          "",
          "[Removed Lines]",
          "143:    if (*bp != '\\0')",
          "",
          "[Added Lines]",
          "143:    if (EXTRACT_U_1(bp) != '\\0')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "155:   while (length != 0) {",
          "156:    ND_TCHECK_1(bp);",
          "158:     ND_PRINT((ndo, \" \"));",
          "159:    ui = fn_printztn(ndo, bp, length, ndo->ndo_snapend);",
          "160:    if (ui == 0)",
          "",
          "[Removed Lines]",
          "157:    if (*bp != '\\0')",
          "",
          "[Added Lines]",
          "157:    if (EXTRACT_U_1(bp) != '\\0')",
          "",
          "---------------"
        ],
        "smbutil.c||smbutil.c": [
          "File: smbutil.c -> smbutil.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "637:      uint32_t len;",
          "639:      ND_TCHECK_1(buf);",
          "641:   ND_PRINT((ndo, \"Error! ASCIIZ buffer of type %u\", EXTRACT_U_1(buf)));",
          "643:      }",
          "",
          "[Removed Lines]",
          "640:      if (*buf != 4 && *buf != 2) {",
          "",
          "[Added Lines]",
          "640:      if (EXTRACT_U_1(buf) != 4 && EXTRACT_U_1(buf) != 2) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "77a49fcb6ee80c8a107dd179e445c4eb9aab48e7",
      "candidate_info": {
        "commit_hash": "77a49fcb6ee80c8a107dd179e445c4eb9aab48e7",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/77a49fcb6ee80c8a107dd179e445c4eb9aab48e7",
        "files": [
          "CONTRIBUTING",
          "netdissect.h",
          "print-ahcp.c",
          "print-aoe.c",
          "print-babel.c",
          "print-bgp.c",
          "print-dtp.c",
          "print-hncp.c",
          "print-icmp6.c",
          "print-ip.c",
          "print-isoclns.c",
          "print-lisp.c",
          "print-loopback.c",
          "print-m3ua.c",
          "print-ntp.c",
          "print-openflow-1.0.c",
          "print-openflow.c",
          "print-ospf.c",
          "print-rpki-rtr.c",
          "print-rsvp.c",
          "print-udld.c",
          "util-print.c"
        ],
        "message": "Add the nd_print_invalid() function\n\nIt prints \" (invalid)\", used for malformed or corrupted packets.\n\nMoreover:\nUpdate CONTRIBUTING.",
        "before_after_code_files": [
          "netdissect.h||netdissect.h",
          "print-ahcp.c||print-ahcp.c",
          "print-aoe.c||print-aoe.c",
          "print-babel.c||print-babel.c",
          "print-bgp.c||print-bgp.c",
          "print-dtp.c||print-dtp.c",
          "print-hncp.c||print-hncp.c",
          "print-icmp6.c||print-icmp6.c",
          "print-ip.c||print-ip.c",
          "print-isoclns.c||print-isoclns.c",
          "print-lisp.c||print-lisp.c",
          "print-loopback.c||print-loopback.c",
          "print-m3ua.c||print-m3ua.c",
          "print-ntp.c||print-ntp.c",
          "print-openflow-1.0.c||print-openflow-1.0.c",
          "print-openflow.c||print-openflow.c",
          "print-ospf.c||print-ospf.c",
          "print-rpki-rtr.c||print-rpki-rtr.c",
          "print-rsvp.c||print-rsvp.c",
          "print-udld.c||print-udld.c",
          "util-print.c||util-print.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-rpki-rtr.c||print-rpki-rtr.c"
          ],
          "candidate": [
            "print-rpki-rtr.c||print-rpki-rtr.c"
          ]
        }
      },
      "candidate_diff": {
        "netdissect.h||netdissect.h": [
          "File: netdissect.h -> netdissect.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "125: #ifndef HAVE_STRLCAT",
          "126: extern size_t strlcat (char *, const char *, size_t);",
          "127: #endif",
          "",
          "[Removed Lines]",
          "123: extern const char istr[];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "667: extern void nd_print_trunc(netdissect_options *);",
          "669: extern int mask2plen(uint32_t);",
          "670: extern int mask62plen(const u_char *);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "665: extern void nd_print_invalid(netdissect_options *);",
          "",
          "---------------"
        ],
        "print-ahcp.c||print-ahcp.c": [
          "File: print-ahcp.c -> print-ahcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "116:  return 0;",
          "118: invalid:",
          "120:  ND_TCHECK_LEN(cp, ep - cp);",
          "121:  return 0;",
          "122: trunc:",
          "",
          "[Removed Lines]",
          "119:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "119:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "134:  return 0;",
          "136: invalid:",
          "138:  ND_TCHECK_LEN(cp, ep - cp);",
          "139:  return 0;",
          "140: trunc:",
          "",
          "[Removed Lines]",
          "137:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "137:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "158:  return 0;",
          "160: invalid:",
          "162:  ND_TCHECK_LEN(cp, ep - cp);",
          "163:  return 0;",
          "164: trunc:",
          "",
          "[Removed Lines]",
          "161:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "161:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "182:  return 0;",
          "184: invalid:",
          "186:  ND_TCHECK_LEN(cp, ep - cp);",
          "187:  return 0;",
          "188: trunc:",
          "",
          "[Removed Lines]",
          "185:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "185:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "206:  return 0;",
          "208: invalid:",
          "210:  ND_TCHECK_LEN(cp, ep - cp);",
          "211:  return 0;",
          "212: trunc:",
          "",
          "[Removed Lines]",
          "209:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "209:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "230:  return 0;",
          "232: invalid:",
          "234:  ND_TCHECK_LEN(cp, ep - cp);",
          "235:  return 0;",
          "236: trunc:",
          "",
          "[Removed Lines]",
          "233:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "233:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "291:  return;",
          "293: invalid:",
          "295:  ND_TCHECK_LEN(cp, ep - cp);",
          "296:  return;",
          "297: trunc:",
          "",
          "[Removed Lines]",
          "294:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "294:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "336:  return;",
          "338: invalid:",
          "340:  ND_TCHECK_LEN(cp, ep - cp);",
          "341:  return;",
          "342: trunc:",
          "",
          "[Removed Lines]",
          "339:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "339:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "403:  return;",
          "405: invalid:",
          "407:  ND_TCHECK_LEN(cp, ep - cp);",
          "408:  return;",
          "409: trunc:",
          "",
          "[Removed Lines]",
          "406:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "406:  nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-aoe.c||print-aoe.c": [
          "File: print-aoe.c -> print-aoe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "194:  return;",
          "196: invalid:",
          "198:  ND_TCHECK_LEN(cp, ep - cp);",
          "199:  return;",
          "200: trunc:",
          "",
          "[Removed Lines]",
          "197:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "197:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "243:  return;",
          "245: invalid:",
          "247:  ND_TCHECK_LEN(cp, ep - cp);",
          "248:  return;",
          "249: trunc:",
          "",
          "[Removed Lines]",
          "246:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "246:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "294:  return;",
          "296: invalid:",
          "298:  ND_TCHECK_LEN(cp, ep - cp);",
          "299:  return;",
          "300: trunc:",
          "",
          "[Removed Lines]",
          "297:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "297:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "329:  return;",
          "331: invalid:",
          "333:  ND_TCHECK_LEN(cp, ep - cp);",
          "334:  return;",
          "335: trunc:",
          "",
          "[Removed Lines]",
          "332:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "332:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "387:  return;",
          "389: invalid:",
          "391:  ND_TCHECK_LEN(cp, ep - cp);",
          "392:  return;",
          "393: trunc:",
          "",
          "[Removed Lines]",
          "390:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "390:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "420:  return;",
          "422: invalid:",
          "424:  ND_TCHECK_LEN(cp, ep - cp);",
          "425:  return;",
          "426: trunc:",
          "",
          "[Removed Lines]",
          "423:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "423:  nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-babel.c||print-babel.c": [
          "File: print-babel.c -> print-babel.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "336:     return;",
          "338:  invalid:",
          "340: }",
          "342: #define ICHECK(i, l) \\",
          "",
          "[Removed Lines]",
          "339:     ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "339:     nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "732:     return;",
          "734:  invalid:",
          "736:     return;",
          "737: }",
          "",
          "[Removed Lines]",
          "735:     ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "735:     nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-bgp.c||print-bgp.c": [
          "File: print-bgp.c -> print-bgp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2581:             cap_offset=2;",
          "2582:             while (tcap_len != 0) {",
          "2583:                 if (tcap_len < 4) {",
          "2585:                     break;",
          "2586:                 }",
          "2587:                 ND_PRINT(\"\\n\\t\\tAFI %s (%u), SAFI %s (%u), Send/Receive: %s\",",
          "",
          "[Removed Lines]",
          "2584:                     ND_PRINT(\"\\n\\t\\t(invalid)\");",
          "",
          "[Added Lines]",
          "2584:                     nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-dtp.c||print-dtp.c": [
          "File: print-dtp.c -> print-dtp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:     return;",
          "116:  invalid:",
          "118:     return;",
          "119:  trunc:",
          "120:     nd_print_trunc(ndo);",
          "",
          "[Removed Lines]",
          "117:     ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "117:     nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-hncp.c||print-hncp.c": [
          "File: print-hncp.c -> print-hncp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "345:             case DH6OPT_DNS_SERVERS:",
          "346:             case DH6OPT_SNTP_SERVERS: {",
          "347:                 if (optlen % 16 != 0) {",
          "349:                     return -1;",
          "350:                 }",
          "351:                 for (t = 0; t < optlen; t += 16)",
          "",
          "[Removed Lines]",
          "348:                     ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "348:                     nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "480:         case DNCP_REQUEST_NETWORK_STATE: {",
          "481:             if (bodylen != 0)",
          "483:         }",
          "484:             break;",
          "486:         case DNCP_REQUEST_NODE_STATE: {",
          "487:             const char *node_identifier;",
          "488:             if (bodylen != 4) {",
          "490:                 break;",
          "491:             }",
          "492:             node_identifier = format_nid(value);",
          "",
          "[Removed Lines]",
          "482:                 ND_PRINT(\"%s\", istr);",
          "489:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "482:                 nd_print_invalid(ndo);",
          "489:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "498:             const char *node_identifier;",
          "499:             uint32_t endpoint_identifier;",
          "500:             if (bodylen != 8) {",
          "502:                 break;",
          "503:             }",
          "504:             node_identifier = format_nid(value);",
          "",
          "[Removed Lines]",
          "501:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "501:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "513:         case DNCP_NETWORK_STATE: {",
          "514:             uint64_t hash;",
          "515:             if (bodylen != 8) {",
          "517:                 break;",
          "518:             }",
          "519:             hash = EXTRACT_BE_U_8(value);",
          "",
          "[Removed Lines]",
          "516:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "516:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "526:             uint32_t sequence_number;",
          "527:             uint64_t hash;",
          "528:             if (bodylen < 20) {",
          "530:                 break;",
          "531:             }",
          "532:             node_identifier = format_nid(value);",
          "",
          "[Removed Lines]",
          "529:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "529:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "547:             const char *peer_node_identifier;",
          "548:             uint32_t peer_endpoint_identifier, endpoint_identifier;",
          "549:             if (bodylen != 12) {",
          "551:                 break;",
          "552:             }",
          "553:             peer_node_identifier = format_nid(value);",
          "",
          "[Removed Lines]",
          "550:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "550:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "565:             uint32_t endpoint_identifier;",
          "566:             const char *interval;",
          "567:             if (bodylen < 8) {",
          "569:                 break;",
          "570:             }",
          "571:             endpoint_identifier = EXTRACT_BE_U_4(value);",
          "",
          "[Removed Lines]",
          "568:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "568:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "580:         case DNCP_TRUST_VERDICT: {",
          "581:             if (bodylen <= 36) {",
          "583:                 break;",
          "584:             }",
          "585:             ND_PRINT(\" Verdict: %u Fingerprint: %s Common Name: \",",
          "",
          "[Removed Lines]",
          "582:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "582:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "593:             uint16_t capabilities;",
          "594:             uint8_t M, P, H, L;",
          "595:             if (bodylen < 5) {",
          "597:                 break;",
          "598:             }",
          "599:             capabilities = EXTRACT_BE_U_2(value + 2);",
          "",
          "[Removed Lines]",
          "596:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "596:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "617:         case HNCP_DELEGATED_PREFIX: {",
          "618:             int l;",
          "619:             if (bodylen < 9 || bodylen < 9 + (EXTRACT_U_1(value + 8) + 7) / 8) {",
          "621:                 break;",
          "622:             }",
          "623:             ND_PRINT(\" VLSO: %s PLSO: %s Prefix: \",",
          "",
          "[Removed Lines]",
          "620:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "620:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "643:                 break;",
          "644:             }",
          "645:             l += 8 + (-l & 3);",
          "",
          "[Removed Lines]",
          "642:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "642:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "653:             uint8_t policy;",
          "654:             int l;",
          "655:             if (bodylen < 1) {",
          "657:                 break;",
          "658:             }",
          "659:             policy = EXTRACT_U_1(value);",
          "660:             ND_PRINT(\" type: \");",
          "661:             if (policy == 0) {",
          "662:                 if (bodylen != 1) {",
          "664:                     break;",
          "665:                 }",
          "666:                 ND_PRINT(\"Internet connectivity\");",
          "",
          "[Removed Lines]",
          "656:                 ND_PRINT(\"%s\", istr);",
          "663:                     ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "656:                 nd_print_invalid(ndo);",
          "663:                     nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "685:                     break;",
          "686:                 }",
          "687:             } else if (policy == 129) {",
          "",
          "[Removed Lines]",
          "684:                     ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "684:                     nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "692:                 (void)nd_printzp(ndo, value + 1, bodylen - 1, NULL);",
          "693:             } else if (policy == 131) {",
          "694:                 if (bodylen != 1) {",
          "696:                     break;",
          "697:                 }",
          "698:                 ND_PRINT(\"Restrictive assignment\");",
          "",
          "[Removed Lines]",
          "695:                     ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "695:                     nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "705:         case HNCP_DHCPV4_DATA: {",
          "706:             if (bodylen == 0) {",
          "708:                 break;",
          "709:             }",
          "710:             if (dhcpv4_print(ndo, value, bodylen, indent+1) != 0)",
          "",
          "[Removed Lines]",
          "707:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "707:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "715:         case HNCP_DHCPV6_DATA: {",
          "716:             if (bodylen == 0) {",
          "718:                 break;",
          "719:             }",
          "720:             if (dhcpv6_print(ndo, value, bodylen, indent+1) != 0) {",
          "722:                 break;",
          "723:             }",
          "724:         }",
          "",
          "[Removed Lines]",
          "717:                 ND_PRINT(\"%s\", istr);",
          "721:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "717:                 nd_print_invalid(ndo);",
          "721:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "728:             uint8_t prty;",
          "729:             int l;",
          "730:             if (bodylen < 6 || bodylen < 6 + (EXTRACT_U_1(value + 5) + 7) / 8) {",
          "732:                 break;",
          "733:             }",
          "734:             prty = EXTRACT_U_1(value + 4) & 0xf;",
          "",
          "[Removed Lines]",
          "731:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "731:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "738:             );",
          "739:             ND_PRINT(\" Prefix: \");",
          "740:             if ((l = print_prefix(ndo, value + 5, bodylen - 5)) < 0) {",
          "742:                 break;",
          "743:             }",
          "744:             l += 5;",
          "",
          "[Removed Lines]",
          "741:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "741:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "753:             uint32_t endpoint_identifier;",
          "754:             const char *ip_address;",
          "755:             if (bodylen < 20) {",
          "757:                 break;",
          "758:             }",
          "759:             endpoint_identifier = EXTRACT_BE_U_4(value);",
          "",
          "[Removed Lines]",
          "756:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "756:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "771:             const char *ip_address;",
          "772:             int len;",
          "773:             if (bodylen < 17) {",
          "775:                 break;",
          "776:             }",
          "777:             ip_address = format_ip6addr(ndo, value);",
          "",
          "[Removed Lines]",
          "774:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "774:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "783:             );",
          "784:             len = print_dns_label(ndo, value+17, bodylen-17, 1);",
          "785:             if (len < 0) {",
          "787:                 break;",
          "788:             }",
          "789:             len += 17;",
          "",
          "[Removed Lines]",
          "786:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "786:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "796:         case HNCP_DOMAIN_NAME: {",
          "797:             if (bodylen == 0) {",
          "799:                 break;",
          "800:             }",
          "801:             ND_PRINT(\" Domain: \");",
          "",
          "[Removed Lines]",
          "798:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "798:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "806:         case HNCP_NODE_NAME: {",
          "807:             u_int l;",
          "808:             if (bodylen < 17) {",
          "810:                 break;",
          "811:             }",
          "812:             l = EXTRACT_U_1(value + 16);",
          "813:             if (bodylen < 17 + l) {",
          "815:                 break;",
          "816:             }",
          "817:             ND_PRINT(\" IP-Address: %s Name: \",",
          "",
          "[Removed Lines]",
          "809:                 ND_PRINT(\"%s\", istr);",
          "814:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "809:                 nd_print_invalid(ndo);",
          "814:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "822:                 (void)nd_printzp(ndo, value + 17, l, NULL);",
          "823:                 ND_PRINT(\"\\\"\");",
          "824:             } else {",
          "826:             }",
          "827:             l += 17;",
          "828:             l += -l & 3;",
          "",
          "[Removed Lines]",
          "825:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "825:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "834:         case HNCP_MANAGED_PSK: {",
          "835:             if (bodylen < 32) {",
          "837:                 break;",
          "838:             }",
          "839:             ND_PRINT(\" PSK: %s\", format_256(value));",
          "",
          "[Removed Lines]",
          "836:                 ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "836:                 nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "861:     return;",
          "863:  invalid:",
          "865:     return;",
          "866: }",
          "",
          "[Removed Lines]",
          "864:     ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "864:     nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-icmp6.c||print-icmp6.c": [
          "File: print-icmp6.c -> print-icmp6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1041:  ep = ndo->ndo_snapend;",
          "1042:  if (length == 0) {",
          "1043:   ND_PRINT(\"ICMP6, length 0\");",
          "1045:   return;",
          "1046:  }",
          "",
          "[Removed Lines]",
          "1044:   ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "1044:   nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-ip.c||print-ip.c": [
          "File: print-ip.c -> print-ip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "558:        ND_PRINT(\"IP6, wrong link-layer encapsulation\");",
          "559:      else",
          "560:        ND_PRINT(\"IP%u\", IP_V(ipds->ip));",
          "562:      return;",
          "563:  }",
          "564:  if (!ndo->ndo_eflag)",
          "",
          "[Removed Lines]",
          "561:      ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "561:      nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-isoclns.c||print-isoclns.c": [
          "File: print-isoclns.c -> print-isoclns.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2698:      tptr++;",
          "2699:      if (lan_alen == 0) {",
          "2701:                 break;",
          "2702:             }",
          "2703:             tmp --;",
          "",
          "[Removed Lines]",
          "2700:                 ND_PRINT(\"\\n\\t      LAN address length 0 bytes (invalid)\");",
          "",
          "[Added Lines]",
          "2700:                 ND_PRINT(\"\\n\\t      LAN address length 0 bytes\");",
          "2701:                 nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-lisp.c||print-lisp.c": [
          "File: print-lisp.c -> print-lisp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "389:  nd_print_trunc(ndo);",
          "390:  return;",
          "391: invalid:",
          "393:  return;",
          "394: }",
          "",
          "[Removed Lines]",
          "392:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "392:  nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-loopback.c||print-loopback.c": [
          "File: print-loopback.c -> print-loopback.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:  return;",
          "98: invalid:",
          "100:  ND_TCHECK_LEN(cp, ep - cp);",
          "101:  return;",
          "102: trunc:",
          "",
          "[Removed Lines]",
          "99:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "99:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "126:  return;",
          "128: invalid:",
          "130:  ND_TCHECK_LEN(cp, ep - cp);",
          "131:  return;",
          "132: trunc:",
          "",
          "[Removed Lines]",
          "129:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "129:  nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-m3ua.c||print-m3ua.c": [
          "File: print-m3ua.c -> print-m3ua.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "229:   return;",
          "231: invalid:",
          "233:   ND_TCHECK_LEN(buf, size);",
          "234:   return;",
          "235: trunc:",
          "",
          "[Removed Lines]",
          "232:   ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "232:   nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "277:   return;",
          "279: invalid:",
          "281:   ND_TCHECK_LEN(buf, size);",
          "282:   return;",
          "283: trunc:",
          "",
          "[Removed Lines]",
          "280:   ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "280:   nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "333:   return;",
          "335: invalid:",
          "337:   ND_TCHECK_LEN(buf, size);",
          "338:   return;",
          "339: trunc:",
          "",
          "[Removed Lines]",
          "336:   ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "336:   nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-ntp.c||print-ntp.c": [
          "File: print-ntp.c -> print-ntp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "371:  return;",
          "373: invalid:",
          "375:  ND_TCHECK_LEN(bp, length);",
          "376:  return;",
          "",
          "[Removed Lines]",
          "374:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "374:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "431:  return;",
          "433: invalid:",
          "435:  ND_TCHECK_LEN(cd, length);",
          "436:  return;",
          "",
          "[Removed Lines]",
          "434:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "434:  nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-openflow-1.0.c||print-openflow-1.0.c": [
          "File: print-openflow-1.0.c -> print-openflow-1.0.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "947:  return cp;",
          "951:  ND_TCHECK_LEN(cp0, len);",
          "952:  return cp0 + len;",
          "953: trunc:",
          "",
          "[Removed Lines]",
          "950:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "950:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1021:  return cp;",
          "1023: invalid:",
          "1025:  ND_TCHECK_LEN(cp0, len);",
          "1026:  return cp0 + len;",
          "1027: trunc:",
          "",
          "[Removed Lines]",
          "1024:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "1024:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1050:  return decoder(ndo, cp, ep, len - 4);",
          "1054:  ND_TCHECK_LEN(cp, len);",
          "1055:  return cp + len;",
          "1056: trunc:",
          "",
          "[Removed Lines]",
          "1053:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "1053:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1079:  return decoder(ndo, cp, ep, len - 4);",
          "1083:  ND_TCHECK_LEN(cp, len);",
          "1084:  return cp + len;",
          "1085: trunc:",
          "",
          "[Removed Lines]",
          "1082:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "1082:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1105:  return of10_data_print(ndo, cp, ep, len - 4);",
          "1109:  ND_TCHECK_LEN(cp, len);",
          "1110:  return cp + len;",
          "1111: trunc:",
          "",
          "[Removed Lines]",
          "1108:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "1108:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1208:  return cp;",
          "1212:  ND_TCHECK_LEN(cp0, len0);",
          "1213:  return cp0 + len0;",
          "1214: trunc:",
          "",
          "[Removed Lines]",
          "1211:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "1211:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1284:  return cp;",
          "1288:  ND_TCHECK_LEN(cp0, len0);",
          "1289:  return cp0 + len0;",
          "1290: trunc:",
          "",
          "[Removed Lines]",
          "1287:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "1287:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1332:  return cp;",
          "1336:  ND_TCHECK_LEN(cp0, len0);",
          "1337:  return cp0 + len0;",
          "1338: trunc:",
          "",
          "[Removed Lines]",
          "1335:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "1335:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1603:  return cp;",
          "1607:  ND_TCHECK_LEN(cp0, len0);",
          "1608:  return cp0 + len0;",
          "1609: trunc:",
          "",
          "[Removed Lines]",
          "1606:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "1606:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1821:  return cp;",
          "1825:  ND_TCHECK_LEN(cp0, len0);",
          "1826:  return cp0 + len0;",
          "1827: trunc:",
          "",
          "[Removed Lines]",
          "1824:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "1824:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1868:  return cp + DESC_STR_LEN;",
          "1872:  ND_TCHECK_LEN(cp, len);",
          "1873:  return cp + len;",
          "1874: trunc:",
          "",
          "[Removed Lines]",
          "1871:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "1871:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1949:  return cp;",
          "1953:  ND_TCHECK_LEN(cp0, len0);",
          "1954:  return cp0 + len0;",
          "1955: trunc:",
          "",
          "[Removed Lines]",
          "1952:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "1952:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1982:  return cp + 4;",
          "1986:  ND_TCHECK_LEN(cp, len);",
          "1987:  return cp + len;",
          "1988: trunc:",
          "",
          "[Removed Lines]",
          "1985:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "1985:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2042:  return cp;",
          "2046:  ND_TCHECK_LEN(cp0, len0);",
          "2047:  return cp0 + len0;",
          "2048: trunc:",
          "",
          "[Removed Lines]",
          "2045:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "2045:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2127:  return cp;",
          "2131:  ND_TCHECK_LEN(cp0, len0);",
          "2132:  return cp0 + len0;",
          "2133: trunc:",
          "",
          "[Removed Lines]",
          "2130:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "2130:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2175:  return cp;",
          "2179:  ND_TCHECK_LEN(cp0, len0);",
          "2180:  return cp0 + len0;",
          "2181: trunc:",
          "",
          "[Removed Lines]",
          "2178:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "2178:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2254:  return of10_packet_data_print(ndo, cp, ep, len - OF_PACKET_OUT_LEN - actions_len);",
          "2258:  ND_TCHECK_LEN(cp0, len0);",
          "2259:  return cp0 + len0;",
          "2260: trunc:",
          "",
          "[Removed Lines]",
          "2257:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "2257:  nd_print_invalid(ndo);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2557:  goto next_message;",
          "2561: next_message:",
          "2562:  ND_TCHECK_LEN(cp0, len0 - OF_HEADER_LEN);",
          "2563:  return cp0 + len0 - OF_HEADER_LEN;",
          "",
          "[Removed Lines]",
          "2560:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "2560:  nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-openflow.c||print-openflow.c": [
          "File: print-openflow.c -> print-openflow.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:  }",
          "124:  ND_TCHECK_LEN(cp, ep - cp);",
          "125:  return ep;",
          "126: trunc:",
          "",
          "[Removed Lines]",
          "123:  ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "123:  nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-ospf.c||print-ospf.c": [
          "File: print-ospf.c -> print-ospf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "503: trunc:",
          "504:     return -1;",
          "505: invalid:",
          "507:     return -1;",
          "508: }",
          "",
          "[Removed Lines]",
          "506:     ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "506:     nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-rpki-rtr.c||print-rpki-rtr.c": [
          "File: print-rpki-rtr.c -> print-rpki-rtr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "376:     return pdu_len;",
          "378: invalid:",
          "380:     ND_TCHECK_LEN(tptr, len);",
          "381:     return len;",
          "382: trunc:",
          "",
          "[Removed Lines]",
          "379:     ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "379:     nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-rsvp.c||print-rsvp.c": [
          "File: print-rsvp.c -> print-rsvp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1862:     }",
          "1863:     return 0;",
          "1864: invalid:",
          "1866:     return -1;",
          "1867: trunc:",
          "1868:     nd_print_trunc(ndo);",
          "",
          "[Removed Lines]",
          "1865:     ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "1865:     nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "print-udld.c||print-udld.c": [
          "File: print-udld.c -> print-udld.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "184:     return;",
          "186: invalid:",
          "188:     return;",
          "189: trunc:",
          "190:     nd_print_trunc(ndo);",
          "",
          "[Removed Lines]",
          "187:     ND_PRINT(\"%s\", istr);",
          "",
          "[Added Lines]",
          "187:     nd_print_invalid(ndo);",
          "",
          "---------------"
        ],
        "util-print.c||util-print.c": [
          "File: util-print.c -> util-print.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: #include \"ascii_strcasecmp.h\"",
          "58: #include \"timeval-operations.h\"",
          "63: #define TOKBUFSIZE 128",
          "66: enum date_flag { WITHOUT_DATE = 0, WITH_DATE = 1 };",
          "67: enum time_flag { UTC_TIME = 0, LOCAL_TIME = 1 };",
          "",
          "[Removed Lines]",
          "61: const char istr[] = \" (invalid)\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "444:  ND_PRINT(\" [|%s]\", ndo->ndo_protocol);",
          "445: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "444: void nd_print_invalid(netdissect_options *ndo)",
          "445: {",
          "446:  ND_PRINT(\" (invalid)\");",
          "447: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}