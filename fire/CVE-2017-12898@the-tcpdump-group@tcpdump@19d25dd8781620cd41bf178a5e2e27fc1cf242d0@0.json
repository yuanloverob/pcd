{
  "cve_id": "CVE-2017-12898",
  "cve_desc": "The NFS parser in tcpdump before 4.9.2 has a buffer over-read in print-nfs.c:interp_reply().",
  "repo": "the-tcpdump-group/tcpdump",
  "patch_hash": "19d25dd8781620cd41bf178a5e2e27fc1cf242d0",
  "patch_info": {
    "commit_hash": "19d25dd8781620cd41bf178a5e2e27fc1cf242d0",
    "repo": "the-tcpdump-group/tcpdump",
    "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/19d25dd8781620cd41bf178a5e2e27fc1cf242d0",
    "files": [
      "print-nfs.c",
      "tests/TESTLIST",
      "tests/nfs-attr-oobr.out",
      "tests/nfs-attr-oobr.pcap"
    ],
    "message": "CVE-2017-12898/NFS: Fix bounds checking.\n\nFix the bounds checking for the NFSv3 WRITE procedure to check whether the\nlength of the opaque data being written is present in the captured data,\nnot just whether the byte count is present in the captured data.\nfurthest forward in the packet, not the item before it.  (This also lets\nus eliminate the check for the \"stable\" argument being present in the\ncaptured data; rewrite the code to print that to make it a bit clearer.)\n\nCheck that the entire ar_stat field is present in the capture.\n\nNote that parse_wcc_attr() is called after we've already checked whether\nthe wcc_data is present.\n\nCheck before fetching the \"access\" part of the NFSv3 ACCESS results.\nThis fixes a buffer over-read discovered by Kamil Frankowicz.\n\nInclude a test for the \"check before fetching the \"access\" part...\" fix,\nusing the capture supplied by the reporter(s).",
    "before_after_code_files": [
      "print-nfs.c||print-nfs.c"
    ]
  },
  "patch_diff": {
    "print-nfs.c||print-nfs.c": [
      "File: print-nfs.c -> print-nfs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "628:   if ((dp = parsereq(ndo, rp, length)) != NULL &&",
      "629:       (dp = parsefh(ndo, dp, v3)) != NULL) {",
      "630:    if (v3) {",
      "632:     ND_PRINT((ndo, \" %u (%u) bytes @ %\" PRIu64,",
      "633:       EXTRACT_32BITS(&dp[4]),",
      "634:       EXTRACT_32BITS(&dp[2]),",
      "635:       EXTRACT_64BITS(&dp[0])));",
      "636:     if (ndo->ndo_vflag) {",
      "639:      ND_PRINT((ndo, \" <%s>\",",
      "640:       tok2str(nfsv3_writemodes,",
      "642:     }",
      "643:    } else {",
      "644:     ND_TCHECK(dp[3]);",
      "",
      "[Removed Lines]",
      "631:     ND_TCHECK(dp[2]);",
      "637:      dp += 3;",
      "638:      ND_TCHECK(dp[0]);",
      "641:        NULL, EXTRACT_32BITS(dp))));",
      "",
      "[Added Lines]",
      "631:     ND_TCHECK(dp[4]);",
      "639:        NULL, EXTRACT_32BITS(&dp[3]))));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1004:  dp += (len + (2*sizeof(uint32_t) + 3)) / sizeof(uint32_t);",
      "1010:  astat = (enum sunrpc_accept_stat) EXTRACT_32BITS(dp);",
      "1011:  if (astat != SUNRPC_SUCCESS) {",
      "1012:   ND_PRINT((ndo, \" %s\", tok2str(sunrpc_str, \"ar_stat %d\", astat)));",
      "",
      "[Removed Lines]",
      "1005:  ND_TCHECK2(dp[0], 0);",
      "",
      "[Added Lines]",
      "1007:  ND_TCHECK(dp[0]);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1511:    ND_PRINT((ndo, \" attr:\"));",
      "1512:   if (!(dp = parse_post_op_attr(ndo, dp, ndo->ndo_vflag)))",
      "1513:    break;",
      "1515:    ND_PRINT((ndo, \" c %04x\", EXTRACT_32BITS(&dp[0])));",
      "1516:   return;",
      "1518:  case NFSPROC_READLINK:",
      "",
      "[Removed Lines]",
      "1514:   if (!er)",
      "",
      "[Added Lines]",
      "1513:   if (!er) {",
      "1514:    ND_TCHECK(dp[0]);",
      "1516:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "93bee2402670249e78478ee3c7ce998a5e2343e6",
      "candidate_info": {
        "commit_hash": "93bee2402670249e78478ee3c7ce998a5e2343e6",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/93bee2402670249e78478ee3c7ce998a5e2343e6",
        "files": [
          "print-atm.c",
          "print-bgp.c",
          "print-carp.c",
          "print-cdp.c",
          "print-chdlc.c",
          "print-dhcp6.c",
          "print-icmp6.c",
          "print-igmp.c",
          "print-ip.c",
          "print-ip6opts.c",
          "print-ipx.c",
          "print-isakmp.c",
          "print-mobility.c",
          "print-nfs.c",
          "print-pim.c",
          "print-smb.c",
          "print-sunatm.c",
          "print-vrrp.c"
        ],
        "message": "Use pointer expressions like in most similar cases",
        "before_after_code_files": [
          "print-atm.c||print-atm.c",
          "print-bgp.c||print-bgp.c",
          "print-carp.c||print-carp.c",
          "print-cdp.c||print-cdp.c",
          "print-chdlc.c||print-chdlc.c",
          "print-dhcp6.c||print-dhcp6.c",
          "print-icmp6.c||print-icmp6.c",
          "print-igmp.c||print-igmp.c",
          "print-ip.c||print-ip.c",
          "print-ip6opts.c||print-ip6opts.c",
          "print-ipx.c||print-ipx.c",
          "print-isakmp.c||print-isakmp.c",
          "print-mobility.c||print-mobility.c",
          "print-nfs.c||print-nfs.c",
          "print-pim.c||print-pim.c",
          "print-smb.c||print-smb.c",
          "print-sunatm.c||print-sunatm.c",
          "print-vrrp.c||print-vrrp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-nfs.c||print-nfs.c"
          ],
          "candidate": [
            "print-nfs.c||print-nfs.c"
          ]
        }
      },
      "candidate_diff": {
        "print-atm.c||print-atm.c": [
          "File: print-atm.c -> print-atm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "370:   ND_PRINT((ndo, \"CALL_REF:0x%06x\", call_ref));",
          "371:  } else {",
          "",
          "[Removed Lines]",
          "369:   call_ref = EXTRACT_BE_24BITS(&p[CALL_REF_POS]);",
          "",
          "[Added Lines]",
          "369:   call_ref = EXTRACT_BE_24BITS(p + CALL_REF_POS);",
          "",
          "---------------"
        ],
        "print-bgp.c||print-bgp.c": [
          "File: print-bgp.c -> print-bgp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1435:        ND_PRINT((ndo, \"%s \",",
          "1436:     as_printf(ndo, astostr, sizeof(astostr),",
          "1437:     as_size == 2 ?",
          "1440:                         }",
          "1441:    ND_TCHECK(tptr[0]);",
          "1442:                         ND_PRINT((ndo, \"%s\", tok2str(bgp_as_path_segment_close_values,",
          "",
          "[Removed Lines]",
          "1438:     EXTRACT_BE_16BITS(&tptr[2 + i]) :",
          "1439:     EXTRACT_BE_32BITS(&tptr[2 + i]))));",
          "",
          "[Added Lines]",
          "1438:     EXTRACT_BE_16BITS(tptr + i + 2) :",
          "1439:     EXTRACT_BE_32BITS(tptr + i + 2))));",
          "",
          "---------------"
        ],
        "print-carp.c||print-carp.c": [
          "File: print-carp.c -> print-carp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:   vec[0].len = len;",
          "74:   if (ND_TTEST2(bp[0], len) && in_cksum(vec, 1))",
          "75:    ND_PRINT((ndo, \" (bad carp cksum %x!)\",",
          "77:  }",
          "80:  return;",
          "81: trunc:",
          "",
          "[Removed Lines]",
          "76:     EXTRACT_BE_16BITS(&bp[6])));",
          "78:  ND_PRINT((ndo, \"counter=%\" PRIu64, EXTRACT_BE_64BITS(&bp[8])));",
          "",
          "[Added Lines]",
          "76:     EXTRACT_BE_16BITS(bp + 6)));",
          "78:  ND_PRINT((ndo, \"counter=%\" PRIu64, EXTRACT_BE_64BITS(bp + 8)));",
          "",
          "---------------"
        ],
        "print-cdp.c||print-cdp.c": [
          "File: print-cdp.c -> print-cdp.c"
        ],
        "print-chdlc.c||print-chdlc.c": [
          "File: print-chdlc.c -> print-chdlc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:  if (length < CHDLC_HDRLEN)",
          "60:   goto trunc;",
          "61:  ND_TCHECK2(*p, CHDLC_HDRLEN);",
          "63:  if (ndo->ndo_eflag) {",
          "64:                 ND_PRINT((ndo, \"%s, ethertype %s (0x%04x), length %u: \",",
          "65:                        tok2str(chdlc_cast_values, \"0x%02x\", p[0]),",
          "",
          "[Removed Lines]",
          "62:  proto = EXTRACT_BE_16BITS(&p[2]);",
          "",
          "[Added Lines]",
          "62:  proto = EXTRACT_BE_16BITS(p + 2);",
          "",
          "---------------"
        ],
        "print-dhcp6.c||print-dhcp6.c": [
          "File: print-dhcp6.c -> print-dhcp6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "322:    case 1:",
          "323:     if (optlen >= 2 + 6) {",
          "324:      ND_PRINT((ndo, \" hwaddr/time type %u time %u \",",
          "327:      for (i = 8; i < optlen; i++)",
          "328:       ND_PRINT((ndo, \"%02x\", tp[i]));",
          "",
          "[Removed Lines]",
          "325:          EXTRACT_BE_16BITS(&tp[2]),",
          "326:          EXTRACT_BE_32BITS(&tp[4])));",
          "",
          "[Added Lines]",
          "325:          EXTRACT_BE_16BITS(tp + 2),",
          "326:          EXTRACT_BE_32BITS(tp + 4)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "348:    case 3:",
          "349:     if (optlen >= 2 + 2) {",
          "350:      ND_PRINT((ndo, \" hwaddr type %u \",",
          "352:      for (i = 4; i < optlen; i++)",
          "353:       ND_PRINT((ndo, \"%02x\", tp[i]));",
          "",
          "[Removed Lines]",
          "351:          EXTRACT_BE_16BITS(&tp[2])));",
          "",
          "[Added Lines]",
          "351:          EXTRACT_BE_16BITS(tp + 2)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "372:    tp = (const u_char *)(dh6o + 1);",
          "373:    ND_PRINT((ndo, \" %s\", ip6addr_string(ndo, &tp[0])));",
          "374:    ND_PRINT((ndo, \" pltime:%u vltime:%u\",",
          "377:    if (optlen > 24) {",
          "379:     dhcp6opt_print(ndo, tp + 24, tp + optlen);",
          "",
          "[Removed Lines]",
          "375:        EXTRACT_BE_32BITS(&tp[16]),",
          "376:        EXTRACT_BE_32BITS(&tp[20])));",
          "",
          "[Added Lines]",
          "375:        EXTRACT_BE_32BITS(tp + 16),",
          "376:        EXTRACT_BE_32BITS(tp + 20)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "389:    tp = (const u_char *)(dh6o + 1);",
          "390:    for (i = 0; i < optlen; i += 2) {",
          "391:     ND_PRINT((ndo, \" %s\",",
          "393:    }",
          "394:    ND_PRINT((ndo, \")\"));",
          "395:    break;",
          "",
          "[Removed Lines]",
          "392:         tok2str(dh6opt_str, \"opt_%u\", EXTRACT_BE_16BITS(&tp[i]))));",
          "",
          "[Added Lines]",
          "392:         tok2str(dh6opt_str, \"opt_%u\", EXTRACT_BE_16BITS(tp + i))));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "579:     break;",
          "580:    }",
          "581:    tp = (const u_char *)(dh6o + 1);",
          "583:    break;",
          "584:   case DH6OPT_IA_NA:",
          "585:   case DH6OPT_IA_PD:",
          "",
          "[Removed Lines]",
          "582:    ND_PRINT((ndo, \" %s)\", dhcp6stcode(EXTRACT_BE_16BITS(&tp[0]))));",
          "",
          "[Added Lines]",
          "582:    ND_PRINT((ndo, \" %s)\", dhcp6stcode(EXTRACT_BE_16BITS(tp))));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "589:    }",
          "590:    tp = (const u_char *)(dh6o + 1);",
          "591:    ND_PRINT((ndo, \" IAID:%u T1:%u T2:%u\",",
          "595:    if (optlen > 12) {",
          "597:     dhcp6opt_print(ndo, tp + 12, tp + optlen);",
          "",
          "[Removed Lines]",
          "592:        EXTRACT_BE_32BITS(&tp[0]),",
          "593:        EXTRACT_BE_32BITS(&tp[4]),",
          "594:        EXTRACT_BE_32BITS(&tp[8])));",
          "",
          "[Added Lines]",
          "592:        EXTRACT_BE_32BITS(tp),",
          "593:        EXTRACT_BE_32BITS(tp + 4),",
          "594:        EXTRACT_BE_32BITS(tp + 8)));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "619:    tp = (const u_char *)(dh6o + 1);",
          "620:    ND_PRINT((ndo, \" %s/%d\", ip6addr_string(ndo, &tp[9]), tp[8]));",
          "621:    ND_PRINT((ndo, \" pltime:%u vltime:%u\",",
          "624:    if (optlen > 25) {",
          "626:     dhcp6opt_print(ndo, tp + 25, tp + optlen);",
          "",
          "[Removed Lines]",
          "622:        EXTRACT_BE_32BITS(&tp[0]),",
          "623:        EXTRACT_BE_32BITS(&tp[4])));",
          "",
          "[Added Lines]",
          "622:        EXTRACT_BE_32BITS(tp),",
          "623:        EXTRACT_BE_32BITS(tp + 4)));",
          "",
          "---------------"
        ],
        "print-icmp6.c||print-icmp6.c": [
          "File: print-icmp6.c -> print-icmp6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1505:     }",
          "1507:     ND_TCHECK2(bp[26], 2);",
          "1509:     if (nsrcs > 0) {",
          "1510:  if (len < 28 + nsrcs * sizeof(struct in6_addr))",
          "1511:      ND_PRINT((ndo,\" [invalid number of sources]\"));",
          "",
          "[Removed Lines]",
          "1508:     nsrcs = EXTRACT_BE_16BITS(&bp[26]);",
          "",
          "[Added Lines]",
          "1508:     nsrcs = EXTRACT_BE_16BITS(bp + 26);",
          "",
          "---------------"
        ],
        "print-igmp.c||print-igmp.c": [
          "File: print-igmp.c -> print-igmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:  return;",
          "160:     }",
          "161:     ND_TCHECK2(bp[6], 2);",
          "163:     ND_PRINT((ndo, \", %d group record(s)\", ngroups));",
          "164:     if (ndo->ndo_vflag > 0) {",
          "",
          "[Removed Lines]",
          "162:     ngroups = EXTRACT_BE_16BITS(&bp[6]);",
          "",
          "[Added Lines]",
          "162:     ngroups = EXTRACT_BE_16BITS(bp + 6);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "173:             ND_PRINT((ndo, \" [gaddr %s\", ipaddr_string(ndo, &bp[group+4])));",
          "174:      ND_PRINT((ndo, \" %s\", tok2str(igmpv3report2str, \" [v3-report-#%d]\",",
          "175:         bp[group])));",
          "178:      if (len < group+8+(nsrcs<<2)) {",
          "179:   ND_PRINT((ndo, \" [invalid number of sources %d]\", nsrcs));",
          "",
          "[Removed Lines]",
          "176:             nsrcs = EXTRACT_BE_16BITS(&bp[group + 2]);",
          "",
          "[Added Lines]",
          "176:             nsrcs = EXTRACT_BE_16BITS(bp + group + 2);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "232:  ND_PRINT((ndo, \"]\"));",
          "233:     }",
          "234:     ND_TCHECK2(bp[4], 4);",
          "236:  return;",
          "237:     ND_PRINT((ndo, \" [gaddr %s\", ipaddr_string(ndo, &bp[4])));",
          "238:     ND_TCHECK2(bp[10], 2);",
          "240:     if (nsrcs > 0) {",
          "241:  if (len < 12 + (nsrcs << 2))",
          "242:      ND_PRINT((ndo, \" [invalid number of sources]\"));",
          "",
          "[Removed Lines]",
          "235:     if (EXTRACT_BE_32BITS(&bp[4]) == 0)",
          "239:     nsrcs = EXTRACT_BE_16BITS(&bp[10]);",
          "",
          "[Added Lines]",
          "235:     if (EXTRACT_BE_32BITS(bp + 4) == 0)",
          "239:     nsrcs = EXTRACT_BE_16BITS(bp + 10);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "282:      } else",
          "283:   ND_PRINT((ndo, \" v1\"));",
          "284:             ND_TCHECK2(bp[4], 4);",
          "286:                 ND_PRINT((ndo, \" [gaddr %s]\", ipaddr_string(ndo, &bp[4])));",
          "287:             if (len != 8)",
          "288:                 ND_PRINT((ndo, \" [len %d]\", len));",
          "",
          "[Removed Lines]",
          "285:      if (EXTRACT_BE_32BITS(&bp[4]))",
          "",
          "[Added Lines]",
          "285:      if (EXTRACT_BE_32BITS(bp + 4))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "333:         vec[0].ptr = bp;",
          "334:         vec[0].len = len;",
          "335:         if (in_cksum(vec, 1))",
          "337:     }",
          "338:     return;",
          "339: trunc:",
          "",
          "[Removed Lines]",
          "336:             ND_PRINT((ndo, \" bad igmp cksum %x!\", EXTRACT_BE_16BITS(&bp[2])));",
          "",
          "[Added Lines]",
          "336:             ND_PRINT((ndo, \" bad igmp cksum %x!\", EXTRACT_BE_16BITS(bp + 2)));",
          "",
          "---------------"
        ],
        "print-ip.c||print-ip.c": [
          "File: print-ip.c -> print-ip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "220:   if (ptr == len)",
          "221:    type = \" ^ \";",
          "222:   ND_TCHECK2(cp[len], hoplen);",
          "224:      hoplen!=8 ? \"\" : ipaddr_string(ndo, &cp[len])));",
          "225:   type = \" \";",
          "226:  }",
          "",
          "[Removed Lines]",
          "223:   ND_PRINT((ndo, \"%s%d@%s\", type, EXTRACT_BE_32BITS(&cp[len + hoplen - 4]),",
          "",
          "[Added Lines]",
          "223:   ND_PRINT((ndo, \"%s%d@%s\", type, EXTRACT_BE_32BITS(cp + len + hoplen - 4),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "302:     break;",
          "303:    }",
          "304:    ND_TCHECK(cp[3]);",
          "307:    break;",
          "",
          "[Removed Lines]",
          "305:    if (EXTRACT_BE_16BITS(&cp[2]) != 0)",
          "306:     ND_PRINT((ndo, \" value %u\", EXTRACT_BE_16BITS(&cp[2])));",
          "",
          "[Added Lines]",
          "305:    if (EXTRACT_BE_16BITS(cp + 2) != 0)",
          "306:     ND_PRINT((ndo, \" value %u\", EXTRACT_BE_16BITS(cp + 2)));",
          "",
          "---------------"
        ],
        "print-ip6opts.c||print-ip6opts.c": [
          "File: print-ip6opts.c -> print-ip6opts.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "125:   ND_PRINT((ndo, \"(rtalert: invalid len %d)\", bp[i + 1]));",
          "126:   goto trunc;",
          "127:      }",
          "129:      break;",
          "130:  case IP6OPT_JUMBO:",
          "131:      if (len - i < IP6OPT_JUMBO_LEN) {",
          "",
          "[Removed Lines]",
          "128:      ND_PRINT((ndo, \"(rtalert: 0x%04x) \", EXTRACT_BE_16BITS(&bp[i + 2])));",
          "",
          "[Added Lines]",
          "128:      ND_PRINT((ndo, \"(rtalert: 0x%04x) \", EXTRACT_BE_16BITS(bp + i + 2)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "136:   ND_PRINT((ndo, \"(jumbo: invalid len %d)\", bp[i + 1]));",
          "137:   goto trunc;",
          "138:      }",
          "140:      break;",
          "141:         case IP6OPT_HOME_ADDRESS:",
          "142:      if (len - i < IP6OPT_HOMEADDR_MINLEN) {",
          "",
          "[Removed Lines]",
          "139:      ND_PRINT((ndo, \"(jumbo: %u) \", EXTRACT_BE_32BITS(&bp[i + 2])));",
          "",
          "[Added Lines]",
          "139:      ND_PRINT((ndo, \"(jumbo: %u) \", EXTRACT_BE_32BITS(bp + i + 2)));",
          "",
          "---------------"
        ],
        "print-ipx.c||print-ipx.c": [
          "File: print-ipx.c -> print-ipx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:      ND_PRINT((ndo, \"ipx-sap-nearest-req\"));",
          "167:  ND_TCHECK(ipx[0]);",
          "169:  break;",
          "171:       case 2:",
          "",
          "[Removed Lines]",
          "168:  ND_PRINT((ndo, \" %s\", ipxsap_string(ndo, htons(EXTRACT_BE_16BITS(&ipx[0])))));",
          "",
          "[Added Lines]",
          "168:  ND_PRINT((ndo, \" %s\", ipxsap_string(ndo, htons(EXTRACT_BE_16BITS(ipx)))));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "178:  for (i = 0; i < 8 && length > 0; i++) {",
          "179:      ND_TCHECK(ipx[0]);",
          "181:      if (fn_printzp(ndo, (const u_char *)&ipx[1], 48, ndo->ndo_snapend)) {",
          "182:   ND_PRINT((ndo, \"'\"));",
          "183:   goto trunc;",
          "184:      }",
          "185:      ND_TCHECK2(ipx[25], 10);",
          "186:      ND_PRINT((ndo, \"' addr %s\",",
          "188:      ipx += 32;",
          "189:      length -= 64;",
          "190:  }",
          "",
          "[Removed Lines]",
          "180:      ND_PRINT((ndo, \" %s '\", ipxsap_string(ndo, htons(EXTRACT_BE_16BITS(&ipx[0])))));",
          "187:   ipxaddr_string(EXTRACT_BE_32BITS(&ipx[25]), (const u_char *)&ipx[27])));",
          "",
          "[Added Lines]",
          "180:      ND_PRINT((ndo, \" %s '\", ipxsap_string(ndo, htons(EXTRACT_BE_16BITS(ipx)))));",
          "187:   ipxaddr_string(EXTRACT_BE_32BITS(ipx + 25), (const u_char *)&ipx[27])));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "213:  ND_PRINT((ndo, \"ipx-rip-req\"));",
          "214:  if (length > 0) {",
          "215:      ND_TCHECK(ipx[3]);",
          "218:  }",
          "219:  break;",
          "220:       case 2:",
          "221:  ND_PRINT((ndo, \"ipx-rip-resp\"));",
          "222:  for (i = 0; i < 50 && length > 0; i++) {",
          "223:      ND_TCHECK(ipx[3]);",
          "227:      ipx += 4;",
          "228:      length -= 8;",
          "",
          "[Removed Lines]",
          "216:      ND_PRINT((ndo, \" %08x/%d.%d\", EXTRACT_BE_32BITS(&ipx[0]),",
          "217:     EXTRACT_BE_16BITS(&ipx[2]), EXTRACT_BE_16BITS(&ipx[3])));",
          "224:      ND_PRINT((ndo, \" %08x/%d.%d\", EXTRACT_BE_32BITS(&ipx[0]),",
          "225:     EXTRACT_BE_16BITS(&ipx[2]), EXTRACT_BE_16BITS(&ipx[3])));",
          "",
          "[Added Lines]",
          "216:      ND_PRINT((ndo, \" %08x/%d.%d\", EXTRACT_BE_32BITS(ipx),",
          "217:     EXTRACT_BE_16BITS(ipx + 2), EXTRACT_BE_16BITS(ipx + 3)));",
          "224:      ND_PRINT((ndo, \" %08x/%d.%d\", EXTRACT_BE_32BITS(ipx),",
          "225:     EXTRACT_BE_16BITS(ipx + 2), EXTRACT_BE_16BITS(ipx + 3)));",
          "",
          "---------------"
        ],
        "print-isakmp.c||print-isakmp.c": [
          "File: print-isakmp.c -> print-isakmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "923:   totlen = 4;",
          "924:  else {",
          "925:   ND_TCHECK_16BITS(&p[2]);",
          "927:  }",
          "928:  if (ep2 < p + totlen) {",
          "929:   ND_PRINT((ndo,\"[|attr]\"));",
          "",
          "[Removed Lines]",
          "926:   totlen = 4 + EXTRACT_BE_16BITS(&p[2]);",
          "",
          "[Added Lines]",
          "926:   totlen = 4 + EXTRACT_BE_16BITS(p + 2);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "933:  ND_TCHECK_16BITS(&p[0]);",
          "934:  ND_PRINT((ndo,\"(\"));",
          "936:  if (map && t < nmap && map[t].type)",
          "937:   ND_PRINT((ndo,\"type=%s \", map[t].type));",
          "938:  else",
          "",
          "[Removed Lines]",
          "935:  t = EXTRACT_BE_16BITS(&p[0]) & 0x7fff;",
          "",
          "[Added Lines]",
          "935:  t = EXTRACT_BE_16BITS(p) & 0x7fff;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "940:  if (p[0] & 0x80) {",
          "941:   ND_PRINT((ndo,\"value=\"));",
          "942:   ND_TCHECK_16BITS(&p[2]);",
          "944:   if (map && t < nmap && v < map[t].nvalue && map[t].value[v])",
          "945:    ND_PRINT((ndo,\"%s\", map[t].value[v]));",
          "946:   else {",
          "",
          "[Removed Lines]",
          "943:   v = EXTRACT_BE_16BITS(&p[2]);",
          "",
          "[Added Lines]",
          "943:   v = EXTRACT_BE_16BITS(p + 2);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "974:   totlen = 4;",
          "975:  else {",
          "976:   ND_TCHECK_16BITS(&p[2]);",
          "978:  }",
          "979:  if (ep2 < p + totlen) {",
          "980:   ND_PRINT((ndo,\"[|attr]\"));",
          "",
          "[Removed Lines]",
          "977:   totlen = 4 + EXTRACT_BE_16BITS(&p[2]);",
          "",
          "[Added Lines]",
          "977:   totlen = 4 + EXTRACT_BE_16BITS(p + 2);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "984:  ND_TCHECK_16BITS(&p[0]);",
          "985:  ND_PRINT((ndo,\"(\"));",
          "987:  ND_PRINT((ndo,\"type=#%d \", t));",
          "988:  if (p[0] & 0x80) {",
          "989:   ND_PRINT((ndo,\"value=\"));",
          "",
          "[Removed Lines]",
          "986:  t = EXTRACT_BE_16BITS(&p[0]) & 0x7fff;",
          "",
          "[Added Lines]",
          "986:  t = EXTRACT_BE_16BITS(p) & 0x7fff;",
          "",
          "---------------"
        ],
        "print-mobility.c||print-mobility.c": [
          "File: print-mobility.c -> print-mobility.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:    ND_TCHECK_16BITS(&bp[i+2]);",
          "154:    ND_PRINT((ndo, \"(refresh: %u)\",",
          "156:    break;",
          "157:   case IP6MOPT_ALTCOA:",
          "158:    if (len - i < IP6MOPT_ALTCOA_MINLEN) {",
          "",
          "[Removed Lines]",
          "155:     EXTRACT_BE_16BITS(&bp[i + 2]) << 2));",
          "",
          "[Added Lines]",
          "155:     EXTRACT_BE_16BITS(bp + i + 2) << 2));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "170:    ND_TCHECK_16BITS(&bp[i+2]);",
          "171:    ND_TCHECK_16BITS(&bp[i+4]);",
          "172:    ND_PRINT((ndo, \"(ni: ho=0x%04x co=0x%04x)\",",
          "175:    break;",
          "176:   case IP6MOPT_AUTH:",
          "177:    if (len - i < IP6MOPT_AUTH_MINLEN) {",
          "",
          "[Removed Lines]",
          "173:     EXTRACT_BE_16BITS(&bp[i + 2]),",
          "174:     EXTRACT_BE_16BITS(&bp[i + 4])));",
          "",
          "[Added Lines]",
          "173:     EXTRACT_BE_16BITS(bp + i + 2),",
          "174:     EXTRACT_BE_16BITS(bp + i + 4)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "250:    ND_TCHECK_32BITS(&bp[hlen + 4]);",
          "251:    ND_PRINT((ndo, \" %s Init Cookie=%08x:%08x\",",
          "252:           type == IP6M_HOME_TEST_INIT ? \"Home\" : \"Care-of\",",
          "255:   }",
          "256:   hlen += 8;",
          "257:   break;",
          "",
          "[Removed Lines]",
          "253:           EXTRACT_BE_32BITS(&bp[hlen]),",
          "254:           EXTRACT_BE_32BITS(&bp[hlen + 4])));",
          "",
          "[Added Lines]",
          "253:           EXTRACT_BE_32BITS(bp + hlen),",
          "254:           EXTRACT_BE_32BITS(bp + hlen + 4)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "264:    ND_TCHECK_32BITS(&bp[hlen + 4]);",
          "265:    ND_PRINT((ndo, \" %s Init Cookie=%08x:%08x\",",
          "266:           type == IP6M_HOME_TEST ? \"Home\" : \"Care-of\",",
          "269:   }",
          "270:   hlen += 8;",
          "271:   if (ndo->ndo_vflag) {",
          "272:    ND_TCHECK_32BITS(&bp[hlen + 4]);",
          "273:    ND_PRINT((ndo, \" %s Keygen Token=%08x:%08x\",",
          "274:           type == IP6M_HOME_TEST ? \"Home\" : \"Care-of\",",
          "277:   }",
          "278:   hlen += 8;",
          "279:   break;",
          "",
          "[Removed Lines]",
          "267:           EXTRACT_BE_32BITS(&bp[hlen]),",
          "268:           EXTRACT_BE_32BITS(&bp[hlen + 4])));",
          "275:           EXTRACT_BE_32BITS(&bp[hlen]),",
          "276:           EXTRACT_BE_32BITS(&bp[hlen + 4])));",
          "",
          "[Added Lines]",
          "267:           EXTRACT_BE_32BITS(bp + hlen),",
          "268:           EXTRACT_BE_32BITS(bp + hlen + 4)));",
          "275:           EXTRACT_BE_32BITS(bp + hlen),",
          "276:           EXTRACT_BE_32BITS(bp + hlen + 4)));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "299:   hlen += 1;",
          "300:   ND_TCHECK_16BITS(&bp[hlen]);",
          "303:   hlen += 2;",
          "304:   break;",
          "305:  case IP6M_BINDING_ACK:",
          "",
          "[Removed Lines]",
          "302:   ND_PRINT((ndo, \" lifetime=%u\", EXTRACT_BE_16BITS(&bp[hlen]) << 2));",
          "",
          "[Added Lines]",
          "302:   ND_PRINT((ndo, \" lifetime=%u\", EXTRACT_BE_16BITS(bp + hlen) << 2));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "312:   hlen = IP6M_MINLEN;",
          "313:   ND_TCHECK_16BITS(&bp[hlen]);",
          "315:   hlen += 2;",
          "316:   ND_TCHECK_16BITS(&bp[hlen]);",
          "319:   hlen += 2;",
          "320:   break;",
          "321:  case IP6M_BINDING_ERROR:",
          "",
          "[Removed Lines]",
          "314:   ND_PRINT((ndo, \" seq#=%u\", EXTRACT_BE_16BITS(&bp[hlen])));",
          "318:   ND_PRINT((ndo, \" lifetime=%u\", EXTRACT_BE_16BITS(&bp[hlen]) << 2));",
          "",
          "[Added Lines]",
          "314:   ND_PRINT((ndo, \" seq#=%u\", EXTRACT_BE_16BITS(bp + hlen)));",
          "318:   ND_PRINT((ndo, \" lifetime=%u\", EXTRACT_BE_16BITS(bp + hlen) << 2));",
          "",
          "---------------"
        ],
        "print-nfs.c||print-nfs.c": [
          "File: print-nfs.c -> print-nfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "427:  dp = (const uint32_t *)&rp->rm_call.cb_cred;",
          "428:  ND_TCHECK(dp[1]);",
          "430:  if (len < length) {",
          "431:   dp += (len + (2 * sizeof(*dp) + 3)) / sizeof(*dp);",
          "432:   ND_TCHECK(dp[1]);",
          "434:   if (len < length) {",
          "435:    dp += (len + (2 * sizeof(*dp) + 3)) / sizeof(*dp);",
          "436:    ND_TCHECK2(dp[0], 0);",
          "",
          "[Removed Lines]",
          "429:  len = EXTRACT_BE_32BITS(&dp[1]);",
          "433:   len = EXTRACT_BE_32BITS(&dp[1]);",
          "",
          "[Added Lines]",
          "429:  len = EXTRACT_BE_32BITS(dp + 1);",
          "433:   len = EXTRACT_BE_32BITS(dp + 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "571:   if ((dp = parsereq(ndo, rp, length)) != NULL &&",
          "572:       (dp = parsefh(ndo, dp, v3)) != NULL) {",
          "573:    ND_TCHECK(dp[0]);",
          "575:    if (access_flags & ~NFSV3ACCESS_FULL) {",
          "577:     ND_PRINT((ndo, \" %04x\", access_flags));",
          "",
          "[Removed Lines]",
          "574:    access_flags = EXTRACT_BE_32BITS(&dp[0]);",
          "",
          "[Added Lines]",
          "574:    access_flags = EXTRACT_BE_32BITS(dp);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "612:    if (v3) {",
          "613:     ND_TCHECK(dp[2]);",
          "614:     ND_PRINT((ndo, \" %u bytes @ %\" PRIu64,",
          "617:    } else {",
          "618:     ND_TCHECK(dp[1]);",
          "619:     ND_PRINT((ndo, \" %u bytes @ %u\",",
          "622:    }",
          "623:    return;",
          "624:   }",
          "",
          "[Removed Lines]",
          "615:            EXTRACT_BE_32BITS(&dp[2]),",
          "616:            EXTRACT_BE_64BITS(&dp[0])));",
          "620:         EXTRACT_BE_32BITS(&dp[1]),",
          "621:         EXTRACT_BE_32BITS(&dp[0])));",
          "",
          "[Added Lines]",
          "615:            EXTRACT_BE_32BITS(dp + 2),",
          "616:            EXTRACT_BE_64BITS(dp)));",
          "620:         EXTRACT_BE_32BITS(dp + 1),",
          "621:         EXTRACT_BE_32BITS(dp)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "630:    if (v3) {",
          "631:     ND_TCHECK(dp[4]);",
          "632:     ND_PRINT((ndo, \" %u (%u) bytes @ %\" PRIu64,",
          "636:     if (ndo->ndo_vflag) {",
          "637:      ND_PRINT((ndo, \" <%s>\",",
          "638:       tok2str(nfsv3_writemodes,",
          "640:     }",
          "641:    } else {",
          "642:     ND_TCHECK(dp[3]);",
          "643:     ND_PRINT((ndo, \" %u (%u) bytes @ %u (%u)\",",
          "648:    }",
          "649:    return;",
          "650:   }",
          "",
          "[Removed Lines]",
          "633:       EXTRACT_BE_32BITS(&dp[4]),",
          "634:       EXTRACT_BE_32BITS(&dp[2]),",
          "635:       EXTRACT_BE_64BITS(&dp[0])));",
          "639:        NULL, EXTRACT_BE_32BITS(&dp[3]))));",
          "644:       EXTRACT_BE_32BITS(&dp[3]),",
          "645:       EXTRACT_BE_32BITS(&dp[2]),",
          "646:       EXTRACT_BE_32BITS(&dp[1]),",
          "647:       EXTRACT_BE_32BITS(&dp[0])));",
          "",
          "[Added Lines]",
          "633:       EXTRACT_BE_32BITS(dp + 4),",
          "634:       EXTRACT_BE_32BITS(dp + 2),",
          "635:       EXTRACT_BE_64BITS(dp)));",
          "639:        NULL, EXTRACT_BE_32BITS(dp + 3))));",
          "644:       EXTRACT_BE_32BITS(dp + 3),",
          "645:       EXTRACT_BE_32BITS(dp + 2),",
          "646:       EXTRACT_BE_32BITS(dp + 1),",
          "647:       EXTRACT_BE_32BITS(dp)));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "676:    if (ndo->ndo_vflag && (type == NFCHR || type == NFBLK)) {",
          "677:     ND_TCHECK(dp[1]);",
          "678:     ND_PRINT((ndo, \" %u/%u\",",
          "681:     dp += 2;",
          "682:    }",
          "683:    if (ndo->ndo_vflag)",
          "",
          "[Removed Lines]",
          "679:            EXTRACT_BE_32BITS(&dp[0]),",
          "680:            EXTRACT_BE_32BITS(&dp[1])));",
          "",
          "[Added Lines]",
          "679:            EXTRACT_BE_32BITS(dp),",
          "680:            EXTRACT_BE_32BITS(dp + 1)));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "716:     ND_PRINT((ndo, \" %u bytes @ %\" PRId64,",
          "719:     if (ndo->ndo_vflag)",
          "720:      ND_PRINT((ndo, \" verf %08x%08x\", dp[2], dp[3]));",
          "721:    } else {",
          "",
          "[Removed Lines]",
          "717:         EXTRACT_BE_32BITS(&dp[4]),",
          "718:         EXTRACT_BE_64BITS(&dp[0])));",
          "",
          "[Added Lines]",
          "717:         EXTRACT_BE_32BITS(dp + 4),",
          "718:         EXTRACT_BE_64BITS(dp)));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "727:     ND_PRINT((ndo, \" %u bytes @ %d\",",
          "730:    }",
          "731:    return;",
          "732:   }",
          "",
          "[Removed Lines]",
          "728:         EXTRACT_BE_32BITS(&dp[1]),",
          "729:         EXTRACT_BE_32BITS(&dp[0])));",
          "",
          "[Added Lines]",
          "728:         EXTRACT_BE_32BITS(dp + 1),",
          "729:         EXTRACT_BE_32BITS(dp)));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "743:    ND_PRINT((ndo, \" %u bytes @ %\" PRId64,",
          "746:    if (ndo->ndo_vflag) {",
          "747:     ND_TCHECK(dp[5]);",
          "748:     ND_PRINT((ndo, \" max %u verf %08x%08x\",",
          "750:    }",
          "751:    return;",
          "752:   }",
          "",
          "[Removed Lines]",
          "744:     EXTRACT_BE_32BITS(&dp[4]),",
          "745:     EXTRACT_BE_64BITS(&dp[0])));",
          "749:            EXTRACT_BE_32BITS(&dp[5]), dp[2], dp[3]));",
          "",
          "[Added Lines]",
          "744:     EXTRACT_BE_32BITS(dp + 4),",
          "745:     EXTRACT_BE_64BITS(dp)));",
          "749:            EXTRACT_BE_32BITS(dp + 5), dp[2], dp[3]));",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "757:       (dp = parsefh(ndo, dp, v3)) != NULL) {",
          "758:    ND_TCHECK(dp[2]);",
          "759:    ND_PRINT((ndo, \" %u bytes @ %\" PRIu64,",
          "762:    return;",
          "763:   }",
          "764:   break;",
          "",
          "[Removed Lines]",
          "760:     EXTRACT_BE_32BITS(&dp[2]),",
          "761:     EXTRACT_BE_64BITS(&dp[0])));",
          "",
          "[Added Lines]",
          "760:     EXTRACT_BE_32BITS(dp + 2),",
          "761:     EXTRACT_BE_64BITS(dp)));",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "998:  dp = ((const uint32_t *)&rp->rm_reply) + 1;",
          "999:  ND_TCHECK(dp[1]);",
          "1001:  if (len >= length)",
          "1002:   return (NULL);",
          "",
          "[Removed Lines]",
          "1000:  len = EXTRACT_BE_32BITS(&dp[1]);",
          "",
          "[Added Lines]",
          "1000:  len = EXTRACT_BE_32BITS(dp + 1);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1031:  ND_TCHECK(dp[0]);",
          "1034:  if (er)",
          "1036:  if (errnum != 0) {",
          "",
          "[Removed Lines]",
          "1033:  errnum = EXTRACT_BE_32BITS(&dp[0]);",
          "",
          "[Added Lines]",
          "1033:  errnum = EXTRACT_BE_32BITS(dp);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1233:  ND_TCHECK(dp[2]);",
          "1234:  ND_PRINT((ndo, \" offset 0x%x size %d \",",
          "1236:  if (dp[2] != 0)",
          "1237:   ND_PRINT((ndo, \" eof\"));",
          "",
          "[Removed Lines]",
          "1235:         EXTRACT_BE_32BITS(&dp[0]), EXTRACT_BE_32BITS(&dp[1])));",
          "",
          "[Added Lines]",
          "1235:         EXTRACT_BE_32BITS(dp), EXTRACT_BE_32BITS(dp + 1)));",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1246:                const uint32_t *dp)",
          "1247: {",
          "1250:  ND_PRINT((ndo, \" mtime %u.%06u ctime %u.%06u\",",
          "1253:  return (dp + 6);",
          "1254: }",
          "",
          "[Removed Lines]",
          "1249:  ND_PRINT((ndo, \" sz %\" PRIu64, EXTRACT_BE_64BITS(&dp[0])));",
          "1251:         EXTRACT_BE_32BITS(&dp[2]), EXTRACT_BE_32BITS(&dp[3]),",
          "1252:         EXTRACT_BE_32BITS(&dp[4]), EXTRACT_BE_32BITS(&dp[5])));",
          "",
          "[Added Lines]",
          "1249:  ND_PRINT((ndo, \" sz %\" PRIu64, EXTRACT_BE_64BITS(dp)));",
          "1251:         EXTRACT_BE_32BITS(dp + 2), EXTRACT_BE_32BITS(dp + 3),",
          "1252:         EXTRACT_BE_32BITS(dp + 4), EXTRACT_BE_32BITS(dp + 5)));",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1261:                   const uint32_t *dp, int verbose)",
          "1262: {",
          "1263:  ND_TCHECK(dp[0]);",
          "1265:   return (dp + 1);",
          "1266:  dp++;",
          "1267:  ND_TCHECK2(*dp, 24);",
          "",
          "[Removed Lines]",
          "1264:  if (!EXTRACT_BE_32BITS(&dp[0]))",
          "",
          "[Added Lines]",
          "1264:  if (!EXTRACT_BE_32BITS(dp))",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1283:                    const uint32_t *dp, int verbose)",
          "1284: {",
          "1285:  ND_TCHECK(dp[0]);",
          "1287:   return (dp + 1);",
          "1288:  dp++;",
          "1289:  if (verbose) {",
          "",
          "[Removed Lines]",
          "1286:  if (!EXTRACT_BE_32BITS(&dp[0]))",
          "",
          "[Added Lines]",
          "1286:  if (!EXTRACT_BE_32BITS(dp))",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1320:   dp = parse_wcc_data(ndo, dp, verbose);",
          "1321:  else {",
          "1322:   ND_TCHECK(dp[0]);",
          "1324:    return (dp + 1);",
          "1325:   dp++;",
          "1326:   if (!(dp = parsefh(ndo, dp, 1)))",
          "",
          "[Removed Lines]",
          "1323:   if (!EXTRACT_BE_32BITS(&dp[0]))",
          "",
          "[Added Lines]",
          "1323:   if (!EXTRACT_BE_32BITS(dp))",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1516:    break;",
          "1517:   if (!er) {",
          "1518:    ND_TCHECK(dp[0]);",
          "1520:   }",
          "1521:   return;",
          "",
          "[Removed Lines]",
          "1519:    ND_PRINT((ndo, \" c %04x\", EXTRACT_BE_32BITS(&dp[0])));",
          "",
          "[Added Lines]",
          "1519:    ND_PRINT((ndo, \" c %04x\", EXTRACT_BE_32BITS(dp)));",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1538:     return;",
          "1539:    if (ndo->ndo_vflag) {",
          "1540:     ND_TCHECK(dp[1]);",
          "1543:      ND_PRINT((ndo, \" EOF\"));",
          "1544:    }",
          "1545:    return;",
          "",
          "[Removed Lines]",
          "1541:     ND_PRINT((ndo, \" %u bytes\", EXTRACT_BE_32BITS(&dp[0])));",
          "1542:     if (EXTRACT_BE_32BITS(&dp[1]))",
          "",
          "[Added Lines]",
          "1541:     ND_PRINT((ndo, \" %u bytes\", EXTRACT_BE_32BITS(dp)));",
          "1542:     if (EXTRACT_BE_32BITS(dp + 1))",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1561:     return;",
          "1562:    if (ndo->ndo_vflag) {",
          "1563:     ND_TCHECK(dp[0]);",
          "1565:     if (ndo->ndo_vflag > 1) {",
          "1566:      ND_TCHECK(dp[1]);",
          "1567:      ND_PRINT((ndo, \" <%s>\",",
          "1568:       tok2str(nfsv3_writemodes,",
          "1570:     }",
          "1571:     return;",
          "1572:    }",
          "",
          "[Removed Lines]",
          "1564:     ND_PRINT((ndo, \" %u bytes\", EXTRACT_BE_32BITS(&dp[0])));",
          "1569:        NULL, EXTRACT_BE_32BITS(&dp[1]))));",
          "",
          "[Added Lines]",
          "1564:     ND_PRINT((ndo, \" %u bytes\", EXTRACT_BE_32BITS(dp)));",
          "1569:        NULL, EXTRACT_BE_32BITS(dp + 1))));",
          "",
          "---------------"
        ],
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:  if (ND_TTEST2(bp[0], 30) && bp[11] == 1 &&",
          "152:   int hold;",
          "154:   ND_PRINT((ndo, \" RPF %s \", ipaddr_string(ndo, bp)));",
          "156:   if (hold != 180) {",
          "157:    ND_PRINT((ndo, \"Hold \"));",
          "158:    unsigned_relts_print(ndo, hold);",
          "",
          "[Removed Lines]",
          "151:      ((njoin = EXTRACT_BE_16BITS(&bp[20])) + EXTRACT_BE_16BITS(&bp[22])) == 1) {",
          "155:   hold = EXTRACT_BE_16BITS(&bp[6]);",
          "",
          "[Added Lines]",
          "151:      ((njoin = EXTRACT_BE_16BITS(bp + 20)) + EXTRACT_BE_16BITS(bp + 22)) == 1) {",
          "155:   hold = EXTRACT_BE_16BITS(bp + 6);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:   ND_PRINT((ndo, \"%s (%s/%d, %s\", njoin ? \"Join\" : \"Prune\",",
          "161:   ipaddr_string(ndo, &bp[26]), bp[25] & 0x3f,",
          "162:   ipaddr_string(ndo, &bp[12])));",
          "164:    ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, &bp[16])));",
          "165:   ND_PRINT((ndo, \") %s%s %s\",",
          "166:       (bp[24] & 0x01) ? \"Sparse\" : \"Dense\",",
          "",
          "[Removed Lines]",
          "163:   if (EXTRACT_BE_32BITS(&bp[16]) != 0xffffffff)",
          "",
          "[Added Lines]",
          "163:   if (EXTRACT_BE_32BITS(bp + 16) != 0xffffffff)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "183:  if (ndo->ndo_vflag > 1)",
          "184:   ND_PRINT((ndo, \"\\n\"));",
          "185:  ND_PRINT((ndo, \" Hold time: \"));",
          "187:  if (ndo->ndo_vflag < 2)",
          "188:   return;",
          "189:  bp += 4;",
          "",
          "[Removed Lines]",
          "186:  unsigned_relts_print(ndo, EXTRACT_BE_16BITS(&bp[2]));",
          "",
          "[Added Lines]",
          "186:  unsigned_relts_print(ndo, EXTRACT_BE_16BITS(bp + 2));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "209:   if (len < 4)",
          "210:    goto trunc;",
          "211:   ND_TCHECK2(bp[0], sizeof(struct in_addr));",
          "213:    ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, &bp[0])));",
          "214:   bp += 4;",
          "215:   len -= 4;",
          "216:   if (len < 4)",
          "217:    goto trunc;",
          "218:   ND_TCHECK2(bp[0], 4);",
          "221:   ND_PRINT((ndo, \" joined: %d pruned: %d\", njoin, nprune));",
          "222:   bp += 4;",
          "223:   len -= 4;",
          "",
          "[Removed Lines]",
          "212:   if (EXTRACT_BE_32BITS(&bp[0]) != 0xffffffff)",
          "219:   njoin = EXTRACT_BE_16BITS(&bp[0]);",
          "220:   nprune = EXTRACT_BE_16BITS(&bp[2]);",
          "",
          "[Added Lines]",
          "212:   if (EXTRACT_BE_32BITS(bp) != 0xffffffff)",
          "219:   njoin = EXTRACT_BE_16BITS(bp);",
          "220:   nprune = EXTRACT_BE_16BITS(bp + 2);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "278:   if (ndo->ndo_vflag) {",
          "279:    ND_TCHECK2(bp[10],2);",
          "280:    ND_PRINT((ndo, \" (Hold-time \"));",
          "282:    ND_PRINT((ndo, \")\"));",
          "283:   }",
          "284:   break;",
          "",
          "[Removed Lines]",
          "281:    unsigned_relts_print(ndo, EXTRACT_BE_16BITS(&bp[10]));",
          "",
          "[Added Lines]",
          "281:    unsigned_relts_print(ndo, EXTRACT_BE_16BITS(bp + 10));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "297:   if (ndo->ndo_vflag) {",
          "298:    ND_TCHECK2(bp[22], 2);",
          "299:    ND_PRINT((ndo, \" group %s\", ipaddr_string(ndo, &bp[8])));",
          "301:     ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, &bp[12])));",
          "302:    ND_PRINT((ndo, \" RP %s hold \", ipaddr_string(ndo, &bp[16])));",
          "304:   }",
          "305:   break;",
          "306:  case PIMV1_TYPE_ASSERT:",
          "307:   ND_TCHECK2(bp[16], sizeof(struct in_addr));",
          "308:   ND_PRINT((ndo, \" for %s > %s\", ipaddr_string(ndo, &bp[16]),",
          "309:       ipaddr_string(ndo, &bp[8])));",
          "311:    ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, &bp[12])));",
          "312:   ND_TCHECK2(bp[24], 4);",
          "313:   ND_PRINT((ndo, \" %s pref %d metric %d\",",
          "314:       (bp[20] & 0x80) ? \"RP-tree\" : \"SPT\",",
          "317:   break;",
          "318:  case PIMV1_TYPE_JOIN_PRUNE:",
          "319:  case PIMV1_TYPE_GRAFT:",
          "",
          "[Removed Lines]",
          "300:    if (EXTRACT_BE_32BITS(&bp[12]) != 0xffffffff)",
          "303:    unsigned_relts_print(ndo, EXTRACT_BE_16BITS(&bp[22]));",
          "310:   if (EXTRACT_BE_32BITS(&bp[12]) != 0xffffffff)",
          "315:   EXTRACT_BE_32BITS(&bp[20]) & 0x7fffffff,",
          "316:   EXTRACT_BE_32BITS(&bp[24])));",
          "",
          "[Added Lines]",
          "300:    if (EXTRACT_BE_32BITS(bp + 12) != 0xffffffff)",
          "303:    unsigned_relts_print(ndo, EXTRACT_BE_16BITS(bp + 22));",
          "310:   if (EXTRACT_BE_32BITS(bp + 12) != 0xffffffff)",
          "315:   EXTRACT_BE_32BITS(bp + 20) & 0x7fffffff,",
          "316:   EXTRACT_BE_32BITS(bp + 24)));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "372:  ND_TCHECK2(bp[2], 2);",
          "373:  ND_PRINT((ndo, \" Hold \"));",
          "375:  if (hold)",
          "377:  else",
          "378:   ND_PRINT((ndo, \"FOREVER\"));",
          "",
          "[Removed Lines]",
          "374:  hold = EXTRACT_BE_16BITS(&bp[2]);",
          "376:   unsigned_relts_print(ndo, EXTRACT_BE_16BITS(&bp[2]));",
          "",
          "[Added Lines]",
          "374:  hold = EXTRACT_BE_16BITS(bp + 2);",
          "376:   unsigned_relts_print(ndo, EXTRACT_BE_16BITS(bp + 2));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "760:    if (len < 4)",
          "761:     goto trunc;",
          "762:    ND_TCHECK2(bp[0], 4);",
          "765:    ND_PRINT((ndo, \"\\n\\t  %s Option (%u), length %u, Value: \",",
          "766:              tok2str(pimv2_hello_option_values, \"Unknown\", otype),",
          "767:              otype,",
          "",
          "[Removed Lines]",
          "763:    otype = EXTRACT_BE_16BITS(&bp[0]);",
          "764:    olen = EXTRACT_BE_16BITS(&bp[2]);",
          "",
          "[Added Lines]",
          "763:    otype = EXTRACT_BE_16BITS(bp);",
          "764:    olen = EXTRACT_BE_16BITS(bp + 2);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "977:    goto trunc;",
          "978:   ND_TCHECK2(*bp, 4);",
          "979:   ngroup = bp[1];",
          "981:   ND_PRINT((ndo, \"\\n\\t  %u group(s)\", ngroup));",
          "983:    ND_PRINT((ndo, \", holdtime: \"));",
          "",
          "[Removed Lines]",
          "980:   holdtime = EXTRACT_BE_16BITS(&bp[2]);",
          "",
          "[Added Lines]",
          "980:   holdtime = EXTRACT_BE_16BITS(bp + 2);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "995:    if (len < 4)",
          "996:     goto trunc;",
          "997:    ND_TCHECK2(*bp, 4);",
          "1000:    ND_PRINT((ndo, \", joined sources: %u, pruned sources: %u\", njoin, nprune));",
          "1001:    bp += 4; len -= 4;",
          "1002:    for (j = 0; j < njoin; j++) {",
          "",
          "[Removed Lines]",
          "998:    njoin = EXTRACT_BE_16BITS(&bp[0]);",
          "999:    nprune = EXTRACT_BE_16BITS(&bp[2]);",
          "",
          "[Added Lines]",
          "998:    njoin = EXTRACT_BE_16BITS(bp);",
          "999:    nprune = EXTRACT_BE_16BITS(bp + 2);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1110:   ND_TCHECK2(*bp, 8);",
          "1111:   if (bp[0] & 0x80)",
          "1112:    ND_PRINT((ndo, \" RPT\"));",
          "1115:   break;",
          "1117:  case PIMV2_TYPE_CANDIDATE_RP:",
          "",
          "[Removed Lines]",
          "1113:   ND_PRINT((ndo, \" pref=%u\", EXTRACT_BE_32BITS(&bp[0]) & 0x7fffffff));",
          "1114:   ND_PRINT((ndo, \" metric=%u\", EXTRACT_BE_32BITS(&bp[4])));",
          "",
          "[Added Lines]",
          "1113:   ND_PRINT((ndo, \" pref=%u\", EXTRACT_BE_32BITS(bp) & 0x7fffffff));",
          "1114:   ND_PRINT((ndo, \" metric=%u\", EXTRACT_BE_32BITS(bp + 4)));",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1132:    goto trunc;",
          "1133:   ND_TCHECK_16BITS(&bp[2]);",
          "1134:   ND_PRINT((ndo, \" holdtime=\"));",
          "1136:   bp += 4;",
          "1137:   len -= 4;",
          "",
          "[Removed Lines]",
          "1135:   unsigned_relts_print(ndo, EXTRACT_BE_16BITS(&bp[2]));",
          "",
          "[Added Lines]",
          "1135:   unsigned_relts_print(ndo, EXTRACT_BE_16BITS(bp + 2));",
          "",
          "---------------"
        ],
        "print-smb.c||print-smb.c": [
          "File: print-smb.c -> print-smb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "821:  return;",
          "823:     ND_TCHECK_16BITS(&buf[10]);",
          "825:     unicodestr = flags2 & 0x8000;",
          "826:     nterrcodes = flags2 & 0x4000;",
          "",
          "[Removed Lines]",
          "824:     flags2 = EXTRACT_LE_16BITS(&buf[10]);",
          "",
          "[Added Lines]",
          "824:     flags2 = EXTRACT_LE_16BITS(buf + 10);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "829:     smb_fdata(ndo, buf, fmt_smbheader, buf + 33, unicodestr);",
          "831:     if (nterrcodes) {",
          "833:  if (nterror)",
          "834:      ND_PRINT((ndo, \"NTError = %s\\n\", nt_errstr(nterror)));",
          "835:     } else {",
          "836:  if (buf[5])",
          "838:     }",
          "840:     smboffset = 32;",
          "",
          "[Removed Lines]",
          "832:      nterror = EXTRACT_LE_32BITS(&buf[5]);",
          "837:      ND_PRINT((ndo, \"SMBError = %s\\n\", smb_errstr(buf[5], EXTRACT_LE_16BITS(&buf[7]))));",
          "",
          "[Added Lines]",
          "832:      nterror = EXTRACT_LE_32BITS(buf + 5);",
          "837:      ND_PRINT((ndo, \"SMBError = %s\\n\", smb_errstr(buf[5], EXTRACT_LE_16BITS(buf + 7))));",
          "",
          "---------------"
        ],
        "print-sunatm.c||print-sunatm.c": [
          "File: print-sunatm.c -> print-sunatm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:   break;",
          "97:  }",
          "100:  vpi = p[VPI_POS];",
          "102:  p += PKT_BEGIN_POS;",
          "",
          "[Removed Lines]",
          "99:  vci = EXTRACT_BE_16BITS(&p[VCI_POS]);",
          "",
          "[Added Lines]",
          "99:  vci = EXTRACT_BE_16BITS(p + VCI_POS);",
          "",
          "---------------"
        ],
        "print-vrrp.c||print-vrrp.c": [
          "File: print-vrrp.c -> print-vrrp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:    vec[0].len = len;",
          "145:    if (in_cksum(vec, 1))",
          "146:     ND_PRINT((ndo, \", (bad vrrp cksum %x)\",",
          "148:   }",
          "150:   if (version == 3 && ND_TTEST2(bp[0], len)) {",
          "",
          "[Removed Lines]",
          "147:      EXTRACT_BE_16BITS(&bp[6])));",
          "",
          "[Added Lines]",
          "147:      EXTRACT_BE_16BITS(bp + 6)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "152:     len, len, IPPROTO_VRRP);",
          "153:    if (cksum)",
          "154:     ND_PRINT((ndo, \", (bad vrrp cksum %x)\",",
          "156:   }",
          "158:   ND_PRINT((ndo, \", addrs\"));",
          "",
          "[Removed Lines]",
          "155:      EXTRACT_BE_16BITS(&bp[6])));",
          "",
          "[Added Lines]",
          "155:      EXTRACT_BE_16BITS(bp + 6)));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8b89eb8f6ba7d3abdfc602b1f779030920ffb70a",
      "candidate_info": {
        "commit_hash": "8b89eb8f6ba7d3abdfc602b1f779030920ffb70a",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/8b89eb8f6ba7d3abdfc602b1f779030920ffb70a",
        "files": [
          "print-nfs.c"
        ],
        "message": "NFS: Use more the ND_TCHECK_4() macro",
        "before_after_code_files": [
          "print-nfs.c||print-nfs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-nfs.c||print-nfs.c"
          ],
          "candidate": [
            "print-nfs.c||print-nfs.c"
          ]
        }
      },
      "candidate_diff": {
        "print-nfs.c||print-nfs.c": [
          "File: print-nfs.c -> print-nfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "233: parse_sattr3(netdissect_options *ndo,",
          "234:              const uint32_t *dp, struct nfsv3_sattr *sa3)",
          "235: {",
          "237:  sa3->sa_modeset = EXTRACT_BE_U_4(dp);",
          "238:  dp++;",
          "239:  if (sa3->sa_modeset) {",
          "241:   sa3->sa_mode = EXTRACT_BE_U_4(dp);",
          "242:   dp++;",
          "243:  }",
          "246:  sa3->sa_uidset = EXTRACT_BE_U_4(dp);",
          "247:  dp++;",
          "248:  if (sa3->sa_uidset) {",
          "250:   sa3->sa_uid = EXTRACT_BE_U_4(dp);",
          "251:   dp++;",
          "252:  }",
          "255:  sa3->sa_gidset = EXTRACT_BE_U_4(dp);",
          "256:  dp++;",
          "257:  if (sa3->sa_gidset) {",
          "259:   sa3->sa_gid = EXTRACT_BE_U_4(dp);",
          "260:   dp++;",
          "261:  }",
          "264:  sa3->sa_sizeset = EXTRACT_BE_U_4(dp);",
          "265:  dp++;",
          "266:  if (sa3->sa_sizeset) {",
          "268:   sa3->sa_size = EXTRACT_BE_U_4(dp);",
          "269:   dp++;",
          "270:  }",
          "273:  sa3->sa_atimetype = EXTRACT_BE_U_4(dp);",
          "274:  dp++;",
          "275:  if (sa3->sa_atimetype == NFSV3SATTRTIME_TOCLIENT) {",
          "277:   sa3->sa_atime.nfsv3_sec = EXTRACT_BE_U_4(dp);",
          "278:   dp++;",
          "279:   sa3->sa_atime.nfsv3_nsec = EXTRACT_BE_U_4(dp);",
          "280:   dp++;",
          "281:  }",
          "284:  sa3->sa_mtimetype = EXTRACT_BE_U_4(dp);",
          "285:  dp++;",
          "286:  if (sa3->sa_mtimetype == NFSV3SATTRTIME_TOCLIENT) {",
          "288:   sa3->sa_mtime.nfsv3_sec = EXTRACT_BE_U_4(dp);",
          "289:   dp++;",
          "290:   sa3->sa_mtime.nfsv3_nsec = EXTRACT_BE_U_4(dp);",
          "",
          "[Removed Lines]",
          "236:  ND_TCHECK(dp[0]);",
          "240:   ND_TCHECK(dp[0]);",
          "245:  ND_TCHECK(dp[0]);",
          "249:   ND_TCHECK(dp[0]);",
          "254:  ND_TCHECK(dp[0]);",
          "258:   ND_TCHECK(dp[0]);",
          "263:  ND_TCHECK(dp[0]);",
          "267:   ND_TCHECK(dp[0]);",
          "272:  ND_TCHECK(dp[0]);",
          "276:   ND_TCHECK(dp[1]);",
          "283:  ND_TCHECK(dp[0]);",
          "287:   ND_TCHECK(dp[1]);",
          "",
          "[Added Lines]",
          "236:  ND_TCHECK_4(dp);",
          "240:   ND_TCHECK_4(dp);",
          "245:  ND_TCHECK_4(dp);",
          "249:   ND_TCHECK_4(dp);",
          "254:  ND_TCHECK_4(dp);",
          "258:   ND_TCHECK_4(dp);",
          "263:  ND_TCHECK_4(dp);",
          "267:   ND_TCHECK_4(dp);",
          "272:  ND_TCHECK_4(dp);",
          "276:   ND_TCHECK_4(dp + 1);",
          "283:  ND_TCHECK_4(dp);",
          "287:   ND_TCHECK_4(dp + 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "427:  dp = (const uint32_t *)&rp->rm_call.cb_cred;",
          "429:  len = EXTRACT_BE_U_4(dp + 1);",
          "430:  if (len < length) {",
          "431:   dp += (len + (2 * sizeof(*dp) + 3)) / sizeof(*dp);",
          "433:   len = EXTRACT_BE_U_4(dp + 1);",
          "434:   if (len < length) {",
          "435:    dp += (len + (2 * sizeof(*dp) + 3)) / sizeof(*dp);",
          "",
          "[Removed Lines]",
          "428:  ND_TCHECK(dp[1]);",
          "432:   ND_TCHECK(dp[1]);",
          "",
          "[Added Lines]",
          "428:  ND_TCHECK_4(dp + 1);",
          "432:   ND_TCHECK_4(dp + 1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "452:  u_int len;",
          "454:  if (v3) {",
          "456:   len = EXTRACT_BE_U_4(dp) / 4;",
          "457:   dp++;",
          "458:  } else",
          "",
          "[Removed Lines]",
          "455:   ND_TCHECK(dp[0]);",
          "",
          "[Added Lines]",
          "455:   ND_TCHECK_4(dp);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "478:  const u_char *cp;",
          "484:  len = EXTRACT_BE_U_4(dp);",
          "",
          "[Removed Lines]",
          "481:  ND_TCHECK(*dp);",
          "",
          "[Added Lines]",
          "481:  ND_TCHECK_4(dp);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "570:  case NFSPROC_ACCESS:",
          "571:   if ((dp = parsereq(ndo, rp, length)) != NULL &&",
          "572:       (dp = parsefh(ndo, dp, v3)) != NULL) {",
          "574:    access_flags = EXTRACT_BE_U_4(dp);",
          "575:    if (access_flags & ~NFSV3ACCESS_FULL) {",
          "",
          "[Removed Lines]",
          "573:    ND_TCHECK(dp[0]);",
          "",
          "[Added Lines]",
          "573:    ND_TCHECK_4(dp);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "610:   if ((dp = parsereq(ndo, rp, length)) != NULL &&",
          "611:       (dp = parsefh(ndo, dp, v3)) != NULL) {",
          "612:    if (v3) {",
          "614:     ND_PRINT((ndo, \" %u bytes @ %\" PRIu64,",
          "615:            EXTRACT_BE_U_4(dp + 2),",
          "616:            EXTRACT_BE_U_8(dp)));",
          "617:    } else {",
          "619:     ND_PRINT((ndo, \" %u bytes @ %u\",",
          "620:         EXTRACT_BE_U_4(dp + 1),",
          "621:         EXTRACT_BE_U_4(dp)));",
          "",
          "[Removed Lines]",
          "613:     ND_TCHECK(dp[2]);",
          "618:     ND_TCHECK(dp[1]);",
          "",
          "[Added Lines]",
          "613:     ND_TCHECK_4(dp + 2);",
          "618:     ND_TCHECK_4(dp + 1);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "628:   if ((dp = parsereq(ndo, rp, length)) != NULL &&",
          "629:       (dp = parsefh(ndo, dp, v3)) != NULL) {",
          "630:    if (v3) {",
          "632:     ND_PRINT((ndo, \" %u (%u) bytes @ %\" PRIu64,",
          "633:       EXTRACT_BE_U_4(dp + 4),",
          "634:       EXTRACT_BE_U_4(dp + 2),",
          "",
          "[Removed Lines]",
          "631:     ND_TCHECK(dp[4]);",
          "",
          "[Added Lines]",
          "631:     ND_TCHECK_4(dp + 4);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "639:        NULL, EXTRACT_BE_U_4(dp + 3))));",
          "640:     }",
          "641:    } else {",
          "643:     ND_PRINT((ndo, \" %u (%u) bytes @ %u (%u)\",",
          "644:       EXTRACT_BE_U_4(dp + 3),",
          "645:       EXTRACT_BE_U_4(dp + 2),",
          "",
          "[Removed Lines]",
          "642:     ND_TCHECK(dp[3]);",
          "",
          "[Added Lines]",
          "642:     ND_TCHECK_4(dp + 3);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "667:  case NFSPROC_MKNOD:",
          "668:   if ((dp = parsereq(ndo, rp, length)) != NULL &&",
          "669:       (dp = parsefhn(ndo, dp, v3)) != NULL) {",
          "671:    type = (nfs_type) EXTRACT_BE_U_4(dp);",
          "672:    dp++;",
          "673:    if ((dp = parse_sattr3(ndo, dp, &sa3)) == NULL)",
          "674:     break;",
          "675:    ND_PRINT((ndo, \" %s\", tok2str(type2str, \"unk-ft %d\", type)));",
          "676:    if (ndo->ndo_vflag && (type == NFCHR || type == NFBLK)) {",
          "678:     ND_PRINT((ndo, \" %u/%u\",",
          "679:            EXTRACT_BE_U_4(dp),",
          "680:            EXTRACT_BE_U_4(dp + 1)));",
          "",
          "[Removed Lines]",
          "670:    ND_TCHECK(*dp);",
          "677:     ND_TCHECK(dp[1]);",
          "",
          "[Added Lines]",
          "670:    ND_TCHECK_4(dp);",
          "677:     ND_TCHECK_4(dp + 1);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "708:   if ((dp = parsereq(ndo, rp, length)) != NULL &&",
          "709:       (dp = parsefh(ndo, dp, v3)) != NULL) {",
          "710:    if (v3) {",
          "",
          "[Removed Lines]",
          "711:     ND_TCHECK(dp[4]);",
          "",
          "[Added Lines]",
          "711:     ND_TCHECK_4(dp + 4);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "728:         EXTRACT_BE_U_4(dp + 3)));",
          "729:     }",
          "730:    } else {",
          "",
          "[Removed Lines]",
          "731:     ND_TCHECK(dp[1]);",
          "",
          "[Added Lines]",
          "731:     ND_TCHECK_4(dp + 1);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "744:  case NFSPROC_READDIRPLUS:",
          "745:   if ((dp = parsereq(ndo, rp, length)) != NULL &&",
          "746:       (dp = parsefh(ndo, dp, v3)) != NULL) {",
          "",
          "[Removed Lines]",
          "747:    ND_TCHECK(dp[4]);",
          "",
          "[Added Lines]",
          "747:    ND_TCHECK_4(dp + 4);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "753:     EXTRACT_BE_U_4(dp + 4),",
          "754:     EXTRACT_BE_U_8(dp)));",
          "755:    if (ndo->ndo_vflag) {",
          "",
          "[Removed Lines]",
          "756:     ND_TCHECK(dp[5]);",
          "",
          "[Added Lines]",
          "756:     ND_TCHECK_4(dp + 5);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "772:  case NFSPROC_COMMIT:",
          "773:   if ((dp = parsereq(ndo, rp, length)) != NULL &&",
          "774:       (dp = parsefh(ndo, dp, v3)) != NULL) {",
          "776:    ND_PRINT((ndo, \" %u bytes @ %\" PRIu64,",
          "777:     EXTRACT_BE_U_4(dp + 2),",
          "778:     EXTRACT_BE_U_8(dp)));",
          "",
          "[Removed Lines]",
          "775:    ND_TCHECK(dp[2]);",
          "",
          "[Added Lines]",
          "775:    ND_TCHECK_4(dp + 2);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1027:  dp = ((const uint32_t *)&rp->rm_reply) + 1;",
          "1029:  len = EXTRACT_BE_U_4(dp + 1);",
          "1030:  if (len >= length)",
          "1031:   return (NULL);",
          "",
          "[Removed Lines]",
          "1028:  ND_TCHECK(dp[1]);",
          "",
          "[Added Lines]",
          "1028:  ND_TCHECK_4(dp + 1);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1041:  astat = (enum sunrpc_accept_stat) EXTRACT_BE_U_4(dp);",
          "1042:  if (astat != SUNRPC_SUCCESS) {",
          "1043:   ND_PRINT((ndo, \" %s\", tok2str(sunrpc_str, \"ar_stat %d\", astat)));",
          "",
          "[Removed Lines]",
          "1040:  ND_TCHECK(dp[0]);",
          "",
          "[Added Lines]",
          "1040:  ND_TCHECK_4(dp);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1057: {",
          "1058:  int errnum;",
          "1062:  errnum = EXTRACT_BE_U_4(dp);",
          "1063:  if (er)",
          "",
          "[Removed Lines]",
          "1060:  ND_TCHECK(dp[0]);",
          "",
          "[Added Lines]",
          "1060:  ND_TCHECK_4(dp);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1259:  if (ndo->ndo_qflag)",
          "1260:   return (1);",
          "1263:  ND_PRINT((ndo, \" offset 0x%x size %d \",",
          "1264:         EXTRACT_BE_U_4(dp), EXTRACT_BE_U_4(dp + 1)));",
          "1265:  if (EXTRACT_BE_U_4(dp + 2) != 0)",
          "",
          "[Removed Lines]",
          "1262:  ND_TCHECK(dp[2]);",
          "",
          "[Added Lines]",
          "1262:  ND_TCHECK_4(dp + 2);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1289: parse_pre_op_attr(netdissect_options *ndo,",
          "1290:                   const uint32_t *dp, int verbose)",
          "1291: {",
          "1293:  if (!EXTRACT_BE_U_4(dp))",
          "1294:   return (dp + 1);",
          "1295:  dp++;",
          "",
          "[Removed Lines]",
          "1292:  ND_TCHECK(dp[0]);",
          "",
          "[Added Lines]",
          "1292:  ND_TCHECK_4(dp);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1311: parse_post_op_attr(netdissect_options *ndo,",
          "1312:                    const uint32_t *dp, int verbose)",
          "1313: {",
          "1315:  if (!EXTRACT_BE_U_4(dp))",
          "1316:   return (dp + 1);",
          "1317:  dp++;",
          "",
          "[Removed Lines]",
          "1314:  ND_TCHECK(dp[0]);",
          "",
          "[Added Lines]",
          "1314:  ND_TCHECK_4(dp);",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1348:  if (er)",
          "1349:   dp = parse_wcc_data(ndo, dp, verbose);",
          "1350:  else {",
          "1352:   if (!EXTRACT_BE_U_4(dp))",
          "1353:    return (dp + 1);",
          "1354:   dp++;",
          "",
          "[Removed Lines]",
          "1351:   ND_TCHECK(dp[0]);",
          "",
          "[Added Lines]",
          "1351:   ND_TCHECK_4(dp);",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1394:  if (er)",
          "1395:   return dp;",
          "1396:  if (ndo->ndo_vflag) {",
          "",
          "[Removed Lines]",
          "1397:   ND_TCHECK(dp[1]);",
          "",
          "[Added Lines]",
          "1397:   ND_TCHECK_4(dp + 1);",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1549:   if (!(dp = parse_post_op_attr(ndo, dp, ndo->ndo_vflag)))",
          "1550:    break;",
          "1551:   if (!er) {",
          "1553:    ND_PRINT((ndo, \" c %04x\", EXTRACT_BE_U_4(dp)));",
          "1554:   }",
          "1555:   return;",
          "",
          "[Removed Lines]",
          "1552:    ND_TCHECK(dp[0]);",
          "",
          "[Added Lines]",
          "1552:    ND_TCHECK_4(dp);",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1571:    if (er)",
          "1572:     return;",
          "1573:    if (ndo->ndo_vflag) {",
          "1575:     ND_PRINT((ndo, \" %u bytes\", EXTRACT_BE_U_4(dp)));",
          "1576:     if (EXTRACT_BE_U_4(dp + 1))",
          "1577:      ND_PRINT((ndo, \" EOF\"));",
          "",
          "[Removed Lines]",
          "1574:     ND_TCHECK(dp[1]);",
          "",
          "[Added Lines]",
          "1574:     ND_TCHECK_4(dp + 1);",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1594:    if (er)",
          "1595:     return;",
          "1596:    if (ndo->ndo_vflag) {",
          "1598:     ND_PRINT((ndo, \" %u bytes\", EXTRACT_BE_U_4(dp)));",
          "1599:     if (ndo->ndo_vflag > 1) {",
          "1601:      ND_PRINT((ndo, \" <%s>\",",
          "1602:       tok2str(nfsv3_writemodes,",
          "1603:        NULL, EXTRACT_BE_U_4(dp + 1))));",
          "",
          "[Removed Lines]",
          "1597:     ND_TCHECK(dp[0]);",
          "1600:      ND_TCHECK(dp[1]);",
          "",
          "[Added Lines]",
          "1597:     ND_TCHECK_4(dp);",
          "1600:      ND_TCHECK_4(dp + 1);",
          "",
          "---------------"
        ]
      }
    }
  ]
}