{
  "cve_id": "CVE-2023-24818",
  "cve_desc": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in a NULL pointer dereference. During forwarding of a fragment an uninitialized entry in the reassembly buffer is used. The NULL pointer dereference triggers a hard fault exception resulting in denial of service. Version 2022.10 fixes this issue. As a workaround, disable support for fragmented IP datagrams or apply the patches manually.",
  "repo": "RIOT-OS/RIOT",
  "patch_hash": "f4df5b4c4f841ccb460930894cf68ab10b55b971",
  "patch_info": {
    "commit_hash": "f4df5b4c4f841ccb460930894cf68ab10b55b971",
    "repo": "RIOT-OS/RIOT",
    "commit_url": "https://github.com/RIOT-OS/RIOT/commit/f4df5b4c4f841ccb460930894cf68ab10b55b971",
    "files": [
      "sys/net/link_layer/ieee802154/ieee802154.c"
    ],
    "message": "ieee802154: Adjust parsing of IEEE 802.15.4 frame header\n\n(cherry picked from commit 0bec3e245ed3815ad6c8cae54673f0021777768b)",
    "before_after_code_files": [
      "sys/net/link_layer/ieee802154/ieee802154.c||sys/net/link_layer/ieee802154/ieee802154.c"
    ]
  },
  "patch_diff": {
    "sys/net/link_layer/ieee802154/ieee802154.c||sys/net/link_layer/ieee802154/ieee802154.c": [
      "File: sys/net/link_layer/ieee802154/ieee802154.c -> sys/net/link_layer/ieee802154/ieee802154.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "115: size_t ieee802154_get_frame_hdr_len(const uint8_t *mhr)",
      "116: {",
      "134:         return 0;",
      "135:     }",
      "136:     tmp = (mhr[1] & IEEE802154_FCF_SRC_ADDR_MASK);",
      "137:     if (tmp == IEEE802154_FCF_SRC_ADDR_VOID) {",
      "139:     }",
      "140:     else {",
      "141:         if (!(mhr[0] & IEEE802154_FCF_PAN_COMP)) {",
      "",
      "[Removed Lines]",
      "118:     uint8_t tmp;",
      "122:     tmp = (mhr[1] & IEEE802154_FCF_DST_ADDR_MASK);",
      "123:     if (tmp == IEEE802154_FCF_DST_ADDR_SHORT) {",
      "125:     }",
      "126:     else if (tmp == IEEE802154_FCF_DST_ADDR_LONG) {",
      "128:     }",
      "129:     else if (tmp != IEEE802154_FCF_DST_ADDR_VOID) {",
      "130:         return 0;",
      "131:     }",
      "132:     else if (mhr[0] & IEEE802154_FCF_PAN_COMP) {",
      "138:         return len;",
      "",
      "[Added Lines]",
      "118:     uint8_t tmp, has_dst = 0;",
      "121:     tmp = (mhr[0] & IEEE802154_FCF_TYPE_MASK);",
      "122:     if (tmp == IEEE802154_FCF_TYPE_ACK) {",
      "124:         return len;",
      "125:     } else if (tmp != IEEE802154_FCF_TYPE_BEACON) {",
      "127:         tmp = (mhr[1] & IEEE802154_FCF_DST_ADDR_MASK);",
      "128:         if (tmp == IEEE802154_FCF_DST_ADDR_SHORT) {",
      "130:             has_dst = 1;",
      "131:         }",
      "132:         else if (tmp == IEEE802154_FCF_DST_ADDR_LONG) {",
      "134:             has_dst = 1;",
      "135:         }",
      "136:         else if (tmp != IEEE802154_FCF_DST_ADDR_VOID) {",
      "137:             return 0;",
      "138:         }",
      "139:         else if (mhr[0] & IEEE802154_FCF_PAN_COMP) {",
      "141:             return 0;",
      "142:         }",
      "143:     } else if (mhr[0] & IEEE802154_FCF_PAN_COMP) {",
      "150:         return has_dst ? len : 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0bec3e245ed3815ad6c8cae54673f0021777768b",
      "candidate_info": {
        "commit_hash": "0bec3e245ed3815ad6c8cae54673f0021777768b",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/0bec3e245ed3815ad6c8cae54673f0021777768b",
        "files": [
          "sys/net/link_layer/ieee802154/ieee802154.c"
        ],
        "message": "ieee802154: Adjust parsing of IEEE 802.15.4 frame header",
        "before_after_code_files": [
          "sys/net/link_layer/ieee802154/ieee802154.c||sys/net/link_layer/ieee802154/ieee802154.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "sys/net/link_layer/ieee802154/ieee802154.c||sys/net/link_layer/ieee802154/ieee802154.c"
          ],
          "candidate": [
            "sys/net/link_layer/ieee802154/ieee802154.c||sys/net/link_layer/ieee802154/ieee802154.c"
          ]
        }
      },
      "candidate_diff": {
        "sys/net/link_layer/ieee802154/ieee802154.c||sys/net/link_layer/ieee802154/ieee802154.c": [
          "File: sys/net/link_layer/ieee802154/ieee802154.c -> sys/net/link_layer/ieee802154/ieee802154.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "115: size_t ieee802154_get_frame_hdr_len(const uint8_t *mhr)",
          "116: {",
          "134:         return 0;",
          "135:     }",
          "136:     tmp = (mhr[1] & IEEE802154_FCF_SRC_ADDR_MASK);",
          "137:     if (tmp == IEEE802154_FCF_SRC_ADDR_VOID) {",
          "139:     }",
          "140:     else {",
          "141:         if (!(mhr[0] & IEEE802154_FCF_PAN_COMP)) {",
          "",
          "[Removed Lines]",
          "118:     uint8_t tmp;",
          "122:     tmp = (mhr[1] & IEEE802154_FCF_DST_ADDR_MASK);",
          "123:     if (tmp == IEEE802154_FCF_DST_ADDR_SHORT) {",
          "125:     }",
          "126:     else if (tmp == IEEE802154_FCF_DST_ADDR_LONG) {",
          "128:     }",
          "129:     else if (tmp != IEEE802154_FCF_DST_ADDR_VOID) {",
          "130:         return 0;",
          "131:     }",
          "132:     else if (mhr[0] & IEEE802154_FCF_PAN_COMP) {",
          "138:         return len;",
          "",
          "[Added Lines]",
          "118:     uint8_t tmp, has_dst = 0;",
          "121:     tmp = (mhr[0] & IEEE802154_FCF_TYPE_MASK);",
          "122:     if (tmp == IEEE802154_FCF_TYPE_ACK) {",
          "124:         return len;",
          "125:     } else if (tmp != IEEE802154_FCF_TYPE_BEACON) {",
          "127:         tmp = (mhr[1] & IEEE802154_FCF_DST_ADDR_MASK);",
          "128:         if (tmp == IEEE802154_FCF_DST_ADDR_SHORT) {",
          "130:             has_dst = 1;",
          "131:         }",
          "132:         else if (tmp == IEEE802154_FCF_DST_ADDR_LONG) {",
          "134:             has_dst = 1;",
          "135:         }",
          "136:         else if (tmp != IEEE802154_FCF_DST_ADDR_VOID) {",
          "137:             return 0;",
          "138:         }",
          "139:         else if (mhr[0] & IEEE802154_FCF_PAN_COMP) {",
          "141:             return 0;",
          "142:         }",
          "143:     } else if (mhr[0] & IEEE802154_FCF_PAN_COMP) {",
          "150:         return has_dst ? len : 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd31010231f5340e21410595dd95afc86bbfd341",
      "candidate_info": {
        "commit_hash": "bd31010231f5340e21410595dd95afc86bbfd341",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/bd31010231f5340e21410595dd95afc86bbfd341",
        "files": [
          "sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c"
        ],
        "message": "gnrc_sixlowpan_frag_rb: fix integer underflow in _6lo_frag_size()\n\n(cherry picked from commit 9728f727e75d7d78dbfb5918e0de1b938b7b6d2c)",
        "before_after_code_files": [
          "sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c||sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/18820"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c||sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c": [
          "File: sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c -> sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "236:     size_t frag_size;",
          "238:     if (offset == 0) {",
          "239:         frag_size = pkt->size - sizeof(sixlowpan_frag_t);",
          "240:         if (data[0] == SIXLOWPAN_UNCOMP) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "239:         if (pkt->size < sizeof(sixlowpan_frag_t)) {",
          "240:             return 0;",
          "241:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "244:         }",
          "245:     }",
          "246:     else {",
          "247:         frag_size = pkt->size - sizeof(sixlowpan_frag_n_t);",
          "248:     }",
          "249:     return frag_size;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "250:         if (pkt->size < sizeof(sixlowpan_frag_n_t)) {",
          "251:             return 0;",
          "252:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "306:     if (IS_USED(MODULE_GNRC_SIXLOWPAN_FRAG) && sixlowpan_frag_is(pkt->data)) {",
          "307:         data = _6lo_frag_payload(pkt);",
          "308:         frag_size = _6lo_frag_size(pkt, offset, data);",
          "309:         datagram_size = sixlowpan_frag_datagram_size(pkt->data);",
          "310:         datagram_tag = sixlowpan_frag_datagram_tag(pkt->data);",
          "311:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "315:         if (frag_size == 0) {",
          "316:             DEBUG(\"6lo rbuf: integer underflow detected.\\n\");",
          "317:             gnrc_pktbuf_release(pkt);",
          "318:             return RBUF_ADD_ERROR;",
          "319:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dafc397fdc3655aeb5c7b9963a43f1604c6a2062",
      "candidate_info": {
        "commit_hash": "dafc397fdc3655aeb5c7b9963a43f1604c6a2062",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/dafc397fdc3655aeb5c7b9963a43f1604c6a2062",
        "files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ],
        "message": "gnrc_sixlowpan_iphc: fix packet type confusion in _iphc_encode()\n\n(cherry picked from commit 4a081f86616cb5c9dd0b5d7b286da03285d1652a)",
        "before_after_code_files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/18820"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c": [
          "File: sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c -> sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1613:         else {",
          "1614:             dispatch->next = ptr;",
          "1615:         }",
          "1627:         ptr = ptr->next;",
          "1628:     }",
          "",
          "[Removed Lines]",
          "1616:         if (ptr->type == GNRC_NETTYPE_UNDEF) {",
          "1619:             dispatch_size += sizeof(udp_hdr_t);",
          "1620:             break;  /* nothing special after UDP so quit even if more UNDEF",
          "1622:         }",
          "1623:         else {",
          "1624:             dispatch_size += ptr->size;",
          "1625:         }",
          "",
          "[Added Lines]",
          "1616:         dispatch_size += ptr->size;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0cba82a6347956fab07170882a89ab42d5c59691",
      "candidate_info": {
        "commit_hash": "0cba82a6347956fab07170882a89ab42d5c59691",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/0cba82a6347956fab07170882a89ab42d5c59691",
        "files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ],
        "message": "gnrc_sixlowpan_iphc.c: dereference ipv6_hdr in DEBUG() after assignment\n\n(cherry picked from commit 36a099e1ec52187a21c767b6bcc32eaec5690b75)",
        "before_after_code_files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/18820"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c": [
          "File: sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c -> sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "843:             payload_len = (uint16_t)(rbuf->super.datagram_size - sizeof(ipv6_hdr_t));",
          "844:         }",
          "845: #ifdef MODULE_GNRC_SIXLOWPAN_FRAG_VRB",
          "849:         ipv6_hdr = ipv6->data;",
          "",
          "[Removed Lines]",
          "846:         DEBUG(\"6lo iphc: VRB present, trying to create entry for dst %s\\n\",",
          "847:               ipv6_addr_to_str(addr_str, &ipv6_hdr->dst, sizeof(addr_str)));",
          "",
          "[Added Lines]",
          "848:         DEBUG(\"6lo iphc: VRB present, trying to create entry for dst %s\\n\",",
          "849:               ipv6_addr_to_str(addr_str, &ipv6_hdr->dst, sizeof(addr_str)));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e82cab6a94fa7865162bb7ac3705d5a461b1207d",
      "candidate_info": {
        "commit_hash": "e82cab6a94fa7865162bb7ac3705d5a461b1207d",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/e82cab6a94fa7865162bb7ac3705d5a461b1207d",
        "files": [
          "tests/unittests/tests-ieee802154/tests-ieee802154.c"
        ],
        "message": "tests/unittests: fix get_frame_hdr_len tests for hardened parsing\n\n(cherry picked from commit 3c7c9fefd61a57e25a08d6566ded64ca8c5326ae)",
        "before_after_code_files": [
          "tests/unittests/tests-ieee802154/tests-ieee802154.c||tests/unittests/tests-ieee802154/tests-ieee802154.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/18820"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "tests/unittests/tests-ieee802154/tests-ieee802154.c||tests/unittests/tests-ieee802154/tests-ieee802154.c": [
          "File: tests/unittests/tests-ieee802154/tests-ieee802154.c -> tests/unittests/tests-ieee802154/tests-ieee802154.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "407: static void test_ieee802154_get_frame_hdr_len_dst0_src0(void)",
          "408: {",
          "413: }",
          "415: static void test_ieee802154_get_frame_hdr_len_dstr(void)",
          "416: {",
          "419:     TEST_ASSERT_EQUAL_INT(0, ieee802154_get_frame_hdr_len(mhr));",
          "420: }",
          "422: static void test_ieee802154_get_frame_hdr_len_srcr(void)",
          "423: {",
          "426:     TEST_ASSERT_EQUAL_INT(0, ieee802154_get_frame_hdr_len(mhr));",
          "427: }",
          "429: static void test_ieee802154_get_frame_hdr_len_dst2_src0(void)",
          "430: {",
          "434:     TEST_ASSERT_EQUAL_INT(7, ieee802154_get_frame_hdr_len(mhr));",
          "435: }",
          "437: static void test_ieee802154_get_frame_hdr_len_dst8_src0(void)",
          "438: {",
          "441:     TEST_ASSERT_EQUAL_INT(13, ieee802154_get_frame_hdr_len(mhr));",
          "442: }",
          "444: static void test_ieee802154_get_frame_hdr_len_dst0_src2(void)",
          "445: {",
          "448:     TEST_ASSERT_EQUAL_INT(7, ieee802154_get_frame_hdr_len(mhr));",
          "449: }",
          "451: static void test_ieee802154_get_frame_hdr_len_dst0_src2_pancomp(void)",
          "452: {",
          "455:     TEST_ASSERT_EQUAL_INT(0, ieee802154_get_frame_hdr_len(mhr));",
          "456: }",
          "458: static void test_ieee802154_get_frame_hdr_len_dst0_src8(void)",
          "459: {",
          "462:     TEST_ASSERT_EQUAL_INT(13, ieee802154_get_frame_hdr_len(mhr));",
          "463: }",
          "465: static void test_ieee802154_get_frame_hdr_len_dst0_src8_pancomp(void)",
          "466: {",
          "469:     TEST_ASSERT_EQUAL_INT(0, ieee802154_get_frame_hdr_len(mhr));",
          "470: }",
          "472: static void test_ieee802154_get_frame_hdr_len_dst2_src2(void)",
          "473: {",
          "477:     TEST_ASSERT_EQUAL_INT(11, ieee802154_get_frame_hdr_len(mhr));",
          "478: }",
          "480: static void test_ieee802154_get_frame_hdr_len_dst8_src2(void)",
          "481: {",
          "485:     TEST_ASSERT_EQUAL_INT(17, ieee802154_get_frame_hdr_len(mhr));",
          "486: }",
          "488: static void test_ieee802154_get_frame_hdr_len_dst8_src8(void)",
          "489: {",
          "493:     TEST_ASSERT_EQUAL_INT(23, ieee802154_get_frame_hdr_len(mhr));",
          "494: }",
          "496: static void test_ieee802154_get_frame_hdr_len_dst2_src2_pancomp(void)",
          "497: {",
          "501:     TEST_ASSERT_EQUAL_INT(9, ieee802154_get_frame_hdr_len(mhr));",
          "502: }",
          "504: static void test_ieee802154_get_frame_hdr_len_dst8_src8_pancomp(void)",
          "505: {",
          "509:     TEST_ASSERT_EQUAL_INT(21, ieee802154_get_frame_hdr_len(mhr));",
          "510: }",
          "",
          "[Removed Lines]",
          "409:     const uint8_t mhr[] = { 0x00, IEEE802154_FCF_DST_ADDR_VOID |",
          "410:                                   IEEE802154_FCF_SRC_ADDR_VOID };",
          "412:     TEST_ASSERT_EQUAL_INT(3, ieee802154_get_frame_hdr_len(mhr));",
          "417:     const uint8_t mhr[] = { 0x00, IEEE802154_FCF_DST_ADDR_RESV };",
          "424:     const uint8_t mhr[] = { 0x00, IEEE802154_FCF_DST_ADDR_RESV };",
          "431:     const uint8_t mhr[] = { 0x00, IEEE802154_FCF_DST_ADDR_SHORT |",
          "432:                                   IEEE802154_FCF_SRC_ADDR_VOID };",
          "439:     const uint8_t mhr[] = { 0x00, IEEE802154_FCF_DST_ADDR_LONG };",
          "446:     const uint8_t mhr[] = { 0x00, IEEE802154_FCF_SRC_ADDR_SHORT };",
          "453:     const uint8_t mhr[] = { IEEE802154_FCF_PAN_COMP, IEEE802154_FCF_SRC_ADDR_SHORT };",
          "460:     const uint8_t mhr[] = { 0x00, IEEE802154_FCF_SRC_ADDR_LONG };",
          "467:     const uint8_t mhr[] = { IEEE802154_FCF_PAN_COMP, IEEE802154_FCF_SRC_ADDR_LONG };",
          "474:     const uint8_t mhr[] = { 0x00, IEEE802154_FCF_DST_ADDR_SHORT |",
          "475:                                   IEEE802154_FCF_SRC_ADDR_SHORT };",
          "482:     const uint8_t mhr[] = { 0x00, IEEE802154_FCF_DST_ADDR_LONG |",
          "483:                                   IEEE802154_FCF_SRC_ADDR_SHORT };",
          "490:     const uint8_t mhr[] = { 0x00, IEEE802154_FCF_DST_ADDR_LONG |",
          "491:                                   IEEE802154_FCF_SRC_ADDR_LONG };",
          "498:     const uint8_t mhr[] = { IEEE802154_FCF_PAN_COMP, IEEE802154_FCF_DST_ADDR_SHORT |",
          "499:                                                      IEEE802154_FCF_SRC_ADDR_SHORT };",
          "506:     const uint8_t mhr[] = { IEEE802154_FCF_PAN_COMP, IEEE802154_FCF_DST_ADDR_LONG |",
          "507:                                                      IEEE802154_FCF_SRC_ADDR_LONG };",
          "",
          "[Added Lines]",
          "409:     const uint8_t mhr[] = { IEEE802154_FCF_TYPE_DATA, IEEE802154_FCF_DST_ADDR_VOID |",
          "410:                                                       IEEE802154_FCF_SRC_ADDR_VOID };",
          "413:     TEST_ASSERT_EQUAL_INT(0, ieee802154_get_frame_hdr_len(mhr));",
          "418:     const uint8_t mhr[] = { IEEE802154_FCF_TYPE_DATA, IEEE802154_FCF_DST_ADDR_RESV };",
          "425:     const uint8_t mhr[] = { IEEE802154_FCF_TYPE_DATA, IEEE802154_FCF_DST_ADDR_RESV };",
          "432:     const uint8_t mhr[] = { IEEE802154_FCF_TYPE_DATA, IEEE802154_FCF_DST_ADDR_SHORT |",
          "433:                                                       IEEE802154_FCF_SRC_ADDR_VOID };",
          "440:     const uint8_t mhr[] = { IEEE802154_FCF_TYPE_DATA, IEEE802154_FCF_DST_ADDR_LONG };",
          "447:     const uint8_t mhr[] = { IEEE802154_FCF_TYPE_DATA, IEEE802154_FCF_SRC_ADDR_SHORT };",
          "454:     const uint8_t mhr[] = { IEEE802154_FCF_TYPE_DATA | IEEE802154_FCF_PAN_COMP,",
          "455:                             IEEE802154_FCF_SRC_ADDR_SHORT };",
          "462:     const uint8_t mhr[] = { IEEE802154_FCF_TYPE_DATA, IEEE802154_FCF_SRC_ADDR_LONG };",
          "469:     const uint8_t mhr[] = { IEEE802154_FCF_TYPE_DATA | IEEE802154_FCF_PAN_COMP,",
          "470:                             IEEE802154_FCF_SRC_ADDR_LONG };",
          "477:     const uint8_t mhr[] = { IEEE802154_FCF_TYPE_DATA,",
          "478:                             IEEE802154_FCF_DST_ADDR_SHORT | IEEE802154_FCF_SRC_ADDR_SHORT };",
          "485:     const uint8_t mhr[] = { IEEE802154_FCF_TYPE_DATA,",
          "486:                             IEEE802154_FCF_DST_ADDR_LONG | IEEE802154_FCF_SRC_ADDR_SHORT };",
          "493:     const uint8_t mhr[] = { IEEE802154_FCF_TYPE_DATA,",
          "494:                             IEEE802154_FCF_DST_ADDR_LONG | IEEE802154_FCF_SRC_ADDR_LONG };",
          "501:     const uint8_t mhr[] = { IEEE802154_FCF_TYPE_DATA | IEEE802154_FCF_PAN_COMP,",
          "502:                             IEEE802154_FCF_DST_ADDR_SHORT | IEEE802154_FCF_SRC_ADDR_SHORT };",
          "509:     const uint8_t mhr[] = { IEEE802154_FCF_TYPE_DATA | IEEE802154_FCF_PAN_COMP,",
          "510:                             IEEE802154_FCF_DST_ADDR_LONG | IEEE802154_FCF_SRC_ADDR_LONG };",
          "",
          "---------------"
        ]
      }
    }
  ]
}