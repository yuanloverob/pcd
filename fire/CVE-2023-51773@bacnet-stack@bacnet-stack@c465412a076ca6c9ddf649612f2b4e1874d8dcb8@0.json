{
  "cve_id": "CVE-2023-51773",
  "cve_desc": "BACnet Stack before 1.3.2 has a decode function APDU buffer over-read in bacapp_decode_application_data in bacapp.c.",
  "repo": "bacnet-stack/bacnet-stack",
  "patch_hash": "c465412a076ca6c9ddf649612f2b4e1874d8dcb8",
  "patch_info": {
    "commit_hash": "c465412a076ca6c9ddf649612f2b4e1874d8dcb8",
    "repo": "bacnet-stack/bacnet-stack",
    "commit_url": "https://github.com/bacnet-stack/bacnet-stack/pull/546/commits/c465412a076ca6c9ddf649612f2b4e1874d8dcb8",
    "files": [
      "src/bacnet/bacapp.c"
    ],
    "message": "adjust APDU size datatype to 32-bit",
    "before_after_code_files": [
      "src/bacnet/bacapp.c||src/bacnet/bacapp.c"
    ]
  },
  "patch_diff": {
    "src/bacnet/bacapp.c||src/bacnet/bacapp.c": [
      "File: src/bacnet/bacapp.c -> src/bacnet/bacapp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "425: int bacapp_decode_application_data(",
      "427: {",
      "428:     int len = 0;",
      "429:     int tag_len = 0;",
      "",
      "[Removed Lines]",
      "426:     uint8_t *apdu, unsigned apdu_len_max, BACNET_APPLICATION_DATA_VALUE *value)",
      "",
      "[Added Lines]",
      "426:     uint8_t *apdu, uint32_t apdu_size, BACNET_APPLICATION_DATA_VALUE *value)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "431:     uint8_t tag_number = 0;",
      "432:     uint32_t len_value_type = 0;",
      "435:         value->context_specific = false;",
      "436:         tag_len = bacnet_tag_number_and_value_decode(",
      "438:         if (tag_len > 0) {",
      "439:             len += tag_len;",
      "440:             value->tag = tag_number;",
      "442:                 decode_len =",
      "443:                     bacapp_decode_data_len(NULL, tag_number, len_value_type);",
      "445:                     decode_len = bacapp_decode_data(",
      "446:                         &apdu[len], tag_number, len_value_type, value);",
      "447:                     if (value->tag != MAX_BACNET_APPLICATION_TAG) {",
      "",
      "[Removed Lines]",
      "434:     if (apdu && value && apdu_len_max && !IS_CONTEXT_SPECIFIC(*apdu)) {",
      "437:             &apdu[0], apdu_len_max, &tag_number, &len_value_type);",
      "441:             if ((unsigned)len <= apdu_len_max) {",
      "444:                 if ((unsigned)decode_len <= (apdu_len_max - len)) {",
      "",
      "[Added Lines]",
      "434:     if (apdu && value && apdu_size && !IS_CONTEXT_SPECIFIC(*apdu)) {",
      "437:             &apdu[0], apdu_size, &tag_number, &len_value_type);",
      "441:             if ((unsigned)len <= apdu_size) {",
      "444:                 if ((unsigned)decode_len <= (apdu_size - len)) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bbe5de7c12b9bfd9fb10ee4230e9618efb049f05",
      "candidate_info": {
        "commit_hash": "bbe5de7c12b9bfd9fb10ee4230e9618efb049f05",
        "repo": "bacnet-stack/bacnet-stack",
        "commit_url": "https://github.com/bacnet-stack/bacnet-stack/commit/bbe5de7c12b9bfd9fb10ee4230e9618efb049f05",
        "files": [
          "src/bacnet/bacapp.c",
          "src/bacnet/bacapp.h"
        ],
        "message": "Bugfix/bacapp application decode buffer over-read (#546)\n\n* fix BACnet app decode function APDU over-read\n\n* change BACnet app decode function APDU size datatype to 32-bit\n\n---------\n\nCo-authored-by: Steve Karg <skarg@users.sourceforge.net>",
        "before_after_code_files": [
          "src/bacnet/bacapp.c||src/bacnet/bacapp.c",
          "src/bacnet/bacapp.h||src/bacnet/bacapp.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/bacnet-stack/bacnet-stack/pull/546"
        ],
        "olp_code_files": {
          "patch": [
            "src/bacnet/bacapp.c||src/bacnet/bacapp.c"
          ],
          "candidate": [
            "src/bacnet/bacapp.c||src/bacnet/bacapp.c"
          ]
        }
      },
      "candidate_diff": {
        "src/bacnet/bacapp.c||src/bacnet/bacapp.c": [
          "File: src/bacnet/bacapp.c -> src/bacnet/bacapp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "425: int bacapp_decode_application_data(",
          "427: {",
          "428:     int len = 0;",
          "429:     int tag_len = 0;",
          "",
          "[Removed Lines]",
          "426:     uint8_t *apdu, unsigned apdu_len_max, BACNET_APPLICATION_DATA_VALUE *value)",
          "",
          "[Added Lines]",
          "426:     uint8_t *apdu, uint32_t apdu_size, BACNET_APPLICATION_DATA_VALUE *value)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "431:     uint8_t tag_number = 0;",
          "432:     uint32_t len_value_type = 0;",
          "435:         value->context_specific = false;",
          "436:         tag_len = bacnet_tag_number_and_value_decode(",
          "438:         if (tag_len > 0) {",
          "439:             len += tag_len;",
          "440:             value->tag = tag_number;",
          "442:                 decode_len =",
          "443:                     bacapp_decode_data_len(NULL, tag_number, len_value_type);",
          "445:                     decode_len = bacapp_decode_data(",
          "446:                         &apdu[len], tag_number, len_value_type, value);",
          "447:                     if (value->tag != MAX_BACNET_APPLICATION_TAG) {",
          "",
          "[Removed Lines]",
          "434:     if (apdu && value && !IS_CONTEXT_SPECIFIC(*apdu)) {",
          "437:             &apdu[0], apdu_len_max, &tag_number, &len_value_type);",
          "441:             if ((unsigned)len <= apdu_len_max) {",
          "444:                 if ((unsigned)decode_len <= (apdu_len_max - len)) {",
          "",
          "[Added Lines]",
          "434:     if (apdu && value && apdu_size && !IS_CONTEXT_SPECIFIC(*apdu)) {",
          "437:             &apdu[0], apdu_size, &tag_number, &len_value_type);",
          "441:             if ((unsigned)len <= apdu_size) {",
          "444:                 if ((unsigned)decode_len <= (apdu_size - len)) {",
          "",
          "---------------"
        ],
        "src/bacnet/bacapp.h||src/bacnet/bacapp.h": [
          "File: src/bacnet/bacapp.h -> src/bacnet/bacapp.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "198:     int bacapp_decode_data(",
          "199:         uint8_t * apdu,",
          "200:         uint8_t tag_data_type,",
          "202:         BACNET_APPLICATION_DATA_VALUE * value);",
          "204:     BACNET_STACK_EXPORT",
          "205:     int bacapp_decode_application_data(",
          "206:         uint8_t * apdu,",
          "208:         BACNET_APPLICATION_DATA_VALUE * value);",
          "210:     BACNET_STACK_EXPORT",
          "211:     bool bacapp_decode_application_data_safe(",
          "214:         BACNET_APPLICATION_DATA_VALUE * value);",
          "216:     BACNET_STACK_EXPORT",
          "",
          "[Removed Lines]",
          "201:         uint32_t len_value_type,",
          "207:         unsigned max_apdu_len,",
          "212:         uint8_t * new_apdu,",
          "213:         uint32_t new_apdu_len,",
          "",
          "[Added Lines]",
          "201:         uint32_t apdu_size,",
          "207:         uint32_t apdu_size,",
          "212:         uint8_t * apdu,",
          "213:         uint32_t apdu_size,",
          "",
          "---------------"
        ]
      }
    }
  ]
}