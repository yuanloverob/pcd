{
  "cve_id": "CVE-2019-25087",
  "cve_desc": "A vulnerability was found in RamseyK httpserver. It has been rated as critical. This issue affects the function ResourceHost::getResource of the file src/ResourceHost.cpp of the component URI Handler. The manipulation of the argument uri leads to path traversal: '../filedir'. The attack may be initiated remotely. The name of the patch is 1a0de56e4dafff9c2f9c8f6b130a764f7a50df52. It is recommended to apply a patch to fix this issue. The associated identifier of this vulnerability is VDB-216863.",
  "repo": "RamseyK/httpserver",
  "patch_hash": "1a0de56e4dafff9c2f9c8f6b130a764f7a50df52",
  "patch_info": {
    "commit_hash": "1a0de56e4dafff9c2f9c8f6b130a764f7a50df52",
    "repo": "RamseyK/httpserver",
    "commit_url": "https://github.com/RamseyK/httpserver/commit/1a0de56e4dafff9c2f9c8f6b130a764f7a50df52",
    "files": [
      "README.md",
      "src/HTTPServer.cpp",
      "src/ResourceHost.cpp"
    ],
    "message": "Deny any directory traversal paths.  README update",
    "before_after_code_files": [
      "src/HTTPServer.cpp||src/HTTPServer.cpp",
      "src/ResourceHost.cpp||src/ResourceHost.cpp"
    ]
  },
  "patch_diff": {
    "src/HTTPServer.cpp||src/HTTPServer.cpp": [
      "File: src/HTTPServer.cpp -> src/HTTPServer.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "440:  std::cout << \"[\" << cl->getClientIP() << \"] \" << req->methodIntToStr(req->getMethod()) << \" \" << req->getRequestUri() << std::endl;",
      "442:  for(int i = 0; i < req->getNumHeaders(); i++) {",
      "444:  }",
      "",
      "[Removed Lines]",
      "443:   std::cout << req->getHeaderStr(i) << std::endl;",
      "",
      "[Added Lines]",
      "443:   std::cout << \"\\t\" << req->getHeaderStr(i) << std::endl;",
      "",
      "---------------"
    ],
    "src/ResourceHost.cpp||src/ResourceHost.cpp": [
      "File: src/ResourceHost.cpp -> src/ResourceHost.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "183:  if (uri.length() > 255 || uri.empty())",
      "184:   return NULL;",
      "186:  std::string path = baseDiskPath + uri;",
      "187:  Resource* res = NULL;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "186:  if (uri.find(\"../\") != std::string::npos)",
      "187:   return NULL;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "62cd7a480835ac31f1fbe6ffb56f63cc31362450",
      "candidate_info": {
        "commit_hash": "62cd7a480835ac31f1fbe6ffb56f63cc31362450",
        "repo": "RamseyK/httpserver",
        "commit_url": "https://github.com/RamseyK/httpserver/commit/62cd7a480835ac31f1fbe6ffb56f63cc31362450",
        "files": [
          "README.md",
          "src/HTTPServer.cpp",
          "src/ResourceHost.cpp"
        ],
        "message": "Updated dir traversal path check.  Updated readme",
        "before_after_code_files": [
          "src/HTTPServer.cpp||src/HTTPServer.cpp",
          "src/ResourceHost.cpp||src/ResourceHost.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/HTTPServer.cpp||src/HTTPServer.cpp",
            "src/ResourceHost.cpp||src/ResourceHost.cpp"
          ],
          "candidate": [
            "src/HTTPServer.cpp||src/HTTPServer.cpp",
            "src/ResourceHost.cpp||src/ResourceHost.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/HTTPServer.cpp||src/HTTPServer.cpp": [
          "File: src/HTTPServer.cpp -> src/HTTPServer.cpp"
        ],
        "src/ResourceHost.cpp||src/ResourceHost.cpp": [
          "File: src/ResourceHost.cpp -> src/ResourceHost.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "183:  if (uri.length() > 255 || uri.empty())",
          "184:   return NULL;",
          "187:   return NULL;",
          "189:  std::string path = baseDiskPath + uri;",
          "",
          "[Removed Lines]",
          "186:  if (uri.find(\"../\") != std::string::npos)",
          "",
          "[Added Lines]",
          "186:  if (uri.find(\"../\") != std::string::npos || uri.find(\"/..\") != std::string::npos)",
          "",
          "---------------"
        ]
      }
    }
  ]
}