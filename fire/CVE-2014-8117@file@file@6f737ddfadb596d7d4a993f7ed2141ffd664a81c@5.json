{
  "cve_id": "CVE-2014-8117",
  "cve_desc": "softmagic.c in file before 5.21 does not properly limit recursion, which allows remote attackers to cause a denial of service (CPU consumption or crash) via unspecified vectors.",
  "repo": "file/file",
  "patch_hash": "6f737ddfadb596d7d4a993f7ed2141ffd664a81c",
  "patch_info": {
    "commit_hash": "6f737ddfadb596d7d4a993f7ed2141ffd664a81c",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/6f737ddfadb596d7d4a993f7ed2141ffd664a81c",
    "files": [
      "src/file.h",
      "src/funcs.c",
      "src/softmagic.c"
    ],
    "message": "- reduce recursion level from 20 to 10 and make a symbolic constant for it. - pull out the guts of saving and restoring the output buffer into functions   and take care not to overwrite the error message if an error happened.",
    "before_after_code_files": [
      "src/file.h||src/file.h",
      "src/funcs.c||src/funcs.c",
      "src/softmagic.c||src/softmagic.c"
    ]
  },
  "patch_diff": {
    "src/file.h||src/file.h": [
      "File: src/file.h -> src/file.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "495: protected void file_regfree(file_regex_t *);",
      "496: protected void file_regerror(file_regex_t *, int, struct magic_set *);",
      "498: #ifndef COMPILE_ONLY",
      "499: extern const char *file_names[];",
      "500: extern const size_t file_nnames;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "498: typedef struct {",
      "499:  char *buf;",
      "500:  uint32_t offset;",
      "501: } file_pushbuf_t;",
      "503: protected file_pushbuf_t *file_push_buffer(struct magic_set *);",
      "504: protected char  *file_pop_buffer(struct magic_set *, file_pushbuf_t *);",
      "",
      "---------------"
    ],
    "src/funcs.c||src/funcs.c": [
      "File: src/funcs.c -> src/funcs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #include \"file.h\"",
      "29: #ifndef lint",
      "33: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.72 2014/05/14 23:15:42 christos Exp $\")",
      "",
      "[Added Lines]",
      "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.73 2014/09/10 18:41:51 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "491:  file_magerror(ms, \"regex error %d for `%s', (%s)\", rc, rx->pat,",
      "492:      errmsg);",
      "493: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "495: protected file_pushbuf_t *",
      "496: file_push_buffer(struct magic_set *ms)",
      "497: {",
      "498:  file_pushbuf_t *pb;",
      "500:  if (ms->event_flags & EVENT_HAD_ERR)",
      "501:   return NULL;",
      "503:  if ((pb = (CAST(file_pushbuf_t *, malloc(sizeof(*pb))))) == NULL)",
      "504:   return NULL;",
      "506:  pb->buf = ms->o.buf;",
      "507:  pb->offset = ms->offset;",
      "509:  ms->o.buf = NULL;",
      "510:  ms->offset = 0;",
      "512:  return pb;",
      "513: }",
      "515: protected char *",
      "516: file_pop_buffer(struct magic_set *ms, file_pushbuf_t *pb)",
      "517: {",
      "518:  char *rbuf;",
      "520:  if (ms->event_flags & EVENT_HAD_ERR) {",
      "521:   free(pb->buf);",
      "522:   free(pb);",
      "523:   return NULL;",
      "524:  }",
      "526:  rbuf = ms->o.buf;",
      "528:  ms->o.buf = pb->buf;",
      "529:  ms->offset = pb->offset;",
      "531:  free(pb);",
      "532:  return rbuf;",
      "533: }",
      "",
      "---------------"
    ],
    "src/softmagic.c||src/softmagic.c": [
      "File: src/softmagic.c -> src/softmagic.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "32: #include \"file.h\"",
      "34: #ifndef lint",
      "38: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.196 2014/11/07 15:24:14 christos Exp $\")",
      "",
      "[Added Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.197 2014/11/11 17:48:23 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "63: private void cvt_64(union VALUETYPE *, const struct magic *);",
      "65: #define OFFSET_OOB(n, o, i) ((n) < (o) || (i) > ((n) - (o)))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "67: #define MAX_RECURSION_LEVEL 10",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1217:     int flip, int recursion_level, int *printed_something,",
      "1218:     int *need_separator, int *returnval)",
      "1219: {",
      "1221:  uint32_t lhs;",
      "1222:  int rv, oneed_separator, in_type;",
      "1224:  union VALUETYPE *p = &ms->ms_value;",
      "1225:  struct mlist ml;",
      "1228:   file_error(ms, 0, \"recursion nesting exceeded\");",
      "1229:   return -1;",
      "1230:  }",
      "",
      "[Removed Lines]",
      "1220:  uint32_t soffset, offset = ms->offset;",
      "1223:  char *sbuf, *rbuf;",
      "1227:  if (recursion_level >= 20) {",
      "",
      "[Added Lines]",
      "1223:  uint32_t offset = ms->offset;",
      "1225:  file_pushbuf_t *pb;",
      "1227:  char *rbuf;",
      "1231:  if (recursion_level >= MAX_RECURSION_LEVEL) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1669:  case FILE_INDIRECT:",
      "1670:   if (offset == 0)",
      "1671:    return 0;",
      "1672:   if (nbytes < offset)",
      "1673:    return 0;",
      "1678:   rv = file_softmagic(ms, s + offset, nbytes - offset,",
      "1679:       recursion_level, BINTEST, text);",
      "1680:   if ((ms->flags & MAGIC_DEBUG) != 0)",
      "1681:    fprintf(stderr, \"indirect @offs=%u[%d]\\n\", offset, rv);",
      "1685:   if (rv == 1) {",
      "1686:    if ((ms->flags & (MAGIC_MIME|MAGIC_APPLE)) == 0 &&",
      "1687:        file_printf(ms, F(ms, m, \"%u\"), offset) == -1) {",
      "",
      "[Removed Lines]",
      "1674:   sbuf = ms->o.buf;",
      "1675:   soffset = ms->offset;",
      "1676:   ms->o.buf = NULL;",
      "1677:   ms->offset = 0;",
      "1682:   rbuf = ms->o.buf;",
      "1683:   ms->o.buf = sbuf;",
      "1684:   ms->offset = soffset;",
      "",
      "[Added Lines]",
      "1680:   if ((pb = file_push_buffer(ms)) == NULL)",
      "1681:    return -1;",
      "1689:   rbuf = file_pop_buffer(ms, pb);",
      "1690:   if (rbuf == NULL)",
      "1691:    return -1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1699:  case FILE_USE:",
      "1700:   if (nbytes < offset)",
      "1701:    return 0;",
      "1705:    flip = !flip;",
      "1706:   }",
      "1709:    return -1;",
      "1710:   }",
      "",
      "[Removed Lines]",
      "1702:   sbuf = m->value.s;",
      "1703:   if (*sbuf == '^') {",
      "1704:    sbuf++;",
      "1707:   if (file_magicfind(ms, sbuf, &ml) == -1) {",
      "1708:    file_error(ms, 0, \"cannot find entry `%s'\", sbuf);",
      "",
      "[Added Lines]",
      "1710:   rbuf = m->value.s;",
      "1711:   if (*rbuf == '^') {",
      "1712:    rbuf++;",
      "1715:   if (file_magicfind(ms, rbuf, &ml) == -1) {",
      "1716:    file_error(ms, 0, \"cannot find entry `%s'\", rbuf);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e96f86b5311572be1360ee0bb05d4926f8df3189",
      "candidate_info": {
        "commit_hash": "e96f86b5311572be1360ee0bb05d4926f8df3189",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/e96f86b5311572be1360ee0bb05d4926f8df3189",
        "files": [
          "src/funcs.c"
        ],
        "message": "Fix incorrect bounds check, from Alexander Cherepanov",
        "before_after_code_files": [
          "src/funcs.c||src/funcs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/funcs.c||src/funcs.c"
          ],
          "candidate": [
            "src/funcs.c||src/funcs.c"
          ]
        }
      },
      "candidate_diff": {
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.77 2014/11/28 02:46:39 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.78 2014/12/11 12:34:24 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "547:    continue;",
          "548:   }",
          "550:    break;",
          "",
          "[Removed Lines]",
          "549:   if (ptr >= eptr + 4)",
          "",
          "[Added Lines]",
          "549:   if (ptr >= eptr - 3)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6bf45271eb8e0e6577b92042ce2003ba998d1686",
      "candidate_info": {
        "commit_hash": "6bf45271eb8e0e6577b92042ce2003ba998d1686",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/6bf45271eb8e0e6577b92042ce2003ba998d1686",
        "files": [
          "src/softmagic.c"
        ],
        "message": "Don't bail if there was no error, buf could have been NULL on entry.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.201 2014/11/28 02:35:05 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.202 2014/11/28 02:46:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1700:    fprintf(stderr, \"indirect @offs=%u[%d]\\n\", offset, rv);",
          "1702:   rbuf = file_pop_buffer(ms, pb);",
          "1704:    return -1;",
          "1706:   if (rv == 1) {",
          "",
          "[Removed Lines]",
          "1703:   if (rbuf == NULL)",
          "",
          "[Added Lines]",
          "1703:   if (rbuf == NULL && ms->event_flags & EVENT_HAD_ERR)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "372d2361413ac29784a01511f215e44b7c468e39",
      "candidate_info": {
        "commit_hash": "372d2361413ac29784a01511f215e44b7c468e39",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/372d2361413ac29784a01511f215e44b7c468e39",
        "files": [
          "src/softmagic.c"
        ],
        "message": "centralize the byte swapping code.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.215 2015/05/21 18:25:29 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.216 2015/06/09 22:17:52 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63: private void cvt_64(union VALUETYPE *, const struct magic *);",
          "65: #define OFFSET_OOB(n, o, i) ((n) < (o) || (i) > ((n) - (o)))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66: #define BE64(p) (((uint64_t)(p)->hq[0]<<56)|((uint64_t)(p)->hq[1]<<48)| \\",
          "67:     ((uint64_t)(p)->hq[2]<<40)|((uint64_t)(p)->hq[3]<<32)| \\",
          "68:     ((uint64_t)(p)->hq[4]<<24)|((uint64_t)(p)->hq[5]<<16)| \\",
          "69:     ((uint64_t)(p)->hq[6]<<8)|((uint64_t)(p)->hq[7]))",
          "70: #define LE64(p) (((uint64_t)(p)->hq[7]<<56)|((uint64_t)(p)->hq[6]<<48)| \\",
          "71:     ((uint64_t)(p)->hq[5]<<40)|((uint64_t)(p)->hq[4]<<32)| \\",
          "72:     ((uint64_t)(p)->hq[3]<<24)|((uint64_t)(p)->hq[2]<<16)| \\",
          "73:     ((uint64_t)(p)->hq[1]<<8)|((uint64_t)(p)->hq[0]))",
          "74: #define LE32(p) (((uint32_t)(p)->hl[3]<<24)|((uint32_t)(p)->hl[2]<<16)| \\",
          "75:      ((uint32_t)(p)->hl[1]<<8)|((uint32_t)(p)->hl[0]))",
          "76: #define BE32(p) (((uint32_t)(p)->hl[0]<<24)|((uint32_t)(p)->hl[1]<<16)| \\",
          "77:      ((uint32_t)(p)->hl[2]<<8)|((uint32_t)(p)->hl[3]))",
          "78: #define ME32(p) (((uint32_t)(p)->hl[1]<<24)|((uint32_t)(p)->hl[0]<<16)| \\",
          "79:      ((uint32_t)(p)->hl[3]<<8)|((uint32_t)(p)->hl[2]))",
          "80: #define BE16(p) (((uint16_t)(p)->hs[0]<<8)|((uint16_t)(p)->hs[1]))",
          "81: #define LE16(p) (((uint16_t)(p)->hs[1]<<8)|((uint16_t)(p)->hs[0]))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "962:   return 1;",
          "963:  }",
          "964:  case FILE_BESHORT:",
          "966:   cvt_16(p, m);",
          "967:   return 1;",
          "968:  case FILE_BELONG:",
          "969:  case FILE_BEDATE:",
          "970:  case FILE_BELDATE:",
          "973:   cvt_32(p, m);",
          "974:   return 1;",
          "975:  case FILE_BEQUAD:",
          "976:  case FILE_BEQDATE:",
          "977:  case FILE_BEQLDATE:",
          "978:  case FILE_BEQWDATE:",
          "984:   cvt_64(p, m);",
          "985:   return 1;",
          "986:  case FILE_LESHORT:",
          "988:   cvt_16(p, m);",
          "989:   return 1;",
          "990:  case FILE_LELONG:",
          "991:  case FILE_LEDATE:",
          "992:  case FILE_LELDATE:",
          "995:   cvt_32(p, m);",
          "996:   return 1;",
          "997:  case FILE_LEQUAD:",
          "998:  case FILE_LEQDATE:",
          "999:  case FILE_LEQLDATE:",
          "1000:  case FILE_LEQWDATE:",
          "1006:   cvt_64(p, m);",
          "1007:   return 1;",
          "1008:  case FILE_MELONG:",
          "1009:  case FILE_MEDATE:",
          "1010:  case FILE_MELDATE:",
          "1013:   cvt_32(p, m);",
          "1014:   return 1;",
          "1015:  case FILE_FLOAT:",
          "1016:   cvt_float(p, m);",
          "1017:   return 1;",
          "1018:  case FILE_BEFLOAT:",
          "1021:   cvt_float(p, m);",
          "1022:   return 1;",
          "1023:  case FILE_LEFLOAT:",
          "1026:   cvt_float(p, m);",
          "1027:   return 1;",
          "1028:  case FILE_DOUBLE:",
          "1029:   cvt_double(p, m);",
          "1030:   return 1;",
          "1031:  case FILE_BEDOUBLE:",
          "1036:   cvt_double(p, m);",
          "1037:   return 1;",
          "1038:  case FILE_LEDOUBLE:",
          "1043:   cvt_double(p, m);",
          "1044:   return 1;",
          "1045:  case FILE_REGEX:",
          "",
          "[Removed Lines]",
          "965:   p->h = (short)((p->hs[0]<<8)|(p->hs[1]));",
          "971:   p->l = (int32_t)",
          "972:       ((p->hl[0]<<24)|(p->hl[1]<<16)|(p->hl[2]<<8)|(p->hl[3]));",
          "979:   p->q = (uint64_t)",
          "980:       (((uint64_t)p->hq[0]<<56)|((uint64_t)p->hq[1]<<48)|",
          "981:        ((uint64_t)p->hq[2]<<40)|((uint64_t)p->hq[3]<<32)|",
          "982:        ((uint64_t)p->hq[4]<<24)|((uint64_t)p->hq[5]<<16)|",
          "983:        ((uint64_t)p->hq[6]<<8)|((uint64_t)p->hq[7]));",
          "987:   p->h = (short)((p->hs[1]<<8)|(p->hs[0]));",
          "993:   p->l = (int32_t)",
          "994:       ((p->hl[3]<<24)|(p->hl[2]<<16)|(p->hl[1]<<8)|(p->hl[0]));",
          "1001:   p->q = (uint64_t)",
          "1002:       (((uint64_t)p->hq[7]<<56)|((uint64_t)p->hq[6]<<48)|",
          "1003:        ((uint64_t)p->hq[5]<<40)|((uint64_t)p->hq[4]<<32)|",
          "1004:        ((uint64_t)p->hq[3]<<24)|((uint64_t)p->hq[2]<<16)|",
          "1005:        ((uint64_t)p->hq[1]<<8)|((uint64_t)p->hq[0]));",
          "1011:   p->l = (int32_t)",
          "1012:       ((p->hl[1]<<24)|(p->hl[0]<<16)|(p->hl[3]<<8)|(p->hl[2]));",
          "1019:   p->l =  ((uint32_t)p->hl[0]<<24)|((uint32_t)p->hl[1]<<16)|",
          "1020:    ((uint32_t)p->hl[2]<<8) |((uint32_t)p->hl[3]);",
          "1024:   p->l =  ((uint32_t)p->hl[3]<<24)|((uint32_t)p->hl[2]<<16)|",
          "1025:    ((uint32_t)p->hl[1]<<8) |((uint32_t)p->hl[0]);",
          "1032:   p->q =  ((uint64_t)p->hq[0]<<56)|((uint64_t)p->hq[1]<<48)|",
          "1033:    ((uint64_t)p->hq[2]<<40)|((uint64_t)p->hq[3]<<32)|",
          "1034:    ((uint64_t)p->hq[4]<<24)|((uint64_t)p->hq[5]<<16)|",
          "1035:    ((uint64_t)p->hq[6]<<8) |((uint64_t)p->hq[7]);",
          "1039:   p->q =  ((uint64_t)p->hq[7]<<56)|((uint64_t)p->hq[6]<<48)|",
          "1040:    ((uint64_t)p->hq[5]<<40)|((uint64_t)p->hq[4]<<32)|",
          "1041:    ((uint64_t)p->hq[3]<<24)|((uint64_t)p->hq[2]<<16)|",
          "1042:    ((uint64_t)p->hq[1]<<8) |((uint64_t)p->hq[0]);",
          "",
          "[Added Lines]",
          "981:   p->h = (short)BE16(p);",
          "987:   p->l = (int32_t)BE32(p);",
          "994:   p->q = (uint64_t)BE64(p);",
          "998:   p->h = (short)LE16(p);",
          "1004:   p->l = (int32_t)LE32(p);",
          "1011:   p->q = (uint64_t)LE64(p);",
          "1017:   p->l = (int32_t)ME32(p);",
          "1024:   p->l = BE32(p);",
          "1028:   p->l = LE32(p);",
          "1035:   p->q = BE64(p);",
          "1039:   p->q = LE64(p);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1239:     off = q->h;",
          "1240:     break;",
          "1241:    case FILE_BESHORT:",
          "1243:     break;",
          "1244:    case FILE_LESHORT:",
          "1246:     break;",
          "1247:    case FILE_LONG:",
          "1248:     off = q->l;",
          "1249:     break;",
          "1250:    case FILE_BELONG:",
          "1251:    case FILE_BEID3:",
          "1254:     break;",
          "1255:    case FILE_LEID3:",
          "1256:    case FILE_LELONG:",
          "1259:     break;",
          "1260:    case FILE_MELONG:",
          "1263:     break;",
          "1264:    }",
          "1265:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "",
          "[Removed Lines]",
          "1242:     off = (short)((q->hs[0]<<8)|(q->hs[1]));",
          "1245:     off = (short)((q->hs[1]<<8)|(q->hs[0]));",
          "1252:     off = (int32_t)((q->hl[0]<<24)|(q->hl[1]<<16)|",
          "1253:        (q->hl[2]<<8)|(q->hl[3]));",
          "1257:     off = (int32_t)((q->hl[3]<<24)|(q->hl[2]<<16)|",
          "1258:        (q->hl[1]<<8)|(q->hl[0]));",
          "1261:     off = (int32_t)((q->hl[1]<<24)|(q->hl[0]<<16)|",
          "1262:        (q->hl[3]<<8)|(q->hl[2]));",
          "",
          "[Added Lines]",
          "1239:     off = (short)BE16(q);",
          "1242:     off = (short)LE16(q);",
          "1249:     off = (int32_t)BE32(q);",
          "1253:     off = (int32_t)LE32(q);",
          "1256:     off = (int32_t)ME32(q);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1413:   case FILE_BEID3:",
          "1414:    if (OFFSET_OOB(nbytes, offset, 4))",
          "1415:     return 0;",
          "1418:    if (off) {",
          "1419:     switch (m->in_op & FILE_OPS_MASK) {",
          "1420:     case FILE_OPAND:",
          "",
          "[Removed Lines]",
          "1416:    lhs = (p->hl[0] << 24) | (p->hl[1] << 16) |",
          "1417:        (p->hl[2] << 8) | p->hl[3];",
          "",
          "[Added Lines]",
          "1410:    lhs = BE32(p);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1451:   case FILE_LEID3:",
          "1452:    if (OFFSET_OOB(nbytes, offset, 4))",
          "1453:     return 0;",
          "1456:    if (off) {",
          "1457:     switch (m->in_op & FILE_OPS_MASK) {",
          "1458:     case FILE_OPAND:",
          "",
          "[Removed Lines]",
          "1454:    lhs = (p->hl[3] << 24) | (p->hl[2] << 16) |",
          "1455:        (p->hl[1] << 8) | p->hl[0];",
          "",
          "[Added Lines]",
          "1447:    lhs = LE32(p);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1488:   case FILE_MELONG:",
          "1489:    if (OFFSET_OOB(nbytes, offset, 4))",
          "1490:     return 0;",
          "1493:    if (off) {",
          "1494:     switch (m->in_op & FILE_OPS_MASK) {",
          "1495:     case FILE_OPAND:",
          "",
          "[Removed Lines]",
          "1491:    lhs = (p->hl[1] << 24) | (p->hl[0] << 16) |",
          "1492:        (p->hl[3] << 8) | p->hl[2];",
          "",
          "[Added Lines]",
          "1483:    lhs = ME32(p);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1565:   case FILE_LEID3:",
          "1566:   case FILE_BEID3:",
          "1567:    offset = ((((offset >>  0) & 0x7f) <<  0) |",
          "1571:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "1572:     fprintf(stderr, \"id3 offs=%u\\n\", offset);",
          "1573:    break;",
          "",
          "[Removed Lines]",
          "1568:      (((offset >>  8) & 0x7f) <<  7) |",
          "1569:      (((offset >> 16) & 0x7f) << 14) |",
          "1570:      (((offset >> 24) & 0x7f) << 21));",
          "",
          "[Added Lines]",
          "1559:       (((offset >>  8) & 0x7f) <<  7) |",
          "1560:       (((offset >> 16) & 0x7f) << 14) |",
          "1561:       (((offset >> 24) & 0x7f) << 21));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "91a5efbb98579b98c27dbaed01694e4bda3edc9e",
      "candidate_info": {
        "commit_hash": "91a5efbb98579b98c27dbaed01694e4bda3edc9e",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/91a5efbb98579b98c27dbaed01694e4bda3edc9e",
        "files": [
          "src/softmagic.c"
        ],
        "message": "- bytecnt needs to be adjusted by offset - always return true from mget() regardless if match() matched. Fixes   mime printing where we stopped matching the use magic because match   return 0, since if (print) *returnval = 1; did not execute for mime.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.214 2015/04/09 20:01:41 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.215 2015/05/21 18:25:29 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1107:     bytecnt = nbytes - offset;",
          "1109:    buf = RCAST(const char *, s) + offset;",
          "1112:    for (lines = linecnt, b = buf; lines && b < end &&",
          "1113:         ((b = CAST(const char *,",
          "",
          "[Removed Lines]",
          "1110:    end = last = RCAST(const char *, s) + bytecnt;",
          "",
          "[Added Lines]",
          "1110:    end = last = RCAST(const char *, s) + bytecnt + offset;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1708:       printed_something, need_separator, returnval);",
          "1709:   if (rv != 1)",
          "1713:  case FILE_NAME:",
          "1714:   if (ms->flags & MAGIC_NODESC)",
          "",
          "[Removed Lines]",
          "1711:   return rv;",
          "",
          "[Added Lines]",
          "1711:   return 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6713ca45e7757297381f4b4cdb9cf5e624a9ad36",
      "candidate_info": {
        "commit_hash": "6713ca45e7757297381f4b4cdb9cf5e624a9ad36",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/6713ca45e7757297381f4b4cdb9cf5e624a9ad36",
        "files": [
          "src/funcs.c"
        ],
        "message": "PR/454: Fix memory corruption when the continuation level jumps by more than 20 in a single step.",
        "before_after_code_files": [
          "src/funcs.c||src/funcs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/funcs.c||src/funcs.c"
          ],
          "candidate": [
            "src/funcs.c||src/funcs.c"
          ]
        }
      },
      "candidate_diff": {
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.80 2015/01/02 21:29:39 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.81 2015/05/28 19:26:59 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "416:  size_t len;",
          "418:  if (level >= ms->c.len) {",
          "420:   ms->c.li = CAST(struct level_info *, (ms->c.li == NULL) ?",
          "421:       malloc(len) :",
          "422:       realloc(ms->c.li, len));",
          "",
          "[Removed Lines]",
          "419:   len = (ms->c.len += 20) * sizeof(*ms->c.li);",
          "",
          "[Added Lines]",
          "419:   len = (ms->c.len = 20 + level) * sizeof(*ms->c.li);",
          "",
          "---------------"
        ]
      }
    }
  ]
}