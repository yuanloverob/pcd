{
  "cve_id": "CVE-2021-33035",
  "cve_desc": "Apache OpenOffice opens dBase/DBF documents and shows the contents as spreadsheets. DBF are database files with data organized in fields. When reading DBF data the size of certain fields is not checked: the data is just copied into local variables. A carefully crafted document could overflow the allocated space, leading to the execution of arbitrary code by altering the contents of the program stack. This issue affects Apache OpenOffice up to and including version 4.1.10",
  "repo": "apache/openoffice",
  "patch_hash": "efddaef0151af3be16078cc4d88c6bae0f911e56",
  "patch_info": {
    "commit_hash": "efddaef0151af3be16078cc4d88c6bae0f911e56",
    "repo": "apache/openoffice",
    "commit_url": "https://github.com/apache/openoffice/commit/efddaef0151af3be16078cc4d88c6bae0f911e56#diff-ea66e734dd358922aba12ad4ba39c96bdc6cbde587d07dbc63d04daa0a30e90f",
    "files": [
      "main/connectivity/source/drivers/dbase/DTable.cxx"
    ],
    "message": "add useful checks",
    "before_after_code_files": [
      "main/connectivity/source/drivers/dbase/DTable.cxx||main/connectivity/source/drivers/dbase/DTable.cxx"
    ]
  },
  "patch_diff": {
    "main/connectivity/source/drivers/dbase/DTable.cxx||main/connectivity/source/drivers/dbase/DTable.cxx": [
      "File: main/connectivity/source/drivers/dbase/DTable.cxx -> main/connectivity/source/drivers/dbase/DTable.cxx",
      "--- Hunk 1 ---",
      "[Context before]",
      "896:         else if ( DataType::TIMESTAMP == nType )",
      "897:         {",
      "898:             sal_Int32 nDate = 0,nTime = 0;",
      "899:    memcpy(&nDate, pData, 4);",
      "900:             memcpy(&nTime, pData+ 4, 4);",
      "901:             if ( !nDate && !nTime )",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "899:             OSL_ENSURE(nLen == 8, \"Invalid length for date field\");",
      "900:             if (nLen != 8) {",
      "901:                 return false;",
      "902:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "911:         }",
      "912:         else if ( DataType::INTEGER == nType )",
      "913:         {",
      "914:             sal_Int32 nValue = 0;",
      "915:    memcpy(&nValue, pData, nLen);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "918:             OSL_ENSURE(nLen == 4, \"Invalid length for integer field\");",
      "919:             if (nLen != 4) {",
      "920:                 return false;",
      "921:             }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "918:         else if ( DataType::DOUBLE == nType )",
      "919:         {",
      "920:             double d = 0.0;",
      "921:             if (getBOOL((*aIter)->getPropertyValue(OMetaConnection::getPropMap().getNameByIndex(PROPERTY_ID_ISCURRENCY)))) // Currency wird gesondert behandelt",
      "922:             {",
      "923:                 sal_Int64 nValue = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "929:             OSL_ENSURE(nLen == 8, \"Invalid length for double field\");",
      "930:             if (nLen != 8) {",
      "931:                 return false;",
      "932:             }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "959:    {",
      "960:     case DataType::DATE:",
      "961:     {",
      "962:      if (aStr.Len() != nLen)",
      "963:      {",
      "964:       (_rRow->get())[i]->setNull();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "974:                     OSL_ENSURE(nLen == 8, \"Invalid length for date field\");",
      "975:                     if (nLen != 8) {",
      "976:                         return false;",
      "977:                     }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "978:     break;",
      "979:     case DataType::BIT:",
      "980:     {",
      "981:      sal_Bool b;",
      "982:      switch (* ((const char *)pData))",
      "983:      {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "997:                     OSL_ENSURE(nLen == 1, \"Invalid length for bit field\");",
      "998:                     if (nLen != 1) {",
      "999:                         return false;",
      "1000:                     }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1873:    {",
      "1874:                 case DataType::TIMESTAMP:",
      "1875:                     {",
      "1876:                         sal_Int32 nJulianDate = 0, nJulianTime = 0;",
      "1877:                         lcl_CalcJulDate(nJulianDate,nJulianTime,rRow.get()[nPos]->getValue());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1896:                         OSL_ENSURE(nLen == 8, \"Invalid length for timestamp field\");",
      "1897:                         if (nLen != 8) {",
      "1898:                             bHadError = true;",
      "1899:                             break;",
      "1900:                         }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1882:                     break;",
      "1883:     case DataType::DATE:",
      "1884:     {",
      "1885:      ::com::sun::star::util::Date aDate;",
      "1886:      if(rRow.get()[nPos]->getValue().getTypeKind() == DataType::DOUBLE)",
      "1887:       aDate = ::dbtools::DBTypeConversion::toDate(rRow.get()[nPos]->getValue().getDouble());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1910:                     OSL_ENSURE(nLen == 8, \"Invalid length for date field\");",
      "1911:                     if (nLen != 8) {",
      "1912:                         bHadError = true;",
      "1913:                         break;",
      "1914:                     }",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1900:     } break;",
      "1901:                 case DataType::INTEGER:",
      "1902:                     {",
      "1903:                         sal_Int32 nValue = rRow.get()[nPos]->getValue();",
      "1904:                         memcpy(pData,&nValue,nLen);",
      "1905:                     }",
      "1906:                     break;",
      "1907:                 case DataType::DOUBLE:",
      "1908:                     {",
      "1909:                         const double d = rRow.get()[nPos]->getValue();",
      "1910:                         m_pColumns->getByIndex(i) >>= xCol;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1933:                         OSL_ENSURE(nLen == 4, \"Invalid length for integer field\");",
      "1934:                         if (nLen != 4) {",
      "1935:                             bHadError = true;",
      "1936:                             break;",
      "1937:                         }",
      "1944:                         OSL_ENSURE(nLen == 8, \"Invalid length for double field\");",
      "1945:                         if (nLen != 8) {",
      "1946:                             bHadError = true;",
      "1947:                             break;",
      "1948:                         }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1958:      }",
      "1959:     } break;",
      "1960:     case DataType::BIT:",
      "1962:      break;",
      "1963:                 case DataType::LONGVARBINARY:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2001:                     OSL_ENSURE(nLen == 1, \"Invalid length for bit field\");",
      "2002:                     if (nLen != 1) {",
      "2003:                         bHadError = true;",
      "2004:                         break;",
      "2005:                     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "35b5b9b3098f8dc3233b4333b247e736baa89fe5",
      "candidate_info": {
        "commit_hash": "35b5b9b3098f8dc3233b4333b247e736baa89fe5",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/35b5b9b3098f8dc3233b4333b247e736baa89fe5",
        "files": [
          "extras/l10n/source/de/localize.sdf"
        ],
        "message": "Use correct icon in German help",
        "before_after_code_files": [
          "extras/l10n/source/de/localize.sdf||extras/l10n/source/de/localize.sdf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "extras/l10n/source/de/localize.sdf||extras/l10n/source/de/localize.sdf": [
          "File: extras/l10n/source/de/localize.sdf -> extras/l10n/source/de/localize.sdf",
          "--- Hunk 1 ---",
          "[Context before]",
          "18251: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help hd_id3151184 70   0 de So bewegen Sie eine \u00dcberschrift im Dokument nach oben oder unten:    20130618 17:22:18",
          "18252: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id0915200809400790    0 de Stellen Sie sicher, dass alle \u00dcberschriftsebenen im Navigator angezeigt werden. (Dies ist die Voreinstellung.) Wie Sie die Ebene einer \u00dcberschrift ver\u00e4ndern, finden Sie weiter unten.    20130618 17:22:18",
          "18253: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3151206 71   0 de Klicken Sie in der Symbolleiste\\<emph\\>Standard\\</emph\\> auf das Symbol \\<emph\\>Navigator\\</emph\\> \\<image id=\\\"img_id5211883\\\" src=\\\"res/commandimagelist/sc_navigator.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id5211883\\\"\\>Symbol\\</alt\\>\\</image\\>, um den \\<emph\\>Navigator\\</emph\\> aufzurufen.    20130618 17:22:18",
          "18255: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3155089 74   0 de F\u00fchren Sie einen der folgenden Schritte durch:    20130618 17:22:18",
          "18256: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3155114 63   0 de Ziehen Sie die \u00dcberschrift an eine neue Position in der \\<emph\\>Navigator\\</emph\\>-Liste.    20130618 17:22:18",
          "18257: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3155139 75   0 de Klicken Sie auf eine \u00dcberschrift im \\<emph\\>Navigator\\</emph\\> und dann auf das Symbol \\<emph\\>Kapitel hoch\\</emph\\> \\<image id=\\\"img_id4217546\\\" src=\\\"sw/imglst/sc20174.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id4217546\\\"\\>Symbol\\</alt\\>\\</image\\> bzw. \\<emph\\>Kapitel hinunter\\</emph\\> \\<image id=\\\"img_id6505788\\\" src=\\\"sw/imglst/sc20171.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id6505788\\\"\\>Symbol\\</alt\\>\\</image\\>.    20130618 17:22:18",
          "",
          "[Removed Lines]",
          "18254: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3151238 72   0 de Klicken Sie im \\<emph\\>Navigator\\</emph\\>auf das Symbol \\<emph\\>Inhaltsansicht umschalten\\</emph\\> \\<image id=\\\"img_id3156338\\\" src=\\\"sw/imglst/sc20244.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id3156338\\\"\\>Symbol\\</alt\\>\\</image\\>.    20130618 17:22:18",
          "",
          "[Added Lines]",
          "18254: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3151238 72   0 de Klicken Sie im \\<emph\\>Navigator\\</emph\\>auf das Symbol \\<emph\\>Inhaltsansicht umschalten\\</emph\\> \\<image id=\\\"img_id3156338\\\" src=\\\"sw/imglst/sc20234.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id3156338\\\"\\>Symbol\\</alt\\>\\</image\\>.    20130618 17:22:18",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20775: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3146874 9   0 de Auswahlbox an- und ausschalten    20130618 17:22:18",
          "20776: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help hd_id3146891 10   0 de Inhaltsansicht umschalten    20130618 17:22:18",
          "20777: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3145596 11   0 de \\<ahelp hid=\\\"HID_NAVI_TBX8\\\"\\>Schaltet zwischen der Anzeige aller Navigatorkategorien und der ausgew\u00e4hlten Kategorie um.\\</ahelp\\>    20130618 17:22:18",
          "20779: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3156067 12   0 de Inhaltsansicht umschalten    20130618 17:22:18",
          "20780: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3155932 78   0 de Um \u00dcberschriften und den damit verbundenen Text in Ihrem Dokument schnell neu zu ordnen, w\u00e4hlen Sie die Kategorie \"\u00dcberschriften\" in der Liste und klicken dann auf das Symbol \\<emph\\>Inhaltsansicht\\</emph\\>.    20130618 17:22:18",
          "20781: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help hd_id3155381 13   0 de Merker setzen    20130618 17:22:18",
          "",
          "[Removed Lines]",
          "20778: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3154133    0 de \\<image id=\\\"img_id3154140\\\" src=\\\"sw/imglst/sc20244.png\\\" width=\\\"0.2228in\\\" height=\\\"0.2228in\\\"\\>\\<alt id=\\\"alt_id3154140\\\"\\>Symbol\\</alt\\>\\</image\\>    20130618 17:22:18",
          "",
          "[Added Lines]",
          "20778: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3154133    0 de \\<image id=\\\"img_id3154140\\\" src=\\\"sw/imglst/sc20234.png\\\" width=\\\"0.2228in\\\" height=\\\"0.2228in\\\"\\>\\<alt id=\\\"alt_id3154140\\\"\\>Symbol\\</alt\\>\\</image\\>    20130618 17:22:18",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "981cc00d1f300eb6d6bff450184693e9c88cca3b",
      "candidate_info": {
        "commit_hash": "981cc00d1f300eb6d6bff450184693e9c88cca3b",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/981cc00d1f300eb6d6bff450184693e9c88cca3b",
        "files": [
          "main/cui/source/dialogs/about.src"
        ],
        "message": "Change HTTP to HTTPS in link\n\nLine 72 : Text = \"http://www.openoffice.org/welcome/credits.html\" should probably be\n              Text = \"https://www.openoffice.org/welcome/credits.html\".\n              Added letter \"s\"to \"http\"",
        "before_after_code_files": [
          "main/cui/source/dialogs/about.src||main/cui/source/dialogs/about.src"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/cui/source/dialogs/about.src||main/cui/source/dialogs/about.src": [
          "File: main/cui/source/dialogs/about.src -> main/cui/source/dialogs/about.src",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:     FixedText RID_CUI_ABOUT_FTXT_WELCOME_LINK",
          "70:     {",
          "71:         Left = TRUE ;",
          "73:     };",
          "74:     String RID_CUI_ABOUT_STR_COPYRIGHT_VENDOR",
          "75:     {",
          "",
          "[Removed Lines]",
          "72:         Text = \"http://www.openoffice.org/welcome/credits.html\";",
          "",
          "[Added Lines]",
          "72:         Text = \"https://www.openoffice.org/welcome/credits.html\";",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "61648e64dbad707bec7ae07d193302e2ddc90bbd",
      "candidate_info": {
        "commit_hash": "61648e64dbad707bec7ae07d193302e2ddc90bbd",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/61648e64dbad707bec7ae07d193302e2ddc90bbd",
        "files": [
          "main/vcl/source/window/splitwin.cxx"
        ],
        "message": "Make grip in split window more visible, minor cleanup\n\n(cherry picked from commit 649f2b9f21645385e84c375f644cdcf6f1c28418)",
        "before_after_code_files": [
          "main/vcl/source/window/splitwin.cxx||main/vcl/source/window/splitwin.cxx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/vcl/source/window/splitwin.cxx||main/vcl/source/window/splitwin.cxx": [
          "File: main/vcl/source/window/splitwin.cxx -> main/vcl/source/window/splitwin.cxx",
          "--- Hunk 1 ---",
          "[Context before]",
          "277: void SplitWindow::ImplDrawBorderLine( SplitWindow* pWin )",
          "278: {",
          "314: }",
          "",
          "[Removed Lines]",
          "279:     if ( pWin->mbFadeOut || pWin->mbAutoHide )",
          "280:     {",
          "281:         const StyleSettings& rStyleSettings = pWin->GetSettings().GetStyleSettings();",
          "282:         long     nDX = pWin->mnDX;",
          "283:         long     nDY = pWin->mnDY;",
          "285:         if ( pWin->meAlign == WINDOWALIGN_LEFT )",
          "286:         {",
          "287:             pWin->SetLineColor( rStyleSettings.GetShadowColor() );",
          "288:             pWin->DrawLine( Point( nDX-SPLITWIN_SPLITSIZEEXLN-1, 0 ), Point( nDX-SPLITWIN_SPLITSIZEEXLN-1, nDY-3 ) );",
          "289:             pWin->SetLineColor( rStyleSettings.GetLightColor() );",
          "290:             pWin->DrawLine( Point( nDX-SPLITWIN_SPLITSIZEEXLN, 1 ), Point( nDX-SPLITWIN_SPLITSIZEEXLN, nDY-4 ) );",
          "291:         }",
          "292:         else if ( pWin->meAlign == WINDOWALIGN_RIGHT )",
          "293:         {",
          "294:             pWin->SetLineColor( rStyleSettings.GetShadowColor() );",
          "295:             pWin->DrawLine( Point( SPLITWIN_SPLITSIZEEXLN-1, 0 ), Point( SPLITWIN_SPLITSIZEEXLN-1, nDY-3 ) );",
          "296:             pWin->SetLineColor( rStyleSettings.GetLightColor() );",
          "297:             pWin->DrawLine( Point( SPLITWIN_SPLITSIZEEXLN, 1 ), Point( SPLITWIN_SPLITSIZEEXLN, nDY-4 ) );",
          "298:         }",
          "299:         else if ( pWin->meAlign == WINDOWALIGN_TOP )",
          "300:         {",
          "301:             pWin->SetLineColor( rStyleSettings.GetShadowColor() );",
          "302:             pWin->DrawLine( Point( 0, nDY-SPLITWIN_SPLITSIZEEXLN-1 ), Point( nDX-3, nDY-SPLITWIN_SPLITSIZEEXLN-1 ) );",
          "303:             pWin->SetLineColor( rStyleSettings.GetLightColor() );",
          "304:             pWin->DrawLine( Point( 1, nDY-SPLITWIN_SPLITSIZEEXLN ), Point( nDX-4, nDY-SPLITWIN_SPLITSIZEEXLN ) );",
          "305:         }",
          "306:         else if ( pWin->meAlign == WINDOWALIGN_BOTTOM )",
          "307:         {",
          "308:             pWin->SetLineColor( rStyleSettings.GetShadowColor() );",
          "309:             pWin->DrawLine( Point( 0, SPLITWIN_SPLITSIZEEXLN-1 ), Point( nDX-3, SPLITWIN_SPLITSIZEEXLN-1 ) );",
          "310:             pWin->SetLineColor( rStyleSettings.GetLightColor() );",
          "311:             pWin->DrawLine( Point( 1, SPLITWIN_SPLITSIZEEXLN ), Point( nDX-4, SPLITWIN_SPLITSIZEEXLN ) );",
          "312:         }",
          "313:     }",
          "",
          "[Added Lines]",
          "279:  if ( pWin->mbFadeOut || pWin->mbAutoHide )",
          "280:  {",
          "281:   const StyleSettings& rStyleSettings = pWin->GetSettings().GetStyleSettings();",
          "282:   long     nDX = pWin->mnDX;",
          "283:   long     nDY = pWin->mnDY;",
          "285:   if ( pWin->meAlign == WINDOWALIGN_LEFT )",
          "286:   {",
          "287:    pWin->SetLineColor( rStyleSettings.GetShadowColor() );",
          "288:    pWin->DrawLine( Point( nDX-SPLITWIN_SPLITSIZEEXLN-1, 0 ), Point( nDX-SPLITWIN_SPLITSIZEEXLN-1, nDY-3 ) );",
          "289:    pWin->SetLineColor( rStyleSettings.GetLightColor() );",
          "290:    pWin->DrawLine( Point( nDX-SPLITWIN_SPLITSIZEEXLN, 1 ), Point( nDX-SPLITWIN_SPLITSIZEEXLN, nDY-4 ) );",
          "291:   }",
          "292:   else if ( pWin->meAlign == WINDOWALIGN_RIGHT )",
          "293:   {",
          "294:    pWin->SetLineColor( rStyleSettings.GetShadowColor() );",
          "295:    pWin->DrawLine( Point( SPLITWIN_SPLITSIZEEXLN-1, 0 ), Point( SPLITWIN_SPLITSIZEEXLN-1, nDY-3 ) );",
          "296:    pWin->SetLineColor( rStyleSettings.GetLightColor() );",
          "297:    pWin->DrawLine( Point( SPLITWIN_SPLITSIZEEXLN, 1 ), Point( SPLITWIN_SPLITSIZEEXLN, nDY-4 ) );",
          "298:   }",
          "299:   else if ( pWin->meAlign == WINDOWALIGN_TOP )",
          "300:   {",
          "301:    pWin->SetLineColor( rStyleSettings.GetShadowColor() );",
          "302:    pWin->DrawLine( Point( 0, nDY-SPLITWIN_SPLITSIZEEXLN-1 ), Point( nDX-3, nDY-SPLITWIN_SPLITSIZEEXLN-1 ) );",
          "303:    pWin->SetLineColor( rStyleSettings.GetLightColor() );",
          "304:    pWin->DrawLine( Point( 1, nDY-SPLITWIN_SPLITSIZEEXLN ), Point( nDX-4, nDY-SPLITWIN_SPLITSIZEEXLN ) );",
          "305:   }",
          "306:   else if ( pWin->meAlign == WINDOWALIGN_BOTTOM )",
          "307:   {",
          "308:    pWin->SetLineColor( rStyleSettings.GetShadowColor() );",
          "309:    pWin->DrawLine( Point( 0, SPLITWIN_SPLITSIZEEXLN-1 ), Point( nDX-3, SPLITWIN_SPLITSIZEEXLN-1 ) );",
          "310:    pWin->SetLineColor( rStyleSettings.GetLightColor() );",
          "311:    pWin->DrawLine( Point( 1, SPLITWIN_SPLITSIZEEXLN ), Point( nDX-4, SPLITWIN_SPLITSIZEEXLN ) );",
          "312:   }",
          "313:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "803:     pItems[i].mnSplitSize = pSet->mnSplitSize;",
          "804:     if ( bDown )",
          "805:     {",
          "807:      if ( pItems[i].mnSplitPos+pItems[i].mnSplitSize > nMaxPos )",
          "808:       pItems[i].mnSplitSize = nMaxPos-pItems[i].mnSplitPos;",
          "809:     }",
          "",
          "[Removed Lines]",
          "806:      pItems[i].mnSplitPos  = nPos+pItems[i].mnPixSize;",
          "",
          "[Added Lines]",
          "806:      pItems[i].mnSplitPos = nPos+pItems[i].mnPixSize;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1501:  }",
          "1502:  else if ( meAlign == WINDOWALIGN_BOTTOM )",
          "1503:  {",
          "1505:   Point aPos = GetPosPixel();",
          "1506:   aPos.Y() -= nDelta;",
          "1507:   aSize.Height() += nDelta;",
          "",
          "[Removed Lines]",
          "1504:         maDragRect.Top() += nDelta;",
          "",
          "[Added Lines]",
          "1504:   maDragRect.Top() += nDelta;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1514:  }",
          "1515:  else // meAlign == WINDOWALIGN_RIGHT",
          "1516:  {",
          "1518:   Point aPos = GetPosPixel();",
          "1519:   aPos.X() -= nDelta;",
          "1520:   aSize.Width() += nDelta;",
          "",
          "[Removed Lines]",
          "1517:         maDragRect.Left() += nDelta;",
          "",
          "[Added Lines]",
          "1517:   maDragRect.Left() += nDelta;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1958:   {",
          "1959:    if ( !pSVData->maCtrlData.mpSplitHPinImgList )",
          "1960:    {",
          "1963:     {",
          "1964:      Color aNonAlphaMask( 0x00, 0x00, 0xFF );",
          "1965:      pSVData->maCtrlData.mpSplitHPinImgList = new ImageList(4);",
          "1966:      pSVData->maCtrlData.mpSplitHPinImgList->InsertFromHorizontalBitmap",
          "1967:       ( ResId( SV_RESID_BITMAP_SPLITHPIN, *pResMgr ), 4, &aNonAlphaMask );",
          "1968:     }",
          "1970:    pImageList = pSVData->maCtrlData.mpSplitHPinImgList;",
          "1971:   }",
          "1972:   else",
          "1973:   {",
          "1974:    if ( !pSVData->maCtrlData.mpSplitVPinImgList )",
          "1975:    {",
          "1977:     pSVData->maCtrlData.mpSplitVPinImgList = new ImageList(4);",
          "1979:     {",
          "1980:      Color aNonAlphaMask( 0x00, 0x00, 0xFF );",
          "1981:      pSVData->maCtrlData.mpSplitVPinImgList->InsertFromHorizontalBitmap",
          "",
          "[Removed Lines]",
          "1961:                 ResMgr* pResMgr = ImplGetResMgr();",
          "1962:                 if( pResMgr )",
          "1969:           }",
          "1976:                 ResMgr* pResMgr = ImplGetResMgr();",
          "1978:                 if( pResMgr )",
          "",
          "[Added Lines]",
          "1961:     ResMgr* pResMgr = ImplGetResMgr();",
          "1962:     if( pResMgr )",
          "1969:    }",
          "1976:     ResMgr* pResMgr = ImplGetResMgr();",
          "1978:     if( pResMgr )",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1983:     }",
          "1984:    }",
          "1985:    pImageList = pSVData->maCtrlData.mpSplitVPinImgList;",
          "1989:   sal_uInt16 nId;",
          "",
          "[Removed Lines]",
          "1986:                 }",
          "",
          "[Added Lines]",
          "1986:   }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2021: void SplitWindow::ImplDrawFadeArrow( const Point& rPt, sal_Bool bHorz, sal_Bool bLeft )",
          "2022: {",
          "2028:     Color aCol;",
          "2029:     if( !bHorz )",
          "",
          "[Removed Lines]",
          "2023:     const StyleSettings& rStyleSettings = GetSettings().GetStyleSettings();",
          "2025:     int x( rPt.X() );",
          "2026:     int y( rPt.Y() );",
          "",
          "[Added Lines]",
          "2023:  const StyleSettings& rStyleSettings = GetSettings().GetStyleSettings();",
          "2025:  int x( rPt.X() );",
          "2026:  int y( rPt.Y() );",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2095:         {",
          "2097:             DrawPixel( Point(i, y), rStyleSettings.GetDarkShadowColor() );",
          "2100:             DrawPixel( Point(i, y+1), rStyleSettings.GetShadowColor() );",
          "2106:             i+=4;",
          "2107:         }",
          "2108:         ImplDrawFadeArrow( Point( i+3, y), bHorz, bLeft );",
          "",
          "[Removed Lines]",
          "2098:             DrawPixel( Point(i+1, y), rStyleSettings.GetShadowColor() );",
          "2101:             DrawPixel( Point(i+1, y+1), rStyleSettings.GetFaceColor() );",
          "2102:             DrawPixel( Point(i+2, y+1), Color(COL_WHITE) );",
          "2104:             DrawPixel( Point(i+1, y+2), Color(COL_WHITE) );",
          "2105:             DrawPixel( Point(i+2, y+2), Color(COL_WHITE) );",
          "",
          "[Added Lines]",
          "2098:             DrawPixel( Point(i+1, y), rStyleSettings.GetDarkShadowColor() );",
          "2101:             DrawPixel( Point(i+1, y+1), rStyleSettings.GeShadowColor() );",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2118:         {",
          "2120:             DrawPixel( Point(x, i), rStyleSettings.GetDarkShadowColor() );",
          "2123:             DrawPixel( Point(x, i+1), rStyleSettings.GetShadowColor() );",
          "2129:             i+=4;",
          "2130:         }",
          "2131:         ImplDrawFadeArrow( Point( x, i+3), bHorz, bLeft );",
          "",
          "[Removed Lines]",
          "2121:             DrawPixel( Point(x+1, i), rStyleSettings.GetShadowColor() );",
          "2124:             DrawPixel( Point(x+1, i+1), rStyleSettings.GetFaceColor() );",
          "2125:             DrawPixel( Point(x+2, i+1), Color(COL_WHITE) );",
          "2127:             DrawPixel( Point(x+1, i+2), Color(COL_WHITE) );",
          "2128:             DrawPixel( Point(x+2, i+2), Color(COL_WHITE) );",
          "",
          "[Added Lines]",
          "2117:             DrawPixel( Point(x+1, i), rStyleSettings.GetDarkShadowColor() );",
          "2120:             DrawPixel( Point(x+1, i+1), rStyleSettings.GetShadowColor() );",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2155:   if ( !bInPaint )",
          "2156:    Erase( aTempRect );",
          "2159:  }",
          "2160: }",
          "",
          "[Removed Lines]",
          "2158:         ImplDrawGrip( aTempRect, (meAlign == WINDOWALIGN_TOP) || (meAlign == WINDOWALIGN_BOTTOM), bLeft );",
          "",
          "[Added Lines]",
          "2150:   ImplDrawGrip( aTempRect, (meAlign == WINDOWALIGN_TOP) || (meAlign == WINDOWALIGN_BOTTOM), bLeft );",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2184:   if ( !bInPaint )",
          "2185:    Erase( aTempRect );",
          "2188:  }",
          "2189: }",
          "2192: void SplitWindow::ImplStartSplit( const MouseEvent& rMEvt )",
          "2193: {",
          "2231:             pSplitItem   = &(mpSplitSet->mpItems[mnSplitPos]);",
          "2232:             maDragRect.Left() = pSplitItem->mnLeft;",
          "",
          "[Removed Lines]",
          "2187:         ImplDrawGrip( aTempRect, (meAlign == WINDOWALIGN_TOP) || (meAlign == WINDOWALIGN_BOTTOM), bLeft );",
          "2194:     Point aMousePosPixel = rMEvt.GetPosPixel();",
          "2195:     mnSplitTest = ImplTestSplit( this, aMousePosPixel, mnMouseOff, &mpSplitSet, mnSplitPos );",
          "2197:     if ( mnSplitTest && !(mnSplitTest & SPLIT_NOSPLIT) )",
          "2198:     {",
          "2199:         ImplSplitItem* pSplitItem;",
          "2200:         long   nCurMaxSize;",
          "2201:         sal_uInt16   nTemp;",
          "2202:         sal_Bool   bDown;",
          "2203:         sal_Bool   bPropSmaller;",
          "2205:         mnMouseModifier = rMEvt.GetModifier();",
          "2206:         if ( !(mnMouseModifier & KEY_SHIFT) || (mnSplitPos+1 >= mpSplitSet->mnItems) )",
          "2207:             bPropSmaller = sal_False;",
          "2208:         else",
          "2209:             bPropSmaller = sal_True;",
          "2212:         StartSplit();",
          "2214:         if ( mnMaxSize )",
          "2215:             nCurMaxSize = mnMaxSize;",
          "2216:         else",
          "2217:         {",
          "2218:             Size aSize = GetParent()->GetOutputSizePixel();",
          "2219:             if ( mbHorz )",
          "2220:                 nCurMaxSize = aSize.Height();",
          "2221:             else",
          "2222:                 nCurMaxSize = aSize.Width();",
          "2223:         }",
          "2225:         if ( mpSplitSet->mpItems )",
          "2226:         {",
          "2227:             bDown = sal_True;",
          "2228:             if ( (mpSplitSet == mpMainSet) && mbBottomRight )",
          "2229:                 bDown = sal_False;",
          "",
          "[Added Lines]",
          "2179:   ImplDrawGrip( aTempRect, (meAlign == WINDOWALIGN_TOP) || (meAlign == WINDOWALIGN_BOTTOM), bLeft );",
          "2186:  Point aMousePosPixel = rMEvt.GetPosPixel();",
          "2187:  mnSplitTest = ImplTestSplit( this, aMousePosPixel, mnMouseOff, &mpSplitSet, mnSplitPos );",
          "2189:  if ( mnSplitTest && !(mnSplitTest & SPLIT_NOSPLIT) )",
          "2190:  {",
          "2191:   ImplSplitItem* pSplitItem;",
          "2192:   long   nCurMaxSize;",
          "2193:   sal_uInt16   nTemp;",
          "2194:   sal_Bool   bDown;",
          "2195:   sal_Bool   bPropSmaller;",
          "2197:   mnMouseModifier = rMEvt.GetModifier();",
          "2198:   if ( !(mnMouseModifier & KEY_SHIFT) || (mnSplitPos+1 >= mpSplitSet->mnItems) )",
          "2199:    bPropSmaller = sal_False;",
          "2200:   else",
          "2201:    bPropSmaller = sal_True;",
          "2204:   StartSplit();",
          "2206:   if ( mnMaxSize )",
          "2207:    nCurMaxSize = mnMaxSize;",
          "2208:   else",
          "2209:   {",
          "2210:    Size aSize = GetParent()->GetOutputSizePixel();",
          "2211:    if ( mbHorz )",
          "2212:     nCurMaxSize = aSize.Height();",
          "2213:    else",
          "2214:     nCurMaxSize = aSize.Width();",
          "2215:   }",
          "2217:   if ( mpSplitSet->mpItems )",
          "2218:   {",
          "2219:    bDown = sal_True;",
          "2220:    if ( (mpSplitSet == mpMainSet) && mbBottomRight )",
          "2221:     bDown = sal_False;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2323:                     nTemp++;",
          "2324:                 }",
          "2325:             }",
          "2329:             maDragRect.Left() = mnLeftBorder;",
          "2330:             maDragRect.Top() = mnTopBorder;",
          "2331:             maDragRect.Right() = mnDX-mnRightBorder-1;",
          "",
          "[Removed Lines]",
          "2326:         }",
          "2327:         else",
          "2328:         {",
          "",
          "[Added Lines]",
          "2318:   }",
          "2319:   else",
          "2320:   {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2344:                 else",
          "2345:                     maDragRect.Right() += nCurMaxSize-mnDX-mnLeftBorder;",
          "2346:             }",
          "2370:   PointerStyle eStyle = POINTER_ARROW;",
          "2376:   Pointer aPtr( eStyle );",
          "2377:   SetPointer( aPtr );",
          "2379: }",
          "",
          "[Removed Lines]",
          "2347:         }",
          "2349:         StartTracking();",
          "2351:         mbDragFull = (GetSettings().GetStyleSettings().GetDragFullOptions() & DRAGFULL_OPTION_SPLIT) != 0;",
          "2353:         ImplSplitMousePos( aMousePosPixel );",
          "2355:         if ( !mbDragFull )",
          "2356:             ImplDrawSplitTracking( this, aMousePosPixel );",
          "2357:         else",
          "2358:         {",
          "2359:             ImplSplitItem* pItems = mpSplitSet->mpItems;",
          "2360:             sal_uInt16   nItems = mpSplitSet->mnItems;",
          "2361:             mpLastSizes = new long[nItems*2];",
          "2362:             for ( sal_uInt16 i = 0; i < nItems; i++ )",
          "2363:             {",
          "2364:                 mpLastSizes[i*2]   = pItems[i].mnSize;",
          "2365:                 mpLastSizes[i*2+1] = pItems[i].mnPixSize;",
          "2366:             }",
          "2367:         }",
          "2368:         mnMStartPos = mnMSplitPos;",
          "2371:         if ( mnSplitTest & SPLIT_HORZ )",
          "2372:             eStyle = POINTER_HSPLIT;",
          "2373:         else if ( mnSplitTest & SPLIT_VERT )",
          "2374:             eStyle = POINTER_VSPLIT;",
          "2378:     }",
          "",
          "[Added Lines]",
          "2339:   }",
          "2341:   StartTracking();",
          "2343:   mbDragFull = (GetSettings().GetStyleSettings().GetDragFullOptions() & DRAGFULL_OPTION_SPLIT) != 0;",
          "2345:   ImplSplitMousePos( aMousePosPixel );",
          "2347:   if ( !mbDragFull )",
          "2348:    ImplDrawSplitTracking( this, aMousePosPixel );",
          "2349:   else",
          "2350:   {",
          "2351:    ImplSplitItem* pItems = mpSplitSet->mpItems;",
          "2352:    sal_uInt16   nItems = mpSplitSet->mnItems;",
          "2353:    mpLastSizes = new long[nItems*2];",
          "2354:    for ( sal_uInt16 i = 0; i < nItems; i++ )",
          "2355:    {",
          "2356:     mpLastSizes[i*2]   = pItems[i].mnSize;",
          "2357:     mpLastSizes[i*2+1] = pItems[i].mnPixSize;",
          "2358:    }",
          "2359:   }",
          "2360:   mnMStartPos = mnMSplitPos;",
          "2363:   if ( mnSplitTest & SPLIT_HORZ )",
          "2364:    eStyle = POINTER_HSPLIT;",
          "2365:   else if ( mnSplitTest & SPLIT_VERT )",
          "2366:    eStyle = POINTER_VSPLIT;",
          "2370:  }",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2472:  if ( mbAutoHideDown || mbFadeInDown || mbFadeOutDown )",
          "2473:   StartTracking();",
          "2474:  else",
          "2476: }",
          "",
          "[Removed Lines]",
          "2475:         ImplStartSplit( rMEvt );",
          "",
          "[Added Lines]",
          "2467:   ImplStartSplit( rMEvt );",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2701: long SplitWindow::PreNotify( NotifyEvent& rNEvt )",
          "2702: {",
          "2705:     if( (rNEvt.GetType() == EVENT_MOUSEMOVE) && (pMouseEvt = rNEvt.GetMouseEvent()) != NULL )",
          "2706:     {",
          "",
          "[Removed Lines]",
          "2703:     const MouseEvent* pMouseEvt = NULL;",
          "",
          "[Added Lines]",
          "2695:  const MouseEvent* pMouseEvt = NULL;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2735:   ImplDrawBorder( this );",
          "2737:  ImplDrawBorderLine( this );",
          "2739:  ImplDrawFadeIn( sal_True );",
          "2740:  ImplDrawAutoHide( sal_True );",
          "",
          "[Removed Lines]",
          "2738:     ImplDrawFadeOut( sal_True );",
          "",
          "[Added Lines]",
          "2730:  ImplDrawFadeOut( sal_True );",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "2812:    XubString aStr;",
          "2816:    if ( rHEvt.GetMode() & HELPMODE_BALLOON )",
          "2817:     Help::ShowBalloon( this, aHelpRect.Center(), aHelpRect, aStr );",
          "2818:    else",
          "",
          "[Removed Lines]",
          "2813:             ResMgr* pResMgr = ImplGetResMgr();",
          "2814:             if( pResMgr )",
          "2815:                 aStr = XubString( ResId( nHelpResId, *pResMgr ) );",
          "",
          "[Added Lines]",
          "2805:    ResMgr* pResMgr = ImplGetResMgr();",
          "2806:    if( pResMgr )",
          "2807:     aStr = XubString( ResId( nHelpResId, *pResMgr ) );",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "2900:  pItem->mnSize = nSize;",
          "2901:  pItem->mnId  = nId;",
          "2902:  pItem->mnBits = nBits;",
          "2906:  if ( pWindow )",
          "2907:  {",
          "",
          "[Removed Lines]",
          "2903:     pItem->mnMinSize=-1;",
          "2904:     pItem->mnMaxSize=-1;",
          "",
          "[Added Lines]",
          "2895:  pItem->mnMinSize=-1;",
          "2896:  pItem->mnMaxSize=-1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "044ca5aa9b607be6c884da670b2ed585c945d324",
      "candidate_info": {
        "commit_hash": "044ca5aa9b607be6c884da670b2ed585c945d324",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/044ca5aa9b607be6c884da670b2ed585c945d324",
        "files": [
          "main/officecfg/registry/data/org/openoffice/Office/Security.xcu"
        ],
        "message": "Consider more multimedia file extensions safe\n\nCloses bug #128453",
        "before_after_code_files": [
          "main/officecfg/registry/data/org/openoffice/Office/Security.xcu||main/officecfg/registry/data/org/openoffice/Office/Security.xcu"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/officecfg/registry/data/org/openoffice/Office/Security.xcu||main/officecfg/registry/data/org/openoffice/Office/Security.xcu": [
          "File: main/officecfg/registry/data/org/openoffice/Office/Security.xcu -> main/officecfg/registry/data/org/openoffice/Office/Security.xcu",
          "--- Hunk 1 ---",
          "[Context before]",
          "739:     <value>mml</value>",
          "740:    </prop>",
          "741:   </node>",
          "742:  </node>",
          "743:  <node oor:name=\"Hyperlinks\">",
          "744:   <prop oor:name=\"Open\" oor:type=\"xs:int\">",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "742:   <node oor:name=\"m144\" oor:op=\"replace\">",
          "743:    <prop oor:name=\"Extension\" oor:type=\"xs:string\">",
          "744:     <value>wpl</value>",
          "745:    </prop>",
          "746:   </node>",
          "747:   <node oor:name=\"m145\" oor:op=\"replace\">",
          "748:    <prop oor:name=\"Extension\" oor:type=\"xs:string\">",
          "749:     <value>m3u</value>",
          "750:    </prop>",
          "751:   </node>",
          "752:   <node oor:name=\"m146\" oor:op=\"replace\">",
          "753:    <prop oor:name=\"Extension\" oor:type=\"xs:string\">",
          "754:     <value>ogg</value>",
          "755:    </prop>",
          "756:   </node>",
          "757:   <node oor:name=\"m147\" oor:op=\"replace\">",
          "758:    <prop oor:name=\"Extension\" oor:type=\"xs:string\">",
          "759:     <value>flac</value>",
          "760:    </prop>",
          "761:   </node>",
          "762:   <node oor:name=\"m148\" oor:op=\"replace\">",
          "763:    <prop oor:name=\"Extension\" oor:type=\"xs:string\">",
          "764:     <value>m4a</value>",
          "765:    </prop>",
          "766:   </node>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f991e94cc7a7da38997c4ff57ca4d1f2f345a903",
      "candidate_info": {
        "commit_hash": "f991e94cc7a7da38997c4ff57ca4d1f2f345a903",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/f991e94cc7a7da38997c4ff57ca4d1f2f345a903",
        "files": [
          "main/solenv/inc/version.lst"
        ],
        "message": "Update version.lst",
        "before_after_code_files": [
          "main/solenv/inc/version.lst||main/solenv/inc/version.lst"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/solenv/inc/version.lst||main/solenv/inc/version.lst": [
          "File: main/solenv/inc/version.lst -> main/solenv/inc/version.lst",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: OOOBASEVERSIONMAJOR=4",
          "23: OOOBASEVERSIONMINOR=1",
          "26: OOOBASEVERSIONDAY=1",
          "27: OOOBASEVERSIONMONTH=1",
          "",
          "[Removed Lines]",
          "24: OOOBASEVERSIONMICRO=9",
          "",
          "[Added Lines]",
          "24: OOOBASEVERSIONMICRO=12",
          "",
          "---------------"
        ]
      }
    }
  ]
}