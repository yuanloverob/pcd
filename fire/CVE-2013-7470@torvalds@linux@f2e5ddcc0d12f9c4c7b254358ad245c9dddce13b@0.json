{
  "cve_id": "CVE-2013-7470",
  "cve_desc": "cipso_v4_validate in include/net/cipso_ipv4.h in the Linux kernel before 3.11.7, when CONFIG_NETLABEL is disabled, allows attackers to cause a denial of service (infinite loop and crash), as demonstrated by icmpsic, a different vulnerability than CVE-2013-0310.",
  "repo": "torvalds/linux",
  "patch_hash": "f2e5ddcc0d12f9c4c7b254358ad245c9dddce13b",
  "patch_info": {
    "commit_hash": "f2e5ddcc0d12f9c4c7b254358ad245c9dddce13b",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/f2e5ddcc0d12f9c4c7b254358ad245c9dddce13b",
    "files": [
      "include/net/cipso_ipv4.h"
    ],
    "message": "net: fix cipso packet validation when !NETLABEL\n\nWhen CONFIG_NETLABEL is disabled, the cipso_v4_validate() function could loop\nforever in the main loop if opt[opt_iter +1] == 0, this will causing a kernel\ncrash in an SMP system, since the CPU executing this function will\nstall /not respond to IPIs.\n\nThis problem can be reproduced by running the IP Stack Integrity Checker\n(http://isic.sourceforge.net) using the following command on a Linux machine\nconnected to DUT:\n\n\"icmpsic -s rand -d <DUT IP address> -r 123456\"\nwait (1-2 min)\n\nSigned-off-by: Seif Mazareeb <seif@marvell.com>\nAcked-by: Paul Moore <paul@paul-moore.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
    "before_after_code_files": [
      "include/net/cipso_ipv4.h||include/net/cipso_ipv4.h"
    ]
  },
  "patch_diff": {
    "include/net/cipso_ipv4.h||include/net/cipso_ipv4.h": [
      "File: include/net/cipso_ipv4.h -> include/net/cipso_ipv4.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "290:  unsigned char err_offset = 0;",
      "291:  u8 opt_len = opt[1];",
      "292:  u8 opt_iter;",
      "294:  if (opt_len < 8) {",
      "295:   err_offset = 1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "293:  u8 tag_len;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "302:  }",
      "304:  for (opt_iter = 6; opt_iter < opt_len;) {",
      "306:    err_offset = opt_iter + 1;",
      "307:    goto out;",
      "308:   }",
      "310:  }",
      "312: out:",
      "",
      "[Removed Lines]",
      "305:   if (opt[opt_iter + 1] > (opt_len - opt_iter)) {",
      "309:   opt_iter += opt[opt_iter + 1];",
      "",
      "[Added Lines]",
      "306:   tag_len = opt[opt_iter + 1];",
      "307:   if ((tag_len == 0) || (opt[opt_iter + 1] > (opt_len - opt_iter))) {",
      "311:   opt_iter += tag_len;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "10ae76faa97cb3e1020dcf2cdae6b1ea8359abab",
      "candidate_info": {
        "commit_hash": "10ae76faa97cb3e1020dcf2cdae6b1ea8359abab",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/10ae76faa97cb3e1020dcf2cdae6b1ea8359abab",
        "files": [
          "include/net/cipso_ipv4.h"
        ],
        "message": "cipso: cleanup cipso_v4_translate() when !CONFIG_NETLABEL\n\nDon't needlessly recompute 'opt[opt_iter + 1]' as we already have it\nstored in 'tag_len'.\n\nSigned-off-by: Paul Moore <pmoore@redhat.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "include/net/cipso_ipv4.h||include/net/cipso_ipv4.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "include/net/cipso_ipv4.h||include/net/cipso_ipv4.h"
          ],
          "candidate": [
            "include/net/cipso_ipv4.h||include/net/cipso_ipv4.h"
          ]
        }
      },
      "candidate_diff": {
        "include/net/cipso_ipv4.h||include/net/cipso_ipv4.h": [
          "File: include/net/cipso_ipv4.h -> include/net/cipso_ipv4.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "304:  for (opt_iter = 6; opt_iter < opt_len;) {",
          "305:   tag_len = opt[opt_iter + 1];",
          "307:    err_offset = opt_iter + 1;",
          "308:    goto out;",
          "309:   }",
          "",
          "[Removed Lines]",
          "306:   if ((tag_len == 0) || (opt[opt_iter + 1] > (opt_len - opt_iter))) {",
          "",
          "[Added Lines]",
          "306:   if ((tag_len == 0) || (tag_len > (opt_len - opt_iter))) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}