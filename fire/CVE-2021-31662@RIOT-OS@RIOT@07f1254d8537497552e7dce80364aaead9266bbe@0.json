{
  "cve_id": "CVE-2021-31662",
  "cve_desc": "RIOT-OS 2021.01 before commit 07f1254d8537497552e7dce80364aaead9266bbe contains a buffer overflow which could allow attackers to obtain sensitive information.",
  "repo": "RIOT-OS/RIOT",
  "patch_hash": "07f1254d8537497552e7dce80364aaead9266bbe",
  "patch_info": {
    "commit_hash": "07f1254d8537497552e7dce80364aaead9266bbe",
    "repo": "RIOT-OS/RIOT",
    "commit_url": "https://github.com/RIOT-OS/RIOT/commit/07f1254d8537497552e7dce80364aaead9266bbe",
    "files": [
      "sys/uri_parser/uri_parser.c",
      "tests/unittests/tests-uri_parser/tests-uri_parser.c"
    ],
    "message": "Merge pull request #15930 from nmeum/pr/uri_parser_scheme\n\nuri_parser: check if uri is long enough to even contain a ://",
    "before_after_code_files": [
      "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c",
      "tests/unittests/tests-uri_parser/tests-uri_parser.c||tests/unittests/tests-uri_parser/tests-uri_parser.c"
    ]
  },
  "patch_diff": {
    "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c": [
      "File: sys/uri_parser/uri_parser.c -> sys/uri_parser/uri_parser.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "55:     result->scheme_len = p - uri;",
      "61:         return p + 3;",
      "",
      "[Removed Lines]",
      "58:     if ((p[1] != '\\0') && (p[2] != '\\0') && (p[1] == '/') && (p[2] == '/')) {",
      "",
      "[Added Lines]",
      "58:     if (((uri_end - p) > 2) && (p[1] == '/') && (p[2] == '/')) {",
      "",
      "---------------"
    ],
    "tests/unittests/tests-uri_parser/tests-uri_parser.c||tests/unittests/tests-uri_parser/tests-uri_parser.c": [
      "File: tests/unittests/tests-uri_parser/tests-uri_parser.c -> tests/unittests/tests-uri_parser/tests-uri_parser.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "401:         \"./this:that\",",
      "402:         \"\",",
      "403:         0),",
      "404: };",
      "406: static char _failure_msg[VEC_MSG_LEN];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "404:     VEC(\"pP://\",",
      "405:         true,",
      "406:         \"pP\",",
      "407:         \"\",",
      "408:         \"\",",
      "409:         \"\",",
      "410:         \"\",",
      "411:         \"\",",
      "412:         \"\",",
      "413:         \"\",",
      "414:         0),",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "333572e09148dc7dea674e1d47c3a4b5fa5e7047",
      "candidate_info": {
        "commit_hash": "333572e09148dc7dea674e1d47c3a4b5fa5e7047",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/333572e09148dc7dea674e1d47c3a4b5fa5e7047",
        "files": [
          "sys/uri_parser/uri_parser.c",
          "tests/unittests/tests-uri_parser/tests-uri_parser.c"
        ],
        "message": "uri_parser: check if uri is long enough to even contain a ://\n\nBefore attempting to access these characters. This fixes an\nout-of-bounds read on the provided URI buffer.",
        "before_after_code_files": [
          "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c",
          "tests/unittests/tests-uri_parser/tests-uri_parser.c||tests/unittests/tests-uri_parser/tests-uri_parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/15930"
        ],
        "olp_code_files": {
          "patch": [
            "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c",
            "tests/unittests/tests-uri_parser/tests-uri_parser.c||tests/unittests/tests-uri_parser/tests-uri_parser.c"
          ],
          "candidate": [
            "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c",
            "tests/unittests/tests-uri_parser/tests-uri_parser.c||tests/unittests/tests-uri_parser/tests-uri_parser.c"
          ]
        }
      },
      "candidate_diff": {
        "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c": [
          "File: sys/uri_parser/uri_parser.c -> sys/uri_parser/uri_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:     result->scheme_len = p - uri;",
          "61:         return p + 3;",
          "",
          "[Removed Lines]",
          "58:     if ((p[1] != '\\0') && (p[2] != '\\0') && (p[1] == '/') && (p[2] == '/')) {",
          "",
          "[Added Lines]",
          "58:     if (((uri_end - p) > 2) && (p[1] == '/') && (p[2] == '/')) {",
          "",
          "---------------"
        ],
        "tests/unittests/tests-uri_parser/tests-uri_parser.c||tests/unittests/tests-uri_parser/tests-uri_parser.c": [
          "File: tests/unittests/tests-uri_parser/tests-uri_parser.c -> tests/unittests/tests-uri_parser/tests-uri_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "401:         \"./this:that\",",
          "402:         \"\",",
          "403:         0),",
          "404: };",
          "406: static char _failure_msg[VEC_MSG_LEN];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "404:     VEC(\"pP://\",",
          "405:         true,",
          "406:         \"pP\",",
          "407:         \"\",",
          "408:         \"\",",
          "409:         \"\",",
          "410:         \"\",",
          "411:         \"\",",
          "412:         \"\",",
          "413:         \"\",",
          "414:         0),",
          "",
          "---------------"
        ]
      }
    }
  ]
}