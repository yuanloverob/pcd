{
  "cve_id": "CVE-2017-12987",
  "cve_desc": "The IEEE 802.11 parser in tcpdump before 4.9.2 has a buffer over-read in print-802_11.c:parse_elements().",
  "repo": "the-tcpdump-group/tcpdump",
  "patch_hash": "99798bd9a41bd3d03fdc1e949810a38967f20ed3",
  "patch_info": {
    "commit_hash": "99798bd9a41bd3d03fdc1e949810a38967f20ed3",
    "repo": "the-tcpdump-group/tcpdump",
    "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/99798bd9a41bd3d03fdc1e949810a38967f20ed3",
    "files": [
      "print-802_11.c",
      "tests/TESTLIST",
      "tests/ieee802.11_tim_ie_oobr.out",
      "tests/ieee802.11_tim_ie_oobr.pcap"
    ],
    "message": "CVE-2017-12987/IEEE 802.11: Fix processing of TIM IE.\n\nThe arguments to memcpy() were completely wrong.\n\nThis fixes a buffer over-read discovered by Kamil Frankowicz.\n\nAdd a test using the capture file supplied by Brian 'geeknik' Carpenter.",
    "before_after_code_files": [
      "print-802_11.c||print-802_11.c"
    ]
  },
  "patch_diff": {
    "print-802_11.c||print-802_11.c": [
      "File: print-802_11.c -> print-802_11.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1189:    offset += 3;",
      "1190:    length -= 3;",
      "1194:    offset += tim.length - 3;",
      "1195:    length -= tim.length - 3;",
      "",
      "[Removed Lines]",
      "1192:    memcpy(tim.bitmap, p + (tim.length - 3),",
      "1193:        (tim.length - 3));",
      "",
      "[Added Lines]",
      "1192:    memcpy(tim.bitmap, p + offset + 3, tim.length - 3);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5edf405d7ed9fc92f4f43e8a3d44baa4c6387562",
      "candidate_info": {
        "commit_hash": "5edf405d7ed9fc92f4f43e8a3d44baa4c6387562",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/5edf405d7ed9fc92f4f43e8a3d44baa4c6387562",
        "files": [
          "print-802_11.c",
          "tests/TESTLIST",
          "tests/ieee802.11_rates_oobr.out",
          "tests/ieee802.11_rates_oobr.pcap"
        ],
        "message": "CVE-2017-13008/IEEE 802.11: Fix TIM bitmap copy to copy from p + offset.\n\noffset has already been advanced to point to the bitmap; we shouldn't\nadd the amount to advance again.\n\nThis fixes a buffer over-read discovered by Brian 'geeknik' Carpenter.\n\nAdd a test using the capture file supplied by the reporter(s).\n\nWhile we're at it, remove some redundant tests - we've already checked,\nbefore the case statement, whether we have captured the entire\ninformation element and whether the entire information element is\npresent in the on-the-wire packet; in the cases for particular IEs, we\nonly need to make sure we don't go past the end of the IE.",
        "before_after_code_files": [
          "print-802_11.c||print-802_11.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-802_11.c||print-802_11.c"
          ],
          "candidate": [
            "print-802_11.c||print-802_11.c"
          ]
        }
      },
      "candidate_diff": {
        "print-802_11.c||print-802_11.c": [
          "File: print-802_11.c -> print-802_11.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1039:    if (ssid.length != 0) {",
          "1040:     if (ssid.length > sizeof(ssid.ssid) - 1)",
          "1041:      return 0;",
          "1046:     memcpy(&ssid.ssid, p + offset, ssid.length);",
          "1047:     offset += ssid.length;",
          "1048:     length -= ssid.length;",
          "",
          "[Removed Lines]",
          "1042:     if (!ND_TTEST2(*(p + offset), ssid.length))",
          "1043:      return 0;",
          "1044:     if (length < ssid.length)",
          "1045:      return 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1068:     if (challenge.length >",
          "1069:         sizeof(challenge.text) - 1)",
          "1070:      return 0;",
          "1075:     memcpy(&challenge.text, p + offset,",
          "1076:         challenge.length);",
          "1077:     offset += challenge.length;",
          "",
          "[Removed Lines]",
          "1071:     if (!ND_TTEST2(*(p + offset), challenge.length))",
          "1072:      return 0;",
          "1073:     if (length < challenge.length)",
          "1074:      return 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1097:    if (rates.length != 0) {",
          "1098:     if (rates.length > sizeof rates.rate)",
          "1099:      return 0;",
          "1104:     memcpy(&rates.rate, p + offset, rates.length);",
          "1105:     offset += rates.length;",
          "1106:     length -= rates.length;",
          "",
          "[Removed Lines]",
          "1100:     if (!ND_TTEST2(*(p + offset), rates.length))",
          "1101:      return 0;",
          "1102:     if (length < rates.length)",
          "1103:      return 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1189:    offset += 3;",
          "1190:    length -= 3;",
          "1193:    offset += tim.length - 3;",
          "1194:    length -= tim.length - 3;",
          "",
          "[Removed Lines]",
          "1192:    memcpy(tim.bitmap, p + offset + 3, tim.length - 3);",
          "",
          "[Added Lines]",
          "1180:    memcpy(tim.bitmap, p + offset, tim.length - 3);",
          "",
          "---------------"
        ]
      }
    }
  ]
}