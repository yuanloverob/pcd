{
  "cve_id": "CVE-2023-24832",
  "cve_desc": "A null pointer dereference bug in Hermes prior to commit 5cae9f72975cf0e5a62b27fdd8b01f103e198708 could have been used by an attacker to crash an Hermes runtime where the EnableHermesInternal config option was set to true. Note that this is only exploitable in cases where Hermes is used to execute untrusted JavaScript. Hence, most React Native applications are not affected.",
  "repo": "facebook/hermes",
  "patch_hash": "5cae9f72975cf0e5a62b27fdd8b01f103e198708",
  "patch_info": {
    "commit_hash": "5cae9f72975cf0e5a62b27fdd8b01f103e198708",
    "repo": "facebook/hermes",
    "commit_url": "https://github.com/facebook/hermes/commit/5cae9f72975cf0e5a62b27fdd8b01f103e198708",
    "files": [
      "include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h",
      "lib/VM/JSLib/HermesInternal.cpp",
      "test/hermes/regress-hermes-internal-get-lazy-function-location.js"
    ],
    "message": "Avoid accessing the DebugInfo for BCProviderLazy\n\nSummary: Fixes CVE-2023-24832 by avoiding accessing the DebugInfo for lazy CodeBlocks.\n\nReviewed By: mattbfb\n\nDifferential Revision: D42688370\n\nfbshipit-source-id: fc7eb4168b1f21549cbfd080a9e010c6d8609256",
    "before_after_code_files": [
      "include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h||include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h",
      "lib/VM/JSLib/HermesInternal.cpp||lib/VM/JSLib/HermesInternal.cpp",
      "test/hermes/regress-hermes-internal-get-lazy-function-location.js||test/hermes/regress-hermes-internal-get-lazy-function-location.js"
    ]
  },
  "patch_diff": {
    "include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h||include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h": [
      "File: include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h -> include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "221:   void createDebugInfo() override {",
      "223:   }",
      "225:  public:",
      "",
      "[Removed Lines]",
      "222:     llvm_unreachable(\"Accessing debug info from a lazy module\");",
      "",
      "[Added Lines]",
      "222:     hermes_fatal(\"Accessing debug info from a lazy module\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "234:   }",
      "236:   StringTableEntry getStringTableEntry(uint32_t index) const override {",
      "238:   }",
      "240:   const uint8_t *getBytecode(uint32_t) const override {",
      "242:   }",
      "244:   llvh::ArrayRef<hbc::HBCExceptionHandlerInfo> getExceptionTable(",
      "245:       uint32_t) const override {",
      "247:   }",
      "249:   const hbc::DebugOffsets *getDebugOffsets(uint32_t) const override {",
      "251:   }",
      "253:   bool isFunctionLazy(uint32_t) const override {",
      "",
      "[Removed Lines]",
      "237:     llvm_unreachable(\"Accessing string table from a lazy module\");",
      "241:     llvm_unreachable(\"Accessing bytecode from a lazy module\");",
      "246:     llvm_unreachable(\"Accessing exception info from a lazy module\");",
      "250:     llvm_unreachable(\"Accessing debug offsets from a lazy module\");",
      "",
      "[Added Lines]",
      "237:     hermes_fatal(\"Accessing string table from a lazy module\");",
      "241:     hermes_fatal(\"Accessing bytecode from a lazy module\");",
      "246:     hermes_fatal(\"Accessing exception info from a lazy module\");",
      "250:     hermes_fatal(\"Accessing debug offsets from a lazy module\");",
      "",
      "---------------"
    ],
    "lib/VM/JSLib/HermesInternal.cpp||lib/VM/JSLib/HermesInternal.cpp": [
      "File: lib/VM/JSLib/HermesInternal.cpp -> lib/VM/JSLib/HermesInternal.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "574:     const CodeBlock *codeBlock,",
      "575:     OptValue<hbc::DebugSourceLocation> location) {",
      "576:   RuntimeModule *runtimeModule = codeBlock->getRuntimeModule();",
      "585:     }",
      "586:   }",
      "587:   return HermesValue::encodeUndefinedValue();",
      "",
      "[Removed Lines]",
      "577:   if (location) {",
      "578:     auto debugInfo = runtimeModule->getBytecode()->getDebugInfo();",
      "579:     return StringPrimitive::createEfficient(",
      "580:         runtime, debugInfo->getFilenameByID(location->filenameId));",
      "581:   } else {",
      "582:     llvh::StringRef sourceURL = runtimeModule->getSourceURL();",
      "583:     if (!sourceURL.empty()) {",
      "584:       return StringPrimitive::createEfficient(runtime, sourceURL);",
      "",
      "[Added Lines]",
      "577:   if (!runtimeModule->getBytecode()->isLazy()) {",
      "580:     if (location) {",
      "581:       auto debugInfo = runtimeModule->getBytecode()->getDebugInfo();",
      "582:       return StringPrimitive::createEfficient(",
      "583:           runtime, debugInfo->getFilenameByID(location->filenameId));",
      "584:     } else {",
      "585:       llvh::StringRef sourceURL = runtimeModule->getSourceURL();",
      "586:       if (!sourceURL.empty()) {",
      "587:         return StringPrimitive::createEfficient(runtime, sourceURL);",
      "588:       }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "803: }",
      "804: #endif // HERMES_ENABLE_FUZZILLI",
      "806: Handle<JSObject> createHermesInternalObject(",
      "807:     Runtime &runtime,",
      "808:     const JSLibFlags &flags) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "810: static CallResult<HermesValue>",
      "811: hermesInternalIsLazy(void *, Runtime &runtime, NativeArgs args) {",
      "812:   auto callable = args.dyncastArg<Callable>(0);",
      "813:   if (!callable) {",
      "814:     return HermesValue::encodeBoolValue(false);",
      "815:   }",
      "817:   auto codeBlock = getLeafCodeBlock(callable, runtime);",
      "818:   if (!codeBlock) {",
      "820:     return HermesValue::encodeBoolValue(false);",
      "821:   }",
      "823:   RuntimeModule *runtimeModule = codeBlock->getRuntimeModule();",
      "824:   return HermesValue::encodeBoolValue(",
      "825:       runtimeModule && runtimeModule->getBytecode()->isLazy());",
      "826: }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "912:     defineInternMethod(",
      "913:         P::copyDataProperties, hermesBuiltinCopyDataProperties, 3);",
      "914:     defineInternMethodAndSymbol(\"isProxy\", hermesInternalIsProxy);",
      "915:     defineInternMethod(P::drainJobs, hermesInternalDrainJobs);",
      "916:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "937:     defineInternMethodAndSymbol(\"isLazy\", hermesInternalIsLazy);",
      "",
      "---------------"
    ],
    "test/hermes/regress-hermes-internal-get-lazy-function-location.js||test/hermes/regress-hermes-internal-get-lazy-function-location.js": [
      "File: test/hermes/regress-hermes-internal-get-lazy-function-location.js -> test/hermes/regress-hermes-internal-get-lazy-function-location.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11: \"use strict\";",
      "14: print(HermesInternal.isLazy(print));",
      "18: print(HermesInternal.isLazy(10));",
      "21: function lazyFunc() {}",
      "23: print(HermesInternal.isLazy(lazyFunc));",
      "26: print(JSON.stringify(HermesInternal.getFunctionLocation(lazyFunc)));",
      "29: lazyFunc();",
      "31: print(HermesInternal.isLazy(lazyFunc));",
      "34: print(JSON.stringify(HermesInternal.getFunctionLocation(lazyFunc)));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d67375cd0aceed75d1feca0deeaa6c7e6353b863",
      "candidate_info": {
        "commit_hash": "d67375cd0aceed75d1feca0deeaa6c7e6353b863",
        "repo": "facebook/hermes",
        "commit_url": "https://github.com/facebook/hermes/commit/d67375cd0aceed75d1feca0deeaa6c7e6353b863",
        "files": [
          "include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h",
          "lib/VM/JSLib/HermesInternal.cpp",
          "test/hermes/regress-hermes-internal-get-lazy-function-location.js"
        ],
        "message": "Avoid accessing the DebugInfo for BCProviderLazy\n\nSummary:\nFixes CVE-2023-24832 by avoiding accessing the DebugInfo for lazy CodeBlocks.\n\nOriginal Author: jpporto@meta.com\nOriginal Git: 5cae9f72975cf0e5a62b27fdd8b01f103e198708\n\nOriginal Reviewed By: mattbfb\n\nOriginal Revision: D42688370\n\nReviewed By: tmikov\n\nDifferential Revision: D44771048\n\nfbshipit-source-id: 7493976ef88c446f44d91ab073e3ecf506c6163c",
        "before_after_code_files": [
          "include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h||include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h",
          "lib/VM/JSLib/HermesInternal.cpp||lib/VM/JSLib/HermesInternal.cpp",
          "test/hermes/regress-hermes-internal-get-lazy-function-location.js||test/hermes/regress-hermes-internal-get-lazy-function-location.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h||include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h",
            "lib/VM/JSLib/HermesInternal.cpp||lib/VM/JSLib/HermesInternal.cpp",
            "test/hermes/regress-hermes-internal-get-lazy-function-location.js||test/hermes/regress-hermes-internal-get-lazy-function-location.js"
          ],
          "candidate": [
            "include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h||include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h",
            "lib/VM/JSLib/HermesInternal.cpp||lib/VM/JSLib/HermesInternal.cpp",
            "test/hermes/regress-hermes-internal-get-lazy-function-location.js||test/hermes/regress-hermes-internal-get-lazy-function-location.js"
          ]
        }
      },
      "candidate_diff": {
        "include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h||include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h": [
          "File: include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h -> include/hermes/BCGen/HBC/BytecodeProviderFromSrc.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "221:   void createDebugInfo() override {",
          "223:   }",
          "225:  public:",
          "",
          "[Removed Lines]",
          "222:     llvm_unreachable(\"Accessing debug info from a lazy module\");",
          "",
          "[Added Lines]",
          "222:     hermes_fatal(\"Accessing debug info from a lazy module\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "234:   }",
          "236:   StringTableEntry getStringTableEntry(uint32_t index) const override {",
          "238:   }",
          "240:   const uint8_t *getBytecode(uint32_t) const override {",
          "242:   }",
          "244:   llvh::ArrayRef<hbc::HBCExceptionHandlerInfo> getExceptionTable(",
          "245:       uint32_t) const override {",
          "247:   }",
          "249:   const hbc::DebugOffsets *getDebugOffsets(uint32_t) const override {",
          "251:   }",
          "253:   bool isFunctionLazy(uint32_t) const override {",
          "",
          "[Removed Lines]",
          "237:     llvm_unreachable(\"Accessing string table from a lazy module\");",
          "241:     llvm_unreachable(\"Accessing bytecode from a lazy module\");",
          "246:     llvm_unreachable(\"Accessing exception info from a lazy module\");",
          "250:     llvm_unreachable(\"Accessing debug offsets from a lazy module\");",
          "",
          "[Added Lines]",
          "237:     hermes_fatal(\"Accessing string table from a lazy module\");",
          "241:     hermes_fatal(\"Accessing bytecode from a lazy module\");",
          "246:     hermes_fatal(\"Accessing exception info from a lazy module\");",
          "250:     hermes_fatal(\"Accessing debug offsets from a lazy module\");",
          "",
          "---------------"
        ],
        "lib/VM/JSLib/HermesInternal.cpp||lib/VM/JSLib/HermesInternal.cpp": [
          "File: lib/VM/JSLib/HermesInternal.cpp -> lib/VM/JSLib/HermesInternal.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "570:     const CodeBlock *codeBlock,",
          "571:     OptValue<hbc::DebugSourceLocation> location) {",
          "572:   RuntimeModule *runtimeModule = codeBlock->getRuntimeModule();",
          "581:     }",
          "582:   }",
          "583:   return HermesValue::encodeUndefinedValue();",
          "",
          "[Removed Lines]",
          "573:   if (location) {",
          "574:     auto debugInfo = runtimeModule->getBytecode()->getDebugInfo();",
          "575:     return StringPrimitive::createEfficient(",
          "576:         runtime, debugInfo->getFilenameByID(location->filenameId));",
          "577:   } else {",
          "578:     llvh::StringRef sourceURL = runtimeModule->getSourceURL();",
          "579:     if (!sourceURL.empty()) {",
          "580:       return StringPrimitive::createEfficient(runtime, sourceURL);",
          "",
          "[Added Lines]",
          "573:   if (!runtimeModule->getBytecode()->isLazy()) {",
          "576:     if (location) {",
          "577:       auto debugInfo = runtimeModule->getBytecode()->getDebugInfo();",
          "578:       return StringPrimitive::createEfficient(",
          "579:           runtime, debugInfo->getFilenameByID(location->filenameId));",
          "580:     } else {",
          "581:       llvh::StringRef sourceURL = runtimeModule->getSourceURL();",
          "582:       if (!sourceURL.empty()) {",
          "583:         return StringPrimitive::createEfficient(runtime, sourceURL);",
          "584:       }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "799: }",
          "800: #endif // HERMES_ENABLE_FUZZILLI",
          "802: Handle<JSObject> createHermesInternalObject(",
          "803:     Runtime &runtime,",
          "804:     const JSLibFlags &flags) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "806: static CallResult<HermesValue>",
          "807: hermesInternalIsLazy(void *, Runtime &runtime, NativeArgs args) {",
          "808:   auto callable = args.dyncastArg<Callable>(0);",
          "809:   if (!callable) {",
          "810:     return HermesValue::encodeBoolValue(false);",
          "811:   }",
          "813:   auto codeBlock = getLeafCodeBlock(callable, runtime);",
          "814:   if (!codeBlock) {",
          "816:     return HermesValue::encodeBoolValue(false);",
          "817:   }",
          "819:   RuntimeModule *runtimeModule = codeBlock->getRuntimeModule();",
          "820:   return HermesValue::encodeBoolValue(",
          "821:       runtimeModule && runtimeModule->getBytecode()->isLazy());",
          "822: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "908:     defineInternMethod(",
          "909:         P::copyDataProperties, hermesBuiltinCopyDataProperties, 3);",
          "910:     defineInternMethodAndSymbol(\"isProxy\", hermesInternalIsProxy);",
          "911:     defineInternMethod(P::drainJobs, hermesInternalDrainJobs);",
          "912:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "933:     defineInternMethodAndSymbol(\"isLazy\", hermesInternalIsLazy);",
          "",
          "---------------"
        ],
        "test/hermes/regress-hermes-internal-get-lazy-function-location.js||test/hermes/regress-hermes-internal-get-lazy-function-location.js": [
          "File: test/hermes/regress-hermes-internal-get-lazy-function-location.js -> test/hermes/regress-hermes-internal-get-lazy-function-location.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: \"use strict\";",
          "14: print(HermesInternal.isLazy(print));",
          "18: print(HermesInternal.isLazy(10));",
          "21: function lazyFunc() {}",
          "23: print(HermesInternal.isLazy(lazyFunc));",
          "26: print(JSON.stringify(HermesInternal.getFunctionLocation(lazyFunc)));",
          "29: lazyFunc();",
          "31: print(HermesInternal.isLazy(lazyFunc));",
          "34: print(JSON.stringify(HermesInternal.getFunctionLocation(lazyFunc)));",
          "",
          "---------------"
        ]
      }
    }
  ]
}