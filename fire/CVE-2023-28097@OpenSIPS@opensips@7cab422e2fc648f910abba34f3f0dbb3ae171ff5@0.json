{
  "cve_id": "CVE-2023-28097",
  "cve_desc": "OpenSIPS is a Session Initiation Protocol (SIP) server implementation. Prior to versions 3.1.9 and 3.2.6, a malformed SIP message containing a large _Content-Length_ value and a specially crafted Request-URI causes a segmentation fault in OpenSIPS. This issue occurs when a large amount of shared memory using the `-m` flag was allocated to OpenSIPS, such as 10 GB of RAM. On the test system, this issue occurred when shared memory was set to `2362` or higher. This issue is fixed in versions 3.1.9 and 3.2.6. The only workaround is to guarantee that the Content-Length value of input messages is never larger than `2147483647`.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "7cab422e2fc648f910abba34f3f0dbb3ae171ff5",
  "patch_info": {
    "commit_hash": "7cab422e2fc648f910abba34f3f0dbb3ae171ff5",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/7cab422e2fc648f910abba34f3f0dbb3ae171ff5",
    "files": [
      "parser/parse_content.c"
    ],
    "message": "core: Fix Content-Length parsing\n\nIssue discovered during OpenSIPS Security Audit 2022,\n        by Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-c6j5-f4h4-2xrq",
    "before_after_code_files": [
      "parser/parse_content.c||parser/parse_content.c"
    ]
  },
  "patch_diff": {
    "parser/parse_content.c||parser/parse_content.c": [
      "File: parser/parse_content.c -> parser/parse_content.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "241:  size = 0;",
      "242:  number = 0;",
      "243:  while (p<end && *p>='0' && *p<='9') {",
      "247:     (int)(p-buffer),(int)(end-buffer), buffer);",
      "248:    return 0;",
      "249:   }",
      "250:   size ++;",
      "251:   p++;",
      "252:  }",
      "",
      "[Removed Lines]",
      "244:   number = number*10 + (*p)-'0';",
      "245:   if (number<0) {",
      "246:    LM_ERR(\"number overflow at pos %d in len number [%.*s]\\n\",",
      "",
      "[Added Lines]",
      "245:   if (number > 214748363) {",
      "246:    LM_ERR(\"integer overflow risk at pos %d in len number [%.*s]\\n\",",
      "251:   number = number*10 + (*p)-'0';",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "87e1f27d018b3b0133739487b0dff9ee1ffcdb63",
      "candidate_info": {
        "commit_hash": "87e1f27d018b3b0133739487b0dff9ee1ffcdb63",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/87e1f27d018b3b0133739487b0dff9ee1ffcdb63",
        "files": [
          "parser/parse_content.c"
        ],
        "message": "core: Fix Content-Length parsing\n\nIssue discovered during OpenSIPS Security Audit 2022,\n        by Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-c6j5-f4h4-2xrq\n(cherry picked from commit 7cab422e2fc648f910abba34f3f0dbb3ae171ff5)",
        "before_after_code_files": [
          "parser/parse_content.c||parser/parse_content.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "parser/parse_content.c||parser/parse_content.c"
          ],
          "candidate": [
            "parser/parse_content.c||parser/parse_content.c"
          ]
        }
      },
      "candidate_diff": {
        "parser/parse_content.c||parser/parse_content.c": [
          "File: parser/parse_content.c -> parser/parse_content.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "241:  size = 0;",
          "242:  number = 0;",
          "243:  while (p<end && *p>='0' && *p<='9') {",
          "247:     (int)(p-buffer),(int)(end-buffer), buffer);",
          "248:    return 0;",
          "249:   }",
          "250:   size ++;",
          "251:   p++;",
          "252:  }",
          "",
          "[Removed Lines]",
          "244:   number = number*10 + (*p)-'0';",
          "245:   if (number<0) {",
          "246:    LM_ERR(\"number overflow at pos %d in len number [%.*s]\\n\",",
          "",
          "[Added Lines]",
          "245:   if (number > 214748363) {",
          "246:    LM_ERR(\"integer overflow risk at pos %d in len number [%.*s]\\n\",",
          "251:   number = number*10 + (*p)-'0';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f569a584466e33188959bdc73aa254f380d5655d",
      "candidate_info": {
        "commit_hash": "f569a584466e33188959bdc73aa254f380d5655d",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/f569a584466e33188959bdc73aa254f380d5655d",
        "files": [
          "parser/parse_content.c"
        ],
        "message": "core: Fix Content-Length parsing\n\nIssue discovered during OpenSIPS Security Audit 2022,\n        by Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-c6j5-f4h4-2xrq\n(cherry picked from commit 7cab422e2fc648f910abba34f3f0dbb3ae171ff5)",
        "before_after_code_files": [
          "parser/parse_content.c||parser/parse_content.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "parser/parse_content.c||parser/parse_content.c"
          ],
          "candidate": [
            "parser/parse_content.c||parser/parse_content.c"
          ]
        }
      },
      "candidate_diff": {
        "parser/parse_content.c||parser/parse_content.c": [
          "File: parser/parse_content.c -> parser/parse_content.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "241:  size = 0;",
          "242:  number = 0;",
          "243:  while (p<end && *p>='0' && *p<='9') {",
          "247:     (int)(p-buffer),(int)(end-buffer), buffer);",
          "248:    return 0;",
          "249:   }",
          "250:   size ++;",
          "251:   p++;",
          "252:  }",
          "",
          "[Removed Lines]",
          "244:   number = number*10 + (*p)-'0';",
          "245:   if (number<0) {",
          "246:    LM_ERR(\"number overflow at pos %d in len number [%.*s]\\n\",",
          "",
          "[Added Lines]",
          "245:   if (number > 214748363) {",
          "246:    LM_ERR(\"integer overflow risk at pos %d in len number [%.*s]\\n\",",
          "251:   number = number*10 + (*p)-'0';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "837263b47dcb33909b109b5cc050c1ab4a6c64a2",
      "candidate_info": {
        "commit_hash": "837263b47dcb33909b109b5cc050c1ab4a6c64a2",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/837263b47dcb33909b109b5cc050c1ab4a6c64a2",
        "files": [
          "parser/parse_content.c"
        ],
        "message": "parse_content_length(): Fix integer overflow edge-case (OSS-Fuzz)\n\nThis completes commit 7cab422e2f, where it was still possible to cause\nan integer overflow even after the fix, with input such as 2147483609,\ndue to missing parentheses in the number equation.\n\nFixes OSS-Fuzz#52112",
        "before_after_code_files": [
          "parser/parse_content.c||parser/parse_content.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "parser/parse_content.c||parser/parse_content.c"
          ],
          "candidate": [
            "parser/parse_content.c||parser/parse_content.c"
          ]
        }
      },
      "candidate_diff": {
        "parser/parse_content.c||parser/parse_content.c": [
          "File: parser/parse_content.c -> parser/parse_content.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "242:  number = 0;",
          "243:  while (p<end && *p>='0' && *p<='9') {",
          "247:     (int)(p-buffer),(int)(end-buffer), buffer);",
          "249:   }",
          "252:   size ++;",
          "253:   p++;",
          "254:  }",
          "",
          "[Removed Lines]",
          "245:   if (number > 214748363) {",
          "246:    LM_ERR(\"integer overflow risk at pos %d in len number [%.*s]\\n\",",
          "248:    return 0;",
          "251:   number = number*10 + (*p)-'0';",
          "",
          "[Added Lines]",
          "245:   if (number >= INT_MAX/10) {",
          "246:    LM_ERR(\"integer overflow risk at pos %d in length value [%.*s]\\n\",",
          "248:    return NULL;",
          "251:   number = number*10 + ((*p)-'0');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268:  return p;",
          "269: error:",
          "270:  LM_ERR(\"parse error near char [%d][%c]\\n\",*p,*p);",
          "272: }",
          "",
          "[Removed Lines]",
          "271:  return 0;",
          "",
          "[Added Lines]",
          "271:  return NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eecabbd825cd50eaa2d04bfa0dc164d6d729d8a1",
      "candidate_info": {
        "commit_hash": "eecabbd825cd50eaa2d04bfa0dc164d6d729d8a1",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/eecabbd825cd50eaa2d04bfa0dc164d6d729d8a1",
        "files": [
          "parser/parse_content.c"
        ],
        "message": "parse_content_length(): Fix integer overflow edge-case (OSS-Fuzz)\n\nThis completes commit 7cab422e2f, where it was still possible to cause\nan integer overflow even after the fix, with input such as 2147483609,\ndue to missing parentheses in the number equation.\n\nFixes OSS-Fuzz#52112\n\n(cherry picked from commit 837263b47dcb33909b109b5cc050c1ab4a6c64a2)",
        "before_after_code_files": [
          "parser/parse_content.c||parser/parse_content.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "parser/parse_content.c||parser/parse_content.c"
          ],
          "candidate": [
            "parser/parse_content.c||parser/parse_content.c"
          ]
        }
      },
      "candidate_diff": {
        "parser/parse_content.c||parser/parse_content.c": [
          "File: parser/parse_content.c -> parser/parse_content.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "242:  number = 0;",
          "243:  while (p<end && *p>='0' && *p<='9') {",
          "247:     (int)(p-buffer),(int)(end-buffer), buffer);",
          "249:   }",
          "252:   size ++;",
          "253:   p++;",
          "254:  }",
          "",
          "[Removed Lines]",
          "245:   if (number > 214748363) {",
          "246:    LM_ERR(\"integer overflow risk at pos %d in len number [%.*s]\\n\",",
          "248:    return 0;",
          "251:   number = number*10 + (*p)-'0';",
          "",
          "[Added Lines]",
          "245:   if (number >= INT_MAX/10) {",
          "246:    LM_ERR(\"integer overflow risk at pos %d in length value [%.*s]\\n\",",
          "248:    return NULL;",
          "251:   number = number*10 + ((*p)-'0');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268:  return p;",
          "269: error:",
          "270:  LM_ERR(\"parse error near char [%d][%c]\\n\",*p,*p);",
          "272: }",
          "",
          "[Removed Lines]",
          "271:  return 0;",
          "",
          "[Added Lines]",
          "271:  return NULL;",
          "",
          "---------------"
        ]
      }
    }
  ]
}