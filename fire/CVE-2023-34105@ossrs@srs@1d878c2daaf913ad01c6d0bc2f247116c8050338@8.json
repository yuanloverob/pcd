{
  "cve_id": "CVE-2023-34105",
  "cve_desc": "SRS is a real-time video server supporting RTMP, WebRTC, HLS, HTTP-FLV, SRT, MPEG-DASH, and GB28181. Prior to versions 5.0.157, 5.0-b1, and 6.0.48, SRS's `api-server` server is vulnerable to a drive-by command injection. An attacker may send a request to the `/api/v1/snapshots` endpoint containing any commands to be executed as part of the body of the POST request. This issue may lead to Remote Code Execution (RCE). Versions 5.0.157, 5.0-b1, and 6.0.48 contain a fix.",
  "repo": "ossrs/srs",
  "patch_hash": "1d878c2daaf913ad01c6d0bc2f247116c8050338",
  "patch_info": {
    "commit_hash": "1d878c2daaf913ad01c6d0bc2f247116c8050338",
    "repo": "ossrs/srs",
    "commit_url": "https://github.com/ossrs/srs/commit/1d878c2daaf913ad01c6d0bc2f247116c8050338",
    "files": [
      "trunk/doc/CHANGELOG.md",
      "trunk/research/api-server/server.go",
      "trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp"
    ],
    "message": "Fix command injection in api-server for HTTP callback. v5.0.157, v6.0.48",
    "before_after_code_files": [
      "trunk/research/api-server/server.go||trunk/research/api-server/server.go",
      "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
    ]
  },
  "patch_diff": {
    "trunk/research/api-server/server.go||trunk/research/api-server/server.go": [
      "File: trunk/research/api-server/server.go -> trunk/research/api-server/server.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "400:  normalPicPath := path.Join(outputPicDir, fmt.Sprintf(\"%v\", v.Stream)+\"-%03d.png\")",
      "401:  bestPng := path.Join(outputPicDir, fmt.Sprintf(\"%v-best.png\", v.Stream))",
      "405:  timeoutCtx, _ := context.WithTimeout(v.cancelCtx, v.timeout)",
      "407:  if err = cmd.Run(); err != nil {",
      "408:   log.Println(fmt.Sprintf(\"run snapshot %v cmd failed, err is %v\", v.Tag(), err))",
      "409:   return",
      "",
      "[Removed Lines]",
      "403:  param := fmt.Sprintf(\"%v -i %v -vf fps=1 -vcodec png -f image2 -an -y -vframes %v -y %v\", ffmpegPath, inputUrl, v.vframes, normalPicPath)",
      "404:  log.Println(fmt.Sprintf(\"start snapshot, cmd param=%v\", param))",
      "406:  cmd := exec.CommandContext(timeoutCtx, \"/bin/bash\", \"-c\", param)",
      "",
      "[Added Lines]",
      "403:  params := []string{",
      "404:   \"-i\", inputUrl,",
      "405:   \"-vf\", \"fps=1\",",
      "406:   \"-vcodec\", \"png\",",
      "407:   \"-f\", \"image2\",",
      "408:   \"-an\",",
      "409:   \"-vframes\", strconv.Itoa(v.vframes),",
      "410:   \"-y\", normalPicPath,",
      "411:  }",
      "412:  log.Println(fmt.Sprintf(\"start snapshot, cmd param=%v %v\", ffmpegPath, strings.Join(params, \" \")))",
      "414:  cmd := exec.CommandContext(timeoutCtx, ffmpegPath, params...)",
      "",
      "---------------"
    ],
    "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
      "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       5",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    156",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    157",
      "",
      "---------------"
    ],
    "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
      "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       6",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    47",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    48",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6babf01de21c346398beeaa6026fc7f9052cb657",
      "candidate_info": {
        "commit_hash": "6babf01de21c346398beeaa6026fc7f9052cb657",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/6babf01de21c346398beeaa6026fc7f9052cb657",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_hls.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "Bugfix: Log format output type does not match. v5.0.171, v6.0.66 (#3775)\n\nA segmentation fault occurred on arm\nhttps://github.com/ossrs/srs/issues/3714\n\n---------\n\nCo-authored-by: Haibo Chen <495810242@qq.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_hls.cpp||trunk/src/app/srs_app_hls.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_hls.cpp||trunk/src/app/srs_app_hls.cpp": [
          "File: trunk/src/app/srs_app_hls.cpp -> trunk/src/app/srs_app_hls.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1417:               pprint->age(), controller->sequence_no(), controller->ts_url().c_str(),",
          "1418:               srsu2msi(controller->duration()), controller->deviation());",
          "1419: }",
          "",
          "[Removed Lines]",
          "1416:     srs_trace(\"-> \" SRS_CONSTS_LOG_HLS \" time=%dms, sno=%d, ts=%s, dur=%dms, dva=%dp\",",
          "",
          "[Added Lines]",
          "1416:     srs_trace(\"-> \" SRS_CONSTS_LOG_HLS \" time=%\" PRId64 \"ms, sno=%d, ts=%s, dur=%dms, dva=%dp\",",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    170",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    171",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    65",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    66",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ca7684e36fce3db535d7a74b1bf125df3965038",
      "candidate_info": {
        "commit_hash": "4ca7684e36fce3db535d7a74b1bf125df3965038",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/4ca7684e36fce3db535d7a74b1bf125df3965038",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_rtc_conn.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "RTC: Fix video and audio track pt_ is not change in player before publisher. v5.0.207 v6.0.111 (#3925)\n\nFor WebRTC:\nwhen player before publisher, it will happen track pt didn't change.\n\n - At source change step, change track pt \n\n---------\n\nCo-authored-by: mingche.tsai <w41203208.work@gmail.com>\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_rtc_conn.cpp||trunk/src/app/srs_app_rtc_conn.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_rtc_conn.cpp||trunk/src/app/srs_app_rtc_conn.cpp": [
          "File: trunk/src/app/srs_app_rtc_conn.cpp -> trunk/src/app/srs_app_rtc_conn.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "534:             uint32_t ssrc = desc->audio_track_desc_->ssrc_;",
          "535:             SrsRtcAudioSendTrack* track = audio_tracks_.begin()->second;",
          "537:             audio_tracks_.clear();",
          "538:             audio_tracks_.insert(make_pair(ssrc, track));",
          "539:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "537:             if (track->track_desc_->media_->pt_of_publisher_ != desc->audio_track_desc_->media_->pt_) {",
          "538:                 track->track_desc_->media_->pt_of_publisher_ = desc->audio_track_desc_->media_->pt_;",
          "539:             }",
          "541:             if (desc->audio_track_desc_->red_ && track->track_desc_->red_ &&",
          "542:                     track->track_desc_->red_->pt_of_publisher_ != desc->audio_track_desc_->red_->pt_) {",
          "543:                 track->track_desc_->red_->pt_of_publisher_ = desc->audio_track_desc_->red_->pt_;",
          "544:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "547:             uint32_t ssrc = vdesc->ssrc_;",
          "548:             SrsRtcVideoSendTrack* track = video_tracks_.begin()->second;",
          "550:             video_tracks_.clear();",
          "551:             video_tracks_.insert(make_pair(ssrc, track));",
          "552:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "559:             if (track->track_desc_->media_->pt_of_publisher_ != vdesc->media_->pt_) {",
          "560:                 track->track_desc_->media_->pt_of_publisher_ = vdesc->media_->pt_;",
          "561:             }",
          "563:             if (vdesc->red_ && track->track_desc_->red_ &&",
          "564:                     track->track_desc_->red_->pt_of_publisher_ != vdesc->red_->pt_) {",
          "565:                 track->track_desc_->red_->pt_of_publisher_ = vdesc->red_->pt_;",
          "566:             }",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    206",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    207",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    110",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    111",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7209b7366003ab033b40f96f44e2bbd808d2f619",
      "candidate_info": {
        "commit_hash": "7209b7366003ab033b40f96f44e2bbd808d2f619",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/7209b7366003ab033b40f96f44e2bbd808d2f619",
        "files": [
          "trunk/conf/full.conf",
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_rtc_source.cpp",
          "trunk/src/app/srs_app_rtc_source.hpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/kernel/srs_kernel_rtc_rtp.cpp",
          "trunk/src/kernel/srs_kernel_rtc_rtp.hpp"
        ],
        "message": "WHIP: Fix bug for converting WHIP to RTMP/HLS. v5.0.208 v6.0.113 (#3920)\n\n1. When converting RTC to RTMP, it is necessary to synchronize the audio\nand video timestamps. When the synchronization status changes, whether\nit is unsynchronized or synchronized, print logs to facilitate\ntroubleshooting of such issues.\n2. Chrome uses the STAP-A packet, which means a single RTP packet\ncontains SPS/PPS information. OBS WHIP, on the other hand, sends SPS and\nPPS in separate RTP packets. Therefore, SPS and PPS are in two\nindependent RTP packets, and SRS needs to cache these two packets.\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/conf/full.conf||trunk/conf/full.conf",
          "trunk/src/app/srs_app_rtc_source.cpp||trunk/src/app/srs_app_rtc_source.cpp",
          "trunk/src/app/srs_app_rtc_source.hpp||trunk/src/app/srs_app_rtc_source.hpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/kernel/srs_kernel_rtc_rtp.cpp||trunk/src/kernel/srs_kernel_rtc_rtp.cpp",
          "trunk/src/kernel/srs_kernel_rtc_rtp.hpp||trunk/src/kernel/srs_kernel_rtc_rtp.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/conf/full.conf||trunk/conf/full.conf": [
          "File: trunk/conf/full.conf -> trunk/conf/full.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "434:     #       *           Retrieve server IP automatically, from all network interfaces.",
          "435:     #       $CANDIDATE  Read the IP from ENV variable, use * if not set.",
          "436:     #       x.x.x.x     A specified IP address or DNS name, use * if 0.0.0.0.",
          "437:     # @remark For Firefox, the candidate MUST be IP, MUST NOT be DNS name, see https://bugzilla.mozilla.org/show_bug.cgi?id=1239006",
          "438:     # @see https://ossrs.net/lts/zh-cn/docs/v4/doc/webrtc#config-candidate",
          "439:     # Overwrite by env SRS_RTC_SERVER_CANDIDATE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "437:     # You can also set the candidate by the query string eip, note that you can also set the UDP port,",
          "438:     # for example:",
          "439:     #       http://locahost:1985/rtc/v1/whip/?app=live&stream=livestream&eip=192.168.3.11",
          "440:     #       http://locahost:1985/rtc/v1/whip/?app=live&stream=livestream&eip=192.168.3.11:18000",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_rtc_source.cpp||trunk/src/app/srs_app_rtc_source.cpp": [
          "File: trunk/src/app/srs_app_rtc_source.cpp -> trunk/src/app/srs_app_rtc_source.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1318:     header_sn_ = 0;",
          "1319:     memset(cache_video_pkts_, 0, sizeof(cache_video_pkts_));",
          "1320:     rtp_key_frame_ts_ = -1;",
          "1321: }",
          "1323: SrsRtcFrameBuilder::~SrsRtcFrameBuilder()",
          "1324: {",
          "1325:     srs_freep(codec_);",
          "1326:     clear_cached_video();",
          "1327: }",
          "1329: srs_error_t SrsRtcFrameBuilder::initialize(SrsRequest* r)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1321:     sync_state_ = -1;",
          "1322:     obs_whip_sps_ = obs_whip_pps_ = NULL;",
          "1329:     srs_freep(obs_whip_sps_);",
          "1330:     srs_freep(obs_whip_pps_);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1369:     if (pkt->get_avsync_time() <= 0) {",
          "1370:         return err;",
          "1371:     }",
          "1373:     if (pkt->is_audio()) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1373:     const SrsRtpHeader& h = pkt->header;",
          "1375:         if (sync_state_ < 0) {",
          "1376:             srs_trace(\"RTC: Discard no-sync %s, ssrc=%u, seq=%u, ts=%u, state=%d\", pkt->is_audio() ? \"Audio\" : \"Video\",",
          "1377:                 h.get_ssrc(), h.get_sequence(), h.get_timestamp(), sync_state_);",
          "1378:             sync_state_ = 0;",
          "1379:         }",
          "1381:     } else if (sync_state_ < 1) {",
          "1382:         srs_trace(\"RTC: Accept sync %s, ssrc=%u, seq=%u, ts=%u, state=%d\", pkt->is_audio() ? \"Audio\" : \"Video\",",
          "1383:             h.get_ssrc(), h.get_sequence(), h.get_timestamp(), sync_state_);",
          "1384:         sync_state_ = 2;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1499: {",
          "1500:     srs_error_t err = srs_success;",
          "1503:     SrsRtpSTAPPayload* stap_payload = dynamic_cast<SrsRtpSTAPPayload*>(pkt->payload());",
          "1508:             return srs_error_new(ERROR_RTC_RTP_MUXER, \"no sps or pps in stap-a rtp. sps: %p, pps:%p\", sps, pps);",
          "1542:         }",
          "1543:     }",
          "",
          "[Removed Lines]",
          "1504:     if (stap_payload) {",
          "1505:         SrsSample* sps = stap_payload->get_sps();",
          "1506:         SrsSample* pps = stap_payload->get_pps();",
          "1507:         if (NULL == sps || NULL == pps) {",
          "1509:         } else {",
          "1511:             std::string sh;",
          "1512:             SrsRawH264Stream* avc = new SrsRawH264Stream();",
          "1513:             SrsAutoFree(SrsRawH264Stream, avc);",
          "1515:             if ((err = avc->mux_sequence_header(string(sps->bytes, sps->size), string(pps->bytes, pps->size), sh)) != srs_success) {",
          "1516:                 return srs_error_wrap(err, \"mux sequence header\");",
          "1517:             }",
          "1520:             char* flv = NULL;",
          "1521:             int nb_flv = 0;",
          "1522:             if ((err = avc->mux_avc2flv(sh, SrsVideoAvcFrameTypeKeyFrame, SrsVideoAvcFrameTraitSequenceHeader, pkt->get_avsync_time(),",
          "1523:                                         pkt->get_avsync_time(), &flv, &nb_flv)) != srs_success) {",
          "1524:                 return srs_error_wrap(err, \"avc to flv\");",
          "1525:             }",
          "1527:             SrsMessageHeader header;",
          "1528:             header.initialize_video(nb_flv, pkt->get_avsync_time(), 1);",
          "1529:             SrsCommonMessage rtmp;",
          "1530:             if ((err = rtmp.create(&header, flv, nb_flv)) != srs_success) {",
          "1531:                 return srs_error_wrap(err, \"create rtmp\");",
          "1532:             }",
          "1534:             SrsSharedPtrMessage msg;",
          "1535:             if ((err = msg.create(&rtmp)) != srs_success) {",
          "1536:                 return srs_error_wrap(err, \"create message\");",
          "1537:             }",
          "1539:             if ((err = bridge_->on_frame(&msg)) != srs_success) {",
          "1540:                 return err;",
          "1541:             }",
          "",
          "[Added Lines]",
          "1518:     bool has_sps_pps_in_raw_payload = false;",
          "1519:     SrsRtpRawPayload* raw_payload = dynamic_cast<SrsRtpRawPayload*>(pkt->payload());",
          "1520:     if (raw_payload) {",
          "1521:         if (pkt->nalu_type == SrsAvcNaluTypeSPS) {",
          "1522:             has_sps_pps_in_raw_payload = true;",
          "1523:             srs_freep(obs_whip_sps_);",
          "1524:             obs_whip_sps_ = pkt->copy();",
          "1525:         } else if (pkt->nalu_type == SrsAvcNaluTypePPS) {",
          "1526:             has_sps_pps_in_raw_payload = true;",
          "1527:             srs_freep(obs_whip_pps_);",
          "1528:             obs_whip_pps_ = pkt->copy();",
          "1529:         }",
          "1531:         if (has_sps_pps_in_raw_payload && (!obs_whip_sps_ || !obs_whip_pps_)) {",
          "1532:             return err;",
          "1533:         }",
          "1534:     }",
          "1540:     if (stap_payload || has_sps_pps_in_raw_payload) {",
          "1542:         SrsSample* sps = stap_payload ? stap_payload->get_sps() : NULL;",
          "1543:         if (!sps && obs_whip_sps_) sps = dynamic_cast<SrsRtpRawPayload*>(obs_whip_sps_->payload())->sample_;",
          "1544:         SrsSample* pps = stap_payload ? stap_payload->get_pps() : NULL;",
          "1545:         if (!pps && obs_whip_pps_) pps = dynamic_cast<SrsRtpRawPayload*>(obs_whip_pps_->payload())->sample_;",
          "1546:         if (!sps || !pps) {",
          "1548:         }",
          "1551:         SrsAutoFree(SrsRtpPacket, obs_whip_sps_);",
          "1552:         SrsAutoFree(SrsRtpPacket, obs_whip_pps_);",
          "1555:         std::string sh;",
          "1556:         SrsRawH264Stream* avc = new SrsRawH264Stream();",
          "1557:         SrsAutoFree(SrsRawH264Stream, avc);",
          "1559:         if ((err = avc->mux_sequence_header(string(sps->bytes, sps->size), string(pps->bytes, pps->size), sh)) != srs_success) {",
          "1560:             return srs_error_wrap(err, \"mux sequence header\");",
          "1561:         }",
          "1564:         char* flv = NULL;",
          "1565:         int nb_flv = 0;",
          "1566:         if ((err = avc->mux_avc2flv(sh, SrsVideoAvcFrameTypeKeyFrame, SrsVideoAvcFrameTraitSequenceHeader, pkt->get_avsync_time(),",
          "1567:                                     pkt->get_avsync_time(), &flv, &nb_flv)) != srs_success) {",
          "1568:             return srs_error_wrap(err, \"avc to flv\");",
          "1569:         }",
          "1571:         SrsMessageHeader header;",
          "1572:         header.initialize_video(nb_flv, pkt->get_avsync_time(), 1);",
          "1573:         SrsCommonMessage rtmp;",
          "1574:         if ((err = rtmp.create(&header, flv, nb_flv)) != srs_success) {",
          "1575:             return srs_error_wrap(err, \"create rtmp\");",
          "1576:         }",
          "1578:         SrsSharedPtrMessage msg;",
          "1579:         if ((err = msg.create(&rtmp)) != srs_success) {",
          "1580:             return srs_error_wrap(err, \"create message\");",
          "1581:         }",
          "1583:         if ((err = bridge_->on_frame(&msg)) != srs_success) {",
          "1584:             return err;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1583:     if (-1 == sn) {",
          "1584:         if (check_frame_complete(header_sn_, tail_sn)) {",
          "1585:             if ((err = packet_video_rtmp(header_sn_, tail_sn)) != srs_success) {",
          "1587:             }",
          "1588:         }",
          "1589:     } else if (-2 == sn) {",
          "",
          "[Removed Lines]",
          "1586:                 err = srs_error_wrap(err, \"fail to packet key frame\");",
          "",
          "[Added Lines]",
          "1629:                 err = srs_error_wrap(err, \"fail to packet frame\");",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_rtc_source.hpp||trunk/src/app/srs_app_rtc_source.hpp": [
          "File: trunk/src/app/srs_app_rtc_source.hpp -> trunk/src/app/srs_app_rtc_source.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "318:     uint16_t header_sn_;",
          "319:     uint16_t lost_sn_;",
          "320:     int64_t rtp_key_frame_ts_;",
          "321: public:",
          "322:     SrsRtcFrameBuilder(ISrsStreamBridge* bridge);",
          "323:     virtual ~SrsRtcFrameBuilder();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "321: private:",
          "323:     int sync_state_;",
          "324: private:",
          "326:     SrsRtpPacket* obs_whip_sps_;",
          "327:     SrsRtpPacket* obs_whip_pps_;",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    207",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    208",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    112",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    113",
          "",
          "---------------"
        ],
        "trunk/src/kernel/srs_kernel_rtc_rtp.cpp||trunk/src/kernel/srs_kernel_rtc_rtp.cpp": [
          "File: trunk/src/kernel/srs_kernel_rtc_rtp.cpp -> trunk/src/kernel/srs_kernel_rtc_rtp.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "970: {",
          "971:     payload = NULL;",
          "972:     nn_payload = 0;",
          "974:     ++_srs_pps_objs_rraw->sugar;",
          "975: }",
          "977: SrsRtpRawPayload::~SrsRtpRawPayload()",
          "978: {",
          "979: }",
          "981: uint64_t SrsRtpRawPayload::nb_bytes()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "973:     sample_ = new SrsSample();",
          "980:     srs_freep(sample_);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1007:     payload = buf->head();",
          "1008:     nn_payload = buf->left();",
          "1010:     return srs_success;",
          "1011: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1012:     sample_->bytes = payload;",
          "1013:     sample_->size = nn_payload;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1017:     cp->payload = payload;",
          "1018:     cp->nn_payload = nn_payload;",
          "1020:     return cp;",
          "1021: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1024:     cp->sample_ = sample_->copy();",
          "",
          "---------------"
        ],
        "trunk/src/kernel/srs_kernel_rtc_rtp.hpp||trunk/src/kernel/srs_kernel_rtc_rtp.hpp": [
          "File: trunk/src/kernel/srs_kernel_rtc_rtp.hpp -> trunk/src/kernel/srs_kernel_rtc_rtp.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "349:     char* payload;",
          "350:     int nn_payload;",
          "351: public:",
          "352:     SrsRtpRawPayload();",
          "353:     virtual ~SrsRtpRawPayload();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "351: public:",
          "353:     SrsSample* sample_;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4e7c075559e5050646194f6c221213619449d71f",
      "candidate_info": {
        "commit_hash": "4e7c075559e5050646194f6c221213619449d71f",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/4e7c075559e5050646194f6c221213619449d71f",
        "files": [
          "Dockerfile",
          "README.md",
          "trunk/doc/CHANGELOG.md",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "Disable asan by default. v5.0.192 v6.0.92 (#3840)\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    191",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    192",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    91",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    92",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b5347e19f71221c2ee7bab9f19134907e4d53829",
      "candidate_info": {
        "commit_hash": "b5347e19f71221c2ee7bab9f19134907e4d53829",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/b5347e19f71221c2ee7bab9f19134907e4d53829",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_hls.cpp",
          "trunk/src/app/srs_app_hls.hpp",
          "trunk/src/app/srs_app_source.cpp",
          "trunk/src/app/srs_app_source.hpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "HLS: Support reload HLS asynchronously. v5.0.172 v6.0.67 (#3782)\n\nWhen reloading HLS, it directly operates unpublish and publish. At this\ntime, if HLS is pushed, an exception may occur.\n\nThe reason is that these two coroutines operated on the HLS object at\nthe same time, causing a null pointer.\n\nSolution: Use asynchronous reload. During reload, only set variables and\nlet the message processing coroutine implement the reload.\n\n---------\n\nCo-authored-by: Haibo Chen <495810242@qq.com>\nCo-authored-by: chundonglinlin <chundonglinlin@163.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_hls.cpp||trunk/src/app/srs_app_hls.cpp",
          "trunk/src/app/srs_app_hls.hpp||trunk/src/app/srs_app_hls.hpp",
          "trunk/src/app/srs_app_source.cpp||trunk/src/app/srs_app_source.cpp",
          "trunk/src/app/srs_app_source.hpp||trunk/src/app/srs_app_source.hpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_hls.cpp||trunk/src/app/srs_app_hls.cpp": [
          "File: trunk/src/app/srs_app_hls.cpp -> trunk/src/app/srs_app_hls.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1137:     enabled = false;",
          "1138:     disposable = false;",
          "1139:     last_update_time = 0;",
          "1140:     hls_dts_directly = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1139:     async_reload_ = reloading_ = false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1155:     srs_freep(pprint);",
          "1156: }",
          "1158: void SrsHls::dispose()",
          "1159: {",
          "1160:     if (enabled) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1159: void SrsHls::async_reload()",
          "1160: {",
          "1161:     async_reload_ = true;",
          "1162: }",
          "1164: srs_error_t SrsHls::reload()",
          "1165: {",
          "1166:     srs_error_t err = srs_success;",
          "1169:     if (!enabled) return err;",
          "1171:     int reloading = 0, reloaded = 0, refreshed = 0;",
          "1172:     err = do_reload(&reloading, &reloaded, &refreshed);",
          "1173:     srs_trace(\"async reload hls %s, reloading=%d, reloaded=%d, refreshed=%d\",",
          "1174:         req->get_stream_url().c_str(), reloading, reloaded, refreshed);",
          "1176:     return err;",
          "1177: }",
          "1179: srs_error_t SrsHls::do_reload(int *reloading, int *reloaded, int *refreshed)",
          "1180: {",
          "1181:     srs_error_t err = srs_success;",
          "1183:     if (!async_reload_ || reloading_) return err;",
          "1184:     reloading_ = true;",
          "1187:     on_unpublish();",
          "1188:     if ((err = on_publish()) != srs_success) {",
          "1189:         return srs_error_wrap(err, \"hls publish failed\");",
          "1190:     }",
          "1194:     reloading_ = false;",
          "1195:     async_reload_ = false;",
          "1198:     if ((err = hub->on_hls_request_sh()) != srs_success) {",
          "1199:         return srs_error_wrap(err, \"hls request sh\");",
          "1200:     }",
          "1203:     return err;",
          "1204: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1182:     if (!req) {",
          "1183:         return err;",
          "1184:     }",
          "1186:     srs_utime_t hls_dispose = _srs_config->get_hls_dispose(req->vhost);",
          "1187:     if (hls_dispose <= 0) {",
          "1188:         return err;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1235:     if (async_reload_) return err;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1270: srs_error_t SrsHls::on_audio(SrsSharedPtrMessage* shared_audio, SrsFormat* format)",
          "1271: {",
          "1272:     srs_error_t err = srs_success;",
          "",
          "[Removed Lines]",
          "1274:     if (!enabled) {",
          "1275:         return err;",
          "1276:     }",
          "",
          "[Added Lines]",
          "1327:     if (!enabled) return err;",
          "1328:     if (async_reload_) return reload();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1352: srs_error_t SrsHls::on_video(SrsSharedPtrMessage* shared_video, SrsFormat* format)",
          "1353: {",
          "1354:     srs_error_t err = srs_success;",
          "",
          "[Removed Lines]",
          "1356:     if (!enabled) {",
          "1357:         return err;",
          "1358:     }",
          "",
          "[Added Lines]",
          "1409:     if (!enabled) return err;",
          "1410:     if (async_reload_) return reload();",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_hls.hpp||trunk/src/app/srs_app_hls.hpp": [
          "File: trunk/src/app/srs_app_hls.hpp -> trunk/src/app/srs_app_hls.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "275:     SrsHlsController* controller;",
          "276: private:",
          "277:     SrsRequest* req;",
          "278:     bool enabled;",
          "279:     bool disposable;",
          "280:     srs_utime_t last_update_time;",
          "281: private:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "283:     bool async_reload_;",
          "284:     bool reloading_;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "293: public:",
          "294:     SrsHls();",
          "295:     virtual ~SrsHls();",
          "296: public:",
          "297:     virtual void dispose();",
          "298:     virtual srs_error_t cycle();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "302: public:",
          "303:     virtual void async_reload();",
          "304: private:",
          "305:     srs_error_t reload();",
          "306:     srs_error_t do_reload(int *reloading, int *reloaded, int *refreshed);",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_source.cpp||trunk/src/app/srs_app_source.cpp": [
          "File: trunk/src/app/srs_app_source.cpp -> trunk/src/app/srs_app_source.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1228:     return err;",
          "1229: }",
          "1231: srs_error_t SrsOriginHub::on_reload_vhost_forward(string vhost)",
          "1232: {",
          "1233:     srs_error_t err = srs_success;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1231: srs_error_t SrsOriginHub::on_hls_request_sh()",
          "1232: {",
          "1233:     srs_error_t err = srs_success;",
          "1235:     SrsSharedPtrMessage* cache_sh_video = source->meta->vsh();",
          "1236:     if (cache_sh_video) {",
          "1237:         if ((err = hls->on_video(cache_sh_video, source->meta->vsh_format())) != srs_success) {",
          "1238:             return srs_error_wrap(err, \"hls video\");",
          "1239:         }",
          "1240:     }",
          "1242:     SrsSharedPtrMessage* cache_sh_audio = source->meta->ash();",
          "1243:     if (cache_sh_audio) {",
          "1244:         if ((err = hls->on_audio(cache_sh_audio, source->meta->ash_format())) != srs_success) {",
          "1245:             return srs_error_wrap(err, \"hls audio\");",
          "1246:         }",
          "1247:     }",
          "1249:     return err;",
          "1250: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1306:     if (req_->vhost != vhost) {",
          "1307:         return err;",
          "1308:     }",
          "1351:     return err;",
          "1352: }",
          "",
          "[Removed Lines]",
          "1312:     hls->on_unpublish();",
          "1315:     if (!is_active) {",
          "1316:         return err;",
          "1317:     }",
          "1319:     if ((err = hls->on_publish()) != srs_success) {",
          "1320:         return srs_error_wrap(err, \"hls publish failed\");",
          "1321:     }",
          "1322:     srs_trace(\"vhost %s hls reload success\", vhost.c_str());",
          "1324:     SrsRtmpFormat* format = source->format_;",
          "1331:     SrsSharedPtrMessage* cache_sh_video = source->meta->vsh();",
          "1332:     if (cache_sh_video) {",
          "1333:         if ((err = format->on_video(cache_sh_video)) != srs_success) {",
          "1334:             return srs_error_wrap(err, \"format on_video\");",
          "1335:         }",
          "1336:         if ((err = hls->on_video(cache_sh_video, format)) != srs_success) {",
          "1337:             return srs_error_wrap(err, \"hls on_video\");",
          "1338:         }",
          "1339:     }",
          "1341:     SrsSharedPtrMessage* cache_sh_audio = source->meta->ash();",
          "1342:     if (cache_sh_audio) {",
          "1343:         if ((err = format->on_audio(cache_sh_audio)) != srs_success) {",
          "1344:             return srs_error_wrap(err, \"format on_audio\");",
          "1345:         }",
          "1346:         if ((err = hls->on_audio(cache_sh_audio, format)) != srs_success) {",
          "1347:             return srs_error_wrap(err, \"hls on_audio\");",
          "1348:         }",
          "1349:     }",
          "",
          "[Added Lines]",
          "1333:     hls->async_reload();",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_source.hpp||trunk/src/app/srs_app_source.hpp": [
          "File: trunk/src/app/srs_app_source.hpp -> trunk/src/app/srs_app_source.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "368:     virtual srs_error_t on_forwarder_start(SrsForwarder* forwarder);",
          "370:     virtual srs_error_t on_dvr_request_sh();",
          "372: public:",
          "373:     virtual srs_error_t on_reload_vhost_forward(std::string vhost);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "372:     virtual srs_error_t on_hls_request_sh();",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    171",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    172",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    66",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    67",
          "",
          "---------------"
        ]
      }
    }
  ]
}