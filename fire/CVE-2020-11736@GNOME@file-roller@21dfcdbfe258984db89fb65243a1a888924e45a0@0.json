{
  "cve_id": "CVE-2020-11736",
  "cve_desc": "fr-archive-libarchive.c in GNOME file-roller through 3.36.1 allows Directory Traversal during extraction because it lacks a check of whether a file's parent is a symlink to a directory outside of the intended extraction location.",
  "repo": "GNOME/file-roller",
  "patch_hash": "21dfcdbfe258984db89fb65243a1a888924e45a0",
  "patch_info": {
    "commit_hash": "21dfcdbfe258984db89fb65243a1a888924e45a0",
    "repo": "GNOME/file-roller",
    "commit_url": "https://github.com/GNOME/file-roller/commit/21dfcdbfe258984db89fb65243a1a888924e45a0",
    "files": [
      "src/fr-archive-libarchive.c"
    ],
    "message": "libarchive: do not follow external links when extracting files\n\nDo not extract a file if its parent is a symbolic link to a\ndirectory external to the destination.",
    "before_after_code_files": [
      "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
    ]
  },
  "patch_diff": {
    "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c": [
      "File: src/fr-archive-libarchive.c -> src/fr-archive-libarchive.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "698: }",
      "701: static void",
      "702: extract_archive_thread (GSimpleAsyncResult *result,",
      "703:    GObject            *object,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "701: static gboolean",
      "702: _symlink_is_external_to_destination (GFile      *file,",
      "703:          const char *symlink,",
      "704:          GFile      *destination,",
      "705:          GHashTable *external_links);",
      "708: static gboolean",
      "709: _g_file_is_external_link (GFile      *file,",
      "710:      GFile      *destination,",
      "711:      GHashTable *external_links)",
      "712: {",
      "713:  GFileInfo *info;",
      "714:  gboolean   external;",
      "716:  if (g_hash_table_lookup (external_links, file) != NULL)",
      "717:   return TRUE;",
      "719:  info = g_file_query_info (file,",
      "720:       G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK \",\" G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET,",
      "721:       G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS,",
      "722:       NULL,",
      "723:       NULL);",
      "725:  if (info == NULL)",
      "726:   return FALSE;",
      "728:  external = FALSE;",
      "730:  if (g_file_info_get_is_symlink (info)) {",
      "731:   if (_symlink_is_external_to_destination (file,",
      "732:         g_file_info_get_symlink_target (info),",
      "733:         destination,",
      "734:         external_links))",
      "735:   {",
      "736:    g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
      "737:    external = TRUE;",
      "738:   }",
      "739:  }",
      "741:  g_object_unref (info);",
      "743:  return external;",
      "744: }",
      "747: static gboolean",
      "748: _symlink_is_external_to_destination (GFile      *file,",
      "749:          const char *symlink,",
      "750:          GFile      *destination,",
      "751:          GHashTable *external_links)",
      "752: {",
      "753:  gboolean  external = FALSE;",
      "754:  GFile    *parent;",
      "755:  char    **components;",
      "756:  int       i;",
      "758:  if ((file == NULL) || (symlink == NULL))",
      "759:   return FALSE;",
      "761:  if (symlink[0] == '/')",
      "762:   return TRUE;",
      "764:  parent = g_file_get_parent (file);",
      "765:  components = g_strsplit (symlink, \"/\", -1);",
      "766:  for (i = 0; components[i] != NULL; i++) {",
      "767:   char  *name = components[i];",
      "768:   GFile *tmp;",
      "770:   if ((name[0] == 0) || ((name[0] == '.') && (name[1] == 0)))",
      "771:    continue;",
      "773:   if ((name[0] == '.') && (name[1] == '.') && (name[2] == 0)) {",
      "774:    if (g_file_equal (parent, destination)) {",
      "775:     external = TRUE;",
      "776:     break;",
      "777:    }",
      "778:    else {",
      "779:     tmp = g_file_get_parent (parent);",
      "780:     g_object_unref (parent);",
      "781:     parent = tmp;",
      "782:    }",
      "783:   }",
      "784:   else {",
      "785:    tmp = g_file_get_child (parent, components[i]);",
      "786:    g_object_unref (parent);",
      "787:    parent = tmp;",
      "788:   }",
      "790:   if (_g_file_is_external_link (parent, destination, external_links)) {",
      "791:    external = TRUE;",
      "792:    break;",
      "793:   }",
      "794:  }",
      "796:  g_strfreev (components);",
      "797:  g_object_unref (parent);",
      "799:  return external;",
      "800: }",
      "803: static gboolean",
      "804: _g_path_is_external_to_destination (const char *relative_path,",
      "805:         GFile      *destination,",
      "806:         GHashTable *external_links)",
      "807: {",
      "808:  gboolean  external = FALSE;",
      "809:  GFile    *parent;",
      "810:  char    **components;",
      "811:  int       i;",
      "813:  if (relative_path == NULL)",
      "814:   return FALSE;",
      "816:  if (destination == NULL)",
      "817:   return TRUE;",
      "819:  parent = g_object_ref (destination);",
      "820:  components = g_strsplit (relative_path, \"/\", -1);",
      "821:  for (i = 0; (components[i] != NULL) && (components[i + 1] != NULL); i++) {",
      "822:   GFile *tmp;",
      "824:   if (components[i][0] == 0)",
      "825:    continue;",
      "827:   tmp = g_file_get_child (parent, components[i]);",
      "828:   g_object_unref (parent);",
      "829:   parent = tmp;",
      "831:   if (_g_file_is_external_link (parent, destination, external_links)) {",
      "832:    external = TRUE;",
      "833:    break;",
      "834:   }",
      "835:  }",
      "837:  g_strfreev (components);",
      "838:  g_object_unref (parent);",
      "840:  return external;",
      "841: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "708:  GHashTable           *checked_folders;",
      "709:  GHashTable           *created_files;",
      "710:  GHashTable           *folders_created_during_extraction;",
      "711:  struct archive       *a;",
      "712:  struct archive_entry *entry;",
      "713:  int                   r;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "854:  GHashTable           *external_links;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "724:  checked_folders = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
      "725:  created_files = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, g_object_unref);",
      "726:  folders_created_during_extraction = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
      "727:  fr_archive_progress_set_total_files (load_data->archive, extract_data->n_files_to_extract);",
      "729:  while ((r = archive_read_next_header (a, &entry)) == ARCHIVE_OK) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "871:  external_links = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "751:   fullpath = (*pathname == '/') ? g_strdup (pathname) : g_strconcat (\"/\", pathname, NULL);",
      "752:   relative_path = _g_path_get_relative_basename_safe (fullpath, extract_data->base_dir, extract_data->junk_paths);",
      "753:   if (relative_path == NULL) {",
      "754:    archive_read_data_skip (a);",
      "755:    continue;",
      "756:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "899:    fr_archive_progress_inc_completed_files (load_data->archive, 1);",
      "900:    fr_archive_progress_inc_completed_bytes (load_data->archive, archive_entry_size_is_set (entry) ? archive_entry_size (entry) : 0);",
      "901:    archive_read_data_skip (a);",
      "902:    continue;",
      "903:   }",
      "905:   if (_g_path_is_external_to_destination (relative_path, extract_data->destination, external_links)) {",
      "906:    fr_archive_progress_inc_completed_files (load_data->archive, 1);",
      "907:    fr_archive_progress_inc_completed_bytes (load_data->archive, archive_entry_size_is_set (entry) ? archive_entry_size (entry) : 0);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "959:       load_data->error = g_error_copy (local_error);",
      "960:      g_clear_error (&local_error);",
      "961:     }",
      "962:     archive_read_data_skip (a);",
      "963:     break;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1116:     else if (_symlink_is_external_to_destination (file, archive_entry_symlink (entry), extract_data->destination, external_links))",
      "1117:      g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "993:  g_hash_table_unref (folders_created_during_extraction);",
      "994:  g_hash_table_unref (created_files);",
      "995:  g_hash_table_unref (checked_folders);",
      "996:  archive_read_free (a);",
      "997:  extract_data_free (extract_data);",
      "998: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1152:  g_hash_table_unref (external_links);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4aaa7c65140762d5cf0df335a7bb795f242d18a8",
      "candidate_info": {
        "commit_hash": "4aaa7c65140762d5cf0df335a7bb795f242d18a8",
        "repo": "GNOME/file-roller",
        "commit_url": "https://github.com/GNOME/file-roller/commit/4aaa7c65140762d5cf0df335a7bb795f242d18a8",
        "files": [
          "src/fr-archive-libarchive.c"
        ],
        "message": "libarchive: Skip files with symlinks in parents\n\nCurrently, it is still possible that some files are extracted outside of\nthe destination dir in case of malicious archives. The checks from commit\n21dfcdbf can be still bypassed in certain cases. See GNOME/file-roller#108\nfor more details. After some investigation, I am convinced that it would be\nbest to simply disallow symlinks in parents. For example, `tar` fails to\nextract such files with the `ENOTDIR` error. Let's do the same here.\n\nFixes: https://gitlab.gnome.org/GNOME/file-roller/-/issues/108",
        "before_after_code_files": [
          "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
          ],
          "candidate": [
            "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
          ]
        }
      },
      "candidate_diff": {
        "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c": [
          "File: src/fr-archive-libarchive.c -> src/fr-archive-libarchive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "697:  return success;",
          "698: }",
          "747: static gboolean",
          "752: {",
          "809:  GFile    *parent;",
          "810:  char    **components;",
          "811:  int       i;",
          "",
          "[Removed Lines]",
          "701: static gboolean",
          "702: _symlink_is_external_to_destination (GFile      *file,",
          "703:          const char *symlink,",
          "704:          GFile      *destination,",
          "705:          GHashTable *external_links);",
          "708: static gboolean",
          "709: _g_file_is_external_link (GFile      *file,",
          "710:      GFile      *destination,",
          "711:      GHashTable *external_links)",
          "712: {",
          "713:  GFileInfo *info;",
          "714:  gboolean   external;",
          "716:  if (g_hash_table_lookup (external_links, file) != NULL)",
          "717:   return TRUE;",
          "719:  info = g_file_query_info (file,",
          "720:       G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK \",\" G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET,",
          "721:       G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS,",
          "722:       NULL,",
          "723:       NULL);",
          "725:  if (info == NULL)",
          "726:   return FALSE;",
          "728:  external = FALSE;",
          "730:  if (g_file_info_get_is_symlink (info)) {",
          "731:   if (_symlink_is_external_to_destination (file,",
          "732:         g_file_info_get_symlink_target (info),",
          "733:         destination,",
          "734:         external_links))",
          "735:   {",
          "736:    g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
          "737:    external = TRUE;",
          "738:   }",
          "739:  }",
          "741:  g_object_unref (info);",
          "743:  return external;",
          "744: }",
          "748: _symlink_is_external_to_destination (GFile      *file,",
          "749:          const char *symlink,",
          "750:          GFile      *destination,",
          "751:          GHashTable *external_links)",
          "753:  gboolean  external = FALSE;",
          "754:  GFile    *parent;",
          "755:  char    **components;",
          "756:  int       i;",
          "758:  if ((file == NULL) || (symlink == NULL))",
          "759:   return FALSE;",
          "761:  if (symlink[0] == '/')",
          "762:   return TRUE;",
          "764:  parent = g_file_get_parent (file);",
          "765:  components = g_strsplit (symlink, \"/\", -1);",
          "766:  for (i = 0; components[i] != NULL; i++) {",
          "767:   char  *name = components[i];",
          "768:   GFile *tmp;",
          "770:   if ((name[0] == 0) || ((name[0] == '.') && (name[1] == 0)))",
          "771:    continue;",
          "773:   if ((name[0] == '.') && (name[1] == '.') && (name[2] == 0)) {",
          "774:    if (g_file_equal (parent, destination)) {",
          "775:     external = TRUE;",
          "776:     break;",
          "777:    }",
          "778:    else {",
          "779:     tmp = g_file_get_parent (parent);",
          "780:     g_object_unref (parent);",
          "781:     parent = tmp;",
          "782:    }",
          "783:   }",
          "784:   else {",
          "785:    tmp = g_file_get_child (parent, components[i]);",
          "786:    g_object_unref (parent);",
          "787:    parent = tmp;",
          "788:   }",
          "790:   if (_g_file_is_external_link (parent, destination, external_links)) {",
          "791:    external = TRUE;",
          "792:    break;",
          "793:   }",
          "794:  }",
          "796:  g_strfreev (components);",
          "797:  g_object_unref (parent);",
          "799:  return external;",
          "800: }",
          "803: static gboolean",
          "804: _g_path_is_external_to_destination (const char *relative_path,",
          "805:         GFile      *destination,",
          "806:         GHashTable *external_links)",
          "807: {",
          "808:  gboolean  external = FALSE;",
          "",
          "[Added Lines]",
          "701: _g_file_contains_symlinks_in_path (const char *relative_path,",
          "702:        GFile      *destination,",
          "703:        GHashTable *symlinks)",
          "705:  gboolean  contains_symlinks = FALSE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "828:   g_object_unref (parent);",
          "829:   parent = tmp;",
          "833:    break;",
          "834:   }",
          "835:  }",
          "",
          "[Removed Lines]",
          "831:   if (_g_file_is_external_link (parent, destination, external_links)) {",
          "832:    external = TRUE;",
          "",
          "[Added Lines]",
          "728:   if (g_hash_table_contains (symlinks, parent)) {",
          "729:    contains_symlinks = TRUE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "837:  g_strfreev (components);",
          "838:  g_object_unref (parent);",
          "841: }",
          "",
          "[Removed Lines]",
          "840:  return external;",
          "",
          "[Added Lines]",
          "737:  return contains_symlinks;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "851:  GHashTable           *checked_folders;",
          "852:  GHashTable           *created_files;",
          "853:  GHashTable           *folders_created_during_extraction;",
          "855:  struct archive       *a;",
          "856:  struct archive_entry *entry;",
          "857:  int                   r;",
          "",
          "[Removed Lines]",
          "854:  GHashTable           *external_links;",
          "",
          "[Added Lines]",
          "751:  GHashTable           *symlinks;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "868:  checked_folders = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "869:  created_files = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, g_object_unref);",
          "870:  folders_created_during_extraction = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "872:  fr_archive_progress_set_total_files (load_data->archive, extract_data->n_files_to_extract);",
          "874:  while ((r = archive_read_next_header (a, &entry)) == ARCHIVE_OK) {",
          "",
          "[Removed Lines]",
          "871:  external_links = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "",
          "[Added Lines]",
          "768:  symlinks = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "902:    continue;",
          "903:   }",
          "906:    fr_archive_progress_inc_completed_files (load_data->archive, 1);",
          "907:    fr_archive_progress_inc_completed_bytes (load_data->archive, archive_entry_size_is_set (entry) ? archive_entry_size (entry) : 0);",
          "908:    archive_read_data_skip (a);",
          "",
          "[Removed Lines]",
          "905:   if (_g_path_is_external_to_destination (relative_path, extract_data->destination, external_links)) {",
          "",
          "[Added Lines]",
          "808:   if (_g_file_contains_symlinks_in_path (relative_path, extract_data->destination, symlinks)) {",
          "809:    g_warning (\"Skipping '%s' file as it has symlink in parents.\", relative_path);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1123:       load_data->error = g_error_copy (local_error);",
          "1124:      g_clear_error (&local_error);",
          "1125:     }",
          "1128:     archive_read_data_skip (a);",
          "1129:     break;",
          "",
          "[Removed Lines]",
          "1126:     if ((load_data->error == NULL) && _symlink_is_external_to_destination (file, archive_entry_symlink (entry), extract_data->destination, external_links))",
          "1127:      g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
          "",
          "[Added Lines]",
          "1030:     if (load_data->error == NULL)",
          "1031:      g_hash_table_add (symlinks, g_object_ref (file));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1159:  g_hash_table_unref (folders_created_during_extraction);",
          "1160:  g_hash_table_unref (created_files);",
          "1161:  g_hash_table_unref (checked_folders);",
          "1163:  archive_read_free (a);",
          "1164:  extract_data_free (extract_data);",
          "1165: }",
          "",
          "[Removed Lines]",
          "1162:  g_hash_table_unref (external_links);",
          "",
          "[Added Lines]",
          "1066:  g_hash_table_unref (symlinks);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5ac5f06204187711071d2dd0eced17ccf09bde88",
      "candidate_info": {
        "commit_hash": "5ac5f06204187711071d2dd0eced17ccf09bde88",
        "repo": "GNOME/file-roller",
        "commit_url": "https://github.com/GNOME/file-roller/commit/5ac5f06204187711071d2dd0eced17ccf09bde88",
        "files": [
          "src/fr-archive-libarchive.c"
        ],
        "message": "libarchive: overwrite the symbolic link as well",
        "before_after_code_files": [
          "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
          ],
          "candidate": [
            "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
          ]
        }
      },
      "candidate_diff": {
        "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c": [
          "File: src/fr-archive-libarchive.c -> src/fr-archive-libarchive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1110:    case AE_IFLNK:",
          "1111:     if (! g_file_make_symbolic_link (file, archive_entry_symlink (entry), cancellable, &local_error)) {",
          "1113:       load_data->error = g_error_copy (local_error);",
          "1114:      g_clear_error (&local_error);",
          "1115:     }",
          "1117:      g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
          "1118:     archive_read_data_skip (a);",
          "1119:     break;",
          "",
          "[Removed Lines]",
          "1112:      if (! g_error_matches (local_error, G_IO_ERROR, G_IO_ERROR_EXISTS))",
          "1116:     else if (_symlink_is_external_to_destination (file, archive_entry_symlink (entry), extract_data->destination, external_links))",
          "",
          "[Added Lines]",
          "1112:      if (g_error_matches (local_error, G_IO_ERROR, G_IO_ERROR_EXISTS)) {",
          "1113:       g_clear_error (&local_error);",
          "1114:       if (g_file_delete (file, cancellable, &local_error)) {",
          "1115:        g_clear_error (&local_error);",
          "1116:        if (! g_file_make_symbolic_link (file, archive_entry_symlink (entry), cancellable, &local_error))",
          "1117:         load_data->error = g_error_copy (local_error);",
          "1118:       }",
          "1119:       else",
          "1120:        load_data->error = g_error_copy (local_error);",
          "1121:      }",
          "1122:      else",
          "1126:     if ((load_data->error == NULL) && _symlink_is_external_to_destination (file, archive_entry_symlink (entry), extract_data->destination, external_links))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0bd4a14f3bc8dae7c68469f281da9fddbe9e0d02",
      "candidate_info": {
        "commit_hash": "0bd4a14f3bc8dae7c68469f281da9fddbe9e0d02",
        "repo": "GNOME/file-roller",
        "commit_url": "https://github.com/GNOME/file-roller/commit/0bd4a14f3bc8dae7c68469f281da9fddbe9e0d02",
        "files": [
          "src/fr-archive-libarchive.c"
        ],
        "message": "libarchive: Skip files with symlinks in parents\n\nCurrently, it is still possible that some files are extracted outside of\nthe destination dir in case of malicious archives. The checks from commit\n21dfcdbf can be still bypassed in certain cases. See GNOME/file-roller#108\nfor more details. After some investigation, I am convinced that it would be\nbest to simply disallow symlinks in parents. For example, `tar` fails to\nextract such files with the `ENOTDIR` error. Let's do the same here.\n\nFixes: https://gitlab.gnome.org/GNOME/file-roller/-/issues/108",
        "before_after_code_files": [
          "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
          ],
          "candidate": [
            "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
          ]
        }
      },
      "candidate_diff": {
        "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c": [
          "File: src/fr-archive-libarchive.c -> src/fr-archive-libarchive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "697:  return success;",
          "698: }",
          "747: static gboolean",
          "752: {",
          "809:  GFile    *parent;",
          "810:  char    **components;",
          "811:  int       i;",
          "",
          "[Removed Lines]",
          "701: static gboolean",
          "702: _symlink_is_external_to_destination (GFile      *file,",
          "703:          const char *symlink,",
          "704:          GFile      *destination,",
          "705:          GHashTable *external_links);",
          "708: static gboolean",
          "709: _g_file_is_external_link (GFile      *file,",
          "710:      GFile      *destination,",
          "711:      GHashTable *external_links)",
          "712: {",
          "713:  GFileInfo *info;",
          "714:  gboolean   external;",
          "716:  if (g_hash_table_lookup (external_links, file) != NULL)",
          "717:   return TRUE;",
          "719:  info = g_file_query_info (file,",
          "720:       G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK \",\" G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET,",
          "721:       G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS,",
          "722:       NULL,",
          "723:       NULL);",
          "725:  if (info == NULL)",
          "726:   return FALSE;",
          "728:  external = FALSE;",
          "730:  if (g_file_info_get_is_symlink (info)) {",
          "731:   if (_symlink_is_external_to_destination (file,",
          "732:         g_file_info_get_symlink_target (info),",
          "733:         destination,",
          "734:         external_links))",
          "735:   {",
          "736:    g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
          "737:    external = TRUE;",
          "738:   }",
          "739:  }",
          "741:  g_object_unref (info);",
          "743:  return external;",
          "744: }",
          "748: _symlink_is_external_to_destination (GFile      *file,",
          "749:          const char *symlink,",
          "750:          GFile      *destination,",
          "751:          GHashTable *external_links)",
          "753:  gboolean  external = FALSE;",
          "754:  GFile    *parent;",
          "755:  char    **components;",
          "756:  int       i;",
          "758:  if ((file == NULL) || (symlink == NULL))",
          "759:   return FALSE;",
          "761:  if (symlink[0] == '/')",
          "762:   return TRUE;",
          "764:  parent = g_file_get_parent (file);",
          "765:  components = g_strsplit (symlink, \"/\", -1);",
          "766:  for (i = 0; components[i] != NULL; i++) {",
          "767:   char  *name = components[i];",
          "768:   GFile *tmp;",
          "770:   if ((name[0] == 0) || ((name[0] == '.') && (name[1] == 0)))",
          "771:    continue;",
          "773:   if ((name[0] == '.') && (name[1] == '.') && (name[2] == 0)) {",
          "774:    if (g_file_equal (parent, destination)) {",
          "775:     external = TRUE;",
          "776:     break;",
          "777:    }",
          "778:    else {",
          "779:     tmp = g_file_get_parent (parent);",
          "780:     g_object_unref (parent);",
          "781:     parent = tmp;",
          "782:    }",
          "783:   }",
          "784:   else {",
          "785:    tmp = g_file_get_child (parent, components[i]);",
          "786:    g_object_unref (parent);",
          "787:    parent = tmp;",
          "788:   }",
          "790:   if (_g_file_is_external_link (parent, destination, external_links)) {",
          "791:    external = TRUE;",
          "792:    break;",
          "793:   }",
          "794:  }",
          "796:  g_strfreev (components);",
          "797:  g_object_unref (parent);",
          "799:  return external;",
          "800: }",
          "803: static gboolean",
          "804: _g_path_is_external_to_destination (const char *relative_path,",
          "805:         GFile      *destination,",
          "806:         GHashTable *external_links)",
          "807: {",
          "808:  gboolean  external = FALSE;",
          "",
          "[Added Lines]",
          "701: _g_file_contains_symlinks_in_path (const char *relative_path,",
          "702:        GFile      *destination,",
          "703:        GHashTable *symlinks)",
          "705:  gboolean  contains_symlinks = FALSE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "828:   g_object_unref (parent);",
          "829:   parent = tmp;",
          "833:    break;",
          "834:   }",
          "835:  }",
          "",
          "[Removed Lines]",
          "831:   if (_g_file_is_external_link (parent, destination, external_links)) {",
          "832:    external = TRUE;",
          "",
          "[Added Lines]",
          "728:   if (g_hash_table_contains (symlinks, parent)) {",
          "729:    contains_symlinks = TRUE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "837:  g_strfreev (components);",
          "838:  g_object_unref (parent);",
          "841: }",
          "",
          "[Removed Lines]",
          "840:  return external;",
          "",
          "[Added Lines]",
          "737:  return contains_symlinks;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "851:  GHashTable           *checked_folders;",
          "852:  GHashTable           *created_files;",
          "853:  GHashTable           *folders_created_during_extraction;",
          "855:  struct archive       *a;",
          "856:  struct archive_entry *entry;",
          "857:  int                   r;",
          "",
          "[Removed Lines]",
          "854:  GHashTable           *external_links;",
          "",
          "[Added Lines]",
          "751:  GHashTable           *symlinks;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "868:  checked_folders = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "869:  created_files = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, g_object_unref);",
          "870:  folders_created_during_extraction = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "872:  fr_archive_progress_set_total_files (load_data->archive, extract_data->n_files_to_extract);",
          "874:  while ((r = archive_read_next_header (a, &entry)) == ARCHIVE_OK) {",
          "",
          "[Removed Lines]",
          "871:  external_links = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "",
          "[Added Lines]",
          "768:  symlinks = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "902:    continue;",
          "903:   }",
          "906:    fr_archive_progress_inc_completed_files (load_data->archive, 1);",
          "907:    fr_archive_progress_inc_completed_bytes (load_data->archive, archive_entry_size_is_set (entry) ? archive_entry_size (entry) : 0);",
          "908:    archive_read_data_skip (a);",
          "",
          "[Removed Lines]",
          "905:   if (_g_path_is_external_to_destination (relative_path, extract_data->destination, external_links)) {",
          "",
          "[Added Lines]",
          "808:   if (_g_file_contains_symlinks_in_path (relative_path, extract_data->destination, symlinks)) {",
          "809:    g_warning (\"Skipping '%s' file as it has symlink in parents.\", relative_path);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1123:       load_data->error = g_error_copy (local_error);",
          "1124:      g_clear_error (&local_error);",
          "1125:     }",
          "1128:     archive_read_data_skip (a);",
          "1129:     break;",
          "",
          "[Removed Lines]",
          "1126:     if ((load_data->error == NULL) && _symlink_is_external_to_destination (file, archive_entry_symlink (entry), extract_data->destination, external_links))",
          "1127:      g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
          "",
          "[Added Lines]",
          "1030:     if (load_data->error == NULL)",
          "1031:      g_hash_table_add (symlinks, g_object_ref (file));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1159:  g_hash_table_unref (folders_created_during_extraction);",
          "1160:  g_hash_table_unref (created_files);",
          "1161:  g_hash_table_unref (checked_folders);",
          "1163:  archive_read_free (a);",
          "1164:  extract_data_free (extract_data);",
          "1165: }",
          "",
          "[Removed Lines]",
          "1162:  g_hash_table_unref (external_links);",
          "",
          "[Added Lines]",
          "1066:  g_hash_table_unref (symlinks);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e970f4966bf388f6e7c277357c8b186c645683ae",
      "candidate_info": {
        "commit_hash": "e970f4966bf388f6e7c277357c8b186c645683ae",
        "repo": "GNOME/file-roller",
        "commit_url": "https://gitlab.gnome.org/GNOME/file-roller/-/commit/e970f4966bf388f6e7c277357c8b186c645683ae",
        "files": [
          "src/fr-archive-libarchive.c"
        ],
        "message": "libarchive: Skip files with symlinks in parents\n\nCurrently, it is still possible that some files are extracted outside of\nthe destination dir in case of malicious archives. The checks from commit\n21dfcdbf can be still bypassed in certain cases. See GNOME/file-roller#108\nfor more details. After some investigation, I am convinced that it would be\nbest to simply disallow symlinks in parents. For example, `tar` fails to\nextract such files with the `ENOTDIR` error. Let's do the same here.\n\nFixes: https://gitlab.gnome.org/GNOME/file-roller/-/issues/108",
        "before_after_code_files": [
          "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
          ],
          "candidate": [
            "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
          ]
        }
      },
      "candidate_diff": {
        "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c": [
          "File: src/fr-archive-libarchive.c -> src/fr-archive-libarchive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "697:  return success;",
          "698: }",
          "747: static gboolean",
          "752: {",
          "809:  GFile    *parent;",
          "810:  char    **components;",
          "811:  int       i;",
          "",
          "[Removed Lines]",
          "701: static gboolean",
          "702: _symlink_is_external_to_destination (GFile      *file,",
          "703:          const char *symlink,",
          "704:          GFile      *destination,",
          "705:          GHashTable *external_links);",
          "708: static gboolean",
          "709: _g_file_is_external_link (GFile      *file,",
          "710:      GFile      *destination,",
          "711:      GHashTable *external_links)",
          "712: {",
          "713:  GFileInfo *info;",
          "714:  gboolean   external;",
          "716:  if (g_hash_table_lookup (external_links, file) != NULL)",
          "717:   return TRUE;",
          "719:  info = g_file_query_info (file,",
          "720:       G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK \",\" G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET,",
          "721:       G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS,",
          "722:       NULL,",
          "723:       NULL);",
          "725:  if (info == NULL)",
          "726:   return FALSE;",
          "728:  external = FALSE;",
          "730:  if (g_file_info_get_is_symlink (info)) {",
          "731:   if (_symlink_is_external_to_destination (file,",
          "732:         g_file_info_get_symlink_target (info),",
          "733:         destination,",
          "734:         external_links))",
          "735:   {",
          "736:    g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
          "737:    external = TRUE;",
          "738:   }",
          "739:  }",
          "741:  g_object_unref (info);",
          "743:  return external;",
          "744: }",
          "748: _symlink_is_external_to_destination (GFile      *file,",
          "749:          const char *symlink,",
          "750:          GFile      *destination,",
          "751:          GHashTable *external_links)",
          "753:  gboolean  external = FALSE;",
          "754:  GFile    *parent;",
          "755:  char    **components;",
          "756:  int       i;",
          "758:  if ((file == NULL) || (symlink == NULL))",
          "759:   return FALSE;",
          "761:  if (symlink[0] == '/')",
          "762:   return TRUE;",
          "764:  parent = g_file_get_parent (file);",
          "765:  components = g_strsplit (symlink, \"/\", -1);",
          "766:  for (i = 0; components[i] != NULL; i++) {",
          "767:   char  *name = components[i];",
          "768:   GFile *tmp;",
          "770:   if ((name[0] == 0) || ((name[0] == '.') && (name[1] == 0)))",
          "771:    continue;",
          "773:   if ((name[0] == '.') && (name[1] == '.') && (name[2] == 0)) {",
          "774:    if (g_file_equal (parent, destination)) {",
          "775:     external = TRUE;",
          "776:     break;",
          "777:    }",
          "778:    else {",
          "779:     tmp = g_file_get_parent (parent);",
          "780:     g_object_unref (parent);",
          "781:     parent = tmp;",
          "782:    }",
          "783:   }",
          "784:   else {",
          "785:    tmp = g_file_get_child (parent, components[i]);",
          "786:    g_object_unref (parent);",
          "787:    parent = tmp;",
          "788:   }",
          "790:   if (_g_file_is_external_link (parent, destination, external_links)) {",
          "791:    external = TRUE;",
          "792:    break;",
          "793:   }",
          "794:  }",
          "796:  g_strfreev (components);",
          "797:  g_object_unref (parent);",
          "799:  return external;",
          "800: }",
          "803: static gboolean",
          "804: _g_path_is_external_to_destination (const char *relative_path,",
          "805:         GFile      *destination,",
          "806:         GHashTable *external_links)",
          "807: {",
          "808:  gboolean  external = FALSE;",
          "",
          "[Added Lines]",
          "701: _g_file_contains_symlinks_in_path (const char *relative_path,",
          "702:        GFile      *destination,",
          "703:        GHashTable *symlinks)",
          "705:  gboolean  contains_symlinks = FALSE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "828:   g_object_unref (parent);",
          "829:   parent = tmp;",
          "833:    break;",
          "834:   }",
          "835:  }",
          "",
          "[Removed Lines]",
          "831:   if (_g_file_is_external_link (parent, destination, external_links)) {",
          "832:    external = TRUE;",
          "",
          "[Added Lines]",
          "728:   if (g_hash_table_contains (symlinks, parent)) {",
          "729:    contains_symlinks = TRUE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "837:  g_strfreev (components);",
          "838:  g_object_unref (parent);",
          "841: }",
          "",
          "[Removed Lines]",
          "840:  return external;",
          "",
          "[Added Lines]",
          "737:  return contains_symlinks;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "851:  GHashTable           *checked_folders;",
          "852:  GHashTable           *created_files;",
          "853:  GHashTable           *folders_created_during_extraction;",
          "855:  struct archive       *a;",
          "856:  struct archive_entry *entry;",
          "857:  int                   r;",
          "",
          "[Removed Lines]",
          "854:  GHashTable           *external_links;",
          "",
          "[Added Lines]",
          "751:  GHashTable           *symlinks;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "868:  checked_folders = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "869:  created_files = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, g_object_unref);",
          "870:  folders_created_during_extraction = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "872:  fr_archive_progress_set_total_files (load_data->archive, extract_data->n_files_to_extract);",
          "874:  while ((r = archive_read_next_header (a, &entry)) == ARCHIVE_OK) {",
          "",
          "[Removed Lines]",
          "871:  external_links = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "",
          "[Added Lines]",
          "768:  symlinks = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "902:    continue;",
          "903:   }",
          "906:    fr_archive_progress_inc_completed_files (load_data->archive, 1);",
          "907:    fr_archive_progress_inc_completed_bytes (load_data->archive, archive_entry_size_is_set (entry) ? archive_entry_size (entry) : 0);",
          "908:    archive_read_data_skip (a);",
          "",
          "[Removed Lines]",
          "905:   if (_g_path_is_external_to_destination (relative_path, extract_data->destination, external_links)) {",
          "",
          "[Added Lines]",
          "808:   if (_g_file_contains_symlinks_in_path (relative_path, extract_data->destination, symlinks)) {",
          "809:    g_warning (\"Skipping '%s' file as it has symlink in parents.\", relative_path);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1123:       load_data->error = g_error_copy (local_error);",
          "1124:      g_clear_error (&local_error);",
          "1125:     }",
          "1128:     archive_read_data_skip (a);",
          "1129:     break;",
          "",
          "[Removed Lines]",
          "1126:     if ((load_data->error == NULL) && _symlink_is_external_to_destination (file, archive_entry_symlink (entry), extract_data->destination, external_links))",
          "1127:      g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
          "",
          "[Added Lines]",
          "1030:     if (load_data->error == NULL)",
          "1031:      g_hash_table_add (symlinks, g_object_ref (file));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1159:  g_hash_table_unref (folders_created_during_extraction);",
          "1160:  g_hash_table_unref (created_files);",
          "1161:  g_hash_table_unref (checked_folders);",
          "1163:  archive_read_free (a);",
          "1164:  extract_data_free (extract_data);",
          "1165: }",
          "",
          "[Removed Lines]",
          "1162:  g_hash_table_unref (external_links);",
          "",
          "[Added Lines]",
          "1066:  g_hash_table_unref (symlinks);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "45b2e76e25648961db621f898b4a9eb7c75ef4c0",
      "candidate_info": {
        "commit_hash": "45b2e76e25648961db621f898b4a9eb7c75ef4c0",
        "repo": "GNOME/file-roller",
        "commit_url": "https://github.com/GNOME/file-roller/commit/45b2e76e25648961db621f898b4a9eb7c75ef4c0",
        "files": [
          "src/fr-archive-libarchive.c"
        ],
        "message": "libarchive: do not follow external links when extracting files\n\nDo not extract a file if its parent is a symbolic link to a\ndirectory external to the destination.",
        "before_after_code_files": [
          "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
          ],
          "candidate": [
            "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
          ]
        }
      },
      "candidate_diff": {
        "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c": [
          "File: src/fr-archive-libarchive.c -> src/fr-archive-libarchive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "603: }",
          "606: static void",
          "607: extract_archive_thread (GSimpleAsyncResult *result,",
          "608:    GObject            *object,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "606: static gboolean",
          "607: _symlink_is_external_to_destination (GFile      *file,",
          "608:          const char *symlink,",
          "609:          GFile      *destination,",
          "610:          GHashTable *external_links);",
          "613: static gboolean",
          "614: _g_file_is_external_link (GFile      *file,",
          "615:      GFile      *destination,",
          "616:      GHashTable *external_links)",
          "617: {",
          "618:  GFileInfo *info;",
          "619:  gboolean   external;",
          "621:  if (g_hash_table_lookup (external_links, file) != NULL)",
          "622:   return TRUE;",
          "624:  info = g_file_query_info (file,",
          "625:       G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK \",\" G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET,",
          "626:       G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS,",
          "627:       NULL,",
          "628:       NULL);",
          "630:  if (info == NULL)",
          "631:   return FALSE;",
          "633:  external = FALSE;",
          "635:  if (g_file_info_get_is_symlink (info)) {",
          "636:   if (_symlink_is_external_to_destination (file,",
          "637:         g_file_info_get_symlink_target (info),",
          "638:         destination,",
          "639:         external_links))",
          "640:   {",
          "641:    g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
          "642:    external = TRUE;",
          "643:   }",
          "644:  }",
          "646:  g_object_unref (info);",
          "648:  return external;",
          "649: }",
          "652: static gboolean",
          "653: _symlink_is_external_to_destination (GFile      *file,",
          "654:          const char *symlink,",
          "655:          GFile      *destination,",
          "656:          GHashTable *external_links)",
          "657: {",
          "658:  gboolean  external = FALSE;",
          "659:  GFile    *parent;",
          "660:  char    **components;",
          "661:  int       i;",
          "663:  if ((file == NULL) || (symlink == NULL))",
          "664:   return FALSE;",
          "666:  if (symlink[0] == '/')",
          "667:   return TRUE;",
          "669:  parent = g_file_get_parent (file);",
          "670:  components = g_strsplit (symlink, \"/\", -1);",
          "671:  for (i = 0; components[i] != NULL; i++) {",
          "672:   char  *name = components[i];",
          "673:   GFile *tmp;",
          "675:   if ((name[0] == 0) || ((name[0] == '.') && (name[1] == 0)))",
          "676:    continue;",
          "678:   if ((name[0] == '.') && (name[1] == '.') && (name[2] == 0)) {",
          "679:    if (g_file_equal (parent, destination)) {",
          "680:     external = TRUE;",
          "681:     break;",
          "682:    }",
          "683:    else {",
          "684:     tmp = g_file_get_parent (parent);",
          "685:     g_object_unref (parent);",
          "686:     parent = tmp;",
          "687:    }",
          "688:   }",
          "689:   else {",
          "690:    tmp = g_file_get_child (parent, components[i]);",
          "691:    g_object_unref (parent);",
          "692:    parent = tmp;",
          "693:   }",
          "695:   if (_g_file_is_external_link (parent, destination, external_links)) {",
          "696:    external = TRUE;",
          "697:    break;",
          "698:   }",
          "699:  }",
          "701:  g_strfreev (components);",
          "702:  g_object_unref (parent);",
          "704:  return external;",
          "705: }",
          "708: static gboolean",
          "709: _g_path_is_external_to_destination (const char *relative_path,",
          "710:         GFile      *destination,",
          "711:         GHashTable *external_links)",
          "712: {",
          "713:  gboolean  external = FALSE;",
          "714:  GFile    *parent;",
          "715:  char    **components;",
          "716:  int       i;",
          "718:  if (relative_path == NULL)",
          "719:   return FALSE;",
          "721:  if (destination == NULL)",
          "722:   return TRUE;",
          "724:  parent = g_object_ref (destination);",
          "725:  components = g_strsplit (relative_path, \"/\", -1);",
          "726:  for (i = 0; (components[i] != NULL) && (components[i + 1] != NULL); i++) {",
          "727:   GFile *tmp;",
          "729:   if (components[i][0] == 0)",
          "730:    continue;",
          "732:   tmp = g_file_get_child (parent, components[i]);",
          "733:   g_object_unref (parent);",
          "734:   parent = tmp;",
          "736:   if (_g_file_is_external_link (parent, destination, external_links)) {",
          "737:    external = TRUE;",
          "738:    break;",
          "739:   }",
          "740:  }",
          "742:  g_strfreev (components);",
          "743:  g_object_unref (parent);",
          "745:  return external;",
          "746: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "613:  GHashTable           *checked_folders;",
          "614:  GHashTable           *created_files;",
          "615:  GHashTable           *folders_created_during_extraction;",
          "616:  struct archive       *a;",
          "617:  struct archive_entry *entry;",
          "618:  int                   r;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "759:  GHashTable           *external_links;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "623:  checked_folders = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "624:  created_files = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, g_object_unref);",
          "625:  folders_created_during_extraction = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "626:  fr_archive_progress_set_total_files (load_data->archive, extract_data->n_files_to_extract);",
          "628:  a = archive_read_new ();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "770:  external_links = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "654:   fullpath = (*pathname == '/') ? g_strdup (pathname) : g_strconcat (\"/\", pathname, NULL);",
          "655:   relative_path = _g_path_get_relative_basename_safe (fullpath, extract_data->base_dir, extract_data->junk_paths);",
          "656:   if (relative_path == NULL) {",
          "657:    archive_read_data_skip (a);",
          "658:    continue;",
          "659:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "802:    fr_archive_progress_inc_completed_files (load_data->archive, 1);",
          "803:    fr_archive_progress_inc_completed_bytes (load_data->archive, archive_entry_size_is_set (entry) ? archive_entry_size (entry) : 0);",
          "804:    archive_read_data_skip (a);",
          "805:    continue;",
          "806:   }",
          "808:   if (_g_path_is_external_to_destination (relative_path, extract_data->destination, external_links)) {",
          "809:    fr_archive_progress_inc_completed_files (load_data->archive, 1);",
          "810:    fr_archive_progress_inc_completed_bytes (load_data->archive, archive_entry_size_is_set (entry) ? archive_entry_size (entry) : 0);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "862:       load_data->error = g_error_copy (local_error);",
          "863:      g_clear_error (&local_error);",
          "864:     }",
          "865:     archive_read_data_skip (a);",
          "866:     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1019:     else if (_symlink_is_external_to_destination (file, archive_entry_symlink (entry), extract_data->destination, external_links))",
          "1020:      g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "896:  g_hash_table_unref (folders_created_during_extraction);",
          "897:  g_hash_table_unref (created_files);",
          "898:  g_hash_table_unref (checked_folders);",
          "899:  archive_read_free (a);",
          "900:  extract_data_free (extract_data);",
          "901: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1055:  g_hash_table_unref (external_links);",
          "",
          "---------------"
        ]
      }
    }
  ]
}