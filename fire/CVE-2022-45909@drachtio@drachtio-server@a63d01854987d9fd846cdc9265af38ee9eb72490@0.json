{
  "cve_id": "CVE-2022-45909",
  "cve_desc": "drachtio-server before 0.8.19 has a heap-based buffer over-read via a long Request-URI in an INVITE request.",
  "repo": "drachtio/drachtio-server",
  "patch_hash": "a63d01854987d9fd846cdc9265af38ee9eb72490",
  "patch_info": {
    "commit_hash": "a63d01854987d9fd846cdc9265af38ee9eb72490",
    "repo": "drachtio/drachtio-server",
    "commit_url": "https://github.com/drachtio/drachtio-server/commit/a63d01854987d9fd846cdc9265af38ee9eb72490",
    "files": [
      "src/drachtio.cpp",
      "src/sip-dialog-controller.cpp"
    ],
    "message": "sending an invite with a request-uri longer than 255 characters can cause a crash (#238)",
    "before_after_code_files": [
      "src/drachtio.cpp||src/drachtio.cpp",
      "src/sip-dialog-controller.cpp||src/sip-dialog-controller.cpp"
    ]
  },
  "patch_diff": {
    "src/drachtio.cpp||src/drachtio.cpp": [
      "File: src/drachtio.cpp -> src/drachtio.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "55: #define MAX_LINELEN 2047",
      "57: #define BOOST_UUID (1)",
      "59: using namespace std ;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "57: #define MAX_SIP_URI_LEN (1024)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "336:     bool normalizeSipUri( std::string& uri, int brackets ) {",
      "337:         su_home_t* home = theOneAndOnlyController->getHome() ;",
      "338:         char *s ;",
      "341:         char hp[64] ;",
      "342:         char const *display = NULL;",
      "343:         url_t url[1];",
      "",
      "[Removed Lines]",
      "339:         char buf[255];",
      "340:         char obuf[255] ;",
      "",
      "[Added Lines]",
      "341:         char buf[MAX_SIP_URI_LEN];",
      "342:         char obuf[MAX_SIP_URI_LEN] ;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "346:         int rc ;",
      "352:         rc = sip_name_addr_d(home, &s, &display, url, &params, &comment) ;",
      "",
      "[Removed Lines]",
      "349:         s = strncpy( buf, uri.c_str(), 255 ) ;",
      "",
      "[Added Lines]",
      "351:         s = strncpy( buf, uri.c_str(), MAX_SIP_URI_LEN ) ;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "374:             return false ;",
      "375:         }",
      "376:         uri.assign( obuf ) ;",
      "378:     }",
      "380:     bool replaceHostInUri( std::string& uri, const char* szHost, const char* szPort ) {",
      "381:         su_home_t* home = theOneAndOnlyController->getHome() ;",
      "382:         char *s ;",
      "385:         char hp[64] ;",
      "386:         char const *display = NULL;",
      "387:         url_t url[1];",
      "",
      "[Removed Lines]",
      "377:         return true ;",
      "383:         char buf[255];",
      "384:         char obuf[255] ;",
      "",
      "[Added Lines]",
      "379:         return uri.length() < MAX_SIP_URI_LEN ;",
      "385:         char buf[MAX_SIP_URI_LEN];",
      "386:         char obuf[MAX_SIP_URI_LEN] ;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "404:         url->url_port = szPort ;",
      "410:         if( params ) {",
      "",
      "[Removed Lines]",
      "407:         int nChars = sip_name_addr_e(obuf, 255, 0, display, 1, url, params, comment) ;",
      "",
      "[Added Lines]",
      "409:         int nChars = sip_name_addr_e(obuf, MAX_SIP_URI_LEN, 0, display, 1, url, params, comment) ;",
      "",
      "---------------"
    ],
    "src/sip-dialog-controller.cpp||src/sip-dialog-controller.cpp": [
      "File: src/sip-dialog-controller.cpp -> src/sip-dialog-controller.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "529:              }",
      "533:             if( isLocalSipUri( requestUri ) ) {",
      "534:                 throw std::runtime_error(\"can not send request to myself\") ;",
      "535:             }",
      "",
      "[Removed Lines]",
      "532:             normalizeSipUri( requestUri, 0 ) ;",
      "",
      "[Added Lines]",
      "532:             if (!normalizeSipUri( requestUri, 0 )) {",
      "533:                 throw std::runtime_error(string(\"invalid request-uri: \") + requestUri ) ;",
      "534:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "270b952738682c5f5e252482dbe219793aa6dc55",
      "candidate_info": {
        "commit_hash": "270b952738682c5f5e252482dbe219793aa6dc55",
        "repo": "drachtio/drachtio-server",
        "commit_url": "https://github.com/drachtio/drachtio-server/commit/270b952738682c5f5e252482dbe219793aa6dc55",
        "files": [
          "src/drachtio.cpp",
          "src/sip-dialog-controller.cpp"
        ],
        "message": "sending an invite with a request-uri longer than 255 characters can cause a crash",
        "before_after_code_files": [
          "src/drachtio.cpp||src/drachtio.cpp",
          "src/sip-dialog-controller.cpp||src/sip-dialog-controller.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/drachtio/drachtio-server/pull/238"
        ],
        "olp_code_files": {
          "patch": [
            "src/drachtio.cpp||src/drachtio.cpp",
            "src/sip-dialog-controller.cpp||src/sip-dialog-controller.cpp"
          ],
          "candidate": [
            "src/drachtio.cpp||src/drachtio.cpp",
            "src/sip-dialog-controller.cpp||src/sip-dialog-controller.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/drachtio.cpp||src/drachtio.cpp": [
          "File: src/drachtio.cpp -> src/drachtio.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "55: #define MAX_LINELEN 2047",
          "57: #define BOOST_UUID (1)",
          "59: using namespace std ;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: #define MAX_SIP_URI_LEN (1024)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "336:     bool normalizeSipUri( std::string& uri, int brackets ) {",
          "337:         su_home_t* home = theOneAndOnlyController->getHome() ;",
          "338:         char *s ;",
          "341:         char hp[64] ;",
          "342:         char const *display = NULL;",
          "343:         url_t url[1];",
          "",
          "[Removed Lines]",
          "339:         char buf[255];",
          "340:         char obuf[255] ;",
          "",
          "[Added Lines]",
          "341:         char buf[MAX_SIP_URI_LEN];",
          "342:         char obuf[MAX_SIP_URI_LEN] ;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "346:         int rc ;",
          "352:         rc = sip_name_addr_d(home, &s, &display, url, &params, &comment) ;",
          "",
          "[Removed Lines]",
          "349:         s = strncpy( buf, uri.c_str(), 255 ) ;",
          "",
          "[Added Lines]",
          "351:         s = strncpy( buf, uri.c_str(), MAX_SIP_URI_LEN ) ;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "374:             return false ;",
          "375:         }",
          "376:         uri.assign( obuf ) ;",
          "378:     }",
          "380:     bool replaceHostInUri( std::string& uri, const char* szHost, const char* szPort ) {",
          "381:         su_home_t* home = theOneAndOnlyController->getHome() ;",
          "382:         char *s ;",
          "385:         char hp[64] ;",
          "386:         char const *display = NULL;",
          "387:         url_t url[1];",
          "",
          "[Removed Lines]",
          "377:         return true ;",
          "383:         char buf[255];",
          "384:         char obuf[255] ;",
          "",
          "[Added Lines]",
          "379:         return uri.length() < MAX_SIP_URI_LEN ;",
          "385:         char buf[MAX_SIP_URI_LEN];",
          "386:         char obuf[MAX_SIP_URI_LEN] ;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "404:         url->url_port = szPort ;",
          "410:         if( params ) {",
          "",
          "[Removed Lines]",
          "407:         int nChars = sip_name_addr_e(obuf, 255, 0, display, 1, url, params, comment) ;",
          "",
          "[Added Lines]",
          "409:         int nChars = sip_name_addr_e(obuf, MAX_SIP_URI_LEN, 0, display, 1, url, params, comment) ;",
          "",
          "---------------"
        ],
        "src/sip-dialog-controller.cpp||src/sip-dialog-controller.cpp": [
          "File: src/sip-dialog-controller.cpp -> src/sip-dialog-controller.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "529:              }",
          "533:             if( isLocalSipUri( requestUri ) ) {",
          "534:                 throw std::runtime_error(\"can not send request to myself\") ;",
          "535:             }",
          "",
          "[Removed Lines]",
          "532:             normalizeSipUri( requestUri, 0 ) ;",
          "",
          "[Added Lines]",
          "532:             if (!normalizeSipUri( requestUri, 0 )) {",
          "533:                 throw std::runtime_error(string(\"invalid request-uri: \") + requestUri ) ;",
          "534:             }",
          "",
          "---------------"
        ]
      }
    }
  ]
}