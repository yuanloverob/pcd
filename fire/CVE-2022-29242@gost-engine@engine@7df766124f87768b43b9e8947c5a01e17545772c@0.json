{
  "cve_id": "CVE-2022-29242",
  "cve_desc": "GOST engine is a reference implementation of the Russian GOST crypto algorithms for OpenSSL. TLS clients using GOST engine when ciphersuite `TLS_GOSTR341112_256_WITH_KUZNYECHIK_CTR_OMAC` is agreed and the server uses 512 bit GOST secret keys are vulnerable to buffer overflow. GOST engine version 3.0.1 contains a patch for this issue. Disabling ciphersuite `TLS_GOSTR341112_256_WITH_KUZNYECHIK_CTR_OMAC` is a possible workaround.",
  "repo": "gost-engine/engine",
  "patch_hash": "7df766124f87768b43b9e8947c5a01e17545772c",
  "patch_info": {
    "commit_hash": "7df766124f87768b43b9e8947c5a01e17545772c",
    "repo": "gost-engine/engine",
    "commit_url": "https://github.com/gost-engine/engine/commit/7df766124f87768b43b9e8947c5a01e17545772c",
    "files": [
      "gost_ec_keyx.c"
    ],
    "message": "Fix buffer overrun in creating key transport blob according to RFC 9189, 4.2.4.2\n\nResolves: CVE-2022-29242",
    "before_after_code_files": [
      "gost_ec_keyx.c||gost_ec_keyx.c"
    ]
  },
  "patch_diff": {
    "gost_ec_keyx.c||gost_ec_keyx.c": [
      "File: gost_ec_keyx.c -> gost_ec_keyx.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "292:     int key_is_ephemeral = 1;",
      "293:     gost_ctx cctx;",
      "294:     EVP_PKEY *sec_key = EVP_PKEY_CTX_get0_peerkey(pctx);",
      "295:     if (data->shared_ukm_size) {",
      "296:         memcpy(ukm, data->shared_ukm, 8);",
      "297:     } else {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "295:     int res_len = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "373:             goto err;",
      "374:         }",
      "375:     }",
      "377:         ret = 1;",
      "378:     OPENSSL_cleanse(shared_key, sizeof(shared_key));",
      "379:     GOST_KEY_TRANSPORT_free(gkt);",
      "380:     return ret;",
      "",
      "[Removed Lines]",
      "376:     if ((*out_len = i2d_GOST_KEY_TRANSPORT(gkt, out ? &out : NULL)) > 0)",
      "",
      "[Added Lines]",
      "378:     res_len = i2d_GOST_KEY_TRANSPORT(gkt, NULL);",
      "379:     if (res_len <= 0) {",
      "380:         GOSTerr(GOST_F_PKEY_GOST_ECCP_ENCRYPT, ERR_R_ASN1_LIB);",
      "381:         goto err;",
      "382:     }",
      "384:     if (out == NULL) {",
      "387:     } else {",
      "388:         if ((size_t)res_len > *out_len) {",
      "389:             GOSTerr(GOST_F_PKEY_GOST_ECCP_ENCRYPT, GOST_R_INVALID_BUFFER_SIZE);",
      "390:             goto err;",
      "391:         }",
      "392:         if ((*out_len = i2d_GOST_KEY_TRANSPORT(gkt, &out)) > 0)",
      "393:             ret = 1;",
      "394:         else",
      "395:             GOSTerr(GOST_F_PKEY_GOST_ECCP_ENCRYPT, ERR_R_ASN1_LIB);",
      "396:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bb2183d09ae6f44640197b2d3eb8af75f549a57c",
      "candidate_info": {
        "commit_hash": "bb2183d09ae6f44640197b2d3eb8af75f549a57c",
        "repo": "gost-engine/engine",
        "commit_url": "https://github.com/gost-engine/engine/commit/bb2183d09ae6f44640197b2d3eb8af75f549a57c",
        "files": [
          "gost_ec_keyx.c"
        ],
        "message": "Fix buffer overrun in creating key transport blob according to RFC 9189, 4.2.4.2\n\nResolves: CVE-2022-29242",
        "before_after_code_files": [
          "gost_ec_keyx.c||gost_ec_keyx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "gost_ec_keyx.c||gost_ec_keyx.c"
          ],
          "candidate": [
            "gost_ec_keyx.c||gost_ec_keyx.c"
          ]
        }
      },
      "candidate_diff": {
        "gost_ec_keyx.c||gost_ec_keyx.c": [
          "File: gost_ec_keyx.c -> gost_ec_keyx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "418:     int key_is_ephemeral = 1;",
          "419:     gost_ctx cctx;",
          "420:     EVP_PKEY *sec_key = EVP_PKEY_CTX_get0_peerkey(pctx);",
          "421:     if (data->shared_ukm_size) {",
          "422:         memcpy(ukm, data->shared_ukm, 8);",
          "423:     } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "421:     int res_len = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "499:             goto err;",
          "500:         }",
          "501:     }",
          "503:         ret = 1;",
          "504:     OPENSSL_cleanse(shared_key, sizeof(shared_key));",
          "505:     GOST_KEY_TRANSPORT_free(gkt);",
          "506:     return ret;",
          "",
          "[Removed Lines]",
          "502:     if ((*out_len = i2d_GOST_KEY_TRANSPORT(gkt, out ? &out : NULL)) > 0)",
          "",
          "[Added Lines]",
          "504:     res_len = i2d_GOST_KEY_TRANSPORT(gkt, NULL);",
          "505:     if (res_len <= 0) {",
          "506:         GOSTerr(GOST_F_PKEY_GOST_ECCP_ENCRYPT, ERR_R_ASN1_LIB);",
          "507:         goto err;",
          "508:     }",
          "510:     if (out == NULL) {",
          "513:     } else {",
          "514:         if ((size_t)res_len > *out_len) {",
          "515:             GOSTerr(GOST_F_PKEY_GOST_ECCP_ENCRYPT, GOST_R_INVALID_BUFFER_SIZE);",
          "516:             goto err;",
          "517:         }",
          "518:         if ((*out_len = i2d_GOST_KEY_TRANSPORT(gkt, &out)) > 0)",
          "519:             ret = 1;",
          "520:         else",
          "521:             GOSTerr(GOST_F_PKEY_GOST_ECCP_ENCRYPT, ERR_R_ASN1_LIB);",
          "522:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}