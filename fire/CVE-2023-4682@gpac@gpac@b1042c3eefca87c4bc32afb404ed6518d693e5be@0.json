{
  "cve_id": "CVE-2023-4682",
  "cve_desc": "Heap-based Buffer Overflow in GitHub repository gpac/gpac prior to 2.3-DEV.",
  "repo": "gpac/gpac",
  "patch_hash": "b1042c3eefca87c4bc32afb404ed6518d693e5be",
  "patch_info": {
    "commit_hash": "b1042c3eefca87c4bc32afb404ed6518d693e5be",
    "repo": "gpac/gpac",
    "commit_url": "https://github.com/gpac/gpac/commit/b1042c3eefca87c4bc32afb404ed6518d693e5be",
    "files": [
      "src/media_tools/avilib.c"
    ],
    "message": "fixed #2574",
    "before_after_code_files": [
      "src/media_tools/avilib.c||src/media_tools/avilib.c"
    ]
  },
  "patch_diff": {
    "src/media_tools/avilib.c||src/media_tools/avilib.c": [
      "File: src/media_tools/avilib.c -> src/media_tools/avilib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2941:  }",
      "2943:  gf_fseek(AVI->fdes, AVI->video_index[AVI->video_pos].pos, SEEK_SET);",
      "2945:  if (avi_read(AVI->fdes,vidbuf,n) != (u32) n)",
      "2946:  {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2944:  AVI->video_pos++;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2948:   return -1;",
      "2949:  }",
      "2953:  return n;",
      "2954: }",
      "",
      "[Removed Lines]",
      "2951:  AVI->video_pos++;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3067:    todo = left;",
      "3068:   pos = AVI->track[AVI->aptr].audio_index[AVI->track[AVI->aptr].audio_posc].pos + AVI->track[AVI->aptr].audio_posb;",
      "3069:   gf_fseek(AVI->fdes, pos, SEEK_SET);",
      "3070:   if ( (ret = avi_read(AVI->fdes,audbuf+nr,todo)) != todo)",
      "3071:   {",
      "3072:    GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[avilib] XXX pos = %\"LLD\", ret = %\"LLD\", todo = %ld\\n\", pos, ret, todo));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3069:   AVI->track[AVI->aptr].audio_posb += todo;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "3075:   }",
      "3076:   bytes -= todo;",
      "3077:   nr    += todo;",
      "3079:  }",
      "3081:  return nr;",
      "",
      "[Removed Lines]",
      "3078:   AVI->track[AVI->aptr].audio_posb += todo;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e9b9134bbf8f952e59f7919f0ceac4d55cb0fe0b",
      "candidate_info": {
        "commit_hash": "e9b9134bbf8f952e59f7919f0ceac4d55cb0fe0b",
        "repo": "gpac/gpac",
        "commit_url": "https://github.com/gpac/gpac/commit/e9b9134bbf8f952e59f7919f0ceac4d55cb0fe0b",
        "files": [
          "src/filters/dmx_avi.c",
          "src/media_tools/avilib.c",
          "src/media_tools/mpegts.c"
        ],
        "message": "fix #2634 - 2 stack overflow",
        "before_after_code_files": [
          "src/filters/dmx_avi.c||src/filters/dmx_avi.c",
          "src/media_tools/avilib.c||src/media_tools/avilib.c",
          "src/media_tools/mpegts.c||src/media_tools/mpegts.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/media_tools/avilib.c||src/media_tools/avilib.c"
          ],
          "candidate": [
            "src/media_tools/avilib.c||src/media_tools/avilib.c"
          ]
        }
      },
      "candidate_diff": {
        "src/filters/dmx_avi.c||src/filters/dmx_avi.c": [
          "File: src/filters/dmx_avi.c -> src/filters/dmx_avi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "282:     u32 cid=0;",
          "283:     char data[8];",
          "284:     AVI_set_audio_track(ctx->avi, i);",
          "286: #ifndef GPAC_DISABLE_AV_PARSERS",
          "289: #endif",
          "290:     AVI_set_audio_position(ctx->avi, 0);",
          "291:     if (cid) codecid = cid;",
          "292:    }",
          "",
          "[Removed Lines]",
          "285:     AVI_read_audio(ctx->avi, data, 8, (int*)&cid);",
          "287:     u32 hdr = GF_4CC(data[0], data[1], data[2], data[3]);",
          "288:     cid = gf_mp3_object_type_indication(hdr);",
          "",
          "[Added Lines]",
          "285:     if (AVI_read_audio(ctx->avi, data, 8, (int*)&cid)) {",
          "287:      u32 hdr = GF_4CC(data[0], data[1], data[2], data[3]);",
          "288:      cid = gf_mp3_object_type_indication(hdr);",
          "290:     }",
          "",
          "---------------"
        ],
        "src/media_tools/avilib.c||src/media_tools/avilib.c": [
          "File: src/media_tools/avilib.c -> src/media_tools/avilib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3037: int AVI_read_audio(avi_t *AVI, u8 *audbuf, int bytes, int *continuous)",
          "3038: {",
          "3040:  s64 pos;",
          "3042:  if(AVI->mode==AVI_MODE_WRITE) {",
          "",
          "[Removed Lines]",
          "3039:  int nr, todo;",
          "",
          "[Added Lines]",
          "3039:  int nr;",
          "3040:  u32 todo;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3059:  while(bytes>0)",
          "3060:  {",
          "3061:   s64 ret;",
          "3063:   if(left==0)",
          "3064:   {",
          "3065:    if(AVI->track[AVI->aptr].audio_posc>=AVI->track[AVI->aptr].audio_chunks-1) return nr;",
          "",
          "[Removed Lines]",
          "3062:   int left = (int) (AVI->track[AVI->aptr].audio_index[AVI->track[AVI->aptr].audio_posc].len - AVI->track[AVI->aptr].audio_posb);",
          "",
          "[Added Lines]",
          "3063:   u32 left = (u32) (AVI->track[AVI->aptr].audio_index[AVI->track[AVI->aptr].audio_posc].len - AVI->track[AVI->aptr].audio_posb);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3069:    continue;",
          "3070:   }",
          "3072:    todo = bytes;",
          "3073:   else",
          "3074:    todo = left;",
          "3075:   pos = AVI->track[AVI->aptr].audio_index[AVI->track[AVI->aptr].audio_posc].pos + AVI->track[AVI->aptr].audio_posb;",
          "3076:   gf_fseek(AVI->fdes, pos, SEEK_SET);",
          "3079:   {",
          "3081:    AVI_errno = AVI_ERR_READ;",
          "3082:    return -1;",
          "3083:   }",
          "",
          "[Removed Lines]",
          "3071:   if(bytes<left)",
          "3077:   AVI->track[AVI->aptr].audio_posb += todo;",
          "3078:   if ( (ret = avi_read(AVI->fdes,audbuf+nr,todo)) != todo)",
          "3080:    GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[avilib] XXX pos = %\"LLD\", ret = %\"LLD\", todo = %ld\\n\", pos, ret, todo));",
          "",
          "[Added Lines]",
          "3072:   if((u32)bytes<left)",
          "3078:   AVI->track[AVI->aptr].audio_posb += (int)todo;",
          "3079:   if ( (ret = avi_read(AVI->fdes,audbuf+nr,todo)) != (s64)todo)",
          "3081:    GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[avilib] XXX pos = \"LLD\", ret = \"LLD\", todo = %ld\\n\", pos, ret, todo));",
          "",
          "---------------"
        ],
        "src/media_tools/mpegts.c||src/media_tools/mpegts.c": [
          "File: src/media_tools/mpegts.c -> src/media_tools/mpegts.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2468:        break;",
          "2469:       }",
          "2470:       gf_bs_read_data(bs, _url, url_len);",
          "2472:      }",
          "2473:      temi_loc.external_URL = URL;",
          "",
          "[Removed Lines]",
          "2471:       _url[url_len] = 0;",
          "",
          "[Added Lines]",
          "2471:       _url[url_len >= GF_ARRAY_LENGTH(URL) ? GF_ARRAY_LENGTH(URL)-1 : url_len] = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}