{
  "cve_id": "CVE-2022-41884",
  "cve_desc": "TensorFlow is an open source platform for machine learning. If a numpy array is created with a shape such that one element is zero and the others sum to a large number, an error will be raised. We have patched the issue in GitHub commit 2b56169c16e375c521a3bc8ea658811cc0793784. The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "2b56169c16e375c521a3bc8ea658811cc0793784",
  "patch_info": {
    "commit_hash": "2b56169c16e375c521a3bc8ea658811cc0793784",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/2b56169c16e375c521a3bc8ea658811cc0793784",
    "files": [
      "tensorflow/python/eager/tensor_test.py",
      "tensorflow/python/lib/core/BUILD",
      "tensorflow/python/lib/core/ndarray_tensor_bridge.cc"
    ],
    "message": "Fix segfault when using unusally shaped tensors.\n\nIf a numpy array is created with a shape such that one element is zero and the others sum to a large number, an error will be raised. E.g. the following raises an error:\n\nnp.ones((0, 2**31, 2**31))\n\nTF previously would not check the return value of PyArray_SimpleNewFromData, which returns null on such shapes. Now the return value is checked.\n\nPiperOrigin-RevId: 477751929",
    "before_after_code_files": [
      "tensorflow/python/eager/tensor_test.py||tensorflow/python/eager/tensor_test.py",
      "tensorflow/python/lib/core/ndarray_tensor_bridge.cc||tensorflow/python/lib/core/ndarray_tensor_bridge.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/python/eager/tensor_test.py||tensorflow/python/eager/tensor_test.py": [
      "File: tensorflow/python/eager/tensor_test.py -> tensorflow/python/eager/tensor_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "515:         \"can have at most 32 dimensions\"):",
      "516:       t.numpy()",
      "519: class TFETensorUtilTest(test_util.TensorFlowTestCase):",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "518:   def testNumpyDimsTooBig(self):",
      "519:     # Creating a Numpy array fails in some cases if the product of non-zero",
      "520:     # dimensions is very big, even if the shape also has a zero in it.",
      "521:     t = array_ops.ones((0, 2**31, 2**31))",
      "522:     with self.assertRaisesRegex(",
      "523:         errors.InvalidArgumentError,",
      "524:         r\"Failed to create numpy array from tensor of shape \"",
      "525:         r\"\\[0, 2147483648, 2147483648\\]. Numpy error.*array is too big\"):",
      "526:       t.numpy()",
      "",
      "---------------"
    ],
    "tensorflow/python/lib/core/ndarray_tensor_bridge.cc||tensorflow/python/lib/core/ndarray_tensor_bridge.cc": [
      "File: tensorflow/python/lib/core/ndarray_tensor_bridge.cc -> tensorflow/python/lib/core/ndarray_tensor_bridge.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "13: limitations under the License.",
      "17: #include \"tensorflow/python/lib/core/numpy.h\"",
      "19: #include <vector>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "21: #include \"tensorflow/python/lib/core/ndarray_tensor_bridge.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "22: #include \"tensorflow/core/lib/core/errors.h\"",
      "23: #include \"tensorflow/core/platform/mutex.h\"",
      "24: #include \"tensorflow/python/lib/core/bfloat16.h\"",
      "27: namespace tensorflow {",
      "",
      "[Removed Lines]",
      "25: #include \"tensorflow/python/lib/core/ndarray_tensor_bridge.h\"",
      "",
      "[Added Lines]",
      "29: #include \"tensorflow/python/lib/core/py_util.h\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "214:   }",
      "215:   auto* np_array = reinterpret_cast<PyArrayObject*>(",
      "216:       PyArray_SimpleNewFromData(dim_size, dims, type_num, data));",
      "217:   PyArray_CLEARFLAGS(np_array, NPY_ARRAY_OWNDATA);",
      "218:   if (PyType_Ready(&TensorReleaserType) == -1) {",
      "219:     return errors::Unknown(\"Python type initialization failed.\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "221:   if (np_array == nullptr) {",
      "222:     string shape_str = absl::StrJoin(",
      "223:         absl::Span<npy_intp>{dims, static_cast<size_t>(dim_size)}, \", \");",
      "224:     if (PyErr_Occurred()) {",
      "225:       string exception_str = PyExceptionFetch();",
      "226:       PyErr_Clear();",
      "227:       return errors::InvalidArgument(",
      "228:           \"Failed to create numpy array from tensor of shape [\", shape_str,",
      "229:           \"]. Numpy error: \", exception_str);",
      "230:     }",
      "231:     return errors::Internal(",
      "232:         \"Failed to create numpy array from tensor of shape [\", shape_str, \"]\");",
      "233:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d4c52cca976413a61c489c98c00189f7fb549123",
      "candidate_info": {
        "commit_hash": "d4c52cca976413a61c489c98c00189f7fb549123",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/d4c52cca976413a61c489c98c00189f7fb549123",
        "files": [
          "tensorflow/python/eager/tensor_test.py",
          "tensorflow/python/lib/core/BUILD",
          "tensorflow/python/lib/core/ndarray_tensor_bridge.cc"
        ],
        "message": "Fix segfault when using unusally shaped tensors.\n\nIf a numpy array is created with a shape such that one element is zero and the others sum to a large number, an error will be raised. E.g. the following raises an error:\n\nnp.ones((0, 2**31, 2**31))\n\nTF previously would not check the return value of PyArray_SimpleNewFromData, which returns null on such shapes. Now the return value is checked.\n\nPiperOrigin-RevId: 477751929",
        "before_after_code_files": [
          "tensorflow/python/eager/tensor_test.py||tensorflow/python/eager/tensor_test.py",
          "tensorflow/python/lib/core/ndarray_tensor_bridge.cc||tensorflow/python/lib/core/ndarray_tensor_bridge.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/python/eager/tensor_test.py||tensorflow/python/eager/tensor_test.py",
            "tensorflow/python/lib/core/ndarray_tensor_bridge.cc||tensorflow/python/lib/core/ndarray_tensor_bridge.cc"
          ],
          "candidate": [
            "tensorflow/python/eager/tensor_test.py||tensorflow/python/eager/tensor_test.py",
            "tensorflow/python/lib/core/ndarray_tensor_bridge.cc||tensorflow/python/lib/core/ndarray_tensor_bridge.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/python/eager/tensor_test.py||tensorflow/python/eager/tensor_test.py": [
          "File: tensorflow/python/eager/tensor_test.py -> tensorflow/python/eager/tensor_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "498:         \"can have at most 32 dimensions\"):",
          "499:       t.numpy()",
          "502: class TFETensorUtilTest(test_util.TensorFlowTestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "501:   def testNumpyDimsTooBig(self):",
          "502:     # Creating a Numpy array fails in some cases if the product of non-zero",
          "503:     # dimensions is very big, even if the shape also has a zero in it.",
          "504:     t = array_ops.ones((0, 2**31, 2**31))",
          "505:     with self.assertRaisesRegex(",
          "506:         errors.InvalidArgumentError,",
          "507:         r\"Failed to create numpy array from tensor of shape \"",
          "508:         r\"\\[0, 2147483648, 2147483648\\]. Numpy error.*array is too big\"):",
          "509:       t.numpy()",
          "",
          "---------------"
        ],
        "tensorflow/python/lib/core/ndarray_tensor_bridge.cc||tensorflow/python/lib/core/ndarray_tensor_bridge.cc": [
          "File: tensorflow/python/lib/core/ndarray_tensor_bridge.cc -> tensorflow/python/lib/core/ndarray_tensor_bridge.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: limitations under the License.",
          "17: #include \"tensorflow/python/lib/core/numpy.h\"",
          "19: #include <vector>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: #include \"tensorflow/python/lib/core/ndarray_tensor_bridge.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22: #include \"tensorflow/core/lib/core/errors.h\"",
          "23: #include \"tensorflow/core/platform/mutex.h\"",
          "24: #include \"tensorflow/python/lib/core/bfloat16.h\"",
          "27: namespace tensorflow {",
          "",
          "[Removed Lines]",
          "25: #include \"tensorflow/python/lib/core/ndarray_tensor_bridge.h\"",
          "",
          "[Added Lines]",
          "29: #include \"tensorflow/python/lib/core/py_util.h\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "214:   }",
          "215:   auto* np_array = reinterpret_cast<PyArrayObject*>(",
          "216:       PyArray_SimpleNewFromData(dim_size, dims, type_num, data));",
          "217:   PyArray_CLEARFLAGS(np_array, NPY_ARRAY_OWNDATA);",
          "218:   if (PyType_Ready(&TensorReleaserType) == -1) {",
          "219:     return errors::Unknown(\"Python type initialization failed.\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "221:   if (np_array == nullptr) {",
          "222:     string shape_str = absl::StrJoin(",
          "223:         absl::Span<npy_intp>{dims, static_cast<size_t>(dim_size)}, \", \");",
          "224:     if (PyErr_Occurred()) {",
          "225:       string exception_str = PyExceptionFetch();",
          "226:       PyErr_Clear();",
          "227:       return errors::InvalidArgument(",
          "228:           \"Failed to create numpy array from tensor of shape [\", shape_str,",
          "229:           \"]. Numpy error: \", exception_str);",
          "230:     }",
          "231:     return errors::Internal(",
          "232:         \"Failed to create numpy array from tensor of shape [\", shape_str, \"]\");",
          "233:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "75d3adff8f63a637ef117737e20bc794d2428d3e",
      "candidate_info": {
        "commit_hash": "75d3adff8f63a637ef117737e20bc794d2428d3e",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/75d3adff8f63a637ef117737e20bc794d2428d3e",
        "files": [
          "tensorflow/python/eager/tensor_test.py",
          "tensorflow/python/lib/core/BUILD",
          "tensorflow/python/lib/core/ndarray_tensor_bridge.cc"
        ],
        "message": "Fix segfault when using unusally shaped tensors.\n\nIf a numpy array is created with a shape such that one element is zero and the others sum to a large number, an error will be raised. E.g. the following raises an error:\n\nnp.ones((0, 2**31, 2**31))\n\nTF previously would not check the return value of PyArray_SimpleNewFromData, which returns null on such shapes. Now the return value is checked.\n\nPiperOrigin-RevId: 477751929",
        "before_after_code_files": [
          "tensorflow/python/eager/tensor_test.py||tensorflow/python/eager/tensor_test.py",
          "tensorflow/python/lib/core/ndarray_tensor_bridge.cc||tensorflow/python/lib/core/ndarray_tensor_bridge.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/python/eager/tensor_test.py||tensorflow/python/eager/tensor_test.py",
            "tensorflow/python/lib/core/ndarray_tensor_bridge.cc||tensorflow/python/lib/core/ndarray_tensor_bridge.cc"
          ],
          "candidate": [
            "tensorflow/python/eager/tensor_test.py||tensorflow/python/eager/tensor_test.py",
            "tensorflow/python/lib/core/ndarray_tensor_bridge.cc||tensorflow/python/lib/core/ndarray_tensor_bridge.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/python/eager/tensor_test.py||tensorflow/python/eager/tensor_test.py": [
          "File: tensorflow/python/eager/tensor_test.py -> tensorflow/python/eager/tensor_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "498:         \"can have at most 32 dimensions\"):",
          "499:       t.numpy()",
          "502: class TFETensorUtilTest(test_util.TensorFlowTestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "501:   def testNumpyDimsTooBig(self):",
          "502:     # Creating a Numpy array fails in some cases if the product of non-zero",
          "503:     # dimensions is very big, even if the shape also has a zero in it.",
          "504:     t = array_ops.ones((0, 2**31, 2**31))",
          "505:     with self.assertRaisesRegex(",
          "506:         errors.InvalidArgumentError,",
          "507:         r\"Failed to create numpy array from tensor of shape \"",
          "508:         r\"\\[0, 2147483648, 2147483648\\]. Numpy error.*array is too big\"):",
          "509:       t.numpy()",
          "",
          "---------------"
        ],
        "tensorflow/python/lib/core/ndarray_tensor_bridge.cc||tensorflow/python/lib/core/ndarray_tensor_bridge.cc": [
          "File: tensorflow/python/lib/core/ndarray_tensor_bridge.cc -> tensorflow/python/lib/core/ndarray_tensor_bridge.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: limitations under the License.",
          "17: #include \"tensorflow/python/lib/core/numpy.h\"",
          "19: #include <vector>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: #include \"tensorflow/python/lib/core/ndarray_tensor_bridge.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22: #include \"tensorflow/core/lib/core/errors.h\"",
          "23: #include \"tensorflow/core/platform/mutex.h\"",
          "24: #include \"tensorflow/python/lib/core/bfloat16.h\"",
          "27: namespace tensorflow {",
          "",
          "[Removed Lines]",
          "25: #include \"tensorflow/python/lib/core/ndarray_tensor_bridge.h\"",
          "",
          "[Added Lines]",
          "29: #include \"tensorflow/python/lib/core/py_util.h\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "214:   }",
          "215:   auto* np_array = reinterpret_cast<PyArrayObject*>(",
          "216:       PyArray_SimpleNewFromData(dim_size, dims, type_num, data));",
          "217:   PyArray_CLEARFLAGS(np_array, NPY_ARRAY_OWNDATA);",
          "218:   if (PyType_Ready(&TensorReleaserType) == -1) {",
          "219:     return errors::Unknown(\"Python type initialization failed.\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "221:   if (np_array == nullptr) {",
          "222:     string shape_str = absl::StrJoin(",
          "223:         absl::Span<npy_intp>{dims, static_cast<size_t>(dim_size)}, \", \");",
          "224:     if (PyErr_Occurred()) {",
          "225:       string exception_str = PyExceptionFetch();",
          "226:       PyErr_Clear();",
          "227:       return errors::InvalidArgument(",
          "228:           \"Failed to create numpy array from tensor of shape [\", shape_str,",
          "229:           \"]. Numpy error: \", exception_str);",
          "230:     }",
          "231:     return errors::Internal(",
          "232:         \"Failed to create numpy array from tensor of shape [\", shape_str, \"]\");",
          "233:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d69bc7bab3dfe223204c8e741cc5dacafba90a8a",
      "candidate_info": {
        "commit_hash": "d69bc7bab3dfe223204c8e741cc5dacafba90a8a",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/d69bc7bab3dfe223204c8e741cc5dacafba90a8a",
        "files": [
          "tensorflow/python/eager/tensor_test.py",
          "tensorflow/python/lib/core/BUILD",
          "tensorflow/python/lib/core/ndarray_tensor_bridge.cc"
        ],
        "message": "Fix segfault when using unusally shaped tensors.\n\nIf a numpy array is created with a shape such that one element is zero and the others sum to a large number, an error will be raised. E.g. the following raises an error:\n\nnp.ones((0, 2**31, 2**31))\n\nTF previously would not check the return value of PyArray_SimpleNewFromData, which returns null on such shapes. Now the return value is checked.\n\nPiperOrigin-RevId: 477751929",
        "before_after_code_files": [
          "tensorflow/python/eager/tensor_test.py||tensorflow/python/eager/tensor_test.py",
          "tensorflow/python/lib/core/ndarray_tensor_bridge.cc||tensorflow/python/lib/core/ndarray_tensor_bridge.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/python/eager/tensor_test.py||tensorflow/python/eager/tensor_test.py",
            "tensorflow/python/lib/core/ndarray_tensor_bridge.cc||tensorflow/python/lib/core/ndarray_tensor_bridge.cc"
          ],
          "candidate": [
            "tensorflow/python/eager/tensor_test.py||tensorflow/python/eager/tensor_test.py",
            "tensorflow/python/lib/core/ndarray_tensor_bridge.cc||tensorflow/python/lib/core/ndarray_tensor_bridge.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/python/eager/tensor_test.py||tensorflow/python/eager/tensor_test.py": [
          "File: tensorflow/python/eager/tensor_test.py -> tensorflow/python/eager/tensor_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "483:         \"can have at most 32 dimensions\"):",
          "484:       t.numpy()",
          "487: class TFETensorUtilTest(test_util.TensorFlowTestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "486:   def testNumpyDimsTooBig(self):",
          "487:     # Creating a Numpy array fails in some cases if the product of non-zero",
          "488:     # dimensions is very big, even if the shape also has a zero in it.",
          "489:     t = array_ops.ones((0, 2**31, 2**31))",
          "490:     with self.assertRaisesRegex(",
          "491:         errors.InvalidArgumentError,",
          "492:         r\"Failed to create numpy array from tensor of shape \"",
          "493:         r\"\\[0, 2147483648, 2147483648\\]. Numpy error.*array is too big\"):",
          "494:       t.numpy()",
          "",
          "---------------"
        ],
        "tensorflow/python/lib/core/ndarray_tensor_bridge.cc||tensorflow/python/lib/core/ndarray_tensor_bridge.cc": [
          "File: tensorflow/python/lib/core/ndarray_tensor_bridge.cc -> tensorflow/python/lib/core/ndarray_tensor_bridge.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: limitations under the License.",
          "17: #include \"tensorflow/python/lib/core/numpy.h\"",
          "19: #include <vector>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: #include \"tensorflow/python/lib/core/ndarray_tensor_bridge.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22: #include \"tensorflow/core/lib/core/errors.h\"",
          "23: #include \"tensorflow/core/platform/mutex.h\"",
          "24: #include \"tensorflow/python/lib/core/bfloat16.h\"",
          "27: namespace tensorflow {",
          "",
          "[Removed Lines]",
          "25: #include \"tensorflow/python/lib/core/ndarray_tensor_bridge.h\"",
          "",
          "[Added Lines]",
          "29: #include \"tensorflow/python/lib/core/py_util.h\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "208:   }",
          "209:   auto* np_array = reinterpret_cast<PyArrayObject*>(",
          "210:       PyArray_SimpleNewFromData(dim_size, dims, type_num, data));",
          "211:   PyArray_CLEARFLAGS(np_array, NPY_ARRAY_OWNDATA);",
          "212:   if (PyType_Ready(&TensorReleaserType) == -1) {",
          "213:     return errors::Unknown(\"Python type initialization failed.\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "215:   if (np_array == nullptr) {",
          "216:     string shape_str = absl::StrJoin(",
          "217:         absl::Span<npy_intp>{dims, static_cast<size_t>(dim_size)}, \", \");",
          "218:     if (PyErr_Occurred()) {",
          "219:       string exception_str = PyExceptionFetch();",
          "220:       PyErr_Clear();",
          "221:       return errors::InvalidArgument(",
          "222:           \"Failed to create numpy array from tensor of shape [\", shape_str,",
          "223:           \"]. Numpy error: \", exception_str);",
          "224:     }",
          "225:     return errors::Internal(",
          "226:         \"Failed to create numpy array from tensor of shape [\", shape_str, \"]\");",
          "227:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}