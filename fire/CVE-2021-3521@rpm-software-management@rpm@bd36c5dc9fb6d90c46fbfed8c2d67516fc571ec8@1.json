{
  "cve_id": "CVE-2021-3521",
  "cve_desc": "There is a flaw in RPM's signature functionality. OpenPGP subkeys are associated with a primary key via a \"binding signature.\" RPM does not check the binding signature of subkeys prior to importing them. If an attacker is able to add or socially engineer another party to add a malicious subkey to a legitimate public key, RPM could wrongly trust a malicious signature. The greatest impact of this flaw is to data integrity. To exploit this flaw, an attacker must either compromise an RPM repository or convince an administrator to install an untrusted RPM or public key. It is strongly recommended to only use RPMs and public keys from trusted sources.",
  "repo": "rpm-software-management/rpm",
  "patch_hash": "bd36c5dc9fb6d90c46fbfed8c2d67516fc571ec8",
  "patch_info": {
    "commit_hash": "bd36c5dc9fb6d90c46fbfed8c2d67516fc571ec8",
    "repo": "rpm-software-management/rpm",
    "commit_url": "https://github.com/rpm-software-management/rpm/commit/bd36c5dc9fb6d90c46fbfed8c2d67516fc571ec8",
    "files": [
      "rpmio/rpmpgp.c",
      "tests/Makefile.am",
      "tests/data/keys/CVE-2021-3521-badbind.asc",
      "tests/data/keys/CVE-2021-3521-nosubsig-last.asc",
      "tests/data/keys/CVE-2021-3521-nosubsig.asc",
      "tests/rpmsigdig.at"
    ],
    "message": "Validate and require subkey binding signatures on PGP public keys\n\nAll subkeys must be followed by a binding signature by the primary key\nas per the OpenPGP RFC, enforce the presence and validity in the parser.\n\nThe implementation is as kludgey as they come to work around our\nsimple-minded parser structure without touching API, to maximise\nbackportability. Store all the raw packets internally as we decode them\nto be able to access previous elements at will, needed to validate ordering\nand access the actual data. Add testcases for manipulated keys whose\nimport previously would succeed.\n\nDepends on the two previous commits:\n7b399fcb8f52566e6f3b4327197a85facd08db91 and\n236b802a4aa48711823a191d1b7f753c82a89ec5\n\nFixes CVE-2021-3521.",
    "before_after_code_files": [
      "rpmio/rpmpgp.c||rpmio/rpmpgp.c",
      "tests/Makefile.am||tests/Makefile.am",
      "tests/data/keys/CVE-2021-3521-badbind.asc||tests/data/keys/CVE-2021-3521-badbind.asc",
      "tests/data/keys/CVE-2021-3521-nosubsig-last.asc||tests/data/keys/CVE-2021-3521-nosubsig-last.asc",
      "tests/data/keys/CVE-2021-3521-nosubsig.asc||tests/data/keys/CVE-2021-3521-nosubsig.asc",
      "tests/rpmsigdig.at||tests/rpmsigdig.at"
    ]
  },
  "patch_diff": {
    "rpmio/rpmpgp.c||rpmio/rpmpgp.c": [
      "File: rpmio/rpmpgp.c -> rpmio/rpmpgp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1062:     return digp;",
      "1063: }",
      "1065: int pgpPrtParams(const uint8_t * pkts, size_t pktlen, unsigned int pkttype,",
      "1066:    pgpDigParams * ret)",
      "1067: {",
      "1068:     const uint8_t *p = pkts;",
      "1069:     const uint8_t *pend = pkts + pktlen;",
      "1070:     pgpDigParams digp = NULL;",
      "1074:     while (p < pend) {",
      "1076:      break;",
      "1078:  if (digp == NULL) {",
      "1080:   break;",
      "1081:      } else {",
      "1083:      }",
      "1084:  }",
      "1087:      break;",
      "1090:  if (pkttype == PGPTAG_SIGNATURE)",
      "1091:      break;",
      "1092:     }",
      "1096:     if (ret && rc == 0) {",
      "1098:     } else {",
      "",
      "[Removed Lines]",
      "1071:     struct pgpPkt pkt;",
      "1075:  if (decodePkt(p, (pend - p), &pkt))",
      "1079:      if (pkttype && pkt.tag != pkttype) {",
      "1082:   digp = pgpDigParamsNew(pkt.tag);",
      "1086:  if (pgpPrtPkt(&pkt, digp))",
      "1089:  p += (pkt.body - pkt.head) + pkt.blen;",
      "1094:     rc = (digp && (p == pend)) ? 0 : -1;",
      "",
      "[Added Lines]",
      "1065: static int hashKey(DIGEST_CTX hash, const struct pgpPkt *pkt, int exptag)",
      "1066: {",
      "1067:     int rc = -1;",
      "1068:     if (pkt->tag == exptag) {",
      "1069:  uint8_t head[] = {",
      "1070:      0x99,",
      "1071:      (pkt->blen >> 8),",
      "1072:      (pkt->blen     ),",
      "1073:  };",
      "1075:  rpmDigestUpdate(hash, head, 3);",
      "1076:  rpmDigestUpdate(hash, pkt->body, pkt->blen);",
      "1077:  rc = 0;",
      "1078:     }",
      "1079:     return rc;",
      "1080: }",
      "1082: static int pgpVerifySelf(pgpDigParams key, pgpDigParams selfsig,",
      "1083:    const struct pgpPkt *all, int i)",
      "1084: {",
      "1085:     int rc = -1;",
      "1086:     DIGEST_CTX hash = NULL;",
      "1088:     switch (selfsig->sigtype) {",
      "1089:     case PGPSIGTYPE_SUBKEY_BINDING:",
      "1090:  hash = rpmDigestInit(selfsig->hash_algo, 0);",
      "1091:  if (hash) {",
      "1092:      rc = hashKey(hash, &all[0], PGPTAG_PUBLIC_KEY);",
      "1093:      if (!rc)",
      "1094:   rc = hashKey(hash, &all[i-1], PGPTAG_PUBLIC_SUBKEY);",
      "1095:  }",
      "1096:  break;",
      "1097:     default:",
      "1099:  rc = 0;",
      "1100:  break;",
      "1101:     }",
      "1103:     if (hash && rc == 0)",
      "1104:  rc = pgpVerifySignature(key, selfsig, hash);",
      "1106:     rpmDigestFinal(hash, NULL, NULL, 0);",
      "1108:     return rc;",
      "1109: }",
      "1117:     pgpDigParams selfsig = NULL;",
      "1118:     int i = 0;",
      "1120:     struct pgpPkt *all = xmalloc(alloced * sizeof(*all));",
      "1122:     int expect = 0;",
      "1123:     int prevtag = 0;",
      "1126:  struct pgpPkt *pkt = &all[i];",
      "1127:  if (decodePkt(p, (pend - p), pkt))",
      "1131:      if (pkttype && pkt->tag != pkttype) {",
      "1134:   digp = pgpDigParamsNew(pkt->tag);",
      "1138:  if (expect) {",
      "1139:      if (pkt->tag != expect)",
      "1140:   break;",
      "1141:      selfsig = pgpDigParamsNew(pkt->tag);",
      "1142:  }",
      "1144:  if (pgpPrtPkt(pkt, selfsig ? selfsig : digp))",
      "1147:  if (selfsig) {",
      "1149:      if (prevtag == PGPTAG_PUBLIC_SUBKEY) {",
      "1150:   if (selfsig->sigtype != PGPSIGTYPE_SUBKEY_BINDING)",
      "1151:       break;",
      "1152:      }",
      "1154:      int xx = pgpVerifySelf(digp, selfsig, all, i);",
      "1156:      selfsig = pgpDigParamsFree(selfsig);",
      "1157:      if (xx)",
      "1158:   break;",
      "1159:      expect = 0;",
      "1160:  }",
      "1162:  if (pkt->tag == PGPTAG_PUBLIC_SUBKEY)",
      "1163:      expect = PGPTAG_SIGNATURE;",
      "1164:  prevtag = pkt->tag;",
      "1166:  i++;",
      "1167:  p += (pkt->body - pkt->head) + pkt->blen;",
      "1171:  if (alloced <= i) {",
      "1172:      alloced *= 2;",
      "1173:      all = xrealloc(all, alloced * sizeof(*all));",
      "1174:  }",
      "1177:     rc = (digp && (p == pend) && expect == 0) ? 0 : -1;",
      "1179:     free(all);",
      "",
      "---------------"
    ],
    "tests/Makefile.am||tests/Makefile.am": [
      "File: tests/Makefile.am -> tests/Makefile.am",
      "--- Hunk 1 ---",
      "[Context before]",
      "108: EXTRA_DIST += data/SPECS/hello-cd.spec",
      "109: EXTRA_DIST += data/keys/rpm.org-rsa-2048-test.pub",
      "110: EXTRA_DIST += data/keys/rpm.org-rsa-2048-test.secret",
      "111: EXTRA_DIST += data/macros.testfile",
      "112: EXTRA_DIST += data/macros.debug",
      "113: EXTRA_DIST += data/SOURCES/foo.c",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "111: EXTRA_DIST += data/keys/CVE-2021-3521-badbind.asc",
      "112: EXTRA_DIST += data/keys/CVE-2021-3521-nosubsig.asc",
      "113: EXTRA_DIST += data/keys/CVE-2021-3521-nosubsig-last.asc",
      "",
      "---------------"
    ],
    "tests/data/keys/CVE-2021-3521-badbind.asc||tests/data/keys/CVE-2021-3521-badbind.asc": [
      "File: tests/data/keys/CVE-2021-3521-badbind.asc -> tests/data/keys/CVE-2021-3521-badbind.asc",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: -----BEGIN PGP PUBLIC KEY BLOCK-----",
      "2: Version: rpm-4.17.90 (NSS-3)",
      "4: mQENBFjmORgBCAC7TMEk6wnjSs8Dr4yqSScWdU2pjcqrkTxuzdWvowcIUPZI0w/g",
      "5: HkRqGd4apjvY2V15kjL10gk3QhFP3pZ/9p7zh8o8NHX7aGdSGDK7NOq1eFaErPRY",
      "6: 91LW9RiZ0lbOjXEzIL0KHxUiTQEmdXJT43DJMFPyW9fkCWg0OltiX618FUdWWfI8",
      "7: eySdLur1utnqBvdEbCUvWK2RX3vQZQdvEBODnNk2pxqTyV0w6VPQ96W++lF/5Aas",
      "8: 7rUv3HIyIXxIggc8FRrnH+y9XvvHDonhTIlGnYZN4ubm9i4y3gOkrZlGTrEw7elQ",
      "9: 1QeMyG2QQEbze8YjpTm4iLABCBrRfPRaQpwrABEBAAG0IXJwbS5vcmcgUlNBIHRl",
      "10: c3RrZXkgPHJzYUBycG0ub3JnPokBNwQTAQgAIQUCWOY5GAIbAwULCQgHAgYVCAkK",
      "11: CwIEFgIDAQIeAQIXgAAKCRBDRFkeGWTF/MxxCACnjqFL+MmPh9W9JQKT2DcLbBzf",
      "12: Cqo6wcEBoCOcwgRSk8dSikhARoteoa55JRJhuMyeKhhEAogE9HRmCPFdjezFTwgB",
      "13: BDVBpO2dZ023mLXDVCYX3S8pShOgCP6Tn4wqCnYeAdLcGg106N4xcmgtcssJE+Pr",
      "14: XzTZksbZsrTVEmL/Ym+R5w5jBfFnGk7Yw7ndwfQsfNXQb5AZynClFxnX546lcyZX",
      "15: fEx3/e6ezw57WNOUK6WT+8b+EGovPkbetK/rGxNXuWaP6X4A/QUm8O98nCuHYFQq",
      "16: +mvNdsCBqGf7mhaRGtpHk/JgCn5rFvArMDqLVrR9hX0LdCSsH7EGE+bR3r7wuQEN",
      "17: BFjmORgBCACk+vDZrIXQuFXEYToZVwb2attzbbJJCqD71vmZTLsW0QxuPKRgbcYY",
      "18: zp4K4lVBnHhFrF8MOUOxJ7kQWIJZMZFt+BDcptCYurbD2H4W2xvnWViiC+LzCMzz",
      "19: iMJT6165uefL4JHTDPxC2fFiM9yrc72LmylJNkM/vepT128J5Qv0gRUaQbHiQuS6",
      "20: Dm/+WRnUfx3i89SV4mnBxb/Ta93GVqoOciWwzWSnwEnWYAvOb95JL4U7c5J5f/+c",
      "21: KnQDHsW7sIiIdscsWzvgf6qs2Ra1Zrt7Fdk4+ZS2f/adagLhDO1C24sXf5XfMk5m",
      "22: L0OGwZSr9m5s17VXxfspgU5ugc8kBJfzABEBAAE=",
      "23: =WCfs",
      "24: -----END PGP PUBLIC KEY BLOCK-----",
      "",
      "---------------"
    ],
    "tests/data/keys/CVE-2021-3521-nosubsig-last.asc||tests/data/keys/CVE-2021-3521-nosubsig-last.asc": [
      "File: tests/data/keys/CVE-2021-3521-nosubsig-last.asc -> tests/data/keys/CVE-2021-3521-nosubsig-last.asc",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: -----BEGIN PGP PUBLIC KEY BLOCK-----",
      "2: Version: rpm-4.17.90 (NSS-3)",
      "4: mQENBFjmORgBCAC7TMEk6wnjSs8Dr4yqSScWdU2pjcqrkTxuzdWvowcIUPZI0w/g",
      "5: HkRqGd4apjvY2V15kjL10gk3QhFP3pZ/9p7zh8o8NHX7aGdSGDK7NOq1eFaErPRY",
      "6: 91LW9RiZ0lbOjXEzIL0KHxUiTQEmdXJT43DJMFPyW9fkCWg0OltiX618FUdWWfI8",
      "7: eySdLur1utnqBvdEbCUvWK2RX3vQZQdvEBODnNk2pxqTyV0w6VPQ96W++lF/5Aas",
      "8: 7rUv3HIyIXxIggc8FRrnH+y9XvvHDonhTIlGnYZN4ubm9i4y3gOkrZlGTrEw7elQ",
      "9: 1QeMyG2QQEbze8YjpTm4iLABCBrRfPRaQpwrABEBAAG0IXJwbS5vcmcgUlNBIHRl",
      "10: c3RrZXkgPHJzYUBycG0ub3JnPokBNwQTAQgAIQUCWOY5GAIbAwULCQgHAgYVCAkK",
      "11: CwIEFgIDAQIeAQIXgAAKCRBDRFkeGWTF/MxxCACnjqFL+MmPh9W9JQKT2DcLbBzf",
      "12: Cqo6wcEBoCOcwgRSk8dSikhARoteoa55JRJhuMyeKhhEAogE9HRmCPFdjezFTwgB",
      "13: BDVBpO2dZ023mLXDVCYX3S8pShOgCP6Tn4wqCnYeAdLcGg106N4xcmgtcssJE+Pr",
      "14: XzTZksbZsrTVEmL/Ym+R5w5jBfFnGk7Yw7ndwfQsfNXQb5AZynClFxnX546lcyZX",
      "15: fEx3/e6ezw57WNOUK6WT+8b+EGovPkbetK/rGxNXuWaP6X4A/QUm8O98nCuHYFQq",
      "16: +mvNdsCBqGf7mhaRGtpHk/JgCn5rFvArMDqLVrR9hX0LdCSsH7EGE+bR3r7wuQEN",
      "17: BFjmORgBCACk+vDZrIXQuFXEYToZVwb2attzbbJJCqD71vmZTLsW0QxuPKRgbcYY",
      "18: zp4K4lVBnHhFrF8MOUOxJ7kQWIJZMZFt+BDcptCYurbD2H4W2xvnWViiC+LzCMzz",
      "19: iMJT6165uefL4JHTDPxC2fFiM9yrc72LmylJNkM/vepT128J5Qv0gRUaQbHiQuS6",
      "20: Dm/+WRnUfx3i89SV4mnBxb/Ta93GVqoOciWwzWSnwEnWYAvOb95JL4U7c5J5f/+c",
      "21: KnQDHsW7sIiIdscsWzvgf6qs2Ra1Zrt7Fdk4+ZS2f/adagLhDO1C24sXf5XfMk5m",
      "22: L0OGwZSr9m5s17VXxfspgU5ugc8kBJfzABEBAAE=",
      "23: =WCfs",
      "24: -----END PGP PUBLIC KEY BLOCK-----",
      "",
      "---------------"
    ],
    "tests/data/keys/CVE-2021-3521-nosubsig.asc||tests/data/keys/CVE-2021-3521-nosubsig.asc": [
      "File: tests/data/keys/CVE-2021-3521-nosubsig.asc -> tests/data/keys/CVE-2021-3521-nosubsig.asc",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: -----BEGIN PGP PUBLIC KEY BLOCK-----",
      "2: Version: rpm-4.17.90 (NSS-3)",
      "4: mQENBFjmORgBCAC7TMEk6wnjSs8Dr4yqSScWdU2pjcqrkTxuzdWvowcIUPZI0w/g",
      "5: HkRqGd4apjvY2V15kjL10gk3QhFP3pZ/9p7zh8o8NHX7aGdSGDK7NOq1eFaErPRY",
      "6: 91LW9RiZ0lbOjXEzIL0KHxUiTQEmdXJT43DJMFPyW9fkCWg0OltiX618FUdWWfI8",
      "7: eySdLur1utnqBvdEbCUvWK2RX3vQZQdvEBODnNk2pxqTyV0w6VPQ96W++lF/5Aas",
      "8: 7rUv3HIyIXxIggc8FRrnH+y9XvvHDonhTIlGnYZN4ubm9i4y3gOkrZlGTrEw7elQ",
      "9: 1QeMyG2QQEbze8YjpTm4iLABCBrRfPRaQpwrABEBAAG0IXJwbS5vcmcgUlNBIHRl",
      "10: c3RrZXkgPHJzYUBycG0ub3JnPokBNwQTAQgAIQUCWOY5GAIbAwULCQgHAgYVCAkK",
      "11: CwIEFgIDAQIeAQIXgAAKCRBDRFkeGWTF/MxxCACnjqFL+MmPh9W9JQKT2DcLbBzf",
      "12: Cqo6wcEBoCOcwgRSk8dSikhARoteoa55JRJhuMyeKhhEAogE9HRmCPFdjezFTwgB",
      "13: BDVBpO2dZ023mLXDVCYX3S8pShOgCP6Tn4wqCnYeAdLcGg106N4xcmgtcssJE+Pr",
      "14: XzTZksbZsrTVEmL/Ym+R5w5jBfFnGk7Yw7ndwfQsfNXQb5AZynClFxnX546lcyZX",
      "15: fEx3/e6ezw57WNOUK6WT+8b+EGovPkbetK/rGxNXuWaP6X4A/QUm8O98nCuHYFQq",
      "16: +mvNdsCBqGf7mhaRGtpHk/JgCn5rFvArMDqLVrR9hX0LdCSsH7EGE+bR3r7wuQEN",
      "17: BFjmORgBCACk+vDZrIXQuFXEYToZVwb2attzbbJJCqD71vmZTLsW0QxuPKRgbcYY",
      "18: zp4K4lVBnHhFrF8MOUOxJ7kQWIJZMZFt+BDcptCYurbD2H4W2xvnWViiC+LzCMzz",
      "19: iMJT6165uefL4JHTDPxC2fFiM9yrc72LmylJNkM/vepT128J5Qv0gRUaQbHiQuS6",
      "20: Dm/+WRnUfx3i89SV4mnBxb/Ta93GVqoOciWwzWSnwEnWYAvOb95JL4U7c5J5f/+c",
      "21: KnQDHsW7sIiIdscsWzvgf6qs2Ra1Zrt7Fdk4+ZS2f/adagLhDO1C24sXf5XfMk5m",
      "22: L0OGwZSr9m5s17VXxfspgU5ugc8kBJfzABEBAAG5AQ0EWOY5GAEIAKT68NmshdC4",
      "23: VcRhOhlXBvZq23NtskkKoPvW+ZlMuxbRDG48pGBtxhjOngriVUGceEWsXww5Q7En",
      "24: uRBYglkxkW34ENym0Ji6tsPYfhbbG+dZWKIL4vMIzPOIwlPrXrm558vgkdMM/ELZ",
      "25: 8WIz3KtzvYubKUk2Qz+96lPXbwnlC/SBFRpBseJC5LoOb/5ZGdR/HeLz1JXiacHF",
      "26: v9Nr3cZWqg5yJbDNZKfASdZgC85v3kkvhTtzknl//5wqdAMexbuwiIh2xyxbO+B/",
      "27: qqzZFrVmu3sV2Tj5lLZ/9p1qAuEM7ULbixd/ld8yTmYvQ4bBlKv2bmzXtVfF+ymB",
      "28: Tm6BzyQEl/MAEQEAAYkBHwQYAQgACQUCWOY5GAIbDAAKCRBDRFkeGWTF/PANB/9j",
      "29: mifmj6z/EPe0PJFhrpISt9PjiUQCt0IPtiL5zKAkWjHePIzyi+0kCTBF6DDLFxos",
      "30: 3vN4bWnVKT1kBhZAQlPqpJTg+m74JUYeDGCdNx9SK7oRllATqyu+5rncgxjWVPnQ",
      "31: zu/HRPlWJwcVFYEVXYL8xzfantwQTqefjmcRmBRdA2XJITK+hGWwAmrqAWx+q5xX",
      "32: Pa8wkNMxVzNS2rUKO9SoVuJ/wlUvfoShkJ/VJ5HDp3qzUqncADfdGN35TDzscngQ",
      "33: gHvnMwVBfYfSCABV1hNByoZcc/kxkrWMmsd/EnIyLd1Q1baKqc3cEDuC6E6/o4yJ",
      "34: E4XX4jtDmdZPreZALsiB",
      "35: =rRop",
      "36: -----END PGP PUBLIC KEY BLOCK-----",
      "",
      "---------------"
    ],
    "tests/rpmsigdig.at||tests/rpmsigdig.at": [
      "File: tests/rpmsigdig.at -> tests/rpmsigdig.at",
      "--- Hunk 1 ---",
      "[Context before]",
      "240: [])",
      "241: AT_CLEANUP",
      "243: # ------------------------------",
      "244: # Test pre-built package verification",
      "245: AT_SETUP([rpmkeys -K <signed> 1])",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "243: AT_SETUP([rpmkeys --import invalid keys])",
      "244: AT_KEYWORDS([rpmkeys import])",
      "245: RPMDB_INIT",
      "247: AT_CHECK([",
      "248: runroot rpmkeys --import /data/keys/CVE-2021-3521-badbind.asc",
      "249: ],",
      "250: [1],",
      "251: [],",
      "252: [error: /data/keys/CVE-2021-3521-badbind.asc: key 1 import failed.]",
      "253: )",
      "254: AT_CHECK([",
      "255: runroot rpmkeys --import /data/keys/CVE-2021-3521-nosubsig.asc",
      "256: ],",
      "257: [1],",
      "258: [],",
      "259: [error: /data/keys/CVE-2021-3521-nosubsig.asc: key 1 import failed.]",
      "260: )",
      "262: AT_CHECK([",
      "263: runroot rpmkeys --import /data/keys/CVE-2021-3521-nosubsig-last.asc",
      "264: ],",
      "265: [1],",
      "266: [],",
      "267: [error: /data/keys/CVE-2021-3521-nosubsig-last.asc: key 1 import failed.]",
      "268: )",
      "269: AT_CLEANUP",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e6411e941895c1b759ec29637bc28ee855085c97",
      "candidate_info": {
        "commit_hash": "e6411e941895c1b759ec29637bc28ee855085c97",
        "repo": "rpm-software-management/rpm",
        "commit_url": "https://github.com/rpm-software-management/rpm/commit/e6411e941895c1b759ec29637bc28ee855085c97",
        "files": [
          "tests/rpmsigdig.at"
        ],
        "message": "Change tests that import partially valid keys to use --quiet\n\nWhen `rpmkey --import` is given a partially valid key, it may emit\nwarnings, which are backend dependent.  This is currently the case\nwith the Sequoia, but not the internal OpenPGP parser.\n\nThe lints make the tests more fragile.  Moreover, the tests aren't\nchecking the warnings, but other behavior.  Suppress the warnings by\npassing `--quiet` to `rpmkeys`.\n\nFixes #2071.\n\n(backport of f439f246b5c8ac016753f80a4c305245d376ebd7)",
        "before_after_code_files": [
          "tests/rpmsigdig.at||tests/rpmsigdig.at"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/rpmsigdig.at||tests/rpmsigdig.at"
          ],
          "candidate": [
            "tests/rpmsigdig.at||tests/rpmsigdig.at"
          ]
        }
      },
      "candidate_diff": {
        "tests/rpmsigdig.at||tests/rpmsigdig.at": [
          "File: tests/rpmsigdig.at -> tests/rpmsigdig.at",
          "--- Hunk 1 ---",
          "[Context before]",
          "321: # The internal OpenPGP implementation checks for validity when the key",
          "322: # is imported; other implementations should not do this.",
          "323: AT_CHECK_UNQUOTED([",
          "325: echo exit code: $? >&2",
          "326: ],",
          "327: [ignore],",
          "",
          "[Removed Lines]",
          "324: runroot rpmkeys --import /data/keys/CVE-2021-3521-badbind.asc",
          "",
          "[Added Lines]",
          "324: runroot rpmkeys --quiet --import /data/keys/CVE-2021-3521-badbind.asc",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "336: )",
          "338: AT_CHECK_UNQUOTED([",
          "340: echo exit code: $? >&2",
          "341: ],",
          "342: [ignore],",
          "",
          "[Removed Lines]",
          "339: runroot rpmkeys --import /data/keys/CVE-2021-3521-nosubsig.asc",
          "",
          "[Added Lines]",
          "339: runroot rpmkeys --quiet --import /data/keys/CVE-2021-3521-nosubsig.asc",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "351: )",
          "353: AT_CHECK_UNQUOTED([",
          "355: echo exit code: $? >&2",
          "356: ],",
          "357: [ignore],",
          "",
          "[Removed Lines]",
          "354: runroot rpmkeys --import /data/keys/CVE-2021-3521-nosubsig-last.asc",
          "",
          "[Added Lines]",
          "354: runroot rpmkeys --quiet --import /data/keys/CVE-2021-3521-nosubsig-last.asc",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "afe10be2d48a3c356a6ac3af040d907b9793dacd",
      "candidate_info": {
        "commit_hash": "afe10be2d48a3c356a6ac3af040d907b9793dacd",
        "repo": "rpm-software-management/rpm",
        "commit_url": "https://github.com/rpm-software-management/rpm/commit/afe10be2d48a3c356a6ac3af040d907b9793dacd",
        "files": [
          "tests/rpmsigdig.at"
        ],
        "message": "Fix expected test output when using Sequoia.\n\nAn OpenPGP subkey shouldn't be checked for validity when imported, but\nwhen it is used, e.g., when checking a signature's validity.  This is\nbecause a key's validity partially depends on the current time.\n\nThe internal OpenPGP implementation checks for validity when the key\nis imported; other implementations should not do this.  This means\nthat the output of two tests (268, 'rpmkeys --import rsa (rpmdb)' and\n273, 'rpmkeys --import invalid keys') have different output depending\non whether the internal OpenPGP implementation is used or the Sequoia\nbackend is used.\n\nUse AT_CHECK_UNQUOTED instead of AT_CHECK, and the selected backend to\ncustomize the expected output.\n\nFixes #2062.",
        "before_after_code_files": [
          "tests/rpmsigdig.at||tests/rpmsigdig.at"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/rpmsigdig.at||tests/rpmsigdig.at"
          ],
          "candidate": [
            "tests/rpmsigdig.at||tests/rpmsigdig.at"
          ]
        }
      },
      "candidate_diff": {
        "tests/rpmsigdig.at||tests/rpmsigdig.at": [
          "File: tests/rpmsigdig.at -> tests/rpmsigdig.at",
          "--- Hunk 1 ---",
          "[Context before]",
          "192: # ------------------------------",
          "193: # Import a public RSA key",
          "194: AT_SETUP([rpmkeys --import rsa (rpmdb)])",
          "195: AT_KEYWORDS([rpmkeys import])",
          "197: RPMDB_INIT",
          "199: runroot rpmkeys --import /data/keys/rpm.org-rsa-2048-test.pub",
          "200: runroot rpm -qi gpg-pubkey-1964c5fc-58e63918|grep -v Date|grep -v Version:",
          "203: [0],",
          "204: [Name        : gpg-pubkey",
          "205: Version     : 1964c5fc",
          "",
          "[Removed Lines]",
          "196: AT_CHECK([",
          "201: runroot rpm -q --provides gpg-pubkey-1964c5fc-58e63918",
          "202: ],",
          "",
          "[Added Lines]",
          "194: #",
          "195: # rpm.org-rsa-2048-test.pub contains an encryption-capable subkey.  In",
          "196: # general, all subkeys should be returned whether they are valid or",
          "197: # not.  Keys should only be rejected when verifying a signature.  This",
          "198: # is because a key's validity depends on the current time.  Thus, the",
          "199: # time to check for validity is when the key is used, not when it is",
          "200: # imported.  The internal OpenPGP implementation checks for validity",
          "201: # when the key is imported; other implementations should not do this.",
          "204: AT_CHECK_UNQUOTED([",
          "209: runroot rpm -q --provides gpg-pubkey-1964c5fc-58e63918],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "247: gpg(rpm.org RSA testkey <rsa@rpm.org>) = 4:4344591e1964c5fc-58e63918",
          "248: gpg(1964c5fc) = 4:4344591e1964c5fc-58e63918",
          "250: ],",
          "251: [])",
          "252: AT_CLEANUP",
          "",
          "[Removed Lines]",
          "249: gpg(4344591e1964c5fc) = 4:4344591e1964c5fc-58e63918",
          "",
          "[Added Lines]",
          "256: gpg(4344591e1964c5fc) = 4:4344591e1964c5fc-58e63918\\",
          "257: `if test x$PGP != xinternal; then",
          "258:   echo",
          "259:   echo 'gpg(f00650f8) = 4:185e6146f00650f8-58e63918'",
          "260:   echo 'gpg(185e6146f00650f8) = 4:185e6146f00650f8-58e63918'",
          "261: fi`",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "502: AT_KEYWORDS([rpmkeys import])",
          "503: RPMDB_INIT",
          "506: runroot rpmkeys --import /data/keys/CVE-2021-3521-badbind.asc",
          "507: ],",
          "509: [],",
          "511: )",
          "513: runroot rpmkeys --import /data/keys/CVE-2021-3521-nosubsig.asc",
          "514: ],",
          "516: [],",
          "518: )",
          "521: runroot rpmkeys --import /data/keys/CVE-2021-3521-nosubsig-last.asc",
          "522: ],",
          "524: [],",
          "526: )",
          "527: AT_CLEANUP",
          "",
          "[Removed Lines]",
          "505: AT_CHECK([",
          "508: [1],",
          "510: [error: /data/keys/CVE-2021-3521-badbind.asc: key 1 import failed.]",
          "512: AT_CHECK([",
          "515: [1],",
          "517: [error: /data/keys/CVE-2021-3521-nosubsig.asc: key 1 import failed.]",
          "520: AT_CHECK([",
          "523: [1],",
          "525: [error: /data/keys/CVE-2021-3521-nosubsig-last.asc: key 1 import failed.]",
          "",
          "[Added Lines]",
          "517: # The following certificates include subkeys with errors.  In general,",
          "518: # all subkeys should be returned whether they are valid or not.  Keys",
          "519: # should only be rejected when verifying a signature.  This is because",
          "520: # a key's validity depends on the current time.  Thus, the time to",
          "521: # check for validity is when the key is used, not when it is imported.",
          "522: # The internal OpenPGP implementation checks for validity when the key",
          "523: # is imported; other implementations should not do this.",
          "524: AT_CHECK_UNQUOTED([",
          "526: echo exit code: $? >&2",
          "528: [ignore],",
          "530: [`if test x$PGP = xinternal;",
          "531: then",
          "532:     echo 'error: /data/keys/CVE-2021-3521-badbind.asc: key 1 import failed.'",
          "533:     echo exit code: 1",
          "534: else",
          "535:     echo exit code: 0",
          "536: fi`]",
          "539: AT_CHECK_UNQUOTED([",
          "541: echo exit code: $? >&2",
          "543: [ignore],",
          "545: [`if test x$PGP = xinternal;",
          "546: then",
          "547:     echo 'error: /data/keys/CVE-2021-3521-nosubsig.asc: key 1 import failed.'",
          "548:     echo exit code: 1",
          "549: else",
          "550:     echo exit code: 0",
          "551: fi`]",
          "554: AT_CHECK_UNQUOTED([",
          "556: echo exit code: $? >&2",
          "558: [ignore],",
          "560: [`if test x$PGP = xinternal;",
          "561: then",
          "562:     echo 'error: /data/keys/CVE-2021-3521-nosubsig-last.asc: key 1 import failed.'",
          "563:     echo exit code: 1",
          "564: else",
          "565:     echo exit code: 0",
          "566: fi`]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "463d9177b74bcb5d439d5b0ee8986293321dd403",
      "candidate_info": {
        "commit_hash": "463d9177b74bcb5d439d5b0ee8986293321dd403",
        "repo": "rpm-software-management/rpm",
        "commit_url": "https://github.com/rpm-software-management/rpm/commit/463d9177b74bcb5d439d5b0ee8986293321dd403",
        "files": [
          "rpmio/rpmpgp.c",
          "tests/Makefile.am",
          "tests/data/keys/CVE-2021-3521-badbind.asc",
          "tests/data/keys/CVE-2021-3521-nosubsig-last.asc",
          "tests/data/keys/CVE-2021-3521-nosubsig.asc",
          "tests/rpmsigdig.at"
        ],
        "message": "Validate and require subkey binding signatures on PGP public keys\n\nAll subkeys must be followed by a binding signature by the primary key\nas per the OpenPGP RFC, enforce the presence and validity in the parser.\n\nThe implementation is as kludgey as they come to work around our\nsimple-minded parser structure without touching API, to maximise\nbackportability. Store all the raw packets internally as we decode them\nto be able to access previous elements at will, needed to validate ordering\nand access the actual data. Add testcases for manipulated keys whose\nimport previously would succeed.\n\nDepends on the two previous commits:\n7b399fcb8f52566e6f3b4327197a85facd08db91 and\n236b802a4aa48711823a191d1b7f753c82a89ec5\n\nFixes CVE-2021-3521.\n\n(cherry picked from commit bd36c5dc9fb6d90c46fbfed8c2d67516fc571ec8)",
        "before_after_code_files": [
          "rpmio/rpmpgp.c||rpmio/rpmpgp.c",
          "tests/Makefile.am||tests/Makefile.am",
          "tests/data/keys/CVE-2021-3521-badbind.asc||tests/data/keys/CVE-2021-3521-badbind.asc",
          "tests/data/keys/CVE-2021-3521-nosubsig-last.asc||tests/data/keys/CVE-2021-3521-nosubsig-last.asc",
          "tests/data/keys/CVE-2021-3521-nosubsig.asc||tests/data/keys/CVE-2021-3521-nosubsig.asc",
          "tests/rpmsigdig.at||tests/rpmsigdig.at"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "rpmio/rpmpgp.c||rpmio/rpmpgp.c",
            "tests/Makefile.am||tests/Makefile.am",
            "tests/data/keys/CVE-2021-3521-badbind.asc||tests/data/keys/CVE-2021-3521-badbind.asc",
            "tests/data/keys/CVE-2021-3521-nosubsig-last.asc||tests/data/keys/CVE-2021-3521-nosubsig-last.asc",
            "tests/data/keys/CVE-2021-3521-nosubsig.asc||tests/data/keys/CVE-2021-3521-nosubsig.asc",
            "tests/rpmsigdig.at||tests/rpmsigdig.at"
          ],
          "candidate": [
            "rpmio/rpmpgp.c||rpmio/rpmpgp.c",
            "tests/Makefile.am||tests/Makefile.am",
            "tests/data/keys/CVE-2021-3521-badbind.asc||tests/data/keys/CVE-2021-3521-badbind.asc",
            "tests/data/keys/CVE-2021-3521-nosubsig-last.asc||tests/data/keys/CVE-2021-3521-nosubsig-last.asc",
            "tests/data/keys/CVE-2021-3521-nosubsig.asc||tests/data/keys/CVE-2021-3521-nosubsig.asc",
            "tests/rpmsigdig.at||tests/rpmsigdig.at"
          ]
        }
      },
      "candidate_diff": {
        "rpmio/rpmpgp.c||rpmio/rpmpgp.c": [
          "File: rpmio/rpmpgp.c -> rpmio/rpmpgp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1062:     return digp;",
          "1063: }",
          "1065: int pgpPrtParams(const uint8_t * pkts, size_t pktlen, unsigned int pkttype,",
          "1066:    pgpDigParams * ret)",
          "1067: {",
          "1068:     const uint8_t *p = pkts;",
          "1069:     const uint8_t *pend = pkts + pktlen;",
          "1070:     pgpDigParams digp = NULL;",
          "1074:     while (p < pend) {",
          "1076:      break;",
          "1078:  if (digp == NULL) {",
          "1080:   break;",
          "1081:      } else {",
          "1083:      }",
          "1084:  }",
          "1087:      break;",
          "1090:  if (pkttype == PGPTAG_SIGNATURE)",
          "1091:      break;",
          "1092:     }",
          "1096:     if (ret && rc == 0) {",
          "1098:     } else {",
          "",
          "[Removed Lines]",
          "1071:     struct pgpPkt pkt;",
          "1075:  if (decodePkt(p, (pend - p), &pkt))",
          "1079:      if (pkttype && pkt.tag != pkttype) {",
          "1082:   digp = pgpDigParamsNew(pkt.tag);",
          "1086:  if (pgpPrtPkt(&pkt, digp))",
          "1089:  p += (pkt.body - pkt.head) + pkt.blen;",
          "1094:     rc = (digp && (p == pend)) ? 0 : -1;",
          "",
          "[Added Lines]",
          "1065: static int hashKey(DIGEST_CTX hash, const struct pgpPkt *pkt, int exptag)",
          "1066: {",
          "1067:     int rc = -1;",
          "1068:     if (pkt->tag == exptag) {",
          "1069:  uint8_t head[] = {",
          "1070:      0x99,",
          "1071:      (pkt->blen >> 8),",
          "1072:      (pkt->blen     ),",
          "1073:  };",
          "1075:  rpmDigestUpdate(hash, head, 3);",
          "1076:  rpmDigestUpdate(hash, pkt->body, pkt->blen);",
          "1077:  rc = 0;",
          "1078:     }",
          "1079:     return rc;",
          "1080: }",
          "1082: static int pgpVerifySelf(pgpDigParams key, pgpDigParams selfsig,",
          "1083:    const struct pgpPkt *all, int i)",
          "1084: {",
          "1085:     int rc = -1;",
          "1086:     DIGEST_CTX hash = NULL;",
          "1088:     switch (selfsig->sigtype) {",
          "1089:     case PGPSIGTYPE_SUBKEY_BINDING:",
          "1090:  hash = rpmDigestInit(selfsig->hash_algo, 0);",
          "1091:  if (hash) {",
          "1092:      rc = hashKey(hash, &all[0], PGPTAG_PUBLIC_KEY);",
          "1093:      if (!rc)",
          "1094:   rc = hashKey(hash, &all[i-1], PGPTAG_PUBLIC_SUBKEY);",
          "1095:  }",
          "1096:  break;",
          "1097:     default:",
          "1099:  rc = 0;",
          "1100:  break;",
          "1101:     }",
          "1103:     if (hash && rc == 0)",
          "1104:  rc = pgpVerifySignature(key, selfsig, hash);",
          "1106:     rpmDigestFinal(hash, NULL, NULL, 0);",
          "1108:     return rc;",
          "1109: }",
          "1117:     pgpDigParams selfsig = NULL;",
          "1118:     int i = 0;",
          "1120:     struct pgpPkt *all = xmalloc(alloced * sizeof(*all));",
          "1122:     int expect = 0;",
          "1123:     int prevtag = 0;",
          "1126:  struct pgpPkt *pkt = &all[i];",
          "1127:  if (decodePkt(p, (pend - p), pkt))",
          "1131:      if (pkttype && pkt->tag != pkttype) {",
          "1134:   digp = pgpDigParamsNew(pkt->tag);",
          "1138:  if (expect) {",
          "1139:      if (pkt->tag != expect)",
          "1140:   break;",
          "1141:      selfsig = pgpDigParamsNew(pkt->tag);",
          "1142:  }",
          "1144:  if (pgpPrtPkt(pkt, selfsig ? selfsig : digp))",
          "1147:  if (selfsig) {",
          "1149:      if (prevtag == PGPTAG_PUBLIC_SUBKEY) {",
          "1150:   if (selfsig->sigtype != PGPSIGTYPE_SUBKEY_BINDING)",
          "1151:       break;",
          "1152:      }",
          "1154:      int xx = pgpVerifySelf(digp, selfsig, all, i);",
          "1156:      selfsig = pgpDigParamsFree(selfsig);",
          "1157:      if (xx)",
          "1158:   break;",
          "1159:      expect = 0;",
          "1160:  }",
          "1162:  if (pkt->tag == PGPTAG_PUBLIC_SUBKEY)",
          "1163:      expect = PGPTAG_SIGNATURE;",
          "1164:  prevtag = pkt->tag;",
          "1166:  i++;",
          "1167:  p += (pkt->body - pkt->head) + pkt->blen;",
          "1171:  if (alloced <= i) {",
          "1172:      alloced *= 2;",
          "1173:      all = xrealloc(all, alloced * sizeof(*all));",
          "1174:  }",
          "1177:     rc = (digp && (p == pend) && expect == 0) ? 0 : -1;",
          "1179:     free(all);",
          "",
          "---------------"
        ],
        "tests/Makefile.am||tests/Makefile.am": [
          "File: tests/Makefile.am -> tests/Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "108: EXTRA_DIST += data/SPECS/hello-cd.spec",
          "109: EXTRA_DIST += data/keys/rpm.org-rsa-2048-test.pub",
          "110: EXTRA_DIST += data/keys/rpm.org-rsa-2048-test.secret",
          "111: EXTRA_DIST += data/macros.testfile",
          "112: EXTRA_DIST += data/macros.debug",
          "113: EXTRA_DIST += data/SOURCES/foo.c",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111: EXTRA_DIST += data/keys/CVE-2021-3521-badbind.asc",
          "112: EXTRA_DIST += data/keys/CVE-2021-3521-nosubsig.asc",
          "113: EXTRA_DIST += data/keys/CVE-2021-3521-nosubsig-last.asc",
          "",
          "---------------"
        ],
        "tests/data/keys/CVE-2021-3521-badbind.asc||tests/data/keys/CVE-2021-3521-badbind.asc": [
          "File: tests/data/keys/CVE-2021-3521-badbind.asc -> tests/data/keys/CVE-2021-3521-badbind.asc",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: -----BEGIN PGP PUBLIC KEY BLOCK-----",
          "2: Version: rpm-4.17.90 (NSS-3)",
          "4: mQENBFjmORgBCAC7TMEk6wnjSs8Dr4yqSScWdU2pjcqrkTxuzdWvowcIUPZI0w/g",
          "5: HkRqGd4apjvY2V15kjL10gk3QhFP3pZ/9p7zh8o8NHX7aGdSGDK7NOq1eFaErPRY",
          "6: 91LW9RiZ0lbOjXEzIL0KHxUiTQEmdXJT43DJMFPyW9fkCWg0OltiX618FUdWWfI8",
          "7: eySdLur1utnqBvdEbCUvWK2RX3vQZQdvEBODnNk2pxqTyV0w6VPQ96W++lF/5Aas",
          "8: 7rUv3HIyIXxIggc8FRrnH+y9XvvHDonhTIlGnYZN4ubm9i4y3gOkrZlGTrEw7elQ",
          "9: 1QeMyG2QQEbze8YjpTm4iLABCBrRfPRaQpwrABEBAAG0IXJwbS5vcmcgUlNBIHRl",
          "10: c3RrZXkgPHJzYUBycG0ub3JnPokBNwQTAQgAIQUCWOY5GAIbAwULCQgHAgYVCAkK",
          "11: CwIEFgIDAQIeAQIXgAAKCRBDRFkeGWTF/MxxCACnjqFL+MmPh9W9JQKT2DcLbBzf",
          "12: Cqo6wcEBoCOcwgRSk8dSikhARoteoa55JRJhuMyeKhhEAogE9HRmCPFdjezFTwgB",
          "13: BDVBpO2dZ023mLXDVCYX3S8pShOgCP6Tn4wqCnYeAdLcGg106N4xcmgtcssJE+Pr",
          "14: XzTZksbZsrTVEmL/Ym+R5w5jBfFnGk7Yw7ndwfQsfNXQb5AZynClFxnX546lcyZX",
          "15: fEx3/e6ezw57WNOUK6WT+8b+EGovPkbetK/rGxNXuWaP6X4A/QUm8O98nCuHYFQq",
          "16: +mvNdsCBqGf7mhaRGtpHk/JgCn5rFvArMDqLVrR9hX0LdCSsH7EGE+bR3r7wuQEN",
          "17: BFjmORgBCACk+vDZrIXQuFXEYToZVwb2attzbbJJCqD71vmZTLsW0QxuPKRgbcYY",
          "18: zp4K4lVBnHhFrF8MOUOxJ7kQWIJZMZFt+BDcptCYurbD2H4W2xvnWViiC+LzCMzz",
          "19: iMJT6165uefL4JHTDPxC2fFiM9yrc72LmylJNkM/vepT128J5Qv0gRUaQbHiQuS6",
          "20: Dm/+WRnUfx3i89SV4mnBxb/Ta93GVqoOciWwzWSnwEnWYAvOb95JL4U7c5J5f/+c",
          "21: KnQDHsW7sIiIdscsWzvgf6qs2Ra1Zrt7Fdk4+ZS2f/adagLhDO1C24sXf5XfMk5m",
          "22: L0OGwZSr9m5s17VXxfspgU5ugc8kBJfzABEBAAE=",
          "23: =WCfs",
          "24: -----END PGP PUBLIC KEY BLOCK-----",
          "",
          "---------------"
        ],
        "tests/data/keys/CVE-2021-3521-nosubsig-last.asc||tests/data/keys/CVE-2021-3521-nosubsig-last.asc": [
          "File: tests/data/keys/CVE-2021-3521-nosubsig-last.asc -> tests/data/keys/CVE-2021-3521-nosubsig-last.asc",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: -----BEGIN PGP PUBLIC KEY BLOCK-----",
          "2: Version: rpm-4.17.90 (NSS-3)",
          "4: mQENBFjmORgBCAC7TMEk6wnjSs8Dr4yqSScWdU2pjcqrkTxuzdWvowcIUPZI0w/g",
          "5: HkRqGd4apjvY2V15kjL10gk3QhFP3pZ/9p7zh8o8NHX7aGdSGDK7NOq1eFaErPRY",
          "6: 91LW9RiZ0lbOjXEzIL0KHxUiTQEmdXJT43DJMFPyW9fkCWg0OltiX618FUdWWfI8",
          "7: eySdLur1utnqBvdEbCUvWK2RX3vQZQdvEBODnNk2pxqTyV0w6VPQ96W++lF/5Aas",
          "8: 7rUv3HIyIXxIggc8FRrnH+y9XvvHDonhTIlGnYZN4ubm9i4y3gOkrZlGTrEw7elQ",
          "9: 1QeMyG2QQEbze8YjpTm4iLABCBrRfPRaQpwrABEBAAG0IXJwbS5vcmcgUlNBIHRl",
          "10: c3RrZXkgPHJzYUBycG0ub3JnPokBNwQTAQgAIQUCWOY5GAIbAwULCQgHAgYVCAkK",
          "11: CwIEFgIDAQIeAQIXgAAKCRBDRFkeGWTF/MxxCACnjqFL+MmPh9W9JQKT2DcLbBzf",
          "12: Cqo6wcEBoCOcwgRSk8dSikhARoteoa55JRJhuMyeKhhEAogE9HRmCPFdjezFTwgB",
          "13: BDVBpO2dZ023mLXDVCYX3S8pShOgCP6Tn4wqCnYeAdLcGg106N4xcmgtcssJE+Pr",
          "14: XzTZksbZsrTVEmL/Ym+R5w5jBfFnGk7Yw7ndwfQsfNXQb5AZynClFxnX546lcyZX",
          "15: fEx3/e6ezw57WNOUK6WT+8b+EGovPkbetK/rGxNXuWaP6X4A/QUm8O98nCuHYFQq",
          "16: +mvNdsCBqGf7mhaRGtpHk/JgCn5rFvArMDqLVrR9hX0LdCSsH7EGE+bR3r7wuQEN",
          "17: BFjmORgBCACk+vDZrIXQuFXEYToZVwb2attzbbJJCqD71vmZTLsW0QxuPKRgbcYY",
          "18: zp4K4lVBnHhFrF8MOUOxJ7kQWIJZMZFt+BDcptCYurbD2H4W2xvnWViiC+LzCMzz",
          "19: iMJT6165uefL4JHTDPxC2fFiM9yrc72LmylJNkM/vepT128J5Qv0gRUaQbHiQuS6",
          "20: Dm/+WRnUfx3i89SV4mnBxb/Ta93GVqoOciWwzWSnwEnWYAvOb95JL4U7c5J5f/+c",
          "21: KnQDHsW7sIiIdscsWzvgf6qs2Ra1Zrt7Fdk4+ZS2f/adagLhDO1C24sXf5XfMk5m",
          "22: L0OGwZSr9m5s17VXxfspgU5ugc8kBJfzABEBAAE=",
          "23: =WCfs",
          "24: -----END PGP PUBLIC KEY BLOCK-----",
          "",
          "---------------"
        ],
        "tests/data/keys/CVE-2021-3521-nosubsig.asc||tests/data/keys/CVE-2021-3521-nosubsig.asc": [
          "File: tests/data/keys/CVE-2021-3521-nosubsig.asc -> tests/data/keys/CVE-2021-3521-nosubsig.asc",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: -----BEGIN PGP PUBLIC KEY BLOCK-----",
          "2: Version: rpm-4.17.90 (NSS-3)",
          "4: mQENBFjmORgBCAC7TMEk6wnjSs8Dr4yqSScWdU2pjcqrkTxuzdWvowcIUPZI0w/g",
          "5: HkRqGd4apjvY2V15kjL10gk3QhFP3pZ/9p7zh8o8NHX7aGdSGDK7NOq1eFaErPRY",
          "6: 91LW9RiZ0lbOjXEzIL0KHxUiTQEmdXJT43DJMFPyW9fkCWg0OltiX618FUdWWfI8",
          "7: eySdLur1utnqBvdEbCUvWK2RX3vQZQdvEBODnNk2pxqTyV0w6VPQ96W++lF/5Aas",
          "8: 7rUv3HIyIXxIggc8FRrnH+y9XvvHDonhTIlGnYZN4ubm9i4y3gOkrZlGTrEw7elQ",
          "9: 1QeMyG2QQEbze8YjpTm4iLABCBrRfPRaQpwrABEBAAG0IXJwbS5vcmcgUlNBIHRl",
          "10: c3RrZXkgPHJzYUBycG0ub3JnPokBNwQTAQgAIQUCWOY5GAIbAwULCQgHAgYVCAkK",
          "11: CwIEFgIDAQIeAQIXgAAKCRBDRFkeGWTF/MxxCACnjqFL+MmPh9W9JQKT2DcLbBzf",
          "12: Cqo6wcEBoCOcwgRSk8dSikhARoteoa55JRJhuMyeKhhEAogE9HRmCPFdjezFTwgB",
          "13: BDVBpO2dZ023mLXDVCYX3S8pShOgCP6Tn4wqCnYeAdLcGg106N4xcmgtcssJE+Pr",
          "14: XzTZksbZsrTVEmL/Ym+R5w5jBfFnGk7Yw7ndwfQsfNXQb5AZynClFxnX546lcyZX",
          "15: fEx3/e6ezw57WNOUK6WT+8b+EGovPkbetK/rGxNXuWaP6X4A/QUm8O98nCuHYFQq",
          "16: +mvNdsCBqGf7mhaRGtpHk/JgCn5rFvArMDqLVrR9hX0LdCSsH7EGE+bR3r7wuQEN",
          "17: BFjmORgBCACk+vDZrIXQuFXEYToZVwb2attzbbJJCqD71vmZTLsW0QxuPKRgbcYY",
          "18: zp4K4lVBnHhFrF8MOUOxJ7kQWIJZMZFt+BDcptCYurbD2H4W2xvnWViiC+LzCMzz",
          "19: iMJT6165uefL4JHTDPxC2fFiM9yrc72LmylJNkM/vepT128J5Qv0gRUaQbHiQuS6",
          "20: Dm/+WRnUfx3i89SV4mnBxb/Ta93GVqoOciWwzWSnwEnWYAvOb95JL4U7c5J5f/+c",
          "21: KnQDHsW7sIiIdscsWzvgf6qs2Ra1Zrt7Fdk4+ZS2f/adagLhDO1C24sXf5XfMk5m",
          "22: L0OGwZSr9m5s17VXxfspgU5ugc8kBJfzABEBAAG5AQ0EWOY5GAEIAKT68NmshdC4",
          "23: VcRhOhlXBvZq23NtskkKoPvW+ZlMuxbRDG48pGBtxhjOngriVUGceEWsXww5Q7En",
          "24: uRBYglkxkW34ENym0Ji6tsPYfhbbG+dZWKIL4vMIzPOIwlPrXrm558vgkdMM/ELZ",
          "25: 8WIz3KtzvYubKUk2Qz+96lPXbwnlC/SBFRpBseJC5LoOb/5ZGdR/HeLz1JXiacHF",
          "26: v9Nr3cZWqg5yJbDNZKfASdZgC85v3kkvhTtzknl//5wqdAMexbuwiIh2xyxbO+B/",
          "27: qqzZFrVmu3sV2Tj5lLZ/9p1qAuEM7ULbixd/ld8yTmYvQ4bBlKv2bmzXtVfF+ymB",
          "28: Tm6BzyQEl/MAEQEAAYkBHwQYAQgACQUCWOY5GAIbDAAKCRBDRFkeGWTF/PANB/9j",
          "29: mifmj6z/EPe0PJFhrpISt9PjiUQCt0IPtiL5zKAkWjHePIzyi+0kCTBF6DDLFxos",
          "30: 3vN4bWnVKT1kBhZAQlPqpJTg+m74JUYeDGCdNx9SK7oRllATqyu+5rncgxjWVPnQ",
          "31: zu/HRPlWJwcVFYEVXYL8xzfantwQTqefjmcRmBRdA2XJITK+hGWwAmrqAWx+q5xX",
          "32: Pa8wkNMxVzNS2rUKO9SoVuJ/wlUvfoShkJ/VJ5HDp3qzUqncADfdGN35TDzscngQ",
          "33: gHvnMwVBfYfSCABV1hNByoZcc/kxkrWMmsd/EnIyLd1Q1baKqc3cEDuC6E6/o4yJ",
          "34: E4XX4jtDmdZPreZALsiB",
          "35: =rRop",
          "36: -----END PGP PUBLIC KEY BLOCK-----",
          "",
          "---------------"
        ],
        "tests/rpmsigdig.at||tests/rpmsigdig.at": [
          "File: tests/rpmsigdig.at -> tests/rpmsigdig.at",
          "--- Hunk 1 ---",
          "[Context before]",
          "240: [])",
          "241: AT_CLEANUP",
          "243: # ------------------------------",
          "244: # Test pre-built package verification",
          "245: AT_SETUP([rpmkeys -K <signed> 1])",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243: AT_SETUP([rpmkeys --import invalid keys])",
          "244: AT_KEYWORDS([rpmkeys import])",
          "245: RPMDB_INIT",
          "247: AT_CHECK([",
          "248: runroot rpmkeys --import /data/keys/CVE-2021-3521-badbind.asc",
          "249: ],",
          "250: [1],",
          "251: [],",
          "252: [error: /data/keys/CVE-2021-3521-badbind.asc: key 1 import failed.]",
          "253: )",
          "254: AT_CHECK([",
          "255: runroot rpmkeys --import /data/keys/CVE-2021-3521-nosubsig.asc",
          "256: ],",
          "257: [1],",
          "258: [],",
          "259: [error: /data/keys/CVE-2021-3521-nosubsig.asc: key 1 import failed.]",
          "260: )",
          "262: AT_CHECK([",
          "263: runroot rpmkeys --import /data/keys/CVE-2021-3521-nosubsig-last.asc",
          "264: ],",
          "265: [1],",
          "266: [],",
          "267: [error: /data/keys/CVE-2021-3521-nosubsig-last.asc: key 1 import failed.]",
          "268: )",
          "269: AT_CLEANUP",
          "",
          "---------------"
        ]
      }
    }
  ]
}