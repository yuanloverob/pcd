{
  "cve_id": "CVE-2020-10379",
  "cve_desc": "In Pillow before 7.1.0, there are two Buffer Overflows in libImaging/TiffDecode.c.",
  "repo": "python-pillow/Pillow",
  "patch_hash": "46f4a349b88915787fea3fb91348bb1665831bbb",
  "patch_info": {
    "commit_hash": "46f4a349b88915787fea3fb91348bb1665831bbb",
    "repo": "python-pillow/Pillow",
    "commit_url": "https://github.com/python-pillow/Pillow/commit/46f4a349b88915787fea3fb91348bb1665831bbb#diff-9478f2787e3ae9668a15123b165c23ac",
    "files": [
      "Tests/check_tiff_crashes.py",
      "Tests/images/crash_1.tif",
      "Tests/images/crash_2.tif",
      "src/libImaging/TiffDecode.c"
    ],
    "message": "Merge pull request #4507 from hugovk/fix_tiff\n\nFix 2 buffer overflows in TIFF decoding",
    "before_after_code_files": [
      "Tests/check_tiff_crashes.py||Tests/check_tiff_crashes.py",
      "src/libImaging/TiffDecode.c||src/libImaging/TiffDecode.c"
    ]
  },
  "patch_diff": {
    "Tests/check_tiff_crashes.py||Tests/check_tiff_crashes.py": [
      "File: Tests/check_tiff_crashes.py -> Tests/check_tiff_crashes.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: #!/usr/bin/env python",
      "3: # Reproductions/tests for crashes/read errors in TiffDecode.c",
      "5: # When run in python, all of these images should fail for",
      "6: # one reason or another, either as a buffer overrun,",
      "7: # unrecognized datastream, or truncated image file.",
      "8: # There shouldn't be any segfaults.",
      "9: #",
      "10: # if run like",
      "11: # `valgrind --tool=memcheck python check_tiff_crashes.py  2>&1 | grep TiffDecode.c`",
      "12: # the output should be empty. There may be python issues",
      "13: # in the valgrind especially if run in a debug python",
      "14: # version.",
      "17: from PIL import Image",
      "19: repro_read_strip = (",
      "20:     \"images/crash_1.tif\",",
      "21:     \"images/crash_2.tif\",",
      "22: )",
      "24: for path in repro_read_strip:",
      "25:     with Image.open(path) as im:",
      "26:         try:",
      "27:             im.load()",
      "28:         except Exception as msg:",
      "29:             print(msg)",
      "",
      "---------------"
    ],
    "src/libImaging/TiffDecode.c||src/libImaging/TiffDecode.c": [
      "File: src/libImaging/TiffDecode.c -> src/libImaging/TiffDecode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "173: int ReadTile(TIFF* tiff, UINT32 col, UINT32 row, UINT32* buffer) {",
      "176:     TIFFGetField(tiff, TIFFTAG_PHOTOMETRIC, &photometric);",
      "",
      "[Removed Lines]",
      "174:     uint16 photometric;",
      "",
      "[Added Lines]",
      "174:     uint16 photometric = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "228: }",
      "230: int ReadStrip(TIFF* tiff, UINT32 row, UINT32* buffer) {",
      "232:     TIFFGetField(tiff, TIFFTAG_PHOTOMETRIC, &photometric);",
      "",
      "[Removed Lines]",
      "231:     uint16 photometric;",
      "",
      "[Added Lines]",
      "231:     uint16 photometric = 0; // init to not PHOTOMETRIC_YCBCR",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "364:         state->bytes = row_byte_size * tile_length;",
      "368:         new_data = realloc (state->buffer, state->bytes);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "366:         if (TIFFTileSize(tiff) > state->bytes) {",
      "368:             state->errcode = IMAGING_CODEC_MEMORY;",
      "369:             TIFFClose(tiff);",
      "370:             return -1;",
      "371:         }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "424:             TIFFClose(tiff);",
      "425:             return -1;",
      "426:         }",
      "428:         state->bytes = rows_per_strip * row_byte_size;",
      "430:         TRACE((\"StripSize: %d \\n\", state->bytes));",
      "434:         new_data = realloc (state->buffer, state->bytes);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "439:         if (TIFFStripSize(tiff) > state->bytes) {",
      "444:             state->errcode = IMAGING_CODEC_MEMORY;",
      "445:             TIFFClose(tiff);",
      "446:             return -1;",
      "447:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2092801e71f008fa3d50cec7afc3ab50a11a14dc",
      "candidate_info": {
        "commit_hash": "2092801e71f008fa3d50cec7afc3ab50a11a14dc",
        "repo": "python-pillow/Pillow",
        "commit_url": "https://github.com/python-pillow/Pillow/commit/2092801e71f008fa3d50cec7afc3ab50a11a14dc",
        "files": [
          "Tests/check_tiff_crashes.py"
        ],
        "message": "Format with Black",
        "before_after_code_files": [
          "Tests/check_tiff_crashes.py||Tests/check_tiff_crashes.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/python-pillow/Pillow/pull/4507"
        ],
        "olp_code_files": {
          "patch": [
            "Tests/check_tiff_crashes.py||Tests/check_tiff_crashes.py"
          ],
          "candidate": [
            "Tests/check_tiff_crashes.py||Tests/check_tiff_crashes.py"
          ]
        }
      },
      "candidate_diff": {
        "Tests/check_tiff_crashes.py||Tests/check_tiff_crashes.py": [
          "File: Tests/check_tiff_crashes.py -> Tests/check_tiff_crashes.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: from PIL import Image",
          "21: )",
          "23: for path in repro_read_strip:",
          "",
          "[Removed Lines]",
          "19: repro_read_strip = ('images/crash_1.tif',",
          "20:                     'images/crash_2.tif',",
          "",
          "[Added Lines]",
          "19: repro_read_strip = (",
          "20:     \"images/crash_1.tif\",",
          "21:     \"images/crash_2.tif\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6e7c0ced684842eb560043790c45dfab560eddf2",
      "candidate_info": {
        "commit_hash": "6e7c0ced684842eb560043790c45dfab560eddf2",
        "repo": "python-pillow/Pillow",
        "commit_url": "https://github.com/python-pillow/Pillow/commit/6e7c0ced684842eb560043790c45dfab560eddf2",
        "files": [
          "Tests/check_tiff_crashes.py",
          "Tests/images/crash_1.tif",
          "Tests/images/crash_2.tif"
        ],
        "message": "Tests for tiff crashes",
        "before_after_code_files": [
          "Tests/check_tiff_crashes.py||Tests/check_tiff_crashes.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/python-pillow/Pillow/pull/4507"
        ],
        "olp_code_files": {
          "patch": [
            "Tests/check_tiff_crashes.py||Tests/check_tiff_crashes.py"
          ],
          "candidate": [
            "Tests/check_tiff_crashes.py||Tests/check_tiff_crashes.py"
          ]
        }
      },
      "candidate_diff": {
        "Tests/check_tiff_crashes.py||Tests/check_tiff_crashes.py": [
          "File: Tests/check_tiff_crashes.py -> Tests/check_tiff_crashes.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/usr/bin/env python",
          "3: # Reproductions/tests for crashes/read errors in TiffDecode.c",
          "5: # When run in python, all of these images should fail for",
          "6: # one reason or another, either as a buffer overrun,",
          "7: # unrecognized datastream, or truncated image file.",
          "8: # There shouldn't be any segfaults.",
          "9: #",
          "10: # if run like",
          "11: # `valgrind --tool=memcheck python check_tiff_crashes.py  2>&1 | grep TiffDecode.c`",
          "12: # the output should be empty. There may be python issues",
          "13: # in the valgrind especially if run in a debug python",
          "14: # version.",
          "17: from PIL import Image",
          "19: repro_read_strip = ('images/crash_1.tif',",
          "20:                     'images/crash_2.tif',",
          "21: )",
          "23: for path in repro_read_strip:",
          "24:     with Image.open(path) as im:",
          "25:         try:",
          "26:             im.load()",
          "27:         except Exception as msg:",
          "28:             print(msg)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6b842f4ec001b12a9348e95854e02bbd10a84e20",
      "candidate_info": {
        "commit_hash": "6b842f4ec001b12a9348e95854e02bbd10a84e20",
        "repo": "python-pillow/Pillow",
        "commit_url": "https://github.com/python-pillow/Pillow/commit/6b842f4ec001b12a9348e95854e02bbd10a84e20",
        "files": [
          "src/libImaging/TiffDecode.c"
        ],
        "message": "Ensure that Tiff's concept of Strip and Tilesize matches Pillow's",
        "before_after_code_files": [
          "src/libImaging/TiffDecode.c||src/libImaging/TiffDecode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/python-pillow/Pillow/pull/4507"
        ],
        "olp_code_files": {
          "patch": [
            "src/libImaging/TiffDecode.c||src/libImaging/TiffDecode.c"
          ],
          "candidate": [
            "src/libImaging/TiffDecode.c||src/libImaging/TiffDecode.c"
          ]
        }
      },
      "candidate_diff": {
        "src/libImaging/TiffDecode.c||src/libImaging/TiffDecode.c": [
          "File: src/libImaging/TiffDecode.c -> src/libImaging/TiffDecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "364:         state->bytes = row_byte_size * tile_length;",
          "368:         new_data = realloc (state->buffer, state->bytes);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "366:         if (TIFFTileSize(tiff) > state->bytes) {",
          "368:             state->errcode = IMAGING_CODEC_MEMORY;",
          "369:             TIFFClose(tiff);",
          "370:             return -1;",
          "371:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "424:             TIFFClose(tiff);",
          "425:             return -1;",
          "426:         }",
          "428:         state->bytes = rows_per_strip * row_byte_size;",
          "430:         TRACE((\"StripSize: %d \\n\", state->bytes));",
          "434:         new_data = realloc (state->buffer, state->bytes);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "439:         if (TIFFStripSize(tiff) > state->bytes) {",
          "444:             state->errcode = IMAGING_CODEC_MEMORY;",
          "445:             TIFFClose(tiff);",
          "446:             return -1;",
          "447:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c00fdc7e30675e5d4d85b8acd206a827da62a0fd",
      "candidate_info": {
        "commit_hash": "c00fdc7e30675e5d4d85b8acd206a827da62a0fd",
        "repo": "python-pillow/Pillow",
        "commit_url": "https://github.com/python-pillow/Pillow/commit/c00fdc7e30675e5d4d85b8acd206a827da62a0fd",
        "files": [
          "src/libImaging/TiffDecode.c"
        ],
        "message": "Fix typos\n\nCo-Authored-By: Andrew Murray <3112309+radarhere@users.noreply.github.com>",
        "before_after_code_files": [
          "src/libImaging/TiffDecode.c||src/libImaging/TiffDecode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/python-pillow/Pillow/pull/4507"
        ],
        "olp_code_files": {
          "patch": [
            "src/libImaging/TiffDecode.c||src/libImaging/TiffDecode.c"
          ],
          "candidate": [
            "src/libImaging/TiffDecode.c||src/libImaging/TiffDecode.c"
          ]
        }
      },
      "candidate_diff": {
        "src/libImaging/TiffDecode.c||src/libImaging/TiffDecode.c": [
          "File: src/libImaging/TiffDecode.c -> src/libImaging/TiffDecode.c"
        ]
      }
    },
    {
      "candidate_hash": "b8d4ce1a591beda18c2d5c80a9f5a5e4856f6beb",
      "candidate_info": {
        "commit_hash": "b8d4ce1a591beda18c2d5c80a9f5a5e4856f6beb",
        "repo": "python-pillow/Pillow",
        "commit_url": "https://github.com/python-pillow/Pillow/commit/b8d4ce1a591beda18c2d5c80a9f5a5e4856f6beb",
        "files": [
          "src/libImaging/TiffDecode.c"
        ],
        "message": "Avoid uninitialized read",
        "before_after_code_files": [
          "src/libImaging/TiffDecode.c||src/libImaging/TiffDecode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/python-pillow/Pillow/pull/4507"
        ],
        "olp_code_files": {
          "patch": [
            "src/libImaging/TiffDecode.c||src/libImaging/TiffDecode.c"
          ],
          "candidate": [
            "src/libImaging/TiffDecode.c||src/libImaging/TiffDecode.c"
          ]
        }
      },
      "candidate_diff": {
        "src/libImaging/TiffDecode.c||src/libImaging/TiffDecode.c": [
          "File: src/libImaging/TiffDecode.c -> src/libImaging/TiffDecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "173: int ReadTile(TIFF* tiff, UINT32 col, UINT32 row, UINT32* buffer) {",
          "176:     TIFFGetField(tiff, TIFFTAG_PHOTOMETRIC, &photometric);",
          "",
          "[Removed Lines]",
          "174:     uint16 photometric;",
          "",
          "[Added Lines]",
          "174:     uint16 photometric = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "228: }",
          "230: int ReadStrip(TIFF* tiff, UINT32 row, UINT32* buffer) {",
          "232:     TIFFGetField(tiff, TIFFTAG_PHOTOMETRIC, &photometric);",
          "",
          "[Removed Lines]",
          "231:     uint16 photometric;",
          "",
          "[Added Lines]",
          "231:     uint16 photometric = 0; // init to not PHOTOMETRIC_YCBCR",
          "",
          "---------------"
        ]
      }
    }
  ]
}