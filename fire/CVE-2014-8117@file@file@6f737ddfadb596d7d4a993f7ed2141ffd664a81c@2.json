{
  "cve_id": "CVE-2014-8117",
  "cve_desc": "softmagic.c in file before 5.21 does not properly limit recursion, which allows remote attackers to cause a denial of service (CPU consumption or crash) via unspecified vectors.",
  "repo": "file/file",
  "patch_hash": "6f737ddfadb596d7d4a993f7ed2141ffd664a81c",
  "patch_info": {
    "commit_hash": "6f737ddfadb596d7d4a993f7ed2141ffd664a81c",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/6f737ddfadb596d7d4a993f7ed2141ffd664a81c",
    "files": [
      "src/file.h",
      "src/funcs.c",
      "src/softmagic.c"
    ],
    "message": "- reduce recursion level from 20 to 10 and make a symbolic constant for it. - pull out the guts of saving and restoring the output buffer into functions   and take care not to overwrite the error message if an error happened.",
    "before_after_code_files": [
      "src/file.h||src/file.h",
      "src/funcs.c||src/funcs.c",
      "src/softmagic.c||src/softmagic.c"
    ]
  },
  "patch_diff": {
    "src/file.h||src/file.h": [
      "File: src/file.h -> src/file.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "495: protected void file_regfree(file_regex_t *);",
      "496: protected void file_regerror(file_regex_t *, int, struct magic_set *);",
      "498: #ifndef COMPILE_ONLY",
      "499: extern const char *file_names[];",
      "500: extern const size_t file_nnames;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "498: typedef struct {",
      "499:  char *buf;",
      "500:  uint32_t offset;",
      "501: } file_pushbuf_t;",
      "503: protected file_pushbuf_t *file_push_buffer(struct magic_set *);",
      "504: protected char  *file_pop_buffer(struct magic_set *, file_pushbuf_t *);",
      "",
      "---------------"
    ],
    "src/funcs.c||src/funcs.c": [
      "File: src/funcs.c -> src/funcs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #include \"file.h\"",
      "29: #ifndef lint",
      "33: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.72 2014/05/14 23:15:42 christos Exp $\")",
      "",
      "[Added Lines]",
      "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.73 2014/09/10 18:41:51 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "491:  file_magerror(ms, \"regex error %d for `%s', (%s)\", rc, rx->pat,",
      "492:      errmsg);",
      "493: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "495: protected file_pushbuf_t *",
      "496: file_push_buffer(struct magic_set *ms)",
      "497: {",
      "498:  file_pushbuf_t *pb;",
      "500:  if (ms->event_flags & EVENT_HAD_ERR)",
      "501:   return NULL;",
      "503:  if ((pb = (CAST(file_pushbuf_t *, malloc(sizeof(*pb))))) == NULL)",
      "504:   return NULL;",
      "506:  pb->buf = ms->o.buf;",
      "507:  pb->offset = ms->offset;",
      "509:  ms->o.buf = NULL;",
      "510:  ms->offset = 0;",
      "512:  return pb;",
      "513: }",
      "515: protected char *",
      "516: file_pop_buffer(struct magic_set *ms, file_pushbuf_t *pb)",
      "517: {",
      "518:  char *rbuf;",
      "520:  if (ms->event_flags & EVENT_HAD_ERR) {",
      "521:   free(pb->buf);",
      "522:   free(pb);",
      "523:   return NULL;",
      "524:  }",
      "526:  rbuf = ms->o.buf;",
      "528:  ms->o.buf = pb->buf;",
      "529:  ms->offset = pb->offset;",
      "531:  free(pb);",
      "532:  return rbuf;",
      "533: }",
      "",
      "---------------"
    ],
    "src/softmagic.c||src/softmagic.c": [
      "File: src/softmagic.c -> src/softmagic.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "32: #include \"file.h\"",
      "34: #ifndef lint",
      "38: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.196 2014/11/07 15:24:14 christos Exp $\")",
      "",
      "[Added Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.197 2014/11/11 17:48:23 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "63: private void cvt_64(union VALUETYPE *, const struct magic *);",
      "65: #define OFFSET_OOB(n, o, i) ((n) < (o) || (i) > ((n) - (o)))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "67: #define MAX_RECURSION_LEVEL 10",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1217:     int flip, int recursion_level, int *printed_something,",
      "1218:     int *need_separator, int *returnval)",
      "1219: {",
      "1221:  uint32_t lhs;",
      "1222:  int rv, oneed_separator, in_type;",
      "1224:  union VALUETYPE *p = &ms->ms_value;",
      "1225:  struct mlist ml;",
      "1228:   file_error(ms, 0, \"recursion nesting exceeded\");",
      "1229:   return -1;",
      "1230:  }",
      "",
      "[Removed Lines]",
      "1220:  uint32_t soffset, offset = ms->offset;",
      "1223:  char *sbuf, *rbuf;",
      "1227:  if (recursion_level >= 20) {",
      "",
      "[Added Lines]",
      "1223:  uint32_t offset = ms->offset;",
      "1225:  file_pushbuf_t *pb;",
      "1227:  char *rbuf;",
      "1231:  if (recursion_level >= MAX_RECURSION_LEVEL) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1669:  case FILE_INDIRECT:",
      "1670:   if (offset == 0)",
      "1671:    return 0;",
      "1672:   if (nbytes < offset)",
      "1673:    return 0;",
      "1678:   rv = file_softmagic(ms, s + offset, nbytes - offset,",
      "1679:       recursion_level, BINTEST, text);",
      "1680:   if ((ms->flags & MAGIC_DEBUG) != 0)",
      "1681:    fprintf(stderr, \"indirect @offs=%u[%d]\\n\", offset, rv);",
      "1685:   if (rv == 1) {",
      "1686:    if ((ms->flags & (MAGIC_MIME|MAGIC_APPLE)) == 0 &&",
      "1687:        file_printf(ms, F(ms, m, \"%u\"), offset) == -1) {",
      "",
      "[Removed Lines]",
      "1674:   sbuf = ms->o.buf;",
      "1675:   soffset = ms->offset;",
      "1676:   ms->o.buf = NULL;",
      "1677:   ms->offset = 0;",
      "1682:   rbuf = ms->o.buf;",
      "1683:   ms->o.buf = sbuf;",
      "1684:   ms->offset = soffset;",
      "",
      "[Added Lines]",
      "1680:   if ((pb = file_push_buffer(ms)) == NULL)",
      "1681:    return -1;",
      "1689:   rbuf = file_pop_buffer(ms, pb);",
      "1690:   if (rbuf == NULL)",
      "1691:    return -1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1699:  case FILE_USE:",
      "1700:   if (nbytes < offset)",
      "1701:    return 0;",
      "1705:    flip = !flip;",
      "1706:   }",
      "1709:    return -1;",
      "1710:   }",
      "",
      "[Removed Lines]",
      "1702:   sbuf = m->value.s;",
      "1703:   if (*sbuf == '^') {",
      "1704:    sbuf++;",
      "1707:   if (file_magicfind(ms, sbuf, &ml) == -1) {",
      "1708:    file_error(ms, 0, \"cannot find entry `%s'\", sbuf);",
      "",
      "[Added Lines]",
      "1710:   rbuf = m->value.s;",
      "1711:   if (*rbuf == '^') {",
      "1712:    rbuf++;",
      "1715:   if (file_magicfind(ms, rbuf, &ml) == -1) {",
      "1716:    file_error(ms, 0, \"cannot find entry `%s'\", rbuf);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2091732d23c52d7e58c073cae832b2039486e04d",
      "candidate_info": {
        "commit_hash": "2091732d23c52d7e58c073cae832b2039486e04d",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/2091732d23c52d7e58c073cae832b2039486e04d",
        "files": [
          "src/softmagic.c"
        ],
        "message": "- always do arithmetic on dates - fix T_LOCAL reversed logic",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.209 2015/01/05 20:05:39 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.210 2015/01/05 20:21:30 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "548:  case FILE_LEDATE:",
          "549:  case FILE_MEDATE:",
          "550:   if (file_printf(ms, F(ms, m, \"%s\"),",
          "552:    return -1;",
          "553:   t = ms->offset + sizeof(uint32_t);",
          "554:   break;",
          "",
          "[Removed Lines]",
          "551:       file_fmttime(p->l + m->num_mask, FILE_T_LOCAL, tbuf)) == -1)",
          "",
          "[Added Lines]",
          "551:       file_fmttime(p->l, 0, tbuf)) == -1)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "558:  case FILE_LELDATE:",
          "559:  case FILE_MELDATE:",
          "560:   if (file_printf(ms, F(ms, m, \"%s\"),",
          "562:    return -1;",
          "563:   t = ms->offset + sizeof(uint32_t);",
          "564:   break;",
          "",
          "[Removed Lines]",
          "561:       file_fmttime(p->l + m->num_mask, 0, tbuf)) == -1)",
          "",
          "[Added Lines]",
          "561:       file_fmttime(p->l, FILE_T_LOCAL, tbuf)) == -1)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "567:  case FILE_BEQDATE:",
          "568:  case FILE_LEQDATE:",
          "569:   if (file_printf(ms, F(ms, m, \"%s\"),",
          "571:    return -1;",
          "572:   t = ms->offset + sizeof(uint64_t);",
          "573:   break;",
          "",
          "[Removed Lines]",
          "570:       file_fmttime(p->q + m->num_mask, FILE_T_LOCAL, tbuf)) == -1)",
          "",
          "[Added Lines]",
          "570:       file_fmttime(p->q, 0, tbuf)) == -1)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "576:  case FILE_BEQLDATE:",
          "577:  case FILE_LEQLDATE:",
          "578:   if (file_printf(ms, F(ms, m, \"%s\"),",
          "580:    return -1;",
          "581:   t = ms->offset + sizeof(uint64_t);",
          "582:   break;",
          "",
          "[Removed Lines]",
          "579:       file_fmttime(p->q + m->num_mask, 0, tbuf)) == -1)",
          "",
          "[Added Lines]",
          "579:       file_fmttime(p->q, FILE_T_LOCAL, tbuf)) == -1)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "585:  case FILE_BEQWDATE:",
          "586:  case FILE_LEQWDATE:",
          "587:   if (file_printf(ms, F(ms, m, \"%s\"),",
          "589:    return -1;",
          "590:   t = ms->offset + sizeof(uint64_t);",
          "591:   break;",
          "",
          "[Removed Lines]",
          "588:       file_fmttime(p->q + m->num_mask, FILE_T_WINDOWS, tbuf)) == -1)",
          "",
          "[Added Lines]",
          "588:       file_fmttime(p->q, FILE_T_WINDOWS, tbuf)) == -1)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "970:  case FILE_BELDATE:",
          "971:   p->l = (int32_t)",
          "972:       ((p->hl[0]<<24)|(p->hl[1]<<16)|(p->hl[2]<<8)|(p->hl[3]));",
          "975:   return 1;",
          "976:  case FILE_BEQUAD:",
          "977:  case FILE_BEQDATE:",
          "",
          "[Removed Lines]",
          "973:   if (type == FILE_BELONG)",
          "974:    cvt_32(p, m);",
          "",
          "[Added Lines]",
          "973:   cvt_32(p, m);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "982:        ((uint64_t)p->hq[2]<<40)|((uint64_t)p->hq[3]<<32)|",
          "983:        ((uint64_t)p->hq[4]<<24)|((uint64_t)p->hq[5]<<16)|",
          "984:        ((uint64_t)p->hq[6]<<8)|((uint64_t)p->hq[7]));",
          "987:   return 1;",
          "988:  case FILE_LESHORT:",
          "989:   p->h = (short)((p->hs[1]<<8)|(p->hs[0]));",
          "",
          "[Removed Lines]",
          "985:   if (type == FILE_BEQUAD)",
          "986:    cvt_64(p, m);",
          "",
          "[Added Lines]",
          "984:   cvt_64(p, m);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "994:  case FILE_LELDATE:",
          "995:   p->l = (int32_t)",
          "996:       ((p->hl[3]<<24)|(p->hl[2]<<16)|(p->hl[1]<<8)|(p->hl[0]));",
          "999:   return 1;",
          "1000:  case FILE_LEQUAD:",
          "1001:  case FILE_LEQDATE:",
          "",
          "[Removed Lines]",
          "997:   if (type == FILE_LELONG)",
          "998:    cvt_32(p, m);",
          "",
          "[Added Lines]",
          "995:   cvt_32(p, m);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1006:        ((uint64_t)p->hq[5]<<40)|((uint64_t)p->hq[4]<<32)|",
          "1007:        ((uint64_t)p->hq[3]<<24)|((uint64_t)p->hq[2]<<16)|",
          "1008:        ((uint64_t)p->hq[1]<<8)|((uint64_t)p->hq[0]));",
          "1011:   return 1;",
          "1012:  case FILE_MELONG:",
          "1013:  case FILE_MEDATE:",
          "1014:  case FILE_MELDATE:",
          "1015:   p->l = (int32_t)",
          "1016:       ((p->hl[1]<<24)|(p->hl[0]<<16)|(p->hl[3]<<8)|(p->hl[2]));",
          "1019:   return 1;",
          "1020:  case FILE_FLOAT:",
          "1021:   cvt_float(p, m);",
          "",
          "[Removed Lines]",
          "1009:   if (type == FILE_LEQUAD)",
          "1010:    cvt_64(p, m);",
          "1017:   if (type == FILE_MELONG)",
          "1018:    cvt_32(p, m);",
          "",
          "[Added Lines]",
          "1006:   cvt_64(p, m);",
          "1013:   cvt_32(p, m);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "defbf8856b8f519f5979f65623ec18266741de50",
      "candidate_info": {
        "commit_hash": "defbf8856b8f519f5979f65623ec18266741de50",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/defbf8856b8f519f5979f65623ec18266741de50",
        "files": [
          "src/softmagic.c"
        ],
        "message": "search and regex don't copy stuff to value.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.206 2015/01/01 17:07:34 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.207 2015/01/02 21:29:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "589:   t = ms->offset + sizeof(uint64_t);",
          "590:   break;",
          "595:   vf = p->f;",
          "596:   switch (check_fmt(ms, m)) {",
          "597:   case -1:",
          "",
          "[Removed Lines]",
          "592:    case FILE_FLOAT:",
          "593:    case FILE_BEFLOAT:",
          "594:    case FILE_LEFLOAT:",
          "",
          "[Added Lines]",
          "592:  case FILE_FLOAT:",
          "593:  case FILE_BEFLOAT:",
          "594:  case FILE_LEFLOAT:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "609:   t = ms->offset + sizeof(float);",
          "610:     break;",
          "615:   vd = p->d;",
          "616:   switch (check_fmt(ms, m)) {",
          "617:   case -1:",
          "",
          "[Removed Lines]",
          "612:    case FILE_DOUBLE:",
          "613:    case FILE_BEDOUBLE:",
          "614:    case FILE_LEDOUBLE:",
          "",
          "[Added Lines]",
          "612:  case FILE_DOUBLE:",
          "613:  case FILE_BEDOUBLE:",
          "614:  case FILE_LEDOUBLE:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "629:   t = ms->offset + sizeof(double);",
          "630:     break;",
          "632:  case FILE_REGEX: {",
          "633:   char *cp;",
          "634:   int rval;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "632:  case FILE_SEARCH:",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "652:   break;",
          "653:  }",
          "665:  case FILE_DEFAULT:",
          "666:  case FILE_CLEAR:",
          "667:     if (file_printf(ms, \"%s\", m->desc) == -1)",
          "",
          "[Removed Lines]",
          "655:  case FILE_SEARCH:",
          "656:     if (file_printf(ms, F(ms, m, \"%s\"),",
          "657:       file_printable(sbuf, sizeof(sbuf), m->value.s)) == -1)",
          "658:    return -1;",
          "659:   if ((m->str_flags & REGEX_OFFSET_START))",
          "660:    t = ms->search.offset;",
          "661:   else",
          "662:    t = ms->search.offset + m->vallen;",
          "663:   break;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1965:        m->str_flags);",
          "1967:     ms->search.offset += idx;",
          "1968:     break;",
          "1969:    }",
          "1970:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1959:     ms->search.rm_len = m->str_range - idx;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4075d47c8debe0b2d413c1cf0f01b8f48813756c",
      "candidate_info": {
        "commit_hash": "4075d47c8debe0b2d413c1cf0f01b8f48813756c",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/4075d47c8debe0b2d413c1cf0f01b8f48813756c",
        "files": [
          "src/softmagic.c"
        ],
        "message": "indirect offsets should be relative to the beginning of the current magic.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.203 2014/12/04 15:22:05 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.204 2014/12/11 12:34:24 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1665:   break;",
          "1667:  case FILE_INDIRECT:",
          "1668:   if (offset == 0)",
          "1669:    return 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1668:   offset += o;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "90018fe22ff8b74a22fcd142225b0a00f3f12677",
      "candidate_info": {
        "commit_hash": "90018fe22ff8b74a22fcd142225b0a00f3f12677",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/90018fe22ff8b74a22fcd142225b0a00f3f12677",
        "files": [
          "src/apprentice.c",
          "src/file.c",
          "src/file.h",
          "src/file_opts.h",
          "src/magic.c",
          "src/magic.h.in",
          "src/softmagic.c"
        ],
        "message": "bump recursion to 15, and allow it to be set from the command line.",
        "before_after_code_files": [
          "src/apprentice.c||src/apprentice.c",
          "src/file.c||src/file.c",
          "src/file.h||src/file.h",
          "src/file_opts.h||src/file_opts.h",
          "src/magic.c||src/magic.c",
          "src/magic.h.in||src/magic.h.in",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/file.h||src/file.h",
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/file.h||src/file.h",
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/apprentice.c||src/apprentice.c": [
          "File: src/apprentice.c -> src/apprentice.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.222 2014/11/11 17:46:05 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.223 2014/11/12 15:28:34 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "524:   ms->mlist[i] = NULL;",
          "525:  ms->file = \"unknown\";",
          "526:  ms->line = 0;",
          "527:  return ms;",
          "528: free:",
          "529:  free(ms);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "527:  ms->max_recursion = FILE_MAX_RECURSION;",
          "",
          "---------------"
        ],
        "src/file.c||src/file.c": [
          "File: src/file.c -> src/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.154 2014/09/10 18:41:51 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.155 2014/10/11 15:03:16 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98: #undef OPT_LONGONLY",
          "99:     {0, 0, NULL, 0}",
          "100: };",
          "103: private const struct {",
          "104:  const char *name;",
          "",
          "[Removed Lines]",
          "101: #define OPTSTRING \"bcCde:Ef:F:hiklLm:nNprsvz0\"",
          "",
          "[Added Lines]",
          "101: #define OPTSTRING \"bcCde:Ef:F:hiklLm:nNprR:svz0\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "137:  size_t i;",
          "138:  int action = 0, didsomefiles = 0, errflg = 0;",
          "139:  int flags = 0, e = 0;",
          "140:  struct magic_set *magic = NULL;",
          "141:  int longindex;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "140:  size_t max_recursion = 0;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "245:   case 'r':",
          "246:    flags |= MAGIC_RAW;",
          "247:    break;",
          "248:   case 's':",
          "249:    flags |= MAGIC_DEVICES;",
          "250:    break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "249:   case 'R':",
          "250:    max_recursion = atoi(optarg);",
          "251:    break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "320:   if (magic == NULL)",
          "321:    if ((magic = load(magicfile, flags)) == NULL)",
          "322:     return 1;",
          "323:   break;",
          "324:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "329:   if (max_recursion) {",
          "330:    if (magic_setparam(magic, MAGIC_PARAM_MAX_RECURSION,",
          "331:        &max_recursion) == -1) {",
          "332:     (void)fprintf(stderr,",
          "333:         \"%s: Can't set recurision %s\\n\", progname,",
          "334:         strerror(errno));",
          "335:     return 1;",
          "336:    }",
          "337:   }",
          "",
          "---------------"
        ],
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "404: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "404:  size_t max_recursion;",
          "405: #define FILE_MAX_RECURSION 15",
          "",
          "---------------"
        ],
        "src/file_opts.h||src/file_opts.h": [
          "File: src/file_opts.h -> src/file_opts.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: OPT('p', \"preserve-date\", 0, \"        preserve access times on files\\n\")",
          "45: #endif",
          "46: OPT('r', \"raw\", 0, \"                  don't translate unprintable chars to \\\\ooo\\n\")",
          "47: OPT('s', \"special-files\", 0, \"        treat special (block/char devices) files as\\n\"",
          "48:     \"                             ordinary ones\\n\")",
          "49: OPT('C', \"compile\", 0, \"              compile file specified by -m\\n\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: OPT('R', \"recursion\", 0, \"            set maximum recursion level\\n\")",
          "",
          "---------------"
        ],
        "src/magic.c||src/magic.c": [
          "File: src/magic.c -> src/magic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include \"file.h\"",
          "35: #ifndef lint",
          "39: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.84 2014/05/14 23:15:42 christos Exp $\")",
          "",
          "[Added Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.85 2014/08/04 06:19:44 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "536: {",
          "537:  return MAGIC_VERSION;",
          "538: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "540: public int",
          "541: magic_setparam(struct magic_set *ms, int param, const void *val)",
          "542: {",
          "543:  switch (param) {",
          "544:  case MAGIC_PARAM_MAX_RECURSION:",
          "545:   ms->max_recursion = *(const size_t *)val;",
          "546:   return 0;",
          "547:  default:",
          "548:   errno = EINVAL;",
          "549:   return -1;",
          "550:  }",
          "551: }",
          "553: public int",
          "554: magic_getparam(struct magic_set *ms, int param, void *val)",
          "555: {",
          "556:  switch (param) {",
          "557:  case MAGIC_PARAM_MAX_RECURSION:",
          "559:   return 0;",
          "560:  default:",
          "561:   errno = EINVAL;",
          "562:   return -1;",
          "563:  }",
          "564: }",
          "",
          "---------------"
        ],
        "src/magic.h.in||src/magic.h.in": [
          "File: src/magic.h.in -> src/magic.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "97: int magic_version(void);",
          "98: int magic_load(magic_t, const char *);",
          "101: int magic_compile(magic_t, const char *);",
          "102: int magic_check(magic_t, const char *);",
          "103: int magic_list(magic_t, const char *);",
          "104: int magic_errno(magic_t);",
          "106: #ifdef __cplusplus",
          "107: };",
          "108: #endif",
          "",
          "[Removed Lines]",
          "99: int magic_load_buffers(struct magic_set *, void **, size_t *, size_t);",
          "",
          "[Added Lines]",
          "99: int magic_load_buffers(magic_t, void **, size_t *, size_t);",
          "106: #define MAGIC_PARAM_MAX_RECURSION 0",
          "107: int magic_setparam(magic_t, int, const void *);",
          "108: int magic_getparam(magic_t, int, void *);",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.197 2014/11/11 17:48:23 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.198 2014/11/23 13:54:27 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: #include <time.h>",
          "45: private int match(struct magic_set *, struct magic *, uint32_t,",
          "47:     int *);",
          "48: private int mget(struct magic_set *, const unsigned char *,",
          "50:     int *, int *);",
          "51: private int magiccheck(struct magic_set *, struct magic *);",
          "52: private int32_t mprint(struct magic_set *, struct magic *);",
          "",
          "[Removed Lines]",
          "46:     const unsigned char *, size_t, size_t, int, int, int, int, int *, int *,",
          "49:     struct magic *, size_t, size_t, unsigned int, int, int, int, int, int *,",
          "",
          "[Added Lines]",
          "46:     const unsigned char *, size_t, size_t, int, int, int, size_t, int *, int *,",
          "49:     struct magic *, size_t, size_t, unsigned int, int, int, int, size_t, int *,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65: #define OFFSET_OOB(n, o, i) ((n) < (o) || (i) > ((n) - (o)))",
          "",
          "[Removed Lines]",
          "67: #define MAX_RECURSION_LEVEL 10",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "136: private int",
          "137: match(struct magic_set *ms, struct magic *magic, uint32_t nmagic,",
          "138:     const unsigned char *s, size_t nbytes, size_t offset, int mode, int text,",
          "141: {",
          "142:  uint32_t magindex = 0;",
          "143:  unsigned int cont_level = 0;",
          "",
          "[Removed Lines]",
          "139:     int flip, int recursion_level, int *printed_something, int *need_separator,",
          "140:     int *returnval)",
          "",
          "[Added Lines]",
          "137:     int flip, size_t recursion_level, int *printed_something,",
          "138:     int *need_separator, int *returnval)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1217: private int",
          "1218: mget(struct magic_set *ms, const unsigned char *s, struct magic *m,",
          "1219:     size_t nbytes, size_t o, unsigned int cont_level, int mode, int text,",
          "1221:     int *need_separator, int *returnval)",
          "1222: {",
          "1223:  uint32_t offset = ms->offset;",
          "",
          "[Removed Lines]",
          "1220:     int flip, int recursion_level, int *printed_something,",
          "",
          "[Added Lines]",
          "1218:     int flip, size_t recursion_level, int *printed_something,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1228:  union VALUETYPE *p = &ms->ms_value;",
          "1229:  struct mlist ml;",
          "1233:   return -1;",
          "1234:  }",
          "",
          "[Removed Lines]",
          "1231:  if (recursion_level >= MAX_RECURSION_LEVEL) {",
          "1232:   file_error(ms, 0, \"recursion nesting exceeded\");",
          "",
          "[Added Lines]",
          "1229:  if (recursion_level >= ms->max_recursion) {",
          "1230:   file_error(ms, 0, \"recursion nesting (%zu) exceeded\",",
          "1231:       recursion_level);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b9bbc26011fa5be83d88b3abae153866fef9c5d5",
      "candidate_info": {
        "commit_hash": "b9bbc26011fa5be83d88b3abae153866fef9c5d5",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/b9bbc26011fa5be83d88b3abae153866fef9c5d5",
        "files": [
          "ChangeLog",
          "doc/file.man",
          "doc/libmagic.man",
          "src/apprentice.c",
          "src/file.c",
          "src/file.h",
          "src/magic.c",
          "src/softmagic.c"
        ],
        "message": "PR/474:  Add a limit to the size of regex searches to prevent performance issues.",
        "before_after_code_files": [
          "src/apprentice.c||src/apprentice.c",
          "src/file.c||src/file.c",
          "src/file.h||src/file.h",
          "src/magic.c||src/magic.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/file.h||src/file.h",
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/file.h||src/file.h",
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/apprentice.c||src/apprentice.c": [
          "File: src/apprentice.c -> src/apprentice.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.235 2015/09/10 13:59:47 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.236 2015/09/10 14:39:55 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "531:  ms->elf_shnum_max = FILE_ELF_SHNUM_MAX;",
          "532:  ms->elf_phnum_max = FILE_ELF_PHNUM_MAX;",
          "533:  ms->elf_notes_max = FILE_ELF_NOTES_MAX;",
          "534:  return ms;",
          "535: free:",
          "536:  free(ms);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "534:  ms->regex_max = FILE_REGEX_MAX;",
          "",
          "---------------"
        ],
        "src/file.c||src/file.c": [
          "File: src/file.c -> src/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.165 2015/06/11 12:52:32 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.166 2015/09/08 13:46:49 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "131:  { \"elf_phnum\", MAGIC_PARAM_ELF_PHNUM_MAX, 0 },",
          "132:  { \"elf_shnum\", MAGIC_PARAM_ELF_SHNUM_MAX, 0 },",
          "133:  { \"elf_notes\", MAGIC_PARAM_ELF_NOTES_MAX, 0 },",
          "134: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "134:  { \"regex\", MAGIC_PARAM_REGEX_MAX, 0 },",
          "",
          "---------------"
        ],
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "415:  uint16_t elf_shnum_max;",
          "416:  uint16_t elf_phnum_max;",
          "417:  uint16_t elf_notes_max;",
          "418: #define FILE_INDIR_MAX   15",
          "419: #define FILE_NAME_MAX   30",
          "420: #define FILE_ELF_SHNUM_MAX  32768",
          "421: #define FILE_ELF_PHNUM_MAX  2048",
          "422: #define FILE_ELF_NOTES_MAX  256",
          "423: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "418:  uint16_t regex_max;",
          "424: #define FILE_REGEX_MAX   8192",
          "",
          "---------------"
        ],
        "src/magic.c||src/magic.c": [
          "File: src/magic.c -> src/magic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include \"file.h\"",
          "35: #ifndef lint",
          "39: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.93 2015/04/15 23:47:58 christos Exp $\")",
          "",
          "[Added Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.94 2015/07/11 14:41:37 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "603:  case MAGIC_PARAM_ELF_NOTES_MAX:",
          "604:   ms->elf_notes_max = (uint16_t)*(const size_t *)val;",
          "605:   return 0;",
          "606:  default:",
          "607:   errno = EINVAL;",
          "608:   return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "606:  case MAGIC_PARAM_REGEX_MAX:",
          "607:   ms->elf_notes_max = (uint16_t)*(const size_t *)val;",
          "608:   return 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "628:  case MAGIC_PARAM_ELF_NOTES_MAX:",
          "630:   return 0;",
          "631:  default:",
          "632:   errno = EINVAL;",
          "633:   return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "634:  case MAGIC_PARAM_REGEX_MAX:",
          "636:   return 0;",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.216 2015/06/09 22:17:52 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.217 2015/07/27 09:08:10 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1103:    if (bytecnt == 0 || bytecnt > nbytes - offset)",
          "1104:     bytecnt = nbytes - offset;",
          "1106:    buf = RCAST(const char *, s) + offset;",
          "1107:    end = last = RCAST(const char *, s) + bytecnt + offset;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1105:    if (bytecnt > ms->regex_max)",
          "1106:     bytecnt = ms->regex_max;",
          "",
          "---------------"
        ]
      }
    }
  ]
}