{
  "cve_id": "CVE-2023-28371",
  "cve_desc": "In Stellarium through 1.2, attackers can write to files that are typically unintended, such as ones with absolute pathnames or .. directory traversal.",
  "repo": "Stellarium/stellarium",
  "patch_hash": "1261f74dc4aa6bbd01ab514343424097f8cf46b7",
  "patch_info": {
    "commit_hash": "1261f74dc4aa6bbd01ab514343424097f8cf46b7",
    "repo": "Stellarium/stellarium",
    "commit_url": "https://github.com/Stellarium/stellarium/commit/1261f74dc4aa6bbd01ab514343424097f8cf46b7",
    "files": [
      "src/scripting/StelScriptOutput.cpp",
      "src/scripting/StelScriptOutput.hpp"
    ],
    "message": "Fix a possible security issue - script output might have been stored to paths elsewhere - Thanks to G.C. for reporting",
    "before_after_code_files": [
      "src/scripting/StelScriptOutput.cpp||src/scripting/StelScriptOutput.cpp",
      "src/scripting/StelScriptOutput.hpp||src/scripting/StelScriptOutput.hpp"
    ]
  },
  "patch_diff": {
    "src/scripting/StelScriptOutput.cpp||src/scripting/StelScriptOutput.cpp": [
      "File: src/scripting/StelScriptOutput.cpp -> src/scripting/StelScriptOutput.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "56: void StelScriptOutput::saveOutputAs(const QString &name)",
      "57: {",
      "58:  QFile asFile;",
      "66:  {",
      "68:   qWarning() << \"  To enable this, edit config.ini and set [scripts]/flag_script_allow_write_absolute_path=true\";",
      "69:   asFile.setFileName(dir.absolutePath() + \"/\" + newFileNameInfo.fileName());",
      "70:   qWarning() << \"  Storing to \" << asFile.fileName() << \" instead\";",
      "",
      "[Removed Lines]",
      "59:  QFileInfo outputInfo(outputFile);",
      "60:  QDir dir=outputInfo.dir(); // will hold complete dirname",
      "61:  QFileInfo newFileNameInfo(name);",
      "63:  bool okToSaveToAbsolutePath=StelApp::getInstance().getSettings()->value(\"scripts/flag_script_allow_write_absolute_path\", false).toBool();",
      "65:  if (!okToSaveToAbsolutePath && (newFileNameInfo.isAbsolute()))",
      "67:   qWarning() << \"SCRIPTING CONFIGURATION ISSUE: You are trying to save to an absolute pathname.\";",
      "",
      "[Added Lines]",
      "59:  const QFileInfo outputInfo(outputFile);",
      "60:  const QDir dir=outputInfo.dir(); // will hold complete dirname",
      "61:  const QFileInfo newFileNameInfo(name);",
      "63:  const bool okToSaveToAbsolutePath=StelApp::getInstance().getSettings()->value(\"scripts/flag_script_allow_write_absolute_path\", false).toBool();",
      "65:  if (!okToSaveToAbsolutePath && ((newFileNameInfo.isAbsolute() || (name.contains(\"..\"))))) // The last condition may include dangerous/malicious paths",
      "67:   qWarning() << \"SCRIPTING CONFIGURATION ISSUE: You are trying to save to an absolute pathname or move up in directories.\";",
      "",
      "---------------"
    ],
    "src/scripting/StelScriptOutput.hpp||src/scripting/StelScriptOutput.hpp": [
      "File: src/scripting/StelScriptOutput.hpp -> src/scripting/StelScriptOutput.hpp"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "48cfb6a5a97f97bb32edf48181694d94974ef7e2",
      "candidate_info": {
        "commit_hash": "48cfb6a5a97f97bb32edf48181694d94974ef7e2",
        "repo": "Stellarium/stellarium",
        "commit_url": "https://github.com/Stellarium/stellarium/commit/48cfb6a5a97f97bb32edf48181694d94974ef7e2",
        "files": [
          "guide/app_config_ini.tex",
          "src/gui/ScriptConsole.cpp",
          "src/gui/scriptConsole.ui",
          "src/scripting/StelScriptMgr.cpp",
          "src/scripting/StelScriptMgr.hpp",
          "src/scripting/StelScriptOutput.cpp"
        ],
        "message": "Also make writing to absolute paths a GUI option. (#3111) - also rename the config.ini entry",
        "before_after_code_files": [
          "src/gui/ScriptConsole.cpp||src/gui/ScriptConsole.cpp",
          "src/gui/scriptConsole.ui||src/gui/scriptConsole.ui",
          "src/scripting/StelScriptMgr.cpp||src/scripting/StelScriptMgr.cpp",
          "src/scripting/StelScriptMgr.hpp||src/scripting/StelScriptMgr.hpp",
          "src/scripting/StelScriptOutput.cpp||src/scripting/StelScriptOutput.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/scripting/StelScriptOutput.cpp||src/scripting/StelScriptOutput.cpp"
          ],
          "candidate": [
            "src/scripting/StelScriptOutput.cpp||src/scripting/StelScriptOutput.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/gui/ScriptConsole.cpp||src/gui/ScriptConsole.cpp": [
          "File: src/gui/ScriptConsole.cpp -> src/gui/ScriptConsole.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:  connect(ui->clearOutputCheckbox, SIGNAL(toggled(bool)), this, SLOT(setFlagClearOutput(bool)));",
          "146:  ui->allowScreenshotDirCheckBox->setChecked(StelApp::getInstance().getScriptMgr().getFlagAllowExternalScreenshotDir());",
          "149:  dirty = false;",
          "150: }",
          "",
          "[Removed Lines]",
          "147:  connect(ui->allowScreenshotDirCheckBox, SIGNAL(clicked(bool)), &StelApp::getInstance().getScriptMgr(), SLOT(setFlagAllowExternalScreenshotDir(bool)), Qt::AutoConnection);",
          "",
          "[Added Lines]",
          "147:  connect(ui->allowScreenshotDirCheckBox, SIGNAL(clicked(bool)), &StelApp::getInstance().getScriptMgr(), SLOT(setFlagAllowExternalScreenshotDir(bool)));",
          "149:  ui->allowStoreAbsoluteCheckBox->setChecked(StelApp::getInstance().getScriptMgr().getFlagAllowWriteAbsolutePaths());",
          "150:  connect(ui->allowStoreAbsoluteCheckBox, SIGNAL(clicked(bool)), &StelApp::getInstance().getScriptMgr(), SLOT(setFlagAllowWriteAbsolutePaths(bool)));",
          "",
          "---------------"
        ],
        "src/gui/scriptConsole.ui||src/gui/scriptConsole.ui": [
          "File: src/gui/scriptConsole.ui -> src/gui/scriptConsole.ui",
          "--- Hunk 1 ---",
          "[Context before]",
          "491:             </property>",
          "492:            </widget>",
          "493:           </item>",
          "494:           <item>",
          "495:            <spacer name=\"verticalSpacer\">",
          "496:             <property name=\"orientation\">",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "494:           <item>",
          "495:            <widget class=\"QCheckBox\" name=\"allowStoreAbsoluteCheckBox\">",
          "496:             <property name=\"toolTip\">",
          "497:              <string>If disabled, all output goes to the user data directory. Enabling this bears some risks!</string>",
          "498:             </property>",
          "499:             <property name=\"text\">",
          "500:              <string>Allow scripts to store output to arbitrary directories</string>",
          "501:             </property>",
          "502:            </widget>",
          "503:           </item>",
          "",
          "---------------"
        ],
        "src/scripting/StelScriptMgr.cpp||src/scripting/StelScriptMgr.cpp": [
          "File: src/scripting/StelScriptMgr.cpp -> src/scripting/StelScriptMgr.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "507:  initActions();",
          "508:  QSettings *conf=StelApp::getInstance().getSettings();",
          "509:  flagAllowExternalScreenshotDir=conf->value(\"scripts/flag_allow_screenshots_dir\", false).toBool();",
          "510: }",
          "512: void StelScriptMgr::initActions()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "510:  flagAllowWriteAbsolutePaths=conf->value(\"scripts/flag_allow_write_absolute_path\", false).toBool();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1214:   flagAllowExternalScreenshotDir=flag;",
          "1215:   QSettings* conf = StelApp::getInstance().getSettings();",
          "1216:   conf->setValue(\"scripts/flag_allow_screenshots_dir\", flag);",
          "1217:   emit flagAllowExternalScreenshotDirChanged(flag);",
          "1218:  }",
          "1219: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1218:   conf->sync();",
          "1222: void StelScriptMgr::setFlagAllowWriteAbsolutePaths(bool flag)",
          "1223: {",
          "1224:  if (flag!=flagAllowWriteAbsolutePaths)",
          "1225:  {",
          "1226:   flagAllowWriteAbsolutePaths=flag;",
          "1227:   QSettings* conf = StelApp::getInstance().getSettings();",
          "1228:   conf->setValue(\"scripts/flag_allow_write_absolute_path\", flag);",
          "1229:   conf->sync();",
          "1230:   emit flagAllowWriteAbsolutePathsChanged(flag);",
          "1231:  }",
          "1232: }",
          "",
          "---------------"
        ],
        "src/scripting/StelScriptMgr.hpp||src/scripting/StelScriptMgr.hpp": [
          "File: src/scripting/StelScriptMgr.hpp -> src/scripting/StelScriptMgr.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:  Q_OBJECT",
          "56:  Q_PROPERTY(QString runningScriptId READ runningScriptId NOTIFY runningScriptIdChanged)",
          "58:  Q_PROPERTY(bool flagAllowExternalScreenshotDir READ getFlagAllowExternalScreenshotDir WRITE setFlagAllowExternalScreenshotDir NOTIFY flagAllowExternalScreenshotDirChanged)",
          "60: #ifdef ENABLE_SCRIPT_CONSOLE",
          "61: friend class ScriptConsole;",
          "62: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:  Q_PROPERTY(bool flagAllowWriteAbsolutePaths READ getFlagAllowWriteAbsolutePaths WRITE setFlagAllowWriteAbsolutePaths NOTIFY flagAllowWriteAbsolutePathsChanged)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "256:  bool getFlagAllowExternalScreenshotDir() {return flagAllowExternalScreenshotDir;}",
          "257:  void setFlagAllowExternalScreenshotDir(bool flag);",
          "259: private slots:",
          "261:  void scriptEnded();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "262:  bool getFlagAllowWriteAbsolutePaths() {return flagAllowWriteAbsolutePaths;}",
          "263:  void setFlagAllowWriteAbsolutePaths(bool flag);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "274:  void scriptOutput(const QString&);",
          "276:  void flagAllowExternalScreenshotDirChanged(bool flag);",
          "278: private:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "284:  void flagAllowWriteAbsolutePathsChanged(bool flag);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "325:  bool flagAllowExternalScreenshotDir;",
          "326: };",
          "328: #endif // STELSCRIPTMGR_HPP",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336:  bool flagAllowWriteAbsolutePaths;",
          "",
          "---------------"
        ],
        "src/scripting/StelScriptOutput.cpp||src/scripting/StelScriptOutput.cpp": [
          "File: src/scripting/StelScriptOutput.cpp -> src/scripting/StelScriptOutput.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:  const QDir dir=outputInfo.dir(); // will hold complete dirname",
          "61:  const QFileInfo newFileNameInfo(name);",
          "65:  if (name.contains(\"config.ini\"))",
          "66:  {",
          "",
          "[Removed Lines]",
          "63:  const bool okToSaveToAbsolutePath=StelApp::getInstance().getSettings()->value(\"scripts/flag_script_allow_write_absolute_path\", false).toBool();",
          "",
          "[Added Lines]",
          "63:  const bool okToSaveToAbsolutePath=StelApp::getInstance().getSettings()->value(\"scripts/flag_allow_write_absolute_path\", false).toBool();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "71:  if (!okToSaveToAbsolutePath && ((newFileNameInfo.isAbsolute() || (name.contains(\"..\"))))) // The last condition may include dangerous/malicious paths",
          "72:  {",
          "73:   qWarning() << \"SCRIPTING CONFIGURATION ISSUE: You are trying to save to an absolute pathname or move up in directories.\";",
          "75:   asFile.setFileName(dir.absolutePath() + \"/\" + newFileNameInfo.fileName());",
          "77:  }",
          "78:  else if (okToSaveToAbsolutePath && (newFileNameInfo.isAbsolute()))",
          "79:  {",
          "",
          "[Removed Lines]",
          "74:   qWarning() << \"  To enable this, edit config.ini and set [scripts]/flag_script_allow_write_absolute_path=true\";",
          "76:   qWarning() << \"  Storing to \" << asFile.fileName() << \" instead\";",
          "",
          "[Added Lines]",
          "74:   qWarning() << \"  To enable this, check the settings in the script console\";",
          "75:   qWarning() << \"  or edit config.ini and set [scripts]/flag_allow_write_absolute_path=true\";",
          "",
          "---------------"
        ]
      }
    }
  ]
}