{
  "cve_id": "CVE-2023-27597",
  "cve_desc": "OpenSIPS is a Session Initiation Protocol (SIP) server implementation. Prior to versions 3.1.8 and 3.2.5, when a specially crafted SIP message is processed by the function `rewrite_ruri`, a crash occurs due to a segmentation fault. This issue causes the server to crash. It affects configurations containing functions that make use of the affected code, such as the function `setport`. This issue has been fixed in version 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
  "patch_info": {
    "commit_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "files": [
      "parser/parse_uri.c"
    ],
    "message": "[core] fix parse_uri() parsing\n\nIssue discovered during OpenSIPS Security Audit 2022,\n\tby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-358f-935m-7p9c",
    "before_after_code_files": [
      "parser/parse_uri.c||parser/parse_uri.c"
    ]
  },
  "patch_diff": {
    "parser/parse_uri.c||parser/parse_uri.c": [
      "File: parser/parse_uri.c -> parser/parse_uri.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1532:   case TELS_URI_T:",
      "1534:    uri->user=uri->host;",
      "1536:    uri->host.len=0;",
      "1537:    break;",
      "1538:   case SIP_URI_T:",
      "",
      "[Removed Lines]",
      "1535:    uri->host.s=\"\";",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1543:   case URN_NENA_SERVICE_URI_T:",
      "1544:    uri->user.s=0;",
      "1545:    uri->user.len=0;",
      "1548:    break;",
      "1549:   case ERROR_URI_T:",
      "1550:    LM_ERR(\"unexpected error (BUG?)\\n\");",
      "",
      "[Removed Lines]",
      "1546:    uri->host.s=\"\";",
      "1547:    uri->host.len=0;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cd52ccc5e6eac577b9a564e05b58d726d59b0210",
      "candidate_info": {
        "commit_hash": "cd52ccc5e6eac577b9a564e05b58d726d59b0210",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/cd52ccc5e6eac577b9a564e05b58d726d59b0210",
        "files": [
          "modules/b2b_entities/b2be_load.h",
          "modules/b2b_entities/client.c",
          "modules/b2b_entities/client.h",
          "modules/b2b_entities/dlg.c",
          "modules/b2b_entities/dlg.h",
          "modules/b2b_entities/server.c",
          "modules/b2b_entities/server.h"
        ],
        "message": "b2b_entities: allow enforcing the Max-Forwards value\n\nRelated to #2471\n\n(cherry picked from commit 404f580026f2bb67cdacf56e1384213643a0505e)",
        "before_after_code_files": [
          "modules/b2b_entities/b2be_load.h||modules/b2b_entities/b2be_load.h",
          "modules/b2b_entities/client.c||modules/b2b_entities/client.c",
          "modules/b2b_entities/client.h||modules/b2b_entities/client.h",
          "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c",
          "modules/b2b_entities/dlg.h||modules/b2b_entities/dlg.h",
          "modules/b2b_entities/server.c||modules/b2b_entities/server.c",
          "modules/b2b_entities/server.h||modules/b2b_entities/server.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_entities/b2be_load.h||modules/b2b_entities/b2be_load.h": [
          "File: modules/b2b_entities/b2be_load.h -> modules/b2b_entities/b2be_load.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:  str* from_tag;",
          "68:  str local_contact;",
          "69:  unsigned int cseq;",
          "70:  struct socket_info* send_sock;",
          "71:  struct usr_avp *avps;",
          "72: }client_info_t;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "70:  unsigned int maxfwd;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "87:  str* client_headers;",
          "88:  str* body;",
          "89:  b2b_dlginfo_t* dlginfo;",
          "90:  unsigned int no_cb;",
          "91: }b2b_req_data_t;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:  unsigned int maxfwd;",
          "",
          "---------------"
        ],
        "modules/b2b_entities/client.c||modules/b2b_entities/client.c": [
          "File: modules/b2b_entities/client.c -> modules/b2b_entities/client.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:  td.id.rem_tag.s = 0;",
          "204:  td.id.rem_tag.len = 0;",
          "206:  td.rem_uri = ci->to_uri;",
          "207:  if(ci->req_uri.s)",
          "208:   td.rem_target    = ci->req_uri;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "206:  if (ci->maxfwd > 0) {",
          "207:   td.mf_enforced = 1;",
          "208:   td.mf_value = ci->maxfwd - 1;",
          "209:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "269:  return NULL;",
          "270: }",
          "273: {",
          "274:  dlg_t* td =NULL;",
          "",
          "[Removed Lines]",
          "272: dlg_t* b2b_client_build_dlg(b2b_dlg_t* dlg, dlg_leg_t* leg)",
          "",
          "[Added Lines]",
          "277: dlg_t* b2b_client_build_dlg(b2b_dlg_t* dlg, dlg_leg_t* leg, unsigned int maxfwd)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "292:  td->loc_dname = dlg->from_dname;",
          "293:  td->rem_dname = dlg->to_dname;",
          "295:  if(dlg->proxy.len)",
          "296:   td->obp = dlg->proxy;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "300:  if (maxfwd > 0) {",
          "301:   td->mf_enforced = 1;",
          "302:   td->mf_value = maxfwd - 1;",
          "303:  }",
          "",
          "---------------"
        ],
        "modules/b2b_entities/client.h||modules/b2b_entities/client.h": [
          "File: modules/b2b_entities/client.h -> modules/b2b_entities/client.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: void b2b_client_tm_cback( struct cell *t, int type, struct tmcb_params *ps);",
          "44: #endif",
          "",
          "[Removed Lines]",
          "42: dlg_t* b2b_client_build_dlg(b2b_dlg_t* dlg, dlg_leg_t* leg);",
          "",
          "[Added Lines]",
          "42: dlg_t* b2b_client_build_dlg(b2b_dlg_t* dlg, dlg_leg_t* leg, unsigned int maxfwd);",
          "",
          "---------------"
        ],
        "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c": [
          "File: modules/b2b_entities/dlg.c -> modules/b2b_entities/dlg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1878:  shm_free(param);",
          "1879: }",
          "1882: {",
          "1884: }",
          "1886: void free_tm_dlg(dlg_t* td)",
          "",
          "[Removed Lines]",
          "1881: dlg_t* b2b_client_dlg(b2b_dlg_t* dlg)",
          "1883:  return b2b_client_build_dlg(dlg, dlg->legs);",
          "",
          "[Added Lines]",
          "1881: dlg_t* b2b_client_dlg(b2b_dlg_t* dlg, unsigned int maxfwd)",
          "1883:  return b2b_client_build_dlg(dlg, dlg->legs, maxfwd);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1892:  pkg_free(td);",
          "1893: }",
          "1897: {",
          "1898:  str* b2b_key_shm = NULL;",
          "1899:  dlg_t* td = NULL;",
          "",
          "[Removed Lines]",
          "1895: int b2b_send_indlg_req(b2b_dlg_t* dlg, enum b2b_entity_type et,",
          "1896:   str* b2b_key, str* method, str* ehdr, str* body, unsigned int no_cb)",
          "",
          "[Added Lines]",
          "1895: int b2b_send_indlg_req(b2b_dlg_t* dlg, enum b2b_entity_type et, str* b2b_key,",
          "1896:  str* method, str* ehdr, unsigned int maxfwd, str* body, unsigned int no_cb)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1923:  }",
          "1927:  if(td == NULL)",
          "1928:  {",
          "1929:   LM_ERR(\"Failed to build tm dialog structure, was asked to send [%.*s]\"",
          "",
          "[Removed Lines]",
          "1926:  td = build_dlg(dlg);",
          "",
          "[Added Lines]",
          "1926:  td = build_dlg(dlg, maxfwd);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2132:    dlg->last_method == METHOD_INVITE)",
          "2133:  {",
          "2136:   dlg->state= B2B_ESTABLISHED;",
          "2137:  }",
          "",
          "[Removed Lines]",
          "2135:   b2b_send_indlg_req(dlg, et, b2b_key, &ack, &ehdr, req_data->body, req_data->no_cb);",
          "",
          "[Added Lines]",
          "2135:   b2b_send_indlg_req(dlg, et, b2b_key, &ack, &ehdr, 0,",
          "2136:    req_data->body, req_data->no_cb);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2170:   }",
          "2171:   else",
          "2172:   {",
          "2175:    method_value = METHOD_BYE;",
          "2176:   }",
          "2177:  }",
          "2178:  else",
          "2179:  {",
          "2181:  }",
          "2183:  if(ret < 0)",
          "",
          "[Removed Lines]",
          "2173:    b2b_send_indlg_req(dlg, et, b2b_key, &ack, &ehdr, 0, req_data->no_cb);",
          "2174:    ret = b2b_send_indlg_req(dlg, et, b2b_key, &bye, &ehdr, req_data->body, req_data->no_cb);",
          "2180:   ret = b2b_send_indlg_req(dlg, et, b2b_key, method, &ehdr, req_data->body, req_data->no_cb);",
          "",
          "[Added Lines]",
          "2174:    b2b_send_indlg_req(dlg, et, b2b_key, &ack, &ehdr, 0, 0, req_data->no_cb);",
          "2175:    ret = b2b_send_indlg_req(dlg, et, b2b_key, &bye, &ehdr, 0, req_data->body,",
          "2176:     req_data->no_cb);",
          "2182:   ret = b2b_send_indlg_req(dlg, et, b2b_key, method, &ehdr,",
          "2183:    req_data->maxfwd, req_data->body, req_data->no_cb);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2415:  LM_DBG(\"start type=%d\\n\", etype);",
          "2416:  if(etype== B2B_SERVER)",
          "2418:  else",
          "2421:  if(td == NULL)",
          "2422:  {",
          "",
          "[Removed Lines]",
          "2417:   td = b2b_server_build_dlg(dlg);",
          "2419:   td = b2b_client_build_dlg(dlg, leg);",
          "",
          "[Added Lines]",
          "2420:   td = b2b_server_build_dlg(dlg, 0);",
          "2422:   td = b2b_client_build_dlg(dlg, leg, 0);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2930:      new_hdr->s = NULL; new_hdr->len = 0;",
          "2932:      b2b_send_indlg_req(dlg, B2B_CLIENT, b2b_key, &t->method,",
          "2934:      pkg_free(extra_headers.s);",
          "2936:      dlg->state = B2B_NEW_AUTH;",
          "",
          "[Removed Lines]",
          "2933:        &extra_headers, &body, 0);",
          "",
          "[Added Lines]",
          "2936:        &extra_headers, 0, &body, 0);",
          "",
          "---------------"
        ],
        "modules/b2b_entities/dlg.h||modules/b2b_entities/dlg.h": [
          "File: modules/b2b_entities/dlg.h -> modules/b2b_entities/dlg.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "166: void b2b_delete_record(b2b_dlg_t* dlg, b2b_table htable, unsigned int hash_index);",
          "170: str* b2b_key_copy_shm(str* b2b_key);",
          "",
          "[Removed Lines]",
          "168: typedef dlg_t* (*build_dlg_f)(b2b_dlg_t* dlg);",
          "",
          "[Added Lines]",
          "168: typedef dlg_t* (*build_dlg_f)(b2b_dlg_t* dlg, unsigned int maxfwd);",
          "",
          "---------------"
        ],
        "modules/b2b_entities/server.c||modules/b2b_entities/server.c": [
          "File: modules/b2b_entities/server.c -> modules/b2b_entities/server.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "116: }",
          "120: {",
          "121:  dlg_t* td =NULL;",
          "",
          "[Removed Lines]",
          "119: dlg_t* b2b_server_build_dlg(b2b_dlg_t* dlg)",
          "",
          "[Added Lines]",
          "119: dlg_t* b2b_server_build_dlg(b2b_dlg_t* dlg, unsigned int maxfwd)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "142:  td->loc_dname = dlg->to_dname;",
          "143:  td->rem_dname = dlg->from_dname;",
          "145:  if(dlg->route_set[CALLER_LEG].s && dlg->route_set[CALLER_LEG].len)",
          "146:  {",
          "147:   if(parse_rr_body(dlg->route_set[CALLER_LEG].s, dlg->route_set[CALLER_LEG].len,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "145:  if (maxfwd > 0) {",
          "146:   td->mf_enforced = 1;",
          "147:   td->mf_value = maxfwd - 1;",
          "148:  }",
          "",
          "---------------"
        ],
        "modules/b2b_entities/server.h||modules/b2b_entities/server.h": [
          "File: modules/b2b_entities/server.h -> modules/b2b_entities/server.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: str* server_new(struct sip_msg*, str* local_contact, b2b_notify_t, str *,",
          "35:   str*, struct b2b_tracer*);",
          "39: void b2b_server_tm_cback( struct cell *t, int type, struct tmcb_params *ps);",
          "",
          "[Removed Lines]",
          "37: dlg_t* b2b_server_build_dlg(b2b_dlg_t* dlg);",
          "",
          "[Added Lines]",
          "37: dlg_t* b2b_server_build_dlg(b2b_dlg_t* dlg, unsigned int maxfwd);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "401c6069c6a3dc61bfe2c95ca949a0f95b710850",
      "candidate_info": {
        "commit_hash": "401c6069c6a3dc61bfe2c95ca949a0f95b710850",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/401c6069c6a3dc61bfe2c95ca949a0f95b710850",
        "files": [
          "modules/mi_script/mi_script.c"
        ],
        "message": "mi_script: fix previous commit\n\nThis is the commit that actually resolves the memory leak\n\nThanks go to @liviuc for reporting this\n\n(cherry picked from commit ad02392053f8fb79f74886ca67f536202e24f1cc)",
        "before_after_code_files": [
          "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c": [
          "File: modules/mi_script/mi_script.c -> modules/mi_script/mi_script.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "559:  } while (ret < 0 && (errno == EINTR || errno == EAGAIN));",
          "560:  if (ret < 0) {",
          "561:   LM_ERR(\"could not notify resume: %s\\n\", strerror(errno));",
          "562:  }",
          "563: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "562:   mi_script_async_job_free(job);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a05893a631193a37548cfae292ed7f00f63044e3",
      "candidate_info": {
        "commit_hash": "a05893a631193a37548cfae292ed7f00f63044e3",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/a05893a631193a37548cfae292ed7f00f63044e3",
        "files": [
          "msg_translator.c"
        ],
        "message": "Fix body re-assembling when adding a new body part to an emptry received body\n\nThis fixes a regression introduced in b0591d285ad966c2cb13672de8071c03fcba7414\nFixes #2823\nCredits go to @pergolafabio for the detailed reporting",
        "before_after_code_files": [
          "msg_translator.c||msg_translator.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "msg_translator.c||msg_translator.c": [
          "File: msg_translator.c -> msg_translator.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1262:  char *hdr, *it;",
          "1267:  if (msg->body->updated_part_count==0) {",
          "",
          "[Removed Lines]",
          "1265:  orig_offs = msg->body ? msg->body->body.s-msg->buf : msg->len ;",
          "",
          "[Added Lines]",
          "1265:  orig_offs = (msg->body && msg->body->body.s) ?",
          "1266:   msg->body->body.s-msg->buf : msg->len ;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1915:  } else {",
          "1918:   memcpy(new_buf+*new_offs, msg->buf+*orig_offs, size );",
          "",
          "[Removed Lines]",
          "1917:   size = (msg->body->body.s - msg->buf) - *orig_offs;",
          "",
          "[Added Lines]",
          "1918:   size = msg->body->body.s ?",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bab0ab5dc6211636b1481a265959b88735cac778",
      "candidate_info": {
        "commit_hash": "bab0ab5dc6211636b1481a265959b88735cac778",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/bab0ab5dc6211636b1481a265959b88735cac778",
        "files": [
          "parser/parse_to.c",
          "parser/test/test_parser.c"
        ],
        "message": "parse_to_param(): Fix out-of-bounds read edge-case (OSS-Fuzz)\n\nSeverity: Low\nFixes OSS-Fuzz#41073\n\n(cherry picked from commit 90aa25e64f36b22fbcae9aae910257b43f81641f)",
        "before_after_code_files": [
          "parser/parse_to.c||parser/parse_to.c",
          "parser/test/test_parser.c||parser/test/test_parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "parser/parse_to.c||parser/parse_to.c": [
          "File: parser/parse_to.c -> parser/parse_to.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "480: parse_error:",
          "481:  LM_ERR(\"unexpected char [%c] in status %d: <<%.*s>> .\\n\",",
          "483: error:",
          "484:  if (param) pkg_free(param);",
          "485:  free_to_params(to_b);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "482:      tmp < end? *tmp : *(buffer+strlen(buffer)-1),status,",
          "483:      (int)(tmp-buffer), ZSW(buffer));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "817: parse_error:",
          "818:  LM_ERR(\"unexpected char [%c] in status %d: <<%.*s>> .\\n\",",
          "820: error:",
          "821:  first_b->error=PARSE_ERROR;",
          "822:  free_to_params(first_b);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "820:      tmp < end? *tmp : *(buffer+strlen(buffer)-1),",
          "821:      status, (int)(tmp-buffer), buffer);",
          "",
          "---------------"
        ],
        "parser/test/test_parser.c||parser/test/test_parser.c": [
          "File: parser/test/test_parser.c -> parser/test/test_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "144: }",
          "146: static const struct tts {",
          "148:  int tres;",
          "149: } tset[] = {",
          "150:  {",
          "153:   -1,",
          "154:  },",
          "157: };",
          "159: void test_parse_msg(void)",
          "",
          "[Removed Lines]",
          "147:  const unsigned char tmsg[32];",
          "152:   {'e', ' ', 255, 255, 255, 255, ' ', ' ', ' ', ' ', ' ', 255, '\\n', 255, 255, ' ', ' '},",
          "156:  {{0}, 0},",
          "",
          "[Added Lines]",
          "147:  const char *tmsg;",
          "152:   \"e \\xff\\xff\\xff\\xff     \\xff\\n\\xff\\xff  \",",
          "156:  {",
          "158:   \"d  \\x02\\x80\\0\\nt\\0:G;150=\\\"a8\",",
          "159:   -1,",
          "160:  },",
          "162:  {\"\\0\", 0},",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6266d0cd66d4d1115a855e170e9c64a373bb1f0a",
      "candidate_info": {
        "commit_hash": "6266d0cd66d4d1115a855e170e9c64a373bb1f0a",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/6266d0cd66d4d1115a855e170e9c64a373bb1f0a",
        "files": [
          "modules/b2b_entities/dlg.c"
        ],
        "message": "b2b_entities: fix shm memory leak\n\nFor the write back db mode, the entity storage data was only freed after\ninserting/updating the entity in the database. This would lead to memory\nleaks if the entity was deleted before the DB timer task had a chance\nto be run.\n\nThanks go to Norm Brandinger from Five9 for reporting!\n\n(cherry picked from commit aee014beb78be050bd2272ee0080a6f8063d9ec0)",
        "before_after_code_files": [
          "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c": [
          "File: modules/b2b_entities/dlg.c -> modules/b2b_entities/dlg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1292:     aux = dlg->next;",
          "1293:     if(dlg->tag[CALLEE_LEG].s)",
          "1294:      shm_free(dlg->tag[CALLEE_LEG].s);",
          "1295:     if(dlg->ack_sdp.s)",
          "1296:      shm_free(dlg->ack_sdp.s);",
          "1297:     shm_free(dlg);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1295:     if (b2be_db_mode == WRITE_BACK && dlg->storage.s)",
          "1296:      shm_free(dlg->storage.s);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1784:  b2b_delete_legs(&dlg->legs);",
          "1786:  if(dlg->uac_tran)",
          "1787:   tmb.unref_cell(dlg->uac_tran);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1788:  if (b2be_db_mode == WRITE_BACK && dlg->storage.s)",
          "1789:   shm_free(dlg->storage.s);",
          "",
          "---------------"
        ]
      }
    }
  ]
}