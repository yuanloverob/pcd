{
  "cve_id": "CVE-2023-23082",
  "cve_desc": "A heap buffer overflow vulnerability in Kodi Home Theater Software up to 19.5 allows attackers to cause a denial of service due to an improper length of the value passed to the offset argument.",
  "repo": "xbmc/xbmc",
  "patch_hash": "7e5f9fbf9aaa3540aab35e7504036855b23dcf60",
  "patch_info": {
    "commit_hash": "7e5f9fbf9aaa3540aab35e7504036855b23dcf60",
    "repo": "xbmc/xbmc",
    "commit_url": "https://github.com/xbmc/xbmc/pull/22380/commits/7e5f9fbf9aaa3540aab35e7504036855b23dcf60",
    "files": [
      "xbmc/pictures/ExifParse.cpp"
    ],
    "message": "ExifParse: Backport further upstream fixes\n\nPartially via upstream commit:\nhttps://android.googlesource.com/platform/external/jhead/+/2a4c12f5e5808e309b9ba04fe8b1539debf466d1",
    "before_after_code_files": [
      "xbmc/pictures/ExifParse.cpp||xbmc/pictures/ExifParse.cpp"
    ]
  },
  "patch_diff": {
    "xbmc/pictures/ExifParse.cpp||xbmc/pictures/ExifParse.cpp": [
      "File: xbmc/pictures/ExifParse.cpp -> xbmc/pictures/ExifParse.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #endif",
      "29: #include <math.h>",
      "30: #include <stdio.h>",
      "32: #ifndef min",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "30: #include <stdint.h>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "376:       unsigned OffsetVal;",
      "377:       OffsetVal = (unsigned)Get32(DirEntry+8, m_MotorolaOrder);",
      "380:       {",
      "382:         ErrNonfatal(\"Illegal value pointer for tag %04x\", Tag,0);",
      "",
      "[Removed Lines]",
      "379:       if (OffsetVal+ByteCount > ExifLength)",
      "",
      "[Added Lines]",
      "380:       if (OffsetVal > UINT32_MAX - ByteCount || OffsetVal + ByteCount > ExifLength)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "787:   pos += sizeof(short);",
      "789:   unsigned long FirstOffset = (unsigned)Get32((const void*)pos, m_MotorolaOrder);",
      "791:   {",
      "794:   }",
      "",
      "[Removed Lines]",
      "790:   if (FirstOffset < 8 || FirstOffset > 16)",
      "",
      "[Added Lines]",
      "791:   if (FirstOffset < 8 || FirstOffset + 8 >= length)",
      "793:     ErrNonfatal(\"Invalid offset of first IFD value: %u\", FirstOffset, 0);",
      "794:     return false;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "903:     {",
      "904:       unsigned OffsetVal = (unsigned)Get32(DirEntry+8, m_MotorolaOrder);",
      "907:       {",
      "909:         ErrNonfatal(\"Illegal value pointer for tag %04x\", Tag,0);",
      "",
      "[Removed Lines]",
      "906:       if (OffsetVal+ByteCount > ExifLength)",
      "",
      "[Added Lines]",
      "907:       if (OffsetVal > UINT32_MAX - ByteCount || OffsetVal + ByteCount > ExifLength)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fd8fce6a2c6bae200c737716536c109bff6d33c4",
      "candidate_info": {
        "commit_hash": "fd8fce6a2c6bae200c737716536c109bff6d33c4",
        "repo": "xbmc/xbmc",
        "commit_url": "https://github.com/xbmc/xbmc/commit/fd8fce6a2c6bae200c737716536c109bff6d33c4",
        "files": [
          "xbmc/pictures/ExifParse.cpp"
        ],
        "message": "ExifParse: Backport further upstream fixes\n\nPartially via upstream commit:\nhttps://android.googlesource.com/platform/external/jhead/+/2a4c12f5e5808e309b9ba04fe8b1539debf466d1",
        "before_after_code_files": [
          "xbmc/pictures/ExifParse.cpp||xbmc/pictures/ExifParse.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "xbmc/pictures/ExifParse.cpp||xbmc/pictures/ExifParse.cpp"
          ],
          "candidate": [
            "xbmc/pictures/ExifParse.cpp||xbmc/pictures/ExifParse.cpp"
          ]
        }
      },
      "candidate_diff": {
        "xbmc/pictures/ExifParse.cpp||xbmc/pictures/ExifParse.cpp": [
          "File: xbmc/pictures/ExifParse.cpp -> xbmc/pictures/ExifParse.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #endif",
          "29: #include <math.h>",
          "30: #include <stdio.h>",
          "32: #ifndef min",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: #include <stdint.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "376:       unsigned OffsetVal;",
          "377:       OffsetVal = (unsigned)Get32(DirEntry+8, m_MotorolaOrder);",
          "380:       {",
          "382:         ErrNonfatal(\"Illegal value pointer for tag %04x\", Tag,0);",
          "",
          "[Removed Lines]",
          "379:       if (OffsetVal+ByteCount > ExifLength)",
          "",
          "[Added Lines]",
          "380:       if (OffsetVal > UINT32_MAX - ByteCount || OffsetVal + ByteCount > ExifLength)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "787:   pos += sizeof(short);",
          "789:   unsigned long FirstOffset = (unsigned)Get32((const void*)pos, m_MotorolaOrder);",
          "791:   {",
          "794:   }",
          "",
          "[Removed Lines]",
          "790:   if (FirstOffset < 8 || FirstOffset > 16)",
          "",
          "[Added Lines]",
          "791:   if (FirstOffset < 8 || FirstOffset + 8 >= length)",
          "793:     ErrNonfatal(\"Invalid offset of first IFD value: %u\", FirstOffset, 0);",
          "794:     return false;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "903:     {",
          "904:       unsigned OffsetVal = (unsigned)Get32(DirEntry+8, m_MotorolaOrder);",
          "907:       {",
          "909:         ErrNonfatal(\"Illegal value pointer for tag %04x\", Tag,0);",
          "",
          "[Removed Lines]",
          "906:       if (OffsetVal+ByteCount > ExifLength)",
          "",
          "[Added Lines]",
          "907:       if (OffsetVal > UINT32_MAX - ByteCount || OffsetVal + ByteCount > ExifLength)",
          "",
          "---------------"
        ]
      }
    }
  ]
}