{
  "cve_id": "CVE-2018-5815",
  "cve_desc": "An integer overflow error within the \"parse_qt()\" function (internal/dcraw_common.cpp) in LibRaw versions prior to 0.18.12 can be exploited to trigger an infinite loop via a specially crafted Apple QuickTime file.",
  "repo": "LibRaw/LibRaw",
  "patch_hash": "1334647862b0c90b2e8cb2f668e66627d9517b17",
  "patch_info": {
    "commit_hash": "1334647862b0c90b2e8cb2f668e66627d9517b17",
    "repo": "LibRaw/LibRaw",
    "commit_url": "https://github.com/LibRaw/LibRaw/commit/1334647862b0c90b2e8cb2f668e66627d9517b17",
    "files": [
      "dcraw/dcraw.c",
      "internal/dcraw_common.cpp"
    ],
    "message": "parse_qt: possible integer overflow",
    "before_after_code_files": [
      "dcraw/dcraw.c||dcraw/dcraw.c",
      "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
    ]
  },
  "patch_diff": {
    "dcraw/dcraw.c||dcraw/dcraw.c": [
      "File: dcraw/dcraw.c -> dcraw/dcraw.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "13593:   while (ftell(ifp)+7 < end) {",
      "13594:     save = ftell(ifp);",
      "13595:     if ((size = get4()) < 8) return;",
      "13596:     fread (tag, 4, 1, ifp);",
      "13597:     if (!memcmp(tag,\"moov\",4) ||",
      "13598:  !memcmp(tag,\"udta\",4) ||",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13596:     if ((int)size < 0) return; // 2+GB is too much",
      "13597:     if (save + size < save) return; // 32bit overflow",
      "",
      "---------------"
    ],
    "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
      "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "12395:   while (ftell(ifp)+7 < end) {",
      "12396:     save = ftell(ifp);",
      "12397:     if ((size = get4()) < 8) return;",
      "12398:     fread (tag, 4, 1, ifp);",
      "12399:     if (!memcmp(tag,\"moov\",4) ||",
      "12400:  !memcmp(tag,\"udta\",4) ||",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12398:     if ((int)size < 0) return; // 2+GB is too much",
      "12399:     if (save + size < save) return; // 32bit overflow",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4554e24ce24beaef5d0ef48372801cfd91039076",
      "candidate_info": {
        "commit_hash": "4554e24ce24beaef5d0ef48372801cfd91039076",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/4554e24ce24beaef5d0ef48372801cfd91039076",
        "files": [
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp"
        ],
        "message": "parse_qt: possible integer overflow",
        "before_after_code_files": [
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
          ]
        }
      },
      "candidate_diff": {
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "16815:     save = ftell(ifp);",
          "16816:     if ((size = get4()) < 8)",
          "16817:       return;",
          "16818:     fread(tag, 4, 1, ifp);",
          "16819:     if (!memcmp(tag, \"moov\", 4) || !memcmp(tag, \"udta\", 4) || !memcmp(tag, \"CNTH\", 4))",
          "16820:       parse_qt(save + size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16818:     if ((int)size < 0) return; // 2+GB is too much",
          "16819:     if (save + size < save) return; // 32bit overflow",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "15477:     save = ftell(ifp);",
          "15478:     if ((size = get4()) < 8)",
          "15479:       return;",
          "15480:     fread(tag, 4, 1, ifp);",
          "15481:     if (!memcmp(tag, \"moov\", 4) || !memcmp(tag, \"udta\", 4) || !memcmp(tag, \"CNTH\", 4))",
          "15482:       parse_qt(save + size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15480:     if ((int)size < 0) return; // 2+GB is too much",
          "15481:     if (save + size < save) return; // 32bit overflow",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c28a104e9fcd5d0cb42dab1cf4494aef74c6e0b9",
      "candidate_info": {
        "commit_hash": "c28a104e9fcd5d0cb42dab1cf4494aef74c6e0b9",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/c28a104e9fcd5d0cb42dab1cf4494aef74c6e0b9",
        "files": [
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp"
        ],
        "message": "parse_qt: possible integer overflow",
        "before_after_code_files": [
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
          ]
        }
      },
      "candidate_diff": {
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "16997:     save = ftell(ifp);",
          "16998:     if ((size = get4()) < 8)",
          "16999:       return;",
          "17000:     fread(tag, 4, 1, ifp);",
          "17001:     if (!memcmp(tag, \"moov\", 4) || !memcmp(tag, \"udta\", 4) || !memcmp(tag, \"CNTH\", 4))",
          "17002:       parse_qt(save + size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17000:     if ((int)size < 0) return; // 2+GB is too much",
          "17001:     if (save + size < save) return; // 32bit overflow",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "15658:     save = ftell(ifp);",
          "15659:     if ((size = get4()) < 8)",
          "15660:       return;",
          "15661:     fread(tag, 4, 1, ifp);",
          "15662:     if (!memcmp(tag, \"moov\", 4) || !memcmp(tag, \"udta\", 4) || !memcmp(tag, \"CNTH\", 4))",
          "15663:       parse_qt(save + size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15661:     if ((int)size < 0) return; // 2+GB is too much",
          "15662:     if (save + size < save) return; // 32bit overflow",
          "",
          "---------------"
        ]
      }
    }
  ]
}