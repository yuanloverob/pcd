{
  "cve_id": "CVE-2021-32066",
  "cve_desc": "An issue was discovered in Ruby through 2.6.7, 2.7.x through 2.7.3, and 3.x through 3.0.1. Net::IMAP does not raise an exception when StartTLS fails with an an unknown response, which might allow man-in-the-middle attackers to bypass the TLS protections by leveraging a network position between the client and the registry to block the StartTLS command, aka a \"StartTLS stripping attack.\"",
  "repo": "ruby/ruby",
  "patch_hash": "a21a3b7d23704a01d34bd79d09dc37897e00922a",
  "patch_info": {
    "commit_hash": "a21a3b7d23704a01d34bd79d09dc37897e00922a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/a21a3b7d23704a01d34bd79d09dc37897e00922a",
    "files": [
      "lib/net/imap.rb",
      "test/net/imap/test_imap.rb",
      "version.h"
    ],
    "message": "Fix StartTLS stripping vulnerability\n\nReported by Alexandr Savca in https://hackerone.com/reports/1178562\n\nCo-authored-by: Shugo Maeda <shugo@ruby-lang.org>",
    "before_after_code_files": [
      "lib/net/imap.rb||lib/net/imap.rb",
      "test/net/imap/test_imap.rb||test/net/imap/test_imap.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "lib/net/imap.rb||lib/net/imap.rb": [
      "File: lib/net/imap.rb -> lib/net/imap.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "1216:       end",
      "1217:       resp = @tagged_responses.delete(tag)",
      "1218:       case resp.name",
      "1219:       when /\\A(?:NO)\\z/ni",
      "1220:         raise NoResponseError, resp",
      "1221:       when /\\A(?:BAD)\\z/ni",
      "1222:         raise BadResponseError, resp",
      "1223:       else",
      "1225:       end",
      "1226:     end",
      "",
      "[Removed Lines]",
      "1224:         return resp",
      "",
      "[Added Lines]",
      "1219:       when /\\A(?:OK)\\z/ni",
      "1220:         return resp",
      "1226:         raise UnknownResponseError, resp",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3717:     class ByeResponseError < ResponseError",
      "3718:     end",
      "3720:     RESPONSE_ERRORS = Hash.new(ResponseError)",
      "3721:     RESPONSE_ERRORS[\"NO\"] = NoResponseError",
      "3722:     RESPONSE_ERRORS[\"BAD\"] = BadResponseError",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3722:     # Error raised upon an unknown response from the server.",
      "3723:     class UnknownResponseError < ResponseError",
      "3724:     end",
      "",
      "---------------"
    ],
    "test/net/imap/test_imap.rb||test/net/imap/test_imap.rb": [
      "File: test/net/imap/test_imap.rb -> test/net/imap/test_imap.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "127:         imap.disconnect",
      "128:       end",
      "129:     end",
      "130:   end",
      "132:   def start_server",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "131:     def test_starttls_stripping",
      "132:       starttls_stripping_test do |port|",
      "133:         imap = Net::IMAP.new(\"localhost\", :port => port)",
      "134:         assert_raise(Net::IMAP::UnknownResponseError) do",
      "135:           imap.starttls(:ca_file => CA_FILE)",
      "136:         end",
      "137:         imap",
      "138:       end",
      "139:     end",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "784:     end",
      "785:   end",
      "787:   def create_tcp_server",
      "788:     return TCPServer.new(server_addr, 0)",
      "789:   end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "797:   def starttls_stripping_test",
      "798:     server = create_tcp_server",
      "799:     port = server.addr[1]",
      "800:     start_server do",
      "801:       sock = server.accept",
      "802:       begin",
      "803:         sock.print(\"* OK test server\\r\\n\")",
      "804:         sock.gets",
      "805:         sock.print(\"RUBY0001 BUG unhandled command\\r\\n\")",
      "806:       ensure",
      "807:         sock.close",
      "808:         server.close",
      "809:       end",
      "810:     end",
      "811:     begin",
      "812:       imap = yield(port)",
      "813:     ensure",
      "814:       imap.disconnect if imap && !imap.disconnected?",
      "815:     end",
      "816:   end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
      "3: #define RUBY_VERSION_TEENY 4",
      "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
      "7: #define RUBY_RELEASE_YEAR 2021",
      "8: #define RUBY_RELEASE_MONTH 7",
      "",
      "[Removed Lines]",
      "5: #define RUBY_PATCHLEVEL 190",
      "",
      "[Added Lines]",
      "5: #define RUBY_PATCHLEVEL 191",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f236548038048118e766232034511e4877a59b49",
      "candidate_info": {
        "commit_hash": "f236548038048118e766232034511e4877a59b49",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/f236548038048118e766232034511e4877a59b49",
        "files": [
          "load.c",
          "version.h"
        ],
        "message": "merge revision(s) 345db8f2aa373a31c619c8f85bd372f0a20829c1: [Backport #10902]\n\n\tAvoid pointless attempts to open .so file if already required\n\n\tWhen attempting to require a file without an extension that has\n\talready been required or provided with an .so extension, only\n\tlook for files with an .rb extension. There is no point in\n\ttrying to find files with an .so extension, since we already\n\tknow one has been loaded.\n\n\tPreviously, attempting to require such a file scanned the load\n\tpath twice, once for .rb and once for .so.  Now it only scans\n\tonce for .rb.  The scan once for .rb cannot be avoided, since\n\tthe .rb file would take precedence and should be loaded if it\n\texists.\n\n\tFixes [Bug #10902]\n\t---\n\t load.c | 7 ++++++-\n\t 1 file changed, 6 insertions(+), 1 deletion(-)",
        "before_after_code_files": [
          "load.c||load.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "load.c||load.c": [
          "File: load.c -> load.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:     0",
          "29: };",
          "31: enum expand_type {",
          "32:     EXPAND_ALL,",
          "33:     EXPAND_RELATIVE,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: static const char *const ruby_ext[] = {",
          "32:     \".rb\",",
          "33:     0",
          "34: };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "937:  return 'r';",
          "938:     }",
          "939:     tmp = fname;",
          "941:     switch (type) {",
          "942:       case 0:",
          "943:  if (ft)",
          "",
          "[Removed Lines]",
          "940:     type = rb_find_file_ext(&tmp, loadable_ext);",
          "",
          "[Added Lines]",
          "945:     type = rb_find_file_ext(&tmp, ft == 's' ? ruby_ext : loadable_ext);",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
          "3: #define RUBY_VERSION_TEENY 5",
          "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
          "7: #define RUBY_RELEASE_YEAR 2021",
          "8: #define RUBY_RELEASE_MONTH 11",
          "",
          "[Removed Lines]",
          "5: #define RUBY_PATCHLEVEL 194",
          "",
          "[Added Lines]",
          "5: #define RUBY_PATCHLEVEL 195",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c9c2245c0a25176072e02db9254f0e0c84c805cd",
      "candidate_info": {
        "commit_hash": "c9c2245c0a25176072e02db9254f0e0c84c805cd",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/c9c2245c0a25176072e02db9254f0e0c84c805cd",
        "files": [
          "missing/dtoa.c",
          "test/ruby/test_float.rb",
          "version.h"
        ],
        "message": "Fix dtoa buffer overrun",
        "before_after_code_files": [
          "missing/dtoa.c||missing/dtoa.c",
          "test/ruby/test_float.rb||test/ruby/test_float.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "missing/dtoa.c||missing/dtoa.c": [
          "File: missing/dtoa.c -> missing/dtoa.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1500:      if (!*++s || !(s1 = strchr(hexdigit, *s))) goto ret0;",
          "1501:      if (*s == '0') {",
          "1502:   while (*++s == '0');",
          "1503:   s1 = strchr(hexdigit, *s);",
          "1504:      }",
          "1505:      if (s1 != NULL) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1503:   if (!*s) goto ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1522:   for (; *s && (s1 = strchr(hexdigit, *s)); ++s) {",
          "1523:       adj += aadj * ((s1 - hexdigit) & 15);",
          "1524:       if ((aadj /= 16) == 0.0) {",
          "1526:    break;",
          "1527:       }",
          "1528:   }",
          "",
          "[Removed Lines]",
          "1525:    while (strchr(hexdigit, *++s));",
          "",
          "[Added Lines]",
          "1526:    while (*++s && strchr(hexdigit, *s));",
          "",
          "---------------"
        ],
        "test/ruby/test_float.rb||test/ruby/test_float.rb": [
          "File: test/ruby/test_float.rb -> test/ruby/test_float.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:       assert_raise(ArgumentError, n += z + \"A\") {Float(n)}",
          "172:       assert_raise(ArgumentError, n += z + \".0\") {Float(n)}",
          "173:     end",
          "174:   end",
          "176:   def test_divmod",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "175:     x = nil",
          "176:     2000.times do",
          "177:       x = Float(\"0x\"+\"0\"*30)",
          "178:       break unless x == 0.0",
          "179:     end",
          "180:     assert_equal(0.0, x, ->{\"%a\" % x})",
          "181:     x = nil",
          "182:     2000.times do",
          "183:       begin",
          "184:         x = Float(\"0x1.\"+\"0\"*270)",
          "185:       rescue ArgumentError => e",
          "186:         raise unless /\"0x1\\.0{270}\"/ =~ e.message",
          "187:       else",
          "188:         break",
          "189:       end",
          "190:     end",
          "191:     assert_nil(x, ->{\"%a\" % x})",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
          "3: #define RUBY_VERSION_TEENY 6",
          "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
          "7: #define RUBY_RELEASE_YEAR 2022",
          "8: #define RUBY_RELEASE_MONTH 4",
          "11: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "5: #define RUBY_PATCHLEVEL 218",
          "9: #define RUBY_RELEASE_DAY 7",
          "",
          "[Added Lines]",
          "5: #define RUBY_PATCHLEVEL 219",
          "9: #define RUBY_RELEASE_DAY 12",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f69aeb83146be640995753667fdd6c6f157527f5",
      "candidate_info": {
        "commit_hash": "f69aeb83146be640995753667fdd6c6f157527f5",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/f69aeb83146be640995753667fdd6c6f157527f5",
        "files": [
          "ext/cgi/escape/escape.c",
          "lib/cgi/cookie.rb",
          "lib/cgi/version.rb",
          "test/cgi/test_cgi_cookie.rb",
          "version.h"
        ],
        "message": "merge some parts of CGI 0.1.1\n\n\tFix integer overflow\n\n\tMake use of the check in rb_alloc_tmp_buffer2.\n\n\tWhen parsing cookies, only decode the values\n\n\tBump version",
        "before_after_code_files": [
          "ext/cgi/escape/escape.c||ext/cgi/escape/escape.c",
          "lib/cgi/cookie.rb||lib/cgi/cookie.rb",
          "lib/cgi/version.rb||lib/cgi/version.rb",
          "test/cgi/test_cgi_cookie.rb||test/cgi/test_cgi_cookie.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/cgi/escape/escape.c||ext/cgi/escape/escape.c": [
          "File: ext/cgi/escape/escape.c -> ext/cgi/escape/escape.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: optimized_escape_html(VALUE str)",
          "37: {",
          "38:     VALUE vbuf;",
          "40:     const char *cstr = RSTRING_PTR(str);",
          "41:     const char *end = cstr + RSTRING_LEN(str);",
          "",
          "[Removed Lines]",
          "39:     char *buf = ALLOCV_N(char, vbuf, RSTRING_LEN(str) * HTML_ESCAPE_MAX_LEN);",
          "",
          "[Added Lines]",
          "39:     typedef char escape_buf[HTML_ESCAPE_MAX_LEN];",
          "40:     char *buf = *ALLOCV_N(escape_buf, vbuf, RSTRING_LEN(str));",
          "",
          "---------------"
        ],
        "lib/cgi/cookie.rb||lib/cgi/cookie.rb": [
          "File: lib/cgi/cookie.rb -> lib/cgi/cookie.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:       raw_cookie.split(/;\\s?/).each do |pairs|",
          "160:         name, values = pairs.split('=',2)",
          "161:         next unless name and values",
          "163:         values ||= \"\"",
          "164:         values = values.split('&').collect{|v| CGI.unescape(v,@@accept_charset) }",
          "165:         if cookies.has_key?(name)",
          "",
          "[Removed Lines]",
          "162:         name = CGI.unescape(name)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/cgi/version.rb||lib/cgi/version.rb": [
          "File: lib/cgi/version.rb -> lib/cgi/version.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: class CGI",
          "3: end",
          "",
          "[Removed Lines]",
          "2:   VERSION = \"0.1.0\"",
          "",
          "[Added Lines]",
          "2:   VERSION = \"0.1.0.1\"",
          "",
          "---------------"
        ],
        "test/cgi/test_cgi_cookie.rb||test/cgi/test_cgi_cookie.rb": [
          "File: test/cgi/test_cgi_cookie.rb -> test/cgi/test_cgi_cookie.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:     end",
          "102:   end",
          "105:   def test_cgi_cookie_arrayinterface",
          "106:     cookie = CGI::Cookie.new('name1', 'a', 'b', 'c')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:   def test_cgi_cookie_parse_not_decode_name",
          "105:     cookie_str = \"%66oo=baz;foo=bar\"",
          "106:     cookies = CGI::Cookie.parse(cookie_str)",
          "107:     assert_equal({\"%66oo\" => [\"baz\"], \"foo\" => [\"bar\"]}, cookies)",
          "108:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
          "3: #define RUBY_VERSION_TEENY 5",
          "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
          "7: #define RUBY_RELEASE_YEAR 2021",
          "8: #define RUBY_RELEASE_MONTH 11",
          "",
          "[Removed Lines]",
          "5: #define RUBY_PATCHLEVEL 202",
          "",
          "[Added Lines]",
          "5: #define RUBY_PATCHLEVEL 203",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7eaec9a6b355a685a3a9503a005b91f4b3cb4f39",
      "candidate_info": {
        "commit_hash": "7eaec9a6b355a685a3a9503a005b91f4b3cb4f39",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/7eaec9a6b355a685a3a9503a005b91f4b3cb4f39",
        "files": [
          "io.c",
          "test/ruby/test_io.rb",
          "version.h"
        ],
        "message": "merge revision(s) b555e659c4974acc423083b71b1bd5ec6a926046: [Backport #18388]\n\n    Do not use `fcopyfile` if appending to non-empty file [Bug #18388]\n\n    `fcopyfile` appends `src` to `to` and then truncates `to` to it's\n    original size.\n    ---\n     io.c                 |  7 +++++++\n     test/ruby/test_io.rb | 12 ++++++++++++\n     2 files changed, 19 insertions(+)",
        "before_after_code_files": [
          "io.c||io.c",
          "test/ruby/test_io.rb||test/ruby/test_io.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "io.c||io.c": [
          "File: io.c -> io.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "11022:         return 0;",
          "11024:         return 0;",
          "11026:     if (src_offset > (off_t)0) {",
          "11027:         off_t r;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11025:     if (fcntl(stp->dst_fd, F_GETFL) & O_APPEND) {",
          "11028:         off_t end = lseek(stp->dst_fd, 0, SEEK_END);",
          "11029:         lseek(stp->dst_fd, 0, SEEK_SET);",
          "11030:         if (end > (off_t)0) return 0;",
          "11031:     }",
          "",
          "---------------"
        ],
        "test/ruby/test_io.rb||test/ruby/test_io.rb": [
          "File: test/ruby/test_io.rb -> test/ruby/test_io.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "440:     }",
          "441:   end",
          "443:   def test_copy_stream_smaller",
          "444:     with_srccontent {|src, content|",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "440:     }",
          "441:   end",
          "443:   def test_copy_stream_append_to_nonempty",
          "444:     with_srccontent(\"foobar\") {|src, content|",
          "445:       preface = 'preface'",
          "446:       File.write('dst', preface)",
          "447:       File.open('dst', 'ab') do |dst|",
          "448:         ret = IO.copy_stream(src, dst)",
          "449:         assert_equal(content.bytesize, ret)",
          "450:         assert_equal(preface + content, File.read(\"dst\"))",
          "451:       end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
          "3: #define RUBY_VERSION_TEENY 6",
          "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
          "7: #define RUBY_RELEASE_YEAR 2022",
          "8: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "5: #define RUBY_PATCHLEVEL 215",
          "",
          "[Added Lines]",
          "5: #define RUBY_PATCHLEVEL 216",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1034b6e7ba9442320e16c260d634d4c64d5e62bf",
      "candidate_info": {
        "commit_hash": "1034b6e7ba9442320e16c260d634d4c64d5e62bf",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/1034b6e7ba9442320e16c260d634d4c64d5e62bf",
        "files": [
          "ext/zlib/zlib.c",
          "version.h"
        ],
        "message": "merge revision(s) 0c5f8c62766afe4605172800063e63fe36996658: [Backport #10961]\n\n\t[ruby/zlib] Resume zstream if available [Bug #10961]\n\n\t---\n\t ext/zlib/zlib.c | 6 ++++++\n\t 1 file changed, 6 insertions(+)",
        "before_after_code_files": [
          "ext/zlib/zlib.c||ext/zlib/zlib.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/zlib/zlib.c||ext/zlib/zlib.c": [
          "File: ext/zlib/zlib.c -> ext/zlib/zlib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1066:                                RB_NOGVL_UBF_ASYNC_SAFE);",
          "1067: #endif",
          "1069:     if (flush != Z_FINISH && err == Z_BUF_ERROR",
          "1070:      && z->stream.avail_out > 0) {",
          "1071:  z->flags |= ZSTREAM_FLAG_IN_STREAM;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1070:     if (err == Z_OK && args.interrupt) {",
          "1071:        args.interrupt = 0;",
          "1072:        goto loop;",
          "1073:     }",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
          "3: #define RUBY_VERSION_TEENY 6",
          "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
          "7: #define RUBY_RELEASE_YEAR 2021",
          "8: #define RUBY_RELEASE_MONTH 12",
          "",
          "[Removed Lines]",
          "5: #define RUBY_PATCHLEVEL 208",
          "",
          "[Added Lines]",
          "5: #define RUBY_PATCHLEVEL 209",
          "",
          "---------------"
        ]
      }
    }
  ]
}