{
  "cve_id": "CVE-2023-34105",
  "cve_desc": "SRS is a real-time video server supporting RTMP, WebRTC, HLS, HTTP-FLV, SRT, MPEG-DASH, and GB28181. Prior to versions 5.0.157, 5.0-b1, and 6.0.48, SRS's `api-server` server is vulnerable to a drive-by command injection. An attacker may send a request to the `/api/v1/snapshots` endpoint containing any commands to be executed as part of the body of the POST request. This issue may lead to Remote Code Execution (RCE). Versions 5.0.157, 5.0-b1, and 6.0.48 contain a fix.",
  "repo": "ossrs/srs",
  "patch_hash": "1d878c2daaf913ad01c6d0bc2f247116c8050338",
  "patch_info": {
    "commit_hash": "1d878c2daaf913ad01c6d0bc2f247116c8050338",
    "repo": "ossrs/srs",
    "commit_url": "https://github.com/ossrs/srs/commit/1d878c2daaf913ad01c6d0bc2f247116c8050338",
    "files": [
      "trunk/doc/CHANGELOG.md",
      "trunk/research/api-server/server.go",
      "trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp"
    ],
    "message": "Fix command injection in api-server for HTTP callback. v5.0.157, v6.0.48",
    "before_after_code_files": [
      "trunk/research/api-server/server.go||trunk/research/api-server/server.go",
      "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
    ]
  },
  "patch_diff": {
    "trunk/research/api-server/server.go||trunk/research/api-server/server.go": [
      "File: trunk/research/api-server/server.go -> trunk/research/api-server/server.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "400:  normalPicPath := path.Join(outputPicDir, fmt.Sprintf(\"%v\", v.Stream)+\"-%03d.png\")",
      "401:  bestPng := path.Join(outputPicDir, fmt.Sprintf(\"%v-best.png\", v.Stream))",
      "405:  timeoutCtx, _ := context.WithTimeout(v.cancelCtx, v.timeout)",
      "407:  if err = cmd.Run(); err != nil {",
      "408:   log.Println(fmt.Sprintf(\"run snapshot %v cmd failed, err is %v\", v.Tag(), err))",
      "409:   return",
      "",
      "[Removed Lines]",
      "403:  param := fmt.Sprintf(\"%v -i %v -vf fps=1 -vcodec png -f image2 -an -y -vframes %v -y %v\", ffmpegPath, inputUrl, v.vframes, normalPicPath)",
      "404:  log.Println(fmt.Sprintf(\"start snapshot, cmd param=%v\", param))",
      "406:  cmd := exec.CommandContext(timeoutCtx, \"/bin/bash\", \"-c\", param)",
      "",
      "[Added Lines]",
      "403:  params := []string{",
      "404:   \"-i\", inputUrl,",
      "405:   \"-vf\", \"fps=1\",",
      "406:   \"-vcodec\", \"png\",",
      "407:   \"-f\", \"image2\",",
      "408:   \"-an\",",
      "409:   \"-vframes\", strconv.Itoa(v.vframes),",
      "410:   \"-y\", normalPicPath,",
      "411:  }",
      "412:  log.Println(fmt.Sprintf(\"start snapshot, cmd param=%v %v\", ffmpegPath, strings.Join(params, \" \")))",
      "414:  cmd := exec.CommandContext(timeoutCtx, ffmpegPath, params...)",
      "",
      "---------------"
    ],
    "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
      "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       5",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    156",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    157",
      "",
      "---------------"
    ],
    "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
      "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       6",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    47",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    48",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a458c9c68d4b33c3c842e0b5a3885346e10dda30",
      "candidate_info": {
        "commit_hash": "a458c9c68d4b33c3c842e0b5a3885346e10dda30",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/a458c9c68d4b33c3c842e0b5a3885346e10dda30",
        "files": [
          "Dockerfile",
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_config.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/main/srs_main_server.cpp"
        ],
        "message": "Refine docker detect mechenism. v5.0.190 v6.0.90 (#3758)\n\nWhen using Docker, logs are usually printed to console (stdout and\nstderr). However, since Docker detection occurs late, after log\ninitialization, the default log output may be incorrect. In Docker, logs\nmay still be written to a file instead of the console as expected.\n\nAdditionally, the Dockerfile has been improved with a new environment\nvariable `SRS_IN_DOCKER=on` to clearly indicate a Docker environment. If\nautomatic Docker detection fails, the configuration will be read, and\nthis variable will correctly inform SRS that it's in a Docker\nenvironment.\n\nLastly, the default configuration values have been improved for Docker\nenvironments. By default, `SRS_LOG_TANK=console` and daemon mode is\ndisabled.\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_config.cpp||trunk/src/app/srs_app_config.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/main/srs_main_server.cpp||trunk/src/main/srs_main_server.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_config.cpp||trunk/src/app/srs_app_config.cpp": [
          "File: trunk/src/app/srs_app_config.cpp -> trunk/src/app/srs_app_config.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:     return (ch == ' ' || ch == '\\t' || ch == SRS_CR || ch == SRS_LF);",
          "95: }",
          "97: namespace srs_internal",
          "98: {",
          "99:     SrsConfigBuffer::SrsConfigBuffer()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97: extern bool _srs_in_docker;",
          "100: srs_error_t srs_detect_docker()",
          "101: {",
          "102:     srs_error_t err = srs_success;",
          "104:     _srs_in_docker = false;",
          "106:     SrsFileReader fr;",
          "107:     if ((err = fr.open(\"/proc/1/cgroup\")) != srs_success) {",
          "108:         return err;",
          "109:     }",
          "111:     ssize_t nn;",
          "112:     char buf[1024];",
          "113:     if ((err = fr.read(buf, sizeof(buf), &nn)) != srs_success) {",
          "114:         return err;",
          "115:     }",
          "117:     if (nn <= 0) {",
          "118:         return err;",
          "119:     }",
          "121:     string s(buf, nn);",
          "122:     if (srs_string_contains(s, \"/docker\")) {",
          "123:         _srs_in_docker = true;",
          "124:     }",
          "126:     return err;",
          "127: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1934:         if (root->directives.empty()) root->get_or_create(\"vhost\", \"__defaultVhost__\");",
          "1935:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1970:     if ((err = srs_detect_docker()) != srs_success) {",
          "1971:         srs_error_reset(err);",
          "1972:     }",
          "1975:     if (!_srs_in_docker) {",
          "1976:         _srs_in_docker = _srs_config->get_in_docker();",
          "1977:         if (_srs_in_docker) {",
          "1978:             srs_trace(\"enable in_docker by config\");",
          "1979:         }",
          "1980:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2857: bool SrsConfig::get_daemon()",
          "2858: {",
          "2861:     SrsConfDirective* conf = root->get(\"daemon\");",
          "2862:     if (!conf || conf->arg0().empty()) {",
          "",
          "[Removed Lines]",
          "2859:     SRS_OVERWRITE_BY_ENV_BOOL2(\"srs.daemon\");",
          "",
          "[Added Lines]",
          "2904:     SRS_OVERWRITE_BY_ENV_BOOL2(\"srs.daemon\"); // SRS_DAEMON",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6520:     return conf->arg0();",
          "6521: }",
          "6525: bool SrsConfig::get_log_tank_file()",
          "6526: {",
          "6527:     if (!srs_getenv(\"srs.srs_log_tank\").empty()) { // SRS_SRS_LOG_TANK",
          "",
          "[Removed Lines]",
          "6523: extern bool _srs_in_docker;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    189",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    190",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    89",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    90",
          "",
          "---------------"
        ],
        "trunk/src/main/srs_main_server.cpp||trunk/src/main/srs_main_server.cpp": [
          "File: trunk/src/main/srs_main_server.cpp -> trunk/src/main/srs_main_server.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: srs_error_t run_directly_or_daemon();",
          "59: srs_error_t run_in_thread_pool();",
          "61: void show_macro_features();",
          "",
          "[Removed Lines]",
          "60: srs_error_t srs_detect_docker();",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80: const char* _srs_binary = NULL;",
          "83: extern void srs_free_global_system_ips();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82: bool _srs_in_docker = false;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "131: #ifdef SRS_GPERF_MP",
          "132: #warning \"gmp is not used for memory leak, please use gmc instead.\"",
          "133: #endif",
          "",
          "[Removed Lines]",
          "136:     if ((err = srs_detect_docker()) != srs_success) {",
          "137:         srs_error_reset(err);",
          "138:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "400: #endif",
          "401: }",
          "434: srs_error_t run_directly_or_daemon()",
          "435: {",
          "436:     srs_error_t err = srs_success;",
          "448:     bool run_as_daemon = _srs_config->get_daemon();",
          "",
          "[Removed Lines]",
          "404: bool _srs_in_docker = false;",
          "405: srs_error_t srs_detect_docker()",
          "406: {",
          "407:     srs_error_t err = srs_success;",
          "409:     _srs_in_docker = false;",
          "411:     SrsFileReader fr;",
          "412:     if ((err = fr.open(\"/proc/1/cgroup\")) != srs_success) {",
          "413:         return err;",
          "414:     }",
          "416:     ssize_t nn;",
          "417:     char buf[1024];",
          "418:     if ((err = fr.read(buf, sizeof(buf), &nn)) != srs_success) {",
          "419:         return err;",
          "420:     }",
          "422:     if (nn <= 0) {",
          "423:         return err;",
          "424:     }",
          "426:     string s(buf, nn);",
          "427:     if (srs_string_contains(s, \"/docker\")) {",
          "428:         _srs_in_docker = true;",
          "429:     }",
          "431:     return err;",
          "432: }",
          "439:     if (!_srs_in_docker) {",
          "440:         _srs_in_docker = _srs_config->get_in_docker();",
          "441:         if (_srs_in_docker) {",
          "442:             srs_trace(\"enable in_docker by config\");",
          "443:         }",
          "444:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9b07d840ed80fdb2f2b2ffc94b64b1b05b17b6af",
      "candidate_info": {
        "commit_hash": "9b07d840ed80fdb2f2b2ffc94b64b1b05b17b6af",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/9b07d840ed80fdb2f2b2ffc94b64b1b05b17b6af",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_rtc_network.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "WebRTC: TCP transport should use read_fully instead of read. v5.0.194 v6.0.94 (#3847)\n\nSRS supports TCP WebRTC by reading 2 bytes of length, like `read(buf,\n2)`. However, in some cases, it might receive 1 byte, causing subsequent\ndata to be incorrect and making it unable to push or play streams.\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_rtc_network.cpp||trunk/src/app/srs_app_rtc_network.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_rtc_network.cpp||trunk/src/app/srs_app_rtc_network.cpp": [
          "File: trunk/src/app/srs_app_rtc_network.cpp -> trunk/src/app/srs_app_rtc_network.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "885:     ssize_t nread = 0; uint8_t b[2];",
          "887:         return srs_error_wrap(err, \"rtc tcp conn read len\");",
          "888:     }",
          "",
          "[Removed Lines]",
          "886:     if((err = skt_->read((char*)b, sizeof(b), &nread)) != srs_success) {",
          "",
          "[Added Lines]",
          "886:     if((err = skt_->read_fully((char*)b, sizeof(b), &nread)) != srs_success) {",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    193",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    194",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    93",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    94",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7ba59c36350391bf04064f5cf575d84a653be45d",
      "candidate_info": {
        "commit_hash": "7ba59c36350391bf04064f5cf575d84a653be45d",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/7ba59c36350391bf04064f5cf575d84a653be45d",
        "files": [
          "trunk/conf/full.conf",
          "trunk/doc/CHANGELOG.md",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "Improve the usage of \"transcode\" in the \"full.conf\" file. v5.0.162, v6.0.56 (#3596)\n\n---------\n\nCo-authored-by: chundonglinlin <chundonglinlin@163.com>\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/conf/full.conf||trunk/conf/full.conf",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/conf/full.conf||trunk/conf/full.conf": [
          "File: trunk/conf/full.conf -> trunk/conf/full.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "2307:             #       [app] the input stream app.",
          "2308:             #       [stream] the input stream name.",
          "2309:             #       [engine] the transcode engine name.",
          "2310:             # we also support datetime variables.",
          "2311:             #       [2006], replace this const to current year.",
          "2312:             #       [01], replace this const to current month.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2310:             #       [param] the input stream query string.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2468:         }",
          "2469:     }",
          "2470: }",
          "2471: # transcode all app and stream of vhost",
          "2472: # the comments, read example.transcode.srs.com",
          "2473: vhost all.transcode.srs.com {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2472: # forward the input stream query string to output",
          "2473: vhost param.transcode.srs.com {",
          "2474:     transcode {",
          "2475:         enabled on;",
          "2476:         ffmpeg ./objs/ffmpeg/bin/ffmpeg;",
          "2477:         engine copy {",
          "2478:             enabled on;",
          "2479:             vcodec copy;",
          "2480:             acodec copy;",
          "2481:             output rtmp://127.0.0.1:[port]/[app]/[stream]_[engine][param];",
          "2482:         }",
          "2483:     }",
          "2484: }",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    161",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    162",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    55",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    56",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6a4ace900d967ac91d3e6df124e66b705e8f1bc8",
      "candidate_info": {
        "commit_hash": "6a4ace900d967ac91d3e6df124e66b705e8f1bc8",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/6a4ace900d967ac91d3e6df124e66b705e8f1bc8",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_utility.cpp",
          "trunk/src/app/srs_app_utility.hpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/protocol/srs_protocol_rtmp_stack.cpp",
          "trunk/src/protocol/srs_protocol_utility.cpp",
          "trunk/src/protocol/srs_protocol_utility.hpp"
        ],
        "message": "Support FFmpeg timecode, fix AMF0 parsing failed. v5.0.179 v6.0.77 (#3804)\n\nPlease see https://github.com/ossrs/srs/issues/3803 for detail:\n\n1. When using FFmpeg with the `-map 0` option, there may be a 4-byte\ntimecode in the AMF0 Data.\n2. SRS should be able to handle this packet without causing a parsing\nerror, as it's generally expected to be an AMF0 string, not a 4-byte\ntimecode.\n3. Disregard the timecode since SRS doesn't utilize it.\n\nSee [Error submitting a packet to the muxer: Broken pipe, Error muxing a\npacket](https://trac.ffmpeg.org/ticket/10565)\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_utility.cpp||trunk/src/app/srs_app_utility.cpp",
          "trunk/src/app/srs_app_utility.hpp||trunk/src/app/srs_app_utility.hpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/protocol/srs_protocol_rtmp_stack.cpp||trunk/src/protocol/srs_protocol_rtmp_stack.cpp",
          "trunk/src/protocol/srs_protocol_utility.cpp||trunk/src/protocol/srs_protocol_utility.cpp",
          "trunk/src/protocol/srs_protocol_utility.hpp||trunk/src/protocol/srs_protocol_utility.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_utility.cpp||trunk/src/app/srs_app_utility.cpp": [
          "File: trunk/src/app/srs_app_utility.cpp -> trunk/src/app/srs_app_utility.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1379:     sys->set(\"conn_srs\", SrsJsonAny::integer(nrs->nb_conn_srs));",
          "1380: }",
          "1441: string srs_getenv(const string& key)",
          "1442: {",
          "1443:     string ekey = key;",
          "",
          "[Removed Lines]",
          "1382: string srs_string_dumps_hex(const std::string& str)",
          "1383: {",
          "1384:     return srs_string_dumps_hex(str.c_str(), str.size());",
          "1385: }",
          "1387: string srs_string_dumps_hex(const char* str, int length)",
          "1388: {",
          "1389:     return srs_string_dumps_hex(str, length, INT_MAX);",
          "1390: }",
          "1392: string srs_string_dumps_hex(const char* str, int length, int limit)",
          "1393: {",
          "1394:     return srs_string_dumps_hex(str, length, limit, ' ', 128, '\\n');",
          "1395: }",
          "1397: string srs_string_dumps_hex(const char* str, int length, int limit, char seperator, int line_limit, char newline)",
          "1398: {",
          "1400:     const int LIMIT = 1024*16 + 1;",
          "1401:     static char buf[LIMIT];",
          "1403:     int len = 0;",
          "1404:     for (int i = 0; i < length && i < limit && len < LIMIT; ++i) {",
          "1405:         int nb = snprintf(buf + len, LIMIT - len, \"%02x\", (uint8_t)str[i]);",
          "1406:         if (nb <= 0 || nb >= LIMIT - len) {",
          "1407:             break;",
          "1408:         }",
          "1409:         len += nb;",
          "1412:         if (i < length - 1 && i < limit - 1 && len < LIMIT) {",
          "1413:             if (seperator) {",
          "1414:                 buf[len++] = seperator;",
          "1415:             }",
          "1417:             if (newline && line_limit && i > 0 && ((i + 1) % line_limit) == 0) {",
          "1418:                 buf[len++] = newline;",
          "1419:             }",
          "1420:         }",
          "1421:     }",
          "1424:     if (len <= 0) {",
          "1425:         return \"\";",
          "1426:     }",
          "1429:     if (newline && len >= LIMIT - 2 && buf[len - 1] == newline) {",
          "1430:         len--;",
          "1431:     }",
          "1434:     if (seperator && len >= LIMIT - 3 && buf[len - 1] == seperator) {",
          "1435:         len--;",
          "1436:     }",
          "1438:     return string(buf, len);",
          "1439: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_utility.hpp||trunk/src/app/srs_app_utility.hpp": [
          "File: trunk/src/app/srs_app_utility.hpp -> trunk/src/app/srs_app_utility.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "678: extern void srs_api_dump_summaries(SrsJsonObject* obj);",
          "689: extern std::string srs_getenv(const std::string& key);",
          "",
          "[Removed Lines]",
          "682: extern std::string srs_string_dumps_hex(const std::string& str);",
          "683: extern std::string srs_string_dumps_hex(const char* str, int length);",
          "684: extern std::string srs_string_dumps_hex(const char* str, int length, int limit);",
          "685: extern std::string srs_string_dumps_hex(const char* str, int length, int limit, char seperator, int line_limit, char newline);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    178",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    179",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    76",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    77",
          "",
          "---------------"
        ],
        "trunk/src/protocol/srs_protocol_rtmp_stack.cpp||trunk/src/protocol/srs_protocol_rtmp_stack.cpp": [
          "File: trunk/src/protocol/srs_protocol_rtmp_stack.cpp -> trunk/src/protocol/srs_protocol_rtmp_stack.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "597:     if (header.is_amf0_command() || header.is_amf3_command() || header.is_amf0_data() || header.is_amf3_data()) {",
          "599:         if (header.is_amf3_command() && stream->require(1)) {",
          "600:             stream->skip(1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "599:         if (stream->left() == 4 && (uint8_t)*stream->head() == 0x00) {",
          "600:             srs_warn(\"Ignore FFmpeg timecode, data=[%s]\", srs_string_dumps_hex(stream->head(), 4).c_str());",
          "601:             return err;",
          "602:         }",
          "",
          "---------------"
        ],
        "trunk/src/protocol/srs_protocol_utility.cpp||trunk/src/protocol/srs_protocol_utility.cpp": [
          "File: trunk/src/protocol/srs_protocol_utility.cpp -> trunk/src/protocol/srs_protocol_utility.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: #include <srs_protocol_rtmp_stack.hpp>",
          "25: #include <srs_protocol_io.hpp>",
          "27: #include <unistd.h>",
          "28: #include <arpa/inet.h>",
          "29: #include <net/if.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: #include <limits.h>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "962:     return system_info;",
          "963: }",
          "964: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "967: string srs_string_dumps_hex(const std::string& str)",
          "968: {",
          "969:     return srs_string_dumps_hex(str.c_str(), str.size());",
          "970: }",
          "972: string srs_string_dumps_hex(const char* str, int length)",
          "973: {",
          "974:     return srs_string_dumps_hex(str, length, INT_MAX);",
          "975: }",
          "977: string srs_string_dumps_hex(const char* str, int length, int limit)",
          "978: {",
          "979:     return srs_string_dumps_hex(str, length, limit, ' ', 128, '\\n');",
          "980: }",
          "982: string srs_string_dumps_hex(const char* str, int length, int limit, char seperator, int line_limit, char newline)",
          "983: {",
          "985:     const int LIMIT = 1024*16 + 1;",
          "986:     static char buf[LIMIT];",
          "988:     int len = 0;",
          "989:     for (int i = 0; i < length && i < limit && len < LIMIT; ++i) {",
          "990:         int nb = snprintf(buf + len, LIMIT - len, \"%02x\", (uint8_t)str[i]);",
          "991:         if (nb <= 0 || nb >= LIMIT - len) {",
          "992:             break;",
          "993:         }",
          "994:         len += nb;",
          "997:         if (i < length - 1 && i < limit - 1 && len < LIMIT) {",
          "998:             if (seperator) {",
          "999:                 buf[len++] = seperator;",
          "1000:             }",
          "1002:             if (newline && line_limit && i > 0 && ((i + 1) % line_limit) == 0) {",
          "1003:                 buf[len++] = newline;",
          "1004:             }",
          "1005:         }",
          "1006:     }",
          "1009:     if (len <= 0) {",
          "1010:         return \"\";",
          "1011:     }",
          "1014:     if (newline && len >= LIMIT - 2 && buf[len - 1] == newline) {",
          "1015:         len--;",
          "1016:     }",
          "1019:     if (seperator && len >= LIMIT - 3 && buf[len - 1] == seperator) {",
          "1020:         len--;",
          "1021:     }",
          "1023:     return string(buf, len);",
          "1024: }",
          "",
          "---------------"
        ],
        "trunk/src/protocol/srs_protocol_utility.hpp||trunk/src/protocol/srs_protocol_utility.hpp": [
          "File: trunk/src/protocol/srs_protocol_utility.hpp -> trunk/src/protocol/srs_protocol_utility.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "196: extern utsname* srs_get_system_uname_info();",
          "197: #endif",
          "199: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "201: extern std::string srs_string_dumps_hex(const std::string& str);",
          "202: extern std::string srs_string_dumps_hex(const char* str, int length);",
          "203: extern std::string srs_string_dumps_hex(const char* str, int length, int limit);",
          "204: extern std::string srs_string_dumps_hex(const char* str, int length, int limit, char seperator, int line_limit, char newline);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4372e32f72bcb3ffa08700f0d18dc7a6aaa7d16d",
      "candidate_info": {
        "commit_hash": "4372e32f72bcb3ffa08700f0d18dc7a6aaa7d16d",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/4372e32f72bcb3ffa08700f0d18dc7a6aaa7d16d",
        "files": [
          "trunk/auto/depends.sh",
          "trunk/auto/options.sh",
          "trunk/doc/CHANGELOG.md",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "Don't compile libopus when enable sys-ffmpeg. v5.0.198 v6.0.98 (#3851)",
        "before_after_code_files": [
          "trunk/auto/depends.sh||trunk/auto/depends.sh",
          "trunk/auto/options.sh||trunk/auto/options.sh",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/auto/depends.sh||trunk/auto/depends.sh": [
          "File: trunk/auto/depends.sh -> trunk/auto/depends.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "514: # libopus, for WebRTC to transcode AAC with Opus.",
          "515: #####################################################################################",
          "516: # For cross build, we use opus of FFmpeg, so we don't build the libopus.",
          "518:     # Only build static libraries if no shared FFmpeg.",
          "519:     if [[ $SRS_SHARED_FFMPEG != YES ]]; then",
          "520:         OPUS_OPTIONS=\"--disable-shared --disable-doc\"",
          "",
          "[Removed Lines]",
          "517: if [[ $SRS_RTC == YES && $SRS_FFMPEG_OPUS != YES ]]; then",
          "",
          "[Added Lines]",
          "517: if [[ $SRS_RTC == YES && $SRS_USE_SYS_FFMPEG != YES && $SRS_FFMPEG_OPUS != YES ]]; then",
          "",
          "---------------"
        ],
        "trunk/auto/options.sh||trunk/auto/options.sh": [
          "File: trunk/auto/options.sh -> trunk/auto/options.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "315:         --extra-flags)                  SRS_EXTRA_FLAGS=${value}    ;;",
          "316:         --build-tag)                    SRS_BUILD_TAG=${value}      ;;",
          "320:         --srtp-nasm)                    SRS_SRTP_ASM=$(switch2value $value) ;;",
          "324:         --nasm)                         SRS_NASM=$(switch2value $value) ;;",
          "327:         --ssl)                          SRS_SSL=$(switch2value $value) ;;",
          "328:         --https)                        SRS_HTTPS=$(switch2value $value) ;;",
          "329:         --ssl-1-0)                      SRS_SSL_1_0=$(switch2value $value) ;;",
          "330:         --ssl-local)                    SRS_SSL_LOCAL=$(switch2value $value) ;;",
          "334:         --hds)                          SRS_HDS=$(switch2value $value) ;;",
          "337:         --transcode)                    SRS_TRANSCODE=$(switch2value $value) ;;",
          "340:         --ingest)                       SRS_INGEST=$(switch2value $value) ;;",
          "343:         --stat)                         SRS_STAT=$(switch2value $value) ;;",
          "346:         --stream-caster)                SRS_STREAM_CASTER=$(switch2value $value) ;;",
          "347:         --stream-converter)             SRS_STREAM_CASTER=$(switch2value $value) ;;",
          "351:         --utest)                        SRS_UTEST=$(switch2value $value) ;;",
          "352:         --gcov)                         SRS_GCOV=$(switch2value $value) ;;",
          "353:         --apm)                          SRS_APM=$(switch2value $value) ;;",
          "357:         --srt)                          SRS_SRT=$(switch2value $value) ;;",
          "361:         --rtc)                          SRS_RTC=$(switch2value $value) ;;",
          "362:         --simulator)                    SRS_SIMULATOR=$(switch2value $value) ;;",
          "363:         --generate-objs)                SRS_GENERATE_OBJS=$(switch2value $value) ;;",
          "",
          "[Removed Lines]",
          "318:         --without-srtp-nasm)            SRS_SRTP_ASM=NO             ;;",
          "319:         --with-srtp-nasm)               SRS_SRTP_ASM=YES            ;;",
          "322:         --without-nasm)                 SRS_NASM=NO                 ;;",
          "323:         --with-nasm)                    SRS_NASM=YES                ;;",
          "326:         --with-ssl)                     SRS_SSL=YES                 ;;",
          "332:         --with-hds)                     SRS_HDS=YES                 ;;",
          "333:         --without-hds)                  SRS_HDS=NO                  ;;",
          "336:         --with-transcode)               SRS_TRANSCODE=YES           ;;",
          "339:         --with-ingest)                  SRS_INGEST=YES              ;;",
          "342:         --with-stat)                    SRS_STAT=YES                ;;",
          "345:         --with-stream-caster)           SRS_STREAM_CASTER=YES       ;;",
          "349:         --with-utest)                   SRS_UTEST=YES               ;;",
          "350:         --without-utest)                SRS_UTEST=NO                ;;",
          "355:         --with-srt)                     SRS_SRT=YES                 ;;",
          "356:         --without-srt)                  SRS_SRT=NO                  ;;",
          "359:         --with-rtc)                     SRS_RTC=YES                 ;;",
          "360:         --without-rtc)                  SRS_RTC=NO                  ;;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "366:         --ffmpeg-opus)                  SRS_FFMPEG_OPUS=$(switch2value $value) ;;",
          "367:         --h265)                         SRS_H265=$(switch2value $value) ;;",
          "368:         --gb28181)                      SRS_GB28181=$(switch2value $value) ;;",
          "370:         --cxx11)                        SRS_CXX11=$(switch2value $value) ;;",
          "371:         --cxx14)                        SRS_CXX14=$(switch2value $value) ;;",
          "372:         --backtrace)                    SRS_BACKTRACE=$(switch2value $value) ;;",
          "376:         --clean)                        SRS_CLEAN=$(switch2value $value) ;;",
          "380:         --gperf)                        SRS_GPERF=$(switch2value $value) ;;",
          "384:         --gmc)                          SRS_GPERF_MC=$(switch2value $value) ;;",
          "388:         --gmd)                          SRS_GPERF_MD=$(switch2value $value) ;;",
          "392:         --gmp)                          SRS_GPERF_MP=$(switch2value $value) ;;",
          "396:         --gcp)                          SRS_GPERF_CP=$(switch2value $value) ;;",
          "400:         --gprof)                        SRS_GPROF=$(switch2value $value) ;;",
          "402:         --sanitizer)                    SRS_SANITIZER=$(switch2value $value) ;;",
          "403:         --sanitizer-static)             SRS_SANITIZER_STATIC=$(switch2value $value) ;;",
          "404:         --sanitizer-log)                SRS_SANITIZER_LOG=$(switch2value $value) ;;",
          "",
          "[Removed Lines]",
          "374:         --with-clean)                   SRS_CLEAN=YES               ;;",
          "375:         --without-clean)                SRS_CLEAN=NO                ;;",
          "378:         --with-gperf)                   SRS_GPERF=YES               ;;",
          "379:         --without-gperf)                SRS_GPERF=NO                ;;",
          "382:         --with-gmc)                     SRS_GPERF_MC=YES            ;;",
          "383:         --without-gmc)                  SRS_GPERF_MC=NO             ;;",
          "386:         --with-gmd)                     SRS_GPERF_MD=YES            ;;",
          "387:         --without-gmd)                  SRS_GPERF_MD=NO             ;;",
          "390:         --with-gmp)                     SRS_GPERF_MP=YES            ;;",
          "391:         --without-gmp)                  SRS_GPERF_MP=NO             ;;",
          "394:         --with-gcp)                     SRS_GPERF_CP=YES            ;;",
          "395:         --without-gcp)                  SRS_GPERF_CP=NO             ;;",
          "398:         --with-gprof)                   SRS_GPROF=YES               ;;",
          "399:         --without-gprof)                SRS_GPROF=NO                ;;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "418:         --shared-srtp)                  SRS_SHARED_SRTP=$(switch2value $value) ;;",
          "419:         --use-sys-srtp)                 SRS_USE_SYS_SRTP=YES        ;;",
          "420:         --sys-srtp)                     SRS_USE_SYS_SRTP=$(switch2value $value) ;;",
          "424:         --valgrind)                     SRS_VALGRIND=$(switch2value $value) ;;",
          "426:         --log-verbose)                  SRS_LOG_VERBOSE=$(switch2value $value) ;;",
          "",
          "[Removed Lines]",
          "422:         --with-valgrind)                SRS_VALGRIND=YES            ;;",
          "423:         --without-valgrind)             SRS_VALGRIND=NO             ;;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "430:         --debug)                        SRS_DEBUG=$(switch2value $value) ;;",
          "431:         --debug-stats)                  SRS_DEBUG_STATS=$(switch2value $value) ;;",
          "437:         --cross-build)                  SRS_CROSS_BUILD=YES         ;;",
          "454:         --build-cache)                  SRS_BUILD_CACHE=$(switch2value $value) ;;",
          "457:             echo \"$0: error: invalid option \\\"$option\\\"\"",
          "458:             exit 1",
          "",
          "[Removed Lines]",
          "433:         --generic-linux)                SRS_GENERIC_LINUX=$(switch2value $value) ;;",
          "435:         # Alias for --arm, cross build.",
          "436:         --cross)                        SRS_CROSS_BUILD=$(switch2value $value) ;;",
          "438:         --enable-cross-compile)         SRS_CROSS_BUILD=YES         ;;",
          "440:         # Deprecated, might be removed in future.",
          "441:         --osx)                          SRS_OSX=YES                 ;;",
          "442:         --cygwin64)                     SRS_CYGWIN64=YES            ;;",
          "443:         --x86-x64)                      SRS_X86_X64=YES             ;;",
          "444:         --x86-64)                       SRS_X86_X64=YES             ;;",
          "445:         --with-nginx)                   SRS_NGINX=YES               ;;",
          "446:         --without-nginx)                SRS_NGINX=NO                ;;",
          "447:         --nginx)                        SRS_NGINX=$(switch2value $value) ;;",
          "448:         --with-ffmpeg)                  SRS_FFMPEG_TOOL=YES         ;;",
          "449:         --without-ffmpeg)               SRS_FFMPEG_TOOL=NO          ;;",
          "450:         --ffmpeg)                       SRS_FFMPEG_TOOL=$(switch2value $value) ;;",
          "451:         --ffmpeg-tool)                  SRS_FFMPEG_TOOL=$(switch2value $value) ;;",
          "453:         # use cache for build.",
          "",
          "[Added Lines]",
          "381:         --generic-linux)                SRS_GENERIC_LINUX=$(switch2value $value) ;;",
          "384:         ##########################################################################################",
          "385:         --without-srtp-nasm)            SRS_SRTP_ASM=NO             ;; # Deprecated, might be removed in future.",
          "386:         --with-srtp-nasm)               SRS_SRTP_ASM=YES            ;; # Deprecated, might be removed in future.",
          "387:         --without-nasm)                 SRS_NASM=NO                 ;; # Deprecated, might be removed in future.",
          "388:         --with-nasm)                    SRS_NASM=YES                ;; # Deprecated, might be removed in future.",
          "389:         --with-ssl)                     SRS_SSL=YES                 ;; # Deprecated, might be removed in future.",
          "390:         --with-hds)                     SRS_HDS=YES                 ;; # Deprecated, might be removed in future.",
          "391:         --without-hds)                  SRS_HDS=NO                  ;; # Deprecated, might be removed in future.",
          "392:         --with-transcode)               SRS_TRANSCODE=YES           ;; # Deprecated, might be removed in future.",
          "393:         --with-ingest)                  SRS_INGEST=YES              ;; # Deprecated, might be removed in future.",
          "394:         --with-stat)                    SRS_STAT=YES                ;; # Deprecated, might be removed in future.",
          "395:         --with-stream-caster)           SRS_STREAM_CASTER=YES       ;; # Deprecated, might be removed in future.",
          "396:         --with-utest)                   SRS_UTEST=YES               ;; # Deprecated, might be removed in future.",
          "397:         --without-utest)                SRS_UTEST=NO                ;; # Deprecated, might be removed in future.",
          "398:         --with-srt)                     SRS_SRT=YES                 ;; # Deprecated, might be removed in future.",
          "399:         --without-srt)                  SRS_SRT=NO                  ;; # Deprecated, might be removed in future.",
          "400:         --with-rtc)                     SRS_RTC=YES                 ;; # Deprecated, might be removed in future.",
          "401:         --without-rtc)                  SRS_RTC=NO                  ;; # Deprecated, might be removed in future.",
          "402:         --with-clean)                   SRS_CLEAN=YES               ;; # Deprecated, might be removed in future.",
          "403:         --without-clean)                SRS_CLEAN=NO                ;; # Deprecated, might be removed in future.",
          "404:         --with-gperf)                   SRS_GPERF=YES               ;; # Deprecated, might be removed in future.",
          "405:         --without-gperf)                SRS_GPERF=NO                ;; # Deprecated, might be removed in future.",
          "406:         --with-gmc)                     SRS_GPERF_MC=YES            ;; # Deprecated, might be removed in future.",
          "407:         --without-gmc)                  SRS_GPERF_MC=NO             ;; # Deprecated, might be removed in future.",
          "408:         --with-gmd)                     SRS_GPERF_MD=YES            ;; # Deprecated, might be removed in future.",
          "409:         --without-gmd)                  SRS_GPERF_MD=NO             ;; # Deprecated, might be removed in future.",
          "410:         --with-gmp)                     SRS_GPERF_MP=YES            ;; # Deprecated, might be removed in future.",
          "411:         --without-gmp)                  SRS_GPERF_MP=NO             ;; # Deprecated, might be removed in future.",
          "412:         --with-gcp)                     SRS_GPERF_CP=YES            ;; # Deprecated, might be removed in future.",
          "413:         --without-gcp)                  SRS_GPERF_CP=NO             ;; # Deprecated, might be removed in future.",
          "414:         --with-gprof)                   SRS_GPROF=YES               ;; # Deprecated, might be removed in future.",
          "415:         --without-gprof)                SRS_GPROF=NO                ;; # Deprecated, might be removed in future.",
          "416:         --with-valgrind)                SRS_VALGRIND=YES            ;; # Deprecated, might be removed in future.",
          "417:         --without-valgrind)             SRS_VALGRIND=NO             ;; # Deprecated, might be removed in future.",
          "418:         --cross)                        SRS_CROSS_BUILD=$(switch2value $value) ;; # Deprecated, might be removed in future.",
          "419:         --enable-cross-compile)         SRS_CROSS_BUILD=YES         ;; # Deprecated, might be removed in future.",
          "421:         ##########################################################################################",
          "422:         --osx)                          SRS_OSX=YES                 ;; # Deprecated, might be removed in future.",
          "423:         --cygwin64)                     SRS_CYGWIN64=YES            ;; # Deprecated, might be removed in future.",
          "424:         --x86-x64)                      SRS_X86_X64=YES             ;; # Deprecated, might be removed in future.",
          "425:         --x86-64)                       SRS_X86_X64=YES             ;; # Deprecated, might be removed in future.",
          "426:         --with-nginx)                   SRS_NGINX=YES               ;; # Deprecated, might be removed in future.",
          "427:         --without-nginx)                SRS_NGINX=NO                ;; # Deprecated, might be removed in future.",
          "428:         --nginx)                        SRS_NGINX=$(switch2value $value) ;; # Deprecated, might be removed in future.",
          "429:         --with-ffmpeg)                  SRS_FFMPEG_TOOL=YES         ;; # Deprecated, might be removed in future.",
          "430:         --without-ffmpeg)               SRS_FFMPEG_TOOL=NO          ;; # Deprecated, might be removed in future.",
          "431:         --ffmpeg)                       SRS_FFMPEG_TOOL=$(switch2value $value) ;; # Deprecated, might be removed in future.",
          "432:         --ffmpeg-tool)                  SRS_FFMPEG_TOOL=$(switch2value $value) ;; # Deprecated, might be removed in future.",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "700:     SRS_AUTO_CONFIGURE=\"${SRS_AUTO_CONFIGURE} --cygwin64=$(value2switch $SRS_CYGWIN64)\"",
          "701:     SRS_AUTO_CONFIGURE=\"${SRS_AUTO_CONFIGURE} --single-thread=$(value2switch $SRS_SINGLE_THREAD)\"",
          "702:     SRS_AUTO_CONFIGURE=\"${SRS_AUTO_CONFIGURE} --generic-linux=$(value2switch $SRS_GENERIC_LINUX)\"",
          "703:     if [[ $SRS_CROSS_BUILD_ARCH != \"\" ]]; then SRS_AUTO_CONFIGURE=\"$SRS_AUTO_CONFIGURE --arch=$SRS_CROSS_BUILD_ARCH\"; fi",
          "704:     if [[ $SRS_CROSS_BUILD_CPU != \"\" ]]; then SRS_AUTO_CONFIGURE=\"$SRS_AUTO_CONFIGURE --cpu=$SRS_CROSS_BUILD_CPU\"; fi",
          "705:     if [[ $SRS_CROSS_BUILD_HOST != \"\" ]]; then SRS_AUTO_CONFIGURE=\"$SRS_AUTO_CONFIGURE --host=$SRS_CROSS_BUILD_HOST\"; fi",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "681:     SRS_AUTO_CONFIGURE=\"${SRS_AUTO_CONFIGURE} --build-cache=$(value2switch $SRS_BUILD_CACHE)\"",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    197",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    198",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    97",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    98",
          "",
          "---------------"
        ]
      }
    }
  ]
}