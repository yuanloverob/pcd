{
  "cve_id": "CVE-2023-25564",
  "cve_desc": "GSS-NTLMSSP is a mechglue plugin for the GSSAPI library that implements NTLM authentication. Prior to version 1.2.0, memory corruption can be triggered when decoding UTF16 strings. The variable `outlen` was not initialized and could cause writing a zero to an arbitrary place in memory if `ntlm_str_convert()` were to fail, which would leave `outlen` uninitialized. This can lead to a denial of service if the write hits unmapped memory or randomly corrupts a byte in the application memory space. This vulnerability can trigger an out-of-bounds write, leading to memory corruption. This vulnerability can be triggered via the main `gss_accept_sec_context` entry point. This issue is fixed in version 1.2.0.",
  "repo": "gssapi/gss-ntlmssp",
  "patch_hash": "c753000eb31835c0664e528fbc99378ae0cbe950",
  "patch_info": {
    "commit_hash": "c753000eb31835c0664e528fbc99378ae0cbe950",
    "repo": "gssapi/gss-ntlmssp",
    "commit_url": "https://github.com/gssapi/gss-ntlmssp/commit/c753000eb31835c0664e528fbc99378ae0cbe950",
    "files": [
      "src/ntlm.c"
    ],
    "message": "GHSL-2023-013: Memory corruption decoding UTF16\n\nMemory corruption when decoding UTF16 strings (GHSL-2023-013)\n\nFixes defect GHSL-2023-013 found by the GitHub Security Lab team via\noss-fuzz.\n\nThe variable outlen was not initialized and could cause writing a zero\nto an arbitrary place in memory if ntlm_str_convert() were to fail,\nwhich would leave outlen uninitialized.\n\nThis can lead to a DoS if the write hits unmapped memory or randomly\ncorrupting a byte in the application memory space.\n\nMake sure to zero out only if ntlm_str_convert() succeeds, but for good\nmeasure also initialize outlen to 0.\n\nFixes CVE-2023-25564\n\nSigned-off-by: Simo Sorce <simo@redhat.com>",
    "before_after_code_files": [
      "src/ntlm.c||src/ntlm.c"
    ]
  },
  "patch_diff": {
    "src/ntlm.c||src/ntlm.c": [
      "File: src/ntlm.c -> src/ntlm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "299:     char *in, *out = NULL;",
      "300:     uint16_t str_len;",
      "301:     uint32_t str_offs;",
      "303:     int ret = 0;",
      "305:     str_len = le16toh(str_hdr->len);",
      "",
      "[Removed Lines]",
      "302:     size_t outlen;",
      "",
      "[Added Lines]",
      "302:     size_t outlen = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "321:     ret = ntlm_str_convert(ctx->to_oem, in, out, str_len, &outlen);",
      "326: done:",
      "327:     if (ret) {",
      "328:         safefree(out);",
      "329:     }",
      "331:     return ret;",
      "332: }",
      "",
      "[Removed Lines]",
      "324:     out[outlen] = '\\0';",
      "",
      "[Added Lines]",
      "326:     } else {",
      "328:         out[outlen] = '\\0';",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a060d0262d94caee04eb4df441d55278d11ea5a0",
      "candidate_info": {
        "commit_hash": "a060d0262d94caee04eb4df441d55278d11ea5a0",
        "repo": "gssapi/gss-ntlmssp",
        "commit_url": "https://github.com/gssapi/gss-ntlmssp/commit/a060d0262d94caee04eb4df441d55278d11ea5a0",
        "files": [
          "src/ntlm.c"
        ],
        "message": "Fix potential crash when no target name is present\n\nSigned-off-by: Simo Sorce <simo@redhat.com>",
        "before_after_code_files": [
          "src/ntlm.c||src/ntlm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/ntlm.c||src/ntlm.c"
          ],
          "candidate": [
            "src/ntlm.c||src/ntlm.c"
          ]
        }
      },
      "candidate_diff": {
        "src/ntlm.c||src/ntlm.c": [
          "File: src/ntlm.c -> src/ntlm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "325:         safefree(out);",
          "326:     } else {",
          "329:     }",
          "",
          "[Removed Lines]",
          "328:         out[outlen] = '\\0';",
          "",
          "[Added Lines]",
          "328:         if (out) {",
          "329:             out[outlen] = '\\0';",
          "330:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}