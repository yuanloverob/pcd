{
  "cve_id": "CVE-2021-32066",
  "cve_desc": "An issue was discovered in Ruby through 2.6.7, 2.7.x through 2.7.3, and 3.x through 3.0.1. Net::IMAP does not raise an exception when StartTLS fails with an an unknown response, which might allow man-in-the-middle attackers to bypass the TLS protections by leveraging a network position between the client and the registry to block the StartTLS command, aka a \"StartTLS stripping attack.\"",
  "repo": "ruby/ruby",
  "patch_hash": "a21a3b7d23704a01d34bd79d09dc37897e00922a",
  "patch_info": {
    "commit_hash": "a21a3b7d23704a01d34bd79d09dc37897e00922a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/a21a3b7d23704a01d34bd79d09dc37897e00922a",
    "files": [
      "lib/net/imap.rb",
      "test/net/imap/test_imap.rb",
      "version.h"
    ],
    "message": "Fix StartTLS stripping vulnerability\n\nReported by Alexandr Savca in https://hackerone.com/reports/1178562\n\nCo-authored-by: Shugo Maeda <shugo@ruby-lang.org>",
    "before_after_code_files": [
      "lib/net/imap.rb||lib/net/imap.rb",
      "test/net/imap/test_imap.rb||test/net/imap/test_imap.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "lib/net/imap.rb||lib/net/imap.rb": [
      "File: lib/net/imap.rb -> lib/net/imap.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "1216:       end",
      "1217:       resp = @tagged_responses.delete(tag)",
      "1218:       case resp.name",
      "1219:       when /\\A(?:NO)\\z/ni",
      "1220:         raise NoResponseError, resp",
      "1221:       when /\\A(?:BAD)\\z/ni",
      "1222:         raise BadResponseError, resp",
      "1223:       else",
      "1225:       end",
      "1226:     end",
      "",
      "[Removed Lines]",
      "1224:         return resp",
      "",
      "[Added Lines]",
      "1219:       when /\\A(?:OK)\\z/ni",
      "1220:         return resp",
      "1226:         raise UnknownResponseError, resp",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3717:     class ByeResponseError < ResponseError",
      "3718:     end",
      "3720:     RESPONSE_ERRORS = Hash.new(ResponseError)",
      "3721:     RESPONSE_ERRORS[\"NO\"] = NoResponseError",
      "3722:     RESPONSE_ERRORS[\"BAD\"] = BadResponseError",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3722:     # Error raised upon an unknown response from the server.",
      "3723:     class UnknownResponseError < ResponseError",
      "3724:     end",
      "",
      "---------------"
    ],
    "test/net/imap/test_imap.rb||test/net/imap/test_imap.rb": [
      "File: test/net/imap/test_imap.rb -> test/net/imap/test_imap.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "127:         imap.disconnect",
      "128:       end",
      "129:     end",
      "130:   end",
      "132:   def start_server",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "131:     def test_starttls_stripping",
      "132:       starttls_stripping_test do |port|",
      "133:         imap = Net::IMAP.new(\"localhost\", :port => port)",
      "134:         assert_raise(Net::IMAP::UnknownResponseError) do",
      "135:           imap.starttls(:ca_file => CA_FILE)",
      "136:         end",
      "137:         imap",
      "138:       end",
      "139:     end",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "784:     end",
      "785:   end",
      "787:   def create_tcp_server",
      "788:     return TCPServer.new(server_addr, 0)",
      "789:   end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "797:   def starttls_stripping_test",
      "798:     server = create_tcp_server",
      "799:     port = server.addr[1]",
      "800:     start_server do",
      "801:       sock = server.accept",
      "802:       begin",
      "803:         sock.print(\"* OK test server\\r\\n\")",
      "804:         sock.gets",
      "805:         sock.print(\"RUBY0001 BUG unhandled command\\r\\n\")",
      "806:       ensure",
      "807:         sock.close",
      "808:         server.close",
      "809:       end",
      "810:     end",
      "811:     begin",
      "812:       imap = yield(port)",
      "813:     ensure",
      "814:       imap.disconnect if imap && !imap.disconnected?",
      "815:     end",
      "816:   end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
      "3: #define RUBY_VERSION_TEENY 4",
      "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
      "7: #define RUBY_RELEASE_YEAR 2021",
      "8: #define RUBY_RELEASE_MONTH 7",
      "",
      "[Removed Lines]",
      "5: #define RUBY_PATCHLEVEL 190",
      "",
      "[Added Lines]",
      "5: #define RUBY_PATCHLEVEL 191",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e2ac25d0eb66de99f098d6669cf4f06796aa6256",
      "candidate_info": {
        "commit_hash": "e2ac25d0eb66de99f098d6669cf4f06796aa6256",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/e2ac25d0eb66de99f098d6669cf4f06796aa6256",
        "files": [
          "lib/net/imap.rb",
          "test/net/imap/test_imap.rb"
        ],
        "message": "Fix StartTLS stripping vulnerability\n\nThis fixes CVE-2021-32066.\nReported by Alexandr Savca in <https://hackerone.com/reports/1178562>.",
        "before_after_code_files": [
          "lib/net/imap.rb||lib/net/imap.rb",
          "test/net/imap/test_imap.rb||test/net/imap/test_imap.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "lib/net/imap.rb||lib/net/imap.rb",
            "test/net/imap/test_imap.rb||test/net/imap/test_imap.rb"
          ],
          "candidate": [
            "lib/net/imap.rb||lib/net/imap.rb",
            "test/net/imap/test_imap.rb||test/net/imap/test_imap.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/net/imap.rb||lib/net/imap.rb": [
          "File: lib/net/imap.rb -> lib/net/imap.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "1218:       end",
          "1219:       resp = @tagged_responses.delete(tag)",
          "1220:       case resp.name",
          "1221:       when /\\A(?:NO)\\z/ni",
          "1222:         raise NoResponseError, resp",
          "1223:       when /\\A(?:BAD)\\z/ni",
          "1224:         raise BadResponseError, resp",
          "1225:       else",
          "1227:       end",
          "1228:     end",
          "",
          "[Removed Lines]",
          "1226:         return resp",
          "",
          "[Added Lines]",
          "1221:       when /\\A(?:OK)\\z/ni",
          "1222:         return resp",
          "1228:         raise UnknownResponseError, resp",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3719:     class ByeResponseError < ResponseError",
          "3720:     end",
          "3722:     RESPONSE_ERRORS = Hash.new(ResponseError)",
          "3723:     RESPONSE_ERRORS[\"NO\"] = NoResponseError",
          "3724:     RESPONSE_ERRORS[\"BAD\"] = BadResponseError",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3724:     # Error raised upon an unknown response from the server.",
          "3725:     class UnknownResponseError < ResponseError",
          "3726:     end",
          "",
          "---------------"
        ],
        "test/net/imap/test_imap.rb||test/net/imap/test_imap.rb": [
          "File: test/net/imap/test_imap.rb -> test/net/imap/test_imap.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "127:         imap.disconnect",
          "128:       end",
          "129:     end",
          "130:   end",
          "132:   def start_server",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131:     def test_starttls_stripping",
          "132:       starttls_stripping_test do |port|",
          "133:         imap = Net::IMAP.new(\"localhost\", :port => port)",
          "134:         assert_raise(Net::IMAP::UnknownResponseError) do",
          "135:           imap.starttls(:ca_file => CA_FILE)",
          "136:         end",
          "137:         imap",
          "138:       end",
          "139:     end",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "834:     end",
          "835:   end",
          "837:   def create_tcp_server",
          "838:     return TCPServer.new(server_addr, 0)",
          "839:   end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "847:   def starttls_stripping_test",
          "848:     server = create_tcp_server",
          "849:     port = server.addr[1]",
          "850:     start_server do",
          "851:       sock = server.accept",
          "852:       begin",
          "853:         sock.print(\"* OK test server\\r\\n\")",
          "854:         sock.gets",
          "855:         sock.print(\"RUBY0001 BUG unhandled command\\r\\n\")",
          "856:       ensure",
          "857:         sock.close",
          "858:         server.close",
          "859:       end",
          "860:     end",
          "861:     begin",
          "862:       imap = yield(port)",
          "863:     ensure",
          "864:       imap.disconnect if imap && !imap.disconnected?",
          "865:     end",
          "866:   end",
          "",
          "---------------"
        ]
      }
    }
  ]
}