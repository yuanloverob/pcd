{
  "cve_id": "CVE-2023-52426",
  "cve_desc": "libexpat through 2.5.0 allows recursive XML Entity Expansion if XML_DTD is undefined at compile time.",
  "repo": "libexpat/libexpat",
  "patch_hash": "0f075ec8ecb5e43f8fdca5182f8cca4703da0404",
  "patch_info": {
    "commit_hash": "0f075ec8ecb5e43f8fdca5182f8cca4703da0404",
    "repo": "libexpat/libexpat",
    "commit_url": "https://github.com/libexpat/libexpat/commit/0f075ec8ecb5e43f8fdca5182f8cca4703da0404",
    "files": [
      "expat/CMakeLists.txt",
      "expat/lib/expat.h",
      "expat/lib/internal.h",
      "expat/lib/libexpat.def.cmake",
      "expat/lib/xmlparse.c",
      "expat/xmlwf/xmlwf.c"
    ],
    "message": "lib|xmlwf|cmake: Extend scope of billion laughs attack protection\n\n.. from \"defined(XML_DTD)\" to \"defined(XML_DTD) || XML_GE==1\".",
    "before_after_code_files": [
      "expat/lib/expat.h||expat/lib/expat.h",
      "expat/lib/internal.h||expat/lib/internal.h",
      "expat/lib/libexpat.def.cmake||expat/lib/libexpat.def.cmake",
      "expat/lib/xmlparse.c||expat/lib/xmlparse.c",
      "expat/xmlwf/xmlwf.c||expat/xmlwf/xmlwf.c"
    ]
  },
  "patch_diff": {
    "expat/lib/expat.h||expat/lib/expat.h": [
      "File: expat/lib/expat.h -> expat/lib/expat.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1038: XMLPARSEAPI(const XML_Feature *)",
      "1039: XML_GetFeatureList(void);",
      "1043: XMLPARSEAPI(XML_Bool)",
      "1044: XML_SetBillionLaughsAttackProtectionMaximumAmplification(",
      "1045:     XML_Parser parser, float maximumAmplificationFactor);",
      "1048: XMLPARSEAPI(XML_Bool)",
      "1049: XML_SetBillionLaughsAttackProtectionActivationThreshold(",
      "1050:     XML_Parser parser, unsigned long long activationThresholdBytes);",
      "",
      "[Removed Lines]",
      "1041: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "1041: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------"
    ],
    "expat/lib/internal.h||expat/lib/internal.h": [
      "File: expat/lib/internal.h -> expat/lib/internal.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "154: void _INTERNAL_trim_to_complete_utf8_characters(const char *from,",
      "155:                                                 const char **fromLimRef);",
      "158: unsigned long long testingAccountingGetCountBytesDirect(XML_Parser parser);",
      "159: unsigned long long testingAccountingGetCountBytesIndirect(XML_Parser parser);",
      "160: const char *unsignedCharToPrintable(unsigned char c);",
      "",
      "[Removed Lines]",
      "157: #if defined(XML_DTD)",
      "",
      "[Added Lines]",
      "157: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------"
    ],
    "expat/lib/libexpat.def.cmake||expat/lib/libexpat.def.cmake": [
      "File: expat/lib/libexpat.def.cmake -> expat/lib/libexpat.def.cmake",
      "--- Hunk 1 ---",
      "[Context before]",
      "75:   XML_SetHashSalt @67",
      "76: ; internal @68 removed with version 2.3.1",
      "77: ; added with version 2.4.0",
      "",
      "[Removed Lines]",
      "78: @_EXPAT_COMMENT_DTD@ XML_SetBillionLaughsAttackProtectionActivationThreshold @69",
      "79: @_EXPAT_COMMENT_DTD@ XML_SetBillionLaughsAttackProtectionMaximumAmplification @70",
      "",
      "[Added Lines]",
      "78: @_EXPAT_COMMENT_DTD_OR_GE@ XML_SetBillionLaughsAttackProtectionActivationThreshold @69",
      "79: @_EXPAT_COMMENT_DTD_OR_GE@ XML_SetBillionLaughsAttackProtectionMaximumAmplification @70",
      "",
      "---------------"
    ],
    "expat/lib/xmlparse.c||expat/lib/xmlparse.c": [
      "File: expat/lib/xmlparse.c -> expat/lib/xmlparse.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "417: };",
      "420: typedef unsigned long long XmlBigCount;",
      "421: typedef struct accounting {",
      "422:   XmlBigCount countBytesDirect;",
      "",
      "[Removed Lines]",
      "419: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "419: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "571: static void parserInit(XML_Parser parser, const XML_Char *encodingName);",
      "574: static float accountingGetCurrentAmplification(XML_Parser rootParser);",
      "575: static void accountingReportStats(XML_Parser originParser, const char *epilog);",
      "576: static void accountingOnAbort(XML_Parser originParser);",
      "",
      "[Removed Lines]",
      "573: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "573: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "718:   enum XML_ParamEntityParsing m_paramEntityParsing;",
      "719: #endif",
      "720:   unsigned long m_hash_secret_salt;",
      "722:   ACCOUNTING m_accounting;",
      "723:   ENTITY_STATS m_entity_stats;",
      "724: #endif",
      "",
      "[Removed Lines]",
      "721: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "721: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1178: #endif",
      "1179:   parser->m_hash_secret_salt = 0;",
      "1182:   memset(&parser->m_accounting, 0, sizeof(ACCOUNTING));",
      "1183:   parser->m_accounting.debugLevel = getDebugLevel(\"EXPAT_ACCOUNTING_DEBUG\", 0u);",
      "1184:   parser->m_accounting.maximumAmplificationFactor",
      "",
      "[Removed Lines]",
      "1181: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "1181: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2534: #ifdef XML_ATTR_INFO",
      "2535:     {XML_FEATURE_ATTR_INFO, XML_L(\"XML_ATTR_INFO\"), 0},",
      "2536: #endif",
      "2539:     {XML_FEATURE_BILLION_LAUGHS_ATTACK_PROTECTION_MAXIMUM_AMPLIFICATION_DEFAULT,",
      "2540:      XML_L(\"XML_BLAP_MAX_AMP\"),",
      "2541:      (long int)",
      "",
      "[Removed Lines]",
      "2537: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "2537: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2550:   return features;",
      "2551: }",
      "2554: XML_Bool XMLCALL",
      "2555: XML_SetBillionLaughsAttackProtectionMaximumAmplification(",
      "2556:     XML_Parser parser, float maximumAmplificationFactor) {",
      "",
      "[Removed Lines]",
      "2553: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "2554: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2658:   int tok = XmlContentTok(parser->m_encoding, start, end, &next);",
      "2659:   switch (tok) {",
      "2660:   case XML_TOK_BOM:",
      "2662:     if (! accountingDiffTolerated(parser, tok, start, next, __LINE__,",
      "2663:                                   XML_ACCOUNT_DIRECT)) {",
      "2664:       accountingOnAbort(parser);",
      "2665:       return XML_ERROR_AMPLIFICATION_LIMIT_BREACH;",
      "2666:     }",
      "2670:        i.e. externalEntityInitProcessor3, to pass control directly to",
      "",
      "[Removed Lines]",
      "2661: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "2662: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2778:   for (;;) {",
      "2780:     int tok = XmlContentTok(enc, s, end, &next);",
      "2782:     const char *accountAfter",
      "2783:         = ((tok == XML_TOK_TRAILING_RSQB) || (tok == XML_TOK_TRAILING_CR))",
      "2784:               ? (haveMore ? s /* i.e. 0 bytes */ : end)",
      "",
      "[Removed Lines]",
      "2781: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "2782: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2844:       XML_Char ch = (XML_Char)XmlPredefinedEntityName(",
      "2845:           enc, s + enc->minBytesPerChar, next - enc->minBytesPerChar);",
      "2846:       if (ch) {",
      "2851:         accountingDiffTolerated(parser, tok, (char *)&ch,",
      "2852:                                 ((char *)&ch) + sizeof(XML_Char), __LINE__,",
      "2853:                                 XML_ACCOUNT_ENTITY_EXPANSION);",
      "2855:         if (parser->m_characterDataHandler)",
      "2856:           parser->m_characterDataHandler(parser->m_handlerArg, &ch, 1);",
      "2857:         else if (parser->m_defaultHandler)",
      "",
      "[Removed Lines]",
      "2847: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "2848: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "4053:   for (;;) {",
      "4055:     int tok = XmlCdataSectionTok(enc, s, end, &next);",
      "4057:     if (! accountingDiffTolerated(parser, tok, s, next, __LINE__, account)) {",
      "4058:       accountingOnAbort(parser);",
      "4059:       return XML_ERROR_AMPLIFICATION_LIMIT_BREACH;",
      "",
      "[Removed Lines]",
      "4056: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "4057: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "4207:   tok = XmlIgnoreSectionTok(enc, s, end, &next);",
      "4209:   if (! accountingDiffTolerated(parser, tok, s, next, __LINE__,",
      "4210:                                 XML_ACCOUNT_DIRECT)) {",
      "4211:     accountingOnAbort(parser);",
      "",
      "[Removed Lines]",
      "4208: #  ifdef XML_DTD",
      "",
      "[Added Lines]",
      "4209: #  if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "4297:   const XML_Char *storedversion = NULL;",
      "4298:   int standalone = -1;",
      "4301:   if (! accountingDiffTolerated(parser, XML_TOK_XML_DECL, s, next, __LINE__,",
      "4302:                                 XML_ACCOUNT_DIRECT)) {",
      "4303:     accountingOnAbort(parser);",
      "",
      "[Removed Lines]",
      "4300: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "4301: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "4504:        is not valid to have multiple BOMs.",
      "4506:     else if (tok == XML_TOK_BOM) {",
      "4508:       if (! accountingDiffTolerated(parser, tok, s, next, __LINE__,",
      "4509:                                     XML_ACCOUNT_DIRECT)) {",
      "4510:         accountingOnAbort(parser);",
      "",
      "[Removed Lines]",
      "4507: #  ifdef XML_DTD",
      "",
      "[Added Lines]",
      "4508: #  if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "4720:       }",
      "4721:     }",
      "4722:     role = XmlTokenRole(&parser->m_prologState, tok, s, next, enc);",
      "4724:     switch (role) {",
      "4725:     case XML_ROLE_INSTANCE_START: // bytes accounted in contentProcessor",
      "4726:     case XML_ROLE_XML_DECL:       // bytes accounted in processXmlDecl",
      "4728:       break;",
      "4729:     default:",
      "4730:       if (! accountingDiffTolerated(parser, tok, s, next, __LINE__, account)) {",
      "",
      "[Removed Lines]",
      "4723: #ifdef XML_DTD",
      "4727:     case XML_ROLE_TEXT_DECL:      // bytes accounted in processXmlDecl",
      "",
      "[Added Lines]",
      "4724: #if defined(XML_DTD) || XML_GE == 1",
      "4728: #  ifdef XML_DTD",
      "4729:     case XML_ROLE_TEXT_DECL: // bytes accounted in processXmlDecl",
      "4730: #  endif",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "5661:   for (;;) {",
      "5662:     const char *next = NULL;",
      "5663:     int tok = XmlPrologTok(parser->m_encoding, s, end, &next);",
      "5665:     if (! accountingDiffTolerated(parser, tok, s, next, __LINE__,",
      "5666:                                   XML_ACCOUNT_DIRECT)) {",
      "5667:       accountingOnAbort(parser);",
      "",
      "[Removed Lines]",
      "5664: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "5667: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "5741:       return XML_ERROR_NO_MEMORY;",
      "5742:   }",
      "5743:   entity->open = XML_TRUE;",
      "5745:   entityTrackingOnOpen(parser, entity, __LINE__);",
      "5746: #endif",
      "5747:   entity->processed = 0;",
      "",
      "[Removed Lines]",
      "5744: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "5747: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "5775:       entity->processed = (int)(next - textStart);",
      "5776:       parser->m_processor = internalEntityProcessor;",
      "5777:     } else {",
      "5779:       entityTrackingOnClose(parser, entity, __LINE__);",
      "5781:       entity->open = XML_FALSE;",
      "5782:       parser->m_openInternalEntities = openEntity->next;",
      "",
      "[Removed Lines]",
      "5778: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "5781: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "5826:     return result;",
      "5827:   }",
      "5830:   entityTrackingOnClose(parser, entity, __LINE__);",
      "5831: #endif",
      "5832:   entity->open = XML_FALSE;",
      "",
      "[Removed Lines]",
      "5829: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "5832: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "5905:     const char *next",
      "5907:     int tok = XmlAttributeValueTok(enc, ptr, end, &next);",
      "5909:     if (! accountingDiffTolerated(parser, tok, ptr, next, __LINE__, account)) {",
      "5910:       accountingOnAbort(parser);",
      "5911:       return XML_ERROR_AMPLIFICATION_LIMIT_BREACH;",
      "",
      "[Removed Lines]",
      "5908: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "5911: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "5970:       XML_Char ch = (XML_Char)XmlPredefinedEntityName(",
      "5971:           enc, ptr + enc->minBytesPerChar, next - enc->minBytesPerChar);",
      "5972:       if (ch) {",
      "5977:         accountingDiffTolerated(parser, tok, (char *)&ch,",
      "5978:                                 ((char *)&ch) + sizeof(XML_Char), __LINE__,",
      "5979:                                 XML_ACCOUNT_ENTITY_EXPANSION);",
      "5981:         if (! poolAppendChar(pool, ch))",
      "5982:           return XML_ERROR_NO_MEMORY;",
      "5983:         break;",
      "",
      "[Removed Lines]",
      "5973: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "5976: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "6055:         enum XML_Error result;",
      "6056:         const XML_Char *textEnd = entity->textPtr + entity->textLen;",
      "6057:         entity->open = XML_TRUE;",
      "6059:         entityTrackingOnOpen(parser, entity, __LINE__);",
      "6060: #endif",
      "6061:         result = appendAttributeValue(parser, parser->m_internalEncoding,",
      "6062:                                       isCdata, (const char *)entity->textPtr,",
      "6063:                                       (const char *)textEnd, pool,",
      "6064:                                       XML_ACCOUNT_ENTITY_EXPANSION);",
      "6066:         entityTrackingOnClose(parser, entity, __LINE__);",
      "6067: #endif",
      "6068:         entity->open = XML_FALSE;",
      "",
      "[Removed Lines]",
      "6058: #ifdef XML_DTD",
      "6065: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "6061: #if defined(XML_DTD) || XML_GE == 1",
      "6068: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "6119:     int tok = XmlEntityValueTok(enc, entityTextPtr, entityTextEnd, &next);",
      "6122:     if (! accountingDiffTolerated(parser, tok, entityTextPtr, next, __LINE__,",
      "6123:                                   account)) {",
      "6124:       accountingOnAbort(parser);",
      "",
      "[Removed Lines]",
      "6121: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "6124: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "7669:   return result;",
      "7670: }",
      "7674: static float",
      "7675: accountingGetCurrentAmplification(XML_Parser rootParser) {",
      "",
      "[Removed Lines]",
      "7672: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "7675: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------"
    ],
    "expat/xmlwf/xmlwf.c||expat/xmlwf/xmlwf.c": [
      "File: expat/xmlwf/xmlwf.c -> expat/xmlwf/xmlwf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1096:             \" (needs a floating point number greater or equal than 1.0)\"));",
      "1097:         exit(XMLWF_EXIT_USAGE_ERROR);",
      "1098:       }",
      "1102: #endif",
      "1103:       break;",
      "1104:     }",
      "",
      "[Removed Lines]",
      "1099: #ifndef XML_DTD",
      "1100:       ftprintf(stderr, T(\"Warning: Given amplification limit ignored\") T(",
      "1101:                            \", xmlwf has been compiled without DTD support.\\n\"));",
      "",
      "[Added Lines]",
      "1099: #if ! defined(XML_DTD) && XML_GE == 0",
      "1100:       ftprintf(stderr,",
      "1101:                T(\"Warning: Given amplification limit ignored\")",
      "1102:                    T(\", xmlwf has been compiled without DTD/GE support.\\n\"));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1117:         exit(XMLWF_EXIT_USAGE_ERROR);",
      "1118:       }",
      "1119:       attackThresholdGiven = XML_TRUE;",
      "1123: #endif",
      "1124:       break;",
      "1125:     }",
      "",
      "[Removed Lines]",
      "1120: #ifndef XML_DTD",
      "1121:       ftprintf(stderr, T(\"Warning: Given attack threshold ignored\") T(",
      "1122:                            \", xmlwf has been compiled without DTD support.\\n\"));",
      "",
      "[Added Lines]",
      "1121: #if ! defined(XML_DTD) && XML_GE == 0",
      "1122:       ftprintf(stderr,",
      "1123:                T(\"Warning: Given attack threshold ignored\")",
      "1124:                    T(\", xmlwf has been compiled without DTD/GE support.\\n\"));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1155:     }",
      "1157:     if (attackMaximumAmplification != -1.0f) {",
      "1159:       XML_SetBillionLaughsAttackProtectionMaximumAmplification(",
      "1160:           parser, attackMaximumAmplification);",
      "1161: #endif",
      "1162:     }",
      "1163:     if (attackThresholdGiven) {",
      "1165:       XML_SetBillionLaughsAttackProtectionActivationThreshold(",
      "1166:           parser, attackThresholdBytes);",
      "1167: #else",
      "",
      "[Removed Lines]",
      "1158: #ifdef XML_DTD",
      "1164: #ifdef XML_DTD",
      "",
      "[Added Lines]",
      "1160: #if defined(XML_DTD) || XML_GE == 1",
      "1166: #if defined(XML_DTD) || XML_GE == 1",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d269f9097537eeb5237086b149c3a8061bb256a2",
      "candidate_info": {
        "commit_hash": "d269f9097537eeb5237086b149c3a8061bb256a2",
        "repo": "libexpat/libexpat",
        "commit_url": "https://github.com/libexpat/libexpat/commit/d269f9097537eeb5237086b149c3a8061bb256a2",
        "files": [
          "expat/coverage.sh"
        ],
        "message": "coverage.sh: Cover XML_DTD undefined (with and without XML_GE)",
        "before_after_code_files": [
          "expat/coverage.sh||expat/coverage.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libexpat/libexpat/pull/777"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "expat/coverage.sh||expat/coverage.sh": [
          "File: expat/coverage.sh -> expat/coverage.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:         m32_part=__m32",
          "69:     fi",
          "72: }",
          "",
          "[Removed Lines]",
          "71:     echo \"build__${version}__xml_context_${xml_context}${libbsd_part}${mingw_part}${char_part}${xml_attr_part}${m32_part}\"",
          "",
          "[Added Lines]",
          "71:     local ge_part=",
          "72:     if ${with_ge}; then",
          "73:         ge_part=__ge",
          "74:     fi",
          "76:     local dtd_part=",
          "77:     if ${with_dtd}; then",
          "78:         dtd_part=__dtd",
          "79:     fi",
          "81:     echo \"build__${version}__xml_context_${xml_context}${libbsd_part}${mingw_part}${char_part}${ge_part}${dtd_part}${xml_attr_part}${m32_part}\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:     ${with_libbsd} && cmake_args+=( -DEXPAT_WITH_LIBBSD=ON )",
          "96:     ${with_mingw} && cmake_args+=( -DCMAKE_TOOLCHAIN_FILE=\"${abs_source_dir}\"/cmake/mingw-toolchain.cmake )",
          "97:     ${with_m32} && cmake_args+=( -D_EXPAT_M32=ON )",
          "99:     (",
          "100:         set -x",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "108:     ${with_ge} || cmake_args+=( -DEXPAT_GE=OFF )",
          "109:     ${with_dtd} || cmake_args+=( -DEXPAT_DTD=OFF )",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "184:         fi",
          "186:         set -x",
          "189:         lcov -c -d \"${capture_dir}\" -o \"${coverage_info}-test\" &>> run.log",
          "190:         lcov \\",
          "",
          "[Removed Lines]",
          "187:         make CTEST_OUTPUT_ON_FAILURE=1 test run-xmltest",
          "",
          "[Added Lines]",
          "199:         make CTEST_OUTPUT_ON_FAILURE=1 test",
          "200:         if ${with_dtd}; then",
          "201:             make run-xmltest",
          "202:         fi",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "291:     with_unsigned_char=false",
          "292:     with_libbsd=false",
          "293:     with_m32=false",
          "294:     for with_mingw in true false ; do",
          "295:         for unicode_enabled in true false ; do",
          "296:             if ${unicode_enabled} && ! ${with_mingw} ; then",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "309:     with_dtd=true",
          "310:     with_ge=true",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "309:     with_libbsd=true _build_case",
          "310:     with_unsigned_char=true _build_case",
          "311:     with_m32=true _build_case",
          "313:     echo",
          "314:     echo 'Merging coverage files...'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "329:     with_dtd=false with_ge=true _build_case",
          "330:     with_dtd=false with_ge=false _build_case",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "daa89e42c005cc7f4f7af9eee271ae0723d30300",
      "candidate_info": {
        "commit_hash": "daa89e42c005cc7f4f7af9eee271ae0723d30300",
        "repo": "libexpat/libexpat",
        "commit_url": "https://github.com/libexpat/libexpat/commit/daa89e42c005cc7f4f7af9eee271ae0723d30300",
        "files": [
          ".github/workflows/data/expat_config_h_cmake__expected.txt",
          "expat/CMakeLists.txt",
          "expat/expat_config.h.cmake"
        ],
        "message": "cmake: Introduce option EXPAT_GE to control macro XML_GE",
        "before_after_code_files": [
          "expat/expat_config.h.cmake||expat/expat_config.h.cmake"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libexpat/libexpat/pull/777"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "expat/expat_config.h.cmake||expat/expat_config.h.cmake": [
          "File: expat/expat_config.h.cmake -> expat/expat_config.h.cmake",
          "--- Hunk 1 ---",
          "[Context before]",
          "106: #cmakedefine XML_DTD",
          "109: #cmakedefine XML_NS",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "109: #define XML_GE @XML_GE@",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "00089ed7455ff414fd9fdbff3959a44e59bcfafb",
      "candidate_info": {
        "commit_hash": "00089ed7455ff414fd9fdbff3959a44e59bcfafb",
        "repo": "libexpat/libexpat",
        "commit_url": "https://github.com/libexpat/libexpat/commit/00089ed7455ff414fd9fdbff3959a44e59bcfafb",
        "files": [
          "expat/tests/acc_tests.c",
          "expat/tests/alloc_tests.c",
          "expat/tests/basic_tests.c",
          "expat/tests/common.c",
          "expat/tests/common.h",
          "expat/tests/handlers.c",
          "expat/tests/handlers.h",
          "expat/tests/ns_tests.c",
          "expat/tests/nsalloc_tests.c",
          "expat/tests/runtests.c"
        ],
        "message": "tests: Fix tests for XML_GE==0 + broaden for XML_GE==1",
        "before_after_code_files": [
          "expat/tests/acc_tests.c||expat/tests/acc_tests.c",
          "expat/tests/alloc_tests.c||expat/tests/alloc_tests.c",
          "expat/tests/basic_tests.c||expat/tests/basic_tests.c",
          "expat/tests/common.c||expat/tests/common.c",
          "expat/tests/common.h||expat/tests/common.h",
          "expat/tests/handlers.c||expat/tests/handlers.c",
          "expat/tests/handlers.h||expat/tests/handlers.h",
          "expat/tests/ns_tests.c||expat/tests/ns_tests.c",
          "expat/tests/nsalloc_tests.c||expat/tests/nsalloc_tests.c",
          "expat/tests/runtests.c||expat/tests/runtests.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libexpat/libexpat/pull/777"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "expat/tests/acc_tests.c||expat/tests/acc_tests.c": [
          "File: expat/tests/acc_tests.c -> expat/tests/acc_tests.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: #include \"handlers.h\"",
          "55: #include \"acc_tests.h\"",
          "58: START_TEST(test_accounting_precision) {",
          "59:   struct AccountingTestCase cases[] = {",
          "231:   };",
          "233:   const size_t countCases = sizeof(cases) / sizeof(cases[0]);",
          "",
          "[Removed Lines]",
          "57: #if defined(XML_DTD)",
          "60:       {\"<e/>\", NULL, NULL, 0},",
          "61:       {\"<e></e>\", NULL, NULL, 0},",
          "64:       {\"<e k1=\\\"v2\\\" k2=\\\"v2\\\"/>\", NULL, NULL, 0},",
          "65:       {\"<e k1=\\\"v2\\\" k2=\\\"v2\\\"></e>\", NULL, NULL, 0},",
          "66:       {\"<p:e xmlns:p=\\\"https://domain.invalid/\\\" />\", NULL, NULL, 0},",
          "67:       {\"<e k=\\\"&amp;&apos;&gt;&lt;&quot;\\\" />\", NULL, NULL,",
          "68:        sizeof(XML_Char) * 5 /* number of predefined entities */},",
          "69:       {\"<e1 xmlns='https://example.org/'>\\n\"",
          "70:        \"  <e2 xmlns=''/>\\n\"",
          "71:        \"</e1>\",",
          "72:        NULL, NULL, 0},",
          "75:       {\"<e>text</e>\", NULL, NULL, 0},",
          "76:       {\"<e1><e2>text1<e3/>text2</e2></e1>\", NULL, NULL, 0},",
          "77:       {\"<e>&amp;&apos;&gt;&lt;&quot;</e>\", NULL, NULL,",
          "78:        sizeof(XML_Char) * 5 /* number of predefined entities */},",
          "79:       {\"<e>&#65;&#41;</e>\", NULL, NULL, 0},",
          "82:       {\"<?xml version=\\\"1.0\\\"?><root/>\", NULL, NULL, 0},",
          "85:       {\"  <e1>  <e2>  </e2>  </e1>  \", NULL, NULL, 0},",
          "86:       {\"<e1  ><e2  /></e1  >\", NULL, NULL, 0},",
          "87:       {\"<e1><e2 k = \\\"v\\\"/><e3 k = 'v'/></e1>\", NULL, NULL, 0},",
          "90:       {\"<!-- Comment --><e><!-- Comment --></e>\", NULL, NULL, 0},",
          "93:       {\"<?xml-stylesheet type=\\\"text/xsl\\\" href=\\\"https://domain.invalid/\\\" media=\\\"all\\\"?><e/>\",",
          "94:        NULL, NULL, 0},",
          "95:       {\"<?pi0?><?pi1 ?><?pi2  ?><!DOCTYPE r SYSTEM 'first.ent'><r/>\",",
          "96:        \"<?pi3?><!ENTITY % e1 SYSTEM 'second.ent'><?pi4?>%e1;<?pi5?>\", \"<?pi6?>\",",
          "97:        0},",
          "100:       {\"<e><![CDATA[one two three]]></e>\", NULL, NULL, 0},",
          "102:          https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=34302",
          "103:          https://oss-fuzz.com/testcase-detail/4860575394955264",
          "105:       {\"<!DOCTYPE r [\\n\"",
          "106:        \"<!ENTITY e \\\"111<![CDATA[2 <= 2]]>333\\\">\\n\"",
          "107:        \"]>\\n\"",
          "108:        \"<r>&e;</r>\\n\",",
          "109:        NULL, NULL, sizeof(XML_Char) * strlen(\"111<![CDATA[2 <= 2]]>333\")},",
          "112:       {\"<!DOCTYPE r [\\n\"",
          "113:        \"<!ENTITY % draft 'INCLUDE'>\\n\"",
          "114:        \"<!ENTITY % final 'IGNORE'>\\n\"",
          "115:        \"<!ENTITY % import SYSTEM \\\"first.ent\\\">\\n\"",
          "116:        \"%import;\\n\"",
          "117:        \"]>\\n\"",
          "118:        \"<r/>\\n\",",
          "119:        \"<![%draft;[<!--1-->]]>\\n\"",
          "120:        \"<![%final;[<!--22-->]]>\",",
          "121:        NULL, sizeof(XML_Char) * (strlen(\"INCLUDE\") + strlen(\"IGNORE\"))},",
          "124:       {\"<!DOCTYPE root [\\n\"",
          "125:        \"<!ENTITY nine \\\"123456789\\\">\\n\"",
          "126:        \"]>\\n\"",
          "127:        \"<root>&nine;</root>\",",
          "128:        NULL, NULL, sizeof(XML_Char) * strlen(\"123456789\")},",
          "129:       {\"<!DOCTYPE root [\\n\"",
          "130:        \"<!ENTITY nine \\\"123456789\\\">\\n\"",
          "131:        \"]>\\n\"",
          "132:        \"<root k1=\\\"&nine;\\\"/>\",",
          "133:        NULL, NULL, sizeof(XML_Char) * strlen(\"123456789\")},",
          "134:       {\"<!DOCTYPE root [\\n\"",
          "135:        \"<!ENTITY nine \\\"123456789\\\">\\n\"",
          "136:        \"<!ENTITY nine2 \\\"&nine;&nine;\\\">\\n\"",
          "137:        \"]>\\n\"",
          "138:        \"<root>&nine2;&nine2;&nine2;</root>\",",
          "139:        NULL, NULL,",
          "142:       {\"<!DOCTYPE r [\\n\"",
          "143:        \"  <!ENTITY five SYSTEM 'first.ent'>\\n\"",
          "144:        \"]>\\n\"",
          "145:        \"<r>&five;</r>\",",
          "146:        \"12345\", NULL, 0},",
          "147:       {\"<!DOCTYPE r [\\n\"",
          "148:        \"  <!ENTITY five SYSTEM 'first.ent'>\\n\"",
          "149:        \"]>\\n\"",
          "150:        \"<r>&five;</r>\",",
          "151:        \"\\xEF\\xBB\\xBF\" /* UTF-8 BOM */, NULL, 0},",
          "154:       {\"<!DOCTYPE r [\\n\"",
          "155:        \"<!ENTITY % comment \\\"<!---->\\\">\\n\"",
          "156:        \"%comment;\\n\"",
          "157:        \"]>\\n\"",
          "158:        \"<r/>\",",
          "159:        NULL, NULL, sizeof(XML_Char) * strlen(\"<!---->\")},",
          "160:       {\"<!DOCTYPE r [\\n\"",
          "161:        \"<!ENTITY % ninedef \\\"&#60;!ENTITY nine &#34;123456789&#34;&#62;\\\">\\n\"",
          "162:        \"%ninedef;\\n\"",
          "163:        \"]>\\n\"",
          "164:        \"<r>&nine;</r>\",",
          "165:        NULL, NULL,",
          "166:        sizeof(XML_Char)",
          "168:       {\"<!DOCTYPE r [\\n\"",
          "169:        \"<!ENTITY % comment \\\"<!--1-->\\\">\\n\"",
          "170:        \"<!ENTITY % comment2 \\\"&#37;comment;<!--22-->&#37;comment;\\\">\\n\"",
          "171:        \"%comment2;\\n\"",
          "172:        \"]>\\n\"",
          "173:        \"<r/>\\n\",",
          "174:        NULL, NULL,",
          "175:        sizeof(XML_Char)",
          "177:       {\"<!DOCTYPE r [\\n\"",
          "178:        \"  <!ENTITY % five \\\"12345\\\">\\n\"",
          "179:        \"  <!ENTITY % five2def \\\"&#60;!ENTITY five2 &#34;[&#37;five;][&#37;five;]]]]&#34;&#62;\\\">\\n\"",
          "180:        \"  %five2def;\\n\"",
          "181:        \"]>\\n\"",
          "182:        \"<r>&five2;</r>\",",
          "184:        sizeof(XML_Char)",
          "186:               + 2 /* calls to \"%five;\" */ * strlen(\"12345\")",
          "187:               + /* from \"&five2;\": */ strlen(\"[12345][12345]]]]\"))},",
          "188:       {\"<!DOCTYPE r SYSTEM \\\"first.ent\\\">\\n\"",
          "189:        \"<r/>\",",
          "190:        \"<!ENTITY % comment '<!--1-->'>\\n\"",
          "191:        \"<!ENTITY % comment2 '<!--22-->%comment;<!--22-->%comment;<!--22-->'>\\n\"",
          "192:        \"%comment2;\",",
          "193:        NULL,",
          "194:        sizeof(XML_Char)",
          "196:               + 2 /* calls to \"%comment;\" */ * strlen(\"<!---->\"))},",
          "197:       {\"<!DOCTYPE r SYSTEM 'first.ent'>\\n\"",
          "198:        \"<r/>\",",
          "199:        \"<!ENTITY % e1 PUBLIC 'foo' 'second.ent'>\\n\"",
          "200:        \"<!ENTITY % e2 '<!--22-->%e1;<!--22-->'>\\n\"",
          "201:        \"%e2;\\n\",",
          "202:        \"<!--1-->\", sizeof(XML_Char) * strlen(\"<!--22--><!--1--><!--22-->\")},",
          "203:       {",
          "204:           \"<!DOCTYPE r SYSTEM 'first.ent'>\\n\"",
          "205:           \"<r/>\",",
          "206:           \"<!ENTITY % e1 SYSTEM 'second.ent'>\\n\"",
          "207:           \"<!ENTITY % e2 '%e1;'>\",",
          "208:           \"<?xml version='1.0' encoding='utf-8'?>\\n\"",
          "209:           \"hello\\n\"",
          "210:           \"xml\" /* without trailing newline! */,",
          "211:           0,",
          "212:       },",
          "213:       {",
          "214:           \"<!DOCTYPE r SYSTEM 'first.ent'>\\n\"",
          "215:           \"<r/>\",",
          "216:           \"<!ENTITY % e1 SYSTEM 'second.ent'>\\n\"",
          "217:           \"<!ENTITY % e2 '%e1;'>\",",
          "218:           \"<?xml version='1.0' encoding='utf-8'?>\\n\"",
          "219:           \"hello\\n\"",
          "220:           \"xml\\n\" /* with trailing newline! */,",
          "221:           0,",
          "222:       },",
          "223:       {\"<!DOCTYPE doc SYSTEM 'first.ent'>\\n\"",
          "224:        \"<doc></doc>\\n\",",
          "225:        \"<!ELEMENT doc EMPTY>\\n\"",
          "226:        \"<!ENTITY % e1 SYSTEM 'second.ent'>\\n\"",
          "227:        \"<!ENTITY % e2 '%e1;'>\\n\"",
          "228:        \"%e1;\\n\",",
          "229:        \"\\xEF\\xBB\\xBF<!ATTLIST doc a1 CDATA 'value'>\" /* UTF-8 BOM */,",
          "230:        strlen(\"\\xEF\\xBB\\xBF<!ATTLIST doc a1 CDATA 'value'>\")},",
          "",
          "[Added Lines]",
          "57: #if defined(XML_DTD) || XML_GE == 1",
          "60:     {\"<e/>\", NULL, NULL, 0},",
          "61:     {\"<e></e>\", NULL, NULL, 0},",
          "64:     {\"<e k1=\\\"v2\\\" k2=\\\"v2\\\"/>\", NULL, NULL, 0},",
          "65:     {\"<e k1=\\\"v2\\\" k2=\\\"v2\\\"></e>\", NULL, NULL, 0},",
          "66:     {\"<p:e xmlns:p=\\\"https://domain.invalid/\\\" />\", NULL, NULL, 0},",
          "67:     {\"<e k=\\\"&amp;&apos;&gt;&lt;&quot;\\\" />\", NULL, NULL,",
          "68:      sizeof(XML_Char) * 5 /* number of predefined entities */},",
          "69:     {\"<e1 xmlns='https://example.org/'>\\n\"",
          "70:      \"  <e2 xmlns=''/>\\n\"",
          "71:      \"</e1>\",",
          "72:      NULL, NULL, 0},",
          "75:     {\"<e>text</e>\", NULL, NULL, 0},",
          "76:     {\"<e1><e2>text1<e3/>text2</e2></e1>\", NULL, NULL, 0},",
          "77:     {\"<e>&amp;&apos;&gt;&lt;&quot;</e>\", NULL, NULL,",
          "78:      sizeof(XML_Char) * 5 /* number of predefined entities */},",
          "79:     {\"<e>&#65;&#41;</e>\", NULL, NULL, 0},",
          "82:     {\"<?xml version=\\\"1.0\\\"?><root/>\", NULL, NULL, 0},",
          "85:     {\"  <e1>  <e2>  </e2>  </e1>  \", NULL, NULL, 0},",
          "86:     {\"<e1  ><e2  /></e1  >\", NULL, NULL, 0},",
          "87:     {\"<e1><e2 k = \\\"v\\\"/><e3 k = 'v'/></e1>\", NULL, NULL, 0},",
          "90:     {\"<!-- Comment --><e><!-- Comment --></e>\", NULL, NULL, 0},",
          "93:     {\"<?xml-stylesheet type=\\\"text/xsl\\\" href=\\\"https://domain.invalid/\\\" media=\\\"all\\\"?><e/>\",",
          "94:      NULL, NULL, 0},",
          "95:     {\"<?pi0?><?pi1 ?><?pi2  ?><r/><?pi4?>\", NULL, NULL, 0},",
          "96: #  ifdef XML_DTD",
          "97:     {\"<?pi0?><?pi1 ?><?pi2  ?><!DOCTYPE r SYSTEM 'first.ent'><r/>\",",
          "98:      \"<?pi3?><!ENTITY % e1 SYSTEM 'second.ent'><?pi4?>%e1;<?pi5?>\", \"<?pi6?>\",",
          "99:      0},",
          "103:     {\"<e><![CDATA[one two three]]></e>\", NULL, NULL, 0},",
          "105:      https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=34302",
          "106:      https://oss-fuzz.com/testcase-detail/4860575394955264",
          "108: #  if XML_GE == 1",
          "109:     {\"<!DOCTYPE r [\\n\"",
          "110:      \"<!ENTITY e \\\"111<![CDATA[2 <= 2]]>333\\\">\\n\"",
          "111:      \"]>\\n\"",
          "112:      \"<r>&e;</r>\\n\",",
          "113:      NULL, NULL, sizeof(XML_Char) * strlen(\"111<![CDATA[2 <= 2]]>333\")},",
          "116: #  ifdef XML_DTD",
          "118:     {\"<!DOCTYPE r [\\n\"",
          "119:      \"<!ENTITY % draft 'INCLUDE'>\\n\"",
          "120:      \"<!ENTITY % final 'IGNORE'>\\n\"",
          "121:      \"<!ENTITY % import SYSTEM \\\"first.ent\\\">\\n\"",
          "122:      \"%import;\\n\"",
          "123:      \"]>\\n\"",
          "124:      \"<r/>\\n\",",
          "125:      \"<![%draft;[<!--1-->]]>\\n\"",
          "126:      \"<![%final;[<!--22-->]]>\",",
          "127:      NULL, sizeof(XML_Char) * (strlen(\"INCLUDE\") + strlen(\"IGNORE\"))},",
          "131: #  if XML_GE == 1",
          "132:     {\"<!DOCTYPE root [\\n\"",
          "133:      \"<!ENTITY nine \\\"123456789\\\">\\n\"",
          "134:      \"]>\\n\"",
          "135:      \"<root>&nine;</root>\",",
          "136:      NULL, NULL, sizeof(XML_Char) * strlen(\"123456789\")},",
          "137:     {\"<!DOCTYPE root [\\n\"",
          "138:      \"<!ENTITY nine \\\"123456789\\\">\\n\"",
          "139:      \"]>\\n\"",
          "140:      \"<root k1=\\\"&nine;\\\"/>\",",
          "141:      NULL, NULL, sizeof(XML_Char) * strlen(\"123456789\")},",
          "142:     {\"<!DOCTYPE root [\\n\"",
          "143:      \"<!ENTITY nine \\\"123456789\\\">\\n\"",
          "144:      \"<!ENTITY nine2 \\\"&nine;&nine;\\\">\\n\"",
          "145:      \"]>\\n\"",
          "146:      \"<root>&nine2;&nine2;&nine2;</root>\",",
          "147:      NULL, NULL,",
          "150:     {\"<!DOCTYPE r [\\n\"",
          "151:      \"  <!ENTITY five SYSTEM 'first.ent'>\\n\"",
          "152:      \"]>\\n\"",
          "153:      \"<r>&five;</r>\",",
          "154:      \"12345\", NULL, 0},",
          "155:     {\"<!DOCTYPE r [\\n\"",
          "156:      \"  <!ENTITY five SYSTEM 'first.ent'>\\n\"",
          "157:      \"]>\\n\"",
          "158:      \"<r>&five;</r>\",",
          "159:      \"\\xEF\\xBB\\xBF\" /* UTF-8 BOM */, NULL, 0},",
          "162: #  ifdef XML_DTD",
          "164:     {\"<!DOCTYPE r [\\n\"",
          "165:      \"<!ENTITY % comment \\\"<!---->\\\">\\n\"",
          "166:      \"%comment;\\n\"",
          "167:      \"]>\\n\"",
          "168:      \"<r/>\",",
          "169:      NULL, NULL, sizeof(XML_Char) * strlen(\"<!---->\")},",
          "170:     {\"<!DOCTYPE r [\\n\"",
          "171:      \"<!ENTITY % ninedef \\\"&#60;!ENTITY nine &#34;123456789&#34;&#62;\\\">\\n\"",
          "172:      \"%ninedef;\\n\"",
          "173:      \"]>\\n\"",
          "174:      \"<r>&nine;</r>\",",
          "175:      NULL, NULL,",
          "176:      sizeof(XML_Char)",
          "178:     {\"<!DOCTYPE r [\\n\"",
          "179:      \"<!ENTITY % comment \\\"<!--1-->\\\">\\n\"",
          "180:      \"<!ENTITY % comment2 \\\"&#37;comment;<!--22-->&#37;comment;\\\">\\n\"",
          "181:      \"%comment2;\\n\"",
          "182:      \"]>\\n\"",
          "183:      \"<r/>\\n\",",
          "184:      NULL, NULL,",
          "185:      sizeof(XML_Char)",
          "187:     {\"<!DOCTYPE r [\\n\"",
          "188:      \"  <!ENTITY % five \\\"12345\\\">\\n\"",
          "189:      \"  <!ENTITY % five2def \\\"&#60;!ENTITY five2 &#34;[&#37;five;][&#37;five;]]]]&#34;&#62;\\\">\\n\"",
          "190:      \"  %five2def;\\n\"",
          "191:      \"]>\\n\"",
          "192:      \"<r>&five2;</r>\",",
          "194:      sizeof(XML_Char)",
          "196:             + 2 /* calls to \"%five;\" */ * strlen(\"12345\")",
          "197:             + /* from \"&five2;\": */ strlen(\"[12345][12345]]]]\"))},",
          "198:     {\"<!DOCTYPE r SYSTEM \\\"first.ent\\\">\\n\"",
          "199:      \"<r/>\",",
          "200:      \"<!ENTITY % comment '<!--1-->'>\\n\"",
          "201:      \"<!ENTITY % comment2 '<!--22-->%comment;<!--22-->%comment;<!--22-->'>\\n\"",
          "202:      \"%comment2;\",",
          "203:      NULL,",
          "204:      sizeof(XML_Char)",
          "206:             + 2 /* calls to \"%comment;\" */ * strlen(\"<!---->\"))},",
          "207:     {\"<!DOCTYPE r SYSTEM 'first.ent'>\\n\"",
          "208:      \"<r/>\",",
          "209:      \"<!ENTITY % e1 PUBLIC 'foo' 'second.ent'>\\n\"",
          "210:      \"<!ENTITY % e2 '<!--22-->%e1;<!--22-->'>\\n\"",
          "211:      \"%e2;\\n\",",
          "212:      \"<!--1-->\", sizeof(XML_Char) * strlen(\"<!--22--><!--1--><!--22-->\")},",
          "213:     {",
          "214:         \"<!DOCTYPE r SYSTEM 'first.ent'>\\n\"",
          "215:         \"<r/>\",",
          "216:         \"<!ENTITY % e1 SYSTEM 'second.ent'>\\n\"",
          "217:         \"<!ENTITY % e2 '%e1;'>\",",
          "218:         \"<?xml version='1.0' encoding='utf-8'?>\\n\"",
          "219:         \"hello\\n\"",
          "220:         \"xml\" /* without trailing newline! */,",
          "221:         0,",
          "222:     },",
          "223:     {",
          "224:         \"<!DOCTYPE r SYSTEM 'first.ent'>\\n\"",
          "225:         \"<r/>\",",
          "226:         \"<!ENTITY % e1 SYSTEM 'second.ent'>\\n\"",
          "227:         \"<!ENTITY % e2 '%e1;'>\",",
          "228:         \"<?xml version='1.0' encoding='utf-8'?>\\n\"",
          "229:         \"hello\\n\"",
          "230:         \"xml\\n\" /* with trailing newline! */,",
          "231:         0,",
          "232:     },",
          "233:     {\"<!DOCTYPE doc SYSTEM 'first.ent'>\\n\"",
          "234:      \"<doc></doc>\\n\",",
          "235:      \"<!ELEMENT doc EMPTY>\\n\"",
          "236:      \"<!ENTITY % e1 SYSTEM 'second.ent'>\\n\"",
          "237:      \"<!ENTITY % e2 '%e1;'>\\n\"",
          "238:      \"%e1;\\n\",",
          "239:      \"\\xEF\\xBB\\xBF<!ATTLIST doc a1 CDATA 'value'>\" /* UTF-8 BOM */,",
          "240:      strlen(\"\\xEF\\xBB\\xBF<!ATTLIST doc a1 CDATA 'value'>\")},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "298: START_TEST(test_billion_laughs_attack_protection_api) {",
          "299:   XML_Parser parserWithoutParent = XML_ParserCreate(NULL);",
          "302:   if (parserWithoutParent == NULL)",
          "303:     fail(\"parserWithoutParent is NULL\");",
          "304:   if (parserWithParent == NULL)",
          "",
          "[Removed Lines]",
          "300:   XML_Parser parserWithParent",
          "301:       = XML_ExternalEntityParserCreate(parserWithoutParent, NULL, NULL);",
          "",
          "[Added Lines]",
          "311:   XML_Parser parserWithParent = XML_ExternalEntityParserCreate(",
          "312:       parserWithoutParent, XCS(\"entity123\"), NULL);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "380:     fail(\"unsignedCharToPrintable result mistaken\");",
          "381: }",
          "382: END_TEST",
          "385: void",
          "386: make_accounting_test_case(Suite *s) {",
          "388:   TCase *tc_accounting = tcase_create(\"accounting tests\");",
          "390:   suite_add_tcase(s, tc_accounting);",
          "",
          "[Removed Lines]",
          "383: #endif // defined(XML_DTD)",
          "387: #if defined(XML_DTD)",
          "",
          "[Added Lines]",
          "394: #endif // defined(XML_DTD) || XML_GE == 1",
          "398: #if defined(XML_DTD) || XML_GE == 1",
          "",
          "---------------"
        ],
        "expat/tests/alloc_tests.c||expat/tests/alloc_tests.c": [
          "File: expat/tests/alloc_tests.c -> expat/tests/alloc_tests.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2083:   tcase_add_test(tc_alloc, test_alloc_explicit_encoding);",
          "2084:   tcase_add_test(tc_alloc, test_alloc_set_base);",
          "2085:   tcase_add_test(tc_alloc, test_alloc_realloc_buffer);",
          "2087:   tcase_add_test(tc_alloc, test_alloc_realloc_many_attributes);",
          "2088:   tcase_add_test__ifdef_xml_dtd(tc_alloc, test_alloc_public_entity_value);",
          "2089:   tcase_add_test__ifdef_xml_dtd(tc_alloc,",
          "",
          "[Removed Lines]",
          "2086:   tcase_add_test(tc_alloc, test_alloc_ext_entity_realloc_buffer);",
          "",
          "[Added Lines]",
          "2086:   tcase_add_test__if_xml_ge(tc_alloc, test_alloc_ext_entity_realloc_buffer);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2096:                                 test_alloc_realloc_attribute_enum_value);",
          "2097:   tcase_add_test__ifdef_xml_dtd(tc_alloc, test_alloc_realloc_implied_attribute);",
          "2098:   tcase_add_test__ifdef_xml_dtd(tc_alloc, test_alloc_realloc_default_attribute);",
          "2100:   tcase_add_test(tc_alloc, test_alloc_public_notation);",
          "2101:   tcase_add_test(tc_alloc, test_alloc_system_notation);",
          "2102:   tcase_add_test__ifdef_xml_dtd(tc_alloc, test_alloc_nested_groups);",
          "",
          "[Removed Lines]",
          "2099:   tcase_add_test(tc_alloc, test_alloc_notation);",
          "",
          "[Added Lines]",
          "2099:   tcase_add_test__if_xml_ge(tc_alloc, test_alloc_notation);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2110:   tcase_add_test(tc_alloc, test_alloc_attribute_whitespace);",
          "2111:   tcase_add_test(tc_alloc, test_alloc_attribute_predefined_entity);",
          "2112:   tcase_add_test(tc_alloc, test_alloc_long_attr_default_with_char_ref);",
          "2114:   tcase_add_test__ifdef_xml_dtd(tc_alloc, test_alloc_nested_entities);",
          "2115:   tcase_add_test__ifdef_xml_dtd(tc_alloc,",
          "2116:                                 test_alloc_realloc_param_entity_newline);",
          "2117:   tcase_add_test__ifdef_xml_dtd(tc_alloc, test_alloc_realloc_ce_extends_pe);",
          "2118:   tcase_add_test__ifdef_xml_dtd(tc_alloc, test_alloc_realloc_attributes);",
          "2119:   tcase_add_test(tc_alloc, test_alloc_long_doc_name);",
          "2125:   tcase_add_test__ifdef_xml_dtd(",
          "2126:       tc_alloc, test_alloc_reset_after_external_entity_parser_create_fail);",
          "",
          "[Removed Lines]",
          "2113:   tcase_add_test(tc_alloc, test_alloc_long_attr_value);",
          "2120:   tcase_add_test(tc_alloc, test_alloc_long_base);",
          "2121:   tcase_add_test(tc_alloc, test_alloc_long_public_id);",
          "2122:   tcase_add_test(tc_alloc, test_alloc_long_entity_value);",
          "2123:   tcase_add_test(tc_alloc, test_alloc_long_notation);",
          "",
          "[Added Lines]",
          "2113:   tcase_add_test__if_xml_ge(tc_alloc, test_alloc_long_attr_value);",
          "2120:   tcase_add_test__if_xml_ge(tc_alloc, test_alloc_long_base);",
          "2121:   tcase_add_test__if_xml_ge(tc_alloc, test_alloc_long_public_id);",
          "2122:   tcase_add_test__if_xml_ge(tc_alloc, test_alloc_long_entity_value);",
          "2123:   tcase_add_test__if_xml_ge(tc_alloc, test_alloc_long_notation);",
          "",
          "---------------"
        ],
        "expat/tests/basic_tests.c||expat/tests/basic_tests.c": [
          "File: expat/tests/basic_tests.c -> expat/tests/basic_tests.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5218:   tcase_add_test(tc_basic, test_xmldecl_invalid);",
          "5219:   tcase_add_test(tc_basic, test_xmldecl_missing_attr);",
          "5220:   tcase_add_test(tc_basic, test_xmldecl_missing_value);",
          "5222:   tcase_add_test(tc_basic, test_unrecognised_encoding_internal_entity);",
          "5223:   tcase_add_test__ifdef_xml_dtd(tc_basic, test_ext_entity_set_encoding);",
          "5224:   tcase_add_test__ifdef_xml_dtd(tc_basic, test_ext_entity_no_handler);",
          "",
          "[Removed Lines]",
          "5221:   tcase_add_test(tc_basic, test_unknown_encoding_internal_entity);",
          "",
          "[Added Lines]",
          "5221:   tcase_add_test__if_xml_ge(tc_basic, test_unknown_encoding_internal_entity);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5234:   tcase_add_test(tc_basic, test_wfc_undeclared_entity_with_external_subset);",
          "5235:   tcase_add_test(tc_basic, test_not_standalone_handler_reject);",
          "5236:   tcase_add_test(tc_basic, test_not_standalone_handler_accept);",
          "5238:   tcase_add_test__ifdef_xml_dtd(tc_basic, test_ext_entity_invalid_parse);",
          "5240:   tcase_add_test(tc_basic, test_dtd_attr_handling);",
          "5241:   tcase_add_test(tc_basic, test_empty_ns_without_namespaces);",
          "5242:   tcase_add_test(tc_basic, test_ns_in_attribute_default_without_namespaces);",
          "",
          "[Removed Lines]",
          "5237:   tcase_add_test(tc_basic, test_wfc_no_recursive_entity_refs);",
          "5239:   tcase_add_test(tc_basic, test_dtd_default_handling);",
          "",
          "[Added Lines]",
          "5237:   tcase_add_test__if_xml_ge(tc_basic, test_wfc_no_recursive_entity_refs);",
          "5239:   tcase_add_test__if_xml_ge(tc_basic, test_dtd_default_handling);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5254:   tcase_add_test(tc_basic, test_stop_parser_between_cdata_calls);",
          "5255:   tcase_add_test(tc_basic, test_suspend_parser_between_cdata_calls);",
          "5256:   tcase_add_test(tc_basic, test_memory_allocation);",
          "5258:   tcase_add_test(tc_basic, test_dtd_elements);",
          "5259:   tcase_add_test(tc_basic, test_dtd_elements_nesting);",
          "5260:   tcase_add_test__ifdef_xml_dtd(tc_basic, test_set_foreign_dtd);",
          "",
          "[Removed Lines]",
          "5257:   tcase_add_test(tc_basic, test_default_current);",
          "",
          "[Added Lines]",
          "5257:   tcase_add_test__if_xml_ge(tc_basic, test_default_current);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "5266:   tcase_add_test__ifdef_xml_dtd(tc_basic, test_empty_foreign_dtd);",
          "5267:   tcase_add_test(tc_basic, test_set_base);",
          "5268:   tcase_add_test(tc_basic, test_attributes);",
          "5270:   tcase_add_test(tc_basic, test_resume_invalid_parse);",
          "5271:   tcase_add_test(tc_basic, test_resume_resuspended);",
          "5272:   tcase_add_test(tc_basic, test_cdata_default);",
          "5273:   tcase_add_test(tc_basic, test_subordinate_reset);",
          "5274:   tcase_add_test(tc_basic, test_subordinate_suspend);",
          "5277:   tcase_add_test__ifdef_xml_dtd(tc_basic,",
          "5278:                                 test_ext_entity_invalid_suspended_parse);",
          "5279:   tcase_add_test(tc_basic, test_explicit_encoding);",
          "5280:   tcase_add_test(tc_basic, test_trailing_cr);",
          "5282:   tcase_add_test(tc_basic, test_trailing_rsqb);",
          "5285:   tcase_add_test__ifdef_xml_dtd(tc_basic, test_user_parameters);",
          "5286:   tcase_add_test__ifdef_xml_dtd(tc_basic, test_ext_entity_ref_parameter);",
          "5287:   tcase_add_test(tc_basic, test_empty_parse);",
          "",
          "[Removed Lines]",
          "5269:   tcase_add_test(tc_basic, test_reset_in_entity);",
          "5275:   tcase_add_test(tc_basic, test_subordinate_xdecl_suspend);",
          "5276:   tcase_add_test(tc_basic, test_subordinate_xdecl_abort);",
          "5281:   tcase_add_test(tc_basic, test_ext_entity_trailing_cr);",
          "5283:   tcase_add_test(tc_basic, test_ext_entity_trailing_rsqb);",
          "5284:   tcase_add_test(tc_basic, test_ext_entity_good_cdata);",
          "",
          "[Added Lines]",
          "5269:   tcase_add_test__if_xml_ge(tc_basic, test_reset_in_entity);",
          "5275:   tcase_add_test__if_xml_ge(tc_basic, test_subordinate_xdecl_suspend);",
          "5276:   tcase_add_test__if_xml_ge(tc_basic, test_subordinate_xdecl_abort);",
          "5281:   tcase_add_test__if_xml_ge(tc_basic, test_ext_entity_trailing_cr);",
          "5283:   tcase_add_test__if_xml_ge(tc_basic, test_ext_entity_trailing_rsqb);",
          "5284:   tcase_add_test__if_xml_ge(tc_basic, test_ext_entity_good_cdata);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "5366:   tcase_add_test(tc_basic, test_unknown_encoding_invalid_surrogate);",
          "5367:   tcase_add_test(tc_basic, test_unknown_encoding_invalid_high);",
          "5368:   tcase_add_test(tc_basic, test_unknown_encoding_invalid_attr_value);",
          "5377:   tcase_add_test(tc_basic, test_utf8_in_cdata_section);",
          "5378:   tcase_add_test(tc_basic, test_utf8_in_cdata_section_2);",
          "5379:   tcase_add_test(tc_basic, test_utf8_in_start_tags);",
          "",
          "[Removed Lines]",
          "5369:   tcase_add_test(tc_basic, test_ext_entity_latin1_utf16le_bom);",
          "5370:   tcase_add_test(tc_basic, test_ext_entity_latin1_utf16be_bom);",
          "5371:   tcase_add_test(tc_basic, test_ext_entity_latin1_utf16le_bom2);",
          "5372:   tcase_add_test(tc_basic, test_ext_entity_latin1_utf16be_bom2);",
          "5373:   tcase_add_test(tc_basic, test_ext_entity_utf16_be);",
          "5374:   tcase_add_test(tc_basic, test_ext_entity_utf16_le);",
          "5375:   tcase_add_test(tc_basic, test_ext_entity_utf16_unknown);",
          "5376:   tcase_add_test(tc_basic, test_ext_entity_utf8_non_bom);",
          "",
          "[Added Lines]",
          "5369:   tcase_add_test__if_xml_ge(tc_basic, test_ext_entity_latin1_utf16le_bom);",
          "5370:   tcase_add_test__if_xml_ge(tc_basic, test_ext_entity_latin1_utf16be_bom);",
          "5371:   tcase_add_test__if_xml_ge(tc_basic, test_ext_entity_latin1_utf16le_bom2);",
          "5372:   tcase_add_test__if_xml_ge(tc_basic, test_ext_entity_latin1_utf16be_bom2);",
          "5373:   tcase_add_test__if_xml_ge(tc_basic, test_ext_entity_utf16_be);",
          "5374:   tcase_add_test__if_xml_ge(tc_basic, test_ext_entity_utf16_le);",
          "5375:   tcase_add_test__if_xml_ge(tc_basic, test_ext_entity_utf16_unknown);",
          "5376:   tcase_add_test__if_xml_ge(tc_basic, test_ext_entity_utf8_non_bom);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "5408:   tcase_add_test(tc_basic, test_empty_element_abort);",
          "5409:   tcase_add_test__ifdef_xml_dtd(tc_basic,",
          "5410:                                 test_pool_integrity_with_unfinished_attr);",
          "5412: }",
          "",
          "[Removed Lines]",
          "5411:   tcase_add_test(tc_basic, test_nested_entity_suspend);",
          "",
          "[Added Lines]",
          "5411:   tcase_add_test__if_xml_ge(tc_basic, test_nested_entity_suspend);",
          "",
          "---------------"
        ],
        "expat/tests/common.c||expat/tests/common.c": [
          "File: expat/tests/common.c -> expat/tests/common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "153: #endif",
          "154: }",
          "156: void",
          "157: basic_teardown(void) {",
          "158:   if (g_parser != NULL) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "156: void",
          "157: tcase_add_test__if_xml_ge(TCase *tc, tcase_test_function test) {",
          "158: #if XML_GE == 1",
          "159:   tcase_add_test(tc, test);",
          "160: #else",
          "161:   UNUSED_P(tc);",
          "162:   UNUSED_P(test);",
          "163: #endif",
          "164: }",
          "",
          "---------------"
        ],
        "expat/tests/common.h||expat/tests/common.h": [
          "File: expat/tests/common.h -> expat/tests/common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "90: extern const char *get_buffer_test_text;",
          "92: extern void tcase_add_test__ifdef_xml_dtd(TCase *tc, tcase_test_function test);",
          "94: extern void basic_teardown(void);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93: extern void tcase_add_test__if_xml_ge(TCase *tc, tcase_test_function test);",
          "",
          "---------------"
        ],
        "expat/tests/handlers.c||expat/tests/handlers.c": [
          "File: expat/tests/handlers.c -> expat/tests/handlers.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1476:   return XML_STATUS_ERROR;",
          "1477: }",
          "1480: int",
          "1481: accounting_external_entity_ref_handler(XML_Parser parser,",
          "1482:                                        const XML_Char *context,",
          "",
          "[Removed Lines]",
          "1479: #if defined(XML_DTD)",
          "",
          "[Added Lines]",
          "1479: #if defined(XML_DTD) || XML_GE == 1",
          "",
          "---------------"
        ],
        "expat/tests/handlers.h||expat/tests/handlers.h": [
          "File: expat/tests/handlers.h -> expat/tests/handlers.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "404:     XML_Parser parser, const XML_Char *context, const XML_Char *base,",
          "405:     const XML_Char *systemId, const XML_Char *publicId);",
          "408: struct AccountingTestCase {",
          "409:   const char *primaryText;",
          "",
          "[Removed Lines]",
          "407: #  if defined(XML_DTD)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "expat/tests/ns_tests.c||expat/tests/ns_tests.c": [
          "File: expat/tests/ns_tests.c -> expat/tests/ns_tests.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "747:   tcase_add_test(tc_namespace, test_ns_bad_element_leafname);",
          "748:   tcase_add_test(tc_namespace, test_ns_utf16_leafname);",
          "749:   tcase_add_test(tc_namespace, test_ns_utf16_element_leafname);",
          "751:   tcase_add_test(tc_namespace, test_ns_invalid_doctype);",
          "752:   tcase_add_test(tc_namespace, test_ns_double_colon_doctype);",
          "753:   tcase_add_test(tc_namespace, test_ns_separator_in_uri);",
          "",
          "[Removed Lines]",
          "750:   tcase_add_test(tc_namespace, test_ns_utf16_doctype);",
          "",
          "[Added Lines]",
          "750:   tcase_add_test__if_xml_ge(tc_namespace, test_ns_utf16_doctype);",
          "",
          "---------------"
        ],
        "expat/tests/nsalloc_tests.c||expat/tests/nsalloc_tests.c": [
          "File: expat/tests/nsalloc_tests.c -> expat/tests/nsalloc_tests.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1521:   tcase_add_test(tc_nsalloc, test_nsalloc_long_namespace);",
          "1522:   tcase_add_test(tc_nsalloc, test_nsalloc_less_long_namespace);",
          "1523:   tcase_add_test(tc_nsalloc, test_nsalloc_long_context);",
          "1531:   tcase_add_test(tc_nsalloc, test_nsalloc_realloc_long_ge_name);",
          "1534:   tcase_add_test(tc_nsalloc, test_nsalloc_long_systemid_in_ext);",
          "1535:   tcase_add_test(tc_nsalloc, test_nsalloc_prefixed_element);",
          "1536: }",
          "",
          "[Removed Lines]",
          "1524:   tcase_add_test(tc_nsalloc, test_nsalloc_realloc_long_context);",
          "1525:   tcase_add_test(tc_nsalloc, test_nsalloc_realloc_long_context_2);",
          "1526:   tcase_add_test(tc_nsalloc, test_nsalloc_realloc_long_context_3);",
          "1527:   tcase_add_test(tc_nsalloc, test_nsalloc_realloc_long_context_4);",
          "1528:   tcase_add_test(tc_nsalloc, test_nsalloc_realloc_long_context_5);",
          "1529:   tcase_add_test(tc_nsalloc, test_nsalloc_realloc_long_context_6);",
          "1530:   tcase_add_test(tc_nsalloc, test_nsalloc_realloc_long_context_7);",
          "1532:   tcase_add_test(tc_nsalloc, test_nsalloc_realloc_long_context_in_dtd);",
          "1533:   tcase_add_test(tc_nsalloc, test_nsalloc_long_default_in_ext);",
          "",
          "[Added Lines]",
          "1524:   tcase_add_test__if_xml_ge(tc_nsalloc, test_nsalloc_realloc_long_context);",
          "1525:   tcase_add_test__if_xml_ge(tc_nsalloc, test_nsalloc_realloc_long_context_2);",
          "1526:   tcase_add_test__if_xml_ge(tc_nsalloc, test_nsalloc_realloc_long_context_3);",
          "1527:   tcase_add_test__if_xml_ge(tc_nsalloc, test_nsalloc_realloc_long_context_4);",
          "1528:   tcase_add_test__if_xml_ge(tc_nsalloc, test_nsalloc_realloc_long_context_5);",
          "1529:   tcase_add_test__if_xml_ge(tc_nsalloc, test_nsalloc_realloc_long_context_6);",
          "1530:   tcase_add_test__if_xml_ge(tc_nsalloc, test_nsalloc_realloc_long_context_7);",
          "1532:   tcase_add_test__if_xml_ge(tc_nsalloc,",
          "1533:                             test_nsalloc_realloc_long_context_in_dtd);",
          "1534:   tcase_add_test__if_xml_ge(tc_nsalloc, test_nsalloc_long_default_in_ext);",
          "",
          "---------------"
        ],
        "expat/tests/runtests.c||expat/tests/runtests.c": [
          "File: expat/tests/runtests.c -> expat/tests/runtests.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:   make_miscellaneous_test_case(s);",
          "70:   make_alloc_test_case(s);",
          "71:   make_nsalloc_test_case(s);",
          "73:   make_accounting_test_case(s);",
          "74: #endif",
          "",
          "[Removed Lines]",
          "72: #if defined(XML_DTD)",
          "",
          "[Added Lines]",
          "72: #if defined(XML_DTD) || XML_GE == 1",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b0975cb73a41869fbecf0fa55afd35b69b64cc50",
      "candidate_info": {
        "commit_hash": "b0975cb73a41869fbecf0fa55afd35b69b64cc50",
        "repo": "libexpat/libexpat",
        "commit_url": "https://github.com/libexpat/libexpat/commit/b0975cb73a41869fbecf0fa55afd35b69b64cc50",
        "files": [
          "expat/lib/xmlparse.c"
        ],
        "message": "lib: Fail the build if XML_GE is not set to 1 or 0",
        "before_after_code_files": [
          "expat/lib/xmlparse.c||expat/lib/xmlparse.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/libexpat/libexpat/pull/777"
        ],
        "olp_code_files": {
          "patch": [
            "expat/lib/xmlparse.c||expat/lib/xmlparse.c"
          ],
          "candidate": [
            "expat/lib/xmlparse.c||expat/lib/xmlparse.c"
          ]
        }
      },
      "candidate_diff": {
        "expat/lib/xmlparse.c||expat/lib/xmlparse.c": [
          "File: expat/lib/xmlparse.c -> expat/lib/xmlparse.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: #include \"expat_config.h\"",
          "66: #if ! defined(XML_CONTEXT_BYTES) || (1 - XML_CONTEXT_BYTES - 1 == 2)           \\",
          "67:     || (XML_CONTEXT_BYTES + 0 < 0)",
          "68: #  error XML_CONTEXT_BYTES must be defined, non-empty and >=0 (0 to disable, >=1 to enable; 1024 is a common default)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66: #if ! defined(XML_GE) || (1 - XML_GE - 1 == 2) || (XML_GE < 0) || (XML_GE > 1)",
          "67: #  error XML_GE (for general entities) must be defined, non-empty, either 1 or 0 (0 to disable, 1 to enable; 1 is a common default)",
          "68: #endif",
          "70: #if defined(XML_DTD) && XML_GE == 0",
          "71: #  error Either undefine XML_DTD or define XML_GE to 1.",
          "72: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2848dc4e7067de503934b388717e7a3d8d0c5bca",
      "candidate_info": {
        "commit_hash": "2848dc4e7067de503934b388717e7a3d8d0c5bca",
        "repo": "libexpat/libexpat",
        "commit_url": "https://github.com/libexpat/libexpat/commit/2848dc4e7067de503934b388717e7a3d8d0c5bca",
        "files": [
          "expat/xmlwf/xmlwf.c"
        ],
        "message": "Simplify \"! defined(XML_DTD) && XML_GE == 0\" to \"XML_GE == 0\"",
        "before_after_code_files": [
          "expat/xmlwf/xmlwf.c||expat/xmlwf/xmlwf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "expat/xmlwf/xmlwf.c||expat/xmlwf/xmlwf.c"
          ],
          "candidate": [
            "expat/xmlwf/xmlwf.c||expat/xmlwf/xmlwf.c"
          ]
        }
      },
      "candidate_diff": {
        "expat/xmlwf/xmlwf.c||expat/xmlwf/xmlwf.c": [
          "File: expat/xmlwf/xmlwf.c -> expat/xmlwf/xmlwf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1096:             \" (needs a floating point number greater or equal than 1.0)\"));",
          "1097:         exit(XMLWF_EXIT_USAGE_ERROR);",
          "1098:       }",
          "1100:       ftprintf(stderr,",
          "1101:                T(\"Warning: Given amplification limit ignored\")",
          "1102:                    T(\", xmlwf has been compiled without DTD/GE support.\\n\"));",
          "",
          "[Removed Lines]",
          "1099: #if ! defined(XML_DTD) && XML_GE == 0",
          "",
          "[Added Lines]",
          "1099: #if XML_GE == 0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1118:         exit(XMLWF_EXIT_USAGE_ERROR);",
          "1119:       }",
          "1120:       attackThresholdGiven = XML_TRUE;",
          "1122:       ftprintf(stderr,",
          "1123:                T(\"Warning: Given attack threshold ignored\")",
          "1124:                    T(\", xmlwf has been compiled without DTD/GE support.\\n\"));",
          "",
          "[Removed Lines]",
          "1121: #if ! defined(XML_DTD) && XML_GE == 0",
          "",
          "[Added Lines]",
          "1121: #if XML_GE == 0",
          "",
          "---------------"
        ]
      }
    }
  ]
}