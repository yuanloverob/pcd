{
  "cve_id": "CVE-2022-1325",
  "cve_desc": "A flaw was found in Clmg, where with the help of a maliciously crafted pandore or bmp file with modified dx and dy header field values it is possible to trick the application into allocating huge buffer sizes like 64 Gigabyte upon reading the file from disk or from a virtual buffer.",
  "repo": "GreycLab/CImg",
  "patch_hash": "619cb58dd90b4e03ac68286c70ed98acbefd1c90",
  "patch_info": {
    "commit_hash": "619cb58dd90b4e03ac68286c70ed98acbefd1c90",
    "repo": "GreycLab/CImg",
    "commit_url": "https://github.com/GreycLab/CImg/commit/619cb58dd90b4e03ac68286c70ed98acbefd1c90",
    "files": [
      "CImg.h"
    ],
    "message": "CImg<>::load_bmp() and CImg<>::load_pandore(): Check that dimensions encoded in file does not exceed file size.",
    "before_after_code_files": [
      "CImg.h||CImg.h"
    ]
  },
  "patch_diff": {
    "CImg.h||CImg.h": [
      "File: CImg.h -> CImg.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "53184:                                     \"load_bmp(): Specified filename is (null).\",",
      "53185:                                     cimg_instance);",
      "53187:       std::FILE *const nfile = file?file:cimg::fopen(filename,\"rb\");",
      "53188:       CImg<ucharT> header(54);",
      "53189:       cimg::fread(header._data,54,nfile);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "53187:       const ulongT fsiz = file?cimg::type<ulongT>::max():(ulongT)cimg::fsize(filename);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "53220:         cimg_iobuffer = (ulongT)24*1024*1024,",
      "53221:         buf_size = (ulongT)cimg::abs(dy)*(dx_bytes + align_bytes);",
      "53223:       CImg<intT> colormap;",
      "53224:       if (bpp<16) { if (!nb_colors) nb_colors = 1<<bpp; } else nb_colors = 0;",
      "53225:       if (nb_colors) { colormap.assign(nb_colors); cimg::fread(colormap._data,nb_colors,nfile); }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "53224:       if (buf_size>fsiz)",
      "53225:           throw CImgIOException(_cimg_instance",
      "53226:                                 \"load_bmp(): File size %lu for filename '%s' does not match encoded image dimensions (%d,%d).\",",
      "53227:                                 cimg_instance,",
      "53228:                                 (long)fsiz,filename?filename:\"(FILE*)\",dx,dy);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "55026: #define __cimg_load_pandore_case(nbdim,nwidth,nheight,ndepth,ndim,stype) \\",
      "55027:         cimg::fread(dims,nbdim,nfile); \\",
      "55028:         if (endian) cimg::invert_endianness(dims,nbdim); \\",
      "55029:         assign(nwidth,nheight,ndepth,ndim); \\",
      "55030:         const size_t siz = size(); \\",
      "55031:         stype *buffer = new stype[siz]; \\",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "55036:         if ((ulongT)nwidth*nheight*ndepth*ndim>fsiz) \\",
      "55037:           throw CImgIOException(_cimg_instance \\",
      "55038:                                 \"load_pandore(): File size %lu for filename '%s' does not match encoded image dimensions (%d,%d,%d,%d).\",\\",
      "55039:                                 cimg_instance,\\",
      "55040:                                 (long)fsiz,filename?filename:\"(FILE*)\",(int)nwidth,(int)nheight,(int)ndepth,(int)ndim); \\",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "55049:                                     \"load_pandore(): Specified filename is (null).\",",
      "55050:                                     cimg_instance);",
      "55052:       std::FILE *const nfile = file?file:cimg::fopen(filename,\"rb\");",
      "55053:       CImg<charT> header(32);",
      "55054:       cimg::fread(header._data,12,nfile);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "55064:       const ulongT fsiz = file?cimg::type<ulongT>::max():(ulongT)cimg::fsize(filename);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0f7f7fb452a4a9ebfe979f54e6dc113c3b8f01c0",
      "candidate_info": {
        "commit_hash": "0f7f7fb452a4a9ebfe979f54e6dc113c3b8f01c0",
        "repo": "GreycLab/CImg",
        "commit_url": "https://github.com/GreycLab/CImg/commit/0f7f7fb452a4a9ebfe979f54e6dc113c3b8f01c0",
        "files": [
          "CImg.h"
        ],
        "message": ".",
        "before_after_code_files": [
          "CImg.h||CImg.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "CImg.h||CImg.h"
          ],
          "candidate": [
            "CImg.h||CImg.h"
          ]
        }
      },
      "candidate_diff": {
        "CImg.h||CImg.h": [
          "File: CImg.h -> CImg.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "53224:       if (buf_size>fsiz)",
          "53225:           throw CImgIOException(_cimg_instance",
          "53227:                                 cimg_instance,",
          "53228:                                 (long)fsiz,filename?filename:\"(FILE*)\",dx,dy);",
          "",
          "[Removed Lines]",
          "53226:                                 \"load_bmp(): File size %lu for filename '%s' does not match encoded image dimensions (%d,%d).\",",
          "",
          "[Added Lines]",
          "53226:                                 \"load_bmp(): File size %lu for filename '%s' does not match \"",
          "53227:                                 \"encoded image dimensions (%d,%d).\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55035:         if (endian) cimg::invert_endianness(dims,nbdim); \\",
          "55036:         if ((ulongT)nwidth*nheight*ndepth*ndim>fsiz) \\",
          "55037:           throw CImgIOException(_cimg_instance \\",
          "55039:                                 cimg_instance,\\",
          "55041:         assign(nwidth,nheight,ndepth,ndim); \\",
          "55042:         const size_t siz = size(); \\",
          "55043:         stype *buffer = new stype[siz]; \\",
          "",
          "[Removed Lines]",
          "55038:                                 \"load_pandore(): File size %lu for filename '%s' does not match encoded image dimensions (%d,%d,%d,%d).\",\\",
          "55040:                                 (long)fsiz,filename?filename:\"(FILE*)\",(int)nwidth,(int)nheight,(int)ndepth,(int)ndim); \\",
          "",
          "[Added Lines]",
          "55039:                                 \"load_pandore(): File size %lu for filename '%s' does not match \"\\",
          "55040:                                 \"encoded image dimensions (%d,%d,%d,%d).\",\\",
          "55042:                                 (long)fsiz,filename?filename:\"(FILE*)\",\\",
          "55043:                                 (int)nwidth,(int)nheight,(int)ndepth,(int)ndim); \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "37cf0c1e5eeafb5b759c1a36423eb3dae27dbee8",
      "candidate_info": {
        "commit_hash": "37cf0c1e5eeafb5b759c1a36423eb3dae27dbee8",
        "repo": "GreycLab/CImg",
        "commit_url": "https://github.com/GreycLab/CImg/commit/37cf0c1e5eeafb5b759c1a36423eb3dae27dbee8",
        "files": [
          "CImg.h"
        ],
        "message": "add global hardening against RAM exhaustions in safe_size",
        "before_after_code_files": [
          "CImg.h||CImg.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "CImg.h||CImg.h"
          ],
          "candidate": [
            "CImg.h||CImg.h"
          ]
        }
      },
      "candidate_diff": {
        "CImg.h||CImg.h": [
          "File: CImg.h -> CImg.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "265: #endif",
          "269: #endif",
          "",
          "[Removed Lines]",
          "267: #ifndef cimg_max_file_size",
          "268: #define cimg_max_file_size ((cimg_ulong)4*1024*1024*1024)",
          "",
          "[Added Lines]",
          "267: #ifndef cimg_max_buf_size",
          "268: #define cimg_max_buf_size ((cimg_ulong)4*1024*1024*1024)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11814:       if ((dy==1 || (siz*=dy)>osiz) &&",
          "11815:           ((osiz = siz), dz==1 || (siz*=dz)>osiz) &&",
          "11816:           ((osiz = siz), dc==1 || (siz*=dc)>osiz) &&",
          "11818:       throw CImgArgumentException(\"CImg<%s>::safe_size(): Specified size (%u,%u,%u,%u) overflows 'size_t'.\",",
          "11819:                                   pixel_type(),dx,dy,dz,dc);",
          "11820:     }",
          "",
          "[Removed Lines]",
          "11817:           ((osiz = siz), sizeof(T)==1 || (siz*sizeof(T))>osiz)) return siz;",
          "",
          "[Added Lines]",
          "11817:           ((osiz = siz), sizeof(T)==1 || (siz*sizeof(T))>osiz)) {",
          "11819:             if (siz > cimg_max_buf_size){",
          "11820:               throw CImgArgumentException(\"CImg<%s>::safe_size(): Specified size (%u,%u,%u,%u) exceeds maximum allowed buffer size of %lu \",",
          "11821:                                   pixel_type(),dx,dy,dz,dc,cimg_max_buf_size);",
          "11822:             }",
          "11823:             return siz;",
          "11824:           }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53201:                                     \"load_bmp(): Specified filename is (null).\",",
          "53202:                                     cimg_instance);",
          "53205:       std::FILE *const nfile = file?file:cimg::fopen(filename,\"rb\");",
          "53206:       CImg<ucharT> header(54);",
          "53207:       cimg::fread(header._data,54,nfile);",
          "",
          "[Removed Lines]",
          "53204:       const ulongT fsiz = file?(ulongT)cimg_max_file_size:(ulongT)cimg::fsize(filename);",
          "",
          "[Added Lines]",
          "53211:       const ulongT fsiz = file?(ulongT)cimg_max_buf_size:(ulongT)cimg::fsize(filename);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "55081:                                     \"load_pandore(): Specified filename is (null).\",",
          "55082:                                     cimg_instance);",
          "55085:       std::FILE *const nfile = file?file:cimg::fopen(filename,\"rb\");",
          "55086:       CImg<charT> header(32);",
          "55087:       cimg::fread(header._data,12,nfile);",
          "",
          "[Removed Lines]",
          "55084:       const ulongT fsiz = file?(ulongT)cimg_max_file_size:(ulongT)cimg::fsize(filename);",
          "",
          "[Added Lines]",
          "55091:       const ulongT fsiz = file?(ulongT)cimg_max_buf_size:(ulongT)cimg::fsize(filename);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "193abd7b29f3686840a48702d26aa3bf29deac3e",
      "candidate_info": {
        "commit_hash": "193abd7b29f3686840a48702d26aa3bf29deac3e",
        "repo": "GreycLab/CImg",
        "commit_url": "https://github.com/GreycLab/CImg/commit/193abd7b29f3686840a48702d26aa3bf29deac3e",
        "files": [
          "CImg.h"
        ],
        "message": "Add macro 'cimg_max_file_size' to control maximum allowed file size when reading image files.",
        "before_after_code_files": [
          "CImg.h||CImg.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "CImg.h||CImg.h"
          ],
          "candidate": [
            "CImg.h||CImg.h"
          ]
        }
      },
      "candidate_diff": {
        "CImg.h||CImg.h": [
          "File: CImg.h -> CImg.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "255: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "257: #ifndef cimg_max_file_size",
          "258: #define cimg_max_file_size ((cimg_ulong)4*1024*1024*1024)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53184:                                     \"load_bmp(): Specified filename is (null).\",",
          "53185:                                     cimg_instance);",
          "53188:       std::FILE *const nfile = file?file:cimg::fopen(filename,\"rb\");",
          "53189:       CImg<ucharT> header(54);",
          "53190:       cimg::fread(header._data,54,nfile);",
          "",
          "[Removed Lines]",
          "53187:       const ulongT fsiz = file?cimg::type<ulongT>::max():(ulongT)cimg::fsize(filename);",
          "",
          "[Added Lines]",
          "53190:       const ulongT fsiz = file?(ulongT)cimg_max_file_size:(ulongT)cimg::fsize(filename);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "55064:                                     \"load_pandore(): Specified filename is (null).\",",
          "55065:                                     cimg_instance);",
          "55068:       std::FILE *const nfile = file?file:cimg::fopen(filename,\"rb\");",
          "55069:       CImg<charT> header(32);",
          "55070:       cimg::fread(header._data,12,nfile);",
          "",
          "[Removed Lines]",
          "55067:       const ulongT fsiz = file?cimg::type<ulongT>::max():(ulongT)cimg::fsize(filename);",
          "",
          "[Added Lines]",
          "55070:       const ulongT fsiz = file?(ulongT)cimg_max_file_size:(ulongT)cimg::fsize(filename);",
          "",
          "---------------"
        ]
      }
    }
  ]
}