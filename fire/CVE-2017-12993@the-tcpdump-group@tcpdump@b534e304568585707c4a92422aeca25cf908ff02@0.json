{
  "cve_id": "CVE-2017-12993",
  "cve_desc": "The Juniper protocols parser in tcpdump before 4.9.2 has a buffer over-read in print-juniper.c, several functions.",
  "repo": "the-tcpdump-group/tcpdump",
  "patch_hash": "b534e304568585707c4a92422aeca25cf908ff02",
  "patch_info": {
    "commit_hash": "b534e304568585707c4a92422aeca25cf908ff02",
    "repo": "the-tcpdump-group/tcpdump",
    "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/b534e304568585707c4a92422aeca25cf908ff02",
    "files": [
      "print-juniper.c",
      "tests/TESTLIST",
      "tests/hoobr_juniper.out",
      "tests/hoobr_juniper.pcap",
      "tests/hoobr_juniper2.out",
      "tests/hoobr_juniper2.pcap",
      "tests/hoobr_juniper3.out",
      "tests/hoobr_juniper3.pcap"
    ],
    "message": "CVE-2017-12993/Juniper: Add more bounds checks.\n\nThis fixes a buffer over-read discovered by Kamil Frankowicz.\n\nAdd tests using the capture files supplied by the reporter(s).",
    "before_after_code_files": [
      "print-juniper.c||print-juniper.c"
    ]
  },
  "patch_diff": {
    "print-juniper.c||print-juniper.c": [
      "File: print-juniper.c -> print-juniper.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "472:         p+=l2info.header_len;",
      "473:         gh = (struct juniper_ggsn_header *)&l2info.cookie;",
      "475:         if (ndo->ndo_eflag) {",
      "476:             ND_PRINT((ndo, \"proto %s (%u), vlan %u: \",",
      "477:                    tok2str(juniper_protocol_values,\"Unknown\",gh->proto),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "475:         ND_TCHECK(*gh);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "492:         }",
      "494:         return l2info.header_len;",
      "495: }",
      "496: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "497: trunc:",
      "498:  ND_PRINT((ndo, \"[|juniper_services]\"));",
      "499:  return l2info.header_len;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "519:         p+=l2info.header_len;",
      "520:         ih = (const struct juniper_ipsec_header *)p;",
      "522:         switch (ih->type) {",
      "523:         case JUNIPER_IPSEC_O_ESP_ENCRYPT_ESP_AUTHEN_TYPE:",
      "524:         case JUNIPER_IPSEC_O_ESP_ENCRYPT_AH_AUTHEN_TYPE:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "527:         ND_TCHECK(*ih);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "565:         ip_print(ndo, p, l2info.length);",
      "566:         return l2info.header_len;",
      "567: }",
      "568: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "574: trunc:",
      "575:  ND_PRINT((ndo, \"[|juniper_services]\"));",
      "576:  return l2info.header_len;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "588:         p+=l2info.header_len;",
      "589:         mh = (const struct juniper_monitor_header *)p;",
      "591:         if (ndo->ndo_eflag)",
      "592:             ND_PRINT((ndo, \"service-id %u, iif %u, pkt-type %u: \",",
      "593:                    EXTRACT_32BITS(&mh->service_id),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "601:         ND_TCHECK(*mh);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "598:         ip_heuristic_guess (ndo, p, l2info.length);",
      "600:         return l2info.header_len;",
      "601: }",
      "602: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "613: trunc:",
      "614:  ND_PRINT((ndo, \"[|juniper_services]\"));",
      "615:  return l2info.header_len;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "622:         p+=l2info.header_len;",
      "623:         sh = (const struct juniper_services_header *)p;",
      "625:         if (ndo->ndo_eflag)",
      "626:             ND_PRINT((ndo, \"service-id %u flags 0x%02x service-set-id 0x%04x iif %u: \",",
      "627:                    sh->svc_id,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "640:         ND_TCHECK(*sh);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "633:         ip_heuristic_guess (ndo, p, l2info.length);",
      "635:         return l2info.header_len;",
      "636: }",
      "637: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "653: trunc:",
      "654:  ND_PRINT((ndo, \"[|juniper_services]\"));",
      "655:  return l2info.header_len;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "741:         p+=l2info.header_len;",
      "743:         extracted_ethertype = EXTRACT_16BITS(p);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "763:         ND_TCHECK2(p[0], 2);",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "752:             ND_PRINT((ndo, \"unknown ethertype 0x%04x\", extracted_ethertype));",
      "754:         return l2info.header_len;",
      "755: }",
      "756: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "777: trunc:",
      "778:  ND_PRINT((ndo, \"[|juniper_pppoe_atm]\"));",
      "779:  return l2info.header_len;",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "940:             return l2info.header_len;",
      "941:         }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "968:         ND_TCHECK2(p[0], 3);",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "958:             return l2info.header_len;",
      "960:  return l2info.header_len;",
      "961: }",
      "962: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "988: trunc:",
      "989:  ND_PRINT((ndo, \"[|juniper_atm1]\"));",
      "990:  return l2info.header_len;",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "989:             return l2info.header_len;",
      "990:         }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1022:         ND_TCHECK2(p[0], 3);",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "1016:             return l2info.header_len;",
      "1018:  return l2info.header_len;",
      "1019: }",
      "1020: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1051: trunc:",
      "1052:  ND_PRINT((ndo, \"[|juniper_atm2]\"));",
      "1053:  return l2info.header_len;",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "1280:     l2info->caplen -= l2info->header_len;",
      "1283:     while (lp->s != NULL) {",
      "1284:         if (lp->pictype == l2info->pictype) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1318:     ND_TCHECK(p[0]);",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "1360:     case DLT_JUNIPER_MLFR:",
      "1361:         switch (l2info->cookie_type) {",
      "1362:         case LS_COOKIE_ID:",
      "1363:             l2info->bundle = l2info->cookie[1];",
      "1364:             l2info->proto = EXTRACT_16BITS(p);",
      "1365:             l2info->header_len += 2;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1399:             ND_TCHECK2(p[0], 2);",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "1383:     case DLT_JUNIPER_MFR:",
      "1384:         switch (l2info->cookie_type) {",
      "1385:         case LS_COOKIE_ID:",
      "1386:             l2info->bundle = l2info->cookie[1];",
      "1387:             l2info->proto = EXTRACT_16BITS(p);",
      "1388:             l2info->header_len += 2;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1423:             ND_TCHECK2(p[0], 2);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "00b189d27cd235c958497d9b1aca6d3addd55d43",
      "candidate_info": {
        "commit_hash": "00b189d27cd235c958497d9b1aca6d3addd55d43",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/00b189d27cd235c958497d9b1aca6d3addd55d43",
        "files": [
          "print-atm.c",
          "print-bgp.c",
          "print-carp.c",
          "print-icmp6.c",
          "print-ip.c",
          "print-isakmp.c",
          "print-juniper.c",
          "print-mobility.c",
          "print-pim.c",
          "print-smb.c",
          "print-stp.c",
          "print-vrrp.c",
          "smbutil.c"
        ],
        "message": "Use more the ND_TCHECK_1() macro",
        "before_after_code_files": [
          "print-atm.c||print-atm.c",
          "print-bgp.c||print-bgp.c",
          "print-carp.c||print-carp.c",
          "print-icmp6.c||print-icmp6.c",
          "print-ip.c||print-ip.c",
          "print-isakmp.c||print-isakmp.c",
          "print-juniper.c||print-juniper.c",
          "print-mobility.c||print-mobility.c",
          "print-pim.c||print-pim.c",
          "print-smb.c||print-smb.c",
          "print-stp.c||print-stp.c",
          "print-vrrp.c||print-vrrp.c",
          "smbutil.c||smbutil.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-juniper.c||print-juniper.c"
          ],
          "candidate": [
            "print-juniper.c||print-juniper.c"
          ]
        }
      },
      "candidate_diff": {
        "print-atm.c||print-atm.c": [
          "File: print-atm.c -> print-atm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "349: {",
          "350:  uint32_t call_ref;",
          "353:  if (EXTRACT_U_1(p + PROTO_POS) == Q2931) {",
          "358:   ND_PRINT((ndo, \"Q.2931\"));",
          "360:   ND_PRINT((ndo, \":%s \",",
          "361:       tok2str(msgtype2str, \"msgtype#%d\", EXTRACT_U_1(p + MSG_TYPE_POS))));",
          "",
          "[Removed Lines]",
          "352:  ND_TCHECK(p[PROTO_POS]);",
          "359:   ND_TCHECK(p[MSG_TYPE_POS]);",
          "",
          "[Added Lines]",
          "352:  ND_TCHECK_1(p + PROTO_POS);",
          "359:   ND_TCHECK_1(p + MSG_TYPE_POS);",
          "",
          "---------------"
        ],
        "print-bgp.c||print-bgp.c": [
          "File: print-bgp.c -> print-bgp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "538:  struct in_addr addr;",
          "539:  u_int plen, plenbytes;",
          "542:  ITEMCHECK(1);",
          "543:  plen = pptr[0];",
          "544:  if (32 < plen)",
          "",
          "[Removed Lines]",
          "541:  ND_TCHECK(pptr[0]);",
          "",
          "[Added Lines]",
          "541:  ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "773:  ND_TCHECK(pptr[0]);",
          "",
          "[Added Lines]",
          "773:  ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "824:  struct in_addr addr;",
          "825:  u_int plen;",
          "830:  if ((24+64) > plen)",
          "",
          "[Removed Lines]",
          "827:  ND_TCHECK(pptr[0]);",
          "",
          "[Added Lines]",
          "827:  ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "876:     const u_char *rd;",
          "877:     const u_char *vpn_ip;",
          "882:     if (EXTRACT_U_1(pptr) != MDT_VPN_NLRI_LEN * 8)",
          "",
          "[Removed Lines]",
          "879:     ND_TCHECK(pptr[0]);",
          "",
          "[Added Lines]",
          "879:     ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1096:       }",
          "1098:       while (ttlv_len>0) {",
          "1100:    if (buflen!=0) {",
          "1101:        stringlen=snprintf(buf,buflen, \"%02x\",",
          "1102:                                                EXTRACT_U_1(pptr));",
          "",
          "[Removed Lines]",
          "1099:    ND_TCHECK(pptr[0]);",
          "",
          "[Added Lines]",
          "1099:    ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1136:  struct in6_addr addr;",
          "1137:  u_int plen, plenbytes;",
          "1140:  ITEMCHECK(1);",
          "1141:  plen = pd[0];",
          "1142:  if (128 < plen)",
          "",
          "[Removed Lines]",
          "1139:  ND_TCHECK(pd[0]);",
          "",
          "[Added Lines]",
          "1139:  ND_TCHECK_1(pd);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1214:  struct in6_addr addr;",
          "1215:  u_int plen;",
          "1220:  if ((24+64) > plen)",
          "",
          "[Removed Lines]",
          "1217:  ND_TCHECK(pptr[0]);",
          "",
          "[Added Lines]",
          "1217:  ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1253:         uint8_t addr[19];",
          "1254:  u_int plen;",
          "1259:  if (152 < plen)",
          "",
          "[Removed Lines]",
          "1256:  ND_TCHECK(pptr[0]);",
          "",
          "[Added Lines]",
          "1256:  ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1283:         uint8_t addr[19];",
          "1284:  u_int plen;",
          "1289:  if ((24+64) > plen)",
          "",
          "[Removed Lines]",
          "1286:  ND_TCHECK(pptr[0]);",
          "",
          "[Added Lines]",
          "1286:  ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1344:     while (tptr < pptr + len) {",
          "",
          "[Removed Lines]",
          "1345:         ND_TCHECK(tptr[0]);",
          "",
          "[Added Lines]",
          "1345:         ND_TCHECK_1(tptr);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1350:         if (EXTRACT_U_1(tptr) < BGP_AS_SEG_TYPE_MIN || EXTRACT_U_1(tptr) > BGP_AS_SEG_TYPE_MAX) {",
          "1351:             goto trunc;",
          "1352:         }",
          "1354:         tptr += 2 + tptr[1] * 2;",
          "1355:     }",
          "",
          "[Removed Lines]",
          "1353:         ND_TCHECK(tptr[1]);",
          "",
          "[Added Lines]",
          "1353:         ND_TCHECK_1(tptr + 1);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1430:                 as_size = bgp_attr_get_as_size(ndo, atype, pptr, len);",
          "1432:   while (tptr < pptr + len) {",
          "1434:                         ND_PRINT((ndo, \"%s\", tok2str(bgp_as_path_segment_open_values,",
          "1435:       \"?\", EXTRACT_U_1(tptr))));",
          "1437:                         for (i = 0; i < tptr[1] * as_size; i += as_size) {",
          "1438:                             ND_TCHECK2(tptr[2 + i], as_size);",
          "1439:        ND_PRINT((ndo, \"%s \",",
          "",
          "[Removed Lines]",
          "1433:    ND_TCHECK(tptr[0]);",
          "1436:    ND_TCHECK(tptr[1]);",
          "",
          "[Added Lines]",
          "1433:    ND_TCHECK_1(tptr);",
          "1436:    ND_TCHECK_1(tptr + 1);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1442:     EXTRACT_BE_U_2(tptr + i + 2) :",
          "1443:     EXTRACT_BE_U_4(tptr + i + 2))));",
          "1444:                         }",
          "1446:                         ND_PRINT((ndo, \"%s\", tok2str(bgp_as_path_segment_close_values,",
          "1447:       \"?\", EXTRACT_U_1(tptr))));",
          "1449:                         tptr += 2 + tptr[1] * as_size;",
          "1450:   }",
          "1451:   break;",
          "",
          "[Removed Lines]",
          "1445:    ND_TCHECK(tptr[0]);",
          "1448:                         ND_TCHECK(tptr[1]);",
          "",
          "[Added Lines]",
          "1445:    ND_TCHECK_1(tptr);",
          "1448:                         ND_TCHECK_1(tptr + 1);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1606:                 tptr +=3;",
          "1609:   nhlen = tptr[0];",
          "1610:                 tlen = nhlen;",
          "1611:                 tptr++;",
          "",
          "[Removed Lines]",
          "1608:   ND_TCHECK(tptr[0]);",
          "",
          "[Added Lines]",
          "1608:   ND_TCHECK_1(tptr);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1738:   ND_PRINT((ndo, \", nh-length: %u\", nhlen));",
          "1739:   tptr += tlen;",
          "1742:   snpa = tptr[0];",
          "1743:   tptr++;",
          "1745:   if (snpa) {",
          "1746:    ND_PRINT((ndo, \"\\n\\t    %u SNPA\", snpa));",
          "1747:    for (/*nothing*/; snpa > 0; snpa--) {",
          "1749:     ND_PRINT((ndo, \"\\n\\t      %d bytes\", EXTRACT_U_1(tptr)));",
          "1750:     tptr += tptr[0] + 1;",
          "1751:    }",
          "",
          "[Removed Lines]",
          "1741:   ND_TCHECK(tptr[0]);",
          "1748:     ND_TCHECK(tptr[0]);",
          "",
          "[Added Lines]",
          "1741:   ND_TCHECK_1(tptr);",
          "1748:     ND_TCHECK_1(tptr);",
          "",
          "---------------"
        ],
        "print-carp.c||print-carp.c": [
          "File: print-carp.c -> print-carp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "51:  int version, type;",
          "52:  const char *type_s;",
          "55:  version = (bp[0] & 0xf0) >> 4;",
          "56:  type = bp[0] & 0x0f;",
          "57:  if (type == 1)",
          "",
          "[Removed Lines]",
          "54:  ND_TCHECK(bp[0]);",
          "",
          "[Added Lines]",
          "54:  ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:   ND_PRINT((ndo, \"[ttl=%d!] \", ttl));",
          "64:  if (version != 2 || type != 1)",
          "65:   return;",
          "68:  ND_PRINT((ndo, \"vhid=%d advbase=%d advskew=%d authlen=%d \",",
          "69:      EXTRACT_U_1(bp + 1), EXTRACT_U_1(bp + 5), EXTRACT_U_1(bp + 2), EXTRACT_U_1(bp + 3)));",
          "70:  if (ndo->ndo_vflag) {",
          "",
          "[Removed Lines]",
          "66:  ND_TCHECK(bp[2]);",
          "67:  ND_TCHECK(bp[5]);",
          "",
          "[Added Lines]",
          "66:  ND_TCHECK_1(bp + 2);",
          "67:  ND_TCHECK_1(bp + 5);",
          "",
          "---------------"
        ],
        "print-icmp6.c||print-icmp6.c": [
          "File: print-icmp6.c -> print-icmp6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1490:     ND_PRINT((ndo,\" [gaddr %s\", ip6addr_string(ndo, bp + 8)));",
          "1492:     if (ndo->ndo_vflag) {",
          "1494:  if (EXTRACT_U_1(bp + 24) & 0x08) {",
          "1495:   ND_PRINT((ndo,\" sflag\"));",
          "1496:  }",
          "",
          "[Removed Lines]",
          "1493:         ND_TCHECK(bp[25]);",
          "",
          "[Added Lines]",
          "1493:         ND_TCHECK_1(bp + 25);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1756:     ND_PRINT((ndo,\", \"));",
          "1757:    ND_PRINT((ndo,\"DNS name\"));",
          "1758:    cp = (const u_char *)(ni6 + 1) + 4;",
          "1760:    if (EXTRACT_U_1(cp) == ep - cp - 1) {",
          "1762:     if (ndo->ndo_vflag)",
          "",
          "[Removed Lines]",
          "1759:    ND_TCHECK(cp[0]);",
          "",
          "[Added Lines]",
          "1759:    ND_TCHECK_1(cp);",
          "",
          "---------------"
        ],
        "print-ip.c||print-ip.c": [
          "File: print-ip.c -> print-ip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:  }",
          "68:  if ((length + 1) & 3)",
          "69:   ND_PRINT((ndo, \" [bad length %u]\", length));",
          "71:  ptr = cp[2] - 1;",
          "72:  if (ptr < 3 || ((ptr + 1) & 3) || ptr > length + 1)",
          "73:   ND_PRINT((ndo, \" [bad ptr %u]\", EXTRACT_U_1(cp + 2)));",
          "",
          "[Removed Lines]",
          "70:  ND_TCHECK(cp[2]);",
          "",
          "[Added Lines]",
          "70:  ND_TCHECK_1(cp + 2);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "113:   else if (tt == IPOPT_NOP)",
          "114:    len = 1;",
          "115:   else {",
          "117:    len = cp[1];",
          "118:    if (len < 2)",
          "119:     break;",
          "",
          "[Removed Lines]",
          "116:    ND_TCHECK(cp[1]);",
          "",
          "[Added Lines]",
          "116:    ND_TCHECK_1(cp + 1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "185:  hoplen = ((cp[3]&0xF) != IPOPT_TS_TSONLY) ? 8 : 4;",
          "186:  if ((length - 4) & (hoplen-1))",
          "187:   ND_PRINT((ndo, \"[bad length %u]\", length));",
          "189:  ptr = cp[2] - 1;",
          "190:  len = 0;",
          "191:  if (ptr < 4 || ((ptr - 4) & (hoplen-1)) || ptr > length + 1)",
          "192:   ND_PRINT((ndo, \"[bad ptr %u]\", EXTRACT_U_1(cp + 2)));",
          "194:  switch (EXTRACT_U_1(cp + 3)&0xF) {",
          "195:  case IPOPT_TS_TSONLY:",
          "196:   ND_PRINT((ndo, \"TSONLY\"));",
          "",
          "[Removed Lines]",
          "188:  ND_TCHECK(cp[2]);",
          "193:  ND_TCHECK(cp[3]);",
          "",
          "[Added Lines]",
          "188:  ND_TCHECK_1(cp + 2);",
          "193:  ND_TCHECK_1(cp + 3);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "265:    option_len = 1;",
          "267:   else {",
          "269:    option_len = cp[1];",
          "270:    if (option_len < 2) {",
          "271:     ND_PRINT((ndo, \" [bad length %u]\", option_len));",
          "",
          "[Removed Lines]",
          "268:    ND_TCHECK(cp[1]);",
          "",
          "[Added Lines]",
          "268:    ND_TCHECK_1(cp + 1);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "301:     ND_PRINT((ndo, \" [bad length %u]\", option_len));",
          "302:     break;",
          "303:    }",
          "305:    if (EXTRACT_BE_U_2(cp + 2) != 0)",
          "306:     ND_PRINT((ndo, \" value %u\", EXTRACT_BE_U_2(cp + 2)));",
          "307:    break;",
          "",
          "[Removed Lines]",
          "304:    ND_TCHECK(cp[3]);",
          "",
          "[Added Lines]",
          "304:    ND_TCHECK_1(cp + 3);",
          "",
          "---------------"
        ],
        "print-isakmp.c||print-isakmp.c": [
          "File: print-isakmp.c -> print-isakmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "918:  int totlen;",
          "919:  uint32_t t, v;",
          "922:  if (EXTRACT_U_1(p) & 0x80)",
          "923:   totlen = 4;",
          "924:  else {",
          "",
          "[Removed Lines]",
          "921:  ND_TCHECK(p[0]);",
          "",
          "[Added Lines]",
          "921:  ND_TCHECK_1(p);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "969:  int totlen;",
          "970:  uint32_t t;",
          "973:  if (EXTRACT_U_1(p) & 0x80)",
          "974:   totlen = 4;",
          "975:  else {",
          "",
          "[Removed Lines]",
          "972:  ND_TCHECK(p[0]);",
          "",
          "[Added Lines]",
          "972:  ND_TCHECK_1(p);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3095:        const u_char *bp, u_int length,",
          "3096:        const u_char *bp2)",
          "3097: {",
          "3099:  if(length == 1 && EXTRACT_U_1(bp)==0xff) {",
          "3100:   ND_PRINT((ndo, \"isakmp-nat-keep-alive\"));",
          "3101:   return;",
          "",
          "[Removed Lines]",
          "3098:  ND_TCHECK(bp[0]);",
          "",
          "[Added Lines]",
          "3098:  ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3104:  if(length < 4) {",
          "3105:   goto trunc;",
          "3106:  }",
          "",
          "[Removed Lines]",
          "3107:  ND_TCHECK(bp[3]);",
          "",
          "[Added Lines]",
          "3107:  ND_TCHECK_1(bp + 3);",
          "",
          "---------------"
        ],
        "print-juniper.c||print-juniper.c": [
          "File: print-juniper.c -> print-juniper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1317:     l2info->caplen -= l2info->header_len;",
          "1321:     while (lp->s != NULL) {",
          "1322:         if (lp->pictype == l2info->pictype) {",
          "",
          "[Removed Lines]",
          "1320:     ND_TCHECK(p[0]);",
          "",
          "[Added Lines]",
          "1320:     ND_TCHECK_1(p);",
          "",
          "---------------"
        ],
        "print-mobility.c||print-mobility.c": [
          "File: print-mobility.c -> print-mobility.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "118:  unsigned i, optlen;",
          "120:  for (i = 0; i < len; i += optlen) {",
          "122:   if (EXTRACT_U_1(bp + i) == IP6MOPT_PAD1)",
          "123:    optlen = 1;",
          "124:   else {",
          "125:    if (i + 1 < len) {",
          "127:     optlen = bp[i + 1] + 2;",
          "128:    }",
          "129:    else",
          "",
          "[Removed Lines]",
          "121:   ND_TCHECK(bp[i]);",
          "126:     ND_TCHECK(bp[i + 1]);",
          "",
          "[Added Lines]",
          "121:   ND_TCHECK_1(bp + i);",
          "126:     ND_TCHECK_1(bp + i + 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "131:   }",
          "132:   if (i + optlen > len)",
          "133:    goto trunc;",
          "136:   switch (EXTRACT_U_1(bp + i)) {",
          "137:   case IP6MOPT_PAD1:",
          "",
          "[Removed Lines]",
          "134:   ND_TCHECK(bp[i + optlen]);",
          "",
          "[Added Lines]",
          "134:   ND_TCHECK_1(bp + i + optlen);",
          "",
          "---------------"
        ],
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "253: {",
          "254:  register u_char type;",
          "257:  type = bp[1];",
          "259:  ND_PRINT((ndo, \" %s\", tok2str(pimv1_type_str, \"[type %u]\", type)));",
          "",
          "[Removed Lines]",
          "256:  ND_TCHECK(bp[1]);",
          "",
          "[Added Lines]",
          "256:  ND_TCHECK_1(bp + 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "325:   }",
          "326:   break;",
          "327:  }",
          "329:  if ((EXTRACT_U_1(bp + 4) >> 4) != 1)",
          "330:   ND_PRINT((ndo, \" [v%d]\", EXTRACT_U_1(bp + 4) >> 4));",
          "331:  return;",
          "",
          "[Removed Lines]",
          "328:  ND_TCHECK(bp[4]);",
          "",
          "[Added Lines]",
          "328:  ND_TCHECK_1(bp + 4);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "352:  if (len < 8)",
          "353:   goto trunc;",
          "355:  ND_PRINT((ndo, \" auto-rp \"));",
          "356:  type = bp[0];",
          "357:  switch (type) {",
          "",
          "[Removed Lines]",
          "354:  ND_TCHECK(bp[0]);",
          "",
          "[Added Lines]",
          "354:  ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "366:   break;",
          "367:  }",
          "370:  numrps = bp[1];",
          "372:  ND_TCHECK_2(bp + 2);",
          "",
          "[Removed Lines]",
          "369:  ND_TCHECK(bp[1]);",
          "",
          "[Added Lines]",
          "369:  ND_TCHECK_1(bp + 1);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "406:   len -= 4;",
          "407:   if (len < 1)",
          "408:    goto trunc;",
          "410:   switch (EXTRACT_U_1(bp) & 0x3) {",
          "411:   case 0: ND_PRINT((ndo, \" PIMv?\"));",
          "412:    break;",
          "",
          "[Removed Lines]",
          "409:   ND_TCHECK(bp[0]);",
          "",
          "[Added Lines]",
          "409:   ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "423:   len -= 1;",
          "424:   if (len < 1)",
          "425:    goto trunc;",
          "427:   nentries = bp[0];",
          "428:   bp += 1;",
          "429:   len -= 1;",
          "",
          "[Removed Lines]",
          "426:   ND_TCHECK(bp[0]);",
          "",
          "[Added Lines]",
          "426:   ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "566:  if (addr_len == 0) {",
          "567:   if (len < 2)",
          "568:    goto trunc;",
          "570:   switch (EXTRACT_U_1(bp)) {",
          "571:   case 1:",
          "572:    af = AF_INET;",
          "",
          "[Removed Lines]",
          "569:   ND_TCHECK(bp[1]);",
          "",
          "[Added Lines]",
          "569:   ND_TCHECK_1(bp + 1);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1029:   len -= 2;",
          "1030:   if (len < 1)",
          "1031:    goto trunc;",
          "1033:   ND_PRINT((ndo, \" hashmlen=%d\", EXTRACT_U_1(bp)));",
          "1034:   if (len < 2)",
          "1035:    goto trunc;",
          "1037:   ND_PRINT((ndo, \" BSRprio=%d\", EXTRACT_U_1(bp + 1)));",
          "1038:   bp += 2;",
          "1039:   len -= 2;",
          "",
          "[Removed Lines]",
          "1032:   ND_TCHECK(bp[0]);",
          "1036:   ND_TCHECK(bp[2]);",
          "",
          "[Added Lines]",
          "1032:   ND_TCHECK_1(bp);",
          "1036:   ND_TCHECK_1(bp + 2);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1057:    if (len < 1)",
          "1058:     goto trunc;",
          "1060:    ND_PRINT((ndo, \" RPcnt=%d\", EXTRACT_U_1(bp)));",
          "1061:    if (len < 2)",
          "1062:     goto trunc;",
          "1064:    ND_PRINT((ndo, \" FRPcnt=%d\", frpcnt = EXTRACT_U_1(bp + 1)));",
          "1065:    if (len < 4)",
          "1066:     goto trunc;",
          "",
          "[Removed Lines]",
          "1059:    ND_TCHECK(bp[0]);",
          "1063:    ND_TCHECK(bp[1]);",
          "",
          "[Added Lines]",
          "1059:    ND_TCHECK_1(bp);",
          "1063:    ND_TCHECK_1(bp + 1);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1086:            EXTRACT_BE_U_2(bp));",
          "1087:     if (len < 3)",
          "1088:      goto trunc;",
          "1090:     ND_PRINT((ndo, \",prio=%d\", EXTRACT_U_1(bp + 2)));",
          "1091:     if (len < 4)",
          "1092:      goto trunc;",
          "",
          "[Removed Lines]",
          "1089:     ND_TCHECK(bp[2]);",
          "",
          "[Added Lines]",
          "1089:     ND_TCHECK_1(bp + 2);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1123:   if (len < 1)",
          "1124:    goto trunc;",
          "1126:   ND_PRINT((ndo, \" prefix-cnt=%d\", EXTRACT_U_1(bp)));",
          "1127:   pfxcnt = bp[0];",
          "1128:   if (len < 2)",
          "1129:    goto trunc;",
          "1131:   ND_PRINT((ndo, \" prio=%d\", EXTRACT_U_1(bp + 1)));",
          "1132:   if (len < 4)",
          "1133:    goto trunc;",
          "",
          "[Removed Lines]",
          "1125:   ND_TCHECK(bp[0]);",
          "1130:   ND_TCHECK(bp[1]);",
          "",
          "[Added Lines]",
          "1125:   ND_TCHECK_1(bp);",
          "1130:   ND_TCHECK_1(bp + 1);",
          "",
          "---------------"
        ],
        "print-smb.c||print-smb.c": [
          "File: print-smb.c -> print-smb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:     const char *f1 = NULL, *f2 = NULL;",
          "180:     int pcnt, dcnt;",
          "183:     if (request) {",
          "184:  ND_TCHECK_2(w + (14 * 2));",
          "185:  pcnt = EXTRACT_LE_U_2(w + 9 * 2);",
          "",
          "[Removed Lines]",
          "182:     ND_TCHECK(words[0]);",
          "",
          "[Added Lines]",
          "182:     ND_TCHECK_1(words);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "244:     const u_char *maxbuf = data + datalen;",
          "245:     int command;",
          "248:     command = data[0];",
          "250:     smb_fdata(ndo, param, \"BROWSE PACKET\\n|Param \", param+paramlen, unicodestr);",
          "",
          "[Removed Lines]",
          "247:     ND_TCHECK(data[0]);",
          "",
          "[Added Lines]",
          "247:     ND_TCHECK_1(data);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "400:     u_int wct, bcc;",
          "401:     const char *f1 = NULL, *f2 = NULL;",
          "404:     wct = words[0];",
          "405:     if (request)",
          "406:  f2 = \"*|Dialect=[Y]\\n\";",
          "",
          "[Removed Lines]",
          "403:     ND_TCHECK(words[0]);",
          "",
          "[Added Lines]",
          "403:     ND_TCHECK_1(words);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "442:     u_int wct, bcc;",
          "443:     const char *f1 = NULL, *f2 = NULL;",
          "446:     wct = words[0];",
          "447:     if (request) {",
          "448:  if (wct == 10)",
          "",
          "[Removed Lines]",
          "445:     ND_TCHECK(words[0]);",
          "",
          "[Added Lines]",
          "445:     ND_TCHECK_1(words);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "488:     const u_char *maxwords;",
          "489:     const char *f1 = NULL, *f2 = NULL;",
          "492:     wct = words[0];",
          "493:     if (request) {",
          "494:  f1 = \"Com2=[w]\\nOff2=[d]\\nHandle=[d]\\nLockType=[w]\\nTimeOut=[D]\\nUnlockCount=[d]\\nLockCount=[d]\\n\";",
          "496:  if (EXTRACT_U_1(words + 7) & 0x10)",
          "497:      f2 = \"*Process=[d]\\n[P2]Offset=[M]\\nLength=[M]\\n\";",
          "498:  else",
          "",
          "[Removed Lines]",
          "491:     ND_TCHECK(words[0]);",
          "495:  ND_TCHECK(words[7]);",
          "",
          "[Added Lines]",
          "491:     ND_TCHECK_1(words);",
          "495:  ND_TCHECK_1(words + 7);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "807:         \"[P4]SMB Command   =  [B]\\nError class   =  [BP1]\\nError code    =  [d]\\nFlags1        =  [B]\\nFlags2        =  [B][P13]\\nTree ID       =  [d]\\nProc ID       =  [d]\\nUID           =  [d]\\nMID           =  [d]\\nWord Count    =  [b]\\n\";",
          "808:     int smboffset;",
          "811:     request = (buf[9] & 0x80) ? 0 : 1;",
          "812:     startbuf = buf;",
          "",
          "[Removed Lines]",
          "810:     ND_TCHECK(buf[9]);",
          "",
          "[Added Lines]",
          "810:     ND_TCHECK_1(buf + 9);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "850:  int newsmboffset;",
          "852:  words = buf + smboffset;",
          "854:  wct = words[0];",
          "855:  data = words + 1 + wct * 2;",
          "856:  maxwords = min(data, maxbuf);",
          "",
          "[Removed Lines]",
          "853:  ND_TCHECK(words[0]);",
          "",
          "[Added Lines]",
          "853:  ND_TCHECK_1(words);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "899:      break;",
          "900:  if (wct == 0)",
          "901:      break;",
          "903:  command = words[1];",
          "904:  if (command == 0xFF)",
          "905:      break;",
          "",
          "[Removed Lines]",
          "902:  ND_TCHECK(words[1]);",
          "",
          "[Added Lines]",
          "902:  ND_TCHECK_1(words + 1);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1386:     if (maxbuf > ndo->ndo_snapend)",
          "1387:  maxbuf = ndo->ndo_snapend;",
          "1389:     len = EXTRACT_LE_U_2(data);",
          "1390:     command = data[4];",
          "1391:     data2 = data + len;",
          "",
          "[Removed Lines]",
          "1388:     ND_TCHECK(data[4]);",
          "",
          "[Added Lines]",
          "1388:     ND_TCHECK_1(data + 4);",
          "",
          "---------------"
        ],
        "print-stp.c||print-stp.c": [
          "File: print-stp.c -> print-stp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "305:     ND_PRINT((ndo, \"\\n\\tCIST bridge-id %s, \",",
          "306:            stp_print_bridge_id(ptr + MST_BPDU_CIST_BRIDGE_ID_OFFSET)));",
          "309:     ND_PRINT((ndo, \"CIST remaining-hops %d\", EXTRACT_U_1(ptr + MST_BPDU_CIST_REMAIN_HOPS_OFFSET)));",
          "",
          "[Removed Lines]",
          "308:     ND_TCHECK(ptr[MST_BPDU_CIST_REMAIN_HOPS_OFFSET]);",
          "",
          "[Added Lines]",
          "308:     ND_TCHECK_1(ptr + MST_BPDU_CIST_REMAIN_HOPS_OFFSET);",
          "",
          "---------------"
        ],
        "print-vrrp.c||print-vrrp.c": [
          "File: print-vrrp.c -> print-vrrp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:  const char *type_s;",
          "114:  version = (bp[0] & 0xf0) >> 4;",
          "115:  type = bp[0] & 0x0f;",
          "116:  type_s = tok2str(type2str, \"unknown type (%u)\", type);",
          "",
          "[Removed Lines]",
          "113:  ND_TCHECK(bp[0]);",
          "",
          "[Added Lines]",
          "113:  ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "119:   ND_PRINT((ndo, \", (ttl %u)\", ttl));",
          "120:  if (version < 2 || version > 3 || type != VRRP_TYPE_ADVERTISEMENT)",
          "121:   return;",
          "123:  ND_PRINT((ndo, \", vrid %u, prio %u\", EXTRACT_U_1(bp + 1), EXTRACT_U_1(bp + 2)));",
          "126:  if (version == 2) {",
          "127:   auth_type = bp[4];",
          "",
          "[Removed Lines]",
          "122:  ND_TCHECK(bp[2]);",
          "124:  ND_TCHECK(bp[5]);",
          "",
          "[Added Lines]",
          "122:  ND_TCHECK_1(bp + 2);",
          "124:  ND_TCHECK_1(bp + 5);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "162:   c = ' ';",
          "163:   bp += 8;",
          "164:   for (i = 0; i < naddrs; i++) {",
          "166:    ND_PRINT((ndo, \"%c%s\", c, ipaddr_string(ndo, bp)));",
          "167:    c = ',';",
          "168:    bp += 4;",
          "169:   }",
          "172:    ND_PRINT((ndo, \" auth \\\"\"));",
          "173:    if (fn_printn(ndo, bp, 8, ndo->ndo_snapend)) {",
          "174:     ND_PRINT((ndo, \"\\\"\"));",
          "",
          "[Removed Lines]",
          "165:    ND_TCHECK(bp[3]);",
          "171:    ND_TCHECK(bp[7]);",
          "",
          "[Added Lines]",
          "165:    ND_TCHECK_1(bp + 3);",
          "171:    ND_TCHECK_1(bp + 7);",
          "",
          "---------------"
        ],
        "smbutil.c||smbutil.c": [
          "File: smbutil.c -> smbutil.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "282:  return;",
          "283:     ND_PRINT((ndo, \"[%03X] \", i));",
          "284:     for (i = 0; i < len; /*nothing*/) {",
          "286:  ND_PRINT((ndo, \"%02X \", EXTRACT_U_1(buf + i) & 0xff));",
          "287:  i++;",
          "288:  if (i%8 == 0)",
          "",
          "[Removed Lines]",
          "285:         ND_TCHECK(buf[i]);",
          "",
          "[Added Lines]",
          "285:         ND_TCHECK_1(buf + i);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "356:  if (((s - startbuf) % 2) != 0) {",
          "358:      s++;",
          "359:  }",
          "360:     }",
          "",
          "[Removed Lines]",
          "357:      ND_TCHECK(s[0]);",
          "",
          "[Added Lines]",
          "357:      ND_TCHECK_1(s);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "366:  sp = s;",
          "367:  if (!use_unicode) {",
          "368:      for (;;) {",
          "371:   if (EXTRACT_U_1(sp) == 0)",
          "372:       break;",
          "",
          "[Removed Lines]",
          "369:   ND_TCHECK(sp[0]);",
          "",
          "[Added Lines]",
          "369:   ND_TCHECK_1(sp);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "391:     }",
          "392:     if (!use_unicode) {",
          "393:      while (strsize != 0) {",
          "395:      if (l >= MAX_UNISTR_SIZE)",
          "396:   break;",
          "397:      if (ND_ISPRINT(EXTRACT_U_1(s)))",
          "",
          "[Removed Lines]",
          "394:           ND_TCHECK(s[0]);",
          "",
          "[Added Lines]",
          "394:           ND_TCHECK_1(s);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "444:     while (*fmt && buf<maxbuf) {",
          "445:  switch (*fmt) {",
          "446:  case 'a':",
          "448:      write_bits(ndo, EXTRACT_U_1(buf), attrib_fmt);",
          "449:      buf++;",
          "450:      fmt++;",
          "",
          "[Removed Lines]",
          "447:      ND_TCHECK(buf[0]);",
          "",
          "[Added Lines]",
          "447:      ND_TCHECK_1(buf);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "472:      strncpy(bitfmt, fmt, l);",
          "473:      bitfmt[l] = '\\0';",
          "474:      fmt = p + 1;",
          "476:      write_bits(ndo, EXTRACT_U_1(buf), bitfmt);",
          "477:      buf++;",
          "478:      break;",
          "",
          "[Removed Lines]",
          "475:      ND_TCHECK(buf[0]);",
          "",
          "[Added Lines]",
          "475:      ND_TCHECK_1(buf);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "495:  case 'b':",
          "496:    {",
          "497:      unsigned int x;",
          "499:      x = buf[0];",
          "500:      ND_PRINT((ndo, \"%u (0x%x)\", x, x));",
          "501:      buf += 1;",
          "",
          "[Removed Lines]",
          "498:      ND_TCHECK(buf[0]);",
          "",
          "[Added Lines]",
          "498:      ND_TCHECK_1(buf);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "554:  case 'B':",
          "555:    {",
          "556:      unsigned int x;",
          "558:      x = buf[0];",
          "559:      ND_PRINT((ndo, \"0x%X\", x));",
          "560:      buf += 1;",
          "",
          "[Removed Lines]",
          "557:      ND_TCHECK(buf[0]);",
          "",
          "[Added Lines]",
          "557:      ND_TCHECK_1(buf);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "589:      switch (*fmt) {",
          "591:      case 'b':",
          "593:   stringlen = buf[0];",
          "594:   ND_PRINT((ndo, \"%u\", stringlen));",
          "595:   buf += 1;",
          "",
          "[Removed Lines]",
          "592:   ND_TCHECK(buf[0]);",
          "",
          "[Added Lines]",
          "592:   ND_TCHECK_1(buf);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "716:       name_type_str(name_type)));",
          "717:   break;",
          "718:      case 2:",
          "720:   name_type = buf[15];",
          "721:   ND_PRINT((ndo, \"%-15.15s NameType=0x%02X (%s)\", buf, name_type,",
          "722:       name_type_str(name_type)));",
          "",
          "[Removed Lines]",
          "719:   ND_TCHECK(buf[15]);",
          "",
          "[Added Lines]",
          "719:   ND_TCHECK_1(buf + 15);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "86c678c6cb28ff9a7ceaea5f2a12215f939bef39",
      "candidate_info": {
        "commit_hash": "86c678c6cb28ff9a7ceaea5f2a12215f939bef39",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/86c678c6cb28ff9a7ceaea5f2a12215f939bef39",
        "files": [
          "print-juniper.c"
        ],
        "message": "Clean up indentation.",
        "before_after_code_files": [
          "print-juniper.c||print-juniper.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-juniper.c||print-juniper.c"
          ],
          "candidate": [
            "print-juniper.c||print-juniper.c"
          ]
        }
      },
      "candidate_diff": {
        "print-juniper.c||print-juniper.c": [
          "File: print-juniper.c -> print-juniper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "483:         const struct juniper_ggsn_header *gh;",
          "484:         uint8_t proto;",
          "487:         l2info.pictype = DLT_JUNIPER_GGSN;",
          "488:         if (juniper_parse_header(ndo, p, h, &l2info) == 0)",
          "489:             return l2info.header_len;",
          "",
          "[Removed Lines]",
          "486:  ndo->ndo_protocol = \"juniper_ggsn\";",
          "",
          "[Added Lines]",
          "486:         ndo->ndo_protocol = \"juniper_ggsn\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "515:         return l2info.header_len;",
          "517: trunc:",
          "520: }",
          "521: #endif",
          "",
          "[Removed Lines]",
          "518:  nd_print_trunc(ndo);",
          "519:  return l2info.header_len;",
          "",
          "[Added Lines]",
          "518:         nd_print_trunc(ndo);",
          "519:         return l2info.header_len;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "537:         u_int rewrite_len,es_type_bundle;",
          "538:         const struct juniper_ipsec_header *ih;",
          "541:         l2info.pictype = DLT_JUNIPER_ES;",
          "542:         if (juniper_parse_header(ndo, p, h, &l2info) == 0)",
          "543:             return l2info.header_len;",
          "",
          "[Removed Lines]",
          "540:  ndo->ndo_protocol = \"juniper_es\";",
          "",
          "[Added Lines]",
          "540:         ndo->ndo_protocol = \"juniper_es\";",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "593:         return l2info.header_len;",
          "595: trunc:",
          "598: }",
          "599: #endif",
          "",
          "[Removed Lines]",
          "596:  nd_print_trunc(ndo);",
          "597:  return l2info.header_len;",
          "",
          "[Added Lines]",
          "596:         nd_print_trunc(ndo);",
          "597:         return l2info.header_len;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "612:         };",
          "613:         const struct juniper_monitor_header *mh;",
          "616:         l2info.pictype = DLT_JUNIPER_MONITOR;",
          "617:         if (juniper_parse_header(ndo, p, h, &l2info) == 0)",
          "618:             return l2info.header_len;",
          "",
          "[Removed Lines]",
          "615:  ndo->ndo_protocol = \"juniper_monitor\";",
          "",
          "[Added Lines]",
          "615:         ndo->ndo_protocol = \"juniper_monitor\";",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "633:         return l2info.header_len;",
          "635: trunc:",
          "638: }",
          "639: #endif",
          "",
          "[Removed Lines]",
          "636:  nd_print_trunc(ndo);",
          "637:  return l2info.header_len;",
          "",
          "[Added Lines]",
          "636:         nd_print_trunc(ndo);",
          "637:         return l2info.header_len;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "653:         };",
          "654:         const struct juniper_services_header *sh;",
          "657:         l2info.pictype = DLT_JUNIPER_SERVICES;",
          "658:         if (juniper_parse_header(ndo, p, h, &l2info) == 0)",
          "659:             return l2info.header_len;",
          "",
          "[Removed Lines]",
          "656:  ndo->ndo_protocol = \"juniper_services\";",
          "",
          "[Added Lines]",
          "656:         ndo->ndo_protocol = \"juniper_services\";",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "675:         return l2info.header_len;",
          "677: trunc:",
          "680: }",
          "681: #endif",
          "",
          "[Removed Lines]",
          "678:  nd_print_trunc(ndo);",
          "679:  return l2info.header_len;",
          "",
          "[Added Lines]",
          "678:         nd_print_trunc(ndo);",
          "679:         return l2info.header_len;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "687: {",
          "688:         struct juniper_l2info_t l2info;",
          "691:         l2info.pictype = DLT_JUNIPER_PPPOE;",
          "692:         if (juniper_parse_header(ndo, p, h, &l2info) == 0)",
          "693:             return l2info.header_len;",
          "",
          "[Removed Lines]",
          "690:  ndo->ndo_protocol = \"juniper_pppoe\";",
          "",
          "[Added Lines]",
          "690:         ndo->ndo_protocol = \"juniper_pppoe\";",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "706: {",
          "707:         struct juniper_l2info_t l2info;",
          "710:         l2info.pictype = DLT_JUNIPER_ETHER;",
          "711:         if (juniper_parse_header(ndo, p, h, &l2info) == 0)",
          "712:             return l2info.header_len;",
          "",
          "[Removed Lines]",
          "709:  ndo->ndo_protocol = \"juniper_ether\";",
          "",
          "[Added Lines]",
          "709:         ndo->ndo_protocol = \"juniper_ether\";",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "725: {",
          "726:         struct juniper_l2info_t l2info;",
          "729:         l2info.pictype = DLT_JUNIPER_PPP;",
          "730:         if (juniper_parse_header(ndo, p, h, &l2info) == 0)",
          "731:             return l2info.header_len;",
          "",
          "[Removed Lines]",
          "728:  ndo->ndo_protocol = \"juniper_ppp\";",
          "",
          "[Added Lines]",
          "728:         ndo->ndo_protocol = \"juniper_ppp\";",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "744: {",
          "745:         struct juniper_l2info_t l2info;",
          "748:         l2info.pictype = DLT_JUNIPER_FRELAY;",
          "749:         if (juniper_parse_header(ndo, p, h, &l2info) == 0)",
          "750:             return l2info.header_len;",
          "",
          "[Removed Lines]",
          "747:  ndo->ndo_protocol = \"juniper_frelay\";",
          "",
          "[Added Lines]",
          "747:         ndo->ndo_protocol = \"juniper_frelay\";",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "763: {",
          "764:         struct juniper_l2info_t l2info;",
          "767:         l2info.pictype = DLT_JUNIPER_CHDLC;",
          "768:         if (juniper_parse_header(ndo, p, h, &l2info) == 0)",
          "769:             return l2info.header_len;",
          "",
          "[Removed Lines]",
          "766:  ndo->ndo_protocol = \"juniper_chdlc\";",
          "",
          "[Added Lines]",
          "766:         ndo->ndo_protocol = \"juniper_chdlc\";",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "781:                            const struct pcap_pkthdr *h, const u_char *p)",
          "782: {",
          "783:         struct juniper_l2info_t l2info;",
          "787:         l2info.pictype = DLT_JUNIPER_PPPOE_ATM;",
          "788:         if (juniper_parse_header(ndo, p, h, &l2info) == 0)",
          "789:             return l2info.header_len;",
          "",
          "[Removed Lines]",
          "784:  uint16_t extracted_ethertype;",
          "786:  ndo->ndo_protocol = \"juniper_pppoe_atm\";",
          "",
          "[Added Lines]",
          "784:         uint16_t extracted_ethertype;",
          "786:         ndo->ndo_protocol = \"juniper_pppoe_atm\";",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "805:         return l2info.header_len;",
          "807: trunc:",
          "810: }",
          "811: #endif",
          "",
          "[Removed Lines]",
          "808:  nd_print_trunc(ndo);",
          "809:  return l2info.header_len;",
          "",
          "[Added Lines]",
          "808:         nd_print_trunc(ndo);",
          "809:         return l2info.header_len;",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "817: {",
          "818:         struct juniper_l2info_t l2info;",
          "821:         l2info.pictype = DLT_JUNIPER_MLPPP;",
          "822:         if (juniper_parse_header(ndo, p, h, &l2info) == 0)",
          "823:             return l2info.header_len;",
          "",
          "[Removed Lines]",
          "820:  ndo->ndo_protocol = \"juniper_mlppp\";",
          "",
          "[Added Lines]",
          "820:         ndo->ndo_protocol = \"juniper_mlppp\";",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "878: {",
          "879:         struct juniper_l2info_t l2info;",
          "882:         memset(&l2info, 0, sizeof(l2info));",
          "883:         l2info.pictype = DLT_JUNIPER_MFR;",
          "884:         if (juniper_parse_header(ndo, p, h, &l2info) == 0)",
          "",
          "[Removed Lines]",
          "881:  ndo->ndo_protocol = \"juniper_mfr\";",
          "",
          "[Added Lines]",
          "881:         ndo->ndo_protocol = \"juniper_mfr\";",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "941: {",
          "942:         struct juniper_l2info_t l2info;",
          "945:         l2info.pictype = DLT_JUNIPER_MLFR;",
          "946:         if (juniper_parse_header(ndo, p, h, &l2info) == 0)",
          "947:             return l2info.header_len;",
          "",
          "[Removed Lines]",
          "944:  ndo->ndo_protocol = \"juniper_mlfr\";",
          "",
          "[Added Lines]",
          "944:         ndo->ndo_protocol = \"juniper_mlfr\";",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "988:         struct juniper_l2info_t l2info;",
          "991:         l2info.pictype = DLT_JUNIPER_ATM1;",
          "992:         if (juniper_parse_header(ndo, p, h, &l2info) == 0)",
          "993:             return l2info.header_len;",
          "",
          "[Removed Lines]",
          "990:  ndo->ndo_protocol = \"juniper_atm1\";",
          "",
          "[Added Lines]",
          "990:         ndo->ndo_protocol = \"juniper_atm1\";",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1018:             return l2info.header_len;",
          "1022: trunc:",
          "1025: }",
          "1026: #endif",
          "",
          "[Removed Lines]",
          "1020:  return l2info.header_len;",
          "1023:  nd_print_trunc(ndo);",
          "1024:  return l2info.header_len;",
          "",
          "[Added Lines]",
          "1020:         return l2info.header_len;",
          "1023:         nd_print_trunc(ndo);",
          "1024:         return l2info.header_len;",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1043:         struct juniper_l2info_t l2info;",
          "1046:         l2info.pictype = DLT_JUNIPER_ATM2;",
          "1047:         if (juniper_parse_header(ndo, p, h, &l2info) == 0)",
          "1048:             return l2info.header_len;",
          "",
          "[Removed Lines]",
          "1045:  ndo->ndo_protocol = \"juniper_atm2\";",
          "",
          "[Added Lines]",
          "1045:         ndo->ndo_protocol = \"juniper_atm2\";",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1082:             return l2info.header_len;",
          "1086: trunc:",
          "1089: }",
          "",
          "[Removed Lines]",
          "1084:  return l2info.header_len;",
          "1087:  nd_print_trunc(ndo);",
          "1088:  return l2info.header_len;",
          "",
          "[Added Lines]",
          "1084:         return l2info.header_len;",
          "1087:         nd_print_trunc(ndo);",
          "1088:         return l2info.header_len;",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1135:     case 0x4d:",
          "1136:     case 0x4e:",
          "1137:     case 0x4f:",
          "1140:     case 0x60:",
          "1141:     case 0x61:",
          "1142:     case 0x62:",
          "",
          "[Removed Lines]",
          "1138:      ip_print(ndo, p, length);",
          "1139:      break;",
          "",
          "[Added Lines]",
          "1138:         ip_print(ndo, p, length);",
          "1139:         break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "480af1cdceda69d49bbc8e6a9d88db8eb9dfae79",
      "candidate_info": {
        "commit_hash": "480af1cdceda69d49bbc8e6a9d88db8eb9dfae79",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/480af1cdceda69d49bbc8e6a9d88db8eb9dfae79",
        "files": [
          "print-juniper.c",
          "tests/hoobr_juniper.out",
          "tests/hoobr_juniper2.out",
          "tests/hoobr_juniper3.out",
          "tests/hoobr_juniper4.out",
          "tests/juniper_atm1.out",
          "tests/juniper_es.out",
          "tests/juniper_header-heapoverflow.out"
        ],
        "message": "Add more nd_print_trunc() calls\n\nUpdate the output of some tests accordingly.",
        "before_after_code_files": [
          "print-juniper.c||print-juniper.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-juniper.c||print-juniper.c"
          ],
          "candidate": [
            "print-juniper.c||print-juniper.c"
          ]
        }
      },
      "candidate_diff": {
        "print-juniper.c||print-juniper.c": [
          "File: print-juniper.c -> print-juniper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "498:         return l2info.header_len;",
          "500: trunc:",
          "502:  return l2info.header_len;",
          "503: }",
          "504: #endif",
          "",
          "[Removed Lines]",
          "501:  ND_PRINT(\"[|juniper_services]\");",
          "",
          "[Added Lines]",
          "501:  nd_print_trunc(ndo);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "576:         return l2info.header_len;",
          "578: trunc:",
          "580:  return l2info.header_len;",
          "581: }",
          "582: #endif",
          "",
          "[Removed Lines]",
          "579:  ND_PRINT(\"[|juniper_services]\");",
          "",
          "[Added Lines]",
          "579:  nd_print_trunc(ndo);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "616:         return l2info.header_len;",
          "618: trunc:",
          "620:  return l2info.header_len;",
          "621: }",
          "622: #endif",
          "",
          "[Removed Lines]",
          "619:  ND_PRINT(\"[|juniper_services]\");",
          "",
          "[Added Lines]",
          "619:  nd_print_trunc(ndo);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "658:         return l2info.header_len;",
          "660: trunc:",
          "662:  return l2info.header_len;",
          "663: }",
          "664: #endif",
          "",
          "[Removed Lines]",
          "661:  ND_PRINT(\"[|juniper_services]\");",
          "",
          "[Added Lines]",
          "661:  nd_print_trunc(ndo);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "788:         return l2info.header_len;",
          "790: trunc:",
          "792:  return l2info.header_len;",
          "793: }",
          "794: #endif",
          "",
          "[Removed Lines]",
          "791:  ND_PRINT(\"[|juniper_pppoe_atm]\");",
          "",
          "[Added Lines]",
          "791:  nd_print_trunc(ndo);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1003:  return l2info.header_len;",
          "1005: trunc:",
          "1007:  return l2info.header_len;",
          "1008: }",
          "1009: #endif",
          "",
          "[Removed Lines]",
          "1006:  ND_PRINT(\"[|juniper_atm1]\");",
          "",
          "[Added Lines]",
          "1006:  nd_print_trunc(ndo);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1067:  return l2info.header_len;",
          "1069: trunc:",
          "1071:  return l2info.header_len;",
          "1072: }",
          "1073: #endif",
          "",
          "[Removed Lines]",
          "1070:  ND_PRINT(\"[|juniper_atm2]\");",
          "",
          "[Added Lines]",
          "1070:  nd_print_trunc(ndo);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1514:         ND_PRINT(\"hlen %u, proto 0x%04x, \", l2info->header_len, l2info->proto);",
          "1519:     return 0;",
          "1520: }",
          "",
          "[Removed Lines]",
          "1517:  trunc:",
          "1518:     ND_PRINT(\"[|juniper_hdr], length %u\", h->len);",
          "",
          "[Added Lines]",
          "1517: trunc:",
          "1518:     nd_print_trunc(ndo);",
          "",
          "---------------"
        ]
      }
    }
  ]
}