{
  "cve_id": "CVE-2019-1010297",
  "cve_desc": "Linaro/OP-TEE OP-TEE 3.3.0 and earlier is affected by: Buffer Overflow. The impact is: Execution of code in TEE core (kernel) context. The component is: optee_os. The fixed version is: 3.4.0 and later.",
  "repo": "OP-TEE/optee_os",
  "patch_hash": "a637243270fc1faae16de059091795c32d86e65e",
  "patch_info": {
    "commit_hash": "a637243270fc1faae16de059091795c32d86e65e",
    "repo": "OP-TEE/optee_os",
    "commit_url": "https://github.com/OP-TEE/optee_os/commit/a637243270fc1faae16de059091795c32d86e65e",
    "files": [
      "core/tee/tee_svc_cryp.c"
    ],
    "message": "svc: check for allocation overflow in crypto calls\n\nWithout checking for overflow there is a risk of allocating a buffer\nwith size smaller than anticipated and as a consequence of that it might\nlead to a heap based overflow with attacker controlled data written\noutside the boundaries of the buffer.\n\nFixes: OP-TEE-2018-0010: \"Integer overflow in crypto system calls (x2)\"\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
    "before_after_code_files": [
      "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
    ]
  },
  "patch_diff": {
    "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c": [
      "File: core/tee/tee_svc_cryp.c -> core/tee/tee_svc_cryp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1759:  if (key_size > type_props->max_size)",
      "1760:   return TEE_ERROR_NOT_SUPPORTED;",
      "1763:  if (!params)",
      "1764:   return TEE_ERROR_OUT_OF_MEMORY;",
      "1765:  res = copy_in_attrs(to_user_ta_ctx(sess->ctx), usr_params, param_count,",
      "",
      "[Removed Lines]",
      "1762:  params = malloc(sizeof(TEE_Attribute) * param_count);",
      "",
      "[Added Lines]",
      "1762:  size_t alloc_size = 0;",
      "1764:  if (MUL_OVERFLOW(sizeof(TEE_Attribute), param_count, &alloc_size))",
      "1765:   return TEE_ERROR_OVERFLOW;",
      "1767:  params = malloc(alloc_size);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2668:  if (res != TEE_SUCCESS)",
      "2669:   return res;",
      "2672:  if (!params)",
      "2673:   return TEE_ERROR_OUT_OF_MEMORY;",
      "2674:  res = copy_in_attrs(utc, usr_params, param_count, params);",
      "",
      "[Removed Lines]",
      "2671:  params = malloc(sizeof(TEE_Attribute) * param_count);",
      "",
      "[Added Lines]",
      "2676:  size_t alloc_size = 0;",
      "2678:  if (MUL_OVERFLOW(sizeof(TEE_Attribute), param_count, &alloc_size))",
      "2679:   return TEE_ERROR_OVERFLOW;",
      "2681:  params = malloc(alloc_size);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d5c5b0b77b2b589666024d219a8007b3f5b6faeb",
      "candidate_info": {
        "commit_hash": "d5c5b0b77b2b589666024d219a8007b3f5b6faeb",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/d5c5b0b77b2b589666024d219a8007b3f5b6faeb",
        "files": [
          "core/tee/tee_svc.c"
        ],
        "message": "core: svc: always check ta parameters\n\nAlways check TA parameters from a user TA. This prevents a user TA from\npassing invalid pointers to a pseudo TA.\n\nFixes: OP-TEE-2018-0007: \"Buffer checks missing when calling pseudo\nTAs\".\n\nSigned-off-by: Jens Wiklander <jens.wiklander@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Joakim Bech <joakim.bech@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
        "before_after_code_files": [
          "core/tee/tee_svc.c||core/tee/tee_svc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/2745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/tee/tee_svc.c||core/tee/tee_svc.c": [
          "File: core/tee/tee_svc.c -> core/tee/tee_svc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "494:  return res;",
          "495: }",
          "498: {",
          "499:  size_t n;",
          "500:  uint32_t types = up->types;",
          "",
          "[Removed Lines]",
          "497: static void utee_param_to_param(struct tee_ta_param *p, struct utee_params *up)",
          "",
          "[Added Lines]",
          "497: static TEE_Result utee_param_to_param(struct user_ta_ctx *utc,",
          "498:           struct tee_ta_param *p,",
          "499:           struct utee_params *up)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "503:  for (n = 0; n < TEE_NUM_PARAMS; n++) {",
          "504:   uintptr_t a = up->vals[n * 2];",
          "505:   size_t b = up->vals[n * 2 + 1];",
          "507:   switch (TEE_PARAM_TYPE_GET(types, n)) {",
          "509:   case TEE_PARAM_TYPE_MEMREF_OUTPUT:",
          "510:   case TEE_PARAM_TYPE_MEMREF_INOUT:",
          "511:    p->u[n].mem.mobj = &mobj_virt;",
          "512:    p->u[n].mem.offs = a;",
          "513:    p->u[n].mem.size = b;",
          "514:    break;",
          "515:   case TEE_PARAM_TYPE_VALUE_INPUT:",
          "516:   case TEE_PARAM_TYPE_VALUE_INOUT:",
          "",
          "[Removed Lines]",
          "508:   case TEE_PARAM_TYPE_MEMREF_INPUT:",
          "",
          "[Added Lines]",
          "508:   uint32_t flags = TEE_MEMORY_ACCESS_READ |",
          "509:      TEE_MEMORY_ACCESS_ANY_OWNER;",
          "514:    flags |= TEE_MEMORY_ACCESS_WRITE;",
          "516:   case TEE_PARAM_TYPE_MEMREF_INPUT:",
          "520:    if (tee_mmu_check_access_rights(utc, flags, a, b))",
          "521:     return TEE_ERROR_ACCESS_DENIED;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "522:    break;",
          "523:   }",
          "524:  }",
          "525: }",
          "527: static TEE_Result alloc_temp_sec_mem(size_t size, struct mobj **mobj,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "534:  return TEE_SUCCESS;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "575:    (uaddr_t)callee_params, sizeof(struct utee_params));",
          "576:   if (res != TEE_SUCCESS)",
          "577:    return res;",
          "579:  }",
          "581:  if (called_sess && is_pseudo_ta_ctx(called_sess->ctx)) {",
          "",
          "[Removed Lines]",
          "578:   utee_param_to_param(param, callee_params);",
          "",
          "[Added Lines]",
          "588:   res = utee_param_to_param(utc, param, callee_params);",
          "589:   if (res != TEE_SUCCESS)",
          "590:    return res;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "54ebc3ac7ca69198048e77572eb484056bb49b90",
      "candidate_info": {
        "commit_hash": "54ebc3ac7ca69198048e77572eb484056bb49b90",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/54ebc3ac7ca69198048e77572eb484056bb49b90",
        "files": [
          "core/tee/tee_svc_cryp.c"
        ],
        "message": "svc: avoid TOCTOU issue in syscall_hash_final\n\nWhen checking that the supplied buffer is big enough to fit the computed\ndigest one should use the local copy 'hlen' instead of 'hash_len' to\nprevent that a malicious attacker in REE have changed the size of\n'hash_len' after it has been copied to the local buffer.\n\n(TOCTOU: Time Of Check To Time of Use)\n\nFixes: \"Double-fetch of length in syscall_hash_final (x2)\" as reported\nby Riscure.\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
        "before_after_code_files": [
          "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/2745"
        ],
        "olp_code_files": {
          "patch": [
            "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
          ],
          "candidate": [
            "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
          ]
        }
      },
      "candidate_diff": {
        "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c": [
          "File: core/tee/tee_svc_cryp.c -> core/tee/tee_svc_cryp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2283: {",
          "2284:  TEE_Result res, res2;",
          "2285:  size_t hash_size;",
          "2287:  struct tee_cryp_state *cs;",
          "2288:  struct tee_ta_session *sess;",
          "",
          "[Removed Lines]",
          "2286:  uint64_t hlen;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2302:  if (res != TEE_SUCCESS)",
          "2303:   return res;",
          "2305:  res = tee_svc_copy_from_user(&hlen, hash_len, sizeof(hlen));",
          "2306:  if (res != TEE_SUCCESS)",
          "2307:   return res;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2304:  uint64_t hlen = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2323:   res = tee_hash_get_digest_size(cs->algo, &hash_size);",
          "2324:   if (res != TEE_SUCCESS)",
          "2325:    return res;",
          "2327:    res = TEE_ERROR_SHORT_BUFFER;",
          "2328:    goto out;",
          "2329:   }",
          "",
          "[Removed Lines]",
          "2326:   if (*hash_len < hash_size) {",
          "",
          "[Added Lines]",
          "2326:   if (hlen < hash_size) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2344:   res = tee_mac_get_digest_size(cs->algo, &hash_size);",
          "2345:   if (res != TEE_SUCCESS)",
          "2346:    return res;",
          "2348:    res = TEE_ERROR_SHORT_BUFFER;",
          "2349:    goto out;",
          "2350:   }",
          "",
          "[Removed Lines]",
          "2347:   if (*hash_len < hash_size) {",
          "",
          "[Added Lines]",
          "2347:   if (hlen < hash_size) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9607c419f030a02b2971536db4d384c10ae0e40f",
      "candidate_info": {
        "commit_hash": "9607c419f030a02b2971536db4d384c10ae0e40f",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/9607c419f030a02b2971536db4d384c10ae0e40f",
        "files": [
          "core/tee/tee_fs_key_manager.c"
        ],
        "message": "rpmb: check return value from essiv call\n\nAn error in the function essiv, as for example memory allocation failure\ncould result in an uninitialized IV, which means that the IV used for\nen/decryption would consist of data previously stored at this memory\nlocation. This could eventually corrupt the filesystem.\n\nFixes: \"Return value of cryptographic function is unchecked\" by Riscure.\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
        "before_after_code_files": [
          "core/tee/tee_fs_key_manager.c||core/tee/tee_fs_key_manager.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/2745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/tee/tee_fs_key_manager.c||core/tee/tee_fs_key_manager.c": [
          "File: core/tee/tee_fs_key_manager.c -> core/tee/tee_fs_key_manager.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "261:  res = essiv(iv, fek, blk_idx);",
          "264:  res = crypto_cipher_alloc_ctx(&ctx, algo);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "262:  if (res != TEE_SUCCESS)",
          "263:   return res;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "70697bf3c5dc3d201341b01a1a8e5bc6d2fb48f8",
      "candidate_info": {
        "commit_hash": "70697bf3c5dc3d201341b01a1a8e5bc6d2fb48f8",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/70697bf3c5dc3d201341b01a1a8e5bc6d2fb48f8",
        "files": [
          "core/tee/tee_svc_cryp.c"
        ],
        "message": "svc: check for allocation overflow in crypto calls part 2\n\nWithout checking for overflow there is a risk of allocating a buffer\nwith size smaller than anticipated and as a consequence of that it might\nlead to a heap based overflow with attacker controlled data written\noutside the boundaries of the buffer.\n\nFixes: OP-TEE-2018-0011: \"Integer overflow in crypto system calls (x2)\"\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
        "before_after_code_files": [
          "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/2745"
        ],
        "olp_code_files": {
          "patch": [
            "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
          ],
          "candidate": [
            "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
          ]
        }
      },
      "candidate_diff": {
        "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c": [
          "File: core/tee/tee_svc_cryp.c -> core/tee/tee_svc_cryp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3274:  if (res != TEE_SUCCESS)",
          "3275:   return res;",
          "3278:  if (!params)",
          "3279:   return TEE_ERROR_OUT_OF_MEMORY;",
          "3280:  res = copy_in_attrs(utc, usr_params, num_params, params);",
          "",
          "[Removed Lines]",
          "3277:  params = malloc(sizeof(TEE_Attribute) * num_params);",
          "",
          "[Added Lines]",
          "3277:  size_t alloc_size = 0;",
          "3279:  if (MUL_OVERFLOW(sizeof(TEE_Attribute), num_params, &alloc_size))",
          "3280:   return TEE_ERROR_OVERFLOW;",
          "3282:  params = malloc(alloc_size);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3436:  if (res != TEE_SUCCESS)",
          "3437:   return res;",
          "3440:  if (!params)",
          "3441:   return TEE_ERROR_OUT_OF_MEMORY;",
          "3442:  res = copy_in_attrs(utc, usr_params, num_params, params);",
          "",
          "[Removed Lines]",
          "3439:  params = malloc(sizeof(TEE_Attribute) * num_params);",
          "",
          "[Added Lines]",
          "3444:  size_t alloc_size = 0;",
          "3446:  if (MUL_OVERFLOW(sizeof(TEE_Attribute), num_params, &alloc_size))",
          "3447:   return TEE_ERROR_OVERFLOW;",
          "3449:  params = malloc(alloc_size);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ea8357c16494f8eb0bcfb6ebd5933400bda78320",
      "candidate_info": {
        "commit_hash": "ea8357c16494f8eb0bcfb6ebd5933400bda78320",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/ea8357c16494f8eb0bcfb6ebd5933400bda78320",
        "files": [
          "core/tee/tee_svc_cryp.c"
        ],
        "message": "svc: check for overflow when allocating a BigNum buffer\n\nTo avoid overflow errors and copy more data than being allocated we must\ncheck for overflow when allocating a buffer for the bignum-buffer which\nis 8 times larger than the binary buffer.\n\nFixes: \"Integer overflow in crypto system call\" as reported by Riscure.\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
        "before_after_code_files": [
          "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/2745"
        ],
        "olp_code_files": {
          "patch": [
            "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
          ],
          "candidate": [
            "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
          ]
        }
      },
      "candidate_diff": {
        "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c": [
          "File: core/tee/tee_svc_cryp.c -> core/tee/tee_svc_cryp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2705:  }",
          "2707:  if (cs->algo == TEE_ALG_DH_DERIVE_SHARED_SECRET) {",
          "2709:   struct bignum *pub;",
          "2710:   struct bignum *ss;",
          "",
          "[Removed Lines]",
          "2708:   size_t alloc_size;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2715:    goto out;",
          "2716:   }",
          "2719:   pub = crypto_bignum_allocate(alloc_size);",
          "2720:   ss = crypto_bignum_allocate(alloc_size);",
          "2721:   if (pub && ss) {",
          "2722:    crypto_bignum_bin2bn(params[0].content.ref.buffer,",
          "2724:    res = crypto_acipher_dh_shared_secret(ko->attr,",
          "2725:              pub, ss);",
          "2726:    if (res == TEE_SUCCESS) {",
          "",
          "[Removed Lines]",
          "2718:   alloc_size = params[0].content.ref.length * 8;",
          "2723:           params[0].content.ref.length, pub);",
          "",
          "[Added Lines]",
          "2717:   size_t bin_size = params[0].content.ref.length;",
          "2719:   if (MUL_OVERFLOW(bin_size, 8, &alloc_size)) {",
          "2720:    res = TEE_ERROR_OVERFLOW;",
          "2721:    goto out;",
          "2722:   }",
          "2728:           bin_size, pub);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2737:   crypto_bignum_free(pub);",
          "2738:   crypto_bignum_free(ss);",
          "2739:  } else if (TEE_ALG_GET_MAIN_ALG(cs->algo) == TEE_MAIN_ALGO_ECDH) {",
          "2741:   struct ecc_public_key key_public;",
          "2742:   uint8_t *pt_secret;",
          "2743:   unsigned long pt_secret_len;",
          "",
          "[Removed Lines]",
          "2740:   size_t alloc_size;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}