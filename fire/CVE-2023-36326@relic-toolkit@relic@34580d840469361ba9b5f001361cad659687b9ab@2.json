{
  "cve_id": "CVE-2023-36326",
  "cve_desc": "Integer Overflow vulnerability in RELIC before commit 34580d840469361ba9b5f001361cad659687b9ab, allows attackers to execute arbitrary code, cause a denial of service, and escalate privileges when calling realloc function in bn_grow function.",
  "repo": "relic-toolkit/relic",
  "patch_hash": "34580d840469361ba9b5f001361cad659687b9ab",
  "patch_info": {
    "commit_hash": "34580d840469361ba9b5f001361cad659687b9ab",
    "repo": "relic-toolkit/relic",
    "commit_url": "https://github.com/relic-toolkit/relic/commit/34580d840469361ba9b5f001361cad659687b9ab",
    "files": [
      "bench/bench_bn.c",
      "bench/bench_cp.c",
      "bench/bench_epx.c",
      "include/relic_bn.h",
      "include/relic_cp.h",
      "include/relic_eb.h",
      "include/relic_ed.h",
      "include/relic_ep.h",
      "include/relic_epx.h",
      "include/relic_fb.h",
      "include/relic_fp.h",
      "include/relic_fpx.h",
      "include/relic_md.h",
      "include/relic_rand.h",
      "include/relic_util.h",
      "src/bn/relic_bn_gcd.c",
      "src/bn/relic_bn_mem.c",
      "src/bn/relic_bn_mxp.c",
      "src/bn/relic_bn_prime.c",
      "src/bn/relic_bn_rec.c",
      "src/bn/relic_bn_shift.c",
      "src/bn/relic_bn_smb.c",
      "src/bn/relic_bn_srt.c",
      "src/bn/relic_bn_util.c",
      "src/cp/relic_cp_bls.c",
      "src/cp/relic_cp_cmlhs.c",
      "src/cp/relic_cp_pbpsi.c",
      "src/cp/relic_cp_rsa.c",
      "src/cp/relic_cp_sokaka.c",
      "src/cp/relic_cp_vbnn.c",
      "src/eb/relic_eb_map.c",
      "src/eb/relic_eb_mul.c",
      "src/eb/relic_eb_mul_sim.c",
      "src/eb/relic_eb_util.c",
      "src/ed/relic_ed_map.c",
      "src/ed/relic_ed_mul.c",
      "src/ed/relic_ed_mul_fix.c",
      "src/ed/relic_ed_mul_sim.c",
      "src/ed/relic_ed_util.c",
      "src/ep/relic_ep_map.c",
      "src/ep/relic_ep_mul.c",
      "src/ep/relic_ep_mul_fix.c",
      "src/ep/relic_ep_mul_sim.c",
      "src/ep/relic_ep_util.c",
      "src/epx/relic_ep2_map.c",
      "src/epx/relic_ep2_mul.c",
      "src/epx/relic_ep2_mul_fix.c",
      "src/epx/relic_ep2_mul_sim.c",
      "src/epx/relic_ep2_util.c",
      "src/epx/relic_ep4_map.c",
      "src/epx/relic_ep4_mul.c",
      "src/epx/relic_ep4_mul_fix.c",
      "src/epx/relic_ep4_mul_sim.c",
      "src/epx/relic_ep4_util.c",
      "src/fb/relic_fb_exp.c",
      "src/fb/relic_fb_util.c",
      "src/fp/relic_fp_exp.c",
      "src/fp/relic_fp_prime.c",
      "src/fp/relic_fp_util.c",
      "src/fpx/relic_fpx_cyc.c",
      "src/fpx/relic_fpx_exp.c",
      "src/fpx/relic_fpx_util.c",
      "src/md/relic_md_blake2s.c",
      "src/md/relic_md_hmac.c",
      "src/md/relic_md_kdf.c",
      "src/md/relic_md_mgf.c",
      "src/md/relic_md_sha224.c",
      "src/md/relic_md_sha256.c",
      "src/md/relic_md_sha384.c",
      "src/md/relic_md_sha512.c",
      "src/pp/relic_pp_map_k12.c",
      "src/pp/relic_pp_map_k24.c",
      "src/pp/relic_pp_map_k48.c",
      "src/pp/relic_pp_map_k54.c",
      "src/pp/relic_pp_map_k8.c",
      "src/rand/relic_rand_core.c",
      "src/rand/relic_rand_hashd.c",
      "src/relic_util.c",
      "test/test_bn.c",
      "test/test_core.c",
      "test/test_pc.c",
      "test/test_rand.c"
    ],
    "message": "Huge commit improving the API to use size_t instead of int.",
    "before_after_code_files": [
      "bench/bench_bn.c||bench/bench_bn.c",
      "bench/bench_cp.c||bench/bench_cp.c",
      "bench/bench_epx.c||bench/bench_epx.c",
      "include/relic_bn.h||include/relic_bn.h",
      "include/relic_cp.h||include/relic_cp.h",
      "include/relic_eb.h||include/relic_eb.h",
      "include/relic_ed.h||include/relic_ed.h",
      "include/relic_ep.h||include/relic_ep.h",
      "include/relic_epx.h||include/relic_epx.h",
      "include/relic_fb.h||include/relic_fb.h",
      "include/relic_fp.h||include/relic_fp.h",
      "include/relic_fpx.h||include/relic_fpx.h",
      "include/relic_md.h||include/relic_md.h",
      "include/relic_rand.h||include/relic_rand.h",
      "include/relic_util.h||include/relic_util.h",
      "src/bn/relic_bn_gcd.c||src/bn/relic_bn_gcd.c",
      "src/bn/relic_bn_mem.c||src/bn/relic_bn_mem.c",
      "src/bn/relic_bn_mxp.c||src/bn/relic_bn_mxp.c",
      "src/bn/relic_bn_prime.c||src/bn/relic_bn_prime.c",
      "src/bn/relic_bn_rec.c||src/bn/relic_bn_rec.c",
      "src/bn/relic_bn_shift.c||src/bn/relic_bn_shift.c",
      "src/bn/relic_bn_smb.c||src/bn/relic_bn_smb.c",
      "src/bn/relic_bn_srt.c||src/bn/relic_bn_srt.c",
      "src/bn/relic_bn_util.c||src/bn/relic_bn_util.c",
      "src/cp/relic_cp_bls.c||src/cp/relic_cp_bls.c",
      "src/cp/relic_cp_cmlhs.c||src/cp/relic_cp_cmlhs.c",
      "src/cp/relic_cp_pbpsi.c||src/cp/relic_cp_pbpsi.c",
      "src/cp/relic_cp_rsa.c||src/cp/relic_cp_rsa.c",
      "src/cp/relic_cp_sokaka.c||src/cp/relic_cp_sokaka.c",
      "src/cp/relic_cp_vbnn.c||src/cp/relic_cp_vbnn.c",
      "src/eb/relic_eb_map.c||src/eb/relic_eb_map.c",
      "src/eb/relic_eb_mul.c||src/eb/relic_eb_mul.c",
      "src/eb/relic_eb_mul_sim.c||src/eb/relic_eb_mul_sim.c",
      "src/eb/relic_eb_util.c||src/eb/relic_eb_util.c",
      "src/ed/relic_ed_map.c||src/ed/relic_ed_map.c",
      "src/ed/relic_ed_mul.c||src/ed/relic_ed_mul.c",
      "src/ed/relic_ed_mul_fix.c||src/ed/relic_ed_mul_fix.c",
      "src/ed/relic_ed_mul_sim.c||src/ed/relic_ed_mul_sim.c",
      "src/ed/relic_ed_util.c||src/ed/relic_ed_util.c",
      "src/ep/relic_ep_map.c||src/ep/relic_ep_map.c",
      "src/ep/relic_ep_mul.c||src/ep/relic_ep_mul.c",
      "src/ep/relic_ep_mul_fix.c||src/ep/relic_ep_mul_fix.c",
      "src/ep/relic_ep_mul_sim.c||src/ep/relic_ep_mul_sim.c",
      "src/ep/relic_ep_util.c||src/ep/relic_ep_util.c",
      "src/epx/relic_ep2_map.c||src/epx/relic_ep2_map.c",
      "src/epx/relic_ep2_mul.c||src/epx/relic_ep2_mul.c",
      "src/epx/relic_ep2_mul_fix.c||src/epx/relic_ep2_mul_fix.c",
      "src/epx/relic_ep2_mul_sim.c||src/epx/relic_ep2_mul_sim.c",
      "src/epx/relic_ep2_util.c||src/epx/relic_ep2_util.c",
      "src/epx/relic_ep4_map.c||src/epx/relic_ep4_map.c",
      "src/epx/relic_ep4_mul.c||src/epx/relic_ep4_mul.c",
      "src/epx/relic_ep4_mul_fix.c||src/epx/relic_ep4_mul_fix.c",
      "src/epx/relic_ep4_mul_sim.c||src/epx/relic_ep4_mul_sim.c",
      "src/epx/relic_ep4_util.c||src/epx/relic_ep4_util.c",
      "src/fb/relic_fb_exp.c||src/fb/relic_fb_exp.c",
      "src/fb/relic_fb_util.c||src/fb/relic_fb_util.c",
      "src/fp/relic_fp_exp.c||src/fp/relic_fp_exp.c",
      "src/fp/relic_fp_prime.c||src/fp/relic_fp_prime.c",
      "src/fp/relic_fp_util.c||src/fp/relic_fp_util.c",
      "src/fpx/relic_fpx_cyc.c||src/fpx/relic_fpx_cyc.c",
      "src/fpx/relic_fpx_exp.c||src/fpx/relic_fpx_exp.c",
      "src/fpx/relic_fpx_util.c||src/fpx/relic_fpx_util.c",
      "src/md/relic_md_blake2s.c||src/md/relic_md_blake2s.c",
      "src/md/relic_md_hmac.c||src/md/relic_md_hmac.c",
      "src/md/relic_md_kdf.c||src/md/relic_md_kdf.c",
      "src/md/relic_md_mgf.c||src/md/relic_md_mgf.c",
      "src/md/relic_md_sha224.c||src/md/relic_md_sha224.c",
      "src/md/relic_md_sha256.c||src/md/relic_md_sha256.c",
      "src/md/relic_md_sha384.c||src/md/relic_md_sha384.c",
      "src/md/relic_md_sha512.c||src/md/relic_md_sha512.c",
      "src/pp/relic_pp_map_k12.c||src/pp/relic_pp_map_k12.c",
      "src/pp/relic_pp_map_k24.c||src/pp/relic_pp_map_k24.c",
      "src/pp/relic_pp_map_k48.c||src/pp/relic_pp_map_k48.c",
      "src/pp/relic_pp_map_k54.c||src/pp/relic_pp_map_k54.c",
      "src/pp/relic_pp_map_k8.c||src/pp/relic_pp_map_k8.c",
      "src/rand/relic_rand_core.c||src/rand/relic_rand_core.c",
      "src/rand/relic_rand_hashd.c||src/rand/relic_rand_hashd.c",
      "src/relic_util.c||src/relic_util.c",
      "test/test_bn.c||test/test_bn.c",
      "test/test_core.c||test/test_core.c",
      "test/test_pc.c||test/test_pc.c",
      "test/test_rand.c||test/test_rand.c"
    ]
  },
  "patch_diff": {
    "bench/bench_bn.c||bench/bench_bn.c": [
      "File: bench/bench_bn.c -> bench/bench_bn.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "284:  bn_t a, b, c, d[3], e[3];",
      "285:  crt_t crt;",
      "286:  dig_t f;",
      "289:  bn_null(a);",
      "290:  bn_null(b);",
      "",
      "[Removed Lines]",
      "287:  int len;",
      "",
      "[Added Lines]",
      "287:  size_t len;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "892:  BENCH_RUN(\"bn_rec_naf\") {",
      "893:   int8_t naf[RLC_BN_BITS + 1];",
      "895:   bn_rand(a, RLC_POS, RLC_BN_BITS);",
      "896:   BENCH_ADD((len = RLC_BN_BITS + 1, bn_rec_naf(naf, &len, a, 4)));",
      "897:  }",
      "",
      "[Removed Lines]",
      "894:   int len;",
      "",
      "[Added Lines]",
      "894:   size_t len;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "901:  if (eb_param_set_any_kbltz() == RLC_OK) {",
      "902:   BENCH_RUN(\"bn_rec_tnaf\") {",
      "903:    int8_t tnaf[RLC_FB_BITS + 8];",
      "905:    eb_curve_get_ord(b);",
      "906:    bn_rand_mod(a, b);",
      "907:    if (eb_curve_opt_a() == RLC_ZERO) {",
      "",
      "[Removed Lines]",
      "904:    int len = RLC_BN_BITS + 1;",
      "",
      "[Added Lines]",
      "904:    size_t len = RLC_BN_BITS + 1;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "929:  BENCH_RUN(\"bn_rec_reg\") {",
      "930:   int8_t naf[RLC_BN_BITS + 1];",
      "932:   bn_rand(a, RLC_POS, RLC_BN_BITS);",
      "933:   BENCH_ADD((len = RLC_BN_BITS + 1, bn_rec_reg(naf, &len, a, RLC_BN_BITS, 4)));",
      "934:  }",
      "",
      "[Removed Lines]",
      "931:   int len = RLC_BN_BITS + 1;",
      "",
      "[Added Lines]",
      "931:   size_t len = RLC_BN_BITS + 1;",
      "",
      "---------------"
    ],
    "bench/bench_cp.c||bench/bench_cp.c": [
      "File: bench/bench_cp.c -> bench/bench_cp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "141:  dig_t in, new;",
      "142:  uint8_t out[RLC_BN_BITS / 8 + 1];",
      "143:  size_t out_len;",
      "145:  bdpe_null(pub);",
      "146:  bdpe_null(prv);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "144:  dig_t prime = 0xFB;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "148:  bdpe_new(pub);",
      "149:  bdpe_new(prv);",
      "154:  BENCH_RUN(\"cp_bdpe_enc\") {",
      "155:   out_len = RLC_BN_BITS / 8 + 1;",
      "156:   rand_bytes(out, 1);",
      "158:   BENCH_ADD(cp_bdpe_enc(out, &out_len, in, pub));",
      "159:   cp_bdpe_dec(&new, out, out_len, prv);",
      "160:  } BENCH_END;",
      "",
      "[Removed Lines]",
      "151:  BENCH_ONE(\"cp_bdpe_gen\", cp_bdpe_gen(pub, prv, bn_get_prime(47),",
      "152:   RLC_BN_BITS), 1);",
      "157:   in = out[0] % bn_get_prime(47);",
      "",
      "[Added Lines]",
      "152:  BENCH_ONE(\"cp_bdpe_gen\", cp_bdpe_gen(pub, prv, prime, RLC_BN_BITS), 1);",
      "157:   in = out[0] % prime;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "162:  BENCH_RUN(\"cp_bdpe_dec\") {",
      "163:   out_len = RLC_BN_BITS / 8 + 1;",
      "164:   rand_bytes(out, 1);",
      "166:   cp_bdpe_enc(out, &out_len, in, pub);",
      "167:   BENCH_ADD(cp_bdpe_dec(&new, out, out_len, prv));",
      "168:  } BENCH_END;",
      "",
      "[Removed Lines]",
      "165:   in = out[0] % bn_get_prime(47);",
      "",
      "[Added Lines]",
      "165:   in = out[0] % prime;",
      "",
      "---------------"
    ],
    "bench/bench_epx.c||bench/bench_epx.c": [
      "File: bench/bench_epx.c -> bench/bench_epx.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "37: static void memory2(void) {",
      "38:  ep2_t a[BENCH];",
      "43:  for (int i = 0; i < BENCH; i++) {",
      "44:   ep2_free(a[i]);",
      "45:  }",
      "",
      "[Removed Lines]",
      "40:  BENCH_FEW(\"ep2_null\", ep4_null(a[i]), 1);",
      "42:  BENCH_FEW(\"ep2_new\", ep4_new(a[i]), 1);",
      "",
      "[Added Lines]",
      "40:  BENCH_FEW(\"ep2_null\", ep2_null(a[i]), 1);",
      "42:  BENCH_FEW(\"ep2_new\", ep2_new(a[i]), 1);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "47:  for (int i = 0; i < BENCH; i++) {",
      "48:   ep2_new(a[i]);",
      "49:  }",
      "52:  (void)a;",
      "53: }",
      "",
      "[Removed Lines]",
      "50:  BENCH_FEW(\"ep2_free\", ep4_free(a[i]), 1);",
      "",
      "[Added Lines]",
      "50:  BENCH_FEW(\"ep2_free\", ep2_free(a[i]), 1);",
      "",
      "---------------"
    ],
    "include/relic_bn.h||include/relic_bn.h": [
      "File: include/relic_bn.h -> include/relic_bn.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "66: #if BN_MAGNI == DOUBLE",
      "68: #elif BN_MAGNI == CARRY",
      "70: #elif BN_MAGNI == SINGLE",
      "72: #endif",
      "",
      "[Removed Lines]",
      "56: #define RLC_BN_BITS  ((int)BN_PRECI)",
      "61: #define RLC_BN_DIGS  ((int)RLC_CEIL(BN_PRECI, RLC_DIG))",
      "67: #define RLC_BN_SIZE  ((int)(2 * RLC_BN_DIGS + 2))",
      "69: #define RLC_BN_SIZE  ((int)(RLC_BN_DIGS + 1))",
      "71: #define RLC_BN_SIZE  ((int)RLC_BN_DIGS)",
      "",
      "[Added Lines]",
      "56: #define RLC_BN_BITS  ((size_t)BN_PRECI)",
      "61: #define RLC_BN_DIGS  ((size_t)RLC_CEIL(BN_PRECI, RLC_DIG))",
      "67: #define RLC_BN_SIZE  ((size_t)(2 * RLC_BN_DIGS + 2))",
      "69: #define RLC_BN_SIZE  ((size_t)(RLC_BN_DIGS + 1))",
      "71: #define RLC_BN_SIZE  ((size_t)RLC_BN_DIGS)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "95: typedef struct {",
      "101:  int sign;",
      "102: #if ALLOC == DYNAMIC",
      "",
      "[Removed Lines]",
      "97:  int alloc;",
      "99:  int used;",
      "",
      "[Added Lines]",
      "97:  size_t alloc;",
      "99:  size_t used;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "460: void bn_make(bn_t a, int digits);",
      "",
      "[Added Lines]",
      "460: void bn_make(bn_t a, size_t digits);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "479: void bn_grow(bn_t a, int digits);",
      "",
      "[Added Lines]",
      "479: void bn_grow(bn_t a, size_t digits);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "549: int bn_bits(const bn_t a);",
      "",
      "[Added Lines]",
      "549: size_t bn_bits(const bn_t a);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "558: int bn_get_bit(const bn_t a, int bit);",
      "",
      "[Added Lines]",
      "558: int bn_get_bit(const bn_t a, size_t bit);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "567: void bn_set_bit(bn_t a, int bit, int value);",
      "",
      "[Added Lines]",
      "567: void bn_set_bit(bn_t a, size_t bit, int value);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "575: int bn_ham(const bn_t a);",
      "",
      "[Added Lines]",
      "575: size_t bn_ham(const bn_t a);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "602: void bn_set_2b(bn_t a, int b);",
      "",
      "[Added Lines]",
      "602: void bn_set_2b(bn_t a, size_t b);",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "611: void bn_rand(bn_t a, int sign, int bits);",
      "",
      "[Added Lines]",
      "611: void bn_rand(bn_t a, int sign, size_t bits);",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "638: int bn_size_str(const bn_t a, int radix);",
      "",
      "[Added Lines]",
      "638: size_t bn_size_str(const bn_t a, unsigned int radix);",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "650: void bn_read_str(bn_t a, const char *str, int len, int radix);",
      "",
      "[Added Lines]",
      "650: void bn_read_str(bn_t a, const char *str, size_t len, unsigned int radix);",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "663: void bn_write_str(char *str, int len, const bn_t a, int radix);",
      "",
      "[Added Lines]",
      "663: void bn_write_str(char *str, size_t len, const bn_t a, unsigned radix);",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "671: int bn_size_bin(const bn_t a);",
      "",
      "[Added Lines]",
      "671: size_t bn_size_bin(const bn_t a);",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "681: void bn_read_bin(bn_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "681: void bn_read_bin(bn_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "692: void bn_write_bin(uint8_t *bin, int len, const bn_t a);",
      "",
      "[Added Lines]",
      "692: void bn_write_bin(uint8_t *bin, size_t len, const bn_t a);",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "700: int bn_size_raw(const bn_t a);",
      "",
      "[Added Lines]",
      "700: size_t bn_size_raw(const bn_t a);",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "709: void bn_read_raw(bn_t a, const dig_t *raw, int len);",
      "",
      "[Added Lines]",
      "709: void bn_read_raw(bn_t a, const dig_t *raw, size_t len);",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "719: void bn_write_raw(dig_t *raw, int len, const bn_t a);",
      "",
      "[Added Lines]",
      "719: void bn_write_raw(dig_t *raw, size_t len, const bn_t a);",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "873: void bn_lsh(bn_t c, const bn_t a, int bits);",
      "",
      "[Added Lines]",
      "873: void bn_lsh(bn_t c, const bn_t a, unsigned int bits);",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "883: void bn_rsh(bn_t c, const bn_t a, int bits);",
      "",
      "[Added Lines]",
      "883: void bn_rsh(bn_t c, const bn_t a, unsigned int bits);",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1313: void bn_gen_prime_basic(bn_t a, int bits);",
      "",
      "[Added Lines]",
      "1313: void bn_gen_prime_basic(bn_t a, size_t bits);",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1321: void bn_gen_prime_safep(bn_t a, int bits);",
      "",
      "[Added Lines]",
      "1321: void bn_gen_prime_safep(bn_t a, size_t bits);",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1330: void bn_gen_prime_stron(bn_t a, int bits);",
      "",
      "[Added Lines]",
      "1330: void bn_gen_prime_stron(bn_t a, size_t bits);",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1341: int bn_gen_prime_factor(bn_t a, bn_t b, int abits, int bbits);",
      "",
      "[Added Lines]",
      "1341: int bn_gen_prime_factor(bn_t a, bn_t b, size_t abits, size_t bbits);",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1373: void bn_rec_win(uint8_t *win, int *len, const bn_t k, int w);",
      "",
      "[Added Lines]",
      "1373: void bn_rec_win(uint8_t *win, size_t *len, const bn_t k, size_t w);",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1385: void bn_rec_slw(uint8_t *win, int *len, const bn_t k, int w);",
      "",
      "[Added Lines]",
      "1385: void bn_rec_slw(uint8_t *win, size_t *len, const bn_t k, size_t w);",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1397: void bn_rec_naf(int8_t *naf, int *len, const bn_t k, int w);",
      "",
      "[Added Lines]",
      "1397: void bn_rec_naf(int8_t *naf, size_t *len, const bn_t k, size_t w);",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1411: void bn_rec_tnaf(int8_t *tnaf, int *len, const bn_t k, int8_t u, int m, int w);",
      "",
      "[Added Lines]",
      "1411: void bn_rec_tnaf(int8_t *tnaf, size_t *len, const bn_t k, int8_t u, size_t m,",
      "1412:   size_t w);",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1425: void bn_rec_rtnaf(int8_t *tnaf, int *len, const bn_t k, int8_t u, int m, int w);",
      "",
      "[Added Lines]",
      "1426: void bn_rec_rtnaf(int8_t *tnaf, size_t *len, const bn_t k, int8_t u, size_t m,",
      "1427:   size_t w);",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1437: void bn_rec_tnaf_get(uint8_t *t, int8_t *beta, int8_t *gama, int8_t u, int w);",
      "",
      "[Added Lines]",
      "1439: void bn_rec_tnaf_get(uint8_t *t, int8_t *beta, int8_t *gama, int8_t u,",
      "1440:   size_t w);",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1449: void bn_rec_tnaf_mod(bn_t r0, bn_t r1, const bn_t k, int u, int m);",
      "",
      "[Added Lines]",
      "1452: void bn_rec_tnaf_mod(bn_t r0, bn_t r1, const bn_t k, int u, size_t m);",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1462: void bn_rec_reg(int8_t *naf, int *len, const bn_t k, int n, int w);",
      "",
      "[Added Lines]",
      "1465: void bn_rec_reg(int8_t *naf, size_t *len, const bn_t k, size_t n, size_t w);",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1474: void bn_rec_jsf(int8_t *jsf, int *len, const bn_t k, const bn_t l);",
      "",
      "[Added Lines]",
      "1477: void bn_rec_jsf(int8_t *jsf, size_t *len, const bn_t k, const bn_t l);",
      "",
      "---------------"
    ],
    "include/relic_cp.h||include/relic_cp.h": [
      "File: include/relic_cp.h -> include/relic_cp.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "743: int cp_rsa_gen(rsa_t pub, rsa_t prv, int bits);",
      "",
      "[Added Lines]",
      "743: int cp_rsa_gen(rsa_t pub, rsa_t prv, size_t bits);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1543: int cp_bls_sig(g1_t s, const uint8_t *msg, int len, const bn_t d);",
      "",
      "[Added Lines]",
      "1543: int cp_bls_sig(g1_t s, const uint8_t *msg, size_t len, const bn_t d);",
      "",
      "---------------"
    ],
    "include/relic_eb.h||include/relic_eb.h": [
      "File: include/relic_eb.h -> include/relic_eb.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "563: void eb_read_bin(eb_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "563: void eb_read_bin(eb_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "575: void eb_write_bin(uint8_t *bin, int len, const eb_t a, int pack);",
      "",
      "[Added Lines]",
      "575: void eb_write_bin(uint8_t *bin, size_t len, const eb_t a, int pack);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "931: void eb_map(eb_t p, const uint8_t *msg, int len);",
      "",
      "[Added Lines]",
      "931: void eb_map(eb_t p, const uint8_t *msg, size_t len);",
      "",
      "---------------"
    ],
    "include/relic_ed.h||include/relic_ed.h": [
      "File: include/relic_ed.h -> include/relic_ed.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "485: void ed_map(ed_t p, const uint8_t *msg, int len);",
      "",
      "[Added Lines]",
      "485: void ed_map(ed_t p, const uint8_t *msg, size_t len);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "497: void ed_map_dst(ed_t p, const uint8_t *msg, int len, const uint8_t *dst, int dst_len);",
      "",
      "[Added Lines]",
      "497: void ed_map_dst(ed_t p, const uint8_t *msg, size_t len, const uint8_t *dst,",
      "498:   size_t dst_len);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "843: void ed_read_bin(ed_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "844: void ed_read_bin(ed_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "855: void ed_write_bin(uint8_t *bin, int len, const ed_t a, int pack);",
      "",
      "[Added Lines]",
      "856: void ed_write_bin(uint8_t *bin, size_t len, const ed_t a, int pack);",
      "",
      "---------------"
    ],
    "include/relic_ep.h||include/relic_ep.h": [
      "File: include/relic_ep.h -> include/relic_ep.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "814: void ep_read_bin(ep_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "814: void ep_read_bin(ep_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "826: void ep_write_bin(uint8_t *bin, int len, const ep_t a, int pack);",
      "",
      "[Added Lines]",
      "826: void ep_write_bin(uint8_t *bin, size_t len, const ep_t a, int pack);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1218: void ep_map_from_field(ep_t p, const uint8_t *uniform_bytes, int len);",
      "",
      "[Added Lines]",
      "1218: void ep_map_from_field(ep_t p, const uint8_t *uniform_bytes, size_t len);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1227: void ep_map(ep_t p, const uint8_t *msg, int len);",
      "",
      "[Added Lines]",
      "1227: void ep_map(ep_t p, const uint8_t *msg, size_t len);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1239: void ep_map_dst(ep_t p, const uint8_t *msg, int len, const uint8_t *dst,",
      "1240:   int dst_len);",
      "",
      "[Added Lines]",
      "1239: void ep_map_dst(ep_t p, const uint8_t *msg, size_t len, const uint8_t *dst,",
      "1240:   size_t dst_len);",
      "",
      "---------------"
    ],
    "include/relic_epx.h||include/relic_epx.h": [
      "File: include/relic_epx.h -> include/relic_epx.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "748: void ep2_read_bin(ep2_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "748: void ep2_read_bin(ep2_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "760: void ep2_write_bin(uint8_t *bin, int len, const ep2_t a, int pack);",
      "",
      "[Added Lines]",
      "760: void ep2_write_bin(uint8_t *bin, size_t len, const ep2_t a, int pack);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1063: void ep2_mul_sim_inter(ep2_t r, const ep2_t p, const bn_t k, const ep2_t q, const bn_t m);",
      "",
      "[Added Lines]",
      "1063: void ep2_mul_sim_inter(ep2_t r, const ep2_t p, const bn_t k, const ep2_t q,",
      "1064:    const bn_t m);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1075: void ep2_mul_sim_joint(ep2_t r, const ep2_t p, const bn_t k, const ep2_t q, const bn_t m);",
      "",
      "[Added Lines]",
      "1076: void ep2_mul_sim_joint(ep2_t r, const ep2_t p, const bn_t k, const ep2_t q,",
      "1077:    const bn_t m);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1086: void ep2_mul_sim_lot(ep2_t r, const ep2_t p[], const bn_t k[], int n);",
      "",
      "[Added Lines]",
      "1088: void ep2_mul_sim_lot(ep2_t r, const ep2_t p[], const bn_t k[], size_t n);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1108: void ep2_mul_sim_dig(ep2_t r, const ep2_t p[], const dig_t k[], int len);",
      "",
      "[Added Lines]",
      "1110: void ep2_mul_sim_dig(ep2_t r, const ep2_t p[], const dig_t k[], size_t len);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1137: void ep2_map_from_field(ep2_t p, const uint8_t *uniform_bytes, int len);",
      "",
      "[Added Lines]",
      "1139: void ep2_map_from_field(ep2_t p, const uint8_t *uniform_bytes, size_t len);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1146: void ep2_map(ep2_t p, const uint8_t *msg, int len);",
      "",
      "[Added Lines]",
      "1148: void ep2_map(ep2_t p, const uint8_t *msg, size_t len);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1158: void ep2_map_dst(ep2_t p, const uint8_t *msg, int len, const uint8_t *dst, int dst_len);",
      "",
      "[Added Lines]",
      "1160: void ep2_map_dst(ep2_t p, const uint8_t *msg, size_t len, const uint8_t *dst,",
      "1161:   size_t dst_len);",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1388: void ep4_read_bin(ep4_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "1391: void ep4_read_bin(ep4_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1400: void ep4_write_bin(uint8_t *bin, int len, const ep4_t a, int pack);",
      "",
      "[Added Lines]",
      "1403: void ep4_write_bin(uint8_t *bin, size_t len, const ep4_t a, int pack);",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1726: void ep4_mul_sim_lot(ep4_t r, const ep4_t p[], const bn_t k[], int n);",
      "",
      "[Added Lines]",
      "1729: void ep4_mul_sim_lot(ep4_t r, const ep4_t p[], const bn_t k[], size_t n);",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1748: void ep4_mul_sim_dig(ep4_t r, const ep4_t p[], const dig_t k[], int len);",
      "",
      "[Added Lines]",
      "1751: void ep4_mul_sim_dig(ep4_t r, const ep4_t p[], const dig_t k[], size_t len);",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1774: void ep4_map(ep4_t p, const uint8_t *msg, int len);",
      "",
      "[Added Lines]",
      "1777: void ep4_map(ep4_t p, const uint8_t *msg, size_t len);",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1786: void ep4_map_dst(ep4_t p, const uint8_t *msg, int len, const uint8_t *dst, int dst_len);",
      "",
      "[Added Lines]",
      "1789: void ep4_map_dst(ep4_t p, const uint8_t *msg, size_t len, const uint8_t *dst,",
      "1790:   size_t dst_len);",
      "",
      "---------------"
    ],
    "include/relic_fb.h||include/relic_fb.h": [
      "File: include/relic_fb.h -> include/relic_fb.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "51: #define RLC_FB_BITS  ((int)FB_POLYN)",
      "56: #define RLC_FB_DIGS  ((int)RLC_CEIL(RLC_FB_BITS, RLC_DIG))",
      "61: #define RLC_FB_BYTES  ((int)RLC_CEIL(RLC_FB_BITS, 8))",
      "",
      "[Added Lines]",
      "51: #define RLC_FB_BITS  ((size_t)FB_POLYN)",
      "56: #define RLC_FB_DIGS  ((size_t)RLC_CEIL(RLC_FB_BITS, RLC_DIG))",
      "61: #define RLC_FB_BYTES  ((size_t)RLC_CEIL(RLC_FB_BITS, 8))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "541: int fb_get_bit(const fb_t a, int bit);",
      "",
      "[Added Lines]",
      "541: int fb_get_bit(const fb_t a, size_t bit);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "550: void fb_set_bit(fb_t a, int bit, int value);",
      "",
      "[Added Lines]",
      "550: void fb_set_bit(fb_t a, size_t bit, int value);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "568: int fb_bits(const fb_t a);",
      "",
      "[Added Lines]",
      "568: size_t fb_bits(const fb_t a);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "593: int fb_size_str(const fb_t a, int radix);",
      "",
      "[Added Lines]",
      "593: size_t fb_size_str(const fb_t a, unsigned int radix);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "606: void fb_read_str(fb_t a, const char *str, int len, int radix);",
      "",
      "[Added Lines]",
      "606: void fb_read_str(fb_t a, const char *str, size_t len, unsigned int radix);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "619: void fb_write_str(char *str, int len, const fb_t a, int radix);",
      "629: void fb_read_bin(fb_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "619: void fb_write_str(char *str, size_t len, const fb_t a, unsigned int radix);",
      "629: void fb_read_bin(fb_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "639: void fb_write_bin(uint8_t *bin, int len, const fb_t a);",
      "",
      "[Added Lines]",
      "639: void fb_write_bin(uint8_t *bin, size_t len, const fb_t a);",
      "",
      "---------------"
    ],
    "include/relic_fp.h||include/relic_fp.h": [
      "File: include/relic_fp.h -> include/relic_fp.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "51: #define RLC_FP_BITS  ((int)FP_PRIME)",
      "56: #define RLC_FP_DIGS  ((int)RLC_CEIL(RLC_FP_BITS, RLC_DIG))",
      "61: #define RLC_FP_BYTES  ((int)RLC_CEIL(RLC_FP_BITS, 8))",
      "",
      "[Added Lines]",
      "51: #define RLC_FP_BITS  ((size_t)FP_PRIME)",
      "56: #define RLC_FP_DIGS  ((size_t)RLC_CEIL(RLC_FP_BITS, RLC_DIG))",
      "61: #define RLC_FP_BYTES  ((size_t)RLC_CEIL(RLC_FP_BITS, 8))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "510: void fp_prime_set_pairf(const bn_t x, int pairf);",
      "",
      "[Removed Lines]",
      "504: void fp_prime_set_pmers(const int *spars, int len);",
      "",
      "[Added Lines]",
      "504: void fp_prime_set_pmers(const int *spars, size_t len);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "656: int fp_get_bit(const fp_t a, int bit);",
      "",
      "[Added Lines]",
      "656: int fp_get_bit(const fp_t a, size_t bit);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "665: void fp_set_bit(fp_t a, int bit, int value);",
      "",
      "[Added Lines]",
      "665: void fp_set_bit(fp_t a, size_t bit, int value);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "684: int fp_bits(const fp_t a);",
      "",
      "[Added Lines]",
      "684: size_t fp_bits(const fp_t a);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "709: int fp_size_str(const fp_t a, int radix);",
      "",
      "[Added Lines]",
      "709: size_t fp_size_str(const fp_t a, unsigned int radix);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "721: void fp_read_str(fp_t a, const char *str, int len, int radix);",
      "",
      "[Added Lines]",
      "721: void fp_read_str(fp_t a, const char *str, size_t len, unsigned int radix);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "734: void fp_write_str(char *str, int len, const fp_t a, int radix);",
      "",
      "[Added Lines]",
      "734: void fp_write_str(char *str, size_t len, const fp_t a, unsigned int radix);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "744: void fp_read_bin(fp_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "744: void fp_read_bin(fp_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "754: void fp_write_bin(uint8_t *bin, int len, const fp_t a);",
      "",
      "[Added Lines]",
      "754: void fp_write_bin(uint8_t *bin, size_t len, const fp_t a);",
      "",
      "---------------"
    ],
    "include/relic_fpx.h||include/relic_fpx.h": [
      "File: include/relic_fpx.h -> include/relic_fpx.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1335: void fp2_read_bin(fp2_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "1335: void fp2_read_bin(fp2_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1347: void fp2_write_bin(uint8_t *bin, int len, const fp2_t a, int pack);",
      "",
      "[Added Lines]",
      "1347: void fp2_write_bin(uint8_t *bin, size_t len, const fp2_t a, int pack);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1693: void fp3_read_bin(fp3_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "1693: void fp3_read_bin(fp3_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1704: void fp3_write_bin(uint8_t *bin, int len, const fp3_t a);",
      "",
      "[Added Lines]",
      "1704: void fp3_write_bin(uint8_t *bin, size_t len, const fp3_t a);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1959: void fp4_read_bin(fp4_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "1959: void fp4_read_bin(fp4_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1970: void fp4_write_bin(uint8_t *bin, int len, const fp4_t a);",
      "",
      "[Added Lines]",
      "1970: void fp4_write_bin(uint8_t *bin, size_t len, const fp4_t a);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2229: void fp6_read_bin(fp6_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "2229: void fp6_read_bin(fp6_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2240: void fp6_write_bin(uint8_t *bin, int len, const fp6_t a);",
      "",
      "[Added Lines]",
      "2240: void fp6_write_bin(uint8_t *bin, size_t len, const fp6_t a);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2459: void fp8_read_bin(fp8_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "2459: void fp8_read_bin(fp8_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2470: void fp8_write_bin(uint8_t *bin, int len, const fp8_t a);",
      "",
      "[Added Lines]",
      "2470: void fp8_write_bin(uint8_t *bin, size_t len, const fp8_t a);",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2742: void fp9_read_bin(fp9_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "2742: void fp9_read_bin(fp9_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2753: void fp9_write_bin(uint8_t *bin, int len, const fp9_t a);",
      "",
      "[Added Lines]",
      "2753: void fp9_write_bin(uint8_t *bin, size_t len, const fp9_t a);",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2981: void fp12_read_bin(fp12_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "2981: void fp12_read_bin(fp12_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "2993: void fp12_write_bin(uint8_t *bin, int len, const fp12_t a, int pack);",
      "",
      "[Added Lines]",
      "2993: void fp12_write_bin(uint8_t *bin, size_t len, const fp12_t a, int pack);",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "3285: void fp2_exp_cyc_sim(fp2_t e, const fp2_t a, const bn_t b, const fp2_t c, const bn_t d);",
      "",
      "[Added Lines]",
      "3285: void fp2_exp_cyc_sim(fp2_t e, const fp2_t a, const bn_t b, const fp2_t c,",
      "3286:   const bn_t d);",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "3296: void fp12_exp_cyc_sim(fp12_t e, const fp12_t a, const bn_t b, const fp12_t c, const bn_t d);",
      "",
      "[Added Lines]",
      "3297: void fp12_exp_cyc_sim(fp12_t e, const fp12_t a, const bn_t b, const fp12_t c,",
      "3298:   const bn_t d);",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "3307: void fp12_exp_cyc_sps(fp12_t c, const fp12_t a, const int *b, int l, int s);",
      "",
      "[Added Lines]",
      "3309: void fp12_exp_cyc_sps(fp12_t c, const fp12_t a, const int *b, size_t l, int s);",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "3398: void fp18_read_bin(fp18_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "3400: void fp18_read_bin(fp18_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "3409: void fp18_write_bin(uint8_t *bin, int len, const fp18_t a);",
      "",
      "[Added Lines]",
      "3411: void fp18_write_bin(uint8_t *bin, size_t len, const fp18_t a);",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "3660: void fp24_read_bin(fp24_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "3662: void fp24_read_bin(fp24_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "3672: void fp24_write_bin(uint8_t *bin, int len, const fp24_t a, int pack);",
      "",
      "[Added Lines]",
      "3674: void fp24_write_bin(uint8_t *bin, size_t len, const fp24_t a, int pack);",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "3964: void fp24_exp_cyc_sps(fp24_t c, const fp24_t a, const int *b, int l, int s);",
      "",
      "[Added Lines]",
      "3966: void fp24_exp_cyc_sps(fp24_t c, const fp24_t a, const int *b, size_t l, int s);",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "4039: void fp48_read_bin(fp48_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "4041: void fp48_read_bin(fp48_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "4051: void fp48_write_bin(uint8_t *bin, int len, const fp48_t a, int pack);",
      "",
      "[Added Lines]",
      "4053: void fp48_write_bin(uint8_t *bin, size_t len, const fp48_t a, int pack);",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "4315: void fp48_exp_cyc_sps(fp48_t c, const fp48_t a, const int *b, int l, int s);",
      "",
      "[Added Lines]",
      "4317: void fp48_exp_cyc_sps(fp48_t c, const fp48_t a, const int *b, size_t l, int s);",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "4390: void fp54_read_bin(fp54_t a, const uint8_t *bin, int len);",
      "",
      "[Added Lines]",
      "4392: void fp54_read_bin(fp54_t a, const uint8_t *bin, size_t len);",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "4402: void fp54_write_bin(uint8_t *bin, int len, const fp54_t a, int pack);",
      "",
      "[Added Lines]",
      "4404: void fp54_write_bin(uint8_t *bin, size_t len, const fp54_t a, int pack);",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "4666: void fp54_exp_cyc_sps(fp54_t c, const fp54_t a, const int *b, int l, int s);",
      "",
      "[Added Lines]",
      "4668: void fp54_exp_cyc_sps(fp54_t c, const fp54_t a, const int *b, size_t l, int s);",
      "",
      "---------------"
    ],
    "include/relic_md.h||include/relic_md.h": [
      "File: include/relic_md.h -> include/relic_md.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "137: void md_map_sh224(uint8_t *hash, const uint8_t *msg, int len);",
      "",
      "[Added Lines]",
      "137: void md_map_sh224(uint8_t *hash, const uint8_t *msg, size_t len);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "146: void md_map_sh256(uint8_t *hash, const uint8_t *msg, int len);",
      "",
      "[Added Lines]",
      "146: void md_map_sh256(uint8_t *hash, const uint8_t *msg, size_t len);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "155: void md_map_sh384(uint8_t *hash, const uint8_t *msg, int len);",
      "",
      "[Added Lines]",
      "155: void md_map_sh384(uint8_t *hash, const uint8_t *msg, size_t len);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "164: void md_map_sh512(uint8_t *hash, const uint8_t *msg, int len);",
      "",
      "[Added Lines]",
      "164: void md_map_sh512(uint8_t *hash, const uint8_t *msg, size_t len);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "173: void md_map_b2s160(uint8_t *hash, const uint8_t *msg, int len);",
      "",
      "[Added Lines]",
      "173: void md_map_b2s160(uint8_t *hash, const uint8_t *msg, size_t len);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "182: void md_map_b2s256(uint8_t *hash, const uint8_t *msg, int len);",
      "",
      "[Added Lines]",
      "182: void md_map_b2s256(uint8_t *hash, const uint8_t *msg, size_t len);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "193: void md_kdf(uint8_t *key, int key_len, const uint8_t *in, int in_len);",
      "",
      "[Added Lines]",
      "193: void md_kdf(uint8_t *key, size_t key_len, const uint8_t *in, size_t in_len);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "204: void md_mgf(uint8_t *mask, int mask_len, const uint8_t *in, int in_len);",
      "",
      "[Added Lines]",
      "204: void md_mgf(uint8_t *mask, size_t mask_len, const uint8_t *in, size_t in_len);",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "215: void md_hmac(uint8_t *mac, const uint8_t *in, int in_len, const uint8_t *key,",
      "216:   int key_len);",
      "",
      "[Added Lines]",
      "215: void md_hmac(uint8_t *mac, const uint8_t *in, size_t in_len, const uint8_t *key,",
      "216:   size_t key_len);",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "229: void md_xmd_sh224(uint8_t *buf, int buf_len, const uint8_t *in, int in_len,",
      "230:   const uint8_t *dst, int dst_len);",
      "",
      "[Added Lines]",
      "229: void md_xmd_sh224(uint8_t *buf, size_t buf_len, const uint8_t *in,",
      "230:   size_t in_len, const uint8_t *dst, size_t dst_len);",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "243: void md_xmd_sh256(uint8_t *buf, int buf_len, const uint8_t *in, int in_len,",
      "244:   const uint8_t *dst, int dst_len);",
      "",
      "[Added Lines]",
      "243: void md_xmd_sh256(uint8_t *buf, size_t buf_len, const uint8_t *in,",
      "244:   size_t in_len, const uint8_t *dst, size_t dst_len);",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "257: void md_xmd_sh384(uint8_t *buf, int buf_len, const uint8_t *in, int in_len,",
      "258:   const uint8_t *dst, int dst_len);",
      "",
      "[Added Lines]",
      "257: void md_xmd_sh384(uint8_t *buf, size_t buf_len, const uint8_t *in,",
      "258:   size_t in_len, const uint8_t *dst, size_t dst_len);",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "271: void md_xmd_sh512(uint8_t *buf, int buf_len, const uint8_t *in, int in_len,",
      "272:   const uint8_t *dst, int dst_len);",
      "",
      "[Added Lines]",
      "271: void md_xmd_sh512(uint8_t *buf, size_t buf_len, const uint8_t *in,",
      "272:   size_t in_len, const uint8_t *dst, size_t dst_len);",
      "",
      "---------------"
    ],
    "include/relic_rand.h||include/relic_rand.h": [
      "File: include/relic_rand.h -> include/relic_rand.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "94: #else",
      "",
      "[Removed Lines]",
      "92: void rand_seed(uint8_t *buf, int size);",
      "",
      "[Added Lines]",
      "92: void rand_seed(uint8_t *buf, size_t size);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "105: #endif",
      "",
      "[Removed Lines]",
      "103: void rand_seed(void (*callback)(uint8_t *, int, void *), void *arg);",
      "",
      "[Added Lines]",
      "103: void rand_seed(void (*callback)(uint8_t *, size_t, void *), void *arg);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "115: int rand_check(uint8_t *buf, int size);",
      "",
      "[Added Lines]",
      "115: int rand_check(uint8_t *buf, size_t size);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "126: void rand_bytes(uint8_t *buf, int size);",
      "",
      "[Added Lines]",
      "126: void rand_bytes(uint8_t *buf, size_t size);",
      "",
      "---------------"
    ],
    "include/relic_util.h||include/relic_util.h": [
      "File: include/relic_util.h -> include/relic_util.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "288: int util_bits_dig(dig_t a);",
      "",
      "[Added Lines]",
      "288: size_t util_bits_dig(dig_t a);",
      "",
      "---------------"
    ],
    "src/bn/relic_bn_gcd.c||src/bn/relic_bn_gcd.c": [
      "File: src/bn/relic_bn_gcd.c -> src/bn/relic_bn_gcd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "202:    bn_abs(y, a);",
      "203:   }",
      "204:   while (y->used > 1) {",
      "206:    _x = u->dp[0];",
      "208:    _y = v->dp[0];",
      "209:    _a = _d = 1;",
      "210:    _b = _c = 0;",
      "",
      "[Removed Lines]",
      "205:    bn_rsh(u, x, bn_bits(x) - RLC_DIG);",
      "207:    bn_rsh(v, y, bn_bits(x) - RLC_DIG);",
      "",
      "[Added Lines]",
      "205:    if (bn_bits(x) > RLC_DIG) {",
      "206:     bn_rsh(u, x, bn_bits(x) - RLC_DIG);",
      "207:     bn_rsh(v, y, bn_bits(x) - RLC_DIG);",
      "208:    } else {",
      "209:     bn_copy(u, x);",
      "210:     bn_copy(v, y);",
      "211:    }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "237:     bn_copy(x, y);",
      "238:     bn_copy(y, t0);",
      "239:    } else {",
      "242:     if (_a < 0) {",
      "243:      bn_mul_dig(t0, u, -_a);",
      "244:      bn_neg(t0, t0);",
      "",
      "[Removed Lines]",
      "240:     bn_rsh(u, x, bn_bits(x) - 2 * RLC_DIG);",
      "241:     bn_rsh(v, y, bn_bits(x) - 2 * RLC_DIG);",
      "",
      "[Added Lines]",
      "245:     if (bn_bits(x) > 2 * RLC_DIG) {",
      "246:      bn_rsh(u, x, bn_bits(x) - 2 * RLC_DIG);",
      "247:      bn_rsh(v, y, bn_bits(x) - 2 * RLC_DIG);",
      "248:     } else {",
      "249:      bn_copy(u, x);",
      "250:      bn_copy(v, y);",
      "251:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "265:     }",
      "266:     bn_add(u, t0, t1);",
      "267:     bn_add(v, t2, t3);",
      "269:     _x = t0->dp[0];",
      "271:     _y = t1->dp[0];",
      "272:     t = 0;",
      "273:     if (_y != 0) {",
      "",
      "[Removed Lines]",
      "268:     bn_rsh(t0, u, bn_bits(u) - RLC_DIG);",
      "270:     bn_rsh(t1, v, bn_bits(u) - RLC_DIG);",
      "",
      "[Added Lines]",
      "278:     if (bn_bits(u) > RLC_DIG) {",
      "279:      bn_rsh(t0, u, bn_bits(u) - RLC_DIG);",
      "280:      bn_rsh(t1, v, bn_bits(u) - RLC_DIG);",
      "281:     } else {",
      "282:      bn_copy(t0, u);",
      "283:      bn_copy(t1, v);",
      "284:     }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "400:   bn_set_dig(d, 1);",
      "402:   while (y->used > 1) {",
      "404:    _x = u->dp[0];",
      "406:    _y = v->dp[0];",
      "407:    _a = _d = 1;",
      "408:    _b = _c = 0;",
      "",
      "[Removed Lines]",
      "403:    bn_rsh(u, x, bn_bits(x) - RLC_DIG);",
      "405:    bn_rsh(v, y, bn_bits(x) - RLC_DIG);",
      "",
      "[Added Lines]",
      "418:    if (bn_bits(x) > RLC_DIG) {",
      "419:     bn_rsh(u, x, bn_bits(x) - RLC_DIG);",
      "420:     bn_rsh(v, y, bn_bits(x) - RLC_DIG);",
      "421:    } else {",
      "422:     bn_copy(u, x);",
      "423:     bn_copy(v, y);",
      "424:    }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "439:     bn_copy(t4, d);",
      "440:     bn_copy(d, t1);",
      "441:    } else {",
      "444:     if (_a < 0) {",
      "445:      bn_mul_dig(t0, u, -_a);",
      "446:      bn_neg(t0, t0);",
      "",
      "[Removed Lines]",
      "442:     bn_rsh(u, x, bn_bits(x) - 2 * RLC_DIG);",
      "443:     bn_rsh(v, y, bn_bits(x) - 2 * RLC_DIG);",
      "",
      "[Added Lines]",
      "462:     if (bn_bits(x) > 2 * RLC_DIG) {",
      "463:      bn_rsh(u, x, bn_bits(x) - 2 * RLC_DIG);",
      "464:      bn_rsh(v, y, bn_bits(x) - 2 * RLC_DIG);",
      "465:     } else {",
      "466:      bn_copy(u, x);",
      "467:      bn_copy(v, y);",
      "468:     }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "467:     }",
      "468:     bn_add(u, t0, t1);",
      "469:     bn_add(v, t2, t3);",
      "471:     _x = t0->dp[0];",
      "473:     _y = t1->dp[0];",
      "474:     t = 0;",
      "475:     if (_y != 0) {",
      "",
      "[Removed Lines]",
      "470:     bn_rsh(t0, u, bn_bits(u) - RLC_DIG);",
      "472:     bn_rsh(t1, v, bn_bits(u) - RLC_DIG);",
      "",
      "[Added Lines]",
      "495:     if (bn_bits(u) > RLC_DIG) {",
      "496:      bn_rsh(t0, u, bn_bits(u) - RLC_DIG);",
      "497:      bn_rsh(t1, v, bn_bits(u) - RLC_DIG);",
      "498:     } else {",
      "499:      bn_copy(t0, u);",
      "500:      bn_copy(t1, v);",
      "501:     }",
      "",
      "---------------"
    ],
    "src/bn/relic_bn_mem.c||src/bn/relic_bn_mem.c": [
      "File: src/bn/relic_bn_mem.c -> src/bn/relic_bn_mem.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "45:  if (digits < 0) {",
      "46:   RLC_THROW(ERR_NO_VALID);",
      "47:  }",
      "",
      "[Removed Lines]",
      "44: void bn_make(bn_t a, int digits) {",
      "",
      "[Added Lines]",
      "44: void bn_make(bn_t a, size_t digits) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "112:  }",
      "113: }",
      "116: #if ALLOC == DYNAMIC",
      "117:  dig_t *t;",
      "",
      "[Removed Lines]",
      "115: void bn_grow(bn_t a, int digits) {",
      "",
      "[Added Lines]",
      "115: void bn_grow(bn_t a, size_t digits) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "143:    --(a->used);",
      "144:   }",
      "147:    a->used = 1;",
      "148:    a->dp[0] = 0;",
      "149:    a->sign = RLC_POS;",
      "",
      "[Removed Lines]",
      "146:   if (a->used <= 0) {",
      "",
      "[Added Lines]",
      "146:   if (a->used == 0) {",
      "",
      "---------------"
    ],
    "src/bn/relic_bn_mxp.c||src/bn/relic_bn_mxp.c": [
      "File: src/bn/relic_bn_mxp.c -> src/bn/relic_bn_mxp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "117: void bn_mxp_slide(bn_t c, const bn_t a, const bn_t b, const bn_t m) {",
      "118:  bn_t tab[RLC_TABLE_SIZE], t, u, r;",
      "120:  uint8_t *win = RLC_ALLOCA(uint8_t, bn_bits(b));",
      "122:  if (win == NULL) {",
      "",
      "[Removed Lines]",
      "119:  int i, j, l, w = 1;",
      "",
      "[Added Lines]",
      "119:  size_t l, w = 1;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "140:  bn_null(u);",
      "141:  bn_null(r);",
      "144:   bn_null(tab[i]);",
      "145:  }",
      "150:   w = 2;",
      "152:   w = 3;",
      "154:   w = 4;",
      "156:   w = 5;",
      "158:   w = 6;",
      "159:  } else {",
      "160:   w = 7;",
      "161:  }",
      "163:  RLC_TRY {",
      "165:    bn_new(tab[i]);",
      "166:   }",
      "",
      "[Removed Lines]",
      "143:  for (i = 0; i < RLC_TABLE_SIZE; i++) {",
      "148:  i = bn_bits(b);",
      "149:  if (i <= 21) {",
      "151:  } else if (i <= 32) {",
      "153:  } else if (i <= 128) {",
      "155:  } else if (i <= 256) {",
      "157:  } else if (i <= 512) {",
      "164:   for (i = 0; i < (1 << (w - 1)); i++) {",
      "",
      "[Added Lines]",
      "143:  for (size_t i = 0; i < RLC_TABLE_SIZE; i++) {",
      "148:  l = bn_bits(b);",
      "149:  if (l <= 21) {",
      "151:  } else if (l <= 32) {",
      "153:  } else if (l <= 128) {",
      "155:  } else if (l <= 256) {",
      "157:  } else if (l <= 512) {",
      "164:   for (size_t i = 0; i < (1 << (w - 1)); i++) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "183:   bn_sqr(t, tab[0]);",
      "184:   bn_mod(t, t, m, u);",
      "187:    bn_mul(tab[i], tab[i - 1], t);",
      "188:    bn_mod(tab[i], tab[i], m, u);",
      "189:   }",
      "192:   bn_rec_slw(win, &l, b, w);",
      "194:    if (win[i] == 0) {",
      "195:     bn_sqr(r, r);",
      "196:     bn_mod(r, r, m, u);",
      "197:    } else {",
      "199:      bn_sqr(r, r);",
      "200:      bn_mod(r, r, m, u);",
      "201:     }",
      "",
      "[Removed Lines]",
      "186:   for (i = 1; i < 1 << (w - 1); i++) {",
      "191:   l = bn_bits(b);",
      "193:   for (i = 0; i < l; i++) {",
      "198:     for (j = 0; j < util_bits_dig(win[i]); j++) {",
      "",
      "[Added Lines]",
      "186:   for (size_t i = 1; i < 1 << (w - 1); i++) {",
      "192:   for (size_t i = 0; i < l; i++) {",
      "197:     for (size_t j = 0; j < util_bits_dig(win[i]); j++) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "218:   RLC_THROW(ERR_CAUGHT);",
      "219:  }",
      "220:  RLC_FINALLY {",
      "222:    bn_free(tab[i]);",
      "223:   }",
      "224:   bn_free(u);",
      "",
      "[Removed Lines]",
      "221:   for (i = 0; i < (1 << (w - 1)); i++) {",
      "",
      "[Added Lines]",
      "220:   for (size_t i = 0; i < (1 << (w - 1)); i++) {",
      "",
      "---------------"
    ],
    "src/bn/relic_bn_prime.c||src/bn/relic_bn_prime.c": [
      "File: src/bn/relic_bn_prime.c -> src/bn/relic_bn_prime.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "276:   bn_sub_dig(n1, a, 1);",
      "277:   bn_copy(r, n1);",
      "278:   s = 0;",
      "280:    s++;",
      "281:    bn_rsh(r, r, 1);",
      "282:   }",
      "",
      "[Removed Lines]",
      "279:   while (bn_is_even(r)) {",
      "",
      "[Added Lines]",
      "279:   while (!bn_is_zero(r) && bn_is_even(r)) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "402: #if BN_GEN == BASIC || !defined(STRIP)",
      "405:  while (1) {",
      "406:   do {",
      "407:    bn_rand(a, RLC_POS, bits);",
      "",
      "[Removed Lines]",
      "404: void bn_gen_prime_basic(bn_t a, int bits) {",
      "",
      "[Added Lines]",
      "404: void bn_gen_prime_basic(bn_t a, size_t bits) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "417: #if BN_GEN == SAFEP || !defined(STRIP)",
      "420:  while (1) {",
      "421:   do {",
      "422:    bn_rand(a, RLC_POS, bits);",
      "",
      "[Removed Lines]",
      "419: void bn_gen_prime_safep(bn_t a, int bits) {",
      "",
      "[Added Lines]",
      "419: void bn_gen_prime_safep(bn_t a, size_t bits) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "441: #if BN_GEN == STRON || !defined(STRIP)",
      "444:  dig_t i, j;",
      "445:  int found, k;",
      "446:  bn_t r, s, t;",
      "",
      "[Removed Lines]",
      "443: void bn_gen_prime_stron(bn_t a, int bits) {",
      "",
      "[Added Lines]",
      "443: void bn_gen_prime_stron(bn_t a, size_t bits) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "520: #endif",
      "523:  bn_t t;",
      "524:  int result = RLC_OK;",
      "",
      "[Removed Lines]",
      "522: int bn_gen_prime_factor(bn_t a, bn_t b, int abits, int bbits) {",
      "",
      "[Added Lines]",
      "522: int bn_gen_prime_factor(bn_t a, bn_t b, size_t abits, size_t bbits) {",
      "",
      "---------------"
    ],
    "src/bn/relic_bn_rec.c||src/bn/relic_bn_rec.c": [
      "File: src/bn/relic_bn_rec.c -> src/bn/relic_bn_rec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "47:  int f, t;",
      "48:  dig_t mf, mt;",
      "",
      "[Removed Lines]",
      "46: static char get_bits(const bn_t a, int from, int to) {",
      "",
      "[Added Lines]",
      "46: static char get_bits(const bn_t a, size_t from, size_t to) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "95:  int i, j, l;",
      "97:  l = bn_bits(k);",
      "",
      "[Removed Lines]",
      "94: void bn_rec_win(uint8_t *win, int *len, const bn_t k, int w) {",
      "",
      "[Added Lines]",
      "94: void bn_rec_win(uint8_t *win, size_t *len, const bn_t k, size_t w) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "113: }",
      "116:  int i, j, l, s;",
      "118:  l = bn_bits(k);",
      "",
      "[Removed Lines]",
      "115: void bn_rec_slw(uint8_t *win, int *len, const bn_t k, int w) {",
      "",
      "[Added Lines]",
      "115: void bn_rec_slw(uint8_t *win, size_t *len, const bn_t k, size_t w) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "144: }",
      "147:  int i, l;",
      "148:  bn_t t;",
      "149:  dig_t t0, mask;",
      "",
      "[Removed Lines]",
      "146: void bn_rec_naf(int8_t *naf, int *len, const bn_t k, int w) {",
      "",
      "[Added Lines]",
      "146: void bn_rec_naf(int8_t *naf, size_t *len, const bn_t k, size_t w) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "217:  }",
      "218: }",
      "221:  if (u == -1) {",
      "222:   switch (w) {",
      "223:    case 2:",
      "",
      "[Removed Lines]",
      "220: void bn_rec_tnaf_get(uint8_t *t, int8_t *beta, int8_t *gama, int8_t u, int w) {",
      "",
      "[Added Lines]",
      "220: void bn_rec_tnaf_get(uint8_t *t, int8_t *beta, int8_t *gama, int8_t u,",
      "221:   size_t w) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "349:  }",
      "350: }",
      "353:  bn_t t, t0, t1, t2, t3;",
      "355:  bn_null(t);",
      "",
      "[Removed Lines]",
      "352: void bn_rec_tnaf_mod(bn_t r0, bn_t r1, const bn_t k, int u, int m) {",
      "",
      "[Added Lines]",
      "353: void bn_rec_tnaf_mod(bn_t r0, bn_t r1, const bn_t k, int u, size_t m) {",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "421:  }",
      "422: }",
      "425:  int i, l;",
      "426:  bn_t tmp, r0, r1;",
      "427:  int8_t beta[64], gama[64];",
      "",
      "[Removed Lines]",
      "424: void bn_rec_tnaf(int8_t *tnaf, int *len, const bn_t k, int8_t u, int m, int w) {",
      "",
      "[Added Lines]",
      "425: void bn_rec_tnaf(int8_t *tnaf, size_t *len, const bn_t k, int8_t u, size_t m,",
      "426:   size_t w) {",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "551:  }",
      "552: }",
      "555:  int i, l;",
      "556:  bn_t tmp, r0, r1;",
      "557:  int8_t beta[64], gama[64];",
      "",
      "[Removed Lines]",
      "554: void bn_rec_rtnaf(int8_t *tnaf, int *len, const bn_t k, int8_t u, int m, int w) {",
      "",
      "[Added Lines]",
      "556: void bn_rec_rtnaf(int8_t *tnaf, size_t *len, const bn_t k, int8_t u, size_t m,",
      "557:   size_t w) {",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "693:  }",
      "694: }",
      "697:  int i, l;",
      "698:  bn_t t;",
      "699:  dig_t t0, mask;",
      "",
      "[Removed Lines]",
      "696: void bn_rec_reg(int8_t *naf, int *len, const bn_t k, int n, int w) {",
      "",
      "[Added Lines]",
      "699: void bn_rec_reg(int8_t *naf, size_t *len, const bn_t k, size_t n, size_t w) {",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "746:  }",
      "747: }",
      "750:  bn_t n0, n1;",
      "751:  dig_t l0, l1;",
      "752:  int8_t u0, u1, d0, d1;",
      "",
      "[Removed Lines]",
      "749: void bn_rec_jsf(int8_t *jsf, int *len, const bn_t k, const bn_t l) {",
      "",
      "[Added Lines]",
      "752: void bn_rec_jsf(int8_t *jsf, size_t *len, const bn_t k, const bn_t l) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "828: void bn_rec_glv(bn_t k0, bn_t k1, const bn_t k, const bn_t n, const bn_t *v1,",
      "829:   const bn_t *v2) {",
      "830:  bn_t t, b1, b2;",
      "833:  bn_null(b1);",
      "834:  bn_null(b2);",
      "",
      "[Removed Lines]",
      "831:  int r1, r2, bits;",
      "",
      "[Added Lines]",
      "834:  int r1, r2;",
      "835:  size_t bits;",
      "",
      "---------------"
    ],
    "src/bn/relic_bn_shift.c||src/bn/relic_bn_shift.c": [
      "File: src/bn/relic_bn_shift.c -> src/bn/relic_bn_shift.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "63:  bn_trim(c);",
      "64: }",
      "67:  int digits;",
      "68:  dig_t carry;",
      "70:  bn_copy(c, a);",
      "76:  RLC_RIP(bits, digits, bits);",
      "78:  RLC_TRY {",
      "",
      "[Removed Lines]",
      "66: void bn_lsh(bn_t c, const bn_t a, int bits) {",
      "72:  if (bits <= 0) {",
      "73:   return;",
      "74:  }",
      "",
      "[Added Lines]",
      "66: void bn_lsh(bn_t c, const bn_t a, unsigned int bits) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "101:  }",
      "102: }",
      "105:  int digits = 0;",
      "107:  bn_copy(c, a);",
      "113:  RLC_RIP(bits, digits, bits);",
      "115:  if (digits > 0) {",
      "116:   dv_rshd(c->dp, a->dp, a->used, digits);",
      "117:  }",
      "119:  c->sign = a->sign;",
      "121:  if (c->used > 0 && bits > 0) {",
      "",
      "[Removed Lines]",
      "104: void bn_rsh(bn_t c, const bn_t a, int bits) {",
      "109:  if (bits <= 0) {",
      "110:   return;",
      "111:  }",
      "118:  c->used = a->used - digits;",
      "",
      "[Added Lines]",
      "100: void bn_rsh(bn_t c, const bn_t a, unsigned int bits) {",
      "111:  if (a->used > digits) {",
      "112:   c->used = a->used - digits;",
      "113:  } else {",
      "114:   c->used = 0;",
      "115:  }",
      "",
      "---------------"
    ],
    "src/bn/relic_bn_smb.c||src/bn/relic_bn_smb.c": [
      "File: src/bn/relic_bn_smb.c -> src/bn/relic_bn_smb.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "121:    }",
      "123:    h = 0;",
      "125:     h++;",
      "126:     bn_rsh(t0, t0, 1);",
      "127:    }",
      "",
      "[Removed Lines]",
      "124:    while (bn_is_even(t0)) {",
      "",
      "[Added Lines]",
      "124:    while (bn_is_even(t0) && !bn_is_zero(t0)) {",
      "",
      "---------------"
    ],
    "src/bn/relic_bn_srt.c||src/bn/relic_bn_srt.c": [
      "File: src/bn/relic_bn_srt.c -> src/bn/relic_bn_srt.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "39: void bn_srt(bn_t c, bn_t a) {",
      "40:  bn_t h, l, m, t;",
      "43:  if (bn_sign(a) == RLC_NEG) {",
      "44:   RLC_THROW(ERR_NO_VALID);",
      "",
      "[Removed Lines]",
      "41:  int bits, cmp;",
      "",
      "[Added Lines]",
      "41:  size_t bits;",
      "42:  int cmp;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "58:   bn_new(m);",
      "59:   bn_new(t);",
      "61:   bn_set_2b(h, bits >> 1);",
      "65:   do {",
      "",
      "[Removed Lines]",
      "62:   bn_set_2b(l, (bits >> 1) - 1);",
      "",
      "[Added Lines]",
      "62:   bn_zero(l);",
      "64:   if (bits >= 2) {",
      "65:    bn_set_2b(l, (bits >> 1) - 1);",
      "66:   }",
      "",
      "---------------"
    ],
    "src/bn/relic_bn_util.c||src/bn/relic_bn_util.c": [
      "File: src/bn/relic_bn_util.c -> src/bn/relic_bn_util.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "105:  return 0;",
      "106: }",
      "109:  int bits;",
      "111:  if (bn_is_zero(a)) {",
      "",
      "[Removed Lines]",
      "108: int bn_bits(const bn_t a) {",
      "",
      "[Added Lines]",
      "108: size_t bn_bits(const bn_t a) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "118:  return bits + util_bits_dig(a->dp[a->used - 1]);",
      "119: }",
      "122:  int d;",
      "124:  if (bit < 0) {",
      "",
      "[Removed Lines]",
      "121: int bn_get_bit(const bn_t a, int bit) {",
      "",
      "[Added Lines]",
      "121: int bn_get_bit(const bn_t a, size_t bit) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "139:  }",
      "140: }",
      "143:  int d;",
      "145:  if (bit < 0) {",
      "",
      "[Removed Lines]",
      "142: void bn_set_bit(bn_t a, int bit, int value) {",
      "",
      "[Added Lines]",
      "142: void bn_set_bit(bn_t a, size_t bit, int value) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "162:  }",
      "163: }",
      "166:  int c = 0;",
      "168:  for (int i = 0; i < bn_bits(a); i++) {",
      "",
      "[Removed Lines]",
      "165: int bn_ham(const bn_t a) {",
      "",
      "[Added Lines]",
      "165: size_t bn_ham(const bn_t a) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "183:  a->sign = RLC_POS;",
      "184: }",
      "187:  int i, d;",
      "191:  } else {",
      "192:   RLC_RIP(b, d, b);",
      "",
      "[Removed Lines]",
      "186: void bn_set_2b(bn_t a, int b) {",
      "189:  if (b < 0) {",
      "190:   bn_zero(a);",
      "",
      "[Added Lines]",
      "186: void bn_set_2b(bn_t a, size_t b) {",
      "189:  if (b >= RLC_BN_SIZE * RLC_DIG) {",
      "190:   RLC_THROW(ERR_NO_VALID);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "201:  }",
      "202: }",
      "205:  int digits;",
      "207:  RLC_RIP(bits, digits, bits);",
      "",
      "[Removed Lines]",
      "204: void bn_rand(bn_t a, int sign, int bits) {",
      "",
      "[Added Lines]",
      "204: void bn_rand(bn_t a, int sign, size_t bits) {",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "264:  }",
      "265: }",
      "268:  int digits = 0;",
      "269:  bn_t t;",
      "",
      "[Removed Lines]",
      "267: int bn_size_str(const bn_t a, int radix) {",
      "",
      "[Added Lines]",
      "267: size_t bn_size_str(const bn_t a, unsigned int radix) {",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "308:  return digits + 1;",
      "309: }",
      "312:  int sign, i, j;",
      "313:  char c;",
      "",
      "[Removed Lines]",
      "311: void bn_read_str(bn_t a, const char *str, int len, int radix) {",
      "",
      "[Added Lines]",
      "311: void bn_read_str(bn_t a, const char *str, size_t len, unsigned int radix) {",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "357:  }",
      "358: }",
      "361:  bn_t t;",
      "362:  dig_t d;",
      "363:  int digits, l, i, j;",
      "",
      "[Removed Lines]",
      "360: void bn_write_str(char *str, int len, const bn_t a, int radix) {",
      "",
      "[Added Lines]",
      "360: void bn_write_str(char *str, size_t len, const bn_t a, unsigned int radix) {",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "426:  }",
      "427: }",
      "430:  dig_t d;",
      "431:  int digits;",
      "",
      "[Removed Lines]",
      "429: int bn_size_bin(const bn_t a) {",
      "",
      "[Added Lines]",
      "429: size_t bn_size_bin(const bn_t a) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "440:  return digits;",
      "441: }",
      "444:  int i, j;",
      "445:  dig_t d = (RLC_DIG / 8);",
      "446:  int digs = (len % d == 0 ? len / d : len / d + 1);",
      "",
      "[Removed Lines]",
      "443: void bn_read_bin(bn_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "443: void bn_read_bin(bn_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "470:  bn_trim(a);",
      "471: }",
      "474:  int size, k;",
      "475:  dig_t d;",
      "",
      "[Removed Lines]",
      "473: void bn_write_bin(uint8_t *bin, int len, const bn_t a) {",
      "",
      "[Added Lines]",
      "473: void bn_write_bin(uint8_t *bin, size_t len, const bn_t a) {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "501:  }",
      "502: }",
      "505:  return a->used;",
      "506: }",
      "509:  RLC_TRY {",
      "510:   bn_grow(a, len);",
      "511:   a->used = len;",
      "",
      "[Removed Lines]",
      "504: int bn_size_raw(const bn_t a) {",
      "508: void bn_read_raw(bn_t a, const dig_t *raw, int len) {",
      "",
      "[Added Lines]",
      "504: size_t bn_size_raw(const bn_t a) {",
      "508: void bn_read_raw(bn_t a, const dig_t *raw, size_t len) {",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "517:  }",
      "518: }",
      "521:  int i, size;",
      "523:  size = a->used;",
      "",
      "[Removed Lines]",
      "520: void bn_write_raw(dig_t *raw, int len, const bn_t a) {",
      "",
      "[Added Lines]",
      "520: void bn_write_raw(dig_t *raw, size_t len, const bn_t a) {",
      "",
      "---------------"
    ],
    "src/cp/relic_cp_bls.c||src/cp/relic_cp_bls.c": [
      "File: src/cp/relic_cp_bls.c -> src/cp/relic_cp_bls.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "57:  return result;",
      "58: }",
      "61:  g1_t p;",
      "62:  int result = RLC_OK;",
      "",
      "[Removed Lines]",
      "60: int cp_bls_sig(g1_t s, const uint8_t *msg, int len, const bn_t d) {",
      "",
      "[Added Lines]",
      "60: int cp_bls_sig(g1_t s, const uint8_t *msg, size_t len, const bn_t d) {",
      "",
      "---------------"
    ],
    "src/cp/relic_cp_cmlhs.c||src/cp/relic_cp_cmlhs.c": [
      "File: src/cp/relic_cp_cmlhs.c -> src/cp/relic_cp_cmlhs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "65:   pc_map(gt, g1, g2);",
      "67:   rand_bytes(prf, plen);",
      "77:   for (int i = 0; i < len; i++) {",
      "",
      "[Removed Lines]",
      "68:   if (bls) {",
      "69:    cp_bls_gen(sk, pk);",
      "70:   } else {",
      "71:    cp_ecdsa_gen(sk, g1);",
      "72:    fp_copy(pk->x[0], g1->x);",
      "73:    fp_copy(pk->y[0], g1->y);",
      "74:   }",
      "",
      "[Added Lines]",
      "69:   bn_rand_mod(d, n);",
      "70:   g2_mul_gen(y, d);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "79:    gt_exp(hs[i], gt, x[i]);",
      "80:   }",
      "84:  }",
      "85:  RLC_CATCH_ANY {",
      "86:   result = RLC_ERR;",
      "",
      "[Removed Lines]",
      "82:   bn_rand_mod(d, n);",
      "83:   g2_mul_gen(y, d);",
      "",
      "[Added Lines]",
      "78:   if (bls) {",
      "79:    result = cp_bls_gen(sk, pk);",
      "80:   } else {",
      "81:    if (cp_ecdsa_gen(sk, g1) == RLC_OK) {",
      "82:     fp_copy(pk->x[0], g1->x);",
      "83:     fp_copy(pk->y[0], g1->y);",
      "84:    } else {",
      "85:     result = RLC_ERR;",
      "86:    }",
      "87:   }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "101:  bn_t k, m, n;",
      "102:  g1_t t;",
      "103:  uint8_t mac[RLC_MD_LEN];",
      "105:  uint8_t *buf = RLC_ALLOCA(uint8_t, 1 + 8 * RLC_PC_BYTES + dlen);",
      "107:  bn_null(k);",
      "108:  bn_null(m);",
      "",
      "[Removed Lines]",
      "104:  int len, dlen = strlen(data), result = RLC_OK;",
      "",
      "[Added Lines]",
      "108:  size_t len, dlen = strlen(data);",
      "110:  int result = RLC_OK;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "211:  g2_t g2;",
      "212:  gt_t e, u, v;",
      "213:  bn_t k, n;",
      "215:  uint8_t *buf = RLC_ALLOCA(uint8_t, 1 + 8 * RLC_PC_BYTES + dlen);",
      "217:  g1_null(g1);",
      "218:  g2_null(g2);",
      "",
      "[Removed Lines]",
      "214:  int len, dlen = strlen(data), result = 1;",
      "",
      "[Added Lines]",
      "219:  size_t len, dlen = strlen(data);",
      "221:  int result = 1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "331:  g2_t g2;",
      "332:  gt_t e, u, v;",
      "333:  bn_t k, n;",
      "335:  uint8_t *buf = RLC_ALLOCA(uint8_t, 1 + 8 * RLC_FP_BYTES + dlen);",
      "337:  g1_null(g1);",
      "338:  g2_null(g2);",
      "",
      "[Removed Lines]",
      "334:  int len, dlen = strlen(data), result = 1;",
      "",
      "[Added Lines]",
      "340:  size_t len, dlen = strlen(data);",
      "342:  int result = 1;",
      "",
      "---------------"
    ],
    "src/cp/relic_cp_pbpsi.c||src/cp/relic_cp_pbpsi.c": [
      "File: src/cp/relic_cp_pbpsi.c -> src/cp/relic_cp_pbpsi.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "114:    bn_free(_x[i]);",
      "115:   }",
      "116:   RLC_FREE(p);",
      "117:  }",
      "118:  return result;",
      "119: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "117:   RLC_FREE(_x);",
      "",
      "---------------"
    ],
    "src/cp/relic_cp_rsa.c||src/cp/relic_cp_rsa.c": [
      "File: src/cp/relic_cp_rsa.c -> src/cp/relic_cp_rsa.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "248:  uint8_t *id, pad = 0;",
      "250:  bn_t t;",
      "252:  bn_null(t);",
      "",
      "[Removed Lines]",
      "247: static int pad_pkcs1(bn_t m, int *p_len, int m_len, int k_len, int operation) {",
      "249:  int len, result = RLC_ERR;",
      "",
      "[Added Lines]",
      "247: static int pad_pkcs1(bn_t m, int *p_len, size_t m_len, size_t k_len, int op) {",
      "249:  size_t len;",
      "250:  int result = RLC_ERR;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "254:  RLC_TRY {",
      "255:   bn_new(t);",
      "258:    case RSA_ENC:",
      "260:     bn_zero(m);",
      "",
      "[Removed Lines]",
      "257:   switch (operation) {",
      "",
      "[Added Lines]",
      "258:   switch (op) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "423:  uint8_t pad, h1[RLC_MD_LEN], h2[RLC_MD_LEN];",
      "424:  uint8_t *mask = RLC_ALLOCA(uint8_t, k_len);",
      "425:  int result = RLC_ERR;",
      "",
      "[Removed Lines]",
      "422: static int pad_pkcs2(bn_t m, int *p_len, int m_len, int k_len, int operation) {",
      "",
      "[Added Lines]",
      "423: static int pad_pkcs2(bn_t m, int *p_len, size_t m_len, size_t k_len, int op) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "430:  RLC_TRY {",
      "431:   bn_new(t);",
      "434:    case RSA_ENC:",
      "436:     md_map(h1, NULL, 0);",
      "",
      "[Removed Lines]",
      "433:   switch (operation) {",
      "",
      "[Added Lines]",
      "434:   switch (op) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "582:  bn_t t, r;",
      "583:  int result = RLC_OK;",
      "",
      "[Removed Lines]",
      "581: int cp_rsa_gen(rsa_t pub, rsa_t prv, int bits) {",
      "",
      "[Added Lines]",
      "582: int cp_rsa_gen(rsa_t pub, rsa_t prv, size_t bits) {",
      "",
      "---------------"
    ],
    "src/cp/relic_cp_sokaka.c||src/cp/relic_cp_sokaka.c": [
      "File: src/cp/relic_cp_sokaka.c -> src/cp/relic_cp_sokaka.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "73: int cp_sokaka_key(uint8_t *key, size_t key_len, const char *id1,",
      "74:   const sokaka_t k, const char *id2) {",
      "77:  uint8_t *buf;",
      "78:  g1_t p;",
      "79:  g2_t q;",
      "",
      "[Removed Lines]",
      "75:  int len1 = strlen(id1), len2 = strlen(id2);",
      "76:  int size, first = 0, result = RLC_OK;",
      "",
      "[Added Lines]",
      "75:  size_t size, len1 = strlen(id1), len2 = strlen(id2);",
      "76:  int first = 0, result = RLC_OK;",
      "",
      "---------------"
    ],
    "src/cp/relic_cp_vbnn.c||src/cp/relic_cp_vbnn.c": [
      "File: src/cp/relic_cp_vbnn.c -> src/cp/relic_cp_vbnn.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "73: int cp_vbnn_gen_prv(bn_t sk, ec_t pk, const bn_t msk, const uint8_t *id,",
      "74:   size_t id_len) {",
      "75:  uint8_t hash[RLC_MD_LEN];",
      "77:  uint8_t *buf = NULL;",
      "78:  bn_t n, r;",
      "81:  bn_null(n);",
      "",
      "[Removed Lines]",
      "76:  int len, result = RLC_OK;",
      "",
      "[Added Lines]",
      "76:  size_t len;",
      "79:  int result = RLC_OK;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "126: int cp_vbnn_sig(ec_t r, bn_t z, bn_t h, const uint8_t *id, size_t id_len,",
      "127:   const uint8_t *msg, int msg_len, const bn_t sk, const ec_t pk) {",
      "129:  uint8_t *buf = NULL, *buf_i, hash[RLC_MD_LEN];",
      "130:  bn_t n, y;",
      "131:  ec_t t;",
      "134:  bn_null(n);",
      "",
      "[Removed Lines]",
      "128:  int len, result = RLC_OK;",
      "",
      "[Added Lines]",
      "129:  size_t len;",
      "133:  int result = RLC_OK;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "190: int cp_vbnn_ver(const ec_t r, const bn_t z, const bn_t h, const uint8_t *id,",
      "191:   size_t id_len, const uint8_t *msg, int msg_len, const ec_t mpk) {",
      "193:  uint8_t *buf = NULL, *buf_i, hash[RLC_MD_LEN];",
      "194:  bn_t n, c, _h;",
      "199:  bn_null(n);",
      "",
      "[Removed Lines]",
      "192:  int len, result = 0;",
      "195:  ec_t Z;",
      "196:  ec_t t;",
      "",
      "[Added Lines]",
      "194:  size_t len;",
      "197:  ec_t Z, t;",
      "198:  int result = 0;",
      "",
      "---------------"
    ],
    "src/eb/relic_eb_map.c||src/eb/relic_eb_map.c": [
      "File: src/eb/relic_eb_map.c -> src/eb/relic_eb_map.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "41:  bn_t k;",
      "42:  fb_t t0, t1;",
      "43:  int i;",
      "",
      "[Removed Lines]",
      "40: void eb_map(eb_t p, const uint8_t *msg, int len) {",
      "",
      "[Added Lines]",
      "40: void eb_map(eb_t p, const uint8_t *msg, size_t len) {",
      "",
      "---------------"
    ],
    "src/eb/relic_eb_mul.c||src/eb/relic_eb_mul.c": [
      "File: src/eb/relic_eb_mul.c -> src/eb/relic_eb_mul.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "51: static void eb_mul_ltnaf_imp(eb_t r, const eb_t p, const bn_t k) {",
      "53:  int8_t tnaf[RLC_FB_BITS + 8], u;",
      "54:  eb_t t[1 << (EB_WIDTH - 2)];",
      "56:  if (eb_curve_opt_a() == RLC_ZERO) {",
      "57:   u = -1;",
      "",
      "[Removed Lines]",
      "52:  int i, l, n;",
      "",
      "[Added Lines]",
      "52:  int i, n;",
      "55:  size_t l;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "122: static void eb_mul_lnaf_imp(eb_t r, const eb_t p, const bn_t k) {",
      "124:  int8_t naf[RLC_FB_BITS + 1];",
      "125:  eb_t t[1 << (EB_WIDTH - 2)];",
      "127:  RLC_TRY {",
      "",
      "[Removed Lines]",
      "123:  int i, l, n;",
      "",
      "[Added Lines]",
      "124:  int i, n;",
      "127:  size_t l;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "192: static void eb_mul_rtnaf_imp(eb_t r, const eb_t p, const bn_t k) {",
      "194:  int8_t tnaf[RLC_FB_BITS + 8], u;",
      "195:  eb_t t[1 << (EB_WIDTH - 2)];",
      "197:  if (eb_curve_opt_a() == RLC_ZERO) {",
      "198:   u = -1;",
      "",
      "[Removed Lines]",
      "193:  int i, l, n;",
      "",
      "[Added Lines]",
      "195:  int i, n;",
      "198:  size_t l;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "491: static void eb_mul_rnaf_imp(eb_t r, const eb_t p, const bn_t k) {",
      "493:  int8_t naf[RLC_FB_BITS + 1];",
      "494:  eb_t t[1 << (EB_WIDTH - 2)];",
      "496:  RLC_TRY {",
      "",
      "[Removed Lines]",
      "492:  int i, l, n;",
      "",
      "[Added Lines]",
      "495:  int i, n;",
      "498:  size_t l;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "650: #if EB_MUL == LODAH || !defined(STRIP)",
      "652: void eb_mul_lodah(eb_t r, const eb_t p, const bn_t k) {",
      "654:  dv_t x1, z1, x2, z2, r1, r2, r3, r4, r5;",
      "655:  const dig_t *b;",
      "656:  bn_t t, n;",
      "658:  if (bn_is_zero(k)) {",
      "659:   eb_set_infty(r);",
      "",
      "[Removed Lines]",
      "653:  int bits, i, j;",
      "",
      "[Added Lines]",
      "660:  size_t bits;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "721:   fb_mul(z2, z2, r1);",
      "722:   fb_mul(x2, x2, r1);",
      "726:    fb_mul(r1, x1, z2);",
      "727:    fb_mul(r2, x2, z1);",
      "728:    fb_add(r3, r1, r2);",
      "",
      "[Removed Lines]",
      "724:   for (i = bits - 1; i >= 0; i--) {",
      "725:    j = bn_get_bit(t, i);",
      "",
      "[Added Lines]",
      "728:   for (int i = bits - 1; i >= 0; i--) {",
      "729:    int j = bn_get_bit(t, i);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "889: #if EB_MUL == HALVE || !defined(STRIP)",
      "891: void eb_mul_halve(eb_t r, const eb_t p, const bn_t k) {",
      "893:  int8_t naf[RLC_FB_BITS + 1], *_k;",
      "894:  eb_t q, s, t[1 << (EB_WIDTH - 2)];",
      "895:  bn_t n, m;",
      "896:  fb_t u, v, w, z;",
      "898:  if (bn_is_zero(k) || eb_is_infty(p)) {",
      "899:   eb_set_infty(r);",
      "",
      "[Removed Lines]",
      "892:  int i, j, l, trc, cof;",
      "",
      "[Added Lines]",
      "896:  int i, j, trc, cof;",
      "901:  size_t l;",
      "",
      "---------------"
    ],
    "src/eb/relic_eb_mul_sim.c||src/eb/relic_eb_mul_sim.c": [
      "File: src/eb/relic_eb_mul_sim.c -> src/eb/relic_eb_mul_sim.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "55: static void eb_mul_sim_kbltz(eb_t r, const eb_t p, const bn_t k, const eb_t q,",
      "56:   const bn_t m, const eb_t *t) {",
      "58:  int8_t u, tnaf0[RLC_FB_BITS + 8], tnaf1[RLC_FB_BITS + 8], *_k, *_m;",
      "59:  eb_t t0[1 << (EB_WIDTH - 2)];",
      "60:  eb_t t1[1 << (EB_WIDTH - 2)];",
      "62:  for (i =  0; i < (1 << (EB_WIDTH - 2)); i++) {",
      "63:   eb_null(t0[i]);",
      "",
      "[Removed Lines]",
      "57:  int i, l, l0, l1, n0, n1, w, g;",
      "",
      "[Added Lines]",
      "57:  int i, n0, n1, w, g;",
      "61:  size_t l, l0, l1;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "184: static void eb_mul_sim_plain(eb_t r, const eb_t p, const bn_t k, const eb_t q,",
      "185:   const bn_t m, const eb_t *t) {",
      "187:  int8_t naf0[RLC_FB_BITS + 1], naf1[RLC_FB_BITS + 1], *_k, *_m;",
      "188:  eb_t t0[1 << (EB_WIDTH - 2)];",
      "189:  eb_t t1[1 << (EB_WIDTH - 2)];",
      "191:  for (i =  0; i < (1 << (EB_WIDTH - 2)); i++) {",
      "192:   eb_null(t0[i]);",
      "",
      "[Removed Lines]",
      "186:  int i, l, l0, l1, n0, n1, w, g;",
      "",
      "[Added Lines]",
      "187:  int i, n0, n1, w, g;",
      "191:  size_t l, l0, l1;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "310: void eb_mul_sim_trick(eb_t r, const eb_t p, const bn_t k, const eb_t q,",
      "311:   const bn_t m) {",
      "312:  eb_t t0[1 << (EB_WIDTH / 2)], t1[1 << (EB_WIDTH / 2)], t[1 << EB_WIDTH];",
      "314:  uint8_t w0[RLC_FB_BITS], w1[RLC_FB_BITS];",
      "315:  bn_t n;",
      "",
      "[Removed Lines]",
      "313:  int l0, l1, w = EB_WIDTH / 2;",
      "",
      "[Added Lines]",
      "315:  size_t l0, l1, w = EB_WIDTH / 2;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "436: void eb_mul_sim_joint(eb_t r, const eb_t p, const bn_t k, const eb_t q,",
      "437:   const bn_t m) {",
      "438:  eb_t t[5];",
      "440:  int8_t jsf[2 * (RLC_FB_BITS + 1)];",
      "442:  if (bn_is_zero(k) || eb_is_infty(p)) {",
      "443:   eb_mul(r, q, m);",
      "",
      "[Removed Lines]",
      "439:  int i, u_i, len, offset;",
      "",
      "[Added Lines]",
      "441:  int i, u_i, offset;",
      "443:  size_t len;",
      "",
      "---------------"
    ],
    "src/eb/relic_eb_util.c||src/eb/relic_eb_util.c": [
      "File: src/eb/relic_eb_util.c -> src/eb/relic_eb_util.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "500:  return size;",
      "501: }",
      "504:  if (len == 1) {",
      "505:   if (bin[0] == 0) {",
      "506:    eb_set_infty(a);",
      "",
      "[Removed Lines]",
      "503: void eb_read_bin(eb_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "503: void eb_read_bin(eb_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "550:  }",
      "551: }",
      "554:  eb_t t;",
      "556:  eb_null(t);",
      "",
      "[Removed Lines]",
      "553: void eb_write_bin(uint8_t *bin, int len, const eb_t a, int pack) {",
      "",
      "[Added Lines]",
      "553: void eb_write_bin(uint8_t *bin, size_t len, const eb_t a, int pack) {",
      "",
      "---------------"
    ],
    "src/ed/relic_ed_map.c||src/ed/relic_ed_map.c": [
      "File: src/ed/relic_ed_map.c -> src/ed/relic_ed_map.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "191:  bn_t k;",
      "192:  fp_t t;",
      "193:  ed_t q;",
      "",
      "[Removed Lines]",
      "190: void ed_map_dst(ed_t p, const uint8_t *msg, int len, const uint8_t *dst, int dst_len) {",
      "",
      "[Added Lines]",
      "190: void ed_map_dst(ed_t p, const uint8_t *msg, size_t len, const uint8_t *dst,",
      "191:   size_t dst_len) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "254:  }",
      "255: }",
      "258:  ed_map_dst(p, msg, len, (const uint8_t *)\"RELIC\", 5);",
      "259: }",
      "",
      "[Removed Lines]",
      "257: void ed_map(ed_t p, const uint8_t *msg, int len) {",
      "",
      "[Added Lines]",
      "258: void ed_map(ed_t p, const uint8_t *msg, size_t len) {",
      "",
      "---------------"
    ],
    "src/ed/relic_ed_mul.c||src/ed/relic_ed_mul.c": [
      "File: src/ed/relic_ed_mul.c -> src/ed/relic_ed_mul.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "39: #if ED_MUL == LWNAF || !defined(STRIP)",
      "41: static void ed_mul_naf_imp(ed_t r, const ed_t p, const bn_t k) {",
      "43:  int8_t naf[RLC_FP_BITS + 1];",
      "44:  ed_t t[1 << (ED_WIDTH - 2)];",
      "46:  if (bn_is_zero(k)) {",
      "47:   ed_set_infty(r);",
      "",
      "[Removed Lines]",
      "42:  int l, i, n;",
      "",
      "[Added Lines]",
      "42:  int i, n;",
      "45:  size_t l;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "111: static void ed_mul_reg_imp(ed_t r, const ed_t p, const bn_t k) {",
      "112:  bn_t _k;",
      "114:  int8_t s, reg[RLC_CEIL(RLC_FP_BITS + 1, ED_WIDTH - 1)];",
      "115:  ed_t t[1 << (ED_WIDTH - 2)], u, v;",
      "117:  bn_null(_k);",
      "118:  if (bn_is_zero(k)) {",
      "",
      "[Removed Lines]",
      "113:  int i, j, l, n;",
      "",
      "[Added Lines]",
      "114:  int i, j, n;",
      "117:  size_t l;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "234: void ed_mul_slide(ed_t r, const ed_t p, const bn_t k) {",
      "235:  ed_t t[1 << (EP_WIDTH - 1)], q;",
      "237:  uint8_t win[RLC_FP_BITS + 1];",
      "239:  ed_null(q);",
      "",
      "[Removed Lines]",
      "236:  int i, j, l;",
      "",
      "[Added Lines]",
      "239:  size_t l;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "244:  }",
      "246:  RLC_TRY {",
      "248:    ed_null(t[i]);",
      "249:    ed_new(t[i]);",
      "250:   }",
      "",
      "[Removed Lines]",
      "247:   for (i = 0; i < (1 << (EP_WIDTH - 1)); i ++) {",
      "",
      "[Added Lines]",
      "249:   for (size_t i = 0; i < (1 << (EP_WIDTH - 1)); i ++) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "259: #endif",
      "263:    ed_add(t[i], t[i - 1], q);",
      "264:   }",
      "",
      "[Removed Lines]",
      "262:   for (i = 1; i < (1 << (EP_WIDTH - 1)); i++) {",
      "",
      "[Added Lines]",
      "264:   for (size_t i = 1; i < (1 << (EP_WIDTH - 1)); i++) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "270:   ed_set_infty(q);",
      "271:   l = RLC_FP_BITS + 1;",
      "272:   bn_rec_slw(win, &l, k, EP_WIDTH);",
      "274:    if (win[i] == 0) {",
      "275:     ed_dbl(q, q);",
      "276:    } else {",
      "278:      ed_dbl(q, q);",
      "279:     }",
      "280:     ed_add(q, q, t[win[i] >> 1]);",
      "",
      "[Removed Lines]",
      "273:   for (i = 0; i < l; i++) {",
      "277:     for (j = 0; j < util_bits_dig(win[i]); j++) {",
      "",
      "[Added Lines]",
      "275:   for (size_t i = 0; i < l; i++) {",
      "279:     for (size_t j = 0; j < util_bits_dig(win[i]); j++) {",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "290:   RLC_THROW(ERR_CAUGHT);",
      "291:  }",
      "292:  RLC_FINALLY {",
      "294:    ed_free(t[i]);",
      "295:   }",
      "296:   ed_free(q);",
      "",
      "[Removed Lines]",
      "293:   for (i = 0; i < (1 << (EP_WIDTH - 1)); i++) {",
      "",
      "[Added Lines]",
      "295:   for (size_t i = 0; i < (1 << (EP_WIDTH - 1)); i++) {",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "409:  ed_t t;",
      "410:  bn_t _k;",
      "411:  int8_t u, naf[RLC_DIG + 1];",
      "414:  ed_null(t);",
      "415:  bn_null(_k);",
      "",
      "[Removed Lines]",
      "412:  int l;",
      "",
      "[Added Lines]",
      "414:  size_t l;",
      "",
      "---------------"
    ],
    "src/ed/relic_ed_mul_fix.c||src/ed/relic_ed_mul_fix.c": [
      "File: src/ed/relic_ed_mul_fix.c -> src/ed/relic_ed_mul_fix.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "49: static void ed_mul_fix_plain(ed_t r, const ed_t * t, const bn_t k) {",
      "51:  int8_t naf[RLC_FP_BITS + 1], *_k;",
      "54:  l = RLC_FP_BITS + 1;",
      "",
      "[Removed Lines]",
      "50:  int l, i, n;",
      "",
      "[Added Lines]",
      "50:  int i, n;",
      "52:  size_t l;",
      "",
      "---------------"
    ],
    "src/ed/relic_ed_mul_sim.c||src/ed/relic_ed_mul_sim.c": [
      "File: src/ed/relic_ed_mul_sim.c -> src/ed/relic_ed_mul_sim.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "54: static void ed_mul_sim_plain(ed_t r, const ed_t p, const bn_t k, const ed_t q,",
      "55:   const bn_t m, const ed_t *t) {",
      "57:  int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], *_k, *_m;",
      "58:  ed_t t0[1 << (ED_WIDTH - 2)];",
      "59:  ed_t t1[1 << (ED_WIDTH - 2)];",
      "61:  RLC_TRY {",
      "62:   gen = (t == NULL ? 0 : 1);",
      "",
      "[Removed Lines]",
      "56:  int i, l, l0, l1, n0, n1, w, gen;",
      "",
      "[Added Lines]",
      "56:  int i, n0, n1, w, gen;",
      "60:  size_t l, l0, l1;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "176:   const bn_t m) {",
      "177:  ed_t t0[1 << (ED_WIDTH / 2)], t1[1 << (ED_WIDTH / 2)], t[1 << ED_WIDTH];",
      "178:  bn_t n;",
      "180:  uint8_t w0[RLC_FP_BITS + 1], w1[RLC_FP_BITS + 1];",
      "182:  bn_null(n);",
      "",
      "[Removed Lines]",
      "179:  int l0, l1, w = ED_WIDTH / 2;",
      "",
      "[Added Lines]",
      "180:  size_t l0, l1, w = ED_WIDTH / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "293: void ed_mul_sim_joint(ed_t r, const ed_t p, const bn_t k, const ed_t q,",
      "294:   const bn_t m) {",
      "295:  ed_t t[5];",
      "297:  int8_t jsf[2 * (RLC_FP_BITS + 1)];",
      "299:  if (bn_is_zero(k) || ed_is_infty(p)) {",
      "300:   ed_mul(r, q, m);",
      "",
      "[Removed Lines]",
      "296:  int i, l, u_i, offset;",
      "",
      "[Added Lines]",
      "297:  int i, u_i, offset;",
      "299:  size_t l;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "398: }",
      "400: void ed_mul_sim_lot(ed_t r, const ed_t p[], const bn_t k[], int n) {",
      "403:  int8_t *naf = NULL;",
      "405:  RLC_TRY {",
      "406:   l = 0;",
      "",
      "[Removed Lines]",
      "401:  int i, j, l, *_l = RLC_ALLOCA(int, n);",
      "402:  ed_t *_p = RLC_ALLOCA(ed_t, n);",
      "",
      "[Added Lines]",
      "403:  int i, j;",
      "405:  ed_t *_p = RLC_ALLOCA(ed_t, n);",
      "406:  size_t l, *_l = RLC_ALLOCA(size_t, n);",
      "",
      "---------------"
    ],
    "src/ed/relic_ed_util.c||src/ed/relic_ed_util.c": [
      "File: src/ed/relic_ed_util.c -> src/ed/relic_ed_util.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "242:  return size;",
      "243: }",
      "246:  if (len == 1) {",
      "247:   if (bin[0] == 0) {",
      "248:    ed_set_infty(a);",
      "",
      "[Removed Lines]",
      "245: void ed_read_bin(ed_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "245: void ed_read_bin(ed_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "297:  }",
      "298: }",
      "301:  ed_t t;",
      "303:  ed_null(t);",
      "",
      "[Removed Lines]",
      "300: void ed_write_bin(uint8_t *bin, int len, const ed_t a, int pack) {",
      "",
      "[Added Lines]",
      "300: void ed_write_bin(uint8_t *bin, size_t len, const ed_t a, int pack) {",
      "",
      "---------------"
    ],
    "src/ep/relic_ep_map.c||src/ep/relic_ep_map.c": [
      "File: src/ep/relic_ep_map.c -> src/ep/relic_ep_map.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "68: #undef EP_MAP_COPY_COND",
      "70: static inline int fp_sgn0(const fp_t t, bn_t k) {",
      "71:  fp_prime_back(k, t);",
      "72:  return bn_get_bit(k, 0);",
      "",
      "[Removed Lines]",
      "51: TMPL_MAP_HORNER(fp, fp_st)",
      "55:   TMPL_MAP_ISOGENY_MAP(ep, fp, iso)",
      "61: #define EP_MAP_COPY_COND(O, I, C) dv_copy_cond(O, I, RLC_FP_DIGS, C)",
      "62:   TMPL_MAP_SSWU(ep, fp, dig_t, EP_MAP_COPY_COND)",
      "67: TMPL_MAP_SVDW(ep, fp, dig_t, EP_MAP_COPY_COND)",
      "",
      "[Added Lines]",
      "51: TMPL_MAP_HORNER(fp, fp_st);",
      "56: TMPL_MAP_ISOGENY_MAP(ep, fp, iso);",
      "60: #define EP_MAP_COPY_COND(O, I, C) dv_copy_cond(O, I, RLC_FP_DIGS, C)",
      "65: TMPL_MAP_SSWU(ep, fp, dig_t, EP_MAP_COPY_COND);",
      "71: TMPL_MAP_SVDW(ep, fp, dig_t, EP_MAP_COPY_COND);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "80:  bn_t k;",
      "81:  fp_t t;",
      "82:  ep_t q;",
      "",
      "[Removed Lines]",
      "79: void ep_map_from_field(ep_t p, const uint8_t *uniform_bytes, int len) {",
      "",
      "[Added Lines]",
      "85: void ep_map_from_field(ep_t p, const uint8_t *uniform_bytes, size_t len) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "101:   const int abNeq0 = (ep_curve_opt_a() != RLC_ZERO) &&",
      "102:     (ep_curve_opt_b() != RLC_ZERO);",
      "104:     abNeq0) ? ep_map_sswu : ep_map_svdw;",
      "125:   EP_MAP_CONVERT_BYTES(0);",
      "",
      "[Removed Lines]",
      "103:   void (*const map_fn)(ep_t, fp_t) =(ep_curve_is_ctmap() ||",
      "106: #define EP_MAP_CONVERT_BYTES(IDX)                                       \\",
      "107:     do {                                                                \\",
      "108:       bn_read_bin(k, uniform_bytes + IDX * len_per_elm, len_per_elm);   \\",
      "109:       fp_prime_conv(t, k);                                              \\",
      "110:     } while (0)",
      "112: #define EP_MAP_APPLY_MAP(PT)                                    \\",
      "113:     do {                                                        \\",
      "115:       neg = fp_sgn0(t, k);                                      \\",
      "117:       map_fn(PT, t);                                            \\",
      "119:       neg = neg != fp_sgn0(PT->y, k);                             \\",
      "120:       fp_neg(t, PT->y);                                          \\",
      "121:       dv_copy_cond(PT->y, t, RLC_FP_DIGS, neg);                  \\",
      "122:     } while (0)",
      "",
      "[Added Lines]",
      "109:   void (*const map_fn)(ep_t, fp_t) = (ep_curve_is_ctmap() ||",
      "112: #define EP_MAP_CONVERT_BYTES(IDX)           \\",
      "113:   do {                \\",
      "114:    bn_read_bin(k, uniform_bytes + IDX * len_per_elm, len_per_elm); \\",
      "115:    fp_prime_conv(t, k);           \\",
      "116:   } while (0)",
      "118: #define EP_MAP_APPLY_MAP(PT)            \\",
      "119:   do {                \\",
      "121:    neg = fp_sgn0(t, k);           \\",
      "123:    map_fn(PT, t);             \\",
      "125:    neg = neg != fp_sgn0(PT->y, k);         \\",
      "126:    fp_neg(t, PT->y);            \\",
      "127:    dv_copy_cond(PT->y, t, RLC_FP_DIGS, neg);      \\",
      "128:   } while (0)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "179:  }",
      "180: }",
      "186:  const int len_per_elm = (FP_PRIME + ep_param_level() + 7) / 8;",
      "",
      "[Removed Lines]",
      "182: void ep_map_dst(ep_t p, const uint8_t *msg, int len, const uint8_t *dst,",
      "183:   int dst_len) {",
      "",
      "[Added Lines]",
      "188: void ep_map_dst(ep_t p, const uint8_t *msg, size_t len, const uint8_t *dst,",
      "189:   size_t dst_len) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "202:  }",
      "203: }",
      "206:  ep_map_dst(p, msg, len, (const uint8_t *)\"RELIC\", 5);",
      "207: }",
      "",
      "[Removed Lines]",
      "205: void ep_map(ep_t p, const uint8_t *msg, int len) {",
      "",
      "[Added Lines]",
      "211: void ep_map(ep_t p, const uint8_t *msg, size_t len) {",
      "",
      "---------------"
    ],
    "src/ep/relic_ep_mul.c||src/ep/relic_ep_mul.c": [
      "File: src/ep/relic_ep_mul.c -> src/ep/relic_ep_mul.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "40: #if defined(EP_ENDOM)",
      "42: static void ep_mul_glv_imp(ep_t r, const ep_t p, const bn_t k) {",
      "44:  int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], *t0, *t1;",
      "45:  bn_t n, _k, k0, k1, v1[3], v2[3];",
      "46:  ep_t q, t[1 << (EP_WIDTH - 2)];",
      "48:  bn_null(n);",
      "49:  bn_null(_k);",
      "",
      "[Removed Lines]",
      "43:  int l, l0, l1, i, n0, n1, s0, s1;",
      "",
      "[Added Lines]",
      "43:  int i, n0, n1, s0, s1;",
      "47:  size_t l, l0, l1;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "153: #if defined(EP_PLAIN) || defined(EP_SUPER)",
      "155: static void ep_mul_naf_imp(ep_t r, const ep_t p, const bn_t k) {",
      "158:  int8_t u, naf[RLC_FP_BITS + 2];",
      "159:  ep_t t[1 << (EP_WIDTH - 2)];",
      "160:  bn_t _k, n;",
      "162:  bn_null(n);",
      "163:  bn_null(_k);",
      "",
      "[Removed Lines]",
      "156:  int i, l;",
      "",
      "[Added Lines]",
      "161:  size_t l;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "166:   bn_new(n);",
      "167:   bn_new(_k);",
      "170:    ep_null(t[i]);",
      "171:    ep_new(t[i]);",
      "172:   }",
      "",
      "[Removed Lines]",
      "169:   for (i = 0; i < (1 << (EP_WIDTH - 2)); i++) {",
      "",
      "[Added Lines]",
      "170:   for (int i = 0; i < (1 << (EP_WIDTH - 2)); i++) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "182:   bn_rec_naf(naf, &l, _k, EP_WIDTH);",
      "184:   ep_set_infty(r);",
      "186:    ep_dbl(r, r);",
      "188:    u = naf[i];",
      "",
      "[Removed Lines]",
      "185:   for (i = l - 1; i >= 0; i--) {",
      "",
      "[Added Lines]",
      "186:   for (int i = l - 1; i >= 0; i--) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "205:   bn_free(n);",
      "206:   bn_free(_k);",
      "209:    ep_free(t[i]);",
      "210:   }",
      "211:  }",
      "",
      "[Removed Lines]",
      "208:   for (i = 0; i < (1 << (EP_WIDTH - 2)); i++) {",
      "",
      "[Added Lines]",
      "209:   for (int i = 0; i < (1 << (EP_WIDTH - 2)); i++) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "219: #if defined(EP_ENDOM)",
      "221: static void ep_mul_reg_glv(ep_t r, const ep_t p, const bn_t k) {",
      "223:  int8_t _s0, _s1, reg0[RLC_FP_BITS + 1], reg1[RLC_FP_BITS + 1];",
      "224:  bn_t n, _k, k0, k1, v1[3], v2[3];",
      "225:  ep_t q, t[1 << (EP_WIDTH - 2)], u, v, w;",
      "227:  bn_null(n);",
      "228:  bn_null(_k);",
      "",
      "[Removed Lines]",
      "222:  int i, j, l, n0, n1, s0, s1, b0, b1;",
      "",
      "[Added Lines]",
      "223:  int i, j, n0, n1, s0, s1, b0, b1;",
      "227:  size_t l;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "372: static void ep_mul_reg_imp(ep_t r, const ep_t p, const bn_t k) {",
      "373:  bn_t _k;",
      "375:  int8_t s, reg[1 + RLC_CEIL(RLC_FP_BITS + 1, EP_WIDTH - 1)];",
      "376:  ep_t t[1 << (EP_WIDTH - 2)], u, v;",
      "378:  if (bn_is_zero(k)) {",
      "379:   ep_set_infty(r);",
      "",
      "[Removed Lines]",
      "374:  int i, j, l, n;",
      "",
      "[Added Lines]",
      "376:  int i, j, n;",
      "379:  size_t l;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "502: void ep_mul_slide(ep_t r, const ep_t p, const bn_t k) {",
      "503:  bn_t _k, n;",
      "504:  ep_t t[1 << (EP_WIDTH - 1)], q;",
      "506:  uint8_t win[RLC_FP_BITS + 1];",
      "508:  if (bn_is_zero(k) || ep_is_infty(p)) {",
      "509:   ep_set_infty(r);",
      "",
      "[Removed Lines]",
      "505:  int i, j, l;",
      "",
      "[Added Lines]",
      "509:  size_t l;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "517:  RLC_TRY {",
      "518:   bn_new(n);",
      "519:   bn_new(_k);",
      "521:    ep_null(t[i]);",
      "522:    ep_new(t[i]);",
      "523:   }",
      "",
      "[Removed Lines]",
      "520:   for (i = 0; i < (1 << (EP_WIDTH - 1)); i ++) {",
      "",
      "[Added Lines]",
      "523:   for (size_t i = 0; i < (1 << (EP_WIDTH - 1)); i ++) {",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "534:   bn_mod(_k, k, n);",
      "538:    ep_add(t[i], t[i - 1], q);",
      "539:   }",
      "",
      "[Removed Lines]",
      "537:   for (i = 1; i < (1 << (EP_WIDTH - 1)); i++) {",
      "",
      "[Added Lines]",
      "540:   for (size_t i = 1; i < (1 << (EP_WIDTH - 1)); i++) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "545:   ep_set_infty(q);",
      "546:   l = RLC_FP_BITS + 1;",
      "547:   bn_rec_slw(win, &l, _k, EP_WIDTH);",
      "549:    if (win[i] == 0) {",
      "550:     ep_dbl(q, q);",
      "551:    } else {",
      "553:      ep_dbl(q, q);",
      "554:     }",
      "555:     ep_add(q, q, t[win[i] >> 1]);",
      "",
      "[Removed Lines]",
      "548:   for (i = 0; i < l; i++) {",
      "552:     for (j = 0; j < util_bits_dig(win[i]); j++) {",
      "",
      "[Added Lines]",
      "551:   for (size_t i = 0; i < l; i++) {",
      "555:     for (size_t j = 0; j < util_bits_dig(win[i]); j++) {",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "567:  RLC_FINALLY {",
      "568:   bn_free(n);",
      "569:   bn_free(_k);",
      "571:    ep_free(t[i]);",
      "572:   }",
      "573:   ep_free(q);",
      "",
      "[Removed Lines]",
      "570:   for (i = 0; i < (1 << (EP_WIDTH - 1)); i++) {",
      "",
      "[Added Lines]",
      "573:   for (size_t i = 0; i < (1 << (EP_WIDTH - 1)); i++) {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "579: #if EP_MUL == MONTY || !defined(STRIP)",
      "581: void ep_mul_monty(ep_t r, const ep_t p, const bn_t k) {",
      "583:  ep_t t[2];",
      "584:  bn_t n, l, _k;",
      "586:  bn_null(n);",
      "587:  bn_null(l);",
      "",
      "[Removed Lines]",
      "582:  int i, j, bits;",
      "",
      "[Added Lines]",
      "587:  size_t bits;",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "619:   ep_blind(t[0], t[0]);",
      "620:   ep_blind(t[1], t[1]);",
      "624:    dv_swap_cond(t[0]->x, t[1]->x, RLC_FP_DIGS, j ^ 1);",
      "625:    dv_swap_cond(t[0]->y, t[1]->y, RLC_FP_DIGS, j ^ 1);",
      "626:    dv_swap_cond(t[0]->z, t[1]->z, RLC_FP_DIGS, j ^ 1);",
      "",
      "[Removed Lines]",
      "622:   for (i = bits - 1; i >= 0; i--) {",
      "623:    j = bn_get_bit(l, i);",
      "",
      "[Added Lines]",
      "625:   for (int i = bits - 1; i >= 0; i--) {",
      "626:    int j = bn_get_bit(l, i);",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "723:  ep_t t;",
      "724:  bn_t _k;",
      "725:  int8_t u, naf[RLC_DIG + 1];",
      "728:  ep_null(t);",
      "729:  bn_null(_k);",
      "",
      "[Removed Lines]",
      "726:  int l;",
      "",
      "[Added Lines]",
      "729:  size_t l;",
      "",
      "---------------"
    ],
    "src/ep/relic_ep_mul_fix.c||src/ep/relic_ep_mul_fix.c": [
      "File: src/ep/relic_ep_mul_fix.c -> src/ep/relic_ep_mul_fix.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "48: static void ep_mul_fix_plain(ep_t r, const ep_t *t, const bn_t k) {",
      "50:  int8_t naf[RLC_FP_BITS + 1];",
      "53:  l = RLC_FP_BITS + 1;",
      "",
      "[Removed Lines]",
      "49:  int l, i, n;",
      "",
      "[Added Lines]",
      "49:  int i, n;",
      "51:  size_t l;",
      "",
      "---------------"
    ],
    "src/ep/relic_ep_mul_sim.c||src/ep/relic_ep_mul_sim.c": [
      "File: src/ep/relic_ep_mul_sim.c -> src/ep/relic_ep_mul_sim.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "55: static void ep_mul_sim_endom(ep_t r, const ep_t p, const bn_t k, const ep_t q,",
      "56:   const bn_t m, const ep_t *t) {",
      "58:  int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], *t0, *t1, u;",
      "59:  int8_t naf2[RLC_FP_BITS + 1], naf3[RLC_FP_BITS + 1], *t2, *t3;",
      "60:  bn_t n, k0, k1, m0, m1;",
      "",
      "[Removed Lines]",
      "57:  int i, l, l0, l1, l2, l3, sk0, sk1, sl0, sl1, w, g = 0;",
      "",
      "[Added Lines]",
      "57:  int i, sk0, sk1, sl0, sl1, w, g = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "62:  ep_t v;",
      "63:  ep_t tab0[1 << (EP_WIDTH - 2)];",
      "64:  ep_t tab1[1 << (EP_WIDTH - 2)];",
      "66:  bn_null(n);",
      "67:  bn_null(k0);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "65:  size_t l, l0, l1, l2, l3;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "265: void ep_mul_sim_lot_endom(ep_t r, const ep_t p[], const bn_t k[], int n) {",
      "266:  const int len = RLC_FP_BITS + 1;",
      "268:  bn_t _k[2], q, v1[3], v2[3];",
      "269:  int8_t ptr, *naf = RLC_ALLOCA(int8_t, 2 * n * len);",
      "271:  bn_null(q);",
      "",
      "[Removed Lines]",
      "267:  int i, j, m, l, _l[2], sk;",
      "",
      "[Added Lines]",
      "268:  int i, j, m, sk;",
      "271:  size_t l, _l[2];",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "487: static void ep_mul_sim_plain(ep_t r, const ep_t p, const bn_t k, const ep_t q,",
      "488:   const bn_t m, const ep_t *t) {",
      "490:  int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], n0, n1, *u, *v;",
      "491:  ep_t t0[1 << (EP_WIDTH - 2)];",
      "492:  ep_t t1[1 << (EP_WIDTH - 2)];",
      "494:  RLC_TRY {",
      "495:   gen = (t == NULL ? 0 : 1);",
      "",
      "[Removed Lines]",
      "489:  int i, l, l0, l1, w, gen;",
      "",
      "[Added Lines]",
      "491:  int i, w, gen;",
      "495:  size_t l, l0, l1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "585: void ep_mul_sim_lot_plain(ep_t r, const ep_t p[], const bn_t k[], int n) {",
      "588:  int8_t *naf = NULL;",
      "590:  RLC_TRY {",
      "591:   l = 0;",
      "",
      "[Removed Lines]",
      "586:  int i, j, l, *_l = RLC_ALLOCA(int, n);",
      "587:  ep_t *_p = RLC_ALLOCA(ep_t, n);",
      "",
      "[Added Lines]",
      "589:  int i, j;",
      "591:  ep_t *_p = RLC_ALLOCA(ep_t, n);",
      "592:  size_t l, *_l = RLC_ALLOCA(size_t, n);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "677:   const bn_t m) {",
      "678:  ep_t t0[1 << (EP_WIDTH / 2)], t1[1 << (EP_WIDTH / 2)], t[1 << EP_WIDTH];",
      "679:  bn_t n, _k, _m;",
      "681:  uint8_t w0[RLC_FP_BITS + 1], w1[RLC_FP_BITS + 1];",
      "683:  if (bn_is_zero(k) || ep_is_infty(p)) {",
      "",
      "[Removed Lines]",
      "680:  int l0, l1, w = EP_WIDTH / 2;",
      "",
      "[Added Lines]",
      "684:  size_t l0, l1, w = EP_WIDTH / 2;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "838:   const bn_t m) {",
      "839:  bn_t n, _k, _m;",
      "840:  ep_t t[5];",
      "842:  int8_t jsf[2 * (RLC_FP_BITS + 1)];",
      "844:  if (bn_is_zero(k) || ep_is_infty(p)) {",
      "845:   ep_mul(r, q, m);",
      "",
      "[Removed Lines]",
      "841:  int i, l, u_i, offset;",
      "",
      "[Added Lines]",
      "845:  int i, u_i, offset;",
      "847:  size_t l;",
      "",
      "---------------"
    ],
    "src/ep/relic_ep_util.c||src/ep/relic_ep_util.c": [
      "File: src/ep/relic_ep_util.c -> src/ep/relic_ep_util.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "234:  return size;",
      "235: }",
      "238:  if (len == 1) {",
      "239:   if (bin[0] == 0) {",
      "240:    ep_set_infty(a);",
      "",
      "[Removed Lines]",
      "237: void ep_read_bin(ep_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "237: void ep_read_bin(ep_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "284:  }",
      "285: }",
      "288:  ep_t t;",
      "290:  ep_null(t);",
      "",
      "[Removed Lines]",
      "287: void ep_write_bin(uint8_t *bin, int len, const ep_t a, int pack) {",
      "",
      "[Added Lines]",
      "287: void ep_write_bin(uint8_t *bin, size_t len, const ep_t a, int pack) {",
      "",
      "---------------"
    ],
    "src/epx/relic_ep2_map.c||src/epx/relic_ep2_map.c": [
      "File: src/epx/relic_ep2_map.c -> src/epx/relic_ep2_map.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "50: TMPL_MAP_HORNER(fp2, fp2_t)",
      "55: TMPL_MAP_ISOGENY_MAP(ep2, fp2, iso2)",
      "65:  } while (0)",
      "66: TMPL_MAP_SSWU(ep2, fp2, fp_t, EP2_MAP_COPY_COND)",
      "71: TMPL_MAP_SVDW(ep2, fp2, fp_t, EP2_MAP_COPY_COND)",
      "72: #undef EP2_MAP_COPY_COND",
      "75: static inline int fp2_sgn0(const fp2_t t, bn_t k) {",
      "76:  const int t_0_zero = fp_is_zero(t[0]);",
      "",
      "[Removed Lines]",
      "61: #define EP2_MAP_COPY_COND(O, I, C)                                                       \\",
      "62:  do {                                                                                 \\",
      "63:   dv_copy_cond(O[0], I[0], RLC_FP_DIGS, C);                                        \\",
      "64:   dv_copy_cond(O[1], I[1], RLC_FP_DIGS, C);                                        \\",
      "",
      "[Added Lines]",
      "59: #define EP2_MAP_COPY_COND(O, I, C)           \\",
      "60:  do {                 \\",
      "61:   dv_copy_cond(O[0], I[0], RLC_FP_DIGS, C);       \\",
      "62:   dv_copy_cond(O[1], I[1], RLC_FP_DIGS, C);       \\",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "151: #undef EP2_MAP_CONVERT_BYTES",
      "152: #undef EP2_MAP_APPLY_MAP",
      "167: }",
      "189: }",
      "192:  ep2_map_dst(p, msg, len, (const uint8_t *)\"RELIC\", 5);",
      "193: }",
      "",
      "[Removed Lines]",
      "92: void ep2_map_from_field(ep2_t p, const uint8_t *uniform_bytes, int len) {",
      "93:         bn_t k;",
      "94:         fp2_t t;",
      "95:         ep2_t q;",
      "96:         int neg;",
      "98:         const int len_per_elm = (FP_PRIME + ep_param_level() + 7) / 8;",
      "100:         bn_null(k);",
      "101:         fp2_null(t);",
      "102:         ep2_null(q);",
      "104:         RLC_TRY {",
      "105:                 if (len != 2* len_per_elm) {",
      "106:                   RLC_THROW(ERR_NO_VALID);",
      "107:                 }",
      "109:                 bn_new(k);",
      "110:                 fp2_new(t);",
      "111:                 ep2_new(q);",
      "114:                 const int abNeq0 = (ep2_curve_opt_a() != RLC_ZERO) && (ep2_curve_opt_b() != RLC_ZERO);",
      "115:                 void (*const map_fn)(ep2_t, fp2_t) = (ep2_curve_is_ctmap() || abNeq0) ? ep2_map_sswu : ep2_map_svdw;",
      "117: #define EP2_MAP_CONVERT_BYTES(IDX)                                                       \\",
      "118:         do {                                                                                 \\",
      "119:                 bn_read_bin(k, uniform_bytes + 2 * IDX * len_per_elm, len_per_elm);        \\",
      "120:                 fp_prime_conv(t[0], k);                                                          \\",
      "121:                 bn_read_bin(k, uniform_bytes + (2 * IDX + 1) * len_per_elm, len_per_elm);  \\",
      "122:                 fp_prime_conv(t[1], k);                                                          \\",
      "123:         } while (0)",
      "125: #define EP2_MAP_APPLY_MAP(PT)                                                            \\",
      "126:         do {                                                                                 \\",
      "128:                 neg = fp2_sgn0(t, k);                                                            \\",
      "130:                 map_fn(PT, t);                                                                   \\",
      "132:                 neg = neg != fp2_sgn0(PT->y, k);                                                 \\",
      "133:                 fp2_neg(t, PT->y);                                                               \\",
      "134:                 dv_copy_cond(PT->y[0], t[0], RLC_FP_DIGS, neg);                                  \\",
      "135:                 dv_copy_cond(PT->y[1], t[1], RLC_FP_DIGS, neg);                                  \\",
      "136:         } while (0)",
      "139:                 EP2_MAP_CONVERT_BYTES(0);",
      "140:                 EP2_MAP_APPLY_MAP(p);",
      "141:                 TMPL_MAP_CALL_ISOMAP(ep2, p);",
      "144:                 EP2_MAP_CONVERT_BYTES(1);",
      "145:                 EP2_MAP_APPLY_MAP(q);",
      "146:                 TMPL_MAP_CALL_ISOMAP(ep2, q);",
      "155:                 ep2_add(p, p, q);",
      "156:                 ep2_norm(p, p);",
      "157:                 ep2_mul_cof(p, p);",
      "158:         }",
      "159:         RLC_CATCH_ANY {",
      "160:                 RLC_THROW(ERR_CAUGHT);",
      "161:         }",
      "162:         RLC_FINALLY {",
      "163:                 bn_free(k);",
      "164:                 fp2_free(t);",
      "165:                 ep2_free(q);",
      "166:         }",
      "170: void ep2_map_dst(ep2_t p, const uint8_t *msg, int len, const uint8_t *dst, int dst_len) {",
      "173:         const int len_per_elm = (FP_PRIME + ep_param_level() + 7) / 8;",
      "174:         uint8_t *pseudo_random_bytes = RLC_ALLOCA(uint8_t, 4 * len_per_elm);",
      "176:         RLC_TRY {",
      "180:                 md_xmd(pseudo_random_bytes, 4 * len_per_elm, msg, len, dst, dst_len);",
      "181:                 ep2_map_from_field(p, pseudo_random_bytes, 2 * len_per_elm);",
      "182:         }",
      "183:         RLC_CATCH_ANY {",
      "184:                 RLC_THROW(ERR_CAUGHT);",
      "185:         }",
      "186:         RLC_FINALLY {",
      "187:                 RLC_FREE(pseudo_random_bytes);",
      "188:         }",
      "191: void ep2_map(ep2_t p, const uint8_t *msg, int len) {",
      "",
      "[Added Lines]",
      "88: void ep2_map_from_field(ep2_t p, const uint8_t *uniform_bytes, size_t len) {",
      "89:  bn_t k;",
      "90:  fp2_t t;",
      "91:  ep2_t q;",
      "92:  int neg;",
      "94:  const int lpe = (FP_PRIME + ep_param_level() + 7) / 8;",
      "96:  bn_null(k);",
      "97:  fp2_null(t);",
      "98:  ep2_null(q);",
      "100:  RLC_TRY {",
      "101:   if (len != 2 * lpe) {",
      "102:    RLC_THROW(ERR_NO_VALID);",
      "103:   }",
      "105:   bn_new(k);",
      "106:   fp2_new(t);",
      "107:   ep2_new(q);",
      "110:   const int abNeq0 = (ep2_curve_opt_a() != RLC_ZERO) &&",
      "111:     (ep2_curve_opt_b() != RLC_ZERO);",
      "112:   void (*const map_fn)(ep2_t, fp2_t) = (ep2_curve_is_ctmap() ||",
      "113:     abNeq0) ? ep2_map_sswu : ep2_map_svdw;",
      "115: #define EP2_MAP_CONVERT_BYTES(IDX)           \\",
      "116:   do {                \\",
      "117:    bn_read_bin(k, uniform_bytes + 2 * IDX * lpe, lpe);    \\",
      "118:    fp_prime_conv(t[0], k);           \\",
      "119:    bn_read_bin(k, uniform_bytes + (2 * IDX + 1) * lpe, lpe);  \\",
      "120:    fp_prime_conv(t[1], k);           \\",
      "121:      } while (0)",
      "123: #define EP2_MAP_APPLY_MAP(PT)            \\",
      "124:   do {                \\",
      "126:             neg = fp2_sgn0(t, k);           \\",
      "128:             map_fn(PT, t);             \\",
      "130:             neg = neg != fp2_sgn0(PT->y, k);        \\",
      "131:             fp2_neg(t, PT->y);            \\",
      "132:             dv_copy_cond(PT->y[0], t[0], RLC_FP_DIGS, neg);     \\",
      "133:             dv_copy_cond(PT->y[1], t[1], RLC_FP_DIGS, neg);     \\",
      "134:   } while (0)",
      "137:   EP2_MAP_CONVERT_BYTES(0);",
      "138:   EP2_MAP_APPLY_MAP(p);",
      "139:   TMPL_MAP_CALL_ISOMAP(ep2, p);",
      "142:   EP2_MAP_CONVERT_BYTES(1);",
      "143:   EP2_MAP_APPLY_MAP(q);",
      "144:   TMPL_MAP_CALL_ISOMAP(ep2, q);",
      "153:   ep2_add(p, p, q);",
      "154:   ep2_norm(p, p);",
      "155:   ep2_mul_cof(p, p);",
      "156:  }",
      "157:  RLC_CATCH_ANY {",
      "158:   RLC_THROW(ERR_CAUGHT);",
      "159:  }",
      "160:  RLC_FINALLY {",
      "161:   bn_free(k);",
      "162:   fp2_free(t);",
      "163:   ep2_free(q);",
      "164:  }",
      "168: void ep2_map_dst(ep2_t p, const uint8_t *msg, size_t len, const uint8_t *dst,",
      "169:   size_t dst_len) {",
      "171:  const int lpe = (FP_PRIME + ep_param_level() + 7) / 8;",
      "172:  uint8_t *pseudo_random_bytes = RLC_ALLOCA(uint8_t, 4 * lpe);",
      "174:  RLC_TRY {",
      "177:   md_xmd(pseudo_random_bytes, 4 * lpe, msg, len, dst, dst_len);",
      "178:   ep2_map_from_field(p, pseudo_random_bytes, 2 * lpe);",
      "179:  }",
      "180:  RLC_CATCH_ANY {",
      "181:   RLC_THROW(ERR_CAUGHT);",
      "182:  }",
      "183:  RLC_FINALLY {",
      "184:   RLC_FREE(pseudo_random_bytes);",
      "185:  }",
      "188: void ep2_map(ep2_t p, const uint8_t *msg, size_t len) {",
      "",
      "---------------"
    ],
    "src/epx/relic_ep2_mul.c||src/epx/relic_ep2_mul.c": [
      "File: src/epx/relic_ep2_mul.c -> src/epx/relic_ep2_mul.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "41: #if defined(EP_ENDOM)",
      "43: static void ep2_mul_glv_imp(ep2_t r, const ep2_t p, const bn_t k) {",
      "45:  bn_t n, _k[4], u;",
      "46:  int8_t naf[4][RLC_FP_BITS + 1];",
      "47:  ep2_t q[4];",
      "",
      "[Removed Lines]",
      "44:  int i, j, l, _l[4];",
      "",
      "[Added Lines]",
      "44:  size_t l, _l[4];",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "52:  RLC_TRY {",
      "53:   bn_new(n);",
      "54:   bn_new(u);",
      "56:    bn_null(_k[i]);",
      "57:    ep2_null(q[i]);",
      "58:    bn_new(_k[i]);",
      "",
      "[Removed Lines]",
      "55:   for (i = 0; i < 4; i++) {",
      "",
      "[Added Lines]",
      "55:   for (int i = 0; i < 4; i++) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "70:   ep2_frb(q[3], q[2], 1);",
      "72:   l = 0;",
      "74:    if (bn_sign(_k[i]) == RLC_NEG) {",
      "75:     ep2_neg(q[i], q[i]);",
      "76:    }",
      "",
      "[Removed Lines]",
      "73:   for (i = 0; i < 4; i++) {",
      "",
      "[Added Lines]",
      "73:   for (int i = 0; i < 4; i++) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "80:   }",
      "82:   ep2_set_infty(r);",
      "84:    ep2_dbl(r, r);",
      "87:     if (naf[i][j] > 0) {",
      "88:      ep2_add(r, r, q[i]);",
      "89:     }",
      "",
      "[Removed Lines]",
      "83:   for (j = l - 1; j >= 0; j--) {",
      "86:    for (i = 0; i < 4; i++) {",
      "",
      "[Added Lines]",
      "83:   for (int j = l - 1; j >= 0; j--) {",
      "86:    for (int i = 0; i < 4; i++) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "102:  RLC_FINALLY {",
      "103:   bn_free(n);",
      "104:   bn_free(u);",
      "106:    bn_free(_k[i]);",
      "107:    ep2_free(q[i]);",
      "108:   }",
      "",
      "[Removed Lines]",
      "105:   for (i = 0; i < 4; i++) {",
      "",
      "[Added Lines]",
      "105:   for (int i = 0; i < 4; i++) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "115: static void ep2_mul_naf_imp(ep2_t r, const ep2_t p, const bn_t k) {",
      "117:  int8_t naf[RLC_FP_BITS + 1];",
      "118:  ep2_t t[1 << (EP_WIDTH - 2)];",
      "120:  RLC_TRY {",
      "123:    ep2_null(t[i]);",
      "124:    ep2_new(t[i]);",
      "125:   }",
      "",
      "[Removed Lines]",
      "116:  int l, i, n;",
      "122:   for (i = 0; i < (1 << (EP_WIDTH - 2)); i++) {",
      "",
      "[Added Lines]",
      "116:  size_t l, n;",
      "122:   for (int i = 0; i < (1 << (EP_WIDTH - 2)); i++) {",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "131:   bn_rec_naf(naf, &l, k, EP_WIDTH);",
      "133:   ep2_set_infty(r);",
      "135:    ep2_dbl(r, r);",
      "137:    n = naf[i];",
      "",
      "[Removed Lines]",
      "134:   for (i = l - 1; i >= 0; i--) {",
      "",
      "[Added Lines]",
      "134:   for (int i = l - 1; i >= 0; i--) {",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "153:  }",
      "154:  RLC_FINALLY {",
      "157:    ep2_free(t[i]);",
      "158:   }",
      "159:  }",
      "",
      "[Removed Lines]",
      "156:   for (i = 0; i < (1 << (EP_WIDTH - 2)); i++) {",
      "",
      "[Added Lines]",
      "156:   for (int i = 0; i < (1 << (EP_WIDTH - 2)); i++) {",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "168: void ep2_mul_basic(ep2_t r, const ep2_t p, const bn_t k) {",
      "170:  ep2_t t;",
      "172:  ep2_null(t);",
      "",
      "[Removed Lines]",
      "169:  int i, l;",
      "",
      "[Added Lines]",
      "169:  size_t l;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "186:    ep2_set_infty(t);",
      "187:   }",
      "190:    ep2_dbl(t, t);",
      "191:    if (bn_get_bit(k, i)) {",
      "192:     ep2_add(t, t, p);",
      "",
      "[Removed Lines]",
      "189:   for (i = l - 2; i >= 0; i--) {",
      "",
      "[Added Lines]",
      "189:   for (int i = l - 2; i >= 0; i--) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "212: void ep2_mul_slide(ep2_t r, const ep2_t p, const bn_t k) {",
      "213:  ep2_t t[1 << (EP_WIDTH - 1)], q;",
      "215:  uint8_t win[RLC_FP_BITS + 1];",
      "217:  ep2_null(q);",
      "",
      "[Removed Lines]",
      "214:  int i, j, l;",
      "",
      "[Added Lines]",
      "215:  size_t l;",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "222:  }",
      "224:  RLC_TRY {",
      "226:    ep2_null(t[i]);",
      "227:    ep2_new(t[i]);",
      "228:   }",
      "",
      "[Removed Lines]",
      "225:   for (i = 0; i < (1 << (EP_WIDTH - 1)); i ++) {",
      "",
      "[Added Lines]",
      "225:   for (int i = 0; i < (1 << (EP_WIDTH - 1)); i ++) {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "237: #endif",
      "241:    ep2_add(t[i], t[i - 1], q);",
      "242:   }",
      "",
      "[Removed Lines]",
      "240:   for (i = 1; i < (1 << (EP_WIDTH - 1)); i++) {",
      "",
      "[Added Lines]",
      "240:   for (size_t i = 1; i < (1 << (EP_WIDTH - 1)); i++) {",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "248:   ep2_set_infty(q);",
      "249:   l = RLC_FP_BITS + 1;",
      "250:   bn_rec_slw(win, &l, k, EP_WIDTH);",
      "252:    if (win[i] == 0) {",
      "253:     ep2_dbl(q, q);",
      "254:    } else {",
      "256:      ep2_dbl(q, q);",
      "257:     }",
      "258:     ep2_add(q, q, t[win[i] >> 1]);",
      "",
      "[Removed Lines]",
      "251:   for (i = 0; i < l; i++) {",
      "255:     for (j = 0; j < util_bits_dig(win[i]); j++) {",
      "",
      "[Added Lines]",
      "251:   for (size_t i = 0; i < l; i++) {",
      "255:     for (size_t j = 0; j < util_bits_dig(win[i]); j++) {",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "268:   RLC_THROW(ERR_CAUGHT);",
      "269:  }",
      "270:  RLC_FINALLY {",
      "272:    ep2_free(t[i]);",
      "273:   }",
      "274:   ep2_free(q);",
      "",
      "[Removed Lines]",
      "271:   for (i = 0; i < (1 << (EP_WIDTH - 1)); i++) {",
      "",
      "[Added Lines]",
      "271:   for (size_t i = 0; i < (1 << (EP_WIDTH - 1)); i++) {",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "387:  ep2_t t;",
      "388:  bn_t _k;",
      "389:  int8_t u, naf[RLC_DIG + 1];",
      "392:  ep2_null(t);",
      "393:  bn_null(_k);",
      "",
      "[Removed Lines]",
      "390:  int l;",
      "",
      "[Added Lines]",
      "390:  size_t l;",
      "",
      "---------------"
    ],
    "src/epx/relic_ep2_mul_fix.c||src/epx/relic_ep2_mul_fix.c": [
      "File: src/epx/relic_ep2_mul_fix.c -> src/epx/relic_ep2_mul_fix.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "49: static void ep2_mul_fix_plain(ep2_t r, const ep2_t *table, const bn_t k) {",
      "51:  int8_t naf[2 * RLC_FP_BITS + 1], *t;",
      "53:  if (bn_is_zero(k)) {",
      "54:   ep2_set_infty(r);",
      "",
      "[Removed Lines]",
      "50:  int len, i, n;",
      "",
      "[Added Lines]",
      "51:  size_t len;",
      "52:  int n;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "62:  t = naf + len - 1;",
      "63:  ep2_set_infty(r);",
      "65:   ep2_dbl(r, r);",
      "67:   n = *t;",
      "",
      "[Removed Lines]",
      "64:  for (i = len - 1; i >= 0; i--, t--) {",
      "",
      "[Added Lines]",
      "65:  for (int i = len - 1; i >= 0; i--, t--) {",
      "",
      "---------------"
    ],
    "src/epx/relic_ep2_mul_sim.c||src/epx/relic_ep2_mul_sim.c": [
      "File: src/epx/relic_ep2_mul_sim.c -> src/epx/relic_ep2_mul_sim.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "55: static void ep2_mul_sim_endom(ep2_t r, const ep2_t p, const bn_t k, ep2_t q,",
      "56:   const bn_t m) {",
      "58:  bn_t _k[4], _m[4], n, u;",
      "59:  int8_t naf0[4][RLC_FP_BITS + 1];",
      "60:  int8_t naf1[4][RLC_FP_BITS + 1];",
      "",
      "[Removed Lines]",
      "57:  int i, j, l, _l[4];",
      "",
      "[Added Lines]",
      "57:  size_t l, _l[4];",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "66:  RLC_TRY {",
      "67:   bn_new(n);",
      "68:   bn_new(u);",
      "70:    bn_null(_k[i]);",
      "71:    bn_new(_k[i]);",
      "72:    bn_null(_m[i]);",
      "",
      "[Removed Lines]",
      "69:   for (i = 0; i < 4; i++) {",
      "",
      "[Added Lines]",
      "69:   for (int i = 0; i < 4; i++) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "94:   bn_rec_frb(_m, 4, _m[0], u, n, ep_curve_is_pairf() == EP_BN);",
      "96:   l = 0;",
      "98:    _l[i] = RLC_FP_BITS + 1;",
      "99:    bn_rec_naf(naf0[i], &_l[i], _k[i], 2);",
      "100:    if (bn_sign(_k[i]) == RLC_NEG) {",
      "",
      "[Removed Lines]",
      "97:   for (i = 0; i < 4; i++) {",
      "",
      "[Added Lines]",
      "97:   for (int i = 0; i < 4; i++) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "110:   }",
      "112:   ep2_set_infty(r);",
      "114:    ep2_dbl(r, r);",
      "116:     if (naf0[j][i] > 0) {",
      "117:      ep2_add(r, r, _p[j]);",
      "118:     }",
      "",
      "[Removed Lines]",
      "113:   for (i = l - 1; i >= 0; i--) {",
      "115:    for (j = 0; j < 4; j++) {",
      "",
      "[Added Lines]",
      "113:   for (int i = l - 1; i >= 0; i--) {",
      "115:    for (int j = 0; j < 4; j++) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "135:  } RLC_FINALLY {",
      "136:   bn_free(n);",
      "137:   bn_free(u);",
      "139:    bn_free(_k[i]);",
      "140:    bn_free(_m[i]);",
      "141:    ep2_free(_p[i]);",
      "",
      "[Removed Lines]",
      "138:   for (i = 0; i < 4; i++) {",
      "",
      "[Added Lines]",
      "138:   for (int i = 0; i < 4; i++) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "163: static void ep2_mul_sim_plain(ep2_t r, const ep2_t p, const bn_t k,",
      "164:   const ep2_t q, const bn_t m, const ep2_t *t) {",
      "166:  int8_t naf0[2 * RLC_FP_BITS + 1], naf1[2 * RLC_FP_BITS + 1], *_k, *_m;",
      "167:  ep2_t t0[1 << (EP_WIDTH - 2)];",
      "168:  ep2_t t1[1 << (EP_WIDTH - 2)];",
      "170:  RLC_TRY {",
      "171:   gen = (t == NULL ? 0 : 1);",
      "",
      "[Removed Lines]",
      "165:  int i, l, l0, l1, n0, n1, w, gen;",
      "",
      "[Added Lines]",
      "165:  int i, n0, n1, w, gen;",
      "169:  size_t l, l0, l1;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "289:  ep2_t t1[1 << (EP_WIDTH / 2)];",
      "290:  ep2_t t[1 << EP_WIDTH];",
      "291:  bn_t n, _k, _m;",
      "293:  uint8_t w0[2 * RLC_FP_BITS], w1[2 * RLC_FP_BITS];",
      "295:  bn_null(n);",
      "",
      "[Removed Lines]",
      "292:  int l0, l1, w = EP_WIDTH / 2;",
      "",
      "[Added Lines]",
      "293:  size_t l0, l1, w = EP_WIDTH / 2;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "451:   const bn_t m) {",
      "452:  bn_t n, _k, _m;",
      "453:  ep2_t t[5];",
      "455:  int8_t jsf[2 * (RLC_FP_BITS + 1)];",
      "457:  if (bn_is_zero(k) || ep2_is_infty(p)) {",
      "458:   ep2_mul(r, q, m);",
      "",
      "[Removed Lines]",
      "454:  int i, l, u_i, offset;",
      "",
      "[Added Lines]",
      "455:  int i, u_i, offset;",
      "457:  size_t l;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "601:  }",
      "602: }",
      "605:  ep2_t t;",
      "606:  int max;",
      "",
      "[Removed Lines]",
      "604: void ep2_mul_sim_dig(ep2_t r, const ep2_t p[], const dig_t k[], int len) {",
      "",
      "[Added Lines]",
      "606: void ep2_mul_sim_dig(ep2_t r, const ep2_t p[], const dig_t k[], size_t len) {",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "635:  }",
      "636: }",
      "641:  bn_t _k[4], q, x;",
      "642:  int8_t ptr, *naf = RLC_ALLOCA(int8_t, 4 * n * len);",
      "644:  if (n == 0) {",
      "645:   ep2_set_infty(r);",
      "",
      "[Removed Lines]",
      "638: void ep2_mul_sim_lot(ep2_t r, const ep2_t p[], const bn_t k[], int n) {",
      "639:  const int len = RLC_FP_BITS + 1;",
      "640:  int i, j, m, l, _l[4];",
      "",
      "[Added Lines]",
      "640: void ep2_mul_sim_lot(ep2_t r, const ep2_t p[], const bn_t k[], size_t n) {",
      "641:  const size_t len = RLC_FP_BITS + 1;",
      "642:  int i, j, m;",
      "645:  size_t l, _l[4];",
      "",
      "---------------"
    ],
    "src/epx/relic_ep2_util.c||src/epx/relic_ep2_util.c": [
      "File: src/epx/relic_ep2_util.c -> src/epx/relic_ep2_util.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "243:  return size;",
      "244: }",
      "247:  if (len == 1) {",
      "248:   if (bin[0] == 0) {",
      "249:    ep2_set_infty(a);",
      "",
      "[Removed Lines]",
      "246: void ep2_read_bin(ep2_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "246: void ep2_read_bin(ep2_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "293:  }",
      "294: }",
      "297:  ep2_t t;",
      "299:  ep2_null(t);",
      "",
      "[Removed Lines]",
      "296: void ep2_write_bin(uint8_t *bin, int len, const ep2_t a, int pack) {",
      "",
      "[Added Lines]",
      "296: void ep2_write_bin(uint8_t *bin, size_t len, const ep2_t a, int pack) {",
      "",
      "---------------"
    ],
    "src/epx/relic_ep4_map.c||src/epx/relic_ep4_map.c": [
      "File: src/epx/relic_ep4_map.c -> src/epx/relic_ep4_map.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "41:  bn_t x;",
      "42:  fp4_t t0;",
      "43:  uint8_t digest[RLC_MD_LEN];",
      "",
      "[Removed Lines]",
      "40: void ep4_map(ep4_t p, const uint8_t *msg, int len) {",
      "",
      "[Added Lines]",
      "40: void ep4_map(ep4_t p, const uint8_t *msg, size_t len) {",
      "",
      "---------------"
    ],
    "src/epx/relic_ep4_mul.c||src/epx/relic_ep4_mul.c": [
      "File: src/epx/relic_ep4_mul.c -> src/epx/relic_ep4_mul.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "41: #if defined(EP_ENDOM)",
      "43: static void ep4_mul_glv_imp(ep4_t r, const ep4_t p, const bn_t k) {",
      "45:  bn_t n, _k[8], u, v;",
      "46:  int8_t naf[8][RLC_FP_BITS + 1];",
      "47:  ep4_t q[8];",
      "49:  bn_null(n);",
      "50:  bn_null(u);",
      "",
      "[Removed Lines]",
      "44:  int sign, i, j, l, _l[8];",
      "",
      "[Added Lines]",
      "44:  int sign, i, j;",
      "48:  size_t l, _l[8];",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "133: static void ep4_mul_naf_imp(ep4_t r, const ep4_t p, const bn_t k) {",
      "135:  int8_t naf[RLC_FP_BITS + 1];",
      "136:  ep4_t t[1 << (EP_WIDTH - 2)];",
      "138:  RLC_TRY {",
      "",
      "[Removed Lines]",
      "134:  int l, i, n;",
      "",
      "[Added Lines]",
      "135:  int i, n;",
      "138:  size_t l;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "230: void ep4_mul_slide(ep4_t r, const ep4_t p, const bn_t k) {",
      "231:  ep4_t t[1 << (EP_WIDTH - 1)], q;",
      "233:  uint8_t win[RLC_FP_BITS + 1];",
      "235:  ep4_null(q);",
      "",
      "[Removed Lines]",
      "232:  int i, j, l;",
      "",
      "[Added Lines]",
      "235:  size_t l;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "240:  }",
      "242:  RLC_TRY {",
      "244:    ep4_null(t[i]);",
      "245:    ep4_new(t[i]);",
      "246:   }",
      "",
      "[Removed Lines]",
      "243:   for (i = 0; i < (1 << (EP_WIDTH - 1)); i ++) {",
      "",
      "[Added Lines]",
      "245:   for (size_t i = 0; i < (1 << (EP_WIDTH - 1)); i ++) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "255: #endif",
      "259:    ep4_add(t[i], t[i - 1], q);",
      "260:   }",
      "",
      "[Removed Lines]",
      "258:   for (i = 1; i < (1 << (EP_WIDTH - 1)); i++) {",
      "",
      "[Added Lines]",
      "260:   for (size_t i = 1; i < (1 << (EP_WIDTH - 1)); i++) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "266:   ep4_set_infty(q);",
      "267:   l = RLC_FP_BITS + 1;",
      "268:   bn_rec_slw(win, &l, k, EP_WIDTH);",
      "270:    if (win[i] == 0) {",
      "271:     ep4_dbl(q, q);",
      "272:    } else {",
      "274:      ep4_dbl(q, q);",
      "275:     }",
      "276:     ep4_add(q, q, t[win[i] >> 1]);",
      "",
      "[Removed Lines]",
      "269:   for (i = 0; i < l; i++) {",
      "273:     for (j = 0; j < util_bits_dig(win[i]); j++) {",
      "",
      "[Added Lines]",
      "271:   for (size_t i = 0; i < l; i++) {",
      "275:     for (size_t j = 0; j < util_bits_dig(win[i]); j++) {",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "286:   RLC_THROW(ERR_CAUGHT);",
      "287:  }",
      "288:  RLC_FINALLY {",
      "290:    ep4_free(t[i]);",
      "291:   }",
      "292:   ep4_free(q);",
      "",
      "[Removed Lines]",
      "289:   for (i = 0; i < (1 << (EP_WIDTH - 1)); i++) {",
      "",
      "[Added Lines]",
      "291:   for (size_t i = 0; i < (1 << (EP_WIDTH - 1)); i++) {",
      "",
      "---------------"
    ],
    "src/epx/relic_ep4_mul_fix.c||src/epx/relic_ep4_mul_fix.c": [
      "File: src/epx/relic_ep4_mul_fix.c -> src/epx/relic_ep4_mul_fix.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "47: static void ep4_mul_pre_ordin(ep4_t *t, const ep4_t p) {",
      "50:  ep4_dbl(t[0], p);",
      "51: #if defined(EP_MIXED)",
      "52:  ep4_norm(t[0], t[0]);",
      "",
      "[Removed Lines]",
      "48:  int i;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "55: #if EP_DEPTH > 2",
      "56:  ep4_add(t[1], t[0], p);",
      "58:   ep4_add(t[i], t[i - 1], t[0]);",
      "59:  }",
      "61: #if defined(EP_MIXED)",
      "63:   ep4_norm(t[i], t[i]);",
      "64:  }",
      "65: #endif",
      "",
      "[Removed Lines]",
      "57:  for (i = 2; i < (1 << (EP_DEPTH - 2)); i++) {",
      "62:  for (i = 1; i < (1 << (EP_DEPTH - 2)); i++) {",
      "",
      "[Added Lines]",
      "55:  for (int i = 2; i < (1 << (EP_DEPTH - 2)); i++) {",
      "60:  for (int i = 1; i < (1 << (EP_DEPTH - 2)); i++) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "79: static void ep4_mul_fix_ordin(ep4_t r, const ep4_t *table, const bn_t k) {",
      "81:  int8_t naf[2 * RLC_FP_BITS + 1], *t;",
      "83:  if (bn_is_zero(k)) {",
      "84:   ep4_set_infty(r);",
      "",
      "[Removed Lines]",
      "80:  int len, i, n;",
      "",
      "[Added Lines]",
      "79:  size_t len;",
      "80:  int n;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "92:  t = naf + len - 1;",
      "93:  ep4_set_infty(r);",
      "95:   ep4_dbl(r, r);",
      "97:   n = *t;",
      "",
      "[Removed Lines]",
      "94:  for (i = len - 1; i >= 0; i--, t--) {",
      "",
      "[Added Lines]",
      "93:  for (int i = len - 1; i >= 0; i--, t--) {",
      "",
      "---------------"
    ],
    "src/epx/relic_ep4_mul_sim.c||src/epx/relic_ep4_mul_sim.c": [
      "File: src/epx/relic_ep4_mul_sim.c -> src/epx/relic_ep4_mul_sim.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "53: static void ep4_mul_sim_plain(ep4_t r, const ep4_t p, const bn_t k,",
      "54:   const ep4_t q, const bn_t m, ep4_t *t) {",
      "56:  int8_t naf0[2 * RLC_FP_BITS + 1], naf1[2 * RLC_FP_BITS + 1], *_k, *_m;",
      "57:  ep4_t t0[1 << (EP_WIDTH - 2)];",
      "58:  ep4_t t1[1 << (EP_WIDTH - 2)];",
      "60:  RLC_TRY {",
      "61:   gen = (t == NULL ? 0 : 1);",
      "",
      "[Removed Lines]",
      "55:  int i, l, l0, l1, n0, n1, w, gen;",
      "",
      "[Added Lines]",
      "55:  int i, n0, n1, w, gen;",
      "59:  size_t l, l0, l1;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "177:  ep4_t t1[1 << (EP_WIDTH / 2)];",
      "178:  ep4_t t[1 << EP_WIDTH];",
      "179:  bn_t n;",
      "181:  uint8_t w0[2 * RLC_FP_BITS], w1[2 * RLC_FP_BITS];",
      "183:  bn_null(n);",
      "",
      "[Removed Lines]",
      "180:  int l0, l1, w = EP_WIDTH / 2;",
      "",
      "[Added Lines]",
      "181:  size_t l0, l1, w = EP_WIDTH / 2;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "293: void ep4_mul_sim_joint(ep4_t r, const ep4_t p, const bn_t k, const ep4_t q,",
      "294:   const bn_t m) {",
      "295:  ep4_t t[5];",
      "297:  int8_t jsf[4 * (RLC_FP_BITS + 1)];",
      "299:  if (bn_is_zero(k) || ep4_is_infty(p)) {",
      "300:   ep4_mul(r, q, m);",
      "",
      "[Removed Lines]",
      "296:  int i, l, u_i, offset;",
      "",
      "[Added Lines]",
      "297:  int i, u_i, offset;",
      "299:  size_t l;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "396:  }",
      "397: }",
      "400:  ep4_t t;",
      "401:  int max;",
      "",
      "[Removed Lines]",
      "399: void ep4_mul_sim_dig(ep4_t r, const ep4_t p[], const dig_t k[], int len) {",
      "",
      "[Added Lines]",
      "401: void ep4_mul_sim_dig(ep4_t r, const ep4_t p[], const dig_t k[], size_t len) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "430:  }",
      "431: }",
      "436:  bn_t _k[8], q, x;",
      "437:  int8_t *naf = RLC_ALLOCA(int8_t, 8 * n * len);",
      "439:  bn_null(q);",
      "440:  bn_null(x);",
      "",
      "[Removed Lines]",
      "433: void ep4_mul_sim_lot(ep4_t r, const ep4_t p[], const bn_t k[], int n) {",
      "434:  const int len = RLC_FP_BITS + 1;",
      "435:  int i, j, m, l, *_l = RLC_ALLOCA(int, 8 * n);",
      "",
      "[Added Lines]",
      "435: void ep4_mul_sim_lot(ep4_t r, const ep4_t p[], const bn_t k[], size_t n) {",
      "436:  const size_t len = RLC_FP_BITS + 1;",
      "437:  int i, j, m;",
      "440:  size_t l, *_l = RLC_ALLOCA(size_t, 8 * n);",
      "",
      "---------------"
    ],
    "src/epx/relic_ep4_util.c||src/epx/relic_ep4_util.c": [
      "File: src/epx/relic_ep4_util.c -> src/epx/relic_ep4_util.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "254:  return size;",
      "255: }",
      "258:  if (len == 1) {",
      "259:   if (bin[0] == 0) {",
      "260:    ep4_set_infty(a);",
      "",
      "[Removed Lines]",
      "257: void ep4_read_bin(ep4_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "257: void ep4_read_bin(ep4_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "288:  }",
      "289: }",
      "292:  ep4_t t;",
      "294:  ep4_null(t);",
      "",
      "[Removed Lines]",
      "291: void ep4_write_bin(uint8_t *bin, int len, const ep4_t a, int pack) {",
      "",
      "[Added Lines]",
      "291: void ep4_write_bin(uint8_t *bin, size_t len, const ep4_t a, int pack) {",
      "",
      "---------------"
    ],
    "src/fb/relic_fb_exp.c||src/fb/relic_fb_exp.c": [
      "File: src/fb/relic_fb_exp.c -> src/fb/relic_fb_exp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "44: #if FB_EXP == BASIC || !defined(STRIP)",
      "46: void fb_exp_basic(fb_t c, const fb_t a, const bn_t b) {",
      "48:  fb_t r;",
      "50:  if (bn_is_zero(b)) {",
      "",
      "[Removed Lines]",
      "47:  int i, l;",
      "",
      "[Added Lines]",
      "47:  size_t l;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "62:   fb_copy(r, a);",
      "65:    fb_sqr(r, r);",
      "66:    if (bn_get_bit(b, i)) {",
      "67:     fb_mul(r, r, a);",
      "",
      "[Removed Lines]",
      "64:   for (i = l - 2; i >= 0; i--) {",
      "",
      "[Added Lines]",
      "64:   for (int i = l - 2; i >= 0; i--) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "89: void fb_exp_slide(fb_t c, const fb_t a, const bn_t b) {",
      "90:  fb_t t[1 << (FB_WIDTH - 1)], r;",
      "92:  uint8_t win[RLC_FB_BITS + 1];",
      "94:  fb_null(r);",
      "",
      "[Removed Lines]",
      "91:  int i, j, l;",
      "",
      "[Added Lines]",
      "92:  size_t l;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "104:   fb_null(t[i]);",
      "105:  }",
      "107:  RLC_TRY {",
      "109:    fb_new(t[i]);",
      "110:   }",
      "111:   fb_new(r);",
      "",
      "[Removed Lines]",
      "103:  for (i = 0; i < (1 << (FB_WIDTH - 1)); i++) {",
      "108:   for (i = 0; i < (1 << (FB_WIDTH - 1)); i ++) {",
      "",
      "[Added Lines]",
      "103:  for (size_t i = 0; i < (1 << (FB_WIDTH - 1)); i++) {",
      "108:   for (size_t i = 0; i < (1 << (FB_WIDTH - 1)); i ++) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "114:   fb_sqr(r, a);",
      "118:    fb_mul(t[i], t[i - 1], r);",
      "119:   }",
      "121:   fb_set_dig(r, 1);",
      "122:   l = RLC_FB_BITS + 1;",
      "123:   bn_rec_slw(win, &l, b, FB_WIDTH);",
      "125:    if (win[i] == 0) {",
      "126:     fb_sqr(r, r);",
      "127:    } else {",
      "129:      fb_sqr(r, r);",
      "130:     }",
      "131:     fb_mul(r, r, t[win[i] >> 1]);",
      "",
      "[Removed Lines]",
      "117:   for (i = 1; i < 1 << (FB_WIDTH - 1); i++) {",
      "124:   for (i = 0; i < l; i++) {",
      "128:     for (j = 0; j < util_bits_dig(win[i]); j++) {",
      "",
      "[Added Lines]",
      "117:   for (size_t i = 1; i < 1 << (FB_WIDTH - 1); i++) {",
      "124:   for (size_t i = 0; i < l; i++) {",
      "128:     for (size_t j = 0; j < util_bits_dig(win[i]); j++) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "142:   RLC_THROW(ERR_CAUGHT);",
      "143:  }",
      "144:  RLC_FINALLY {",
      "146:    fb_free(t[i]);",
      "147:   }",
      "148:   fb_free(r);",
      "",
      "[Removed Lines]",
      "145:   for (i = 0; i < (1 << (FB_WIDTH - 1)); i++) {",
      "",
      "[Added Lines]",
      "145:   for (size_t i = 0; i < (1 << (FB_WIDTH - 1)); i++) {",
      "",
      "---------------"
    ],
    "src/fb/relic_fb_util.c||src/fb/relic_fb_util.c": [
      "File: src/fb/relic_fb_util.c -> src/fb/relic_fb_util.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "49:  while (radix > 0) {",
      "50:   if (radix != 1 && radix % 2 == 1)",
      "51:    return 0;",
      "",
      "[Removed Lines]",
      "48: static int valid_radix(int radix) {",
      "",
      "[Added Lines]",
      "48: static int valid_radix(unsigned int radix) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "64:  int l = 0;",
      "66:  while (radix > 0) {",
      "",
      "[Removed Lines]",
      "63: static int log_radix(int radix) {",
      "",
      "[Added Lines]",
      "63: static int log_radix(unsigned int radix) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "93:  return !t;",
      "94: }",
      "97:  int d;",
      "99:  RLC_RIP(bit, d, bit);",
      "",
      "[Removed Lines]",
      "96: int fb_get_bit(const fb_t a, int bit) {",
      "",
      "[Added Lines]",
      "96: int fb_get_bit(const fb_t a, size_t bit) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "101:  return (a[d] >> bit) & 1;",
      "102: }",
      "105:  int d;",
      "106:  dig_t mask;",
      "",
      "[Removed Lines]",
      "104: void fb_set_bit(fb_t a, int bit, int value) {",
      "",
      "[Added Lines]",
      "104: void fb_set_bit(fb_t a, size_t bit, int value) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "116:  }",
      "117: }",
      "120:  int i = RLC_FB_DIGS - 1;",
      "122:  while (i >= 0 && a[i] == 0) {",
      "",
      "[Removed Lines]",
      "119: int fb_bits(const fb_t a) {",
      "",
      "[Added Lines]",
      "119: size_t fb_bits(const fb_t a) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "136: }",
      "138: void fb_rand(fb_t a) {",
      "141:  rand_bytes((uint8_t *)a, RLC_FB_DIGS * sizeof(dig_t));",
      "",
      "[Removed Lines]",
      "139:  int bits, digits;",
      "",
      "[Added Lines]",
      "139:  size_t bits, digits;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "148: }",
      "150: void fb_print(const fb_t a) {",
      "154:  (void)a;",
      "156:   util_print_dig(a[i], 1);",
      "157:   util_print(\" \");",
      "158:  }",
      "",
      "[Removed Lines]",
      "151:  int i;",
      "155:  for (i = RLC_FB_DIGS - 1; i > 0; i--) {",
      "",
      "[Added Lines]",
      "153:  for (int i = RLC_FB_DIGS - 1; i > 0; i--) {",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "160:  util_print(\"\\n\");",
      "161: }",
      "164:  bn_t t;",
      "167:  bn_null(t);",
      "",
      "[Removed Lines]",
      "163: int fb_size_str(const fb_t a, int radix) {",
      "165:  int digits = 0;",
      "",
      "[Added Lines]",
      "161: size_t fb_size_str(const fb_t a, unsigned int radix) {",
      "163:  size_t digits = 0;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "188:  return digits;",
      "189: }",
      "192:  bn_t t;",
      "194:  bn_null(t);",
      "",
      "[Removed Lines]",
      "191: void fb_read_str(fb_t a, const char *str, int len, int radix) {",
      "",
      "[Added Lines]",
      "189: void fb_read_str(fb_t a, const char *str, size_t len, unsigned int radix) {",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "217:  }",
      "218: }",
      "221:  fb_t t;",
      "222:  int d, l, i, j;",
      "223:  char c;",
      "",
      "[Removed Lines]",
      "220: void fb_write_str(char *str, int len, const fb_t a, int radix) {",
      "",
      "[Added Lines]",
      "218: void fb_write_str(char *str, size_t len, const fb_t a, unsigned int radix) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "276:  }",
      "277: }",
      "280:  bn_t t;",
      "282:  bn_null(t);",
      "",
      "[Removed Lines]",
      "279: void fb_read_bin(fb_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "277: void fb_read_bin(fb_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "301:  }",
      "302: }",
      "305:  bn_t t;",
      "307:  bn_null(t);",
      "",
      "[Removed Lines]",
      "304: void fb_write_bin(uint8_t *bin, int len, const fb_t a) {",
      "",
      "[Added Lines]",
      "302: void fb_write_bin(uint8_t *bin, size_t len, const fb_t a) {",
      "",
      "---------------"
    ],
    "src/fp/relic_fp_exp.c||src/fp/relic_fp_exp.c": [
      "File: src/fp/relic_fp_exp.c -> src/fp/relic_fp_exp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "39: #if FP_EXP == BASIC || !defined(STRIP)",
      "41: void fp_exp_basic(fp_t c, const fp_t a, const bn_t b) {",
      "43:  fp_t r;",
      "45:  fp_null(r);",
      "",
      "[Removed Lines]",
      "42:  int i, l;",
      "",
      "[Added Lines]",
      "42:  size_t l;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "57:   fp_copy(r, a);",
      "60:    fp_sqr(r, r);",
      "61:    if (bn_get_bit(b, i)) {",
      "62:     fp_mul(r, r, a);",
      "",
      "[Removed Lines]",
      "59:   for (i = l - 2; i >= 0; i--) {",
      "",
      "[Added Lines]",
      "59:   for (int i = l - 2; i >= 0; i--) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "84: void fp_exp_slide(fp_t c, const fp_t a, const bn_t b) {",
      "85:  fp_t t[1 << (FP_WIDTH - 1)], r;",
      "87:  uint8_t win[RLC_FP_BITS + 1];",
      "89:  fp_null(r);",
      "",
      "[Removed Lines]",
      "86:  int i, j, l;",
      "",
      "[Added Lines]",
      "87:  size_t l;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "99:   fp_null(t[i]);",
      "100:  }",
      "102:  RLC_TRY {",
      "104:    fp_new(t[i]);",
      "105:   }",
      "106:   fp_new(r);",
      "",
      "[Removed Lines]",
      "98:  for (i = 0; i < (1 << (FP_WIDTH - 1)); i++) {",
      "103:   for (i = 0; i < (1 << (FP_WIDTH - 1)); i ++) {",
      "",
      "[Added Lines]",
      "98:  for (size_t i = 0; i < (1 << (FP_WIDTH - 1)); i++) {",
      "103:   for (size_t i = 0; i < (1 << (FP_WIDTH - 1)); i ++) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "109:   fp_sqr(r, a);",
      "113:    fp_mul(t[i], t[i - 1], r);",
      "114:   }",
      "116:   fp_set_dig(r, 1);",
      "117:   l = RLC_FP_BITS + 1;",
      "118:   bn_rec_slw(win, &l, b, FP_WIDTH);",
      "120:    if (win[i] == 0) {",
      "121:     fp_sqr(r, r);",
      "122:    } else {",
      "124:      fp_sqr(r, r);",
      "125:     }",
      "126:     fp_mul(r, r, t[win[i] >> 1]);",
      "",
      "[Removed Lines]",
      "112:   for (i = 1; i < 1 << (FP_WIDTH - 1); i++) {",
      "119:   for (i = 0; i < l; i++) {",
      "123:     for (j = 0; j < util_bits_dig(win[i]); j++) {",
      "",
      "[Added Lines]",
      "112:   for (size_t i = 1; i < 1 << (FP_WIDTH - 1); i++) {",
      "119:   for (size_t i = 0; i < l; i++) {",
      "123:     for (size_t j = 0; j < util_bits_dig(win[i]); j++) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "137:   RLC_THROW(ERR_CAUGHT);",
      "138:  }",
      "139:  RLC_FINALLY {",
      "141:    fp_free(t[i]);",
      "142:   }",
      "143:   fp_free(r);",
      "",
      "[Removed Lines]",
      "140:   for (i = 0; i < (1 << (FP_WIDTH - 1)); i++) {",
      "",
      "[Added Lines]",
      "140:   for (size_t i = 0; i < (1 << (FP_WIDTH - 1)); i++) {",
      "",
      "---------------"
    ],
    "src/fp/relic_fp_prime.c||src/fp/relic_fp_prime.c": [
      "File: src/fp/relic_fp_prime.c -> src/fp/relic_fp_prime.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "296: void fp_prime_set_pairf(const bn_t x, int pairf) {",
      "297:  bn_t p, t0, t1;",
      "298:  ctx_t *ctx = core_get();",
      "300:  int8_t s[RLC_FP_BITS + 1];",
      "302:  bn_null(p);",
      "",
      "[Removed Lines]",
      "299:  int len = bn_bits(x) + 1;",
      "",
      "[Added Lines]",
      "299:  size_t len = bn_bits(x) + 1;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "459:  }",
      "460: }",
      "463:  bn_t p, t;",
      "465:  bn_null(p);",
      "",
      "[Removed Lines]",
      "462: void fp_prime_set_pmers(const int *f, int len) {",
      "",
      "[Added Lines]",
      "462: void fp_prime_set_pmers(const int *f, size_t len) {",
      "",
      "---------------"
    ],
    "src/fp/relic_fp_util.c||src/fp/relic_fp_util.c": [
      "File: src/fp/relic_fp_util.c -> src/fp/relic_fp_util.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "62:  return 0;",
      "63: }",
      "66:  int d;",
      "68:  RLC_RIP(bit, d, bit);",
      "",
      "[Removed Lines]",
      "65: int fp_get_bit(const fp_t a, int bit) {",
      "",
      "[Added Lines]",
      "65: int fp_get_bit(const fp_t a, size_t bit) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "70:  return (a[d] >> bit) & 1;",
      "71: }",
      "74:  int d;",
      "75:  dig_t mask;",
      "",
      "[Removed Lines]",
      "73: void fp_set_bit(fp_t a, int bit, int value) {",
      "",
      "[Added Lines]",
      "73: void fp_set_bit(fp_t a, size_t bit, int value) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "85:  }",
      "86: }",
      "89:  int i = RLC_FP_DIGS - 1;",
      "91:  while (i >= 0 && a[i] == 0) {",
      "",
      "[Removed Lines]",
      "88: int fp_bits(const fp_t a) {",
      "",
      "[Added Lines]",
      "88: size_t fp_bits(const fp_t a) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "157:  }",
      "158: }",
      "161:  bn_t t;",
      "164:  bn_null(t);",
      "",
      "[Removed Lines]",
      "160: int fp_size_str(const fp_t a, int radix) {",
      "162:  int digits = 0;",
      "",
      "[Added Lines]",
      "160: size_t fp_size_str(const fp_t a, unsigned int radix) {",
      "162:  size_t digits = 0;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "179:  return digits;",
      "180: }",
      "183:  bn_t t;",
      "185:  bn_null(t);",
      "",
      "[Removed Lines]",
      "182: void fp_read_str(fp_t a, const char *str, int len, int radix) {",
      "",
      "[Added Lines]",
      "182: void fp_read_str(fp_t a, const char *str, size_t len, unsigned int radix) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "208:  }",
      "209: }",
      "212:  bn_t t;",
      "214:  bn_null(t);",
      "",
      "[Removed Lines]",
      "211: void fp_write_str(char *str, int len, const fp_t a, int radix) {",
      "",
      "[Added Lines]",
      "211: void fp_write_str(char *str, size_t len, const fp_t a, unsigned int radix) {",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "227:  }",
      "228: }",
      "231:  bn_t t;",
      "233:  bn_null(t);",
      "",
      "[Removed Lines]",
      "230: void fp_read_bin(fp_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "230: void fp_read_bin(fp_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "253:     } else {",
      "254:      fp_prime_conv(a, t);",
      "255:     }",
      "257:   }",
      "258:  }",
      "259:  RLC_CATCH_ANY {",
      "",
      "[Removed Lines]",
      "256:    }",
      "",
      "[Added Lines]",
      "256:    }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "264:  }",
      "265: }",
      "268:  bn_t t;",
      "270:  bn_null(t);",
      "",
      "[Removed Lines]",
      "267: void fp_write_bin(uint8_t *bin, int len, const fp_t a) {",
      "",
      "[Added Lines]",
      "267: void fp_write_bin(uint8_t *bin, size_t len, const fp_t a) {",
      "",
      "---------------"
    ],
    "src/fpx/relic_fpx_cyc.c||src/fpx/relic_fpx_cyc.c": [
      "File: src/fpx/relic_fpx_cyc.c -> src/fpx/relic_fpx_cyc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "84: void fp2_exp_cyc(fp2_t c, const fp2_t a, const bn_t b) {",
      "85:  fp2_t r, s, t[1 << (FP_WIDTH - 2)];",
      "87:  int8_t naf[RLC_FP_BITS + 1], *k;",
      "89:  if (bn_is_zero(b)) {",
      "90:   return fp2_set_dig(c, 1);",
      "",
      "[Removed Lines]",
      "86:  int i, l;",
      "",
      "[Added Lines]",
      "87:  size_t l;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "96:  RLC_TRY {",
      "97:   fp2_new(r);",
      "98:   fp2_new(s);",
      "100:    fp2_null(t[i]);",
      "101:    fp2_new(t[i]);",
      "102:   }",
      "",
      "[Removed Lines]",
      "99:   for (i = 0; i < (1 << (FP_WIDTH - 2)); i ++) {",
      "",
      "[Added Lines]",
      "99:   for (int i = 0; i < (1 << (FP_WIDTH - 2)); i ++) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "117:   k = naf + l - 1;",
      "120:    fp2_sqr(r, r);",
      "122:    if (*k > 0) {",
      "",
      "[Removed Lines]",
      "119:   for (i = l - 1; i >= 0; i--, k--) {",
      "",
      "[Added Lines]",
      "119:   for (int i = l - 1; i >= 0; i--, k--) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "140:  RLC_FINALLY {",
      "141:   fp2_free(r);",
      "142:   fp2_free(s);",
      "144:    fp2_free(t[i]);",
      "145:   }",
      "146:  }",
      "",
      "[Removed Lines]",
      "143:   for (i = 0; i < (1 << (FP_WIDTH - 2)); i++) {",
      "",
      "[Added Lines]",
      "143:   for (int i = 0; i < (1 << (FP_WIDTH - 2)); i++) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "194: void fp8_exp_cyc(fp8_t c, const fp8_t a, const bn_t b) {",
      "195:  fp8_t r, s, t[1 << (FP_WIDTH - 2)];",
      "197:  int8_t naf[RLC_FP_BITS + 1], *k;",
      "199:  if (bn_is_zero(b)) {",
      "200:   return fp8_set_dig(c, 1);",
      "",
      "[Removed Lines]",
      "196:  int i, l;",
      "",
      "[Added Lines]",
      "197:  size_t l;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "206:  RLC_TRY {",
      "207:   fp8_new(r);",
      "208:   fp8_new(s);",
      "210:    fp8_null(t[i]);",
      "211:    fp8_new(t[i]);",
      "212:   }",
      "",
      "[Removed Lines]",
      "209:   for (i = 0; i < (1 << (FP_WIDTH - 2)); i ++) {",
      "",
      "[Added Lines]",
      "209:   for (int i = 0; i < (1 << (FP_WIDTH - 2)); i ++) {",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "227:   k = naf + l - 1;",
      "230:    fp8_sqr_cyc(r, r);",
      "232:    if (*k > 0) {",
      "",
      "[Removed Lines]",
      "229:   for (i = l - 1; i >= 0; i--, k--) {",
      "",
      "[Added Lines]",
      "229:   for (int i = l - 1; i >= 0; i--, k--) {",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "250:  RLC_FINALLY {",
      "251:   fp8_free(r);",
      "252:   fp8_free(s);",
      "254:    fp8_free(t[i]);",
      "255:   }",
      "256:  }",
      "",
      "[Removed Lines]",
      "253:   for (i = 0; i < (1 << (FP_WIDTH - 2)); i++) {",
      "",
      "[Added Lines]",
      "253:   for (int i = 0; i < (1 << (FP_WIDTH - 2)); i++) {",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "470: }",
      "472: void fp12_exp_cyc(fp12_t c, const fp12_t a, const bn_t b) {",
      "475:  if (bn_is_zero(b)) {",
      "476:   return fp12_set_dig(c, 1);",
      "477:  }",
      "479:  if ((bn_bits(b) > RLC_DIG) && ((w << 3) > bn_bits(b))) {",
      "481:   int8_t naf[4][RLC_FP_BITS + 1];",
      "482:   fp12_t t[4];",
      "483:   bn_t _b[4], n, u;",
      "",
      "[Removed Lines]",
      "473:  int i, j, k, l, w = bn_ham(b);",
      "480:   int _l[4];",
      "",
      "[Added Lines]",
      "473:  size_t j, k, l, w = bn_ham(b);",
      "480:   size_t _l[4];",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "488:   RLC_TRY {",
      "489:    bn_new(n);",
      "490:    bn_new(u);",
      "492:     bn_null(_b[i]);",
      "493:     bn_new(_b[i]);",
      "494:     fp12_null(t[i]);",
      "",
      "[Removed Lines]",
      "491:    for (i = 0; i < 4; i++) {",
      "",
      "[Added Lines]",
      "491:    for (int i = 0; i < 4; i++) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "506:     fp12_frb(t[3], t[2], 1);",
      "508:     l = 0;",
      "510:      if (bn_sign(_b[i]) == RLC_NEG) {",
      "511:       fp12_inv_cyc(t[i], t[i]);",
      "512:      }",
      "",
      "[Removed Lines]",
      "509:     for (i = 0; i < 4; i++) {",
      "",
      "[Added Lines]",
      "509:     for (int i = 0; i < 4; i++) {",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "516:     }",
      "518:     fp12_set_dig(c, 1);",
      "520:      fp12_sqr_cyc(c, c);",
      "522:       if (naf[j][i] > 0) {",
      "523:        fp12_mul(c, c, t[j]);",
      "524:       }",
      "",
      "[Removed Lines]",
      "519:     for (i = l - 1; i >= 0; i--) {",
      "521:      for (j = 0; j < 4; j++) {",
      "",
      "[Added Lines]",
      "519:     for (int i = l - 1; i >= 0; i--) {",
      "521:      for (int j = 0; j < 4; j++) {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "532:    } else {",
      "533:     fp12_copy(t[0], a);",
      "536:      fp12_sqr_cyc(t[0], t[0]);",
      "537:      if (bn_get_bit(b, i)) {",
      "538:       fp12_mul(t[0], t[0], a);",
      "",
      "[Removed Lines]",
      "535:     for (i = bn_bits(b) - 2; i >= 0; i--) {",
      "",
      "[Added Lines]",
      "535:     for (int i = bn_bits(b) - 2; i >= 0; i--) {",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "551:   RLC_FINALLY {",
      "552:    bn_free(n);",
      "553:    bn_free(u);",
      "555:     bn_free(_b[i]);",
      "556:     fp12_free(t[i]);",
      "557:    }",
      "",
      "[Removed Lines]",
      "554:    for (i = 0; i < 4; i++) {",
      "",
      "[Added Lines]",
      "554:    for (int i = 0; i < 4; i++) {",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "565:    if (u == NULL) {",
      "566:     RLC_THROW(ERR_NO_MEMORY);",
      "567:    }",
      "569:     fp12_null(u[i]);",
      "570:     fp12_new(u[i]);",
      "571:    }",
      "",
      "[Removed Lines]",
      "568:    for (i = 0; i < w; i++) {",
      "",
      "[Added Lines]",
      "568:    for (int i = 0; i < w; i++) {",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "574:    j = 0;",
      "575:    fp12_copy(t, a);",
      "577:     fp12_sqr_pck(t, t);",
      "578:     if (bn_get_bit(b, i)) {",
      "579:      fp12_copy(u[j++], t);",
      "",
      "[Removed Lines]",
      "576:    for (i = 1; i < bn_bits(b); i++) {",
      "",
      "[Added Lines]",
      "576:    for (size_t i = 1; i < bn_bits(b); i++) {",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "596:     fp12_copy(c, u[0]);",
      "597:    }",
      "600:     fp12_mul(c, c, u[i]);",
      "601:    }",
      "",
      "[Removed Lines]",
      "599:    for (i = j; i < k; i++) {",
      "",
      "[Added Lines]",
      "599:    for (size_t i = j; i < k; i++) {",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "608:    RLC_THROW(ERR_CAUGHT);",
      "609:   }",
      "610:   RLC_FINALLY {",
      "612:     fp12_free(u[i]);",
      "613:    }",
      "614:    fp12_free(t);",
      "",
      "[Removed Lines]",
      "611:    for (i = 0; i < w; i++) {",
      "",
      "[Added Lines]",
      "611:    for (size_t i = 0; i < w; i++) {",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "618: }",
      "620: void fp2_exp_cyc_sim(fp2_t e, const fp2_t a, const bn_t b, const fp2_t c, const bn_t d) {",
      "622:  int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], *_k, *_m;",
      "623:  fp2_t r, t0[1 << (EP_WIDTH - 2)];",
      "624:  fp2_t s, t1[1 << (EP_WIDTH - 2)];",
      "626:  if (bn_is_zero(b)) {",
      "627:   return fp2_exp_cyc(e, c, d);",
      "",
      "[Removed Lines]",
      "621:  int i, l, n0, n1, l0, l1;",
      "",
      "[Added Lines]",
      "621:  int n0, n1;",
      "625:  size_t l, l0, l1;",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "637:  RLC_TRY {",
      "638:   fp2_new(r);",
      "639:   fp2_new(s);",
      "641:    fp2_null(t0[i]);",
      "642:    fp2_null(t1[i]);",
      "643:    fp2_new(t0[i]);",
      "",
      "[Removed Lines]",
      "640:   for (i = 0; i < (1 << (FP_WIDTH - 2)); i ++) {",
      "",
      "[Added Lines]",
      "641:   for (int i = 0; i < (1 << (FP_WIDTH - 2)); i ++) {",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "667:   l = RLC_MAX(l0, l1);",
      "668:   if (bn_sign(b) == RLC_NEG) {",
      "670:     naf0[i] = -naf0[i];",
      "671:    }",
      "672:   }",
      "673:   if (bn_sign(d) == RLC_NEG) {",
      "675:     naf1[i] = -naf1[i];",
      "676:    }",
      "677:   }",
      "",
      "[Removed Lines]",
      "669:    for (i = 0; i < l0; i++) {",
      "674:    for (i = 0; i < l1; i++) {",
      "",
      "[Added Lines]",
      "670:    for (size_t i = 0; i < l0; i++) {",
      "675:    for (size_t i = 0; i < l1; i++) {",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "680:   _m = naf1 + l - 1;",
      "682:   fp2_set_dig(r, 1);",
      "684:    fp2_sqr(r, r);",
      "686:    n0 = *_k;",
      "",
      "[Removed Lines]",
      "683:   for (i = l - 1; i >= 0; i--, _k--, _m--) {",
      "",
      "[Added Lines]",
      "684:   for (int i = l - 1; i >= 0; i--, _k--, _m--) {",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "710:  RLC_FINALLY {",
      "711:   fp2_free(r);",
      "712:   fp2_free(s);",
      "714:    fp2_free(t0[i]);",
      "715:    fp2_free(t1[i]);",
      "716:   }",
      "",
      "[Removed Lines]",
      "713:   for (i = 0; i < (1 << (FP_WIDTH - 2)); i++) {",
      "",
      "[Added Lines]",
      "714:   for (int i = 0; i < (1 << (FP_WIDTH - 2)); i++) {",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "820:  }",
      "821: }",
      "825:     fp12_t t, *u = RLC_ALLOCA(fp12_t, w);",
      "827:  if (len == 0) {",
      "",
      "[Removed Lines]",
      "823: void fp12_exp_cyc_sps(fp12_t c, const fp12_t a, const int *b, int len, int sign) {",
      "824:  int i, j, k, w = len;",
      "",
      "[Added Lines]",
      "824: void fp12_exp_cyc_sps(fp12_t c, const fp12_t a, const int *b, size_t len,",
      "825:   int sign) {",
      "826:  size_t i, j, k, w = len;",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "1097: }",
      "1099: void fp24_exp_cyc(fp24_t c, const fp24_t a, const bn_t b) {",
      "1102:  if (bn_is_zero(b)) {",
      "1103:   fp24_set_dig(c, 1);",
      "",
      "[Removed Lines]",
      "1100:  int i, j, k, w = bn_ham(b);",
      "",
      "[Added Lines]",
      "1102:  size_t j, k, w = bn_ham(b);",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "1105:  }",
      "1107:  if ((bn_bits(b) > RLC_DIG) && ((w << 3) > bn_bits(b))) {",
      "1109:   int8_t naf[8][RLC_FP_BITS + 1];",
      "1110:   fp24_t t[8];",
      "1111:   bn_t _b[8], n, x;",
      "",
      "[Removed Lines]",
      "1108:   int l, _l[8];",
      "",
      "[Added Lines]",
      "1110:   size_t l, _l[8];",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "1116:   RLC_TRY {",
      "1117:    bn_new(n);",
      "1118:    bn_new(x);",
      "1120:     bn_null(_b[i]);",
      "1121:     bn_new(_b[i]);",
      "1122:     fp24_null(t[i]);",
      "",
      "[Removed Lines]",
      "1119:    for (i = 0; i < 8; i++) {",
      "",
      "[Added Lines]",
      "1121:    for (int i = 0; i < 8; i++) {",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "1131:     l = 0;",
      "1133:     fp24_copy(t[0], a);",
      "1135:      _l[i] = RLC_FP_BITS + 1;",
      "1136:      bn_rec_naf(naf[i], &_l[i], _b[i], 2);",
      "1137:      l = RLC_MAX(l, _l[i]);",
      "",
      "[Removed Lines]",
      "1134:     for (i = 0; i < 8; i++) {",
      "",
      "[Added Lines]",
      "1136:     for (int i = 0; i < 8; i++) {",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "1140:      }",
      "1141:     }",
      "1144:      if (bn_sign(_b[i]) == RLC_NEG) {",
      "1145:       fp24_inv_cyc(t[i], t[i]);",
      "1146:      }",
      "1147:     }",
      "1149:     fp24_set_dig(c, 1);",
      "1151:      fp24_sqr_cyc(c, c);",
      "1153:       if (naf[j][i] > 0) {",
      "1154:        fp24_mul(c, c, t[j]);",
      "1155:       }",
      "",
      "[Removed Lines]",
      "1143:     for (i = 0; i < 8; i++) {",
      "1150:     for (i = l - 1; i >= 0; i--) {",
      "1152:      for (j = 0; j < 8; j++) {",
      "",
      "[Added Lines]",
      "1145:     for (int i = 0; i < 8; i++) {",
      "1152:     for (int i = l - 1; i >= 0; i--) {",
      "1154:      for (int j = 0; j < 8; j++) {",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "1163:    } else {",
      "1164:     fp24_copy(t[0], a);",
      "1167:      fp24_sqr_cyc(t[0], t[0]);",
      "1168:      if (bn_get_bit(b, i)) {",
      "1169:       fp24_mul(t[0], t[0], a);",
      "",
      "[Removed Lines]",
      "1166:     for (i = bn_bits(b) - 2; i >= 0; i--) {",
      "",
      "[Added Lines]",
      "1168:     for (int i = bn_bits(b) - 2; i >= 0; i--) {",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "1182:   RLC_FINALLY {",
      "1183:    bn_free(n);",
      "1184:    bn_free(x);",
      "1186:     bn_free(_b[i]);",
      "1187:     fp24_free(t[i]);",
      "1188:    }",
      "",
      "[Removed Lines]",
      "1185:    for (i = 0; i < 8; i++) {",
      "",
      "[Added Lines]",
      "1187:    for (int i = 0; i < 8; i++) {",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "1196:    if (u == NULL) {",
      "1197:     RLC_THROW(ERR_NO_MEMORY);",
      "1198:    }",
      "1200:     fp24_null(u[i]);",
      "1201:     fp24_new(u[i]);",
      "1202:    }",
      "",
      "[Removed Lines]",
      "1199:    for (i = 0; i < w; i++) {",
      "",
      "[Added Lines]",
      "1201:    for (size_t i = 0; i < w; i++) {",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "1205:    j = 0;",
      "1206:    fp24_copy(t, a);",
      "1208:     fp24_sqr_pck(t, t);",
      "1209:     if (bn_get_bit(b, i)) {",
      "1210:      fp24_copy(u[j++], t);",
      "",
      "[Removed Lines]",
      "1207:    for (i = 1; i < bn_bits(b); i++) {",
      "",
      "[Added Lines]",
      "1209:    for (size_t i = 1; i < bn_bits(b); i++) {",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "1227:     fp24_copy(c, u[0]);",
      "1228:    }",
      "1231:     fp24_mul(c, c, u[i]);",
      "1232:    }",
      "",
      "[Removed Lines]",
      "1230:    for (i = j; i < k; i++) {",
      "",
      "[Added Lines]",
      "1232:    for (size_t i = j; i < k; i++) {",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "1239:    RLC_THROW(ERR_CAUGHT);",
      "1240:   }",
      "1241:   RLC_FINALLY {",
      "1243:     fp24_free(u[i]);",
      "1244:    }",
      "1245:    fp24_free(t);",
      "",
      "[Removed Lines]",
      "1242:    for (i = 0; i < w; i++) {",
      "",
      "[Added Lines]",
      "1244:    for (size_t i = 0; i < w; i++) {",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "1249: }",
      "1251: void fp24_exp_cyc_sim(fp24_t e, const fp24_t a, const bn_t b, const fp24_t c, const bn_t d) {",
      "1253:  int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], *_k, *_m;",
      "1254:  fp24_t r, t0[1 << (EP_WIDTH - 2)];",
      "1255:  fp24_t s, t1[1 << (EP_WIDTH - 2)];",
      "1257:  if (bn_is_zero(b)) {",
      "1258:   return fp24_exp_cyc(e, c, d);",
      "",
      "[Removed Lines]",
      "1252:  int i, l, n0, n1, l0, l1;",
      "",
      "[Added Lines]",
      "1254:  int n0, n1;",
      "1258:  size_t l, l0, l1;",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "1268:  RLC_TRY {",
      "1269:   fp24_new(r);",
      "1270:   fp24_new(s);",
      "1272:    fp24_null(t0[i]);",
      "1273:    fp24_null(t1[i]);",
      "1274:    fp24_new(t0[i]);",
      "",
      "[Removed Lines]",
      "1271:   for (i = 0; i < (1 << (FP_WIDTH - 2)); i ++) {",
      "",
      "[Added Lines]",
      "1274:   for (int i = 0; i < (1 << (FP_WIDTH - 2)); i ++) {",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "1298:   l = RLC_MAX(l0, l1);",
      "1299:   if (bn_sign(b) == RLC_NEG) {",
      "1301:     naf0[i] = -naf0[i];",
      "1302:    }",
      "1303:   }",
      "1304:   if (bn_sign(d) == RLC_NEG) {",
      "1306:     naf1[i] = -naf1[i];",
      "1307:    }",
      "1308:   }",
      "",
      "[Removed Lines]",
      "1300:    for (i = 0; i < l0; i++) {",
      "1305:    for (i = 0; i < l1; i++) {",
      "",
      "[Added Lines]",
      "1303:    for (size_t i = 0; i < l0; i++) {",
      "1308:    for (size_t i = 0; i < l1; i++) {",
      "",
      "---------------",
      "--- Hunk 39 ---",
      "[Context before]",
      "1311:   _m = naf1 + l - 1;",
      "1313:   fp24_set_dig(r, 1);",
      "1315:    fp24_sqr(r, r);",
      "1317:    n0 = *_k;",
      "",
      "[Removed Lines]",
      "1314:   for (i = l - 1; i >= 0; i--, _k--, _m--) {",
      "",
      "[Added Lines]",
      "1317:   for (int i = l - 1; i >= 0; i--, _k--, _m--) {",
      "",
      "---------------",
      "--- Hunk 40 ---",
      "[Context before]",
      "1341:  RLC_FINALLY {",
      "1342:   fp24_free(r);",
      "1343:   fp24_free(s);",
      "1345:    fp24_free(t0[i]);",
      "1346:    fp24_free(t1[i]);",
      "1347:   }",
      "1348:  }",
      "1349: }",
      "1353:     fp24_t t, *u = RLC_ALLOCA(fp24_t, w);",
      "1355:  if (len == 0) {",
      "",
      "[Removed Lines]",
      "1344:   for (i = 0; i < (1 << (FP_WIDTH - 2)); i++) {",
      "1351: void fp24_exp_cyc_sps(fp24_t c, const fp24_t a, const int *b, int len, int sign) {",
      "1352:  int i, j, k, w = len;",
      "",
      "[Added Lines]",
      "1347:   for (int i = 0; i < (1 << (FP_WIDTH - 2)); i++) {",
      "1354: void fp24_exp_cyc_sps(fp24_t c, const fp24_t a, const int *b, size_t len,",
      "1355:   int sign) {",
      "1356:  size_t i, j, k, w = len;",
      "",
      "---------------",
      "--- Hunk 41 ---",
      "[Context before]",
      "1719:  }",
      "1720: }",
      "1724:     fp48_t t, *u = RLC_ALLOCA(fp48_t, w);",
      "1726:  if (len == 0) {",
      "",
      "[Removed Lines]",
      "1722: void fp48_exp_cyc_sps(fp48_t c, const fp48_t a, const int *b, int len, int sign) {",
      "1723:  int i, j, k, w = len;",
      "",
      "[Added Lines]",
      "1726: void fp48_exp_cyc_sps(fp48_t c, const fp48_t a, const int *b, size_t len,",
      "1727:   int sign) {",
      "1728:  size_t i, j, k, w = len;",
      "",
      "---------------",
      "--- Hunk 42 ---",
      "[Context before]",
      "2090:  }",
      "2091: }",
      "2095:     fp54_t t, *u = RLC_ALLOCA(fp54_t, w);",
      "2097:  if (len == 0) {",
      "",
      "[Removed Lines]",
      "2093: void fp54_exp_cyc_sps(fp54_t c, const fp54_t a, const int *b, int len, int sign) {",
      "2094:  int i, j, k, w = len;",
      "",
      "[Added Lines]",
      "2098: void fp54_exp_cyc_sps(fp54_t c, const fp54_t a, const int *b, size_t len,",
      "2099:   int sign) {",
      "2100:  size_t i, j, k, w = len;",
      "",
      "---------------"
    ],
    "src/fpx/relic_fpx_exp.c||src/fpx/relic_fpx_exp.c": [
      "File: src/fpx/relic_fpx_exp.c -> src/fpx/relic_fpx_exp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "329:  bn_t _b;",
      "330:  fp12_t t, v;",
      "331:  int8_t u, naf[RLC_DIG + 1];",
      "334:  if (b == 0) {",
      "335:   fp12_set_dig(c, 1);",
      "",
      "[Removed Lines]",
      "332:  int l;",
      "",
      "[Added Lines]",
      "332:  size_t l;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "461:  bn_t _b;",
      "462:  fp24_t t, v;",
      "463:  int8_t u, naf[RLC_DIG + 1];",
      "466:  if (b == 0) {",
      "467:   fp24_set_dig(c, 1);",
      "",
      "[Removed Lines]",
      "464:  int l;",
      "",
      "[Added Lines]",
      "464:  size_t l;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "561:  bn_t _b;",
      "562:  fp48_t t, v;",
      "563:  int8_t u, naf[RLC_DIG + 1];",
      "566:  if (b == 0) {",
      "567:   fp48_set_dig(c, 1);",
      "",
      "[Removed Lines]",
      "564:  int l;",
      "",
      "[Added Lines]",
      "564:  size_t l;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "657:  bn_t _b;",
      "658:  fp54_t t, v;",
      "659:  int8_t u, naf[RLC_DIG + 1];",
      "662:  if (b == 0) {",
      "663:   fp54_set_dig(c, 1);",
      "",
      "[Removed Lines]",
      "660:  int l;",
      "",
      "[Added Lines]",
      "660:  size_t l;",
      "",
      "---------------"
    ],
    "src/fpx/relic_fpx_util.c||src/fpx/relic_fpx_util.c": [
      "File: src/fpx/relic_fpx_util.c -> src/fpx/relic_fpx_util.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "72:  }",
      "73: }",
      "76:  if (len != RLC_FP_BYTES + 1 && len != 2 * RLC_FP_BYTES) {",
      "77:   RLC_THROW(ERR_NO_BUFFER);",
      "78:   return;",
      "",
      "[Removed Lines]",
      "75: void fp2_read_bin(fp2_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "75: void fp2_read_bin(fp2_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "89:  }",
      "90: }",
      "93:  fp2_t t;",
      "95:  fp2_null(t);",
      "",
      "[Removed Lines]",
      "92: void fp2_write_bin(uint8_t *bin, int len, const fp2_t a, int pack) {",
      "",
      "[Added Lines]",
      "92: void fp2_write_bin(uint8_t *bin, size_t len, const fp2_t a, int pack) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "160:  return 3 * RLC_FP_BYTES;",
      "161: }",
      "164:  if (len != 3 * RLC_FP_BYTES) {",
      "165:   RLC_THROW(ERR_NO_BUFFER);",
      "166:   return;",
      "",
      "[Removed Lines]",
      "163: void fp3_read_bin(fp3_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "163: void fp3_read_bin(fp3_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "170:  fp_read_bin(a[2], bin + 2 * RLC_FP_BYTES, RLC_FP_BYTES);",
      "171: }",
      "174:  if (len != 3 * RLC_FP_BYTES) {",
      "175:   RLC_THROW(ERR_NO_BUFFER);",
      "176:   return;",
      "",
      "[Removed Lines]",
      "173: void fp3_write_bin(uint8_t *bin, int len, const fp3_t a) {",
      "",
      "[Added Lines]",
      "173: void fp3_write_bin(uint8_t *bin, size_t len, const fp3_t a) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "214:  return 4 * RLC_FP_BYTES;",
      "215: }",
      "218:  if (len != 4 * RLC_FP_BYTES) {",
      "219:   RLC_THROW(ERR_NO_BUFFER);",
      "220:   return;",
      "",
      "[Removed Lines]",
      "217: void fp4_read_bin(fp4_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "217: void fp4_read_bin(fp4_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "223:  fp2_read_bin(a[1], bin + 2 * RLC_FP_BYTES, 2 * RLC_FP_BYTES);",
      "224: }",
      "227:  if (len != 4 * RLC_FP_BYTES) {",
      "228:   RLC_THROW(ERR_NO_BUFFER);",
      "229:   return;",
      "",
      "[Removed Lines]",
      "226: void fp4_write_bin(uint8_t *bin, int len, const fp4_t a) {",
      "",
      "[Added Lines]",
      "226: void fp4_write_bin(uint8_t *bin, size_t len, const fp4_t a) {",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "269:  return 6 * RLC_FP_BYTES;",
      "270: }",
      "273:  if (len != 6 * RLC_FP_BYTES) {",
      "274:   RLC_THROW(ERR_NO_BUFFER);",
      "275:   return;",
      "",
      "[Removed Lines]",
      "272: void fp6_read_bin(fp6_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "272: void fp6_read_bin(fp6_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "279:  fp2_read_bin(a[2], bin + 4 * RLC_FP_BYTES, 2 * RLC_FP_BYTES);",
      "280: }",
      "283:  if (len != 6 * RLC_FP_BYTES) {",
      "284:   RLC_THROW(ERR_NO_BUFFER);",
      "285:   return;",
      "",
      "[Removed Lines]",
      "282: void fp6_write_bin(uint8_t *bin, int len, const fp6_t a) {",
      "",
      "[Added Lines]",
      "282: void fp6_write_bin(uint8_t *bin, size_t len, const fp6_t a) {",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "331:  }",
      "332: }",
      "335:  if (len != 8 * RLC_FP_BYTES) {",
      "336:   RLC_THROW(ERR_NO_BUFFER);",
      "337:   return;",
      "",
      "[Removed Lines]",
      "334: void fp8_read_bin(fp8_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "334: void fp8_read_bin(fp8_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "340:  fp4_read_bin(a[1], bin + 4 * RLC_FP_BYTES, 4 * RLC_FP_BYTES);",
      "341: }",
      "344:  if (len != 8 * RLC_FP_BYTES) {",
      "345:   RLC_THROW(ERR_NO_BUFFER);",
      "346:   return;",
      "",
      "[Removed Lines]",
      "343: void fp8_write_bin(uint8_t *bin, int len, const fp8_t a) {",
      "",
      "[Added Lines]",
      "343: void fp8_write_bin(uint8_t *bin, size_t len, const fp8_t a) {",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "386:  return 9 * RLC_FP_BYTES;",
      "387: }",
      "390:  if (len != 9 * RLC_FP_BYTES) {",
      "391:   RLC_THROW(ERR_NO_BUFFER);",
      "392:   return;",
      "",
      "[Removed Lines]",
      "389: void fp9_read_bin(fp9_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "389: void fp9_read_bin(fp9_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "396:  fp3_read_bin(a[2], bin + 6 * RLC_FP_BYTES, 3 * RLC_FP_BYTES);",
      "397: }",
      "400:  if (len != 9 * RLC_FP_BYTES) {",
      "401:   RLC_THROW(ERR_NO_BUFFER);",
      "402:   return;",
      "",
      "[Removed Lines]",
      "399: void fp9_write_bin(uint8_t *bin, int len, const fp9_t a) {",
      "",
      "[Added Lines]",
      "399: void fp9_write_bin(uint8_t *bin, size_t len, const fp9_t a) {",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "448:  }",
      "449: }",
      "452:  if (len != 8 * RLC_FP_BYTES && len != 12 * RLC_FP_BYTES) {",
      "453:   RLC_THROW(ERR_NO_BUFFER);",
      "454:   return;",
      "",
      "[Removed Lines]",
      "451: void fp12_read_bin(fp12_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "451: void fp12_read_bin(fp12_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "468:  }",
      "469: }",
      "472:  fp12_t t;",
      "474:  fp12_null(t);",
      "",
      "[Removed Lines]",
      "471: void fp12_write_bin(uint8_t *bin, int len, const fp12_t a, int pack) {",
      "",
      "[Added Lines]",
      "471: void fp12_write_bin(uint8_t *bin, size_t len, const fp12_t a, int pack) {",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "532:  return 18 * RLC_FP_BYTES;",
      "533: }",
      "536:  if (len != 18 * RLC_FP_BYTES) {",
      "537:   RLC_THROW(ERR_NO_BUFFER);",
      "538:   return;",
      "",
      "[Removed Lines]",
      "535: void fp18_read_bin(fp18_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "535: void fp18_read_bin(fp18_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "541:  fp9_read_bin(a[1], bin + 9 * RLC_FP_BYTES, 9 * RLC_FP_BYTES);",
      "542: }",
      "545:  if (len != 18 * RLC_FP_BYTES) {",
      "546:   RLC_THROW(ERR_NO_BUFFER);",
      "547:   return;",
      "",
      "[Removed Lines]",
      "544: void fp18_write_bin(uint8_t *bin, int len, const fp18_t a) {",
      "",
      "[Added Lines]",
      "544: void fp18_write_bin(uint8_t *bin, size_t len, const fp18_t a) {",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "595:  }",
      "596: }",
      "599:  if (len != 16 * RLC_FP_BYTES && len != 24 * RLC_FP_BYTES) {",
      "600:   RLC_THROW(ERR_NO_BUFFER);",
      "601:   return;",
      "",
      "[Removed Lines]",
      "598: void fp24_read_bin(fp24_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "598: void fp24_read_bin(fp24_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "616:  }",
      "617: }",
      "620:  fp24_t t;",
      "622:  fp24_null(t);",
      "",
      "[Removed Lines]",
      "619: void fp24_write_bin(uint8_t *bin, int len, const fp24_t a, int pack) {",
      "",
      "[Added Lines]",
      "619: void fp24_write_bin(uint8_t *bin, size_t len, const fp24_t a, int pack) {",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "690:  }",
      "691: }",
      "694:  if (len != 32 * RLC_FP_BYTES && len != 48 * RLC_FP_BYTES) {",
      "695:   RLC_THROW(ERR_NO_BUFFER);",
      "696:   return;",
      "",
      "[Removed Lines]",
      "693: void fp48_read_bin(fp48_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "693: void fp48_read_bin(fp48_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "710:  }",
      "711: }",
      "714:  fp48_t t;",
      "716:  fp48_null(t);",
      "",
      "[Removed Lines]",
      "713: void fp48_write_bin(uint8_t *bin, int len, const fp48_t a, int pack) {",
      "",
      "[Added Lines]",
      "713: void fp48_write_bin(uint8_t *bin, size_t len, const fp48_t a, int pack) {",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "786:  }",
      "787: }",
      "790:  if (len != 36 * RLC_FP_BYTES && len != 54 * RLC_FP_BYTES) {",
      "791:   RLC_THROW(ERR_NO_BUFFER);",
      "792:   return;",
      "",
      "[Removed Lines]",
      "789: void fp54_read_bin(fp54_t a, const uint8_t *bin, int len) {",
      "",
      "[Added Lines]",
      "789: void fp54_read_bin(fp54_t a, const uint8_t *bin, size_t len) {",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "807:  }",
      "808: }",
      "811:  fp54_t t;",
      "813:  fp54_null(t);",
      "",
      "[Removed Lines]",
      "810: void fp54_write_bin(uint8_t *bin, int len, const fp54_t a, int pack) {",
      "",
      "[Added Lines]",
      "810: void fp54_write_bin(uint8_t *bin, size_t len, const fp54_t a, int pack) {",
      "",
      "---------------"
    ],
    "src/md/relic_md_blake2s.c||src/md/relic_md_blake2s.c": [
      "File: src/md/relic_md_blake2s.c -> src/md/relic_md_blake2s.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "44: #if MD_MAP == B2S160 || !defined(STRIP)",
      "47:  memset(hash, 0, RLC_MD_LEN_B2S160);",
      "48:  blake2s(hash, RLC_MD_LEN_B2S160, msg, len, NULL, 0);",
      "49: }",
      "",
      "[Removed Lines]",
      "46: void md_map_b2s160(uint8_t *hash, const uint8_t *msg, int len) {",
      "",
      "[Added Lines]",
      "46: void md_map_b2s160(uint8_t *hash, const uint8_t *msg, size_t len) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "53: #if MD_MAP == B2S256 || !defined(STRIP)",
      "56:  memset(hash, 0, RLC_MD_LEN_B2S256);",
      "57:  blake2s(hash, RLC_MD_LEN_B2S256, msg, len, NULL, 0);",
      "58: }",
      "",
      "[Removed Lines]",
      "55: void md_map_b2s256(uint8_t *hash, const uint8_t *msg, int len) {",
      "",
      "[Added Lines]",
      "55: void md_map_b2s256(uint8_t *hash, const uint8_t *msg, size_t len) {",
      "",
      "---------------"
    ],
    "src/md/relic_md_hmac.c||src/md/relic_md_hmac.c": [
      "File: src/md/relic_md_hmac.c -> src/md/relic_md_hmac.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "45: #if MD_MAP == SH224 || MD_MAP == SH256 || MD_MAP == B2S160 || MD_MAP == B2S256",
      "46:   #define block_size 64",
      "47: #elif MD_MAP == SH384 || MD_MAP == SH512",
      "",
      "[Removed Lines]",
      "43: void md_hmac(uint8_t *mac, const uint8_t *in, int in_len, const uint8_t *key,",
      "44:     int key_len) {",
      "",
      "[Added Lines]",
      "43: void md_hmac(uint8_t *mac, const uint8_t *in, size_t in_len, const uint8_t *key,",
      "44:     size_t key_len) {",
      "",
      "---------------"
    ],
    "src/md/relic_md_kdf.c||src/md/relic_md_kdf.c": [
      "File: src/md/relic_md_kdf.c -> src/md/relic_md_kdf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "45:  uint32_t i, j, d;",
      "46:  uint8_t* buffer = RLC_ALLOCA(uint8_t, in_len + sizeof(uint32_t));",
      "47:  uint8_t* t = RLC_ALLOCA(uint8_t, key_len + RLC_MD_LEN);",
      "",
      "[Removed Lines]",
      "43: void md_kdf(uint8_t *key, int key_len, const uint8_t *in,",
      "44:   int in_len) {",
      "",
      "[Added Lines]",
      "43: void md_kdf(uint8_t *key, size_t key_len, const uint8_t *in, size_t in_len) {",
      "",
      "---------------"
    ],
    "src/md/relic_md_mgf.c||src/md/relic_md_mgf.c": [
      "File: src/md/relic_md_mgf.c -> src/md/relic_md_mgf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "45:  uint32_t i, j, d;",
      "46:  uint8_t *buffer = RLC_ALLOCA(uint8_t, in_len + sizeof(uint32_t));",
      "47:  uint8_t *t = RLC_ALLOCA(uint8_t, key_len + RLC_MD_LEN);",
      "",
      "[Removed Lines]",
      "43: void md_mgf(uint8_t *key, int key_len, const uint8_t *in,",
      "44:   int in_len) {",
      "",
      "[Added Lines]",
      "43: void md_mgf(uint8_t *key, size_t key_len, const uint8_t *in, size_t in_len) {",
      "",
      "---------------"
    ],
    "src/md/relic_md_sha224.c||src/md/relic_md_sha224.c": [
      "File: src/md/relic_md_sha224.c -> src/md/relic_md_sha224.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "41: #if MD_MAP == SH224 || !defined(STRIP)",
      "44:  SHA224Context ctx;",
      "46:  if (SHA224Reset(&ctx) != shaSuccess) {",
      "",
      "[Removed Lines]",
      "43: void md_map_sh224(uint8_t *hash, const uint8_t *msg, int len) {",
      "",
      "[Added Lines]",
      "43: void md_map_sh224(uint8_t *hash, const uint8_t *msg, size_t len) {",
      "",
      "---------------"
    ],
    "src/md/relic_md_sha256.c||src/md/relic_md_sha256.c": [
      "File: src/md/relic_md_sha256.c -> src/md/relic_md_sha256.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "41: #if MD_MAP == SH256 || !defined(STRIP)",
      "44:  SHA256Context ctx;",
      "46:  if (SHA256Reset(&ctx) != shaSuccess) {",
      "",
      "[Removed Lines]",
      "43: void md_map_sh256(uint8_t *hash, const uint8_t *msg, int len) {",
      "",
      "[Added Lines]",
      "43: void md_map_sh256(uint8_t *hash, const uint8_t *msg, size_t len) {",
      "",
      "---------------"
    ],
    "src/md/relic_md_sha384.c||src/md/relic_md_sha384.c": [
      "File: src/md/relic_md_sha384.c -> src/md/relic_md_sha384.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "41: #if MD_MAP == SH384 || !defined(STRIP)",
      "44:  SHA384Context ctx;",
      "46:  if (SHA384Reset(&ctx) != shaSuccess) {",
      "",
      "[Removed Lines]",
      "43: void md_map_sh384(uint8_t *hash, const uint8_t *msg, int len) {",
      "",
      "[Added Lines]",
      "43: void md_map_sh384(uint8_t *hash, const uint8_t *msg, size_t len) {",
      "",
      "---------------"
    ],
    "src/md/relic_md_sha512.c||src/md/relic_md_sha512.c": [
      "File: src/md/relic_md_sha512.c -> src/md/relic_md_sha512.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "41: #if MD_MAP == SH512 || !defined(STRIP)",
      "44:  SHA512Context ctx;",
      "46:  if (SHA512Reset(&ctx) != shaSuccess) {",
      "",
      "[Removed Lines]",
      "43: void md_map_sh512(uint8_t *hash, const uint8_t *msg, int len) {",
      "",
      "[Added Lines]",
      "43: void md_map_sh512(uint8_t *hash, const uint8_t *msg, size_t len) {",
      "",
      "---------------"
    ],
    "src/pp/relic_pp_map_k12.c||src/pp/relic_pp_map_k12.c": [
      "File: src/pp/relic_pp_map_k12.c -> src/pp/relic_pp_map_k12.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "52:  fp12_t l;",
      "53:  ep_t *_p = RLC_ALLOCA(ep_t, m);",
      "54:  ep2_t *_q = RLC_ALLOCA(ep2_t, m);",
      "56:  int8_t s[RLC_FP_BITS + 1];",
      "58:  if (m == 0) {",
      "",
      "[Removed Lines]",
      "55:  int i, j, len = bn_bits(a) + 1;",
      "",
      "[Added Lines]",
      "55:  size_t len = bn_bits(a) + 1;",
      "56:  int i, j;",
      "",
      "---------------"
    ],
    "src/pp/relic_pp_map_k24.c||src/pp/relic_pp_map_k24.c": [
      "File: src/pp/relic_pp_map_k24.c -> src/pp/relic_pp_map_k24.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "52:  fp24_t l;",
      "53:  ep_t *_p = RLC_ALLOCA(ep_t, m);",
      "54:  ep4_t *_q = RLC_ALLOCA(ep4_t, m);",
      "56:  int8_t s[RLC_FP_BITS + 1];",
      "58:  if (m == 0) {",
      "",
      "[Removed Lines]",
      "55:  int i, j, len = bn_bits(a) + 1;",
      "",
      "[Added Lines]",
      "55:  size_t len = bn_bits(a) + 1;",
      "56:  int i, j;",
      "",
      "---------------"
    ],
    "src/pp/relic_pp_map_k48.c||src/pp/relic_pp_map_k48.c": [
      "File: src/pp/relic_pp_map_k48.c -> src/pp/relic_pp_map_k48.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "42:  fp48_t l;",
      "43:  ep_t _p;",
      "44:  fp8_t rx, ry, rz, qn;",
      "46:  int8_t s[RLC_FP_BITS + 1];",
      "48:  fp48_null(l);",
      "",
      "[Removed Lines]",
      "45:  int i, len = bn_bits(a) + 1;",
      "",
      "[Added Lines]",
      "45:  size_t len = bn_bits(a) + 1;",
      "46:  int i;",
      "",
      "---------------"
    ],
    "src/pp/relic_pp_map_k54.c||src/pp/relic_pp_map_k54.c": [
      "File: src/pp/relic_pp_map_k54.c -> src/pp/relic_pp_map_k54.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "42:  fp54_t l;",
      "43:  ep_t _p;",
      "44:  fp9_t rx, ry, rz, sx, sy, sz, qn;",
      "46:  int8_t s[RLC_FP_BITS + 1];",
      "48:  fp54_null(l);",
      "",
      "[Removed Lines]",
      "45:  int i, len = bn_bits(a) + 1;",
      "",
      "[Added Lines]",
      "45:  size_t len = bn_bits(a) + 1;",
      "46:  int i;",
      "",
      "---------------"
    ],
    "src/pp/relic_pp_map_k8.c||src/pp/relic_pp_map_k8.c": [
      "File: src/pp/relic_pp_map_k8.c -> src/pp/relic_pp_map_k8.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "53:  fp8_t l;",
      "54:  ep_t *_p = RLC_ALLOCA(ep_t, m);",
      "55:  ep2_t *_q = RLC_ALLOCA(ep2_t, m);",
      "57:  int8_t s[RLC_FP_BITS + 1];",
      "59:  if (m == 0) {",
      "",
      "[Removed Lines]",
      "56:  int i, j, len = bn_bits(a) + 1;",
      "",
      "[Added Lines]",
      "56:  size_t len = bn_bits(a) + 1;",
      "57:  int i, j;",
      "",
      "---------------"
    ],
    "src/rand/relic_rand_core.c||src/rand/relic_rand_core.c": [
      "File: src/rand/relic_rand_core.c -> src/rand/relic_rand_core.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "183: #endif",
      "184: }",
      "187:  int count = 0;",
      "189:  for (int i = 1; i < size; i++) {",
      "",
      "[Removed Lines]",
      "186: int rand_check(uint8_t *buf, int size) {",
      "",
      "[Added Lines]",
      "186: int rand_check(uint8_t *buf, size_t size) {",
      "",
      "---------------"
    ],
    "src/rand/relic_rand_hashd.c||src/rand/relic_rand_hashd.c": [
      "File: src/rand/relic_rand_hashd.c -> src/rand/relic_rand_hashd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "57:  uint32_t j = util_conv_big(8 * out_len);",
      "59:  uint8_t* buf = RLC_ALLOCA(uint8_t, 1 + sizeof(uint32_t) + in_len);",
      "60:  uint8_t hash[RLC_MD_LEN];",
      "",
      "[Removed Lines]",
      "56: static void rand_hash(uint8_t *out, int out_len, uint8_t *in, int in_len) {",
      "58:  int len = RLC_CEIL(out_len, RLC_MD_LEN);",
      "",
      "[Added Lines]",
      "56: static void rand_hash(uint8_t *out, size_t out_len, uint8_t *in,",
      "57:   size_t in_len) {",
      "59:  size_t len = RLC_CEIL(out_len, RLC_MD_LEN);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "92:  int carry = digit;",
      "93:  for (int i = size - 1; i >= 0; i--) {",
      "94:   int16_t s;",
      "",
      "[Removed Lines]",
      "91: static int rand_inc(uint8_t *data, int size, int digit) {",
      "",
      "[Added Lines]",
      "92: static int rand_inc(uint8_t *data, size_t size, int digit) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "109:  int carry = 0;",
      "110:  for (int i = size - 1; i >= 0; i--) {",
      "",
      "[Removed Lines]",
      "108: static int rand_add(uint8_t *state, uint8_t *hash, int size) {",
      "",
      "[Added Lines]",
      "109: static int rand_add(uint8_t *state, uint8_t *hash, size_t size) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "127:  int m = RLC_CEIL(out_len, RLC_MD_LEN);",
      "128:  uint8_t hash[RLC_MD_LEN], data[(RLC_RAND_SIZE - 1)/2];",
      "129:  ctx_t *ctx = core_get();",
      "",
      "[Removed Lines]",
      "126: static void rand_gen(uint8_t *out, int out_len) {",
      "",
      "[Added Lines]",
      "127: static void rand_gen(uint8_t *out, size_t out_len) {",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "151: #if RAND == HASHD",
      "154:  uint8_t hash[RLC_MD_LEN];",
      "155:  int carry, len  = (RLC_RAND_SIZE - 1)/2;",
      "156:  ctx_t *ctx = core_get();",
      "",
      "[Removed Lines]",
      "153: void rand_bytes(uint8_t *buf, int size) {",
      "",
      "[Added Lines]",
      "154: void rand_bytes(uint8_t *buf, size_t size) {",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "173:  ctx->counter = ctx->counter + 1;",
      "174: }",
      "177:  ctx_t *ctx = core_get();",
      "180:  if (size <= 0) {",
      "181:   RLC_THROW(ERR_NO_VALID);",
      "",
      "[Removed Lines]",
      "176: void rand_seed(uint8_t *buf, int size) {",
      "178:  int len = (RLC_RAND_SIZE - 1) / 2;",
      "",
      "[Added Lines]",
      "177: void rand_seed(uint8_t *buf, size_t size) {",
      "179:  size_t len = (RLC_RAND_SIZE - 1) / 2;",
      "",
      "---------------"
    ],
    "src/relic_util.c||src/relic_util.c": [
      "File: src/relic_util.c -> src/relic_util.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "134: #endif",
      "135: }",
      "138:     return RLC_DIG - arch_lzcnt(a);",
      "139: }",
      "",
      "[Removed Lines]",
      "137: int util_bits_dig(dig_t a) {",
      "",
      "[Added Lines]",
      "137: size_t util_bits_dig(dig_t a) {",
      "",
      "---------------"
    ],
    "test/test_bn.c||test/test_bn.c": [
      "File: test/test_bn.c -> test/test_bn.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "234:   } TEST_END;",
      "236:   TEST_CASE(\"reading and writing a positive number are consistent\") {",
      "238:    bn_rand(a, RLC_POS, RLC_BN_BITS);",
      "239:    for (int j = 2; j <= 64; j++) {",
      "240:     bits = bn_size_str(a, j);",
      "",
      "[Removed Lines]",
      "237:    int len = RLC_CEIL(RLC_BN_BITS, 8);",
      "",
      "[Added Lines]",
      "237:    size_t len = RLC_CEIL(RLC_BN_BITS, 8);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "262:   TEST_END;",
      "264:   TEST_CASE(\"reading and writing a negative number are consistent\") {",
      "266:    bn_rand(a, RLC_NEG, RLC_BN_BITS);",
      "267:    for (int j = 2; j <= 64; j++) {",
      "268:     bits = bn_size_str(a, j);",
      "",
      "[Removed Lines]",
      "265:    int len = RLC_CEIL(RLC_BN_BITS, 8);",
      "",
      "[Added Lines]",
      "265:    size_t len = RLC_CEIL(RLC_BN_BITS, 8);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1139: }",
      "1141: static int square_root(void) {",
      "1143:  bn_t a, b, c;",
      "1145:  bn_null(a);",
      "1146:  bn_null(b);",
      "",
      "[Removed Lines]",
      "1142:  int bits, code = RLC_ERR;",
      "",
      "[Added Lines]",
      "1142:  size_t bits;",
      "1144:  int code = RLC_ERR;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1938: static int recoding(void) {",
      "1939:  int code = RLC_ERR;",
      "1940:  bn_t a, b, c, v1[3], v2[3];",
      "1942:  uint8_t d[RLC_BN_BITS + 1];",
      "1943:  int8_t e[2 * (RLC_BN_BITS + 1)];",
      "1945:  bn_null(a);",
      "1946:  bn_null(b);",
      "",
      "[Removed Lines]",
      "1941:  int w, k, l;",
      "",
      "[Added Lines]",
      "1942:  int w, k;",
      "1945:  size_t l;",
      "",
      "---------------"
    ],
    "test/test_core.c||test/test_core.c": [
      "File: test/test_core.c -> test/test_core.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "123:   }",
      "124:   TEST_ASSERT(code == RLC_OK, end);",
      "126:   core_init();",
      "127: #pragma omp parallel copyin(core_ctx) shared(code)",
      "128:   {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "126:   core_clean();",
      "",
      "---------------"
    ],
    "test/test_pc.c||test/test_pc.c": [
      "File: test/test_pc.c -> test/test_pc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1245: }",
      "1247: int util(void) {",
      "1249:  gt_t a, b, c;",
      "1250:  uint8_t bin[24 * RLC_PC_BYTES];",
      "",
      "[Removed Lines]",
      "1248:  int l, code = RLC_ERR;",
      "",
      "[Added Lines]",
      "1248:  int code = RLC_ERR;",
      "",
      "---------------"
    ],
    "test/test_rand.c||test/test_rand.c": [
      "File: test/test_rand.c -> test/test_rand.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "364: static int test(void) {",
      "365:  uint8_t out[64];",
      "368:  TEST_ONCE(\"rdrand hardware generator is non-trivial\") {",
      "369:   memset(out, 0, 2 * len);",
      "",
      "[Removed Lines]",
      "366:  int len = sizeof(out) / 2, code = RLC_ERR;",
      "",
      "[Added Lines]",
      "366:  size_t len = sizeof(out) / 2, code = RLC_ERR;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5bd2b8b7b555533a4b1e6cea62bb45c57b898b5d",
      "candidate_info": {
        "commit_hash": "5bd2b8b7b555533a4b1e6cea62bb45c57b898b5d",
        "repo": "relic-toolkit/relic",
        "commit_url": "https://github.com/relic-toolkit/relic/commit/5bd2b8b7b555533a4b1e6cea62bb45c57b898b5d",
        "files": [
          "src/ep/relic_ep_map.c",
          "src/epx/relic_ep2_map.c",
          "src/tmpl/relic_tmpl_map.h"
        ],
        "message": "Refactor hashing to make it constant time.",
        "before_after_code_files": [
          "src/ep/relic_ep_map.c||src/ep/relic_ep_map.c",
          "src/epx/relic_ep2_map.c||src/epx/relic_ep2_map.c",
          "src/tmpl/relic_tmpl_map.h||src/tmpl/relic_tmpl_map.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/ep/relic_ep_map.c||src/ep/relic_ep_map.c",
            "src/epx/relic_ep2_map.c||src/epx/relic_ep2_map.c"
          ],
          "candidate": [
            "src/ep/relic_ep_map.c||src/ep/relic_ep_map.c",
            "src/epx/relic_ep2_map.c||src/epx/relic_ep2_map.c"
          ]
        }
      },
      "candidate_diff": {
        "src/ep/relic_ep_map.c||src/ep/relic_ep_map.c": [
          "File: src/ep/relic_ep_map.c -> src/ep/relic_ep_map.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "86: static void ep_map_from_field(ep_t p, const uint8_t *uniform_bytes, size_t len,",
          "88:  bn_t k;",
          "89:  fp_t t;",
          "90:  ep_t q;",
          "",
          "[Removed Lines]",
          "87:   const void (*const map_fn)(ep_t, fp_t)) {",
          "",
          "[Added Lines]",
          "87:   const void (*const map_fn)(ep_t, const fp_t)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "221:   const int abNeq0 = (ep_curve_opt_a() != RLC_ZERO) &&",
          "222:     (ep_curve_opt_b() != RLC_ZERO);",
          "225:   ep_map_from_field(p, r, 2 * elm, map_fn);",
          "226:  }",
          "227:  RLC_CATCH_ANY {",
          "",
          "[Removed Lines]",
          "223:   void (*const map_fn)(ep_t, fp_t) = (ep_curve_is_ctmap() ||",
          "224:     abNeq0) ? ep_map_sswu : ep_map_svdw;",
          "",
          "[Added Lines]",
          "223:   const void (*const map_fn)(ep_t, const fp_t) = (void (*const))",
          "224:     (ep_curve_is_ctmap() || abNeq0 ? ep_map_sswu : ep_map_svdw);",
          "",
          "---------------"
        ],
        "src/epx/relic_ep2_map.c||src/epx/relic_ep2_map.c": [
          "File: src/epx/relic_ep2_map.c -> src/epx/relic_ep2_map.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "121:   const int abNeq0 = (ep2_curve_opt_a() != RLC_ZERO) &&",
          "122:     (ep2_curve_opt_b() != RLC_ZERO);",
          "126: #define EP2_MAP_CONVERT_BYTES(IDX)           \\",
          "127:   do {                \\",
          "",
          "[Removed Lines]",
          "123:   void (*const map_fn)(ep2_t, fp2_t) = (ep2_curve_is_ctmap() ||",
          "124:     abNeq0) ? ep2_map_sswu : ep2_map_svdw;",
          "",
          "[Added Lines]",
          "123:   const void (*const map_fn)(ep2_t, fp2_t) = (void (*const))",
          "124:     (ep2_curve_is_ctmap() || abNeq0 ? ep2_map_sswu : ep2_map_svdw);",
          "",
          "---------------"
        ],
        "src/tmpl/relic_tmpl_map.h||src/tmpl/relic_tmpl_map.h": [
          "File: src/tmpl/relic_tmpl_map.h -> src/tmpl/relic_tmpl_map.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "174: #define TMPL_MAP_SSWU(CUR, PFX, PTR_TY, COPY_COND)       \\",
          "176:   PFX##_t t0, t1, t2, t3;            \\",
          "177:   ctx_t *ctx = core_get();           \\",
          "178:   PTR_TY *mBoverA = ctx->CUR##_map_c[0];        \\",
          "",
          "[Removed Lines]",
          "175:  static void CUR##_map_sswu(CUR##_t p, PFX##_t t) {      \\",
          "",
          "[Added Lines]",
          "175:  static void CUR##_map_sswu(CUR##_t p, const PFX##_t t) {    \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "197:    PFX##_sqr(t1, t0);     /* t1 = u^2 * t^4 */      \\",
          "198:    PFX##_add(t2, t1, t0); /* t2 = u^2 * t^4 + u * t^2 */   \\",
          "199:                    \\",
          "234:    PFX##_set_dig(p->z, 1);           \\",
          "235:    p->coord = BASIC;            \\",
          "236:   }                 \\",
          "",
          "[Removed Lines]",
          "202:    {                    \\",
          "203:     const int e1 = PFX##_is_zero(t2);           \\",
          "204:     PFX##_neg(t3, u);           /* t3 = -u */         \\",
          "205:     COPY_COND(t2, t3, e1);      /* exception: -u instead of u^2t^4 + ut^2 */ \\",
          "206:     PFX##_inv(t2, t2);          /* t2 = -1/u or 1/(u^2 * t^4 + u*t^2) */  \\",
          "207:     PFX##_add_dig(t3, t2, 1);   /* t3 = 1 + t2 */        \\",
          "208:     COPY_COND(t2, t3, e1 == 0); /* only add 1 if t2 != -1/u */     \\",
          "209:    }                    \\",
          "211:                                                                                    \\",
          "213:    PFX##_mul(p->x, t2, mBoverA); /* -B / A * (1 + 1 / (u^2 * t^4 + u * t^2)) */ \\",
          "214:    PFX##_sqr(p->y, p->x);        /* x^2 */           \\",
          "215:    PFX##_add(p->y, p->y, a);     /* x^2 + a */          \\",
          "216:    PFX##_mul(p->y, p->y, p->x);  /* x^3 + a x */         \\",
          "217:    PFX##_add(p->y, p->y, b);     /* x^3 + a x + b */        \\",
          "218:                                                                                       \\",
          "220:    PFX##_mul(t2, t0, p->x); /* t2 = u * t^2 * x1 */        \\",
          "221:    PFX##_mul(t1, t0, t1);   /* t1 = u^3 * t^6 */         \\",
          "222:    PFX##_mul(t3, t1, p->y); /* t5 = g(t2) = u^3 * t^6 * g(p->x) */     \\",
          "223:                        \\",
          "227:    if (!PFX##_srt(p->y, p->y)) {             \\",
          "229:     PFX##_copy(p->x, t2);              \\",
          "230:     if (!PFX##_srt(p->y, t3)) {             \\",
          "231:      RLC_THROW(ERR_NO_VALID);            \\",
          "232:     }                   \\",
          "233:    }                    \\",
          "",
          "[Added Lines]",
          "202:    {                \\",
          "203:     const int e1 = PFX##_is_zero(t2);       \\",
          "204:     PFX##_neg(t3, u);           /* t3 = -u */     \\",
          "206:     COPY_COND(t2, t3, e1);              \\",
          "208:     PFX##_inv(t2, t2);                  \\",
          "209:     PFX##_add_dig(t3, t2, 1);   /* t3 = 1 + t2 */    \\",
          "210:     COPY_COND(t2, t3, e1 == 0); /* only add 1 if t2 != -1/u */ \\",
          "211:    }                \\",
          "215:    PFX##_mul(p->x, t2, mBoverA);         \\",
          "216:    PFX##_sqr(p->y, p->x);        /* x^2 */       \\",
          "217:    PFX##_add(p->y, p->y, a);     /* x^2 + a */      \\",
          "218:    PFX##_mul(p->y, p->y, p->x);  /* x^3 + a x */     \\",
          "219:    PFX##_add(p->y, p->y, b);     /* x^3 + a x + b */    \\",
          "220:                                                                             \\",
          "222:    PFX##_mul(t2, t0, p->x); /* t2 = u * t^2 * x1 */    \\",
          "223:    PFX##_mul(t1, t0, t1);   /* t1 = u^3 * t^6 */     \\",
          "224:    PFX##_mul(t3, t1, p->y); /* t5 = g(t2) = u^3 * t^6 * g(p->x) */ \\",
          "225:    {                \\",
          "227:     const int e1 = PFX##_is_sqr(p->y);       \\",
          "228:     COPY_COND(p->x, t2, e1 == 0);        \\",
          "229:     COPY_COND(p->y, t3, e1 == 0);        \\",
          "230:    }                \\",
          "231:    if (!PFX##_srt(p->y, p->y)) {         \\",
          "232:     RLC_THROW(ERR_NO_VALID);         \\",
          "233:    }                \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "250: #define TMPL_MAP_SVDW(CUR, PFX, PTR_TY, COPY_COND)       \\",
          "252:   PFX##_t t1, t2, t3, t4;            \\",
          "253:   PFX##_null(t1);              \\",
          "254:   PFX##_null(t2);              \\",
          "255:   PFX##_null(t3);              \\",
          "",
          "[Removed Lines]",
          "251:  static void CUR##_map_svdw(CUR##_t p, PFX##_t t) {      \\",
          "",
          "[Added Lines]",
          "251:  static void CUR##_map_svdw(CUR##_t p, const PFX##_t t) {    \\",
          "253:   ctx_t *ctx = core_get();           \\",
          "254:   PTR_TY *gU = ctx->CUR##_map_c[0];         \\",
          "255:   PTR_TY *mUover2 = ctx->CUR##_map_c[1];        \\",
          "256:   PTR_TY *c3 = ctx->CUR##_map_c[2];         \\",
          "257:   PTR_TY *c4 = ctx->CUR##_map_c[3];         \\",
          "258:   PTR_TY *u = ctx->CUR##_map_u;          \\",
          "259:                    \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "261:    PFX##_new(t3);             \\",
          "262:    PFX##_new(t4);             \\",
          "263:                    \\",
          "272:    PFX##_sqr(t1, t);            \\",
          "273:    PFX##_mul(t1, t1, gU);           \\",
          "",
          "[Removed Lines]",
          "264:    ctx_t *ctx = core_get();          \\",
          "265:    PTR_TY *gU = ctx->CUR##_map_c[0];        \\",
          "266:    PTR_TY *mUover2 = ctx->CUR##_map_c[1];       \\",
          "267:    PTR_TY *c3 = ctx->CUR##_map_c[2];        \\",
          "268:    PTR_TY *c4 = ctx->CUR##_map_c[3];        \\",
          "269:    PTR_TY *u = ctx->CUR##_map_u;         \\",
          "270:                                                                             \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "290:    PFX##_mul(t4, t4, t3);           \\",
          "291:    PFX##_mul(t4, t4, c3);           \\",
          "292:                    \\",
          "295:    PFX##_sub(p->x, mUover2, t4);         \\",
          "296:    CUR##_rhs(p->y, p);            \\",
          "313:    }                \\",
          "314:    PFX##_set_dig(p->z, 1);           \\",
          "315:    p->coord = BASIC;            \\",
          "",
          "[Removed Lines]",
          "297:    if (!PFX##_srt(p->y, p->y)) {         \\",
          "299:     PFX##_add(p->x, mUover2, t4);        \\",
          "300:     CUR##_rhs(p->y, p);           \\",
          "301:     if (!PFX##_srt(p->y, p->y)) {        \\",
          "303:      PFX##_sqr(p->x, t2);         \\",
          "304:      PFX##_mul(p->x, p->x, t3);        \\",
          "305:      PFX##_sqr(p->x, p->x);         \\",
          "306:      PFX##_mul(p->x, p->x, c4);        \\",
          "307:      PFX##_add(p->x, p->x, u);        \\",
          "308:      CUR##_rhs(p->y, p);          \\",
          "309:      if (!PFX##_srt(p->y, p->y)) {       \\",
          "310:       RLC_THROW(ERR_NO_VALID);       \\",
          "311:      }              \\",
          "312:     }               \\",
          "",
          "[Added Lines]",
          "296:    {                \\",
          "297:     const int e0 = PFX##_is_sqr(p->y);       \\",
          "299:     PFX##_add(t4, mUover2, t4);         \\",
          "300:     COPY_COND(p->x, t4, e0 == 0);        \\",
          "301:     CUR##_rhs(t1, p);           \\",
          "302:     COPY_COND(p->y, t1, e0 == 0);        \\",
          "303:    }                \\",
          "304:    {                \\",
          "305:     const int e1 = PFX##_is_sqr(p->y);       \\",
          "307:     PFX##_sqr(t1, t2);           \\",
          "308:     PFX##_mul(t1, t1, t3);          \\",
          "309:     PFX##_sqr(t1, t1);           \\",
          "310:     PFX##_mul(t1, t1, c4);          \\",
          "311:     PFX##_add(t1, t1, u);          \\",
          "312:     COPY_COND(p->x, t1, e1 == 0);        \\",
          "313:     CUR##_rhs(t2, p);           \\",
          "314:     COPY_COND(p->y, t2, e1 == 0);        \\",
          "315:    }                \\",
          "316:    if (!PFX##_srt(p->y, p->y)) {         \\",
          "317:     RLC_THROW(ERR_NO_VALID);         \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3105d66e99aa84c9a423bbbcd879ae4a04ecc17b",
      "candidate_info": {
        "commit_hash": "3105d66e99aa84c9a423bbbcd879ae4a04ecc17b",
        "repo": "relic-toolkit/relic",
        "commit_url": "https://github.com/relic-toolkit/relic/commit/3105d66e99aa84c9a423bbbcd879ae4a04ecc17b",
        "files": [
          "src/ed/relic_ed_mul_sim.c",
          "src/epx/relic_ep8_mul_sim.c"
        ],
        "message": "A few more",
        "before_after_code_files": [
          "src/ed/relic_ed_mul_sim.c||src/ed/relic_ed_mul_sim.c",
          "src/epx/relic_ep8_mul_sim.c||src/epx/relic_ep8_mul_sim.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/ed/relic_ed_mul_sim.c||src/ed/relic_ed_mul_sim.c"
          ],
          "candidate": [
            "src/ed/relic_ed_mul_sim.c||src/ed/relic_ed_mul_sim.c"
          ]
        }
      },
      "candidate_diff": {
        "src/ed/relic_ed_mul_sim.c||src/ed/relic_ed_mul_sim.c": [
          "File: src/ed/relic_ed_mul_sim.c -> src/ed/relic_ed_mul_sim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: static void ed_mul_sim_plain(ed_t r, const ed_t p, const bn_t k, const ed_t q,",
          "55:   const bn_t m, const ed_t *t) {",
          "57:  int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], *_k, *_m;",
          "58:  ed_t t0[1 << (RLC_WIDTH - 2)];",
          "59:  ed_t t1[1 << (RLC_WIDTH - 2)];",
          "60:  size_t l, l0, l1;",
          "62:  RLC_TRY {",
          "64:   if (!gen) {",
          "65:    for (i = 0; i < (1 << (RLC_WIDTH - 2)); i++) {",
          "66:     ed_null(t0[i]);",
          "",
          "[Removed Lines]",
          "56:  int i, n0, n1, w, gen;",
          "63:   gen = (t == NULL ? 0 : 1);",
          "",
          "[Added Lines]",
          "56:  int i, n0, n1, w,   gen = (t == NULL ? 0 : 1);",
          "",
          "---------------"
        ],
        "src/epx/relic_ep8_mul_sim.c||src/epx/relic_ep8_mul_sim.c": [
          "File: src/epx/relic_ep8_mul_sim.c -> src/epx/relic_ep8_mul_sim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: static void ep8_mul_sim_plain(ep8_t r, const ep8_t p, const bn_t k,",
          "54:   const ep8_t q, const bn_t m, ep8_t *t) {",
          "56:  int8_t naf0[2 * RLC_FP_BITS + 1], naf1[2 * RLC_FP_BITS + 1], *_k, *_m;",
          "57:  ep8_t t0[1 << (RLC_WIDTH - 2)];",
          "58:  ep8_t t1[1 << (RLC_WIDTH - 2)];",
          "59:  size_t l, l0, l1;",
          "61:  RLC_TRY {",
          "63:   if (!gen) {",
          "64:    for (i = 0; i < (1 << (RLC_WIDTH - 2)); i++) {",
          "65:     ep8_null(t0[i]);",
          "",
          "[Removed Lines]",
          "55:  int i, n0, n1, w, gen;",
          "62:   gen = (t == NULL ? 0 : 1);",
          "",
          "[Added Lines]",
          "55:  int i, n0, n1, w, gen = (t == NULL ? 0 : 1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4eb38d42c5955ea3de203f9ad536a811ef193f8c",
      "candidate_info": {
        "commit_hash": "4eb38d42c5955ea3de203f9ad536a811ef193f8c",
        "repo": "relic-toolkit/relic",
        "commit_url": "https://github.com/relic-toolkit/relic/commit/4eb38d42c5955ea3de203f9ad536a811ef193f8c",
        "files": [
          "src/eb/relic_eb_mul_sim.c",
          "src/ep/relic_ep_mul_sim.c",
          "src/epx/relic_ep2_mul_sim.c",
          "src/epx/relic_ep3_mul_sim.c",
          "src/epx/relic_ep4_mul_sim.c",
          "src/fp/relic_fp_smb.c",
          "src/fpx/relic_fpx_srt.c"
        ],
        "message": "Initialize vars.",
        "before_after_code_files": [
          "src/eb/relic_eb_mul_sim.c||src/eb/relic_eb_mul_sim.c",
          "src/ep/relic_ep_mul_sim.c||src/ep/relic_ep_mul_sim.c",
          "src/epx/relic_ep2_mul_sim.c||src/epx/relic_ep2_mul_sim.c",
          "src/epx/relic_ep3_mul_sim.c||src/epx/relic_ep3_mul_sim.c",
          "src/epx/relic_ep4_mul_sim.c||src/epx/relic_ep4_mul_sim.c",
          "src/fp/relic_fp_smb.c||src/fp/relic_fp_smb.c",
          "src/fpx/relic_fpx_srt.c||src/fpx/relic_fpx_srt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/eb/relic_eb_mul_sim.c||src/eb/relic_eb_mul_sim.c",
            "src/ep/relic_ep_mul_sim.c||src/ep/relic_ep_mul_sim.c",
            "src/epx/relic_ep2_mul_sim.c||src/epx/relic_ep2_mul_sim.c",
            "src/epx/relic_ep4_mul_sim.c||src/epx/relic_ep4_mul_sim.c"
          ],
          "candidate": [
            "src/eb/relic_eb_mul_sim.c||src/eb/relic_eb_mul_sim.c",
            "src/ep/relic_ep_mul_sim.c||src/ep/relic_ep_mul_sim.c",
            "src/epx/relic_ep2_mul_sim.c||src/epx/relic_ep2_mul_sim.c",
            "src/epx/relic_ep4_mul_sim.c||src/epx/relic_ep4_mul_sim.c"
          ]
        }
      },
      "candidate_diff": {
        "src/eb/relic_eb_mul_sim.c||src/eb/relic_eb_mul_sim.c": [
          "File: src/eb/relic_eb_mul_sim.c -> src/eb/relic_eb_mul_sim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "179: static void eb_mul_sim_plain(eb_t r, const eb_t p, const bn_t k, const eb_t q,",
          "180:   const bn_t m, const eb_t *t) {",
          "182:  int8_t naf0[RLC_FB_BITS + 1], naf1[RLC_FB_BITS + 1], *_k, *_m;",
          "183:  eb_t t0[1 << (RLC_WIDTH - 2)];",
          "184:  eb_t t1[1 << (RLC_WIDTH - 2)];",
          "",
          "[Removed Lines]",
          "181:  int i, n0, n1, w, g;",
          "",
          "[Added Lines]",
          "181:  int i, n0, n1, w, g = (t == NULL ? 0 : 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "190:  }",
          "192:  RLC_TRY {",
          "194:   if (!g) {",
          "195:    for (i =  0; i < (1 << (RLC_WIDTH - 2)); i++) {",
          "196:     eb_new(t0[i]);",
          "",
          "[Removed Lines]",
          "193:   g = (t == NULL ? 0 : 1);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/ep/relic_ep_mul_sim.c||src/ep/relic_ep_mul_sim.c": [
          "File: src/ep/relic_ep_mul_sim.c -> src/ep/relic_ep_mul_sim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "489: static void ep_mul_sim_plain(ep_t r, const ep_t p, const bn_t k, const ep_t q,",
          "490:   const bn_t m, const ep_t *t) {",
          "492:  int8_t naf0[RLC_FP_BITS + 1], naf1[RLC_FP_BITS + 1], n0, n1, *u, *v;",
          "493:  ep_t t0[1 << (RLC_WIDTH - 2)];",
          "494:  ep_t t1[1 << (RLC_WIDTH - 2)];",
          "495:  size_t l, l0, l1;",
          "497:  RLC_TRY {",
          "499:   if (!gen) {",
          "500:    for (i = 0; i < (1 << (RLC_WIDTH - 2)); i++) {",
          "501:     ep_null(t0[i]);",
          "",
          "[Removed Lines]",
          "491:  int i, w, gen;",
          "498:   gen = (t == NULL ? 0 : 1);",
          "",
          "[Added Lines]",
          "491:  int i, w, gen = (t == NULL ? 0 : 1);",
          "",
          "---------------"
        ],
        "src/epx/relic_ep2_mul_sim.c||src/epx/relic_ep2_mul_sim.c": [
          "File: src/epx/relic_ep2_mul_sim.c -> src/epx/relic_ep2_mul_sim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "163: static void ep2_mul_sim_plain(ep2_t r, const ep2_t p, const bn_t k,",
          "164:   const ep2_t q, const bn_t m, const ep2_t *t) {",
          "166:  int8_t naf0[2 * RLC_FP_BITS + 1], naf1[2 * RLC_FP_BITS + 1], *_k, *_m;",
          "167:  ep2_t t0[1 << (RLC_WIDTH - 2)];",
          "168:  ep2_t t1[1 << (RLC_WIDTH - 2)];",
          "169:  size_t l, l0, l1;",
          "171:  RLC_TRY {",
          "173:   if (!gen) {",
          "174:    for (i = 0; i < (1 << (RLC_WIDTH - 2)); i++) {",
          "175:     ep2_null(t0[i]);",
          "",
          "[Removed Lines]",
          "165:  int i, n0, n1, w, gen;",
          "172:   gen = (t == NULL ? 0 : 1);",
          "",
          "[Added Lines]",
          "165:  int i, n0, n1, w, gen = (t == NULL ? 0 : 1);",
          "",
          "---------------"
        ],
        "src/epx/relic_ep3_mul_sim.c||src/epx/relic_ep3_mul_sim.c": [
          "File: src/epx/relic_ep3_mul_sim.c -> src/epx/relic_ep3_mul_sim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: static void ep3_mul_sim_plain(ep3_t r, const ep3_t p, const bn_t k,",
          "54:   const ep3_t q, const bn_t m, ep3_t *t) {",
          "56:  size_t l, l0, l1;",
          "57:  int8_t naf0[2 * RLC_FP_BITS + 1], naf1[2 * RLC_FP_BITS + 1], *_k, *_m;",
          "58:  ep3_t t0[1 << (RLC_WIDTH - 2)];",
          "59:  ep3_t t1[1 << (RLC_WIDTH - 2)];",
          "61:  RLC_TRY {",
          "63:   if (!gen) {",
          "64:    for (i = 0; i < (1 << (RLC_WIDTH - 2)); i++) {",
          "65:     ep3_null(t0[i]);",
          "",
          "[Removed Lines]",
          "55:  int i, n0, n1, w, gen;",
          "62:   gen = (t == NULL ? 0 : 1);",
          "",
          "[Added Lines]",
          "55:  int i, n0, n1, w, gen = (t == NULL ? 0 : 1);",
          "",
          "---------------"
        ],
        "src/epx/relic_ep4_mul_sim.c||src/epx/relic_ep4_mul_sim.c": [
          "File: src/epx/relic_ep4_mul_sim.c -> src/epx/relic_ep4_mul_sim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: static void ep4_mul_sim_plain(ep4_t r, const ep4_t p, const bn_t k,",
          "54:   const ep4_t q, const bn_t m, ep4_t *t) {",
          "56:  int8_t naf0[2 * RLC_FP_BITS + 1], naf1[2 * RLC_FP_BITS + 1], *_k, *_m;",
          "57:  ep4_t t0[1 << (RLC_WIDTH - 2)];",
          "58:  ep4_t t1[1 << (RLC_WIDTH - 2)];",
          "",
          "[Removed Lines]",
          "55:  int i, n0, n1, w, gen;",
          "",
          "[Added Lines]",
          "55:  int i, n0, n1, w, gen = (t == NULL ? 0 : 1);",
          "",
          "---------------"
        ],
        "src/fp/relic_fp_smb.c||src/fp/relic_fp_smb.c": [
          "File: src/fp/relic_fp_smb.c -> src/fp/relic_fp_smb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "365: int fp_smb_divst(const fp_t a) {",
          "367: #if FP_PRIME < 46",
          "369: #else",
          "371: #endif",
          "372:  dig_t delta = 1, g0, d0, fs, gs, k, mask, s;",
          "373:  bn_t _t;",
          "",
          "[Removed Lines]",
          "368:  int r, d = (49 * FP_PRIME + 80)/17;",
          "370:  int r, d = (49 * FP_PRIME + 57)/17;",
          "",
          "[Added Lines]",
          "368:  int r = 0, d = (49 * FP_PRIME + 80)/17;",
          "370:  int r = 0, d = (49 * FP_PRIME + 57)/17;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "462: int fp_smb_jmpds(const fp_t a) {",
          "463:  const int s = RLC_DIG - 2;",
          "464:  dis_t m[4], d = 0;",
          "467:  int iterations = (45907 * FP_PRIME + 26313) / 19929;",
          "468:  dv_t f, g, t0, t1, u0, u1;",
          "",
          "[Removed Lines]",
          "465:  int r, i;",
          "",
          "[Added Lines]",
          "465:  int i, r = 0;",
          "",
          "---------------"
        ],
        "src/fpx/relic_fpx_srt.c||src/fpx/relic_fpx_srt.c": [
          "File: src/fpx/relic_fpx_srt.c -> src/fpx/relic_fpx_srt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: int fp2_is_sqr(const fp2_t a) {",
          "40:  fp2_t t;",
          "43:  fp2_null(t);",
          "",
          "[Removed Lines]",
          "41:  int r;",
          "",
          "[Added Lines]",
          "41:  int r = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "829fe1b320d5c76bc090e74038a40caffff8bb79",
      "candidate_info": {
        "commit_hash": "829fe1b320d5c76bc090e74038a40caffff8bb79",
        "repo": "relic-toolkit/relic",
        "commit_url": "https://github.com/relic-toolkit/relic/commit/829fe1b320d5c76bc090e74038a40caffff8bb79",
        "files": [
          "src/md/relic_md_kdf.c",
          "src/md/relic_md_mgf.c"
        ],
        "message": "Refactor MD module.",
        "before_after_code_files": [
          "src/md/relic_md_kdf.c||src/md/relic_md_kdf.c",
          "src/md/relic_md_mgf.c||src/md/relic_md_mgf.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/md/relic_md_kdf.c||src/md/relic_md_kdf.c",
            "src/md/relic_md_mgf.c||src/md/relic_md_mgf.c"
          ],
          "candidate": [
            "src/md/relic_md_kdf.c||src/md/relic_md_kdf.c",
            "src/md/relic_md_mgf.c||src/md/relic_md_mgf.c"
          ]
        }
      },
      "candidate_diff": {
        "src/md/relic_md_kdf.c||src/md/relic_md_kdf.c": [
          "File: src/md/relic_md_kdf.c -> src/md/relic_md_kdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: #include \"relic_md.h\"",
          "44:  uint32_t i, j, d;",
          "49:   RLC_THROW(ERR_NO_VALID);",
          "50:   return;",
          "51:  }",
          "53:  buffer = RLC_ALLOCA(uint8_t, in_len + sizeof(uint32_t));",
          "57:   RLC_FREE(buffer);",
          "59:   RLC_THROW(ERR_NO_MEMORY);",
          "60:   return;",
          "61:  }",
          "",
          "[Removed Lines]",
          "43: void md_kdf(uint8_t *key, size_t key_len, const uint8_t *in, size_t in_len) {",
          "45:  uint8_t *buffer = NULL, *t = NULL;",
          "47:  if ((in_len + sizeof(uint32_t) < in_len) ||",
          "48:    (key_len + RLC_MD_LEN < key_len)) {",
          "54:  t = RLC_ALLOCA(uint8_t, key_len + RLC_MD_LEN);",
          "56:  if (buffer == NULL || t == NULL) {",
          "58:   RLC_FREE(t);",
          "",
          "[Added Lines]",
          "43: static void nist_kdf(uint8_t *key, size_t key_len, const uint8_t *in,",
          "44:   size_t in_len, uint32_t value) {",
          "46:  uint8_t *buffer = NULL, hash[RLC_MD_LEN];",
          "47:  size_t out_len = 0;",
          "49:  if (((key_len >> 32) > RLC_MD_LEN) ||",
          "50:   (in_len + sizeof(uint32_t) < in_len)) {",
          "56:  if (buffer == NULL) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:  d = RLC_CEIL(key_len, RLC_MD_LEN);",
          "65:  memcpy(buffer, in, in_len);",
          "67:   j = util_conv_big(i);",
          "69:   memcpy(buffer + in_len, &j, sizeof(uint32_t));",
          "72:  }",
          "75:  RLC_FREE(buffer);",
          "77: }",
          "",
          "[Removed Lines]",
          "66:  for (i = 1; i <= d; i++) {",
          "71:   md_map(t + (i - 1) * RLC_MD_LEN, buffer, in_len + sizeof(uint32_t));",
          "73:  memcpy(key, t, key_len);",
          "76:  RLC_FREE(t);",
          "",
          "[Added Lines]",
          "65:  for (i = value; i < d + value; i++) {",
          "70:   if (out_len + RLC_MD_LEN <= key_len) {",
          "71:    md_map(key + out_len, buffer, in_len + sizeof(uint32_t));",
          "72:             out_len += RLC_MD_LEN;",
          "73:         } else {",
          "74:    md_map(hash, buffer, in_len + sizeof(uint32_t));",
          "75:             memcpy(key + out_len, hash, key_len - out_len);",
          "76:         }",
          "80: }",
          "87: void md_mgf(uint8_t *key, size_t key_len, const uint8_t *in, size_t in_len) {",
          "88:  nist_kdf(key, key_len, in, in_len, 0);",
          "89: }",
          "91: void md_kdf(uint8_t *key, size_t key_len, const uint8_t *in, size_t in_len) {",
          "92:  nist_kdf(key, key_len, in, in_len, 1);",
          "",
          "---------------"
        ],
        "src/md/relic_md_mgf.c||src/md/relic_md_mgf.c": [
          "File: src/md/relic_md_mgf.c -> src/md/relic_md_mgf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f6e3c13ceb076347d4ca9b080a1f32c687a8e837",
      "candidate_info": {
        "commit_hash": "f6e3c13ceb076347d4ca9b080a1f32c687a8e837",
        "repo": "relic-toolkit/relic",
        "commit_url": "https://github.com/relic-toolkit/relic/commit/f6e3c13ceb076347d4ca9b080a1f32c687a8e837",
        "files": [
          "include/relic_bn.h",
          "include/relic_core.h",
          "include/relic_types.h",
          "src/arch/relic_arch_x64.c",
          "src/arch/relic_arch_x86.c"
        ],
        "message": "Fix type issues.",
        "before_after_code_files": [
          "include/relic_bn.h||include/relic_bn.h",
          "include/relic_core.h||include/relic_core.h",
          "include/relic_types.h||include/relic_types.h",
          "src/arch/relic_arch_x64.c||src/arch/relic_arch_x64.c",
          "src/arch/relic_arch_x86.c||src/arch/relic_arch_x86.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "include/relic_bn.h||include/relic_bn.h"
          ],
          "candidate": [
            "include/relic_bn.h||include/relic_bn.h"
          ]
        }
      },
      "candidate_diff": {
        "include/relic_bn.h||include/relic_bn.h": [
          "File: include/relic_bn.h -> include/relic_bn.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "663: void bn_write_str(char *str, size_t len, const bn_t a, unsigned radix);",
          "",
          "[Added Lines]",
          "663: void bn_write_str(char *str, size_t len, const bn_t a, uint_t radix);",
          "",
          "---------------"
        ],
        "include/relic_core.h||include/relic_core.h": [
          "File: include/relic_core.h -> include/relic_core.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "444: #if ARCH == X86",
          "446: #elif ARCH == X64 || ARCH == A64",
          "448: #endif",
          "449: } ctx_t;",
          "",
          "[Removed Lines]",
          "445:  uint_t (*lzcnt_ptr)(unsigned int);",
          "447:  uint_t (*lzcnt_ptr)(ull_t);",
          "",
          "[Added Lines]",
          "445:  unsigned int (*lzcnt_ptr)(dig_t);",
          "447:  unsigned int (*lzcnt_ptr)(ull_t);",
          "",
          "---------------"
        ],
        "include/relic_types.h||include/relic_types.h": [
          "File: include/relic_types.h -> include/relic_types.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "169: typedef unsigned int uint_t;",
          "",
          "[Added Lines]",
          "169: typedef unsigned long uint_t;",
          "",
          "---------------"
        ],
        "src/arch/relic_arch_x64.c||src/arch/relic_arch_x64.c": [
          "File: src/arch/relic_arch_x64.c -> src/arch/relic_arch_x64.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: #if TIMER == CYCLE",
          "66: ull_t arch_cycles(void) {",
          "68:  asm (",
          "",
          "[Removed Lines]",
          "67:  uint_t hi, lo;",
          "",
          "[Added Lines]",
          "67:  uint32_t hi, lo;",
          "",
          "---------------"
        ],
        "src/arch/relic_arch_x86.c||src/arch/relic_arch_x86.c": [
          "File: src/arch/relic_arch_x86.c -> src/arch/relic_arch_x86.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: }",
          "52: ull_t arch_cycles(void) {",
          "54:  asm (",
          "",
          "[Removed Lines]",
          "53:  uint_t hi, lo;",
          "",
          "[Added Lines]",
          "53:  uint32_t hi, lo;",
          "",
          "---------------"
        ]
      }
    }
  ]
}