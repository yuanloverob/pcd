{
  "cve_id": "CVE-2020-13616",
  "cve_desc": "The boost ASIO wrapper in net/asio.cpp in Pichi before 1.3.0 lacks TLS hostname verification.",
  "repo": "pichi-router/pichi",
  "patch_hash": "4698664233bc324f26658d2b041bfe6ea022c573",
  "patch_info": {
    "commit_hash": "4698664233bc324f26658d2b041bfe6ea022c573",
    "repo": "pichi-router/pichi",
    "commit_url": "https://github.com/pichi-router/pichi/commit/4698664233bc324f26658d2b041bfe6ea022c573",
    "files": [
      "CMakeLists.txt",
      "src/net/asio.cpp"
    ],
    "message": "Fix the insecure bug not verifying remote host name for TLS egress\n\n- Verify nothing if 'insecure' field is true\n- Verify only with the CA file if it's specified\n- Otherwise, verify according to RFC 2818",
    "before_after_code_files": [
      "src/net/asio.cpp||src/net/asio.cpp"
    ]
  },
  "patch_diff": {
    "src/net/asio.cpp||src/net/asio.cpp": [
      "File: src/net/asio.cpp -> src/net/asio.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: #ifdef ENABLE_TLS",
      "29: #include <boost/asio/ssl/context.hpp>",
      "30: #include <boost/asio/ssl/stream.hpp>",
      "31: #endif // ENABLE_TLS",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "30: #include <boost/asio/ssl/rfc2818_verification.hpp>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "56:   auto ctx = ssl::context{ssl::context::tls_client};",
      "57:   if (*vo.insecure_) {",
      "58:     ctx.set_verify_mode(ssl::context::verify_none);",
      "59:   }",
      "60:   else {",
      "62:     ctx.set_default_verify_paths();",
      "64:   }",
      "65:   return ctx;",
      "66: }",
      "",
      "[Removed Lines]",
      "61:     ctx.set_verify_mode(ssl::context::verify_peer);",
      "63:     if (vo.caFile_.has_value()) ctx.load_verify_file(*vo.caFile_);",
      "",
      "[Added Lines]",
      "60:     return ctx;",
      "63:   ctx.set_verify_mode(ssl::context::verify_peer);",
      "64:   if (vo.caFile_.has_value())",
      "65:     ctx.load_verify_file(*vo.caFile_);",
      "68:     ctx.set_verify_callback(ssl::rfc2818_verification{*vo.host_});",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "641e9f7997bc882627fef2910b440d38e883c256",
      "candidate_info": {
        "commit_hash": "641e9f7997bc882627fef2910b440d38e883c256",
        "repo": "pichi-router/pichi",
        "commit_url": "https://github.com/pichi-router/pichi/commit/641e9f7997bc882627fef2910b440d38e883c256",
        "files": [
          "src/net/asio.cpp"
        ],
        "message": "Fix the insecure bug not verifying remote host name for TLS egress\n\n- Verify nothing if 'insecure' field is true\n- Verify only with the CA file if it's specified\n- Otherwise, verify according to RFC 2818",
        "before_after_code_files": [
          "src/net/asio.cpp||src/net/asio.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "src/net/asio.cpp||src/net/asio.cpp"
          ],
          "candidate": [
            "src/net/asio.cpp||src/net/asio.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/net/asio.cpp||src/net/asio.cpp": [
          "File: src/net/asio.cpp -> src/net/asio.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: #ifdef ENABLE_TLS",
          "40: #include <boost/asio/ssl/context.hpp>",
          "41: #include <boost/asio/ssl/stream.hpp>",
          "42: #endif // ENABLE_TLS",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "41: #include <boost/asio/ssl/rfc2818_verification.hpp>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "67:   auto ctx = ssl::context{ssl::context::tls_client};",
          "68:   if (*vo.insecure_) {",
          "69:     ctx.set_verify_mode(ssl::context::verify_none);",
          "70:   }",
          "71:   else {",
          "73:     ctx.set_default_verify_paths();",
          "75:   }",
          "76:   return ctx;",
          "77: }",
          "",
          "[Removed Lines]",
          "72:     ctx.set_verify_mode(ssl::context::verify_peer);",
          "74:     if (vo.caFile_.has_value()) ctx.load_verify_file(*vo.caFile_);",
          "",
          "[Added Lines]",
          "71:     return ctx;",
          "74:   ctx.set_verify_mode(ssl::context::verify_peer);",
          "75:   if (vo.caFile_.has_value())",
          "76:     ctx.load_verify_file(*vo.caFile_);",
          "79:     ctx.set_verify_callback(ssl::rfc2818_verification{*vo.host_});",
          "",
          "---------------"
        ]
      }
    }
  ]
}