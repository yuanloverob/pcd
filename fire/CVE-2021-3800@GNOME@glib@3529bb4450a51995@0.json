{
  "cve_id": "CVE-2021-3800",
  "cve_desc": "A flaw was found in glib before version 2.63.6. Due to random charset alias, pkexec can leak content from files owned by privileged users to unprivileged ones under the right condition.",
  "repo": "GNOME/glib",
  "patch_hash": "3529bb4450a519959a5d9cb787404296322618a1",
  "patch_info": {
    "commit_hash": "3529bb4450a519959a5d9cb787404296322618a1",
    "repo": "GNOME/glib",
    "commit_url": "https://gitlab.gnome.org/GNOME/glib/-/commit/3529bb4450a51995",
    "files": [
      "glib/libcharset/localcharset.c"
    ],
    "message": "libcharset: Drop a redundant environment variable\n\nIt was used for running tests when we built with autotools, but is no\nlonger used in the Meson build system. If we need something similar in\nfuture, it should be done by adding internal API to override the\ndirectory on a per-call basis, rather than loading a path from a shared\nglobal table every time.\n\nSigned-off-by: Philip Withnall <withnall@endlessm.com>\n\nHelps: #1919",
    "before_after_code_files": [
      "glib/libcharset/localcharset.c||glib/libcharset/localcharset.c"
    ]
  },
  "patch_diff": {
    "glib/libcharset/localcharset.c||glib/libcharset/localcharset.c": [
      "File: glib/libcharset/localcharset.c -> glib/libcharset/localcharset.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "117:       const char *base = \"charset.alias\";",
      "118:       char *file_name;",
      "127:       {",
      "",
      "[Removed Lines]",
      "122:       dir = getenv (\"CHARSETALIASDIR\");",
      "123:       if (dir == NULL || dir[0] == '\\0')",
      "124:  dir = relocate (GLIB_CHARSETALIAS_DIR);",
      "",
      "[Added Lines]",
      "120:       dir = relocate (GLIB_CHARSETALIAS_DIR);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "65be80c3edbcf3f10ae63f529a53ba95dddf6186",
      "candidate_info": {
        "commit_hash": "65be80c3edbcf3f10ae63f529a53ba95dddf6186",
        "repo": "GNOME/glib",
        "commit_url": "https://github.com/GNOME/glib/commit/65be80c3edbcf3f10ae63f529a53ba95dddf6186",
        "files": [
          "gio/gdbus-2.0/codegen/meson.build",
          "gio/meson.build",
          "glib/gnulib/meson.build",
          "glib/libcharset/meson.build",
          "meson.build"
        ],
        "message": "build: Rework path construction to reliably add prefix\n\nThere were a couple of custom paths which could end up being relative,\nrather than absolute, due to not properly prefixing them with\n`get_option('prefix')`.\n\nThe use of `join_paths()` here correctly drops all path components\nbefore the final absolute path in the list of arguments. So if someone\nconfigures GLib with an absolute path for `gio_module_dir`, that will be\nused unprefixed; but if someone configures with a relative path, it will\nbe prefixed by `get_option('prefix)`.\n\nSigned-off-by: Philip Withnall <withnall@endlessm.com>\n\nFixes: #1919",
        "before_after_code_files": [
          "gio/gdbus-2.0/codegen/meson.build||gio/gdbus-2.0/codegen/meson.build",
          "gio/meson.build||gio/meson.build",
          "glib/gnulib/meson.build||glib/gnulib/meson.build",
          "glib/libcharset/meson.build||glib/libcharset/meson.build",
          "meson.build||meson.build"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "gio/gdbus-2.0/codegen/meson.build||gio/gdbus-2.0/codegen/meson.build": [
          "File: gio/gdbus-2.0/codegen/meson.build -> gio/gdbus-2.0/codegen/meson.build",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:   # Provide tools for others when we're a subproject and they use the Meson GNOME module",
          "25: meson.override_find_program('gdbus-codegen', gdbus_codegen)",
          "29: gdbus_codegen_built_files = []",
          "30: gdbus_codegen_built_files += configure_file(input : 'config.py.in',",
          "",
          "[Removed Lines]",
          "27: codegen_dir = join_paths(get_option('datadir'), 'glib-2.0/codegen')",
          "",
          "[Added Lines]",
          "27: codegen_dir = join_paths(glib_datadir, 'glib-2.0', 'codegen')",
          "",
          "---------------"
        ],
        "gio/meson.build||gio/meson.build": [
          "File: gio/meson.build -> gio/meson.build",
          "--- Hunk 1 ---",
          "[Context before]",
          "811:   link_args : [noseh_link_args, glib_link_flags],",
          "812: )",
          "817: endif",
          "819: schemas_subdir = join_paths('glib-2.0', 'schemas')",
          "",
          "[Removed Lines]",
          "814: giomodulesdir = get_option('gio_module_dir')",
          "815: if giomodulesdir == ''",
          "816:   giomodulesdir = join_paths('${libdir}', 'gio', 'modules')",
          "",
          "[Added Lines]",
          "814: if get_option('gio_module_dir') != ''",
          "815:   pkgconfig_giomodulesdir = join_paths('${prefix}', get_option('gio_module_dir'))",
          "816: else",
          "817:   pkgconfig_giomodulesdir = join_paths('${libdir}', 'gio', 'modules')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "824:   variables : ['datadir=' + join_paths('${prefix}', get_option('datadir')),",
          "825:                'schemasdir=' + join_paths('${datadir}', schemas_subdir),",
          "826:                'bindir=' + join_paths('${prefix}', get_option('bindir')),",
          "828:                'gio=' + join_paths('${bindir}', 'gio'),",
          "829:                'gio_querymodules=' + join_paths('${bindir}', 'gio-querymodules'),",
          "830:                'glib_compile_schemas=' + join_paths('${bindir}', 'glib-compile-schemas'),",
          "",
          "[Removed Lines]",
          "827:                'giomoduledir=' + giomodulesdir,",
          "",
          "[Added Lines]",
          "828:                'giomoduledir=' + pkgconfig_giomodulesdir,",
          "",
          "---------------"
        ],
        "glib/gnulib/meson.build||glib/gnulib/meson.build": [
          "File: glib/gnulib/meson.build -> glib/gnulib/meson.build",
          "--- Hunk 1 ---",
          "[Context before]",
          "338:   dependencies : [libm],",
          "339:   include_directories : [configinc, glibinc, include_directories ('.')],",
          "340:   pic : true,",
          "343: gnulib_libm_dependency = [libm]",
          "",
          "[Removed Lines]",
          "341:   c_args : ['-DGCC_LINT=1', '-DLIBDIR=\"@0@\"'.format(get_option('libdir')), '-DGLIB_COMPILATION', '-DG_LOG_DOMAIN=\"GLib\"' ] + glib_hidden_visibility_args + extra_gnulib_args)",
          "",
          "[Added Lines]",
          "341:   c_args : ['-DGCC_LINT=1', '-DLIBDIR=\"@0@\"'.format(glib_libdir), '-DGLIB_COMPILATION', '-DG_LOG_DOMAIN=\"GLib\"' ] + glib_hidden_visibility_args + extra_gnulib_args)",
          "",
          "---------------"
        ],
        "glib/libcharset/meson.build||glib/libcharset/meson.build": [
          "File: glib/libcharset/meson.build -> glib/libcharset/meson.build",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: charset_lib = static_library('charset', 'localcharset.c',",
          "7:   include_directories : configinc,",
          "8:   pic : true,",
          "",
          "[Removed Lines]",
          "1: charsetalias_dir = get_option('charsetalias_dir')",
          "2: if charsetalias_dir == ''",
          "3:   charsetalias_dir = get_option('libdir')",
          "4: endif",
          "9:   c_args : [ '-DGLIB_CHARSETALIAS_DIR=\"@0@\"'.format(charsetalias_dir) ] + glib_hidden_visibility_args)",
          "",
          "[Added Lines]",
          "4:   c_args : [ '-DGLIB_CHARSETALIAS_DIR=\"@0@\"'.format(glib_charsetaliasdir) ] + glib_hidden_visibility_args)",
          "",
          "---------------"
        ],
        "meson.build||meson.build": [
          "File: meson.build -> meson.build",
          "--- Hunk 1 ---",
          "[Context before]",
          "63: glib_datadir = join_paths(glib_prefix, get_option('datadir'))",
          "64: glib_pkgdatadir = join_paths(glib_datadir, 'glib-2.0')",
          "65: glib_includedir = join_paths(glib_prefix, get_option('includedir'))",
          "68:   glib_giomodulesdir = join_paths(glib_libdir, 'gio', 'modules')",
          "69: endif",
          "71: glib_pkgconfigreldir = join_paths(glib_libdir, 'pkgconfig')",
          "73: installed_tests_metadir = join_paths(glib_datadir, 'installed-tests', meson.project_name())",
          "74: installed_tests_execdir = join_paths(glib_libexecdir, 'installed-tests', meson.project_name())",
          "75: installed_tests_enabled = get_option('installed_tests')",
          "",
          "[Removed Lines]",
          "66: glib_giomodulesdir = get_option('gio_module_dir')",
          "67: if glib_giomodulesdir == ''",
          "",
          "[Added Lines]",
          "66: if get_option('gio_module_dir') != ''",
          "67:   glib_giomodulesdir = join_paths(glib_prefix, get_option('gio_module_dir'))",
          "68: else",
          "74: if get_option('charsetalias_dir') != ''",
          "75:   glib_charsetaliasdir = join_paths(glib_prefix, get_option('charsetalias_dir'))",
          "76: else",
          "77:   glib_charsetaliasdir = glib_libdir",
          "78: endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2216:     'http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl',",
          "2217:     '@INPUT@',",
          "2218:   ]",
          "2220: endif",
          "2222: gnome = import('gnome')",
          "",
          "[Removed Lines]",
          "2219:   man1_dir = get_option('mandir') + '/man1'",
          "",
          "[Added Lines]",
          "2226:   man1_dir = join_paths(glib_prefix, get_option('mandir'), 'man1')",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "88cb9fe51476cf0591ea9da834cf598c9d97a9eb",
      "candidate_info": {
        "commit_hash": "88cb9fe51476cf0591ea9da834cf598c9d97a9eb",
        "repo": "GNOME/glib",
        "commit_url": "https://github.com/GNOME/glib/commit/88cb9fe51476cf0591ea9da834cf598c9d97a9eb",
        "files": [
          "glib/libcharset/localcharset.c"
        ],
        "message": "libcharset: Drop a redundant environment variable\n\nIt was used for running tests when we built with autotools, but is no\nlonger used in the Meson build system. If we need something similar in\nfuture, it should be done by adding internal API to override the\ndirectory on a per-call basis, rather than loading a path from a shared\nglobal table every time.\n\nSigned-off-by: Philip Withnall <withnall@endlessm.com>\n\nHelps: #1919",
        "before_after_code_files": [
          "glib/libcharset/localcharset.c||glib/libcharset/localcharset.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "glib/libcharset/localcharset.c||glib/libcharset/localcharset.c"
          ],
          "candidate": [
            "glib/libcharset/localcharset.c||glib/libcharset/localcharset.c"
          ]
        }
      },
      "candidate_diff": {
        "glib/libcharset/localcharset.c||glib/libcharset/localcharset.c": [
          "File: glib/libcharset/localcharset.c -> glib/libcharset/localcharset.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:       const char *base = \"charset.alias\";",
          "118:       char *file_name;",
          "127:       {",
          "",
          "[Removed Lines]",
          "122:       dir = getenv (\"CHARSETALIASDIR\");",
          "123:       if (dir == NULL || dir[0] == '\\0')",
          "124:  dir = relocate (GLIB_CHARSETALIAS_DIR);",
          "",
          "[Added Lines]",
          "120:       dir = relocate (GLIB_CHARSETALIAS_DIR);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d5a84c19c65362f7ea45b4201e2429eaa0fbf199",
      "candidate_info": {
        "commit_hash": "d5a84c19c65362f7ea45b4201e2429eaa0fbf199",
        "repo": "GNOME/glib",
        "commit_url": "https://github.com/GNOME/glib/commit/d5a84c19c65362f7ea45b4201e2429eaa0fbf199",
        "files": [
          "glib/libcharset/localcharset.c"
        ],
        "message": "libcharset: Drop a redundant environment variable\n\nIt was used for running tests when we built with autotools, but is no\nlonger used in the Meson build system. If we need something similar in\nfuture, it should be done by adding internal API to override the\ndirectory on a per-call basis, rather than loading a path from a shared\nglobal table every time.\n\nSigned-off-by: Philip Withnall <withnall@endlessm.com>\n\nHelps: #1919",
        "before_after_code_files": [
          "glib/libcharset/localcharset.c||glib/libcharset/localcharset.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "glib/libcharset/localcharset.c||glib/libcharset/localcharset.c"
          ],
          "candidate": [
            "glib/libcharset/localcharset.c||glib/libcharset/localcharset.c"
          ]
        }
      },
      "candidate_diff": {
        "glib/libcharset/localcharset.c||glib/libcharset/localcharset.c": [
          "File: glib/libcharset/localcharset.c -> glib/libcharset/localcharset.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:       const char *base = \"charset.alias\";",
          "118:       char *file_name;",
          "127:       {",
          "",
          "[Removed Lines]",
          "122:       dir = getenv (\"CHARSETALIASDIR\");",
          "123:       if (dir == NULL || dir[0] == '\\0')",
          "124:  dir = relocate (GLIB_CHARSETALIAS_DIR);",
          "",
          "[Added Lines]",
          "120:       dir = relocate (GLIB_CHARSETALIAS_DIR);",
          "",
          "---------------"
        ]
      }
    }
  ]
}