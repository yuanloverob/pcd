{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c5708b4c39a79512b7ec37a50ddd20e5f45eeba3",
      "candidate_info": {
        "commit_hash": "c5708b4c39a79512b7ec37a50ddd20e5f45eeba3",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/c5708b4c39a79512b7ec37a50ddd20e5f45eeba3",
        "files": [
          "modules/dialog/dlg_timer.c"
        ],
        "message": "dialog: Fix crash in debugging function (debug_main_timer_list())\n\nDBG:dialog:debug_main_timer_list: testing forward loop with visited = 1\nDBG:dialog:debug_main_timer_list: testing backward loop with visited = 2\nDBG:dialog:insert_dlg_timer_unsafe: inserting 0x7f303dba8d80 for 7205\nDBG:dialog:debug_main_timer_list: testing forward loop with visited = 1\nERROR:dialog:debug_main_timer_list: Detected something wrong with main timer list on forward linking for entry 0x7f303dba8d80\nDBG:core:handle_sigs: OpenSIPS exit status = 134\nINFO:core:handle_sigs: child process 139408 exited by a signal 6\n(cherry picked from commit 4c6a8ec5d4ac6e0faceaa5e0acb6863d992f59a7)",
        "before_after_code_files": [
          "modules/dialog/dlg_timer.c||modules/dialog/dlg_timer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/dialog/dlg_timer.c||modules/dialog/dlg_timer.c": [
          "File: modules/dialog/dlg_timer.c -> modules/dialog/dlg_timer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "104: void debug_main_timer_list(void)",
          "105: {",
          "106:  struct dlg_tl *start,*finish;",
          "109:  start = finish = &(d_timer->first);",
          "110:  LM_DBG(\"testing forward loop with visited = %d\\n\",visited);",
          "",
          "[Removed Lines]",
          "107:  int visited=1;",
          "",
          "[Added Lines]",
          "106:  static int visited;",
          "110:  visited++;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0e3b402452ea7ab3e39795d40d1c231883612bd8",
      "candidate_info": {
        "commit_hash": "0e3b402452ea7ab3e39795d40d1c231883612bd8",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/0e3b402452ea7ab3e39795d40d1c231883612bd8",
        "files": [
          "modules/b2b_entities/dlg.c",
          "modules/media_exchange/media_exchange.c",
          "modules/siprec/siprec_logic.c"
        ],
        "message": "b2b_entities: free key returned by client_new\n\nprevent pkg leak of b2b_key returned by client_new\n\n(cherry picked from commit 60043ae3713052614e535371c100a3668c47af8f)",
        "before_after_code_files": [
          "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c",
          "modules/media_exchange/media_exchange.c||modules/media_exchange/media_exchange.c",
          "modules/siprec/siprec_logic.c||modules/siprec/siprec_logic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c": [
          "File: modules/b2b_entities/dlg.c -> modules/b2b_entities/dlg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "260:    LM_ERR(\"No more shared memory\\n\");",
          "261:    if(!safe)",
          "262:     lock_release(&table[hash_index].lock);",
          "263:    return 0;",
          "264:   }",
          "265:   memcpy(dlg->tag[CALLEE_LEG].s, b2b_key->s, b2b_key->len);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "263:    pkg_free(b2b_key);",
          "",
          "---------------"
        ],
        "modules/media_exchange/media_exchange.c||modules/media_exchange/media_exchange.c": [
          "File: modules/media_exchange/media_exchange.c -> modules/media_exchange/media_exchange.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "333:   LM_ERR(\"could not copy b2b client key\\n\");",
          "335:   media_b2b.entity_delete(B2B_CLIENT, b2b_key, msl->dlginfo, 1, 1);",
          "336:   goto release;",
          "337:  }",
          "338:  msl->params = mf;",
          "339:  msl->b2b_entity = B2B_CLIENT;",
          "340:  media_util_release_static();",
          "341:  return 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336:   pkg_free(b2b_key);",
          "340:  pkg_free(b2b_key);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "614:   LM_ERR(\"could not copy b2b client key\\n\");",
          "616:   media_b2b.entity_delete(B2B_CLIENT, b2b_key, msl->dlginfo, 1, 1);",
          "617:   goto unref;",
          "618:  }",
          "619:  msl->b2b_entity = B2B_CLIENT;",
          "620:  return 1;",
          "621: unref:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "619:   pkg_free(b2b_key);",
          "622:  pkg_free(b2b_key);",
          "",
          "---------------"
        ],
        "modules/siprec/siprec_logic.c||modules/siprec/siprec_logic.c": [
          "File: modules/siprec/siprec_logic.c -> modules/siprec/siprec_logic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "406:  sess->b2b_key.s = shm_malloc(client->len);",
          "407:  if (!sess->b2b_key.s) {",
          "408:   LM_ERR(\"out of shm memory!\\n\");",
          "409:   return -1;",
          "410:  }",
          "411:  memcpy(sess->b2b_key.s, client->s, client->len);",
          "412:  sess->b2b_key.len = client->len;",
          "414:  return 0;",
          "415: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "409:   pkg_free(client);",
          "414:  pkg_free(client);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "401c6069c6a3dc61bfe2c95ca949a0f95b710850",
      "candidate_info": {
        "commit_hash": "401c6069c6a3dc61bfe2c95ca949a0f95b710850",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/401c6069c6a3dc61bfe2c95ca949a0f95b710850",
        "files": [
          "modules/mi_script/mi_script.c"
        ],
        "message": "mi_script: fix previous commit\n\nThis is the commit that actually resolves the memory leak\n\nThanks go to @liviuc for reporting this\n\n(cherry picked from commit ad02392053f8fb79f74886ca67f536202e24f1cc)",
        "before_after_code_files": [
          "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c": [
          "File: modules/mi_script/mi_script.c -> modules/mi_script/mi_script.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "559:  } while (ret < 0 && (errno == EINTR || errno == EAGAIN));",
          "560:  if (ret < 0) {",
          "561:   LM_ERR(\"could not notify resume: %s\\n\", strerror(errno));",
          "562:  }",
          "563: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "562:   mi_script_async_job_free(job);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "07a6b2e3e83d992d76ff611bfa485768ed209389",
      "candidate_info": {
        "commit_hash": "07a6b2e3e83d992d76ff611bfa485768ed209389",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/07a6b2e3e83d992d76ff611bfa485768ed209389",
        "files": [
          "modules/clusterer/node_info.c",
          "modules/clusterer/topology.c"
        ],
        "message": "clusterer: make sure a discovered node is not added multiple times\n\nDo not insert a new node into the list multiple times when:\n* receiving multiple CLUSTERER_NODE_DESCRIPTION BIN messages\n* we receive a CLUSTERER_NODE_DESCRIPTION message and the node also\n  appears in CLUSTERER_FULL_TOP_UPDATE messages.\n\n(cherry picked from commit b8e107517fd032f16f16df242a02474efc2312d2)",
        "before_after_code_files": [
          "modules/clusterer/node_info.c||modules/clusterer/node_info.c",
          "modules/clusterer/topology.c||modules/clusterer/topology.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/clusterer/node_info.c||modules/clusterer/node_info.c": [
          "File: modules/clusterer/node_info.c -> modules/clusterer/node_info.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "111:  }",
          "114:  if (!*new_info) {",
          "115:   LM_ERR(\"no more shm memory\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "113:  if (get_node_by_id(cluster, int_vals[INT_VALS_NODE_ID_COL])) {",
          "114:   LM_DBG(\"Node [%d] already exists\\n\", int_vals[INT_VALS_NODE_ID_COL]);",
          "115:   return 0;",
          "116:  }",
          "",
          "---------------"
        ],
        "modules/clusterer/topology.c||modules/clusterer/topology.c": [
          "File: modules/clusterer/topology.c -> modules/clusterer/topology.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "698:   lock_switch_read(cl_list_lock, lock_old_flag);",
          "699:   return NULL;",
          "700:  }",
          "707:  lock_switch_read(cl_list_lock, lock_old_flag);",
          "",
          "[Removed Lines]",
          "701:  if (!new_node) {",
          "702:   LM_ERR(\"Unable to add node info to backing list\\n\");",
          "703:   lock_switch_read(cl_list_lock, lock_old_flag);",
          "704:   return NULL;",
          "705:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "81cb0903aedd2271e9a93789e83e1d96e28352f1",
      "candidate_info": {
        "commit_hash": "81cb0903aedd2271e9a93789e83e1d96e28352f1",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/81cb0903aedd2271e9a93789e83e1d96e28352f1",
        "files": [
          "modules/b2b_entities/dlg.c"
        ],
        "message": "b2b_entities: properly handle unexpected ACKs\n\nFixes an issue where a 487 reply is not relayed after an unexpected ACK is\nreceived following a CANCEL.\n\nThanks to David Escartin from Sonoc for reporting.",
        "before_after_code_files": [
          "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c": [
          "File: modules/b2b_entities/dlg.c -> modules/b2b_entities/dlg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "487:    dlg->state= B2B_TERMINATED;",
          "488:    break;",
          "489:   case METHOD_ACK:",
          "491:     dlg->state= B2B_ESTABLISHED;",
          "492:    break;",
          "493:   default:",
          "",
          "[Removed Lines]",
          "490:    if (dlg->state != B2B_MODIFIED || !dlg->uac_tran)",
          "",
          "[Added Lines]",
          "490:    if (dlg->state == B2B_CONFIRMED)",
          "",
          "---------------"
        ]
      }
    }
  ]
}