{
  "cve_id": "CVE-2023-48014",
  "cve_desc": "GPAC v2.3-DEV-rev566-g50c2ab06f-master was discovered to contain a stack overflow via the hevc_parse_vps_extension function at /media_tools/av_parsers.c.",
  "repo": "gpac/gpac",
  "patch_hash": "66abf0887c89c29a484d9e65e70882794e9e3a1b",
  "patch_info": {
    "commit_hash": "66abf0887c89c29a484d9e65e70882794e9e3a1b",
    "repo": "gpac/gpac",
    "commit_url": "https://github.com/gpac/gpac/commit/66abf0887c89c29a484d9e65e70882794e9e3a1b",
    "files": [
      "src/media_tools/av_parsers.c"
    ],
    "message": "Fixed #2613",
    "before_after_code_files": [
      "src/media_tools/av_parsers.c||src/media_tools/av_parsers.c"
    ]
  },
  "patch_diff": {
    "src/media_tools/av_parsers.c||src/media_tools/av_parsers.c": [
      "File: src/media_tools/av_parsers.c -> src/media_tools/av_parsers.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "7726:   }",
      "7728:   if (splitting_flag) {",
      "7730:     dim_bit_offset[i] = 0;",
      "7731:     for (j = 0; j < i; j++)",
      "7732:      dim_bit_offset[i] += dimension_id_len[j];",
      "7733:    }",
      "7736:   }",
      "7737:  }",
      "",
      "[Removed Lines]",
      "7729:    for (i = 0; i < num_scalability_types; i++) {",
      "7734:    dimension_id_len[num_scalability_types - 1] = 1 + (5 - dim_bit_offset[num_scalability_types - 1]);",
      "7735:    dim_bit_offset[num_scalability_types] = 6;",
      "",
      "[Added Lines]",
      "7729:    u32 num_bits=0;",
      "7730:    for (i = 0; i < num_scalability_types-1; i++) {",
      "7732:     num_bits+=dimension_id_len[i];",
      "7736:    if (num_bits>=6) {",
      "7737:     GF_LOG(GF_LOG_ERROR, GF_LOG_CODING, (\"[HEVC] Too many its defined for dimension IDs (%d vs 5 max)\\n\", num_bits));",
      "7738:     return -1;",
      "7739:    }",
      "7740:    dimension_id_len[num_scalability_types - 1] = 6 - num_bits; //1 + (5 - dim_bit_offset[num_scalability_types - 1]);",
      "7741:    dim_bit_offset[num_scalability_types - 1] = 6;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1b5a57bd978c5ba041e2a1931717cb1a519dba54",
      "candidate_info": {
        "commit_hash": "1b5a57bd978c5ba041e2a1931717cb1a519dba54",
        "repo": "gpac/gpac",
        "commit_url": "https://github.com/gpac/gpac/commit/1b5a57bd978c5ba041e2a1931717cb1a519dba54",
        "files": [
          "src/media_tools/av_parsers.c"
        ],
        "message": "fixed potential undefined shift parsing broken hevc vps",
        "before_after_code_files": [
          "src/media_tools/av_parsers.c||src/media_tools/av_parsers.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/media_tools/av_parsers.c||src/media_tools/av_parsers.c"
          ],
          "candidate": [
            "src/media_tools/av_parsers.c||src/media_tools/av_parsers.c"
          ]
        }
      },
      "candidate_diff": {
        "src/media_tools/av_parsers.c||src/media_tools/av_parsers.c": [
          "File: src/media_tools/av_parsers.c -> src/media_tools/av_parsers.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7765:      dim_bit_offset[i] += dimension_id_len[j];",
          "7766:    }",
          "7767:    if (num_bits>=6) {",
          "7770:    }",
          "7771:    dimension_id_len[num_scalability_types - 1] = 6 - num_bits; //1 + (5 - dim_bit_offset[num_scalability_types - 1]);",
          "7772:    dim_bit_offset[num_scalability_types - 1] = 6;",
          "",
          "[Removed Lines]",
          "7768:     GF_LOG(GF_LOG_ERROR, GF_LOG_CODING, (\"[HEVC] Too many its defined for dimension IDs (%d vs 5 max)\\n\", num_bits));",
          "7769:     return -1;",
          "",
          "[Added Lines]",
          "7768:     GF_LOG(GF_LOG_ERROR, GF_LOG_CODING, (\"[HEVC] Too many bits defined for dimension IDs (%d vs 5 max)\\n\", num_bits));",
          "7769:     return GF_FALSE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7786:   if (vps->layer_id_in_nuh[i] >= MAX_LHVC_LAYERS) {",
          "7787:    GF_LOG(GF_LOG_ERROR, GF_LOG_CODING, (\"[HEVC] %d layers in VPS ext but only %d supported in GPAC\\n\", 1+vps->layer_id_in_nuh[i], MAX_LHVC_LAYERS));",
          "7788:    vps->layer_id_in_nuh[i] = 0;",
          "7790:   }",
          "7791:   vps->layer_id_in_vps[vps->layer_id_in_nuh[i]] = i;",
          "",
          "[Removed Lines]",
          "7789:    return -1;",
          "",
          "[Added Lines]",
          "7789:    return GF_FALSE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7798:  }",
          "7800:  if (splitting_flag) {",
          "7801:   for (i = 0; i < vps->max_layers; i++)",
          "7804:  }",
          "7805:  else {",
          "7806:   for (j = 0; j < num_scalability_types; j++)",
          "",
          "[Removed Lines]",
          "7802:    for (j = 0; j < num_scalability_types; j++)",
          "7803:     vps->dimension_id[i][j] = ((vps->layer_id_in_nuh[i] & ((1 << dim_bit_offset[j + 1]) - 1)) >> dim_bit_offset[j]);",
          "",
          "[Added Lines]",
          "7801:   if (num_scalability_types==16)",
          "7802:    return GF_FALSE;",
          "7804:    for (j = 0; j < num_scalability_types; j++) {",
          "7805:     if (dim_bit_offset[j + 1] <= 31)",
          "7806:      vps->dimension_id[i][j] = ((vps->layer_id_in_nuh[i] & ((1 << dim_bit_offset[j + 1]) - 1)) >> dim_bit_offset[j]);",
          "7807:     else",
          "7808:      return GF_FALSE;",
          "7809:    }",
          "",
          "---------------"
        ]
      }
    }
  ]
}