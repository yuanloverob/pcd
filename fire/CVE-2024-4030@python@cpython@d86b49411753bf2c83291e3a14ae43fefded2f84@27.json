{
  "cve_id": "CVE-2024-4030",
  "cve_desc": "On Windows a directory returned by tempfile.mkdtemp() would not always have permissions set to restrict reading and writing to the temporary directory by other users, instead usually inheriting the correct permissions from the default location. Alternate configurations or users without a profile directory may not have the intended permissions.\n\nIf you\u2019re not using Windows or haven\u2019t changed the temporary directory location then you aren\u2019t affected by this vulnerability. On other platforms the returned directory is consistently readable and writable only by the current user.\n\nThis issue was caused by Python not supporting Unix permissions on Windows. The fix adds support for Unix \u201c700\u201d for the mkdir function on Windows which is used by mkdtemp() to ensure the newly created directory has the proper permissions.",
  "repo": "python/cpython",
  "patch_hash": "d86b49411753bf2c83291e3a14ae43fefded2f84",
  "patch_info": {
    "commit_hash": "d86b49411753bf2c83291e3a14ae43fefded2f84",
    "repo": "python/cpython",
    "commit_url": "https://github.com/python/cpython/commit/d86b49411753bf2c83291e3a14ae43fefded2f84",
    "files": [
      "Doc/whatsnew/3.13.rst",
      "Misc/NEWS.d/next/Security/2024-05-01-20-57-09.gh-issue-118486.K44KJG.rst"
    ],
    "message": "gh-118486: Update docs for CVE-2024-4030 reference (GH-118737)\n\nUpdate docs for CVE-2024-4030 reference",
    "before_after_code_files": []
  },
  "patch_diff": {},
  "candidates": [
    {
      "candidate_hash": "9d3de7b0edf46cc0f6aed586111464b2ad581f5a",
      "candidate_info": {
        "commit_hash": "9d3de7b0edf46cc0f6aed586111464b2ad581f5a",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/9d3de7b0edf46cc0f6aed586111464b2ad581f5a",
        "files": [
          "Include/internal/pycore_ceval.h",
          "Tools/tsan/suppressions_free_threading.txt"
        ],
        "message": "[3.13] gh-117657: Fix TSAN reported race in `_PyEval_IsGILEnabled`. (GH-119921) (#119939)\n\nThe GIL may be disabled concurrently with this call so we need to use a\nrelaxed atomic load.\n(cherry picked from commit f3b89a63cbb6d46e5ed40d5cd9813cdf9189ce35)\n\nCo-authored-by: Sam Gross <colesbury@gmail.com>",
        "before_after_code_files": [
          "Include/internal/pycore_ceval.h||Include/internal/pycore_ceval.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Include/internal/pycore_ceval.h||Include/internal/pycore_ceval.h": [
          "File: Include/internal/pycore_ceval.h -> Include/internal/pycore_ceval.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "145: static inline int",
          "146: _PyEval_IsGILEnabled(PyThreadState *tstate)",
          "147: {",
          "149: }",
          "",
          "[Removed Lines]",
          "148:     return tstate->interp->ceval.gil->enabled != 0;",
          "",
          "[Added Lines]",
          "148:     struct _gil_runtime_state *gil = tstate->interp->ceval.gil;",
          "149:     return _Py_atomic_load_int_relaxed(&gil->enabled) != 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ef9fd10670f70c3c26bd1f9eba48cf26229f9052",
      "candidate_info": {
        "commit_hash": "ef9fd10670f70c3c26bd1f9eba48cf26229f9052",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/ef9fd10670f70c3c26bd1f9eba48cf26229f9052",
        "files": [
          "Makefile.pre.in"
        ],
        "message": "[3.13] gh-119538: Add missing expat build dependencies (GH-119647) (#119685)\n\nxmltok_impl.c and xmltok_ns.c are _included_ in xmltok.c by the C\npre-processor.\n\n(cherry picked from commit 606be663622c6784aed4ffa55b877adbd6fe8e54)\n\nCo-authored-by: Erlend E. Aasland <erlend@python.org>",
        "before_after_code_files": [
          "Makefile.pre.in||Makefile.pre.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.pre.in||Makefile.pre.in": [
          "File: Makefile.pre.in -> Makefile.pre.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "631:   Modules/expat/utf8tab.h \\",
          "632:   Modules/expat/xmlrole.h \\",
          "633:   Modules/expat/xmltok.h \\",
          "636: ##########################################################################",
          "637: # hashlib's HACL* library",
          "",
          "[Removed Lines]",
          "634:   Modules/expat/xmltok_impl.h",
          "",
          "[Added Lines]",
          "634:   Modules/expat/xmltok_impl.h \\",
          "635:   Modules/expat/xmltok_impl.c \\",
          "636:   Modules/expat/xmltok_ns.c",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "571cefd8c7933f4917739dde43171558f109d63c",
      "candidate_info": {
        "commit_hash": "571cefd8c7933f4917739dde43171558f109d63c",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/571cefd8c7933f4917739dde43171558f109d63c",
        "files": [
          "Parser/string_parser.c"
        ],
        "message": "[3.13] gh-120155: Fix Coverity issue in parse_string() (GH-120997) (#121005)\n\ngh-120155: Fix Coverity issue in parse_string() (GH-120997)\n(cherry picked from commit 769aea332940f03c3e5b1ad9badd6635c1ac992a)\n\nCo-authored-by: Victor Stinner <vstinner@python.org>",
        "before_after_code_files": [
          "Parser/string_parser.c||Parser/string_parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Parser/string_parser.c||Parser/string_parser.c": [
          "File: Parser/string_parser.c -> Parser/string_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "229:         PyErr_BadInternalCall();",
          "230:         return NULL;",
          "231:     }",
          "233:     s++;",
          "234:     len = strlen(s);",
          "235:     if (len > INT_MAX) {",
          "236:         PyErr_SetString(PyExc_OverflowError, \"string to parse is too long\");",
          "237:         return NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "238:     assert(len >= 1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7303cd96742cf6ae3dedc4e3d5211140922186f",
      "candidate_info": {
        "commit_hash": "f7303cd96742cf6ae3dedc4e3d5211140922186f",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/f7303cd96742cf6ae3dedc4e3d5211140922186f",
        "files": [
          "Lib/idlelib/config.py",
          "Lib/idlelib/pyshell.py",
          "Lib/idlelib/util.py",
          "Lib/turtledemo/__main__.py",
          "Misc/NEWS.d/next/Library/2024-05-19-18-49-04.gh-issue-119174.5GTv7d.rst"
        ],
        "message": "[3.13] gh-119174: Fix high DPI causes turtledemo(turtle-graphics examples) windows blurry (GH-119175) (#119289)\n\ngh-119174: Fix high DPI causes turtledemo(turtle-graphics examples) windows blurry (GH-119175)\n\n------\n\n(cherry picked from commit 538ed5e4818aa0d0aa759634e8bfa23e317434a1)\n\nCo-authored-by: Wulian233 <71213467+Wulian233@users.noreply.github.com>",
        "before_after_code_files": [
          "Lib/idlelib/config.py||Lib/idlelib/config.py",
          "Lib/idlelib/pyshell.py||Lib/idlelib/pyshell.py",
          "Lib/idlelib/util.py||Lib/idlelib/util.py",
          "Lib/turtledemo/__main__.py||Lib/turtledemo/__main__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Lib/idlelib/config.py||Lib/idlelib/config.py": [
          "File: Lib/idlelib/config.py -> Lib/idlelib/config.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "158:         self.defaultCfg = {}",
          "159:         self.userCfg = {}",
          "160:         self.cfg = {}  # TODO use to select userCfg vs defaultCfg",
          "161:         # self.blink_off_time = <first editor text>['insertofftime']",
          "164:         if not _utest:",
          "165:             self.CreateConfigHandlers()",
          "",
          "[Removed Lines]",
          "162:         # See https://bugs.python.org/issue4630#msg356516.",
          "",
          "[Added Lines]",
          "162:         # See https://bugs.python.org/issue4630#msg356516 for following.",
          "",
          "---------------"
        ],
        "Lib/idlelib/pyshell.py||Lib/idlelib/pyshell.py": [
          "File: Lib/idlelib/pyshell.py -> Lib/idlelib/pyshell.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:           \"Your Python may not be configured for Tk. **\", file=sys.__stderr__)",
          "12:     raise SystemExit(1)",
          "16: if sys.platform == 'win32':",
          "24: from tkinter import messagebox",
          "",
          "[Removed Lines]",
          "14: # Valid arguments for the ...Awareness call below are defined in the following.",
          "15: # https://msdn.microsoft.com/en-us/library/windows/desktop/dn280512(v=vs.85).aspx",
          "17:     try:",
          "18:         import ctypes",
          "19:         PROCESS_SYSTEM_DPI_AWARE = 1  # Int required.",
          "20:         ctypes.OleDLL('shcore').SetProcessDpiAwareness(PROCESS_SYSTEM_DPI_AWARE)",
          "21:     except (ImportError, AttributeError, OSError):",
          "22:         pass",
          "",
          "[Added Lines]",
          "15:     from idlelib.util import fix_win_hidpi",
          "16:     fix_win_hidpi()",
          "",
          "---------------"
        ],
        "Lib/idlelib/util.py||Lib/idlelib/util.py": [
          "File: Lib/idlelib/util.py -> Lib/idlelib/util.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: \"\"\"",
          "16: # .pyw is for Windows; .pyi is for typing stub files.",
          "17: # The extension order is needed for iomenu open/save dialogs.",
          "18: py_extensions = ('.py', '.pyw', '.pyi')",
          "20: if __name__ == '__main__':",
          "21:     from unittest import main",
          "22:     main('idlelib.idle_test.test_util', verbosity=2)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: import sys",
          "22: # Fix for HiDPI screens on Windows.  CALL BEFORE ANY TK OPERATIONS!",
          "23: # URL for arguments for the ...Awareness call below.",
          "24: # https://msdn.microsoft.com/en-us/library/windows/desktop/dn280512(v=vs.85).aspx",
          "25: if sys.platform == 'win32':  # pragma: no cover",
          "26:     def fix_win_hidpi():  # Called in pyshell and turtledemo.",
          "27:         try:",
          "28:             import ctypes",
          "29:             PROCESS_SYSTEM_DPI_AWARE = 1  # Int required.",
          "30:             ctypes.OleDLL('shcore').SetProcessDpiAwareness(PROCESS_SYSTEM_DPI_AWARE)",
          "31:         except (ImportError, AttributeError, OSError):",
          "32:             pass",
          "",
          "---------------"
        ],
        "Lib/turtledemo/__main__.py||Lib/turtledemo/__main__.py": [
          "File: Lib/turtledemo/__main__.py -> Lib/turtledemo/__main__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "92: from idlelib.colorizer import ColorDelegator, color_config",
          "93: from idlelib.percolator import Percolator",
          "94: from idlelib.textview import view_text",
          "95: from turtledemo import __doc__ as about_turtledemo",
          "99: demo_dir = os.path.dirname(os.path.abspath(__file__))",
          "100: darwin = sys.platform == 'darwin'",
          "102: STARTUP = 1",
          "103: READY = 2",
          "104: RUNNING = 3",
          "",
          "[Removed Lines]",
          "97: import turtle",
          "",
          "[Added Lines]",
          "95: import turtle",
          "98: if sys.platform == 'win32':",
          "99:     from idlelib.util import fix_win_hidpi",
          "100:     fix_win_hidpi()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7b413952e817ae87bfda2ac85dd84d30a6ce743b",
      "candidate_info": {
        "commit_hash": "7b413952e817ae87bfda2ac85dd84d30a6ce743b",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/7b413952e817ae87bfda2ac85dd84d30a6ce743b",
        "files": [
          "Include/patchlevel.h",
          "Lib/pydoc_data/topics.py",
          "Misc/NEWS.d/3.13.0b3.rst",
          "Misc/NEWS.d/next/Build/2024-06-09-15-54-22.gh-issue-120291.IpfHzE.rst",
          "Misc/NEWS.d/next/Build/2024-06-11-00-38-05.gh-issue-120326.JHSDF1.rst",
          "Misc/NEWS.d/next/Build/2024-06-19-21-05-15.gh-issue-120602.UyDARz.rst",
          "Misc/NEWS.d/next/Build/2024-06-21-09-24-03.gh-issue-120671.Z8sBQB.rst",
          "Misc/NEWS.d/next/C API/2024-04-10-16-48-04.gh-issue-117511.RZtBRK.rst",
          "Misc/NEWS.d/next/C API/2024-05-08-21-57-50.gh-issue-118789.Ni4UQx.rst",
          "Misc/NEWS.d/next/C API/2024-05-21-19-41-41.gh-issue-119344.QKvzQb.rst",
          "Misc/NEWS.d/next/C API/2024-06-19-21-27-42.gh-issue-120642.UlKClN.rst",
          "Misc/NEWS.d/next/C API/2024-06-21-16-41-21.gh-issue-120858.Z5_-Mn.rst",
          "Misc/NEWS.d/next/C API/2024-06-26-11-29-01.gh-issue-120642.H7P9qK.rst",
          "Misc/NEWS.d/next/Core and Builtins/2018-10-09-15-14-53.bpo-24766.c_C1Wc.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-03-13-48-44.gh-issue-119933.Kc0HG5.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-07-16-09-04.gh-issue-120225.kuYf9t.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-09-19-13-38.gh-issue-119666.S0G4rZ.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-10-10-42-48.gh-issue-120298.napREA.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-10-15-07-16.gh-issue-120198.WW_pjO.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-10-22-30-26.gh-issue-93691.68WOTS.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-11-12-47-54.gh-issue-120346.hhn_6X.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-11-17-56-12.gh-issue-120221.si9hM9.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-12-12-29-45.gh-issue-120400.lZYHVS.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-12-18-23-15.gh-issue-120380.edtqjq.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-12-18-50-29.gh-issue-120367.LmXx2y.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-13-12-17-52.gh-issue-120384.w1UBGl.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-14-22-02-25.gh-issue-113993.MiA0vX.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-18-21-34-30.gh-issue-120367.zDwffP.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-18-22-41-05.gh-issue-120722.rS7tkE.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-19-01-58-54.gh-issue-120437.nCkIoI.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-19-11-10-50.gh-issue-119462.DpcqSe.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-26-13-42-36.gh-issue-113433.xKAtLB.rst",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-26-14-09-31.gh-issue-120838.nFeTL9.rst",
          "Misc/NEWS.d/next/Library/2024-05-24-14-32-24.gh-issue-119506.-nMNqq.rst",
          "Misc/NEWS.d/next/Library/2024-05-25-10-40-38.gh-issue-118908.XcZiq4.rst",
          "Misc/NEWS.d/next/Library/2024-05-29-21-50-05.gh-issue-119577.S3BlKJ.rst",
          "Misc/NEWS.d/next/Library/2024-06-02-13-35-11.gh-issue-81936.ETeW9x.rst",
          "Misc/NEWS.d/next/Library/2024-06-04-08-57-02.gh-issue-65454.o9j4wF.rst",
          "Misc/NEWS.d/next/Library/2024-06-04-19-03-25.gh-issue-112672.K2XfZH.rst",
          "Misc/NEWS.d/next/Library/2024-06-05-08-02-46.gh-issue-120108.4U9BL8.rst",
          "Misc/NEWS.d/next/Library/2024-06-05-11-39-21.gh-issue-119933.ooJXQV.rst",
          "Misc/NEWS.d/next/Library/2024-06-05-16-30-28.gh-issue-120121.9dz8i7.rst",
          "Misc/NEWS.d/next/Library/2024-06-06-12-07-57.gh-issue-119698.rRrprk.rst",
          "Misc/NEWS.d/next/Library/2024-06-06-17-24-43.gh-issue-120161.DahNXV.rst",
          "Misc/NEWS.d/next/Library/2024-06-07-11-23-31.gh-issue-71587.IjFajE.rst",
          "Misc/NEWS.d/next/Library/2024-06-07-13-21-11.gh-issue-120211.Rws_gf.rst",
          "Misc/NEWS.d/next/Library/2024-06-08-09-45-31.gh-issue-120244.8o9Dzr.rst",
          "Misc/NEWS.d/next/Library/2024-06-08-14-36-40.gh-issue-120268.MNpd1q.rst",
          "Misc/NEWS.d/next/Library/2024-06-08-15-15-29.gh-issue-114053.WQLAFG.rst",
          "Misc/NEWS.d/next/Library/2024-06-08-15-46-35.gh-issue-114053.Ub2XgJ.rst",
          "Misc/NEWS.d/next/Library/2024-06-10-14-00-40.gh-issue-119600.jJMf4C.rst",
          "Misc/NEWS.d/next/Library/2024-06-11-16-34-41.gh-issue-120343.hdiXeU.rst",
          "Misc/NEWS.d/next/Library/2024-06-12-10-00-31.gh-issue-90425.5CfkKG.rst",
          "Misc/NEWS.d/next/Library/2024-06-12-11-54-05.gh-issue-120381.O-BNLs.rst",
          "Misc/NEWS.d/next/Library/2024-06-14-20-05-25.gh-issue-120495.OxgZKB.rst",
          "Misc/NEWS.d/next/Library/2024-06-15-12-04-46.gh-issue-120541.d3cc5y.rst",
          "Misc/NEWS.d/next/Library/2024-06-17-20-04-13.gh-issue-120633.kZC5wt.rst",
          "Misc/NEWS.d/next/Library/2024-06-18-19-18-10.gh-issue-120683.xmRez7.rst",
          "Misc/NEWS.d/next/Library/2024-06-19-15-06-58.gh-issue-120732.OvYV9b.rst",
          "Misc/NEWS.d/next/Library/2024-06-20-01-31-24.gh-issue-120769.PfiMrc.rst",
          "Misc/NEWS.d/next/Library/2024-06-21-14-32-56.gh-issue-120811.eBmVTV.rst",
          "Misc/NEWS.d/next/Library/2024-06-22-22-23-56.gh-issue-101830.1BAoxH.rst",
          "Misc/NEWS.d/next/Library/2024-06-22-22-52-24.gh-issue-120888.sd8I3N.rst",
          "Misc/NEWS.d/next/Library/2024-06-23-11-21-27.gh-issue-120910.t0QXdB.rst",
          "Misc/NEWS.d/next/Library/2024-06-23-17-50-40.gh-issue-119614.vwPGLB.rst",
          "Misc/NEWS.d/next/Library/2024-06-26-03-04-24.gh-issue-121018.clVSc4.rst",
          "Misc/NEWS.d/next/Library/2024-06-26-10-13-40.gh-issue-121025.M-XXlV.rst",
          "Misc/NEWS.d/next/Library/2024-06-27-13-47-14.gh-issue-121027.jh55EC.rst",
          "README.rst"
        ],
        "message": "Python 3.13.0b3",
        "before_after_code_files": [
          "Include/patchlevel.h||Include/patchlevel.h",
          "Lib/pydoc_data/topics.py||Lib/pydoc_data/topics.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Include/patchlevel.h||Include/patchlevel.h": [
          "File: Include/patchlevel.h -> Include/patchlevel.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: #define PY_MINOR_VERSION        13",
          "21: #define PY_MICRO_VERSION        0",
          "22: #define PY_RELEASE_LEVEL        PY_RELEASE_LEVEL_BETA",
          "",
          "[Removed Lines]",
          "23: #define PY_RELEASE_SERIAL       2",
          "26: #define PY_VERSION              \"3.13.0b2+\"",
          "",
          "[Added Lines]",
          "23: #define PY_RELEASE_SERIAL       3",
          "26: #define PY_VERSION              \"3.13.0b3\"",
          "",
          "---------------"
        ],
        "Lib/pydoc_data/topics.py||Lib/pydoc_data/topics.py": [
          "File: Lib/pydoc_data/topics.py -> Lib/pydoc_data/topics.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # -*- coding: utf-8 -*-",
          "3: # as part of the release process.",
          "4: topics = {'assert': 'The \"assert\" statement\\n'",
          "5:            '**********************\\n'",
          "",
          "[Removed Lines]",
          "2: # Autogenerated by Sphinx on Wed Jun  5 16:43:53 2024",
          "",
          "[Added Lines]",
          "2: # Autogenerated by Sphinx on Thu Jun 27 15:02:53 2024",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "362:                'a single\\n'",
          "363:                'target is allowed.\\n'",
          "364:                '\\n'",
          "378:                'evaluated\\n'",
          "380:                '\\n'",
          "381:                'If a name is annotated in a function scope, then this name is '",
          "382:                'local\\n'",
          "",
          "[Removed Lines]",
          "365:                'For simple names as assignment targets, if in class or module '",
          "366:                'scope,\\n'",
          "367:                'the annotations are evaluated and stored in a special class or '",
          "368:                'module\\n'",
          "369:                'attribute \"__annotations__\" that is a dictionary mapping from '",
          "370:                'variable\\n'",
          "371:                'names (mangled if private) to evaluated annotations. This '",
          "372:                'attribute is\\n'",
          "373:                'writable and is automatically created at the start of class or '",
          "374:                'module\\n'",
          "375:                'body execution, if annotations are found statically.\\n'",
          "376:                '\\n'",
          "377:                'For expressions as assignment targets, the annotations are '",
          "379:                'if in class or module scope, but not stored.\\n'",
          "",
          "[Added Lines]",
          "365:                'The assignment target is considered \u201csimple\u201d if it consists of '",
          "366:                'a\\n'",
          "367:                'single name that is not enclosed in parentheses. For simple '",
          "368:                'assignment\\n'",
          "369:                'targets, if in class or module scope, the annotations are '",
          "371:                'and stored in a special class or module attribute '",
          "372:                '\"__annotations__\"\\n'",
          "373:                'that is a dictionary mapping from variable names (mangled if '",
          "374:                'private)\\n'",
          "375:                'to evaluated annotations. This attribute is writable and is\\n'",
          "376:                'automatically created at the start of class or module body '",
          "377:                'execution,\\n'",
          "378:                'if annotations are found statically.\\n'",
          "379:                '\\n'",
          "380:                'If the assignment target is not simple (an attribute, '",
          "381:                'subscript node,\\n'",
          "382:                'or parenthesized name), the annotation is evaluated if in '",
          "383:                'class or\\n'",
          "384:                'module scope, but not stored.\\n'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2388:              'An\\n'",
          "2389:              'expression-less \"except\" clause, if present, must be last; it '",
          "2390:              'matches\\n'",
          "2403:              '\\n'",
          "2404:              'If no \"except\" clause matches the exception, the search for an\\n'",
          "2405:              'exception handler continues in the surrounding code and on the\\n'",
          "",
          "[Removed Lines]",
          "2391:              'any exception. For an \"except\" clause with an expression, that\\n'",
          "2392:              'expression is evaluated, and the clause matches the exception if '",
          "2393:              'the\\n'",
          "2394:              'resulting object is \u201ccompatible\u201d with the exception.  An object '",
          "2395:              'is\\n'",
          "2396:              'compatible with an exception if the object is the class or a '",
          "2397:              '*non-\\n'",
          "2398:              'virtual base class* of the exception object, or a tuple '",
          "2399:              'containing an\\n'",
          "2400:              'item that is the class or a non-virtual base class of the '",
          "2401:              'exception\\n'",
          "2402:              'object.\\n'",
          "",
          "[Added Lines]",
          "2396:              'any exception.\\n'",
          "2397:              '\\n'",
          "2398:              'For an \"except\" clause with an expression, the expression must\\n'",
          "2399:              'evaluate to an exception type or a tuple of exception types. '",
          "2400:              'The\\n'",
          "2401:              'raised exception matches an \"except\" clause whose expression '",
          "2402:              'evaluates\\n'",
          "2403:              'to the class or a *non-virtual base class* of the exception '",
          "2404:              'object, or\\n'",
          "2405:              'to a tuple that contains such a class.\\n'",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2548:              '   ...\\n'",
          "2549:              \"   ExceptionGroup('', (BlockingIOError()))\\n\"",
          "2550:              '\\n'",
          "2558:              '\\n'",
          "2559:              '\\n'",
          "2560:              '\"else\" clause\\n'",
          "",
          "[Removed Lines]",
          "2551:              'An \"except*\" clause must have a matching type, and this type '",
          "2552:              'cannot be\\n'",
          "2553:              'a subclass of \"BaseExceptionGroup\". It is not possible to mix '",
          "2554:              '\"except\"\\n'",
          "2555:              'and \"except*\" in the same \"try\". \"break\", \"continue\" and '",
          "2556:              '\"return\"\\n'",
          "2557:              'cannot appear in an \"except*\" clause.\\n'",
          "",
          "[Added Lines]",
          "2554:              'An \"except*\" clause must have a matching expression; it cannot '",
          "2555:              'be\\n'",
          "2556:              '\"except*:\". Furthermore, this expression cannot contain '",
          "2557:              'exception\\n'",
          "2558:              'group types, because that would have ambiguous semantics.\\n'",
          "2559:              '\\n'",
          "2560:              'It is not possible to mix \"except\" and \"except*\" in the same '",
          "2561:              '\"try\".\\n'",
          "2562:              '\"break\", \"continue\" and \"return\" cannot appear in an \"except*\" '",
          "2563:              'clause.\\n'",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4536:                   '   It is not guaranteed that \"__del__()\" methods are called '",
          "4537:                   'for\\n'",
          "4538:                   '   objects that still exist when the interpreter exits.\\n'",
          "4539:                   '\\n'",
          "4540:                   '   Note:\\n'",
          "4541:                   '\\n'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4545:                   '   \"weakref.finalize\" provides a straightforward way to '",
          "4546:                   'register a\\n'",
          "4547:                   '   cleanup function to be called when an object is garbage '",
          "4548:                   'collected.\\n'",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "9995:                  '   It is not guaranteed that \"__del__()\" methods are called '",
          "9996:                  'for\\n'",
          "9997:                  '   objects that still exist when the interpreter exits.\\n'",
          "9998:                  '\\n'",
          "9999:                  '   Note:\\n'",
          "10000:                  '\\n'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10008:                  '   \"weakref.finalize\" provides a straightforward way to '",
          "10009:                  'register a\\n'",
          "10010:                  '   cleanup function to be called when an object is garbage '",
          "10011:                  'collected.\\n'",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "13489:         'clauses in turn until one is found that matches the exception. An\\n'",
          "13490:         'expression-less \"except\" clause, if present, must be last; it '",
          "13491:         'matches\\n'",
          "13500:         '\\n'",
          "13501:         'If no \"except\" clause matches the exception, the search for an\\n'",
          "13502:         'exception handler continues in the surrounding code and on the\\n'",
          "",
          "[Removed Lines]",
          "13492:         'any exception. For an \"except\" clause with an expression, that\\n'",
          "13493:         'expression is evaluated, and the clause matches the exception if the\\n'",
          "13494:         'resulting object is \u201ccompatible\u201d with the exception.  An object is\\n'",
          "13495:         'compatible with an exception if the object is the class or a *non-\\n'",
          "13496:         'virtual base class* of the exception object, or a tuple containing '",
          "13497:         'an\\n'",
          "13498:         'item that is the class or a non-virtual base class of the exception\\n'",
          "13499:         'object.\\n'",
          "",
          "[Added Lines]",
          "13506:         'any exception.\\n'",
          "13507:         '\\n'",
          "13508:         'For an \"except\" clause with an expression, the expression must\\n'",
          "13509:         'evaluate to an exception type or a tuple of exception types. The\\n'",
          "13510:         'raised exception matches an \"except\" clause whose expression '",
          "13511:         'evaluates\\n'",
          "13512:         'to the class or a *non-virtual base class* of the exception object, '",
          "13513:         'or\\n'",
          "13514:         'to a tuple that contains such a class.\\n'",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "13625:         '   ...\\n'",
          "13626:         \"   ExceptionGroup('', (BlockingIOError()))\\n\"",
          "13627:         '\\n'",
          "13634:         '\\n'",
          "13635:         '\\n'",
          "13636:         '\"else\" clause\\n'",
          "",
          "[Removed Lines]",
          "13628:         'An \"except*\" clause must have a matching type, and this type cannot '",
          "13629:         'be\\n'",
          "13630:         'a subclass of \"BaseExceptionGroup\". It is not possible to mix '",
          "13631:         '\"except\"\\n'",
          "13632:         'and \"except*\" in the same \"try\". \"break\", \"continue\" and \"return\"\\n'",
          "13633:         'cannot appear in an \"except*\" clause.\\n'",
          "",
          "[Added Lines]",
          "13643:         'An \"except*\" clause must have a matching expression; it cannot be\\n'",
          "13644:         '\"except*:\". Furthermore, this expression cannot contain exception\\n'",
          "13645:         'group types, because that would have ambiguous semantics.\\n'",
          "13646:         '\\n'",
          "13647:         'It is not possible to mix \"except\" and \"except*\" in the same \"try\".\\n'",
          "13648:         '\"break\", \"continue\" and \"return\" cannot appear in an \"except*\" '",
          "13649:         'clause.\\n'",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "16085:              '\\n'",
          "16086:              'Notes:\\n'",
          "16087:              '\\n'",
          "16089:              '\\n'",
          "16090:              '2. The optional argument *i* defaults to \"-1\", so that by '",
          "16091:              'default the\\n'",
          "",
          "[Removed Lines]",
          "16088:              '1. *t* must have the same length as the slice it is replacing.\\n'",
          "",
          "[Added Lines]",
          "16104:              '1. If *k* is not equal to \"1\", *t* must have the same length as '",
          "16105:              'the\\n'",
          "16106:              '   slice it is replacing.\\n'",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "16549:                      '\\n'",
          "16550:                      'Notes:\\n'",
          "16551:                      '\\n'",
          "16554:                      '\\n'",
          "16555:                      '2. The optional argument *i* defaults to \"-1\", so that '",
          "16556:                      'by default the\\n'",
          "",
          "[Removed Lines]",
          "16552:                      '1. *t* must have the same length as the slice it is '",
          "16553:                      'replacing.\\n'",
          "",
          "[Added Lines]",
          "16570:                      '1. If *k* is not equal to \"1\", *t* must have the same '",
          "16571:                      'length as the\\n'",
          "16572:                      '   slice it is replacing.\\n'",
          "",
          "---------------"
        ]
      }
    }
  ]
}