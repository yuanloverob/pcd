{
  "cve_id": "CVE-2022-41860",
  "cve_desc": "In freeradius, when an EAP-SIM supplicant sends an unknown SIM option, the server will try to look that option up in the internal dictionaries. This lookup will fail, but the SIM code will not check for that failure. Instead, it will dereference a NULL pointer, and cause the server to crash.",
  "repo": "FreeRADIUS/freeradius-server",
  "patch_hash": "f1cdbb33ec61c4a64a32e107d4d02f936051c708",
  "patch_info": {
    "commit_hash": "f1cdbb33ec61c4a64a32e107d4d02f936051c708",
    "repo": "FreeRADIUS/freeradius-server",
    "commit_url": "https://github.com/FreeRADIUS/freeradius-server/commit/f1cdbb33ec61c4a64a32e107d4d02f936051c708",
    "files": [
      "src/modules/rlm_eap/libeap/eapsimlib.c"
    ],
    "message": "it's probably wrong to be completely retarded.  Let's fix that.",
    "before_after_code_files": [
      "src/modules/rlm_eap/libeap/eapsimlib.c||src/modules/rlm_eap/libeap/eapsimlib.c"
    ]
  },
  "patch_diff": {
    "src/modules/rlm_eap/libeap/eapsimlib.c||src/modules/rlm_eap/libeap/eapsimlib.c": [
      "File: src/modules/rlm_eap/libeap/eapsimlib.c -> src/modules/rlm_eap/libeap/eapsimlib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "307:  newvp->vp_length = 1;",
      "308:  fr_pair_add(&(r->vps), newvp);",
      "310:  attr     += 3;",
      "311:  attrlen  -= 3;",
      "315:   uint8_t *p;",
      "318:    fr_strerror_printf(\"EAP-Sim attribute %d too short: %d < 2\", es_attribute_count, attrlen);",
      "319:    return 0;",
      "320:   }",
      "322:   eapsim_attribute = attr[0];",
      "323:   eapsim_len = attr[1] * 4;",
      "325:   if (eapsim_len > attrlen) {",
      "326:    fr_strerror_printf(\"EAP-Sim attribute %d (no.%d) has length longer than data (%d > %d)\",",
      "327:         eapsim_attribute, es_attribute_count, eapsim_len, attrlen);",
      "328:    return 0;",
      "329:   }",
      "348:   attr += eapsim_len;",
      "",
      "[Removed Lines]",
      "314:  while(attrlen > 0) {",
      "317:   if(attrlen < 2) {",
      "331:   if(eapsim_len > MAX_STRING_LEN) {",
      "332:    eapsim_len = MAX_STRING_LEN;",
      "333:   }",
      "334:   if (eapsim_len < 2) {",
      "335:    fr_strerror_printf(\"EAP-Sim attribute %d (no.%d) has length too small\", eapsim_attribute,",
      "336:         es_attribute_count);",
      "337:    return 0;",
      "338:   }",
      "340:   newvp = fr_pair_afrom_num(r, eapsim_attribute+PW_EAP_SIM_BASE, 0);",
      "341:   newvp->vp_length = eapsim_len-2;",
      "342:   newvp->vp_octets = p = talloc_array(newvp, uint8_t, newvp->vp_length);",
      "343:   memcpy(p, &attr[2], eapsim_len-2);",
      "344:   fr_pair_add(&(r->vps), newvp);",
      "345:   newvp = NULL;",
      "",
      "[Added Lines]",
      "324:  while (attrlen > 0) {",
      "327:   if (attrlen < 2) {",
      "332:   if (!attr[1]) {",
      "333:    fr_strerror_printf(\"EAP-Sim attribute %d (no.%d) has no data\", eapsim_attribute,",
      "334:         es_attribute_count);",
      "335:    return 0;",
      "336:   }",
      "350:   newvp = fr_pair_afrom_num(r, eapsim_attribute + PW_EAP_SIM_BASE, 0);",
      "351:   if (!newvp) {",
      "364:    if (eapsim_attribute <= 127) {",
      "365:     fr_strerror_printf(\"Unknown mandatory attribute %d, failing\",",
      "366:          eapsim_attribute);",
      "367:     return 0;",
      "368:    }",
      "370:   } else {",
      "375:    newvp->vp_length = eapsim_len - 2;",
      "377:    newvp->vp_octets = p = talloc_array(newvp, uint8_t, newvp->vp_length);",
      "378:    memcpy(p, &attr[2], newvp->vp_length);",
      "379:    fr_pair_add(&(r->vps), newvp);",
      "380:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "71128cac3ee236a88a05cc7bddd43e43a88a3089",
      "candidate_info": {
        "commit_hash": "71128cac3ee236a88a05cc7bddd43e43a88a3089",
        "repo": "FreeRADIUS/freeradius-server",
        "commit_url": "https://github.com/FreeRADIUS/freeradius-server/commit/71128cac3ee236a88a05cc7bddd43e43a88a3089",
        "files": [
          "src/modules/rlm_eap/libeap/eapsimlib.c"
        ],
        "message": "look at attr[0], not other variable",
        "before_after_code_files": [
          "src/modules/rlm_eap/libeap/eapsimlib.c||src/modules/rlm_eap/libeap/eapsimlib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/modules/rlm_eap/libeap/eapsimlib.c||src/modules/rlm_eap/libeap/eapsimlib.c"
          ],
          "candidate": [
            "src/modules/rlm_eap/libeap/eapsimlib.c||src/modules/rlm_eap/libeap/eapsimlib.c"
          ]
        }
      },
      "candidate_diff": {
        "src/modules/rlm_eap/libeap/eapsimlib.c||src/modules/rlm_eap/libeap/eapsimlib.c": [
          "File: src/modules/rlm_eap/libeap/eapsimlib.c -> src/modules/rlm_eap/libeap/eapsimlib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "330:   }",
          "332:   if (!attr[1]) {",
          "334:         es_attribute_count);",
          "335:    return 0;",
          "336:   }",
          "",
          "[Removed Lines]",
          "333:    fr_strerror_printf(\"EAP-Sim attribute %d (no.%d) has no data\", eapsim_attribute,",
          "",
          "[Added Lines]",
          "333:    fr_strerror_printf(\"EAP-Sim attribute %d (no.%d) has no data\", attr[0],",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6d26fd465126cf5aa8f265fd7fcdb53a420ccfa9",
      "candidate_info": {
        "commit_hash": "6d26fd465126cf5aa8f265fd7fcdb53a420ccfa9",
        "repo": "FreeRADIUS/freeradius-server",
        "commit_url": "https://github.com/FreeRADIUS/freeradius-server/commit/6d26fd465126cf5aa8f265fd7fcdb53a420ccfa9",
        "files": [
          "src/modules/rlm_eap/libeap/eapsimlib.c"
        ],
        "message": "it's probably wrong to be completely retarded.  Let's fix that.",
        "before_after_code_files": [
          "src/modules/rlm_eap/libeap/eapsimlib.c||src/modules/rlm_eap/libeap/eapsimlib.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/modules/rlm_eap/libeap/eapsimlib.c||src/modules/rlm_eap/libeap/eapsimlib.c"
          ],
          "candidate": [
            "src/modules/rlm_eap/libeap/eapsimlib.c||src/modules/rlm_eap/libeap/eapsimlib.c"
          ]
        }
      },
      "candidate_diff": {
        "src/modules/rlm_eap/libeap/eapsimlib.c||src/modules/rlm_eap/libeap/eapsimlib.c": [
          "File: src/modules/rlm_eap/libeap/eapsimlib.c -> src/modules/rlm_eap/libeap/eapsimlib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "307:  newvp->vp_length = 1;",
          "308:  fr_pair_add(&(r->vps), newvp);",
          "310:  attr     += 3;",
          "311:  attrlen  -= 3;",
          "315:   uint8_t *p;",
          "318:    fr_strerror_printf(\"EAP-Sim attribute %d too short: %d < 2\", es_attribute_count, attrlen);",
          "319:    return 0;",
          "320:   }",
          "322:   eapsim_attribute = attr[0];",
          "323:   eapsim_len = attr[1] * 4;",
          "325:   if (eapsim_len > attrlen) {",
          "326:    fr_strerror_printf(\"EAP-Sim attribute %d (no.%d) has length longer than data (%d > %d)\",",
          "327:         eapsim_attribute, es_attribute_count, eapsim_len, attrlen);",
          "328:    return 0;",
          "329:   }",
          "348:   attr += eapsim_len;",
          "",
          "[Removed Lines]",
          "314:  while(attrlen > 0) {",
          "317:   if(attrlen < 2) {",
          "331:   if(eapsim_len > MAX_STRING_LEN) {",
          "332:    eapsim_len = MAX_STRING_LEN;",
          "333:   }",
          "334:   if (eapsim_len < 2) {",
          "335:    fr_strerror_printf(\"EAP-Sim attribute %d (no.%d) has length too small\", eapsim_attribute,",
          "336:         es_attribute_count);",
          "337:    return 0;",
          "338:   }",
          "340:   newvp = fr_pair_afrom_num(r, eapsim_attribute+PW_EAP_SIM_BASE, 0);",
          "341:   newvp->vp_length = eapsim_len-2;",
          "342:   newvp->vp_octets = p = talloc_array(newvp, uint8_t, newvp->vp_length);",
          "343:   memcpy(p, &attr[2], eapsim_len-2);",
          "344:   fr_pair_add(&(r->vps), newvp);",
          "345:   newvp = NULL;",
          "",
          "[Added Lines]",
          "324:  while (attrlen > 0) {",
          "327:   if (attrlen < 2) {",
          "332:   if (!attr[1]) {",
          "333:    fr_strerror_printf(\"EAP-Sim attribute %d (no.%d) has no data\", eapsim_attribute,",
          "334:         es_attribute_count);",
          "335:    return 0;",
          "336:   }",
          "350:   newvp = fr_pair_afrom_num(r, eapsim_attribute + PW_EAP_SIM_BASE, 0);",
          "351:   if (!newvp) {",
          "364:    if (eapsim_attribute <= 127) {",
          "365:     fr_strerror_printf(\"Unknown mandatory attribute %d, failing\",",
          "366:          eapsim_attribute);",
          "367:     return 0;",
          "368:    }",
          "370:   } else {",
          "375:    newvp->vp_length = eapsim_len - 2;",
          "377:    newvp->vp_octets = p = talloc_array(newvp, uint8_t, newvp->vp_length);",
          "378:    memcpy(p, &attr[2], newvp->vp_length);",
          "379:    fr_pair_add(&(r->vps), newvp);",
          "380:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}