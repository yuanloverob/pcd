{
  "cve_id": "CVE-2023-24821",
  "cve_desc": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in a large out of bounds write beyond the packet buffer. The write will create a hard fault exception after reaching the last page of RAM. The hard fault is not handled and the system will be stuck until reset, thus the impact is denial of service. Version 2022.10 fixes this issue. As a workaround, disable support for fragmented IP datagrams or apply the patches manually.",
  "repo": "RIOT-OS/RIOT",
  "patch_hash": "9728f727e75d7d78dbfb5918e0de1b938b7b6d2c",
  "patch_info": {
    "commit_hash": "9728f727e75d7d78dbfb5918e0de1b938b7b6d2c",
    "repo": "RIOT-OS/RIOT",
    "commit_url": "https://github.com/RIOT-OS/RIOT/commit/9728f727e75d7d78dbfb5918e0de1b938b7b6d2c",
    "files": [
      "sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c"
    ],
    "message": "gnrc_sixlowpan_frag_rb: fix integer underflow in _6lo_frag_size()",
    "before_after_code_files": [
      "sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c||sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c"
    ]
  },
  "patch_diff": {
    "sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c||sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c": [
      "File: sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c -> sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "236:     size_t frag_size;",
      "238:     if (offset == 0) {",
      "239:         frag_size = pkt->size - sizeof(sixlowpan_frag_t);",
      "240:         if (data[0] == SIXLOWPAN_UNCOMP) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "239:         if (pkt->size < sizeof(sixlowpan_frag_t)) {",
      "240:             return 0;",
      "241:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "244:         }",
      "245:     }",
      "246:     else {",
      "247:         frag_size = pkt->size - sizeof(sixlowpan_frag_n_t);",
      "248:     }",
      "249:     return frag_size;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "250:         if (pkt->size < sizeof(sixlowpan_frag_n_t)) {",
      "251:             return 0;",
      "252:         }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "306:     if (IS_USED(MODULE_GNRC_SIXLOWPAN_FRAG) && sixlowpan_frag_is(pkt->data)) {",
      "307:         data = _6lo_frag_payload(pkt);",
      "308:         frag_size = _6lo_frag_size(pkt, offset, data);",
      "309:         datagram_size = sixlowpan_frag_datagram_size(pkt->data);",
      "310:         datagram_tag = sixlowpan_frag_datagram_tag(pkt->data);",
      "311:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "315:         if (frag_size == 0) {",
      "316:             DEBUG(\"6lo rbuf: integer underflow detected.\\n\");",
      "317:             gnrc_pktbuf_release(pkt);",
      "318:             return RBUF_ADD_ERROR;",
      "319:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2709fbd827b688fe62df2c77c316914f4a3a6d4a",
      "candidate_info": {
        "commit_hash": "2709fbd827b688fe62df2c77c316914f4a3a6d4a",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/2709fbd827b688fe62df2c77c316914f4a3a6d4a",
        "files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ],
        "message": "gnrc_sixlowpan_iphc: fix integer underflow in gnrc_sixlowpan_iphc_recv()",
        "before_after_code_files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/18817"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c": [
          "File: sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c -> sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "760:     iface = gnrc_netif_hdr_get_netif(netif->data);",
          "761:     payload_offset = _iphc_ipv6_decode(iphc_hdr, netif->data, iface,",
          "762:                                        ipv6->data);",
          "765:         _recv_error_release(sixlo, ipv6, rbuf);",
          "766:         return;",
          "767:     }",
          "",
          "[Removed Lines]",
          "763:     if (payload_offset == 0) {",
          "",
          "[Added Lines]",
          "763:     if ((payload_offset == 0) || (payload_offset > sixlo->size)) {",
          "765:         DEBUG(\"6lo iphc: malformed IPHC header\\n\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "781:                                                            &prev_nh_offset,",
          "782:                                                            ipv6,",
          "783:                                                            &uncomp_hdr_len);",
          "785:                         _recv_error_release(sixlo, ipv6, rbuf);",
          "786:                         return;",
          "787:                     }",
          "",
          "[Removed Lines]",
          "784:                     if (payload_offset == 0) {",
          "",
          "[Added Lines]",
          "785:                     if ((payload_offset == 0) || (payload_offset > sixlo->size)) {",
          "787:                         DEBUG(\"6lo iphc: malformed IPHC NHC IPv6 header\\n\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "796:                                                           prev_nh_offset,",
          "797:                                                           ipv6,",
          "798:                                                           &uncomp_hdr_len);",
          "800:                         _recv_error_release(sixlo, ipv6, rbuf);",
          "801:                         return;",
          "802:                     }",
          "",
          "[Removed Lines]",
          "799:                     if (payload_offset == 0) {",
          "",
          "[Added Lines]",
          "802:                     if ((payload_offset == 0) || (payload_offset > sixlo->size)) {",
          "804:                         DEBUG(\"6lo iphc: malformed IPHC NHC IPv6 header\\n\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "899:     ipv6_hdr = ipv6->data;",
          "900:     ipv6_hdr->len = byteorder_htons(payload_len);",
          "904:     if (rbuf != NULL) {",
          "905:         rbuf->super.current_size += (uncomp_hdr_len - payload_offset);",
          "906: #ifdef MODULE_GNRC_SIXLOWPAN_FRAG_VRB",
          "",
          "[Removed Lines]",
          "901:     memcpy(((uint8_t *)ipv6->data) + uncomp_hdr_len,",
          "902:            ((uint8_t *)sixlo->data) + payload_offset,",
          "903:            sixlo->size - payload_offset);",
          "",
          "[Added Lines]",
          "906:     if (sixlo->size > payload_offset) {",
          "907:         memcpy(((uint8_t *)ipv6->data) + uncomp_hdr_len,",
          "908:                ((uint8_t *)sixlo->data) + payload_offset,",
          "909:                sixlo->size - payload_offset);",
          "910:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4a081f86616cb5c9dd0b5d7b286da03285d1652a",
      "candidate_info": {
        "commit_hash": "4a081f86616cb5c9dd0b5d7b286da03285d1652a",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/4a081f86616cb5c9dd0b5d7b286da03285d1652a",
        "files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ],
        "message": "gnrc_sixlowpan_iphc: fix packet type confusion in _iphc_encode()",
        "before_after_code_files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/18817"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c": [
          "File: sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c -> sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1613:         else {",
          "1614:             dispatch->next = ptr;",
          "1615:         }",
          "1627:         ptr = ptr->next;",
          "1628:     }",
          "",
          "[Removed Lines]",
          "1616:         if (ptr->type == GNRC_NETTYPE_UNDEF) {",
          "1619:             dispatch_size += sizeof(udp_hdr_t);",
          "1620:             break;  /* nothing special after UDP so quit even if more UNDEF",
          "1622:         }",
          "1623:         else {",
          "1624:             dispatch_size += ptr->size;",
          "1625:         }",
          "",
          "[Added Lines]",
          "1616:         dispatch_size += ptr->size;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "36a099e1ec52187a21c767b6bcc32eaec5690b75",
      "candidate_info": {
        "commit_hash": "36a099e1ec52187a21c767b6bcc32eaec5690b75",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/36a099e1ec52187a21c767b6bcc32eaec5690b75",
        "files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ],
        "message": "gnrc_sixlowpan_iphc.c: dereference ipv6_hdr in DEBUG() after assignment",
        "before_after_code_files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/18817"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c": [
          "File: sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c -> sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "843:             payload_len = (uint16_t)(rbuf->super.datagram_size - sizeof(ipv6_hdr_t));",
          "844:         }",
          "845: #ifdef MODULE_GNRC_SIXLOWPAN_FRAG_VRB",
          "849:         ipv6_hdr = ipv6->data;",
          "",
          "[Removed Lines]",
          "846:         DEBUG(\"6lo iphc: VRB present, trying to create entry for dst %s\\n\",",
          "847:               ipv6_addr_to_str(addr_str, &ipv6_hdr->dst, sizeof(addr_str)));",
          "",
          "[Added Lines]",
          "848:         DEBUG(\"6lo iphc: VRB present, trying to create entry for dst %s\\n\",",
          "849:               ipv6_addr_to_str(addr_str, &ipv6_hdr->dst, sizeof(addr_str)));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0bec3e245ed3815ad6c8cae54673f0021777768b",
      "candidate_info": {
        "commit_hash": "0bec3e245ed3815ad6c8cae54673f0021777768b",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/0bec3e245ed3815ad6c8cae54673f0021777768b",
        "files": [
          "sys/net/link_layer/ieee802154/ieee802154.c"
        ],
        "message": "ieee802154: Adjust parsing of IEEE 802.15.4 frame header",
        "before_after_code_files": [
          "sys/net/link_layer/ieee802154/ieee802154.c||sys/net/link_layer/ieee802154/ieee802154.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/18817"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sys/net/link_layer/ieee802154/ieee802154.c||sys/net/link_layer/ieee802154/ieee802154.c": [
          "File: sys/net/link_layer/ieee802154/ieee802154.c -> sys/net/link_layer/ieee802154/ieee802154.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "115: size_t ieee802154_get_frame_hdr_len(const uint8_t *mhr)",
          "116: {",
          "134:         return 0;",
          "135:     }",
          "136:     tmp = (mhr[1] & IEEE802154_FCF_SRC_ADDR_MASK);",
          "137:     if (tmp == IEEE802154_FCF_SRC_ADDR_VOID) {",
          "139:     }",
          "140:     else {",
          "141:         if (!(mhr[0] & IEEE802154_FCF_PAN_COMP)) {",
          "",
          "[Removed Lines]",
          "118:     uint8_t tmp;",
          "122:     tmp = (mhr[1] & IEEE802154_FCF_DST_ADDR_MASK);",
          "123:     if (tmp == IEEE802154_FCF_DST_ADDR_SHORT) {",
          "125:     }",
          "126:     else if (tmp == IEEE802154_FCF_DST_ADDR_LONG) {",
          "128:     }",
          "129:     else if (tmp != IEEE802154_FCF_DST_ADDR_VOID) {",
          "130:         return 0;",
          "131:     }",
          "132:     else if (mhr[0] & IEEE802154_FCF_PAN_COMP) {",
          "138:         return len;",
          "",
          "[Added Lines]",
          "118:     uint8_t tmp, has_dst = 0;",
          "121:     tmp = (mhr[0] & IEEE802154_FCF_TYPE_MASK);",
          "122:     if (tmp == IEEE802154_FCF_TYPE_ACK) {",
          "124:         return len;",
          "125:     } else if (tmp != IEEE802154_FCF_TYPE_BEACON) {",
          "127:         tmp = (mhr[1] & IEEE802154_FCF_DST_ADDR_MASK);",
          "128:         if (tmp == IEEE802154_FCF_DST_ADDR_SHORT) {",
          "130:             has_dst = 1;",
          "131:         }",
          "132:         else if (tmp == IEEE802154_FCF_DST_ADDR_LONG) {",
          "134:             has_dst = 1;",
          "135:         }",
          "136:         else if (tmp != IEEE802154_FCF_DST_ADDR_VOID) {",
          "137:             return 0;",
          "138:         }",
          "139:         else if (mhr[0] & IEEE802154_FCF_PAN_COMP) {",
          "141:             return 0;",
          "142:         }",
          "143:     } else if (mhr[0] & IEEE802154_FCF_PAN_COMP) {",
          "150:         return has_dst ? len : 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aa27ed71fa3e5d48dee1748dcf27b6323ec98a33",
      "candidate_info": {
        "commit_hash": "aa27ed71fa3e5d48dee1748dcf27b6323ec98a33",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/aa27ed71fa3e5d48dee1748dcf27b6323ec98a33",
        "files": [
          "sys/net/gnrc/network_layer/sixlowpan/frag/vrb/gnrc_sixlowpan_frag_vrb.c"
        ],
        "message": "gnrc_sixlowpan_frag_vrb: Assert no usage of a vrb with src_len == 0",
        "before_after_code_files": [
          "sys/net/gnrc/network_layer/sixlowpan/frag/vrb/gnrc_sixlowpan_frag_vrb.c||sys/net/gnrc/network_layer/sixlowpan/frag/vrb/gnrc_sixlowpan_frag_vrb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/18817"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sys/net/gnrc/network_layer/sixlowpan/frag/vrb/gnrc_sixlowpan_frag_vrb.c||sys/net/gnrc/network_layer/sixlowpan/frag/vrb/gnrc_sixlowpan_frag_vrb.c": [
          "File: sys/net/gnrc/network_layer/sixlowpan/frag/vrb/gnrc_sixlowpan_frag_vrb.c -> sys/net/gnrc/network_layer/sixlowpan/frag/vrb/gnrc_sixlowpan_frag_vrb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:     gnrc_sixlowpan_frag_vrb_t *vrbe = NULL;",
          "55:     assert(base != NULL);",
          "56:     assert(out_netif != NULL);",
          "57:     assert(out_dst != NULL);",
          "58:     assert(out_dst_len > 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:     assert(base->src_len != 0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "168: {",
          "169:     DEBUG(\"6lo vrb: trying to get entry for (%s, %u)\\n\",",
          "170:           gnrc_netif_addr_to_str(src, src_len, addr_str), src_tag);",
          "171:     for (unsigned i = 0; i < CONFIG_GNRC_SIXLOWPAN_FRAG_VRB_SIZE; i++) {",
          "172:         gnrc_sixlowpan_frag_vrb_t *vrbe = &_vrb[i];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "172:     assert(src_len != 0);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "189: {",
          "190:     DEBUG(\"6lo vrb: trying to get entry for reverse label switching (%s, %u)\\n\",",
          "191:           gnrc_netif_addr_to_str(src, src_len, addr_str), tag);",
          "192:     for (unsigned i = 0; i < CONFIG_GNRC_SIXLOWPAN_FRAG_VRB_SIZE; i++) {",
          "193:         gnrc_sixlowpan_frag_vrb_t *vrbe = &_vrb[i];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "194:     assert(src_len != 0);",
          "",
          "---------------"
        ]
      }
    }
  ]
}