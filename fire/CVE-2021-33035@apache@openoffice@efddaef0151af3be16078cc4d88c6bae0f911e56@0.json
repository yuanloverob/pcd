{
  "cve_id": "CVE-2021-33035",
  "cve_desc": "Apache OpenOffice opens dBase/DBF documents and shows the contents as spreadsheets. DBF are database files with data organized in fields. When reading DBF data the size of certain fields is not checked: the data is just copied into local variables. A carefully crafted document could overflow the allocated space, leading to the execution of arbitrary code by altering the contents of the program stack. This issue affects Apache OpenOffice up to and including version 4.1.10",
  "repo": "apache/openoffice",
  "patch_hash": "efddaef0151af3be16078cc4d88c6bae0f911e56",
  "patch_info": {
    "commit_hash": "efddaef0151af3be16078cc4d88c6bae0f911e56",
    "repo": "apache/openoffice",
    "commit_url": "https://github.com/apache/openoffice/commit/efddaef0151af3be16078cc4d88c6bae0f911e56#diff-ea66e734dd358922aba12ad4ba39c96bdc6cbde587d07dbc63d04daa0a30e90f",
    "files": [
      "main/connectivity/source/drivers/dbase/DTable.cxx"
    ],
    "message": "add useful checks",
    "before_after_code_files": [
      "main/connectivity/source/drivers/dbase/DTable.cxx||main/connectivity/source/drivers/dbase/DTable.cxx"
    ]
  },
  "patch_diff": {
    "main/connectivity/source/drivers/dbase/DTable.cxx||main/connectivity/source/drivers/dbase/DTable.cxx": [
      "File: main/connectivity/source/drivers/dbase/DTable.cxx -> main/connectivity/source/drivers/dbase/DTable.cxx",
      "--- Hunk 1 ---",
      "[Context before]",
      "896:         else if ( DataType::TIMESTAMP == nType )",
      "897:         {",
      "898:             sal_Int32 nDate = 0,nTime = 0;",
      "899:    memcpy(&nDate, pData, 4);",
      "900:             memcpy(&nTime, pData+ 4, 4);",
      "901:             if ( !nDate && !nTime )",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "899:             OSL_ENSURE(nLen == 8, \"Invalid length for date field\");",
      "900:             if (nLen != 8) {",
      "901:                 return false;",
      "902:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "911:         }",
      "912:         else if ( DataType::INTEGER == nType )",
      "913:         {",
      "914:             sal_Int32 nValue = 0;",
      "915:    memcpy(&nValue, pData, nLen);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "918:             OSL_ENSURE(nLen == 4, \"Invalid length for integer field\");",
      "919:             if (nLen != 4) {",
      "920:                 return false;",
      "921:             }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "918:         else if ( DataType::DOUBLE == nType )",
      "919:         {",
      "920:             double d = 0.0;",
      "921:             if (getBOOL((*aIter)->getPropertyValue(OMetaConnection::getPropMap().getNameByIndex(PROPERTY_ID_ISCURRENCY)))) // Currency wird gesondert behandelt",
      "922:             {",
      "923:                 sal_Int64 nValue = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "929:             OSL_ENSURE(nLen == 8, \"Invalid length for double field\");",
      "930:             if (nLen != 8) {",
      "931:                 return false;",
      "932:             }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "959:    {",
      "960:     case DataType::DATE:",
      "961:     {",
      "962:      if (aStr.Len() != nLen)",
      "963:      {",
      "964:       (_rRow->get())[i]->setNull();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "974:                     OSL_ENSURE(nLen == 8, \"Invalid length for date field\");",
      "975:                     if (nLen != 8) {",
      "976:                         return false;",
      "977:                     }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "978:     break;",
      "979:     case DataType::BIT:",
      "980:     {",
      "981:      sal_Bool b;",
      "982:      switch (* ((const char *)pData))",
      "983:      {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "997:                     OSL_ENSURE(nLen == 1, \"Invalid length for bit field\");",
      "998:                     if (nLen != 1) {",
      "999:                         return false;",
      "1000:                     }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1873:    {",
      "1874:                 case DataType::TIMESTAMP:",
      "1875:                     {",
      "1876:                         sal_Int32 nJulianDate = 0, nJulianTime = 0;",
      "1877:                         lcl_CalcJulDate(nJulianDate,nJulianTime,rRow.get()[nPos]->getValue());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1896:                         OSL_ENSURE(nLen == 8, \"Invalid length for timestamp field\");",
      "1897:                         if (nLen != 8) {",
      "1898:                             bHadError = true;",
      "1899:                             break;",
      "1900:                         }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1882:                     break;",
      "1883:     case DataType::DATE:",
      "1884:     {",
      "1885:      ::com::sun::star::util::Date aDate;",
      "1886:      if(rRow.get()[nPos]->getValue().getTypeKind() == DataType::DOUBLE)",
      "1887:       aDate = ::dbtools::DBTypeConversion::toDate(rRow.get()[nPos]->getValue().getDouble());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1910:                     OSL_ENSURE(nLen == 8, \"Invalid length for date field\");",
      "1911:                     if (nLen != 8) {",
      "1912:                         bHadError = true;",
      "1913:                         break;",
      "1914:                     }",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1900:     } break;",
      "1901:                 case DataType::INTEGER:",
      "1902:                     {",
      "1903:                         sal_Int32 nValue = rRow.get()[nPos]->getValue();",
      "1904:                         memcpy(pData,&nValue,nLen);",
      "1905:                     }",
      "1906:                     break;",
      "1907:                 case DataType::DOUBLE:",
      "1908:                     {",
      "1909:                         const double d = rRow.get()[nPos]->getValue();",
      "1910:                         m_pColumns->getByIndex(i) >>= xCol;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1933:                         OSL_ENSURE(nLen == 4, \"Invalid length for integer field\");",
      "1934:                         if (nLen != 4) {",
      "1935:                             bHadError = true;",
      "1936:                             break;",
      "1937:                         }",
      "1944:                         OSL_ENSURE(nLen == 8, \"Invalid length for double field\");",
      "1945:                         if (nLen != 8) {",
      "1946:                             bHadError = true;",
      "1947:                             break;",
      "1948:                         }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1958:      }",
      "1959:     } break;",
      "1960:     case DataType::BIT:",
      "1962:      break;",
      "1963:                 case DataType::LONGVARBINARY:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2001:                     OSL_ENSURE(nLen == 1, \"Invalid length for bit field\");",
      "2002:                     if (nLen != 1) {",
      "2003:                         bHadError = true;",
      "2004:                         break;",
      "2005:                     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "eaad0d4cceada969cc8d2cabd4289427aa625aa8",
      "candidate_info": {
        "commit_hash": "eaad0d4cceada969cc8d2cabd4289427aa625aa8",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/eaad0d4cceada969cc8d2cabd4289427aa625aa8",
        "files": [
          "extras/l10n/source/de/localize.sdf"
        ],
        "message": "Fixed strings in German SDF",
        "before_after_code_files": [
          "extras/l10n/source/de/localize.sdf||extras/l10n/source/de/localize.sdf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "extras/l10n/source/de/localize.sdf||extras/l10n/source/de/localize.sdf": [
          "File: extras/l10n/source/de/localize.sdf -> extras/l10n/source/de/localize.sdf",
          "--- Hunk 1 ---",
          "[Context before]",
          "4313: svtools workben\\unodialog\\roadmapskeleton.src 0 string DLG_ROADMAP_SKELETON STR_STATE_FINISH   0 de Beenden    20130618 17:22:18",
          "4314: svtools workben\\unodialog\\roadmapskeleton.src 0 modaldialog DLG_ROADMAP_SKELETON    0 de Strategieplan Muster Demo    20130618 17:22:18",
          "4315: svtools source\\filter\\exportdialog.src 0 string DLG_EXPORT_TITLE    0 de  Einstellungen    20130618 17:22:18",
          "4317: svtools source\\filter\\exportdialog.src 0 fixedtext DLG_EXPORT FT_SIZEX   41 de Breite    20130618 17:22:18",
          "4318: svtools source\\filter\\exportdialog.src 0 stringlist DLG_EXPORT.LB_SIZEX 1   0 de Zoll    20130618 17:22:18",
          "4319: svtools source\\filter\\exportdialog.src 0 stringlist DLG_EXPORT.LB_SIZEX 2   0 de cm    20130618 17:22:18",
          "",
          "[Removed Lines]",
          "4316: svtools source\\filter\\exportdialog.src 0 fixedline DLG_EXPORT FL_EXPORT_SIZE   110 de Gr\u00f6sse    20130618 17:22:18",
          "",
          "[Added Lines]",
          "4316: svtools source\\filter\\exportdialog.src 0 fixedline DLG_EXPORT FL_EXPORT_SIZE   110 de Gr\u00f6\u00dfe    20130618 17:22:18",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10685: cui source\\options\\optgdlg.src 0 checkbox OFA_TP_LANGUAGES CB_CURRENT_DOC   125 de Nur f\u00fcr das aktuelle Dokument    20130618 17:22:18",
          "10686: cui source\\options\\optgdlg.src 0 fixedline OFA_TP_LANGUAGES FL_ENHANCED   248 de Erweiterte Sprachunterst\u00fctzung    20130618 17:22:18",
          "10687: cui source\\options\\optgdlg.src 0 checkbox OFA_TP_LANGUAGES CB_ASIANSUPPORT   236 de Unterst\u00fctzung von ~asiatischen Sprachen aktiviert    20130618 17:22:18",
          "10689: cui source\\options\\optgdlg.src 0 infobox RID_SVX_MSGBOX_LANGUAGE_RESTART    260 de Die Spracheinstellung der Benutzeroberfl\u00e4che wurde ge\u00e4ndert und wird beim n\u00e4chsten Start von %PRODUCTNAME %PRODUCTVERSION wirksam    20130618 17:22:18",
          "10690: cui source\\options\\optgenrl.src 0 fixedtext RID_SFXPAGE_GENERAL FT_COMPANY   0 de ~Firma    20130618 17:22:18",
          "10691: cui source\\options\\optgenrl.src 0 fixedtext RID_SFXPAGE_GENERAL FT_NAME   0 de ~Vor-/Name/K\u00fcrzel    20130618 17:22:18",
          "",
          "[Removed Lines]",
          "10688: cui source\\options\\optgdlg.src 0 checkbox OFA_TP_LANGUAGES CB_CTLSUPPORT   236 de Unterst\u00fctzung von '~Complex Text Layout' (CTL) aktiviert    20130618 17:22:18",
          "",
          "[Added Lines]",
          "10688: cui source\\options\\optgdlg.src 0 checkbox OFA_TP_LANGUAGES CB_CTLSUPPORT   236 de Unterst\u00fctzung von 'Complex ~Text Layout' (CTL) aktiviert    20130618 17:22:18",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "69458: svx source\\items\\svxitems.src 0 itemlist RID_ATTR_NAMES 10   0 de Kontur    20130618 17:22:18",
          "69459: svx source\\items\\svxitems.src 0 itemlist RID_ATTR_NAMES 11   0 de Durchgestrichen    20130618 17:22:18",
          "69460: svx source\\items\\svxitems.src 0 itemlist RID_ATTR_NAMES 12   0 de Unterstrichen    20130618 17:22:18",
          "69462: svx source\\items\\svxitems.src 0 itemlist RID_ATTR_NAMES 14   0 de Rel. Gr\u00f6\u00dfe    20130618 17:22:18",
          "69463: svx source\\items\\svxitems.src 0 itemlist RID_ATTR_NAMES 15   0 de Zeichenfarbe    20130618 17:22:18",
          "69464: svx source\\items\\svxitems.src 0 itemlist RID_ATTR_NAMES 16   0 de Unterschneidung    20130618 17:22:18",
          "",
          "[Removed Lines]",
          "69461: svx source\\items\\svxitems.src 0 itemlist RID_ATTR_NAMES 13   0 de Gr\u00f6sse    20130618 17:22:18",
          "",
          "[Added Lines]",
          "69461: svx source\\items\\svxitems.src 0 itemlist RID_ATTR_NAMES 13   0 de Gr\u00f6\u00dfe    20130618 17:22:18",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "70306: svx source\\dialog\\ucsubset.src 0 string RID_SUBSETMAP RID_SUBSETSTR_PRIVATE_USE_AREA   0 de Zeichensatzspezifische Symbole    20130618 17:22:18",
          "70307: svx source\\dialog\\ucsubset.src 0 string RID_SUBSETMAP RID_SUBSETSTR_CJK_COMPAT_IDGRAPHS   0 de CJK Kompatible Ideogramme    20130618 17:22:18",
          "70308: svx source\\dialog\\ucsubset.src 0 string RID_SUBSETMAP RID_SUBSETSTR_ALPHA_PRESENTATION   0 de Alphabetische Pr\u00e4sentations Formen    20130618 17:22:18",
          "70310: svx source\\dialog\\ucsubset.src 0 string RID_SUBSETMAP RID_SUBSETSTR_COMBINING_HALF_MARKS   0 de Kombinierende Halbmarken    20130618 17:22:18",
          "70311: svx source\\dialog\\ucsubset.src 0 string RID_SUBSETMAP RID_SUBSETSTR_CJK_COMPAT_FORMS   0 de CJK Kompatibilit\u00e4ts-Formen    20130618 17:22:18",
          "70312: svx source\\dialog\\ucsubset.src 0 string RID_SUBSETMAP RID_SUBSETSTR_SMALL_FORM_VARIANTS   0 de Kleine Form Varianten    20130618 17:22:18",
          "",
          "[Removed Lines]",
          "70309: svx source\\dialog\\ucsubset.src 0 string RID_SUBSETMAP RID_SUBSETSTR_ARABIC_PRESENT_A   0 de Arabische Pr\u00e4sentations Formen-A    20130618 17:22:18",
          "",
          "[Added Lines]",
          "70309: svx source\\dialog\\ucsubset.src 0 string RID_SUBSETMAP RID_SUBSETSTR_ARABIC_PRESENT_A   0 de Arabische Pr\u00e4sentationsformen-A    20130618 17:22:18",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "70378: svx source\\tbxctrls\\extrusioncontrols.src 0 string RID_SVXFLOAT_EXTRUSION_LIGHTING STR_DIM   0 de ~Abgeblendet    20130618 17:22:18",
          "70379: svx source\\tbxctrls\\extrusioncontrols.src 0 dockingwindow RID_SVXFLOAT_EXTRUSION_LIGHTING    0 de Extrusionsbeleuchtung    20130618 17:22:18",
          "70380: svx source\\tbxctrls\\extrusioncontrols.src 0 string RID_SVXFLOAT_EXTRUSION_SURFACE STR_WIREFRAME   0 de ~Drahtrahmen    20130618 17:22:18",
          "70382: svx source\\tbxctrls\\extrusioncontrols.src 0 string RID_SVXFLOAT_EXTRUSION_SURFACE STR_PLASTIC   0 de ~Plastik    20130618 17:22:18",
          "70383: svx source\\tbxctrls\\extrusioncontrols.src 0 string RID_SVXFLOAT_EXTRUSION_SURFACE STR_METAL   0 de Me~tall    20130618 17:22:18",
          "70384: svx source\\tbxctrls\\extrusioncontrols.src 0 dockingwindow RID_SVXFLOAT_EXTRUSION_SURFACE    0 de Extrusionsoberfl\u00e4che    20130618 17:22:18",
          "",
          "[Removed Lines]",
          "70381: svx source\\tbxctrls\\extrusioncontrols.src 0 string RID_SVXFLOAT_EXTRUSION_SURFACE STR_MATTE   0 de ~Matte    20130618 17:22:18",
          "",
          "[Added Lines]",
          "70381: svx source\\tbxctrls\\extrusioncontrols.src 0 string RID_SVXFLOAT_EXTRUSION_SURFACE STR_MATTE   0 de ~Matt    20130618 17:22:18",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a6ac00f6e6ca4a40bbba7f0f5a5bb42b7f05b268",
      "candidate_info": {
        "commit_hash": "a6ac00f6e6ca4a40bbba7f0f5a5bb42b7f05b268",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/a6ac00f6e6ca4a40bbba7f0f5a5bb42b7f05b268",
        "files": [
          "extras/l10n/source/it/localize.sdf",
          "extras/l10n/source/nb/localize.sdf",
          "extras/l10n/source/pt/localize.sdf"
        ],
        "message": "Fixed strings in it, nb, pt SDF",
        "before_after_code_files": [
          "extras/l10n/source/it/localize.sdf||extras/l10n/source/it/localize.sdf",
          "extras/l10n/source/nb/localize.sdf||extras/l10n/source/nb/localize.sdf",
          "extras/l10n/source/pt/localize.sdf||extras/l10n/source/pt/localize.sdf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "extras/l10n/source/it/localize.sdf||extras/l10n/source/it/localize.sdf": [
          "File: extras/l10n/source/it/localize.sdf -> extras/l10n/source/it/localize.sdf",
          "--- Hunk 1 ---",
          "[Context before]",
          "18251: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help hd_id3151184 70   0 it Per spostare un'intestazione verso l'alto o verso il basso nel documento    20130618 17:22:18",
          "18252: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id0915200809400790    0 it Assicuratevi che tutte le intestazioni siano mostrate nel Navigatore. Tutti i livelli vengono mostrati nelle impostazioni predefinite. La spiegazione su come modificare i livelli delle intestazioni \u00e8 riportata nei passi successivi.    20130618 17:22:18",
          "18253: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3151206 71   0 it Nella \\<emph\\>Barra standard\\</emph\\>, fate clic sull'icona \\<emph\\>Navigatore\\</emph\\> \\<image id=\\\"img_id5211883\\\" src=\\\"res/commandimagelist/sc_navigator.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id5211883\\\"\\>Icona\\</alt\\>\\</image\\> per aprire il \\<emph\\>Navigatore\\</emph\\>.    20130618 17:22:18",
          "18255: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3155089 74   0 it Usate una delle procedure seguenti:    20130618 17:22:18",
          "18256: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3155114 63   0 it Trascinate l'intestazione nel punto desiderato nell'elenco del \\<emph\\>Navigatore\\</emph\\>.    20130618 17:22:18",
          "18257: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3155139 75   0 it Fate clic sull'intestazione nell'elenco del \\<emph\\>Navigatore\\</emph\\> e quindi sull'icona \\<emph\\>Capitolo superiore\\</emph\\>\\<image id=\\\"img_id4217546\\\" src=\\\"sw/imglst/sc20174.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id4217546\\\"\\>Icona\\</alt\\>\\</image\\> o \\<emph\\>Capitolo inferiore\\</emph\\>\\<image id=\\\"img_id6505788\\\" src=\\\"sw/imglst/sc20171.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id6505788\\\"\\>Icona\\</alt\\>\\</image\\>.    20130618 17:22:18",
          "",
          "[Removed Lines]",
          "18254: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3151238 72   0 it Nel \\<emph\\>Navigatore\\</emph\\>, fate clic sull'icona \\<emph\\>Commuta la vista del contenuto\\</emph\\>\\<image id=\\\"img_id3156338\\\" src=\\\"sw/imglst/sc20244.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id3156338\\\"\\>Icona\\</alt\\>\\</image\\>.    20130618 17:22:18",
          "",
          "[Added Lines]",
          "18254: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3151238 72   0 it Nel \\<emph\\>Navigatore\\</emph\\>, fate clic sull'icona \\<emph\\>Commuta la vista del contenuto\\</emph\\>\\<image id=\\\"img_id3156338\\\" src=\\\"sw/imglst/sc20234.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id3156338\\\"\\>Icona\\</alt\\>\\</image\\>.    20130618 17:22:18",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20775: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3146874 9   0 it Mostra/nascondi la casella di selezione    20130618 17:22:18",
          "20776: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help hd_id3146891 10   0 it Commuta la vista del contenuto    20130618 17:22:18",
          "20777: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3145596 11   0 it \\<ahelp hid=\\\"HID_NAVI_TBX8\\\"\\>Visualizza alternativamente tutte le categorie nel Navigatore o la sola categoria selezionata.\\</ahelp\\>    20130618 17:22:18",
          "20779: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3156067 12   0 it Commuta la vista del contenuto    20130618 17:22:18",
          "20780: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3155932 78   0 it Per riordinare velocemente le intestazioni e il relativo testo nel documento, selezionate la categoria \"Intestazioni\" nell'elenco e fate clic sull'icona \\<emph\\>Commuta la vista del contenuto\\</emph\\>. A questo punto potete riordinare il contenuto usando la tecnica Drag&Drop.    20130618 17:22:18",
          "20781: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help hd_id3155381 13   0 it Imposta contrassegno    20130618 17:22:18",
          "",
          "[Removed Lines]",
          "20778: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3154133    0 it \\<image id=\\\"img_id3154140\\\" src=\\\"sw/imglst/sc20244.png\\\" width=\\\"0.2228in\\\" height=\\\"0.2228in\\\"\\>\\<alt id=\\\"alt_id3154140\\\"\\>Icona\\</alt\\>\\</image\\>    20130618 17:22:18",
          "",
          "[Added Lines]",
          "20778: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3154133    0 it \\<image id=\\\"img_id3154140\\\" src=\\\"sw/imglst/sc20234.png\\\" width=\\\"0.2228in\\\" height=\\\"0.2228in\\\"\\>\\<alt id=\\\"alt_id3154140\\\"\\>Icona\\</alt\\>\\</image\\>    20130618 17:22:18",
          "",
          "---------------"
        ],
        "extras/l10n/source/nb/localize.sdf||extras/l10n/source/nb/localize.sdf": [
          "File: extras/l10n/source/nb/localize.sdf -> extras/l10n/source/nb/localize.sdf",
          "--- Hunk 1 ---",
          "[Context before]",
          "18251: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help hd_id3151184 70   0 nb Flytte en overskrift opp og ned i dokumentet    20130618 17:22:18",
          "18252: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id0915200809400790    0 nb Pass p\u00e5 \u00e5 alle overskrifter vises i Datastruktur. Som standard vises alle niv\u00e5er. Se stegene nedenfor for \u00e5 endre overskriftsniv\u00e5ene som vises.    20130618 17:22:18",
          "18253: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3151206 71   0 nb P\u00e5 verkt\u00f8ylinja \\<emph\\>Standard\\</emph\\>, klikk p\u00e5 knappen \\<emph\\> Datastruktur\\</emph\\> \\<image id=\\\"img_id5211883\\\" src=\\\"res/commandimagelist/sc_navigator.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id5211883\\\"\\>Ikon\\</alt\\>\\</image\\> for \u00e5 \u00e5pne \\<emph\\>Datastrukturen\\</emph\\>.    20130618 17:22:18",
          "18255: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3155089 74   0 nb Gj\u00f8r dette:    20130618 17:22:18",
          "18256: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3155114 63   0 nb Dra en overskrift til en ny plassering i \\<emph\\>Dokumentstrukturlista\\</emph\\>.    20130618 17:22:18",
          "18257: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3155139 75   0 nb Klikk p\u00e5 overskrifta i \\<emph\\>Datastrukturen\\</emph\\>, klikk deretter p\u00e5 \\<emph\\>Kapittel opp\\</emph\\>\\<image id=\\\"img_id4217546\\\" src=\\\"sw/imglst/sc20174.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id4217546\\\"\\>Ikon\\</alt\\>\\</image\\> eller \\<emph\\>Kapittel ned\\</emph\\>icon \\<image id=\\\"img_id6505788\\\" src=\\\"sw/imglst/sc20171.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id6505788\\\"\\>Ikon\\</alt\\>\\</image\\>.    20130618 17:22:18",
          "",
          "[Removed Lines]",
          "18254: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3151238 72   0 nb I \\<emph\\>Datastruktur\\</emph\\>, klikk p\u00e5 ikonet \\<emph\\>Innholdsvisning\\</emph\\>\\<image id=\\\"img_id3156338\\\" src=\\\"sw/imglst/sc20244.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id3156338\\\"\\>Ikon\\</alt\\>\\</image\\>.    20130618 17:22:18",
          "",
          "[Added Lines]",
          "18254: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3151238 72   0 nb I \\<emph\\>Datastruktur\\</emph\\>, klikk p\u00e5 ikonet \\<emph\\>Innholdsvisning\\</emph\\>\\<image id=\\\"img_id3156338\\\" src=\\\"sw/imglst/sc20234.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id3156338\\\"\\>Ikon\\</alt\\>\\</image\\>.    20130618 17:22:18",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20775: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3146874 9   0 nb Vis/skjul liste    20130618 17:22:18",
          "20776: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help hd_id3146891 10   0 nb Innholdsvisning    20130618 17:22:18",
          "20777: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3145596 11   0 nb \\<ahelp hid=\\\"HID_NAVI_TBX8\\\"\\>Veksler mellom visning av alle kategoriene og visning av bare den valgte kategorien i dokumentstrukturvinduet.\\</ahelp\\>    20130618 17:22:18",
          "20779: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3156067 12   0 nb Veksle innholdsvisning    20130618 17:22:18",
          "20780: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3155932 78   0 nb Du kan enkelt endre rekkef\u00f8lgen p\u00e5 overskrifter og tilh\u00f8rende avsnitt ved \u00e5 velge kategorien \u00abOverskrifter\u00bb og s\u00e5 trykke \\<emph\\>Innholdsvisning\\</emph\\>. N\u00e5 kan du bruke dra og slipp til \u00e5 omorganisere innholdet.    20130618 17:22:18",
          "20781: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help hd_id3155381 13   0 nb Sett p\u00e5minning    20130618 17:22:18",
          "",
          "[Removed Lines]",
          "20778: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3154133    0 nb \\<image id=\\\"img_id3154140\\\" src=\\\"sw/imglst/sc20244.png\\\" width=\\\"0.2228in\\\" height=\\\"0.2228in\\\"\\>\\<alt id=\\\"alt_id3154140\\\"\\>Ikon\\</alt\\>\\</image\\>    20130618 17:22:18",
          "",
          "[Added Lines]",
          "20778: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3154133    0 nb \\<image id=\\\"img_id3154140\\\" src=\\\"sw/imglst/sc20234.png\\\" width=\\\"0.2228in\\\" height=\\\"0.2228in\\\"\\>\\<alt id=\\\"alt_id3154140\\\"\\>Ikon\\</alt\\>\\</image\\>    20130618 17:22:18",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "24058: helpcontent2 source\\text\\swriter\\02\\08010000.xhp 0 help tit    0 nb Sidetall    20130618 17:22:18",
          "24059: helpcontent2 source\\text\\swriter\\02\\08010000.xhp 0 help hd_id3145241 1   0 nb \\<link href=\\\"text/swriter/02/08010000.xhp\\\" name=\\\"Page Number\\\"\\>Sidetall\\</link\\>    20130618 17:22:18",
          "24060: helpcontent2 source\\text\\swriter\\02\\08010000.xhp 0 help par_id3151184 2   0 nb \\<ahelp hid=\\\".uno:StatePageNumber\\\"\\>Sidetallet blir vist i dette feltet i statuslinja. Dobbeltklikk for \u00e5 \u00e5pne \\<emph\\>Dokumentstruktur\\</emph\\>-vinduet, som du kan bruke til \u00e5 bla fram og tilbake i dokumentet. H\u00f8yreklikk for \u00e5 vise alle bokmerkene i dokumentet. Hvis du trykker et bokmerke, plasseres skrivemerket der bokmerket st\u00e5r.\\</ahelp\\>    20130618 17:22:18",
          "24070: helpcontent2 source\\text\\swriter\\02\\08010000.xhp 0 help par_id3149095 5   0 nb Du kan bruke hurtigtastene \u00abShift\u00a0+ \\<switchinline select=\\\"sys\\\"\\>\\<caseinline select=\\\"MAC\\\"\\>Kommando\\</caseinline\\>\\<defaultinline\\>Ctrl\\</defaultinline\\>\\</switchinline\\>\u00a0+ F5\u00bb til \u00e5 bytte til innskriving av sidetall. N\u00e5r du trykker \u00abEnter\u00bb flyttes skrivemerket til den valgte siden.    20130618 17:22:18",
          "24071: helpcontent2 source\\text\\swriter\\02\\08080000.xhp 0 help tit    0 nb Kombinert visning    20130618 17:22:18",
          "24072: helpcontent2 source\\text\\swriter\\02\\08080000.xhp 0 help hd_id3151186 1   0 nb \\<link href=\\\"text/swriter/02/08080000.xhp\\\" name=\\\"Combined Display\\\"\\>Kombinert visning\\</link\\>    20130618 17:22:18",
          "24073: helpcontent2 source\\text\\swriter\\02\\08080000.xhp 0 help par_id3151172 2   0 nb \\<ahelp hid=\\\".uno:StatusBarFunc\\\" visibility=\\\"visible\\\"\\>Viser informasjon om det \u00e5pne dokumentet.\\</ahelp\\>    20130618 17:22:18",
          "24074: helpcontent2 source\\text\\swriter\\02\\08080000.xhp 0 help par_id3156375 3   0 nb N\u00e5r skrivemerket st\u00e5r i en bolk med et navn, vises navnet til bolken. N\u00e5r",
          "24075: skrivemerket st\u00e5r i en tabell, vises navnet p\u00e5 tabellcellen. St\u00f8rrelsen til objektet vises n\u00e5r du redigerer rammer eller tegneobjekter.    20130618 17:22:18",
          "24076: helpcontent2 source\\text\\swriter\\02\\08080000.xhp 0 help par_id3145416 4   0 nb N\u00e5r skrivemerket st\u00e5r inne i tekst, kan du dobbeltklikke dette feltet for \u00e5 \u00e5pne dialogvinduet \\<link href=\\\"text/swriter/01/04090000.xhp\\\" name=\\\"Fields\\\"\\>\\<emph\\>Felter\\</emph\\>\\</link\\>. I dette vinduet kan du sette inn et felt der skrivemerket er plassert. N\u00e5r skrivemerket st\u00e5r i en tabell, kan du dobbeltklikke dette feltet for \u00e5 \u00e5pne dialogvinduet \\<emph\\>Tabellformat\\</emph\\>. Avhengig av hva slags objekt som er valgt, kan du \u00e5pne et vindu du kan bruke til \u00e5 redigere en bolk, et bilde, en flytende ramme, et OLE-objekt, direkte nummerering eller plasseringa og st\u00f8rrelsen til et tegneobjekt.    20130618 17:22:18",
          "24077: helpcontent2 source\\text\\swriter\\02\\10010000.xhp 0 help tit    0 nb Vis st\u00f8rre    20130618 17:22:18",
          "24078: helpcontent2 source\\text\\swriter\\02\\10010000.xhp 0 help hd_id3151173 1   0 nb \\<link href=\\\"text/swriter/02/10010000.xhp\\\" name=\\\"Zoom In\\\"\\>Vis st\u00f8rre\\</link\\>    20130618 17:22:18",
          "",
          "[Removed Lines]",
          "24061: helpcontent2 source\\text\\swriter\\02\\08010000.xhp 0 help par_id3145078 6   0 nb Den viste siden (x) og det totale antallet sider (y) vises p\u00e5 formen",
          "24062: \\<emph\\>Side x/y\\</emph\\>. N\u00e5r du blar gjennom et dokument med",
          "24063: musa, vises sidetallet n\u00e5r du slipper museknappen. N\u00e5r du blar med",
          "24064: rullefeltet til h\u00f8yre, vises sidetallet som et tips. Formatet for",
          "24065: sidenummerering er det samme p\u00e5 b\u00e5de statuslinja og i rullefeltet.    20130618 17:22:18",
          "24066: helpcontent2 source\\text\\swriter\\02\\08010000.xhp 0 help par_id3145417 3   0 nb Du kan sl\u00e5 \\<link href=\\\"text/swriter/01/02110000.xhp\\\" name=\\\"Navigator",
          "24067: \\\"\\>Dokumentstruktur\\</link\\> av og p\u00e5 ved \u00e5 dobbeltklikke \\<emph\\>sidetallfeltet\\</emph\\>.    20130618 17:22:18",
          "24068: helpcontent2 source\\text\\swriter\\02\\08010000.xhp 0 help par_id3149806 4   0 nb Du kan g\u00e5 til en bestemt side ved \u00e5 skrive inn sidetallet i tallboksen i",
          "24069: \\<emph\\>Dokumentstruktur\\</emph\\> og trykke \u00abEnter\u00bb.    20130618 17:22:18",
          "",
          "[Added Lines]",
          "24067: \\\"\\>Dokumentstruktur\\</link\\> av og p\u00e5 ved \u00e5 dobbeltklikke \\<emph\\>sidetallfeltet\\</emph\\>.    20130618 17:22:18",
          "24068: helpcontent2 source\\text\\swriter\\02\\08010000.xhp 0 help par_id3149806 4   0 nb Du kan g\u00e5 til en bestemt side ved \u00e5 skrive inn sidetallet i tallboksen i \u0000/",
          "24069: \\<emph\\>Dokumentstruktur\\</emph\\> og trykke \u00abEnter\u00bb.    20130618 17:22:18",
          "24070: helpcontent2 source\\text\\swriter\\02\\08010000.xhp 0 help par_id3149095 5   0 nb Du kan bruke hurtigtastene \u00abShift\u00a0+ \\<switchinline select=\\\"sys\\\"\\>\\<caseinline select=\\\"MAC\\\"\\>Kommando\\</caseinline\\>\\<defaultinline\\>Ctrl\\</defaultinline\\>\\</switchinline\\>\u00a0+ F5\u00bb til \u00e5 bytte til innskriving av sidetall. N\u00e5r du trykker \u00abEnter\u00bb flyttes skrivemerket til den valgte siden.    20130618 17:22:18",
          "24071: helpcontent2 source\\text\\swriter\\02\\08080000.xhp 0 help tit    0 nb Kombinert visning    20130618 17:22:18",
          "24072: helpcontent2 source\\text\\swriter\\02\\08080000.xhp 0 help hd_id3151186 1   0 nb \\<link href=\\\"text/swriter/02/08080000.xhp\\\" name=\\\"Combined Display\\\"\\>Kombinert visning\\</link\\>    20130618 17:22:18",
          "24073: helpcontent2 source\\text\\swriter\\02\\08080000.xhp 0 help par_id3151172 2   0 nb \\<ahelp hid=\\\".uno:StatusBarFunc\\\" visibility=\\\"visible\\\"\\>Viser informasjon om det \u00e5pne dokumentet.\\</ahelp\\>    20130618 17:22:18",
          "24074: helpcontent2 source\\text\\swriter\\02\\08080000.xhp 0 help par_id3156375 3   0 nb N\u00e5r skrivemerket st\u00e5r i en bolk med et navn, vises navnet til bolken. N\u00e5r \u0000m",
          "24075: skrivemerket st\u00e5r i en tabell, vises navnet p\u00e5 tabellcellen. St\u00f8rrelsen til objektet vises n\u00e5r du redigerer rammer eller tegneobjekter.    20130618 17:22:18",
          "24076: helpcontent2 source\\text\\swriter\\02\\08080000.xhp 0 help par_id3145416 4   0 nb N\u00e5r skrivemerket st\u00e5r inne i tekst, kan du dobbeltklikke dette feltet for \u00e5 \u00e5pne dialogvinduet \\<link href=\\\"text/swriter/01/04090000.xhp\\\" name=\\\"Fields\\\"\\>\\<emph\\>Felter\\</emph\\>\\</link\\>. I dette vinduet kan du sette inn et felt der skrivemerket er plassert. N\u00e5r skrivemerket st\u00e5r i en tabell, kan du dobbeltklikke dette feltet for \u00e5 \u00e5pne dialogvinduet \\<emph\\>Tabellformat\\</emph\\>. Avhengig av hva slags objekt som er valgt, kan du \u00e5pne et vindu du kan bruke til \u00e5 redigere en bolk, et bilde, en flytende ramme, et OLE-objekt, direkte nummerering eller plasseringa og st\u00f8rrelsen til et tegneobjekt.    20130618 17:22:18",
          "",
          "---------------"
        ],
        "extras/l10n/source/pt/localize.sdf||extras/l10n/source/pt/localize.sdf": [
          "File: extras/l10n/source/pt/localize.sdf -> extras/l10n/source/pt/localize.sdf",
          "--- Hunk 1 ---",
          "[Context before]",
          "18251: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help hd_id3151184 70   0 pt Para mover um t\u00edtulo para cima ou para baixo no documento    20130618 17:22:18",
          "18252: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id0915200809400790    0 pt Certifique-se que todos os n\u00edveis de t\u00edtulo s\u00e3o mostrados no Navegador. Por predefini\u00e7\u00e3o, s\u00e3o mostrados todos os n\u00edveis. Consulte os seguintes passos para ficar a saber como alterar os n\u00edveis de t\u00edtulo mostrados.    20130618 17:22:18",
          "18253: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3151206 71   0 pt Na \\<emph\\>Barra padr\u00e3o\\</emph\\>, clique no \u00edcone \\<emph\\>Navegador\\</emph\\> \\<image id=\\\"img_id5211883\\\" src=\\\"res/commandimagelist/sc_navigator.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id5211883\\\"\\>\u00cdcone\\</alt\\>\\</image\\> para abrir o \\<emph\\>Navegador\\</emph\\>.    20130618 17:22:18",
          "18255: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3155089 74   0 pt Execute um dos seguintes procedimentos:    20130618 17:22:18",
          "18256: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3155114 63   0 pt Arraste um t\u00edtulo para um novo local da lista do \\<emph\\>Navegador\\</emph\\>.    20130618 17:22:18",
          "18257: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3155139 75   0 pt Clique num t\u00edtulo da lista do \\<emph\\>Navegador\\</emph\\> e, em seguida, clique no \u00edcone \\<emph\\>Subir um cap\u00edtulo\\</emph\\> \\<image id=\\\"img_id4217546\\\" src=\\\"sw/imglst/sc20174.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id4217546\\\"\\>\u00cdcone\\</alt\\>\\</image\\> ou \\<emph\\>Descer um cap\u00edtulo\\</emph\\> \\<image id=\\\"img_id6505788\\\" src=\\\"sw/imglst/sc20171.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id6505788\\\"\\>\u00cdcone\\</alt\\>\\</image\\>.    20130618 17:22:18",
          "",
          "[Removed Lines]",
          "18254: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3151238 72   0 pt No \\<emph\\>Navegador\\</emph\\>, clique no \u00edcone \\<emph\\>Vista de conte\u00fado\\</emph\\> \\<image id=\\\"img_id3156338\\\" src=\\\"sw/imglst/sc20244.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id3156338\\\"\\>\u00cdcone\\</alt\\>\\</image\\>.    20130618 17:22:18",
          "",
          "[Added Lines]",
          "18254: helpcontent2 source\\text\\swriter\\guide\\arrange_chapters.xhp 0 help par_id3151238 72   0 pt No \\<emph\\>Navegador\\</emph\\>, clique no \u00edcone \\<emph\\>Vista de conte\u00fado\\</emph\\> \\<image id=\\\"img_id3156338\\\" src=\\\"sw/imglst/sc20234.png\\\" width=\\\"0.564cm\\\" height=\\\"0.564cm\\\"\\>\\<alt id=\\\"alt_id3156338\\\"\\>\u00cdcone\\</alt\\>\\</image\\>.    20130618 17:22:18",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20775: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3146874 9   0 pt Ativar/desativar caixa de lista    20130618 17:22:18",
          "20776: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help hd_id3146891 10   0 pt Vista de conte\u00fado    20130618 17:22:18",
          "20777: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3145596 11   0 pt \\<ahelp hid=\\\"HID_NAVI_TBX8\\\"\\>Alterna entre a apresenta\u00e7\u00e3o de todas as categorias no Navegador e a categoria selecionada.\\</ahelp\\>    20130618 17:22:18",
          "20779: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3156067 12   0 pt Alternar a vista de conte\u00fado    20130618 17:22:18",
          "20780: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3155932 78   0 pt Para reordenar rapidamente os t\u00edtulos e o seu texto associado no seu documento, selecione a categoria \"T\u00edtulos\" na lista e, em seguida, clique no \u00edcone \\<emph\\>Vista de conte\u00fado\\</emph\\>. Agora, pode utilizar a fun\u00e7\u00e3o de arrastar e largar para reordenar os conte\u00fados.    20130618 17:22:18",
          "20781: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help hd_id3155381 13   0 pt Definir lembrete    20130618 17:22:18",
          "",
          "[Removed Lines]",
          "20778: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3154133    0 pt \\<image id=\\\"img_id3154140\\\" src=\\\"sw/imglst/sc20244.png\\\" width=\\\"0.2228in\\\" height=\\\"0.2228in\\\"\\>\\<alt id=\\\"alt_id3154140\\\"\\>\u00cdcone\\</alt\\>\\</image\\>    20130618 17:22:18",
          "",
          "[Added Lines]",
          "20778: helpcontent2 source\\text\\swriter\\01\\02110000.xhp 0 help par_id3154133    0 pt \\<image id=\\\"img_id3154140\\\" src=\\\"sw/imglst/sc20234.png\\\" width=\\\"0.2228in\\\" height=\\\"0.2228in\\\"\\>\\<alt id=\\\"alt_id3154140\\\"\\>\u00cdcone\\</alt\\>\\</image\\>    20130618 17:22:18",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a9d03fab3067fa1d6920f51c6faf9e95a19209e3",
      "candidate_info": {
        "commit_hash": "a9d03fab3067fa1d6920f51c6faf9e95a19209e3",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/a9d03fab3067fa1d6920f51c6faf9e95a19209e3",
        "files": [
          "main/extensions.lst"
        ],
        "message": "Updated English dictionary",
        "before_after_code_files": [
          "main/extensions.lst||main/extensions.lst"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/extensions.lst||main/extensions.lst": [
          "File: main/extensions.lst -> main/extensions.lst",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: # English dictionary",
          "41: [ language=en.* || language=de || language=it ]",
          "44: # English (USA, en_US) dictionary",
          "45: [ language==nl || language==ru ]",
          "",
          "[Removed Lines]",
          "42:     346f11fc7fa2468b639851dbeedbfed3 https://sourceforge.net/projects/aoo-extensions/files/17102/75/dict-en-20220301_aoo.oxt/download \"dict-en.oxt\"",
          "",
          "[Added Lines]",
          "42:     699c5617f350932cdce1b417228ced46 https://sourceforge.net/projects/aoo-extensions/files/17102/76/dict-en-20220401_aoo.oxt/download \"dict-en.oxt\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "023ceadb216698bc0415edb00149c2ab44f985b4",
      "candidate_info": {
        "commit_hash": "023ceadb216698bc0415edb00149c2ab44f985b4",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/023ceadb216698bc0415edb00149c2ab44f985b4",
        "files": [
          "main/svx/source/tbxctrls/colrctrl.src",
          "main/svx/source/tbxctrls/fontworkgallery.src",
          "main/svx/source/tbxctrls/grafctrl.src",
          "main/svx/source/tbxctrls/lboxctrl.src",
          "main/svx/source/tbxctrls/tbcontrl.src",
          "main/svx/source/tbxctrls/tbunosearchcontrollers.cxx",
          "main/svx/source/tbxctrls/tbunosearchcontrollers.src"
        ],
        "message": "Cleaned up resource files, removed whitespace\n\n(cherry picked from commit 843af519c84fff6efdefda5eb59775a5f5d4c0e5)",
        "before_after_code_files": [
          "main/svx/source/tbxctrls/colrctrl.src||main/svx/source/tbxctrls/colrctrl.src",
          "main/svx/source/tbxctrls/fontworkgallery.src||main/svx/source/tbxctrls/fontworkgallery.src",
          "main/svx/source/tbxctrls/grafctrl.src||main/svx/source/tbxctrls/grafctrl.src",
          "main/svx/source/tbxctrls/lboxctrl.src||main/svx/source/tbxctrls/lboxctrl.src",
          "main/svx/source/tbxctrls/tbcontrl.src||main/svx/source/tbxctrls/tbcontrl.src",
          "main/svx/source/tbxctrls/tbunosearchcontrollers.cxx||main/svx/source/tbxctrls/tbunosearchcontrollers.cxx",
          "main/svx/source/tbxctrls/tbunosearchcontrollers.src||main/svx/source/tbxctrls/tbunosearchcontrollers.src"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/svx/source/tbxctrls/colrctrl.src||main/svx/source/tbxctrls/colrctrl.src": [
          "File: main/svx/source/tbxctrls/colrctrl.src -> main/svx/source/tbxctrls/colrctrl.src",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:  Zoomable = TRUE ;",
          "40:  Dockable = TRUE ;",
          "41:  EnableResizing = TRUE ;",
          "43:  Text [ en-US ] = \"Colors\" ;",
          "44:  Control 1",
          "45:  {",
          "46:   HelpId = HID_COLOR_CTL_COLORS ;",
          "49:   Border = FALSE ;",
          "50:  };",
          "51: };",
          "",
          "[Removed Lines]",
          "42:  Size = MAP_APPFONT ( 150 , 22 ) ;",
          "47:   Pos = MAP_APPFONT ( 2 , 2 ) ;",
          "48:   Size = MAP_APPFONT ( 146 , 18 ) ;",
          "",
          "[Added Lines]",
          "43:  Size = MAP_APPFONT ( 150, 22 ) ;",
          "48:   Pos = MAP_APPFONT ( 2, 2 ) ;",
          "49:   Size = MAP_APPFONT ( 146, 18 ) ;",
          "",
          "---------------"
        ],
        "main/svx/source/tbxctrls/fontworkgallery.src||main/svx/source/tbxctrls/fontworkgallery.src": [
          "File: main/svx/source/tbxctrls/fontworkgallery.src -> main/svx/source/tbxctrls/fontworkgallery.src",
          "--- Hunk 1 ---",
          "[Context before]",
          "187:  };",
          "188:  Image IMG_FONTWORK_ALIGN_STRETCH_26",
          "189:  {",
          "191:  };",
          "192:  Image IMG_FONTWORK_ALIGN_STRETCH_26_H",
          "193:  {",
          "195:  };",
          "196: };",
          "",
          "[Removed Lines]",
          "190:   ImageBitmap = Bitmap {File = \"fontworkalignstretch_26.png\"; } ;",
          "194:   ImageBitmap = Bitmap {File = \"fontworkalignstretch_26_h.png\"; } ;",
          "",
          "[Added Lines]",
          "190:   ImageBitmap = Bitmap {File = \"fontworkalignstretch_26.png\" ;} ;",
          "194:   ImageBitmap = Bitmap {File = \"fontworkalignstretch_26_h.png\" ;} ;",
          "",
          "---------------"
        ],
        "main/svx/source/tbxctrls/grafctrl.src||main/svx/source/tbxctrls/grafctrl.src": [
          "File: main/svx/source/tbxctrls/grafctrl.src -> main/svx/source/tbxctrls/grafctrl.src",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: FloatingWindow RID_SVXTBX_GRFFILTER",
          "30: {",
          "54:    };",
          "59:    };",
          "64:    };",
          "69:    ToolBoxItem",
          "70:    {",
          "71:     Identifier = SID_GRFFILTER_SOLARIZE ;",
          "",
          "[Removed Lines]",
          "31:     HelpId = HID_GRFFILTER;",
          "32:     Moveable = TRUE ;",
          "33:     Closeable = TRUE ;",
          "34:     Hide = TRUE ;",
          "35:     SVLook = TRUE ;",
          "36:     Text [ en-US ] = \"Filters\" ;",
          "37:     ToolBox TBX_GRFFILTER",
          "38:     {",
          "39:         SVLook = TRUE ;",
          "40:         MenuStrings = TRUE ;",
          "41:         Align = BOXALIGN_TOP;",
          "42:         LineCount = 3;",
          "43:         ItemList =",
          "44:         {",
          "45:             ToolBoxItem",
          "46:             {",
          "47:                 Identifier = SID_GRFFILTER_INVERT ;",
          "48:                 HelpID = HID_GRFFILTER_INVERT ;",
          "49:             };",
          "50:             ToolBoxItem",
          "51:             {",
          "52:                 Identifier = SID_GRFFILTER_SMOOTH ;",
          "53:                 HelpID = HID_GRFFILTER_SMOOTH ;",
          "55:             ToolBoxItem",
          "56:             {",
          "57:                 Identifier = SID_GRFFILTER_SHARPEN ;",
          "58:                 HelpID = HID_GRFFILTER_SHARPEN ;",
          "60:             ToolBoxItem",
          "61:             {",
          "62:                 Identifier = SID_GRFFILTER_REMOVENOISE ;",
          "63:                 HelpID = HID_GRFFILTER_REMOVENOISE ;",
          "65:             ToolBoxItem",
          "66:             {",
          "67:                 Type = TOOLBOXITEM_BREAK ;",
          "68:             };",
          "",
          "[Added Lines]",
          "31:  HelpId = HID_GRFFILTER ;",
          "32:  Moveable = TRUE ;",
          "33:  Closeable = TRUE ;",
          "34:  Hide = TRUE ;",
          "35:  SVLook = TRUE ;",
          "36:  Text [ en-US ] = \"Filters\" ;",
          "37:  ToolBox TBX_GRFFILTER",
          "38:  {",
          "39:   SVLook = TRUE ;",
          "40:   MenuStrings = TRUE ;",
          "41:   Align = BOXALIGN_TOP ;",
          "42:   LineCount = 3 ;",
          "43:   ItemList =",
          "44:   {",
          "45:    ToolBoxItem",
          "46:    {",
          "47:     Identifier = SID_GRFFILTER_INVERT ;",
          "48:     HelpID = HID_GRFFILTER_INVERT ;",
          "50:    ToolBoxItem",
          "51:    {",
          "52:     Identifier = SID_GRFFILTER_SMOOTH ;",
          "53:     HelpID = HID_GRFFILTER_SMOOTH ;",
          "55:    ToolBoxItem",
          "56:    {",
          "57:     Identifier = SID_GRFFILTER_SHARPEN ;",
          "58:     HelpID = HID_GRFFILTER_SHARPEN ;",
          "59:    };",
          "60:    ToolBoxItem",
          "61:    {",
          "62:     Identifier = SID_GRFFILTER_REMOVENOISE ;",
          "63:     HelpID = HID_GRFFILTER_REMOVENOISE ;",
          "64:    };",
          "65:    ToolBoxItem",
          "66:    {",
          "67:     Type = TOOLBOXITEM_BREAK ;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "86:     Identifier = SID_GRFFILTER_POPART ;",
          "87:     HelpId = HID_GRFFILTER_POPART ;",
          "88:    };",
          "93:    ToolBoxItem",
          "94:    {",
          "95:     Identifier = SID_GRFFILTER_SOBEL ;",
          "",
          "[Removed Lines]",
          "89:             ToolBoxItem",
          "90:             {",
          "91:                 Type = TOOLBOXITEM_BREAK ;",
          "92:             };",
          "",
          "[Added Lines]",
          "89:    ToolBoxItem",
          "90:    {",
          "91:     Type = TOOLBOXITEM_BREAK ;",
          "92:    };",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "105:     Identifier = SID_GRFFILTER_MOSAIC ;",
          "106:     HelpId = HID_GRFFILTER_MOSAIC ;",
          "107:    };",
          "110: };",
          "",
          "[Removed Lines]",
          "108:         };",
          "109:     };",
          "",
          "[Added Lines]",
          "108:   };",
          "109:  };",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "116: String RID_SVXSTR_UNDO_GRAFMODE",
          "117: {",
          "119: };",
          "120: String RID_SVXSTR_UNDO_GRAFRED",
          "121: {",
          "123: };",
          "124: String RID_SVXSTR_UNDO_GRAFGREEN",
          "125: {",
          "127: };",
          "128: String RID_SVXSTR_UNDO_GRAFBLUE",
          "129: {",
          "131: };",
          "132: String RID_SVXSTR_UNDO_GRAFLUMINANCE",
          "133: {",
          "135: };",
          "136: String RID_SVXSTR_UNDO_GRAFCONTRAST",
          "137: {",
          "139: };",
          "140: String RID_SVXSTR_UNDO_GRAFGAMMA",
          "141: {",
          "143: };",
          "144: String RID_SVXSTR_UNDO_GRAFTRANSPARENCY",
          "145: {",
          "147: };",
          "148: String RID_SVXSTR_GRAFCROP",
          "149: {",
          "151: };",
          "",
          "[Removed Lines]",
          "118:  Text [ en-US ] = \"Graphics Mode\";",
          "122:  Text [ en-US ] = \"Red\";",
          "126:  Text [ en-US ] = \"Green\";",
          "130:  Text [ en-US ] = \"Blue\";",
          "134:  Text [ en-US ] = \"Brightness\";",
          "138:  Text [ en-US ] = \"Contrast\";",
          "142:  Text [ en-US ] = \"Gamma\";",
          "146:  Text [ en-US ] = \"Transparency\";",
          "150:  Text [ en-US ] = \"Crop\";",
          "",
          "[Added Lines]",
          "118:  Text [ en-US ] = \"Graphics Mode\" ;",
          "122:  Text [ en-US ] = \"Red\" ;",
          "126:  Text [ en-US ] = \"Green\" ;",
          "130:  Text [ en-US ] = \"Blue\" ;",
          "134:  Text [ en-US ] = \"Brightness\" ;",
          "138:  Text [ en-US ] = \"Contrast\" ;",
          "142:  Text [ en-US ] = \"Gamma\" ;",
          "146:  Text [ en-US ] = \"Transparency\" ;",
          "150:  Text [ en-US ] = \"Crop\" ;",
          "",
          "---------------"
        ],
        "main/svx/source/tbxctrls/lboxctrl.src||main/svx/source/tbxctrls/lboxctrl.src": [
          "File: main/svx/source/tbxctrls/lboxctrl.src -> main/svx/source/tbxctrls/lboxctrl.src",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: FloatingWindow RID_SVXTBX_UNDO_REDO_CTRL",
          "29: {",
          "32:  HelpID = HID_SVXTBX_UNDO_REDO_CTRL ;",
          "34:  Border = TRUE ;",
          "35:  Hide = TRUE ;",
          "36:  SVLook = TRUE ;",
          "",
          "[Removed Lines]",
          "30:  Pos = MAP_APPFONT ( 0 , 0 ) ;",
          "31:  Size = MAP_APPFONT ( 150 , 74 ) ;",
          "33:  SysWin = TRUE;",
          "",
          "[Added Lines]",
          "30:  Pos = MAP_APPFONT ( 0, 0 ) ;",
          "31:  Size = MAP_APPFONT ( 150, 74 ) ;",
          "33:  SysWin = TRUE ;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:  ListBox LB_SVXTBX_UNDO_REDO_CTRL",
          "40:  {",
          "44:   Border = TRUE ;",
          "45:   DropDown = FALSE ;",
          "46:   OutputSize = TRUE ;",
          "47:  };",
          "48:  FixedText FT_NUM_OPERATIONS",
          "49:  {",
          "52:  };",
          "53: };",
          "55: String RID_SVXSTR_NUM_UNDO_ACTIONS",
          "56: {",
          "58: };",
          "60: String RID_SVXSTR_NUM_UNDO_ACTION",
          "61: {",
          "63: };",
          "65: String RID_SVXSTR_NUM_REDO_ACTIONS",
          "66: {",
          "68: };",
          "70: String RID_SVXSTR_NUM_REDO_ACTION",
          "71: {",
          "73: };",
          "",
          "[Removed Lines]",
          "41:      HelpID = \"svx:ListBox:RID_SVXTBX_UNDO_REDO_CTRL:LB_SVXTBX_UNDO_REDO_CTRL\";",
          "42:   Pos = MAP_APPFONT ( 0 , 0 ) ;",
          "43:   Size = MAP_APPFONT ( 150 , 60 ) ;",
          "50:   Pos = MAP_APPFONT ( 6 , 64 ) ;",
          "51:   Size = MAP_APPFONT ( 138 , 10 ) ;",
          "57:  Text[ en-US ] = \"Actions to undo: $(ARG1)\";",
          "62:     Text[ en-US ] = \"Actions to undo: $(ARG1)\" ;",
          "67:  Text[ en-US ] = \"Actions to redo: $(ARG1)\";",
          "72:  Text[ en-US ] = \"Actions to redo: $(ARG1)\";",
          "",
          "[Added Lines]",
          "41:   HelpID = \"svx:ListBox:RID_SVXTBX_UNDO_REDO_CTRL:LB_SVXTBX_UNDO_REDO_CTRL\" ;",
          "42:   Pos = MAP_APPFONT ( 0, 0 ) ;",
          "43:   Size = MAP_APPFONT ( 150, 60 ) ;",
          "50:   Pos = MAP_APPFONT ( 6, 64 ) ;",
          "51:   Size = MAP_APPFONT ( 138, 10 ) ;",
          "57:  Text [ en-US ] = \"Actions to undo: $(ARG1)\" ;",
          "62:  Text [ en-US ] = \"Actions to undo: $(ARG1)\" ;",
          "67:  Text [ en-US ] = \"Actions to redo: $(ARG1)\" ;",
          "72:  Text [ en-US ] = \"Actions to redo: $(ARG1)\" ;",
          "",
          "---------------"
        ],
        "main/svx/source/tbxctrls/tbcontrl.src||main/svx/source/tbxctrls/tbcontrl.src": [
          "File: main/svx/source/tbxctrls/tbcontrl.src -> main/svx/source/tbxctrls/tbcontrl.src",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: Image RID_SVX_RELOAD_NORMAL",
          "36: {",
          "37:  ImageBitmap = Bitmap { File = \"reload.png\" ; };",
          "39: };",
          "40: Image RID_SVX_RELOAD_SPECIAL",
          "41: {",
          "42:  ImageBitmap = Bitmap { File = \"reloads.png\" ; };",
          "44: };",
          "45: ImageList RID_SVXIL_FRAME",
          "46: {",
          "",
          "[Removed Lines]",
          "38:  MASKCOLOR",
          "43:  MASKCOLOR",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "106: Image RID_SVXIMG_GRAF_RED",
          "107: {",
          "108:  ImageBitmap = Bitmap { File = \"sc10865.png\" ; };",
          "110: };",
          "111: Image RID_SVXIMG_GRAF_GREEN",
          "112: {",
          "113:  ImageBitmap = Bitmap { File = \"sc10866.png\" ; };",
          "115: };",
          "116: Image RID_SVXIMG_GRAF_BLUE",
          "117: {",
          "118:  ImageBitmap = Bitmap { File = \"sc10867.png\" ; };",
          "120: };",
          "121: Image RID_SVXIMG_GRAF_LUMINANCE",
          "122: {",
          "123:  ImageBitmap = Bitmap { File = \"sc10863.png\" ; };",
          "125: };",
          "126: Image RID_SVXIMG_GRAF_CONTRAST",
          "127: {",
          "128:  ImageBitmap = Bitmap { File = \"sc10864.png\" ; };",
          "130: };",
          "131: Image RID_SVXIMG_GRAF_GAMMA",
          "132: {",
          "133:  ImageBitmap = Bitmap { File = \"sc10868.png\" ; };",
          "135: };",
          "136: Image RID_SVXIMG_GRAF_TRANSPARENCE",
          "137: {",
          "138:  ImageBitmap = Bitmap { File = \"sc10869.png\" ; };",
          "140: };",
          "141: Image RID_SVXIMG_GRAF_RED_H",
          "142: {",
          "143:  ImageBitmap = Bitmap { File = \"sch10865.png\" ; };",
          "145: };",
          "146: Image RID_SVXIMG_GRAF_GREEN_H",
          "147: {",
          "148:  ImageBitmap = Bitmap { File = \"sch10866.png\" ; };",
          "150: };",
          "151: Image RID_SVXIMG_GRAF_BLUE_H",
          "152: {",
          "153:  ImageBitmap = Bitmap { File = \"sch10867.png\" ; };",
          "155: };",
          "156: Image RID_SVXIMG_GRAF_LUMINANCE_H",
          "157: {",
          "158:  ImageBitmap = Bitmap { File = \"sch10863.png\" ; };",
          "160: };",
          "161: Image RID_SVXIMG_GRAF_CONTRAST_H",
          "162: {",
          "163:  ImageBitmap = Bitmap { File = \"sch10864.png\" ; };",
          "165: };",
          "166: Image RID_SVXIMG_GRAF_GAMMA_H",
          "167: {",
          "168:  ImageBitmap = Bitmap { File = \"sch10868.png\" ; };",
          "170: };",
          "171: Image RID_SVXIMG_GRAF_TRANSPARENCE_H",
          "172: {",
          "173:  ImageBitmap = Bitmap { File = \"sch10869.png\" ; };",
          "175: };",
          "176: String RID_SVXSTR_CLEARFORM",
          "177: {",
          "",
          "[Removed Lines]",
          "109:  MASKCOLOR",
          "114:  MASKCOLOR",
          "119:  MASKCOLOR",
          "124:  MASKCOLOR",
          "129:  MASKCOLOR",
          "134:  MASKCOLOR",
          "139:  MASKCOLOR",
          "144:  MASKCOLOR",
          "149:  MASKCOLOR",
          "154:  MASKCOLOR",
          "159:  MASKCOLOR",
          "164:  MASKCOLOR",
          "169:  MASKCOLOR",
          "174:  MASKCOLOR",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "main/svx/source/tbxctrls/tbunosearchcontrollers.cxx||main/svx/source/tbxctrls/tbunosearchcontrollers.cxx": [
          "File: main/svx/source/tbxctrls/tbunosearchcontrollers.cxx -> main/svx/source/tbxctrls/tbunosearchcontrollers.cxx",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: static const ::rtl::OUString SEARCHITEM_SEARCHBACKWARD = ::rtl::OUString::createFromAscii(\"SearchItem.Backward\");",
          "47: static const ::rtl::OUString COMMAND_EXECUTESEARCH = ::rtl::OUString::createFromAscii(\".uno:ExecuteSearch\");",
          "49: static const ::rtl::OUString COMMAND_DOWNSEARCH = ::rtl::OUString::createFromAscii(\".uno:DownSearch\");",
          "51: static const ::rtl::OUString COMMAND_APPENDSEARCHHISTORY   = ::rtl::OUString::createFromAscii(\"AppendSearchHistory\");",
          "53: static const ::rtl::OUString SERVICENAME_URLTRANSFORMER = ::rtl::OUString::createFromAscii(\"com.sun.star.util.URLTransformer\");",
          "",
          "[Removed Lines]",
          "48: static const ::rtl::OUString COMMAND_FINDTEXT   = ::rtl::OUString::createFromAscii(\".uno:FindText\")  ;",
          "50: static const ::rtl::OUString COMMAND_UPSEARCH   = ::rtl::OUString::createFromAscii(\".uno:UpSearch\")  ;",
          "",
          "[Added Lines]",
          "48: static const ::rtl::OUString COMMAND_FINDTEXT   = ::rtl::OUString::createFromAscii(\".uno:FindText\");",
          "50: static const ::rtl::OUString COMMAND_UPSEARCH   = ::rtl::OUString::createFromAscii(\".uno:UpSearch\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56: void impl_executeSearch( const css::uno::Reference< css::lang::XMultiServiceFactory >& rSMgr, const css::uno::Reference< css::frame::XFrame >& xFrame, const css::uno::Sequence< css::beans::PropertyValue >& lArgs )",
          "57: {",
          "73: }",
          "82: {",
          "84: }",
          "86: FindTextFieldControl::~FindTextFieldControl()",
          "",
          "[Removed Lines]",
          "58:     css::uno::Reference< css::util::XURLTransformer > xURLTransformer( rSMgr->createInstance(SERVICENAME_URLTRANSFORMER), css::uno::UNO_QUERY );",
          "59:     if ( xURLTransformer.is() )",
          "60:     {",
          "61:         css::util::URL aURL;",
          "62:         aURL.Complete = COMMAND_EXECUTESEARCH;",
          "63:         xURLTransformer->parseStrict(aURL);",
          "65:         css::uno::Reference< css::frame::XDispatchProvider > xDispatchProvider(xFrame, css::uno::UNO_QUERY);",
          "66:         if ( xDispatchProvider.is() )",
          "67:         {",
          "68:             css::uno::Reference< css::frame::XDispatch > xDispatch = xDispatchProvider->queryDispatch( aURL, ::rtl::OUString(), 0 );",
          "69:             if ( xDispatch.is() && aURL.Complete.getLength() > 0 )",
          "70:                 xDispatch->dispatch( aURL, lArgs );",
          "71:         }",
          "72:     }",
          "75: FindTextFieldControl::FindTextFieldControl( Window* pParent, WinBits nStyle,",
          "76:     css::uno::Reference< css::frame::XFrame >& xFrame,",
          "77:     css::uno::Reference< css::lang::XMultiServiceFactory >& xServiceManager) :",
          "78:     ComboBox( pParent, nStyle ),",
          "79:     m_xFrame(xFrame),",
          "80:     m_xServiceManager(xServiceManager),",
          "81:     m_bToClearTextField(sal_True)",
          "83:     InitControls_Impl();",
          "",
          "[Added Lines]",
          "58:  css::uno::Reference< css::util::XURLTransformer > xURLTransformer( rSMgr->createInstance(SERVICENAME_URLTRANSFORMER), css::uno::UNO_QUERY );",
          "59:  if ( xURLTransformer.is() )",
          "60:  {",
          "61:   css::util::URL aURL;",
          "62:   aURL.Complete = COMMAND_EXECUTESEARCH;",
          "63:   xURLTransformer->parseStrict(aURL);",
          "65:   css::uno::Reference< css::frame::XDispatchProvider > xDispatchProvider(xFrame, css::uno::UNO_QUERY);",
          "66:   if ( xDispatchProvider.is() )",
          "67:   {",
          "68:    css::uno::Reference< css::frame::XDispatch > xDispatch = xDispatchProvider->queryDispatch( aURL, ::rtl::OUString(), 0 );",
          "69:    if ( xDispatch.is() && aURL.Complete.getLength() > 0 )",
          "70:     xDispatch->dispatch( aURL, lArgs );",
          "71:   }",
          "72:  }",
          "75: FindTextFieldControl::FindTextFieldControl( Window* pParent, WinBits nStyle,",
          "76:  css::uno::Reference< css::frame::XFrame >& xFrame,",
          "77:  css::uno::Reference< css::lang::XMultiServiceFactory >& xServiceManager) :",
          "78:  ComboBox( pParent, nStyle ),",
          "79:  m_xFrame(xFrame),",
          "80:  m_xServiceManager(xServiceManager),",
          "81:  m_bToClearTextField(sal_True)",
          "83:  InitControls_Impl();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "90: void FindTextFieldControl::InitControls_Impl()",
          "91: {",
          "96: }",
          "98: void FindTextFieldControl::Remember_Impl(const String& rStr)",
          "99: {",
          "112: }",
          "114: void FindTextFieldControl::Modify()",
          "115: {",
          "119: }",
          "121: long FindTextFieldControl::PreNotify( NotifyEvent& rNEvt )",
          "122: {",
          "183: }",
          "",
          "[Removed Lines]",
          "92:     SetText( SVX_RESSTR( RID_SVXSTR_FINDBAR_FIND ) );",
          "93:     SetControlForeground(GetSettings().GetStyleSettings().GetDisableColor());",
          "95:     EnableAutocomplete(sal_True, sal_True);",
          "100:     sal_uInt16 nCount = GetEntryCount();",
          "102:     for (sal_uInt16 i=0; i<nCount; ++i)",
          "103:     {",
          "104:         if ( rStr == GetEntry(i))",
          "105:             return;",
          "106:     }",
          "108:     if (nCount == REMEMBER_SIZE)",
          "109:         RemoveEntry(REMEMBER_SIZE-1);",
          "111:     InsertEntry(rStr, 0);",
          "116:     ComboBox::Modify();",
          "118:     SetControlForeground( GetSettings().GetStyleSettings().GetWindowTextColor() );",
          "123:     long nRet= ComboBox::PreNotify( rNEvt );",
          "125:     switch ( rNEvt.GetType() )",
          "126:     {",
          "127:         case EVENT_KEYINPUT:",
          "128:         {",
          "129:             const KeyEvent* pKeyEvent = rNEvt.GetKeyEvent();",
          "130:             sal_Bool bCtrl = pKeyEvent->GetKeyCode().IsMod1();",
          "131:             sal_Bool bAlt = pKeyEvent->GetKeyCode().IsMod2();",
          "132:             sal_Bool bShift = pKeyEvent->GetKeyCode().IsShift();",
          "133:             sal_uInt16 nCode = pKeyEvent->GetKeyCode().GetCode();",
          "135:             if ( (bCtrl && bAlt && KEY_F == nCode) || KEY_ESCAPE == nCode )",
          "136:             {",
          "137:                 nRet = 1;",
          "138:                 GrabFocusToDocument();",
          "139:             }",
          "141:             if ( KEY_RETURN == nCode )",
          "142:             {",
          "143:                 Remember_Impl(GetText());",
          "145:                 ::rtl::OUString sFindText = GetText();",
          "146:                 css::uno::Sequence< css::beans::PropertyValue > lArgs(2);",
          "148:                 lArgs[0].Name = SEARCHITEM_SEARCHSTRING;",
          "149:                 lArgs[0].Value <<= sFindText;",
          "151:                 lArgs[1].Name = SEARCHITEM_SEARCHBACKWARD;",
          "152:                 if (bShift)",
          "153:                     lArgs[1].Value <<= sal_True;",
          "154:                 else",
          "155:                     lArgs[1].Value <<= sal_False;",
          "157:                 impl_executeSearch(m_xServiceManager, m_xFrame, lArgs);",
          "158:                 nRet = 1;",
          "159:             }",
          "160:             break;",
          "161:         }",
          "163:         case EVENT_GETFOCUS:",
          "164:             if ( m_bToClearTextField )",
          "165:             {",
          "166:                 SetText( String() );",
          "167:                 m_bToClearTextField = sal_False;",
          "168:             }",
          "169:             SetSelection( Selection( SELECTION_MIN, SELECTION_MAX ) );",
          "170:             break;",
          "172:         case EVENT_LOSEFOCUS:",
          "173:             if ( GetText().Len() == 0 )",
          "174:             {",
          "175:                 SetText( SVX_RESSTR( RID_SVXSTR_FINDBAR_FIND ) );",
          "176:                 SetControlForeground(GetSettings().GetStyleSettings().GetDisableColor());",
          "177:                 m_bToClearTextField = sal_True;",
          "178:             }",
          "179:             break;",
          "180:     }",
          "182:     return nRet;",
          "",
          "[Added Lines]",
          "92:  SetText( SVX_RESSTR( RID_SVXSTR_FINDBAR_FIND ) );",
          "93:  SetControlForeground(GetSettings().GetStyleSettings().GetDisableColor());",
          "95:  EnableAutocomplete(sal_True, sal_True);",
          "100:  sal_uInt16 nCount = GetEntryCount();",
          "102:  for (sal_uInt16 i=0; i<nCount; ++i)",
          "103:  {",
          "104:   if ( rStr == GetEntry(i))",
          "105:    return;",
          "106:  }",
          "108:  if (nCount == REMEMBER_SIZE)",
          "109:   RemoveEntry(REMEMBER_SIZE-1);",
          "111:  InsertEntry(rStr, 0);",
          "116:  ComboBox::Modify();",
          "118:  SetControlForeground( GetSettings().GetStyleSettings().GetWindowTextColor() );",
          "123:  long nRet= ComboBox::PreNotify( rNEvt );",
          "125:  switch ( rNEvt.GetType() )",
          "126:  {",
          "127:   case EVENT_KEYINPUT:",
          "128:   {",
          "129:    const KeyEvent* pKeyEvent = rNEvt.GetKeyEvent();",
          "130:    sal_Bool bCtrl = pKeyEvent->GetKeyCode().IsMod1();",
          "131:    sal_Bool bAlt = pKeyEvent->GetKeyCode().IsMod2();",
          "132:    sal_Bool bShift = pKeyEvent->GetKeyCode().IsShift();",
          "133:    sal_uInt16 nCode = pKeyEvent->GetKeyCode().GetCode();",
          "135:    if ( (bCtrl && bAlt && KEY_F == nCode) || KEY_ESCAPE == nCode )",
          "136:    {",
          "137:     nRet = 1;",
          "138:     GrabFocusToDocument();",
          "139:    }",
          "141:    if ( KEY_RETURN == nCode )",
          "142:    {",
          "143:     Remember_Impl(GetText());",
          "145:     ::rtl::OUString sFindText = GetText();",
          "146:     css::uno::Sequence< css::beans::PropertyValue > lArgs(2);",
          "148:     lArgs[0].Name = SEARCHITEM_SEARCHSTRING;",
          "149:     lArgs[0].Value <<= sFindText;",
          "151:     lArgs[1].Name = SEARCHITEM_SEARCHBACKWARD;",
          "152:     if (bShift)",
          "153:      lArgs[1].Value <<= sal_True;",
          "154:     else",
          "155:      lArgs[1].Value <<= sal_False;",
          "157:     impl_executeSearch(m_xServiceManager, m_xFrame, lArgs);",
          "158:     nRet = 1;",
          "159:    }",
          "160:    break;",
          "161:   }",
          "163:   case EVENT_GETFOCUS:",
          "164:    if ( m_bToClearTextField )",
          "165:    {",
          "166:     SetText( String() );",
          "167:     m_bToClearTextField = sal_False;",
          "168:    }",
          "169:    SetSelection( Selection( SELECTION_MIN, SELECTION_MAX ) );",
          "170:    break;",
          "172:   case EVENT_LOSEFOCUS:",
          "173:    if ( GetText().Len() == 0 )",
          "174:    {",
          "175:     SetText( SVX_RESSTR( RID_SVXSTR_FINDBAR_FIND ) );",
          "176:     SetControlForeground(GetSettings().GetStyleSettings().GetDisableColor());",
          "177:     m_bToClearTextField = sal_True;",
          "178:    }",
          "179:    break;",
          "180:  }",
          "182:  return nRet;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "199: SearchToolbarControllersManager* SearchToolbarControllersManager::createControllersManager()",
          "200: {",
          "205: }",
          "207: void SearchToolbarControllersManager::registryController( const css::uno::Reference< css::frame::XFrame >& xFrame, const css::uno::Reference< css::frame::XStatusListener >& xStatusListener, const ::rtl::OUString& sCommandURL )",
          "208: {",
          "230: }",
          "232: void SearchToolbarControllersManager::freeController( const css::uno::Reference< css::frame::XFrame >& xFrame, const css::uno::Reference< css::frame::XStatusListener >& /*xStatusListener*/, const ::rtl::OUString& sCommandURL )",
          "233: {",
          "249: }",
          "251: css::uno::Reference< css::frame::XStatusListener > SearchToolbarControllersManager::findController( const css::uno::Reference< css::frame::XFrame >& xFrame, const ::rtl::OUString& sCommandURL )",
          "252: {",
          "269: }",
          "274: FindTextToolbarController::FindTextToolbarController( const css::uno::Reference< css::lang::XMultiServiceFactory >& rServiceManager )",
          "278: {",
          "279: }",
          "",
          "[Removed Lines]",
          "201:     if (!m_pInstance)",
          "202:         m_pInstance = new SearchToolbarControllersManager();",
          "204:     return m_pInstance;",
          "209:     SearchToolbarControllersMap::iterator pIt = aSearchToolbarControllersMap.find(xFrame);",
          "210:     if (pIt == aSearchToolbarControllersMap.end())",
          "211:     {",
          "212:         SearchToolbarControllersVec lControllers(1);",
          "213:         lControllers[0].Name = sCommandURL;",
          "214:         lControllers[0].Value <<= xStatusListener;",
          "215:         aSearchToolbarControllersMap.insert(SearchToolbarControllersMap::value_type(xFrame, lControllers));",
          "216:     }",
          "217:     else",
          "218:     {",
          "219:         sal_Int32 nSize = pIt->second.size();",
          "220:         for (sal_Int32 i=0; i<nSize; ++i)",
          "221:         {",
          "222:             if (pIt->second[i].Name.equals(sCommandURL))",
          "223:                 return;",
          "224:         }",
          "226:         pIt->second.resize(nSize+1);",
          "227:         pIt->second[nSize].Name = sCommandURL;",
          "228:         pIt->second[nSize].Value <<= xStatusListener;",
          "229:     }",
          "234:     SearchToolbarControllersMap::iterator pIt = aSearchToolbarControllersMap.find(xFrame);",
          "235:     if (pIt != aSearchToolbarControllersMap.end())",
          "236:     {",
          "237:         for (SearchToolbarControllersVec::iterator pItCtrl=pIt->second.begin(); pItCtrl!=pIt->second.end(); ++pItCtrl)",
          "238:         {",
          "239:             if (pItCtrl->Name.equals(sCommandURL))",
          "240:             {",
          "241:                 pIt->second.erase(pItCtrl);",
          "242:                 break;",
          "243:             }",
          "244:         }",
          "246:         if (pIt->second.empty())",
          "247:             aSearchToolbarControllersMap.erase(pIt);",
          "248:     }",
          "253:     css::uno::Reference< css::frame::XStatusListener > xStatusListener;",
          "255:     SearchToolbarControllersMap::iterator pIt = aSearchToolbarControllersMap.find(xFrame);",
          "256:     if (pIt != aSearchToolbarControllersMap.end())",
          "257:     {",
          "258:         for (SearchToolbarControllersVec::iterator pItCtrl =pIt->second.begin(); pItCtrl != pIt->second.end(); ++pItCtrl)",
          "259:         {",
          "260:             if (pItCtrl->Name.equals(sCommandURL))",
          "261:             {",
          "262:                 pItCtrl->Value >>= xStatusListener;",
          "263:                 break;",
          "264:             }",
          "265:         }",
          "266:     }",
          "268:     return xStatusListener;",
          "275:     :svt::ToolboxController( rServiceManager,",
          "276:     css::uno::Reference< css::frame::XFrame >(),",
          "277:     COMMAND_FINDTEXT )",
          "",
          "[Added Lines]",
          "201:  if (!m_pInstance)",
          "202:   m_pInstance = new SearchToolbarControllersManager();",
          "204:  return m_pInstance;",
          "209:  SearchToolbarControllersMap::iterator pIt = aSearchToolbarControllersMap.find(xFrame);",
          "210:  if (pIt == aSearchToolbarControllersMap.end())",
          "211:  {",
          "212:   SearchToolbarControllersVec lControllers(1);",
          "213:   lControllers[0].Name = sCommandURL;",
          "214:   lControllers[0].Value <<= xStatusListener;",
          "215:   aSearchToolbarControllersMap.insert(SearchToolbarControllersMap::value_type(xFrame, lControllers));",
          "216:  }",
          "217:  else",
          "218:  {",
          "219:   sal_Int32 nSize = pIt->second.size();",
          "220:   for (sal_Int32 i=0; i<nSize; ++i)",
          "221:   {",
          "222:    if (pIt->second[i].Name.equals(sCommandURL))",
          "223:     return;",
          "224:   }",
          "226:   pIt->second.resize(nSize+1);",
          "227:   pIt->second[nSize].Name = sCommandURL;",
          "228:   pIt->second[nSize].Value <<= xStatusListener;",
          "229:  }",
          "234:  SearchToolbarControllersMap::iterator pIt = aSearchToolbarControllersMap.find(xFrame);",
          "235:  if (pIt != aSearchToolbarControllersMap.end())",
          "236:  {",
          "237:   for (SearchToolbarControllersVec::iterator pItCtrl=pIt->second.begin(); pItCtrl!=pIt->second.end(); ++pItCtrl)",
          "238:   {",
          "239:    if (pItCtrl->Name.equals(sCommandURL))",
          "240:    {",
          "241:     pIt->second.erase(pItCtrl);",
          "242:     break;",
          "243:    }",
          "244:   }",
          "246:   if (pIt->second.empty())",
          "247:    aSearchToolbarControllersMap.erase(pIt);",
          "248:  }",
          "253:  css::uno::Reference< css::frame::XStatusListener > xStatusListener;",
          "255:  SearchToolbarControllersMap::iterator pIt = aSearchToolbarControllersMap.find(xFrame);",
          "256:  if (pIt != aSearchToolbarControllersMap.end())",
          "257:  {",
          "258:   for (SearchToolbarControllersVec::iterator pItCtrl =pIt->second.begin(); pItCtrl != pIt->second.end(); ++pItCtrl)",
          "259:   {",
          "260:    if (pItCtrl->Name.equals(sCommandURL))",
          "261:    {",
          "262:     pItCtrl->Value >>= xStatusListener;",
          "263:     break;",
          "264:    }",
          "265:   }",
          "266:  }",
          "268:  return xStatusListener;",
          "275:  :svt::ToolboxController( rServiceManager,",
          "276:  css::uno::Reference< css::frame::XFrame >(),",
          "277:  COMMAND_FINDTEXT )",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "286: css::uno::Any SAL_CALL FindTextToolbarController::queryInterface( const css::uno::Type& aType ) throw ( css::uno::RuntimeException )",
          "287: {",
          "293: }",
          "295: void SAL_CALL FindTextToolbarController::acquire() throw ()",
          "296: {",
          "298: }",
          "300: void SAL_CALL FindTextToolbarController::release() throw ()",
          "301: {",
          "303: }",
          "306: ::rtl::OUString SAL_CALL FindTextToolbarController::getImplementationName() throw( css::uno::RuntimeException )",
          "307: {",
          "309: }",
          "311: sal_Bool SAL_CALL FindTextToolbarController::supportsService( const ::rtl::OUString& ServiceName ) throw( css::uno::RuntimeException )",
          "321: }",
          "323: css::uno::Sequence< ::rtl::OUString > SAL_CALL FindTextToolbarController::getSupportedServiceNames() throw( css::uno::RuntimeException )",
          "324: {",
          "326: }",
          "329: {",
          "333: }",
          "336: void SAL_CALL FindTextToolbarController::dispose() throw ( css::uno::RuntimeException )",
          "337: {",
          "345: }",
          "348: void SAL_CALL FindTextToolbarController::initialize( const css::uno::Sequence< ::com::sun::star::uno::Any >& aArguments ) throw ( css::uno::Exception, css::uno::RuntimeException)",
          "349: {",
          "368: }",
          "",
          "[Removed Lines]",
          "288:     css::uno::Any a = ToolboxController::queryInterface( aType );",
          "289:     if ( a.hasValue() )",
          "290:         return a;",
          "292:     return ::cppu::queryInterface( aType, static_cast< css::lang::XServiceInfo* >( this ) );",
          "297:     ToolboxController::acquire();",
          "302:     ToolboxController::release();",
          "308:     return getImplementationName_Static();",
          "312: {",
          "313:     const css::uno::Sequence< ::rtl::OUString > aSNL( getSupportedServiceNames() );",
          "314:     const ::rtl::OUString * pArray = aSNL.getConstArray();",
          "316:     for( sal_Int32 i = 0; i < aSNL.getLength(); i++ )",
          "317:         if( pArray[i] == ServiceName )",
          "318:             return true;",
          "320:     return false;",
          "325:     return getSupportedServiceNames_Static();",
          "328: css::uno::Sequence< ::rtl::OUString >  FindTextToolbarController::getSupportedServiceNames_Static() throw()",
          "330:     css::uno::Sequence< ::rtl::OUString > aSNS( 1 );",
          "331:     aSNS.getArray()[0] = ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( \"com.sun.star.frame.ToolbarController\" ) );",
          "332:     return aSNS;",
          "338:     vos::OGuard aSolarMutexGuard( Application::GetSolarMutex() );",
          "340:     SearchToolbarControllersManager::createControllersManager()->freeController(m_xFrame, css::uno::Reference< css::frame::XStatusListener >(static_cast< ::cppu::OWeakObject* >(this), css::uno::UNO_QUERY), m_aCommandURL);",
          "342:     svt::ToolboxController::dispose();",
          "343:     delete m_pFindTextFieldControl;",
          "344:     m_pFindTextFieldControl = 0;",
          "350:     svt::ToolboxController::initialize(aArguments);",
          "352:     Window* pWindow = VCLUnoHelper::GetWindow( getParent() );",
          "353:     ToolBox* pToolBox = (ToolBox*)pWindow;",
          "354:     if ( pToolBox )",
          "355:     {",
          "356:         sal_uInt16 nItemCount = pToolBox->GetItemCount();",
          "357:         for ( sal_uInt16 i=0; i<nItemCount; ++i )",
          "358:         {",
          "359:             ::rtl::OUString sItemCommand = pToolBox->GetItemCommand(i);",
          "360:             if ( sItemCommand.equals( COMMAND_DOWNSEARCH ) )",
          "361:                 m_nDownSearchId = i;",
          "362:             else if (sItemCommand.equals( COMMAND_UPSEARCH ))",
          "363:                 m_nUpSearchId = i;",
          "364:         }",
          "365:     }",
          "367:     SearchToolbarControllersManager::createControllersManager()->registryController(m_xFrame, css::uno::Reference< css::frame::XStatusListener >(static_cast< ::cppu::OWeakObject* >(this), css::uno::UNO_QUERY), m_aCommandURL);",
          "",
          "[Added Lines]",
          "288:  css::uno::Any a = ToolboxController::queryInterface( aType );",
          "289:  if ( a.hasValue() )",
          "290:   return a;",
          "292:  return ::cppu::queryInterface( aType, static_cast< css::lang::XServiceInfo* >( this ) );",
          "297:  ToolboxController::acquire();",
          "302:  ToolboxController::release();",
          "308:  return getImplementationName_Static();",
          "312: {",
          "313:  const css::uno::Sequence< ::rtl::OUString > aSNL( getSupportedServiceNames() );",
          "314:  const ::rtl::OUString * pArray = aSNL.getConstArray();",
          "316:  for( sal_Int32 i = 0; i < aSNL.getLength(); i++ )",
          "317:   if( pArray[i] == ServiceName )",
          "318:    return true;",
          "320:  return false;",
          "325:  return getSupportedServiceNames_Static();",
          "328: css::uno::Sequence< ::rtl::OUString > FindTextToolbarController::getSupportedServiceNames_Static() throw()",
          "330:  css::uno::Sequence< ::rtl::OUString > aSNS( 1 );",
          "331:  aSNS.getArray()[0] = ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( \"com.sun.star.frame.ToolbarController\" ) );",
          "332:  return aSNS;",
          "338:  vos::OGuard aSolarMutexGuard( Application::GetSolarMutex() );",
          "340:  SearchToolbarControllersManager::createControllersManager()->freeController(m_xFrame, css::uno::Reference< css::frame::XStatusListener >(static_cast< ::cppu::OWeakObject* >(this), css::uno::UNO_QUERY), m_aCommandURL);",
          "342:  svt::ToolboxController::dispose();",
          "343:  delete m_pFindTextFieldControl;",
          "344:  m_pFindTextFieldControl = 0;",
          "350:  svt::ToolboxController::initialize(aArguments);",
          "352:  Window* pWindow = VCLUnoHelper::GetWindow( getParent() );",
          "353:  ToolBox* pToolBox = (ToolBox*)pWindow;",
          "354:  if ( pToolBox )",
          "355:  {",
          "356:   sal_uInt16 nItemCount = pToolBox->GetItemCount();",
          "357:   for ( sal_uInt16 i=0; i<nItemCount; ++i )",
          "358:   {",
          "359:    ::rtl::OUString sItemCommand = pToolBox->GetItemCommand(i);",
          "360:    if ( sItemCommand.equals( COMMAND_DOWNSEARCH ) )",
          "361:     {",
          "362:     pToolBox->EnableItem(i, sal_False);",
          "363:     m_nDownSearchId = i;",
          "364:     }",
          "365:    else if (sItemCommand.equals( COMMAND_UPSEARCH ))",
          "366:     {",
          "367:     pToolBox->EnableItem(i, sal_False);",
          "368:     m_nUpSearchId = i;",
          "369:     }",
          "370:   }",
          "371:  }",
          "373:  SearchToolbarControllersManager::createControllersManager()->registryController(m_xFrame, css::uno::Reference< css::frame::XStatusListener >(static_cast< ::cppu::OWeakObject* >(this), css::uno::UNO_QUERY), m_aCommandURL);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "375: css::uno::Reference< css::awt::XWindow > SAL_CALL FindTextToolbarController::createItemWindow( const css::uno::Reference< css::awt::XWindow >& Parent ) throw ( css::uno::RuntimeException )",
          "376: {",
          "393: }",
          "396: void SAL_CALL FindTextToolbarController::statusChanged( const css::frame::FeatureStateEvent& rEvent ) throw ( css::uno::RuntimeException )",
          "397: {",
          "407: }",
          "409: IMPL_LINK( FindTextToolbarController, EditModifyHdl, void *, EMPTYARG )",
          "410: {",
          "433: }",
          "438: DownSearchToolboxController::DownSearchToolboxController(const css::uno::Reference< css::lang::XMultiServiceFactory >& rServiceManager )",
          "442: {",
          "443: }",
          "",
          "[Removed Lines]",
          "377:     css::uno::Reference< css::awt::XWindow > xItemWindow;",
          "379:     css::uno::Reference< css::awt::XWindow > xParent( Parent );",
          "380:     Window* pParent = VCLUnoHelper::GetWindow( xParent );",
          "381:     if ( pParent )",
          "382:     {",
          "383:         ToolBox* pToolbar =  ( ToolBox* )pParent;",
          "384:         m_pFindTextFieldControl = new FindTextFieldControl( pToolbar, WinBits( WB_DROPDOWN | WB_VSCROLL), m_xFrame, m_xServiceManager );",
          "386:         Size aSize(100, m_pFindTextFieldControl->GetTextHeight() + 200);",
          "387:         m_pFindTextFieldControl->SetSizePixel( aSize );",
          "388:         m_pFindTextFieldControl->SetModifyHdl(LINK(this, FindTextToolbarController, EditModifyHdl));",
          "389:     }",
          "390:     xItemWindow = VCLUnoHelper::GetInterface( m_pFindTextFieldControl );",
          "392:     return xItemWindow;",
          "398:     vos::OGuard aSolarMutexGuard( Application::GetSolarMutex() );",
          "399:     if ( m_bDisposed )",
          "400:         return;",
          "402:     ::rtl::OUString aFeatureURL = rEvent.FeatureURL.Complete;",
          "403:     if (aFeatureURL.equalsAscii(\"AppendSearchHistory\"))",
          "404:     {",
          "405:         m_pFindTextFieldControl->Remember_Impl(m_pFindTextFieldControl->GetText());",
          "406:     }",
          "412:     Window* pWindow = VCLUnoHelper::GetWindow( getParent() );",
          "413:     ToolBox* pToolBox = (ToolBox*)pWindow;",
          "414:     if ( pToolBox && m_pFindTextFieldControl )",
          "415:     {",
          "416:         if (m_pFindTextFieldControl->GetText().Len()>0)",
          "417:         {",
          "418:             if ( !pToolBox->IsItemEnabled(m_nDownSearchId) )",
          "419:                 pToolBox->EnableItem(m_nDownSearchId, sal_True);",
          "420:             if ( !pToolBox->IsItemEnabled(m_nUpSearchId) )",
          "421:                 pToolBox->EnableItem(m_nUpSearchId, sal_True);",
          "422:         }",
          "423:         else",
          "424:         {",
          "425:             if ( pToolBox->IsItemEnabled(m_nDownSearchId) )",
          "426:                 pToolBox->EnableItem(m_nDownSearchId, sal_False);",
          "427:             if ( pToolBox->IsItemEnabled(m_nUpSearchId) )",
          "428:                 pToolBox->EnableItem(m_nUpSearchId, sal_False);",
          "429:         }",
          "430:     }",
          "432:     return 0;",
          "439:     : svt::ToolboxController( rServiceManager,",
          "440:     css::uno::Reference< css::frame::XFrame >(),",
          "441:     COMMAND_DOWNSEARCH )",
          "",
          "[Added Lines]",
          "383:  css::uno::Reference< css::awt::XWindow > xItemWindow;",
          "385:  css::uno::Reference< css::awt::XWindow > xParent( Parent );",
          "386:  Window* pParent = VCLUnoHelper::GetWindow( xParent );",
          "387:  if ( pParent )",
          "388:  {",
          "389:   ToolBox* pToolbar = ( ToolBox* )pParent;",
          "390:   m_pFindTextFieldControl = new FindTextFieldControl( pToolbar, WinBits( WB_DROPDOWN | WB_VSCROLL), m_xFrame, m_xServiceManager );",
          "392:   Size aSize(100, m_pFindTextFieldControl->GetTextHeight() + 200);",
          "393:   m_pFindTextFieldControl->SetSizePixel( aSize );",
          "394:   m_pFindTextFieldControl->SetModifyHdl(LINK(this, FindTextToolbarController, EditModifyHdl));",
          "395:  }",
          "396:  xItemWindow = VCLUnoHelper::GetInterface( m_pFindTextFieldControl );",
          "398:  return xItemWindow;",
          "404:  vos::OGuard aSolarMutexGuard( Application::GetSolarMutex() );",
          "405:  if ( m_bDisposed )",
          "406:   return;",
          "408:  ::rtl::OUString aFeatureURL = rEvent.FeatureURL.Complete;",
          "409:  if (aFeatureURL.equalsAscii(\"AppendSearchHistory\"))",
          "410:  {",
          "411:   m_pFindTextFieldControl->Remember_Impl(m_pFindTextFieldControl->GetText());",
          "412:  }",
          "418:  Window* pWindow = VCLUnoHelper::GetWindow( getParent() );",
          "419:  ToolBox* pToolBox = (ToolBox*)pWindow;",
          "420:  if ( pToolBox && m_pFindTextFieldControl )",
          "421:  {",
          "422:   if (m_pFindTextFieldControl->GetText().Len()>0)",
          "423:   {",
          "424:    if ( !pToolBox->IsItemEnabled(m_nDownSearchId) )",
          "425:     pToolBox->EnableItem(m_nDownSearchId, sal_True);",
          "426:    if ( !pToolBox->IsItemEnabled(m_nUpSearchId) )",
          "427:     pToolBox->EnableItem(m_nUpSearchId, sal_True);",
          "428:   }",
          "429:   else",
          "430:   {",
          "431:    if ( pToolBox->IsItemEnabled(m_nDownSearchId) )",
          "432:     pToolBox->EnableItem(m_nDownSearchId, sal_False);",
          "433:    if ( pToolBox->IsItemEnabled(m_nUpSearchId) )",
          "434:     pToolBox->EnableItem(m_nUpSearchId, sal_False);",
          "435:   }",
          "436:  }",
          "438:  return 0;",
          "445:  : svt::ToolboxController( rServiceManager,",
          "446:  css::uno::Reference< css::frame::XFrame >(),",
          "447:  COMMAND_DOWNSEARCH )",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "450: css::uno::Any SAL_CALL DownSearchToolboxController::queryInterface( const css::uno::Type& aType ) throw ( css::uno::RuntimeException )",
          "451: {",
          "457: }",
          "459: void SAL_CALL DownSearchToolboxController::acquire() throw ()",
          "460: {",
          "462: }",
          "464: void SAL_CALL DownSearchToolboxController::release() throw ()",
          "465: {",
          "467: }",
          "470: ::rtl::OUString SAL_CALL DownSearchToolboxController::getImplementationName() throw( css::uno::RuntimeException )",
          "471: {",
          "473: }",
          "475: sal_Bool SAL_CALL DownSearchToolboxController::supportsService( const ::rtl::OUString& ServiceName ) throw( css::uno::RuntimeException )",
          "485: }",
          "487: css::uno::Sequence< ::rtl::OUString > SAL_CALL DownSearchToolboxController::getSupportedServiceNames() throw( css::uno::RuntimeException )",
          "488: {",
          "490: }",
          "493: {",
          "497: }",
          "500: void SAL_CALL DownSearchToolboxController::dispose() throw ( css::uno::RuntimeException )",
          "501: {",
          "507: }",
          "510: void SAL_CALL DownSearchToolboxController::initialize( const css::uno::Sequence< css::uno::Any >& aArguments ) throw ( css::uno::Exception, css::uno::RuntimeException )",
          "511: {",
          "514: }",
          "517: void SAL_CALL DownSearchToolboxController::execute( sal_Int16 /*KeyModifier*/ ) throw ( css::uno::RuntimeException)",
          "518: {",
          "554: }",
          "557: void SAL_CALL DownSearchToolboxController::statusChanged( const css::frame::FeatureStateEvent& /*rEvent*/ ) throw ( css::uno::RuntimeException )",
          "558: {",
          "562: }",
          "567: UpSearchToolboxController::UpSearchToolboxController( const css::uno::Reference< css::lang::XMultiServiceFactory > & rServiceManager )",
          "571: {",
          "572: }",
          "",
          "[Removed Lines]",
          "452:     css::uno::Any a = ToolboxController::queryInterface( aType );",
          "453:     if ( a.hasValue() )",
          "454:         return a;",
          "456:     return ::cppu::queryInterface( aType, static_cast< css::lang::XServiceInfo* >( this ) );",
          "461:     ToolboxController::acquire();",
          "466:     ToolboxController::release();",
          "472:     return getImplementationName_Static();",
          "476: {",
          "477:     const css::uno::Sequence< ::rtl::OUString > aSNL( getSupportedServiceNames() );",
          "478:     const ::rtl::OUString * pArray = aSNL.getConstArray();",
          "480:     for( sal_Int32 i = 0; i < aSNL.getLength(); i++ )",
          "481:         if( pArray[i] == ServiceName )",
          "482:             return true;",
          "484:     return false;",
          "489:     return getSupportedServiceNames_Static();",
          "492: css::uno::Sequence< ::rtl::OUString >  DownSearchToolboxController::getSupportedServiceNames_Static() throw()",
          "494:     css::uno::Sequence< ::rtl::OUString > aSNS( 1 );",
          "495:     aSNS.getArray()[0] = ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( \"com.sun.star.frame.ToolbarController\" ));",
          "496:     return aSNS;",
          "502:     vos::OGuard aSolarMutexGuard( Application::GetSolarMutex() );",
          "504:     SearchToolbarControllersManager::createControllersManager()->freeController(m_xFrame, css::uno::Reference< css::frame::XStatusListener >(static_cast< ::cppu::OWeakObject* >(this), css::uno::UNO_QUERY), m_aCommandURL);",
          "506:     svt::ToolboxController::dispose();",
          "512:     svt::ToolboxController::initialize( aArguments );",
          "513:     SearchToolbarControllersManager::createControllersManager()->registryController(m_xFrame, css::uno::Reference< css::frame::XStatusListener >(static_cast< ::cppu::OWeakObject* >(this), css::uno::UNO_QUERY), m_aCommandURL);",
          "519:     if ( m_bDisposed )",
          "520:         throw css::lang::DisposedException();",
          "522:     ::rtl::OUString sFindText;",
          "523:     Window* pWindow = VCLUnoHelper::GetWindow( getParent() );",
          "524:     ToolBox* pToolBox = (ToolBox*)pWindow;",
          "525:     if ( pToolBox )",
          "526:     {",
          "527:         sal_uInt16 nItemCount = pToolBox->GetItemCount();",
          "528:         for ( sal_uInt16 i=0; i<nItemCount; ++i )",
          "529:         {",
          "530:             ::rtl::OUString sItemCommand = pToolBox->GetItemCommand(i);",
          "531:             if ( sItemCommand.equals( COMMAND_FINDTEXT ) )",
          "532:             {",
          "533:                 Window* pItemWin = pToolBox->GetItemWindow(i);",
          "534:                 if (pItemWin)",
          "535:                     sFindText = pItemWin->GetText();",
          "536:                 break;",
          "537:             }",
          "538:         }",
          "539:     }",
          "541:     css::uno::Sequence< css::beans::PropertyValue > lArgs(2);",
          "542:     lArgs[0].Name = SEARCHITEM_SEARCHSTRING;",
          "543:     lArgs[0].Value <<= sFindText;",
          "544:     lArgs[1].Name = SEARCHITEM_SEARCHBACKWARD;",
          "545:     lArgs[1].Value <<= sal_False;",
          "547:     impl_executeSearch(m_xServiceManager, m_xFrame, lArgs);",
          "549:     css::frame::FeatureStateEvent aEvent;",
          "550:     aEvent.FeatureURL.Complete = COMMAND_APPENDSEARCHHISTORY;",
          "551:     css::uno::Reference< css::frame::XStatusListener > xStatusListener = SearchToolbarControllersManager::createControllersManager()->findController(m_xFrame, COMMAND_FINDTEXT);",
          "552:     if (xStatusListener.is())",
          "553:         xStatusListener->statusChanged( aEvent );",
          "559:     vos::OGuard aSolarMutexGuard( Application::GetSolarMutex() );",
          "560:     if ( m_bDisposed )",
          "561:         return;",
          "568:     :svt::ToolboxController( rServiceManager,",
          "569:     css::uno::Reference< css::frame::XFrame >(),",
          "570:     COMMAND_UPSEARCH )",
          "",
          "[Added Lines]",
          "458:  css::uno::Any a = ToolboxController::queryInterface( aType );",
          "459:  if ( a.hasValue() )",
          "460:   return a;",
          "462:  return ::cppu::queryInterface( aType, static_cast< css::lang::XServiceInfo* >( this ) );",
          "467:  ToolboxController::acquire();",
          "472:  ToolboxController::release();",
          "478:  return getImplementationName_Static();",
          "482: {",
          "483:  const css::uno::Sequence< ::rtl::OUString > aSNL( getSupportedServiceNames() );",
          "484:  const ::rtl::OUString * pArray = aSNL.getConstArray();",
          "486:  for( sal_Int32 i = 0; i < aSNL.getLength(); i++ )",
          "487:   if( pArray[i] == ServiceName )",
          "488:    return true;",
          "490:  return false;",
          "495:  return getSupportedServiceNames_Static();",
          "498: css::uno::Sequence< ::rtl::OUString > DownSearchToolboxController::getSupportedServiceNames_Static() throw()",
          "500:  css::uno::Sequence< ::rtl::OUString > aSNS( 1 );",
          "501:  aSNS.getArray()[0] = ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( \"com.sun.star.frame.ToolbarController\" ));",
          "502:  return aSNS;",
          "508:  vos::OGuard aSolarMutexGuard( Application::GetSolarMutex() );",
          "510:  SearchToolbarControllersManager::createControllersManager()->freeController(m_xFrame, css::uno::Reference< css::frame::XStatusListener >(static_cast< ::cppu::OWeakObject* >(this), css::uno::UNO_QUERY), m_aCommandURL);",
          "512:  svt::ToolboxController::dispose();",
          "518:  svt::ToolboxController::initialize( aArguments );",
          "519:  SearchToolbarControllersManager::createControllersManager()->registryController(m_xFrame, css::uno::Reference< css::frame::XStatusListener >(static_cast< ::cppu::OWeakObject* >(this), css::uno::UNO_QUERY), m_aCommandURL);",
          "525:  if ( m_bDisposed )",
          "526:   throw css::lang::DisposedException();",
          "528:  ::rtl::OUString sFindText;",
          "529:  Window* pWindow = VCLUnoHelper::GetWindow( getParent() );",
          "530:  ToolBox* pToolBox = (ToolBox*)pWindow;",
          "531:  if ( pToolBox )",
          "532:  {",
          "533:   sal_uInt16 nItemCount = pToolBox->GetItemCount();",
          "534:   for ( sal_uInt16 i=0; i<nItemCount; ++i )",
          "535:   {",
          "536:    ::rtl::OUString sItemCommand = pToolBox->GetItemCommand(i);",
          "537:    if ( sItemCommand.equals( COMMAND_FINDTEXT ) )",
          "538:    {",
          "539:     Window* pItemWin = pToolBox->GetItemWindow(i);",
          "540:     if (pItemWin)",
          "541:      sFindText = pItemWin->GetText();",
          "542:     break;",
          "543:    }",
          "544:   }",
          "545:  }",
          "547:  css::uno::Sequence< css::beans::PropertyValue > lArgs(2);",
          "548:  lArgs[0].Name = SEARCHITEM_SEARCHSTRING;",
          "549:  lArgs[0].Value <<= sFindText;",
          "550:  lArgs[1].Name = SEARCHITEM_SEARCHBACKWARD;",
          "551:  lArgs[1].Value <<= sal_False;",
          "553:  impl_executeSearch(m_xServiceManager, m_xFrame, lArgs);",
          "555:  css::frame::FeatureStateEvent aEvent;",
          "556:  aEvent.FeatureURL.Complete = COMMAND_APPENDSEARCHHISTORY;",
          "557:  css::uno::Reference< css::frame::XStatusListener > xStatusListener = SearchToolbarControllersManager::createControllersManager()->findController(m_xFrame, COMMAND_FINDTEXT);",
          "558:  if (xStatusListener.is())",
          "559:   xStatusListener->statusChanged( aEvent );",
          "565:  vos::OGuard aSolarMutexGuard( Application::GetSolarMutex() );",
          "566:  if ( m_bDisposed )",
          "567:   return;",
          "574:  :svt::ToolboxController( rServiceManager,",
          "575:  css::uno::Reference< css::frame::XFrame >(),",
          "576:  COMMAND_UPSEARCH )",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "579: css::uno::Any SAL_CALL UpSearchToolboxController::queryInterface( const css::uno::Type& aType ) throw ( css::uno::RuntimeException )",
          "580: {",
          "586: }",
          "588: void SAL_CALL UpSearchToolboxController::acquire() throw ()",
          "589: {",
          "591: }",
          "593: void SAL_CALL UpSearchToolboxController::release() throw ()",
          "594: {",
          "596: }",
          "599: ::rtl::OUString SAL_CALL UpSearchToolboxController::getImplementationName() throw( css::uno::RuntimeException )",
          "600: {",
          "602: }",
          "604: sal_Bool SAL_CALL UpSearchToolboxController::supportsService( const ::rtl::OUString& ServiceName ) throw( css::uno::RuntimeException )",
          "614: }",
          "616: css::uno::Sequence< ::rtl::OUString > SAL_CALL UpSearchToolboxController::getSupportedServiceNames() throw( css::uno::RuntimeException )",
          "617: {",
          "619: }",
          "622: {",
          "626: }",
          "629: void SAL_CALL UpSearchToolboxController::dispose() throw ( css::uno::RuntimeException )",
          "630: {",
          "636: }",
          "639: void SAL_CALL UpSearchToolboxController::initialize( const css::uno::Sequence< css::uno::Any >& aArguments ) throw ( css::uno::Exception, css::uno::RuntimeException )",
          "640: {",
          "643: }",
          "646: void SAL_CALL UpSearchToolboxController::execute( sal_Int16 /*KeyModifier*/ ) throw ( css::uno::RuntimeException )",
          "647: {",
          "683: }",
          "686: void SAL_CALL UpSearchToolboxController::statusChanged( const css::frame::FeatureStateEvent& /*rEvent*/ ) throw ( css::uno::RuntimeException )",
          "687: {",
          "691: }",
          "696: FindbarDispatcher::FindbarDispatcher(const css::uno::Reference< css::lang::XMultiServiceFactory >& xFactory)",
          "698: {",
          "699: }",
          "701: FindbarDispatcher::~FindbarDispatcher()",
          "702: {",
          "705: }",
          "708: css::uno::Any SAL_CALL FindbarDispatcher::queryInterface( const css::uno::Type& aType ) throw( css::uno::RuntimeException )",
          "709: {",
          "720: }",
          "722: void SAL_CALL FindbarDispatcher::acquire() throw()",
          "723: {",
          "725: }",
          "727: void SAL_CALL FindbarDispatcher::release() throw()",
          "728: {",
          "730: }",
          "733: ::rtl::OUString SAL_CALL FindbarDispatcher::getImplementationName() throw( css::uno::RuntimeException )",
          "734: {",
          "736: }",
          "738: sal_Bool SAL_CALL FindbarDispatcher::supportsService( const ::rtl::OUString& ServiceName ) throw( css::uno::RuntimeException )",
          "744: }",
          "746: css::uno::Sequence< ::rtl::OUString > SAL_CALL FindbarDispatcher::getSupportedServiceNames() throw( css::uno::RuntimeException )",
          "747: {",
          "749: }",
          "752: {",
          "757: }",
          "760: void SAL_CALL FindbarDispatcher::initialize( const css::uno::Sequence< css::uno::Any >& aArguments ) throw ( css::uno::Exception, css::uno::RuntimeException )",
          "761: {",
          "764: }",
          "767: css::uno::Reference< css::frame::XDispatch > SAL_CALL FindbarDispatcher::queryDispatch( const css::util::URL& aURL, const ::rtl::OUString& /*sTargetFrameName*/, sal_Int32 /*nSearchFlags*/ ) throw( css::uno::RuntimeException )",
          "768: {",
          "775: }",
          "777: css::uno::Sequence < css::uno::Reference< css::frame::XDispatch > > SAL_CALL FindbarDispatcher::queryDispatches( const css::uno::Sequence < css::frame::DispatchDescriptor >& seqDescripts ) throw( css::uno::RuntimeException )",
          "778: {",
          "786: }",
          "789: void SAL_CALL FindbarDispatcher::dispatch( const css::util::URL& aURL, const css::uno::Sequence < css::beans::PropertyValue >& /*lArgs*/ ) throw( css::uno::RuntimeException )",
          "790: {",
          "831: }",
          "833: void SAL_CALL FindbarDispatcher::addStatusListener( const css::uno::Reference< css::frame::XStatusListener >& /*xControl*/, const css::util::URL& /*aURL*/ ) throw ( css::uno::RuntimeException )",
          "",
          "[Removed Lines]",
          "581:     css::uno::Any a = ToolboxController::queryInterface( aType );",
          "582:     if ( a.hasValue() )",
          "583:         return a;",
          "585:     return ::cppu::queryInterface( aType, static_cast< css::lang::XServiceInfo* >( this ) );",
          "590:     ToolboxController::acquire();",
          "595:     ToolboxController::release();",
          "601:     return getImplementationName_Static();",
          "605: {",
          "606:     const css::uno::Sequence< ::rtl::OUString > aSNL( getSupportedServiceNames() );",
          "607:     const ::rtl::OUString * pArray = aSNL.getConstArray();",
          "609:     for( sal_Int32 i = 0; i < aSNL.getLength(); i++ )",
          "610:         if( pArray[i] == ServiceName )",
          "611:             return true;",
          "613:     return false;",
          "618:     return getSupportedServiceNames_Static();",
          "621: css::uno::Sequence< ::rtl::OUString >  UpSearchToolboxController::getSupportedServiceNames_Static() throw()",
          "623:     css::uno::Sequence< ::rtl::OUString > aSNS( 1 );",
          "624:     aSNS.getArray()[0] = ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( \"com.sun.star.frame.ToolbarController\" ) );",
          "625:     return aSNS;",
          "631:     vos::OGuard aSolarMutexGuard( Application::GetSolarMutex() );",
          "633:     SearchToolbarControllersManager::createControllersManager()->freeController(m_xFrame, css::uno::Reference< css::frame::XStatusListener >(static_cast< ::cppu::OWeakObject* >(this), css::uno::UNO_QUERY), m_aCommandURL);",
          "635:     svt::ToolboxController::dispose();",
          "641:     svt::ToolboxController::initialize( aArguments );",
          "642:     SearchToolbarControllersManager::createControllersManager()->registryController(m_xFrame, css::uno::Reference< css::frame::XStatusListener >(static_cast< ::cppu::OWeakObject* >(this), css::uno::UNO_QUERY), m_aCommandURL);",
          "648:     if ( m_bDisposed )",
          "649:         throw css::lang::DisposedException();",
          "651:     ::rtl::OUString sFindText;",
          "652:     Window* pWindow = VCLUnoHelper::GetWindow( getParent() );",
          "653:     ToolBox* pToolBox = (ToolBox*)pWindow;",
          "654:     if ( pToolBox )",
          "655:     {",
          "656:         sal_uInt16 nItemCount = pToolBox->GetItemCount();",
          "657:         for ( sal_uInt16 i=0; i<nItemCount; ++i )",
          "658:         {",
          "659:             ::rtl::OUString sItemCommand = pToolBox->GetItemCommand(i);",
          "660:             if ( sItemCommand.equals( COMMAND_FINDTEXT ) )",
          "661:             {",
          "662:                 Window* pItemWin = pToolBox->GetItemWindow(i);",
          "663:                 if (pItemWin)",
          "664:                     sFindText = pItemWin->GetText();",
          "665:                 break;",
          "666:             }",
          "667:         }",
          "668:     }",
          "670:     css::uno::Sequence< css::beans::PropertyValue > lArgs(2);",
          "671:     lArgs[0].Name = SEARCHITEM_SEARCHSTRING;",
          "672:     lArgs[0].Value <<= sFindText;",
          "673:     lArgs[1].Name =  SEARCHITEM_SEARCHBACKWARD;",
          "674:     lArgs[1].Value <<= sal_True;",
          "676:     impl_executeSearch(m_xServiceManager, m_xFrame, lArgs);",
          "678:     css::frame::FeatureStateEvent aEvent;",
          "679:     aEvent.FeatureURL.Complete = COMMAND_APPENDSEARCHHISTORY;",
          "680:     css::uno::Reference< css::frame::XStatusListener > xStatusListener = SearchToolbarControllersManager::createControllersManager()->findController(m_xFrame, COMMAND_FINDTEXT);",
          "681:     if (xStatusListener.is())",
          "682:         xStatusListener->statusChanged( aEvent );",
          "688:     vos::OGuard aSolarMutexGuard( Application::GetSolarMutex() );",
          "689:     if ( m_bDisposed )",
          "690:         return;",
          "697:     : m_xFactory( xFactory )",
          "703:     m_xFactory = NULL;",
          "704:     m_xFrame = NULL;",
          "710:     css::uno::Any aReturn( ::cppu::queryInterface( aType,",
          "711:         static_cast< css::lang::XServiceInfo* >(this),",
          "712:         static_cast< css::lang::XInitialization* >(this),",
          "713:         static_cast< css::frame::XDispatchProvider* >(this),",
          "714:         static_cast< css::frame::XDispatch* >(this)) );",
          "716:     if ( aReturn.hasValue() )",
          "717:         return aReturn;",
          "719:     return OWeakObject::queryInterface( aType );",
          "724:     OWeakObject::acquire();",
          "729:     OWeakObject::release();",
          "735:     return getImplementationName_Static();",
          "739: {",
          "740:     return (",
          "741:         ServiceName.equalsAscii(\"com.sun.star.comp.svx.FindbarDispatcher\") ||",
          "742:         ServiceName.equalsAscii(\"com.sun.star.frame.ProtocolHandler\")",
          "743:         );",
          "748:     return getSupportedServiceNames_Static();",
          "751: css::uno::Sequence< ::rtl::OUString >  FindbarDispatcher::getSupportedServiceNames_Static() throw()",
          "753:     css::uno::Sequence< ::rtl::OUString > aSNS( 2 );",
          "754:     aSNS.getArray()[0] = ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( \"com.sun.star.comp.svx.FindbarDispatcher\" ));",
          "755:     aSNS.getArray()[1] = ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( \"com.sun.star.frame.ProtocolHandler\" ));",
          "756:     return aSNS;",
          "762:     if ( aArguments.getLength() )",
          "763:         aArguments[0] >>= m_xFrame;",
          "769:     css::uno::Reference< css::frame::XDispatch > xDispatch;",
          "771:     if ( aURL.Protocol.equalsAscii(\"vnd.sun.star.findbar:\") )",
          "772:         xDispatch = this;",
          "774:     return xDispatch;",
          "779:     sal_Int32 nCount = seqDescripts.getLength();",
          "780:     css::uno::Sequence < css::uno::Reference < XDispatch > > lDispatcher( nCount );",
          "782:     for( sal_Int32 i=0; i<nCount; ++i )",
          "783:         lDispatcher[i] = queryDispatch( seqDescripts[i].FeatureURL, seqDescripts[i].FrameName, seqDescripts[i].SearchFlags );",
          "785:     return lDispatcher;",
          "792:     if ( aURL.Path.equalsAscii(\"FocusToFindbar\") )",
          "793:     {",
          "794:         css::uno::Reference< css::beans::XPropertySet > xPropSet(m_xFrame, css::uno::UNO_QUERY);",
          "795:         if(!xPropSet.is())",
          "796:             return;",
          "798:         css::uno::Reference< css::frame::XLayoutManager > xLayoutManager;",
          "799:         css::uno::Any aValue = xPropSet->getPropertyValue( ::rtl::OUString::createFromAscii(\"LayoutManager\") );",
          "800:         aValue >>= xLayoutManager;",
          "801:         if (!xLayoutManager.is())",
          "802:             return;",
          "804:         const ::rtl::OUString sResourceURL = ::rtl::OUString::createFromAscii(\"private:resource/toolbar/findbar\");",
          "805:         css::uno::Reference< css::ui::XUIElement > xUIElement = xLayoutManager->getElement(sResourceURL);",
          "806:         if (!xUIElement.is())",
          "807:             return;",
          "809:         css::uno::Reference< css::awt::XWindow > xWindow(xUIElement->getRealInterface(), css::uno::UNO_QUERY);",
          "810:         Window* pWindow = VCLUnoHelper::GetWindow( xWindow );",
          "811:         ToolBox* pToolBox = (ToolBox*)pWindow;",
          "812:         if ( pToolBox )",
          "813:         {",
          "814:             sal_uInt16 nItemCount = pToolBox->GetItemCount();",
          "815:             for ( sal_uInt16 i=0; i<nItemCount; ++i )",
          "816:             {",
          "817:                 ::rtl::OUString sItemCommand = pToolBox->GetItemCommand(i);",
          "818:                 if ( sItemCommand.equalsAscii(\".uno:FindText\") )",
          "819:                 {",
          "820:                     Window* pItemWin = pToolBox->GetItemWindow( i );",
          "821:                     if ( pItemWin )",
          "822:                     {",
          "823:                         pItemWin->GrabFocus();",
          "824:                         return;",
          "825:                     }",
          "826:                 }",
          "827:             }",
          "828:         }",
          "830:     }",
          "",
          "[Added Lines]",
          "587:  css::uno::Any a = ToolboxController::queryInterface( aType );",
          "588:  if ( a.hasValue() )",
          "589:   return a;",
          "591:  return ::cppu::queryInterface( aType, static_cast< css::lang::XServiceInfo* >( this ) );",
          "596:  ToolboxController::acquire();",
          "601:  ToolboxController::release();",
          "607:  return getImplementationName_Static();",
          "611: {",
          "612:  const css::uno::Sequence< ::rtl::OUString > aSNL( getSupportedServiceNames() );",
          "613:  const ::rtl::OUString * pArray = aSNL.getConstArray();",
          "615:  for( sal_Int32 i = 0; i < aSNL.getLength(); i++ )",
          "616:   if( pArray[i] == ServiceName )",
          "617:    return true;",
          "619:  return false;",
          "624:  return getSupportedServiceNames_Static();",
          "627: css::uno::Sequence< ::rtl::OUString > UpSearchToolboxController::getSupportedServiceNames_Static() throw()",
          "629:  css::uno::Sequence< ::rtl::OUString > aSNS( 1 );",
          "630:  aSNS.getArray()[0] = ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( \"com.sun.star.frame.ToolbarController\" ) );",
          "631:  return aSNS;",
          "637:  vos::OGuard aSolarMutexGuard( Application::GetSolarMutex() );",
          "639:  SearchToolbarControllersManager::createControllersManager()->freeController(m_xFrame, css::uno::Reference< css::frame::XStatusListener >(static_cast< ::cppu::OWeakObject* >(this), css::uno::UNO_QUERY), m_aCommandURL);",
          "641:  svt::ToolboxController::dispose();",
          "647:  svt::ToolboxController::initialize( aArguments );",
          "648:  SearchToolbarControllersManager::createControllersManager()->registryController(m_xFrame, css::uno::Reference< css::frame::XStatusListener >(static_cast< ::cppu::OWeakObject* >(this), css::uno::UNO_QUERY), m_aCommandURL);",
          "654:  if ( m_bDisposed )",
          "655:   throw css::lang::DisposedException();",
          "657:  ::rtl::OUString sFindText;",
          "658:  Window* pWindow = VCLUnoHelper::GetWindow( getParent() );",
          "659:  ToolBox* pToolBox = (ToolBox*)pWindow;",
          "660:  if ( pToolBox )",
          "661:  {",
          "662:   sal_uInt16 nItemCount = pToolBox->GetItemCount();",
          "663:   for ( sal_uInt16 i=0; i<nItemCount; ++i )",
          "664:   {",
          "665:    ::rtl::OUString sItemCommand = pToolBox->GetItemCommand(i);",
          "666:    if ( sItemCommand.equals( COMMAND_FINDTEXT ) )",
          "667:    {",
          "668:     Window* pItemWin = pToolBox->GetItemWindow(i);",
          "669:     if (pItemWin)",
          "670:      sFindText = pItemWin->GetText();",
          "671:     break;",
          "672:    }",
          "673:   }",
          "674:  }",
          "676:  css::uno::Sequence< css::beans::PropertyValue > lArgs(2);",
          "677:  lArgs[0].Name = SEARCHITEM_SEARCHSTRING;",
          "678:  lArgs[0].Value <<= sFindText;",
          "679:  lArgs[1].Name = SEARCHITEM_SEARCHBACKWARD;",
          "680:  lArgs[1].Value <<= sal_True;",
          "682:  impl_executeSearch(m_xServiceManager, m_xFrame, lArgs);",
          "684:  css::frame::FeatureStateEvent aEvent;",
          "685:  aEvent.FeatureURL.Complete = COMMAND_APPENDSEARCHHISTORY;",
          "686:  css::uno::Reference< css::frame::XStatusListener > xStatusListener = SearchToolbarControllersManager::createControllersManager()->findController(m_xFrame, COMMAND_FINDTEXT);",
          "687:  if (xStatusListener.is())",
          "688:   xStatusListener->statusChanged( aEvent );",
          "694:  vos::OGuard aSolarMutexGuard( Application::GetSolarMutex() );",
          "695:  if ( m_bDisposed )",
          "696:   return;",
          "703:  : m_xFactory( xFactory )",
          "709:  m_xFactory = NULL;",
          "710:  m_xFrame = NULL;",
          "716:  css::uno::Any aReturn( ::cppu::queryInterface( aType,",
          "717:   static_cast< css::lang::XServiceInfo* >(this),",
          "718:   static_cast< css::lang::XInitialization* >(this),",
          "719:   static_cast< css::frame::XDispatchProvider* >(this),",
          "720:   static_cast< css::frame::XDispatch* >(this)) );",
          "722:  if ( aReturn.hasValue() )",
          "723:   return aReturn;",
          "725:  return OWeakObject::queryInterface( aType );",
          "730:  OWeakObject::acquire();",
          "735:  OWeakObject::release();",
          "741:  return getImplementationName_Static();",
          "745: {",
          "746:  return (",
          "747:   ServiceName.equalsAscii(\"com.sun.star.comp.svx.FindbarDispatcher\") ||",
          "748:   ServiceName.equalsAscii(\"com.sun.star.frame.ProtocolHandler\")",
          "749:   );",
          "754:  return getSupportedServiceNames_Static();",
          "757: css::uno::Sequence< ::rtl::OUString > FindbarDispatcher::getSupportedServiceNames_Static() throw()",
          "759:  css::uno::Sequence< ::rtl::OUString > aSNS( 2 );",
          "760:  aSNS.getArray()[0] = ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( \"com.sun.star.comp.svx.FindbarDispatcher\" ));",
          "761:  aSNS.getArray()[1] = ::rtl::OUString( RTL_CONSTASCII_USTRINGPARAM( \"com.sun.star.frame.ProtocolHandler\" ));",
          "762:  return aSNS;",
          "768:  if ( aArguments.getLength() )",
          "769:   aArguments[0] >>= m_xFrame;",
          "775:  css::uno::Reference< css::frame::XDispatch > xDispatch;",
          "777:  if ( aURL.Protocol.equalsAscii(\"vnd.sun.star.findbar:\") )",
          "778:   xDispatch = this;",
          "780:  return xDispatch;",
          "785:  sal_Int32 nCount = seqDescripts.getLength();",
          "786:  css::uno::Sequence < css::uno::Reference < XDispatch > > lDispatcher( nCount );",
          "788:  for( sal_Int32 i=0; i<nCount; ++i )",
          "789:   lDispatcher[i] = queryDispatch( seqDescripts[i].FeatureURL, seqDescripts[i].FrameName, seqDescripts[i].SearchFlags );",
          "791:  return lDispatcher;",
          "798:  if ( aURL.Path.equalsAscii(\"FocusToFindbar\") )",
          "799:  {",
          "800:   css::uno::Reference< css::beans::XPropertySet > xPropSet(m_xFrame, css::uno::UNO_QUERY);",
          "801:   if(!xPropSet.is())",
          "802:    return;",
          "804:   css::uno::Reference< css::frame::XLayoutManager > xLayoutManager;",
          "805:   css::uno::Any aValue = xPropSet->getPropertyValue( ::rtl::OUString::createFromAscii(\"LayoutManager\") );",
          "806:   aValue >>= xLayoutManager;",
          "807:   if (!xLayoutManager.is())",
          "808:    return;",
          "810:   const ::rtl::OUString sResourceURL = ::rtl::OUString::createFromAscii(\"private:resource/toolbar/findbar\");",
          "811:   css::uno::Reference< css::ui::XUIElement > xUIElement = xLayoutManager->getElement(sResourceURL);",
          "812:   if (!xUIElement.is())",
          "813:    return;",
          "815:   css::uno::Reference< css::awt::XWindow > xWindow(xUIElement->getRealInterface(), css::uno::UNO_QUERY);",
          "816:   Window* pWindow = VCLUnoHelper::GetWindow( xWindow );",
          "817:   ToolBox* pToolBox = (ToolBox*)pWindow;",
          "818:   if ( pToolBox )",
          "819:   {",
          "820:    sal_uInt16 nItemCount = pToolBox->GetItemCount();",
          "821:    for ( sal_uInt16 i=0; i<nItemCount; ++i )",
          "822:    {",
          "823:     ::rtl::OUString sItemCommand = pToolBox->GetItemCommand(i);",
          "824:     if ( sItemCommand.equalsAscii(\".uno:FindText\") )",
          "825:     {",
          "826:      Window* pItemWin = pToolBox->GetItemWindow( i );",
          "827:      if ( pItemWin )",
          "828:      {",
          "829:       pItemWin->GrabFocus();",
          "830:       return;",
          "831:      }",
          "832:     }",
          "833:    }",
          "834:   }",
          "836:  }",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "839: }",
          "846: {",
          "848: }",
          "852: {",
          "854: }",
          "858: {",
          "860: }",
          "864: {",
          "866: }",
          "",
          "[Removed Lines]",
          "844: css::uno::Reference< css::uno::XInterface > SAL_CALL FindTextToolbarController_createInstance(",
          "845:     const css::uno::Reference< css::lang::XMultiServiceFactory >& rSMgr )",
          "847:     return *new FindTextToolbarController( rSMgr );",
          "850: css::uno::Reference< css::uno::XInterface > SAL_CALL DownSearchToolboxController_createInstance(",
          "851:     const css::uno::Reference< css::lang::XMultiServiceFactory >& rSMgr )",
          "853:     return *new DownSearchToolboxController( rSMgr );",
          "856: css::uno::Reference< css::uno::XInterface > SAL_CALL UpSearchToolboxController_createInstance(",
          "857:     const css::uno::Reference< css::lang::XMultiServiceFactory >& rSMgr )",
          "859:     return *new UpSearchToolboxController( rSMgr );",
          "862: css::uno::Reference< css::uno::XInterface > SAL_CALL FindbarDispatcher_createInstance(",
          "863:     const css::uno::Reference< css::lang::XMultiServiceFactory >& rSMgr )",
          "865:     return *new FindbarDispatcher( rSMgr );",
          "",
          "[Added Lines]",
          "850: css::uno::Reference< css::uno::XInterface > SAL_CALL FindTextToolbarController_createInstance(",
          "851:  const css::uno::Reference< css::lang::XMultiServiceFactory >& rSMgr )",
          "853:  return *new FindTextToolbarController( rSMgr );",
          "856: css::uno::Reference< css::uno::XInterface > SAL_CALL DownSearchToolboxController_createInstance(",
          "857:  const css::uno::Reference< css::lang::XMultiServiceFactory >& rSMgr )",
          "859:  return *new DownSearchToolboxController( rSMgr );",
          "862: css::uno::Reference< css::uno::XInterface > SAL_CALL UpSearchToolboxController_createInstance(",
          "863:  const css::uno::Reference< css::lang::XMultiServiceFactory >& rSMgr )",
          "865:  return *new UpSearchToolboxController( rSMgr );",
          "868: css::uno::Reference< css::uno::XInterface > SAL_CALL FindbarDispatcher_createInstance(",
          "869:  const css::uno::Reference< css::lang::XMultiServiceFactory >& rSMgr )",
          "871:  return *new FindbarDispatcher( rSMgr );",
          "",
          "---------------"
        ],
        "main/svx/source/tbxctrls/tbunosearchcontrollers.src||main/svx/source/tbxctrls/tbunosearchcontrollers.src": [
          "File: main/svx/source/tbxctrls/tbunosearchcontrollers.src -> main/svx/source/tbxctrls/tbunosearchcontrollers.src"
        ]
      }
    },
    {
      "candidate_hash": "d2db43a088766e8b63c87b0d6f759721c940835e",
      "candidate_info": {
        "commit_hash": "d2db43a088766e8b63c87b0d6f759721c940835e",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/d2db43a088766e8b63c87b0d6f759721c940835e",
        "files": [
          "extras/l10n/source/de/localize.sdf"
        ],
        "message": "Fixed string in German SDF",
        "before_after_code_files": [
          "extras/l10n/source/de/localize.sdf||extras/l10n/source/de/localize.sdf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "extras/l10n/source/de/localize.sdf||extras/l10n/source/de/localize.sdf": [
          "File: extras/l10n/source/de/localize.sdf -> extras/l10n/source/de/localize.sdf",
          "--- Hunk 1 ---",
          "[Context before]",
          "68947: svx source\\svdraw\\svdstr.src 0 string STR_ObjNamePluralScene3d    0 de 3D Szenen    20130618 17:22:18",
          "68948: svx source\\svdraw\\svdstr.src 0 string STR_ObjNameSingulSphere3d    0 de Kugel    20130618 17:22:18",
          "68949: svx source\\svdraw\\svdstr.src 0 string STR_ObjNamePluralSphere3d    0 de Kugeln    20130618 17:22:18",
          "68951: svx source\\svdraw\\svdstr.src 0 string STR_EditPosSize    0 de Position und Gr\u00f6\u00dfe f\u00fcr %1 setzen    20130618 17:22:18",
          "68952: svx source\\svdraw\\svdstr.src 0 string STR_EditDelete    0 de %1 l\u00f6schen    20130618 17:22:18",
          "68953: svx source\\svdraw\\svdstr.src 0 string STR_EditMovToTop    0 de %1 weiter nach vorn stellen    20130618 17:22:18",
          "",
          "[Removed Lines]",
          "68950: svx source\\svdraw\\svdstr.src 0 string STR_EditWithCopy    0 de mit kopieren    20130618 17:22:18",
          "",
          "[Added Lines]",
          "68950: svx source\\svdraw\\svdstr.src 0 string STR_EditWithCopy    0 de  mit Kopie    20130618 17:22:18",
          "",
          "---------------"
        ]
      }
    }
  ]
}