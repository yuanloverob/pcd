{
  "cve_id": "CVE-2023-51780",
  "cve_desc": "An issue was discovered in the Linux kernel before 6.6.8. do_vcc_ioctl in net/atm/ioctl.c has a use-after-free because of a vcc_recvmsg race condition.",
  "repo": "torvalds/linux",
  "patch_hash": "24e90b9e34f9e039f56b5f25f6e6eb92cdd8f4b3",
  "patch_info": {
    "commit_hash": "24e90b9e34f9e039f56b5f25f6e6eb92cdd8f4b3",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/24e90b9e34f9e039f56b5f25f6e6eb92cdd8f4b3",
    "files": [
      "net/atm/ioctl.c"
    ],
    "message": "atm: Fix Use-After-Free in do_vcc_ioctl\n\nBecause do_vcc_ioctl() accesses sk->sk_receive_queue\nwithout holding a sk->sk_receive_queue.lock, it can\ncause a race with vcc_recvmsg().\nA use-after-free for skb occurs with the following flow.\n```\ndo_vcc_ioctl() -> skb_peek()\nvcc_recvmsg() -> skb_recv_datagram() -> skb_free_datagram()\n```\nAdd sk->sk_receive_queue.lock to do_vcc_ioctl() to fix this issue.\n\nFixes: 1da177e4c3f4 (\"Linux-2.6.12-rc2\")\nSigned-off-by: Hyunwoo Kim <v4bel@theori.io>\nLink: https://lore.kernel.org/r/20231209094210.GA403126@v4bel-B760M-AORUS-ELITE-AX\nSigned-off-by: Paolo Abeni <pabeni@redhat.com>",
    "before_after_code_files": [
      "net/atm/ioctl.c||net/atm/ioctl.c"
    ]
  },
  "patch_diff": {
    "net/atm/ioctl.c||net/atm/ioctl.c": [
      "File: net/atm/ioctl.c -> net/atm/ioctl.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "73:  case SIOCINQ:",
      "74:  {",
      "75:   struct sk_buff *skb;",
      "77:   if (sock->state != SS_CONNECTED) {",
      "78:    error = -EINVAL;",
      "79:    goto done;",
      "80:   }",
      "81:   skb = skb_peek(&sk->sk_receive_queue);",
      "84:   goto done;",
      "85:  }",
      "86:  case ATM_SETSC:",
      "",
      "[Removed Lines]",
      "82:   error = put_user(skb ? skb->len : 0,",
      "83:      (int __user *)argp) ? -EFAULT : 0;",
      "",
      "[Added Lines]",
      "76:   int amount;",
      "82:   spin_lock_irq(&sk->sk_receive_queue.lock);",
      "84:   amount = skb ? skb->len : 0;",
      "85:   spin_unlock_irq(&sk->sk_receive_queue.lock);",
      "86:   error = put_user(amount, (int __user *)argp) ? -EFAULT : 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "afc5625e20971e8294a35b2f284a91b0601f9fce",
      "candidate_info": {
        "commit_hash": "afc5625e20971e8294a35b2f284a91b0601f9fce",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/afc5625e20971e8294a35b2f284a91b0601f9fce",
        "files": [
          "net/atm/ioctl.c"
        ],
        "message": "atm: clean up a put_user() calls\n\nUnlike copy_from_user(), put_user() and get_user() return -EFAULT on\nerror.  Use the error code directly instead of setting it.\n\nSigned-off-by: Dan Carpenter <dan.carpenter@linaro.org>\nLink: https://lore.kernel.org/r/04a018e8-7433-4f67-8ddd-9357a0114f87@moroto.mountain\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
        "before_after_code_files": [
          "net/atm/ioctl.c||net/atm/ioctl.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "net/atm/ioctl.c||net/atm/ioctl.c"
          ],
          "candidate": [
            "net/atm/ioctl.c||net/atm/ioctl.c"
          ]
        }
      },
      "candidate_diff": {
        "net/atm/ioctl.c||net/atm/ioctl.c": [
          "File: net/atm/ioctl.c -> net/atm/ioctl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:    goto done;",
          "69:   }",
          "70:   error = put_user(sk->sk_sndbuf - sk_wmem_alloc_get(sk),",
          "72:   goto done;",
          "73:  case SIOCINQ:",
          "74:  {",
          "",
          "[Removed Lines]",
          "71:      (int __user *)argp) ? -EFAULT : 0;",
          "",
          "[Added Lines]",
          "71:      (int __user *)argp);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:   skb = skb_peek(&sk->sk_receive_queue);",
          "84:   amount = skb ? skb->len : 0;",
          "85:   spin_unlock_irq(&sk->sk_receive_queue.lock);",
          "87:   goto done;",
          "88:  }",
          "89:  case ATM_SETSC:",
          "",
          "[Removed Lines]",
          "86:   error = put_user(amount, (int __user *)argp) ? -EFAULT : 0;",
          "",
          "[Added Lines]",
          "86:   error = put_user(amount, (int __user *)argp);",
          "",
          "---------------"
        ]
      }
    }
  ]
}