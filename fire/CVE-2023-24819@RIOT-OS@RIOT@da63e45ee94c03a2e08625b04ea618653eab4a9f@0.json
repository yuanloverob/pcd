{
  "cve_id": "CVE-2023-24819",
  "cve_desc": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in an out of bounds write in the packet buffer. The overflow can be used to corrupt other packets and the allocator metadata. Corrupting a pointer will easily lead to denial of service. While carefully manipulating the allocator metadata gives an attacker the possibility to write data to arbitrary locations and thus execute arbitrary code. Version 2022.10 fixes this issue. As a workaround, disable support for fragmented IP datagrams or apply the patches manually.",
  "repo": "RIOT-OS/RIOT",
  "patch_hash": "da63e45ee94c03a2e08625b04ea618653eab4a9f",
  "patch_info": {
    "commit_hash": "da63e45ee94c03a2e08625b04ea618653eab4a9f",
    "repo": "RIOT-OS/RIOT",
    "commit_url": "https://github.com/RIOT-OS/RIOT/pull/18820/commits/da63e45ee94c03a2e08625b04ea618653eab4a9f",
    "files": [
      "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
    ],
    "message": "gnrc_sixlowpan_iphc: fix buffer overflow in gnrc_sixlowpan_iphc_recv()\n\n(cherry picked from commit 73615161c01fcfbbc7216cf502cabb12c1598ee4)",
    "before_after_code_files": [
      "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
    ]
  },
  "patch_diff": {
    "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c": [
      "File: sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c -> sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "737:     if (rbuf != NULL) {",
      "738:         ipv6 = rbuf->pkt;",
      "739:         assert(ipv6 != NULL);",
      "740:     }",
      "741:     else {",
      "742:         ipv6 = gnrc_pktbuf_add(NULL, NULL, sizeof(ipv6_hdr_t),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "740:         if ((ipv6->size < sizeof(ipv6_hdr_t)) &&",
      "741:             (gnrc_pktbuf_realloc_data(ipv6, sizeof(ipv6_hdr_t)) != 0)) {",
      "742:             DEBUG(\"6lo iphc: no space to decompress IPHC\\n\");",
      "743:             _recv_error_release(sixlo, ipv6, rbuf);",
      "744:             return;",
      "745:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "872:         payload_len = (sixlo->size + uncomp_hdr_len -",
      "873:                        payload_offset - sizeof(ipv6_hdr_t));",
      "874:     }",
      "881:     }",
      "883:     ipv6_hdr = ipv6->data;",
      "884:     ipv6_hdr->len = byteorder_htons(payload_len);",
      "",
      "[Removed Lines]",
      "875:     if ((rbuf == NULL) &&",
      "877:         (gnrc_pktbuf_realloc_data(ipv6, uncomp_hdr_len + payload_len) != 0)) {",
      "878:         DEBUG(\"6lo iphc: no space left to copy payload\\n\");",
      "879:         _recv_error_release(sixlo, ipv6, rbuf);",
      "880:         return;",
      "",
      "[Added Lines]",
      "881:     if (rbuf == NULL) {",
      "883:         if (gnrc_pktbuf_realloc_data(ipv6, uncomp_hdr_len + payload_len) != 0) {",
      "884:             DEBUG(\"6lo iphc: no space left to copy payload\\n\");",
      "885:             _recv_error_release(sixlo, ipv6, rbuf);",
      "886:             return;",
      "887:         }",
      "889:     else {",
      "890:         if (ipv6->size < (uncomp_hdr_len + (sixlo->size - payload_offset))) {",
      "891:             DEBUG(\"6lo iphc: not enough space to copy payload.\\n\");",
      "892:             DEBUG(\"6lo iphc: potentially malicious datagram size received.\\n\");",
      "893:             _recv_error_release(sixlo, ipv6, rbuf);",
      "894:             return;",
      "895:         }",
      "896:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "73615161c01fcfbbc7216cf502cabb12c1598ee4",
      "candidate_info": {
        "commit_hash": "73615161c01fcfbbc7216cf502cabb12c1598ee4",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/pull/18817/commits/73615161c01fcfbbc7216cf502cabb12c1598ee4",
        "files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ],
        "message": "gnrc_sixlowpan_iphc: fix buffer overflow in gnrc_sixlowpan_iphc_recv()",
        "before_after_code_files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
          ],
          "candidate": [
            "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
          ]
        }
      },
      "candidate_diff": {
        "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c": [
          "File: sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c -> sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "737:     if (rbuf != NULL) {",
          "738:         ipv6 = rbuf->pkt;",
          "739:         assert(ipv6 != NULL);",
          "740:     }",
          "741:     else {",
          "742:         ipv6 = gnrc_pktbuf_add(NULL, NULL, sizeof(ipv6_hdr_t),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "740:         if ((ipv6->size < sizeof(ipv6_hdr_t)) &&",
          "741:             (gnrc_pktbuf_realloc_data(ipv6, sizeof(ipv6_hdr_t)) != 0)) {",
          "742:             DEBUG(\"6lo iphc: no space to decompress IPHC\\n\");",
          "743:             _recv_error_release(sixlo, ipv6, rbuf);",
          "744:             return;",
          "745:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "872:         payload_len = (sixlo->size + uncomp_hdr_len -",
          "873:                        payload_offset - sizeof(ipv6_hdr_t));",
          "874:     }",
          "881:     }",
          "883:     ipv6_hdr = ipv6->data;",
          "884:     ipv6_hdr->len = byteorder_htons(payload_len);",
          "",
          "[Removed Lines]",
          "875:     if ((rbuf == NULL) &&",
          "877:         (gnrc_pktbuf_realloc_data(ipv6, uncomp_hdr_len + payload_len) != 0)) {",
          "878:         DEBUG(\"6lo iphc: no space left to copy payload\\n\");",
          "879:         _recv_error_release(sixlo, ipv6, rbuf);",
          "880:         return;",
          "",
          "[Added Lines]",
          "881:     if (rbuf == NULL) {",
          "883:         if (gnrc_pktbuf_realloc_data(ipv6, uncomp_hdr_len + payload_len) != 0) {",
          "884:             DEBUG(\"6lo iphc: no space left to copy payload\\n\");",
          "885:             _recv_error_release(sixlo, ipv6, rbuf);",
          "886:             return;",
          "887:         }",
          "889:     else {",
          "890:         if (ipv6->size < (uncomp_hdr_len + (sixlo->size - payload_offset))) {",
          "891:             DEBUG(\"6lo iphc: not enough space to copy payload.\\n\");",
          "892:             DEBUG(\"6lo iphc: potentially malicious datagram size received.\\n\");",
          "893:             _recv_error_release(sixlo, ipv6, rbuf);",
          "894:             return;",
          "895:         }",
          "896:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bd31010231f5340e21410595dd95afc86bbfd341",
      "candidate_info": {
        "commit_hash": "bd31010231f5340e21410595dd95afc86bbfd341",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/bd31010231f5340e21410595dd95afc86bbfd341",
        "files": [
          "sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c"
        ],
        "message": "gnrc_sixlowpan_frag_rb: fix integer underflow in _6lo_frag_size()\n\n(cherry picked from commit 9728f727e75d7d78dbfb5918e0de1b938b7b6d2c)",
        "before_after_code_files": [
          "sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c||sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/18820"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c||sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c": [
          "File: sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c -> sys/net/gnrc/network_layer/sixlowpan/frag/rb/gnrc_sixlowpan_frag_rb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "236:     size_t frag_size;",
          "238:     if (offset == 0) {",
          "239:         frag_size = pkt->size - sizeof(sixlowpan_frag_t);",
          "240:         if (data[0] == SIXLOWPAN_UNCOMP) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "239:         if (pkt->size < sizeof(sixlowpan_frag_t)) {",
          "240:             return 0;",
          "241:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "244:         }",
          "245:     }",
          "246:     else {",
          "247:         frag_size = pkt->size - sizeof(sixlowpan_frag_n_t);",
          "248:     }",
          "249:     return frag_size;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "250:         if (pkt->size < sizeof(sixlowpan_frag_n_t)) {",
          "251:             return 0;",
          "252:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "306:     if (IS_USED(MODULE_GNRC_SIXLOWPAN_FRAG) && sixlowpan_frag_is(pkt->data)) {",
          "307:         data = _6lo_frag_payload(pkt);",
          "308:         frag_size = _6lo_frag_size(pkt, offset, data);",
          "309:         datagram_size = sixlowpan_frag_datagram_size(pkt->data);",
          "310:         datagram_tag = sixlowpan_frag_datagram_tag(pkt->data);",
          "311:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "315:         if (frag_size == 0) {",
          "316:             DEBUG(\"6lo rbuf: integer underflow detected.\\n\");",
          "317:             gnrc_pktbuf_release(pkt);",
          "318:             return RBUF_ADD_ERROR;",
          "319:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f4fb746d1acaacc962daeed3aa71aadfe307d20e",
      "candidate_info": {
        "commit_hash": "f4fb746d1acaacc962daeed3aa71aadfe307d20e",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/f4fb746d1acaacc962daeed3aa71aadfe307d20e",
        "files": [
          "sys/net/gnrc/network_layer/sixlowpan/frag/vrb/gnrc_sixlowpan_frag_vrb.c"
        ],
        "message": "gnrc_sixlowpan_frag_vrb: Assert no usage of a vrb with src_len == 0\n\n(cherry picked from commit aa27ed71fa3e5d48dee1748dcf27b6323ec98a33)",
        "before_after_code_files": [
          "sys/net/gnrc/network_layer/sixlowpan/frag/vrb/gnrc_sixlowpan_frag_vrb.c||sys/net/gnrc/network_layer/sixlowpan/frag/vrb/gnrc_sixlowpan_frag_vrb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/18820"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sys/net/gnrc/network_layer/sixlowpan/frag/vrb/gnrc_sixlowpan_frag_vrb.c||sys/net/gnrc/network_layer/sixlowpan/frag/vrb/gnrc_sixlowpan_frag_vrb.c": [
          "File: sys/net/gnrc/network_layer/sixlowpan/frag/vrb/gnrc_sixlowpan_frag_vrb.c -> sys/net/gnrc/network_layer/sixlowpan/frag/vrb/gnrc_sixlowpan_frag_vrb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:     gnrc_sixlowpan_frag_vrb_t *vrbe = NULL;",
          "55:     assert(base != NULL);",
          "56:     assert(out_netif != NULL);",
          "57:     assert(out_dst != NULL);",
          "58:     assert(out_dst_len > 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56:     assert(base->src_len != 0);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "168: {",
          "169:     DEBUG(\"6lo vrb: trying to get entry for (%s, %u)\\n\",",
          "170:           gnrc_netif_addr_to_str(src, src_len, addr_str), src_tag);",
          "171:     for (unsigned i = 0; i < CONFIG_GNRC_SIXLOWPAN_FRAG_VRB_SIZE; i++) {",
          "172:         gnrc_sixlowpan_frag_vrb_t *vrbe = &_vrb[i];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "172:     assert(src_len != 0);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "189: {",
          "190:     DEBUG(\"6lo vrb: trying to get entry for reverse label switching (%s, %u)\\n\",",
          "191:           gnrc_netif_addr_to_str(src, src_len, addr_str), tag);",
          "192:     for (unsigned i = 0; i < CONFIG_GNRC_SIXLOWPAN_FRAG_VRB_SIZE; i++) {",
          "193:         gnrc_sixlowpan_frag_vrb_t *vrbe = &_vrb[i];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "194:     assert(src_len != 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4b23d93868a28edd8ebf2ff4ebe94540f2475008",
      "candidate_info": {
        "commit_hash": "4b23d93868a28edd8ebf2ff4ebe94540f2475008",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/4b23d93868a28edd8ebf2ff4ebe94540f2475008",
        "files": [
          "sys/net/gnrc/netif/ieee802154/gnrc_netif_ieee802154.c"
        ],
        "message": "gnrc_netif_ieee802154: Ignore packets without source address\n\n(cherry picked from commit 17c70f7ee0b1445f2941f516f264ed4a096e82b7)",
        "before_after_code_files": [
          "sys/net/gnrc/netif/ieee802154/gnrc_netif_ieee802154.c||sys/net/gnrc/netif/ieee802154/gnrc_netif_ieee802154.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/18820"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sys/net/gnrc/netif/ieee802154/gnrc_netif_ieee802154.c||sys/net/gnrc/netif/ieee802154/gnrc_netif_ieee802154.c": [
          "File: sys/net/gnrc/netif/ieee802154/gnrc_netif_ieee802154.c -> sys/net/gnrc/netif/ieee802154/gnrc_netif_ieee802154.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:     dst_len = ieee802154_get_dst(mhr, dst, &_pan_tmp);",
          "56:     src_len = ieee802154_get_src(mhr, src, &_pan_tmp);",
          "58:         DEBUG(\"_make_netif_hdr: unable to get addresses\\n\");",
          "59:         return NULL;",
          "60:     }",
          "",
          "[Removed Lines]",
          "57:     if ((dst_len < 0) || (src_len < 0)) {",
          "",
          "[Added Lines]",
          "57:     if ((dst_len < 0) || (src_len <= 0)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dafc397fdc3655aeb5c7b9963a43f1604c6a2062",
      "candidate_info": {
        "commit_hash": "dafc397fdc3655aeb5c7b9963a43f1604c6a2062",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/dafc397fdc3655aeb5c7b9963a43f1604c6a2062",
        "files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ],
        "message": "gnrc_sixlowpan_iphc: fix packet type confusion in _iphc_encode()\n\n(cherry picked from commit 4a081f86616cb5c9dd0b5d7b286da03285d1652a)",
        "before_after_code_files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/18820"
        ],
        "olp_code_files": {
          "patch": [
            "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
          ],
          "candidate": [
            "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
          ]
        }
      },
      "candidate_diff": {
        "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c": [
          "File: sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c -> sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1613:         else {",
          "1614:             dispatch->next = ptr;",
          "1615:         }",
          "1627:         ptr = ptr->next;",
          "1628:     }",
          "",
          "[Removed Lines]",
          "1616:         if (ptr->type == GNRC_NETTYPE_UNDEF) {",
          "1619:             dispatch_size += sizeof(udp_hdr_t);",
          "1620:             break;  /* nothing special after UDP so quit even if more UNDEF",
          "1622:         }",
          "1623:         else {",
          "1624:             dispatch_size += ptr->size;",
          "1625:         }",
          "",
          "[Added Lines]",
          "1616:         dispatch_size += ptr->size;",
          "",
          "---------------"
        ]
      }
    }
  ]
}