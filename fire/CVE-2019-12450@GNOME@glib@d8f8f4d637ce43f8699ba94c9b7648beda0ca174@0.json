{
  "cve_id": "CVE-2019-12450",
  "cve_desc": "file_copy_fallback in gio/gfile.c in GNOME GLib 2.15.0 through 2.61.1 does not properly restrict file permissions while a copy operation is in progress. Instead, default permissions are used.",
  "repo": "GNOME/glib",
  "patch_hash": "d8f8f4d637ce43f8699ba94c9b7648beda0ca174",
  "patch_info": {
    "commit_hash": "d8f8f4d637ce43f8699ba94c9b7648beda0ca174",
    "repo": "GNOME/glib",
    "commit_url": "https://github.com/GNOME/glib/commit/d8f8f4d637ce43f8699ba94c9b7648beda0ca174",
    "files": [
      "gio/gfile.c"
    ],
    "message": "gfile: Limit access to files when copying\n\nfile_copy_fallback creates new files with default permissions and\nset the correct permissions after the operation is finished. This\nmight cause that the files can be accessible by more users during\nthe operation than expected. Use G_FILE_CREATE_PRIVATE for the new\nfiles to limit access to those files.",
    "before_after_code_files": [
      "gio/gfile.c||gio/gfile.c"
    ]
  },
  "patch_diff": {
    "gio/gfile.c||gio/gfile.c": [
      "File: gio/gfile.c -> gio/gfile.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3284:         out = (GOutputStream*)_g_local_file_output_stream_replace (_g_local_file_get_filename (G_LOCAL_FILE (destination)),",
      "3285:                                                                    FALSE, NULL,",
      "3286:                                                                    flags & G_FILE_COPY_BACKUP,",
      "3289:                                                                    cancellable, error);",
      "3290:       else",
      "3291:         out = (GOutputStream*)_g_local_file_output_stream_create (_g_local_file_get_filename (G_LOCAL_FILE (destination)),",
      "3293:                                                                   cancellable, error);",
      "3294:     }",
      "3295:   else if (flags & G_FILE_COPY_OVERWRITE)",
      "",
      "[Removed Lines]",
      "3287:                                                                    G_FILE_CREATE_REPLACE_DESTINATION,",
      "3288:                                                                    info,",
      "3292:                                                                   FALSE, 0, info,",
      "",
      "[Added Lines]",
      "3287:                                                                    G_FILE_CREATE_REPLACE_DESTINATION |",
      "3288:                                                                    G_FILE_CREATE_PRIVATE, info,",
      "3292:                                                                   FALSE, G_FILE_CREATE_PRIVATE, info,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3297:       out = (GOutputStream *)g_file_replace (destination,",
      "3298:                                              NULL,",
      "3299:                                              flags & G_FILE_COPY_BACKUP,",
      "3301:                                              cancellable, error);",
      "3302:     }",
      "3303:   else",
      "3304:     {",
      "3306:     }",
      "3308:   if (!out)",
      "",
      "[Removed Lines]",
      "3300:                                              G_FILE_CREATE_REPLACE_DESTINATION,",
      "3305:       out = (GOutputStream *)g_file_create (destination, 0, cancellable, error);",
      "",
      "[Added Lines]",
      "3300:                                              G_FILE_CREATE_REPLACE_DESTINATION |",
      "3301:                                              G_FILE_CREATE_PRIVATE,",
      "3306:       out = (GOutputStream *)g_file_create (destination, G_FILE_CREATE_PRIVATE, cancellable, error);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1b6d8e58b287fb7ebfeeafabb895db51610e5260",
      "candidate_info": {
        "commit_hash": "1b6d8e58b287fb7ebfeeafabb895db51610e5260",
        "repo": "GNOME/glib",
        "commit_url": "https://github.com/GNOME/glib/commit/1b6d8e58b287fb7ebfeeafabb895db51610e5260",
        "files": [
          "gio/gfile.c"
        ],
        "message": "gfile: Factor out flags when copying files\n\nThis introduces no functional changes; just reduces duplication in the\ncode a little.\n\nSigned-off-by: Philip Withnall <withnall@endlessm.com>",
        "before_after_code_files": [
          "gio/gfile.c||gio/gfile.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "gio/gfile.c||gio/gfile.c"
          ],
          "candidate": [
            "gio/gfile.c||gio/gfile.c"
          ]
        }
      },
      "candidate_diff": {
        "gio/gfile.c||gio/gfile.c": [
          "File: gio/gfile.c -> gio/gfile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3188:   const char *target;",
          "3189:   char *attrs_to_read;",
          "3190:   gboolean do_set_attributes = FALSE;",
          "3193:   info = g_file_query_info (source,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3191:   GFileCreateFlags create_flags;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3281:   if (G_IS_LOCAL_FILE (destination))",
          "3282:     {",
          "3283:       if (flags & G_FILE_COPY_OVERWRITE)",
          "3284:         out = (GOutputStream*)_g_local_file_output_stream_replace (_g_local_file_get_filename (G_LOCAL_FILE (destination)),",
          "3285:                                                                    FALSE, NULL,",
          "3286:                                                                    flags & G_FILE_COPY_BACKUP,",
          "3289:                                                                    cancellable, error);",
          "3290:       else",
          "3291:         out = (GOutputStream*)_g_local_file_output_stream_create (_g_local_file_get_filename (G_LOCAL_FILE (destination)),",
          "3293:                                                                   cancellable, error);",
          "3294:     }",
          "3295:   else if (flags & G_FILE_COPY_OVERWRITE)",
          "",
          "[Removed Lines]",
          "3287:                                                                    G_FILE_CREATE_REPLACE_DESTINATION |",
          "3288:                                                                    G_FILE_CREATE_PRIVATE, info,",
          "3292:                                                                   FALSE, G_FILE_CREATE_PRIVATE, info,",
          "",
          "[Added Lines]",
          "3282:   create_flags = G_FILE_CREATE_PRIVATE;",
          "3283:   if (flags & G_FILE_COPY_OVERWRITE)",
          "3284:     create_flags |= G_FILE_CREATE_REPLACE_DESTINATION;",
          "3292:                                                                    create_flags, info,",
          "3296:                                                                   FALSE, create_flags, info,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3297:       out = (GOutputStream *)g_file_replace (destination,",
          "3298:                                              NULL,",
          "3299:                                              flags & G_FILE_COPY_BACKUP,",
          "3302:                                              cancellable, error);",
          "3303:     }",
          "3304:   else",
          "3305:     {",
          "3307:     }",
          "3309:   if (!out)",
          "",
          "[Removed Lines]",
          "3300:                                              G_FILE_CREATE_REPLACE_DESTINATION |",
          "3301:                                              G_FILE_CREATE_PRIVATE,",
          "3306:       out = (GOutputStream *)g_file_create (destination, G_FILE_CREATE_PRIVATE, cancellable, error);",
          "",
          "[Added Lines]",
          "3304:                                              create_flags,",
          "3309:       out = (GOutputStream *)g_file_create (destination, create_flags, cancellable, error);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "53f6ede62819fca7082e7cc1ed89edb799991f9a",
      "candidate_info": {
        "commit_hash": "53f6ede62819fca7082e7cc1ed89edb799991f9a",
        "repo": "GNOME/glib",
        "commit_url": "https://github.com/GNOME/glib/commit/53f6ede62819fca7082e7cc1ed89edb799991f9a",
        "files": [
          "gio/gfile.c"
        ],
        "message": "gfile: Don\u2019t copy files as private if using default permissions\n\nIf a copy operation is started with `G_FILE_COPY_TARGET_DEFAULT_PERMS`,\ndon\u2019t create the destination file as private. Instead, create it with\nthe process\u2019 current umask (i.e. \u2018default permissions\u2019).\n\nThis is a partial re-work of commit d8f8f4d637ce43f8699ba94c9b, with\ninput from Ondrej Holy.\n\nSigned-off-by: Philip Withnall <withnall@endlessm.com>\n\nFixes: #174",
        "before_after_code_files": [
          "gio/gfile.c||gio/gfile.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "gio/gfile.c||gio/gfile.c"
          ],
          "candidate": [
            "gio/gfile.c||gio/gfile.c"
          ]
        }
      },
      "candidate_diff": {
        "gio/gfile.c||gio/gfile.c": [
          "File: gio/gfile.c -> gio/gfile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3283:   if (flags & G_FILE_COPY_OVERWRITE)",
          "3284:     create_flags |= G_FILE_CREATE_REPLACE_DESTINATION;",
          "",
          "[Removed Lines]",
          "3282:   create_flags = G_FILE_CREATE_PRIVATE;",
          "",
          "[Added Lines]",
          "3292:   create_flags = G_FILE_CREATE_NONE;",
          "3293:   if (!(flags & G_FILE_COPY_TARGET_DEFAULT_PERMS) &&",
          "3294:       g_file_info_has_attribute (info, G_FILE_ATTRIBUTE_UNIX_MODE) &&",
          "3295:       !G_IS_LOCAL_FILE (destination))",
          "3296:     create_flags |= G_FILE_CREATE_PRIVATE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3289:         out = (GOutputStream*)_g_local_file_output_stream_replace (_g_local_file_get_filename (G_LOCAL_FILE (destination)),",
          "3290:                                                                    FALSE, NULL,",
          "3291:                                                                    flags & G_FILE_COPY_BACKUP,",
          "3293:                                                                    cancellable, error);",
          "3294:       else",
          "3295:         out = (GOutputStream*)_g_local_file_output_stream_create (_g_local_file_get_filename (G_LOCAL_FILE (destination)),",
          "3297:                                                                   cancellable, error);",
          "3298:     }",
          "3299:   else if (flags & G_FILE_COPY_OVERWRITE)",
          "",
          "[Removed Lines]",
          "3292:                                                                    create_flags, info,",
          "3296:                                                                   FALSE, create_flags, info,",
          "",
          "[Added Lines]",
          "3306:                                                                    create_flags,",
          "3307:                                                                    (flags & G_FILE_COPY_TARGET_DEFAULT_PERMS) ? NULL : info,",
          "3311:                                                                   FALSE, create_flags,",
          "3312:                                                                   (flags & G_FILE_COPY_TARGET_DEFAULT_PERMS) ? NULL : info,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "56e244ecdf9e9419f52b24858d23a014f32fa5a9",
      "candidate_info": {
        "commit_hash": "56e244ecdf9e9419f52b24858d23a014f32fa5a9",
        "repo": "GNOME/glib",
        "commit_url": "https://github.com/GNOME/glib/commit/56e244ecdf9e9419f52b24858d23a014f32fa5a9",
        "files": [
          "gio/gfile.c"
        ],
        "message": "gfile: Don\u2019t copy files as private if using default permissions\n\nIf a copy operation is started with `G_FILE_COPY_TARGET_DEFAULT_PERMS`,\ndon\u2019t create the destination file as private. Instead, create it with\nthe process\u2019 current umask (i.e. \u2018default permissions\u2019).\n\nThis is a partial re-work of commit d8f8f4d637ce43f8699ba94c9b, with\ninput from Ondrej Holy.\n\nSigned-off-by: Philip Withnall <withnall@endlessm.com>\n\nFixes: #174",
        "before_after_code_files": [
          "gio/gfile.c||gio/gfile.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "gio/gfile.c||gio/gfile.c"
          ],
          "candidate": [
            "gio/gfile.c||gio/gfile.c"
          ]
        }
      },
      "candidate_diff": {
        "gio/gfile.c||gio/gfile.c": [
          "File: gio/gfile.c -> gio/gfile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3283:   if (flags & G_FILE_COPY_OVERWRITE)",
          "3284:     create_flags |= G_FILE_CREATE_REPLACE_DESTINATION;",
          "",
          "[Removed Lines]",
          "3282:   create_flags = G_FILE_CREATE_PRIVATE;",
          "",
          "[Added Lines]",
          "3292:   create_flags = G_FILE_CREATE_NONE;",
          "3293:   if (!(flags & G_FILE_COPY_TARGET_DEFAULT_PERMS) &&",
          "3294:       g_file_info_has_attribute (info, G_FILE_ATTRIBUTE_UNIX_MODE) &&",
          "3295:       !G_IS_LOCAL_FILE (destination))",
          "3296:     create_flags |= G_FILE_CREATE_PRIVATE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3289:         out = (GOutputStream*)_g_local_file_output_stream_replace (_g_local_file_get_filename (G_LOCAL_FILE (destination)),",
          "3290:                                                                    FALSE, NULL,",
          "3291:                                                                    flags & G_FILE_COPY_BACKUP,",
          "3293:                                                                    cancellable, error);",
          "3294:       else",
          "3295:         out = (GOutputStream*)_g_local_file_output_stream_create (_g_local_file_get_filename (G_LOCAL_FILE (destination)),",
          "3297:                                                                   cancellable, error);",
          "3298:     }",
          "3299:   else if (flags & G_FILE_COPY_OVERWRITE)",
          "",
          "[Removed Lines]",
          "3292:                                                                    create_flags, info,",
          "3296:                                                                   FALSE, create_flags, info,",
          "",
          "[Added Lines]",
          "3306:                                                                    create_flags,",
          "3307:                                                                    (flags & G_FILE_COPY_TARGET_DEFAULT_PERMS) ? NULL : info,",
          "3311:                                                                   FALSE, create_flags,",
          "3312:                                                                   (flags & G_FILE_COPY_TARGET_DEFAULT_PERMS) ? NULL : info,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "51d73ef5d95b30fea58d6c6f2e2be05eb6024c40",
      "candidate_info": {
        "commit_hash": "51d73ef5d95b30fea58d6c6f2e2be05eb6024c40",
        "repo": "GNOME/glib",
        "commit_url": "https://github.com/GNOME/glib/commit/51d73ef5d95b30fea58d6c6f2e2be05eb6024c40",
        "files": [
          "gio/gfile.c"
        ],
        "message": "gfile: Factor out flags when copying files\n\nThis introduces no functional changes; just reduces duplication in the\ncode a little.\n\nSigned-off-by: Philip Withnall <withnall@endlessm.com>",
        "before_after_code_files": [
          "gio/gfile.c||gio/gfile.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "gio/gfile.c||gio/gfile.c"
          ],
          "candidate": [
            "gio/gfile.c||gio/gfile.c"
          ]
        }
      },
      "candidate_diff": {
        "gio/gfile.c||gio/gfile.c": [
          "File: gio/gfile.c -> gio/gfile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3188:   const char *target;",
          "3189:   char *attrs_to_read;",
          "3190:   gboolean do_set_attributes = FALSE;",
          "3193:   info = g_file_query_info (source,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3191:   GFileCreateFlags create_flags;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3281:   if (G_IS_LOCAL_FILE (destination))",
          "3282:     {",
          "3283:       if (flags & G_FILE_COPY_OVERWRITE)",
          "3284:         out = (GOutputStream*)_g_local_file_output_stream_replace (_g_local_file_get_filename (G_LOCAL_FILE (destination)),",
          "3285:                                                                    FALSE, NULL,",
          "3286:                                                                    flags & G_FILE_COPY_BACKUP,",
          "3289:                                                                    cancellable, error);",
          "3290:       else",
          "3291:         out = (GOutputStream*)_g_local_file_output_stream_create (_g_local_file_get_filename (G_LOCAL_FILE (destination)),",
          "3293:                                                                   cancellable, error);",
          "3294:     }",
          "3295:   else if (flags & G_FILE_COPY_OVERWRITE)",
          "",
          "[Removed Lines]",
          "3287:                                                                    G_FILE_CREATE_REPLACE_DESTINATION |",
          "3288:                                                                    G_FILE_CREATE_PRIVATE, info,",
          "3292:                                                                   FALSE, G_FILE_CREATE_PRIVATE, info,",
          "",
          "[Added Lines]",
          "3282:   create_flags = G_FILE_CREATE_PRIVATE;",
          "3283:   if (flags & G_FILE_COPY_OVERWRITE)",
          "3284:     create_flags |= G_FILE_CREATE_REPLACE_DESTINATION;",
          "3292:                                                                    create_flags, info,",
          "3296:                                                                   FALSE, create_flags, info,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3297:       out = (GOutputStream *)g_file_replace (destination,",
          "3298:                                              NULL,",
          "3299:                                              flags & G_FILE_COPY_BACKUP,",
          "3302:                                              cancellable, error);",
          "3303:     }",
          "3304:   else",
          "3305:     {",
          "3307:     }",
          "3309:   if (!out)",
          "",
          "[Removed Lines]",
          "3300:                                              G_FILE_CREATE_REPLACE_DESTINATION |",
          "3301:                                              G_FILE_CREATE_PRIVATE,",
          "3306:       out = (GOutputStream *)g_file_create (destination, G_FILE_CREATE_PRIVATE, cancellable, error);",
          "",
          "[Added Lines]",
          "3304:                                              create_flags,",
          "3309:       out = (GOutputStream *)g_file_create (destination, create_flags, cancellable, error);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4088f3017dd5a8d10760a8e069e05f81335d559c",
      "candidate_info": {
        "commit_hash": "4088f3017dd5a8d10760a8e069e05f81335d559c",
        "repo": "GNOME/glib",
        "commit_url": "https://github.com/GNOME/glib/commit/4088f3017dd5a8d10760a8e069e05f81335d559c",
        "files": [
          "gio/gfile.c"
        ],
        "message": "gfile: Limit access to files when copying\n\nfile_copy_fallback creates new files with default permissions and\nset the correct permissions after the operation is finished. This\nmight cause that the files can be accessible by more users during\nthe operation than expected. Use G_FILE_CREATE_PRIVATE for the new\nfiles to limit access to those files.",
        "before_after_code_files": [
          "gio/gfile.c||gio/gfile.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "gio/gfile.c||gio/gfile.c"
          ],
          "candidate": [
            "gio/gfile.c||gio/gfile.c"
          ]
        }
      },
      "candidate_diff": {
        "gio/gfile.c||gio/gfile.c": [
          "File: gio/gfile.c -> gio/gfile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3279:         out = (GOutputStream*)_g_local_file_output_stream_replace (_g_local_file_get_filename (G_LOCAL_FILE (destination)),",
          "3280:                                                                    FALSE, NULL,",
          "3281:                                                                    flags & G_FILE_COPY_BACKUP,",
          "3284:                                                                    cancellable, error);",
          "3285:       else",
          "3286:         out = (GOutputStream*)_g_local_file_output_stream_create (_g_local_file_get_filename (G_LOCAL_FILE (destination)),",
          "3288:                                                                   cancellable, error);",
          "3289:     }",
          "3290:   else if (flags & G_FILE_COPY_OVERWRITE)",
          "",
          "[Removed Lines]",
          "3282:                                                                    G_FILE_CREATE_REPLACE_DESTINATION,",
          "3283:                                                                    info,",
          "3287:                                                                   FALSE, 0, info,",
          "",
          "[Added Lines]",
          "3282:                                                                    G_FILE_CREATE_REPLACE_DESTINATION |",
          "3283:                                                                    G_FILE_CREATE_PRIVATE, info,",
          "3287:                                                                   FALSE, G_FILE_CREATE_PRIVATE, info,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3292:       out = (GOutputStream *)g_file_replace (destination,",
          "3293:                                              NULL,",
          "3294:                                              flags & G_FILE_COPY_BACKUP,",
          "3296:                                              cancellable, error);",
          "3297:     }",
          "3298:   else",
          "3299:     {",
          "3301:     }",
          "3303:   if (!out)",
          "",
          "[Removed Lines]",
          "3295:                                              G_FILE_CREATE_REPLACE_DESTINATION,",
          "3300:       out = (GOutputStream *)g_file_create (destination, 0, cancellable, error);",
          "",
          "[Added Lines]",
          "3295:                                              G_FILE_CREATE_REPLACE_DESTINATION |",
          "3296:                                              G_FILE_CREATE_PRIVATE,",
          "3301:       out = (GOutputStream *)g_file_create (destination, G_FILE_CREATE_PRIVATE, cancellable, error);",
          "",
          "---------------"
        ]
      }
    }
  ]
}