{
  "cve_id": "CVE-2017-7500",
  "cve_desc": "It was found that rpm did not properly handle RPM installations when a destination path was a symbolic link to a directory, possibly changing ownership and permissions of an arbitrary directory, and RPM files being placed in an arbitrary destination. An attacker, with write access to a directory in which a subdirectory will be installed, could redirect that directory to an arbitrary location and gain root privilege.",
  "repo": "rpm-software-management/rpm",
  "patch_hash": "c815822c8bdb138066ff58c624ae83e3a12ebfa9",
  "patch_info": {
    "commit_hash": "c815822c8bdb138066ff58c624ae83e3a12ebfa9",
    "repo": "rpm-software-management/rpm",
    "commit_url": "https://github.com/rpm-software-management/rpm/commit/c815822c8bdb138066ff58c624ae83e3a12ebfa9",
    "files": [
      "lib/verify.c",
      "tests/rpmverify.at"
    ],
    "message": "Make verification match the new restricted directory symlink behavior\n\nOnly follow directory symlinks owned by target directory owner or root\nduring verification to match the behavior of fsmVerify() in the new\nCVE-2017-7500 world order.\n\nThe code is klunkier than it should and the logic should use common code\nwith fsmVerify() instead of duplicating it here, but that needs more\nchanges than is comfortable to backport so starting with this.\n\nAlso worth noting that the previous \"follow the link\" logic from\ncommit 3ccd774255b8215733e0bdfdf5a683da9dd10923 was not quite right,\nit'd fail with RPMVERIFY_LSTATFAIL on a broken symlink when it should've\nran verification on the symlink itself. This behavior is fixed here too.\n\nFinally, once again fakechroot gets in the way and forces the related\nverify testcase to be changed to be able to create a valid link. Reuse\nthe replacement testcase for the purpose and add another case for\nverifying an invalid link.",
    "before_after_code_files": [
      "lib/verify.c||lib/verify.c",
      "tests/rpmverify.at||tests/rpmverify.at"
    ]
  },
  "patch_diff": {
    "lib/verify.c||lib/verify.c": [
      "File: lib/verify.c -> lib/verify.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "94:     }",
      "100:     }",
      "",
      "[Removed Lines]",
      "97:     if (S_ISDIR(fmode) && S_ISLNK(sb.st_mode) && stat(fn, &sb) != 0) {",
      "98:  vfy |= RPMVERIFY_LSTATFAIL;",
      "99:  goto exit;",
      "",
      "[Added Lines]",
      "97:     if (S_ISDIR(fmode) && S_ISLNK(sb.st_mode)) {",
      "98:  struct stat dsb;",
      "100:  if (stat(fn, &dsb) == 0 && S_ISDIR(dsb.st_mode)) {",
      "101:      uid_t fuid;",
      "103:      if (sb.st_uid == 0 ||",
      "104:    (rpmugUid(rpmfilesFUser(fi, ix), &fuid) == 0 &&",
      "105:     sb.st_uid == fuid)) {",
      "107:      }",
      "108:  }",
      "",
      "---------------"
    ],
    "tests/rpmverify.at||tests/rpmverify.at": [
      "File: tests/rpmverify.at -> tests/rpmverify.at",
      "--- Hunk 1 ---",
      "[Context before]",
      "69: AT_CHECK([",
      "70: RPMDB_CLEAR",
      "71: RPMDB_INIT",
      "79: ],",
      "80: [0],",
      "84: ],",
      "85: [])",
      "86: AT_CLEANUP",
      "",
      "[Removed Lines]",
      "73: runroot rpm -U --nodeps --noscripts --ignorearch --ignoreos \\",
      "74:  /data/RPMS/hello-1.0-1.i386.rpm",
      "75: mv \"${RPMTEST}\"/usr/share/doc/hello-1.0 \"${RPMTEST}\"/usr/share/doc/hello-1.0.orig",
      "76: ln -s hello-1.0.orig \"${RPMTEST}\"/usr/share/doc/hello-1.0",
      "77: runroot rpm -Vva --nodeps --nouser --nogroup",
      "78: rm -rf \"${RPMTEST}\"/usr/share/doc/",
      "81: [.........    /usr/local/bin/hello",
      "82: .........    /usr/share/doc/hello-1.0",
      "83: .........  d /usr/share/doc/hello-1.0/FAQ",
      "",
      "[Added Lines]",
      "72: tf=\"${RPMTEST}\"/opt/foo",
      "73: rm -rf \"${RPMTEST}\"/opt/*",
      "74: rm -rf \"${TOPDIR}\"",
      "76: runroot rpmbuild --quiet -bb \\",
      "77:         --define \"ver 1.0\" \\",
      "78:         --define \"filetype datadir\" \\",
      "79:         --define \"filedata README1\" \\",
      "80:         --define \"user $(id -u -n)\" \\",
      "81:           /data/SPECS/replacetest.spec",
      "83: runroot rpm -U /build/RPMS/noarch/replacetest-1.0-1.noarch.rpm",
      "84: mv \"${RPMTEST}\"/opt/foo \"${RPMTEST}\"/opt/was",
      "85: ln -s was \"${RPMTEST}\"/opt/foo",
      "86: runroot rpm -Vv replacetest",
      "89: [.........    /opt/foo",
      "90: .........    /opt/foo/README1",
      "91: .........    /opt/goo",
      "92: .........    /opt/zoo",
      "93: ],",
      "94: [])",
      "95: AT_CLEANUP",
      "97: AT_SETUP([directory replaced with an invalid directory symlink])",
      "98: AT_KEYWORDS([verify])",
      "99: AT_CHECK([",
      "100: RPMDB_CLEAR",
      "101: RPMDB_INIT",
      "102: tf=\"${RPMTEST}\"/opt/foo",
      "103: rm -rf \"${RPMTEST}\"/opt/*",
      "104: rm -rf \"${TOPDIR}\"",
      "106: runroot rpmbuild --quiet -bb \\",
      "107:         --define \"ver 1.0\" \\",
      "108:         --define \"filetype datadir\" \\",
      "109:         --define \"filedata README1\" \\",
      "110:           /data/SPECS/replacetest.spec",
      "112: runroot rpm -U /build/RPMS/noarch/replacetest-1.0-1.noarch.rpm",
      "113: mv \"${RPMTEST}\"/opt/foo \"${RPMTEST}\"/opt/was",
      "114: ln -s was \"${RPMTEST}\"/opt/foo",
      "115: runroot rpm -Vv --nouser --nogroup replacetest",
      "116: ],",
      "117: [1],",
      "118: [....L....    /opt/foo",
      "119: .........    /opt/foo/README1",
      "120: .........    /opt/goo",
      "121: .........    /opt/zoo",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b806e912711f39e0c103fb5b0616060d2c372f54",
      "candidate_info": {
        "commit_hash": "b806e912711f39e0c103fb5b0616060d2c372f54",
        "repo": "rpm-software-management/rpm",
        "commit_url": "https://github.com/rpm-software-management/rpm/commit/b806e912711f39e0c103fb5b0616060d2c372f54",
        "files": [
          "lib/verify.c",
          "tests/rpmverify.at"
        ],
        "message": "Make verification match the new restricted directory symlink behavior\n\nOnly follow directory symlinks owned by target directory owner or root\nduring verification to match the behavior of fsmVerify() in the new\nCVE-2017-7500 world order.\n\nThe code is klunkier than it should and the logic should use common code\nwith fsmVerify() instead of duplicating it here, but that needs more\nchanges than is comfortable to backport so starting with this.\n\nAlso worth noting that the previous \"follow the link\" logic from\ncommit 3ccd774255b8215733e0bdfdf5a683da9dd10923 was not quite right,\nit'd fail with RPMVERIFY_LSTATFAIL on a broken symlink when it should've\nran verification on the symlink itself. This behavior is fixed here too.\n\nFinally, once again fakechroot gets in the way and forces the related\nverify testcase to be changed to be able to create a valid link. Reuse\nthe replacement testcase for the purpose and add another case for\nverifying an invalid link.\n\n(cherry picked from commit c815822c8bdb138066ff58c624ae83e3a12ebfa9)",
        "before_after_code_files": [
          "lib/verify.c||lib/verify.c",
          "tests/rpmverify.at||tests/rpmverify.at"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/verify.c||lib/verify.c",
            "tests/rpmverify.at||tests/rpmverify.at"
          ],
          "candidate": [
            "lib/verify.c||lib/verify.c",
            "tests/rpmverify.at||tests/rpmverify.at"
          ]
        }
      },
      "candidate_diff": {
        "lib/verify.c||lib/verify.c": [
          "File: lib/verify.c -> lib/verify.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "94:     }",
          "100:     }",
          "",
          "[Removed Lines]",
          "97:     if (S_ISDIR(fmode) && S_ISLNK(sb.st_mode) && stat(fn, &sb) != 0) {",
          "98:  vfy |= RPMVERIFY_LSTATFAIL;",
          "99:  goto exit;",
          "",
          "[Added Lines]",
          "97:     if (S_ISDIR(fmode) && S_ISLNK(sb.st_mode)) {",
          "98:  struct stat dsb;",
          "100:  if (stat(fn, &dsb) == 0 && S_ISDIR(dsb.st_mode)) {",
          "101:      uid_t fuid;",
          "103:      if (sb.st_uid == 0 ||",
          "104:    (rpmugUid(rpmfilesFUser(fi, ix), &fuid) == 0 &&",
          "105:     sb.st_uid == fuid)) {",
          "107:      }",
          "108:  }",
          "",
          "---------------"
        ],
        "tests/rpmverify.at||tests/rpmverify.at": [
          "File: tests/rpmverify.at -> tests/rpmverify.at",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: AT_CHECK([",
          "70: RPMDB_CLEAR",
          "71: RPMDB_INIT",
          "79: ],",
          "80: [0],",
          "84: ],",
          "85: [])",
          "86: AT_CLEANUP",
          "",
          "[Removed Lines]",
          "73: runroot rpm -U --nodeps --noscripts --ignorearch --ignoreos \\",
          "74:  /data/RPMS/hello-1.0-1.i386.rpm",
          "75: mv \"${RPMTEST}\"/usr/share/doc/hello-1.0 \"${RPMTEST}\"/usr/share/doc/hello-1.0.orig",
          "76: ln -s hello-1.0.orig \"${RPMTEST}\"/usr/share/doc/hello-1.0",
          "77: runroot rpm -Vva --nodeps --nouser --nogroup",
          "78: rm -rf \"${RPMTEST}\"/usr/share/doc/",
          "81: [.........    /usr/local/bin/hello",
          "82: .........    /usr/share/doc/hello-1.0",
          "83: .........  d /usr/share/doc/hello-1.0/FAQ",
          "",
          "[Added Lines]",
          "72: tf=\"${RPMTEST}\"/opt/foo",
          "73: rm -rf \"${RPMTEST}\"/opt/*",
          "74: rm -rf \"${TOPDIR}\"",
          "76: runroot rpmbuild --quiet -bb \\",
          "77:         --define \"ver 1.0\" \\",
          "78:         --define \"filetype datadir\" \\",
          "79:         --define \"filedata README1\" \\",
          "80:         --define \"user $(id -u -n)\" \\",
          "81:           /data/SPECS/replacetest.spec",
          "83: runroot rpm -U /build/RPMS/noarch/replacetest-1.0-1.noarch.rpm",
          "84: mv \"${RPMTEST}\"/opt/foo \"${RPMTEST}\"/opt/was",
          "85: ln -s was \"${RPMTEST}\"/opt/foo",
          "86: runroot rpm -Vv replacetest",
          "89: [.........    /opt/foo",
          "90: .........    /opt/foo/README1",
          "91: .........    /opt/goo",
          "92: .........    /opt/zoo",
          "93: ],",
          "94: [])",
          "95: AT_CLEANUP",
          "97: AT_SETUP([directory replaced with an invalid directory symlink])",
          "98: AT_KEYWORDS([verify])",
          "99: AT_CHECK([",
          "100: RPMDB_CLEAR",
          "101: RPMDB_INIT",
          "102: tf=\"${RPMTEST}\"/opt/foo",
          "103: rm -rf \"${RPMTEST}\"/opt/*",
          "104: rm -rf \"${TOPDIR}\"",
          "106: runroot rpmbuild --quiet -bb \\",
          "107:         --define \"ver 1.0\" \\",
          "108:         --define \"filetype datadir\" \\",
          "109:         --define \"filedata README1\" \\",
          "110:           /data/SPECS/replacetest.spec",
          "112: runroot rpm -U /build/RPMS/noarch/replacetest-1.0-1.noarch.rpm",
          "113: mv \"${RPMTEST}\"/opt/foo \"${RPMTEST}\"/opt/was",
          "114: ln -s was \"${RPMTEST}\"/opt/foo",
          "115: runroot rpm -Vv --nouser --nogroup replacetest",
          "116: ],",
          "117: [1],",
          "118: [....L....    /opt/foo",
          "119: .........    /opt/foo/README1",
          "120: .........    /opt/goo",
          "121: .........    /opt/zoo",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d973e5b6cb96978054945b6716a5dc9bf8dbbcfa",
      "candidate_info": {
        "commit_hash": "d973e5b6cb96978054945b6716a5dc9bf8dbbcfa",
        "repo": "rpm-software-management/rpm",
        "commit_url": "https://github.com/rpm-software-management/rpm/commit/d973e5b6cb96978054945b6716a5dc9bf8dbbcfa",
        "files": [
          "lib/verify.c",
          "tests/rpmverify.at"
        ],
        "message": "Make verification match the new restricted directory symlink behavior\n\nOnly follow directory symlinks owned by target directory owner or root\nduring verification to match the behavior of fsmVerify() in the new\nCVE-2017-7500 world order.\n\nThe code is klunkier than it should and the logic should use common code\nwith fsmVerify() instead of duplicating it here, but that needs more\nchanges than is comfortable to backport so starting with this.\n\nAlso worth noting that the previous \"follow the link\" logic from\ncommit 3ccd774255b8215733e0bdfdf5a683da9dd10923 was not quite right,\nit'd fail with RPMVERIFY_LSTATFAIL on a broken symlink when it should've\nran verification on the symlink itself. This behavior is fixed here too.\n\nFinally, once again fakechroot gets in the way and forces the related\nverify testcase to be changed to be able to create a valid link. Reuse\nthe replacement testcase for the purpose and add another case for\nverifying an invalid link.\n\nBackported from commit c815822c8bdb138066ff58c624ae83e3a12ebfa9",
        "before_after_code_files": [
          "lib/verify.c||lib/verify.c",
          "tests/rpmverify.at||tests/rpmverify.at"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/verify.c||lib/verify.c",
            "tests/rpmverify.at||tests/rpmverify.at"
          ],
          "candidate": [
            "lib/verify.c||lib/verify.c",
            "tests/rpmverify.at||tests/rpmverify.at"
          ]
        }
      },
      "candidate_diff": {
        "lib/verify.c||lib/verify.c": [
          "File: lib/verify.c -> lib/verify.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:     }",
          "103:     }",
          "",
          "[Removed Lines]",
          "100:     if (S_ISDIR(fmode) && S_ISLNK(sb.st_mode) && stat(fn, &sb) != 0) {",
          "102:  return 1;",
          "",
          "[Added Lines]",
          "100:     if (S_ISDIR(fmode) && S_ISLNK(sb.st_mode)) {",
          "101:  struct stat dsb;",
          "103:  if (stat(fn, &dsb) == 0 && S_ISDIR(dsb.st_mode)) {",
          "104:      uid_t fuid;",
          "106:      if (sb.st_uid == 0 ||",
          "107:    (rpmugUid(rpmfiFUser(fi), &fuid) == 0 &&",
          "108:     sb.st_uid == fuid)) {",
          "110:      }",
          "111:  }",
          "",
          "---------------"
        ],
        "tests/rpmverify.at||tests/rpmverify.at": [
          "File: tests/rpmverify.at -> tests/rpmverify.at",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: AT_CHECK([",
          "70: RPMDB_CLEAR",
          "71: RPMDB_INIT",
          "79: ],",
          "80: [0],",
          "84: ],",
          "85: [])",
          "86: AT_CLEANUP",
          "",
          "[Removed Lines]",
          "73: runroot rpm -U --nodeps --noscripts --ignorearch --ignoreos \\",
          "74:  /data/RPMS/hello-1.0-1.i386.rpm",
          "75: mv \"${RPMTEST}\"/usr/share/doc/hello-1.0 \"${RPMTEST}\"/usr/share/doc/hello-1.0.orig",
          "76: ln -s hello-1.0.orig \"${RPMTEST}\"/usr/share/doc/hello-1.0",
          "77: runroot rpm -Vva --nodeps --nouser --nogroup",
          "78: rm -rf \"${RPMTEST}\"/usr/share/doc/",
          "81: [.........    /usr/local/bin/hello",
          "82: .........    /usr/share/doc/hello-1.0",
          "83: .........  d /usr/share/doc/hello-1.0/FAQ",
          "",
          "[Added Lines]",
          "72: tf=\"${RPMTEST}\"/opt/foo",
          "73: rm -rf \"${RPMTEST}\"/opt/*",
          "74: rm -rf \"${TOPDIR}\"",
          "76: runroot rpmbuild --quiet -bb \\",
          "77:         --define \"ver 1.0\" \\",
          "78:         --define \"filetype datadir\" \\",
          "79:         --define \"filedata README1\" \\",
          "80:         --define \"user $(id -u -n)\" \\",
          "81:           /data/SPECS/replacetest.spec",
          "83: runroot rpm -U /build/RPMS/noarch/replacetest-1.0-1.noarch.rpm",
          "84: mv \"${RPMTEST}\"/opt/foo \"${RPMTEST}\"/opt/was",
          "85: ln -s was \"${RPMTEST}\"/opt/foo",
          "86: runroot rpm -Vv replacetest",
          "89: [.........    /opt/foo",
          "90: .........    /opt/foo/README1",
          "91: .........    /opt/goo",
          "92: .........    /opt/zoo",
          "93: ],",
          "94: [])",
          "95: AT_CLEANUP",
          "97: AT_SETUP([directory replaced with an invalid directory symlink])",
          "98: AT_KEYWORDS([verify])",
          "99: AT_CHECK([",
          "100: RPMDB_CLEAR",
          "101: RPMDB_INIT",
          "102: tf=\"${RPMTEST}\"/opt/foo",
          "103: rm -rf \"${RPMTEST}\"/opt/*",
          "104: rm -rf \"${TOPDIR}\"",
          "106: runroot rpmbuild --quiet -bb \\",
          "107:         --define \"ver 1.0\" \\",
          "108:         --define \"filetype datadir\" \\",
          "109:         --define \"filedata README1\" \\",
          "110:           /data/SPECS/replacetest.spec",
          "112: runroot rpm -U /build/RPMS/noarch/replacetest-1.0-1.noarch.rpm",
          "113: mv \"${RPMTEST}\"/opt/foo \"${RPMTEST}\"/opt/was",
          "114: ln -s was \"${RPMTEST}\"/opt/foo",
          "115: runroot rpm -Vv --nouser --nogroup replacetest",
          "116: ],",
          "117: [1],",
          "118: [....L....    /opt/foo",
          "119: .........    /opt/foo/README1",
          "120: .........    /opt/goo",
          "121: .........    /opt/zoo",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b8e861110f98619f87643919ec118f78dcb0712f",
      "candidate_info": {
        "commit_hash": "b8e861110f98619f87643919ec118f78dcb0712f",
        "repo": "rpm-software-management/rpm",
        "commit_url": "https://github.com/rpm-software-management/rpm/commit/b8e861110f98619f87643919ec118f78dcb0712f",
        "files": [
          "lib/verify.c"
        ],
        "message": "Use the mode, size, mtime and rdev data from rpmfilesStat()\n\nNo need for the separate accessor calls now, just use the data from\nthe stat struct from rpmfilesStat(). No functional changes, but this\ndepends on commit b7f6ad39195442ec53b7f8453aae4499a63bc311 to get the\nsize right.",
        "before_after_code_files": [
          "lib/verify.c||lib/verify.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/verify.c||lib/verify.c"
          ],
          "candidate": [
            "lib/verify.c||lib/verify.c"
          ]
        }
      },
      "candidate_diff": {
        "lib/verify.c||lib/verify.c": [
          "File: lib/verify.c -> lib/verify.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: rpmVerifyAttrs rpmfilesVerify(rpmfiles fi, int ix, rpmVerifyAttrs omitMask)",
          "57: {",
          "59:     rpmfileAttrs fileAttrs = rpmfilesFFlags(fi, ix);",
          "60:     rpmVerifyAttrs flags = rpmfilesVFlags(fi, ix);",
          "61:     const char * fn = rpmfilesFN(fi, ix);",
          "",
          "[Removed Lines]",
          "58:     rpm_mode_t fmode = rpmfilesFMode(fi, ix);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94:     }",
          "98:  struct stat dsb;",
          "100:  if (stat(fn, &dsb) == 0 && S_ISDIR(dsb.st_mode)) {",
          "",
          "[Removed Lines]",
          "97:     if (S_ISDIR(fmode) && S_ISLNK(sb.st_mode)) {",
          "",
          "[Added Lines]",
          "96:     if (S_ISDIR(fsb.st_mode) && S_ISLNK(sb.st_mode)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "160:  }",
          "161:     }",
          "168:     if (flags & RPMVERIFY_MODE) {",
          "169:  mode_t metamode = fsb.st_mode;",
          "",
          "[Removed Lines]",
          "163:     if (flags & RPMVERIFY_FILESIZE) {",
          "164:  if (sb.st_size != rpmfilesFSize(fi, ix))",
          "165:      vfy |= RPMVERIFY_FILESIZE;",
          "166:     }",
          "",
          "[Added Lines]",
          "162:     if ((flags & RPMVERIFY_FILESIZE) && (sb.st_size != fsb.st_size))",
          "163:  vfy |= RPMVERIFY_FILESIZE;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "196:     }",
          "198:     if (flags & RPMVERIFY_RDEV) {",
          "201:  {",
          "202:      vfy |= RPMVERIFY_RDEV;",
          "204:      rpm_rdev_t st_rdev = (sb.st_rdev & 0xffff);",
          "206:      if (st_rdev != frdev)",
          "207:   vfy |= RPMVERIFY_RDEV;",
          "208:  }",
          "",
          "[Removed Lines]",
          "199:  if (S_ISCHR(fmode) != S_ISCHR(sb.st_mode)",
          "200:   || S_ISBLK(fmode) != S_ISBLK(sb.st_mode))",
          "203:  } else if (S_ISDEV(fmode) && S_ISDEV(sb.st_mode)) {",
          "205:      rpm_rdev_t frdev = (rpmfilesFRdev(fi, ix) & 0xffff);",
          "",
          "[Added Lines]",
          "196:  if (S_ISCHR(fsb.st_mode) != S_ISCHR(sb.st_mode)",
          "197:   || S_ISBLK(fsb.st_mode) != S_ISBLK(sb.st_mode))",
          "200:  } else if (S_ISDEV(fsb.st_mode) && S_ISDEV(sb.st_mode)) {",
          "202:      rpm_rdev_t frdev = (fsb.st_rdev & 0xffff);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "232:     }",
          "233: #endif",
          "236:  vfy |= RPMVERIFY_MTIME;",
          "239:     if ((flags & RPMVERIFY_USER) && (sb.st_uid != fsb.st_uid))",
          "240:  vfy |= RPMVERIFY_USER;",
          "",
          "[Removed Lines]",
          "235:     if ((flags & RPMVERIFY_MTIME) && (sb.st_mtime != rpmfilesFMtime(fi, ix))) {",
          "237:     }",
          "",
          "[Added Lines]",
          "232:     if ((flags & RPMVERIFY_MTIME) && (sb.st_mtime != fsb.st_mtime))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "10bd0373179f203633eb8e4e392b94926d306b7a",
      "candidate_info": {
        "commit_hash": "10bd0373179f203633eb8e4e392b94926d306b7a",
        "repo": "rpm-software-management/rpm",
        "commit_url": "https://github.com/rpm-software-management/rpm/commit/10bd0373179f203633eb8e4e392b94926d306b7a",
        "files": [
          "lib/verify.c"
        ],
        "message": "Adjust file verify to really follow CVE-2017-7500 rules, doh\n\nThe file verification logic wrt directory symlinks needs to match that\nof fsmVerify(), which wasn't really the case. This should've been in\ncommit d3fae43615f4e925e21fd12a96974a85542f13b9, and thanks for Michael\nSchroeder for this one too.",
        "before_after_code_files": [
          "lib/verify.c||lib/verify.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/verify.c||lib/verify.c"
          ],
          "candidate": [
            "lib/verify.c||lib/verify.c"
          ]
        }
      },
      "candidate_diff": {
        "lib/verify.c||lib/verify.c": [
          "File: lib/verify.c -> lib/verify.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:  if (stat(fn, &dsb) == 0 && S_ISDIR(dsb.st_mode)) {",
          "103:  }",
          "104:     }",
          "",
          "[Removed Lines]",
          "101:      if (sb.st_uid == 0 || sb.st_uid == fsb.st_uid)",
          "",
          "[Added Lines]",
          "101:      if (sb.st_uid == 0 || sb.st_uid == dsb.st_uid)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d9a56786e55824d5d3494dcbf2f504d95cee7d05",
      "candidate_info": {
        "commit_hash": "d9a56786e55824d5d3494dcbf2f504d95cee7d05",
        "repo": "rpm-software-management/rpm",
        "commit_url": "https://github.com/rpm-software-management/rpm/commit/d9a56786e55824d5d3494dcbf2f504d95cee7d05",
        "files": [
          "lib/verify.c"
        ],
        "message": "Use just numeric uid/gid for user/group verification\n\nLose the duplicate detection introduced in commit\n348eea3a4151b1dbe6f9976ef50cd7ba3820fa79 which was a bit controversial,\nand outside rpm's jurisdiction. Instead grab all the relevant file data\nin through rpmfilesStat(). Simplifies things a good deal without really\nlosing anything, multiple user/groupnames will still be handled correctly\nas long as they can be resolved to the same id via the normal means.\nSo from rpm's POV no functional changes, just 40 lines less goo...",
        "before_after_code_files": [
          "lib/verify.c||lib/verify.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/verify.c||lib/verify.c"
          ],
          "candidate": [
            "lib/verify.c||lib/verify.c"
          ]
        }
      },
      "candidate_diff": {
        "lib/verify.c||lib/verify.c": [
          "File: lib/verify.c -> lib/verify.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:     rpmfileAttrs fileAttrs = rpmfilesFFlags(fi, ix);",
          "60:     rpmVerifyAttrs flags = rpmfilesVFlags(fi, ix);",
          "61:     const char * fn = rpmfilesFN(fi, ix);",
          "63:     rpmVerifyAttrs vfy = RPMVERIFY_NONE;",
          "",
          "[Removed Lines]",
          "62:     struct stat sb;",
          "",
          "[Added Lines]",
          "62:     struct stat sb, fsb;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "88:  break;",
          "89:     }",
          "92:  vfy |= RPMVERIFY_LSTATFAIL;",
          "93:  goto exit;",
          "94:     }",
          "",
          "[Removed Lines]",
          "91:     if (fn == NULL || lstat(fn, &sb) != 0) {",
          "",
          "[Added Lines]",
          "91:     if (fn == NULL || lstat(fn, &sb) != 0 || rpmfilesStat(fi, ix, 0, &fsb)) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "98:  struct stat dsb;",
          "100:  if (stat(fn, &dsb) == 0 && S_ISDIR(dsb.st_mode)) {",
          "108:  }",
          "109:     }",
          "",
          "[Removed Lines]",
          "101:      uid_t fuid;",
          "103:      if (sb.st_uid == 0 ||",
          "104:    (rpmugUid(rpmfilesFUser(fi, ix), &fuid) == 0 &&",
          "105:     sb.st_uid == fuid)) {",
          "107:      }",
          "",
          "[Added Lines]",
          "102:      if (sb.st_uid == 0 || sb.st_uid == fsb.st_uid)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "246:  vfy |= RPMVERIFY_MTIME;",
          "247:     }",
          "291: exit:",
          "292:     return vfy;",
          "",
          "[Removed Lines]",
          "249:     if (flags & RPMVERIFY_USER) {",
          "250:  const char * name = rpmugUname(sb.st_uid);",
          "251:  const char * fuser = rpmfilesFUser(fi, ix);",
          "252:  uid_t uid;",
          "253:  int namematch = 0;",
          "254:  int idmatch = 0;",
          "256:  if (name && fuser)",
          "257:     namematch =  rstreq(name, fuser);",
          "258:  if (fuser && rpmugUid(fuser, &uid) == 0)",
          "259:      idmatch = (uid == sb.st_uid);",
          "261:  if (namematch != idmatch) {",
          "262:      rpmlog(RPMLOG_WARNING,",
          "263:       _(\"Duplicate username or UID for user %s\\n\"), fuser);",
          "264:  }",
          "266:  if (!(namematch || idmatch))",
          "267:      vfy |= RPMVERIFY_USER;",
          "268:     }",
          "270:     if (flags & RPMVERIFY_GROUP) {",
          "271:  const char * name = rpmugGname(sb.st_gid);",
          "272:  const char * fgroup = rpmfilesFGroup(fi, ix);",
          "273:  gid_t gid;",
          "274:  int namematch = 0;",
          "275:  int idmatch = 0;",
          "277:  if (name && fgroup)",
          "278:      namematch = rstreq(name, fgroup);",
          "279:  if (fgroup && rpmugGid(fgroup, &gid) == 0)",
          "280:      idmatch = (gid == sb.st_gid);",
          "282:  if (namematch != idmatch) {",
          "283:      rpmlog(RPMLOG_WARNING,",
          "284:       _(\"Duplicate groupname or GID for group %s\\n\"), fgroup);",
          "285:  }",
          "287:  if (!(namematch || idmatch))",
          "288:      vfy |= RPMVERIFY_GROUP;",
          "289:     }",
          "",
          "[Added Lines]",
          "245:     if ((flags & RPMVERIFY_USER) && (sb.st_uid != fsb.st_uid))",
          "246:  vfy |= RPMVERIFY_USER;",
          "248:     if ((flags & RPMVERIFY_GROUP) && (sb.st_gid != fsb.st_gid))",
          "249:  vfy |= RPMVERIFY_GROUP;",
          "",
          "---------------"
        ]
      }
    }
  ]
}