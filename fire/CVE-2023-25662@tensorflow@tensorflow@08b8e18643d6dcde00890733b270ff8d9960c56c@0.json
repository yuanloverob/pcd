{
  "cve_id": "CVE-2023-25662",
  "cve_desc": "TensorFlow is an open source platform for machine learning. Versions prior to 2.12.0 and 2.11.1 are vulnerable to integer overflow in EditDistance. A fix is included in TensorFlow version 2.12.0 and version 2.11.1.\n",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "08b8e18643d6dcde00890733b270ff8d9960c56c",
  "patch_info": {
    "commit_hash": "08b8e18643d6dcde00890733b270ff8d9960c56c",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/08b8e18643d6dcde00890733b270ff8d9960c56c",
    "files": [
      "tensorflow/core/ops/array_ops.cc",
      "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
    ],
    "message": "Fix security vulnerability in EditDistance op shape function.\n\nPiperOrigin-RevId: 504367470",
    "before_after_code_files": [
      "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
      "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
      "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: #include \"tensorflow/core/framework/types.h\"",
      "26: #include \"tensorflow/core/framework/types.pb.h\"",
      "27: #include \"tensorflow/core/lib/core/errors.h\"",
      "28: #include \"tensorflow/core/platform/types.h\"",
      "29: #include \"tensorflow/core/util/mirror_pad_mode.h\"",
      "30: #include \"tensorflow/core/util/padding.h\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: #include \"tensorflow/core/platform/status.h\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1073:         return shape_inference::UnknownShape(c);",
      "1074:       }",
      "1076:       if (hypothesis_shape_t->NumElements() != truth_shape_t->NumElements()) {",
      "1077:         return errors::InvalidArgument(",
      "1078:             \"Num elements of hypothesis_shape does not match truth_shape: \",",
      "1079:             hypothesis_shape_t->NumElements(), \" vs. \",",
      "1080:             truth_shape_t->NumElements());",
      "1081:       }",
      "1083:       auto h_values = hypothesis_shape_t->flat<int64_t>();",
      "1084:       auto t_values = truth_shape_t->flat<int64_t>();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1082:       if (hypothesis_shape_t->NumElements() < 2) {",
      "1083:         return errors::InvalidArgument(",
      "1084:             \"Input Hypothesis SparseTensors must have rank at least 2, but \"",
      "1085:             \"hypothesis_shape rank is: \",",
      "1086:             hypothesis_shape_t->NumElements());",
      "1087:       }",
      "1088:       if (truth_shape_t->NumElements() < 2) {",
      "1089:         return errors::InvalidArgument(",
      "1090:             \"Input Truth SparseTensors must have rank at least 2, but \"",
      "1091:             \"truth_shape rank is: \",",
      "1092:             truth_shape_t->NumElements());",
      "1093:       }",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py": [
      "File: tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py -> tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "15: \"\"\"Tests for tensorflow.kernels.edit_distance_op.\"\"\"",
      "17: import numpy as np",
      "19: from tensorflow.python.framework import constant_op",
      "20: from tensorflow.python.framework import ops",
      "21: from tensorflow.python.framework import sparse_tensor",
      "22: from tensorflow.python.ops import array_ops",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "18: from tensorflow.python.eager import def_function",
      "20: from tensorflow.python.framework import errors",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "225:                          \"to outside of the buffer for the output tensor|\"",
      "226:                          r\"Dimension -\\d+ must be >= 0\"))",
      "229: if __name__ == \"__main__\":",
      "230:   test.main()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "229:   def testEmptyShapeWithEditDistanceRaisesError(self):",
      "230:     para = {",
      "231:         \"hypothesis_indices\": [[]],",
      "232:         \"hypothesis_values\": [\"tmp/\"],",
      "233:         \"hypothesis_shape\": [],",
      "234:         \"truth_indices\": [[]],",
      "235:         \"truth_values\": [\"\"],",
      "236:         \"truth_shape\": [],",
      "237:         \"normalize\": False,",
      "238:     }",
      "240:     # Check edit distance raw op with empty shape in eager mode.",
      "241:     with self.assertRaisesRegex(",
      "242:         (errors.InvalidArgumentError, ValueError),",
      "243:         (",
      "244:             r\"Input Hypothesis SparseTensors must have rank at least 2, but\"",
      "245:             \" hypothesis_shape rank is: 0|Input SparseTensors must have rank \"",
      "246:             \"at least 2, but truth_shape rank is: 0\"",
      "247:         ),",
      "248:     ):",
      "249:       array_ops.gen_array_ops.EditDistance(**para)",
      "251:     # Check raw op with tf.function",
      "252:     @def_function.function",
      "253:     def TestFunction():",
      "254:       \"\"\"Wrapper function for edit distance call.\"\"\"",
      "255:       array_ops.gen_array_ops.EditDistance(**para)",
      "257:     with self.assertRaisesRegex(",
      "258:         ValueError,",
      "259:         (",
      "260:             \"Input Hypothesis SparseTensors must have rank at least 2, but\"",
      "261:             \" hypothesis_shape rank is: 0\"",
      "262:         ),",
      "263:     ):",
      "264:       TestFunction()",
      "266:     # Check with python wrapper API",
      "267:     hypothesis_indices = [[]]",
      "268:     hypothesis_values = [0]",
      "269:     hypothesis_shape = []",
      "270:     truth_indices = [[]]",
      "271:     truth_values = [1]",
      "272:     truth_shape = []",
      "273:     expected_output = []  # dummy ignored",
      "275:     with self.assertRaisesRegex(",
      "276:         ValueError,",
      "277:         (",
      "278:             \"Input Hypothesis SparseTensors must have rank at least 2, but\"",
      "279:             \" hypothesis_shape rank is: 0\"",
      "280:         ),",
      "281:     ):",
      "282:       self._testEditDistance(",
      "283:           hypothesis=(hypothesis_indices, hypothesis_values, hypothesis_shape),",
      "284:           truth=(truth_indices, truth_values, truth_shape),",
      "285:           normalize=False,",
      "286:           expected_output=expected_output,",
      "287:       )",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "dc791a716d935ef6f2fbac0abc1d688b47f9acbb",
      "candidate_info": {
        "commit_hash": "dc791a716d935ef6f2fbac0abc1d688b47f9acbb",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/dc791a716d935ef6f2fbac0abc1d688b47f9acbb",
        "files": [
          "tensorflow/core/ops/array_ops.cc",
          "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
        ],
        "message": "Fix security vulnerability in EditDistance op shape function.\n\nPiperOrigin-RevId: 504367470",
        "before_after_code_files": [
          "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
          "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
          ],
          "candidate": [
            "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc",
            "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/ops/array_ops.cc||tensorflow/core/ops/array_ops.cc": [
          "File: tensorflow/core/ops/array_ops.cc -> tensorflow/core/ops/array_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: #include \"tensorflow/core/framework/types.h\"",
          "25: #include \"tensorflow/core/framework/types.pb.h\"",
          "26: #include \"tensorflow/core/lib/core/errors.h\"",
          "27: #include \"tensorflow/core/platform/types.h\"",
          "28: #include \"tensorflow/core/util/mirror_pad_mode.h\"",
          "29: #include \"tensorflow/core/util/padding.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: #include \"tensorflow/core/platform/status.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1072:         return shape_inference::UnknownShape(c);",
          "1073:       }",
          "1075:       if (hypothesis_shape_t->NumElements() != truth_shape_t->NumElements()) {",
          "1076:         return errors::InvalidArgument(",
          "1077:             \"Num elements of hypothesis_shape does not match truth_shape: \",",
          "1078:             hypothesis_shape_t->NumElements(), \" vs. \",",
          "1079:             truth_shape_t->NumElements());",
          "1080:       }",
          "1082:       auto h_values = hypothesis_shape_t->flat<int64_t>();",
          "1083:       auto t_values = truth_shape_t->flat<int64_t>();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1081:       if (hypothesis_shape_t->NumElements() < 2) {",
          "1082:         return errors::InvalidArgument(",
          "1083:             \"Input Hypothesis SparseTensors must have rank at least 2, but \"",
          "1084:             \"hypothesis_shape rank is: \",",
          "1085:             hypothesis_shape_t->NumElements());",
          "1086:       }",
          "1087:       if (truth_shape_t->NumElements() < 2) {",
          "1088:         return errors::InvalidArgument(",
          "1089:             \"Input Truth SparseTensors must have rank at least 2, but \"",
          "1090:             \"truth_shape rank is: \",",
          "1091:             truth_shape_t->NumElements());",
          "1092:       }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py||tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py": [
          "File: tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py -> tensorflow/python/kernel_tests/array_ops/edit_distance_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: \"\"\"Tests for tensorflow.kernels.edit_distance_op.\"\"\"",
          "17: import numpy as np",
          "19: from tensorflow.python.framework import constant_op",
          "20: from tensorflow.python.framework import ops",
          "21: from tensorflow.python.framework import sparse_tensor",
          "22: from tensorflow.python.ops import array_ops",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: from tensorflow.python.eager import def_function",
          "20: from tensorflow.python.framework import errors",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "225:                          \"to outside of the buffer for the output tensor|\"",
          "226:                          r\"Dimension -\\d+ must be >= 0\"))",
          "229: if __name__ == \"__main__\":",
          "230:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "229:   def testEmptyShapeWithEditDistanceRaisesError(self):",
          "230:     para = {",
          "231:         \"hypothesis_indices\": [[]],",
          "232:         \"hypothesis_values\": [\"tmp/\"],",
          "233:         \"hypothesis_shape\": [],",
          "234:         \"truth_indices\": [[]],",
          "235:         \"truth_values\": [\"\"],",
          "236:         \"truth_shape\": [],",
          "237:         \"normalize\": False,",
          "238:     }",
          "240:     # Check edit distance raw op with empty shape in eager mode.",
          "241:     with self.assertRaisesRegex(",
          "242:         (errors.InvalidArgumentError, ValueError),",
          "243:         (",
          "244:             r\"Input Hypothesis SparseTensors must have rank at least 2, but\"",
          "245:             \" hypothesis_shape rank is: 0|Input SparseTensors must have rank \"",
          "246:             \"at least 2, but truth_shape rank is: 0\"",
          "247:         ),",
          "248:     ):",
          "249:       array_ops.gen_array_ops.EditDistance(**para)",
          "251:     # Check raw op with tf.function",
          "252:     @def_function.function",
          "253:     def TestFunction():",
          "254:       \"\"\"Wrapper function for edit distance call.\"\"\"",
          "255:       array_ops.gen_array_ops.EditDistance(**para)",
          "257:     with self.assertRaisesRegex(",
          "258:         ValueError,",
          "259:         (",
          "260:             \"Input Hypothesis SparseTensors must have rank at least 2, but\"",
          "261:             \" hypothesis_shape rank is: 0\"",
          "262:         ),",
          "263:     ):",
          "264:       TestFunction()",
          "266:     # Check with python wrapper API",
          "267:     hypothesis_indices = [[]]",
          "268:     hypothesis_values = [0]",
          "269:     hypothesis_shape = []",
          "270:     truth_indices = [[]]",
          "271:     truth_values = [1]",
          "272:     truth_shape = []",
          "273:     expected_output = []  # dummy ignored",
          "275:     with self.assertRaisesRegex(",
          "276:         ValueError,",
          "277:         (",
          "278:             \"Input Hypothesis SparseTensors must have rank at least 2, but\"",
          "279:             \" hypothesis_shape rank is: 0\"",
          "280:         ),",
          "281:     ):",
          "282:       self._testEditDistance(",
          "283:           hypothesis=(hypothesis_indices, hypothesis_values, hypothesis_shape),",
          "284:           truth=(truth_indices, truth_values, truth_shape),",
          "285:           normalize=False,",
          "286:           expected_output=expected_output,",
          "287:       )",
          "",
          "---------------"
        ]
      }
    }
  ]
}