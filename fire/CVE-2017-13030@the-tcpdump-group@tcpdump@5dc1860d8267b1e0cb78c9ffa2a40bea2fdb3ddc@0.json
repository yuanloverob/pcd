{
  "cve_id": "CVE-2017-13030",
  "cve_desc": "The PIM parser in tcpdump before 4.9.2 has a buffer over-read in print-pim.c, several functions.",
  "repo": "the-tcpdump-group/tcpdump",
  "patch_hash": "5dc1860d8267b1e0cb78c9ffa2a40bea2fdb3ddc",
  "patch_info": {
    "commit_hash": "5dc1860d8267b1e0cb78c9ffa2a40bea2fdb3ddc",
    "repo": "the-tcpdump-group/tcpdump",
    "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/5dc1860d8267b1e0cb78c9ffa2a40bea2fdb3ddc",
    "files": [
      "print-pim.c",
      "tests/TESTLIST",
      "tests/heapoverflow-in_checksum.out",
      "tests/pim_header_asan.out",
      "tests/pim_header_asan.pcap"
    ],
    "message": "CVE-2017-13030/PIM: Redo bounds checks and add length checks.\n\nUse ND_TCHECK macros to do bounds checking, and add length checks before\nthe bounds checks.\n\nAdd a bounds check that the review process found was missing.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.\n\nUpdate one test output file to reflect the changes.",
    "before_after_code_files": [
      "print-pim.c||print-pim.c"
    ]
  },
  "patch_diff": {
    "print-pim.c||print-pim.c": [
      "File: print-pim.c -> print-pim.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "169:   return;",
      "170:  }",
      "172:  ND_TCHECK2(bp[0], sizeof(struct in_addr));",
      "173:  if (ndo->ndo_vflag > 1)",
      "174:   ND_PRINT((ndo, \"\\n\"));",
      "175:  ND_PRINT((ndo, \" Upstream Nbr: %s\", ipaddr_string(ndo, bp)));",
      "177:  if (ndo->ndo_vflag > 1)",
      "178:   ND_PRINT((ndo, \"\\n\"));",
      "179:  ND_PRINT((ndo, \" Hold time: \"));",
      "181:  if (ndo->ndo_vflag < 2)",
      "182:   return;",
      "186:  ND_TCHECK2(bp[0], 4);",
      "187:  ngroups = bp[3];",
      "188:  bp += 4;",
      "",
      "[Removed Lines]",
      "176:  ND_TCHECK2(bp[6], 2);",
      "180:  unsigned_relts_print(ndo, EXTRACT_16BITS(&bp[6]));",
      "183:  bp += 8;",
      "184:  len -= 8;",
      "",
      "[Added Lines]",
      "172:  if (len < sizeof(struct in_addr))",
      "173:   goto trunc;",
      "178:  bp += 4;",
      "179:  len -= 4;",
      "180:  if (len < 4)",
      "181:   goto trunc;",
      "182:  ND_TCHECK2(bp[2], 2);",
      "186:  unsigned_relts_print(ndo, EXTRACT_16BITS(&bp[2]));",
      "189:  bp += 4;",
      "190:  len -= 4;",
      "192:  if (len < 4)",
      "193:   goto trunc;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "195:   ND_TCHECK2(bp[0], sizeof(struct in_addr));",
      "196:   ND_PRINT((ndo, \"\\n\\tGroup: %s\", ipaddr_string(ndo, bp)));",
      "203:   ND_PRINT((ndo, \" joined: %d pruned: %d\", njoin, nprune));",
      "206:   for (njp = 0; njp < (njoin + nprune); njp++) {",
      "207:    const char *type;",
      "",
      "[Removed Lines]",
      "197:   ND_TCHECK2(bp[4], sizeof(struct in_addr));",
      "198:   if (EXTRACT_32BITS(&bp[4]) != 0xffffffff)",
      "199:    ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, &bp[4])));",
      "200:   ND_TCHECK2(bp[8], 4);",
      "201:   njoin = EXTRACT_16BITS(&bp[8]);",
      "202:   nprune = EXTRACT_16BITS(&bp[10]);",
      "204:   bp += 12;",
      "205:   len -= 12;",
      "",
      "[Added Lines]",
      "203:   if (len < 4)",
      "204:    goto trunc;",
      "207:   bp += 4;",
      "208:   len -= 4;",
      "209:   if (len < 4)",
      "210:    goto trunc;",
      "211:   ND_TCHECK2(bp[0], sizeof(struct in_addr));",
      "212:   if (EXTRACT_32BITS(&bp[0]) != 0xffffffff)",
      "213:    ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, &bp[0])));",
      "214:   bp += 4;",
      "215:   len -= 4;",
      "216:   if (len < 4)",
      "217:    goto trunc;",
      "218:   ND_TCHECK2(bp[0], 4);",
      "219:   njoin = EXTRACT_16BITS(&bp[0]);",
      "220:   nprune = EXTRACT_16BITS(&bp[2]);",
      "222:   bp += 4;",
      "223:   len -= 4;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "210:     type = \"Join \";",
      "211:    else",
      "212:     type = \"Prune\";",
      "213:    ND_TCHECK2(bp[0], 6);",
      "214:    ND_PRINT((ndo, \"\\n\\t%s %s%s%s%s/%d\", type,",
      "215:        (bp[0] & 0x01) ? \"Sparse \" : \"Dense \",",
      "216:        (bp[1] & 0x80) ? \"WC \" : \"\",",
      "217:        (bp[1] & 0x40) ? \"RP \" : \"SPT \",",
      "219:    bp += 6;",
      "220:    len -= 6;",
      "221:   }",
      "",
      "[Removed Lines]",
      "218:    ipaddr_string(ndo, &bp[2]), bp[1] & 0x3f));",
      "",
      "[Added Lines]",
      "231:    if (len < 6)",
      "232:     goto trunc;",
      "238:        ipaddr_string(ndo, &bp[2]),",
      "239:        bp[1] & 0x3f));",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "230: pimv1_print(netdissect_options *ndo,",
      "231:             register const u_char *bp, register u_int len)",
      "232: {",
      "234:  register u_char type;",
      "240:  ND_TCHECK(bp[1]);",
      "241:  type = bp[1];",
      "",
      "[Removed Lines]",
      "233:  register const u_char *ep;",
      "236:  ep = (const u_char *)ndo->ndo_snapend;",
      "237:  if (bp >= ep)",
      "238:   return;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "302:  case PIMV1_TYPE_JOIN_PRUNE:",
      "303:  case PIMV1_TYPE_GRAFT:",
      "304:  case PIMV1_TYPE_GRAFT_ACK:",
      "306:    pimv1_join_prune_print(ndo, &bp[8], len - 8);",
      "307:   break;",
      "308:  }",
      "309:  ND_TCHECK(bp[4]);",
      "",
      "[Removed Lines]",
      "305:   if (ndo->ndo_vflag)",
      "",
      "[Added Lines]",
      "321:   if (ndo->ndo_vflag) {",
      "322:    if (len < 8)",
      "323:     goto trunc;",
      "325:   }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "330:  int numrps;",
      "331:  int hold;",
      "333:  ND_TCHECK(bp[0]);",
      "334:  ND_PRINT((ndo, \" auto-rp \"));",
      "335:  type = bp[0];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "352:  if (len < 8)",
      "353:   goto trunc;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "377:   int nentries;",
      "378:   char s;",
      "380:   ND_TCHECK2(bp[0], 4);",
      "381:   ND_PRINT((ndo, \" RP %s\", ipaddr_string(ndo, bp)));",
      "384:   case 0: ND_PRINT((ndo, \" PIMv?\"));",
      "385:    break;",
      "386:   case 1: ND_PRINT((ndo, \" PIMv1\"));",
      "",
      "[Removed Lines]",
      "382:   ND_TCHECK(bp[4]);",
      "383:   switch (bp[4] & 0x3) {",
      "",
      "[Added Lines]",
      "401:   if (len < 4)",
      "402:    goto trunc;",
      "405:   bp += 4;",
      "406:   len -= 4;",
      "407:   if (len < 1)",
      "408:    goto trunc;",
      "409:   ND_TCHECK(bp[0]);",
      "410:   switch (bp[0] & 0x3) {",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "390:   case 3: ND_PRINT((ndo, \" PIMv1+2\"));",
      "391:    break;",
      "392:   }",
      "398:   s = ' ';",
      "399:   for (; nentries; nentries--) {",
      "400:    ND_TCHECK2(bp[0], 6);",
      "401:    ND_PRINT((ndo, \"%c%s%s/%d\", s, bp[0] & 1 ? \"!\" : \"\",",
      "402:              ipaddr_string(ndo, &bp[2]), bp[1]));",
      "",
      "[Removed Lines]",
      "393:   if (bp[4] & 0xfc)",
      "394:    ND_PRINT((ndo, \" [rsvd=0x%02x]\", bp[4] & 0xfc));",
      "395:   ND_TCHECK(bp[5]);",
      "396:   nentries = bp[5];",
      "397:   bp += 6; len -= 6;",
      "",
      "[Added Lines]",
      "420:   if (bp[0] & 0xfc)",
      "421:    ND_PRINT((ndo, \" [rsvd=0x%02x]\", bp[0] & 0xfc));",
      "422:   bp += 1;",
      "423:   len -= 1;",
      "424:   if (len < 1)",
      "425:    goto trunc;",
      "426:   ND_TCHECK(bp[0]);",
      "427:   nentries = bp[0];",
      "428:   bp += 1;",
      "429:   len -= 1;",
      "432:    if (len < 6)",
      "433:     goto trunc;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "421: pim_print(netdissect_options *ndo,",
      "422:           register const u_char *bp, register u_int len, const u_char *bp2)",
      "423: {",
      "425:  register const struct pim *pim = (const struct pim *)bp;",
      "431:  ND_TCHECK(pim->pim_rsv);",
      "432: #endif",
      "434:  switch (PIM_VER(pim->pim_typever)) {",
      "435:  case 2:",
      "436:   if (!ndo->ndo_vflag) {",
      "",
      "[Removed Lines]",
      "424:  register const u_char *ep;",
      "427:  ep = (const u_char *)ndo->ndo_snapend;",
      "428:  if (bp >= ep)",
      "429:   return;",
      "",
      "[Added Lines]",
      "464:  ND_TCHECK(pim->pim_typever);",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "454:   break;",
      "455:  }",
      "456:  return;",
      "457: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "489: trunc:",
      "490:  ND_PRINT((ndo, \"[|pim]\"));",
      "491:  return;",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "501: enum pimv2_addrtype {",
      "502:  pimv2_unicast, pimv2_group, pimv2_source",
      "503: };",
      "",
      "[Removed Lines]",
      "499: static int pimv2_addr_len;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "525: static int",
      "526: pimv2_addr_print(netdissect_options *ndo,",
      "528: {",
      "529:  int af;",
      "535:   ND_TCHECK(bp[1]);",
      "536:   switch (bp[0]) {",
      "537:   case 1:",
      "538:    af = AF_INET;",
      "540:    break;",
      "541:   case 2:",
      "542:    af = AF_INET6;",
      "544:    break;",
      "545:   default:",
      "546:    return -1;",
      "",
      "[Removed Lines]",
      "527:                  const u_char *bp, enum pimv2_addrtype at, int silent)",
      "530:  int len, hdrlen;",
      "532:  ND_TCHECK(bp[0]);",
      "534:  if (pimv2_addr_len == 0) {",
      "539:    len = sizeof(struct in_addr);",
      "543:    len = sizeof(struct in6_addr);",
      "",
      "[Added Lines]",
      "560:                  const u_char *bp, u_int len, enum pimv2_addrtype at,",
      "561:                  u_int addr_len, int silent)",
      "564:  int hdrlen;",
      "566:  if (addr_len == 0) {",
      "567:   if (len < 2)",
      "568:    goto trunc;",
      "573:    addr_len = (u_int)sizeof(struct in_addr);",
      "577:    addr_len = (u_int)sizeof(struct in6_addr);",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "549:    return -1;",
      "550:   hdrlen = 2;",
      "551:  } else {",
      "553:   case sizeof(struct in_addr):",
      "554:    af = AF_INET;",
      "555:    break;",
      "",
      "[Removed Lines]",
      "552:   switch (pimv2_addr_len) {",
      "",
      "[Added Lines]",
      "586:   switch (addr_len) {",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "560:    return -1;",
      "561:    break;",
      "562:   }",
      "564:   hdrlen = 0;",
      "565:  }",
      "567:  bp += hdrlen;",
      "568:  switch (at) {",
      "569:  case pimv2_unicast:",
      "571:   if (af == AF_INET) {",
      "572:    if (!silent)",
      "573:     ND_PRINT((ndo, \"%s\", ipaddr_string(ndo, bp)));",
      "",
      "[Removed Lines]",
      "563:   len = pimv2_addr_len;",
      "570:   ND_TCHECK2(bp[0], len);",
      "",
      "[Added Lines]",
      "601:  len -= hdrlen;",
      "604:   if (len < addr_len)",
      "605:    goto trunc;",
      "606:   ND_TCHECK2(bp[0], addr_len);",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "576:    if (!silent)",
      "577:     ND_PRINT((ndo, \"%s\", ip6addr_string(ndo, bp)));",
      "578:   }",
      "580:  case pimv2_group:",
      "581:  case pimv2_source:",
      "583:   if (af == AF_INET) {",
      "584:    if (!silent) {",
      "585:     ND_PRINT((ndo, \"%s\", ipaddr_string(ndo, bp + 2)));",
      "",
      "[Removed Lines]",
      "579:   return hdrlen + len;",
      "582:   ND_TCHECK2(bp[0], len + 2);",
      "",
      "[Added Lines]",
      "615:   return hdrlen + addr_len;",
      "618:   if (len < addr_len + 2)",
      "619:    goto trunc;",
      "620:   ND_TCHECK2(bp[0], addr_len + 2);",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "608:     ND_PRINT((ndo, \")\"));",
      "609:    }",
      "610:   }",
      "612:  default:",
      "613:   return -1;",
      "614:  }",
      "",
      "[Removed Lines]",
      "611:   return hdrlen + 2 + len;",
      "",
      "[Added Lines]",
      "649:   return hdrlen + 2 + addr_len;",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "660:  register const struct pim *pim = (const struct pim *)bp;",
      "661:  int advance;",
      "662:  enum checksum_status cksum_status;",
      "664:  ep = (const u_char *)ndo->ndo_snapend;",
      "665:  if (bp >= ep)",
      "666:   return;",
      "667:  if (ep > bp + len)",
      "668:   ep = bp + len;",
      "669:  ND_TCHECK(pim->pim_rsv);",
      "670:  pimv2_addr_len = pim->pim_rsv;",
      "671:  if (pimv2_addr_len != 0)",
      "672:   ND_PRINT((ndo, \", RFC2117-encoding\"));",
      "674:  ND_PRINT((ndo, \", cksum 0x%04x \", EXTRACT_16BITS(&pim->pim_cksum)));",
      "675:  if (EXTRACT_16BITS(&pim->pim_cksum) == 0) {",
      "676:   ND_PRINT((ndo, \"(unverified)\"));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "701:  int pimv2_addr_len;",
      "708:  if (len < 2)",
      "709:   goto trunc;",
      "715:  if (len < 4)",
      "716:   goto trunc;",
      "717:  ND_TCHECK(pim->pim_cksum);",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "711:    break;",
      "712:   }",
      "713:  }",
      "715:  switch (PIM_TYPE(pim->pim_typever)) {",
      "716:  case PIMV2_TYPE_HELLO:",
      "717:      {",
      "718:   uint16_t otype, olen;",
      "721:    ND_TCHECK2(bp[0], 4);",
      "722:    otype = EXTRACT_16BITS(&bp[0]);",
      "723:    olen = EXTRACT_16BITS(&bp[2]);",
      "725:    ND_PRINT((ndo, \"\\n\\t  %s Option (%u), length %u, Value: \",",
      "726:              tok2str(pimv2_hello_option_values, \"Unknown\", otype),",
      "727:              otype,",
      "728:              olen));",
      "729:    bp += 4;",
      "731:    switch (otype) {",
      "732:    case PIMV2_HELLO_OPTION_HOLDTIME:",
      "733:     if (olen != 2) {",
      "",
      "[Removed Lines]",
      "719:   bp += 4;",
      "720:   while (bp < ep) {",
      "724:    ND_TCHECK2(bp[0], 4 + olen);",
      "",
      "[Added Lines]",
      "758:  bp += 4;",
      "759:  len -= 4;",
      "765:   while (len > 0) {",
      "766:    if (len < 4)",
      "767:     goto trunc;",
      "776:    len -= 4;",
      "778:    if (len < olen)",
      "779:     goto trunc;",
      "780:    ND_TCHECK2(bp[0], olen);",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "797:    case PIMV2_HELLO_OPTION_ADDRESS_LIST:",
      "798:     if (ndo->ndo_vflag > 1) {",
      "799:      const u_char *ptr = bp;",
      "800:      while (ptr < (bp+olen)) {",
      "801:       ND_PRINT((ndo, \"\\n\\t    \"));",
      "807:       ptr += advance;",
      "808:      }",
      "809:     }",
      "810:     break;",
      "",
      "[Removed Lines]",
      "802:       advance = pimv2_addr_print(ndo, ptr, pimv2_unicast, 0);",
      "803:       if (advance < 0) {",
      "804:        ND_PRINT((ndo, \"...\"));",
      "805:        break;",
      "806:       }",
      "",
      "[Added Lines]",
      "850:      u_int plen = len;",
      "853:       advance = pimv2_addr_print(ndo, ptr, plen, pimv2_unicast, pimv2_addr_len, 0);",
      "854:       if (advance < 0)",
      "855:        goto trunc;",
      "857:       plen -= advance;",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "817:    if (ndo->ndo_vflag> 1)",
      "818:     print_unknown_data(ndo, bp, \"\\n\\t    \", olen);",
      "819:    bp += olen;",
      "820:   }",
      "821:   break;",
      "822:      }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "870:    len -= olen;",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "825:  {",
      "826:   const struct ip *ip;",
      "830:   ND_PRINT((ndo, \", Flags [ %s ]\\n\\t\",",
      "831:             tok2str(pimv2_register_flag_values,",
      "832:             \"none\",",
      "837:   ip = (const struct ip *)bp;",
      "838:   switch (IP_V(ip)) {",
      "840:    ND_PRINT((ndo, \"IP-Null-header %s > %s\",",
      "841:              ipaddr_string(ndo, &ip->ip_src),",
      "842:              ipaddr_string(ndo, &ip->ip_dst)));",
      "",
      "[Removed Lines]",
      "828:   ND_TCHECK2(*(bp + 4), PIMV2_REGISTER_FLAG_LEN);",
      "833:             EXTRACT_32BITS(bp+4))));",
      "835:   bp += 8; len -= 8;",
      "",
      "[Added Lines]",
      "879:   if (len < 4)",
      "880:    goto trunc;",
      "881:   ND_TCHECK2(*bp, PIMV2_REGISTER_FLAG_LEN);",
      "886:             EXTRACT_32BITS(bp))));",
      "888:   bp += 4; len -= 4;",
      "890:   if (len == 0)",
      "891:    goto trunc;",
      "893:   ND_TCHECK(ip->ip_vhl);",
      "896:    ND_TCHECK(ip->ip_dst);",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "858:  }",
      "860:  case PIMV2_TYPE_REGISTER_STOP:",
      "864:   ND_PRINT((ndo, \" group=\"));",
      "869:   bp += advance; len -= advance;",
      "872:   ND_PRINT((ndo, \" source=\"));",
      "877:   bp += advance; len -= advance;",
      "878:   break;",
      "",
      "[Removed Lines]",
      "861:   bp += 4; len -= 4;",
      "862:   if (bp >= ep)",
      "863:    break;",
      "865:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_group, 0)) < 0) {",
      "866:    ND_PRINT((ndo, \"...\"));",
      "867:    break;",
      "868:   }",
      "870:   if (bp >= ep)",
      "871:    break;",
      "873:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_unicast, 0)) < 0) {",
      "874:    ND_PRINT((ndo, \"...\"));",
      "875:    break;",
      "876:   }",
      "",
      "[Added Lines]",
      "919:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_group, pimv2_addr_len, 0)) < 0)",
      "920:    goto trunc;",
      "923:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_unicast, pimv2_addr_len, 0)) < 0)",
      "924:    goto trunc;",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "924:   uint16_t nprune;",
      "925:   int i, j;",
      "931:    ND_PRINT((ndo, \", upstream-neighbor: \"));",
      "936:    bp += advance; len -= advance;",
      "937:   }",
      "940:   ngroup = bp[1];",
      "941:   holdtime = EXTRACT_16BITS(&bp[2]);",
      "942:   ND_PRINT((ndo, \"\\n\\t  %u group(s)\", ngroup));",
      "",
      "[Removed Lines]",
      "927:   bp += 4; len -= 4;",
      "929:    if (bp >= ep)",
      "930:     break;",
      "932:    if ((advance = pimv2_addr_print(ndo, bp, pimv2_unicast, 0)) < 0) {",
      "933:     ND_PRINT((ndo, \"...\"));",
      "934:     break;",
      "935:    }",
      "938:   if (bp + 4 > ep)",
      "939:    break;",
      "",
      "[Added Lines]",
      "977:    if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_unicast, pimv2_addr_len, 0)) < 0)",
      "978:     goto trunc;",
      "981:   if (len < 4)",
      "982:    goto trunc;",
      "983:   ND_TCHECK2(*bp, 4);",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "949:   }",
      "950:   bp += 4; len -= 4;",
      "951:   for (i = 0; i < ngroup; i++) {",
      "954:    ND_PRINT((ndo, \"\\n\\t    group #%u: \", i+1));",
      "959:    bp += advance; len -= advance;",
      "964:    njoin = EXTRACT_16BITS(&bp[0]);",
      "965:    nprune = EXTRACT_16BITS(&bp[2]);",
      "966:    ND_PRINT((ndo, \", joined sources: %u, pruned sources: %u\", njoin, nprune));",
      "967:    bp += 4; len -= 4;",
      "968:    for (j = 0; j < njoin; j++) {",
      "969:     ND_PRINT((ndo, \"\\n\\t      joined source #%u: \", j+1));",
      "974:     bp += advance; len -= advance;",
      "975:    }",
      "976:    for (j = 0; j < nprune; j++) {",
      "977:     ND_PRINT((ndo, \"\\n\\t      pruned source #%u: \", j+1));",
      "982:     bp += advance; len -= advance;",
      "983:    }",
      "984:   }",
      "986:   break;",
      "987:      }",
      "989:  case PIMV2_TYPE_BOOTSTRAP:",
      "990:  {",
      "991:   int i, j, frpcnt;",
      "996:   ND_PRINT((ndo, \" tag=%x\", EXTRACT_16BITS(bp)));",
      "999:   ND_PRINT((ndo, \" hashmlen=%d\", bp[0]));",
      "1001:   ND_PRINT((ndo, \" BSRprio=%d\", bp[1]));",
      "1002:   bp += 2;",
      "1006:   ND_PRINT((ndo, \" BSR=\"));",
      "1011:   bp += advance;",
      "1013:   for (i = 0; bp < ep; i++) {",
      "1015:    ND_PRINT((ndo, \" (group%d: \", i));",
      "1021:    bp += advance;",
      "1028:    ND_PRINT((ndo, \" RPcnt=%d\", bp[0]));",
      "1033:    ND_PRINT((ndo, \" FRPcnt=%d\", frpcnt = bp[1]));",
      "1034:    bp += 4;",
      "1036:    for (j = 0; j < frpcnt && bp < ep; j++) {",
      "1038:     ND_PRINT((ndo, \" RP%d=\", j));",
      "1040:         pimv2_unicast,",
      "1045:     bp += advance;",
      "1051:     ND_PRINT((ndo, \",holdtime=\"));",
      "1052:     unsigned_relts_print(ndo, EXTRACT_16BITS(bp));",
      "1057:     ND_PRINT((ndo, \",prio=%d\", bp[2]));",
      "1058:     bp += 4;",
      "1059:    }",
      "1060:    ND_PRINT((ndo, \")\"));",
      "1061:   }",
      "1063:   break;",
      "1064:  }",
      "1065:  case PIMV2_TYPE_ASSERT:",
      "1069:   ND_PRINT((ndo, \" group=\"));",
      "1074:   bp += advance; len -= advance;",
      "1077:   ND_PRINT((ndo, \" src=\"));",
      "1082:   bp += advance; len -= advance;",
      "1085:   if (bp[0] & 0x80)",
      "1086:    ND_PRINT((ndo, \" RPT\"));",
      "1087:   ND_PRINT((ndo, \" pref=%u\", EXTRACT_32BITS(&bp[0]) & 0x7fffffff));",
      "",
      "[Removed Lines]",
      "952:    if (bp >= ep)",
      "953:     goto jp_done;",
      "955:    if ((advance = pimv2_addr_print(ndo, bp, pimv2_group, 0)) < 0) {",
      "956:     ND_PRINT((ndo, \"...)\"));",
      "957:     goto jp_done;",
      "958:    }",
      "960:    if (bp + 4 > ep) {",
      "961:     ND_PRINT((ndo, \"...)\"));",
      "962:     goto jp_done;",
      "963:    }",
      "970:     if ((advance = pimv2_addr_print(ndo, bp, pimv2_source, 0)) < 0) {",
      "971:      ND_PRINT((ndo, \"...)\"));",
      "972:      goto jp_done;",
      "973:     }",
      "978:     if ((advance = pimv2_addr_print(ndo, bp, pimv2_source, 0)) < 0) {",
      "979:      ND_PRINT((ndo, \"...)\"));",
      "980:      goto jp_done;",
      "981:     }",
      "985:  jp_done:",
      "992:   bp += 4;",
      "995:   if (bp + sizeof(uint16_t) >= ep) break;",
      "997:   bp += sizeof(uint16_t);",
      "998:   if (bp >= ep) break;",
      "1000:   if (bp + 1 >= ep) break;",
      "1005:   if (bp >= ep) break;",
      "1007:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_unicast, 0)) < 0) {",
      "1008:    ND_PRINT((ndo, \"...\"));",
      "1009:    break;",
      "1010:   }",
      "1016:    if ((advance = pimv2_addr_print(ndo, bp, pimv2_group, 0))",
      "1017:        < 0) {",
      "1018:     ND_PRINT((ndo, \"...)\"));",
      "1019:     goto bs_done;",
      "1020:    }",
      "1024:    if (bp >= ep) {",
      "1025:     ND_PRINT((ndo, \"...)\"));",
      "1026:     goto bs_done;",
      "1027:    }",
      "1029:    if (bp + 1 >= ep) {",
      "1030:     ND_PRINT((ndo, \"...)\"));",
      "1031:     goto bs_done;",
      "1032:    }",
      "1039:     if ((advance = pimv2_addr_print(ndo, bp,",
      "1041:         0)) < 0) {",
      "1042:      ND_PRINT((ndo, \"...)\"));",
      "1043:      goto bs_done;",
      "1044:     }",
      "1047:     if (bp + 1 >= ep) {",
      "1048:      ND_PRINT((ndo, \"...)\"));",
      "1049:      goto bs_done;",
      "1050:     }",
      "1053:     if (bp + 2 >= ep) {",
      "1054:      ND_PRINT((ndo, \"...)\"));",
      "1055:      goto bs_done;",
      "1056:     }",
      "1062:     bs_done:",
      "1066:   bp += 4; len -= 4;",
      "1067:   if (bp >= ep)",
      "1068:    break;",
      "1070:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_group, 0)) < 0) {",
      "1071:    ND_PRINT((ndo, \"...\"));",
      "1072:    break;",
      "1073:   }",
      "1075:   if (bp >= ep)",
      "1076:    break;",
      "1078:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_unicast, 0)) < 0) {",
      "1079:    ND_PRINT((ndo, \"...\"));",
      "1080:    break;",
      "1081:   }",
      "1083:   if (bp + 8 > ep)",
      "1084:    break;",
      "",
      "[Added Lines]",
      "997:    if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_group, pimv2_addr_len, 0)) < 0)",
      "998:     goto trunc;",
      "1000:    if (len < 4)",
      "1001:     goto trunc;",
      "1002:    ND_TCHECK2(*bp, 4);",
      "1009:     if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_source, pimv2_addr_len, 0)) < 0)",
      "1010:      goto trunc;",
      "1015:     if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_source, pimv2_addr_len, 0)) < 0)",
      "1016:      goto trunc;",
      "1028:   if (len < 2)",
      "1029:    goto trunc;",
      "1030:   ND_TCHECK_16BITS(bp);",
      "1032:   bp += 2;",
      "1033:   len -= 2;",
      "1034:   if (len < 1)",
      "1035:    goto trunc;",
      "1036:   ND_TCHECK(bp[0]);",
      "1038:   if (len < 2)",
      "1039:    goto trunc;",
      "1040:   ND_TCHECK(bp[2]);",
      "1043:   len -= 2;",
      "1047:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_unicast, pimv2_addr_len, 0)) < 0)",
      "1048:    goto trunc;",
      "1050:   len -= advance;",
      "1055:    if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_group, pimv2_addr_len, 0)) < 0)",
      "1056:     goto trunc;",
      "1058:    len -= advance;",
      "1061:    if (len < 1)",
      "1062:     goto trunc;",
      "1063:    ND_TCHECK(bp[0]);",
      "1065:    if (len < 2)",
      "1066:     goto trunc;",
      "1067:    ND_TCHECK(bp[1]);",
      "1069:    if (len < 4)",
      "1070:     goto trunc;",
      "1072:    len -= 4;",
      "1077:     if ((advance = pimv2_addr_print(ndo, bp, len,",
      "1079:         pimv2_addr_len,",
      "1080:         0)) < 0)",
      "1081:      goto trunc;",
      "1083:     len -= advance;",
      "1085:     if (len < 2)",
      "1086:      goto trunc;",
      "1087:     ND_TCHECK_16BITS(bp);",
      "1090:     if (len < 3)",
      "1091:      goto trunc;",
      "1092:     ND_TCHECK(bp[2]);",
      "1094:     if (len < 4)",
      "1095:      goto trunc;",
      "1097:     len -= 4;",
      "1105:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_group, pimv2_addr_len, 0)) < 0)",
      "1106:    goto trunc;",
      "1109:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_unicast, pimv2_addr_len, 0)) < 0)",
      "1110:    goto trunc;",
      "1112:   if (len < 8)",
      "1113:    goto trunc;",
      "1114:   ND_TCHECK2(*bp, 8);",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "1091:  case PIMV2_TYPE_CANDIDATE_RP:",
      "1092:  {",
      "1093:   int i, pfxcnt;",
      "1098:   ND_PRINT((ndo, \" prefix-cnt=%d\", bp[0]));",
      "1099:   pfxcnt = bp[0];",
      "1101:   ND_PRINT((ndo, \" prio=%d\", bp[1]));",
      "1103:   ND_PRINT((ndo, \" holdtime=\"));",
      "1104:   unsigned_relts_print(ndo, EXTRACT_16BITS(&bp[2]));",
      "1105:   bp += 4;",
      "1109:   ND_PRINT((ndo, \" RP=\"));",
      "1114:   bp += advance;",
      "1117:   for (i = 0; i < pfxcnt && bp < ep; i++) {",
      "1118:    ND_PRINT((ndo, \" Group%d=\", i));",
      "1124:    bp += advance;",
      "1125:   }",
      "1126:   break;",
      "1127:  }",
      "1129:  case PIMV2_TYPE_PRUNE_REFRESH:",
      "1130:   ND_PRINT((ndo, \" src=\"));",
      "1135:   bp += advance;",
      "1136:   ND_PRINT((ndo, \" grp=\"));",
      "1141:   bp += advance;",
      "1142:   ND_PRINT((ndo, \" forwarder=\"));",
      "1147:   bp += advance;",
      "1149:   ND_PRINT((ndo, \" TUNR \"));",
      "1150:   unsigned_relts_print(ndo, EXTRACT_16BITS(bp));",
      "1151:   break;",
      "",
      "[Removed Lines]",
      "1094:   bp += 4;",
      "1097:   if (bp >= ep) break;",
      "1100:   if (bp + 1 >= ep) break;",
      "1102:   if (bp + 3 >= ep) break;",
      "1108:   if (bp >= ep) break;",
      "1110:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_unicast, 0)) < 0) {",
      "1111:    ND_PRINT((ndo, \"...\"));",
      "1112:    break;",
      "1113:   }",
      "1119:    if ((advance = pimv2_addr_print(ndo, bp, pimv2_group, 0))",
      "1120:        < 0) {",
      "1121:     ND_PRINT((ndo, \"...\"));",
      "1122:     break;",
      "1123:    }",
      "1131:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_unicast, 0)) < 0) {",
      "1132:    ND_PRINT((ndo, \"...\"));",
      "1133:    break;",
      "1134:   }",
      "1137:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_group, 0)) < 0) {",
      "1138:    ND_PRINT((ndo, \"...\"));",
      "1139:    break;",
      "1140:   }",
      "1143:   if ((advance = pimv2_addr_print(ndo, bp, pimv2_unicast, 0)) < 0) {",
      "1144:    ND_PRINT((ndo, \"...\"));",
      "1145:    break;",
      "1146:   }",
      "1148:   ND_TCHECK2(bp[0], 2);",
      "",
      "[Added Lines]",
      "1126:   if (len < 1)",
      "1127:    goto trunc;",
      "1128:   ND_TCHECK(bp[0]);",
      "1131:   if (len < 2)",
      "1132:    goto trunc;",
      "1133:   ND_TCHECK(bp[1]);",
      "1135:   if (len < 4)",
      "1136:    goto trunc;",
      "1137:   ND_TCHECK_16BITS(&bp[2]);",
      "1141:   len -= 4;",
      "1145:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_unicast, pimv2_addr_len, 0)) < 0)",
      "1146:    goto trunc;",
      "1148:   len -= advance;",
      "1153:    if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_group, pimv2_addr_len, 0)) < 0)",
      "1154:     goto trunc;",
      "1156:    len -= advance;",
      "1163:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_unicast, pimv2_addr_len, 0)) < 0)",
      "1164:    goto trunc;",
      "1166:   len -= advance;",
      "1168:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_group, pimv2_addr_len, 0)) < 0)",
      "1169:    goto trunc;",
      "1171:   len -= advance;",
      "1173:   if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_unicast, pimv2_addr_len, 0)) < 0)",
      "1174:    goto trunc;",
      "1176:   len -= advance;",
      "1177:   if (len < 2)",
      "1178:    goto trunc;",
      "1179:   ND_TCHECK_16BITS(bp);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "07ac438e08e5ffed3539e10d78f1cfc7d221d591",
      "candidate_info": {
        "commit_hash": "07ac438e08e5ffed3539e10d78f1cfc7d221d591",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/07ac438e08e5ffed3539e10d78f1cfc7d221d591",
        "files": [
          "print-babel.c",
          "print-bgp.c",
          "print-calm-fast.c",
          "print-cdp.c",
          "print-fr.c",
          "print-geonet.c",
          "print-hncp.c",
          "print-icmp6.c",
          "print-ip.c",
          "print-isakmp.c",
          "print-juniper.c",
          "print-pim.c",
          "print-pppoe.c",
          "print-sl.c",
          "print-smb.c",
          "print-snmp.c",
          "print-sunatm.c",
          "print-vrrp.c",
          "print-zeromq.c",
          "smbutil.c"
        ],
        "message": "Use more the EXTRACT_U_1() macro (52/n)\n\nAssignment, p[n]",
        "before_after_code_files": [
          "print-babel.c||print-babel.c",
          "print-bgp.c||print-bgp.c",
          "print-calm-fast.c||print-calm-fast.c",
          "print-cdp.c||print-cdp.c",
          "print-fr.c||print-fr.c",
          "print-geonet.c||print-geonet.c",
          "print-hncp.c||print-hncp.c",
          "print-icmp6.c||print-icmp6.c",
          "print-ip.c||print-ip.c",
          "print-isakmp.c||print-isakmp.c",
          "print-juniper.c||print-juniper.c",
          "print-pim.c||print-pim.c",
          "print-pppoe.c||print-pppoe.c",
          "print-sl.c||print-sl.c",
          "print-smb.c||print-smb.c",
          "print-snmp.c||print-snmp.c",
          "print-sunatm.c||print-sunatm.c",
          "print-vrrp.c||print-vrrp.c",
          "print-zeromq.c||print-zeromq.c",
          "smbutil.c||smbutil.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-pim.c||print-pim.c"
          ],
          "candidate": [
            "print-pim.c||print-pim.c"
          ]
        }
      },
      "candidate_diff": {
        "print-babel.c||print-babel.c": [
          "File: print-babel.c -> print-babel.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "376:         ND_TCHECK_2(message);",
          "377:         ICHECK(i, 2);",
          "380:         ND_TCHECK2(*message, 2 + len);",
          "381:         ICHECK(i, 2 + len);",
          "",
          "[Removed Lines]",
          "378:         len = message[1];",
          "",
          "[Added Lines]",
          "378:         len = EXTRACT_U_1(message + 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "606:                 int parsed_len = 10;",
          "607:                 ND_PRINT((ndo, \"\\n\\tSS-Update\"));",
          "608:                 if(len < 10) goto invalid;",
          "613:                 interval = EXTRACT_BE_U_2(message + 6);",
          "614:                 seqno = EXTRACT_BE_U_2(message + 8);",
          "615:                 metric = EXTRACT_BE_U_2(message + 10);",
          "",
          "[Removed Lines]",
          "609:                 ae = message[2];",
          "610:                 src_plen = message[3];",
          "611:                 plen = message[4];",
          "612:                 omitted = message[5];",
          "",
          "[Added Lines]",
          "609:                 ae = EXTRACT_U_1(message + 2);",
          "610:                 src_plen = EXTRACT_U_1(message + 3);",
          "611:                 plen = EXTRACT_U_1(message + 4);",
          "612:                 omitted = EXTRACT_U_1(message + 5);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "647:                 u_char ae, plen, src_plen, prefix[16], src_prefix[16];",
          "648:                 ND_PRINT((ndo, \"\\n\\tSS-Request \"));",
          "649:                 if(len < 3) goto invalid;",
          "653:                 rc = network_prefix(ae, plen, 0, message + 2 + parsed_len,",
          "654:                                     NULL, len - parsed_len, prefix);",
          "655:                 if(rc < 0) goto invalid;",
          "",
          "[Removed Lines]",
          "650:                 ae = message[2];",
          "651:                 plen = message[3];",
          "652:                 src_plen = message[4];",
          "",
          "[Added Lines]",
          "650:                 ae = EXTRACT_U_1(message + 2);",
          "651:                 plen = EXTRACT_U_1(message + 3);",
          "652:                 src_plen = EXTRACT_U_1(message + 4);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "682:                 const u_char *router_id = NULL;",
          "683:                 ND_PRINT((ndo, \"\\n\\tSS-MH-Request \"));",
          "684:                 if(len < 14) goto invalid;",
          "687:                 seqno = EXTRACT_BE_U_2(message + 4);",
          "690:                 router_id = message + 8;",
          "691:                 rc = network_prefix(ae, plen, 0, message + 2 + parsed_len,",
          "692:                                     NULL, len - parsed_len, prefix);",
          "",
          "[Removed Lines]",
          "685:                 ae = message[2];",
          "686:                 plen = message[3];",
          "688:                 hopc = message[6];",
          "689:                 src_plen = message[7];",
          "",
          "[Added Lines]",
          "685:                 ae = EXTRACT_U_1(message + 2);",
          "686:                 plen = EXTRACT_U_1(message + 3);",
          "688:                 hopc = EXTRACT_U_1(message + 6);",
          "689:                 src_plen = EXTRACT_U_1(message + 7);",
          "",
          "---------------"
        ],
        "print-bgp.c||print-bgp.c": [
          "File: print-bgp.c -> print-bgp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "541:  ND_TCHECK_1(pptr);",
          "542:  ITEMCHECK(1);",
          "544:  if (32 < plen)",
          "545:   return -1;",
          "546:  itemlen -= 1;",
          "",
          "[Removed Lines]",
          "543:  plen = pptr[0];",
          "",
          "[Added Lines]",
          "543:  plen = EXTRACT_U_1(pptr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1139:  ND_TCHECK_1(pd);",
          "1140:  ITEMCHECK(1);",
          "1142:  if (128 < plen)",
          "1143:   return -1;",
          "1144:  itemlen -= 1;",
          "",
          "[Removed Lines]",
          "1141:  plen = pd[0];",
          "",
          "[Added Lines]",
          "1141:  plen = EXTRACT_U_1(pd);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1606:                 tptr +=3;",
          "1608:   ND_TCHECK_1(tptr);",
          "1610:                 tlen = nhlen;",
          "1611:                 tptr++;",
          "",
          "[Removed Lines]",
          "1609:   nhlen = tptr[0];",
          "",
          "[Added Lines]",
          "1609:   nhlen = EXTRACT_U_1(tptr);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1739:   tptr += tlen;",
          "1741:   ND_TCHECK_1(tptr);",
          "1743:   tptr++;",
          "1745:   if (snpa) {",
          "",
          "[Removed Lines]",
          "1742:   snpa = tptr[0];",
          "",
          "[Added Lines]",
          "1742:   snpa = EXTRACT_U_1(tptr);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1907:  case BGPTYPE_MP_UNREACH_NLRI:",
          "1908:   ND_TCHECK2(tptr[0], BGP_MP_NLRI_MINSIZE);",
          "1909:   af = EXTRACT_BE_U_2(tptr);",
          "1912:                 ND_PRINT((ndo, \"\\n\\t    AFI: %s (%u), %sSAFI: %s (%u)\",",
          "1913:                        tok2str(af_values, \"Unknown AFI\", af),",
          "",
          "[Removed Lines]",
          "1910:   safi = tptr[2];",
          "",
          "[Added Lines]",
          "1910:   safi = EXTRACT_U_1(tptr + 2);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2348:         while (i < caps_len) {",
          "2349:                 ND_TCHECK2(opt[i], BGP_CAP_HEADER_SIZE);",
          "2352:                 tcap_len=cap_len;",
          "2353:                 ND_PRINT((ndo, \"\\n\\t      %s (%u), length: %u\",",
          "2354:                        tok2str(bgp_capcode_values, \"Unknown\",",
          "",
          "[Removed Lines]",
          "2350:                 cap_type=opt[i];",
          "2351:                 cap_len=opt[i+1];",
          "",
          "[Added Lines]",
          "2350:                 cap_type=EXTRACT_U_1(opt + i);",
          "2351:                 cap_len=EXTRACT_U_1(opt + i + 1);",
          "",
          "---------------"
        ],
        "print-calm-fast.c||print-calm-fast.c": [
          "File: print-calm-fast.c -> print-calm-fast.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:  ND_TCHECK_2(bp);",
          "47:  if (length < 2)",
          "48:   goto trunc;",
          "51:  length -= 2;",
          "52:  bp += 2;",
          "",
          "[Removed Lines]",
          "49:  srcNwref = bp[0];",
          "50:  dstNwref = bp[1];",
          "",
          "[Added Lines]",
          "49:  srcNwref = EXTRACT_U_1(bp);",
          "50:  dstNwref = EXTRACT_U_1(bp + 1);",
          "",
          "---------------"
        ],
        "print-cdp.c||print-cdp.c": [
          "File: print-cdp.c -> print-cdp.c"
        ],
        "print-fr.c||print-fr.c": [
          "File: print-fr.c -> print-fr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "473:         while (tlen>sizeof(struct ie_tlv_header_t)) {",
          "474:             ND_TCHECK2(*tptr, sizeof(struct ie_tlv_header_t));",
          "478:             ND_PRINT((ndo, \"\\n\\tIE %s (%u), length %u: \",",
          "479:                    tok2str(mfr_ctrl_ie_values,\"Unknown\",ie_type),",
          "",
          "[Removed Lines]",
          "475:             ie_type=tptr[0];",
          "476:             ie_len=tptr[1];",
          "",
          "[Added Lines]",
          "475:             ie_type=EXTRACT_U_1(tptr);",
          "476:             ie_len=EXTRACT_U_1(tptr + 1);",
          "",
          "---------------"
        ],
        "print-geonet.c||print-geonet.c": [
          "File: print-geonet.c -> print-geonet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:  const char *msg_type_str;",
          "69:  msg_type_str = tok2str(msg_type_values, \"unknown (%u)\", msg_type);",
          "71:  ND_PRINT((ndo, \"; ItsPduHeader v:%d t:%d-%s\", version, msg_type, msg_type_str));",
          "",
          "[Removed Lines]",
          "67:  version = bp[0];",
          "68:  msg_type = bp[1];",
          "",
          "[Added Lines]",
          "67:  version = EXTRACT_U_1(bp);",
          "68:  msg_type = EXTRACT_U_1(bp + 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133:  hdr_type = bp[1] >> 4;",
          "134:  hdr_subtype = bp[1] & 0x0f;",
          "135:  payload_length = EXTRACT_BE_U_2(bp + 4);",
          "138:  switch (next_hdr) {",
          "139:   case 0: next_hdr_txt = \"Any\"; break;",
          "",
          "[Removed Lines]",
          "136:  hop_limit = bp[7];",
          "",
          "[Added Lines]",
          "136:  hop_limit = EXTRACT_U_1(bp + 7);",
          "",
          "---------------"
        ],
        "print-hncp.c||print-hncp.c": [
          "File: print-hncp.c -> print-hncp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "242: {",
          "243:     u_int length = 0;",
          "244:     while (length < max_length) {",
          "246:         if (lab_length == 0)",
          "247:             return (int)length;",
          "248:         if (length > 1 && print)",
          "",
          "[Removed Lines]",
          "245:         u_int lab_length = cp[length++];",
          "",
          "[Added Lines]",
          "245:         u_int lab_length = EXTRACT_U_1(cp + length);",
          "246:         length++;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "274:         if (i + 2 > length)",
          "275:             return -1;",
          "276:         tlv = cp + i;",
          "279:         value = tlv + 2;",
          "281:         ND_PRINT((ndo, \"\\n\"));",
          "",
          "[Removed Lines]",
          "277:         type = tlv[0];",
          "278:         optlen = tlv[1];",
          "",
          "[Added Lines]",
          "278:         type = EXTRACT_U_1(tlv);",
          "279:         optlen = EXTRACT_U_1(tlv + 1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "654:                 ND_PRINT((ndo, \" %s\", istr));",
          "655:                 break;",
          "656:             }",
          "658:             ND_PRINT((ndo, \" type: \"));",
          "659:             if (policy == 0) {",
          "660:                 if (bodylen != 1) {",
          "",
          "[Removed Lines]",
          "657:             policy = value[0];",
          "",
          "[Added Lines]",
          "658:             policy = EXTRACT_U_1(value);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "807:                 ND_PRINT((ndo, \" %s\", istr));",
          "808:                 break;",
          "809:             }",
          "811:             if (bodylen < 17 + l) {",
          "812:                 ND_PRINT((ndo, \" %s\", istr));",
          "813:                 break;",
          "",
          "[Removed Lines]",
          "810:             l = value[16];",
          "",
          "[Added Lines]",
          "811:             l = EXTRACT_U_1(value + 16);",
          "",
          "---------------"
        ],
        "print-icmp6.c||print-icmp6.c": [
          "File: print-icmp6.c -> print-icmp6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1498:   ND_PRINT((ndo,\" robustness=%d\", EXTRACT_U_1(bp + 24) & 0x07));",
          "1499:  }",
          "1500:  if (EXTRACT_U_1(bp + 25) < 128) {",
          "1502:  } else {",
          "1503:   qqi = ((bp[25] & 0x0f) | 0x10) << (((bp[25] & 0x70) >> 4) + 3);",
          "1504:  }",
          "",
          "[Removed Lines]",
          "1501:   qqi = bp[25];",
          "",
          "[Added Lines]",
          "1501:   qqi = EXTRACT_U_1(bp + 25);",
          "",
          "---------------"
        ],
        "print-ip.c||print-ip.c": [
          "File: print-ip.c -> print-ip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:    len = 1;",
          "115:   else {",
          "116:    ND_TCHECK_1(cp + 1);",
          "118:    if (len < 2)",
          "119:     break;",
          "120:   }",
          "",
          "[Removed Lines]",
          "117:    len = cp[1];",
          "",
          "[Added Lines]",
          "117:    len = EXTRACT_U_1(cp + 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "267:   else {",
          "268:    ND_TCHECK_1(cp + 1);",
          "270:    if (option_len < 2) {",
          "271:     ND_PRINT((ndo, \" [bad length %u]\", option_len));",
          "272:     return;",
          "",
          "[Removed Lines]",
          "269:    option_len = cp[1];",
          "",
          "[Added Lines]",
          "269:    option_len = EXTRACT_U_1(cp + 1);",
          "",
          "---------------"
        ],
        "print-isakmp.c||print-isakmp.c": [
          "File: print-isakmp.c -> print-isakmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "987:  ND_PRINT((ndo,\"type=#%d \", t));",
          "988:  if (EXTRACT_U_1(p) & 0x80) {",
          "989:   ND_PRINT((ndo,\"value=\"));",
          "991:   if (!rawprint(ndo, (const uint8_t *)(p + 2), 2)) {",
          "992:    ND_PRINT((ndo,\")\"));",
          "993:    goto trunc;",
          "",
          "[Removed Lines]",
          "990:   t = p[2];",
          "",
          "[Added Lines]",
          "990:   t = EXTRACT_U_1(p + 2);",
          "",
          "---------------"
        ],
        "print-juniper.c||print-juniper.c": [
          "File: print-juniper.c -> print-juniper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1195:     l2info->length = h->len;",
          "1196:     l2info->caplen = h->caplen;",
          "1197:     ND_TCHECK_4(p);",
          "1199:     l2info->direction = p[3]&JUNIPER_BPF_PKT_IN;",
          "",
          "[Removed Lines]",
          "1198:     l2info->flags = p[3];",
          "",
          "[Added Lines]",
          "1198:     l2info->flags = EXTRACT_U_1(p + 3);",
          "",
          "---------------"
        ],
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "192:  if (len < 4)",
          "193:   goto trunc;",
          "194:  ND_TCHECK_4(bp);",
          "196:  bp += 4;",
          "197:  len -= 4;",
          "198:  while (ngroups--) {",
          "",
          "[Removed Lines]",
          "195:  ngroups = bp[3];",
          "",
          "[Added Lines]",
          "195:  ngroups = EXTRACT_U_1(bp + 3);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "254:  register u_char type;",
          "256:  ND_TCHECK_1(bp + 1);",
          "259:  ND_PRINT((ndo, \" %s\", tok2str(pimv1_type_str, \"[type %u]\", type)));",
          "260:  switch (type) {",
          "",
          "[Removed Lines]",
          "257:  type = bp[1];",
          "",
          "[Added Lines]",
          "257:  type = EXTRACT_U_1(bp + 1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "353:   goto trunc;",
          "354:  ND_TCHECK_1(bp);",
          "355:  ND_PRINT((ndo, \" auto-rp \"));",
          "357:  switch (type) {",
          "358:  case 0x11:",
          "359:   ND_PRINT((ndo, \"candidate-advert\"));",
          "",
          "[Removed Lines]",
          "356:  type = bp[0];",
          "",
          "[Added Lines]",
          "356:  type = EXTRACT_U_1(bp);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "367:  }",
          "369:  ND_TCHECK_1(bp + 1);",
          "372:  ND_TCHECK_2(bp + 2);",
          "373:  ND_PRINT((ndo, \" Hold \"));",
          "",
          "[Removed Lines]",
          "370:  numrps = bp[1];",
          "",
          "[Added Lines]",
          "370:  numrps = EXTRACT_U_1(bp + 1);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "424:   if (len < 1)",
          "425:    goto trunc;",
          "426:   ND_TCHECK_1(bp);",
          "428:   bp += 1;",
          "429:   len -= 1;",
          "430:   s = ' ';",
          "",
          "[Removed Lines]",
          "427:   nentries = bp[0];",
          "",
          "[Added Lines]",
          "427:   nentries = EXTRACT_U_1(bp);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "977:   if (len < 4)",
          "978:    goto trunc;",
          "979:   ND_TCHECK_4(bp);",
          "981:   holdtime = EXTRACT_BE_U_2(bp + 2);",
          "982:   ND_PRINT((ndo, \"\\n\\t  %u group(s)\", ngroup));",
          "",
          "[Removed Lines]",
          "980:   ngroup = bp[1];",
          "",
          "[Added Lines]",
          "980:   ngroup = EXTRACT_U_1(bp + 1);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1124:    goto trunc;",
          "1125:   ND_TCHECK_1(bp);",
          "1126:   ND_PRINT((ndo, \" prefix-cnt=%d\", EXTRACT_U_1(bp)));",
          "1128:   if (len < 2)",
          "1129:    goto trunc;",
          "1130:   ND_TCHECK_1(bp + 1);",
          "",
          "[Removed Lines]",
          "1127:   pfxcnt = bp[0];",
          "",
          "[Added Lines]",
          "1127:   pfxcnt = EXTRACT_U_1(bp);",
          "",
          "---------------"
        ],
        "print-pppoe.c||print-pppoe.c": [
          "File: print-pppoe.c -> print-pppoe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:  ND_TCHECK2(*pppoe_packet, PPPOE_HDRLEN);",
          "107:  pppoe_ver  = (pppoe_packet[0] & 0xF0) >> 4;",
          "108:  pppoe_type  = (pppoe_packet[0] & 0x0F);",
          "110:  pppoe_sessionid = EXTRACT_BE_U_2(pppoe_packet + 2);",
          "111:  pppoe_length    = EXTRACT_BE_U_2(pppoe_packet + 4);",
          "112:  pppoe_payload = pppoe_packet + PPPOE_HDRLEN;",
          "",
          "[Removed Lines]",
          "109:  pppoe_code = pppoe_packet[1];",
          "",
          "[Added Lines]",
          "109:  pppoe_code = EXTRACT_U_1(pppoe_packet + 1);",
          "",
          "---------------"
        ],
        "print-sl.c||print-sl.c": [
          "File: print-sl.c -> print-sl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "130:  int dir;",
          "131:  u_int hlen;",
          "134:  switch (dir) {",
          "136:  case SLIPDIR_IN:",
          "",
          "[Removed Lines]",
          "133:  dir = p[SLX_DIR];",
          "",
          "[Added Lines]",
          "133:  dir = EXTRACT_U_1(p + SLX_DIR);",
          "",
          "---------------"
        ],
        "print-smb.c||print-smb.c": [
          "File: print-smb.c -> print-smb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "245:     int command;",
          "247:     ND_TCHECK_1(data);",
          "250:     smb_fdata(ndo, param, \"BROWSE PACKET\\n|Param \", param+paramlen, unicodestr);",
          "",
          "[Removed Lines]",
          "248:     command = data[0];",
          "",
          "[Added Lines]",
          "248:     command = EXTRACT_U_1(data);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "401:     const char *f1 = NULL, *f2 = NULL;",
          "403:     ND_TCHECK_1(words);",
          "405:     if (request)",
          "406:  f2 = \"*|Dialect=[Y]\\n\";",
          "407:     else {",
          "",
          "[Removed Lines]",
          "404:     wct = words[0];",
          "",
          "[Added Lines]",
          "404:     wct = EXTRACT_U_1(words);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "443:     const char *f1 = NULL, *f2 = NULL;",
          "445:     ND_TCHECK_1(words);",
          "447:     if (request) {",
          "448:  if (wct == 10)",
          "449:      f1 = \"Com2=[w]\\nOff2=[d]\\nBufSize=[d]\\nMpxMax=[d]\\nVcNum=[d]\\nSessionKey=[W]\\nPassLen=[d]\\nCryptLen=[d]\\nCryptOff=[d]\\nPass&Name=\\n\";",
          "",
          "[Removed Lines]",
          "446:     wct = words[0];",
          "",
          "[Added Lines]",
          "446:     wct = EXTRACT_U_1(words);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "489:     const char *f1 = NULL, *f2 = NULL;",
          "491:     ND_TCHECK_1(words);",
          "493:     if (request) {",
          "494:  f1 = \"Com2=[w]\\nOff2=[d]\\nHandle=[d]\\nLockType=[w]\\nTimeOut=[D]\\nUnlockCount=[d]\\nLockCount=[d]\\n\";",
          "495:  ND_TCHECK_1(words + 7);",
          "",
          "[Removed Lines]",
          "492:     wct = words[0];",
          "",
          "[Added Lines]",
          "492:     wct = EXTRACT_U_1(words);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "811:     request = (buf[9] & 0x80) ? 0 : 1;",
          "812:     startbuf = buf;",
          "816:     fn = smbfind(command, smb_fns);",
          "",
          "[Removed Lines]",
          "814:     command = buf[4];",
          "",
          "[Added Lines]",
          "814:     command = EXTRACT_U_1(buf + 4);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "852:  words = buf + smboffset;",
          "853:  ND_TCHECK_1(words);",
          "855:  data = words + 1 + wct * 2;",
          "856:  maxwords = min(data, maxbuf);",
          "",
          "[Removed Lines]",
          "854:  wct = words[0];",
          "",
          "[Added Lines]",
          "854:  wct = EXTRACT_U_1(words);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "900:  if (wct == 0)",
          "901:      break;",
          "902:  ND_TCHECK_1(words + 1);",
          "904:  if (command == 0xFF)",
          "905:      break;",
          "906:  ND_TCHECK_2(words + 3);",
          "",
          "[Removed Lines]",
          "903:  command = words[1];",
          "",
          "[Added Lines]",
          "903:  command = EXTRACT_U_1(words + 1);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "944:     if (caplen < 4)",
          "945:  goto trunc;",
          "946:     maxbuf = data + caplen;",
          "948:     nbt_len = EXTRACT_BE_U_2(data + 2);",
          "949:     length -= 4;",
          "950:     caplen -= 4;",
          "",
          "[Removed Lines]",
          "947:     type = data[0];",
          "",
          "[Added Lines]",
          "947:     type = EXTRACT_U_1(data);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "976:   goto trunc;",
          "977:      if (caplen < 4)",
          "978:   goto trunc;",
          "981:      ND_PRINT((ndo, \"Session Reject, \"));",
          "982:      switch (ecode) {",
          "",
          "[Removed Lines]",
          "979:      ecode = data[4];",
          "",
          "[Added Lines]",
          "979:      ecode = EXTRACT_U_1(data + 4);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1049:      if (data == NULL)",
          "1050:   break;",
          "1051:      if (nbt_len >= 1 && caplen >= 1) {",
          "1053:   switch (ecode) {",
          "1054:   case 0x80:",
          "1055:       ND_PRINT((ndo, \"Not listening on called name\\n\"));",
          "",
          "[Removed Lines]",
          "1052:   ecode = origdata[4];",
          "",
          "[Added Lines]",
          "1052:   ecode = EXTRACT_U_1(origdata + 4);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1189:       int numnames;",
          "1191:       ND_TCHECK_1(p);",
          "1193:       p = smb_fdata(ndo, p, \"NumNames=[B]\\n\", p + 1, 0);",
          "1194:       if (p == NULL)",
          "1195:    goto out;",
          "",
          "[Removed Lines]",
          "1192:       numnames = p[0];",
          "",
          "[Added Lines]",
          "1192:       numnames = EXTRACT_U_1(p);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1387:  maxbuf = ndo->ndo_snapend;",
          "1388:     ND_TCHECK_1(data + 4);",
          "1389:     len = EXTRACT_LE_U_2(data);",
          "1391:     data2 = data + len;",
          "1392:     if (data2 >= maxbuf) {",
          "1393:  data2 = maxbuf;",
          "",
          "[Removed Lines]",
          "1390:     command = data[4];",
          "",
          "[Added Lines]",
          "1390:     command = EXTRACT_U_1(data + 4);",
          "",
          "---------------"
        ],
        "print-snmp.c||print-snmp.c": [
          "File: print-snmp.c -> print-snmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1798:   ND_PRINT((ndo, \"[msgFlags size %d]\", elem.asnlen));",
          "1799:   return;",
          "1800:  }",
          "1802:  if (flags != 0x00 && flags != 0x01 && flags != 0x03",
          "1803:      && flags != 0x04 && flags != 0x05 && flags != 0x07) {",
          "1804:   ND_PRINT((ndo, \"[msgFlags=0x%02X]\", flags));",
          "",
          "[Removed Lines]",
          "1801:  flags = elem.data.str[0];",
          "",
          "[Added Lines]",
          "1801:  flags = EXTRACT_U_1(elem.data.str);",
          "",
          "---------------"
        ],
        "print-sunatm.c||print-sunatm.c": [
          "File: print-sunatm.c -> print-sunatm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:  }",
          "99:  vci = EXTRACT_BE_U_2(p + VCI_POS);",
          "102:  p += PKT_BEGIN_POS;",
          "103:  caplen -= PKT_BEGIN_POS;",
          "",
          "[Removed Lines]",
          "100:  vpi = p[VPI_POS];",
          "",
          "[Added Lines]",
          "100:  vpi = EXTRACT_U_1(p + VPI_POS);",
          "",
          "---------------"
        ],
        "print-vrrp.c||print-vrrp.c": [
          "File: print-vrrp.c -> print-vrrp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "124:  ND_TCHECK_1(bp + 5);",
          "126:  if (version == 2) {",
          "128:   ND_PRINT((ndo, \", authtype %s\", tok2str(auth2str, NULL, auth_type)));",
          "129:   ND_PRINT((ndo, \", intvl %us, length %u\", EXTRACT_U_1(bp + 5), len));",
          "",
          "[Removed Lines]",
          "127:   auth_type = bp[4];",
          "",
          "[Added Lines]",
          "127:   auth_type = EXTRACT_U_1(bp + 4);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133:  }",
          "135:  if (ndo->ndo_vflag) {",
          "137:   int i;",
          "138:   char c;",
          "",
          "[Removed Lines]",
          "136:   int naddrs = bp[3];",
          "",
          "[Added Lines]",
          "136:   int naddrs = EXTRACT_U_1(bp + 3);",
          "",
          "---------------"
        ],
        "print-zeromq.c||print-zeromq.c": [
          "File: print-zeromq.c -> print-zeromq.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:  if (EXTRACT_U_1(cp) != 0xFF) {",
          "88:   ND_PRINT((ndo, \" frame flags+body  (8-bit) length %\" PRIu64, body_len_declared));",
          "89:  } else {",
          "",
          "[Removed Lines]",
          "87:   body_len_declared = cp[0];",
          "",
          "[Added Lines]",
          "87:   body_len_declared = EXTRACT_U_1(cp);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:  if (body_len_declared == 0)",
          "101:  body_len_captured = ep - cp - header_len;",
          "102:  if (body_len_declared > body_len_captured)",
          "",
          "[Removed Lines]",
          "99:  flags = cp[header_len];",
          "",
          "[Added Lines]",
          "99:  flags = EXTRACT_U_1(cp + header_len);",
          "",
          "---------------"
        ],
        "smbutil.c||smbutil.c": [
          "File: smbutil.c -> smbutil.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "395:      if (l >= MAX_UNISTR_SIZE)",
          "396:   break;",
          "397:      if (ND_ISPRINT(EXTRACT_U_1(s)))",
          "399:      else {",
          "400:   if (EXTRACT_U_1(s) == 0)",
          "401:       break;",
          "",
          "[Removed Lines]",
          "398:   buf[l] = s[0];",
          "",
          "[Added Lines]",
          "398:   buf[l] = EXTRACT_U_1(s);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "412:   break;",
          "413:      if (EXTRACT_U_1(s + 1) == 0 && ND_ISPRINT(EXTRACT_U_1(s))) {",
          "416:      } else {",
          "418:   if (EXTRACT_U_1(s) == 0 && EXTRACT_U_1(s + 1) == 0)",
          "",
          "[Removed Lines]",
          "415:   buf[l] = s[0];",
          "",
          "[Added Lines]",
          "415:   buf[l] = EXTRACT_U_1(s);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "496:    {",
          "497:      unsigned int x;",
          "498:      ND_TCHECK_1(buf);",
          "500:      ND_PRINT((ndo, \"%u (0x%x)\", x, x));",
          "501:      buf += 1;",
          "502:      fmt++;",
          "",
          "[Removed Lines]",
          "499:      x = buf[0];",
          "",
          "[Added Lines]",
          "499:      x = EXTRACT_U_1(buf);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "555:    {",
          "556:      unsigned int x;",
          "557:      ND_TCHECK_1(buf);",
          "559:      ND_PRINT((ndo, \"0x%X\", x));",
          "560:      buf += 1;",
          "561:      fmt++;",
          "",
          "[Removed Lines]",
          "558:      x = buf[0];",
          "",
          "[Added Lines]",
          "558:      x = EXTRACT_U_1(buf);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "591:      case 'b':",
          "592:   ND_TCHECK_1(buf);",
          "594:   ND_PRINT((ndo, \"%u\", stringlen));",
          "595:   buf += 1;",
          "596:   break;",
          "",
          "[Removed Lines]",
          "593:   stringlen = buf[0];",
          "",
          "[Added Lines]",
          "593:   stringlen = EXTRACT_U_1(buf);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "717:   break;",
          "718:      case 2:",
          "719:   ND_TCHECK_1(buf + 15);",
          "721:   ND_PRINT((ndo, \"%-15.15s NameType=0x%02X (%s)\", buf, name_type,",
          "722:       name_type_str(name_type)));",
          "723:   buf += 16;",
          "",
          "[Removed Lines]",
          "720:   name_type = buf[15];",
          "",
          "[Added Lines]",
          "720:   name_type = EXTRACT_U_1(buf + 15);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "93bee2402670249e78478ee3c7ce998a5e2343e6",
      "candidate_info": {
        "commit_hash": "93bee2402670249e78478ee3c7ce998a5e2343e6",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/93bee2402670249e78478ee3c7ce998a5e2343e6",
        "files": [
          "print-atm.c",
          "print-bgp.c",
          "print-carp.c",
          "print-cdp.c",
          "print-chdlc.c",
          "print-dhcp6.c",
          "print-icmp6.c",
          "print-igmp.c",
          "print-ip.c",
          "print-ip6opts.c",
          "print-ipx.c",
          "print-isakmp.c",
          "print-mobility.c",
          "print-nfs.c",
          "print-pim.c",
          "print-smb.c",
          "print-sunatm.c",
          "print-vrrp.c"
        ],
        "message": "Use pointer expressions like in most similar cases",
        "before_after_code_files": [
          "print-atm.c||print-atm.c",
          "print-bgp.c||print-bgp.c",
          "print-carp.c||print-carp.c",
          "print-cdp.c||print-cdp.c",
          "print-chdlc.c||print-chdlc.c",
          "print-dhcp6.c||print-dhcp6.c",
          "print-icmp6.c||print-icmp6.c",
          "print-igmp.c||print-igmp.c",
          "print-ip.c||print-ip.c",
          "print-ip6opts.c||print-ip6opts.c",
          "print-ipx.c||print-ipx.c",
          "print-isakmp.c||print-isakmp.c",
          "print-mobility.c||print-mobility.c",
          "print-nfs.c||print-nfs.c",
          "print-pim.c||print-pim.c",
          "print-smb.c||print-smb.c",
          "print-sunatm.c||print-sunatm.c",
          "print-vrrp.c||print-vrrp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-pim.c||print-pim.c"
          ],
          "candidate": [
            "print-pim.c||print-pim.c"
          ]
        }
      },
      "candidate_diff": {
        "print-atm.c||print-atm.c": [
          "File: print-atm.c -> print-atm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "370:   ND_PRINT((ndo, \"CALL_REF:0x%06x\", call_ref));",
          "371:  } else {",
          "",
          "[Removed Lines]",
          "369:   call_ref = EXTRACT_BE_24BITS(&p[CALL_REF_POS]);",
          "",
          "[Added Lines]",
          "369:   call_ref = EXTRACT_BE_24BITS(p + CALL_REF_POS);",
          "",
          "---------------"
        ],
        "print-bgp.c||print-bgp.c": [
          "File: print-bgp.c -> print-bgp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1435:        ND_PRINT((ndo, \"%s \",",
          "1436:     as_printf(ndo, astostr, sizeof(astostr),",
          "1437:     as_size == 2 ?",
          "1440:                         }",
          "1441:    ND_TCHECK(tptr[0]);",
          "1442:                         ND_PRINT((ndo, \"%s\", tok2str(bgp_as_path_segment_close_values,",
          "",
          "[Removed Lines]",
          "1438:     EXTRACT_BE_16BITS(&tptr[2 + i]) :",
          "1439:     EXTRACT_BE_32BITS(&tptr[2 + i]))));",
          "",
          "[Added Lines]",
          "1438:     EXTRACT_BE_16BITS(tptr + i + 2) :",
          "1439:     EXTRACT_BE_32BITS(tptr + i + 2))));",
          "",
          "---------------"
        ],
        "print-carp.c||print-carp.c": [
          "File: print-carp.c -> print-carp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:   vec[0].len = len;",
          "74:   if (ND_TTEST2(bp[0], len) && in_cksum(vec, 1))",
          "75:    ND_PRINT((ndo, \" (bad carp cksum %x!)\",",
          "77:  }",
          "80:  return;",
          "81: trunc:",
          "",
          "[Removed Lines]",
          "76:     EXTRACT_BE_16BITS(&bp[6])));",
          "78:  ND_PRINT((ndo, \"counter=%\" PRIu64, EXTRACT_BE_64BITS(&bp[8])));",
          "",
          "[Added Lines]",
          "76:     EXTRACT_BE_16BITS(bp + 6)));",
          "78:  ND_PRINT((ndo, \"counter=%\" PRIu64, EXTRACT_BE_64BITS(bp + 8)));",
          "",
          "---------------"
        ],
        "print-cdp.c||print-cdp.c": [
          "File: print-cdp.c -> print-cdp.c"
        ],
        "print-chdlc.c||print-chdlc.c": [
          "File: print-chdlc.c -> print-chdlc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:  if (length < CHDLC_HDRLEN)",
          "60:   goto trunc;",
          "61:  ND_TCHECK2(*p, CHDLC_HDRLEN);",
          "63:  if (ndo->ndo_eflag) {",
          "64:                 ND_PRINT((ndo, \"%s, ethertype %s (0x%04x), length %u: \",",
          "65:                        tok2str(chdlc_cast_values, \"0x%02x\", p[0]),",
          "",
          "[Removed Lines]",
          "62:  proto = EXTRACT_BE_16BITS(&p[2]);",
          "",
          "[Added Lines]",
          "62:  proto = EXTRACT_BE_16BITS(p + 2);",
          "",
          "---------------"
        ],
        "print-dhcp6.c||print-dhcp6.c": [
          "File: print-dhcp6.c -> print-dhcp6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "322:    case 1:",
          "323:     if (optlen >= 2 + 6) {",
          "324:      ND_PRINT((ndo, \" hwaddr/time type %u time %u \",",
          "327:      for (i = 8; i < optlen; i++)",
          "328:       ND_PRINT((ndo, \"%02x\", tp[i]));",
          "",
          "[Removed Lines]",
          "325:          EXTRACT_BE_16BITS(&tp[2]),",
          "326:          EXTRACT_BE_32BITS(&tp[4])));",
          "",
          "[Added Lines]",
          "325:          EXTRACT_BE_16BITS(tp + 2),",
          "326:          EXTRACT_BE_32BITS(tp + 4)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "348:    case 3:",
          "349:     if (optlen >= 2 + 2) {",
          "350:      ND_PRINT((ndo, \" hwaddr type %u \",",
          "352:      for (i = 4; i < optlen; i++)",
          "353:       ND_PRINT((ndo, \"%02x\", tp[i]));",
          "",
          "[Removed Lines]",
          "351:          EXTRACT_BE_16BITS(&tp[2])));",
          "",
          "[Added Lines]",
          "351:          EXTRACT_BE_16BITS(tp + 2)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "372:    tp = (const u_char *)(dh6o + 1);",
          "373:    ND_PRINT((ndo, \" %s\", ip6addr_string(ndo, &tp[0])));",
          "374:    ND_PRINT((ndo, \" pltime:%u vltime:%u\",",
          "377:    if (optlen > 24) {",
          "379:     dhcp6opt_print(ndo, tp + 24, tp + optlen);",
          "",
          "[Removed Lines]",
          "375:        EXTRACT_BE_32BITS(&tp[16]),",
          "376:        EXTRACT_BE_32BITS(&tp[20])));",
          "",
          "[Added Lines]",
          "375:        EXTRACT_BE_32BITS(tp + 16),",
          "376:        EXTRACT_BE_32BITS(tp + 20)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "389:    tp = (const u_char *)(dh6o + 1);",
          "390:    for (i = 0; i < optlen; i += 2) {",
          "391:     ND_PRINT((ndo, \" %s\",",
          "393:    }",
          "394:    ND_PRINT((ndo, \")\"));",
          "395:    break;",
          "",
          "[Removed Lines]",
          "392:         tok2str(dh6opt_str, \"opt_%u\", EXTRACT_BE_16BITS(&tp[i]))));",
          "",
          "[Added Lines]",
          "392:         tok2str(dh6opt_str, \"opt_%u\", EXTRACT_BE_16BITS(tp + i))));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "579:     break;",
          "580:    }",
          "581:    tp = (const u_char *)(dh6o + 1);",
          "583:    break;",
          "584:   case DH6OPT_IA_NA:",
          "585:   case DH6OPT_IA_PD:",
          "",
          "[Removed Lines]",
          "582:    ND_PRINT((ndo, \" %s)\", dhcp6stcode(EXTRACT_BE_16BITS(&tp[0]))));",
          "",
          "[Added Lines]",
          "582:    ND_PRINT((ndo, \" %s)\", dhcp6stcode(EXTRACT_BE_16BITS(tp))));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "589:    }",
          "590:    tp = (const u_char *)(dh6o + 1);",
          "591:    ND_PRINT((ndo, \" IAID:%u T1:%u T2:%u\",",
          "595:    if (optlen > 12) {",
          "597:     dhcp6opt_print(ndo, tp + 12, tp + optlen);",
          "",
          "[Removed Lines]",
          "592:        EXTRACT_BE_32BITS(&tp[0]),",
          "593:        EXTRACT_BE_32BITS(&tp[4]),",
          "594:        EXTRACT_BE_32BITS(&tp[8])));",
          "",
          "[Added Lines]",
          "592:        EXTRACT_BE_32BITS(tp),",
          "593:        EXTRACT_BE_32BITS(tp + 4),",
          "594:        EXTRACT_BE_32BITS(tp + 8)));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "619:    tp = (const u_char *)(dh6o + 1);",
          "620:    ND_PRINT((ndo, \" %s/%d\", ip6addr_string(ndo, &tp[9]), tp[8]));",
          "621:    ND_PRINT((ndo, \" pltime:%u vltime:%u\",",
          "624:    if (optlen > 25) {",
          "626:     dhcp6opt_print(ndo, tp + 25, tp + optlen);",
          "",
          "[Removed Lines]",
          "622:        EXTRACT_BE_32BITS(&tp[0]),",
          "623:        EXTRACT_BE_32BITS(&tp[4])));",
          "",
          "[Added Lines]",
          "622:        EXTRACT_BE_32BITS(tp),",
          "623:        EXTRACT_BE_32BITS(tp + 4)));",
          "",
          "---------------"
        ],
        "print-icmp6.c||print-icmp6.c": [
          "File: print-icmp6.c -> print-icmp6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1505:     }",
          "1507:     ND_TCHECK2(bp[26], 2);",
          "1509:     if (nsrcs > 0) {",
          "1510:  if (len < 28 + nsrcs * sizeof(struct in6_addr))",
          "1511:      ND_PRINT((ndo,\" [invalid number of sources]\"));",
          "",
          "[Removed Lines]",
          "1508:     nsrcs = EXTRACT_BE_16BITS(&bp[26]);",
          "",
          "[Added Lines]",
          "1508:     nsrcs = EXTRACT_BE_16BITS(bp + 26);",
          "",
          "---------------"
        ],
        "print-igmp.c||print-igmp.c": [
          "File: print-igmp.c -> print-igmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:  return;",
          "160:     }",
          "161:     ND_TCHECK2(bp[6], 2);",
          "163:     ND_PRINT((ndo, \", %d group record(s)\", ngroups));",
          "164:     if (ndo->ndo_vflag > 0) {",
          "",
          "[Removed Lines]",
          "162:     ngroups = EXTRACT_BE_16BITS(&bp[6]);",
          "",
          "[Added Lines]",
          "162:     ngroups = EXTRACT_BE_16BITS(bp + 6);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "173:             ND_PRINT((ndo, \" [gaddr %s\", ipaddr_string(ndo, &bp[group+4])));",
          "174:      ND_PRINT((ndo, \" %s\", tok2str(igmpv3report2str, \" [v3-report-#%d]\",",
          "175:         bp[group])));",
          "178:      if (len < group+8+(nsrcs<<2)) {",
          "179:   ND_PRINT((ndo, \" [invalid number of sources %d]\", nsrcs));",
          "",
          "[Removed Lines]",
          "176:             nsrcs = EXTRACT_BE_16BITS(&bp[group + 2]);",
          "",
          "[Added Lines]",
          "176:             nsrcs = EXTRACT_BE_16BITS(bp + group + 2);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "232:  ND_PRINT((ndo, \"]\"));",
          "233:     }",
          "234:     ND_TCHECK2(bp[4], 4);",
          "236:  return;",
          "237:     ND_PRINT((ndo, \" [gaddr %s\", ipaddr_string(ndo, &bp[4])));",
          "238:     ND_TCHECK2(bp[10], 2);",
          "240:     if (nsrcs > 0) {",
          "241:  if (len < 12 + (nsrcs << 2))",
          "242:      ND_PRINT((ndo, \" [invalid number of sources]\"));",
          "",
          "[Removed Lines]",
          "235:     if (EXTRACT_BE_32BITS(&bp[4]) == 0)",
          "239:     nsrcs = EXTRACT_BE_16BITS(&bp[10]);",
          "",
          "[Added Lines]",
          "235:     if (EXTRACT_BE_32BITS(bp + 4) == 0)",
          "239:     nsrcs = EXTRACT_BE_16BITS(bp + 10);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "282:      } else",
          "283:   ND_PRINT((ndo, \" v1\"));",
          "284:             ND_TCHECK2(bp[4], 4);",
          "286:                 ND_PRINT((ndo, \" [gaddr %s]\", ipaddr_string(ndo, &bp[4])));",
          "287:             if (len != 8)",
          "288:                 ND_PRINT((ndo, \" [len %d]\", len));",
          "",
          "[Removed Lines]",
          "285:      if (EXTRACT_BE_32BITS(&bp[4]))",
          "",
          "[Added Lines]",
          "285:      if (EXTRACT_BE_32BITS(bp + 4))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "333:         vec[0].ptr = bp;",
          "334:         vec[0].len = len;",
          "335:         if (in_cksum(vec, 1))",
          "337:     }",
          "338:     return;",
          "339: trunc:",
          "",
          "[Removed Lines]",
          "336:             ND_PRINT((ndo, \" bad igmp cksum %x!\", EXTRACT_BE_16BITS(&bp[2])));",
          "",
          "[Added Lines]",
          "336:             ND_PRINT((ndo, \" bad igmp cksum %x!\", EXTRACT_BE_16BITS(bp + 2)));",
          "",
          "---------------"
        ],
        "print-ip.c||print-ip.c": [
          "File: print-ip.c -> print-ip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "220:   if (ptr == len)",
          "221:    type = \" ^ \";",
          "222:   ND_TCHECK2(cp[len], hoplen);",
          "224:      hoplen!=8 ? \"\" : ipaddr_string(ndo, &cp[len])));",
          "225:   type = \" \";",
          "226:  }",
          "",
          "[Removed Lines]",
          "223:   ND_PRINT((ndo, \"%s%d@%s\", type, EXTRACT_BE_32BITS(&cp[len + hoplen - 4]),",
          "",
          "[Added Lines]",
          "223:   ND_PRINT((ndo, \"%s%d@%s\", type, EXTRACT_BE_32BITS(cp + len + hoplen - 4),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "302:     break;",
          "303:    }",
          "304:    ND_TCHECK(cp[3]);",
          "307:    break;",
          "",
          "[Removed Lines]",
          "305:    if (EXTRACT_BE_16BITS(&cp[2]) != 0)",
          "306:     ND_PRINT((ndo, \" value %u\", EXTRACT_BE_16BITS(&cp[2])));",
          "",
          "[Added Lines]",
          "305:    if (EXTRACT_BE_16BITS(cp + 2) != 0)",
          "306:     ND_PRINT((ndo, \" value %u\", EXTRACT_BE_16BITS(cp + 2)));",
          "",
          "---------------"
        ],
        "print-ip6opts.c||print-ip6opts.c": [
          "File: print-ip6opts.c -> print-ip6opts.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "125:   ND_PRINT((ndo, \"(rtalert: invalid len %d)\", bp[i + 1]));",
          "126:   goto trunc;",
          "127:      }",
          "129:      break;",
          "130:  case IP6OPT_JUMBO:",
          "131:      if (len - i < IP6OPT_JUMBO_LEN) {",
          "",
          "[Removed Lines]",
          "128:      ND_PRINT((ndo, \"(rtalert: 0x%04x) \", EXTRACT_BE_16BITS(&bp[i + 2])));",
          "",
          "[Added Lines]",
          "128:      ND_PRINT((ndo, \"(rtalert: 0x%04x) \", EXTRACT_BE_16BITS(bp + i + 2)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "136:   ND_PRINT((ndo, \"(jumbo: invalid len %d)\", bp[i + 1]));",
          "137:   goto trunc;",
          "138:      }",
          "140:      break;",
          "141:         case IP6OPT_HOME_ADDRESS:",
          "142:      if (len - i < IP6OPT_HOMEADDR_MINLEN) {",
          "",
          "[Removed Lines]",
          "139:      ND_PRINT((ndo, \"(jumbo: %u) \", EXTRACT_BE_32BITS(&bp[i + 2])));",
          "",
          "[Added Lines]",
          "139:      ND_PRINT((ndo, \"(jumbo: %u) \", EXTRACT_BE_32BITS(bp + i + 2)));",
          "",
          "---------------"
        ],
        "print-ipx.c||print-ipx.c": [
          "File: print-ipx.c -> print-ipx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:      ND_PRINT((ndo, \"ipx-sap-nearest-req\"));",
          "167:  ND_TCHECK(ipx[0]);",
          "169:  break;",
          "171:       case 2:",
          "",
          "[Removed Lines]",
          "168:  ND_PRINT((ndo, \" %s\", ipxsap_string(ndo, htons(EXTRACT_BE_16BITS(&ipx[0])))));",
          "",
          "[Added Lines]",
          "168:  ND_PRINT((ndo, \" %s\", ipxsap_string(ndo, htons(EXTRACT_BE_16BITS(ipx)))));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "178:  for (i = 0; i < 8 && length > 0; i++) {",
          "179:      ND_TCHECK(ipx[0]);",
          "181:      if (fn_printzp(ndo, (const u_char *)&ipx[1], 48, ndo->ndo_snapend)) {",
          "182:   ND_PRINT((ndo, \"'\"));",
          "183:   goto trunc;",
          "184:      }",
          "185:      ND_TCHECK2(ipx[25], 10);",
          "186:      ND_PRINT((ndo, \"' addr %s\",",
          "188:      ipx += 32;",
          "189:      length -= 64;",
          "190:  }",
          "",
          "[Removed Lines]",
          "180:      ND_PRINT((ndo, \" %s '\", ipxsap_string(ndo, htons(EXTRACT_BE_16BITS(&ipx[0])))));",
          "187:   ipxaddr_string(EXTRACT_BE_32BITS(&ipx[25]), (const u_char *)&ipx[27])));",
          "",
          "[Added Lines]",
          "180:      ND_PRINT((ndo, \" %s '\", ipxsap_string(ndo, htons(EXTRACT_BE_16BITS(ipx)))));",
          "187:   ipxaddr_string(EXTRACT_BE_32BITS(ipx + 25), (const u_char *)&ipx[27])));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "213:  ND_PRINT((ndo, \"ipx-rip-req\"));",
          "214:  if (length > 0) {",
          "215:      ND_TCHECK(ipx[3]);",
          "218:  }",
          "219:  break;",
          "220:       case 2:",
          "221:  ND_PRINT((ndo, \"ipx-rip-resp\"));",
          "222:  for (i = 0; i < 50 && length > 0; i++) {",
          "223:      ND_TCHECK(ipx[3]);",
          "227:      ipx += 4;",
          "228:      length -= 8;",
          "",
          "[Removed Lines]",
          "216:      ND_PRINT((ndo, \" %08x/%d.%d\", EXTRACT_BE_32BITS(&ipx[0]),",
          "217:     EXTRACT_BE_16BITS(&ipx[2]), EXTRACT_BE_16BITS(&ipx[3])));",
          "224:      ND_PRINT((ndo, \" %08x/%d.%d\", EXTRACT_BE_32BITS(&ipx[0]),",
          "225:     EXTRACT_BE_16BITS(&ipx[2]), EXTRACT_BE_16BITS(&ipx[3])));",
          "",
          "[Added Lines]",
          "216:      ND_PRINT((ndo, \" %08x/%d.%d\", EXTRACT_BE_32BITS(ipx),",
          "217:     EXTRACT_BE_16BITS(ipx + 2), EXTRACT_BE_16BITS(ipx + 3)));",
          "224:      ND_PRINT((ndo, \" %08x/%d.%d\", EXTRACT_BE_32BITS(ipx),",
          "225:     EXTRACT_BE_16BITS(ipx + 2), EXTRACT_BE_16BITS(ipx + 3)));",
          "",
          "---------------"
        ],
        "print-isakmp.c||print-isakmp.c": [
          "File: print-isakmp.c -> print-isakmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "923:   totlen = 4;",
          "924:  else {",
          "925:   ND_TCHECK_16BITS(&p[2]);",
          "927:  }",
          "928:  if (ep2 < p + totlen) {",
          "929:   ND_PRINT((ndo,\"[|attr]\"));",
          "",
          "[Removed Lines]",
          "926:   totlen = 4 + EXTRACT_BE_16BITS(&p[2]);",
          "",
          "[Added Lines]",
          "926:   totlen = 4 + EXTRACT_BE_16BITS(p + 2);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "933:  ND_TCHECK_16BITS(&p[0]);",
          "934:  ND_PRINT((ndo,\"(\"));",
          "936:  if (map && t < nmap && map[t].type)",
          "937:   ND_PRINT((ndo,\"type=%s \", map[t].type));",
          "938:  else",
          "",
          "[Removed Lines]",
          "935:  t = EXTRACT_BE_16BITS(&p[0]) & 0x7fff;",
          "",
          "[Added Lines]",
          "935:  t = EXTRACT_BE_16BITS(p) & 0x7fff;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "940:  if (p[0] & 0x80) {",
          "941:   ND_PRINT((ndo,\"value=\"));",
          "942:   ND_TCHECK_16BITS(&p[2]);",
          "944:   if (map && t < nmap && v < map[t].nvalue && map[t].value[v])",
          "945:    ND_PRINT((ndo,\"%s\", map[t].value[v]));",
          "946:   else {",
          "",
          "[Removed Lines]",
          "943:   v = EXTRACT_BE_16BITS(&p[2]);",
          "",
          "[Added Lines]",
          "943:   v = EXTRACT_BE_16BITS(p + 2);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "974:   totlen = 4;",
          "975:  else {",
          "976:   ND_TCHECK_16BITS(&p[2]);",
          "978:  }",
          "979:  if (ep2 < p + totlen) {",
          "980:   ND_PRINT((ndo,\"[|attr]\"));",
          "",
          "[Removed Lines]",
          "977:   totlen = 4 + EXTRACT_BE_16BITS(&p[2]);",
          "",
          "[Added Lines]",
          "977:   totlen = 4 + EXTRACT_BE_16BITS(p + 2);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "984:  ND_TCHECK_16BITS(&p[0]);",
          "985:  ND_PRINT((ndo,\"(\"));",
          "987:  ND_PRINT((ndo,\"type=#%d \", t));",
          "988:  if (p[0] & 0x80) {",
          "989:   ND_PRINT((ndo,\"value=\"));",
          "",
          "[Removed Lines]",
          "986:  t = EXTRACT_BE_16BITS(&p[0]) & 0x7fff;",
          "",
          "[Added Lines]",
          "986:  t = EXTRACT_BE_16BITS(p) & 0x7fff;",
          "",
          "---------------"
        ],
        "print-mobility.c||print-mobility.c": [
          "File: print-mobility.c -> print-mobility.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:    ND_TCHECK_16BITS(&bp[i+2]);",
          "154:    ND_PRINT((ndo, \"(refresh: %u)\",",
          "156:    break;",
          "157:   case IP6MOPT_ALTCOA:",
          "158:    if (len - i < IP6MOPT_ALTCOA_MINLEN) {",
          "",
          "[Removed Lines]",
          "155:     EXTRACT_BE_16BITS(&bp[i + 2]) << 2));",
          "",
          "[Added Lines]",
          "155:     EXTRACT_BE_16BITS(bp + i + 2) << 2));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "170:    ND_TCHECK_16BITS(&bp[i+2]);",
          "171:    ND_TCHECK_16BITS(&bp[i+4]);",
          "172:    ND_PRINT((ndo, \"(ni: ho=0x%04x co=0x%04x)\",",
          "175:    break;",
          "176:   case IP6MOPT_AUTH:",
          "177:    if (len - i < IP6MOPT_AUTH_MINLEN) {",
          "",
          "[Removed Lines]",
          "173:     EXTRACT_BE_16BITS(&bp[i + 2]),",
          "174:     EXTRACT_BE_16BITS(&bp[i + 4])));",
          "",
          "[Added Lines]",
          "173:     EXTRACT_BE_16BITS(bp + i + 2),",
          "174:     EXTRACT_BE_16BITS(bp + i + 4)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "250:    ND_TCHECK_32BITS(&bp[hlen + 4]);",
          "251:    ND_PRINT((ndo, \" %s Init Cookie=%08x:%08x\",",
          "252:           type == IP6M_HOME_TEST_INIT ? \"Home\" : \"Care-of\",",
          "255:   }",
          "256:   hlen += 8;",
          "257:   break;",
          "",
          "[Removed Lines]",
          "253:           EXTRACT_BE_32BITS(&bp[hlen]),",
          "254:           EXTRACT_BE_32BITS(&bp[hlen + 4])));",
          "",
          "[Added Lines]",
          "253:           EXTRACT_BE_32BITS(bp + hlen),",
          "254:           EXTRACT_BE_32BITS(bp + hlen + 4)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "264:    ND_TCHECK_32BITS(&bp[hlen + 4]);",
          "265:    ND_PRINT((ndo, \" %s Init Cookie=%08x:%08x\",",
          "266:           type == IP6M_HOME_TEST ? \"Home\" : \"Care-of\",",
          "269:   }",
          "270:   hlen += 8;",
          "271:   if (ndo->ndo_vflag) {",
          "272:    ND_TCHECK_32BITS(&bp[hlen + 4]);",
          "273:    ND_PRINT((ndo, \" %s Keygen Token=%08x:%08x\",",
          "274:           type == IP6M_HOME_TEST ? \"Home\" : \"Care-of\",",
          "277:   }",
          "278:   hlen += 8;",
          "279:   break;",
          "",
          "[Removed Lines]",
          "267:           EXTRACT_BE_32BITS(&bp[hlen]),",
          "268:           EXTRACT_BE_32BITS(&bp[hlen + 4])));",
          "275:           EXTRACT_BE_32BITS(&bp[hlen]),",
          "276:           EXTRACT_BE_32BITS(&bp[hlen + 4])));",
          "",
          "[Added Lines]",
          "267:           EXTRACT_BE_32BITS(bp + hlen),",
          "268:           EXTRACT_BE_32BITS(bp + hlen + 4)));",
          "275:           EXTRACT_BE_32BITS(bp + hlen),",
          "276:           EXTRACT_BE_32BITS(bp + hlen + 4)));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "299:   hlen += 1;",
          "300:   ND_TCHECK_16BITS(&bp[hlen]);",
          "303:   hlen += 2;",
          "304:   break;",
          "305:  case IP6M_BINDING_ACK:",
          "",
          "[Removed Lines]",
          "302:   ND_PRINT((ndo, \" lifetime=%u\", EXTRACT_BE_16BITS(&bp[hlen]) << 2));",
          "",
          "[Added Lines]",
          "302:   ND_PRINT((ndo, \" lifetime=%u\", EXTRACT_BE_16BITS(bp + hlen) << 2));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "312:   hlen = IP6M_MINLEN;",
          "313:   ND_TCHECK_16BITS(&bp[hlen]);",
          "315:   hlen += 2;",
          "316:   ND_TCHECK_16BITS(&bp[hlen]);",
          "319:   hlen += 2;",
          "320:   break;",
          "321:  case IP6M_BINDING_ERROR:",
          "",
          "[Removed Lines]",
          "314:   ND_PRINT((ndo, \" seq#=%u\", EXTRACT_BE_16BITS(&bp[hlen])));",
          "318:   ND_PRINT((ndo, \" lifetime=%u\", EXTRACT_BE_16BITS(&bp[hlen]) << 2));",
          "",
          "[Added Lines]",
          "314:   ND_PRINT((ndo, \" seq#=%u\", EXTRACT_BE_16BITS(bp + hlen)));",
          "318:   ND_PRINT((ndo, \" lifetime=%u\", EXTRACT_BE_16BITS(bp + hlen) << 2));",
          "",
          "---------------"
        ],
        "print-nfs.c||print-nfs.c": [
          "File: print-nfs.c -> print-nfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "427:  dp = (const uint32_t *)&rp->rm_call.cb_cred;",
          "428:  ND_TCHECK(dp[1]);",
          "430:  if (len < length) {",
          "431:   dp += (len + (2 * sizeof(*dp) + 3)) / sizeof(*dp);",
          "432:   ND_TCHECK(dp[1]);",
          "434:   if (len < length) {",
          "435:    dp += (len + (2 * sizeof(*dp) + 3)) / sizeof(*dp);",
          "436:    ND_TCHECK2(dp[0], 0);",
          "",
          "[Removed Lines]",
          "429:  len = EXTRACT_BE_32BITS(&dp[1]);",
          "433:   len = EXTRACT_BE_32BITS(&dp[1]);",
          "",
          "[Added Lines]",
          "429:  len = EXTRACT_BE_32BITS(dp + 1);",
          "433:   len = EXTRACT_BE_32BITS(dp + 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "571:   if ((dp = parsereq(ndo, rp, length)) != NULL &&",
          "572:       (dp = parsefh(ndo, dp, v3)) != NULL) {",
          "573:    ND_TCHECK(dp[0]);",
          "575:    if (access_flags & ~NFSV3ACCESS_FULL) {",
          "577:     ND_PRINT((ndo, \" %04x\", access_flags));",
          "",
          "[Removed Lines]",
          "574:    access_flags = EXTRACT_BE_32BITS(&dp[0]);",
          "",
          "[Added Lines]",
          "574:    access_flags = EXTRACT_BE_32BITS(dp);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "612:    if (v3) {",
          "613:     ND_TCHECK(dp[2]);",
          "614:     ND_PRINT((ndo, \" %u bytes @ %\" PRIu64,",
          "617:    } else {",
          "618:     ND_TCHECK(dp[1]);",
          "619:     ND_PRINT((ndo, \" %u bytes @ %u\",",
          "622:    }",
          "623:    return;",
          "624:   }",
          "",
          "[Removed Lines]",
          "615:            EXTRACT_BE_32BITS(&dp[2]),",
          "616:            EXTRACT_BE_64BITS(&dp[0])));",
          "620:         EXTRACT_BE_32BITS(&dp[1]),",
          "621:         EXTRACT_BE_32BITS(&dp[0])));",
          "",
          "[Added Lines]",
          "615:            EXTRACT_BE_32BITS(dp + 2),",
          "616:            EXTRACT_BE_64BITS(dp)));",
          "620:         EXTRACT_BE_32BITS(dp + 1),",
          "621:         EXTRACT_BE_32BITS(dp)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "630:    if (v3) {",
          "631:     ND_TCHECK(dp[4]);",
          "632:     ND_PRINT((ndo, \" %u (%u) bytes @ %\" PRIu64,",
          "636:     if (ndo->ndo_vflag) {",
          "637:      ND_PRINT((ndo, \" <%s>\",",
          "638:       tok2str(nfsv3_writemodes,",
          "640:     }",
          "641:    } else {",
          "642:     ND_TCHECK(dp[3]);",
          "643:     ND_PRINT((ndo, \" %u (%u) bytes @ %u (%u)\",",
          "648:    }",
          "649:    return;",
          "650:   }",
          "",
          "[Removed Lines]",
          "633:       EXTRACT_BE_32BITS(&dp[4]),",
          "634:       EXTRACT_BE_32BITS(&dp[2]),",
          "635:       EXTRACT_BE_64BITS(&dp[0])));",
          "639:        NULL, EXTRACT_BE_32BITS(&dp[3]))));",
          "644:       EXTRACT_BE_32BITS(&dp[3]),",
          "645:       EXTRACT_BE_32BITS(&dp[2]),",
          "646:       EXTRACT_BE_32BITS(&dp[1]),",
          "647:       EXTRACT_BE_32BITS(&dp[0])));",
          "",
          "[Added Lines]",
          "633:       EXTRACT_BE_32BITS(dp + 4),",
          "634:       EXTRACT_BE_32BITS(dp + 2),",
          "635:       EXTRACT_BE_64BITS(dp)));",
          "639:        NULL, EXTRACT_BE_32BITS(dp + 3))));",
          "644:       EXTRACT_BE_32BITS(dp + 3),",
          "645:       EXTRACT_BE_32BITS(dp + 2),",
          "646:       EXTRACT_BE_32BITS(dp + 1),",
          "647:       EXTRACT_BE_32BITS(dp)));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "676:    if (ndo->ndo_vflag && (type == NFCHR || type == NFBLK)) {",
          "677:     ND_TCHECK(dp[1]);",
          "678:     ND_PRINT((ndo, \" %u/%u\",",
          "681:     dp += 2;",
          "682:    }",
          "683:    if (ndo->ndo_vflag)",
          "",
          "[Removed Lines]",
          "679:            EXTRACT_BE_32BITS(&dp[0]),",
          "680:            EXTRACT_BE_32BITS(&dp[1])));",
          "",
          "[Added Lines]",
          "679:            EXTRACT_BE_32BITS(dp),",
          "680:            EXTRACT_BE_32BITS(dp + 1)));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "716:     ND_PRINT((ndo, \" %u bytes @ %\" PRId64,",
          "719:     if (ndo->ndo_vflag)",
          "720:      ND_PRINT((ndo, \" verf %08x%08x\", dp[2], dp[3]));",
          "721:    } else {",
          "",
          "[Removed Lines]",
          "717:         EXTRACT_BE_32BITS(&dp[4]),",
          "718:         EXTRACT_BE_64BITS(&dp[0])));",
          "",
          "[Added Lines]",
          "717:         EXTRACT_BE_32BITS(dp + 4),",
          "718:         EXTRACT_BE_64BITS(dp)));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "727:     ND_PRINT((ndo, \" %u bytes @ %d\",",
          "730:    }",
          "731:    return;",
          "732:   }",
          "",
          "[Removed Lines]",
          "728:         EXTRACT_BE_32BITS(&dp[1]),",
          "729:         EXTRACT_BE_32BITS(&dp[0])));",
          "",
          "[Added Lines]",
          "728:         EXTRACT_BE_32BITS(dp + 1),",
          "729:         EXTRACT_BE_32BITS(dp)));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "743:    ND_PRINT((ndo, \" %u bytes @ %\" PRId64,",
          "746:    if (ndo->ndo_vflag) {",
          "747:     ND_TCHECK(dp[5]);",
          "748:     ND_PRINT((ndo, \" max %u verf %08x%08x\",",
          "750:    }",
          "751:    return;",
          "752:   }",
          "",
          "[Removed Lines]",
          "744:     EXTRACT_BE_32BITS(&dp[4]),",
          "745:     EXTRACT_BE_64BITS(&dp[0])));",
          "749:            EXTRACT_BE_32BITS(&dp[5]), dp[2], dp[3]));",
          "",
          "[Added Lines]",
          "744:     EXTRACT_BE_32BITS(dp + 4),",
          "745:     EXTRACT_BE_64BITS(dp)));",
          "749:            EXTRACT_BE_32BITS(dp + 5), dp[2], dp[3]));",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "757:       (dp = parsefh(ndo, dp, v3)) != NULL) {",
          "758:    ND_TCHECK(dp[2]);",
          "759:    ND_PRINT((ndo, \" %u bytes @ %\" PRIu64,",
          "762:    return;",
          "763:   }",
          "764:   break;",
          "",
          "[Removed Lines]",
          "760:     EXTRACT_BE_32BITS(&dp[2]),",
          "761:     EXTRACT_BE_64BITS(&dp[0])));",
          "",
          "[Added Lines]",
          "760:     EXTRACT_BE_32BITS(dp + 2),",
          "761:     EXTRACT_BE_64BITS(dp)));",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "998:  dp = ((const uint32_t *)&rp->rm_reply) + 1;",
          "999:  ND_TCHECK(dp[1]);",
          "1001:  if (len >= length)",
          "1002:   return (NULL);",
          "",
          "[Removed Lines]",
          "1000:  len = EXTRACT_BE_32BITS(&dp[1]);",
          "",
          "[Added Lines]",
          "1000:  len = EXTRACT_BE_32BITS(dp + 1);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1031:  ND_TCHECK(dp[0]);",
          "1034:  if (er)",
          "1036:  if (errnum != 0) {",
          "",
          "[Removed Lines]",
          "1033:  errnum = EXTRACT_BE_32BITS(&dp[0]);",
          "",
          "[Added Lines]",
          "1033:  errnum = EXTRACT_BE_32BITS(dp);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1233:  ND_TCHECK(dp[2]);",
          "1234:  ND_PRINT((ndo, \" offset 0x%x size %d \",",
          "1236:  if (dp[2] != 0)",
          "1237:   ND_PRINT((ndo, \" eof\"));",
          "",
          "[Removed Lines]",
          "1235:         EXTRACT_BE_32BITS(&dp[0]), EXTRACT_BE_32BITS(&dp[1])));",
          "",
          "[Added Lines]",
          "1235:         EXTRACT_BE_32BITS(dp), EXTRACT_BE_32BITS(dp + 1)));",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1246:                const uint32_t *dp)",
          "1247: {",
          "1250:  ND_PRINT((ndo, \" mtime %u.%06u ctime %u.%06u\",",
          "1253:  return (dp + 6);",
          "1254: }",
          "",
          "[Removed Lines]",
          "1249:  ND_PRINT((ndo, \" sz %\" PRIu64, EXTRACT_BE_64BITS(&dp[0])));",
          "1251:         EXTRACT_BE_32BITS(&dp[2]), EXTRACT_BE_32BITS(&dp[3]),",
          "1252:         EXTRACT_BE_32BITS(&dp[4]), EXTRACT_BE_32BITS(&dp[5])));",
          "",
          "[Added Lines]",
          "1249:  ND_PRINT((ndo, \" sz %\" PRIu64, EXTRACT_BE_64BITS(dp)));",
          "1251:         EXTRACT_BE_32BITS(dp + 2), EXTRACT_BE_32BITS(dp + 3),",
          "1252:         EXTRACT_BE_32BITS(dp + 4), EXTRACT_BE_32BITS(dp + 5)));",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1261:                   const uint32_t *dp, int verbose)",
          "1262: {",
          "1263:  ND_TCHECK(dp[0]);",
          "1265:   return (dp + 1);",
          "1266:  dp++;",
          "1267:  ND_TCHECK2(*dp, 24);",
          "",
          "[Removed Lines]",
          "1264:  if (!EXTRACT_BE_32BITS(&dp[0]))",
          "",
          "[Added Lines]",
          "1264:  if (!EXTRACT_BE_32BITS(dp))",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1283:                    const uint32_t *dp, int verbose)",
          "1284: {",
          "1285:  ND_TCHECK(dp[0]);",
          "1287:   return (dp + 1);",
          "1288:  dp++;",
          "1289:  if (verbose) {",
          "",
          "[Removed Lines]",
          "1286:  if (!EXTRACT_BE_32BITS(&dp[0]))",
          "",
          "[Added Lines]",
          "1286:  if (!EXTRACT_BE_32BITS(dp))",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1320:   dp = parse_wcc_data(ndo, dp, verbose);",
          "1321:  else {",
          "1322:   ND_TCHECK(dp[0]);",
          "1324:    return (dp + 1);",
          "1325:   dp++;",
          "1326:   if (!(dp = parsefh(ndo, dp, 1)))",
          "",
          "[Removed Lines]",
          "1323:   if (!EXTRACT_BE_32BITS(&dp[0]))",
          "",
          "[Added Lines]",
          "1323:   if (!EXTRACT_BE_32BITS(dp))",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1516:    break;",
          "1517:   if (!er) {",
          "1518:    ND_TCHECK(dp[0]);",
          "1520:   }",
          "1521:   return;",
          "",
          "[Removed Lines]",
          "1519:    ND_PRINT((ndo, \" c %04x\", EXTRACT_BE_32BITS(&dp[0])));",
          "",
          "[Added Lines]",
          "1519:    ND_PRINT((ndo, \" c %04x\", EXTRACT_BE_32BITS(dp)));",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1538:     return;",
          "1539:    if (ndo->ndo_vflag) {",
          "1540:     ND_TCHECK(dp[1]);",
          "1543:      ND_PRINT((ndo, \" EOF\"));",
          "1544:    }",
          "1545:    return;",
          "",
          "[Removed Lines]",
          "1541:     ND_PRINT((ndo, \" %u bytes\", EXTRACT_BE_32BITS(&dp[0])));",
          "1542:     if (EXTRACT_BE_32BITS(&dp[1]))",
          "",
          "[Added Lines]",
          "1541:     ND_PRINT((ndo, \" %u bytes\", EXTRACT_BE_32BITS(dp)));",
          "1542:     if (EXTRACT_BE_32BITS(dp + 1))",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1561:     return;",
          "1562:    if (ndo->ndo_vflag) {",
          "1563:     ND_TCHECK(dp[0]);",
          "1565:     if (ndo->ndo_vflag > 1) {",
          "1566:      ND_TCHECK(dp[1]);",
          "1567:      ND_PRINT((ndo, \" <%s>\",",
          "1568:       tok2str(nfsv3_writemodes,",
          "1570:     }",
          "1571:     return;",
          "1572:    }",
          "",
          "[Removed Lines]",
          "1564:     ND_PRINT((ndo, \" %u bytes\", EXTRACT_BE_32BITS(&dp[0])));",
          "1569:        NULL, EXTRACT_BE_32BITS(&dp[1]))));",
          "",
          "[Added Lines]",
          "1564:     ND_PRINT((ndo, \" %u bytes\", EXTRACT_BE_32BITS(dp)));",
          "1569:        NULL, EXTRACT_BE_32BITS(dp + 1))));",
          "",
          "---------------"
        ],
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:  if (ND_TTEST2(bp[0], 30) && bp[11] == 1 &&",
          "152:   int hold;",
          "154:   ND_PRINT((ndo, \" RPF %s \", ipaddr_string(ndo, bp)));",
          "156:   if (hold != 180) {",
          "157:    ND_PRINT((ndo, \"Hold \"));",
          "158:    unsigned_relts_print(ndo, hold);",
          "",
          "[Removed Lines]",
          "151:      ((njoin = EXTRACT_BE_16BITS(&bp[20])) + EXTRACT_BE_16BITS(&bp[22])) == 1) {",
          "155:   hold = EXTRACT_BE_16BITS(&bp[6]);",
          "",
          "[Added Lines]",
          "151:      ((njoin = EXTRACT_BE_16BITS(bp + 20)) + EXTRACT_BE_16BITS(bp + 22)) == 1) {",
          "155:   hold = EXTRACT_BE_16BITS(bp + 6);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:   ND_PRINT((ndo, \"%s (%s/%d, %s\", njoin ? \"Join\" : \"Prune\",",
          "161:   ipaddr_string(ndo, &bp[26]), bp[25] & 0x3f,",
          "162:   ipaddr_string(ndo, &bp[12])));",
          "164:    ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, &bp[16])));",
          "165:   ND_PRINT((ndo, \") %s%s %s\",",
          "166:       (bp[24] & 0x01) ? \"Sparse\" : \"Dense\",",
          "",
          "[Removed Lines]",
          "163:   if (EXTRACT_BE_32BITS(&bp[16]) != 0xffffffff)",
          "",
          "[Added Lines]",
          "163:   if (EXTRACT_BE_32BITS(bp + 16) != 0xffffffff)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "183:  if (ndo->ndo_vflag > 1)",
          "184:   ND_PRINT((ndo, \"\\n\"));",
          "185:  ND_PRINT((ndo, \" Hold time: \"));",
          "187:  if (ndo->ndo_vflag < 2)",
          "188:   return;",
          "189:  bp += 4;",
          "",
          "[Removed Lines]",
          "186:  unsigned_relts_print(ndo, EXTRACT_BE_16BITS(&bp[2]));",
          "",
          "[Added Lines]",
          "186:  unsigned_relts_print(ndo, EXTRACT_BE_16BITS(bp + 2));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "209:   if (len < 4)",
          "210:    goto trunc;",
          "211:   ND_TCHECK2(bp[0], sizeof(struct in_addr));",
          "213:    ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, &bp[0])));",
          "214:   bp += 4;",
          "215:   len -= 4;",
          "216:   if (len < 4)",
          "217:    goto trunc;",
          "218:   ND_TCHECK2(bp[0], 4);",
          "221:   ND_PRINT((ndo, \" joined: %d pruned: %d\", njoin, nprune));",
          "222:   bp += 4;",
          "223:   len -= 4;",
          "",
          "[Removed Lines]",
          "212:   if (EXTRACT_BE_32BITS(&bp[0]) != 0xffffffff)",
          "219:   njoin = EXTRACT_BE_16BITS(&bp[0]);",
          "220:   nprune = EXTRACT_BE_16BITS(&bp[2]);",
          "",
          "[Added Lines]",
          "212:   if (EXTRACT_BE_32BITS(bp) != 0xffffffff)",
          "219:   njoin = EXTRACT_BE_16BITS(bp);",
          "220:   nprune = EXTRACT_BE_16BITS(bp + 2);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "278:   if (ndo->ndo_vflag) {",
          "279:    ND_TCHECK2(bp[10],2);",
          "280:    ND_PRINT((ndo, \" (Hold-time \"));",
          "282:    ND_PRINT((ndo, \")\"));",
          "283:   }",
          "284:   break;",
          "",
          "[Removed Lines]",
          "281:    unsigned_relts_print(ndo, EXTRACT_BE_16BITS(&bp[10]));",
          "",
          "[Added Lines]",
          "281:    unsigned_relts_print(ndo, EXTRACT_BE_16BITS(bp + 10));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "297:   if (ndo->ndo_vflag) {",
          "298:    ND_TCHECK2(bp[22], 2);",
          "299:    ND_PRINT((ndo, \" group %s\", ipaddr_string(ndo, &bp[8])));",
          "301:     ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, &bp[12])));",
          "302:    ND_PRINT((ndo, \" RP %s hold \", ipaddr_string(ndo, &bp[16])));",
          "304:   }",
          "305:   break;",
          "306:  case PIMV1_TYPE_ASSERT:",
          "307:   ND_TCHECK2(bp[16], sizeof(struct in_addr));",
          "308:   ND_PRINT((ndo, \" for %s > %s\", ipaddr_string(ndo, &bp[16]),",
          "309:       ipaddr_string(ndo, &bp[8])));",
          "311:    ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, &bp[12])));",
          "312:   ND_TCHECK2(bp[24], 4);",
          "313:   ND_PRINT((ndo, \" %s pref %d metric %d\",",
          "314:       (bp[20] & 0x80) ? \"RP-tree\" : \"SPT\",",
          "317:   break;",
          "318:  case PIMV1_TYPE_JOIN_PRUNE:",
          "319:  case PIMV1_TYPE_GRAFT:",
          "",
          "[Removed Lines]",
          "300:    if (EXTRACT_BE_32BITS(&bp[12]) != 0xffffffff)",
          "303:    unsigned_relts_print(ndo, EXTRACT_BE_16BITS(&bp[22]));",
          "310:   if (EXTRACT_BE_32BITS(&bp[12]) != 0xffffffff)",
          "315:   EXTRACT_BE_32BITS(&bp[20]) & 0x7fffffff,",
          "316:   EXTRACT_BE_32BITS(&bp[24])));",
          "",
          "[Added Lines]",
          "300:    if (EXTRACT_BE_32BITS(bp + 12) != 0xffffffff)",
          "303:    unsigned_relts_print(ndo, EXTRACT_BE_16BITS(bp + 22));",
          "310:   if (EXTRACT_BE_32BITS(bp + 12) != 0xffffffff)",
          "315:   EXTRACT_BE_32BITS(bp + 20) & 0x7fffffff,",
          "316:   EXTRACT_BE_32BITS(bp + 24)));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "372:  ND_TCHECK2(bp[2], 2);",
          "373:  ND_PRINT((ndo, \" Hold \"));",
          "375:  if (hold)",
          "377:  else",
          "378:   ND_PRINT((ndo, \"FOREVER\"));",
          "",
          "[Removed Lines]",
          "374:  hold = EXTRACT_BE_16BITS(&bp[2]);",
          "376:   unsigned_relts_print(ndo, EXTRACT_BE_16BITS(&bp[2]));",
          "",
          "[Added Lines]",
          "374:  hold = EXTRACT_BE_16BITS(bp + 2);",
          "376:   unsigned_relts_print(ndo, EXTRACT_BE_16BITS(bp + 2));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "760:    if (len < 4)",
          "761:     goto trunc;",
          "762:    ND_TCHECK2(bp[0], 4);",
          "765:    ND_PRINT((ndo, \"\\n\\t  %s Option (%u), length %u, Value: \",",
          "766:              tok2str(pimv2_hello_option_values, \"Unknown\", otype),",
          "767:              otype,",
          "",
          "[Removed Lines]",
          "763:    otype = EXTRACT_BE_16BITS(&bp[0]);",
          "764:    olen = EXTRACT_BE_16BITS(&bp[2]);",
          "",
          "[Added Lines]",
          "763:    otype = EXTRACT_BE_16BITS(bp);",
          "764:    olen = EXTRACT_BE_16BITS(bp + 2);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "977:    goto trunc;",
          "978:   ND_TCHECK2(*bp, 4);",
          "979:   ngroup = bp[1];",
          "981:   ND_PRINT((ndo, \"\\n\\t  %u group(s)\", ngroup));",
          "983:    ND_PRINT((ndo, \", holdtime: \"));",
          "",
          "[Removed Lines]",
          "980:   holdtime = EXTRACT_BE_16BITS(&bp[2]);",
          "",
          "[Added Lines]",
          "980:   holdtime = EXTRACT_BE_16BITS(bp + 2);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "995:    if (len < 4)",
          "996:     goto trunc;",
          "997:    ND_TCHECK2(*bp, 4);",
          "1000:    ND_PRINT((ndo, \", joined sources: %u, pruned sources: %u\", njoin, nprune));",
          "1001:    bp += 4; len -= 4;",
          "1002:    for (j = 0; j < njoin; j++) {",
          "",
          "[Removed Lines]",
          "998:    njoin = EXTRACT_BE_16BITS(&bp[0]);",
          "999:    nprune = EXTRACT_BE_16BITS(&bp[2]);",
          "",
          "[Added Lines]",
          "998:    njoin = EXTRACT_BE_16BITS(bp);",
          "999:    nprune = EXTRACT_BE_16BITS(bp + 2);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1110:   ND_TCHECK2(*bp, 8);",
          "1111:   if (bp[0] & 0x80)",
          "1112:    ND_PRINT((ndo, \" RPT\"));",
          "1115:   break;",
          "1117:  case PIMV2_TYPE_CANDIDATE_RP:",
          "",
          "[Removed Lines]",
          "1113:   ND_PRINT((ndo, \" pref=%u\", EXTRACT_BE_32BITS(&bp[0]) & 0x7fffffff));",
          "1114:   ND_PRINT((ndo, \" metric=%u\", EXTRACT_BE_32BITS(&bp[4])));",
          "",
          "[Added Lines]",
          "1113:   ND_PRINT((ndo, \" pref=%u\", EXTRACT_BE_32BITS(bp) & 0x7fffffff));",
          "1114:   ND_PRINT((ndo, \" metric=%u\", EXTRACT_BE_32BITS(bp + 4)));",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1132:    goto trunc;",
          "1133:   ND_TCHECK_16BITS(&bp[2]);",
          "1134:   ND_PRINT((ndo, \" holdtime=\"));",
          "1136:   bp += 4;",
          "1137:   len -= 4;",
          "",
          "[Removed Lines]",
          "1135:   unsigned_relts_print(ndo, EXTRACT_BE_16BITS(&bp[2]));",
          "",
          "[Added Lines]",
          "1135:   unsigned_relts_print(ndo, EXTRACT_BE_16BITS(bp + 2));",
          "",
          "---------------"
        ],
        "print-smb.c||print-smb.c": [
          "File: print-smb.c -> print-smb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "821:  return;",
          "823:     ND_TCHECK_16BITS(&buf[10]);",
          "825:     unicodestr = flags2 & 0x8000;",
          "826:     nterrcodes = flags2 & 0x4000;",
          "",
          "[Removed Lines]",
          "824:     flags2 = EXTRACT_LE_16BITS(&buf[10]);",
          "",
          "[Added Lines]",
          "824:     flags2 = EXTRACT_LE_16BITS(buf + 10);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "829:     smb_fdata(ndo, buf, fmt_smbheader, buf + 33, unicodestr);",
          "831:     if (nterrcodes) {",
          "833:  if (nterror)",
          "834:      ND_PRINT((ndo, \"NTError = %s\\n\", nt_errstr(nterror)));",
          "835:     } else {",
          "836:  if (buf[5])",
          "838:     }",
          "840:     smboffset = 32;",
          "",
          "[Removed Lines]",
          "832:      nterror = EXTRACT_LE_32BITS(&buf[5]);",
          "837:      ND_PRINT((ndo, \"SMBError = %s\\n\", smb_errstr(buf[5], EXTRACT_LE_16BITS(&buf[7]))));",
          "",
          "[Added Lines]",
          "832:      nterror = EXTRACT_LE_32BITS(buf + 5);",
          "837:      ND_PRINT((ndo, \"SMBError = %s\\n\", smb_errstr(buf[5], EXTRACT_LE_16BITS(buf + 7))));",
          "",
          "---------------"
        ],
        "print-sunatm.c||print-sunatm.c": [
          "File: print-sunatm.c -> print-sunatm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "96:   break;",
          "97:  }",
          "100:  vpi = p[VPI_POS];",
          "102:  p += PKT_BEGIN_POS;",
          "",
          "[Removed Lines]",
          "99:  vci = EXTRACT_BE_16BITS(&p[VCI_POS]);",
          "",
          "[Added Lines]",
          "99:  vci = EXTRACT_BE_16BITS(p + VCI_POS);",
          "",
          "---------------"
        ],
        "print-vrrp.c||print-vrrp.c": [
          "File: print-vrrp.c -> print-vrrp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:    vec[0].len = len;",
          "145:    if (in_cksum(vec, 1))",
          "146:     ND_PRINT((ndo, \", (bad vrrp cksum %x)\",",
          "148:   }",
          "150:   if (version == 3 && ND_TTEST2(bp[0], len)) {",
          "",
          "[Removed Lines]",
          "147:      EXTRACT_BE_16BITS(&bp[6])));",
          "",
          "[Added Lines]",
          "147:      EXTRACT_BE_16BITS(bp + 6)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "152:     len, len, IPPROTO_VRRP);",
          "153:    if (cksum)",
          "154:     ND_PRINT((ndo, \", (bad vrrp cksum %x)\",",
          "156:   }",
          "158:   ND_PRINT((ndo, \", addrs\"));",
          "",
          "[Removed Lines]",
          "155:      EXTRACT_BE_16BITS(&bp[6])));",
          "",
          "[Added Lines]",
          "155:      EXTRACT_BE_16BITS(bp + 6)));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b4503d7c317c170842c487f852dc4dcd63eff084",
      "candidate_info": {
        "commit_hash": "b4503d7c317c170842c487f852dc4dcd63eff084",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/b4503d7c317c170842c487f852dc4dcd63eff084",
        "files": [
          "print-pim.c",
          "tests/heapoverflow-in_checksum.out",
          "tests/hoobr_pimv1.out",
          "tests/pim_header_asan-2.out",
          "tests/pim_header_asan-3.out",
          "tests/pim_header_asan-4.out",
          "tests/pim_header_asan.out",
          "tests/pimv2-oobr-1.out",
          "tests/pimv2-oobr-3.out"
        ],
        "message": "Add more nd_print_trunc() calls\n\nUpdate the output of some tests accordingly.\n\nMoreover:\nAdd a ndo_protocol assignment in pimv2_print().",
        "before_after_code_files": [
          "print-pim.c||print-pim.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-pim.c||print-pim.c"
          ],
          "candidate": [
            "print-pim.c||print-pim.c"
          ]
        }
      },
      "candidate_diff": {
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "244:  }",
          "245:  return;",
          "246: trunc:",
          "248:  return;",
          "249: }",
          "",
          "[Removed Lines]",
          "247:  ND_PRINT(\"[|pim]\");",
          "",
          "[Added Lines]",
          "247:  nd_print_trunc(ndo);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "333:  return;",
          "335: trunc:",
          "337:  return;",
          "338: }",
          "",
          "[Removed Lines]",
          "336:  ND_PRINT(\"[|pim]\");",
          "",
          "[Added Lines]",
          "336:  nd_print_trunc(ndo);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "452:  return;",
          "454: trunc:",
          "456:  return;",
          "457: }",
          "",
          "[Removed Lines]",
          "455:  ND_PRINT(\"[|autorp]\");",
          "",
          "[Added Lines]",
          "455:  nd_print_trunc(ndo);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "495:  return;",
          "497: trunc:",
          "499:  return;",
          "500: }",
          "",
          "[Removed Lines]",
          "498:  ND_PRINT(\"[|pim]\");",
          "",
          "[Added Lines]",
          "498:  nd_print_trunc(ndo);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "708:  u_int pim_typever;",
          "709:  u_int pimv2_addr_len;",
          "711:  if (len < 2)",
          "712:   goto trunc;",
          "713:  ND_TCHECK_1(pim->pim_rsv);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "711:  ndo->ndo_protocol = \"pimv2\";",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1198:  return;",
          "1200: trunc:",
          "1202: }",
          "",
          "[Removed Lines]",
          "1201:  ND_PRINT(\"[|pim]\");",
          "",
          "[Added Lines]",
          "1202:  nd_print_trunc(ndo);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1a90fd99d279d63242419a30ba3e0720872bff75",
      "candidate_info": {
        "commit_hash": "1a90fd99d279d63242419a30ba3e0720872bff75",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/1a90fd99d279d63242419a30ba3e0720872bff75",
        "files": [
          "print-802_11.c",
          "print-atm.c",
          "print-babel.c",
          "print-bfd.c",
          "print-bgp.c",
          "print-carp.c",
          "print-cdp.c",
          "print-dhcp6.c",
          "print-hncp.c",
          "print-icmp6.c",
          "print-ip.c",
          "print-ip6opts.c",
          "print-isakmp.c",
          "print-juniper.c",
          "print-l2tp.c",
          "print-llc.c",
          "print-lldp.c",
          "print-mobility.c",
          "print-pim.c",
          "print-radius.c",
          "print-sl.c",
          "print-smb.c",
          "print-stp.c",
          "print-sunatm.c",
          "print-tcp.c",
          "print-vrrp.c"
        ],
        "message": "Use more the EXTRACT_U_1() macro (28/n)\n\nIn ND_PRINT() macro call(s) (step 7).\n\np[n] ...",
        "before_after_code_files": [
          "print-802_11.c||print-802_11.c",
          "print-atm.c||print-atm.c",
          "print-babel.c||print-babel.c",
          "print-bfd.c||print-bfd.c",
          "print-bgp.c||print-bgp.c",
          "print-carp.c||print-carp.c",
          "print-cdp.c||print-cdp.c",
          "print-dhcp6.c||print-dhcp6.c",
          "print-hncp.c||print-hncp.c",
          "print-icmp6.c||print-icmp6.c",
          "print-ip.c||print-ip.c",
          "print-ip6opts.c||print-ip6opts.c",
          "print-isakmp.c||print-isakmp.c",
          "print-juniper.c||print-juniper.c",
          "print-l2tp.c||print-l2tp.c",
          "print-llc.c||print-llc.c",
          "print-lldp.c||print-lldp.c",
          "print-mobility.c||print-mobility.c",
          "print-pim.c||print-pim.c",
          "print-radius.c||print-radius.c",
          "print-sl.c||print-sl.c",
          "print-smb.c||print-smb.c",
          "print-stp.c||print-stp.c",
          "print-sunatm.c||print-sunatm.c",
          "print-tcp.c||print-tcp.c",
          "print-vrrp.c||print-vrrp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-pim.c||print-pim.c"
          ],
          "candidate": [
            "print-pim.c||print-pim.c"
          ]
        }
      },
      "candidate_diff": {
        "print-802_11.c||print-802_11.c": [
          "File: print-802_11.c -> print-802_11.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1590:   ND_PRINT((ndo, \" (%s): \", etheraddr_string(ndo, src)));",
          "1591:  }",
          "1592:  switch (p[0]) {",
          "1596:  case 3: ND_PRINT((ndo, \"BA \")); PRINT_BA_ACTION(p[1]); break;",
          "1597:  case 7: ND_PRINT((ndo, \"HT \")); PRINT_HT_ACTION(p[1]); break;",
          "1598:  case 13: ND_PRINT((ndo, \"MeshAction \")); PRINT_MESH_ACTION(p[1]); break;",
          "",
          "[Removed Lines]",
          "1593:  case 0: ND_PRINT((ndo, \"Spectrum Management Act#%d\", p[1])); break;",
          "1594:  case 1: ND_PRINT((ndo, \"QoS Act#%d\", p[1])); break;",
          "1595:  case 2: ND_PRINT((ndo, \"DLS Act#%d\", p[1])); break;",
          "",
          "[Added Lines]",
          "1593:  case 0: ND_PRINT((ndo, \"Spectrum Management Act#%d\", EXTRACT_U_1(p + 1))); break;",
          "1594:  case 1: ND_PRINT((ndo, \"QoS Act#%d\", EXTRACT_U_1(p + 1))); break;",
          "1595:  case 2: ND_PRINT((ndo, \"DLS Act#%d\", EXTRACT_U_1(p + 1))); break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1602:  case 15:",
          "1603:   ND_PRINT((ndo, \"SelfprotectAction \"));",
          "1604:   PRINT_SELFPROT_ACTION(p[1]); break;",
          "1606:  default:",
          "1608:   break;",
          "1609:  }",
          "1610:  return 1;",
          "",
          "[Removed Lines]",
          "1605:  case 127: ND_PRINT((ndo, \"Vendor Act#%d\", p[1])); break;",
          "1607:   ND_PRINT((ndo, \"Reserved(%d) Act#%d\", p[0], p[1]));",
          "",
          "[Added Lines]",
          "1605:  case 127: ND_PRINT((ndo, \"Vendor Act#%d\", EXTRACT_U_1(p + 1))); break;",
          "1607:   ND_PRINT((ndo, \"Reserved(%d) Act#%d\", EXTRACT_U_1(p), EXTRACT_U_1(p + 1)));",
          "",
          "---------------"
        ],
        "print-atm.c||print-atm.c": [
          "File: print-atm.c -> print-atm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "370:   ND_PRINT((ndo, \"CALL_REF:0x%06x\", call_ref));",
          "371:  } else {",
          "374:  }",
          "375:  return;",
          "",
          "[Removed Lines]",
          "373:   ND_PRINT((ndo, \"SSCOP, proto %d \", p[PROTO_POS]));",
          "",
          "[Added Lines]",
          "373:   ND_PRINT((ndo, \"SSCOP, proto %d \", EXTRACT_U_1(p + PROTO_POS)));",
          "",
          "---------------"
        ],
        "print-babel.c||print-babel.c": [
          "File: print-babel.c -> print-babel.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:         ND_PRINT((ndo, \" invalid header\"));",
          "58:         return;",
          "59:     } else {",
          "61:     }",
          "63:     switch(cp[1]) {",
          "",
          "[Removed Lines]",
          "60:         ND_PRINT((ndo, \" %d\", cp[1]));",
          "",
          "[Added Lines]",
          "60:         ND_PRINT((ndo, \" %d\", EXTRACT_U_1(cp + 1)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "487:                     ND_PRINT((ndo, \"/truncated\"));",
          "488:                 else",
          "489:                     ND_PRINT((ndo, \"%s%s%s\",",
          "493:             } else {",
          "494:                 u_short interval, seqno, metric;",
          "495:                 u_char plen;",
          "",
          "[Removed Lines]",
          "490:                            (message[3] & 0x80) ? \"/prefix\": \"\",",
          "491:                            (message[3] & 0x40) ? \"/id\" : \"\",",
          "492:                            (message[3] & 0x3f) ? \"/unknown\" : \"\"));",
          "",
          "[Added Lines]",
          "490:                            (EXTRACT_U_1(message + 3) & 0x80) ? \"/prefix\": \"\",",
          "491:                            (EXTRACT_U_1(message + 3) & 0x40) ? \"/id\" : \"\",",
          "492:                            (EXTRACT_U_1(message + 3) & 0x3f) ? \"/unknown\" : \"\"));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "507:                 seqno = EXTRACT_BE_U_2(message + 8);",
          "508:                 metric = EXTRACT_BE_U_2(message + 10);",
          "509:                 ND_PRINT((ndo, \"%s%s%s %s metric %u seqno %u interval %s\",",
          "513:                        format_prefix(ndo, prefix, plen),",
          "514:                        metric, seqno, format_interval_update(interval)));",
          "515:                 if(message[3] & 0x80) {",
          "",
          "[Removed Lines]",
          "510:                        (message[3] & 0x80) ? \"/prefix\": \"\",",
          "511:                        (message[3] & 0x40) ? \"/id\" : \"\",",
          "512:                        (message[3] & 0x3f) ? \"/unknown\" : \"\",",
          "",
          "[Added Lines]",
          "510:                        (EXTRACT_U_1(message + 3) & 0x80) ? \"/prefix\": \"\",",
          "511:                        (EXTRACT_U_1(message + 3) & 0x40) ? \"/id\" : \"\",",
          "512:                        (EXTRACT_U_1(message + 3) & 0x3f) ? \"/unknown\" : \"\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "538:                                     message + 4, NULL, len - 2, prefix);",
          "539:                 if(rc < 0) goto invalid;",
          "540:                 ND_PRINT((ndo, \"for %s\",",
          "542:             }",
          "543:         }",
          "544:             break;",
          "",
          "[Removed Lines]",
          "541:                        message[2] == 0 ? \"any\" : format_prefix(ndo, prefix, plen)));",
          "",
          "[Added Lines]",
          "541:                        EXTRACT_U_1(message + 2) == 0 ? \"any\" : format_prefix(ndo, prefix, plen)));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "558:                 if(rc < 0) goto invalid;",
          "559:                 plen = message[3] + (message[2] == 1 ? 96 : 0);",
          "560:                 ND_PRINT((ndo, \"(%u hops) for %s seqno %u id %s\",",
          "562:                        seqno, format_id(message + 8)));",
          "563:             }",
          "564:         }",
          "",
          "[Removed Lines]",
          "561:                        message[6], format_prefix(ndo, prefix, plen),",
          "",
          "[Added Lines]",
          "561:                        EXTRACT_U_1(message + 6), format_prefix(ndo, prefix, plen),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "582:                 if(len < 18) goto invalid;",
          "583:                 ND_PRINT((ndo, \"key-id %u digest-%u \", EXTRACT_BE_U_2(message + 2), len - 2));",
          "584:                 for (j = 0; j < len - 2; j++)",
          "586:             }",
          "587:         }",
          "588:             break;",
          "",
          "[Removed Lines]",
          "585:                     ND_PRINT((ndo, \"%02X\", message[4 + j]));",
          "",
          "[Added Lines]",
          "585:                     ND_PRINT((ndo, \"%02X\", EXTRACT_U_1(message + j + 4)));",
          "",
          "---------------"
        ],
        "print-bfd.c||print-bfd.c": [
          "File: print-bfd.c -> print-bfd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "248:                 ND_TCHECK2(*pptr, AUTH_MD5_HASH_LEN);",
          "249:                 ND_PRINT((ndo, \"\\n\\t  Digest: \"));",
          "250:                 for(i = 0; i < AUTH_MD5_HASH_LEN; i++)",
          "252:                 break;",
          "253:             case AUTH_SHA1:",
          "254:             case AUTH_MET_SHA1:",
          "",
          "[Removed Lines]",
          "251:                     ND_PRINT((ndo, \"%02x\", pptr[i]));",
          "",
          "[Added Lines]",
          "251:                     ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(pptr + i)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "279:                 ND_TCHECK2(*pptr, AUTH_SHA1_HASH_LEN);",
          "280:                 ND_PRINT((ndo, \"\\n\\t  Hash: \"));",
          "281:                 for(i = 0; i < AUTH_SHA1_HASH_LEN; i++)",
          "283:                 break;",
          "284:         }",
          "285:         return 0;",
          "",
          "[Removed Lines]",
          "282:                     ND_PRINT((ndo, \"%02x\", pptr[i]));",
          "",
          "[Added Lines]",
          "282:                     ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(pptr + i)));",
          "",
          "---------------"
        ],
        "print-bgp.c||print-bgp.c": [
          "File: print-bgp.c -> print-bgp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1743:    ND_PRINT((ndo, \"\\n\\t    %u SNPA\", snpa));",
          "1744:    for (/*nothing*/; snpa > 0; snpa--) {",
          "1745:     ND_TCHECK(tptr[0]);",
          "1747:     tptr += tptr[0] + 1;",
          "1748:    }",
          "1749:   } else {",
          "",
          "[Removed Lines]",
          "1746:     ND_PRINT((ndo, \"\\n\\t      %d bytes\", tptr[0]));",
          "",
          "[Added Lines]",
          "1746:     ND_PRINT((ndo, \"\\n\\t      %d bytes\", EXTRACT_U_1(tptr)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2361:                            EXTRACT_BE_U_2(opt + i + 2),",
          "2362:                            tok2str(bgp_safi_values, \"Unknown\",",
          "2363:                                       EXTRACT_U_1(opt + i + 5)),",
          "2365:                     break;",
          "2366:                 case BGP_CAPCODE_RESTART:",
          "2367:                     ND_PRINT((ndo, \"\\n\\t\\tRestart Flags: [%s], Restart Time %us\",",
          "2369:                            EXTRACT_BE_U_2(opt + i + 2)&0xfff));",
          "2370:                     tcap_len-=2;",
          "2371:                     cap_offset=4;",
          "",
          "[Removed Lines]",
          "2364:                            opt[i+5]));",
          "2368:                            ((opt[i+2])&0x80) ? \"R\" : \"none\",",
          "",
          "[Added Lines]",
          "2364:                            EXTRACT_U_1(opt + i + 5)));",
          "2368:                            ((EXTRACT_U_1(opt + i + 2))&0x80) ? \"R\" : \"none\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2376:                                EXTRACT_BE_U_2(opt + i + cap_offset),",
          "2377:                                tok2str(bgp_safi_values,\"Unknown\",",
          "2378:                                           EXTRACT_U_1(opt + i + cap_offset + 2)),",
          "2381:                         tcap_len-=4;",
          "2382:                         cap_offset+=4;",
          "2383:                     }",
          "",
          "[Removed Lines]",
          "2379:                                opt[i+cap_offset+2],",
          "2380:                                ((opt[i+cap_offset+3])&0x80) ? \"yes\" : \"no\" ));",
          "",
          "[Added Lines]",
          "2379:                                EXTRACT_U_1(opt + (i + cap_offset + 2)),",
          "2380:                                ((EXTRACT_U_1(opt + (i + cap_offset + 3)))&0x80) ? \"yes\" : \"no\" ));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2411:                                   tok2str(af_values,\"Unknown\",EXTRACT_BE_U_2(opt + i + cap_offset)),",
          "2412:                                   EXTRACT_BE_U_2(opt + i + cap_offset),",
          "2413:                                   tok2str(bgp_safi_values,\"Unknown\",EXTRACT_U_1(opt + i + cap_offset + 2)),",
          "2415:                                   tok2str(bgp_add_path_recvsend,\"Bogus (0x%02x)\",EXTRACT_U_1(opt + i + cap_offset + 3))",
          "2416:                         ));",
          "2417:                         tcap_len-=4;",
          "",
          "[Removed Lines]",
          "2414:                                   opt[i+cap_offset+2],",
          "",
          "[Added Lines]",
          "2414:                                   EXTRACT_U_1(opt + (i + cap_offset + 2)),",
          "",
          "---------------"
        ],
        "print-carp.c||print-carp.c": [
          "File: print-carp.c -> print-carp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:  ND_TCHECK(bp[2]);",
          "67:  ND_TCHECK(bp[5]);",
          "68:  ND_PRINT((ndo, \"vhid=%d advbase=%d advskew=%d authlen=%d \",",
          "70:  if (ndo->ndo_vflag) {",
          "71:   struct cksum_vec vec[1];",
          "72:   vec[0].ptr = (const uint8_t *)bp;",
          "",
          "[Removed Lines]",
          "69:      bp[1], bp[5], bp[2], bp[3]));",
          "",
          "[Added Lines]",
          "69:      EXTRACT_U_1(bp + 1), EXTRACT_U_1(bp + 5), EXTRACT_U_1(bp + 2), EXTRACT_U_1(bp + 3)));",
          "",
          "---------------"
        ],
        "print-cdp.c||print-cdp.c": [
          "File: print-cdp.c -> print-cdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "381:  ND_PRINT((ndo, \" IPv4 Prefixes (%d):\", l / 5));",
          "383:  while (l > 0) {",
          "385:   l -= 5;",
          "386:   p += 5;",
          "387:  }",
          "",
          "[Removed Lines]",
          "384:   ND_PRINT((ndo, \" %u.%u.%u.%u/%u\", p[0], p[1], p[2], p[3], p[4]));",
          "",
          "[Added Lines]",
          "384:   ND_PRINT((ndo, \" %u.%u.%u.%u/%u\",",
          "385:      EXTRACT_U_1(p), EXTRACT_U_1(p + 1), EXTRACT_U_1(p + 2),",
          "386:      EXTRACT_U_1(p + 3), EXTRACT_U_1(p + 4)));",
          "",
          "---------------"
        ],
        "print-dhcp6.c||print-dhcp6.c": [
          "File: print-dhcp6.c -> print-dhcp6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "325:          EXTRACT_BE_U_2(tp + 2),",
          "326:          EXTRACT_BE_U_4(tp + 4)));",
          "327:      for (i = 8; i < optlen; i++)",
          "330:      ND_PRINT((ndo, \")\"));",
          "331:     } else {",
          "",
          "[Removed Lines]",
          "328:       ND_PRINT((ndo, \"%02x\", tp[i]));",
          "",
          "[Added Lines]",
          "328:       ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(tp + i)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "337:     if (optlen >= 2 + 8) {",
          "338:      ND_PRINT((ndo, \" vid \"));",
          "339:      for (i = 2; i < 2 + 8; i++)",
          "342:      ND_PRINT((ndo, \")\"));",
          "343:     } else {",
          "",
          "[Removed Lines]",
          "340:       ND_PRINT((ndo, \"%02x\", tp[i]));",
          "",
          "[Added Lines]",
          "340:       ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(tp + i)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "350:      ND_PRINT((ndo, \" hwaddr type %u \",",
          "351:          EXTRACT_BE_U_2(tp + 2)));",
          "352:      for (i = 4; i < optlen; i++)",
          "355:      ND_PRINT((ndo, \")\"));",
          "356:     } else {",
          "",
          "[Removed Lines]",
          "353:       ND_PRINT((ndo, \"%02x\", tp[i]));",
          "",
          "[Added Lines]",
          "353:       ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(tp + i)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "521:    tp = (const u_char *)(dh6o + 1);",
          "522:    ND_PRINT((ndo, \" \"));",
          "523:    for (i = 0; i < optlen && i < 10; i++)",
          "525:    ND_PRINT((ndo, \"...)\"));",
          "526:    break;",
          "527:   case DH6OPT_RECONF_MSG:",
          "",
          "[Removed Lines]",
          "524:     ND_PRINT((ndo, \"%02x\", tp[i]));",
          "",
          "[Added Lines]",
          "524:     ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(tp + i)));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "617:     break;",
          "618:    }",
          "619:    tp = (const u_char *)(dh6o + 1);",
          "621:    ND_PRINT((ndo, \" pltime:%u vltime:%u\",",
          "622:        EXTRACT_BE_U_4(tp),",
          "623:        EXTRACT_BE_U_4(tp + 4)));",
          "",
          "[Removed Lines]",
          "620:    ND_PRINT((ndo, \" %s/%d\", ip6addr_string(ndo, tp + 9), tp[8]));",
          "",
          "[Added Lines]",
          "620:    ND_PRINT((ndo, \" %s/%d\", ip6addr_string(ndo, tp + 9), EXTRACT_U_1(tp + 8)));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "649:    for (i = 4; i < optlen && i < 14; i++)",
          "651:    ND_PRINT((ndo, \"...)\"));",
          "652:    break;",
          "653:   case DH6OPT_LQ_QUERY:",
          "",
          "[Removed Lines]",
          "650:     ND_PRINT((ndo, \"%02x\", tp[i]));",
          "",
          "[Added Lines]",
          "650:     ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(tp + i)));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "696:    for (i = 16; i < optlen && i < 26; i++)",
          "698:    ND_PRINT((ndo, \"...)\"));",
          "699:    break;",
          "700:   case DH6OPT_NTP_SERVER:",
          "",
          "[Removed Lines]",
          "697:     ND_PRINT((ndo, \"%02x\", tp[i]));",
          "",
          "[Added Lines]",
          "697:     ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(tp + i)));",
          "",
          "---------------"
        ],
        "print-hncp.c||print-hncp.c": [
          "File: print-hncp.c -> print-hncp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "774:             ip_address = format_ip6addr(ndo, value);",
          "775:             ND_PRINT((ndo, \" IP-Address: %s %c%c%c \",",
          "776:                 ip_address,",
          "780:             ));",
          "781:             len = print_dns_label(ndo, value+17, bodylen-17, 1);",
          "782:             if (len < 0) {",
          "",
          "[Removed Lines]",
          "777:                 (value[16] & 4) ? 'l' : '-',",
          "778:                 (value[16] & 2) ? 'b' : '-',",
          "779:                 (value[16] & 1) ? 's' : '-'",
          "",
          "[Added Lines]",
          "777:                 (EXTRACT_U_1(value + 16) & 4) ? 'l' : '-',",
          "778:                 (EXTRACT_U_1(value + 16) & 2) ? 'b' : '-',",
          "779:                 (EXTRACT_U_1(value + 16) & 1) ? 's' : '-'",
          "",
          "---------------"
        ],
        "print-icmp6.c||print-icmp6.c": [
          "File: print-icmp6.c -> print-icmp6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1495:   ND_PRINT((ndo,\" sflag\"));",
          "1496:  }",
          "1497:  if (bp[24] & 0x07) {",
          "1499:  }",
          "1500:  if (bp[25] < 128) {",
          "1501:   qqi = bp[25];",
          "",
          "[Removed Lines]",
          "1498:   ND_PRINT((ndo,\" robustness=%d\", bp[24] & 0x07));",
          "",
          "[Added Lines]",
          "1498:   ND_PRINT((ndo,\" robustness=%d\", EXTRACT_U_1(bp + 24) & 0x07));",
          "",
          "---------------"
        ],
        "print-ip.c||print-ip.c": [
          "File: print-ip.c -> print-ip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:  ND_TCHECK(cp[2]);",
          "71:  ptr = cp[2] - 1;",
          "72:  if (ptr < 3 || ((ptr + 1) & 3) || ptr > length + 1)",
          "75:  for (len = 3; len < length; len += 4) {",
          "76:   ND_TCHECK_4(cp + len);",
          "",
          "[Removed Lines]",
          "73:   ND_PRINT((ndo, \" [bad ptr %u]\", cp[2]));",
          "",
          "[Added Lines]",
          "73:   ND_PRINT((ndo, \" [bad ptr %u]\", EXTRACT_U_1(cp + 2)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "189:  ptr = cp[2] - 1;",
          "190:  len = 0;",
          "191:  if (ptr < 4 || ((ptr - 4) & (hoplen-1)) || ptr > length + 1)",
          "193:  ND_TCHECK(cp[3]);",
          "194:  switch (cp[3]&0xF) {",
          "195:  case IPOPT_TS_TSONLY:",
          "",
          "[Removed Lines]",
          "192:   ND_PRINT((ndo, \"[bad ptr %u]\", cp[2]));",
          "",
          "[Added Lines]",
          "192:   ND_PRINT((ndo, \"[bad ptr %u]\", EXTRACT_U_1(cp + 2)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "211:   ND_PRINT((ndo, \"PRESPEC\"));",
          "212:   break;",
          "213:  default:",
          "215:   goto done;",
          "216:  }",
          "",
          "[Removed Lines]",
          "214:   ND_PRINT((ndo, \"[bad ts type %d]\", cp[3]&0xF));",
          "",
          "[Added Lines]",
          "214:   ND_PRINT((ndo, \"[bad ts type %d]\", EXTRACT_U_1(cp + 3)&0xF));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "229:  ND_PRINT((ndo, \"%s\", ptr == len ? \" ^ \" : \"\"));",
          "231:  if (cp[3]>>4)",
          "233:  else",
          "234:   ND_PRINT((ndo, \"}\"));",
          "235:  return (0);",
          "",
          "[Removed Lines]",
          "232:   ND_PRINT((ndo, \" [%d hops not recorded]} \", cp[3]>>4));",
          "",
          "[Added Lines]",
          "232:   ND_PRINT((ndo, \" [%d hops not recorded]} \", EXTRACT_U_1(cp + 3)>>4));",
          "",
          "---------------"
        ],
        "print-ip6opts.c||print-ip6opts.c": [
          "File: print-ip6opts.c -> print-ip6opts.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:      break;",
          "73:  default:",
          "74:      if (len - i < IP6OPT_MINLEN) {",
          "76:   goto trunc;",
          "77:      }",
          "79:      break;",
          "80:  }",
          "81:     }",
          "",
          "[Removed Lines]",
          "75:   ND_PRINT((ndo, \", sopt_type %d: trunc)\", bp[i]));",
          "78:      ND_PRINT((ndo, \", sopt_type 0x%02x: len=%d\", bp[i], bp[i + 1]));",
          "",
          "[Added Lines]",
          "75:   ND_PRINT((ndo, \", sopt_type %d: trunc)\", EXTRACT_U_1(bp + i)));",
          "78:      ND_PRINT((ndo, \", sopt_type 0x%02x: len=%d\", EXTRACT_U_1(bp + i), EXTRACT_U_1(bp + i + 1)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "122:   goto trunc;",
          "123:      }",
          "124:      if (bp[i + 1] != IP6OPT_RTALERT_LEN - 2) {",
          "126:   goto trunc;",
          "127:      }",
          "128:      ND_PRINT((ndo, \"(rtalert: 0x%04x) \", EXTRACT_BE_U_2(bp + i + 2)));",
          "",
          "[Removed Lines]",
          "125:   ND_PRINT((ndo, \"(rtalert: invalid len %d)\", bp[i + 1]));",
          "",
          "[Added Lines]",
          "125:   ND_PRINT((ndo, \"(rtalert: invalid len %d)\", EXTRACT_U_1(bp + i + 1)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "133:   goto trunc;",
          "134:      }",
          "135:      if (bp[i + 1] != IP6OPT_JUMBO_LEN - 2) {",
          "137:   goto trunc;",
          "138:      }",
          "139:      ND_PRINT((ndo, \"(jumbo: %u) \", EXTRACT_BE_U_4(bp + i + 2)));",
          "",
          "[Removed Lines]",
          "136:   ND_PRINT((ndo, \"(jumbo: invalid len %d)\", bp[i + 1]));",
          "",
          "[Added Lines]",
          "136:   ND_PRINT((ndo, \"(jumbo: invalid len %d)\", EXTRACT_U_1(bp + i + 1)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "144:   goto trunc;",
          "145:      }",
          "146:      if (bp[i + 1] < IP6OPT_HOMEADDR_MINLEN - 2) {",
          "148:   goto trunc;",
          "149:      }",
          "150:      ND_PRINT((ndo, \"(homeaddr: %s\", ip6addr_string(ndo, bp + i + 2)));",
          "",
          "[Removed Lines]",
          "147:   ND_PRINT((ndo, \"(homeaddr: invalid len %d)\", bp[i + 1]));",
          "",
          "[Added Lines]",
          "147:   ND_PRINT((ndo, \"(homeaddr: invalid len %d)\", EXTRACT_U_1(bp + i + 1)));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "156:      break;",
          "157:  default:",
          "158:      if (len - i < IP6OPT_MINLEN) {",
          "160:   goto trunc;",
          "161:      }",
          "163:      break;",
          "164:  }",
          "165:     }",
          "",
          "[Removed Lines]",
          "159:   ND_PRINT((ndo, \"(type %d: trunc)\", bp[i]));",
          "162:      ND_PRINT((ndo, \"(opt_type 0x%02x: len=%d)\", bp[i], bp[i + 1]));",
          "",
          "[Added Lines]",
          "159:   ND_PRINT((ndo, \"(type %d: trunc)\", EXTRACT_U_1(bp + i)));",
          "162:      ND_PRINT((ndo, \"(opt_type 0x%02x: len=%d)\", EXTRACT_U_1(bp + i), EXTRACT_U_1(bp + i + 1)));",
          "",
          "---------------"
        ],
        "print-isakmp.c||print-isakmp.c": [
          "File: print-isakmp.c -> print-isakmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1421:     mask = data + sizeof(struct in_addr);",
          "1422:     ND_PRINT((ndo,\" len=%d %s/%u.%u.%u.%u\", len,",
          "1423:        ipaddr_string(ndo, data),",
          "1425:    }",
          "1426:    len = 0;",
          "1427:    break;",
          "",
          "[Removed Lines]",
          "1424:        mask[0], mask[1], mask[2], mask[3]));",
          "",
          "[Added Lines]",
          "1424:        EXTRACT_U_1(mask), EXTRACT_U_1(mask + 1),",
          "1425:        EXTRACT_U_1(mask + 2), EXTRACT_U_1(mask + 3)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1444:     ND_PRINT((ndo,\" len=%d %s/0x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x\", len,",
          "1445:        ip6addr_string(ndo, data),",
          "1450:    }",
          "1451:    len = 0;",
          "1452:    break;",
          "",
          "[Removed Lines]",
          "1446:        mask[0], mask[1], mask[2], mask[3],",
          "1447:        mask[4], mask[5], mask[6], mask[7],",
          "1448:        mask[8], mask[9], mask[10], mask[11],",
          "1449:        mask[12], mask[13], mask[14], mask[15]));",
          "",
          "[Added Lines]",
          "1447:        EXTRACT_U_1(mask), EXTRACT_U_1(mask + 1), EXTRACT_U_1(mask + 2), EXTRACT_U_1(mask + 3),",
          "1448:        EXTRACT_U_1(mask + 4), EXTRACT_U_1(mask + 5), EXTRACT_U_1(mask + 6), EXTRACT_U_1(mask + 7),",
          "1449:        EXTRACT_U_1(mask + 8), EXTRACT_U_1(mask + 9), EXTRACT_U_1(mask + 10), EXTRACT_U_1(mask + 11),",
          "1450:        EXTRACT_U_1(mask + 12), EXTRACT_U_1(mask + 13), EXTRACT_U_1(mask + 14), EXTRACT_U_1(mask + 15)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2603:  len = ntohs(e.len) - 4;",
          "2604:  ND_TCHECK2(*vid, len);",
          "2605:  for(i=0; i<len; i++) {",
          "2607:   else ND_PRINT((ndo, \".\"));",
          "2608:  }",
          "2609:  if (2 < ndo->ndo_vflag && 4 < len) {",
          "",
          "[Removed Lines]",
          "2606:   if(ND_ISPRINT(vid[i])) ND_PRINT((ndo, \"%c\", vid[i]));",
          "",
          "[Added Lines]",
          "2607:   if(ND_ISPRINT(vid[i])) ND_PRINT((ndo, \"%c\", EXTRACT_U_1(vid + i)));",
          "",
          "---------------"
        ],
        "print-juniper.c||print-juniper.c": [
          "File: print-juniper.c -> print-juniper.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1362:                     ND_PRINT((ndo, \", cookie 0x\"));",
          "1363:                 for (idx = 0; idx < l2info->cookie_len; idx++) {",
          "1366:                 }",
          "1367:             }",
          "",
          "[Removed Lines]",
          "1365:                     if (ndo->ndo_eflag) ND_PRINT((ndo, \"%02x\", p[idx]));",
          "",
          "[Added Lines]",
          "1365:                     if (ndo->ndo_eflag) ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(p + idx)));",
          "",
          "---------------"
        ],
        "print-l2tp.c||print-l2tp.c": [
          "File: print-l2tp.c -> print-l2tp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "396:   return;",
          "397:  }",
          "398:  print_16bits_val(ndo, (const uint16_t *)dat);",
          "400:  dat += 3;",
          "401:  length -= 3;",
          "402:  if (length != 0) {",
          "",
          "[Removed Lines]",
          "399:  ND_PRINT((ndo, \", %02x\", dat[2]));",
          "",
          "[Added Lines]",
          "399:  ND_PRINT((ndo, \", %02x\", EXTRACT_U_1(dat + 2)));",
          "",
          "---------------"
        ],
        "print-llc.c||print-llc.c": [
          "File: print-llc.c -> print-llc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "378:      if (caplen > 0)",
          "379:       ND_DEFAULTPRINT((const u_char *)p, caplen);",
          "380:     } else",
          "382:     return (hdrlen);",
          "383:    }",
          "384:   }",
          "",
          "[Removed Lines]",
          "381:      ND_PRINT((ndo, \": %02x %02x\", p[1], p[2]));",
          "",
          "[Added Lines]",
          "381:      ND_PRINT((ndo, \": %02x %02x\",",
          "382:         EXTRACT_U_1(p + 1),",
          "383:         EXTRACT_U_1(p + 2)));",
          "",
          "---------------"
        ],
        "print-lldp.c||print-lldp.c": [
          "File: print-lldp.c -> print-lldp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "617:     ND_PRINT((ndo, \"\\n\\t    Priority Assignment Table\"));",
          "618:     ND_PRINT((ndo, \"\\n\\t     Priority : 0   1   2   3   4   5   6   7\"));",
          "619:     ND_PRINT((ndo, \"\\n\\t     Value    : %-3d %-3d %-3d %-3d %-3d %-3d %-3d %-3d\",",
          "622: }",
          "624: static void",
          "",
          "[Removed Lines]",
          "620:             ptr[0]>>4,ptr[0]&0x0f,ptr[1]>>4,ptr[1]&0x0f,ptr[2]>>4,",
          "621:             ptr[2] & 0x0f, ptr[3] >> 4, ptr[3] & 0x0f));",
          "",
          "[Added Lines]",
          "620:               EXTRACT_U_1(ptr) >> 4, EXTRACT_U_1(ptr) & 0x0f,",
          "621:               EXTRACT_U_1(ptr + 1) >> 4, EXTRACT_U_1(ptr + 1) & 0x0f,",
          "622:               EXTRACT_U_1(ptr + 2) >> 4, EXTRACT_U_1(ptr + 2) & 0x0f,",
          "623:               EXTRACT_U_1(ptr + 3) >> 4, EXTRACT_U_1(ptr + 3) & 0x0f));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "628:     ND_PRINT((ndo, \"\\n\\t    TC Bandwidth Table\"));",
          "629:     ND_PRINT((ndo, \"\\n\\t     TC%%   : 0   1   2   3   4   5   6   7\"));",
          "630:     ND_PRINT((ndo, \"\\n\\t     Value : %-3d %-3d %-3d %-3d %-3d %-3d %-3d %-3d\",",
          "632: }",
          "634: static void",
          "",
          "[Removed Lines]",
          "631:              ptr[0], ptr[1], ptr[2], ptr[3], ptr[4], ptr[5], ptr[6], ptr[7]));",
          "",
          "[Added Lines]",
          "633:               EXTRACT_U_1(ptr), EXTRACT_U_1(ptr + 1), EXTRACT_U_1(ptr + 2),",
          "634:               EXTRACT_U_1(ptr + 3), EXTRACT_U_1(ptr + 4), EXTRACT_U_1(ptr + 5),",
          "635:               EXTRACT_U_1(ptr + 6), EXTRACT_U_1(ptr + 7)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "638:     ND_PRINT((ndo, \"\\n\\t    TSA Assignment Table\"));",
          "639:     ND_PRINT((ndo, \"\\n\\t     Traffic Class: 0   1   2   3   4   5   6   7\"));",
          "640:     ND_PRINT((ndo, \"\\n\\t     Value        : %-3d %-3d %-3d %-3d %-3d %-3d %-3d %-3d\",",
          "642: }",
          "",
          "[Removed Lines]",
          "641:              ptr[0], ptr[1], ptr[2], ptr[3], ptr[4], ptr[5], ptr[6], ptr[7]));",
          "",
          "[Added Lines]",
          "645:               EXTRACT_U_1(ptr), EXTRACT_U_1(ptr + 1), EXTRACT_U_1(ptr + 2),",
          "646:               EXTRACT_U_1(ptr + 3), EXTRACT_U_1(ptr + 4), EXTRACT_U_1(ptr + 5),",
          "647:               EXTRACT_U_1(ptr + 6), EXTRACT_U_1(ptr + 7)));",
          "",
          "---------------"
        ],
        "print-mobility.c||print-mobility.c": [
          "File: print-mobility.c -> print-mobility.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "182:    break;",
          "183:   default:",
          "184:    if (len - i < IP6MOPT_MINLEN) {",
          "186:     goto trunc;",
          "187:    }",
          "189:    break;",
          "190:   }",
          "191:  }",
          "",
          "[Removed Lines]",
          "185:     ND_PRINT((ndo, \"(sopt_type %u: trunc)\", bp[i]));",
          "188:    ND_PRINT((ndo, \"(type-0x%02x: len=%u)\", bp[i], bp[i + 1]));",
          "",
          "[Added Lines]",
          "185:     ND_PRINT((ndo, \"(sopt_type %u: trunc)\", EXTRACT_U_1(bp + i)));",
          "188:    ND_PRINT((ndo, \"(type-0x%02x: len=%u)\", EXTRACT_U_1(bp + i), EXTRACT_U_1(bp + i + 1)));",
          "",
          "---------------"
        ],
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "158:    unsigned_relts_print(ndo, hold);",
          "159:   }",
          "160:   ND_PRINT((ndo, \"%s (%s/%d, %s\", njoin ? \"Join\" : \"Prune\",",
          "162:   ipaddr_string(ndo, bp + 12)));",
          "163:   if (EXTRACT_BE_U_4(bp + 16) != 0xffffffff)",
          "164:    ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, bp + 16)));",
          "165:   ND_PRINT((ndo, \") %s%s %s\",",
          "169:   return;",
          "170:  }",
          "",
          "[Removed Lines]",
          "161:   ipaddr_string(ndo, bp + 26), bp[25] & 0x3f,",
          "166:       (bp[24] & 0x01) ? \"Sparse\" : \"Dense\",",
          "167:       (bp[25] & 0x80) ? \" WC\" : \"\",",
          "168:       (bp[25] & 0x40) ? \"RP\" : \"SPT\"));",
          "",
          "[Added Lines]",
          "161:   ipaddr_string(ndo, bp + 26), EXTRACT_U_1(bp + 25) & 0x3f,",
          "166:       (EXTRACT_U_1(bp + 24) & 0x01) ? \"Sparse\" : \"Dense\",",
          "167:       (EXTRACT_U_1(bp + 25) & 0x80) ? \" WC\" : \"\",",
          "168:       (EXTRACT_U_1(bp + 25) & 0x40) ? \"RP\" : \"SPT\"));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "232:     goto trunc;",
          "233:    ND_TCHECK_6(bp);",
          "234:    ND_PRINT((ndo, \"\\n\\t%s %s%s%s%s/%d\", type,",
          "238:        ipaddr_string(ndo, bp + 2),",
          "240:    bp += 6;",
          "241:    len -= 6;",
          "242:   }",
          "",
          "[Removed Lines]",
          "235:        (bp[0] & 0x01) ? \"Sparse \" : \"Dense \",",
          "236:        (bp[1] & 0x80) ? \"WC \" : \"\",",
          "237:        (bp[1] & 0x40) ? \"RP \" : \"SPT \",",
          "239:        bp[1] & 0x3f));",
          "",
          "[Added Lines]",
          "235:        (EXTRACT_U_1(bp) & 0x01) ? \"Sparse \" : \"Dense \",",
          "236:        (EXTRACT_U_1(bp + 1) & 0x80) ? \"WC \" : \"\",",
          "237:        (EXTRACT_U_1(bp + 1) & 0x40) ? \"RP \" : \"SPT \",",
          "239:        EXTRACT_U_1(bp + 1) & 0x3f));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "271:     ND_PRINT((ndo, \" Sparse-Dense-mode\"));",
          "272:     break;",
          "273:    default:",
          "275:     break;",
          "276:    }",
          "277:   }",
          "",
          "[Removed Lines]",
          "274:     ND_PRINT((ndo, \" mode-%d\", bp[8] >> 4));",
          "",
          "[Added Lines]",
          "274:     ND_PRINT((ndo, \" mode-%d\", EXTRACT_U_1(bp + 8) >> 4));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "311:    ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, bp + 12)));",
          "312:   ND_TCHECK_4(bp + 24);",
          "313:   ND_PRINT((ndo, \" %s pref %d metric %d\",",
          "317:   break;",
          "318:  case PIMV1_TYPE_JOIN_PRUNE:",
          "319:  case PIMV1_TYPE_GRAFT:",
          "",
          "[Removed Lines]",
          "314:       (bp[20] & 0x80) ? \"RP-tree\" : \"SPT\",",
          "315:   EXTRACT_BE_U_4(bp + 20) & 0x7fffffff,",
          "316:   EXTRACT_BE_U_4(bp + 24)));",
          "",
          "[Added Lines]",
          "314:       (EXTRACT_U_1(bp + 20) & 0x80) ? \"RP-tree\" : \"SPT\",",
          "315:       EXTRACT_BE_U_4(bp + 20) & 0x7fffffff,",
          "316:       EXTRACT_BE_U_4(bp + 24)));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "327:  }",
          "328:  ND_TCHECK(bp[4]);",
          "329:  if ((bp[4] >> 4) != 1)",
          "331:  return;",
          "333: trunc:",
          "",
          "[Removed Lines]",
          "330:   ND_PRINT((ndo, \" [v%d]\", bp[4] >> 4));",
          "",
          "[Added Lines]",
          "330:   ND_PRINT((ndo, \" [v%d]\", EXTRACT_U_1(bp + 4) >> 4));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "418:    break;",
          "419:   }",
          "420:   if (bp[0] & 0xfc)",
          "422:   bp += 1;",
          "423:   len -= 1;",
          "424:   if (len < 1)",
          "",
          "[Removed Lines]",
          "421:    ND_PRINT((ndo, \" [rsvd=0x%02x]\", bp[0] & 0xfc));",
          "",
          "[Added Lines]",
          "421:    ND_PRINT((ndo, \" [rsvd=0x%02x]\", EXTRACT_U_1(bp) & 0xfc));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "432:    if (len < 6)",
          "433:     goto trunc;",
          "434:    ND_TCHECK_6(bp);",
          "437:    if (bp[0] & 0x02) {",
          "438:     ND_PRINT((ndo, \" bidir\"));",
          "439:    }",
          "440:    if (bp[0] & 0xfc) {",
          "442:    }",
          "443:    s = ',';",
          "444:    bp += 6; len -= 6;",
          "",
          "[Removed Lines]",
          "435:    ND_PRINT((ndo, \"%c%s%s/%d\", s, bp[0] & 1 ? \"!\" : \"\",",
          "436:              ipaddr_string(ndo, bp + 2), bp[1]));",
          "441:     ND_PRINT((ndo, \"[rsvd=0x%02x]\", bp[0] & 0xfc));",
          "",
          "[Added Lines]",
          "435:    ND_PRINT((ndo, \"%c%s%s/%d\", s, EXTRACT_U_1(bp) & 1 ? \"!\" : \"\",",
          "436:              ipaddr_string(ndo, bp + 2), EXTRACT_U_1(bp + 1)));",
          "441:     ND_PRINT((ndo, \"[rsvd=0x%02x]\", EXTRACT_U_1(bp) & 0xfc));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "622:    if (!silent) {",
          "623:     ND_PRINT((ndo, \"%s\", ipaddr_string(ndo, bp + 2)));",
          "624:     if (bp[1] != 32)",
          "626:    }",
          "627:   }",
          "628:   else if (af == AF_INET6) {",
          "629:    if (!silent) {",
          "630:     ND_PRINT((ndo, \"%s\", ip6addr_string(ndo, bp + 2)));",
          "631:     if (bp[1] != 128)",
          "633:    }",
          "634:   }",
          "635:   if (bp[0] && !silent) {",
          "636:    if (at == pimv2_group) {",
          "638:    } else {",
          "639:     ND_PRINT((ndo, \"(%s%s%s\",",
          "643:     if (bp[0] & 0xf8) {",
          "645:     }",
          "646:     ND_PRINT((ndo, \")\"));",
          "647:    }",
          "",
          "[Removed Lines]",
          "625:      ND_PRINT((ndo, \"/%u\", bp[1]));",
          "632:      ND_PRINT((ndo, \"/%u\", bp[1]));",
          "637:     ND_PRINT((ndo, \"(0x%02x)\", bp[0]));",
          "640:      bp[0] & 0x04 ? \"S\" : \"\",",
          "641:      bp[0] & 0x02 ? \"W\" : \"\",",
          "642:      bp[0] & 0x01 ? \"R\" : \"\"));",
          "644:      ND_PRINT((ndo, \"+0x%02x\", bp[0] & 0xf8));",
          "",
          "[Added Lines]",
          "625:      ND_PRINT((ndo, \"/%u\", EXTRACT_U_1(bp + 1)));",
          "632:      ND_PRINT((ndo, \"/%u\", EXTRACT_U_1(bp + 1)));",
          "637:     ND_PRINT((ndo, \"(0x%02x)\", EXTRACT_U_1(bp)));",
          "640:      EXTRACT_U_1(bp) & 0x04 ? \"S\" : \"\",",
          "641:      EXTRACT_U_1(bp) & 0x02 ? \"W\" : \"\",",
          "642:      EXTRACT_U_1(bp) & 0x01 ? \"R\" : \"\"));",
          "644:      ND_PRINT((ndo, \"+0x%02x\", EXTRACT_U_1(bp) & 0xf8));",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1029:   if (len < 1)",
          "1030:    goto trunc;",
          "1031:   ND_TCHECK(bp[0]);",
          "1033:   if (len < 2)",
          "1034:    goto trunc;",
          "1035:   ND_TCHECK(bp[2]);",
          "1037:   bp += 2;",
          "1038:   len -= 2;",
          "",
          "[Removed Lines]",
          "1032:   ND_PRINT((ndo, \" hashmlen=%d\", bp[0]));",
          "1036:   ND_PRINT((ndo, \" BSRprio=%d\", bp[1]));",
          "",
          "[Added Lines]",
          "1032:   ND_PRINT((ndo, \" hashmlen=%d\", EXTRACT_U_1(bp)));",
          "1036:   ND_PRINT((ndo, \" BSRprio=%d\", EXTRACT_U_1(bp + 1)));",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1056:    if (len < 1)",
          "1057:     goto trunc;",
          "1058:    ND_TCHECK(bp[0]);",
          "1060:    if (len < 2)",
          "1061:     goto trunc;",
          "1062:    ND_TCHECK(bp[1]);",
          "1064:    if (len < 4)",
          "1065:     goto trunc;",
          "1066:    bp += 4;",
          "",
          "[Removed Lines]",
          "1059:    ND_PRINT((ndo, \" RPcnt=%d\", bp[0]));",
          "1063:    ND_PRINT((ndo, \" FRPcnt=%d\", frpcnt = bp[1]));",
          "",
          "[Added Lines]",
          "1059:    ND_PRINT((ndo, \" RPcnt=%d\", EXTRACT_U_1(bp)));",
          "1063:    ND_PRINT((ndo, \" FRPcnt=%d\", frpcnt = EXTRACT_U_1(bp + 1)));",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1086:     if (len < 3)",
          "1087:      goto trunc;",
          "1088:     ND_TCHECK(bp[2]);",
          "1090:     if (len < 4)",
          "1091:      goto trunc;",
          "1092:     bp += 4;",
          "",
          "[Removed Lines]",
          "1089:     ND_PRINT((ndo, \",prio=%d\", bp[2]));",
          "",
          "[Added Lines]",
          "1089:     ND_PRINT((ndo, \",prio=%d\", EXTRACT_U_1(bp + 2)));",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1122:   if (len < 1)",
          "1123:    goto trunc;",
          "1124:   ND_TCHECK(bp[0]);",
          "1126:   pfxcnt = bp[0];",
          "1127:   if (len < 2)",
          "1128:    goto trunc;",
          "1129:   ND_TCHECK(bp[1]);",
          "1131:   if (len < 4)",
          "1132:    goto trunc;",
          "1133:   ND_TCHECK_2(bp + 2);",
          "",
          "[Removed Lines]",
          "1125:   ND_PRINT((ndo, \" prefix-cnt=%d\", bp[0]));",
          "1130:   ND_PRINT((ndo, \" prio=%d\", bp[1]));",
          "",
          "[Added Lines]",
          "1125:   ND_PRINT((ndo, \" prefix-cnt=%d\", EXTRACT_U_1(bp)));",
          "1130:   ND_PRINT((ndo, \" prio=%d\", EXTRACT_U_1(bp + 1)));",
          "",
          "---------------"
        ],
        "print-radius.c||print-radius.c": [
          "File: print-radius.c -> print-radius.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "909:    ND_TCHECK2(data[0], length);",
          "910:    if (data[1] > 128)",
          "911:    {",
          "913:       return;",
          "914:    }",
          "",
          "[Removed Lines]",
          "912:       ND_PRINT((ndo, \"ERROR: netmask %u not in range (0..128)\", data[1]));",
          "",
          "[Added Lines]",
          "912:       ND_PRINT((ndo, \"ERROR: netmask %u not in range (0..128)\", EXTRACT_U_1(data + 1)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "917:    if (length > 2)",
          "918:       memcpy(data2, data+2, length-2);",
          "922:    if (data[1] > 8 * (length - 2))",
          "923:       ND_PRINT((ndo, \" (inconsistent prefix length)\"));",
          "",
          "[Removed Lines]",
          "920:    ND_PRINT((ndo, \"%s/%u\", ip6addr_string(ndo, data2), data[1]));",
          "",
          "[Added Lines]",
          "920:    ND_PRINT((ndo, \"%s/%u\", ip6addr_string(ndo, data2), EXTRACT_U_1(data + 1)));",
          "",
          "---------------"
        ],
        "print-sl.c||print-sl.c": [
          "File: print-sl.c -> print-sl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:   register int i;",
          "153:   for (i = SLX_CHDR; i < SLX_CHDR + CHDR_LEN - 1; ++i)",
          "156:   return;",
          "157:  }",
          "158:  switch (p[SLX_CHDR] & 0xf0) {",
          "",
          "[Removed Lines]",
          "154:    ND_PRINT((ndo, \"%02x.\", p[i]));",
          "155:   ND_PRINT((ndo, \"%02x: \", p[SLX_CHDR + CHDR_LEN - 1]));",
          "",
          "[Added Lines]",
          "154:    ND_PRINT((ndo, \"%02x.\", EXTRACT_U_1(p + i)));",
          "155:   ND_PRINT((ndo, \"%02x: \", EXTRACT_U_1(p + SLX_CHDR + CHDR_LEN - 1)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "188:        length, dir);",
          "189:    ND_PRINT((ndo, \": \"));",
          "190:   } else",
          "192:  }",
          "193: }",
          "",
          "[Removed Lines]",
          "191:    ND_PRINT((ndo, \"slip-%d!: \", p[SLX_CHDR]));",
          "",
          "[Added Lines]",
          "191:    ND_PRINT((ndo, \"slip-%d!: \", EXTRACT_U_1(p + SLX_CHDR)));",
          "",
          "---------------"
        ],
        "print-smb.c||print-smb.c": [
          "File: print-smb.c -> print-smb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "837:      ND_PRINT((ndo, \"NTError = %s\\n\", nt_errstr(nterror)));",
          "838:     } else {",
          "839:  if (buf[5])",
          "841:     }",
          "843:     smboffset = 32;",
          "",
          "[Removed Lines]",
          "840:      ND_PRINT((ndo, \"SMBError = %s\\n\", smb_errstr(buf[5], EXTRACT_LE_U_2(buf + 7))));",
          "",
          "[Added Lines]",
          "840:      ND_PRINT((ndo, \"SMBError = %s\\n\", smb_errstr(EXTRACT_U_1(buf + 5),",
          "841:         EXTRACT_LE_U_2(buf + 7))));",
          "",
          "---------------"
        ],
        "print-stp.c||print-stp.c": [
          "File: print-stp.c -> print-stp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "304:            stp_print_bridge_id(ptr + MST_BPDU_CIST_BRIDGE_ID_OFFSET)));",
          "306:     ND_TCHECK(ptr[MST_BPDU_CIST_REMAIN_HOPS_OFFSET]);",
          "310:     ND_TCHECK_2(ptr + MST_BPDU_VER3_LEN_OFFSET);",
          "",
          "[Removed Lines]",
          "307:     ND_PRINT((ndo, \"CIST remaining-hops %d\", ptr[MST_BPDU_CIST_REMAIN_HOPS_OFFSET]));",
          "",
          "[Added Lines]",
          "307:     ND_PRINT((ndo, \"CIST remaining-hops %d\", EXTRACT_U_1(ptr + MST_BPDU_CIST_REMAIN_HOPS_OFFSET)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "321:             ND_PRINT((ndo, \"\\n\\tMSTI %d, Flags [%s], port-role %s\",",
          "322:                    msti, bittok2str(stp_bpdu_flag_values, \"none\", EXTRACT_U_1(ptr + offset)),",
          "323:                    tok2str(rstp_obj_port_role_values, \"Unknown\",",
          "325:             ND_PRINT((ndo, \"\\n\\t\\tMSTI regional-root-id %s, pathcost %u\",",
          "326:                    stp_print_bridge_id(ptr + offset +",
          "327:                                        MST_BPDU_MSTI_ROOT_PRIO_OFFSET),",
          "328:                    EXTRACT_BE_U_4(ptr + offset + MST_BPDU_MSTI_ROOT_PATH_COST_OFFSET)));",
          "329:             ND_PRINT((ndo, \"\\n\\t\\tMSTI bridge-prio %d, port-prio %d, hops %d\",",
          "334:             len -= MST_BPDU_MSTI_LENGTH;",
          "335:             offset += MST_BPDU_MSTI_LENGTH;",
          "",
          "[Removed Lines]",
          "324:                            RSTP_EXTRACT_PORT_ROLE(ptr[offset]))));",
          "330:                    ptr[offset + MST_BPDU_MSTI_BRIDGE_PRIO_OFFSET] >> 4,",
          "331:                    ptr[offset + MST_BPDU_MSTI_PORT_PRIO_OFFSET] >> 4,",
          "332:                    ptr[offset + MST_BPDU_MSTI_REMAIN_HOPS_OFFSET]));",
          "",
          "[Added Lines]",
          "324:                            RSTP_EXTRACT_PORT_ROLE(EXTRACT_U_1(ptr + offset)))));",
          "330:                    EXTRACT_U_1(ptr + offset + MST_BPDU_MSTI_BRIDGE_PRIO_OFFSET) >> 4,",
          "331:                    EXTRACT_U_1(ptr + offset + MST_BPDU_MSTI_PORT_PRIO_OFFSET) >> 4,",
          "332:                    EXTRACT_U_1(ptr + offset + MST_BPDU_MSTI_REMAIN_HOPS_OFFSET)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "373:             \"flag %d,\\n\\tRestricted role-flag: %d, Format id %d cap %d, \"",
          "374:             \"Convention id %d cap %d,\\n\\tEdge count %d, \"",
          "375:             \"Agreement digest %08x%08x%08x%08x%08x\\n\",",
          "384:             EXTRACT_BE_U_2(ptr + offset + SPB_BPDU_AGREEMENT_EDGE_OFFSET),",
          "385:             EXTRACT_BE_U_4(ptr + offset + SPB_BPDU_AGREEMENT_DIGEST_OFFSET),",
          "386:             EXTRACT_BE_U_4(ptr + offset + SPB_BPDU_AGREEMENT_DIGEST_OFFSET + 4),",
          "",
          "[Removed Lines]",
          "376:             ptr[offset + SPB_BPDU_AGREEMENT_OFFSET]>>6,",
          "377:             ptr[offset + SPB_BPDU_AGREEMENT_OFFSET]>>4 & 0x3,",
          "378:             ptr[offset + SPB_BPDU_AGREEMENT_OFFSET]>>3 & 0x1,",
          "379:             ptr[offset + SPB_BPDU_AGREEMENT_OFFSET]>>2 & 0x1,",
          "380:             ptr[offset + SPB_BPDU_AGREEMENT_FORMAT_OFFSET]>>4,",
          "381:             ptr[offset + SPB_BPDU_AGREEMENT_FORMAT_OFFSET]&0x00ff,",
          "382:             ptr[offset + SPB_BPDU_AGREEMENT_CON_OFFSET]>>4,",
          "383:             ptr[offset + SPB_BPDU_AGREEMENT_CON_OFFSET]&0x00ff,",
          "",
          "[Added Lines]",
          "376:             EXTRACT_U_1(ptr + offset + SPB_BPDU_AGREEMENT_OFFSET)>>6,",
          "377:             EXTRACT_U_1(ptr + offset + SPB_BPDU_AGREEMENT_OFFSET)>>4 & 0x3,",
          "378:             EXTRACT_U_1(ptr + offset + SPB_BPDU_AGREEMENT_OFFSET)>>3 & 0x1,",
          "379:             EXTRACT_U_1(ptr + offset + SPB_BPDU_AGREEMENT_OFFSET)>>2 & 0x1,",
          "380:             EXTRACT_U_1(ptr + offset + SPB_BPDU_AGREEMENT_FORMAT_OFFSET)>>4,",
          "381:             EXTRACT_U_1(ptr + offset + SPB_BPDU_AGREEMENT_FORMAT_OFFSET)&0x00ff,",
          "382:             EXTRACT_U_1(ptr + offset + SPB_BPDU_AGREEMENT_CON_OFFSET)>>4,",
          "383:             EXTRACT_U_1(ptr + offset + SPB_BPDU_AGREEMENT_CON_OFFSET)&0x00ff,",
          "",
          "---------------"
        ],
        "print-sunatm.c||print-sunatm.c": [
          "File: print-sunatm.c -> print-sunatm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:  }",
          "80:  if (ndo->ndo_eflag) {",
          "82:  }",
          "84:  switch (p[DIR_POS] & 0x0f) {",
          "",
          "[Removed Lines]",
          "81:   ND_PRINT((ndo, p[DIR_POS] & 0x80 ? \"Tx: \" : \"Rx: \"));",
          "",
          "[Added Lines]",
          "81:   ND_PRINT((ndo, EXTRACT_U_1(p + DIR_POS) & 0x80 ? \"Tx: \" : \"Rx: \"));",
          "",
          "---------------"
        ],
        "print-tcp.c||print-tcp.c": [
          "File: print-tcp.c -> print-tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "531:                                 case CANT_CHECK_SIGNATURE:",
          "532:                                         ND_PRINT((ndo, \"can't check - \"));",
          "533:                                         for (i = 0; i < TCP_SIGLEN; ++i)",
          "535:                                         break;",
          "536:                                 }",
          "537: #else",
          "538:                                 for (i = 0; i < TCP_SIGLEN; ++i)",
          "540: #endif",
          "541:                                 break;",
          "543:                         case TCPOPT_SCPS:",
          "544:                                 datalen = 2;",
          "545:                                 LENCHECK(datalen);",
          "547:                                 break;",
          "549:                         case TCPOPT_TCPAO:",
          "",
          "[Removed Lines]",
          "534:                                                 ND_PRINT((ndo, \"%02x\", cp[i]));",
          "539:                                         ND_PRINT((ndo, \"%02x\", cp[i]));",
          "546:                                 ND_PRINT((ndo, \" cap %02x id %u\", cp[0], cp[1]));",
          "",
          "[Added Lines]",
          "534:                                                 ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(cp + i)));",
          "539:                                         ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(cp + i)));",
          "546:                                 ND_PRINT((ndo, \" cap %02x id %u\", EXTRACT_U_1(cp), EXTRACT_U_1(cp + 1)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "557:                                         ND_PRINT((ndo, \" invalid\"));",
          "558:                                 } else {",
          "559:                                         LENCHECK(1);",
          "561:                                         LENCHECK(2);",
          "563:                                         if (datalen > 2) {",
          "564:                                                 ND_PRINT((ndo, \" mac 0x\"));",
          "565:                                                 for (i = 2; i < datalen; i++) {",
          "566:                                                         LENCHECK(i + 1);",
          "568:                                                 }",
          "569:                                         }",
          "570:                                 }",
          "",
          "[Removed Lines]",
          "560:                                         ND_PRINT((ndo, \" keyid %u\", cp[0]));",
          "562:                                         ND_PRINT((ndo, \" rnextkeyid %u\", cp[1]));",
          "567:                                                         ND_PRINT((ndo, \"%02x\", cp[i]));",
          "",
          "[Added Lines]",
          "560:                                         ND_PRINT((ndo, \" keyid %u\", EXTRACT_U_1(cp)));",
          "562:                                         ND_PRINT((ndo, \" rnextkeyid %u\", EXTRACT_U_1(cp + 1)));",
          "567:                                                         ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(cp + i)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "633:                                         ND_PRINT((ndo, \" 0x\"));",
          "634:                                 for (i = 0; i < datalen; ++i) {",
          "635:                                         LENCHECK(i + 1);",
          "637:                                 }",
          "638:                                 break;",
          "639:                         }",
          "",
          "[Removed Lines]",
          "636:                                         ND_PRINT((ndo, \"%02x\", cp[i]));",
          "",
          "[Added Lines]",
          "636:                                         ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(cp + i)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "829:                 } else {",
          "830:                         ND_PRINT((ndo, \" cookie \"));",
          "831:                         for (i = 0; i < datalen; ++i)",
          "833:                 }",
          "834:         }",
          "835: }",
          "",
          "[Removed Lines]",
          "832:                                 ND_PRINT((ndo, \"%02x\", cp[i]));",
          "",
          "[Added Lines]",
          "832:                                 ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(cp + i)));",
          "",
          "---------------"
        ],
        "print-vrrp.c||print-vrrp.c": [
          "File: print-vrrp.c -> print-vrrp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:  if (version < 2 || version > 3 || type != VRRP_TYPE_ADVERTISEMENT)",
          "121:   return;",
          "122:  ND_TCHECK(bp[2]);",
          "124:  ND_TCHECK(bp[5]);",
          "126:  if (version == 2) {",
          "127:   auth_type = bp[4];",
          "128:   ND_PRINT((ndo, \", authtype %s\", tok2str(auth2str, NULL, auth_type)));",
          "131:   uint16_t intvl = (bp[4] & 0x0f) << 8 | bp[5];",
          "132:   ND_PRINT((ndo, \", intvl %ucs, length %u\", intvl, len));",
          "",
          "[Removed Lines]",
          "123:  ND_PRINT((ndo, \", vrid %u, prio %u\", bp[1], bp[2]));",
          "129:   ND_PRINT((ndo, \", intvl %us, length %u\", bp[5], len));",
          "",
          "[Added Lines]",
          "123:  ND_PRINT((ndo, \", vrid %u, prio %u\", EXTRACT_U_1(bp + 1), EXTRACT_U_1(bp + 2)));",
          "129:   ND_PRINT((ndo, \", intvl %us, length %u\", EXTRACT_U_1(bp + 5), len));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6fca58f5f9c96749a575f52e20598ad43f5bdf30",
      "candidate_info": {
        "commit_hash": "6fca58f5f9c96749a575f52e20598ad43f5bdf30",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/6fca58f5f9c96749a575f52e20598ad43f5bdf30",
        "files": [
          "print-pim.c",
          "tests/TESTLIST",
          "tests/pimv2-oobr-1.out",
          "tests/pimv2-oobr-1.pcap",
          "tests/pimv2-oobr-2.out",
          "tests/pimv2-oobr-2.pcap",
          "tests/pimv2-oobr-3.out",
          "tests/pimv2-oobr-3.pcap",
          "tests/pimv2-oobr-4.out",
          "tests/pimv2-oobr-4.pcap"
        ],
        "message": "CVE-2017-12996/PIMv2: Make sure PIM TLVs have the right length.\n\nWe do bounds checks based on the TLV length, so if the TLV's length is\ntoo short, and we don't check for that, we could end up fetching data\npast the end of the TLV - including past the length of the captured data\nin the packet.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd tests using the capture files supplied by the reporter(s).",
        "before_after_code_files": [
          "print-pim.c||print-pim.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-pim.c||print-pim.c"
          ],
          "candidate": [
            "print-pim.c||print-pim.c"
          ]
        }
      },
      "candidate_diff": {
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "731:    switch (otype) {",
          "732:    case PIMV2_HELLO_OPTION_HOLDTIME:",
          "734:     break;",
          "736:    case PIMV2_HELLO_OPTION_LANPRUNEDELAY:",
          "",
          "[Removed Lines]",
          "733:     unsigned_relts_print(ndo, EXTRACT_16BITS(bp));",
          "",
          "[Added Lines]",
          "733:     if (olen != 2) {",
          "734:      ND_PRINT((ndo, \"ERROR: Option Length != 2 Bytes (%u)\", olen));",
          "735:     } else {",
          "736:      unsigned_relts_print(ndo, EXTRACT_16BITS(bp));",
          "737:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "764:     break;",
          "766:    case PIMV2_HELLO_OPTION_GENID:",
          "768:     break;",
          "770:    case PIMV2_HELLO_OPTION_REFRESH_CAP:",
          "778:     }",
          "779:     break;",
          "",
          "[Removed Lines]",
          "767:     ND_PRINT((ndo, \"0x%08x\", EXTRACT_32BITS(bp)));",
          "771:     ND_PRINT((ndo, \"v%d\", *bp));",
          "772:     if (*(bp+1) != 0) {",
          "773:      ND_PRINT((ndo, \", interval \"));",
          "774:      unsigned_relts_print(ndo, *(bp+1));",
          "775:     }",
          "776:     if (EXTRACT_16BITS(bp+2) != 0) {",
          "777:      ND_PRINT((ndo, \" ?0x%04x?\", EXTRACT_16BITS(bp+2)));",
          "",
          "[Added Lines]",
          "771:     if (olen != 4) {",
          "772:      ND_PRINT((ndo, \"ERROR: Option Length != 4 Bytes (%u)\", olen));",
          "773:     } else {",
          "774:      ND_PRINT((ndo, \"0x%08x\", EXTRACT_32BITS(bp)));",
          "775:     }",
          "779:     if (olen != 4) {",
          "780:      ND_PRINT((ndo, \"ERROR: Option Length != 4 Bytes (%u)\", olen));",
          "781:     } else {",
          "782:      ND_PRINT((ndo, \"v%d\", *bp));",
          "783:      if (*(bp+1) != 0) {",
          "784:       ND_PRINT((ndo, \", interval \"));",
          "785:       unsigned_relts_print(ndo, *(bp+1));",
          "786:      }",
          "787:      if (EXTRACT_16BITS(bp+2) != 0) {",
          "788:       ND_PRINT((ndo, \" ?0x%04x?\", EXTRACT_16BITS(bp+2)));",
          "789:      }",
          "",
          "---------------"
        ]
      }
    }
  ]
}