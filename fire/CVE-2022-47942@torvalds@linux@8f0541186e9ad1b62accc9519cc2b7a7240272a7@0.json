{
  "cve_id": "CVE-2022-47942",
  "cve_desc": "An issue was discovered in ksmbd in the Linux kernel 5.15 through 5.19 before 5.19.2. There is a heap-based buffer overflow in set_ntacl_dacl, related to use of SMB2_QUERY_INFO_HE after a malformed SMB2_SET_INFO_HE command.",
  "repo": "torvalds/linux",
  "patch_hash": "8f0541186e9ad1b62accc9519cc2b7a7240272a7",
  "patch_info": {
    "commit_hash": "8f0541186e9ad1b62accc9519cc2b7a7240272a7",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/8f0541186e9ad1b62accc9519cc2b7a7240272a7",
    "files": [
      "fs/ksmbd/smb2pdu.c",
      "fs/ksmbd/smbacl.c",
      "fs/ksmbd/smbacl.h",
      "fs/ksmbd/vfs.c"
    ],
    "message": "ksmbd: fix heap-based overflow in set_ntacl_dacl()\n\nThe testcase use SMB2_SET_INFO_HE command to set a malformed file attribute\nunder the label `security.NTACL`. SMB2_QUERY_INFO_HE command in testcase\ntrigger the following overflow.\n\n[ 4712.003781] ==================================================================\n[ 4712.003790] BUG: KASAN: slab-out-of-bounds in build_sec_desc+0x842/0x1dd0 [ksmbd]\n[ 4712.003807] Write of size 1060 at addr ffff88801e34c068 by task kworker/0:0/4190\n\n[ 4712.003813] CPU: 0 PID: 4190 Comm: kworker/0:0 Not tainted 5.19.0-rc5 #1\n[ 4712.003850] Workqueue: ksmbd-io handle_ksmbd_work [ksmbd]\n[ 4712.003867] Call Trace:\n[ 4712.003870]  <TASK>\n[ 4712.003873]  dump_stack_lvl+0x49/0x5f\n[ 4712.003935]  print_report.cold+0x5e/0x5cf\n[ 4712.003972]  ? ksmbd_vfs_get_sd_xattr+0x16d/0x500 [ksmbd]\n[ 4712.003984]  ? cmp_map_id+0x200/0x200\n[ 4712.003988]  ? build_sec_desc+0x842/0x1dd0 [ksmbd]\n[ 4712.004000]  kasan_report+0xaa/0x120\n[ 4712.004045]  ? build_sec_desc+0x842/0x1dd0 [ksmbd]\n[ 4712.004056]  kasan_check_range+0x100/0x1e0\n[ 4712.004060]  memcpy+0x3c/0x60\n[ 4712.004064]  build_sec_desc+0x842/0x1dd0 [ksmbd]\n[ 4712.004076]  ? parse_sec_desc+0x580/0x580 [ksmbd]\n[ 4712.004088]  ? ksmbd_acls_fattr+0x281/0x410 [ksmbd]\n[ 4712.004099]  smb2_query_info+0xa8f/0x6110 [ksmbd]\n[ 4712.004111]  ? psi_group_change+0x856/0xd70\n[ 4712.004148]  ? update_load_avg+0x1c3/0x1af0\n[ 4712.004152]  ? asym_cpu_capacity_scan+0x5d0/0x5d0\n[ 4712.004157]  ? xas_load+0x23/0x300\n[ 4712.004162]  ? smb2_query_dir+0x1530/0x1530 [ksmbd]\n[ 4712.004173]  ? _raw_spin_lock_bh+0xe0/0xe0\n[ 4712.004179]  handle_ksmbd_work+0x30e/0x1020 [ksmbd]\n[ 4712.004192]  process_one_work+0x778/0x11c0\n[ 4712.004227]  ? _raw_spin_lock_irq+0x8e/0xe0\n[ 4712.004231]  worker_thread+0x544/0x1180\n[ 4712.004234]  ? __cpuidle_text_end+0x4/0x4\n[ 4712.004239]  kthread+0x282/0x320\n[ 4712.004243]  ? process_one_work+0x11c0/0x11c0\n[ 4712.004246]  ? kthread_complete_and_exit+0x30/0x30\n[ 4712.004282]  ret_from_fork+0x1f/0x30\n\nThis patch add the buffer validation for security descriptor that is\nstored by malformed SMB2_SET_INFO_HE command. and allocate large\nresponse buffer about SMB2_O_INFO_SECURITY file info class.\n\nFixes: e2f34481b24d (\"cifsd: add server-side procedures for SMB3\")\nCc: stable@vger.kernel.org\nReported-by: zdi-disclosures@trendmicro.com # ZDI-CAN-17771\nReviewed-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
    "before_after_code_files": [
      "fs/ksmbd/smb2pdu.c||fs/ksmbd/smb2pdu.c",
      "fs/ksmbd/smbacl.c||fs/ksmbd/smbacl.c",
      "fs/ksmbd/smbacl.h||fs/ksmbd/smbacl.h",
      "fs/ksmbd/vfs.c||fs/ksmbd/vfs.c"
    ]
  },
  "patch_diff": {
    "fs/ksmbd/smb2pdu.c||fs/ksmbd/smb2pdu.c": [
      "File: fs/ksmbd/smb2pdu.c -> fs/ksmbd/smb2pdu.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "535:   struct smb2_query_info_req *req;",
      "537:   req = smb2_get_msg(work->request_buf);",
      "541:    sz = large_sz;",
      "542:  }",
      "",
      "[Removed Lines]",
      "538:   if (req->InfoType == SMB2_O_INFO_FILE &&",
      "539:       (req->FileInfoClass == FILE_FULL_EA_INFORMATION ||",
      "540:        req->FileInfoClass == FILE_ALL_INFORMATION))",
      "",
      "[Added Lines]",
      "538:   if ((req->InfoType == SMB2_O_INFO_FILE &&",
      "539:        (req->FileInfoClass == FILE_FULL_EA_INFORMATION ||",
      "540:        req->FileInfoClass == FILE_ALL_INFORMATION)) ||",
      "541:       req->InfoType == SMB2_O_INFO_SECURITY)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2988:       goto err_out;",
      "2990:      rc = build_sec_desc(user_ns,",
      "2992:            OWNER_SECINFO |",
      "2993:            GROUP_SECINFO |",
      "2994:            DACL_SECINFO,",
      "",
      "[Removed Lines]",
      "2991:            pntsd, NULL,",
      "",
      "[Added Lines]",
      "2992:            pntsd, NULL, 0,",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3833:  return 0;",
      "3834: }",
      "3836: static int smb2_calc_max_out_buf_len(struct ksmbd_work *work,",
      "3837:          unsigned short hdr2_len,",
      "3838:          unsigned int out_buf_len)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3837: static int smb2_resp_buf_len(struct ksmbd_work *work, unsigned short hdr2_len)",
      "3838: {",
      "3839:  int free_len;",
      "3841:  free_len = (int)(work->response_sz -",
      "3842:   (get_rfc1002_len(work->response_buf) + 4)) - hdr2_len;",
      "3843:  return free_len;",
      "3844: }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "3842:  if (out_buf_len > work->conn->vals->max_trans_size)",
      "3843:   return -EINVAL;",
      "3848:  if (free_len < 0)",
      "3849:   return -EINVAL;",
      "",
      "[Removed Lines]",
      "3845:  free_len = (int)(work->response_sz -",
      "3846:     (get_rfc1002_len(work->response_buf) + 4)) -",
      "3847:   hdr2_len;",
      "",
      "[Added Lines]",
      "3855:  free_len = smb2_resp_buf_len(work, hdr2_len);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "5107:  struct smb_ntsd *pntsd = (struct smb_ntsd *)rsp->Buffer, *ppntsd = NULL;",
      "5108:  struct smb_fattr fattr = {{0}};",
      "5109:  struct inode *inode;",
      "5111:  unsigned int id = KSMBD_NO_FID, pid = KSMBD_NO_FID;",
      "5112:  int addition_info = le32_to_cpu(req->AdditionalInformation);",
      "5115:  if (addition_info & ~(OWNER_SECINFO | GROUP_SECINFO | DACL_SECINFO |",
      "5116:          PROTECTED_DACL_SECINFO |",
      "",
      "[Removed Lines]",
      "5110:  __u32 secdesclen;",
      "5113:  int rc;",
      "",
      "[Added Lines]",
      "5118:  __u32 secdesclen = 0;",
      "5121:  int rc = 0, ppntsd_size = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "5157:  if (test_share_config_flag(work->tcon->share_conf,",
      "5158:        KSMBD_SHARE_FLAG_ACL_XATTR))",
      "5164:  posix_acl_release(fattr.cf_acls);",
      "5165:  posix_acl_release(fattr.cf_dacls);",
      "5166:  kfree(ppntsd);",
      "",
      "[Removed Lines]",
      "5159:   ksmbd_vfs_get_sd_xattr(work->conn, user_ns,",
      "5160:            fp->filp->f_path.dentry, &ppntsd);",
      "5162:  rc = build_sec_desc(user_ns, pntsd, ppntsd, addition_info,",
      "5163:        &secdesclen, &fattr);",
      "",
      "[Added Lines]",
      "5167:   ppntsd_size = ksmbd_vfs_get_sd_xattr(work->conn, user_ns,",
      "5168:            fp->filp->f_path.dentry,",
      "5169:            &ppntsd);",
      "5172:  if (smb2_resp_buf_len(work, 8) > ppntsd_size)",
      "5173:   rc = build_sec_desc(user_ns, pntsd, ppntsd, ppntsd_size,",
      "5174:         addition_info, &secdesclen, &fattr);",
      "",
      "---------------"
    ],
    "fs/ksmbd/smbacl.c||fs/ksmbd/smbacl.c": [
      "File: fs/ksmbd/smbacl.c -> fs/ksmbd/smbacl.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "690: static void set_ntacl_dacl(struct user_namespace *user_ns,",
      "691:       struct smb_acl *pndacl,",
      "692:       struct smb_acl *nt_dacl,",
      "693:       const struct smb_sid *pownersid,",
      "694:       const struct smb_sid *pgrpsid,",
      "695:       struct smb_fattr *fattr)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "693:       unsigned int aces_size,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "703:  if (nt_num_aces) {",
      "704:   ntace = (struct smb_ace *)((char *)nt_dacl + sizeof(struct smb_acl));",
      "705:   for (i = 0; i < nt_num_aces; i++) {",
      "709:    num_aces++;",
      "710:   }",
      "711:  }",
      "",
      "[Removed Lines]",
      "706:    memcpy((char *)pndace + size, ntace, le16_to_cpu(ntace->size));",
      "707:    size += le16_to_cpu(ntace->size);",
      "708:    ntace = (struct smb_ace *)((char *)ntace + le16_to_cpu(ntace->size));",
      "",
      "[Added Lines]",
      "707:    unsigned short nt_ace_size;",
      "709:    if (offsetof(struct smb_ace, access_req) > aces_size)",
      "710:     break;",
      "712:    nt_ace_size = le16_to_cpu(ntace->size);",
      "713:    if (nt_ace_size > aces_size)",
      "714:     break;",
      "716:    memcpy((char *)pndace + size, ntace, nt_ace_size);",
      "717:    size += nt_ace_size;",
      "718:    aces_size -= nt_ace_size;",
      "719:    ntace = (struct smb_ace *)((char *)ntace + nt_ace_size);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "879: int build_sec_desc(struct user_namespace *user_ns,",
      "880:      struct smb_ntsd *pntsd, struct smb_ntsd *ppntsd,",
      "882:      struct smb_fattr *fattr)",
      "883: {",
      "884:  int rc = 0;",
      "",
      "[Removed Lines]",
      "881:      int addition_info, __u32 *secdesclen,",
      "",
      "[Added Lines]",
      "892:      int ppntsd_size, int addition_info, __u32 *secdesclen,",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "939:   if (!ppntsd) {",
      "940:    set_mode_dacl(user_ns, dacl_ptr, fattr);",
      "943:   } else {",
      "944:    struct smb_acl *ppdacl_ptr;",
      "948:    set_ntacl_dacl(user_ns, dacl_ptr, ppdacl_ptr,",
      "950:   }",
      "951:   pntsd->dacloffset = cpu_to_le32(offset);",
      "952:   offset += le16_to_cpu(dacl_ptr->size);",
      "",
      "[Removed Lines]",
      "941:   } else if (!ppntsd->dacloffset) {",
      "942:    goto out;",
      "946:    ppdacl_ptr = (struct smb_acl *)((char *)ppntsd +",
      "947:       le32_to_cpu(ppntsd->dacloffset));",
      "949:            nowner_sid_ptr, ngroup_sid_ptr, fattr);",
      "",
      "[Added Lines]",
      "954:    unsigned int dacl_offset = le32_to_cpu(ppntsd->dacloffset);",
      "955:    int ppdacl_size, ntacl_size = ppntsd_size - dacl_offset;",
      "957:    if (!dacl_offset ||",
      "958:        (dacl_offset + sizeof(struct smb_acl) > ppntsd_size))",
      "959:     goto out;",
      "961:    ppdacl_ptr = (struct smb_acl *)((char *)ppntsd + dacl_offset);",
      "962:    ppdacl_size = le16_to_cpu(ppdacl_ptr->size);",
      "963:    if (ppdacl_size > ntacl_size ||",
      "964:        ppdacl_size < sizeof(struct smb_acl))",
      "965:     goto out;",
      "968:            ntacl_size - sizeof(struct smb_acl),",
      "969:            nowner_sid_ptr, ngroup_sid_ptr,",
      "970:            fattr);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "980:  struct smb_sid owner_sid, group_sid;",
      "981:  struct dentry *parent = path->dentry->d_parent;",
      "982:  struct user_namespace *user_ns = mnt_user_ns(path->mnt);",
      "985:  char *aces_base;",
      "986:  bool is_dir = S_ISDIR(d_inode(path->dentry)->i_mode);",
      "991:   return -ENOENT;",
      "992:  dacloffset = le32_to_cpu(parent_pntsd->dacloffset);",
      "994:   rc = -EINVAL;",
      "995:   goto free_parent_pntsd;",
      "996:  }",
      "998:  parent_pdacl = (struct smb_acl *)((char *)parent_pntsd + dacloffset);",
      "999:  num_aces = le32_to_cpu(parent_pdacl->num_aces);",
      "1000:  pntsd_type = le16_to_cpu(parent_pntsd->type);",
      "1002:  aces_base = kmalloc(sizeof(struct smb_ace) * num_aces * 2, GFP_KERNEL);",
      "1003:  if (!aces_base) {",
      "",
      "[Removed Lines]",
      "983:  int inherited_flags = 0, flags = 0, i, ace_cnt = 0, nt_size = 0;",
      "984:  int rc = 0, num_aces, dacloffset, pntsd_type, acl_len;",
      "988:  acl_len = ksmbd_vfs_get_sd_xattr(conn, user_ns,",
      "989:       parent, &parent_pntsd);",
      "990:  if (acl_len <= 0)",
      "993:  if (!dacloffset) {",
      "",
      "[Added Lines]",
      "1004:  int inherited_flags = 0, flags = 0, i, ace_cnt = 0, nt_size = 0, pdacl_size;",
      "1005:  int rc = 0, num_aces, dacloffset, pntsd_type, pntsd_size, acl_len, aces_size;",
      "1009:  pntsd_size = ksmbd_vfs_get_sd_xattr(conn, user_ns,",
      "1010:          parent, &parent_pntsd);",
      "1011:  if (pntsd_size <= 0)",
      "1014:  if (!dacloffset || (dacloffset + sizeof(struct smb_acl) > pntsd_size)) {",
      "1020:  acl_len = pntsd_size - dacloffset;",
      "1023:  pdacl_size = le16_to_cpu(parent_pdacl->size);",
      "1025:  if (pdacl_size > acl_len || pdacl_size < sizeof(struct smb_acl)) {",
      "1026:   rc = -EINVAL;",
      "1027:   goto free_parent_pntsd;",
      "1028:  }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1008:  aces = (struct smb_ace *)aces_base;",
      "1009:  parent_aces = (struct smb_ace *)((char *)parent_pdacl +",
      "1010:    sizeof(struct smb_acl));",
      "1012:  if (pntsd_type & DACL_AUTO_INHERITED)",
      "1013:   inherited_flags = INHERITED_ACE;",
      "1015:  for (i = 0; i < num_aces; i++) {",
      "1016:   flags = parent_aces->flags;",
      "1017:   if (!smb_inherit_flags(flags, is_dir))",
      "1018:    goto pass;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1039:  aces_size = acl_len - sizeof(struct smb_acl);",
      "1045:   int pace_size;",
      "1047:   if (offsetof(struct smb_ace, access_req) > aces_size)",
      "1048:    break;",
      "1050:   pace_size = le16_to_cpu(parent_aces->size);",
      "1051:   if (pace_size > aces_size)",
      "1052:    break;",
      "1054:   aces_size -= pace_size;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1057:   aces = (struct smb_ace *)((char *)aces + le16_to_cpu(aces->size));",
      "1058:   ace_cnt++;",
      "1059: pass:",
      "1062:  }",
      "1064:  if (nt_size > 0) {",
      "",
      "[Removed Lines]",
      "1060:   parent_aces =",
      "1061:    (struct smb_ace *)((char *)parent_aces + le16_to_cpu(parent_aces->size));",
      "",
      "[Added Lines]",
      "1100:   parent_aces = (struct smb_ace *)((char *)parent_aces + pace_size);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1153:  struct smb_ntsd *pntsd = NULL;",
      "1154:  struct smb_acl *pdacl;",
      "1155:  struct posix_acl *posix_acls;",
      "1157:  struct smb_sid sid;",
      "1158:  int granted = le32_to_cpu(*pdaccess & ~FILE_MAXIMAL_ACCESS_LE);",
      "1159:  struct smb_ace *ace;",
      "",
      "[Removed Lines]",
      "1156:  int rc = 0, acl_size;",
      "",
      "[Added Lines]",
      "1195:  int rc = 0, pntsd_size, acl_size, aces_size, pdacl_size, dacl_offset;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1162:  struct smb_ace *others_ace = NULL;",
      "1163:  struct posix_acl_entry *pa_entry;",
      "1164:  unsigned int sid_type = SIDOWNER;",
      "1167:  ksmbd_debug(SMB, \"check permission using windows acl\\n\");",
      "1175:  pdacl = (struct smb_acl *)((char *)pntsd + le32_to_cpu(pntsd->dacloffset));",
      "1188:  if (!pdacl->num_aces) {",
      "1191:    rc = -EACCES;",
      "1192:    goto err_out;",
      "1193:   }",
      "1196:  }",
      "1198:  if (*pdaccess & FILE_MAXIMAL_ACCESS_LE) {",
      "",
      "[Removed Lines]",
      "1165:  char *end_of_acl;",
      "1168:  acl_size = ksmbd_vfs_get_sd_xattr(conn, user_ns,",
      "1169:        path->dentry, &pntsd);",
      "1170:  if (acl_size <= 0 || !pntsd || !pntsd->dacloffset) {",
      "1171:   kfree(pntsd);",
      "1172:   return 0;",
      "1173:  }",
      "1176:  end_of_acl = ((char *)pntsd) + acl_size;",
      "1177:  if (end_of_acl <= (char *)pdacl) {",
      "1178:   kfree(pntsd);",
      "1179:   return 0;",
      "1180:  }",
      "1182:  if (end_of_acl < (char *)pdacl + le16_to_cpu(pdacl->size) ||",
      "1183:      le16_to_cpu(pdacl->size) < sizeof(struct smb_acl)) {",
      "1184:   kfree(pntsd);",
      "1185:   return 0;",
      "1186:  }",
      "1189:   if (!(le16_to_cpu(pdacl->size) - sizeof(struct smb_acl)) &&",
      "1194:   kfree(pntsd);",
      "1195:   return 0;",
      "",
      "[Added Lines]",
      "1204:  unsigned short ace_size;",
      "1207:  pntsd_size = ksmbd_vfs_get_sd_xattr(conn, user_ns,",
      "1208:          path->dentry, &pntsd);",
      "1209:  if (pntsd_size <= 0 || !pntsd)",
      "1210:   goto err_out;",
      "1212:  dacl_offset = le32_to_cpu(pntsd->dacloffset);",
      "1213:  if (!dacl_offset ||",
      "1214:      (dacl_offset + sizeof(struct smb_acl) > pntsd_size))",
      "1215:   goto err_out;",
      "1218:  acl_size = pntsd_size - dacl_offset;",
      "1219:  pdacl_size = le16_to_cpu(pdacl->size);",
      "1221:  if (pdacl_size > acl_size || pdacl_size < sizeof(struct smb_acl))",
      "1222:   goto err_out;",
      "1225:   if (!(pdacl_size - sizeof(struct smb_acl)) &&",
      "1230:   goto err_out;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1200:    DELETE;",
      "1202:   ace = (struct smb_ace *)((char *)pdacl + sizeof(struct smb_acl));",
      "1203:   for (i = 0; i < le32_to_cpu(pdacl->num_aces); i++) {",
      "1204:    granted |= le32_to_cpu(ace->access_req);",
      "1205:    ace = (struct smb_ace *)((char *)ace + le16_to_cpu(ace->size));",
      "1208:   }",
      "1210:   if (!pdacl->num_aces)",
      "",
      "[Removed Lines]",
      "1206:    if (end_of_acl < (char *)ace)",
      "1207:     goto err_out;",
      "",
      "[Added Lines]",
      "1238:   aces_size = acl_size - sizeof(struct smb_acl);",
      "1240:    if (offsetof(struct smb_ace, access_req) > aces_size)",
      "1241:     break;",
      "1242:    ace_size = le16_to_cpu(ace->size);",
      "1243:    if (ace_size > aces_size)",
      "1244:     break;",
      "1245:    aces_size -= ace_size;",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1216:  id_to_sid(uid, sid_type, &sid);",
      "1218:  ace = (struct smb_ace *)((char *)pdacl + sizeof(struct smb_acl));",
      "1219:  for (i = 0; i < le32_to_cpu(pdacl->num_aces); i++) {",
      "1220:   if (!compare_sids(&sid, &ace->sid) ||",
      "1221:       !compare_sids(&sid_unix_NFS_mode, &ace->sid)) {",
      "1222:    found = 1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1259:  aces_size = acl_size - sizeof(struct smb_acl);",
      "1261:   if (offsetof(struct smb_ace, access_req) > aces_size)",
      "1262:    break;",
      "1263:   ace_size = le16_to_cpu(ace->size);",
      "1264:   if (ace_size > aces_size)",
      "1265:    break;",
      "1266:   aces_size -= ace_size;",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "1226:    others_ace = ace;",
      "1228:   ace = (struct smb_ace *)((char *)ace + le16_to_cpu(ace->size));",
      "1231:  }",
      "1233:  if (*pdaccess & FILE_MAXIMAL_ACCESS_LE && found) {",
      "",
      "[Removed Lines]",
      "1229:   if (end_of_acl < (char *)ace)",
      "1230:    goto err_out;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "fs/ksmbd/smbacl.h||fs/ksmbd/smbacl.h": [
      "File: fs/ksmbd/smbacl.h -> fs/ksmbd/smbacl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "193: int parse_sec_desc(struct user_namespace *user_ns, struct smb_ntsd *pntsd,",
      "194:      int acl_len, struct smb_fattr *fattr);",
      "195: int build_sec_desc(struct user_namespace *user_ns, struct smb_ntsd *pntsd,",
      "197:      __u32 *secdesclen, struct smb_fattr *fattr);",
      "198: int init_acl_state(struct posix_acl_state *state, int cnt);",
      "199: void free_acl_state(struct posix_acl_state *state);",
      "",
      "[Removed Lines]",
      "196:      struct smb_ntsd *ppntsd, int addition_info,",
      "",
      "[Added Lines]",
      "196:      struct smb_ntsd *ppntsd, int ppntsd_size, int addition_info,",
      "",
      "---------------"
    ],
    "fs/ksmbd/vfs.c||fs/ksmbd/vfs.c": [
      "File: fs/ksmbd/vfs.c -> fs/ksmbd/vfs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1539:  }",
      "1542:  (*pntsd)->osidoffset = cpu_to_le32(le32_to_cpu((*pntsd)->osidoffset) -",
      "1543:         NDR_NTSD_OFFSETOF);",
      "1544:  (*pntsd)->gsidoffset = cpu_to_le32(le32_to_cpu((*pntsd)->gsidoffset) -",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1542:  if (acl.sd_size < sizeof(struct smb_ntsd)) {",
      "1543:   pr_err(\"sd size is invalid\\n\");",
      "1544:   goto out_free;",
      "1545:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "40bf722f8064f50200b8c4f8946cd625b441dda9",
      "candidate_info": {
        "commit_hash": "40bf722f8064f50200b8c4f8946cd625b441dda9",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/40bf722f8064f50200b8c4f8946cd625b441dda9",
        "files": [
          "drivers/video/fbdev/i740fb.c"
        ],
        "message": "video: fbdev: i740fb: Check the argument of i740_calc_vclk()\n\nSince the user can control the arguments of the ioctl() from the user\nspace, under special arguments that may result in a divide-by-zero bug.\n\nIf the user provides an improper 'pixclock' value that makes the argumet\nof i740_calc_vclk() less than 'I740_RFREQ_FIX', it will cause a\ndivide-by-zero bug in:\n    drivers/video/fbdev/i740fb.c:353 p_best = min(15, ilog2(I740_MAX_VCO_FREQ / (freq / I740_RFREQ_FIX)));\n\nThe following log can reveal it:\n\ndivide error: 0000 [#1] PREEMPT SMP KASAN PTI\nRIP: 0010:i740_calc_vclk drivers/video/fbdev/i740fb.c:353 [inline]\nRIP: 0010:i740fb_decode_var drivers/video/fbdev/i740fb.c:646 [inline]\nRIP: 0010:i740fb_set_par+0x163f/0x3b70 drivers/video/fbdev/i740fb.c:742\nCall Trace:\n fb_set_var+0x604/0xeb0 drivers/video/fbdev/core/fbmem.c:1034\n do_fb_ioctl+0x234/0x670 drivers/video/fbdev/core/fbmem.c:1110\n fb_ioctl+0xdd/0x130 drivers/video/fbdev/core/fbmem.c:1189\n\nFix this by checking the argument of i740_calc_vclk() first.\n\nSigned-off-by: Zheyu Ma <zheyuma97@gmail.com>\nSigned-off-by: Helge Deller <deller@gmx.de>",
        "before_after_code_files": [
          "drivers/video/fbdev/i740fb.c||drivers/video/fbdev/i740fb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/video/fbdev/i740fb.c||drivers/video/fbdev/i740fb.c": [
          "File: drivers/video/fbdev/i740fb.c -> drivers/video/fbdev/i740fb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "400:  u32 xres, right, hslen, left, xtotal;",
          "401:  u32 yres, lower, vslen, upper, ytotal;",
          "402:  u32 vxres, xoffset, vyres, yoffset;",
          "404:  u8 r7;",
          "405:  int i;",
          "",
          "[Removed Lines]",
          "403:  u32 bpp, base, dacspeed24, mem;",
          "",
          "[Added Lines]",
          "403:  u32 bpp, base, dacspeed24, mem, freq;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "643:  par->atc[VGA_ATC_OVERSCAN] = 0;",
          "649:  par->misc |= 0x0C;",
          "",
          "[Removed Lines]",
          "646:  i740_calc_vclk((((u32)1e9) / var->pixclock) * (u32)(1e3), par);",
          "",
          "[Added Lines]",
          "646:  freq = (((u32)1e9) / var->pixclock) * (u32)(1e3);",
          "647:  if (freq < I740_RFREQ_FIX) {",
          "648:   fb_dbg(info, \"invalid pixclock\\n\");",
          "649:   freq = I740_RFREQ_FIX;",
          "650:  }",
          "651:  i740_calc_vclk(freq, par);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "541a1af451b0cb3779e915d48d08efb17915207b",
      "candidate_info": {
        "commit_hash": "541a1af451b0cb3779e915d48d08efb17915207b",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/541a1af451b0cb3779e915d48d08efb17915207b",
        "files": [
          "drivers/net/ethernet/intel/iavf/iavf_main.c"
        ],
        "message": "iavf: Fix NULL pointer dereference in iavf_get_link_ksettings\n\nFix possible NULL pointer dereference, due to freeing of adapter->vf_res\nin iavf_init_get_resources. Previous commit introduced a regression,\nwhere receiving IAVF_ERR_ADMIN_QUEUE_NO_WORK from iavf_get_vf_config\nwould free adapter->vf_res. However, netdev is still registered, so\nethtool_ops can be called. Calling iavf_get_link_ksettings with no vf_res,\nwill result with:\n[ 9385.242676] BUG: kernel NULL pointer dereference, address: 0000000000000008\n[ 9385.242683] #PF: supervisor read access in kernel mode\n[ 9385.242686] #PF: error_code(0x0000) - not-present page\n[ 9385.242690] PGD 0 P4D 0\n[ 9385.242696] Oops: 0000 [#1] PREEMPT SMP DEBUG_PAGEALLOC PTI\n[ 9385.242701] CPU: 6 PID: 3217 Comm: pmdalinux Kdump: loaded Tainted: G S          E     5.18.0-04958-ga54ce3703613-dirty #1\n[ 9385.242708] Hardware name: Dell Inc. PowerEdge R730/0WCJNT, BIOS 2.11.0 11/02/2019\n[ 9385.242710] RIP: 0010:iavf_get_link_ksettings+0x29/0xd0 [iavf]\n[ 9385.242745] Code: 00 0f 1f 44 00 00 b8 01 ef ff ff 48 c7 46 30 00 00 00 00 48 c7 46 38 00 00 00 00 c6 46 0b 00 66 89 46 08 48 8b 87 68 0e 00 00 <f6> 40 08 80 75 50 8b 87 5c 0e 00 00 83 f8 08 74 7a 76 1d 83 f8 20\n[ 9385.242749] RSP: 0018:ffffc0560ec7fbd0 EFLAGS: 00010246\n[ 9385.242755] RAX: 0000000000000000 RBX: ffffc0560ec7fc08 RCX: 0000000000000000\n[ 9385.242759] RDX: ffffffffc0ad4550 RSI: ffffc0560ec7fc08 RDI: ffffa0fc66674000\n[ 9385.242762] RBP: 00007ffd1fb2bf50 R08: b6a2d54b892363ee R09: ffffa101dc14fb00\n[ 9385.242765] R10: 0000000000000000 R11: 0000000000000004 R12: ffffa0fc66674000\n[ 9385.242768] R13: 0000000000000000 R14: ffffa0fc66674000 R15: 00000000ffffffa1\n[ 9385.242771] FS:  00007f93711a2980(0000) GS:ffffa0fad72c0000(0000) knlGS:0000000000000000\n[ 9385.242775] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 9385.242778] CR2: 0000000000000008 CR3: 0000000a8e61c003 CR4: 00000000003706e0\n[ 9385.242781] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[ 9385.242784] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[ 9385.242787] Call Trace:\n[ 9385.242791]  <TASK>\n[ 9385.242793]  ethtool_get_settings+0x71/0x1a0\n[ 9385.242814]  __dev_ethtool+0x426/0x2f40\n[ 9385.242823]  ? slab_post_alloc_hook+0x4f/0x280\n[ 9385.242836]  ? kmem_cache_alloc_trace+0x15d/0x2f0\n[ 9385.242841]  ? dev_ethtool+0x59/0x170\n[ 9385.242848]  dev_ethtool+0xa7/0x170\n[ 9385.242856]  dev_ioctl+0xc3/0x520\n[ 9385.242866]  sock_do_ioctl+0xa0/0xe0\n[ 9385.242877]  sock_ioctl+0x22f/0x320\n[ 9385.242885]  __x64_sys_ioctl+0x84/0xc0\n[ 9385.242896]  do_syscall_64+0x3a/0x80\n[ 9385.242904]  entry_SYSCALL_64_after_hwframe+0x46/0xb0\n[ 9385.242918] RIP: 0033:0x7f93702396db\n[ 9385.242923] Code: 73 01 c3 48 8b 0d ad 57 38 00 f7 d8 64 89 01 48 83 c8 ff c3 66 2e 0f 1f 84 00 00 00 00 00 90 f3 0f 1e fa b8 10 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d 7d 57 38 00 f7 d8 64 89 01 48\n[ 9385.242927] RSP: 002b:00007ffd1fb2bf18 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\n[ 9385.242932] RAX: ffffffffffffffda RBX: 000055671b1d2fe0 RCX: 00007f93702396db\n[ 9385.242935] RDX: 00007ffd1fb2bf20 RSI: 0000000000008946 RDI: 0000000000000007\n[ 9385.242937] RBP: 00007ffd1fb2bf20 R08: 0000000000000003 R09: 0030763066307330\n[ 9385.242940] R10: 0000000000000000 R11: 0000000000000246 R12: 00007ffd1fb2bf80\n[ 9385.242942] R13: 0000000000000007 R14: 0000556719f6de90 R15: 00007ffd1fb2c1b0\n[ 9385.242948]  </TASK>\n[ 9385.242949] Modules linked in: iavf(E) xt_CHECKSUM xt_MASQUERADE xt_conntrack ipt_REJECT nft_compat nf_nat_tftp nft_objref nf_conntrack_tftp bridge stp llc nft_fib_inet nft_fib_ipv4 nft_fib_ipv6 nft_fib nft_reject_inet nf_reject_ipv4 nf_reject_ipv6 nft_reject nft_ct nft_chain_nat nf_nat nf_conntrack nf_defrag_ipv6 nf_defrag_ipv4 ip_set nf_tables rfkill nfnetlink vfat fat irdma ib_uverbs ib_core intel_rapl_msr intel_rapl_common sb_edac x86_pkg_temp_thermal intel_powerclamp coretemp kvm_intel kvm iTCO_wdt iTCO_vendor_support ice irqbypass crct10dif_pclmul crc32_pclmul ghash_clmulni_intel rapl i40e pcspkr intel_cstate joydev mei_me intel_uncore mxm_wmi mei ipmi_ssif lpc_ich ipmi_si acpi_power_meter xfs libcrc32c mgag200 i2c_algo_bit drm_shmem_helper drm_kms_helper sd_mod t10_pi crc64_rocksoft crc64 syscopyarea sg sysfillrect sysimgblt fb_sys_fops drm ixgbe ahci libahci libata crc32c_intel mdio dca wmi dm_mirror dm_region_hash dm_log dm_mod ipmi_devintf ipmi_msghandler fuse\n[ 9385.243065]  [last unloaded: iavf]\n\nDereference happens in if (ADV_LINK_SUPPORT(adapter)) statement\n\nFixes: 209f2f9c7181 (\"iavf: Add support for VIRTCHNL_VF_OFFLOAD_VLAN_V2 negotiation\")\nSigned-off-by: Przemyslaw Patynowski <przemyslawx.patynowski@intel.com>\nSigned-off-by: Jedrzej Jagielski <jedrzej.jagielski@intel.com>\nTested-by: Marek Szlosek <marek.szlosek@intel.com>\nSigned-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>",
        "before_after_code_files": [
          "drivers/net/ethernet/intel/iavf/iavf_main.c||drivers/net/ethernet/intel/iavf/iavf_main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/ethernet/intel/iavf/iavf_main.c||drivers/net/ethernet/intel/iavf/iavf_main.c": [
          "File: drivers/net/ethernet/intel/iavf/iavf_main.c -> drivers/net/ethernet/intel/iavf/iavf_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2367:  err = iavf_get_vf_config(adapter);",
          "2368:  if (err == -EALREADY) {",
          "2369:   err = iavf_send_vf_config_msg(adapter);",
          "2371:  } else if (err == -EINVAL) {",
          "",
          "[Removed Lines]",
          "2370:   goto err_alloc;",
          "",
          "[Added Lines]",
          "2370:   goto err;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d17f744e883b2f8d13cca252d71cfe8ace346f7d",
      "candidate_info": {
        "commit_hash": "d17f744e883b2f8d13cca252d71cfe8ace346f7d",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/d17f744e883b2f8d13cca252d71cfe8ace346f7d",
        "files": [
          "drivers/md/raid10.c"
        ],
        "message": "md-raid10: fix KASAN warning\n\nThere's a KASAN warning in raid10_remove_disk when running the lvm\ntest lvconvert-raid-reshape.sh. We fix this warning by verifying that the\nvalue \"number\" is valid.\n\nBUG: KASAN: slab-out-of-bounds in raid10_remove_disk+0x61/0x2a0 [raid10]\nRead of size 8 at addr ffff889108f3d300 by task mdX_raid10/124682\n\nCPU: 3 PID: 124682 Comm: mdX_raid10 Not tainted 5.19.0-rc6 #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04/01/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0x34/0x44\n print_report.cold+0x45/0x57a\n ? __lock_text_start+0x18/0x18\n ? raid10_remove_disk+0x61/0x2a0 [raid10]\n kasan_report+0xa8/0xe0\n ? raid10_remove_disk+0x61/0x2a0 [raid10]\n raid10_remove_disk+0x61/0x2a0 [raid10]\nBuffer I/O error on dev dm-76, logical block 15344, async page read\n ? __mutex_unlock_slowpath.constprop.0+0x1e0/0x1e0\n remove_and_add_spares+0x367/0x8a0 [md_mod]\n ? super_written+0x1c0/0x1c0 [md_mod]\n ? mutex_trylock+0xac/0x120\n ? _raw_spin_lock+0x72/0xc0\n ? _raw_spin_lock_bh+0xc0/0xc0\n md_check_recovery+0x848/0x960 [md_mod]\n raid10d+0xcf/0x3360 [raid10]\n ? sched_clock_cpu+0x185/0x1a0\n ? rb_erase+0x4d4/0x620\n ? var_wake_function+0xe0/0xe0\n ? psi_group_change+0x411/0x500\n ? preempt_count_sub+0xf/0xc0\n ? _raw_spin_lock_irqsave+0x78/0xc0\n ? __lock_text_start+0x18/0x18\n ? raid10_sync_request+0x36c0/0x36c0 [raid10]\n ? preempt_count_sub+0xf/0xc0\n ? _raw_spin_unlock_irqrestore+0x19/0x40\n ? del_timer_sync+0xa9/0x100\n ? try_to_del_timer_sync+0xc0/0xc0\n ? _raw_spin_lock_irqsave+0x78/0xc0\n ? __lock_text_start+0x18/0x18\n ? _raw_spin_unlock_irq+0x11/0x24\n ? __list_del_entry_valid+0x68/0xa0\n ? finish_wait+0xa3/0x100\n md_thread+0x161/0x260 [md_mod]\n ? unregister_md_personality+0xa0/0xa0 [md_mod]\n ? _raw_spin_lock_irqsave+0x78/0xc0\n ? prepare_to_wait_event+0x2c0/0x2c0\n ? unregister_md_personality+0xa0/0xa0 [md_mod]\n kthread+0x148/0x180\n ? kthread_complete_and_exit+0x20/0x20\n ret_from_fork+0x1f/0x30\n </TASK>\n\nAllocated by task 124495:\n kasan_save_stack+0x1e/0x40\n __kasan_kmalloc+0x80/0xa0\n setup_conf+0x140/0x5c0 [raid10]\n raid10_run+0x4cd/0x740 [raid10]\n md_run+0x6f9/0x1300 [md_mod]\n raid_ctr+0x2531/0x4ac0 [dm_raid]\n dm_table_add_target+0x2b0/0x620 [dm_mod]\n table_load+0x1c8/0x400 [dm_mod]\n ctl_ioctl+0x29e/0x560 [dm_mod]\n dm_compat_ctl_ioctl+0x7/0x20 [dm_mod]\n __do_compat_sys_ioctl+0xfa/0x160\n do_syscall_64+0x90/0xc0\n entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nLast potentially related work creation:\n kasan_save_stack+0x1e/0x40\n __kasan_record_aux_stack+0x9e/0xc0\n kvfree_call_rcu+0x84/0x480\n timerfd_release+0x82/0x140\nL __fput+0xfa/0x400\n task_work_run+0x80/0xc0\n exit_to_user_mode_prepare+0x155/0x160\n syscall_exit_to_user_mode+0x12/0x40\n do_syscall_64+0x42/0xc0\n entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nSecond to last potentially related work creation:\n kasan_save_stack+0x1e/0x40\n __kasan_record_aux_stack+0x9e/0xc0\n kvfree_call_rcu+0x84/0x480\n timerfd_release+0x82/0x140\n __fput+0xfa/0x400\n task_work_run+0x80/0xc0\n exit_to_user_mode_prepare+0x155/0x160\n syscall_exit_to_user_mode+0x12/0x40\n do_syscall_64+0x42/0xc0\n entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nThe buggy address belongs to the object at ffff889108f3d200\n which belongs to the cache kmalloc-256 of size 256\nThe buggy address is located 0 bytes to the right of\n 256-byte region [ffff889108f3d200, ffff889108f3d300)\n\nThe buggy address belongs to the physical page:\npage:000000007ef2a34c refcount:1 mapcount:0 mapping:0000000000000000 index:0x0 pfn:0x1108f3c\nhead:000000007ef2a34c order:2 compound_mapcount:0 compound_pincount:0\nflags: 0x4000000000010200(slab|head|zone=2)\nraw: 4000000000010200 0000000000000000 dead000000000001 ffff889100042b40\nraw: 0000000000000000 0000000080200020 00000001ffffffff 0000000000000000\npage dumped because: kasan: bad access detected\n\nMemory state around the buggy address:\n ffff889108f3d200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n ffff889108f3d280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n>ffff889108f3d300: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n                   ^\n ffff889108f3d380: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc\n ffff889108f3d400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n\nSigned-off-by: Mikulas Patocka <mpatocka@redhat.com>\nCc: stable@vger.kernel.org\nSigned-off-by: Song Liu <song@kernel.org>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
        "before_after_code_files": [
          "drivers/md/raid10.c||drivers/md/raid10.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/md/raid10.c||drivers/md/raid10.c": [
          "File: drivers/md/raid10.c -> drivers/md/raid10.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2167:  int err = 0;",
          "2168:  int number = rdev->raid_disk;",
          "2169:  struct md_rdev **rdevp;",
          "2172:  print_conf(conf);",
          "2173:  if (rdev == p->rdev)",
          "2174:   rdevp = &p->rdev;",
          "2175:  else if (rdev == p->replacement)",
          "",
          "[Removed Lines]",
          "2170:  struct raid10_info *p = conf->mirrors + number;",
          "",
          "[Added Lines]",
          "2170:  struct raid10_info *p;",
          "2173:  if (unlikely(number >= mddev->raid_disks))",
          "2174:   return 0;",
          "2175:  p = conf->mirrors + number;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aa666b68e73fc06d83c070d96180b9010cf5a960",
      "candidate_info": {
        "commit_hash": "aa666b68e73fc06d83c070d96180b9010cf5a960",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/aa666b68e73fc06d83c070d96180b9010cf5a960",
        "files": [
          "drivers/net/wireless/broadcom/brcm80211/brcmfmac/pno.c"
        ],
        "message": "wifi: brcmfmac: fix invalid address access when enabling SCAN log level\n\nThe variable i is changed when setting random MAC address and causes\ninvalid address access when printing the value of pi->reqs[i]->reqid.\n\nWe replace reqs index with ri to fix the issue.\n\n[  136.726473] Unable to handle kernel access to user memory outside uaccess routines at virtual address 0000000000000000\n[  136.737365] Mem abort info:\n[  136.740172]   ESR = 0x96000004\n[  136.743359]   Exception class = DABT (current EL), IL = 32 bits\n[  136.749294]   SET = 0, FnV = 0\n[  136.752481]   EA = 0, S1PTW = 0\n[  136.755635] Data abort info:\n[  136.758514]   ISV = 0, ISS = 0x00000004\n[  136.762487]   CM = 0, WnR = 0\n[  136.765522] user pgtable: 4k pages, 48-bit VAs, pgdp = 000000005c4e2577\n[  136.772265] [0000000000000000] pgd=0000000000000000\n[  136.777160] Internal error: Oops: 96000004 [#1] PREEMPT SMP\n[  136.782732] Modules linked in: brcmfmac(O) brcmutil(O) cfg80211(O) compat(O)\n[  136.789788] Process wificond (pid: 3175, stack limit = 0x00000000053048fb)\n[  136.796664] CPU: 3 PID: 3175 Comm: wificond Tainted: G           O      4.19.42-00001-g531a5f5 #1\n[  136.805532] Hardware name: Freescale i.MX8MQ EVK (DT)\n[  136.810584] pstate: 60400005 (nZCv daif +PAN -UAO)\n[  136.815429] pc : brcmf_pno_config_sched_scans+0x6cc/0xa80 [brcmfmac]\n[  136.821811] lr : brcmf_pno_config_sched_scans+0x67c/0xa80 [brcmfmac]\n[  136.828162] sp : ffff00000e9a3880\n[  136.831475] x29: ffff00000e9a3890 x28: ffff800020543400\n[  136.836786] x27: ffff8000b1008880 x26: ffff0000012bf6a0\n[  136.842098] x25: ffff80002054345c x24: ffff800088d22400\n[  136.847409] x23: ffff0000012bf638 x22: ffff0000012bf6d8\n[  136.852721] x21: ffff8000aced8fc0 x20: ffff8000ac164400\n[  136.858032] x19: ffff00000e9a3946 x18: 0000000000000000\n[  136.863343] x17: 0000000000000000 x16: 0000000000000000\n[  136.868655] x15: ffff0000093f3b37 x14: 0000000000000050\n[  136.873966] x13: 0000000000003135 x12: 0000000000000000\n[  136.879277] x11: 0000000000000000 x10: ffff000009a61888\n[  136.884589] x9 : 000000000000000f x8 : 0000000000000008\n[  136.889900] x7 : 303a32303d726464 x6 : ffff00000a1f957d\n[  136.895211] x5 : 0000000000000000 x4 : ffff00000e9a3942\n[  136.900523] x3 : 0000000000000000 x2 : ffff0000012cead8\n[  136.905834] x1 : ffff0000012bf6d8 x0 : 0000000000000000\n[  136.911146] Call trace:\n[  136.913623]  brcmf_pno_config_sched_scans+0x6cc/0xa80 [brcmfmac]\n[  136.919658]  brcmf_pno_start_sched_scan+0xa4/0x118 [brcmfmac]\n[  136.925430]  brcmf_cfg80211_sched_scan_start+0x80/0xe0 [brcmfmac]\n[  136.931636]  nl80211_start_sched_scan+0x140/0x308 [cfg80211]\n[  136.937298]  genl_rcv_msg+0x358/0x3f4\n[  136.940960]  netlink_rcv_skb+0xb4/0x118\n[  136.944795]  genl_rcv+0x34/0x48\n[  136.947935]  netlink_unicast+0x264/0x300\n[  136.951856]  netlink_sendmsg+0x2e4/0x33c\n[  136.955781]  __sys_sendto+0x120/0x19c\n\nSigned-off-by: Wright Feng <wright.feng@cypress.com>\nSigned-off-by: Chi-hsien Lin <chi-hsien.lin@cypress.com>\nSigned-off-by: Ahmad Fatoum <a.fatoum@pengutronix.de>\nSigned-off-by: Alvin \u0160ipraga <alsi@bang-olufsen.dk>\nSigned-off-by: Kalle Valo <kvalo@kernel.org>\nLink: https://lore.kernel.org/r/20220722115632.620681-4-alvin@pqrs.dk",
        "before_after_code_files": [
          "drivers/net/wireless/broadcom/brcm80211/brcmfmac/pno.c||drivers/net/wireless/broadcom/brcm80211/brcmfmac/pno.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/net/wireless/broadcom/brcm80211/brcmfmac/pno.c||drivers/net/wireless/broadcom/brcm80211/brcmfmac/pno.c": [
          "File: drivers/net/wireless/broadcom/brcm80211/brcmfmac/pno.c -> drivers/net/wireless/broadcom/brcm80211/brcmfmac/pno.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "158:  struct brcmf_pno_macaddr_le pfn_mac;",
          "159:  u8 *mac_addr = NULL;",
          "160:  u8 *mac_mask = NULL;",
          "167:    break;",
          "168:   }",
          "",
          "[Removed Lines]",
          "161:  int err, i;",
          "163:  for (i = 0; i < pi->n_reqs; i++)",
          "164:   if (pi->reqs[i]->flags & NL80211_SCAN_FLAG_RANDOM_ADDR) {",
          "165:    mac_addr = pi->reqs[i]->mac_addr;",
          "166:    mac_mask = pi->reqs[i]->mac_addr_mask;",
          "",
          "[Added Lines]",
          "161:  int err, i, ri;",
          "163:  for (ri = 0; ri < pi->n_reqs; ri++)",
          "164:   if (pi->reqs[ri]->flags & NL80211_SCAN_FLAG_RANDOM_ADDR) {",
          "165:    mac_addr = pi->reqs[ri]->mac_addr;",
          "166:    mac_mask = pi->reqs[ri]->mac_addr_mask;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "185:  pfn_mac.mac[0] |= 0x02;",
          "187:  brcmf_dbg(SCAN, \"enabling random mac: reqid=%llu mac=%pM\\n\",",
          "189:  err = brcmf_fil_iovar_data_set(ifp, \"pfn_macaddr\", &pfn_mac,",
          "190:            sizeof(pfn_mac));",
          "191:  if (err)",
          "",
          "[Removed Lines]",
          "188:     pi->reqs[i]->reqid, pfn_mac.mac);",
          "",
          "[Added Lines]",
          "188:     pi->reqs[ri]->reqid, pfn_mac.mac);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ad943893d5f1d0aeea892bf7b781cf8062b36d58",
      "candidate_info": {
        "commit_hash": "ad943893d5f1d0aeea892bf7b781cf8062b36d58",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/ad943893d5f1d0aeea892bf7b781cf8062b36d58",
        "files": [
          "arch/riscv/kernel/machine_kexec.c"
        ],
        "message": "RISC-V: Fixup schedule out issue in machine_crash_shutdown()\n\nCurrent task of executing crash kexec will be schedule out when panic is\ntriggered by RCU Stall, as it needs to wait rcu completion. It lead to\ninability to enter the crash system.\n\nThe implementation of machine_crash_shutdown() is non-standard for RISC-V\naccording to other Arch's implementation(eg, x86, arm64), we need to send\nIPI to stop secondary harts.\n\n[224521.877268] rcu: INFO: rcu_preempt detected stalls on CPUs/tasks:\n[224521.883471] rcu: \t0-...0: (3 GPs behind) idle=cfa/0/0x1 softirq=3968793/3968793 fqs=2495\n[224521.891742] \t(detected by 2, t=5255 jiffies, g=60855593, q=328)\n[224521.897754] Task dump for CPU 0:\n[224521.901074] task:swapper/0     state:R  running task   stack:  0 pid:  0 ppid:   0 flags:0x00000008\n[224521.911090] Call Trace:\n[224521.913638] [<ffffffe000c432de>] __schedule+0x208/0x5ea\n[224521.918957] Kernel panic - not syncing: RCU Stall\n[224521.923773] bad: scheduling from the idle thread!\n[224521.928571] CPU: 2 PID: 0 Comm: swapper/2 Kdump: loaded Tainted: G   O  5.10.113-yocto-standard #1\n[224521.938658] Call Trace:\n[224521.941200] [<ffffffe00020395c>] walk_stackframe+0x0/0xaa\n[224521.946689] [<ffffffe000c34f8e>] show_stack+0x32/0x3e\n[224521.951830] [<ffffffe000c39020>] dump_stack_lvl+0x7e/0xa2\n[224521.957317] [<ffffffe000c39058>] dump_stack+0x14/0x1c\n[224521.962459] [<ffffffe000243884>] dequeue_task_idle+0x2c/0x40\n[224521.968207] [<ffffffe000c434f4>] __schedule+0x41e/0x5ea\n[224521.973520] [<ffffffe000c43826>] schedule+0x34/0xe4\n[224521.978487] [<ffffffe000c46cae>] schedule_timeout+0xc6/0x170\n[224521.984234] [<ffffffe000c4491e>] wait_for_completion+0x98/0xf2\n[224521.990157] [<ffffffe00026d9e2>] __wait_rcu_gp+0x148/0x14a\n[224521.995733] [<ffffffe0002761c4>] synchronize_rcu+0x5c/0x66\n[224522.001307] [<ffffffe00026f1a6>] rcu_sync_enter+0x54/0xe6\n[224522.006795] [<ffffffe00025a436>] percpu_down_write+0x32/0x11c\n[224522.012629] [<ffffffe000c4266a>] _cpu_down+0x92/0x21a\n[224522.017771] [<ffffffe000219a0a>] smp_shutdown_nonboot_cpus+0x90/0x118\n[224522.024299] [<ffffffe00020701e>] machine_crash_shutdown+0x30/0x4a\n[224522.030483] [<ffffffe00029a3f8>] __crash_kexec+0x62/0xa6\n[224522.035884] [<ffffffe000c3515e>] panic+0xfa/0x2b6\n[224522.040678] [<ffffffe0002772be>] rcu_sched_clock_irq+0xc26/0xcb8\n[224522.046774] [<ffffffe00027fc7a>] update_process_times+0x62/0x8a\n[224522.052785] [<ffffffe00028d522>] tick_sched_timer+0x9e/0x102\n[224522.058533] [<ffffffe000280c3a>] __hrtimer_run_queues+0x16a/0x318\n[224522.064716] [<ffffffe0002812ec>] hrtimer_interrupt+0xd4/0x228\n[224522.070551] [<ffffffe0009a69b6>] riscv_timer_interrupt+0x3c/0x48\n[224522.076646] [<ffffffe000268f8c>] handle_percpu_devid_irq+0xb0/0x24c\n[224522.083004] [<ffffffe00026428e>] __handle_domain_irq+0xa8/0x122\n[224522.089014] [<ffffffe00062f954>] riscv_intc_irq+0x38/0x60\n[224522.094501] [<ffffffe000201bd4>] ret_from_exception+0x0/0xc\n[224522.100161] [<ffffffe000c42146>] rcu_eqs_enter.constprop.0+0x8c/0xb8\n\nWith the patch, it can enter crash system when RCU Stall occur.\n\nFixes: e53d28180d4d (\"RISC-V: Add kdump support\")\nSigned-off-by: Xianting Tian <xianting.tian@linux.alibaba.com>\nLink: https://lore.kernel.org/r/20220811074150.3020189-4-xianting.tian@linux.alibaba.com\nCc: stable@vger.kernel.org\nSigned-off-by: Palmer Dabbelt <palmer@rivosinc.com>",
        "before_after_code_files": [
          "arch/riscv/kernel/machine_kexec.c||arch/riscv/kernel/machine_kexec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/riscv/kernel/machine_kexec.c||arch/riscv/kernel/machine_kexec.c": [
          "File: arch/riscv/kernel/machine_kexec.c -> arch/riscv/kernel/machine_kexec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "138: #endif",
          "139: }",
          "149: void",
          "150: machine_crash_shutdown(struct pt_regs *regs)",
          "151: {",
          "152:  crash_save_cpu(regs, smp_processor_id());",
          "154:  pr_info(\"Starting crashdump kernel...\\n\");",
          "155: }",
          "",
          "[Removed Lines]",
          "153:  machine_shutdown();",
          "",
          "[Added Lines]",
          "142: void crash_smp_send_stop(void)",
          "143: {",
          "144:  static int cpus_stopped;",
          "150:  if (cpus_stopped)",
          "151:   return;",
          "153:  smp_send_stop();",
          "154:  cpus_stopped = 1;",
          "155: }",
          "166:  local_irq_disable();",
          "169:  crash_smp_send_stop();",
          "",
          "---------------"
        ]
      }
    }
  ]
}