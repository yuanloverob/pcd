{
  "cve_id": "CVE-2019-1010294",
  "cve_desc": "Linaro/OP-TEE OP-TEE 3.3.0 and earlier is affected by: Rounding error. The impact is: Potentially leaking code and/or data from previous Trusted Application. The component is: optee_os. The fixed version is: 3.4.0 and later.",
  "repo": "OP-TEE/optee_os",
  "patch_hash": "7e768f8a473409215fe3fff8f6e31f8a3a0103c6",
  "patch_info": {
    "commit_hash": "7e768f8a473409215fe3fff8f6e31f8a3a0103c6",
    "repo": "OP-TEE/optee_os",
    "commit_url": "https://github.com/OP-TEE/optee_os/commit/7e768f8a473409215fe3fff8f6e31f8a3a0103c6",
    "files": [
      "core/arch/arm/kernel/user_ta.c"
    ],
    "message": "core: clear the entire TA area\n\nPreviously we cleared (memset to zero) the size corresponding to code\nand data segments, however the allocation for the TA is made on the\ngranularity of the memory pool, meaning that we did not clear all memory\nand because of that we could potentially leak code and data of a\nprevious loaded TA.\n\nFixes: OP-TEE-2018-0006: \"Potential disclosure of previously loaded TA\ncode and data\"\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nSuggested-by: Jens Wiklander <jens.wiklander@linaro.org>\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
    "before_after_code_files": [
      "core/arch/arm/kernel/user_ta.c||core/arch/arm/kernel/user_ta.c"
    ]
  },
  "patch_diff": {
    "core/arch/arm/kernel/user_ta.c||core/arch/arm/kernel/user_ta.c": [
      "File: core/arch/arm/kernel/user_ta.c -> core/arch/arm/kernel/user_ta.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "197: #else",
      "198:  struct mobj *mobj = mobj_mm_alloc(mobj_sec_ddr, size, &tee_mm_sec_ddr);",
      "202:  return mobj;",
      "203: #endif",
      "204: }",
      "",
      "[Removed Lines]",
      "200:  if (mobj)",
      "201:   memset(mobj_get_va(mobj, 0), 0, size);",
      "",
      "[Added Lines]",
      "200:  if (mobj) {",
      "201:   size_t granularity = BIT(tee_mm_sec_ddr.shift);",
      "204:   memset(mobj_get_va(mobj, 0), 0, ROUNDUP(size, granularity));",
      "205:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cfc6140607c2b782755f05278003463b9dcd9494",
      "candidate_info": {
        "commit_hash": "cfc6140607c2b782755f05278003463b9dcd9494",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/cfc6140607c2b782755f05278003463b9dcd9494",
        "files": [
          "core/arch/arm/kernel/ree_fs_ta.c"
        ],
        "message": "rpc: ensure that TA fits in allocated memory\n\nWhen the TEE is about to load a TA it first asks the REE for the size of\nthe TA in question. Next it allocates memory for this based on the size\nin the previous query. However, there is no guarantee that the REE\nactually allocates the requested size. A compromised REE could for\nexample modify the RPC request. This means that even though an\nallocation is successful, we still need to check that the size of the\nallocated buffer has room to fit the entire TA we are about to load.\n\nFixes: \"REE provided size not checked when loading TAs\" as reported by\nRiscure.\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
        "before_after_code_files": [
          "core/arch/arm/kernel/ree_fs_ta.c||core/arch/arm/kernel/ree_fs_ta.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/2745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/arch/arm/kernel/ree_fs_ta.c||core/arch/arm/kernel/ree_fs_ta.c": [
          "File: core/arch/arm/kernel/ree_fs_ta.c -> core/arch/arm/kernel/ree_fs_ta.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:  if (!*mobj)",
          "55:   return TEE_ERROR_OUT_OF_MEMORY;",
          "59:  assert(*ta);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:  if ((*mobj)->size < params[1].u.memref.size) {",
          "58:   res = TEE_ERROR_SHORT_BUFFER;",
          "59:   goto exit;",
          "60:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66:  params[1].u.memref.mobj = *mobj;",
          "68:  res = thread_rpc_cmd(OPTEE_RPC_CMD_LOAD_TA, 2, params);",
          "69:  if (res != TEE_SUCCESS)",
          "70:   thread_rpc_free_payload(*mobj);",
          "71:  return res;",
          "72: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74: exit:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "99e8a8cc3db341d703b6779563af98491253960a",
      "candidate_info": {
        "commit_hash": "99e8a8cc3db341d703b6779563af98491253960a",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/99e8a8cc3db341d703b6779563af98491253960a",
        "files": [
          "core/tee/tee_svc_storage.c"
        ],
        "message": "svc: fix NULL pointer dereference during storage enumeration\n\nIn syscall_storage_next_enum(..) when 'tee_obj o' isn't successfully\ninitialized, then 'o->pobj->fops' is a NULL pointer and therefore we\nneed to check for that before trying to dereference it in the clean-up\npart of the function.\n\nFixes: \"Null pointer dereference in storage system call\" as reported by\nRiscure.\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
        "before_after_code_files": [
          "core/tee/tee_svc_storage.c||core/tee/tee_svc_storage.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/2745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/tee/tee_svc_storage.c||core/tee/tee_svc_storage.c": [
          "File: core/tee/tee_svc_storage.c -> core/tee/tee_svc_storage.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "777: exit:",
          "778:  if (o) {",
          "779:   if (o->pobj) {",
          "781:    free(o->pobj->obj_id);",
          "782:   }",
          "783:   free(o->pobj);",
          "",
          "[Removed Lines]",
          "780:    o->pobj->fops->close(&o->fh);",
          "",
          "[Added Lines]",
          "780:    if (o->pobj->fops)",
          "781:     o->pobj->fops->close(&o->fh);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c4f75cc6f9991b78a29216b938fb885ab88f7961",
      "candidate_info": {
        "commit_hash": "c4f75cc6f9991b78a29216b938fb885ab88f7961",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/c4f75cc6f9991b78a29216b938fb885ab88f7961",
        "files": [
          "core/include/optee_msg.h"
        ],
        "message": "core: optee_msg.h: define OPTEE_MSG_MAX_NUM_PARAMS\n\nDefines OPTEE_MSG_MAX_NUM_PARAMS to be used with the macro\nOPTEE_MSG_GET_ARG_SIZE() in order to avoid unexpected wrapping.\n\nFixes: \"Macro for checking size of parameter buffer can overflow\" as\nreported by Riscure.\n\nSigned-off-by: Jens Wiklander <jens.wiklander@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Joakim Bech <joakim.bech@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
        "before_after_code_files": [
          "core/include/optee_msg.h||core/include/optee_msg.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/2745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/include/optee_msg.h||core/include/optee_msg.h": [
          "File: core/include/optee_msg.h -> core/include/optee_msg.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "201: #define OPTEE_MSG_GET_ARG_SIZE(num_params) \\",
          "202:  (sizeof(struct optee_msg_arg) + \\",
          "203:   sizeof(struct optee_msg_param) * (num_params))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "209: #define OPTEE_MSG_MAX_NUM_PARAMS \\",
          "210:  ((OPTEE_MSG_NONCONTIG_PAGE_SIZE - sizeof(struct optee_msg_arg)) / \\",
          "211:   sizeof(struct optee_msg_param))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c6edc12acd490e272aade091b5f2389eba37bb33",
      "candidate_info": {
        "commit_hash": "c6edc12acd490e272aade091b5f2389eba37bb33",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/c6edc12acd490e272aade091b5f2389eba37bb33",
        "files": [
          "core/arch/arm/tee/entry_std.c"
        ],
        "message": "core: entry_std: check value of num_params\n\nChecks value of num_params against OPTEE_MSG_MAX_NUM_PARAMS before using\nit in OPTEE_MSG_GET_ARG_SIZE() in order to avoid unexpected wrapping.\n\nFixes: \"Macro for checking size of parameter buffer can overflow\" as\nreported by Riscure.\n\nSigned-off-by: Jens Wiklander <jens.wiklander@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Joakim Bech <joakim.bech@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
        "before_after_code_files": [
          "core/arch/arm/tee/entry_std.c||core/arch/arm/tee/entry_std.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/2745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/arch/arm/tee/entry_std.c||core/arch/arm/tee/entry_std.c": [
          "File: core/arch/arm/tee/entry_std.c -> core/arch/arm/tee/entry_std.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "479:   return NULL;",
          "481:  arg = mobj_get_va(mobj, 0);",
          "488:  args_size = OPTEE_MSG_GET_ARG_SIZE(*num_params);",
          "489:  if (args_size > SMALL_PAGE_SIZE) {",
          "490:   EMSG(\"Command buffer spans across page boundary\");",
          "493:  }",
          "495:  return mobj;",
          "496: }",
          "498: static struct mobj *get_cmd_buffer(paddr_t parg, uint32_t *num_params)",
          "",
          "[Removed Lines]",
          "482:  if (!arg) {",
          "483:   mobj_free(mobj);",
          "484:   return NULL;",
          "485:  }",
          "491:   mobj_free(mobj);",
          "492:   return NULL;",
          "",
          "[Added Lines]",
          "482:  if (!arg)",
          "483:   goto err;",
          "486:  if (*num_params > OPTEE_MSG_MAX_NUM_PARAMS)",
          "487:   goto err;",
          "492:   goto err;",
          "496: err:",
          "497:  mobj_free(mobj);",
          "498:  return NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "505:   return NULL;",
          "508:  args_size = OPTEE_MSG_GET_ARG_SIZE(*num_params);",
          "510:  return mobj_shm_alloc(parg, args_size, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "511:  if (*num_params > OPTEE_MSG_MAX_NUM_PARAMS)",
          "512:   return NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d8e3005e8d7a8cd6a1e4a4a3dbee094c0cee8962",
      "candidate_info": {
        "commit_hash": "d8e3005e8d7a8cd6a1e4a4a3dbee094c0cee8962",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/d8e3005e8d7a8cd6a1e4a4a3dbee094c0cee8962",
        "files": [
          "core/arch/arm/tee/entry_std.c"
        ],
        "message": "core: initialize saved_attr\n\nThe saved_attr variable is used in the cleanup condition in the\nentry_open_session(..) function. The function cleanup_params(..)\nconditionally free up memory based on the values from saved_attr and\ntherefore saved_attr must be initialized with a proper value in case the\nfunctions that are supposed to fill in correct attributes are failing.\n\nFixes: \"Use of uninitialized variable in REE exposed function\" as\nreported by Riscure.\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
        "before_after_code_files": [
          "core/arch/arm/tee/entry_std.c||core/arch/arm/tee/entry_std.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/2745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/arch/arm/tee/entry_std.c||core/arch/arm/tee/entry_std.c": [
          "File: core/arch/arm/tee/entry_std.c -> core/arch/arm/tee/entry_std.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "289:  TEE_UUID uuid;",
          "290:  struct tee_ta_param param;",
          "291:  size_t num_meta;",
          "294:  res = get_open_session_meta(num_params, arg->params, &num_meta, &uuid,",
          "295:         &clnt_id);",
          "",
          "[Removed Lines]",
          "292:  uint64_t saved_attr[TEE_NUM_PARAMS];",
          "",
          "[Added Lines]",
          "292:  uint64_t saved_attr[TEE_NUM_PARAMS] = { 0 };",
          "",
          "---------------"
        ]
      }
    }
  ]
}