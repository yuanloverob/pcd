{
  "cve_id": "CVE-2023-27597",
  "cve_desc": "OpenSIPS is a Session Initiation Protocol (SIP) server implementation. Prior to versions 3.1.8 and 3.2.5, when a specially crafted SIP message is processed by the function `rewrite_ruri`, a crash occurs due to a segmentation fault. This issue causes the server to crash. It affects configurations containing functions that make use of the affected code, such as the function `setport`. This issue has been fixed in version 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
  "patch_info": {
    "commit_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "files": [
      "parser/parse_uri.c"
    ],
    "message": "[core] fix parse_uri() parsing\n\nIssue discovered during OpenSIPS Security Audit 2022,\n\tby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-358f-935m-7p9c",
    "before_after_code_files": [
      "parser/parse_uri.c||parser/parse_uri.c"
    ]
  },
  "patch_diff": {
    "parser/parse_uri.c||parser/parse_uri.c": [
      "File: parser/parse_uri.c -> parser/parse_uri.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1532:   case TELS_URI_T:",
      "1534:    uri->user=uri->host;",
      "1536:    uri->host.len=0;",
      "1537:    break;",
      "1538:   case SIP_URI_T:",
      "",
      "[Removed Lines]",
      "1535:    uri->host.s=\"\";",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1543:   case URN_NENA_SERVICE_URI_T:",
      "1544:    uri->user.s=0;",
      "1545:    uri->user.len=0;",
      "1548:    break;",
      "1549:   case ERROR_URI_T:",
      "1550:    LM_ERR(\"unexpected error (BUG?)\\n\");",
      "",
      "[Removed Lines]",
      "1546:    uri->host.s=\"\";",
      "1547:    uri->host.len=0;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1d60e7422aff69ca083fac3f907d7183c2e7f58e",
      "candidate_info": {
        "commit_hash": "1d60e7422aff69ca083fac3f907d7183c2e7f58e",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/1d60e7422aff69ca083fac3f907d7183c2e7f58e",
        "files": [
          "modules/sipmsgops/codecs.c"
        ],
        "message": "[sipmsgops] fix codec_delete_XX() parsing\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-3ghx-j39m-cw4f\n(cherry picked from commit dd051f8ed5ae3347fb1d556ced3c97822c9d8450)",
        "before_after_code_files": [
          "modules/sipmsgops/codecs.c||modules/sipmsgops/codecs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/sipmsgops/codecs.c||modules/sipmsgops/codecs.c": [
          "File: modules/sipmsgops/codecs.c -> modules/sipmsgops/codecs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "560:      if (cur == lmp->u.value + lmp->len) {",
          "561:       tmp = found.s;",
          "563:        found.s--;",
          "564:        found.len++;",
          "565:       }",
          "",
          "[Removed Lines]",
          "562:       while (*(--tmp) == ' ') {",
          "",
          "[Added Lines]",
          "562:       while (tmp>lmp->u.value && *(--tmp) == ' ') {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "86dcecb581ee112d1ae5644b80f1cdd4e011a898",
      "candidate_info": {
        "commit_hash": "86dcecb581ee112d1ae5644b80f1cdd4e011a898",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/86dcecb581ee112d1ae5644b80f1cdd4e011a898",
        "files": [
          "modules/carrierroute/route_config.c"
        ],
        "message": "incorrect error handling.\n\n(cherry picked from commit 336e6b0b2ccdf53673eac2c9d27d6923b977ab7b)",
        "before_after_code_files": [
          "modules/carrierroute/route_config.c||modules/carrierroute/route_config.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/carrierroute/route_config.c||modules/carrierroute/route_config.c": [
          "File: modules/carrierroute/route_config.c -> modules/carrierroute/route_config.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "351:   LM_ERR(\"out of private memory\\n\");",
          "352:   return -1;",
          "353:  }",
          "363:  if ((from = fopen(config_file, \"rb\"))==NULL) {",
          "364:   LM_ERR(\"Cannot open source file.\\n\");",
          "",
          "[Removed Lines]",
          "354:  if(strcpy(backup_file, config_file) == NULL){",
          "355:   LM_ERR(\"can't copy filename\\n\");",
          "356:   goto errout;",
          "357:  }",
          "358:  if(!strcat(backup_file, \".bak\")){",
          "359:   LM_ERR(\"can't attach suffix\\n\");",
          "360:   goto errout;",
          "361:  }",
          "",
          "[Added Lines]",
          "354:  sprintf(backup_file, \"%s.bak\", config_file);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "34e144783fab7c13bc238cfca9688981c6bf2af4",
      "candidate_info": {
        "commit_hash": "34e144783fab7c13bc238cfca9688981c6bf2af4",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/34e144783fab7c13bc238cfca9688981c6bf2af4",
        "files": [
          "modules/cachedb_redis/cachedb_redis_dbase.c"
        ],
        "message": "[cachedb_redis] Fix merging error on 7cb182de0bf1f31dfe6e697b4321d0b7528268f3",
        "before_after_code_files": [
          "modules/cachedb_redis/cachedb_redis_dbase.c||modules/cachedb_redis/cachedb_redis_dbase.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/cachedb_redis/cachedb_redis_dbase.c||modules/cachedb_redis/cachedb_redis_dbase.c": [
          "File: modules/cachedb_redis/cachedb_redis_dbase.c -> modules/cachedb_redis/cachedb_redis_dbase.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "161:    LM_ERR(\"failed to auth to redis - %.*s\\n\",",
          "162:     rpl?(unsigned)rpl->len:7,rpl?rpl->str:\"FAILURE\");",
          "163:    freeReplyObject(rpl);",
          "167:   }",
          "168:   LM_DBG(\"AUTH [password] -  %.*s\\n\",(unsigned)rpl->len,rpl->str);",
          "169:   freeReplyObject(rpl);",
          "",
          "[Removed Lines]",
          "164:    redisFree(node->context);",
          "165:    node->context = NULL;",
          "166:    return -1;",
          "",
          "[Added Lines]",
          "164:    goto error;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "175:    LM_ERR(\"failed to select database %s - %.*s\\n\",con->id->database,",
          "176:     rpl?(unsigned)rpl->len:7,rpl?rpl->str:\"FAILURE\");",
          "177:    freeReplyObject(rpl);",
          "181:   }",
          "183:   LM_DBG(\"SELECT [%s] - %.*s\\n\",con->id->database,(unsigned)rpl->len,rpl->str);",
          "",
          "[Removed Lines]",
          "178:    redisFree(node->context);",
          "179:    node->context = NULL;",
          "180:    return -1;",
          "",
          "[Added Lines]",
          "176:    goto error;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "192:   tls_api.release_domain(node->tls_dom);",
          "193:   node->tls_dom = NULL;",
          "194:  }",
          "195:  return -1;",
          "196: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "191:  node->context = NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cb9c2d09a0cacc5e3c246f5cfb4829313d09d962",
      "candidate_info": {
        "commit_hash": "cb9c2d09a0cacc5e3c246f5cfb4829313d09d962",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/cb9c2d09a0cacc5e3c246f5cfb4829313d09d962",
        "files": [
          "modules/perl/perlfunc.c"
        ],
        "message": "perl: Fix PKG corruption in perl_exec() (off-by-one)\n\n(cherry picked from commit d7f9a851149010d1b99aeb9e04339994414c8731)",
        "before_after_code_files": [
          "modules/perl/perlfunc.c||modules/perl/perlfunc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/perl/perlfunc.c||modules/perl/perlfunc.c": [
          "File: modules/perl/perlfunc.c -> modules/perl/perlfunc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:  str pfnc, pparam;",
          "107:  char *fnc;",
          "110:  if (!fnc) {",
          "111:   LM_ERR(\"No more pkg mem!\\n\");",
          "112:   return -1;",
          "113:  }",
          "114:  memcpy(fnc, _fnc_s->s, _fnc_s->len);",
          "117:  dSP;",
          "",
          "[Removed Lines]",
          "109:  fnc = pkg_malloc(_fnc_s->len);",
          "115:  fnc[_fnc_s->len] = 0;",
          "",
          "[Added Lines]",
          "109:  fnc = pkg_malloc(_fnc_s->len + 1);",
          "115:  fnc[_fnc_s->len] = '\\0';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2f58ffa930fee411a83d3196f682f4958ad57277",
      "candidate_info": {
        "commit_hash": "2f58ffa930fee411a83d3196f682f4958ad57277",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/2f58ffa930fee411a83d3196f682f4958ad57277",
        "files": [
          "modules/rtpproxy/rtpproxy.c"
        ],
        "message": "rtpproxy: Fix bad error handling on rare OOM case\n\n(cherry picked from commit d2cec34346fea49a98b5c5d33ae20044e47eec69)",
        "before_after_code_files": [
          "modules/rtpproxy/rtpproxy.c||modules/rtpproxy/rtpproxy.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/rtpproxy/rtpproxy.c||modules/rtpproxy/rtpproxy.c": [
          "File: modules/rtpproxy/rtpproxy.c -> modules/rtpproxy/rtpproxy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1086:  rtpp_no = (unsigned int*)shm_malloc(sizeof(unsigned int));",
          "1087:  list_version = (unsigned int*)shm_malloc(sizeof(unsigned int));",
          "1092:  if(!rtpp_no || !list_version) {",
          "1093:   LM_ERR(\"No more shared memory\\n\");",
          "1094:   return -1;",
          "1095:  }",
          "1096:  if (!(rtpp_set_list = (struct rtpp_set_head **)",
          "1097:   shm_malloc(sizeof(struct rtpp_set_head *)))) {",
          "1098:   LM_ERR(\"no more shm mem\\n\");",
          "",
          "[Removed Lines]",
          "1090:  my_version = 0;",
          "",
          "[Added Lines]",
          "1094:  my_version = 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}