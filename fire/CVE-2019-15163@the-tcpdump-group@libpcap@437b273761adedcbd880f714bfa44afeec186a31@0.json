{
  "cve_id": "CVE-2019-15163",
  "cve_desc": "rpcapd/daemon.c in libpcap before 1.9.1 allows attackers to cause a denial of service (NULL pointer dereference and daemon crash) if a crypt() call fails.",
  "repo": "the-tcpdump-group/libpcap",
  "patch_hash": "437b273761adedcbd880f714bfa44afeec186a31",
  "patch_info": {
    "commit_hash": "437b273761adedcbd880f714bfa44afeec186a31",
    "repo": "the-tcpdump-group/libpcap",
    "commit_url": "https://github.com/the-tcpdump-group/libpcap/commit/437b273761adedcbd880f714bfa44afeec186a31",
    "files": [
      "rpcapd/daemon.c"
    ],
    "message": "Don't crash if crypt() fails.\n\nIt can fail, so make sure it doesn't before comparing its result with\nthe password.\n\nThis addresses Include Security issue F12: [libpcap] Remote Packet\nCapture Daemon Null Pointer Dereference Denial of Service.",
    "before_after_code_files": [
      "rpcapd/daemon.c||rpcapd/daemon.c"
    ]
  },
  "patch_diff": {
    "rpcapd/daemon.c||rpcapd/daemon.c": [
      "File: rpcapd/daemon.c -> rpcapd/daemon.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1222: #ifdef HAVE_GETSPNAM",
      "1223:  struct spwd *usersp;",
      "1224: #endif",
      "1227:  if ((user = getpwnam(username)) == NULL)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1225:  char *crypt_password;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1252:  user_password = user->pw_passwd;",
      "1253: #endif",
      "1256:  {",
      "1257:   pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed: user name or password incorrect\");",
      "1258:   return -1;",
      "",
      "[Removed Lines]",
      "1255:  if (strcmp(user_password, (char *) crypt(password, user_password)) != 0)",
      "",
      "[Added Lines]",
      "1256:  crypt_password = crypt(password, user_password);",
      "1257:  if (crypt_password == NULL)",
      "1258:  {",
      "1259:   pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");",
      "1260:   return -1;",
      "1261:  }",
      "1262:  if (strcmp(user_password, crypt_password) != 0)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7241300e3df8038eeafb453edddccbb10c27fe0a",
      "candidate_info": {
        "commit_hash": "7241300e3df8038eeafb453edddccbb10c27fe0a",
        "repo": "the-tcpdump-group/libpcap",
        "commit_url": "https://github.com/the-tcpdump-group/libpcap/commit/7241300e3df8038eeafb453edddccbb10c27fe0a",
        "files": [
          "rpcapd/daemon.c"
        ],
        "message": "Don't crash if crypt() fails.\n\nIt can fail, so make sure it doesn't before comparing its result with\nthe password.\n\nThis addresses Include Security issue F12: [libpcap] Remote Packet\nCapture Daemon Null Pointer Dereference Denial of Service.",
        "before_after_code_files": [
          "rpcapd/daemon.c||rpcapd/daemon.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "rpcapd/daemon.c||rpcapd/daemon.c"
          ],
          "candidate": [
            "rpcapd/daemon.c||rpcapd/daemon.c"
          ]
        }
      },
      "candidate_diff": {
        "rpcapd/daemon.c||rpcapd/daemon.c": [
          "File: rpcapd/daemon.c -> rpcapd/daemon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1458: #ifdef HAVE_GETSPNAM",
          "1459:  struct spwd *usersp;",
          "1460: #endif",
          "1463:  if ((user = getpwnam(username)) == NULL)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1461:  char *crypt_password;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1488:  user_password = user->pw_passwd;",
          "1489: #endif",
          "1492:  {",
          "1493:   snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed: user name or password incorrect\");",
          "1494:   return -1;",
          "",
          "[Removed Lines]",
          "1491:  if (strcmp(user_password, (char *) crypt(password, user_password)) != 0)",
          "",
          "[Added Lines]",
          "1492:  crypt_password = crypt(password, user_password);",
          "1493:  if (crypt_password == NULL)",
          "1494:  {",
          "1495:   snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");",
          "1496:   return -1;",
          "1497:  }",
          "1498:  if (strcmp(user_password, crypt_password) != 0)",
          "",
          "---------------"
        ]
      }
    }
  ]
}