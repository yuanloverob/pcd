{
  "cve_id": "CVE-2018-5816",
  "cve_desc": "An integer overflow error within the \"identify()\" function (internal/dcraw_common.cpp) in LibRaw versions prior to 0.18.12 can be exploited to trigger a division by zero via specially crafted NOKIARAW file (Note: This vulnerability is caused due to an incomplete fix of CVE-2018-5804).",
  "repo": "LibRaw/LibRaw",
  "patch_hash": "1d8d1b452e5dc74033ee9f846081a0efb616cc39",
  "patch_info": {
    "commit_hash": "1d8d1b452e5dc74033ee9f846081a0efb616cc39",
    "repo": "LibRaw/LibRaw",
    "commit_url": "https://github.com/LibRaw/LibRaw/commit/1d8d1b452e5dc74033ee9f846081a0efb616cc39",
    "files": [
      "dcraw/dcraw.c",
      "internal/dcraw_common.cpp"
    ],
    "message": "reject broken/crafted NOKIARAW files",
    "before_after_code_files": [
      "dcraw/dcraw.c||dcraw/dcraw.c",
      "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
    ]
  },
  "patch_diff": {
    "dcraw/dcraw.c||dcraw/dcraw.c": [
      "File: dcraw/dcraw.c -> dcraw/dcraw.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "15738: #endif",
      "15739:  switch (tiff_bps = i*8 / (width * height)) {",
      "15740:  case  8: load_raw = &CLASS eight_bit_load_raw;  break;",
      "15742:  }",
      "15743:  raw_height = height + (top_margin = i / (width * tiff_bps/8) - height);",
      "15744:  mask[0][3] = 1;",
      "",
      "[Removed Lines]",
      "15741:  case 10: load_raw = &CLASS nokia_load_raw;",
      "",
      "[Added Lines]",
      "15741:  case 10: load_raw = &CLASS nokia_load_raw; break;",
      "15742: #ifdef LIBRAW_LIBRARY_BUILD",
      "15743:         case 0:  throw LIBRAW_EXCEPTION_IO_CORRUPT; break;",
      "15744: #endif",
      "",
      "---------------"
    ],
    "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
      "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "14399: #endif",
      "14400:  switch (tiff_bps = i*8 / (width * height)) {",
      "14401:  case  8: load_raw = &CLASS eight_bit_load_raw;  break;",
      "14403:  }",
      "14404:  raw_height = height + (top_margin = i / (width * tiff_bps/8) - height);",
      "14405:  mask[0][3] = 1;",
      "",
      "[Removed Lines]",
      "14402:  case 10: load_raw = &CLASS nokia_load_raw;",
      "",
      "[Added Lines]",
      "14402:  case 10: load_raw = &CLASS nokia_load_raw; break;",
      "14403: #ifdef LIBRAW_LIBRARY_BUILD",
      "14404:         case 0:  throw LIBRAW_EXCEPTION_IO_CORRUPT; break;",
      "14405: #endif",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "aa190e5626e819029220b8867367796fbf0989aa",
      "candidate_info": {
        "commit_hash": "aa190e5626e819029220b8867367796fbf0989aa",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/aa190e5626e819029220b8867367796fbf0989aa",
        "files": [
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp"
        ],
        "message": "reject broken/crafted NOKIARAW files",
        "before_after_code_files": [
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
          ]
        }
      },
      "candidate_diff": {
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "19624:       break;",
          "19625:     case 10:",
          "19626:       load_raw = &CLASS nokia_load_raw;",
          "19627:     }",
          "19628:     raw_height = height + (top_margin = i / (width * tiff_bps / 8) - height);",
          "19629:     mask[0][3] = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19627:       break;",
          "19628:     case 0:",
          "19629:       throw LIBRAW_EXCEPTION_IO_CORRUPT;",
          "19630:       break;",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "18125:       break;",
          "18126:     case 10:",
          "18127:       load_raw = &CLASS nokia_load_raw;",
          "18128:     }",
          "18129:     raw_height = height + (top_margin = i / (width * tiff_bps / 8) - height);",
          "18130:     mask[0][3] = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18128:       break;",
          "18129:     case 0:",
          "18130:       throw LIBRAW_EXCEPTION_IO_CORRUPT;",
          "18131:       break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "73bbe1ad073ce3696925a202df90781100358ef7",
      "candidate_info": {
        "commit_hash": "73bbe1ad073ce3696925a202df90781100358ef7",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/73bbe1ad073ce3696925a202df90781100358ef7",
        "files": [
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp"
        ],
        "message": "reject broken/crafted NOKIARAW files",
        "before_after_code_files": [
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp"
          ]
        }
      },
      "candidate_diff": {
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "19410:       break;",
          "19411:     case 10:",
          "19412:       load_raw = &CLASS nokia_load_raw;",
          "19413:     }",
          "19414:     raw_height = height + (top_margin = i / (width * tiff_bps / 8) - height);",
          "19415:     mask[0][3] = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19413:       break;",
          "19414:     case 0:",
          "19415:       throw LIBRAW_EXCEPTION_IO_CORRUPT;",
          "19416:       break;",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "17913:       break;",
          "17914:     case 10:",
          "17915:       load_raw = &CLASS nokia_load_raw;",
          "17916:     }",
          "17917:     raw_height = height + (top_margin = i / (width * tiff_bps / 8) - height);",
          "17918:     mask[0][3] = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17916:       break;",
          "17917:     case 0:",
          "17918:       throw LIBRAW_EXCEPTION_IO_CORRUPT;",
          "17919:       break;",
          "",
          "---------------"
        ]
      }
    }
  ]
}