{
  "cve_id": "CVE-2023-1390",
  "cve_desc": "A remote denial of service vulnerability was found in the Linux kernel\u2019s TIPC kernel module. The while loop in tipc_link_xmit() hits an unknown state while attempting to parse SKBs, which are not in the queue. Sending two small UDP packets to a system with a UDP bearer results in the CPU utilization for the system to instantly spike to 100%, causing a denial of service condition.",
  "repo": "torvalds/linux",
  "patch_hash": "b77413446408fdd256599daf00d5be72b5f3e7c6",
  "patch_info": {
    "commit_hash": "b77413446408fdd256599daf00d5be72b5f3e7c6",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/b77413446408fdd256599daf00d5be72b5f3e7c6",
    "files": [
      "net/tipc/link.c"
    ],
    "message": "tipc: fix NULL deref in tipc_link_xmit()\n\nThe buffer list can have zero skb as following path:\ntipc_named_node_up()->tipc_node_xmit()->tipc_link_xmit(), so\nwe need to check the list before casting an &sk_buff.\n\nFault report:\n [] tipc: Bulk publication failure\n [] general protection fault, probably for non-canonical [#1] PREEMPT [...]\n [] KASAN: null-ptr-deref in range [0x00000000000000c8-0x00000000000000cf]\n [] CPU: 0 PID: 0 Comm: swapper/0 Kdump: loaded Not tainted 5.10.0-rc4+ #2\n [] Hardware name: Bochs ..., BIOS Bochs 01/01/2011\n [] RIP: 0010:tipc_link_xmit+0xc1/0x2180\n [] Code: 24 b8 00 00 00 00 4d 39 ec 4c 0f 44 e8 e8 d7 0a 10 f9 48 [...]\n [] RSP: 0018:ffffc90000006ea0 EFLAGS: 00010202\n [] RAX: dffffc0000000000 RBX: ffff8880224da000 RCX: 1ffff11003d3cc0d\n [] RDX: 0000000000000019 RSI: ffffffff886007b9 RDI: 00000000000000c8\n [] RBP: ffffc90000007018 R08: 0000000000000001 R09: fffff52000000ded\n [] R10: 0000000000000003 R11: fffff52000000dec R12: ffffc90000007148\n [] R13: 0000000000000000 R14: 0000000000000000 R15: ffffc90000007018\n [] FS:  0000000000000000(0000) GS:ffff888037400000(0000) knlGS:000[...]\n [] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n [] CR2: 00007fffd2db5000 CR3: 000000002b08f000 CR4: 00000000000006f0\n\nFixes: af9b028e270fd (\"tipc: make media xmit call outside node spinlock context\")\nAcked-by: Jon Maloy <jmaloy@redhat.com>\nSigned-off-by: Hoang Le <hoang.h.le@dektech.com.au>\nLink: https://lore.kernel.org/r/20210108071337.3598-1-hoang.h.le@dektech.com.au\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
    "before_after_code_files": [
      "net/tipc/link.c||net/tipc/link.c"
    ]
  },
  "patch_diff": {
    "net/tipc/link.c||net/tipc/link.c": [
      "File: net/tipc/link.c -> net/tipc/link.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1030: int tipc_link_xmit(struct tipc_link *l, struct sk_buff_head *list,",
      "1031:      struct sk_buff_head *xmitq)",
      "1032: {",
      "1034:  struct sk_buff_head *backlogq = &l->backlogq;",
      "1035:  struct sk_buff_head *transmq = &l->transmq;",
      "1036:  struct sk_buff *skb, *_skb;",
      "",
      "[Removed Lines]",
      "1033:  struct tipc_msg *hdr = buf_msg(skb_peek(list));",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1038:  u16 ack = l->rcv_nxt - 1;",
      "1039:  u16 seqno = l->snd_nxt;",
      "1040:  int pkt_cnt = skb_queue_len(list);",
      "1042:  unsigned int mss = tipc_link_mss(l);",
      "1043:  unsigned int cwin = l->window;",
      "1044:  unsigned int mtu = l->mtu;",
      "1045:  bool new_bundle;",
      "1046:  int rc = 0;",
      "1048:  if (unlikely(msg_size(hdr) > mtu)) {",
      "1049:   pr_warn(\"Too large msg, purging xmit list %d %d %d %d %d!\\n\",",
      "1050:    skb_queue_len(list), msg_user(hdr),",
      "",
      "[Removed Lines]",
      "1041:  int imp = msg_importance(hdr);",
      "",
      "[Added Lines]",
      "1043:  struct tipc_msg *hdr;",
      "1046:  int imp;",
      "1048:  if (pkt_cnt <= 0)",
      "1049:   return 0;",
      "1051:  hdr = buf_msg(skb_peek(list));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1053:   return -EMSGSIZE;",
      "1054:  }",
      "1057:  if (unlikely(l->backlog[imp].len >= l->backlog[imp].limit)) {",
      "1058:   if (imp == TIPC_SYSTEM_IMPORTANCE) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1060:  imp = msg_importance(hdr);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "69c9e825e812ec6d663e64ebf14bd3bc7f37e2c7",
      "candidate_info": {
        "commit_hash": "69c9e825e812ec6d663e64ebf14bd3bc7f37e2c7",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/69c9e825e812ec6d663e64ebf14bd3bc7f37e2c7",
        "files": [
          "drivers/media/usb/pwc/pwc-if.c"
        ],
        "message": "media: pwc: Use correct device for DMA\n\nThis fixes the following newly introduced warning:\n\n[   15.518253] ------------[ cut here ]------------\n[   15.518941] WARNING: CPU: 0 PID: 246 at kernel/dma/mapping.c:149 dma_map_page_attrs+0x1a8/0x1d0\n[   15.520634] Modules linked in: pwc videobuf2_vmalloc videobuf2_memops videobuf2_v4l2 videobuf2_common videodev mc efivarfs\n[   15.522335] CPU: 0 PID: 246 Comm: v4l2-test Not tainted 5.11.0-rc1+ #1\n[   15.523281] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015\n[   15.524438] RIP: 0010:dma_map_page_attrs+0x1a8/0x1d0\n[   15.525135] Code: 10 5b 5d 41 5c 41 5d c3 4d 89 d0 eb d7 4d 89 c8 89 e9 48 89 da e8 68 29 00 00 eb d1 48 89 f2 48 2b 50 18 48 89 d0 eb 83 0f 0b <0f> 0b 48 c7 c0 ff ff ff ff eb b8 48 89 d9 48 8b 40 40 e8 61 69 d2\n[   15.527938] RSP: 0018:ffffa2694047bca8 EFLAGS: 00010246\n[   15.528716] RAX: 0000000000000000 RBX: 0000000000002580 RCX: 0000000000000000\n[   15.529782] RDX: 0000000000000000 RSI: ffffcdce000ecc00 RDI: ffffa0b4bdb888a0\n[   15.530849] RBP: 0000000000000002 R08: 0000000000000002 R09: 0000000000000000\n[   15.531881] R10: 0000000000000004 R11: 000000000002d8c0 R12: 0000000000000000\n[   15.532911] R13: ffffa0b4bdb88800 R14: ffffa0b483820000 R15: ffffa0b4bdb888a0\n[   15.533942] FS:  00007fc5fbb5e4c0(0000) GS:ffffa0b4fc000000(0000) knlGS:0000000000000000\n[   15.535141] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   15.535988] CR2: 00007fc5fb6ea138 CR3: 0000000003812000 CR4: 00000000001506f0\n[   15.537025] Call Trace:\n[   15.537425]  start_streaming+0x2e9/0x4b0 [pwc]\n[   15.538143]  vb2_start_streaming+0x5e/0x110 [videobuf2_common]\n[   15.538989]  vb2_core_streamon+0x107/0x140 [videobuf2_common]\n[   15.539831]  __video_do_ioctl+0x18f/0x4a0 [videodev]\n[   15.540670]  video_usercopy+0x13a/0x5b0 [videodev]\n[   15.541349]  ? video_put_user+0x230/0x230 [videodev]\n[   15.542096]  ? selinux_file_ioctl+0x143/0x200\n[   15.542752]  v4l2_ioctl+0x40/0x50 [videodev]\n[   15.543360]  __x64_sys_ioctl+0x89/0xc0\n[   15.543930]  do_syscall_64+0x33/0x40\n[   15.544448]  entry_SYSCALL_64_after_hwframe+0x44/0xa9\n[   15.545236] RIP: 0033:0x7fc5fb671587\n[   15.545780] Code: b3 66 90 48 8b 05 11 49 2c 00 64 c7 00 26 00 00 00 48 c7 c0 ff ff ff ff c3 66 2e 0f 1f 84 00 00 00 00 00 b8 10 00 00 00 0f 05 <48> 3d 01 f0 ff ff 73 01 c3 48 8b 0d e1 48 2c 00 f7 d8 64 89 01 48\n[   15.548486] RSP: 002b:00007fff0f71f038 EFLAGS: 00000246 ORIG_RAX: 0000000000000010\n[   15.549578] RAX: ffffffffffffffda RBX: 0000000000000003 RCX: 00007fc5fb671587\n[   15.550664] RDX: 00007fff0f71f060 RSI: 0000000040045612 RDI: 0000000000000003\n[   15.551706] RBP: 0000000000000000 R08: 0000000000000000 R09: 0000000000000000\n[   15.552738] R10: 0000000000000000 R11: 0000000000000246 R12: 00007fff0f71f060\n[   15.553817] R13: 00007fff0f71f1d0 R14: 0000000000de1270 R15: 0000000000000000\n[   15.554914] ---[ end trace 7be03122966c2486 ]---\n\nFixes: 1161db6776bd (\"media: usb: pwc: Don't use coherent DMA buffers for ISO transfer\")\nSigned-off-by: Matwey V. Kornilov <matwey@sai.msu.ru>\nSigned-off-by: Hans Verkuil <hverkuil-cisco@xs4all.nl>\nSigned-off-by: Mauro Carvalho Chehab <mchehab+huawei@kernel.org>",
        "before_after_code_files": [
          "drivers/media/usb/pwc/pwc-if.c||drivers/media/usb/pwc/pwc-if.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/media/usb/pwc/pwc-if.c||drivers/media/usb/pwc/pwc-if.c": [
          "File: drivers/media/usb/pwc/pwc-if.c -> drivers/media/usb/pwc/pwc-if.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "159:       size_t size, dma_addr_t *dma_handle)",
          "160: {",
          "161:  void *buffer = kmalloc(size, GFP_KERNEL);",
          "163:  if (!buffer)",
          "164:   return NULL;",
          "168:   kfree(buffer);",
          "169:   return NULL;",
          "170:  }",
          "",
          "[Removed Lines]",
          "158: static void *pwc_alloc_urb_buffer(struct device *dev,",
          "167:  if (dma_mapping_error(dev, *dma_handle)) {",
          "",
          "[Added Lines]",
          "158: static void *pwc_alloc_urb_buffer(struct usb_device *dev,",
          "161:  struct device *dmadev = dev->bus->sysdev;",
          "168:  if (dma_mapping_error(dmadev, *dma_handle)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "172:  return buffer;",
          "173: }",
          "176:     size_t size,",
          "177:     void *buffer,",
          "178:     dma_addr_t dma_handle)",
          "179: {",
          "181:  kfree(buffer);",
          "182: }",
          "",
          "[Removed Lines]",
          "175: static void pwc_free_urb_buffer(struct device *dev,",
          "180:  dma_unmap_single(dev, dma_handle, size, DMA_FROM_DEVICE);",
          "",
          "[Added Lines]",
          "176: static void pwc_free_urb_buffer(struct usb_device *dev,",
          "181:  struct device *dmadev = dev->bus->sysdev;",
          "183:  dma_unmap_single(dmadev, dma_handle, size, DMA_FROM_DEVICE);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "282: static void pwc_isoc_handler(struct urb *urb)",
          "283: {",
          "284:  struct pwc_device *pdev = (struct pwc_device *)urb->context;",
          "285:  int i, fst, flen;",
          "286:  unsigned char *iso_buf = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "288:  struct device *dmadev = urb->dev->bus->sysdev;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "329:  pdev->visoc_errors = 0;",
          "332:     urb->transfer_dma,",
          "333:     urb->transfer_buffer_length,",
          "334:     DMA_FROM_DEVICE);",
          "",
          "[Removed Lines]",
          "331:  dma_sync_single_for_cpu(&urb->dev->dev,",
          "",
          "[Added Lines]",
          "335:  dma_sync_single_for_cpu(dmadev,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "379:   pdev->vlast_packet_size = flen;",
          "380:  }",
          "383:        urb->transfer_dma,",
          "384:        urb->transfer_buffer_length,",
          "385:        DMA_FROM_DEVICE);",
          "",
          "[Removed Lines]",
          "382:  dma_sync_single_for_device(&urb->dev->dev,",
          "",
          "[Added Lines]",
          "386:  dma_sync_single_for_device(dmadev,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "461:   urb->pipe = usb_rcvisocpipe(udev, pdev->vendpoint);",
          "462:   urb->transfer_flags = URB_ISO_ASAP | URB_NO_TRANSFER_DMA_MAP;",
          "463:   urb->transfer_buffer_length = ISO_BUFFER_SIZE;",
          "465:            urb->transfer_buffer_length,",
          "466:            &urb->transfer_dma);",
          "467:   if (urb->transfer_buffer == NULL) {",
          "",
          "[Removed Lines]",
          "464:   urb->transfer_buffer = pwc_alloc_urb_buffer(&udev->dev,",
          "",
          "[Added Lines]",
          "468:   urb->transfer_buffer = pwc_alloc_urb_buffer(udev,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "524:   if (urb) {",
          "525:    PWC_DEBUG_MEMORY(\"Freeing URB\\n\");",
          "526:    if (urb->transfer_buffer)",
          "528:           urb->transfer_buffer_length,",
          "529:           urb->transfer_buffer,",
          "530:           urb->transfer_dma);",
          "",
          "[Removed Lines]",
          "527:     pwc_free_urb_buffer(&urb->dev->dev,",
          "",
          "[Added Lines]",
          "531:     pwc_free_urb_buffer(urb->dev,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "661f385961f06f36da24cf408d461f988d0c39ad",
      "candidate_info": {
        "commit_hash": "661f385961f06f36da24cf408d461f988d0c39ad",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/661f385961f06f36da24cf408d461f988d0c39ad",
        "files": [
          "drivers/infiniband/sw/siw/siw.h",
          "drivers/infiniband/sw/siw/siw_qp.c",
          "drivers/infiniband/sw/siw/siw_qp_rx.c",
          "drivers/infiniband/sw/siw/siw_qp_tx.c",
          "drivers/infiniband/sw/siw/siw_verbs.c"
        ],
        "message": "RDMA/siw: Fix handling of zero-sized Read and Receive Queues.\n\nDuring connection setup, the application may choose to zero-size inbound\nand outbound READ queues, as well as the Receive queue.  This patch fixes\nhandling of zero-sized queues, but not prevents it.\n\nKamal Heib says in an initial error report:\n\n When running the blktests over siw the following shift-out-of-bounds is\n reported, this is happening because the passed IRD or ORD from the ulp\n could be zero which will lead to unexpected behavior when calling\n roundup_pow_of_two(), fix that by blocking zero values of ORD or IRD.\n\n   UBSAN: shift-out-of-bounds in ./include/linux/log2.h:57:13\n   shift exponent 64 is too large for 64-bit type 'long unsigned int'\n   CPU: 20 PID: 3957 Comm: kworker/u64:13 Tainted: G S     5.10.0-rc6 #2\n   Hardware name: Dell Inc. PowerEdge R630/02C2CP, BIOS 2.1.5 04/11/2016\n   Workqueue: iw_cm_wq cm_work_handler [iw_cm]\n   Call Trace:\n    dump_stack+0x99/0xcb\n    ubsan_epilogue+0x5/0x40\n    __ubsan_handle_shift_out_of_bounds.cold.11+0xb4/0xf3\n    ? down_write+0x183/0x3d0\n    siw_qp_modify.cold.8+0x2d/0x32 [siw]\n    ? __local_bh_enable_ip+0xa5/0xf0\n    siw_accept+0x906/0x1b60 [siw]\n    ? xa_load+0x147/0x1f0\n    ? siw_connect+0x17a0/0x17a0 [siw]\n    ? lock_downgrade+0x700/0x700\n    ? siw_get_base_qp+0x1c2/0x340 [siw]\n    ? _raw_spin_unlock_irqrestore+0x39/0x40\n    iw_cm_accept+0x1f4/0x430 [iw_cm]\n    rdma_accept+0x3fa/0xb10 [rdma_cm]\n    ? check_flush_dependency+0x410/0x410\n    ? cma_rep_recv+0x570/0x570 [rdma_cm]\n    nvmet_rdma_queue_connect+0x1a62/0x2680 [nvmet_rdma]\n    ? nvmet_rdma_alloc_cmds+0xce0/0xce0 [nvmet_rdma]\n    ? lock_release+0x56e/0xcc0\n    ? lock_downgrade+0x700/0x700\n    ? lock_downgrade+0x700/0x700\n    ? __xa_alloc_cyclic+0xef/0x350\n    ? __xa_alloc+0x2d0/0x2d0\n    ? rdma_restrack_add+0xbe/0x2c0 [ib_core]\n    ? __ww_mutex_die+0x190/0x190\n    cma_cm_event_handler+0xf2/0x500 [rdma_cm]\n    iw_conn_req_handler+0x910/0xcb0 [rdma_cm]\n    ? _raw_spin_unlock_irqrestore+0x39/0x40\n    ? trace_hardirqs_on+0x1c/0x150\n    ? cma_ib_handler+0x8a0/0x8a0 [rdma_cm]\n    ? __kasan_kmalloc.constprop.7+0xc1/0xd0\n    cm_work_handler+0x121c/0x17a0 [iw_cm]\n    ? iw_cm_reject+0x190/0x190 [iw_cm]\n    ? trace_hardirqs_on+0x1c/0x150\n    process_one_work+0x8fb/0x16c0\n    ? pwq_dec_nr_in_flight+0x320/0x320\n    worker_thread+0x87/0xb40\n    ? __kthread_parkme+0xd1/0x1a0\n    ? process_one_work+0x16c0/0x16c0\n    kthread+0x35f/0x430\n    ? kthread_mod_delayed_work+0x180/0x180\n    ret_from_fork+0x22/0x30\n\nFixes: a531975279f3 (\"rdma/siw: main include file\")\nFixes: f29dd55b0236 (\"rdma/siw: queue pair methods\")\nFixes: 8b6a361b8c48 (\"rdma/siw: receive path\")\nFixes: b9be6f18cf9e (\"rdma/siw: transmit path\")\nFixes: 303ae1cdfdf7 (\"rdma/siw: application interface\")\nLink: https://lore.kernel.org/r/20210108125845.1803-1-bmt@zurich.ibm.com\nReported-by: Kamal Heib <kamalheib1@gmail.com>\nReported-by: Yi Zhang <yi.zhang@redhat.com>\nReported-by: kernel test robot <lkp@intel.com>\nSigned-off-by: Bernard Metzler <bmt@zurich.ibm.com>\nSigned-off-by: Jason Gunthorpe <jgg@nvidia.com>",
        "before_after_code_files": [
          "drivers/infiniband/sw/siw/siw.h||drivers/infiniband/sw/siw/siw.h",
          "drivers/infiniband/sw/siw/siw_qp.c||drivers/infiniband/sw/siw/siw_qp.c",
          "drivers/infiniband/sw/siw/siw_qp_rx.c||drivers/infiniband/sw/siw/siw_qp_rx.c",
          "drivers/infiniband/sw/siw/siw_qp_tx.c||drivers/infiniband/sw/siw/siw_qp_tx.c",
          "drivers/infiniband/sw/siw/siw_verbs.c||drivers/infiniband/sw/siw/siw_verbs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/infiniband/sw/siw/siw.h||drivers/infiniband/sw/siw/siw.h": [
          "File: drivers/infiniband/sw/siw/siw.h -> drivers/infiniband/sw/siw/siw.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "653: {",
          "654:  struct siw_sqe *orq_e = orq_get_tail(qp);",
          "657:   return orq_e;",
          "659:  return NULL;",
          "",
          "[Removed Lines]",
          "656:  if (orq_e && READ_ONCE(orq_e->flags) == 0)",
          "",
          "[Added Lines]",
          "656:  if (READ_ONCE(orq_e->flags) == 0)",
          "",
          "---------------"
        ],
        "drivers/infiniband/sw/siw/siw_qp.c||drivers/infiniband/sw/siw/siw_qp.c": [
          "File: drivers/infiniband/sw/siw/siw_qp.c -> drivers/infiniband/sw/siw/siw_qp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "200: static int siw_qp_readq_init(struct siw_qp *qp, int irq_size, int orq_size)",
          "201: {",
          "213:  }",
          "221:  }",
          "222:  siw_dbg_qp(qp, \"ORD %d, IRD %d\\n\", orq_size, irq_size);",
          "223:  return 0;",
          "224: }",
          "",
          "[Removed Lines]",
          "202:  irq_size = roundup_pow_of_two(irq_size);",
          "203:  orq_size = roundup_pow_of_two(orq_size);",
          "205:  qp->attrs.irq_size = irq_size;",
          "206:  qp->attrs.orq_size = orq_size;",
          "208:  qp->irq = vzalloc(irq_size * sizeof(struct siw_sqe));",
          "209:  if (!qp->irq) {",
          "210:   siw_dbg_qp(qp, \"irq malloc for %d failed\\n\", irq_size);",
          "211:   qp->attrs.irq_size = 0;",
          "212:   return -ENOMEM;",
          "214:  qp->orq = vzalloc(orq_size * sizeof(struct siw_sqe));",
          "215:  if (!qp->orq) {",
          "216:   siw_dbg_qp(qp, \"orq malloc for %d failed\\n\", orq_size);",
          "217:   qp->attrs.orq_size = 0;",
          "218:   qp->attrs.irq_size = 0;",
          "219:   vfree(qp->irq);",
          "220:   return -ENOMEM;",
          "",
          "[Added Lines]",
          "202:  if (irq_size) {",
          "203:   irq_size = roundup_pow_of_two(irq_size);",
          "204:   qp->irq = vzalloc(irq_size * sizeof(struct siw_sqe));",
          "205:   if (!qp->irq) {",
          "206:    qp->attrs.irq_size = 0;",
          "207:    return -ENOMEM;",
          "208:   }",
          "210:  if (orq_size) {",
          "211:   orq_size = roundup_pow_of_two(orq_size);",
          "212:   qp->orq = vzalloc(orq_size * sizeof(struct siw_sqe));",
          "213:   if (!qp->orq) {",
          "214:    qp->attrs.orq_size = 0;",
          "215:    qp->attrs.irq_size = 0;",
          "216:    vfree(qp->irq);",
          "217:    return -ENOMEM;",
          "218:   }",
          "220:  qp->attrs.irq_size = irq_size;",
          "221:  qp->attrs.orq_size = orq_size;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "288:  if (ctrl & MPA_V2_RDMA_WRITE_RTR)",
          "289:   wqe->sqe.opcode = SIW_OP_WRITE;",
          "290:  else if (ctrl & MPA_V2_RDMA_READ_RTR) {",
          "293:   wqe->sqe.opcode = SIW_OP_READ;",
          "295:   spin_lock(&qp->orq_lock);",
          "298:   if (rreq) {",
          "299:    siw_read_to_orq(rreq, &wqe->sqe);",
          "300:    qp->orq_put++;",
          "",
          "[Removed Lines]",
          "291:   struct siw_sqe *rreq;",
          "297:   rreq = orq_get_free(qp);",
          "",
          "[Added Lines]",
          "291:   struct siw_sqe *rreq = NULL;",
          "297:   if (qp->attrs.orq_size)",
          "298:    rreq = orq_get_free(qp);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "877:  rreq->num_sge = 1;",
          "878: }",
          "887: {",
          "889:  struct siw_wqe *wqe = tx_wqe(qp);",
          "890:  int rv = 1;",
          "934:   goto out;",
          "935:  }",
          "946:    rv = -EINVAL;",
          "947:    goto out;",
          "948:   }",
          "962:   }",
          "1001:   }",
          "1008:  }",
          "1009: out:",
          "1010:  if (unlikely(rv < 0)) {",
          "1011:   siw_dbg_qp(qp, \"error %d\\n\", rv);",
          "",
          "[Removed Lines]",
          "886: int siw_activate_tx(struct siw_qp *qp)",
          "888:  struct siw_sqe *irqe, *sqe;",
          "892:  irqe = &qp->irq[qp->irq_get % qp->attrs.irq_size];",
          "894:  if (irqe->flags & SIW_WQE_VALID) {",
          "895:   sqe = sq_get_next(qp);",
          "901:   if (sqe && ++qp->irq_burst >= SIW_IRQ_MAXBURST_SQ_ACTIVE) {",
          "902:    qp->irq_burst = 0;",
          "903:    goto skip_irq;",
          "904:   }",
          "905:   memset(wqe->mem, 0, sizeof(*wqe->mem) * SIW_MAX_SGE);",
          "906:   wqe->wr_status = SIW_WR_QUEUED;",
          "909:   wqe->sqe.opcode = SIW_OP_READ_RESPONSE;",
          "910:   wqe->sqe.flags = 0;",
          "911:   if (irqe->num_sge) {",
          "912:    wqe->sqe.num_sge = 1;",
          "913:    wqe->sqe.sge[0].length = irqe->sge[0].length;",
          "914:    wqe->sqe.sge[0].laddr = irqe->sge[0].laddr;",
          "915:    wqe->sqe.sge[0].lkey = irqe->sge[0].lkey;",
          "916:   } else {",
          "917:    wqe->sqe.num_sge = 0;",
          "918:   }",
          "923:   wqe->sqe.sge[1].length = irqe->sge[1].length;",
          "925:   wqe->sqe.rkey = irqe->rkey;",
          "926:   wqe->sqe.raddr = irqe->raddr;",
          "928:   wqe->processed = 0;",
          "929:   qp->irq_get++;",
          "932:   smp_store_mb(irqe->flags, 0);",
          "936:  sqe = sq_get_next(qp);",
          "937:  if (sqe) {",
          "938: skip_irq:",
          "939:   memset(wqe->mem, 0, sizeof(*wqe->mem) * SIW_MAX_SGE);",
          "940:   wqe->wr_status = SIW_WR_QUEUED;",
          "943:   memcpy(&wqe->sqe, sqe, sizeof(*sqe));",
          "945:   if (wqe->sqe.opcode >= SIW_NUM_OPCODES) {",
          "949:   if (wqe->sqe.flags & SIW_WQE_INLINE) {",
          "950:    if (wqe->sqe.opcode != SIW_OP_SEND &&",
          "951:        wqe->sqe.opcode != SIW_OP_WRITE) {",
          "952:     rv = -EINVAL;",
          "953:     goto out;",
          "954:    }",
          "955:    if (wqe->sqe.sge[0].length > SIW_MAX_INLINE) {",
          "956:     rv = -EINVAL;",
          "957:     goto out;",
          "958:    }",
          "959:    wqe->sqe.sge[0].laddr = (uintptr_t)&wqe->sqe.sge[1];",
          "960:    wqe->sqe.sge[0].lkey = 0;",
          "961:    wqe->sqe.num_sge = 1;",
          "963:   if (wqe->sqe.flags & SIW_WQE_READ_FENCE) {",
          "965:    if (unlikely(wqe->sqe.opcode == SIW_OP_READ ||",
          "966:          wqe->sqe.opcode ==",
          "967:           SIW_OP_READ_LOCAL_INV)) {",
          "968:     siw_dbg_qp(qp, \"cannot fence read\\n\");",
          "969:     rv = -EINVAL;",
          "970:     goto out;",
          "971:    }",
          "972:    spin_lock(&qp->orq_lock);",
          "974:    if (!siw_orq_empty(qp)) {",
          "975:     qp->tx_ctx.orq_fence = 1;",
          "976:     rv = 0;",
          "977:    }",
          "978:    spin_unlock(&qp->orq_lock);",
          "980:   } else if (wqe->sqe.opcode == SIW_OP_READ ||",
          "981:       wqe->sqe.opcode == SIW_OP_READ_LOCAL_INV) {",
          "982:    struct siw_sqe *rreq;",
          "984:    wqe->sqe.num_sge = 1;",
          "986:    spin_lock(&qp->orq_lock);",
          "988:    rreq = orq_get_free(qp);",
          "989:    if (rreq) {",
          "994:     siw_read_to_orq(rreq, &wqe->sqe);",
          "995:     qp->orq_put++;",
          "996:    } else {",
          "997:     qp->tx_ctx.orq_fence = 1;",
          "998:     rv = 0;",
          "999:    }",
          "1000:    spin_unlock(&qp->orq_lock);",
          "1004:   smp_store_mb(sqe->flags, 0);",
          "1005:   qp->sq_get++;",
          "1006:  } else {",
          "1007:   rv = 0;",
          "",
          "[Added Lines]",
          "881: static int siw_activate_tx_from_sq(struct siw_qp *qp)",
          "883:  struct siw_sqe *sqe;",
          "887:  sqe = sq_get_next(qp);",
          "888:  if (!sqe)",
          "889:   return 0;",
          "891:  memset(wqe->mem, 0, sizeof(*wqe->mem) * SIW_MAX_SGE);",
          "892:  wqe->wr_status = SIW_WR_QUEUED;",
          "895:  memcpy(&wqe->sqe, sqe, sizeof(*sqe));",
          "897:  if (wqe->sqe.opcode >= SIW_NUM_OPCODES) {",
          "898:   rv = -EINVAL;",
          "901:  if (wqe->sqe.flags & SIW_WQE_INLINE) {",
          "902:   if (wqe->sqe.opcode != SIW_OP_SEND &&",
          "903:       wqe->sqe.opcode != SIW_OP_WRITE) {",
          "907:   if (wqe->sqe.sge[0].length > SIW_MAX_INLINE) {",
          "908:    rv = -EINVAL;",
          "909:    goto out;",
          "911:   wqe->sqe.sge[0].laddr = (uintptr_t)&wqe->sqe.sge[1];",
          "912:   wqe->sqe.sge[0].lkey = 0;",
          "913:   wqe->sqe.num_sge = 1;",
          "914:  }",
          "915:  if (wqe->sqe.flags & SIW_WQE_READ_FENCE) {",
          "917:   if (unlikely(wqe->sqe.opcode == SIW_OP_READ ||",
          "918:         wqe->sqe.opcode ==",
          "919:          SIW_OP_READ_LOCAL_INV)) {",
          "920:    siw_dbg_qp(qp, \"cannot fence read\\n\");",
          "921:    rv = -EINVAL;",
          "922:    goto out;",
          "923:   }",
          "924:   spin_lock(&qp->orq_lock);",
          "926:   if (qp->attrs.orq_size && !siw_orq_empty(qp)) {",
          "927:    qp->tx_ctx.orq_fence = 1;",
          "928:    rv = 0;",
          "929:   }",
          "930:   spin_unlock(&qp->orq_lock);",
          "932:  } else if (wqe->sqe.opcode == SIW_OP_READ ||",
          "933:      wqe->sqe.opcode == SIW_OP_READ_LOCAL_INV) {",
          "934:   struct siw_sqe *rreq;",
          "936:   if (unlikely(!qp->attrs.orq_size)) {",
          "938:    rv = -EINVAL;",
          "939:    goto out;",
          "940:   }",
          "941:   wqe->sqe.num_sge = 1;",
          "943:   spin_lock(&qp->orq_lock);",
          "945:   rreq = orq_get_free(qp);",
          "946:   if (rreq) {",
          "951:    siw_read_to_orq(rreq, &wqe->sqe);",
          "952:    qp->orq_put++;",
          "953:   } else {",
          "954:    qp->tx_ctx.orq_fence = 1;",
          "955:    rv = 0;",
          "957:   spin_unlock(&qp->orq_lock);",
          "961:  smp_store_mb(sqe->flags, 0);",
          "962:  qp->sq_get++;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1014:  return rv;",
          "1015: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "977: int siw_activate_tx(struct siw_qp *qp)",
          "978: {",
          "979:  struct siw_sqe *irqe;",
          "980:  struct siw_wqe *wqe = tx_wqe(qp);",
          "982:  if (!qp->attrs.irq_size)",
          "983:   return siw_activate_tx_from_sq(qp);",
          "985:  irqe = &qp->irq[qp->irq_get % qp->attrs.irq_size];",
          "987:  if (!(irqe->flags & SIW_WQE_VALID))",
          "988:   return siw_activate_tx_from_sq(qp);",
          "994:  if (sq_get_next(qp) && ++qp->irq_burst >= SIW_IRQ_MAXBURST_SQ_ACTIVE) {",
          "995:   qp->irq_burst = 0;",
          "996:   return siw_activate_tx_from_sq(qp);",
          "997:  }",
          "998:  memset(wqe->mem, 0, sizeof(*wqe->mem) * SIW_MAX_SGE);",
          "999:  wqe->wr_status = SIW_WR_QUEUED;",
          "1002:  wqe->sqe.opcode = SIW_OP_READ_RESPONSE;",
          "1003:  wqe->sqe.flags = 0;",
          "1004:  if (irqe->num_sge) {",
          "1005:   wqe->sqe.num_sge = 1;",
          "1006:   wqe->sqe.sge[0].length = irqe->sge[0].length;",
          "1007:   wqe->sqe.sge[0].laddr = irqe->sge[0].laddr;",
          "1008:   wqe->sqe.sge[0].lkey = irqe->sge[0].lkey;",
          "1009:  } else {",
          "1010:   wqe->sqe.num_sge = 0;",
          "1011:  }",
          "1016:  wqe->sqe.sge[1].length = irqe->sge[1].length;",
          "1018:  wqe->sqe.rkey = irqe->rkey;",
          "1019:  wqe->sqe.raddr = irqe->raddr;",
          "1021:  wqe->processed = 0;",
          "1022:  qp->irq_get++;",
          "1025:  smp_store_mb(irqe->flags, 0);",
          "1027:  return 1;",
          "1028: }",
          "",
          "---------------"
        ],
        "drivers/infiniband/sw/siw/siw_qp_rx.c||drivers/infiniband/sw/siw/siw_qp_rx.c": [
          "File: drivers/infiniband/sw/siw/siw_qp_rx.c -> drivers/infiniband/sw/siw/siw_qp_rx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "680:  }",
          "681:  spin_lock_irqsave(&qp->sq_lock, flags);",
          "683:  if (tx_work->wr_status == SIW_WR_IDLE) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "683:  if (unlikely(!qp->attrs.irq_size)) {",
          "684:   run_sq = 0;",
          "685:   goto error_irq;",
          "686:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "713:   smp_store_mb(resp->flags, SIW_WQE_VALID);",
          "714:  } else {",
          "718:   siw_init_terminate(qp, TERM_ERROR_LAYER_RDMAP,",
          "719:        RDMAP_ETYPE_REMOTE_OPERATION,",
          "",
          "[Removed Lines]",
          "715:   pr_warn(\"siw: [QP %u]: irq %d exceeded %d\\n\", qp_id(qp),",
          "716:    qp->irq_put % qp->attrs.irq_size, qp->attrs.irq_size);",
          "",
          "[Added Lines]",
          "719: error_irq:",
          "720:   pr_warn(\"siw: [QP %u]: IRQ exceeded or null, size %d\\n\",",
          "721:    qp_id(qp), qp->attrs.irq_size);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "740:  struct siw_sqe *orqe;",
          "741:  struct siw_wqe *wqe = NULL;",
          "744:  smp_mb();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "748:  if (unlikely(!qp->attrs.orq_size))",
          "749:   return -EPROTO;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "797:   rv = siw_orqe_start_rx(qp);",
          "798:   if (rv) {",
          "801:    goto error_term;",
          "802:   }",
          "803:   rv = siw_rresp_check_ntoh(srx, frx);",
          "",
          "[Removed Lines]",
          "799:    pr_warn(\"siw: [QP %u]: ORQ empty at idx %d\\n\",",
          "800:     qp_id(qp), qp->orq_get % qp->attrs.orq_size);",
          "",
          "[Added Lines]",
          "807:    pr_warn(\"siw: [QP %u]: ORQ empty, size %d\\n\",",
          "808:     qp_id(qp), qp->attrs.orq_size);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1290:            wc_status);",
          "1291:   siw_wqe_put_mem(wqe, SIW_OP_READ);",
          "1294:    rv = siw_check_tx_fence(qp);",
          "1298:   break;",
          "1300:  case RDMAP_RDMA_READ_REQ:",
          "",
          "[Removed Lines]",
          "1293:   if (!error)",
          "1295:   else",
          "1297:    WRITE_ONCE(orq_get_current(qp)->flags, 0);",
          "",
          "[Added Lines]",
          "1301:   if (!error) {",
          "1303:   } else {",
          "1305:    if (qp->attrs.orq_size)",
          "1306:     WRITE_ONCE(orq_get_current(qp)->flags, 0);",
          "1307:   }",
          "",
          "---------------"
        ],
        "drivers/infiniband/sw/siw/siw_qp_tx.c||drivers/infiniband/sw/siw/siw_qp_tx.c": [
          "File: drivers/infiniband/sw/siw/siw_qp_tx.c -> drivers/infiniband/sw/siw/siw_qp_tx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1113:    qp->orq_put--;",
          "1114:    qp->orq[qp->orq_put % qp->attrs.orq_size].flags = 0;",
          "",
          "[Removed Lines]",
          "1110:   if (tx_type == SIW_OP_READ ||",
          "1111:       tx_type == SIW_OP_READ_LOCAL_INV) {",
          "",
          "[Added Lines]",
          "1110:   if ((tx_type == SIW_OP_READ ||",
          "1111:        tx_type == SIW_OP_READ_LOCAL_INV) && qp->attrs.orq_size) {",
          "",
          "---------------"
        ],
        "drivers/infiniband/sw/siw/siw_verbs.c||drivers/infiniband/sw/siw/siw_verbs.c": [
          "File: drivers/infiniband/sw/siw/siw_verbs.c -> drivers/infiniband/sw/siw/siw_verbs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "365:  if (rv)",
          "366:   goto err_out;",
          "376:  if (udata)",
          "377:   qp->sendq = vmalloc_user(num_sqe * sizeof(struct siw_sqe));",
          "",
          "[Removed Lines]",
          "373:  num_sqe = roundup_pow_of_two(attrs->cap.max_send_wr);",
          "374:  num_rqe = roundup_pow_of_two(attrs->cap.max_recv_wr);",
          "",
          "[Added Lines]",
          "368:  num_sqe = attrs->cap.max_send_wr;",
          "369:  num_rqe = attrs->cap.max_recv_wr;",
          "376:  if (num_sqe)",
          "377:   num_sqe = roundup_pow_of_two(num_sqe);",
          "378:  else {",
          "380:   rv = -EINVAL;",
          "381:   goto err_out;",
          "382:  }",
          "383:  if (num_rqe)",
          "384:   num_rqe = roundup_pow_of_two(num_rqe);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "379:   qp->sendq = vzalloc(num_sqe * sizeof(struct siw_sqe));",
          "381:  if (qp->sendq == NULL) {",
          "383:   rv = -ENOMEM;",
          "384:   goto err_out_xa;",
          "385:  }",
          "",
          "[Removed Lines]",
          "382:   siw_dbg(base_dev, \"SQ size %d alloc failed\\n\", num_sqe);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "413:    qp->recvq = vzalloc(num_rqe * sizeof(struct siw_rqe));",
          "415:   if (qp->recvq == NULL) {",
          "417:    rv = -ENOMEM;",
          "418:    goto err_out_xa;",
          "419:   }",
          "",
          "[Removed Lines]",
          "416:    siw_dbg(base_dev, \"RQ size %d alloc failed\\n\", num_rqe);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "966:  unsigned long flags;",
          "967:  int rv = 0;",
          "972:  }",
          "973:  if (!rdma_is_kernel_res(&qp->base_qp.res)) {",
          "974:   siw_dbg_qp(qp, \"no kernel post_recv for user mapped rq\\n\");",
          "",
          "[Removed Lines]",
          "969:  if (qp->srq) {",
          "",
          "[Added Lines]",
          "977:  if (qp->srq || qp->attrs.rq_size == 0) {",
          "979:   return -EINVAL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7073fb98eb5771c0e21b9ca36f60fe8a98735f2",
      "candidate_info": {
        "commit_hash": "f7073fb98eb5771c0e21b9ca36f60fe8a98735f2",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/f7073fb98eb5771c0e21b9ca36f60fe8a98735f2",
        "files": [
          "drivers/gpu/drm/i915/gem/i915_gem_stolen.c"
        ],
        "message": "drm/i915/gem: Remove stolen node before releasing the region\n\nIf this stolen object holds the last reference to the region, we need to\nremove our drm_mm_node before freeing the region's drm_mm.\n\n<4> [431.679591] Memory manager not clean during takedown.\n<4> [431.679633] WARNING: CPU: 0 PID: 110 at drivers/gpu/drm/drm_mm.c:999 drm_mm_takedown+0x51/0x100\n<4> [431.679655] Modules linked in: i915 vgem btusb snd_hda_codec_hdmi btrtl btbcm btintel snd_hda_codec_realtek snd_hda_codec_generic ledtrig_audio bluetooth coretemp crct10dif_pclmul crc32_pclmul ghash_clmulni_intel ecdh_generic ecc r8169 realtek lpc_ich snd_intel_dspcfg snd_hda_codec snd_hwdep snd_hda_core snd_pcm pinctrl_cherryview prime_numbers [last unloaded: i915]\n<4> [431.679883] CPU: 0 PID: 110 Comm: kworker/u4:3 Tainted: G     U            5.11.0-rc3-CI-CI_DRM_9583+ #1\n<4> [431.679895] Hardware name:  /NUC5CPYB, BIOS PYBSWCEL.86A.0058.2016.1102.1842 11/02/2016\n<4> [431.679905] Workqueue: i915 __i915_gem_free_work [i915]\n<4> [431.680831] RIP: 0010:drm_mm_takedown+0x51/0x100\n<4> [431.680850] Code: 44 24 08 65 48 33 04 25 28 00 00 00 0f 85 b6 00 00 00 48 83 c4 10 5b 5d 41 5c c3 48 89 fb 48 c7 c7 c8 b7 38 82 e8 00 d6 37 00 <0f> 0b 48 8b 3d 96 d5 d1 00 ba 00 10 00 00 be c0 0c 00 00 e8 d7 64\n<4> [431.680862] RSP: 0018:ffffc90000ad7dc0 EFLAGS: 00010282\n<4> [431.680879] RAX: 0000000000000000 RBX: ffff8881109aa140 RCX: 0000000000000001\n<4> [431.680888] RDX: 0000000080000001 RSI: ffffffff8235a70f RDI: 00000000ffffffff\n<4> [431.680897] RBP: ffff8881109aa178 R08: 0000000000000001 R09: 0000000000000001\n<4> [431.680906] R10: 0000000025eaec48 R11: 00000000f5b271a7 R12: ffff88810a38ddc0\n<4> [431.680916] R13: 00000000ffffffff R14: ffffffff82861b70 R15: ffff88810b715538\n<4> [431.680925] FS:  0000000000000000(0000) GS:ffff88817b800000(0000) knlGS:0000000000000000\n<4> [431.680935] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n<4> [431.680945] CR2: 000056377cfd7c48 CR3: 00000001045de000 CR4: 00000000001006f0\n<4> [431.680954] Call Trace:\n<4> [431.680977]  __intel_memory_region_destroy+0x24/0x50 [i915]\n<4> [431.681340]  i915_gem_object_release_stolen+0x26/0x40 [i915]\n<4> [431.681637]  __i915_gem_free_objects.isra.21+0x1ef/0x3b0 [i915]\n<4> [431.681935]  process_one_work+0x270/0x5c0\n<4> [431.682022]  worker_thread+0x37/0x380\n<4> [431.682047]  ? process_one_work+0x5c0/0x5c0\n<4> [431.682062]  kthread+0x146/0x170\n<4> [431.682077]  ? kthread_park+0x80/0x80\n<4> [431.682098]  ret_from_fork+0x22/0x30\n<4> [431.682153] irq event stamp: 1872905\n<4> [431.682162] hardirqs last  enabled at (1872911): [<ffffffff8112bd9a>] console_unlock+0x49a/0x580\n<4> [431.682176] hardirqs last disabled at (1872916): [<ffffffff8112bd06>] console_unlock+0x406/0x580\n<4> [431.682187] softirqs last  enabled at (1872850): [<ffffffff81e00342>] __do_softirq+0x342/0x48e\n<4> [431.682201] softirqs last disabled at (1872845): [<ffffffff81c00f52>] asm_call_irq_on_stack+0x12/0x20\n<4> [431.682214] ---[ end trace 5d3bcd818e2e3816 ]---\n<3> [431.686188] [drm:drm_mm_takedown] *ERROR* node [0002d000 + 00004000]: inserted at\n drm_mm_insert_node_in_range+0x34a/0x5b0\n i915_gem_stolen_insert_node_in_range+0x7b/0xa0 [i915]\n _i915_gem_object_create_stolen+0x83/0xd0 [i915]\n i915_gem_object_create_region+0x61/0x140 [i915]\n intel_engine_create_ring+0x176/0x230 [i915]\n\nCloses: https://gitlab.freedesktop.org/drm/intel/-/issues/2927\nSigned-off-by: Chris Wilson <chris@chris-wilson.co.uk>\nReviewed-by: Matthew Auld <matthew.auld@intel.com>\nLink: https://patchwork.freedesktop.org/patch/msgid/20210112015000.16108-1-chris@chris-wilson.co.uk",
        "before_after_code_files": [
          "drivers/gpu/drm/i915/gem/i915_gem_stolen.c||drivers/gpu/drm/i915/gem/i915_gem_stolen.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/gpu/drm/i915/gem/i915_gem_stolen.c||drivers/gpu/drm/i915/gem/i915_gem_stolen.c": [
          "File: drivers/gpu/drm/i915/gem/i915_gem_stolen.c -> drivers/gpu/drm/i915/gem/i915_gem_stolen.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "608:  struct drm_mm_node *stolen = fetch_and_zero(&obj->stolen);",
          "610:  GEM_BUG_ON(!stolen);",
          "614:  i915_gem_stolen_remove_node(i915, stolen);",
          "615:  kfree(stolen);",
          "616: }",
          "618: static const struct drm_i915_gem_object_ops i915_gem_object_stolen_ops = {",
          "",
          "[Removed Lines]",
          "612:  i915_gem_object_release_memory_region(obj);",
          "",
          "[Added Lines]",
          "614:  i915_gem_object_release_memory_region(obj);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3a21777c6ee99749bac10727b3c17e5bcfebe5c1",
      "candidate_info": {
        "commit_hash": "3a21777c6ee99749bac10727b3c17e5bcfebe5c1",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/3a21777c6ee99749bac10727b3c17e5bcfebe5c1",
        "files": [
          "drivers/block/rnbd/rnbd-clt.c"
        ],
        "message": "block/rnbd-clt: avoid module unload race with close confirmation\n\nWe had kernel panic, it is caused by unload module and last\nclose confirmation.\n\ncall trace:\n[1196029.743127]  free_sess+0x15/0x50 [rtrs_client]\n[1196029.743128]  rtrs_clt_close+0x4c/0x70 [rtrs_client]\n[1196029.743129]  ? rnbd_clt_unmap_device+0x1b0/0x1b0 [rnbd_client]\n[1196029.743130]  close_rtrs+0x25/0x50 [rnbd_client]\n[1196029.743131]  rnbd_client_exit+0x93/0xb99 [rnbd_client]\n[1196029.743132]  __x64_sys_delete_module+0x190/0x260\n\nAnd in the crashdump confirmation kworker is also running.\nPID: 6943   TASK: ffff9e2ac8098000  CPU: 4   COMMAND: \"kworker/4:2\"\n #0 [ffffb206cf337c30] __schedule at ffffffff9f93f891\n #1 [ffffb206cf337cc8] schedule at ffffffff9f93fe98\n #2 [ffffb206cf337cd0] schedule_timeout at ffffffff9f943938\n #3 [ffffb206cf337d50] wait_for_completion at ffffffff9f9410a7\n #4 [ffffb206cf337da0] __flush_work at ffffffff9f08ce0e\n #5 [ffffb206cf337e20] rtrs_clt_close_conns at ffffffffc0d5f668 [rtrs_client]\n #6 [ffffb206cf337e48] rtrs_clt_close at ffffffffc0d5f801 [rtrs_client]\n #7 [ffffb206cf337e68] close_rtrs at ffffffffc0d26255 [rnbd_client]\n #8 [ffffb206cf337e78] free_sess at ffffffffc0d262ad [rnbd_client]\n #9 [ffffb206cf337e88] rnbd_clt_put_dev at ffffffffc0d266a7 [rnbd_client]\n\nThe problem is both code path try to close same session, which lead to\npanic.\n\nTo fix it, just skip the sess if the refcount already drop to 0.\n\nFixes: f7a7a5c228d4 (\"block/rnbd: client: main functionality\")\nSigned-off-by: Jack Wang <jinpu.wang@cloud.ionos.com>\nReviewed-by: Gioh Kim <gi-oh.kim@cloud.ionos.com>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
        "before_after_code_files": [
          "drivers/block/rnbd/rnbd-clt.c||drivers/block/rnbd/rnbd-clt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/block/rnbd/rnbd-clt.c||drivers/block/rnbd/rnbd-clt.c": [
          "File: drivers/block/rnbd/rnbd-clt.c -> drivers/block/rnbd/rnbd-clt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1699:  list_for_each_entry_safe(sess, sn, &sess_list, list) {",
          "1701:   close_rtrs(sess);",
          "1702:   list_for_each_entry_safe(dev, tn, &sess->devs_list, list) {",
          "",
          "[Removed Lines]",
          "1700:   WARN_ON(!rnbd_clt_get_sess(sess));",
          "",
          "[Added Lines]",
          "1700:   if (!rnbd_clt_get_sess(sess))",
          "1701:    continue;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c02e04fd4f57130e4fa75fab6f528f7a52db9b5",
      "candidate_info": {
        "commit_hash": "3c02e04fd4f57130e4fa75fab6f528f7a52db9b5",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/3c02e04fd4f57130e4fa75fab6f528f7a52db9b5",
        "files": [
          "crypto/xor.c"
        ],
        "message": "crypto: xor - Fix divide error in do_xor_speed()\n\ncrypto: Fix divide error in do_xor_speed()\n\nFrom: Kirill Tkhai <ktkhai@virtuozzo.com>\n\nLatest (but not only latest) linux-next panics with divide\nerror on my QEMU setup.\n\nThe patch at the bottom of this message fixes the problem.\n\nxor: measuring software checksum speed\ndivide error: 0000 [#1] PREEMPT SMP KASAN\nPREEMPT SMP KASAN\nCPU: 3 PID: 1 Comm: swapper/0 Not tainted 5.10.0-next-20201223+ #2177\nRIP: 0010:do_xor_speed+0xbb/0xf3\nCode: 41 ff cc 75 b5 bf 01 00 00 00 e8 3d 23 8b fe 65 8b 05 f6 49 83 7d 85 c0 75 05 e8\n 84 70 81 fe b8 00 00 50 c3 31 d2 48 8d 7b 10 <f7> f5 41 89 c4 e8 58 07 a2 fe 44 89 63 10 48 8d 7b 08\n e8 cb 07 a2\nRSP: 0000:ffff888100137dc8 EFLAGS: 00010246\nRAX: 00000000c3500000 RBX: ffffffff823f0160 RCX: 0000000000000000\nRDX: 0000000000000000 RSI: 0000000000000808 RDI: ffffffff823f0170\nRBP: 0000000000000000 R08: ffffffff8109c50f R09: ffffffff824bb6f7\nR10: fffffbfff04976de R11: 0000000000000001 R12: 0000000000000000\nR13: ffff888101997000 R14: ffff888101994000 R15: ffffffff823f0178\nFS:  0000000000000000(0000) GS:ffff8881f7780000(0000) knlGS:0000000000000000\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\nCR2: 0000000000000000 CR3: 000000000220e000 CR4: 00000000000006a0\nCall Trace:\n calibrate_xor_blocks+0x13c/0x1c4\n ? do_xor_speed+0xf3/0xf3\n do_one_initcall+0xc1/0x1b7\n ? start_kernel+0x373/0x373\n ? unpoison_range+0x3a/0x60\n kernel_init_freeable+0x1dd/0x238\n ? rest_init+0xc6/0xc6\n kernel_init+0x8/0x10a\n ret_from_fork+0x1f/0x30\n---[ end trace 5bd3c1d0b77772da ]---\n\nFixes: c055e3eae0f1 (\"crypto: xor - use ktime for template benchmarking\")\nCc: <stable@vger.kernel.org>\nSigned-off-by: Kirill Tkhai <ktkhai@virtuozzo.com>\nAcked-by: Ard Biesheuvel <ardb@kernel.org>\nSigned-off-by: Herbert Xu <herbert@gondor.apana.org.au>",
        "before_after_code_files": [
          "crypto/xor.c||crypto/xor.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "crypto/xor.c||crypto/xor.c": [
          "File: crypto/xor.c -> crypto/xor.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "107:  preempt_enable();",
          "110:  speed = (1000 * REPS * BENCH_SIZE) / (unsigned int)ktime_to_ns(min);",
          "111:  tmpl->speed = speed;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "110:  if (!min)",
          "111:   min = 1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}