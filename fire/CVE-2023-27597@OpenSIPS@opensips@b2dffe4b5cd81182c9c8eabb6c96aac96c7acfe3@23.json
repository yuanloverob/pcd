{
  "cve_id": "CVE-2023-27597",
  "cve_desc": "OpenSIPS is a Session Initiation Protocol (SIP) server implementation. Prior to versions 3.1.8 and 3.2.5, when a specially crafted SIP message is processed by the function `rewrite_ruri`, a crash occurs due to a segmentation fault. This issue causes the server to crash. It affects configurations containing functions that make use of the affected code, such as the function `setport`. This issue has been fixed in version 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
  "patch_info": {
    "commit_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "files": [
      "parser/parse_uri.c"
    ],
    "message": "[core] fix parse_uri() parsing\n\nIssue discovered during OpenSIPS Security Audit 2022,\n\tby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-358f-935m-7p9c",
    "before_after_code_files": [
      "parser/parse_uri.c||parser/parse_uri.c"
    ]
  },
  "patch_diff": {
    "parser/parse_uri.c||parser/parse_uri.c": [
      "File: parser/parse_uri.c -> parser/parse_uri.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1532:   case TELS_URI_T:",
      "1534:    uri->user=uri->host;",
      "1536:    uri->host.len=0;",
      "1537:    break;",
      "1538:   case SIP_URI_T:",
      "",
      "[Removed Lines]",
      "1535:    uri->host.s=\"\";",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1543:   case URN_NENA_SERVICE_URI_T:",
      "1544:    uri->user.s=0;",
      "1545:    uri->user.len=0;",
      "1548:    break;",
      "1549:   case ERROR_URI_T:",
      "1550:    LM_ERR(\"unexpected error (BUG?)\\n\");",
      "",
      "[Removed Lines]",
      "1546:    uri->host.s=\"\";",
      "1547:    uri->host.len=0;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0d346f0b6927ceb8895ffd7a4f52f28e685c12f7",
      "candidate_info": {
        "commit_hash": "0d346f0b6927ceb8895ffd7a4f52f28e685c12f7",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/0d346f0b6927ceb8895ffd7a4f52f28e685c12f7",
        "files": [
          "modules/clusterer/clusterer.c",
          "modules/clusterer/clusterer.h",
          "modules/clusterer/clusterer_mod.c",
          "modules/clusterer/doc/clusterer_admin.xml",
          "modules/clusterer/sync.c",
          "modules/clusterer/sync.h"
        ],
        "message": "clusterer: prevent permanent sync in progress state\n\nIf the sync end marker packet is not received, nodes get stuck in a\npermanent \"sync in progress\" state. This commit introduces a timeout,\nconfigurable via the \"sync_timeout\" modparam, after which a node reverts\nto the not synced state, if no sync data packet is received.\n\n(cherry picked from commit 2e5bf28aa91d9cda8304bc19bbba770e83d7cb22)",
        "before_after_code_files": [
          "modules/clusterer/clusterer.c||modules/clusterer/clusterer.c",
          "modules/clusterer/clusterer.h||modules/clusterer/clusterer.h",
          "modules/clusterer/clusterer_mod.c||modules/clusterer/clusterer_mod.c",
          "modules/clusterer/sync.c||modules/clusterer/sync.c",
          "modules/clusterer/sync.h||modules/clusterer/sync.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/clusterer/clusterer.c||modules/clusterer/clusterer.c": [
          "File: modules/clusterer/clusterer.c -> modules/clusterer/clusterer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "54: extern int node_timeout;",
          "55: extern int ping_timeout;",
          "56: extern int seed_fb_interval;",
          "59: {",
          "60:  cluster_info_t *cl;",
          "61:  struct local_cap *cap;",
          "",
          "[Removed Lines]",
          "58: void seed_fb_check_timer(utime_t ticks, void *param)",
          "",
          "[Added Lines]",
          "57: extern int sync_timeout;",
          "59: void sync_check_timer(utime_t ticks, void *param)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:   for (cap = cl->capabilities; cap; cap = cap->next) {",
          "77:    lock_get(cl->lock);",
          "78:    if ((cap->flags & CAP_STATE_ENABLED) &&",
          "88:    }",
          "90:    lock_release(cl->lock);",
          "",
          "[Removed Lines]",
          "79:     !(cap->flags & CAP_STATE_OK) &&",
          "80:     !(cap->flags & CAP_SYNC_IN_PROGRESS) &&",
          "81:     (cl->current_node->flags & NODE_IS_SEED) &&",
          "82:     (TIME_DIFF(cap->sync_req_time, now) >= seed_fb_interval*1000000)) {",
          "83:     cap->flags |= CAP_STATE_OK;",
          "84:     cap->flags &= ~CAP_SYNC_PENDING;",
          "85:     LM_INFO(\"No donor found, falling back to synced state\\n\");",
          "87:     send_single_cap_update(cl, cap, 1);",
          "",
          "[Added Lines]",
          "81:     !(cap->flags & CAP_STATE_OK)) {",
          "82:     if ((cap->flags & CAP_SYNC_PENDING) &&",
          "83:      (cl->current_node->flags & NODE_IS_SEED) &&",
          "84:      (TIME_DIFF(cap->sync_req_time, now) >=",
          "85:      seed_fb_interval*1000000)) {",
          "87:      cap->flags |= CAP_STATE_OK;",
          "88:      cap->flags &= ~CAP_SYNC_PENDING;",
          "89:      LM_INFO(\"No donor found, falling back to synced state\\n\");",
          "91:      send_single_cap_update(cl, cap, 1);",
          "93:     } else if ((cap->flags & CAP_SYNC_IN_PROGRESS) &&",
          "94:      (get_ticks() - cap->last_sync_pkt >= sync_timeout)) {",
          "96:      handle_sync_end(cl, cap, 0, 1);",
          "97:      LM_INFO(\"Sync timeout for capability [%.*s], reverting to \"",
          "98:       \"not synced state\\n\", cap->reg.name.len, cap->reg.name.s);",
          "99:     }",
          "",
          "---------------"
        ],
        "modules/clusterer/clusterer.h||modules/clusterer/clusterer.h": [
          "File: modules/clusterer/clusterer.h -> modules/clusterer/clusterer.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: #define DEFAULT_NODE_TIMEOUT 60",
          "39: #define DEFAULT_SEED_FB_INTERVAL 5",
          "41: #define UPDATE_MAX_PATH_LEN 25",
          "42: #define SMALL_MSG 300",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40: #define DEFAULT_SYNC_TIMEOUT 15",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "102:  struct buf_bin_pkt *pkt_q_back;",
          "103:  struct buf_bin_pkt *pkt_q_cutpos;",
          "104:  struct timeval sync_req_time;",
          "105:  unsigned int flags;",
          "106:  struct local_cap *next;",
          "107: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106:  int last_sync_pkt;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "144: extern str cl_internal_cap;",
          "145: extern str cl_extra_cap;",
          "149: void bin_rcv_cl_packets(bin_packet_t *packet, int packet_type,",
          "150:          struct receive_info *ri, void *att);",
          "",
          "[Removed Lines]",
          "147: void seed_fb_check_timer(utime_t ticks, void *param);",
          "",
          "[Added Lines]",
          "149: void sync_check_timer(utime_t ticks, void *param);",
          "",
          "---------------"
        ],
        "modules/clusterer/clusterer_mod.c||modules/clusterer/clusterer_mod.c": [
          "File: modules/clusterer/clusterer_mod.c -> modules/clusterer/clusterer_mod.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: int node_timeout = DEFAULT_NODE_TIMEOUT;",
          "45: int ping_timeout = DEFAULT_PING_TIMEOUT;",
          "46: int seed_fb_interval = DEFAULT_SEED_FB_INTERVAL;",
          "47: int current_id = -1;",
          "48: int db_mode = 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: int sync_timeout = DEFAULT_SYNC_TIMEOUT;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143:  {\"node_timeout\",  INT_PARAM, &node_timeout  },",
          "144:  {\"ping_timeout\",  INT_PARAM, &ping_timeout  },",
          "145:  {\"seed_fallback_interval\", INT_PARAM, &seed_fb_interval },",
          "146:  {\"id_col\",    STR_PARAM, &id_col.s   },",
          "147:  {\"cluster_id_col\",  STR_PARAM, &cluster_id_col.s },",
          "148:  {\"node_id_col\",   STR_PARAM, &node_id_col.s  },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147:  {\"sync_timeout\",        INT_PARAM,  &sync_timeout  },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "455:   }",
          "456:  }",
          "460:   LM_CRIT(\"Unable to register clusterer seed check timer\\n\");",
          "461:   goto error;",
          "462:  }",
          "",
          "[Removed Lines]",
          "458:  if (register_utimer(\"cl-seed-fb-check\", seed_fb_check_timer,",
          "459:   NULL, SEED_FB_CHECK_INTERVAL*1000, TIMER_FLAG_DELAY_ON_DELAY) < 0) {",
          "",
          "[Added Lines]",
          "460:  if (register_utimer(\"cl-sync-check\", sync_check_timer,",
          "461:   NULL, SYNC_CHECK_INTERVAL*1000, TIMER_FLAG_DELAY_ON_DELAY) < 0) {",
          "",
          "---------------"
        ],
        "modules/clusterer/sync.c||modules/clusterer/sync.c": [
          "File: modules/clusterer/sync.c -> modules/clusterer/sync.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "418:  }",
          "419: }",
          "421: void handle_sync_packet(bin_packet_t *packet, int packet_type,",
          "422:         cluster_info_t *cluster, int source_id)",
          "423: {",
          "424:  str cap_name;",
          "425:  struct local_cap *cap;",
          "428:  int data_version;",
          "430:  if (get_bin_pkg_version(packet) != BIN_SYNC_VERSION) {",
          "",
          "[Removed Lines]",
          "426:  struct buf_bin_pkt *buf_pkt, *buf_tmp, *cutpos_next;",
          "427:  bin_packet_t *bin_pkt_list = NULL, *bin_pkt, *bin_tmp;",
          "",
          "[Added Lines]",
          "421: void handle_sync_end(cluster_info_t *cluster, struct local_cap *cap,",
          "422:  int source_id, int is_timeout)",
          "423: {",
          "424:  struct buf_bin_pkt *buf_pkt, *buf_tmp, *cutpos_next;",
          "425:  bin_packet_t *bin_pkt_list = NULL, *bin_pkt, *bin_tmp;",
          "428:  while (cap->pkt_q_front) {",
          "430:   cap->pkt_q_cutpos = cap->pkt_q_back;",
          "432:   for (bin_tmp = NULL, buf_pkt = cap->pkt_q_front;",
          "433:    buf_pkt != cap->pkt_q_cutpos->next;",
          "434:    bin_tmp = bin_pkt, buf_pkt = buf_pkt->next) {",
          "436:    bin_pkt = pkg_malloc(sizeof *bin_pkt);",
          "437:    if (!bin_pkt) {",
          "438:     LM_ERR(\"No more pkg mem\\n\");",
          "439:     lock_release(cluster->lock);",
          "440:     return;",
          "441:    }",
          "443:    bin_init_buffer(bin_pkt, buf_pkt->buf.s, buf_pkt->buf.len);",
          "444:    bin_pkt->src_id = buf_pkt->src_id;",
          "446:    if (bin_tmp)",
          "447:     bin_tmp->next = bin_pkt;",
          "448:    else",
          "449:     bin_pkt_list = bin_pkt;",
          "450:   }",
          "452:   lock_release(cluster->lock);",
          "455:   cap->reg.packet_cb(bin_pkt_list);",
          "457:   lock_get(cluster->lock);",
          "460:   buf_pkt = cap->pkt_q_front;",
          "461:   cutpos_next = cap->pkt_q_cutpos->next;",
          "462:   bin_pkt = bin_pkt_list;",
          "463:   while (buf_pkt != cutpos_next) {",
          "464:    buf_tmp = buf_pkt;",
          "465:    bin_tmp = bin_pkt;",
          "466:    buf_pkt = buf_pkt->next;",
          "467:    bin_pkt = bin_pkt->next;",
          "470:    shm_free(buf_tmp->buf.s);",
          "471:    pkg_free(bin_tmp);",
          "472:    shm_free(buf_tmp);",
          "473:   }",
          "474:   cap->pkt_q_front = cutpos_next;",
          "475:   if (!cap->pkt_q_front)",
          "476:    cap->pkt_q_back = NULL;",
          "477:  }",
          "480:  cap->flags &= ~CAP_SYNC_IN_PROGRESS;",
          "482:  if (!is_timeout) {",
          "483:   cap->flags |= CAP_STATE_OK;",
          "486:   cap->reg.event_cb(SYNC_DONE, source_id);",
          "489:   send_single_cap_update(cluster, cap, 1);",
          "490:  }",
          "491: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "454:   lock_get(cluster->lock);",
          "456:   cap->flags |= CAP_SYNC_IN_PROGRESS;",
          "457:   lock_release(cluster->lock);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "527:   cap->last_sync_pkt = get_ticks();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "469:   lock_get(cluster->lock);",
          "533:   lock_release(cluster->lock);",
          "534:  }",
          "",
          "[Removed Lines]",
          "472:   while (cap->pkt_q_front) {",
          "474:    cap->pkt_q_cutpos = cap->pkt_q_back;",
          "476:    for (bin_tmp = NULL, buf_pkt = cap->pkt_q_front;",
          "477:     buf_pkt != cap->pkt_q_cutpos->next;",
          "478:     bin_tmp = bin_pkt, buf_pkt = buf_pkt->next) {",
          "480:     bin_pkt = pkg_malloc(sizeof *bin_pkt);",
          "481:     if (!bin_pkt) {",
          "482:      LM_ERR(\"No more pkg mem\\n\");",
          "483:      lock_release(cluster->lock);",
          "484:      return;",
          "485:     }",
          "487:     bin_init_buffer(bin_pkt, buf_pkt->buf.s, buf_pkt->buf.len);",
          "488:     bin_pkt->src_id = buf_pkt->src_id;",
          "490:     if (bin_tmp)",
          "491:      bin_tmp->next = bin_pkt;",
          "492:     else",
          "493:      bin_pkt_list = bin_pkt;",
          "494:    }",
          "496:    lock_release(cluster->lock);",
          "499:    cap->reg.packet_cb(bin_pkt_list);",
          "501:    lock_get(cluster->lock);",
          "504:    buf_pkt = cap->pkt_q_front;",
          "505:    cutpos_next = cap->pkt_q_cutpos->next;",
          "506:    bin_pkt = bin_pkt_list;",
          "507:    while (buf_pkt != cutpos_next) {",
          "508:     buf_tmp = buf_pkt;",
          "509:     bin_tmp = bin_pkt;",
          "510:     buf_pkt = buf_pkt->next;",
          "511:     bin_pkt = bin_pkt->next;",
          "514:     shm_free(buf_tmp->buf.s);",
          "515:     pkg_free(bin_tmp);",
          "516:     shm_free(buf_tmp);",
          "517:    }",
          "518:    cap->pkt_q_front = cutpos_next;",
          "519:    if (!cap->pkt_q_front)",
          "520:     cap->pkt_q_back = NULL;",
          "521:   }",
          "524:   cap->flags &= ~CAP_SYNC_IN_PROGRESS;",
          "525:   cap->flags |= CAP_STATE_OK;",
          "528:   cap->reg.event_cb(SYNC_DONE, source_id);",
          "531:   send_single_cap_update(cluster, cap, 1);",
          "",
          "[Added Lines]",
          "542:   handle_sync_end(cluster, cap, source_id, 0);",
          "",
          "---------------"
        ],
        "modules/clusterer/sync.h||modules/clusterer/sync.h": [
          "File: modules/clusterer/sync.h -> modules/clusterer/sync.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: int buffer_bin_pkt(bin_packet_t *packet, struct local_cap *cap, int src_id);",
          "47: int send_sync_req(str *capability, int cluster_id, int source_id);",
          "48: int ipc_dispatch_sync_reply(cluster_info_t *cluster, int node_id, str *cap_name);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: void handle_sync_end(cluster_info_t *cluster, struct local_cap *cap,",
          "50:  int source_id, int is_timeout);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ab4876f6232baf9b6ce53ed8ec0f816612a11de",
      "candidate_info": {
        "commit_hash": "4ab4876f6232baf9b6ce53ed8ec0f816612a11de",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/4ab4876f6232baf9b6ce53ed8ec0f816612a11de",
        "files": [
          "modules/clusterer/clusterer.c"
        ],
        "message": "clusterer: print the command that cannot be parsed\n\n(cherry picked from commit 8ba0309d4751ed5670800cf4fb0bdd85d6b6d7be)",
        "before_after_code_files": [
          "modules/clusterer/clusterer.c||modules/clusterer/clusterer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/clusterer/clusterer.c||modules/clusterer/clusterer.c": [
          "File: modules/clusterer/clusterer.c -> modules/clusterer/clusterer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "869:   handle_cap_update(received, src_node);",
          "870:   break;",
          "871:  default:",
          "874:  }",
          "875: }",
          "",
          "[Removed Lines]",
          "872:   LM_WARN(\"Invalid clusterer binary packet command from node: %d\\n\",",
          "873:    src_node->node_id);",
          "",
          "[Added Lines]",
          "872:   LM_WARN(\"Invalid clusterer binary packet command [%d] from node: %d\\n\",",
          "873:    packet_type, src_node->node_id);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9aa1033b9598f85d88a9bdd1b12d0cb15b0ca940",
      "candidate_info": {
        "commit_hash": "9aa1033b9598f85d88a9bdd1b12d0cb15b0ca940",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/9aa1033b9598f85d88a9bdd1b12d0cb15b0ca940",
        "files": [
          "parser/parse_to.c"
        ],
        "message": "parse_to_param(): Rework previous fix (OSS-Fuzz)\n\nInvoking strlen() on a non NULL-terminated buffer is equally bad,\npossibly even worse.  Instead, simply rely on the @end parameter being\ncorrect, which is an assumption already made by the current code of the\nfunction.\n\nFixes OSS-Fuzz#41073\n\n(cherry picked from commit 51b908f8fde0aa2eac8dbcfff319281625d6f3f2)",
        "before_after_code_files": [
          "parser/parse_to.c||parser/parse_to.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "parser/parse_to.c||parser/parse_to.c": [
          "File: parser/parse_to.c -> parser/parse_to.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "480: parse_error:",
          "481:  LM_ERR(\"unexpected char [%c] in status %d: <<%.*s>> .\\n\",",
          "484: error:",
          "485:  if (param) pkg_free(param);",
          "486:  free_to_params(to_b);",
          "",
          "[Removed Lines]",
          "482:      tmp < end? *tmp : *(buffer+strlen(buffer)-1),status,",
          "483:      (int)(tmp-buffer), ZSW(buffer));",
          "",
          "[Added Lines]",
          "482:      tmp < end? *tmp : *(end-1),status, (int)(tmp-buffer), ZSW(buffer));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "818: parse_error:",
          "819:  LM_ERR(\"unexpected char [%c] in status %d: <<%.*s>> .\\n\",",
          "822: error:",
          "823:  first_b->error=PARSE_ERROR;",
          "824:  free_to_params(first_b);",
          "",
          "[Removed Lines]",
          "820:      tmp < end? *tmp : *(buffer+strlen(buffer)-1),",
          "821:      status, (int)(tmp-buffer), buffer);",
          "",
          "[Added Lines]",
          "819:      tmp < end? *tmp : *(end-1), status, (int)(tmp-buffer), buffer);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "570c0aafab9e2983f2b10d678823962e6c9146c1",
      "candidate_info": {
        "commit_hash": "570c0aafab9e2983f2b10d678823962e6c9146c1",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/570c0aafab9e2983f2b10d678823962e6c9146c1",
        "files": [
          "modules/tm/uac.c"
        ],
        "message": "[tm] fix adding rport in local route\n\nForce the VIA rebuild if add_local_rport() (for adding rport param to VIA) was called from local route\n\nCloses #2833\n\n(cherry picked from commit c85d93c7a3c3e9177d4621163295816b77bcdddc)",
        "before_after_code_files": [
          "modules/tm/uac.c||modules/tm/uac.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/tm/uac.c||modules/tm/uac.c": [
          "File: modules/tm/uac.c -> modules/tm/uac.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:  if (req->new_uri.s || req->force_send_socket!=dialog->send_sock ||",
          "208:  req->dst_uri.len != dialog->hooks.next_hop->len ||",
          "209:  memcmp(req->dst_uri.s,dialog->hooks.next_hop->s,req->dst_uri.len) ||",
          "",
          "[Removed Lines]",
          "210:  (dst_changed=0)!=0 || req->add_rm || should_update_sip_body(req)) {",
          "",
          "[Added Lines]",
          "210:  (dst_changed=0)!=0 || req->add_rm || should_update_sip_body(req)",
          "211:  || req->msg_flags&FL_FORCE_LOCAL_RPORT) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "236:    }",
          "237:   }",
          "242:    LM_DBG(\"Interface change in local route -> \"",
          "243:     \"rebuilding via\\n\");",
          "",
          "[Removed Lines]",
          "240:   if (new_send_sock && new_send_sock != dialog->send_sock) {",
          "",
          "[Added Lines]",
          "242:   if ( (new_send_sock && new_send_sock != dialog->send_sock)",
          "243:   || (req->msg_flags&FL_FORCE_LOCAL_RPORT &&",
          "247:   (new_send_sock=dialog->send_sock)!=NULL) ) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1d314b2ad07046e3a80b0c1de59daab3cd4e08f2",
      "candidate_info": {
        "commit_hash": "1d314b2ad07046e3a80b0c1de59daab3cd4e08f2",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/1d314b2ad07046e3a80b0c1de59daab3cd4e08f2",
        "files": [
          "parser/parse_content.c"
        ],
        "message": "parse_content_length(): Fix integer overflow edge-case (OSS-Fuzz)\n\nThis completes commit 7cab422e2f, where it was still possible to cause\nan integer overflow even after the fix, with input such as 2147483609,\ndue to missing parentheses in the number equation.\n\nFixes OSS-Fuzz#52112\n\n(cherry picked from commit 837263b47dcb33909b109b5cc050c1ab4a6c64a2)",
        "before_after_code_files": [
          "parser/parse_content.c||parser/parse_content.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "parser/parse_content.c||parser/parse_content.c": [
          "File: parser/parse_content.c -> parser/parse_content.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "242:  number = 0;",
          "243:  while (p<end && *p>='0' && *p<='9') {",
          "247:     (int)(p-buffer),(int)(end-buffer), buffer);",
          "249:   }",
          "252:   size ++;",
          "253:   p++;",
          "254:  }",
          "",
          "[Removed Lines]",
          "245:   if (number > 214748363) {",
          "246:    LM_ERR(\"integer overflow risk at pos %d in len number [%.*s]\\n\",",
          "248:    return 0;",
          "251:   number = number*10 + (*p)-'0';",
          "",
          "[Added Lines]",
          "245:   if (number >= INT_MAX/10) {",
          "246:    LM_ERR(\"integer overflow risk at pos %d in length value [%.*s]\\n\",",
          "248:    return NULL;",
          "251:   number = number*10 + ((*p)-'0');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268:  return p;",
          "269: error:",
          "270:  LM_ERR(\"parse error near char [%d][%c]\\n\",*p,*p);",
          "272: }",
          "",
          "[Removed Lines]",
          "271:  return 0;",
          "",
          "[Added Lines]",
          "271:  return NULL;",
          "",
          "---------------"
        ]
      }
    }
  ]
}