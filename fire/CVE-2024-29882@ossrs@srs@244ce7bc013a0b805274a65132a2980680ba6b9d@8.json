{
  "cve_id": "CVE-2024-29882",
  "cve_desc": "SRS is a simple, high-efficiency, real-time video server. SRS's `/api/v1/vhosts/vid-<id>?callback=<payload>` endpoint didn't filter the callback function name which led to injecting malicious javascript payloads and executing XSS ( Cross-Site Scripting). This vulnerability is fixed in 5.0.210 and 6.0.121.",
  "repo": "ossrs/srs",
  "patch_hash": "244ce7bc013a0b805274a65132a2980680ba6b9d",
  "patch_info": {
    "commit_hash": "244ce7bc013a0b805274a65132a2980680ba6b9d",
    "repo": "ossrs/srs",
    "commit_url": "https://github.com/ossrs/srs/commit/244ce7bc013a0b805274a65132a2980680ba6b9d",
    "files": [
      "trunk/configure",
      "trunk/doc/CHANGELOG.md",
      "trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp",
      "trunk/src/kernel/srs_kernel_error.hpp",
      "trunk/src/protocol/srs_protocol_http_conn.cpp",
      "trunk/src/utest/srs_utest_protocol3.cpp",
      "trunk/src/utest/srs_utest_protocol3.hpp"
    ],
    "message": "Merge pull request from GHSA-gv9r-qcjc-5hj7\n\n* Filter JSONP callback function name. v5.0.210,v6.0.121\n\n* Add utest.\n\n* Refine utest",
    "before_after_code_files": [
      "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
      "trunk/src/kernel/srs_kernel_error.hpp||trunk/src/kernel/srs_kernel_error.hpp",
      "trunk/src/protocol/srs_protocol_http_conn.cpp||trunk/src/protocol/srs_protocol_http_conn.cpp",
      "trunk/src/utest/srs_utest_protocol3.cpp||trunk/src/utest/srs_utest_protocol3.cpp",
      "trunk/src/utest/srs_utest_protocol3.hpp||trunk/src/utest/srs_utest_protocol3.hpp"
    ]
  },
  "patch_diff": {
    "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
      "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       5",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    209",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    210",
      "",
      "---------------"
    ],
    "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
      "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       6",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    120",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    121",
      "",
      "---------------"
    ],
    "trunk/src/kernel/srs_kernel_error.hpp||trunk/src/kernel/srs_kernel_error.hpp": [
      "File: trunk/src/kernel/srs_kernel_error.hpp -> trunk/src/kernel/srs_kernel_error.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "332:     XX(ERROR_STREAM_CASTER_HEVC_VPS        , 4054, \"CasterTsHevcVps\", \"Invalid ts HEVC VPS for stream caster\") \\",
      "333:     XX(ERROR_STREAM_CASTER_HEVC_SPS        , 4055, \"CasterTsHevcSps\", \"Invalid ts HEVC SPS for stream caster\") \\",
      "334:     XX(ERROR_STREAM_CASTER_HEVC_PPS        , 4056, \"CasterTsHevcPps\", \"Invalid ts HEVC PPS for stream caster\") \\",
      "",
      "[Removed Lines]",
      "335:     XX(ERROR_STREAM_CASTER_HEVC_FORMAT     , 4057, \"CasterTsHevcFormat\", \"Invalid ts HEVC Format for stream caster\")",
      "",
      "[Added Lines]",
      "335:     XX(ERROR_STREAM_CASTER_HEVC_FORMAT     , 4057, \"CasterTsHevcFormat\", \"Invalid ts HEVC Format for stream caster\") \\",
      "336:     XX(ERROR_HTTP_JSONP                    , 4058, \"HttpJsonp\", \"Invalid callback for JSONP\")",
      "",
      "---------------"
    ],
    "trunk/src/protocol/srs_protocol_http_conn.cpp||trunk/src/protocol/srs_protocol_http_conn.cpp": [
      "File: trunk/src/protocol/srs_protocol_http_conn.cpp -> trunk/src/protocol/srs_protocol_http_conn.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "332:     }",
      "333: }",
      "335: srs_error_t SrsHttpMessage::set_url(string url, bool allow_jsonp)",
      "336: {",
      "337:     srs_error_t err = srs_success;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "336: bool srs_is_valid_jsonp_callback(std::string callback)",
      "337: {",
      "338:     for (int i = 0; i < (int)callback.length(); i++) {",
      "339:         char ch = callback.at(i);",
      "340:         bool is_alpha_beta = (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');",
      "341:         bool is_number = (ch >= '0' && ch <= '9');",
      "342:         if (!is_alpha_beta && !is_number && ch != '.' && ch != '_' && ch != '-') {",
      "343:             return false;",
      "344:         }",
      "345:     }",
      "346:     return true;",
      "347: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "375:     if (allow_jsonp) {",
      "379:         if (jsonp) {",
      "380:             jsonp_method = query_get(\"method\");",
      "381:         }",
      "382:     }",
      "384:     return err;",
      "",
      "[Removed Lines]",
      "376:         if (!query_get(\"callback\").empty()) {",
      "377:             jsonp = true;",
      "378:         }",
      "",
      "[Added Lines]",
      "390:         string callback= query_get(\"callback\");",
      "391:         jsonp = !callback.empty();",
      "397:         if (!srs_is_valid_jsonp_callback(callback)) {",
      "398:             return srs_error_new(ERROR_HTTP_JSONP, \"invalid callback=%s\", callback.c_str());",
      "399:         }",
      "",
      "---------------"
    ],
    "trunk/src/utest/srs_utest_protocol3.cpp||trunk/src/utest/srs_utest_protocol3.cpp": [
      "File: trunk/src/utest/srs_utest_protocol3.cpp -> trunk/src/utest/srs_utest_protocol3.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <srs_utest_protocol3.hpp>",
      "8: using namespace std;",
      "10: #include <srs_kernel_error.hpp>",
      "11: #include <srs_core_autofree.hpp>",
      "12: #include <srs_protocol_utility.hpp>",
      "13: #include <srs_protocol_rtmp_msg_array.hpp>",
      "14: #include <srs_protocol_rtmp_stack.hpp>",
      "15: #include <srs_kernel_utility.hpp>",
      "16: #include <srs_app_st.hpp>",
      "17: #include <srs_protocol_amf0.hpp>",
      "18: #include <srs_protocol_rtmp_stack.hpp>",
      "19: #include <srs_protocol_http_conn.hpp>",
      "20: #include <srs_protocol_protobuf.hpp>",
      "21: #include <srs_kernel_buffer.hpp>",
      "23: extern bool srs_is_valid_jsonp_callback(std::string callback);",
      "25: VOID TEST(ProtocolHttpTest, JsonpCallbackName)",
      "26: {",
      "27:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"\"));",
      "28:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"callback\"));",
      "29:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback\"));",
      "30:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback1234567890\"));",
      "31:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback-1234567890\"));",
      "32:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback_1234567890\"));",
      "33:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback.1234567890\"));",
      "34:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback1234567890-_.\"));",
      "35:     EXPECT_FALSE(srs_is_valid_jsonp_callback(\"callback()//\"));",
      "36:     EXPECT_FALSE(srs_is_valid_jsonp_callback(\"callback!\"));",
      "37:     EXPECT_FALSE(srs_is_valid_jsonp_callback(\"callback;\"));",
      "38: }",
      "",
      "---------------"
    ],
    "trunk/src/utest/srs_utest_protocol3.hpp||trunk/src/utest/srs_utest_protocol3.hpp": [
      "File: trunk/src/utest/srs_utest_protocol3.hpp -> trunk/src/utest/srs_utest_protocol3.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7: #ifndef SRS_UTEST_PROTOCOL3_HPP",
      "8: #define SRS_UTEST_PROTOCOL3_HPP",
      "11: #include <srs_utest_protocol3.hpp>",
      "13: #include <srs_utest_protocol.hpp>",
      "15: #endif",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "133a39a81d605256f4ab9beef6a064f85e5de8a8",
      "candidate_info": {
        "commit_hash": "133a39a81d605256f4ab9beef6a064f85e5de8a8",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/133a39a81d605256f4ab9beef6a064f85e5de8a8",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_config.cpp",
          "trunk/src/app/srs_app_config.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/utest/srs_utest_config.cpp"
        ],
        "message": "Config: Add more utest for env config. v6.0.147 (#4142)\n\n1. don't use static variable to store the result;\n2. add more UT to handle the multi value and values with whitespaces;\n\nrelated to #4092\n\nhttps://github.com/ossrs/srs/blob/16e569d82357757ddac6ef91d7a5fe7837319909/trunk/src/app/srs_app_config.cpp#L71-L82\n\n`static SrsConfDirective* dir` removed, this static var here is to avoid\nthe memory leak, I add the `SrsConfDirective` instance to the `env_dirs`\ndirective container, which will destroy itself inside `SrsConfig`\ndestructor.\n\n---------\n\nCo-authored-by: winlin <winlinvip@gmail.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_config.cpp||trunk/src/app/srs_app_config.cpp",
          "trunk/src/app/srs_app_config.hpp||trunk/src/app/srs_app_config.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/utest/srs_utest_config.cpp||trunk/src/utest/srs_utest_config.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_config.cpp||trunk/src/app/srs_app_config.cpp": [
          "File: trunk/src/app/srs_app_config.cpp -> trunk/src/app/srs_app_config.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "69: #define SRS_OVERWRITE_BY_ENV_FLOAT_SECONDS(key) if (!srs_getenv(key).empty()) return srs_utime_t(::atof(srs_getenv(key).c_str()) * SRS_UTIME_SECONDS)",
          "70: #define SRS_OVERWRITE_BY_ENV_FLOAT_MILLISECONDS(key) if (!srs_getenv(key).empty()) return srs_utime_t(::atof(srs_getenv(key).c_str()) * SRS_UTIME_MILLISECONDS)",
          "71: #define SRS_OVERWRITE_BY_ENV_DIRECTIVE(key) {                                 \\",
          "73:         if (!dir && !srs_getenv(key).empty()) {                               \\",
          "74:             std::vector<string> vec = srs_string_split(srs_getenv(key), \" \"); \\",
          "75:             dir = new SrsConfDirective();                                     \\",
          "76:             dir->name = key;                                                  \\",
          "77:             for (size_t i = 0; i < vec.size(); ++i) {                         \\",
          "79:             }                                                                 \\",
          "80:         }                                                                     \\",
          "81:         if (dir) return dir;                                                  \\",
          "82:     }",
          "",
          "[Removed Lines]",
          "72:         static SrsConfDirective* dir = NULL;                                  \\",
          "78:                 dir->args.push_back(vec[i]);                                  \\",
          "",
          "[Added Lines]",
          "72:         SrsConfDirective* dir = env_cache_->get(key);                         \\",
          "78:                 std::string value = vec[i];                                   \\",
          "79:                 if (!value.empty()) {                                        \\",
          "80:                     dir->args.push_back(value);                              \\",
          "81:                 }                                                             \\",
          "83:             env_cache_->directives.push_back(dir);                            \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1345:     root = new SrsConfDirective();",
          "1346:     root->conf_line = 0;",
          "1347:     root->name = \"root\";",
          "1348: }",
          "1350: SrsConfig::~SrsConfig()",
          "1351: {",
          "1352:     srs_freep(root);",
          "1353: }",
          "1355: void SrsConfig::subscribe(ISrsReloadHandler* handler)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1353:     env_cache_ = new SrsConfDirective();",
          "1354:     env_cache_->name = \"env_cache_\";",
          "1360:     srs_freep(env_cache_);",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_config.hpp||trunk/src/app/srs_app_config.hpp": [
          "File: trunk/src/app/srs_app_config.hpp -> trunk/src/app/srs_app_config.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "305: protected:",
          "307:     SrsConfDirective* root;",
          "309: private:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "308: private:",
          "310:     SrsConfDirective* env_cache_;",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    146",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    147",
          "",
          "---------------"
        ],
        "trunk/src/utest/srs_utest_config.cpp||trunk/src/utest/srs_utest_config.cpp": [
          "File: trunk/src/utest/srs_utest_config.cpp -> trunk/src/utest/srs_utest_config.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "5059:     }",
          "5061:     if (true) {",
          "5063:         SrsConfDirective* dir = conf.get_vhost_on_connect(\"__defaultVhost__\");",
          "5064:         ASSERT_TRUE(dir != NULL);",
          "5066:         ASSERT_STREQ(\"http://server/api/connect\", dir->arg0().c_str());",
          "5068:     }",
          "5070:     if (true) {",
          "",
          "[Removed Lines]",
          "5062:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_CONNECT\", \"http://server/api/connect https://server2/api/connect2\");",
          "5065:         ASSERT_EQ((int)dir->args.size(), 2);",
          "5067:         ASSERT_STREQ(\"https://server2/api/connect2\", dir->arg1().c_str());",
          "",
          "[Added Lines]",
          "5062:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_CONNECT\", \"http://server/api/connect\");",
          "5065:         ASSERT_EQ((int)dir->args.size(), 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5076:     }",
          "5078:     if (true) {",
          "5080:         SrsConfDirective* dir = conf.get_vhost_on_publish(\"__defaultVhost__\");",
          "5081:         ASSERT_TRUE(dir != NULL);",
          "5083:         ASSERT_STREQ(\"http://server/api/publish\", dir->arg0().c_str());",
          "5085:     }",
          "5087:     if (true) {",
          "",
          "[Removed Lines]",
          "5079:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_PUBLISH\", \"http://server/api/publish http://server/api/publish2\");",
          "5082:         ASSERT_EQ((int)dir->args.size(), 2);",
          "5084:         ASSERT_STREQ(\"http://server/api/publish2\", dir->arg1().c_str());",
          "",
          "[Added Lines]",
          "5078:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_PUBLISH\", \"http://server/api/publish\");",
          "5081:         ASSERT_EQ((int)dir->args.size(), 1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5132:         ASSERT_STREQ(\"http://server/api/hls_notify\", dir->arg0().c_str());",
          "5133:     }",
          "5134: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5134: VOID TEST(ConfigEnvTest, CheckEnvValuesHooksMultiValues)",
          "5135: {",
          "5136:     MockSrsConfig conf;",
          "5138:     if (true) {",
          "5139:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_CONNECT\", \"http://server/api/connect https://server2/api/connect2\");",
          "5141:         SrsConfDirective* dir = conf.get_vhost_on_connect(\"__defaultVhost__\");",
          "5142:         ASSERT_TRUE(dir != NULL);",
          "5143:         ASSERT_EQ((int)dir->args.size(), 2);",
          "5144:         ASSERT_STREQ(\"http://server/api/connect\", dir->arg0().c_str());",
          "5145:         ASSERT_STREQ(\"https://server2/api/connect2\", dir->arg1().c_str());",
          "5146:     }",
          "5148:     if (true) {",
          "5149:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_CLOSE\", \"http://server/api/close close2 close3\");",
          "5150:         SrsConfDirective* dir = conf.get_vhost_on_close(\"__defaultVhost__\");",
          "5151:         ASSERT_TRUE(dir != NULL);",
          "5152:         ASSERT_TRUE((int)dir->args.size() == 3);",
          "5153:         ASSERT_STREQ(\"http://server/api/close\", dir->arg0().c_str());",
          "5154:         ASSERT_STREQ(\"close2\", dir->arg1().c_str());",
          "5155:         ASSERT_STREQ(\"close3\", dir->arg2().c_str());",
          "5156:     }",
          "5158:     if (true) {",
          "5159:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_PUBLISH\", \"http://server/api/publish http://server/api/publish2\");",
          "5160:         SrsConfDirective* dir = conf.get_vhost_on_publish(\"__defaultVhost__\");",
          "5161:         ASSERT_TRUE(dir != NULL);",
          "5162:         ASSERT_EQ((int)dir->args.size(), 2);",
          "5163:         ASSERT_STREQ(\"http://server/api/publish\", dir->arg0().c_str());",
          "5164:         ASSERT_STREQ(\"http://server/api/publish2\", dir->arg1().c_str());",
          "5165:     }",
          "5167:     if (true) {",
          "5168:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_UNPUBLISH\", \"http://server/api/unpublish 2\");",
          "5169:         SrsConfDirective* dir = conf.get_vhost_on_unpublish(\"__defaultVhost__\");",
          "5170:         ASSERT_TRUE(dir != NULL);",
          "5171:         ASSERT_TRUE((int)dir->args.size() == 2);",
          "5172:         ASSERT_STREQ(\"http://server/api/unpublish\", dir->arg0().c_str());",
          "5173:         ASSERT_STREQ(\"2\", dir->arg1().c_str());",
          "5174:     }",
          "5176:     if (true) {",
          "5177:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_PLAY\", \"http://server/api/play http://server/api/play2\");",
          "5178:         SrsConfDirective* dir = conf.get_vhost_on_play(\"__defaultVhost__\");",
          "5179:         ASSERT_TRUE(dir != NULL);",
          "5180:         ASSERT_TRUE((int)dir->args.size() == 2);",
          "5181:         ASSERT_STREQ(\"http://server/api/play\", dir->arg0().c_str());",
          "5182:         ASSERT_STREQ(\"http://server/api/play2\", dir->arg1().c_str());",
          "5183:     }",
          "5185:     if (true) {",
          "5186:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_STOP\", \"http://server/api/stop http://server/api/stop2\");",
          "5187:         SrsConfDirective* dir = conf.get_vhost_on_stop(\"__defaultVhost__\");",
          "5188:         ASSERT_TRUE(dir != NULL);",
          "5189:         ASSERT_TRUE((int)dir->args.size() == 2);",
          "5190:         ASSERT_STREQ(\"http://server/api/stop\", dir->arg0().c_str());",
          "5191:         ASSERT_STREQ(\"http://server/api/stop2\", dir->arg1().c_str());",
          "5192:     }",
          "5194:     if (true) {",
          "5195:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_DVR\", \"http://server/api/dvr http://server/api/dvr2\");",
          "5196:         SrsConfDirective* dir = conf.get_vhost_on_dvr(\"__defaultVhost__\");",
          "5197:         ASSERT_TRUE(dir != NULL);",
          "5198:         ASSERT_TRUE((int)dir->args.size() == 2);",
          "5199:         ASSERT_STREQ(\"http://server/api/dvr\", dir->arg0().c_str());",
          "5200:         ASSERT_STREQ(\"http://server/api/dvr2\", dir->arg1().c_str());",
          "5201:     }",
          "5203:     if (true) {",
          "5204:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_HLS\", \"http://server/api/hls http://server/api/hls2\");",
          "5205:         SrsConfDirective* dir = conf.get_vhost_on_hls(\"__defaultVhost__\");",
          "5206:         ASSERT_TRUE(dir != NULL);",
          "5207:         ASSERT_TRUE((int)dir->args.size() == 2);",
          "5208:         ASSERT_STREQ(\"http://server/api/hls\", dir->arg0().c_str());",
          "5209:         ASSERT_STREQ(\"http://server/api/hls2\", dir->arg1().c_str());",
          "5210:     }",
          "5212:     if (true) {",
          "5213:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_HLS_NOTIFY\", \"http://server/api/hls_notify http://server/api/hls_notify2\");",
          "5214:         SrsConfDirective* dir = conf.get_vhost_on_hls_notify(\"__defaultVhost__\");",
          "5215:         ASSERT_TRUE(dir != NULL);",
          "5216:         ASSERT_TRUE((int)dir->args.size() == 2);",
          "5217:         ASSERT_STREQ(\"http://server/api/hls_notify\", dir->arg0().c_str());",
          "5218:         ASSERT_STREQ(\"http://server/api/hls_notify2\", dir->arg1().c_str());",
          "5219:     }",
          "5220: }",
          "5222: VOID TEST(ConfigEnvTest, CheckEnvValuesHooksWithWhitespaces)",
          "5223: {",
          "5224:     MockSrsConfig conf;",
          "5226:     if (true) {",
          "5227:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_PUBLISH\", \"http://server/api/publish         http://server/api/publish2\");",
          "5228:         SrsConfDirective* dir = conf.get_vhost_on_publish(\"__defaultVhost__\");",
          "5229:         ASSERT_TRUE(dir != NULL);",
          "5230:         ASSERT_EQ((int)dir->args.size(), 2);",
          "5231:         ASSERT_STREQ(\"http://server/api/publish\", dir->arg0().c_str());",
          "5232:         ASSERT_STREQ(\"http://server/api/publish2\", dir->arg1().c_str());",
          "5233:     }",
          "5235:     if (true) {",
          "5236:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_UNPUBLISH\", \"http://server/api/unpublish        \");",
          "5237:         SrsConfDirective* dir = conf.get_vhost_on_unpublish(\"__defaultVhost__\");",
          "5238:         ASSERT_TRUE(dir != NULL);",
          "5239:         ASSERT_TRUE((int)dir->args.size() == 1);",
          "5240:         ASSERT_STREQ(\"http://server/api/unpublish\", dir->arg0().c_str());",
          "5241:     }",
          "5243:     if (true) {",
          "5244:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_PLAY\", \"       http://server/api/play play2     play3  \");",
          "5245:         SrsConfDirective* dir = conf.get_vhost_on_play(\"__defaultVhost__\");",
          "5246:         ASSERT_TRUE(dir != NULL);",
          "5247:         ASSERT_TRUE((int)dir->args.size() == 3);",
          "5248:         ASSERT_STREQ(\"http://server/api/play\", dir->arg0().c_str());",
          "5249:         ASSERT_STREQ(\"play2\", dir->arg1().c_str());",
          "5250:         ASSERT_STREQ(\"play3\", dir->arg2().c_str());",
          "5251:     }",
          "5253:     if (true) {",
          "5254:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_DVR\", \"       dvr\");",
          "5255:         SrsConfDirective* dir = conf.get_vhost_on_dvr(\"__defaultVhost__\");",
          "5256:         ASSERT_TRUE(dir != NULL);",
          "5257:         ASSERT_TRUE((int)dir->args.size() == 1);",
          "5258:         ASSERT_STREQ(\"dvr\", dir->arg0().c_str());",
          "5259:     }",
          "5261: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "242152bd6b032e04dd16ef43ea41c3cc81b8b7fd",
      "candidate_info": {
        "commit_hash": "242152bd6b032e04dd16ef43ea41c3cc81b8b7fd",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/242152bd6b032e04dd16ef43ea41c3cc81b8b7fd",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_rtc_conn.cpp",
          "trunk/src/app/srs_app_rtc_network.cpp",
          "trunk/src/app/srs_app_rtc_network.hpp",
          "trunk/src/app/srs_app_rtc_source.cpp",
          "trunk/src/app/srs_app_server.cpp",
          "trunk/src/app/srs_app_stream_bridge.cpp",
          "trunk/src/app/srs_app_stream_bridge.hpp",
          "trunk/src/app/srs_app_threads.cpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "SmartPtr: Use shared ptr in RTC TCP connection. v6.0.127 (#4083)\n\nFix issue https://github.com/ossrs/srs/issues/3784\n\n---\n\nCo-authored-by: Jacob Su <suzp1984@gmail.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_rtc_conn.cpp||trunk/src/app/srs_app_rtc_conn.cpp",
          "trunk/src/app/srs_app_rtc_network.cpp||trunk/src/app/srs_app_rtc_network.cpp",
          "trunk/src/app/srs_app_rtc_network.hpp||trunk/src/app/srs_app_rtc_network.hpp",
          "trunk/src/app/srs_app_rtc_source.cpp||trunk/src/app/srs_app_rtc_source.cpp",
          "trunk/src/app/srs_app_server.cpp||trunk/src/app/srs_app_server.cpp",
          "trunk/src/app/srs_app_stream_bridge.cpp||trunk/src/app/srs_app_stream_bridge.cpp",
          "trunk/src/app/srs_app_stream_bridge.hpp||trunk/src/app/srs_app_stream_bridge.hpp",
          "trunk/src/app/srs_app_threads.cpp||trunk/src/app/srs_app_threads.cpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_rtc_conn.cpp||trunk/src/app/srs_app_rtc_conn.cpp": [
          "File: trunk/src/app/srs_app_rtc_conn.cpp -> trunk/src/app/srs_app_rtc_conn.cpp"
        ],
        "trunk/src/app/srs_app_rtc_network.cpp||trunk/src/app/srs_app_rtc_network.cpp": [
          "File: trunk/src/app/srs_app_rtc_network.cpp -> trunk/src/app/srs_app_rtc_network.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "436:     return sendonly_skt_->sendto(buf, size, SRS_UTIME_NO_TIMEOUT);",
          "437: }",
          "440: {",
          "441:     conn_ = conn;",
          "442:     delta_ = delta;",
          "",
          "[Removed Lines]",
          "439: SrsRtcTcpNetwork::SrsRtcTcpNetwork(SrsRtcConnection* conn, SrsEphemeralDelta* delta)",
          "",
          "[Added Lines]",
          "439: SrsRtcTcpNetwork::SrsRtcTcpNetwork(SrsRtcConnection* conn, SrsEphemeralDelta* delta) : owner_(new SrsRtcTcpConn())",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "444:     transport_ = new SrsSecurityTransport(this);",
          "445:     peer_port_ = 0;",
          "446:     state_ = SrsRtcNetworkStateInit;",
          "448: }",
          "450: SrsRtcTcpNetwork::~SrsRtcTcpNetwork()",
          "451: {",
          "452:     srs_freep(transport_);",
          "453: }",
          "",
          "[Removed Lines]",
          "447:     owner_ = NULL;",
          "",
          "[Added Lines]",
          "451:     owner_->interrupt();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "695: #define SRS_RTC_TCP_PACKET_MAX 1500",
          "698: {",
          "700:     ip_ = cip;",
          "701:     port_ = port;",
          "702:     skt_ = skt;",
          "703:     delta_ = new SrsNetworkDelta();",
          "704:     delta_->set_io(skt_, skt_);",
          "706:     session_ = NULL;",
          "707:     pkt_ = new char[SRS_RTC_TCP_PACKET_MAX];",
          "709: }",
          "711: SrsRtcTcpConn::~SrsRtcTcpConn()",
          "712: {",
          "717:     srs_freepa(pkt_);",
          "718:     srs_freep(delta_);",
          "719:     srs_freep(skt_);",
          "720: }",
          "722: ISrsKbpsDelta* SrsRtcTcpConn::delta()",
          "723: {",
          "724:     return delta_;",
          "725: }",
          "727: std::string SrsRtcTcpConn::desc()",
          "728: {",
          "729:     return \"Tcp\";",
          "",
          "[Removed Lines]",
          "697: SrsRtcTcpConn::SrsRtcTcpConn(ISrsProtocolReadWriter* skt, std::string cip, int port, ISrsResourceManager* cm)",
          "699:     manager_ = cm;",
          "705:     trd_ = new SrsSTCoroutine(\"tcp\", this, _srs_context->get_id());",
          "708:     _srs_rtc_manager->subscribe(this);",
          "713:     _srs_rtc_manager->unsubscribe(this);",
          "714:     trd_->interrupt();",
          "715:     srs_freep(trd_);",
          "",
          "[Added Lines]",
          "697: SrsRtcTcpConn::SrsRtcTcpConn()",
          "698: {",
          "699:     wrapper_ = NULL;",
          "700:     owner_coroutine_ = NULL;",
          "701:     owner_cid_ = NULL;",
          "702:     cid_ = _srs_context->get_id();",
          "704:     pkt_ = NULL;",
          "705:     delta_ = NULL;",
          "706:     skt_ = NULL;",
          "707: }",
          "709: SrsRtcTcpConn::SrsRtcTcpConn(ISrsProtocolReadWriter* skt, std::string cip, int port) : SrsRtcTcpConn()",
          "727: void SrsRtcTcpConn::setup_owner(SrsSharedResource<SrsRtcTcpConn>* wrapper, ISrsInterruptable* owner_coroutine, ISrsContextIdSetter* owner_cid)",
          "728: {",
          "729:     wrapper_ = wrapper;",
          "730:     owner_coroutine_ = owner_coroutine;",
          "731:     owner_cid_ = owner_cid;",
          "732: }",
          "739: void SrsRtcTcpConn::interrupt()",
          "740: {",
          "741:     session_ = NULL;",
          "742:     if (owner_coroutine_) owner_coroutine_->interrupt();",
          "743: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "732: const SrsContextId& SrsRtcTcpConn::get_id()",
          "733: {",
          "735: }",
          "737: std::string SrsRtcTcpConn::remote_ip()",
          "",
          "[Removed Lines]",
          "734:     return trd_->cid();",
          "",
          "[Added Lines]",
          "752:     return cid_;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "739:     return ip_;",
          "740: }",
          "743: {",
          "745: }",
          "747: srs_error_t SrsRtcTcpConn::cycle()",
          "",
          "[Removed Lines]",
          "742: srs_error_t SrsRtcTcpConn::start()",
          "744:     return trd_->start();",
          "",
          "[Added Lines]",
          "760: void SrsRtcTcpConn::on_executor_done(ISrsInterruptable* executor)",
          "762:     owner_coroutine_ = NULL;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "752:     SrsStatistic::instance()->on_disconnect(get_id().c_str(), err);",
          "753:     SrsStatistic::instance()->kbps_add_delta(get_id().c_str(), delta_);",
          "761:     if(session_ && session_->tcp()->is_establelished()) {",
          "762:         session_->tcp()->set_state(SrsRtcNetworkStateClosed);",
          "764:     }",
          "",
          "[Removed Lines]",
          "757:     manager_->remove(this);",
          "763:         _srs_rtc_manager->remove(session_);",
          "",
          "[Added Lines]",
          "776:         session_->expire();",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "801: {",
          "802:     srs_error_t err = srs_success;",
          "804:     if((err = handshake()) != srs_success) {",
          "805:         return srs_error_wrap(err, \"process rtc tcp pkt\");",
          "806:     }",
          "809:     while(true) {",
          "811:             return srs_error_wrap(err, \"rtc tcp conn\");",
          "812:         }",
          "",
          "[Removed Lines]",
          "810:         if((err = trd_->pull()) != srs_success) {",
          "",
          "[Added Lines]",
          "818:     _srs_context->set_id(cid_);",
          "819:     owner_cid_->set_cid(cid_);",
          "827:         if (!owner_coroutine_) return err;",
          "828:         if ((err = owner_coroutine_->pull()) != srs_success) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "861:     SrsRtcTcpNetwork* network = dynamic_cast<SrsRtcTcpNetwork*>(session->tcp());",
          "864:         session_ = session;",
          "865:     }",
          "867:         return srs_error_new(ERROR_RTC_TCP_UNIQUE, \"only support one network\");",
          "868:     }",
          "",
          "[Removed Lines]",
          "862:     if (!network->owner()) {",
          "863:         network->set_owner(this);",
          "866:     if (network->owner() != this) {",
          "",
          "[Added Lines]",
          "880:     if (network->owner().get() != this) {",
          "881:         network->set_owner(*wrapper_);",
          "884:     if (network->owner().get() != this) {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "939:     return srs_error_new(ERROR_RTC_UDP, \"unknown packet\");",
          "940: }",
          "",
          "[Removed Lines]",
          "942: void SrsRtcTcpConn::on_before_dispose(ISrsResource* c)",
          "943: {",
          "944:     if (!session_) return;",
          "946:     SrsRtcConnection* conn = dynamic_cast<SrsRtcConnection*>(c);",
          "947:     if(conn == session_) {",
          "948:         session_ = NULL;",
          "950:         srs_trace(\"RTC: tcp conn diposing, because of rtc connection\");",
          "951:         trd_->interrupt();",
          "952:     }",
          "953: }",
          "955: void SrsRtcTcpConn::on_disposing(ISrsResource* c)",
          "956: {",
          "957:     return;",
          "958: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_rtc_network.hpp||trunk/src/app/srs_app_rtc_network.hpp": [
          "File: trunk/src/app/srs_app_rtc_network.hpp -> trunk/src/app/srs_app_rtc_network.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "180: private:",
          "182:     ISrsRtcTransport* transport_;",
          "184: private:",
          "185:     std::string peer_ip_;",
          "186:     int peer_port_;",
          "",
          "[Removed Lines]",
          "183:     SrsRtcTcpConn* owner_;",
          "",
          "[Added Lines]",
          "183:     SrsSharedResource<SrsRtcTcpConn> owner_;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "189:     SrsRtcTcpNetwork(SrsRtcConnection* conn, SrsEphemeralDelta* delta);",
          "190:     virtual ~SrsRtcTcpNetwork();",
          "191: public:",
          "194:     void update_sendonly_socket(ISrsProtocolReadWriter* skt);",
          "196: public:",
          "",
          "[Removed Lines]",
          "192:     void set_owner(SrsRtcTcpConn* v) { owner_ = v; }",
          "193:     SrsRtcTcpConn* owner() { return owner_; }",
          "",
          "[Added Lines]",
          "192:     void set_owner(SrsSharedResource<SrsRtcTcpConn> v) { owner_ = v; }",
          "193:     SrsSharedResource<SrsRtcTcpConn> owner() { return owner_; }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "232: };",
          "236: {",
          "237: private:",
          "243:     std::string ip_;",
          "244:     int port_;",
          "",
          "[Removed Lines]",
          "235: class SrsRtcTcpConn : public ISrsConnection, public ISrsStartable, public ISrsCoroutineHandler, public ISrsDisposingHandler",
          "239:     ISrsResourceManager* manager_;",
          "241:     SrsCoroutine* trd_;",
          "",
          "[Added Lines]",
          "235: class SrsRtcTcpConn : public ISrsConnection, public ISrsCoroutineHandler, public ISrsExecutorHandler",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "249:     ISrsProtocolReadWriter* skt_;",
          "251:     char* pkt_;",
          "254:     virtual ~SrsRtcTcpConn();",
          "255: public:",
          "256:     ISrsKbpsDelta* delta();",
          "258: public:",
          "259:     virtual std::string desc();",
          "",
          "[Removed Lines]",
          "252: public:",
          "253:     SrsRtcTcpConn(ISrsProtocolReadWriter* skt, std::string cip, int port, ISrsResourceManager* cm);",
          "",
          "[Added Lines]",
          "248: private:",
          "250:     SrsSharedResource<SrsRtcTcpConn>* wrapper_;",
          "252:     ISrsInterruptable* owner_coroutine_;",
          "253:     ISrsContextIdSetter* owner_cid_;",
          "254:     SrsContextId cid_;",
          "255: public:",
          "256:     SrsRtcTcpConn();",
          "257:     SrsRtcTcpConn(ISrsProtocolReadWriter* skt, std::string cip, int port);",
          "259: public:",
          "261:     void setup_owner(SrsSharedResource<SrsRtcTcpConn>* wrapper, ISrsInterruptable* owner_coroutine, ISrsContextIdSetter* owner_cid);",
          "265:     void interrupt();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "262: public:",
          "263:     virtual std::string remote_ip();",
          "265: public:",
          "268: public:",
          "269:     virtual srs_error_t cycle();",
          "",
          "[Removed Lines]",
          "266:     virtual srs_error_t start();",
          "",
          "[Added Lines]",
          "275:     virtual void on_executor_done(ISrsInterruptable* executor);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "273:     srs_error_t read_packet(char* pkt, int* nb_pkt);",
          "274:     srs_error_t on_stun(char* pkt, int nb_pkt);",
          "275:     srs_error_t on_tcp_pkt(char* pkt, int nb_pkt);",
          "280: };",
          "282: #endif",
          "",
          "[Removed Lines]",
          "277: public:",
          "278:     virtual void on_before_dispose(ISrsResource* c);",
          "279:     virtual void on_disposing(ISrsResource* c);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_rtc_source.cpp||trunk/src/app/srs_app_rtc_source.cpp": [
          "File: trunk/src/app/srs_app_rtc_source.cpp -> trunk/src/app/srs_app_rtc_source.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "60: using namespace std;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62: #ifdef SRS_FFMPEG_FIT",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70: const int kRtpMaxPayloadSize = kRtpPacketSize - 300;",
          "73: srs_error_t aac_raw_append_adts_header(SrsSharedPtrMessage* shared_audio, SrsFormat* format, char** pbuf, int* pnn_buf)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72: #endif",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_server.cpp||trunk/src/app/srs_app_server.cpp": [
          "File: trunk/src/app/srs_app_server.cpp -> trunk/src/app/srs_app_server.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: #include <srs_app_conn.hpp>",
          "40: #ifdef SRS_RTC",
          "41: #include <srs_app_rtc_network.hpp>",
          "42: #endif",
          "43: #ifdef SRS_GB28181",
          "44: #include <srs_app_gb28181.hpp>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42: #include <srs_app_rtc_server.hpp>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1193:         if (nn == 10 && b[0] == 0 && b[2] == 0 && b[3] == 1 && b[1] - b[5] == 20",
          "1194:             && b[6] == 0x21 && b[7] == 0x12 && b[8] == 0xa4 && b[9] == 0x42",
          "1195:         ) {",
          "1198:         } else {",
          "1199:             resource = new SrsHttpxConn(listener == http_listener_, this, io, http_server, ip, port);",
          "1200:         }",
          "",
          "[Removed Lines]",
          "1197:             resource = new SrsRtcTcpConn(io, ip, port, this);",
          "",
          "[Added Lines]",
          "1197:             resource = new SrsRtcTcpConn(io, ip, port);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1213:             resource = new SrsHttpxConn(is_https, this, new SrsTcpConnection(stfd2), http_server, ip, port);",
          "1214: #ifdef SRS_RTC",
          "1215:         } else if (listener == webrtc_listener_) {",
          "1218: #endif",
          "1219:         } else if (listener == exporter_listener_) {",
          "",
          "[Removed Lines]",
          "1217:             resource = new SrsRtcTcpConn(new SrsTcpConnection(stfd2), ip, port, this);",
          "",
          "[Added Lines]",
          "1216:             resource = new SrsRtcTcpConn(new SrsTcpConnection(stfd2), ip, port);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1227:         }",
          "1228:     }",
          "1231:     conn_manager->add(resource);",
          "1234:     ISrsStartable* conn = dynamic_cast<ISrsStartable*>(resource);",
          "1235:     if ((err = conn->start()) != srs_success) {",
          "1236:         return srs_error_wrap(err, \"start conn coroutine\");",
          "1237:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1229: #ifdef SRS_RTC",
          "1231:     SrsRtcTcpConn* raw_conn = dynamic_cast<SrsRtcTcpConn*>(resource);",
          "1232:     if (raw_conn) {",
          "1233:         SrsSharedResource<SrsRtcTcpConn>* conn = new SrsSharedResource<SrsRtcTcpConn>(raw_conn);",
          "1234:         SrsExecutorCoroutine* executor = new SrsExecutorCoroutine(_srs_rtc_manager, conn, raw_conn, raw_conn);",
          "1235:         raw_conn->setup_owner(conn, executor, executor);",
          "1236:         if ((err = executor->start()) != srs_success) {",
          "1237:             srs_freep(executor);",
          "1238:             return srs_error_wrap(err, \"start executor\");",
          "1239:         }",
          "1240:         return err;",
          "1241:     }",
          "1242: #endif",
          "1245:     srs_assert(resource);",
          "1250:     srs_assert(conn);",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_stream_bridge.cpp||trunk/src/app/srs_app_stream_bridge.cpp": [
          "File: trunk/src/app/srs_app_stream_bridge.cpp -> trunk/src/app/srs_app_stream_bridge.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: #include <srs_app_source.hpp>",
          "10: #include <srs_protocol_format.hpp>",
          "12: #include <srs_app_rtc_source.hpp>",
          "13: #include <srs_app_config.hpp>",
          "14: #include <srs_protocol_rtmp_stack.hpp>",
          "",
          "[Removed Lines]",
          "11: #include <srs_app_rtc_codec.hpp>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:     return source_->on_frame(frame);",
          "64: }",
          "66: SrsFrameToRtcBridge::SrsFrameToRtcBridge(SrsRtcSource* source)",
          "67: {",
          "69:     source_ = source;",
          "73:     uint32_t audio_ssrc = 0;",
          "74:     uint8_t audio_payload_type = 0;",
          "75:     uint32_t video_ssrc = 0;",
          "",
          "[Removed Lines]",
          "68: #ifdef SRS_RTC",
          "70: #endif",
          "72: #if defined(SRS_RTC) && defined(SRS_FFMPEG_FIT)",
          "",
          "[Added Lines]",
          "65: #ifdef SRS_RTC",
          "70: #if defined(SRS_FFMPEG_FIT)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "119: {",
          "120:     srs_error_t err = srs_success;",
          "124:     if ((err = source_->on_publish()) != srs_success) {",
          "125:         return srs_error_wrap(err, \"source publish\");",
          "126:     }",
          "129: #ifdef SRS_FFMPEG_FIT",
          "130:     if ((err = rtp_builder_->on_publish()) != srs_success) {",
          "",
          "[Removed Lines]",
          "122: #ifdef SRS_RTC",
          "127: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "141:     rtp_builder_->on_unpublish();",
          "142: #endif",
          "147:     source_->on_unpublish();",
          "149: }",
          "151: srs_error_t SrsFrameToRtcBridge::on_frame(SrsSharedPtrMessage* frame)",
          "",
          "[Removed Lines]",
          "144: #ifdef SRS_RTC",
          "148: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "160: srs_error_t SrsFrameToRtcBridge::on_rtp(SrsRtpPacket* pkt)",
          "161: {",
          "163:     return source_->on_rtp(pkt);",
          "167: }",
          "169: SrsCompositeBridge::SrsCompositeBridge()",
          "170: {",
          "",
          "[Removed Lines]",
          "162: #ifdef SRS_RTC",
          "164: #else",
          "165:     return srs_success;",
          "166: #endif",
          "",
          "[Added Lines]",
          "158: #endif",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_stream_bridge.hpp||trunk/src/app/srs_app_stream_bridge.hpp": [
          "File: trunk/src/app/srs_app_stream_bridge.hpp -> trunk/src/app/srs_app_stream_bridge.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: class SrsRtcSource;",
          "20: class SrsRtmpFormat;",
          "21: class SrsMetaCache;",
          "23: class SrsRtpPacket;",
          "24: class SrsRtcRtpBuilder;",
          "",
          "[Removed Lines]",
          "22: class SrsAudioTranscoder;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:     virtual srs_error_t on_frame(SrsSharedPtrMessage* frame);",
          "56: };",
          "59: class SrsFrameToRtcBridge : public ISrsStreamBridge",
          "60: {",
          "61: private:",
          "62:     SrsRtcSource* source_;",
          "63:     SrsRtcRtpBuilder* rtp_builder_;",
          "64: public:",
          "65:     SrsFrameToRtcBridge(SrsRtcSource* source);",
          "66:     virtual ~SrsFrameToRtcBridge();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: #ifdef SRS_RTC",
          "63: private:",
          "64: #if defined(SRS_FFMPEG_FIT)",
          "66: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "71:     virtual srs_error_t on_frame(SrsSharedPtrMessage* frame);",
          "72:     srs_error_t on_rtp(SrsRtpPacket* pkt);",
          "73: };",
          "76: class SrsCompositeBridge : public ISrsStreamBridge",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77: #endif",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_threads.cpp||trunk/src/app/srs_app_threads.cpp": [
          "File: trunk/src/app/srs_app_threads.cpp -> trunk/src/app/srs_app_threads.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "269:     float thread_percent = stat->percent * 100;",
          "273:     string snk_desc;",
          "274: #ifdef SRS_RTC",
          "275:     if (_srs_pps_snack2->r10s()) {",
          "276:         snprintf(buf, sizeof(buf), \", snk=%d,%d,%d\",",
          "277:             _srs_pps_snack2->r10s(), _srs_pps_snack3->r10s(), _srs_pps_snack4->r10s() // NACK packet,seqs sent.",
          "",
          "[Removed Lines]",
          "271:     static char buf[128];",
          "",
          "[Added Lines]",
          "273:     static char buf[128];",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    126",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    127",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fa3dc3bf69363deeba4b4634e78f5e3ed482493c",
      "candidate_info": {
        "commit_hash": "fa3dc3bf69363deeba4b4634e78f5e3ed482493c",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/fa3dc3bf69363deeba4b4634e78f5e3ed482493c",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_config.cpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/utest/srs_utest_config.cpp"
        ],
        "message": "Config: Improve env config to support multi values. v6.0.146 (#4092)\n\n1. add on_connect & on_close directives to conf/full.conf;\n2. let http_hooks env overwrite support multi values; e.g.\nSRS_VHOST_HTTP_HOOKS_ON_CONNECT=\"http://127.0.0.1/api/connect\nhttp://localhost/api/connect\"\n\nrelated to\nhttps://github.com/ossrs/srs/issues/1222#issuecomment-2170424703\nAbove comments said `http_hook` env may not works as expected, as I\nfound there are still has some issue in `http_hooks` env configuration,\nbut this PR may not target above problem.\n\n---------\n\nCo-authored-by: winlin <winlinvip@gmail.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_config.cpp||trunk/src/app/srs_app_config.cpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/utest/srs_utest_config.cpp||trunk/src/utest/srs_utest_config.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_config.cpp||trunk/src/app/srs_app_config.cpp": [
          "File: trunk/src/app/srs_app_config.cpp -> trunk/src/app/srs_app_config.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "68: #define SRS_OVERWRITE_BY_ENV_MILLISECONDS(key) if (!srs_getenv(key).empty()) return (srs_utime_t)(::atoi(srs_getenv(key).c_str()) * SRS_UTIME_MILLISECONDS)",
          "69: #define SRS_OVERWRITE_BY_ENV_FLOAT_SECONDS(key) if (!srs_getenv(key).empty()) return srs_utime_t(::atof(srs_getenv(key).c_str()) * SRS_UTIME_SECONDS)",
          "70: #define SRS_OVERWRITE_BY_ENV_FLOAT_MILLISECONDS(key) if (!srs_getenv(key).empty()) return srs_utime_t(::atof(srs_getenv(key).c_str()) * SRS_UTIME_MILLISECONDS)",
          "80:     }",
          "",
          "[Removed Lines]",
          "71: #define SRS_OVERWRITE_BY_ENV_DIRECTIVE(key) { \\",
          "72:         static SrsConfDirective* dir = NULL;      \\",
          "73:         if (!dir && !srs_getenv(key).empty()) {   \\",
          "74:             string v = srs_getenv(key);           \\",
          "75:             dir = new SrsConfDirective();         \\",
          "76:             dir->name = key;                      \\",
          "77:             dir->args.push_back(v);               \\",
          "78:         }                                         \\",
          "79:         if (dir) return dir;                      \\",
          "",
          "[Added Lines]",
          "71: #define SRS_OVERWRITE_BY_ENV_DIRECTIVE(key) {                                 \\",
          "72:         static SrsConfDirective* dir = NULL;                                  \\",
          "73:         if (!dir && !srs_getenv(key).empty()) {                               \\",
          "74:             std::vector<string> vec = srs_string_split(srs_getenv(key), \" \"); \\",
          "75:             dir = new SrsConfDirective();                                     \\",
          "76:             dir->name = key;                                                  \\",
          "77:             for (size_t i = 0; i < vec.size(); ++i) {                         \\",
          "78:                 dir->args.push_back(vec[i]);                                  \\",
          "79:             }                                                                 \\",
          "80:         }                                                                     \\",
          "81:         if (dir) return dir;                                                  \\",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    145",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    146",
          "",
          "---------------"
        ],
        "trunk/src/utest/srs_utest_config.cpp||trunk/src/utest/srs_utest_config.cpp": [
          "File: trunk/src/utest/srs_utest_config.cpp -> trunk/src/utest/srs_utest_config.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "3369:     if (true) {",
          "3370:         MockSrsConfig conf;",
          "3371:         HELPER_ASSERT_SUCCESS(conf.parse(_MIN_OK_CONF \"vhost ossrs.net{http_hooks{on_connect xxx;}}\"));",
          "3373:     }",
          "3375:     if (true) {",
          "",
          "[Removed Lines]",
          "3372:         EXPECT_TRUE(conf.get_vhost_on_connect(\"ossrs.net\") != NULL);",
          "",
          "[Added Lines]",
          "3372:         SrsConfDirective* dir = conf.get_vhost_on_connect(\"ossrs.net\");",
          "3373:         ASSERT_TRUE(dir != NULL);",
          "3374:         ASSERT_EQ((int)dir->args.size(), 1);",
          "3375:         ASSERT_STREQ(\"xxx\", dir->arg0().c_str());",
          "3376:     }",
          "3378:     if (true) {",
          "3379:         MockSrsConfig conf;",
          "3380:         HELPER_ASSERT_SUCCESS(conf.parse(_MIN_OK_CONF \"vhost ossrs.net{http_hooks{on_connect xxx yyy;}}\"));",
          "3381:         SrsConfDirective* dir = conf.get_vhost_on_connect(\"ossrs.net\");",
          "3382:         ASSERT_TRUE(dir != NULL);",
          "3383:         ASSERT_EQ((int)dir->args.size(), 2);",
          "3384:         ASSERT_STREQ(\"xxx\", dir->arg0().c_str());",
          "3385:         ASSERT_STREQ(\"yyy\", dir->arg1().c_str());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5046:     }",
          "5048:     if (true) {",
          "5051:         ASSERT_TRUE(dir != NULL);",
          "5052:         ASSERT_TRUE((int)dir->args.size() == 1);",
          "5053:         ASSERT_STREQ(\"http://server/api/publish\", dir->arg0().c_str());",
          "5054:     }",
          "5056:     if (true) {",
          "",
          "[Removed Lines]",
          "5049:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_PUBLISH\", \"http://server/api/publish\");",
          "5050:         SrsConfDirective* dir = conf.get_vhost_on_publish(\"__defaultVhost__\");",
          "",
          "[Added Lines]",
          "5062:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_CONNECT\", \"http://server/api/connect https://server2/api/connect2\");",
          "5063:         SrsConfDirective* dir = conf.get_vhost_on_connect(\"__defaultVhost__\");",
          "5064:         ASSERT_TRUE(dir != NULL);",
          "5065:         ASSERT_EQ((int)dir->args.size(), 2);",
          "5066:         ASSERT_STREQ(\"http://server/api/connect\", dir->arg0().c_str());",
          "5067:         ASSERT_STREQ(\"https://server2/api/connect2\", dir->arg1().c_str());",
          "5068:     }",
          "5070:     if (true) {",
          "5071:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_CLOSE\", \"http://server/api/close\");",
          "5072:         SrsConfDirective* dir = conf.get_vhost_on_close(\"__defaultVhost__\");",
          "5075:         ASSERT_STREQ(\"http://server/api/close\", dir->arg0().c_str());",
          "5076:     }",
          "5078:     if (true) {",
          "5079:         SrsSetEnvConfig(hooks, \"SRS_VHOST_HTTP_HOOKS_ON_PUBLISH\", \"http://server/api/publish http://server/api/publish2\");",
          "5080:         SrsConfDirective* dir = conf.get_vhost_on_publish(\"__defaultVhost__\");",
          "5081:         ASSERT_TRUE(dir != NULL);",
          "5082:         ASSERT_EQ((int)dir->args.size(), 2);",
          "5084:         ASSERT_STREQ(\"http://server/api/publish2\", dir->arg1().c_str());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "101382afd0feb63243b391e59c529376018d4020",
      "candidate_info": {
        "commit_hash": "101382afd0feb63243b391e59c529376018d4020",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/101382afd0feb63243b391e59c529376018d4020",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/research/players/js/srs.sdk.js",
          "trunk/research/players/whip.html",
          "trunk/src/app/srs_app_rtc_source.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/core/srs_core_version7.hpp"
        ],
        "message": "RTC2RTMP: Fix screen sharing stutter caused by packet loss. v5.0.216 v6.0.157 v7.0.18 (#4160)\n\n## How to reproduce?\n\n1. Refer this commit, which contains the web demo to capture screen as\nvideo stream through RTC.\n2. Copy the `trunk/research/players/whip.html` and\n`trunk/research/players/js/srs.sdk.js` to replace the `develop` branch\nsource code.\n3. `./configure && make`\n4. `./objs/srs -c conf/rtc2rtmp.conf`\n5. open `http://localhost:8080/players/whip.html?schema=http`\n6. check `Screen` radio option.\n7. click `publish`, then check the screen to share.\n8. play the rtmp live stream: `rtmp://localhost/live/livestream`\n9. check the video stuttering.\n\n## Cause\nWhen capture screen by the chrome web browser, which send RTP packet\nwith empty payload frequently, then all the cached RTP packets are\ndropped before next key frame arrive in this case.\n\nThe OBS screen stream and camera stream do not have such problem.\n\n## Add screen stream to WHIP demo\n\n><img width=\"581\" alt=\"Screenshot 2024-08-28 at 2 49 46\u202fPM\"\nsrc=\"https://github.com/user-attachments/assets/9557dbd2-c799-4dfd-b336-5bbf2e4f8fb8\">\n\n---------\n\nCo-authored-by: winlin <winlinvip@gmail.com>",
        "before_after_code_files": [
          "trunk/research/players/js/srs.sdk.js||trunk/research/players/js/srs.sdk.js",
          "trunk/research/players/whip.html||trunk/research/players/whip.html",
          "trunk/src/app/srs_app_rtc_source.cpp||trunk/src/app/srs_app_rtc_source.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/core/srs_core_version7.hpp||trunk/src/core/srs_core_version7.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/research/players/js/srs.sdk.js||trunk/research/players/js/srs.sdk.js": [
          "File: trunk/research/players/js/srs.sdk.js -> trunk/research/players/js/srs.sdk.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "532:     self.publish = async function (url, options) {",
          "533:         if (url.indexOf('/whip/') === -1) throw new Error(`invalid WHIP url ${url}`);",
          "537:             self.pc.addTransceiver(\"audio\", {direction: \"sendonly\"});",
          "538:         } else {",
          "539:             self.constraints.audio = false;",
          "540:         }",
          "543:             self.pc.addTransceiver(\"video\", {direction: \"sendonly\"});",
          "545:             self.constraints.video = false;",
          "546:         }",
          "548:         if (!navigator.mediaDevices && window.location.protocol === 'http:' && window.location.hostname !== 'localhost') {",
          "549:             throw new SrsError('HttpsRequiredError', `Please use HTTPS or localhost to publish, read https://github.com/ossrs/srs/issues/2762#issuecomment-983147576`);",
          "550:         }",
          "561:         var offer = await self.pc.createOffer();",
          "562:         await self.pc.setLocalDescription(offer);",
          "",
          "[Removed Lines]",
          "534:         if (options?.videoOnly && options?.audioOnly) throw new Error(`The videoOnly and audioOnly in options can't be true at the same time`);",
          "536:         if (!options?.videoOnly) {",
          "542:         if (!options?.audioOnly) {",
          "544:         } else {",
          "551:         var stream = await navigator.mediaDevices.getUserMedia(self.constraints);",
          "554:         stream.getTracks().forEach(function (track) {",
          "555:             self.pc.addTrack(track);",
          "558:             self.ontrack && self.ontrack({track: track});",
          "559:         });",
          "",
          "[Added Lines]",
          "535:         const hasAudio = options?.audio ?? true;",
          "536:         const useCamera = options?.camera ?? true;",
          "537:         const useScreen = options?.screen ?? false;",
          "539:         if (!hasAudio && !useCamera && !useScreen) throw new Error(`The camera, screen and audio can't be false at the same time`);",
          "541:         if (hasAudio) {",
          "547:         if (useCamera || useScreen) {",
          "549:         }",
          "551:         if (!useCamera) {",
          "559:         if (useScreen) {",
          "560:             const displayStream = await navigator.mediaDevices.getDisplayMedia({",
          "561:                 video: true",
          "562:             });",
          "564:             displayStream.getTracks().forEach(function (track) {",
          "565:                 self.pc.addTrack(track);",
          "567:                 self.ontrack && self.ontrack({track: track});",
          "568:             });",
          "569:         }",
          "571:        if (useCamera || hasAudio) {",
          "572:             const userStream = await navigator.mediaDevices.getUserMedia(self.constraints);",
          "574:             userStream.getTracks().forEach(function (track) {",
          "575:                 self.pc.addTrack(track);",
          "577:                 self.ontrack && self.ontrack({track: track});",
          "578:             });",
          "579:        }",
          "",
          "---------------"
        ],
        "trunk/research/players/whip.html||trunk/research/players/whip.html": [
          "File: trunk/research/players/whip.html -> trunk/research/players/whip.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:     <div class=\"form-inline\">",
          "63:         Controls:",
          "64:         <label>",
          "66:         </label>",
          "67:         <label>",
          "69:         </label>",
          "70:     </div>",
          "",
          "[Removed Lines]",
          "65:             <input type=\"checkbox\" id=\"ch_videoonly\" style=\"margin-bottom: 8px\"> Video Only",
          "68:             <input type=\"checkbox\" id=\"ch_audioonly\" style=\"margin-bottom: 8px\"> Audio Only",
          "",
          "[Added Lines]",
          "65:             <input type=\"radio\" id=\"ra_camera\" name=\"video\" value=\"Camera\" checked style=\"margin-bottom: 8px\"> Camera",
          "68:             <input type=\"radio\" id=\"ra_screen\" name=\"video\" value=\"Screen\" style=\"margin-bottom: 8px\"> Screen",
          "69:         </label>",
          "70:         <label>",
          "71:             <input type=\"radio\" id=\"ra_none\" name=\"video\" value=\"None\" style=\"margin-bottom: 8px\"> No Video",
          "72:         </label>",
          "73:         <label>",
          "74:             <input type=\"checkbox\" id=\"ch_audio\" checked style=\"margin-bottom: 8px\"> Audio",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "114:         var url = $(\"#txt_url\").val();",
          "115:         sdk.publish(url, {",
          "118:         }).then(function(session){",
          "119:             $('#sessionid').html(session.sessionid);",
          "120:             $('#simulator-drop').attr('href', session.simulator + '?drop=1&username=' + session.sessionid);",
          "",
          "[Removed Lines]",
          "116:             videoOnly: $('#ch_videoonly').prop('checked'),",
          "117:             audioOnly: $('#ch_audioonly').prop('checked'),",
          "",
          "[Added Lines]",
          "122:             camera: $('#ra_camera').prop('checked'),",
          "123:             screen: $('#ra_screen').prop('checked'),",
          "124:             audio: $('#ch_audio').prop('checked')",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_rtc_source.cpp||trunk/src/app/srs_app_rtc_source.cpp": [
          "File: trunk/src/app/srs_app_rtc_source.cpp -> trunk/src/app/srs_app_rtc_source.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1776:     if (0 == nb_payload) {",
          "1777:         srs_warn(\"empty nalu\");",
          "1778:         return err;",
          "1779:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1782:         header_sn_ = end + 1;",
          "1783:         uint16_t tail_sn = 0;",
          "1784:         int sn = find_next_lost_sn(header_sn_, tail_sn);",
          "1785:         if (-1 == sn) {",
          "1786:             if (check_frame_complete(header_sn_, tail_sn)) {",
          "1787:                 err = packet_video_rtmp(header_sn_, tail_sn);",
          "1788:             }",
          "1789:         } else if (-2 == sn) {",
          "1790:             return srs_error_new(ERROR_RTC_RTP_MUXER, \"video cache is overflow\");",
          "1791:         } else {",
          "1792:             lost_sn_ = sn;",
          "1793:         }",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    215",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    216",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    156",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    157",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version7.hpp||trunk/src/core/srs_core_version7.hpp": [
          "File: trunk/src/core/srs_core_version7.hpp -> trunk/src/core/srs_core_version7.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       7",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    17",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    18",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ce08750e77026678c96aa69faec2733316d6191",
      "candidate_info": {
        "commit_hash": "2ce08750e77026678c96aa69faec2733316d6191",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/2ce08750e77026678c96aa69faec2733316d6191",
        "files": [
          ".github/workflows/test.yml",
          "trunk/doc/CHANGELOG.md",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "fix ci error. v6.0.160 (#4291)\n\nStarting January 30th, 2025, GitHub Actions customers will no longer be\nable to use v3 of\n[actions/upload-artifact](https://github.com/actions/upload-artifact) or\n[actions/download-artifact](https://github.com/actions/download-artifact).\nCustomers should update workflows to begin using [v4 of the artifact\nactions](https://github.blog/2024-02-12-get-started-with-v4-of-github-actions-artifacts/).\nLearn more:\nhttps://github.blog/changelog/2024-04-16-deprecation-notice-v3-of-the-artifact-actions/\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>\nCo-authored-by: winlin <winlinvip@gmail.com>\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    218",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    219",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    159",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    160",
          "",
          "---------------"
        ]
      }
    }
  ]
}