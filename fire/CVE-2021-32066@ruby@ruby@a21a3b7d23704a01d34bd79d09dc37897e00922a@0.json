{
  "cve_id": "CVE-2021-32066",
  "cve_desc": "An issue was discovered in Ruby through 2.6.7, 2.7.x through 2.7.3, and 3.x through 3.0.1. Net::IMAP does not raise an exception when StartTLS fails with an an unknown response, which might allow man-in-the-middle attackers to bypass the TLS protections by leveraging a network position between the client and the registry to block the StartTLS command, aka a \"StartTLS stripping attack.\"",
  "repo": "ruby/ruby",
  "patch_hash": "a21a3b7d23704a01d34bd79d09dc37897e00922a",
  "patch_info": {
    "commit_hash": "a21a3b7d23704a01d34bd79d09dc37897e00922a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/a21a3b7d23704a01d34bd79d09dc37897e00922a",
    "files": [
      "lib/net/imap.rb",
      "test/net/imap/test_imap.rb",
      "version.h"
    ],
    "message": "Fix StartTLS stripping vulnerability\n\nReported by Alexandr Savca in https://hackerone.com/reports/1178562\n\nCo-authored-by: Shugo Maeda <shugo@ruby-lang.org>",
    "before_after_code_files": [
      "lib/net/imap.rb||lib/net/imap.rb",
      "test/net/imap/test_imap.rb||test/net/imap/test_imap.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "lib/net/imap.rb||lib/net/imap.rb": [
      "File: lib/net/imap.rb -> lib/net/imap.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "1216:       end",
      "1217:       resp = @tagged_responses.delete(tag)",
      "1218:       case resp.name",
      "1219:       when /\\A(?:NO)\\z/ni",
      "1220:         raise NoResponseError, resp",
      "1221:       when /\\A(?:BAD)\\z/ni",
      "1222:         raise BadResponseError, resp",
      "1223:       else",
      "1225:       end",
      "1226:     end",
      "",
      "[Removed Lines]",
      "1224:         return resp",
      "",
      "[Added Lines]",
      "1219:       when /\\A(?:OK)\\z/ni",
      "1220:         return resp",
      "1226:         raise UnknownResponseError, resp",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3717:     class ByeResponseError < ResponseError",
      "3718:     end",
      "3720:     RESPONSE_ERRORS = Hash.new(ResponseError)",
      "3721:     RESPONSE_ERRORS[\"NO\"] = NoResponseError",
      "3722:     RESPONSE_ERRORS[\"BAD\"] = BadResponseError",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3722:     # Error raised upon an unknown response from the server.",
      "3723:     class UnknownResponseError < ResponseError",
      "3724:     end",
      "",
      "---------------"
    ],
    "test/net/imap/test_imap.rb||test/net/imap/test_imap.rb": [
      "File: test/net/imap/test_imap.rb -> test/net/imap/test_imap.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "127:         imap.disconnect",
      "128:       end",
      "129:     end",
      "130:   end",
      "132:   def start_server",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "131:     def test_starttls_stripping",
      "132:       starttls_stripping_test do |port|",
      "133:         imap = Net::IMAP.new(\"localhost\", :port => port)",
      "134:         assert_raise(Net::IMAP::UnknownResponseError) do",
      "135:           imap.starttls(:ca_file => CA_FILE)",
      "136:         end",
      "137:         imap",
      "138:       end",
      "139:     end",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "784:     end",
      "785:   end",
      "787:   def create_tcp_server",
      "788:     return TCPServer.new(server_addr, 0)",
      "789:   end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "797:   def starttls_stripping_test",
      "798:     server = create_tcp_server",
      "799:     port = server.addr[1]",
      "800:     start_server do",
      "801:       sock = server.accept",
      "802:       begin",
      "803:         sock.print(\"* OK test server\\r\\n\")",
      "804:         sock.gets",
      "805:         sock.print(\"RUBY0001 BUG unhandled command\\r\\n\")",
      "806:       ensure",
      "807:         sock.close",
      "808:         server.close",
      "809:       end",
      "810:     end",
      "811:     begin",
      "812:       imap = yield(port)",
      "813:     ensure",
      "814:       imap.disconnect if imap && !imap.disconnected?",
      "815:     end",
      "816:   end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
      "3: #define RUBY_VERSION_TEENY 4",
      "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
      "7: #define RUBY_RELEASE_YEAR 2021",
      "8: #define RUBY_RELEASE_MONTH 7",
      "",
      "[Removed Lines]",
      "5: #define RUBY_PATCHLEVEL 190",
      "",
      "[Added Lines]",
      "5: #define RUBY_PATCHLEVEL 191",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ea9b0fe5d30efaa7dad1be4da79c1ee58f4f963b",
      "candidate_info": {
        "commit_hash": "ea9b0fe5d30efaa7dad1be4da79c1ee58f4f963b",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/ea9b0fe5d30efaa7dad1be4da79c1ee58f4f963b",
        "files": [
          "test/ruby/test_enum.rb",
          "thread.c",
          "version.h"
        ],
        "message": "merge revision(s) ae5458f228a5477383e9c00425d85d50a3867817: [Backport #18475]\n\n    thread.c: Convert TAG_BREAK to a normal exception at thread top-level\n\n    [Bug #18475]\n    ---\n     test/ruby/test_enum.rb | 11 +++++++++++\n     thread.c               |  3 +++\n     2 files changed, 14 insertions(+)",
        "before_after_code_files": [
          "test/ruby/test_enum.rb||test/ruby/test_enum.rb",
          "thread.c||thread.c",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "test/ruby/test_enum.rb||test/ruby/test_enum.rb": [
          "File: test/ruby/test_enum.rb -> test/ruby/test_enum.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "326:       empty.first",
          "327:       empty.block.call",
          "328:     end;",
          "329:   end",
          "331:   def test_sort",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "330:     bug18475 = '[ruby-dev:107059]'",
          "331:     assert_in_out_err([], <<-'end;', [], /unexpected break/, bug18475)",
          "332:       e = Enumerator.new do |g|",
          "333:         Thread.new do",
          "334:           g << 1",
          "335:         end.join",
          "336:       end",
          "338:       e.first",
          "339:     end;",
          "",
          "---------------"
        ],
        "thread.c||thread.c": [
          "File: thread.c -> thread.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "741:  }",
          "742:  else {",
          "743:      errinfo = th->ec->errinfo;",
          "744:      if (state == TAG_FATAL) {",
          "746:      }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "745:             VALUE exc = rb_vm_make_jump_tag_but_local_jump(state, Qundef);",
          "746:             if (!NIL_P(exc)) errinfo = exc;",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
          "3: #define RUBY_VERSION_TEENY 6",
          "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
          "7: #define RUBY_RELEASE_YEAR 2022",
          "8: #define RUBY_RELEASE_MONTH 3",
          "11: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "5: #define RUBY_PATCHLEVEL 211",
          "9: #define RUBY_RELEASE_DAY 5",
          "",
          "[Added Lines]",
          "5: #define RUBY_PATCHLEVEL 212",
          "9: #define RUBY_RELEASE_DAY 19",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7d3cff6e41d73a00f3d0fdb337743f654e42f1a8",
      "candidate_info": {
        "commit_hash": "7d3cff6e41d73a00f3d0fdb337743f654e42f1a8",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/7d3cff6e41d73a00f3d0fdb337743f654e42f1a8",
        "files": [
          "gc.c",
          "test/ruby/test_weakmap.rb",
          "version.h"
        ],
        "message": "merge revision(s) a2d4e1cda68a49980a4f9f353f400efbde7e7884,d6c5a30cfdf658280338dbb8c8b17fab3190b928: [Backport #18392]\n\n\tFixed the check order in wmap_live_p [Bug #18392]\n\n\tCheck if the object is a pointer to heap before check the flag in\n\tthat object.\n\t---\n\t gc.c | 35 ++++++++++++++++++++++-------------\n\t 1 file changed, 22 insertions(+), 13 deletions(-)\n\n\tObjectSpace::WeakMap#inspect: check if living object [Bug #18392]\n\n\t---\n\t gc.c                      | 29 +++++++++++++++++++++++------\n\t test/ruby/test_weakmap.rb |  9 +++++++++\n\t 2 files changed, 32 insertions(+), 6 deletions(-)",
        "before_after_code_files": [
          "gc.c||gc.c",
          "test/ruby/test_weakmap.rb||test/ruby/test_weakmap.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "gc.c||gc.c": [
          "File: gc.c -> gc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "10516:     VALUE value;",
          "10517: };",
          "10519: static int",
          "10520: wmap_inspect_i(st_data_t key, st_data_t val, st_data_t arg)",
          "10521: {",
          "10523:     VALUE k = (VALUE)key, v = (VALUE)val;",
          "10525:     if (RSTRING_PTR(str)[0] == '#') {",
          "",
          "[Removed Lines]",
          "10522:     VALUE str = (VALUE)arg;",
          "",
          "[Added Lines]",
          "10519: static VALUE",
          "10520: wmap_inspect_append(rb_objspace_t *objspace, VALUE str, VALUE obj)",
          "10521: {",
          "10522:     if (SPECIAL_CONST_P(obj)) {",
          "10523:         return rb_str_append(str, rb_inspect(obj));",
          "10524:     }",
          "10525:     else if (wmap_live_p(objspace, obj)) {",
          "10526:         return rb_str_append(str, rb_any_to_s(obj));",
          "10527:     }",
          "10528:     else {",
          "10529:         return rb_str_catf(str, \"#<collected:%p>\", (void*)obj);",
          "10530:     }",
          "10531: }",
          "10536:     struct wmap_iter_arg *argp = (struct wmap_iter_arg *)arg;",
          "10537:     rb_objspace_t *objspace = argp->objspace;",
          "10538:     VALUE str = argp->value;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10529:  rb_str_cat2(str, \": \");",
          "10530:  RSTRING_PTR(str)[0] = '#';",
          "10531:     }",
          "10534:     rb_str_cat2(str, \" => \");",
          "10538:     return ST_CONTINUE;",
          "10539: }",
          "",
          "[Removed Lines]",
          "10532:     k = SPECIAL_CONST_P(k) ? rb_inspect(k) : rb_any_to_s(k);",
          "10533:     rb_str_append(str, k);",
          "10535:     v = SPECIAL_CONST_P(v) ? rb_inspect(v) : rb_any_to_s(v);",
          "10536:     rb_str_append(str, v);",
          "",
          "[Added Lines]",
          "10548:     wmap_inspect_append(objspace, str, k);",
          "10550:     wmap_inspect_append(objspace, str, v);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "10544:     VALUE str;",
          "10545:     VALUE c = rb_class_name(CLASS_OF(self));",
          "10546:     struct weakmap *w;",
          "10548:     TypedData_Get_Struct(self, struct weakmap, &weakmap_type, w);",
          "10549:     str = rb_sprintf(\"-<%\"PRIsVALUE\":%p\", c, (void *)self);",
          "10550:     if (w->wmap2obj) {",
          "10552:     }",
          "10553:     RSTRING_PTR(str)[0] = '#';",
          "10554:     rb_str_cat2(str, \">\");",
          "",
          "[Removed Lines]",
          "10551:  st_foreach(w->wmap2obj, wmap_inspect_i, str);",
          "",
          "[Added Lines]",
          "10561:     struct wmap_iter_arg args;",
          "10566:  args.objspace = &rb_objspace;",
          "10567:  args.value = str;",
          "10568:  st_foreach(w->wmap2obj, wmap_inspect_i, (st_data_t)&args);",
          "",
          "---------------"
        ],
        "test/ruby/test_weakmap.rb||test/ruby/test_weakmap.rb": [
          "File: test/ruby/test_weakmap.rb -> test/ruby/test_weakmap.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:                  @wm.inspect)",
          "74:   end",
          "76:   def test_each",
          "77:     m = __callee__[/test_(.*)/, 1]",
          "78:     x1 = Object.new",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:   def test_inspect_garbage",
          "77:     1000.times do |i|",
          "78:       @wm[i] = Object.new",
          "79:       @wm.inspect",
          "80:     end",
          "81:     assert_match(/\\A\\#<#{@wm.class.name}:[^:]++:(?:\\s\\d+\\s=>\\s\\#<(?:Object|collected):[^:<>]*+>(?:,|>\\z))+/,",
          "82:                  @wm.inspect)",
          "83:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
          "3: #define RUBY_VERSION_TEENY 6",
          "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
          "7: #define RUBY_RELEASE_YEAR 2021",
          "8: #define RUBY_RELEASE_MONTH 12",
          "",
          "[Removed Lines]",
          "5: #define RUBY_PATCHLEVEL 205",
          "",
          "[Added Lines]",
          "5: #define RUBY_PATCHLEVEL 206",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6601fb5672dc4c1f4bf5ee0f9b3f97a029df06cd",
      "candidate_info": {
        "commit_hash": "6601fb5672dc4c1f4bf5ee0f9b3f97a029df06cd",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/6601fb5672dc4c1f4bf5ee0f9b3f97a029df06cd",
        "files": [
          "ext/fiddle/lib/fiddle/types.rb",
          "version.h"
        ],
        "message": "merge revision(s) 25e56fe374478a2266ac25f22a07bb3c6a423c83,8758b07b1e4fd636dffb4b442388a3033c63d4b5,791e8eec66d3aebcee36c1369b0bf52bc3815e94: [Backport #18016]\n\n\t[ruby/fiddle] Fix Win32Types for Windows 64-bit (#63)\n\n\thttps://docs.microsoft.com/en-us/windows/win32/winprog/windows-data-types\n\n\thttps://github.com/ruby/fiddle/commit/28ee5b1608\n\t---\n\t ext/fiddle/lib/fiddle/types.rb | 8 ++++----\n\t 1 file changed, 4 insertions(+), 4 deletions(-)\n\n\t[ruby/fiddle] Fix more Win32Types definitions\n\n\thttps://docs.microsoft.com/en-us/windows/win32/winprog/windows-data-types\n\n\thttps://github.com/ruby/fiddle/commit/805c1a595a\n\t---\n\t ext/fiddle/lib/fiddle/types.rb | 23 ++++++++++++-----------\n\t 1 file changed, 12 insertions(+), 11 deletions(-)\n\n\t[ruby/fiddle] win32types: sort\n\n\thttps://github.com/ruby/fiddle/commit/35dec6c5a5\n\t---\n\t ext/fiddle/lib/fiddle/types.rb | 30 +++++++++++++++---------------\n\t 1 file changed, 15 insertions(+), 15 deletions(-)",
        "before_after_code_files": [
          "ext/fiddle/lib/fiddle/types.rb||ext/fiddle/lib/fiddle/types.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/fiddle/lib/fiddle/types.rb||ext/fiddle/lib/fiddle/types.rb": [
          "File: ext/fiddle/lib/fiddle/types.rb -> ext/fiddle/lib/fiddle/types.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:   # * WORD",
          "28:   module Win32Types",
          "29:     def included(m) # :nodoc:",
          "30:       m.module_eval{",
          "37:         typealias \"BOOL\", \"int\"",
          "39:         typealias \"BYTE\", \"unsigned char\"",
          "41:         typealias \"UINT\", \"unsigned int\"",
          "42:         typealias \"ULONG\", \"unsigned long\"",
          "52:       }",
          "53:     end",
          "54:     module_function :included",
          "",
          "[Removed Lines]",
          "31:         typealias \"DWORD\", \"unsigned long\"",
          "32:         typealias \"PDWORD\", \"unsigned long *\"",
          "33:         typealias \"DWORD32\", \"unsigned long\"",
          "34:         typealias \"DWORD64\", \"unsigned long long\"",
          "35:         typealias \"WORD\", \"unsigned short\"",
          "36:         typealias \"PWORD\", \"unsigned short *\"",
          "38:         typealias \"ATOM\", \"int\"",
          "40:         typealias \"PBYTE\", \"unsigned char *\"",
          "43:         typealias \"UCHAR\", \"unsigned char\"",
          "44:         typealias \"HANDLE\", \"uintptr_t\"",
          "45:         typealias \"PHANDLE\", \"void*\"",
          "46:         typealias \"PVOID\", \"void*\"",
          "47:         typealias \"LPCSTR\", \"char*\"",
          "48:         typealias \"LPSTR\", \"char*\"",
          "49:         typealias \"HINSTANCE\", \"unsigned int\"",
          "50:         typealias \"HDC\", \"unsigned int\"",
          "51:         typealias \"HWND\", \"unsigned int\"",
          "",
          "[Added Lines]",
          "30:       # https://docs.microsoft.com/en-us/windows/win32/winprog/windows-data-types",
          "32:         typealias \"ATOM\", \"WORD\"",
          "35:         typealias \"DWORD\", \"unsigned long\"",
          "36:         typealias \"DWORD32\", \"uint32_t\"",
          "37:         typealias \"DWORD64\", \"uint64_t\"",
          "38:         typealias \"HANDLE\", \"PVOID\"",
          "39:         typealias \"HDC\", \"HANDLE\"",
          "40:         typealias \"HINSTANCE\", \"HANDLE\"",
          "41:         typealias \"HWND\", \"HANDLE\"",
          "42:         typealias \"LPCSTR\", \"const char *\"",
          "43:         typealias \"LPSTR\", \"char *\"",
          "44:         typealias \"PBYTE\", \"BYTE *\"",
          "45:         typealias \"PDWORD\", \"DWORD *\"",
          "46:         typealias \"PHANDLE\", \"HANDLE *\"",
          "47:         typealias \"PVOID\", \"void *\"",
          "48:         typealias \"PWORD\", \"WORD *\"",
          "49:         typealias \"UCHAR\", \"unsigned char\"",
          "52:         typealias \"WORD\", \"unsigned short\"",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
          "3: #define RUBY_VERSION_TEENY 5",
          "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
          "7: #define RUBY_RELEASE_YEAR 2021",
          "8: #define RUBY_RELEASE_MONTH 11",
          "",
          "[Removed Lines]",
          "5: #define RUBY_PATCHLEVEL 192",
          "",
          "[Added Lines]",
          "5: #define RUBY_PATCHLEVEL 193",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "83de7133876ec392eb4b3b69c2220d7b49685444",
      "candidate_info": {
        "commit_hash": "83de7133876ec392eb4b3b69c2220d7b49685444",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/83de7133876ec392eb4b3b69c2220d7b49685444",
        "files": [
          "ext/zlib/zlib.c",
          "test/zlib/test_zlib.rb",
          "version.h"
        ],
        "message": "merge revision(s) c51b92c18deb850d2cea3a7c9020db23b364ab72: [Backport #18358]\n\n    [ruby/zlib] [Bug #18358] Fix crash in zlib when in progress\n\n    When Zlib::Inflate#inflate or Zlib::Deflate#deflate is called\n    recursively inside the block, a crash can occur because of an\n    use-after-free bug.\n\n    https://github.com/ruby/zlib/commit/50fb8a0338\n    ---\n     ext/zlib/zlib.c        | 117 ++++++++++++++++++++++++++++++++-----------------\n     test/zlib/test_zlib.rb |  10 ++++-\n     2 files changed, 85 insertions(+), 42 deletions(-)",
        "before_after_code_files": [
          "ext/zlib/zlib.c||ext/zlib/zlib.c",
          "test/zlib/test_zlib.rb||test/zlib/test_zlib.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/zlib/zlib.c||ext/zlib/zlib.c": [
          "File: ext/zlib/zlib.c -> ext/zlib/zlib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "303: static VALUE cZError, cStreamEnd, cNeedDict;",
          "306: static void",
          "307: raise_zlib_error(int err, const char *msg)",
          "",
          "[Removed Lines]",
          "304: static VALUE cStreamError, cDataError, cMemError, cBufError, cVersionError;",
          "",
          "[Added Lines]",
          "305: static VALUE cStreamError, cDataError, cMemError, cBufError, cVersionError, cInProgressError;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "539:     } *func;",
          "540: };",
          "550: #define ZSTREAM_READY(z)       ((z)->flags |= ZSTREAM_FLAG_READY)",
          "551: #define ZSTREAM_IS_READY(z)    ((z)->flags & ZSTREAM_FLAG_READY)",
          "",
          "[Removed Lines]",
          "542: #define ZSTREAM_FLAG_READY      0x1",
          "543: #define ZSTREAM_FLAG_IN_STREAM  0x2",
          "544: #define ZSTREAM_FLAG_FINISHED   0x4",
          "545: #define ZSTREAM_FLAG_CLOSING    0x8",
          "546: #define ZSTREAM_FLAG_GZFILE     0x10 /* disallows yield from expand_buffer for",
          "548: #define ZSTREAM_FLAG_UNUSED     0x20",
          "",
          "[Added Lines]",
          "543: #define ZSTREAM_FLAG_READY      (1 << 0)",
          "544: #define ZSTREAM_FLAG_IN_STREAM  (1 << 1)",
          "545: #define ZSTREAM_FLAG_FINISHED   (1 << 2)",
          "546: #define ZSTREAM_FLAG_CLOSING    (1 << 3)",
          "547: #define ZSTREAM_FLAG_GZFILE     (1 << 4) /* disallows yield from expand_buffer for",
          "549: #define ZSTREAM_IN_PROGRESS     (1 << 5)",
          "550: #define ZSTREAM_FLAG_UNUSED     (1 << 6)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "572: };",
          "574: struct zstream_run_args {",
          "",
          "[Removed Lines]",
          "575:     struct zstream * z;",
          "",
          "[Added Lines]",
          "577:     struct zstream *const z;",
          "578:     Bytef *src;",
          "579:     long len;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1028:     args->interrupt = 1;",
          "1029: }",
          "1033: {",
          "1035:     int err;",
          "1036:     VALUE old_input = Qnil;",
          "1044:     if (NIL_P(z->input) && len == 0) {",
          "1045:  z->stream.next_in = (Bytef*)\"\";",
          "1046:  z->stream.avail_in = 0;",
          "",
          "[Removed Lines]",
          "1031: static void",
          "1032: zstream_run0(struct zstream *z, Bytef *src, long len, int flush)",
          "1034:     struct zstream_run_args args;",
          "1038:     args.z = z;",
          "1039:     args.flush = flush;",
          "1040:     args.interrupt = 0;",
          "1041:     args.jump_state = 0;",
          "1042:     args.stream_output = !ZSTREAM_IS_GZFILE(z) && rb_block_given_p();",
          "",
          "[Added Lines]",
          "1035: static VALUE",
          "1036: zstream_run_try(VALUE value_arg)",
          "1038:     struct zstream_run_args *args = (struct zstream_run_args *)value_arg;",
          "1039:     struct zstream *z = args->z;",
          "1040:     Bytef *src = args->src;",
          "1041:     long len = args->len;",
          "1042:     int flush = args->flush;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1063: loop:",
          "1064: #ifndef RB_NOGVL_UBF_ASYNC_SAFE",
          "1067: #else",
          "1070:                                RB_NOGVL_UBF_ASYNC_SAFE);",
          "1071: #endif",
          "1076:        goto loop;",
          "1077:     }",
          "",
          "[Removed Lines]",
          "1065:     err = (int)(VALUE)rb_thread_call_without_gvl(zstream_run_func, (void *)&args,",
          "1066:        zstream_unblock_func, (void *)&args);",
          "1068:     err = (int)(VALUE)rb_nogvl(zstream_run_func, (void *)&args,",
          "1069:                                zstream_unblock_func, (void *)&args,",
          "1074:     if (err == Z_OK && args.interrupt) {",
          "1075:        args.interrupt = 0;",
          "",
          "[Added Lines]",
          "1068:     err = (int)(VALUE)rb_thread_call_without_gvl(zstream_run_func, (void *)args,",
          "1069:        zstream_unblock_func, (void *)args);",
          "1071:     err = (int)(VALUE)rb_nogvl(zstream_run_func, (void *)args,",
          "1072:                                zstream_unblock_func, (void *)args,",
          "1077:     if (err == Z_OK && args->interrupt) {",
          "1078:        args->interrupt = 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1109:  rb_gc_force_recycle(old_input);",
          "1110:     }",
          "1114: }",
          "1123: static VALUE",
          "1124: zstream_run_synchronized(VALUE value_arg)",
          "1125: {",
          "1128:     return Qnil;",
          "1129: }",
          "1131: static void",
          "1132: zstream_run(struct zstream *z, Bytef *src, long len, int flush)",
          "1133: {",
          "1140: }",
          "1141: static VALUE",
          "1142: zstream_sync(struct zstream *z, Bytef *src, long len)",
          "",
          "[Removed Lines]",
          "1112:     if (args.jump_state)",
          "1113:  rb_jump_tag(args.jump_state);",
          "1116: struct zstream_run_synchronized_args {",
          "1117:     struct zstream *z;",
          "1118:     Bytef *src;",
          "1119:     long len;",
          "1120:     int flush;",
          "1121: };",
          "1126:     struct zstream_run_synchronized_args *run_args = (struct zstream_run_synchronized_args *)value_arg;",
          "1127:     zstream_run0(run_args->z, run_args->src, run_args->len, run_args->flush);",
          "1134:     struct zstream_run_synchronized_args run_args;",
          "1135:     run_args.z = z;",
          "1136:     run_args.src = src;",
          "1137:     run_args.len = len;",
          "1138:     run_args.flush = flush;",
          "1139:     rb_mutex_synchronize(z->mutex, zstream_run_synchronized, (VALUE)&run_args);",
          "",
          "[Added Lines]",
          "1115:     if (args->jump_state)",
          "1116:  rb_jump_tag(args->jump_state);",
          "1117:     return Qnil;",
          "1120: static VALUE",
          "1121: zstream_run_ensure(VALUE value_arg)",
          "1122: {",
          "1123:     struct zstream_run_args *args = (struct zstream_run_args *)value_arg;",
          "1126:     args->z->flags &= ~ZSTREAM_IN_PROGRESS;",
          "1128:     return Qnil;",
          "1129: }",
          "1134:     struct zstream_run_args *args = (struct zstream_run_args *)value_arg;",
          "1137:     if (args->z->flags & ZSTREAM_IN_PROGRESS) {",
          "1138:         rb_raise(cInProgressError, \"zlib stream is in progress\");",
          "1139:     }",
          "1140:     args->z->flags |= ZSTREAM_IN_PROGRESS;",
          "1142:     rb_ensure(zstream_run_try, value_arg, zstream_run_ensure, value_arg);",
          "1150:     struct zstream_run_args args = {",
          "1151:         .z = z,",
          "1152:         .src = src,",
          "1153:         .len = len,",
          "1154:         .flush = flush,",
          "1155:         .interrupt = 0,",
          "1156:         .jump_state = 0,",
          "1157:         .stream_output = !ZSTREAM_IS_GZFILE(z) && rb_block_given_p(),",
          "1158:     };",
          "1159:     rb_mutex_synchronize(z->mutex, zstream_run_synchronized, (VALUE)&args);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4507:     cMemError     = rb_define_class_under(mZlib, \"MemError\", cZError);",
          "4508:     cBufError     = rb_define_class_under(mZlib, \"BufError\", cZError);",
          "4509:     cVersionError = rb_define_class_under(mZlib, \"VersionError\", cZError);",
          "4511:     rb_define_module_function(mZlib, \"zlib_version\", rb_zlib_version, 0);",
          "4512:     rb_define_module_function(mZlib, \"adler32\", rb_zlib_adler32, -1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4530:     cInProgressError = rb_define_class_under(mZlib, \"InProgressError\", cZError);",
          "",
          "---------------"
        ],
        "test/zlib/test_zlib.rb||test/zlib/test_zlib.rb": [
          "File: test/zlib/test_zlib.rb -> test/zlib/test_zlib.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "476:     end",
          "478:     def test_recursive_deflate",
          "479:       zd = Zlib::Deflate.new",
          "480:       s = SecureRandom.random_bytes(1024**2)",
          "482:         zd.deflate(s) do",
          "483:           zd.deflate(s)",
          "484:         end",
          "485:       end",
          "486:     ensure",
          "487:       zd&.finish",
          "488:       zd&.close",
          "489:     end",
          "491:     def test_recursive_inflate",
          "492:       zi = Zlib::Inflate.new",
          "493:       s = Zlib.deflate(SecureRandom.random_bytes(1024**2))",
          "495:         zi.inflate(s) do",
          "496:           zi.inflate(s)",
          "497:         end",
          "498:       end",
          "499:     ensure",
          "500:       zi&.close",
          "501:     end",
          "502:   end",
          "",
          "[Removed Lines]",
          "481:       assert_raise(Zlib::BufError) do",
          "494:       assert_raise(Zlib::DataError) do",
          "",
          "[Added Lines]",
          "479:       original_gc_stress = GC.stress",
          "480:       GC.stress = true",
          "484:       assert_raise(Zlib::InProgressError) do",
          "490:       GC.stress = original_gc_stress",
          "496:       original_gc_stress = GC.stress",
          "497:       GC.stress = true",
          "502:       assert_raise(Zlib::InProgressError) do",
          "508:       GC.stress = original_gc_stress",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
          "3: #define RUBY_VERSION_TEENY 6",
          "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
          "7: #define RUBY_RELEASE_YEAR 2022",
          "8: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "5: #define RUBY_PATCHLEVEL 210",
          "",
          "[Added Lines]",
          "5: #define RUBY_PATCHLEVEL 211",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f740ffb81f3ef11526add528583b0cbfce28af67",
      "candidate_info": {
        "commit_hash": "f740ffb81f3ef11526add528583b0cbfce28af67",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/f740ffb81f3ef11526add528583b0cbfce28af67",
        "files": [
          "ext/zlib/zlib.c",
          "test/zlib/test_zlib.rb",
          "version.h"
        ],
        "message": "merge revision(s) b3d62a77d928eff01268ca7fa1c1c0966702926d [Backport #17803]\n\n    [ruby/zlib] Synchronize access to zstream to prevent segfault in\n     multithreaded use\n\n    I'm not sure whether this handles all multithreaded use cases,\n    but this handles the example that crashes almost immediately\n    and does 10,000,000 total deflates using 100 separate threads.\n\n    To prevent the tests from taking forever, the committed test\n    for this uses only 10,000 deflates across 10 separate threads,\n    which still causes a segfault in the previous implementation\n    almost immediately.\n\n    Fixes [Bug #17803]\n\n    https://github.com/ruby/zlib/commit/4b1023b3f2\n    ---\n     ext/zlib/zlib.c        | 33 ++++++++++++++++++++++++++-\n     test/zlib/test_zlib.rb | 61 ++++++++++++++++++++++++++++++++++++++++++++++++++\n     2 files changed, 93 insertions(+), 1 deletion(-)",
        "before_after_code_files": [
          "ext/zlib/zlib.c||ext/zlib/zlib.c",
          "test/zlib/test_zlib.rb||test/zlib/test_zlib.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "ext/zlib/zlib.c||ext/zlib/zlib.c": [
          "File: ext/zlib/zlib.c -> ext/zlib/zlib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "530:     unsigned long flags;",
          "531:     VALUE buf;",
          "532:     VALUE input;",
          "533:     z_stream stream;",
          "534:     const struct zstream_funcs {",
          "535:  int (*reset)(z_streamp);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "533:     VALUE mutex;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "602:     z->flags = 0;",
          "603:     z->buf = Qnil;",
          "604:     z->input = Qnil;",
          "605:     z->stream.zalloc = zlib_mem_alloc;",
          "606:     z->stream.zfree = zlib_mem_free;",
          "607:     z->stream.opaque = Z_NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "606:     z->mutex = rb_mutex_new();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "632:      rb_obj_reveal(z->buf, rb_cString);",
          "634:      rb_protect(rb_yield, z->buf, &state);",
          "636:      z->buf = Qnil;",
          "637:      zstream_expand_buffer_into(z, ZSTREAM_AVAIL_OUT_STEP_MAX);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "636:      rb_mutex_unlock(z->mutex);",
          "638:      rb_mutex_lock(z->mutex);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1025: }",
          "1027: static void",
          "1029: {",
          "1030:     struct zstream_run_args args;",
          "1031:     int err;",
          "",
          "[Removed Lines]",
          "1028: zstream_run(struct zstream *z, Bytef *src, long len, int flush)",
          "",
          "[Added Lines]",
          "1032: zstream_run0(struct zstream *z, Bytef *src, long len, int flush)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1109:  rb_jump_tag(args.jump_state);",
          "1110: }",
          "1112: static VALUE",
          "1113: zstream_sync(struct zstream *z, Bytef *src, long len)",
          "1114: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1116: struct zstream_run_synchronized_args {",
          "1117:     struct zstream *z;",
          "1118:     Bytef *src;",
          "1119:     long len;",
          "1120:     int flush;",
          "1121: };",
          "1123: static VALUE",
          "1124: zstream_run_synchronized(VALUE value_arg)",
          "1125: {",
          "1126:     struct zstream_run_synchronized_args *run_args = (struct zstream_run_synchronized_args *)value_arg;",
          "1127:     zstream_run0(run_args->z, run_args->src, run_args->len, run_args->flush);",
          "1128:     return Qnil;",
          "1129: }",
          "1131: static void",
          "1132: zstream_run(struct zstream *z, Bytef *src, long len, int flush)",
          "1133: {",
          "1134:     struct zstream_run_synchronized_args run_args;",
          "1135:     run_args.z = z;",
          "1136:     run_args.src = src;",
          "1137:     run_args.len = len;",
          "1138:     run_args.flush = flush;",
          "1139:     rb_mutex_synchronize(z->mutex, zstream_run_synchronized, (VALUE)&run_args);",
          "1140: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1154:     struct zstream *z = p;",
          "1155:     rb_gc_mark(z->buf);",
          "1156:     rb_gc_mark(z->input);",
          "1157: }",
          "1159: static void",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1186:     rb_gc_mark(z->mutex);",
          "",
          "---------------"
        ],
        "test/zlib/test_zlib.rb||test/zlib/test_zlib.rb": [
          "File: test/zlib/test_zlib.rb -> test/zlib/test_zlib.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: require 'test/unit'",
          "4: require 'stringio'",
          "5: require 'tempfile'",
          "7: begin",
          "8:   require 'zlib'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: require 'securerandom'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "443:       assert_raise(Zlib::StreamError) { z.set_dictionary(\"foo\") }",
          "444:       z.close",
          "445:     end",
          "446:   end",
          "448:   class TestZlibGzipFile < Test::Unit::TestCase",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "448:     def test_multithread_deflate",
          "449:       zd = Zlib::Deflate.new",
          "450:       s = \"x\" * 10000",
          "451:       (0...10).map do |x|",
          "452:         Thread.new do",
          "453:           1000.times { zd.deflate(s) }",
          "454:         end",
          "455:       end.each do |th|",
          "456:         th.join",
          "457:       end",
          "458:     ensure",
          "459:       zd&.finish",
          "460:       zd&.close",
          "461:     end",
          "463:     def test_multithread_inflate",
          "464:       zi = Zlib::Inflate.new",
          "465:       s = Zlib.deflate(\"x\" * 10000)",
          "466:       (0...10).map do |x|",
          "467:         Thread.new do",
          "468:           1000.times { zi.inflate(s) }",
          "469:         end",
          "470:       end.each do |th|",
          "471:         th.join",
          "472:       end",
          "473:     ensure",
          "474:       zi&.finish",
          "475:       zi&.close",
          "476:     end",
          "478:     def test_recursive_deflate",
          "479:       zd = Zlib::Deflate.new",
          "480:       s = SecureRandom.random_bytes(1024**2)",
          "481:       assert_raise(Zlib::BufError) do",
          "482:         zd.deflate(s) do",
          "483:           zd.deflate(s)",
          "484:         end",
          "485:       end",
          "486:     ensure",
          "487:       zd&.finish",
          "488:       zd&.close",
          "489:     end",
          "491:     def test_recursive_inflate",
          "492:       zi = Zlib::Inflate.new",
          "493:       s = Zlib.deflate(SecureRandom.random_bytes(1024**2))",
          "494:       assert_raise(Zlib::DataError) do",
          "495:         zi.inflate(s) do",
          "496:           zi.inflate(s)",
          "497:         end",
          "498:       end",
          "499:     ensure",
          "500:       zi&.close",
          "501:     end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
          "3: #define RUBY_VERSION_TEENY 6",
          "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
          "11: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "5: #define RUBY_PATCHLEVEL 209",
          "7: #define RUBY_RELEASE_YEAR 2021",
          "8: #define RUBY_RELEASE_MONTH 12",
          "9: #define RUBY_RELEASE_DAY 31",
          "",
          "[Added Lines]",
          "5: #define RUBY_PATCHLEVEL 210",
          "7: #define RUBY_RELEASE_YEAR 2022",
          "8: #define RUBY_RELEASE_MONTH 3",
          "9: #define RUBY_RELEASE_DAY 5",
          "",
          "---------------"
        ]
      }
    }
  ]
}