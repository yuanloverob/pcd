{
  "cve_id": "CVE-2024-31578",
  "cve_desc": "FFmpeg version n6.1.1 was discovered to contain a heap use-after-free via the av_hwframe_ctx_init function.",
  "repo": "ffmpeg/ffmpeg",
  "patch_hash": "3bb00c0a420c3ce83c6fafee30270d69622ccad7",
  "patch_info": {
    "commit_hash": "3bb00c0a420c3ce83c6fafee30270d69622ccad7",
    "repo": "ffmpeg/ffmpeg",
    "commit_url": "https://github.com/ffmpeg/ffmpeg/commit/3bb00c0a420c3ce83c6fafee30270d69622ccad7",
    "files": [
      "libavutil/hwcontext.c"
    ],
    "message": "avutil/hwcontext: Don't assume frames_uninit is reentrant\n\nFix heap use after free when vulkan_frames_init failed.\n\nSigned-off-by: Zhao Zhili <zhilizhao@tencent.com>",
    "before_after_code_files": [
      "libavutil/hwcontext.c||libavutil/hwcontext.c"
    ]
  },
  "patch_diff": {
    "libavutil/hwcontext.c||libavutil/hwcontext.c": [
      "File: libavutil/hwcontext.c -> libavutil/hwcontext.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "359:     if (ctx->internal->hw_type->frames_init) {",
      "360:         ret = ctx->internal->hw_type->frames_init(ctx);",
      "361:         if (ret < 0)",
      "363:     }",
      "365:     if (ctx->internal->pool_internal && !ctx->pool)",
      "",
      "[Removed Lines]",
      "362:             goto fail;",
      "",
      "[Added Lines]",
      "362:             return ret;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "369:     if (ctx->initial_pool_size > 0) {",
      "370:         ret = hwframe_pool_prealloc(ref);",
      "371:         if (ret < 0)",
      "373:     }",
      "375:     return 0;",
      "380: }",
      "382: int av_hwframe_transfer_get_formats(AVBufferRef *hwframe_ref,",
      "",
      "[Removed Lines]",
      "372:             goto fail;",
      "376: fail:",
      "377:     if (ctx->internal->hw_type->frames_uninit)",
      "378:         ctx->internal->hw_type->frames_uninit(ctx);",
      "379:     return ret;",
      "",
      "[Added Lines]",
      "372:             return ret;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7d79d0a43b5533ff584249332bc1db7fedbab1d2",
      "candidate_info": {
        "commit_hash": "7d79d0a43b5533ff584249332bc1db7fedbab1d2",
        "repo": "ffmpeg/ffmpeg",
        "commit_url": "https://github.com/ffmpeg/ffmpeg/commit/7d79d0a43b5533ff584249332bc1db7fedbab1d2",
        "files": [
          "libavutil/hwcontext.c"
        ],
        "message": "avutil/hwcontext: Don't assume frames_uninit is reentrant\n\nFix heap use after free when vulkan_frames_init failed.\n\nSigned-off-by: Zhao Zhili <zhilizhao@tencent.com>\n(cherry picked from commit 3bb00c0a420c3ce83c6fafee30270d69622ccad7)",
        "before_after_code_files": [
          "libavutil/hwcontext.c||libavutil/hwcontext.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavutil/hwcontext.c||libavutil/hwcontext.c"
          ],
          "candidate": [
            "libavutil/hwcontext.c||libavutil/hwcontext.c"
          ]
        }
      },
      "candidate_diff": {
        "libavutil/hwcontext.c||libavutil/hwcontext.c": [
          "File: libavutil/hwcontext.c -> libavutil/hwcontext.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "363:     if (ctx->internal->hw_type->frames_init) {",
          "364:         ret = ctx->internal->hw_type->frames_init(ctx);",
          "365:         if (ret < 0)",
          "367:     }",
          "369:     if (ctx->internal->pool_internal && !ctx->pool)",
          "",
          "[Removed Lines]",
          "366:             goto fail;",
          "",
          "[Added Lines]",
          "366:             return ret;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "373:     if (ctx->initial_pool_size > 0) {",
          "374:         ret = hwframe_pool_prealloc(ref);",
          "375:         if (ret < 0)",
          "377:     }",
          "379:     return 0;",
          "384: }",
          "386: int av_hwframe_transfer_get_formats(AVBufferRef *hwframe_ref,",
          "",
          "[Removed Lines]",
          "376:             goto fail;",
          "380: fail:",
          "381:     if (ctx->internal->hw_type->frames_uninit)",
          "382:         ctx->internal->hw_type->frames_uninit(ctx);",
          "383:     return ret;",
          "",
          "[Added Lines]",
          "376:             return ret;",
          "",
          "---------------"
        ]
      }
    }
  ]
}