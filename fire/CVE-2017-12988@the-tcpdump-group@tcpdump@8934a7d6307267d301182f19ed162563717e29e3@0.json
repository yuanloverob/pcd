{
  "cve_id": "CVE-2017-12988",
  "cve_desc": "The telnet parser in tcpdump before 4.9.2 has a buffer over-read in print-telnet.c:telnet_parse().",
  "repo": "the-tcpdump-group/tcpdump",
  "patch_hash": "8934a7d6307267d301182f19ed162563717e29e3",
  "patch_info": {
    "commit_hash": "8934a7d6307267d301182f19ed162563717e29e3",
    "repo": "the-tcpdump-group/tcpdump",
    "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/8934a7d6307267d301182f19ed162563717e29e3",
    "files": [
      "print-telnet.c",
      "tests/TESTLIST",
      "tests/telnet-iac-check-oobr.out",
      "tests/telnet-iac-check-oobr.pcap"
    ],
    "message": "CVE-2017-12988/TELNET: Add a missing bounds check.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd a test using the capture file supplied by the reporter(s).",
    "before_after_code_files": [
      "print-telnet.c||print-telnet.c"
    ]
  },
  "patch_diff": {
    "print-telnet.c||print-telnet.c": [
      "File: print-telnet.c -> print-telnet.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "442:     break;",
      "443:    p++;",
      "444:   }",
      "445:   if (*p != IAC)",
      "446:    goto pktend;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "445:   ND_TCHECK(*p);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "451ac4c753933eca8ffd5fd5192a03334520d789",
      "candidate_info": {
        "commit_hash": "451ac4c753933eca8ffd5fd5192a03334520d789",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/451ac4c753933eca8ffd5fd5192a03334520d789",
        "files": [
          "print-aodv.c",
          "print-atm.c",
          "print-bgp.c",
          "print-dccp.c",
          "print-domain.c",
          "print-forces.c",
          "print-ip.c",
          "print-ip6.c",
          "print-isoclns.c",
          "print-krb.c",
          "print-mpls.c",
          "print-msdp.c",
          "print-ospf.c",
          "print-otv.c",
          "print-resp.c",
          "print-rrcp.c",
          "print-slow.c",
          "print-smb.c",
          "print-snmp.c",
          "print-tcp.c",
          "print-telnet.c",
          "print-tftp.c",
          "smbutil.c",
          "util-print.c"
        ],
        "message": "Use more the ND_TCHECK_1() macro",
        "before_after_code_files": [
          "print-aodv.c||print-aodv.c",
          "print-atm.c||print-atm.c",
          "print-bgp.c||print-bgp.c",
          "print-dccp.c||print-dccp.c",
          "print-domain.c||print-domain.c",
          "print-forces.c||print-forces.c",
          "print-ip.c||print-ip.c",
          "print-ip6.c||print-ip6.c",
          "print-isoclns.c||print-isoclns.c",
          "print-krb.c||print-krb.c",
          "print-mpls.c||print-mpls.c",
          "print-msdp.c||print-msdp.c",
          "print-ospf.c||print-ospf.c",
          "print-otv.c||print-otv.c",
          "print-resp.c||print-resp.c",
          "print-rrcp.c||print-rrcp.c",
          "print-slow.c||print-slow.c",
          "print-smb.c||print-smb.c",
          "print-snmp.c||print-snmp.c",
          "print-tcp.c||print-tcp.c",
          "print-telnet.c||print-telnet.c",
          "print-tftp.c||print-tftp.c",
          "smbutil.c||smbutil.c",
          "util-print.c||util-print.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-telnet.c||print-telnet.c"
          ],
          "candidate": [
            "print-telnet.c||print-telnet.c"
          ]
        }
      },
      "candidate_diff": {
        "print-aodv.c||print-aodv.c": [
          "File: print-aodv.c -> print-aodv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "486:  msg_type = *dat;",
          "487:  ND_PRINT((ndo, \" aodv\"));",
          "",
          "[Removed Lines]",
          "485:  ND_TCHECK(*dat);",
          "",
          "[Added Lines]",
          "485:  ND_TCHECK_1(dat);",
          "",
          "---------------"
        ],
        "print-atm.c||print-atm.c": [
          "File: print-atm.c -> print-atm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "460:     } oam_ptr;",
          "464:     cell_header = EXTRACT_BE_U_4(p + hec);",
          "465:     cell_type = (EXTRACT_U_1((p + ATM_HDR_LEN_NOHEC + hec)) >> 4) & 0x0f;",
          "466:     func_type = EXTRACT_U_1((p + ATM_HDR_LEN_NOHEC + hec)) & 0x0f;",
          "",
          "[Removed Lines]",
          "463:     ND_TCHECK(*(p+ATM_HDR_LEN_NOHEC+hec));",
          "",
          "[Added Lines]",
          "463:     ND_TCHECK_1(p + ATM_HDR_LEN_NOHEC + hec);",
          "",
          "---------------"
        ],
        "print-bgp.c||print-bgp.c": [
          "File: print-bgp.c -> print-bgp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1398:   if (len != 1)",
          "1399:    ND_PRINT((ndo, \"invalid len\"));",
          "1400:   else {",
          "1402:    ND_PRINT((ndo, \"%s\", tok2str(bgp_origin_values,",
          "1403:       \"Unknown Origin Typecode\",",
          "1404:       EXTRACT_U_1(tptr))));",
          "",
          "[Removed Lines]",
          "1401:    ND_TCHECK(*tptr);",
          "",
          "[Added Lines]",
          "1401:    ND_TCHECK_1(tptr);",
          "",
          "---------------"
        ],
        "print-dccp.c||print-dccp.c": [
          "File: print-dccp.c -> print-dccp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "535: {",
          "536:  uint8_t optlen, i;",
          "540:  if (*option >= 32) {",
          "542:   optlen = EXTRACT_U_1(option + 1);",
          "543:   if (optlen < 2) {",
          "544:    if (*option >= 128)",
          "",
          "[Removed Lines]",
          "538:  ND_TCHECK(*option);",
          "541:   ND_TCHECK(*(option+1));",
          "",
          "[Added Lines]",
          "538:  ND_TCHECK_1(option);",
          "541:   ND_TCHECK_1(option + 1);",
          "",
          "---------------"
        ],
        "print-domain.c||print-domain.c": [
          "File: print-domain.c -> print-domain.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:  ND_PRINT((ndo, \"\\\\[x\"));",
          "106:  for (bitp = cp + 1, b = bitlen; bitp < lim && b > 7; b -= 8, bitp++) {",
          "108:   ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(bitp)));",
          "109:  }",
          "110:  if (b > 4) {",
          "112:   tc = EXTRACT_U_1(bitp);",
          "113:   bitp++;",
          "114:   ND_PRINT((ndo, \"%02x\", tc & (0xff << (8 - b))));",
          "115:  } else if (b > 0) {",
          "117:   tc = EXTRACT_U_1(bitp);",
          "118:   bitp++;",
          "119:   ND_PRINT((ndo, \"%1x\", ((tc >> 4) & 0x0f) & (0x0f << (4 - b))));",
          "",
          "[Removed Lines]",
          "107:   ND_TCHECK(*bitp);",
          "111:   ND_TCHECK(*bitp);",
          "116:   ND_TCHECK(*bitp);",
          "",
          "[Added Lines]",
          "107:   ND_TCHECK_1(bitp);",
          "111:   ND_TCHECK_1(bitp);",
          "116:   ND_TCHECK_1(bitp);",
          "",
          "---------------"
        ],
        "print-forces.c||print-forces.c": [
          "File: print-forces.c -> print-forces.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "801:  uint16_t type, tll;",
          "802:  u_int invtlv;",
          "805:  id = EXTRACT_BE_U_4(tdp);",
          "806:  ND_PRINT((ndo, \"%sKeyinfo: Key 0x%x\\n\", ib, id));",
          "807:  ND_TCHECK(*kdtlv);",
          "",
          "[Removed Lines]",
          "804:  ND_TCHECK(*tdp);",
          "",
          "[Added Lines]",
          "804:  ND_TCHECK_1(tdp);",
          "",
          "---------------"
        ],
        "print-ip.c||print-ip.c": [
          "File: print-ip.c -> print-ip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:  for (; length > 0; cp += len, length -= len) {",
          "107:   int tt;",
          "110:   tt = *cp;",
          "111:   if (tt == IPOPT_EOL)",
          "112:    break;",
          "",
          "[Removed Lines]",
          "109:   ND_TCHECK(*cp);",
          "",
          "[Added Lines]",
          "109:   ND_TCHECK_1(cp);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "254:   ND_PRINT((ndo, \"%s\", sep));",
          "255:   sep = \",\";",
          "258:   option_code = *cp;",
          "260:   ND_PRINT((ndo, \"%s\",",
          "",
          "[Removed Lines]",
          "257:   ND_TCHECK(*cp);",
          "",
          "[Added Lines]",
          "257:   ND_TCHECK_1(cp);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "706:   return;",
          "707:  }",
          "710:  switch (*bp & 0xF0) {",
          "711:  case 0x40:",
          "712:   ip_print (ndo, bp, length);",
          "",
          "[Removed Lines]",
          "709:  ND_TCHECK(*bp);",
          "",
          "[Added Lines]",
          "709:  ND_TCHECK_1(bp);",
          "",
          "---------------"
        ],
        "print-ip6.c||print-ip6.c": [
          "File: print-ip6.c -> print-ip6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "329:    nh = EXTRACT_U_1(cp);",
          "330:    return;",
          "331:   case IPPROTO_ROUTING:",
          "333:    advance = rt6_print(ndo, cp, (const u_char *)ip6);",
          "334:    if (advance < 0)",
          "335:     return;",
          "",
          "[Removed Lines]",
          "332:    ND_TCHECK(*cp);",
          "",
          "[Added Lines]",
          "332:    ND_TCHECK_1(cp);",
          "",
          "---------------"
        ],
        "print-isoclns.c||print-isoclns.c": [
          "File: print-isoclns.c -> print-isoclns.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "816:             ND_PRINT((ndo, \"li < size of fixed part of CLNP header and addresses\"));",
          "817:             return (0);",
          "818:         }",
          "820:         dest_address_length = EXTRACT_U_1(pptr);",
          "821:         pptr += 1;",
          "822:         li -= 1;",
          "",
          "[Removed Lines]",
          "819:  ND_TCHECK(*pptr);",
          "",
          "[Added Lines]",
          "819:  ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "833:             ND_PRINT((ndo, \"li < size of fixed part of CLNP header and addresses\"));",
          "834:             return (0);",
          "835:         }",
          "837:         source_address_length = EXTRACT_U_1(pptr);",
          "838:         pptr += 1;",
          "839:         li -= 1;",
          "",
          "[Removed Lines]",
          "836:  ND_TCHECK(*pptr);",
          "",
          "[Added Lines]",
          "836:  ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1042:         case  CLNP_PDU_ERP:",
          "1044:             if (EXTRACT_U_1(pptr) == NLPID_CLNP) {",
          "1045:                 ND_PRINT((ndo, \"\\n\\t-----original packet-----\\n\\t\"));",
          "",
          "[Removed Lines]",
          "1043:             ND_TCHECK(*pptr);",
          "",
          "[Added Lines]",
          "1043:             ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1174:   const uint8_t *dst, *snpa, *neta;",
          "1175:   u_int dstl, snpal, netal;",
          "1178:   if (li < 1) {",
          "1179:    ND_PRINT((ndo, \", bad redirect/li\"));",
          "1180:    return;",
          "",
          "[Removed Lines]",
          "1177:   ND_TCHECK(*pptr);",
          "",
          "[Added Lines]",
          "1177:   ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1192:                 li -= dstl;",
          "1193:   ND_PRINT((ndo, \"\\n\\t  %s\", isonsap_string(ndo, dst, dstl)));",
          "1196:   if (li < 1) {",
          "1197:    ND_PRINT((ndo, \", bad redirect/li\"));",
          "1198:    return;",
          "",
          "[Removed Lines]",
          "1195:   ND_TCHECK(*pptr);",
          "",
          "[Added Lines]",
          "1195:   ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1208:   snpa = pptr;",
          "1209:   pptr += snpal;",
          "1210:                 li -= snpal;",
          "1212:   if (li < 1) {",
          "1213:    ND_PRINT((ndo, \", bad redirect/li\"));",
          "1214:    return;",
          "",
          "[Removed Lines]",
          "1211:   ND_TCHECK(*pptr);",
          "",
          "[Added Lines]",
          "1211:   ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1240:  }",
          "1242:  case ESIS_PDU_ESH:",
          "1244:             if (li < 1) {",
          "1245:                 ND_PRINT((ndo, \", bad esh/li\"));",
          "1246:                 return;",
          "",
          "[Removed Lines]",
          "1243:             ND_TCHECK(*pptr);",
          "",
          "[Added Lines]",
          "1243:             ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1252:             ND_PRINT((ndo, \"\\n\\t  Number of Source Addresses: %u\", source_address_number));",
          "1254:             while (source_address_number > 0) {",
          "1256:              if (li < 1) {",
          "1257:                     ND_PRINT((ndo, \", bad esh/li\"));",
          "1258:                  return;",
          "",
          "[Removed Lines]",
          "1255:                 ND_TCHECK(*pptr);",
          "",
          "[Added Lines]",
          "1255:                 ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1277:             break;",
          "1279:  case ESIS_PDU_ISH: {",
          "1281:             if (li < 1) {",
          "1282:                 ND_PRINT((ndo, \", bad ish/li\"));",
          "1283:                 return;",
          "",
          "[Removed Lines]",
          "1280:             ND_TCHECK(*pptr);",
          "",
          "[Added Lines]",
          "1280:             ND_TCHECK_1(pptr);",
          "",
          "---------------"
        ],
        "print-krb.c||print-krb.c": [
          "File: print-krb.c -> print-krb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "193:   if ((cp = krb4_print_hdr(ndo, cp)) == NULL)",
          "194:    return;",
          "197:   ND_PRINT((ndo, \" %dmin \", EXTRACT_U_1(cp) * 5));",
          "198:   cp++;",
          "199:   PRINT;",
          "",
          "[Removed Lines]",
          "196:   ND_TCHECK(*cp);",
          "",
          "[Added Lines]",
          "196:   ND_TCHECK_1(cp);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "204:  case AUTH_MSG_APPL_REQUEST:",
          "205:   cp += 2;",
          "207:   ND_PRINT((ndo, \"v%d \", EXTRACT_U_1(cp)));",
          "208:   cp++;",
          "209:   PRINT;",
          "211:   ND_PRINT((ndo, \" (%d)\", EXTRACT_U_1(cp)));",
          "212:   cp++;",
          "214:   ND_PRINT((ndo, \" (%d)\", EXTRACT_U_1(cp)));",
          "215:   break;",
          "",
          "[Removed Lines]",
          "206:   ND_TCHECK(*cp);",
          "210:   ND_TCHECK(*cp);",
          "213:   ND_TCHECK(*cp);",
          "",
          "[Added Lines]",
          "206:   ND_TCHECK_1(cp);",
          "210:   ND_TCHECK_1(cp);",
          "213:   ND_TCHECK_1(cp);",
          "",
          "---------------"
        ],
        "print-mpls.c||print-mpls.c": [
          "File: print-mpls.c -> print-mpls.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:   if (length < 1) {",
          "135:    return;",
          "",
          "[Removed Lines]",
          "132:   ND_TCHECK(*p);",
          "",
          "[Added Lines]",
          "132:   ND_TCHECK_1(p);",
          "",
          "---------------"
        ],
        "print-msdp.c||print-msdp.c": [
          "File: print-msdp.c -> print-msdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:     ND_PRINT((ndo, \" SA\"));",
          "60:    else",
          "61:     ND_PRINT((ndo, \" SA-Response\"));",
          "63:    ND_PRINT((ndo, \" %u entries\", EXTRACT_U_1(sp)));",
          "64:    if ((u_int)((*sp * 12) + 8) < len) {",
          "65:     ND_PRINT((ndo, \" [w/data]\"));",
          "",
          "[Removed Lines]",
          "62:    ND_TCHECK(*sp);",
          "",
          "[Added Lines]",
          "62:    ND_TCHECK_1(sp);",
          "",
          "---------------"
        ],
        "print-ospf.c||print-ospf.c": [
          "File: print-ospf.c -> print-ospf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "931:     ND_PRINT((ndo, \", length: %u\", length2));",
          "933:     dptr += 2;",
          "935:     while (dptr < dataend) {",
          "936:         ND_TCHECK_2(dptr);",
          "937:         lls_type = EXTRACT_BE_U_2(dptr);",
          "",
          "[Removed Lines]",
          "934:     ND_TCHECK(*dptr);",
          "",
          "[Added Lines]",
          "934:     ND_TCHECK_1(dptr);",
          "",
          "---------------"
        ],
        "print-otv.c||print-otv.c": [
          "File: print-otv.c -> print-otv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     if (len < OTV_HDR_LEN)",
          "50:         goto trunc;",
          "53:     flags = *bp;",
          "54:     ND_PRINT((ndo, \"flags [%s] (0x%02x), \", flags & 0x08 ? \"I\" : \".\", flags));",
          "55:     bp += 1;",
          "",
          "[Removed Lines]",
          "52:     ND_TCHECK(*bp);",
          "",
          "[Added Lines]",
          "52:     ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "63:     bp += 3;",
          "67:     bp += 1;",
          "69:     ether_print(ndo, bp, len - OTV_HDR_LEN, ndo->ndo_snapend - bp, NULL, NULL);",
          "",
          "[Removed Lines]",
          "66:     ND_TCHECK(*bp);",
          "",
          "[Added Lines]",
          "66:     ND_TCHECK_1(bp);",
          "",
          "---------------"
        ],
        "print-resp.c||print-resp.c": [
          "File: print-resp.c -> print-resp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "247:     int ret_len;",
          "249:     LCHECK2(length, 1);",
          "251:     op = *bp;",
          "",
          "[Removed Lines]",
          "250:     ND_TCHECK(*bp);",
          "",
          "[Added Lines]",
          "250:     ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "465:     if (len == 0)",
          "466:         goto trunc;",
          "468:     too_large = 0;",
          "469:     neg = 0;",
          "470:     if (*bp == '-') {",
          "",
          "[Removed Lines]",
          "467:     ND_TCHECK(*bp);",
          "",
          "[Added Lines]",
          "467:     ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "478:     for (;;) {",
          "479:         if (len == 0)",
          "480:             goto trunc;",
          "482:         c = *bp;",
          "483:         if (!(c >= '0' && c <= '9')) {",
          "484:             if (!saw_digit) {",
          "",
          "[Removed Lines]",
          "481:         ND_TCHECK(*bp);",
          "",
          "[Added Lines]",
          "481:         ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "516:     len--;",
          "517:     if (len == 0)",
          "518:         goto trunc;",
          "520:     if (*bp != '\\n') {",
          "521:         bp++;",
          "522:         goto invalid;",
          "",
          "[Removed Lines]",
          "519:     ND_TCHECK(*bp);",
          "",
          "[Added Lines]",
          "519:     ND_TCHECK_1(bp);",
          "",
          "---------------"
        ],
        "print-rrcp.c||print-rrcp.c": [
          "File: print-rrcp.c -> print-rrcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:  uint8_t rrcp_proto;",
          "98:  uint8_t rrcp_opcode;",
          "101:  rrcp_proto = EXTRACT_U_1(cp + RRCP_PROTO_OFFSET);",
          "103:  rrcp_opcode = EXTRACT_U_1((cp + RRCP_OPCODE_ISREPLY_OFFSET)) & RRCP_OPCODE_MASK;",
          "104:  if (src != NULL && dst != NULL) {",
          "105:   ND_PRINT((ndo, \"%s > %s, \",",
          "",
          "[Removed Lines]",
          "100:  ND_TCHECK(*(cp + RRCP_PROTO_OFFSET));",
          "102:  ND_TCHECK(*(cp + RRCP_OPCODE_ISREPLY_OFFSET));",
          "",
          "[Added Lines]",
          "100:  ND_TCHECK_1(cp + RRCP_PROTO_OFFSET);",
          "102:  ND_TCHECK_1(cp + RRCP_OPCODE_ISREPLY_OFFSET);",
          "",
          "---------------"
        ],
        "print-slow.c||print-slow.c": [
          "File: print-slow.c -> print-slow.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "251:     if (len < 1)",
          "252:         goto tooshort;",
          "254:     subtype = *pptr;",
          "",
          "[Removed Lines]",
          "253:     ND_TCHECK(*pptr);",
          "",
          "[Added Lines]",
          "253:     ND_TCHECK_1(pptr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "260:     case SLOW_PROTO_LACP:",
          "261:         if (len < 2)",
          "262:             goto tooshort;",
          "264:         if (*(pptr+1) != LACP_VERSION) {",
          "265:             ND_PRINT((ndo, \"LACP version %u packet not supported\", EXTRACT_U_1(pptr + 1)));",
          "266:             return;",
          "",
          "[Removed Lines]",
          "263:         ND_TCHECK(*(pptr+1));",
          "",
          "[Added Lines]",
          "263:         ND_TCHECK_1(pptr + 1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "271:     case SLOW_PROTO_MARKER:",
          "272:         if (len < 2)",
          "273:             goto tooshort;",
          "275:         if (*(pptr+1) != MARKER_VERSION) {",
          "276:             ND_PRINT((ndo, \"MARKER version %u packet not supported\", EXTRACT_U_1(pptr + 1)));",
          "277:             return;",
          "",
          "[Removed Lines]",
          "274:         ND_TCHECK(*(pptr+1));",
          "",
          "[Added Lines]",
          "274:         ND_TCHECK_1(pptr + 1);",
          "",
          "---------------"
        ],
        "print-smb.c||print-smb.c": [
          "File: print-smb.c -> print-smb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1188:   if (restype == 0x21) {",
          "1189:       int numnames;",
          "1192:       numnames = p[0];",
          "1193:       p = smb_fdata(ndo, p, \"NumNames=[B]\\n\", p + 1, 0);",
          "1194:       if (p == NULL)",
          "",
          "[Removed Lines]",
          "1191:       ND_TCHECK(*p);",
          "",
          "[Added Lines]",
          "1191:       ND_TCHECK_1(p);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1197:    p = smb_fdata(ndo, p, \"Name=[n2]\\t#\", maxbuf, 0);",
          "1198:    if (p == NULL)",
          "1199:        goto out;",
          "1201:    if (EXTRACT_U_1(p) & 0x80)",
          "1202:        ND_PRINT((ndo, \"<GROUP> \"));",
          "1203:    switch (EXTRACT_U_1(p) & 0x60) {",
          "",
          "[Removed Lines]",
          "1200:    ND_TCHECK(*p);",
          "",
          "[Added Lines]",
          "1200:    ND_TCHECK_1(p);",
          "",
          "---------------"
        ],
        "print-snmp.c||print-snmp.c": [
          "File: print-snmp.c -> print-snmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "429:   ND_PRINT((ndo, \"[nothing to parse]\"));",
          "430:   return -1;",
          "431:  }",
          "",
          "[Removed Lines]",
          "432:  ND_TCHECK(*p);",
          "",
          "[Added Lines]",
          "432:  ND_TCHECK_1(p);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "466:   id = 0;",
          "468:   while (EXTRACT_U_1(p) & ASN_BIT8) {",
          "469:    if (len < 1) {",
          "470:     ND_PRINT((ndo, \"[Xtagfield?]\"));",
          "",
          "[Removed Lines]",
          "467:   ND_TCHECK(*p);",
          "",
          "[Added Lines]",
          "467:   ND_TCHECK_1(p);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "474:    len--;",
          "475:    hdr++;",
          "476:    p++;",
          "478:   }",
          "479:   if (len < 1) {",
          "480:    ND_PRINT((ndo, \"[Xtagfield?]\"));",
          "481:    return -1;",
          "482:   }",
          "484:   elem->id = id = (id << 7) | EXTRACT_U_1(p);",
          "485:   --len;",
          "486:   ++hdr;",
          "",
          "[Removed Lines]",
          "477:    ND_TCHECK(*p);",
          "483:   ND_TCHECK(*p);",
          "",
          "[Added Lines]",
          "477:    ND_TCHECK_1(p);",
          "483:   ND_TCHECK_1(p);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "490:   ND_PRINT((ndo, \"[no asnlen]\"));",
          "491:   return -1;",
          "492:  }",
          "494:  elem->asnlen = *p;",
          "495:  p++; len--; hdr++;",
          "496:  if (elem->asnlen & ASN_BIT8) {",
          "",
          "[Removed Lines]",
          "493:  ND_TCHECK(*p);",
          "",
          "[Added Lines]",
          "493:  ND_TCHECK_1(p);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "770:   }",
          "772:   for (; i-- > 0; p++) {",
          "774:    o = (o << ASN_SHIFT7) + (*p & ~ASN_BIT8);",
          "775:    if (*p & ASN_LONGLEN)",
          "776:            continue;",
          "",
          "[Removed Lines]",
          "773:    ND_TCHECK(*p);",
          "",
          "[Added Lines]",
          "773:    ND_TCHECK_1(p);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "922:  unsigned int firstval;",
          "924:  for (*oidlen = 0; i-- > 0; p++) {",
          "926:          o = (o << ASN_SHIFT7) + (*p & ~ASN_BIT8);",
          "927:   if (*p & ASN_LONGLEN)",
          "928:       continue;",
          "",
          "[Removed Lines]",
          "925:   ND_TCHECK(*p);",
          "",
          "[Added Lines]",
          "925:   ND_TCHECK_1(p);",
          "",
          "---------------"
        ],
        "print-tcp.c||print-tcp.c": [
          "File: print-tcp.c -> print-tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "428:                 while (hlen > 0) {",
          "429:                         if (ch != '\\0')",
          "430:                                 ND_PRINT((ndo, \"%c\", ch));",
          "432:                         opt = EXTRACT_U_1(cp);",
          "433:                         cp++;",
          "434:                         if (ZEROLENOPT(opt))",
          "435:                                 len = 1;",
          "436:                         else {",
          "438:                                 len = EXTRACT_U_1(cp);",
          "440:                                 if (len < 2 || len > hlen)",
          "",
          "[Removed Lines]",
          "431:                         ND_TCHECK(*cp);",
          "437:                                 ND_TCHECK(*cp);",
          "",
          "[Added Lines]",
          "431:                         ND_TCHECK_1(cp);",
          "437:                                 ND_TCHECK_1(cp);",
          "",
          "---------------"
        ],
        "print-telnet.c||print-telnet.c": [
          "File: print-telnet.c -> print-telnet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "443:     break;",
          "444:    p++;",
          "445:   }",
          "447:   if (*p != IAC)",
          "448:    goto pktend;",
          "",
          "[Removed Lines]",
          "446:   ND_TCHECK(*p);",
          "",
          "[Added Lines]",
          "446:   ND_TCHECK_1(p);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "516:  osp = sp;",
          "519:  while (length > 0 && EXTRACT_U_1(sp) == IAC) {",
          "",
          "[Removed Lines]",
          "518:  ND_TCHECK(*sp);",
          "",
          "[Added Lines]",
          "518:  ND_TCHECK_1(sp);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "545:   sp += l;",
          "546:   length -= l;",
          "548:  }",
          "549:  if (!first) {",
          "550:   if (ndo->ndo_Xflag && 2 < ndo->ndo_vflag)",
          "",
          "[Removed Lines]",
          "547:   ND_TCHECK(*sp);",
          "",
          "[Added Lines]",
          "547:   ND_TCHECK_1(sp);",
          "",
          "---------------"
        ],
        "print-tftp.c||print-tftp.c": [
          "File: print-tftp.c -> print-tftp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:   while (length != 0) {",
          "143:    if (*bp != '\\0')",
          "144:     ND_PRINT((ndo, \" \"));",
          "145:    ui = fn_printztn(ndo, bp, length, ndo->ndo_snapend);",
          "",
          "[Removed Lines]",
          "142:    ND_TCHECK(*bp);",
          "",
          "[Added Lines]",
          "142:    ND_TCHECK_1(bp);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153:  case OACK:",
          "155:   while (length != 0) {",
          "157:    if (*bp != '\\0')",
          "158:     ND_PRINT((ndo, \" \"));",
          "159:    ui = fn_printztn(ndo, bp, length, ndo->ndo_snapend);",
          "",
          "[Removed Lines]",
          "156:    ND_TCHECK(*bp);",
          "",
          "[Added Lines]",
          "156:    ND_TCHECK_1(bp);",
          "",
          "---------------"
        ],
        "smbutil.c||smbutil.c": [
          "File: smbutil.c -> smbutil.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "636:      const char *s;",
          "637:      uint32_t len;",
          "640:      if (*buf != 4 && *buf != 2) {",
          "641:   ND_PRINT((ndo, \"Error! ASCIIZ buffer of type %u\", EXTRACT_U_1(buf)));",
          "",
          "[Removed Lines]",
          "639:      ND_TCHECK(*buf);",
          "",
          "[Added Lines]",
          "639:      ND_TCHECK_1(buf);",
          "",
          "---------------"
        ],
        "util-print.c||util-print.c": [
          "File: util-print.c -> util-print.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: #include <string.h>",
          "55: #include \"netdissect.h\"",
          "56: #include \"ascii_strcasecmp.h\"",
          "57: #include \"timeval-operations.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "56: #include \"extract.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "760:  startidx = idx;",
          "761:  while (idx < len) {",
          "763:   if (*(pptr+idx) == '\\n') {",
          "",
          "[Removed Lines]",
          "762:   ND_TCHECK(*(pptr+idx));",
          "",
          "[Added Lines]",
          "763:   ND_TCHECK_1(pptr + idx);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "776:     return (0);",
          "777:    }",
          "779:    if (*(pptr+idx+1) == '\\n') {",
          "",
          "[Removed Lines]",
          "778:    ND_TCHECK(*(pptr+idx+1));",
          "",
          "[Added Lines]",
          "779:    ND_TCHECK_1(pptr + idx + 1);",
          "",
          "---------------"
        ]
      }
    }
  ]
}