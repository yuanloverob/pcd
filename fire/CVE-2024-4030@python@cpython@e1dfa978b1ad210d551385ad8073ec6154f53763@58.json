{
  "cve_id": "CVE-2024-4030",
  "cve_desc": "On Windows a directory returned by tempfile.mkdtemp() would not always have permissions set to restrict reading and writing to the temporary directory by other users, instead usually inheriting the correct permissions from the default location. Alternate configurations or users without a profile directory may not have the intended permissions.\n\nIf you\u2019re not using Windows or haven\u2019t changed the temporary directory location then you aren\u2019t affected by this vulnerability. On other platforms the returned directory is consistently readable and writable only by the current user.\n\nThis issue was caused by Python not supporting Unix permissions on Windows. The fix adds support for Unix \u201c700\u201d for the mkdir function on Windows which is used by mkdtemp() to ensure the newly created directory has the proper permissions.",
  "repo": "python/cpython",
  "patch_hash": "e1dfa978b1ad210d551385ad8073ec6154f53763",
  "patch_info": {
    "commit_hash": "e1dfa978b1ad210d551385ad8073ec6154f53763",
    "repo": "python/cpython",
    "commit_url": "https://github.com/python/cpython/commit/e1dfa978b1ad210d551385ad8073ec6154f53763",
    "files": [
      "Lib/test/test_os.py",
      "Modules/posixmodule.c"
    ],
    "message": "gh-118486: Simplify test_win32_mkdir_700 to check the exact ACL (GH-119056)\n\n(cherry picked from commit 94591dca510c796c7d40e9b4167ea56f2fdf28ca)\n\nCo-authored-by: Steve Dower <steve.dower@python.org>",
    "before_after_code_files": [
      "Lib/test/test_os.py||Lib/test/test_os.py",
      "Modules/posixmodule.c||Modules/posixmodule.c"
    ]
  },
  "patch_diff": {
    "Lib/test/test_os.py||Lib/test/test_os.py": [
      "File: Lib/test/test_os.py -> Lib/test/test_os.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1814:     @unittest.skipUnless(os.name == 'nt', \"requires Windows\")",
      "1815:     def test_win32_mkdir_700(self):",
      "1816:         base = os_helper.TESTFN",
      "1833:     def tearDown(self):",
      "1834:         path = os.path.join(os_helper.TESTFN, 'dir1', 'dir2', 'dir3',",
      "",
      "[Removed Lines]",
      "1817:         path1 = os.path.join(os_helper.TESTFN, 'dir1')",
      "1818:         path2 = os.path.join(os_helper.TESTFN, 'dir2')",
      "1819:         # mode=0o700 is special-cased to override ACLs on Windows",
      "1820:         # There's no way to know exactly how the ACLs will look, so we'll",
      "1821:         # check that they are different from a regularly created directory.",
      "1822:         os.mkdir(path1, mode=0o700)",
      "1823:         os.mkdir(path2, mode=0o777)",
      "1825:         out1 = subprocess.check_output([\"icacls.exe\", path1], encoding=\"oem\")",
      "1826:         out2 = subprocess.check_output([\"icacls.exe\", path2], encoding=\"oem\")",
      "1827:         os.rmdir(path1)",
      "1828:         os.rmdir(path2)",
      "1829:         out1 = out1.replace(path1, \"<PATH>\")",
      "1830:         out2 = out2.replace(path2, \"<PATH>\")",
      "1831:         self.assertNotEqual(out1, out2)",
      "",
      "[Added Lines]",
      "1817:         path = os.path.abspath(os.path.join(os_helper.TESTFN, 'dir'))",
      "1818:         os.mkdir(path, mode=0o700)",
      "1819:         out = subprocess.check_output([\"cacls.exe\", path, \"/s\"], encoding=\"oem\")",
      "1820:         os.rmdir(path)",
      "1821:         self.assertEqual(",
      "1822:             out.strip(),",
      "1823:             f'{path} \"D:P(A;OICI;FA;;;SY)(A;OICI;FA;;;BA)(A;OICI;FA;;;OW)\"',",
      "1824:         )",
      "",
      "---------------"
    ],
    "Modules/posixmodule.c||Modules/posixmodule.c": [
      "File: Modules/posixmodule.c -> Modules/posixmodule.c"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1e43f76b7689536233c018ee51d6d5b9d96cf34f",
      "candidate_info": {
        "commit_hash": "1e43f76b7689536233c018ee51d6d5b9d96cf34f",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/1e43f76b7689536233c018ee51d6d5b9d96cf34f",
        "files": [
          "Lib/test/test_os.py"
        ],
        "message": "[3.13] gh-120164: Fix test_os.test_win32_mkdir_700() (GH-120177) (#120202)\n\ngh-120164: Fix test_os.test_win32_mkdir_700() (GH-120177)\n\nDon't compare the path to avoid encoding issues.\n\n(cherry picked from commit d5ba4fc9bc9b2d9eff2a90893e8d500e0c367237)\n\nCo-authored-by: Kirill Podoprigora <kirill.bast9@mail.ru>\nCo-authored-by: Eryk Sun <eryksun@gmail.com>",
        "before_after_code_files": [
          "Lib/test/test_os.py||Lib/test/test_os.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Lib/test/test_os.py||Lib/test/test_os.py"
          ],
          "candidate": [
            "Lib/test/test_os.py||Lib/test/test_os.py"
          ]
        }
      },
      "candidate_diff": {
        "Lib/test/test_os.py||Lib/test/test_os.py": [
          "File: Lib/test/test_os.py -> Lib/test/test_os.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1837:         os.mkdir(path, mode=0o700)",
          "1838:         out = subprocess.check_output([\"cacls.exe\", path, \"/s\"], encoding=\"oem\")",
          "1839:         os.rmdir(path)",
          "1840:         self.assertEqual(",
          "1843:         )",
          "1845:     def tearDown(self):",
          "",
          "[Removed Lines]",
          "1841:             out.strip(),",
          "1842:             f'{path} \"D:P(A;OICI;FA;;;SY)(A;OICI;FA;;;BA)(A;OICI;FA;;;OW)\"',",
          "",
          "[Added Lines]",
          "1840:         out = out.strip().rsplit(\" \", 1)[1]",
          "1842:             out,",
          "1843:             '\"D:P(A;OICI;FA;;;SY)(A;OICI;FA;;;BA)(A;OICI;FA;;;OW)\"',",
          "",
          "---------------"
        ]
      }
    }
  ]
}