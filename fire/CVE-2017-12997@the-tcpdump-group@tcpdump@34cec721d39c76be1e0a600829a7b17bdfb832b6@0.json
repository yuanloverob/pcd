{
  "cve_id": "CVE-2017-12997",
  "cve_desc": "The LLDP parser in tcpdump before 4.9.2 could enter an infinite loop due to a bug in print-lldp.c:lldp_private_8021_print().",
  "repo": "the-tcpdump-group/tcpdump",
  "patch_hash": "34cec721d39c76be1e0a600829a7b17bdfb832b6",
  "patch_info": {
    "commit_hash": "34cec721d39c76be1e0a600829a7b17bdfb832b6",
    "repo": "the-tcpdump-group/tcpdump",
    "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/34cec721d39c76be1e0a600829a7b17bdfb832b6",
    "files": [
      "print-lldp.c",
      "tests/TESTLIST",
      "tests/lldp-infinite-loop-1.out",
      "tests/lldp-infinite-loop-1.pcap",
      "tests/lldp-infinite-loop-2.out",
      "tests/lldp-infinite-loop-2.pcap"
    ],
    "message": "CVE-2017-12997/LLDP: Don't use an 8-bit loop counter.\n\nIf you have a\n\n\tfor (i = 0; i < N; i++)\n\nloop, you'd better make sure that i is big enough to hold N - not N-1,\nN.\n\nThe TLV length here is 9 bits long, not 8 bits long, so an 8-bit loop\ncounter will overflow and you can loop infinitely.\n\nThis fixes an infinite loop discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd tests using the capture files supplied by the reporter(s).\n\nClean up the output a bit while we're at it.",
    "before_after_code_files": [
      "print-lldp.c||print-lldp.c"
    ]
  },
  "patch_diff": {
    "print-lldp.c||print-lldp.c": [
      "File: print-lldp.c -> print-lldp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "651:     int subtype, hexdump = FALSE;",
      "652:     u_int sublen;",
      "653:     u_int tval;",
      "656:     if (tlv_len < 4) {",
      "657:         return hexdump;",
      "",
      "[Removed Lines]",
      "654:     uint8_t i;",
      "",
      "[Added Lines]",
      "654:     u_int i;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "787:         ND_PRINT((ndo, \"\\n\\t    Application Priority Table\"));",
      "788:         while(i<sublen) {",
      "789:          tval=*(tptr+i+5);",
      "793:          i=i+3;",
      "794:         }",
      "795:         break;",
      "",
      "[Removed Lines]",
      "790:          ND_PRINT((ndo, \"\\n\\t      Priority: %d, RES: %d, Sel: %d\",",
      "791:            tval >> 5, (tval >> 3) & 0x03, (tval & 0x07)));",
      "792:          ND_PRINT((ndo, \"Protocol ID: %d\", EXTRACT_16BITS(tptr + i + 5)));",
      "",
      "[Added Lines]",
      "790:          ND_PRINT((ndo, \"\\n\\t      Priority: %u, RES: %u, Sel: %u, Protocol ID: %u\",",
      "791:            tval >> 5, (tval >> 3) & 0x03, (tval & 0x07),",
      "792:            EXTRACT_16BITS(tptr + i + 5)));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "46efa1bc471eb50b7356d3385d270c9dcb6692c4",
      "candidate_info": {
        "commit_hash": "46efa1bc471eb50b7356d3385d270c9dcb6692c4",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/46efa1bc471eb50b7356d3385d270c9dcb6692c4",
        "files": [
          "CHANGES",
          "aclocal.m4",
          "addrtoname.c",
          "configure",
          "print-802_11.c",
          "print-icmp6.c",
          "print-isakmp.c",
          "print-lldp.c",
          "print-lmp.c",
          "print-ntp.c",
          "print-ospf6.c",
          "print-sll.c",
          "print-smb.c",
          "print-snmp.c",
          "print-tcp.c",
          "print.c"
        ],
        "message": "Fix spaces",
        "before_after_code_files": [
          "aclocal.m4||aclocal.m4",
          "addrtoname.c||addrtoname.c",
          "print-802_11.c||print-802_11.c",
          "print-icmp6.c||print-icmp6.c",
          "print-isakmp.c||print-isakmp.c",
          "print-lldp.c||print-lldp.c",
          "print-lmp.c||print-lmp.c",
          "print-ntp.c||print-ntp.c",
          "print-ospf6.c||print-ospf6.c",
          "print-sll.c||print-sll.c",
          "print-smb.c||print-smb.c",
          "print-snmp.c||print-snmp.c",
          "print-tcp.c||print-tcp.c",
          "print.c||print.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-lldp.c||print-lldp.c"
          ],
          "candidate": [
            "print-lldp.c||print-lldp.c"
          ]
        }
      },
      "candidate_diff": {
        "aclocal.m4||aclocal.m4": [
          "File: aclocal.m4 -> aclocal.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "169:       ;;",
          "171:      osf*)",
          "173:       # Presumed to be DEC OSF/1, Digital UNIX, or",
          "174:       # Tru64 UNIX.",
          "175:       #",
          "",
          "[Removed Lines]",
          "172:           #",
          "",
          "[Added Lines]",
          "172:       #",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1072:  # Or should we just look for \"libcrypto.*\"?",
          "1073:  #",
          "1074:  if test -d \"$1/$tmplib\" -a \\( -f \"$1/$tmplib/libcrypto.a\" -o \\",
          "1078:   ac_cv_ssleay_path=\"$1\"",
          "1079:  fi",
          "",
          "[Removed Lines]",
          "1075:                  -f \"$1/$tmplib/libcrypto.so\" -o \\",
          "1076:                  -f \"$1/$tmplib/libcrypto.sl\" -o \\",
          "1077:           -f \"$1/$tmplib/libcrypto.dylib\" \\); then",
          "",
          "[Added Lines]",
          "1075:         -f \"$1/$tmplib/libcrypto.so\" -o \\",
          "1076:         -f \"$1/$tmplib/libcrypto.sl\" -o \\",
          "1077:         -f \"$1/$tmplib/libcrypto.dylib\" \\); then",
          "",
          "---------------"
        ],
        "addrtoname.c||addrtoname.c": [
          "File: addrtoname.c -> addrtoname.c"
        ],
        "print-802_11.c||print-802_11.c": [
          "File: print-802_11.c -> print-802_11.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "246: #define E_SSID   0",
          "247: #define E_RATES  1",
          "249: #define E_DS   3",
          "252: #define E_IBSS   6",
          "",
          "[Removed Lines]",
          "248: #define E_FH   2",
          "250: #define E_CF   4",
          "251: #define E_TIM   5",
          "",
          "[Added Lines]",
          "248: #define E_FH  2",
          "250: #define E_CF  4",
          "251: #define E_TIM  5",
          "",
          "---------------"
        ],
        "print-icmp6.c||print-icmp6.c": [
          "File: print-icmp6.c -> print-icmp6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "884:         ND_TCHECK_SIZE(dao);",
          "885:         if (length < ND_RPL_DAO_MIN_LEN)",
          "888:         bp += ND_RPL_DAO_MIN_LEN;",
          "889:         length -= ND_RPL_DAO_MIN_LEN;",
          "",
          "[Removed Lines]",
          "886:          goto tooshort;",
          "",
          "[Added Lines]",
          "886:   goto tooshort;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "929:         ND_TCHECK_LEN(daoack, ND_RPL_DAOACK_MIN_LEN);",
          "930:         if (length < ND_RPL_DAOACK_MIN_LEN)",
          "933:         bp += ND_RPL_DAOACK_MIN_LEN;",
          "934:         length -= ND_RPL_DAOACK_MIN_LEN;",
          "",
          "[Removed Lines]",
          "931:          goto tooshort;",
          "",
          "[Added Lines]",
          "931:   goto tooshort;",
          "",
          "---------------"
        ],
        "print-isakmp.c||print-isakmp.c": [
          "File: print-isakmp.c -> print-isakmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1188: static const struct attrmap oakley_t_map[] = {",
          "1189:  { NULL, 0, { NULL } },",
          "1190:  { \"enc\", 8, { NULL, \"1des\", \"idea\", \"blowfish\", \"rc5\",",
          "1192:  { \"hash\", 7, { NULL, \"md5\", \"sha1\", \"tiger\",",
          "1193:      \"sha2-256\", \"sha2-384\", \"sha2-512\", }, },",
          "1194:  { \"auth\", 6, { NULL, \"preshared\", \"dss\", \"rsa sig\", \"rsa enc\",",
          "",
          "[Removed Lines]",
          "1191:       \"3des\", \"cast\", \"aes\", }, },",
          "",
          "[Added Lines]",
          "1191:      \"3des\", \"cast\", \"aes\", }, },",
          "",
          "---------------"
        ],
        "print-lldp.c||print-lldp.c": [
          "File: print-lldp.c -> print-lldp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "714:         break;",
          "715:     case LLDP_PRIVATE_8021_SUBTYPE_CONGESTION_NOTIFICATION:",
          "716:         if(tlv_len<LLDP_PRIVATE_8021_SUBTYPE_CONGESTION_NOTIFICATION_LENGTH){",
          "718:         }",
          "719:         tval=EXTRACT_U_1(tptr + 4);",
          "720:         ND_PRINT(\"\\n\\t    Pre-Priority CNPV Indicator\");",
          "",
          "[Removed Lines]",
          "717:          return hexdump;",
          "",
          "[Added Lines]",
          "717:   return hexdump;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "736:         }",
          "737:         tval=EXTRACT_U_1(tptr + 4);",
          "738:         ND_PRINT(\"\\n\\t    Willing:%u, CBS:%u, RES:%u, Max TCs:%u\",",
          "742:         print_ets_priority_assignment_table(ndo, tptr + 5);",
          "",
          "[Removed Lines]",
          "739:          tval >> 7, (tval >> 6) & 0x02, (tval >> 3) & 0x07, tval & 0x07);",
          "",
          "[Added Lines]",
          "739:   tval >> 7, (tval >> 6) & 0x02, (tval >> 3) & 0x07, tval & 0x07);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "752:     case LLDP_PRIVATE_8021_SUBTYPE_ETS_RECOMMENDATION:",
          "753:         if(tlv_len<LLDP_PRIVATE_8021_SUBTYPE_ETS_RECOMMENDATION_LENGTH) {",
          "755:         }",
          "756:         ND_PRINT(\"\\n\\t    RES: %u\", EXTRACT_U_1(tptr + 4));",
          "",
          "[Removed Lines]",
          "754:          return hexdump;",
          "",
          "[Added Lines]",
          "754:   return hexdump;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "768:         }",
          "769:         tval=EXTRACT_U_1(tptr + 4);",
          "770:         ND_PRINT(\"\\n\\t    Willing: %u, MBC: %u, RES: %u, PFC cap:%u \",",
          "772:         ND_PRINT(\"\\n\\t    PFC Enable\");",
          "773:         tval=EXTRACT_U_1(tptr + 5);",
          "774:         ND_PRINT(\"\\n\\t     Priority : 0  1  2  3  4  5  6  7\");",
          "",
          "[Removed Lines]",
          "771:          tval >> 7, (tval >> 6) & 0x01, (tval >> 4) & 0x03, (tval & 0x0f));",
          "",
          "[Added Lines]",
          "771:   tval >> 7, (tval >> 6) & 0x01, (tval >> 4) & 0x03, (tval & 0x0f));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "783:         }",
          "784:         ND_PRINT(\"\\n\\t    RES: %u\", EXTRACT_U_1(tptr + 4));",
          "785:         if(tlv_len<=LLDP_PRIVATE_8021_SUBTYPE_APPLICATION_PRIORITY_MIN_LENGTH){",
          "787:         }",
          "789:         sublen=tlv_len-5;",
          "790:         if(sublen%3!=0){",
          "792:         }",
          "793:         i=0;",
          "794:         ND_PRINT(\"\\n\\t    Application Priority Table\");",
          "795:         while(i<sublen) {",
          "799:     EXTRACT_BE_U_2(tptr + i + 5));",
          "801:         }",
          "802:         break;",
          "803:     case LLDP_PRIVATE_8021_SUBTYPE_EVB:",
          "804:         if(tlv_len<LLDP_PRIVATE_8021_SUBTYPE_EVB_LENGTH){",
          "806:         }",
          "807:         ND_PRINT(\"\\n\\t    EVB Bridge Status\");",
          "808:         tval=EXTRACT_U_1(tptr + 4);",
          "809:         ND_PRINT(\"\\n\\t      RES: %u, BGID: %u, RRCAP: %u, RRCTR: %u\",",
          "811:         ND_PRINT(\"\\n\\t    EVB Station Status\");",
          "812:         tval=EXTRACT_U_1(tptr + 5);",
          "813:         ND_PRINT(\"\\n\\t      RES: %u, SGID: %u, RRREQ: %u,RRSTAT: %u\",",
          "815:         tval=EXTRACT_U_1(tptr + 6);",
          "816:         ND_PRINT(\"\\n\\t    R: %u, RTE: %u, \",tval >> 5, tval & 0x1f);",
          "817:         tval=EXTRACT_U_1(tptr + 7);",
          "818:         ND_PRINT(\"EVB Mode: %s [%u]\",",
          "820:         ND_PRINT(\"\\n\\t    ROL: %u, RWD: %u, \", (tval >> 5) & 0x01, tval & 0x1f);",
          "821:         tval=EXTRACT_U_1(tptr + 8);",
          "822:         ND_PRINT(\"RES: %u, ROL: %u, RKA: %u\", tval >> 6, (tval >> 5) & 0x01, tval & 0x1f);",
          "",
          "[Removed Lines]",
          "786:          return hexdump;",
          "791:          return hexdump;",
          "796:          tval=EXTRACT_U_1(tptr + i + 5);",
          "797:          ND_PRINT(\"\\n\\t      Priority: %u, RES: %u, Sel: %u, Protocol ID: %u\",",
          "798:            tval >> 5, (tval >> 3) & 0x03, (tval & 0x07),",
          "800:          i=i+3;",
          "805:          return hexdump;",
          "810:          tval >> 3, (tval >> 2) & 0x01, (tval >> 1) & 0x01, tval & 0x01);",
          "814:          tval >> 4, (tval >> 3) & 0x01, (tval >> 2) & 0x01, tval & 0x03);",
          "819:          tok2str(lldp_evb_mode_values, \"unknown\", tval >> 6), tval >> 6);",
          "",
          "[Added Lines]",
          "786:   return hexdump;",
          "791:   return hexdump;",
          "796:   tval=EXTRACT_U_1(tptr + i + 5);",
          "797:   ND_PRINT(\"\\n\\t      Priority: %u, RES: %u, Sel: %u, Protocol ID: %u\",",
          "798:     tval >> 5, (tval >> 3) & 0x03, (tval & 0x07),",
          "800:   i=i+3;",
          "805:   return hexdump;",
          "810:   tval >> 3, (tval >> 2) & 0x01, (tval >> 1) & 0x01, tval & 0x01);",
          "814:   tval >> 4, (tval >> 3) & 0x01, (tval >> 2) & 0x01, tval & 0x03);",
          "819:   tok2str(lldp_evb_mode_values, \"unknown\", tval >> 6), tval >> 6);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "825:     case LLDP_PRIVATE_8021_SUBTYPE_CDCP:",
          "826:         if(tlv_len<LLDP_PRIVATE_8021_SUBTYPE_CDCP_MIN_LENGTH){",
          "828:         }",
          "829:         tval=EXTRACT_U_1(tptr + 4);",
          "830:         ND_PRINT(\"\\n\\t    Role: %u, RES: %u, Scomp: %u \",",
          "832:         ND_PRINT(\"ChnCap: %u\", EXTRACT_BE_U_2(tptr + 6) & 0x0fff);",
          "833:         sublen=tlv_len-8;",
          "834:         if(sublen%3!=0) {",
          "836:         }",
          "837:         i=0;",
          "838:         while(i<sublen) {",
          "839:   tval=EXTRACT_BE_U_3(tptr + i + 8);",
          "843:         }",
          "844:         break;",
          "",
          "[Removed Lines]",
          "827:          return hexdump;",
          "831:          tval >> 7, (tval >> 4) & 0x07, (tval >> 3) & 0x01);",
          "835:          return hexdump;",
          "840:          ND_PRINT(\"\\n\\t    SCID: %u, SVID: %u\",",
          "841:           tval >> 12, tval & 0x000fff);",
          "842:          i=i+3;",
          "",
          "[Added Lines]",
          "827:   return hexdump;",
          "831:   tval >> 7, (tval >> 4) & 0x07, (tval >> 3) & 0x01);",
          "835:   return hexdump;",
          "840:   ND_PRINT(\"\\n\\t    SCID: %u, SVID: %u\",",
          "841:    tval >> 12, tval & 0x000fff);",
          "842:   i=i+3;",
          "",
          "---------------"
        ],
        "print-lmp.c||print-lmp.c": [
          "File: print-lmp.c -> print-lmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "873:    ND_PRINT(\"\\n\\t\\t    Channel Status: %s (%u)\",",
          "874:      tok2str(lmp_obj_channel_status_values,",
          "876:      EXTRACT_BE_U_4(obj_tptr + offset + 4)&0x3FFFFFF),",
          "877:      EXTRACT_BE_U_4(obj_tptr + offset + 4)&0x3FFFFFF);",
          "878:    offset+=8;",
          "",
          "[Removed Lines]",
          "875:       \"Unknown\",",
          "",
          "[Added Lines]",
          "875:      \"Unknown\",",
          "",
          "---------------"
        ],
        "print-ntp.c||print-ntp.c": [
          "File: print-ntp.c -> print-ntp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "350:   ND_TCHECK_4(bp->key_id);",
          "351:   ND_PRINT(\"\\n\\tKey id: %u\", EXTRACT_BE_U_4(bp->key_id));",
          "352:   ND_TCHECK_LEN(bp->message_digest, 16);",
          "359:   ND_TCHECK_4(bp->key_id);",
          "360:   ND_PRINT(\"\\n\\tKey id: %u\", EXTRACT_BE_U_4(bp->key_id));",
          "361:   ND_TCHECK_LEN(bp->message_digest, 20);",
          "362:   ND_PRINT(\"\\n\\tAuthentication: %08x%08x%08x%08x%08x\",",
          "368:  } else if (length > NTP_TIMEMSG_MINLEN) {",
          "369:   ND_PRINT(\"\\n\\t(%u more bytes after the header)\", length - NTP_TIMEMSG_MINLEN);",
          "370:  }",
          "",
          "[Removed Lines]",
          "353:                 ND_PRINT(\"\\n\\tAuthentication: %08x%08x%08x%08x\",",
          "354:                  EXTRACT_BE_U_4(bp->message_digest),",
          "355:                  EXTRACT_BE_U_4(bp->message_digest + 4),",
          "356:                  EXTRACT_BE_U_4(bp->message_digest + 8),",
          "357:                  EXTRACT_BE_U_4(bp->message_digest + 12));",
          "363:                  EXTRACT_BE_U_4(bp->message_digest),",
          "364:                  EXTRACT_BE_U_4(bp->message_digest + 4),",
          "365:                  EXTRACT_BE_U_4(bp->message_digest + 8),",
          "366:                  EXTRACT_BE_U_4(bp->message_digest + 12),",
          "367:                  EXTRACT_BE_U_4(bp->message_digest + 16));",
          "",
          "[Added Lines]",
          "353:   ND_PRINT(\"\\n\\tAuthentication: %08x%08x%08x%08x\",",
          "354:     EXTRACT_BE_U_4(bp->message_digest),",
          "355:     EXTRACT_BE_U_4(bp->message_digest + 4),",
          "356:     EXTRACT_BE_U_4(bp->message_digest + 8),",
          "357:     EXTRACT_BE_U_4(bp->message_digest + 12));",
          "363:     EXTRACT_BE_U_4(bp->message_digest),",
          "364:     EXTRACT_BE_U_4(bp->message_digest + 4),",
          "365:     EXTRACT_BE_U_4(bp->message_digest + 8),",
          "366:     EXTRACT_BE_U_4(bp->message_digest + 12),",
          "367:     EXTRACT_BE_U_4(bp->message_digest + 16));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "450: void",
          "451: ntp_print(netdissect_options *ndo,",
          "453: {",
          "454:  const union ntpdata *bp = (const union ntpdata *)cp;",
          "455:  u_int mode, version, leapind;",
          "",
          "[Removed Lines]",
          "452:           const u_char *cp, u_int length)",
          "",
          "[Added Lines]",
          "452:    const u_char *cp, u_int length)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "465:  mode = (status & MODEMASK) >> MODESHIFT;",
          "466:  if (!ndo->ndo_vflag) {",
          "467:   ND_PRINT(\", %s, length %u\",",
          "470:   return;",
          "471:  }",
          "473:  ND_PRINT(\", %s, length %u\\n\",",
          "477:  leapind = (status & LEAPMASK);",
          "478:  ND_PRINT(\"\\tLeap indicator: %s (%u)\",",
          "482:  switch (mode) {",
          "",
          "[Removed Lines]",
          "468:             tok2str(ntp_mode_values, \"Unknown mode\", mode),",
          "469:             length);",
          "474:            tok2str(ntp_mode_values, \"Unknown mode\", mode), length);",
          "479:            tok2str(ntp_leapind_values, \"Unknown\", leapind),",
          "480:            leapind);",
          "",
          "[Added Lines]",
          "468:     tok2str(ntp_mode_values, \"Unknown mode\", mode),",
          "469:     length);",
          "474:     tok2str(ntp_mode_values, \"Unknown mode\", mode), length);",
          "479:    tok2str(ntp_leapind_values, \"Unknown\", leapind),",
          "480:    leapind);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "523: static void",
          "524: p_ntp_time(netdissect_options *ndo,",
          "526: {",
          "527:  uint32_t i;",
          "528:  uint32_t uf;",
          "",
          "[Removed Lines]",
          "525:            const struct l_fixedpt *lfp)",
          "",
          "[Added Lines]",
          "525:     const struct l_fixedpt *lfp)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "578: static void",
          "579: p_ntp_delta(netdissect_options *ndo,",
          "582: {",
          "583:  uint32_t u, uf;",
          "584:  uint32_t ou, ouf;",
          "",
          "[Removed Lines]",
          "580:             const struct l_fixedpt *olfp,",
          "581:             const struct l_fixedpt *lfp)",
          "",
          "[Added Lines]",
          "580:      const struct l_fixedpt *olfp,",
          "581:      const struct l_fixedpt *lfp)",
          "",
          "---------------"
        ],
        "print-ospf6.c||print-ospf6.c": [
          "File: print-ospf6.c -> print-ospf6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "484:         if (length < sizeof(struct lsa6_hdr) || (const u_char *)lsap + length > dataend)",
          "486:         lsa_length = length - sizeof(struct lsa6_hdr);",
          "487:         tptr = (const uint8_t *)lsap+sizeof(struct lsa6_hdr);",
          "",
          "[Removed Lines]",
          "485:          return (1);",
          "",
          "[Added Lines]",
          "485:   return (1);",
          "",
          "---------------"
        ],
        "print-sll.c||print-sll.c": [
          "File: print-sll.c -> print-sll.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "298:    return (hdrlen + length);",
          "299:   }",
          "300:          if (ndo->ndo_eflag) {",
          "303:    ND_PRINT(\"%s, \", ieee8021q_tci_string(tag));",
          "304:   }",
          "",
          "[Removed Lines]",
          "301:           uint16_t tag = EXTRACT_BE_U_2(p);",
          "",
          "[Added Lines]",
          "301:    uint16_t tag = EXTRACT_BE_U_2(p);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "489:    return (hdrlen + length);",
          "490:   }",
          "491:          if (ndo->ndo_eflag) {",
          "494:    ND_PRINT(\"%s, \", ieee8021q_tci_string(tag));",
          "495:   }",
          "",
          "[Removed Lines]",
          "492:           uint16_t tag = EXTRACT_BE_U_2(p);",
          "",
          "[Added Lines]",
          "492:    uint16_t tag = EXTRACT_BE_U_2(p);",
          "",
          "---------------"
        ],
        "print-smb.c||print-smb.c": [
          "File: print-smb.c -> print-smb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "834:     smb_fdata(ndo, buf, fmt_smbheader, buf + 33, unicodestr);",
          "836:     if (nterrcodes) {",
          "838:  if (nterror)",
          "839:      ND_PRINT(\"NTError = %s\\n\", nt_errstr(nterror));",
          "840:     } else {",
          "",
          "[Removed Lines]",
          "837:      nterror = EXTRACT_LE_U_4(buf + 5);",
          "",
          "[Added Lines]",
          "837:  nterror = EXTRACT_LE_U_4(buf + 5);",
          "",
          "---------------"
        ],
        "print-snmp.c||print-snmp.c": [
          "File: print-snmp.c -> print-snmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "934:   if (first < 0) {",
          "936:    firstval = o / OIDMUX;",
          "937:    if (firstval > 2) firstval = 2;",
          "938:    o -= firstval * OIDMUX;",
          "",
          "[Removed Lines]",
          "935:           first = 0;",
          "",
          "[Added Lines]",
          "935:    first = 0;",
          "",
          "---------------"
        ],
        "print-tcp.c||print-tcp.c": [
          "File: print-tcp.c -> print-tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "188:                                      ip6addr_string(ndo, ip6->ip6_dst));",
          "189:          } else {",
          "190:                  ND_PRINT(\"%s > %s:\",",
          "192:                               ipaddr_string(ndo, ip->ip_dst));",
          "193:                 }",
          "194:                 nd_print_trunc(ndo);",
          "",
          "[Removed Lines]",
          "191:                               ipaddr_string(ndo, ip->ip_src),",
          "",
          "[Added Lines]",
          "191:                        ipaddr_string(ndo, ip->ip_src),",
          "",
          "---------------"
        ],
        "print.c||print.c": [
          "File: print.c -> print.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:  { nflog_if_print, DLT_NFLOG},",
          "71: #endif",
          "72: #ifdef DLT_CIP",
          "74: #endif",
          "75: #ifdef DLT_ATM_CLIP",
          "76:  { cip_if_print,  DLT_ATM_CLIP },",
          "",
          "[Removed Lines]",
          "73:  { cip_if_print,   DLT_CIP },",
          "",
          "[Added Lines]",
          "73:  { cip_if_print,  DLT_CIP },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cb9b66505924ae735e5ef772a434e72089231076",
      "candidate_info": {
        "commit_hash": "cb9b66505924ae735e5ef772a434e72089231076",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/cb9b66505924ae735e5ef772a434e72089231076",
        "files": [
          "print-802_11.c",
          "print-cdp.c",
          "print-dccp.c",
          "print-eap.c",
          "print-geneve.c",
          "print-gre.c",
          "print-ldp.c",
          "print-llc.c",
          "print-lldp.c",
          "print-ppp.c",
          "print-radius.c",
          "print-rrcp.c",
          "print-rsvp.c",
          "print-vtp.c"
        ],
        "message": "Use more the EXTRACT_8BITS() macro to fetch a one-byte value (18/n)\n\nAssignment, *(p op e)\n\nPartial list.",
        "before_after_code_files": [
          "print-802_11.c||print-802_11.c",
          "print-cdp.c||print-cdp.c",
          "print-dccp.c||print-dccp.c",
          "print-eap.c||print-eap.c",
          "print-geneve.c||print-geneve.c",
          "print-gre.c||print-gre.c",
          "print-ldp.c||print-ldp.c",
          "print-llc.c||print-llc.c",
          "print-lldp.c||print-lldp.c",
          "print-ppp.c||print-ppp.c",
          "print-radius.c||print-radius.c",
          "print-rrcp.c||print-rrcp.c",
          "print-rsvp.c||print-rsvp.c",
          "print-vtp.c||print-vtp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-lldp.c||print-lldp.c"
          ],
          "candidate": [
            "print-lldp.c||print-lldp.c"
          ]
        }
      },
      "candidate_diff": {
        "print-802_11.c||print-802_11.c": [
          "File: print-802_11.c -> print-802_11.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1023:    return 0;",
          "1024:   if (length < 2)",
          "1025:    return 0;",
          "1029:   if (!ND_TTEST2(*(p + offset + 2), elementlen))",
          "",
          "[Removed Lines]",
          "1026:   elementlen = *(p + offset + 1);",
          "",
          "[Added Lines]",
          "1026:   elementlen = EXTRACT_8BITS(p + offset + 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1123:     length -= ds.length;",
          "1124:     break;",
          "1125:    }",
          "1127:    offset += 1;",
          "1128:    length -= 1;",
          "",
          "[Removed Lines]",
          "1126:    ds.channel = *(p + offset);",
          "",
          "[Added Lines]",
          "1126:    ds.channel = EXTRACT_8BITS(p + offset);",
          "",
          "---------------"
        ],
        "print-cdp.c||print-cdp.c": [
          "File: print-cdp.c -> print-cdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:    ND_PRINT((ndo, \"\\n\\t  \"));",
          "172:    for (i=0;i<len;i++) {",
          "174:        if (j == '\\n') /* lets rework the version string to",
          "176:     ND_PRINT((ndo, \"\\n\\t  \"));",
          "",
          "[Removed Lines]",
          "173:        j = *(tptr+i);",
          "",
          "[Added Lines]",
          "173:        j = EXTRACT_8BITS(tptr + i);",
          "",
          "---------------"
        ],
        "print-dccp.c||print-dccp.c": [
          "File: print-dccp.c -> print-dccp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "540:  if (*option >= 32) {",
          "541:   ND_TCHECK(*(option+1));",
          "543:   if (optlen < 2) {",
          "544:    if (*option >= 128)",
          "545:     ND_PRINT((ndo, \"CCID option %u optlen too short\", *option));",
          "",
          "[Removed Lines]",
          "542:   optlen = *(option +1);",
          "",
          "[Added Lines]",
          "542:   optlen = EXTRACT_8BITS(option + 1);",
          "",
          "---------------"
        ],
        "print-eap.c||print-eap.c": [
          "File: print-eap.c -> print-eap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "198:             ND_TCHECK_8BITS(tptr+4);",
          "200:             ND_PRINT((ndo, \"\\n\\t\\t Type %s (%u)\",",
          "201:                    tok2str(eap_type_values, \"unknown\", subtype),",
          "202:                    subtype));",
          "",
          "[Removed Lines]",
          "199:             subtype = *(tptr+4);",
          "",
          "[Added Lines]",
          "199:             subtype = EXTRACT_8BITS(tptr + 4);",
          "",
          "---------------"
        ],
        "print-geneve.c||print-geneve.c": [
          "File: print-geneve.c -> print-geneve.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "113:         sep = \", \";",
          "115:         opt_class = EXTRACT_BE_16BITS(bp);",
          "117:         opt_len = 4 + ((*(bp + 3) & OPT_LEN_MASK) * 4);",
          "119:         ND_PRINT((ndo, \"class %s (0x%x) type 0x%x%s len %u\",",
          "",
          "[Removed Lines]",
          "116:         opt_type = *(bp + 2);",
          "",
          "[Added Lines]",
          "116:         opt_type = EXTRACT_8BITS(bp + 2);",
          "",
          "---------------"
        ],
        "print-gre.c||print-gre.c": [
          "File: print-gre.c -> print-gre.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "180:    if (len < 4)",
          "181:     goto trunc;",
          "182:    af = EXTRACT_BE_16BITS(bp);",
          "185:    bp += 4;",
          "186:    len -= 4;",
          "",
          "[Removed Lines]",
          "183:    sreoff = *(bp + 2);",
          "184:    srelen = *(bp + 3);",
          "",
          "[Added Lines]",
          "183:    sreoff = EXTRACT_8BITS(bp + 2);",
          "184:    srelen = EXTRACT_8BITS(bp + 3);",
          "",
          "---------------"
        ],
        "print-ldp.c||print-ldp.c": [
          "File: print-ldp.c -> print-ldp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "386:             TLV_TCHECK(7);",
          "",
          "[Removed Lines]",
          "387:             vc_info_len = *(tptr+2);",
          "",
          "[Added Lines]",
          "387:             vc_info_len = EXTRACT_8BITS(tptr + 2);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "423:             while (vc_info_len > 2) {",
          "424:                 vc_info_tlv_type = *tptr;",
          "426:                 if (vc_info_tlv_len < 2)",
          "427:                     break;",
          "428:                 if (vc_info_len < vc_info_tlv_len)",
          "",
          "[Removed Lines]",
          "425:                 vc_info_tlv_len = *(tptr+1);",
          "",
          "[Added Lines]",
          "425:                 vc_info_tlv_len = EXTRACT_8BITS(tptr + 1);",
          "",
          "---------------"
        ],
        "print-llc.c||print-llc.c": [
          "File: print-llc.c -> print-llc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "167:  }",
          "169:  dsap_field = *p;",
          "",
          "[Removed Lines]",
          "170:  ssap_field = *(p + 1);",
          "",
          "[Added Lines]",
          "170:  ssap_field = EXTRACT_8BITS(p + 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "179:  if ((control & LLC_U_FMT) == LLC_U_FMT) {",
          "",
          "[Removed Lines]",
          "178:  control = *(p + 2);",
          "",
          "[Added Lines]",
          "178:  control = EXTRACT_8BITS(p + 2);",
          "",
          "---------------"
        ],
        "print-lldp.c||print-lldp.c": [
          "File: print-lldp.c -> print-lldp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "656:     if (tlv_len < 4) {",
          "657:         return hexdump;",
          "658:     }",
          "661:     ND_PRINT((ndo, \"\\n\\t  %s Subtype (%u)\",",
          "662:            tok2str(lldp_8021_subtype_values, \"unknown\", subtype),",
          "",
          "[Removed Lines]",
          "659:     subtype = *(tptr+3);",
          "",
          "[Added Lines]",
          "659:     subtype = EXTRACT_8BITS(tptr + 3);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "687:         if (tlv_len < 7) {",
          "688:             return hexdump;",
          "689:         }",
          "691:         if (tlv_len < 7+sublen) {",
          "692:             return hexdump;",
          "693:         }",
          "",
          "[Removed Lines]",
          "690:         sublen = *(tptr+6);",
          "",
          "[Added Lines]",
          "690:         sublen = EXTRACT_8BITS(tptr + 6);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "698:         if (tlv_len < 5) {",
          "699:             return hexdump;",
          "700:         }",
          "702:         if (tlv_len < 5+sublen) {",
          "703:             return hexdump;",
          "704:         }",
          "",
          "[Removed Lines]",
          "701:         sublen = *(tptr+4);",
          "",
          "[Added Lines]",
          "701:         sublen = EXTRACT_8BITS(tptr + 4);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "709:         if(tlv_len<LLDP_PRIVATE_8021_SUBTYPE_CONGESTION_NOTIFICATION_LENGTH){",
          "710:          return hexdump;",
          "711:         }",
          "713:         ND_PRINT((ndo, \"\\n\\t    Pre-Priority CNPV Indicator\"));",
          "714:         ND_PRINT((ndo, \"\\n\\t     Priority : 0  1  2  3  4  5  6  7\"));",
          "715:         ND_PRINT((ndo, \"\\n\\t     Value    : \"));",
          "716:         for(i=0;i<NO_OF_BITS;i++)",
          "717:             ND_PRINT((ndo, \"%-2d \", (tval >> i) & 0x01));",
          "719:         ND_PRINT((ndo, \"\\n\\t    Pre-Priority Ready Indicator\"));",
          "720:         ND_PRINT((ndo, \"\\n\\t     Priority : 0  1  2  3  4  5  6  7\"));",
          "721:         ND_PRINT((ndo, \"\\n\\t     Value    : \"));",
          "",
          "[Removed Lines]",
          "712:         tval=*(tptr+4);",
          "718:         tval=*(tptr+5);",
          "",
          "[Added Lines]",
          "712:         tval=EXTRACT_8BITS(tptr + 4);",
          "718:         tval=EXTRACT_8BITS(tptr + 5);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "727:         if(tlv_len<LLDP_PRIVATE_8021_SUBTYPE_ETS_CONFIGURATION_LENGTH) {",
          "728:             return hexdump;",
          "729:         }",
          "731:         ND_PRINT((ndo, \"\\n\\t    Willing:%d, CBS:%d, RES:%d, Max TCs:%d\",",
          "732:          tval >> 7, (tval >> 6) & 0x02, (tval >> 3) & 0x07, tval & 0x07));",
          "",
          "[Removed Lines]",
          "730:         tval=*(tptr+4);",
          "",
          "[Added Lines]",
          "730:         tval=EXTRACT_8BITS(tptr + 4);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "759:         if(tlv_len<LLDP_PRIVATE_8021_SUBTYPE_PFC_CONFIGURATION_LENGTH) {",
          "760:             return hexdump;",
          "761:         }",
          "763:         ND_PRINT((ndo, \"\\n\\t    Willing: %d, MBC: %d, RES: %d, PFC cap:%d \",",
          "764:          tval >> 7, (tval >> 6) & 0x01, (tval >> 4) & 0x03, (tval & 0x0f)));",
          "765:         ND_PRINT((ndo, \"\\n\\t    PFC Enable\"));",
          "767:         ND_PRINT((ndo, \"\\n\\t     Priority : 0  1  2  3  4  5  6  7\"));",
          "768:         ND_PRINT((ndo, \"\\n\\t     Value    : \"));",
          "769:         for(i=0;i<NO_OF_BITS;i++)",
          "",
          "[Removed Lines]",
          "762:         tval=*(tptr+4);",
          "766:         tval=*(tptr+5);",
          "",
          "[Added Lines]",
          "762:         tval=EXTRACT_8BITS(tptr + 4);",
          "766:         tval=EXTRACT_8BITS(tptr + 5);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "786:         i=0;",
          "787:         ND_PRINT((ndo, \"\\n\\t    Application Priority Table\"));",
          "788:         while(i<sublen) {",
          "790:          ND_PRINT((ndo, \"\\n\\t      Priority: %u, RES: %u, Sel: %u, Protocol ID: %u\",",
          "791:            tval >> 5, (tval >> 3) & 0x03, (tval & 0x07),",
          "792:     EXTRACT_BE_16BITS(tptr + i + 5)));",
          "",
          "[Removed Lines]",
          "789:          tval=*(tptr+i+5);",
          "",
          "[Added Lines]",
          "789:          tval=EXTRACT_8BITS(tptr + i + 5);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "798:          return hexdump;",
          "799:         }",
          "800:         ND_PRINT((ndo, \"\\n\\t    EVB Bridge Status\"));",
          "802:         ND_PRINT((ndo, \"\\n\\t      RES: %d, BGID: %d, RRCAP: %d, RRCTR: %d\",",
          "803:          tval >> 3, (tval >> 2) & 0x01, (tval >> 1) & 0x01, tval & 0x01));",
          "804:         ND_PRINT((ndo, \"\\n\\t    EVB Station Status\"));",
          "806:         ND_PRINT((ndo, \"\\n\\t      RES: %d, SGID: %d, RRREQ: %d,RRSTAT: %d\",",
          "807:          tval >> 4, (tval >> 3) & 0x01, (tval >> 2) & 0x01, tval & 0x03));",
          "809:         ND_PRINT((ndo, \"\\n\\t    R: %d, RTE: %d, \",tval >> 5, tval & 0x1f));",
          "811:         ND_PRINT((ndo, \"EVB Mode: %s [%d]\",",
          "812:          tok2str(lldp_evb_mode_values, \"unknown\", tval >> 6), tval >> 6));",
          "813:         ND_PRINT((ndo, \"\\n\\t    ROL: %d, RWD: %d, \", (tval >> 5) & 0x01, tval & 0x1f));",
          "815:         ND_PRINT((ndo, \"RES: %d, ROL: %d, RKA: %d\", tval >> 6, (tval >> 5) & 0x01, tval & 0x1f));",
          "816:         break;",
          "",
          "[Removed Lines]",
          "801:         tval=*(tptr+4);",
          "805:         tval=*(tptr+5);",
          "808:         tval=*(tptr+6);",
          "810:         tval=*(tptr+7);",
          "814:         tval=*(tptr+8);",
          "",
          "[Added Lines]",
          "801:         tval=EXTRACT_8BITS(tptr + 4);",
          "805:         tval=EXTRACT_8BITS(tptr + 5);",
          "808:         tval=EXTRACT_8BITS(tptr + 6);",
          "810:         tval=EXTRACT_8BITS(tptr + 7);",
          "814:         tval=EXTRACT_8BITS(tptr + 8);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "819:         if(tlv_len<LLDP_PRIVATE_8021_SUBTYPE_CDCP_MIN_LENGTH){",
          "820:          return hexdump;",
          "821:         }",
          "823:         ND_PRINT((ndo, \"\\n\\t    Role: %d, RES: %d, Scomp: %d \",",
          "824:          tval >> 7, (tval >> 4) & 0x07, (tval >> 3) & 0x01));",
          "825:         ND_PRINT((ndo, \"ChnCap: %d\", EXTRACT_BE_16BITS(tptr + 6) & 0x0fff));",
          "",
          "[Removed Lines]",
          "822:         tval=*(tptr+4);",
          "",
          "[Added Lines]",
          "822:         tval=EXTRACT_8BITS(tptr + 4);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "856:     if (tlv_len < 4) {",
          "857:         return hexdump;",
          "858:     }",
          "861:     ND_PRINT((ndo, \"\\n\\t  %s Subtype (%u)\",",
          "862:            tok2str(lldp_8023_subtype_values, \"unknown\", subtype),",
          "",
          "[Removed Lines]",
          "859:     subtype = *(tptr+3);",
          "",
          "[Added Lines]",
          "859:     subtype = EXTRACT_8BITS(tptr + 3);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "940:     if (tlv_len < 8) {",
          "941:         return hexdump;",
          "942:     }",
          "945:     ND_PRINT((ndo, \"\\n\\t  %s Subtype (%u)\",",
          "946:            tok2str(lldp_iana_subtype_values, \"unknown\", subtype),",
          "",
          "[Removed Lines]",
          "943:     subtype = *(tptr+3);",
          "",
          "[Added Lines]",
          "943:     subtype = EXTRACT_8BITS(tptr + 3);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "976:     if (tlv_len < 4) {",
          "977:         return hexdump;",
          "978:     }",
          "981:     ND_PRINT((ndo, \"\\n\\t  %s Subtype (%u)\",",
          "982:            tok2str(lldp_tia_subtype_values, \"unknown\", subtype),",
          "",
          "[Removed Lines]",
          "979:     subtype = *(tptr+3);",
          "",
          "[Added Lines]",
          "979:     subtype = EXTRACT_8BITS(tptr + 3);",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1016:         if (tlv_len < 5) {",
          "1017:             return hexdump;",
          "1018:         }",
          "1020:         ND_PRINT((ndo, \"\\n\\t    Location data format %s (0x%02x)\",",
          "1021:                tok2str(lldp_tia_location_data_format_values, \"unknown\", location_format),",
          "1022:                location_format));",
          "",
          "[Removed Lines]",
          "1019:         location_format = *(tptr+4);",
          "",
          "[Added Lines]",
          "1019:         location_format = EXTRACT_8BITS(tptr + 4);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1045:             if (tlv_len < 6) {",
          "1046:                 return hexdump;",
          "1047:             }",
          "1049:             if (lci_len < 3) {",
          "1050:                 return hexdump;",
          "1051:             }",
          "",
          "[Removed Lines]",
          "1048:             lci_len = *(tptr+5);",
          "",
          "[Added Lines]",
          "1048:             lci_len = EXTRACT_8BITS(tptr + 5);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1069:                     return hexdump;",
          "1070:                 }",
          "1071:   ca_type = *(tptr);",
          "1074:   tptr += 2;",
          "1075:                 lci_len -= 2;",
          "",
          "[Removed Lines]",
          "1072:                 ca_len = *(tptr+1);",
          "",
          "[Added Lines]",
          "1072:                 ca_len = EXTRACT_8BITS(tptr + 1);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1159:     if (len < 4) {",
          "1160:         return hexdump;",
          "1161:     }",
          "1164:     ND_PRINT((ndo, \"\\n\\t  %s Subtype (%u)\",",
          "1165:            tok2str(lldp_dcbx_subtype_values, \"unknown\", subtype),",
          "",
          "[Removed Lines]",
          "1162:     subtype = *(pptr+3);",
          "",
          "[Added Lines]",
          "1162:     subtype = EXTRACT_8BITS(pptr + 3);",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1218:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", *tptr));",
          "1219:      ND_PRINT((ndo, \"\\n\\t      Max_Version: %d\", *(tptr + 1)));",
          "1220:      ND_PRINT((ndo, \"\\n\\t      Info block(0x%02X): \", *(tptr + 2)));",
          "1222:      ND_PRINT((ndo, \"Enable bit: %d, Willing bit: %d, Error Bit: %d\",",
          "1223:   (tval &  0x80) ? 1 : 0, (tval &  0x40) ? 1 : 0,",
          "1224:   (tval &  0x20) ? 1 : 0));",
          "",
          "[Removed Lines]",
          "1221:      tval = *(tptr+2);",
          "",
          "[Added Lines]",
          "1221:      tval = EXTRACT_8BITS(tptr + 2);",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1249:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", *tptr));",
          "1250:      ND_PRINT((ndo, \"\\n\\t      Max_Version: %d\", *(tptr + 1)));",
          "1251:      ND_PRINT((ndo, \"\\n\\t      Info block(0x%02X): \", *(tptr + 2)));",
          "1253:      ND_PRINT((ndo, \"Enable bit: %d, Willing bit: %d, Error Bit: %d\",",
          "1254:   (tval &  0x80) ? 1 : 0, (tval &  0x40) ? 1 : 0,",
          "1255:   (tval &  0x20) ? 1 : 0));",
          "1256:      ND_PRINT((ndo, \"\\n\\t      SubType: %d\", *(tptr + 3)));",
          "1258:      ND_PRINT((ndo, \"\\n\\t      PFC Config (0x%02X)\", *(tptr + 4)));",
          "1259:      for (i = 0; i <= 7; i++)",
          "1260:   ND_PRINT((ndo, \"\\n\\t          Priority Bit %d: %s\",",
          "",
          "[Removed Lines]",
          "1252:      tval = *(tptr+2);",
          "1257:      tval = *(tptr+4);",
          "",
          "[Added Lines]",
          "1252:      tval = EXTRACT_8BITS(tptr + 2);",
          "1257:      tval = EXTRACT_8BITS(tptr + 4);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1270:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", *tptr));",
          "1271:      ND_PRINT((ndo, \"\\n\\t      Max_Version: %d\", *(tptr + 1)));",
          "1272:      ND_PRINT((ndo, \"\\n\\t      Info block(0x%02X): \", *(tptr + 2)));",
          "1274:      ND_PRINT((ndo, \"Enable bit: %d, Willing bit: %d, Error Bit: %d\",",
          "1275:   (tval &  0x80) ? 1 : 0, (tval &  0x40) ? 1 : 0,",
          "1276:   (tval &  0x20) ? 1 : 0));",
          "",
          "[Removed Lines]",
          "1273:      tval = *(tptr+2);",
          "",
          "[Added Lines]",
          "1273:      tval = EXTRACT_8BITS(tptr + 2);",
          "",
          "---------------"
        ],
        "print-ppp.c||print-ppp.c": [
          "File: print-ppp.c -> print-ppp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1103:                                 while (ipcomp_subopttotallen >= 2) {",
          "1104:                                         ND_TCHECK2(*p, 2);",
          "1105:                                         ipcomp_subopt = *p;",
          "1109:                                         if (ipcomp_subopt == 0 ||",
          "",
          "[Removed Lines]",
          "1106:                                         ipcomp_suboptlen = *(p+1);",
          "",
          "[Added Lines]",
          "1106:                                         ipcomp_suboptlen = EXTRACT_8BITS(p + 1);",
          "",
          "---------------"
        ],
        "print-radius.c||print-radius.c": [
          "File: print-radius.c -> print-radius.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "668:  ND_TCHECK2(*data, 2);",
          "670:         vendor_type = *(data);",
          "673:         if (vendor_length < 2)",
          "674:         {",
          "",
          "[Removed Lines]",
          "671:         vendor_length = *(data+1);",
          "",
          "[Added Lines]",
          "671:         vendor_length = EXTRACT_8BITS(data + 1);",
          "",
          "---------------"
        ],
        "print-rrcp.c||print-rrcp.c": [
          "File: print-rrcp.c -> print-rrcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:  uint8_t rrcp_opcode;",
          "100:  ND_TCHECK(*(cp + RRCP_PROTO_OFFSET));",
          "102:  ND_TCHECK(*(cp + RRCP_OPCODE_ISREPLY_OFFSET));",
          "103:  rrcp_opcode = EXTRACT_8BITS((cp + RRCP_OPCODE_ISREPLY_OFFSET)) & RRCP_OPCODE_MASK;",
          "104:  if (src != NULL && dst != NULL) {",
          "",
          "[Removed Lines]",
          "101:  rrcp_proto = *(cp + RRCP_PROTO_OFFSET);",
          "",
          "[Added Lines]",
          "101:  rrcp_proto = EXTRACT_8BITS(cp + RRCP_PROTO_OFFSET);",
          "",
          "---------------"
        ],
        "print-rsvp.c||print-rsvp.c": [
          "File: print-rsvp.c -> print-rsvp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1069:       u_char length;",
          "1071:       ND_TCHECK2(*obj_tptr, 4);",
          "1073:                     ND_PRINT((ndo, \"%s  Subobject Type: %s, length %u\",",
          "1074:                            indent,",
          "1075:                            tok2str(rsvp_obj_xro_values,",
          "",
          "[Removed Lines]",
          "1072:       length = *(obj_tptr + 1);",
          "",
          "[Added Lines]",
          "1072:       length = EXTRACT_8BITS(obj_tptr + 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1091:     goto invalid;",
          "1092:    }",
          "1093:    ND_TCHECK2(*obj_tptr, 8);",
          "1095:    if (prefix_length != 32) {",
          "1096:     ND_PRINT((ndo, \" ERROR: Prefix length %u != 32\",",
          "1097:        prefix_length));",
          "",
          "[Removed Lines]",
          "1094:    prefix_length = *(obj_tptr+6);",
          "",
          "[Added Lines]",
          "1094:    prefix_length = EXTRACT_8BITS(obj_tptr + 6);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1122:                                EXTRACT_8BITS((obj_tptr + 3)),",
          "1123:                                EXTRACT_BE_32BITS(obj_tptr + 4)));",
          "1124:                     }",
          "1127:                 }",
          "1128:                 break;",
          "1129:             default:",
          "",
          "[Removed Lines]",
          "1125:                     obj_tlen-=*(obj_tptr+1);",
          "1126:                     obj_tptr+=*(obj_tptr+1);",
          "",
          "[Added Lines]",
          "1125:                     obj_tlen-=EXTRACT_8BITS(obj_tptr + 1);",
          "1126:                     obj_tptr+=EXTRACT_8BITS(obj_tptr + 1);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1171:             case RSVP_CTYPE_TUNNEL_IPV4:",
          "1172:                 if (obj_tlen < 4)",
          "1173:                     return-1;",
          "1175:                 if (obj_tlen < 4+namelen)",
          "1176:                     return-1;",
          "1177:                 ND_PRINT((ndo, \"%s  Session Name: \", indent));",
          "",
          "[Removed Lines]",
          "1174:                 namelen = *(obj_tptr+3);",
          "",
          "[Added Lines]",
          "1174:                 namelen = EXTRACT_8BITS(obj_tptr + 3);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1571:             case RSVP_CTYPE_IPV4:",
          "1572:                 if (obj_tlen < 8)",
          "1573:                     return-1;",
          "1575:                 error_value=EXTRACT_BE_16BITS(obj_tptr + 6);",
          "1576:                 ND_PRINT((ndo, \"%s  Error Node Address: %s, Flags: [0x%02x]%s  Error Code: %s (%u)\",",
          "1577:                        indent,",
          "",
          "[Removed Lines]",
          "1574:                 error_code=*(obj_tptr+5);",
          "",
          "[Added Lines]",
          "1574:                 error_code=EXTRACT_8BITS(obj_tptr + 5);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1603:             case RSVP_CTYPE_IPV6:",
          "1604:                 if (obj_tlen < 20)",
          "1605:                     return-1;",
          "1607:                 error_value=EXTRACT_BE_16BITS(obj_tptr + 18);",
          "1608:                 ND_PRINT((ndo, \"%s  Error Node Address: %s, Flags: [0x%02x]%s  Error Code: %s (%u)\",",
          "1609:                        indent,",
          "",
          "[Removed Lines]",
          "1606:                 error_code=*(obj_tptr+17);",
          "",
          "[Added Lines]",
          "1606:                 error_code=EXTRACT_8BITS(obj_tptr + 17);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1654:                     if (*(obj_tptr+1) < 2)",
          "1655:                         return -1;",
          "1656:                     print_unknown_data(ndo, obj_tptr + 2, \"\\n\\t\\t\", *(obj_tptr + 1) - 2);",
          "1659:                 }",
          "1660:                 break;",
          "1661:             default:",
          "",
          "[Removed Lines]",
          "1657:                     obj_tlen-=*(obj_tptr+1);",
          "1658:                     obj_tptr+=*(obj_tptr+1);",
          "",
          "[Added Lines]",
          "1657:                     obj_tlen-=EXTRACT_8BITS(obj_tptr + 1);",
          "1658:                     obj_tptr+=EXTRACT_8BITS(obj_tptr + 1);",
          "",
          "---------------"
        ],
        "print-vtp.c||print-vtp.c": [
          "File: print-vtp.c -> print-vtp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:     ND_TCHECK2(*tptr, VTP_HEADER_LEN);",
          "134:     ND_PRINT((ndo, \"VTPv%u, Message %s (0x%02x), length %u\",",
          "136:     tok2str(vtp_message_type_values,\"Unknown message type\", type),",
          "",
          "[Removed Lines]",
          "133:     type = *(tptr+1);",
          "",
          "[Added Lines]",
          "133:     type = EXTRACT_8BITS(tptr + 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "146:     ND_PRINT((ndo, \"\\n\\tDomain name: \"));",
          "148:     if (mgmtd_len < 1 ||  mgmtd_len > 32) {",
          "149:  ND_PRINT((ndo, \" [invalid MgmtD Len %d]\", mgmtd_len));",
          "150:  return;",
          "",
          "[Removed Lines]",
          "147:     mgmtd_len = *(tptr + 3);",
          "",
          "[Added Lines]",
          "147:     mgmtd_len = EXTRACT_8BITS(tptr + 3);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "288:                     goto trunc;",
          "289:                 ND_TCHECK2(*tptr, 2);",
          "290:                 type = *tptr;",
          "293:                 ND_PRINT((ndo, \"\\n\\t\\t%s (0x%04x) TLV\",",
          "294:                        tok2str(vtp_vlan_tlv_values, \"Unknown\", type),",
          "",
          "[Removed Lines]",
          "291:                 tlv_len = *(tptr+1);",
          "",
          "[Added Lines]",
          "291:                 tlv_len = EXTRACT_8BITS(tptr + 1);",
          "",
          "---------------"
        ]
      }
    }
  ]
}