{
  "cve_id": "CVE-2023-45897",
  "cve_desc": "exfatprogs before 1.2.2 allows out-of-bounds memory access, such as in read_file_dentry_set.",
  "repo": "exfatprogs/exfatprogs",
  "patch_hash": "4abc55e976573991e6a1117bb2b3711e59da07ae",
  "patch_info": {
    "commit_hash": "4abc55e976573991e6a1117bb2b3711e59da07ae",
    "repo": "exfatprogs/exfatprogs",
    "commit_url": "https://github.com/exfatprogs/exfatprogs/commit/4abc55e976573991e6a1117bb2b3711e59da07ae",
    "files": [
      "exfat2img/exfat2img.c"
    ],
    "message": "exfat2img: fix out-of-bounds write in read_file_dentry_set\n\nif SecondaryCount is greater than (2 + the max number\nof File Name entries), writing to memory outside\nthe node->name could happen.\n\nReported-by: Yuezhang Mo <Yuezhang.Mo@sony.com>\nSigned-off-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>",
    "before_after_code_files": [
      "exfat2img/exfat2img.c||exfat2img/exfat2img.c"
    ]
  },
  "patch_diff": {
    "exfat2img/exfat2img.c||exfat2img/exfat2img.c": [
      "File: exfat2img/exfat2img.c -> exfat2img/exfat2img.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "319:  if (!node)",
      "320:   return -ENOMEM;",
      "323:   ret = exfat_de_iter_get(iter, i, &dentry);",
      "324:   if (ret || dentry->type != EXFAT_NAME)",
      "325:    break;",
      "",
      "[Removed Lines]",
      "322:  for (i = 2; i <= file_de->file_num_ext; i++) {",
      "",
      "[Added Lines]",
      "322:  for (i = 2; i <= MIN(file_de->file_num_ext, 1 + MAX_NAME_DENTRIES); i++) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "284cd95b0d089234a39677927b58ed63015406e9",
      "candidate_info": {
        "commit_hash": "284cd95b0d089234a39677927b58ed63015406e9",
        "repo": "exfatprogs/exfatprogs",
        "commit_url": "https://github.com/exfatprogs/exfatprogs/commit/284cd95b0d089234a39677927b58ed63015406e9",
        "files": [
          "fsck/fsck.c"
        ],
        "message": "fsck: do not treat volume GUID entry as unknown entry\n\nThe Volume GUID exists as a benign primary directory entry\nin the root directory and should not be deleted as an unknown\ndirectory entry.\n\nSigned-off-by: Yuezhang Mo <Yuezhang.Mo@sony.com>\nReviewed-by: Andy Wu <Andy.Wu@sony.com>\nReviewed-by: Aoyama Wataru <wataru.aoyama@sony.com>\nAcked-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>",
        "before_after_code_files": [
          "fsck/fsck.c||fsck/fsck.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/exfatprogs/exfatprogs/pull/239"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fsck/fsck.c||fsck/fsck.c": [
          "File: fsck/fsck.c -> fsck/fsck.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1093:   case EXFAT_VOLUME:",
          "1094:   case EXFAT_BITMAP:",
          "1095:   case EXFAT_UPCASE:",
          "1096:    if (dir == exfat->root)",
          "1097:     break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1096:   case EXFAT_GUID:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2ba476603df720940a6280e6457b5c0e92dca08e",
      "candidate_info": {
        "commit_hash": "2ba476603df720940a6280e6457b5c0e92dca08e",
        "repo": "exfatprogs/exfatprogs",
        "commit_url": "https://github.com/exfatprogs/exfatprogs/commit/2ba476603df720940a6280e6457b5c0e92dca08e",
        "files": [
          "include/libexfat.h",
          "tune/tune.c"
        ],
        "message": "tune: support volume GUID\n\nThis commit adds support for adding, deleting, modifying and\nshowing volume GUID in tune.exfat.\n\nSigned-off-by: Yuezhang Mo <Yuezhang.Mo@sony.com>\nReviewed-by: Andy Wu <Andy.Wu@sony.com>\nReviewed-by: Aoyama Wataru <wataru.aoyama@sony.com>\nAcked-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>",
        "before_after_code_files": [
          "include/libexfat.h||include/libexfat.h",
          "tune/tune.c||tune/tune.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/exfatprogs/exfatprogs/pull/239"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/libexfat.h||include/libexfat.h": [
          "File: include/libexfat.h -> include/libexfat.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:  __u16 volume_label[VOLUME_LABEL_MAX_LEN];",
          "89:  int volume_label_len;",
          "90:  unsigned int volume_serial;",
          "91: };",
          "93: struct exfat;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:  const char *guid;",
          "",
          "---------------"
        ],
        "tune/tune.c||tune/tune.c": [
          "File: tune/tune.c -> tune/tune.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:  fprintf(stderr, \"Usage: tune.exfat\\n\");",
          "21:  fprintf(stderr, \"\\t-l | --print-label                    Print volume label\\n\");",
          "22:  fprintf(stderr, \"\\t-L | --set-label=label                Set volume label\\n\");",
          "23:  fprintf(stderr, \"\\t-i | --print-serial                   Print volume serial\\n\");",
          "24:  fprintf(stderr, \"\\t-I | --set-serial=value               Set volume serial\\n\");",
          "25:  fprintf(stderr, \"\\t-V | --version                        Show version\\n\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23:  fprintf(stderr, \"\\t-u | --print-guid                     Print volume GUID\\n\");",
          "24:  fprintf(stderr, \"\\t-U | --set-guid=guid                  Set volume GUID\\n\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "32: static struct option opts[] = {",
          "33:  {\"print-label\",  no_argument,  NULL, 'l' },",
          "34:  {\"set-label\",  required_argument, NULL, 'L' },",
          "35:  {\"print-serial\", no_argument,  NULL, 'i' },",
          "36:  {\"set-serial\",  required_argument, NULL, 'I' },",
          "37:  {\"version\",  no_argument,  NULL, 'V' },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:  {\"print-guid\",  no_argument,  NULL, 'u' },",
          "38:  {\"set-guid\",  required_argument, NULL, 'U' },",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "59:   exfat_err(\"failed to init locale/codeset\\n\");",
          "61:  opterr = 0;",
          "63:   switch (c) {",
          "64:   case 'l':",
          "65:    flags = EXFAT_GET_VOLUME_LABEL;",
          "",
          "[Removed Lines]",
          "62:  while ((c = getopt_long(argc, argv, \"I:iL:lVvh\", opts, NULL)) != EOF)",
          "",
          "[Added Lines]",
          "66:  while ((c = getopt_long(argc, argv, \"I:iL:lU:uVvh\", opts, NULL)) != EOF)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "69:      optarg);",
          "70:    flags = EXFAT_SET_VOLUME_LABEL;",
          "71:    break;",
          "72:   case 'i':",
          "73:    flags = EXFAT_GET_VOLUME_SERIAL;",
          "74:    break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:   case 'u':",
          "77:    flags = EXFAT_GET_VOLUME_GUID;",
          "78:    break;",
          "79:   case 'U':",
          "80:    if (*optarg != '\\0' && *optarg != '\\r')",
          "81:     ui.guid = optarg;",
          "82:    flags = EXFAT_SET_VOLUME_GUID;",
          "83:    break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "140:   ret = exfat_read_volume_label(exfat);",
          "141:  else if (flags == EXFAT_SET_VOLUME_LABEL)",
          "142:   ret = exfat_set_volume_label(exfat, label_input);",
          "143: close_fd_out:",
          "144:  close(bd.dev_fd);",
          "145:  if (exfat)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "155:  else if (flags == EXFAT_GET_VOLUME_GUID)",
          "156:   ret = exfat_read_volume_guid(exfat);",
          "157:  else if (flags == EXFAT_SET_VOLUME_GUID)",
          "158:   ret = exfat_set_volume_guid(exfat, ui.guid);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "43b6845c5ae3a59e6ad8e297a345bd75db3572b1",
      "candidate_info": {
        "commit_hash": "43b6845c5ae3a59e6ad8e297a345bd75db3572b1",
        "repo": "exfatprogs/exfatprogs",
        "commit_url": "https://github.com/exfatprogs/exfatprogs/commit/43b6845c5ae3a59e6ad8e297a345bd75db3572b1",
        "files": [
          "mkfs/mkfs.c"
        ],
        "message": "mkfs: support set volume GUID\n\nThis commits adds support for adding volume GUID in mkfs.exfat.\n\nSigned-off-by: Yuezhang Mo <Yuezhang.Mo@sony.com>\nReviewed-by: Andy Wu <Andy.Wu@sony.com>\nReviewed-by: Aoyama Wataru <wataru.aoyama@sony.com>\nAcked-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>",
        "before_after_code_files": [
          "mkfs/mkfs.c||mkfs/mkfs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/exfatprogs/exfatprogs/pull/239"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "mkfs/mkfs.c||mkfs/mkfs.c": [
          "File: mkfs/mkfs.c -> mkfs/mkfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "337: static int exfat_create_root_dir(struct exfat_blk_dev *bd,",
          "338:   struct exfat_user_input *ui)",
          "339: {",
          "342:  int nbytes;",
          "",
          "[Removed Lines]",
          "340:  struct exfat_dentry ed[3] = {0};",
          "341:  int dentries_len = sizeof(struct exfat_dentry) * 3;",
          "",
          "[Added Lines]",
          "340:  struct exfat_dentry ed[4] = {0};",
          "341:  int dentries_len = sizeof(ed);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "347:  memcpy(ed[0].vol_label, ui->volume_label, ui->volume_label_len);",
          "348:  ed[0].vol_char_cnt = ui->volume_label_len/2;",
          "362:  nbytes = pwrite(bd->dev_fd, ed, dentries_len, finfo.root_byte_off);",
          "363:  if (nbytes != dentries_len) {",
          "",
          "[Removed Lines]",
          "351:  ed[1].type = EXFAT_BITMAP;",
          "352:  ed[1].bitmap_flags = 0;",
          "353:  ed[1].bitmap_start_clu = cpu_to_le32(EXFAT_FIRST_CLUSTER);",
          "354:  ed[1].bitmap_size = cpu_to_le64(finfo.bitmap_byte_len);",
          "357:  ed[2].type = EXFAT_UPCASE;",
          "358:  ed[2].upcase_checksum = cpu_to_le32(0xe619d30d);",
          "359:  ed[2].upcase_start_clu = cpu_to_le32(finfo.ut_start_clu);",
          "360:  ed[2].upcase_size = cpu_to_le64(EXFAT_UPCASE_TABLE_SIZE);",
          "",
          "[Added Lines]",
          "351:  if (ui->guid) {",
          "352:   if (__exfat_set_volume_guid(&ed[1], ui->guid))",
          "353:    return -1;",
          "354:  } else {",
          "359:   ed[1].type = EXFAT_GUID & ~EXFAT_INVAL;",
          "360:  }",
          "363:  ed[2].type = EXFAT_BITMAP;",
          "364:  ed[2].bitmap_flags = 0;",
          "365:  ed[2].bitmap_start_clu = cpu_to_le32(EXFAT_FIRST_CLUSTER);",
          "366:  ed[2].bitmap_size = cpu_to_le64(finfo.bitmap_byte_len);",
          "369:  ed[3].type = EXFAT_UPCASE;",
          "370:  ed[3].upcase_checksum = cpu_to_le32(0xe619d30d);",
          "371:  ed[3].upcase_start_clu = cpu_to_le32(finfo.ut_start_clu);",
          "372:  ed[3].upcase_size = cpu_to_le64(EXFAT_UPCASE_TABLE_SIZE);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "373: {",
          "374:  fputs(\"Usage: mkfs.exfat\\n\"",
          "375:   \"\\t-L | --volume-label=label                              Set volume label\\n\"",
          "376:   \"\\t-c | --cluster-size=size(or suffixed by 'K' or 'M')    Specify cluster size\\n\"",
          "377:   \"\\t-b | --boundary-align=size(or suffixed by 'K' or 'M')  Specify boundary alignment\\n\"",
          "378:   \"\\t     --pack-bitmap                                     Move bitmap into FAT segment\\n\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "388:   \"\\t-U | --volume-guid=guid                                Set volume GUID\\n\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "391: static const struct option opts[] = {",
          "392:  {\"volume-label\", required_argument, NULL, 'L' },",
          "393:  {\"cluster-size\", required_argument, NULL, 'c' },",
          "394:  {\"boundary-align\", required_argument, NULL, 'b' },",
          "395:  {\"pack-bitmap\",  no_argument,  NULL, PACK_BITMAP },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "406:  {\"volume-guid\",  required_argument, NULL, 'U' },",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "615:   exfat_err(\"failed to init locale/codeset\\n\");",
          "617:  opterr = 0;",
          "619:   switch (c) {",
          "",
          "[Removed Lines]",
          "618:  while ((c = getopt_long(argc, argv, \"n:L:c:b:fVqvh\", opts, NULL)) != EOF)",
          "",
          "[Added Lines]",
          "632:  while ((c = getopt_long(argc, argv, \"n:L:U:c:b:fVqvh\", opts, NULL)) != EOF)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "632:    ui.volume_label_len = ret;",
          "633:    break;",
          "634:   }",
          "635:   case 'c':",
          "636:    ret = parse_size(optarg);",
          "637:    if (ret < 0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "649:   case 'U':",
          "650:    if (*optarg != '\\0' && *optarg != '\\r')",
          "651:     ui.guid = optarg;",
          "652:    break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dfb2369938cd6b43b9654eb0b288a116e8d6c96f",
      "candidate_info": {
        "commit_hash": "dfb2369938cd6b43b9654eb0b288a116e8d6c96f",
        "repo": "exfatprogs/exfatprogs",
        "commit_url": "https://github.com/exfatprogs/exfatprogs/commit/dfb2369938cd6b43b9654eb0b288a116e8d6c96f",
        "files": [
          "include/exfat_ondisk.h",
          "include/libexfat.h",
          "lib/libexfat.c"
        ],
        "message": "lib: add helpers for volume GUID\n\nThis commit adds 3 helpers for volume GUID.\n  - exfat_read_volume_guid()\n  - exfat_set_volume_guid()\n  - __exfat_set_volume_guid()\n\nSigned-off-by: Yuezhang Mo <Yuezhang.Mo@sony.com>\nReviewed-by: Andy Wu <Andy.Wu@sony.com>\nReviewed-by: Aoyama Wataru <wataru.aoyama@sony.com>\nAcked-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>",
        "before_after_code_files": [
          "include/exfat_ondisk.h||include/exfat_ondisk.h",
          "include/libexfat.h||include/libexfat.h",
          "lib/libexfat.c||lib/libexfat.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/exfatprogs/exfatprogs/pull/239"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/exfat_ondisk.h||include/exfat_ondisk.h": [
          "File: include/exfat_ondisk.h -> include/exfat_ondisk.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "133: };",
          "135: #define VOLUME_LABEL_MAX_LEN 11",
          "136: #define ENTRY_NAME_MAX  15",
          "138: struct exfat_dentry {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136: #define VOLUME_GUID_LEN  16",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "190:    __le32 start_clu;",
          "191:    __le64 size;",
          "193:  } __attribute__((packed)) dentry;",
          "194: } __attribute__((packed));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "194:   struct {",
          "195:    __u8 num_ext;",
          "196:    __le16 checksum;",
          "197:    __u16 flags;",
          "198:    __u8 guid[VOLUME_GUID_LEN];",
          "199:    __u8 reserved[10];",
          "",
          "---------------"
        ],
        "include/libexfat.h||include/libexfat.h": [
          "File: include/libexfat.h -> include/libexfat.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: #define EXFAT_SET_VOLUME_LABEL  0x02",
          "46: #define EXFAT_GET_VOLUME_SERIAL  0x03",
          "47: #define EXFAT_SET_VOLUME_SERIAL  0x04",
          "49: #define EXFAT_MAX_SECTOR_SIZE  4096",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: #define EXFAT_GET_VOLUME_GUID  0x05",
          "49: #define EXFAT_SET_VOLUME_GUID  0x06",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "155: off_t exfat_get_root_entry_offset(struct exfat_blk_dev *bd);",
          "156: int exfat_read_volume_label(struct exfat *exfat);",
          "157: int exfat_set_volume_label(struct exfat *exfat, char *label_input);",
          "158: int exfat_read_sector(struct exfat_blk_dev *bd, void *buf,",
          "159:   unsigned int sec_off);",
          "160: int exfat_write_sector(struct exfat_blk_dev *bd, void *buf,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "160: int __exfat_set_volume_guid(struct exfat_dentry *dentry, const char *guid);",
          "161: int exfat_read_volume_guid(struct exfat *exfat);",
          "162: int exfat_set_volume_guid(struct exfat *exfat, const char *guid);",
          "",
          "---------------"
        ],
        "lib/libexfat.c||lib/libexfat.c": [
          "File: lib/libexfat.c -> lib/libexfat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "494:  return err;",
          "495: }",
          "497: int exfat_read_sector(struct exfat_blk_dev *bd, void *buf, unsigned int sec_off)",
          "498: {",
          "499:  int ret;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "494:  return err;",
          "495: }",
          "497: static inline void print_guid(const char *msg, const __u8 *guid)",
          "498: {",
          "499:  exfat_info(\"%s: %02x%02x%02x%02x-%02x%02x-%02x%02x-%02x%02x-%02x%02x%02x%02x%02x%02x\\n\",",
          "500:    msg,",
          "501:    guid[0], guid[1], guid[2], guid[3],",
          "502:    guid[4], guid[5], guid[5], guid[7],",
          "503:    guid[8], guid[9], guid[10], guid[11],",
          "504:    guid[12], guid[13], guid[14], guid[15]);",
          "505: }",
          "507: static int set_guid(__u8 *guid, const char *input)",
          "508: {",
          "509:  int i, j, zero_len = 0;",
          "510:  int len = strlen(input);",
          "512:  if (len != VOLUME_GUID_LEN * 2 && len != VOLUME_GUID_LEN * 2 + 4) {",
          "513:   exfat_err(\"invalid format for volume guid\\n\");",
          "514:   return -EINVAL;",
          "515:  }",
          "517:  for (i = 0, j = 0; i < len; i++) {",
          "518:   unsigned char ch = input[i];",
          "520:   if (ch >= '0' && ch <= '9')",
          "521:    ch -= '0';",
          "522:   else if (ch >= 'a' && ch <= 'f')",
          "523:    ch -= 'a' - 0xA;",
          "524:   else if (ch >= 'A' && ch <= 'F')",
          "525:    ch -= 'A' - 0xA;",
          "526:   else if (ch == '-' && len == VOLUME_GUID_LEN * 2 + 4 &&",
          "527:     (i == 8 || i == 13 || i == 18 || i == 23))",
          "528:    continue;",
          "529:   else {",
          "530:    exfat_err(\"invalid character '%c' for volume GUID\\n\", ch);",
          "531:    return -EINVAL;",
          "532:   }",
          "534:   if (j & 1)",
          "535:    guid[j >> 1] |= ch;",
          "536:   else",
          "537:    guid[j >> 1] = ch << 4;",
          "539:   j++;",
          "541:   if (ch == 0)",
          "542:    zero_len++;",
          "543:  }",
          "545:  if (zero_len == VOLUME_GUID_LEN * 2) {",
          "546:   exfat_err(\"%s is invalid for volume GUID\\n\", input);",
          "547:   return -EINVAL;",
          "548:  }",
          "550:  return 0;",
          "551: }",
          "553: int exfat_read_volume_guid(struct exfat *exfat)",
          "554: {",
          "555:  int err;",
          "556:  uint16_t checksum = 0;",
          "557:  struct exfat_dentry *dentry;",
          "558:  struct exfat_lookup_filter filter = {",
          "559:   .in.type = EXFAT_GUID,",
          "560:   .in.dentry_count = 1,",
          "561:   .in.filter = NULL,",
          "562:  };",
          "564:  err = exfat_lookup_dentry_set(exfat, exfat->root, &filter);",
          "565:  if (err)",
          "566:   return err;",
          "568:  dentry = filter.out.dentry_set;",
          "569:  exfat_calc_dentry_checksum(dentry, &checksum, true);",
          "571:  if (cpu_to_le16(checksum) == dentry->dentry.guid.checksum)",
          "572:   print_guid(\"GUID\", dentry->dentry.guid.guid);",
          "573:  else",
          "574:   exfat_info(\"GUID is corrupted, please delete it or set a new one\\n\");",
          "576:  free(dentry);",
          "578:  return err;",
          "579: }",
          "581: int __exfat_set_volume_guid(struct exfat_dentry *dentry, const char *guid)",
          "582: {",
          "583:  int err;",
          "584:  uint16_t checksum = 0;",
          "586:  memset(dentry, 0, sizeof(*dentry));",
          "587:  dentry->type = EXFAT_GUID;",
          "589:  err = set_guid(dentry->dentry.guid.guid, guid);",
          "590:  if (err)",
          "591:   return err;",
          "593:  exfat_calc_dentry_checksum(dentry, &checksum, true);",
          "594:  dentry->dentry.guid.checksum = cpu_to_le16(checksum);",
          "596:  return 0;",
          "597: }",
          "605: int exfat_set_volume_guid(struct exfat *exfat, const char *guid)",
          "606: {",
          "607:  struct exfat_dentry *dentry;",
          "608:  struct exfat_dentry_loc loc;",
          "609:  int err;",
          "611:  struct exfat_lookup_filter filter = {",
          "612:   .in.type = EXFAT_GUID,",
          "613:   .in.dentry_count = 1,",
          "614:   .in.filter = NULL,",
          "615:  };",
          "617:  err = exfat_lookup_dentry_set(exfat, exfat->root, &filter);",
          "618:  if (!err) {",
          "620:   dentry = filter.out.dentry_set;",
          "621:  } else {",
          "623:   if (guid == NULL)",
          "624:    return 0;",
          "626:   dentry = calloc(1, sizeof(*dentry));",
          "627:   if (!dentry)",
          "628:    return -ENOMEM;",
          "629:  }",
          "631:  if (guid) {",
          "633:   err = __exfat_set_volume_guid(dentry, guid);",
          "634:   if (err)",
          "635:    goto out;",
          "636:  } else {",
          "638:   dentry->type &= ~EXFAT_INVAL;",
          "639:  }",
          "641:  loc.parent = exfat->root;",
          "642:  loc.file_offset = filter.out.file_offset;",
          "643:  loc.dev_offset = filter.out.dev_offset;",
          "644:  err = exfat_add_dentry_set(exfat, &loc, dentry, 1, false);",
          "645:  if (!err) {",
          "646:   if (guid)",
          "647:    print_guid(\"new GUID\", dentry->dentry.guid.guid);",
          "648:   else",
          "649:    exfat_info(\"GUID is deleted\\n\");",
          "650:  }",
          "652: out:",
          "653:  free(dentry);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8fe26c50703fba6eb3046e42b674eb0a41da2119",
      "candidate_info": {
        "commit_hash": "8fe26c50703fba6eb3046e42b674eb0a41da2119",
        "repo": "exfatprogs/exfatprogs",
        "commit_url": "https://github.com/exfatprogs/exfatprogs/commit/8fe26c50703fba6eb3046e42b674eb0a41da2119",
        "files": [
          "NEWS",
          "include/version.h"
        ],
        "message": "exfatprogs: release 1.2.2 version\n\nexfatprogs 1.2.2 - released 2023-10-26\n======================================\n\nCHANGES :\n * exfat2img: Allow dumps for read-only devices.\n * fsck.exfat: Revert Repairing zero size directory.\n\nNEW FEATURES :\n * fsck.exfat: Repair duplicated filename.\n * mkfs.exfat: Add the option \"q\" to print only error messages.\n * mkfs.exfat: Add the option \"U\" to set volume GUID.\n * tune.exfat: Add the option \"U\" / \"-u\" to set or print volume GUID.\n\nBUG FIXES:\n * fsck.exfat: Fix some out-of-bounds memory accesses.\n * fsck.exfat: Change not to delete volume GUID directory entry.\n\nSigned-off-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>",
        "before_after_code_files": [
          "include/version.h||include/version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/exfatprogs/exfatprogs/pull/239"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/version.h||include/version.h": [
          "File: include/version.h -> include/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: #ifndef _VERSION_H",
          "",
          "[Removed Lines]",
          "8: #define EXFAT_PROGS_VERSION \"1.2.1\"",
          "",
          "[Added Lines]",
          "8: #define EXFAT_PROGS_VERSION \"1.2.2\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}