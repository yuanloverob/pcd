{
  "cve_id": "CVE-2019-12449",
  "cve_desc": "An issue was discovered in GNOME gvfs 1.29.4 through 1.41.2. daemon/gvfsbackendadmin.c mishandles a file's user and group ownership during move (and copy with G_FILE_COPY_ALL_METADATA) operations from admin:// to file:// URIs, because root privileges are unavailable.",
  "repo": "GNOME/gvfs",
  "patch_hash": "409619412e11be146a31b9a99ed965925f1aabb8",
  "patch_info": {
    "commit_hash": "409619412e11be146a31b9a99ed965925f1aabb8",
    "repo": "GNOME/gvfs",
    "commit_url": "https://github.com/GNOME/gvfs/commit/409619412e11be146a31b9a99ed965925f1aabb8",
    "files": [
      "daemon/gvfsbackendadmin.c"
    ],
    "message": "admin: Ensure correct ownership when moving to file:// uri\n\nUser and group is not restored properly when moving (or copying with\nG_FILE_COPY_ALL_METADATA) from admin:// to file://, because it is handled\nby GIO fallback code, which doesn't run with root permissions. Let's\nhandle this case with pull method to ensure correct ownership.",
    "before_after_code_files": [
      "daemon/gvfsbackendadmin.c||daemon/gvfsbackendadmin.c"
    ]
  },
  "patch_diff": {
    "daemon/gvfsbackendadmin.c||daemon/gvfsbackendadmin.c": [
      "File: daemon/gvfsbackendadmin.c -> daemon/gvfsbackendadmin.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "807:   complete_job (job, error);",
      "808: }",
      "810: static void",
      "811: do_query_settable_attributes (GVfsBackend *backend,",
      "812:                               GVfsJobQueryAttributes *query_job,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "810: static void",
      "811: do_pull (GVfsBackend *backend,",
      "812:          GVfsJobPull *pull_job,",
      "813:          const char *source,",
      "814:          const char *local_path,",
      "815:          GFileCopyFlags flags,",
      "816:          gboolean remove_source,",
      "817:          GFileProgressCallback progress_callback,",
      "818:          gpointer progress_callback_data)",
      "819: {",
      "820:   GVfsBackendAdmin *self = G_VFS_BACKEND_ADMIN (backend);",
      "821:   GVfsJob *job = G_VFS_JOB (pull_job);",
      "822:   GError *error = NULL;",
      "823:   GFile *src_file, *dst_file;",
      "828:   if (!(flags & G_FILE_COPY_ALL_METADATA))",
      "829:     {",
      "830:       g_vfs_job_failed_literal (G_VFS_JOB (job), G_IO_ERROR,",
      "831:                                 G_IO_ERROR_NOT_SUPPORTED,",
      "832:                                 _(\"Operation not supported\"));",
      "833:       return;",
      "834:     }",
      "836:   if (!check_permission (self, job))",
      "837:     return;",
      "839:   src_file = g_file_new_for_path (source);",
      "840:   dst_file = g_file_new_for_path (local_path);",
      "842:   if (remove_source)",
      "843:     g_file_move (src_file, dst_file, flags, job->cancellable,",
      "844:                  progress_callback, progress_callback_data, &error);",
      "845:   else",
      "846:     g_file_copy (src_file, dst_file, flags, job->cancellable,",
      "847:                  progress_callback, progress_callback_data, &error);",
      "849:   g_object_unref (src_file);",
      "850:   g_object_unref (dst_file);",
      "852:   complete_job (job, error);",
      "853: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "927:   backend_class->set_attribute = do_set_attribute;",
      "928:   backend_class->delete = do_delete;",
      "929:   backend_class->move = do_move;",
      "930:   backend_class->query_settable_attributes = do_query_settable_attributes;",
      "931:   backend_class->query_writable_namespaces = do_query_writable_namespaces;",
      "932: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "975:   backend_class->pull = do_pull;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ec939a01c278d1aaa47153f51b5c5f0887738dd9",
      "candidate_info": {
        "commit_hash": "ec939a01c278d1aaa47153f51b5c5f0887738dd9",
        "repo": "GNOME/gvfs",
        "commit_url": "https://github.com/GNOME/gvfs/commit/ec939a01c278d1aaa47153f51b5c5f0887738dd9",
        "files": [
          "daemon/gvfsbackendadmin.c"
        ],
        "message": "admin: Ensure correct ownership when moving to file:// uri\n\nUser and group is not restored properly when moving (or copying with\nG_FILE_COPY_ALL_METADATA) from admin:// to file://, because it is handled\nby GIO fallback code, which doesn't run with root permissions. Let's\nhandle this case with pull method to ensure correct ownership.",
        "before_after_code_files": [
          "daemon/gvfsbackendadmin.c||daemon/gvfsbackendadmin.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "daemon/gvfsbackendadmin.c||daemon/gvfsbackendadmin.c"
          ],
          "candidate": [
            "daemon/gvfsbackendadmin.c||daemon/gvfsbackendadmin.c"
          ]
        }
      },
      "candidate_diff": {
        "daemon/gvfsbackendadmin.c||daemon/gvfsbackendadmin.c": [
          "File: daemon/gvfsbackendadmin.c -> daemon/gvfsbackendadmin.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "807:   complete_job (job, error);",
          "808: }",
          "810: static void",
          "811: do_query_settable_attributes (GVfsBackend *backend,",
          "812:                               GVfsJobQueryAttributes *query_job,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "810: static void",
          "811: do_pull (GVfsBackend *backend,",
          "812:          GVfsJobPull *pull_job,",
          "813:          const char *source,",
          "814:          const char *local_path,",
          "815:          GFileCopyFlags flags,",
          "816:          gboolean remove_source,",
          "817:          GFileProgressCallback progress_callback,",
          "818:          gpointer progress_callback_data)",
          "819: {",
          "820:   GVfsBackendAdmin *self = G_VFS_BACKEND_ADMIN (backend);",
          "821:   GVfsJob *job = G_VFS_JOB (pull_job);",
          "822:   GError *error = NULL;",
          "823:   GFile *src_file, *dst_file;",
          "828:   if (!(flags & G_FILE_COPY_ALL_METADATA))",
          "829:     {",
          "830:       g_vfs_job_failed_literal (G_VFS_JOB (job), G_IO_ERROR,",
          "831:                                 G_IO_ERROR_NOT_SUPPORTED,",
          "832:                                 _(\"Operation not supported\"));",
          "833:       return;",
          "834:     }",
          "836:   if (!check_permission (self, job))",
          "837:     return;",
          "839:   src_file = g_file_new_for_path (source);",
          "840:   dst_file = g_file_new_for_path (local_path);",
          "842:   if (remove_source)",
          "843:     g_file_move (src_file, dst_file, flags, job->cancellable,",
          "844:                  progress_callback, progress_callback_data, &error);",
          "845:   else",
          "846:     g_file_copy (src_file, dst_file, flags, job->cancellable,",
          "847:                  progress_callback, progress_callback_data, &error);",
          "849:   g_object_unref (src_file);",
          "850:   g_object_unref (dst_file);",
          "852:   complete_job (job, error);",
          "853: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "927:   backend_class->set_attribute = do_set_attribute;",
          "928:   backend_class->delete = do_delete;",
          "929:   backend_class->move = do_move;",
          "930:   backend_class->query_settable_attributes = do_query_settable_attributes;",
          "931:   backend_class->query_writable_namespaces = do_query_writable_namespaces;",
          "932: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "975:   backend_class->pull = do_pull;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bed1e9685c9f65f6a3ff3b39dd8547db3e7e77f6",
      "candidate_info": {
        "commit_hash": "bed1e9685c9f65f6a3ff3b39dd8547db3e7e77f6",
        "repo": "GNOME/gvfs",
        "commit_url": "https://github.com/GNOME/gvfs/commit/bed1e9685c9f65f6a3ff3b39dd8547db3e7e77f6",
        "files": [
          "daemon/gvfsbackendadmin.c"
        ],
        "message": "admin: Ensure correct ownership when moving to file:// uri\n\nUser and group is not restored properly when moving (or copying with\nG_FILE_COPY_ALL_METADATA) from admin:// to file://, because it is handled\nby GIO fallback code, which doesn't run with root permissions. Let's\nhandle this case with pull method to ensure correct ownership.",
        "before_after_code_files": [
          "daemon/gvfsbackendadmin.c||daemon/gvfsbackendadmin.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "daemon/gvfsbackendadmin.c||daemon/gvfsbackendadmin.c"
          ],
          "candidate": [
            "daemon/gvfsbackendadmin.c||daemon/gvfsbackendadmin.c"
          ]
        }
      },
      "candidate_diff": {
        "daemon/gvfsbackendadmin.c||daemon/gvfsbackendadmin.c": [
          "File: daemon/gvfsbackendadmin.c -> daemon/gvfsbackendadmin.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "807:   complete_job (job, error);",
          "808: }",
          "810: static void",
          "811: do_query_settable_attributes (GVfsBackend *backend,",
          "812:                               GVfsJobQueryAttributes *query_job,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "810: static void",
          "811: do_pull (GVfsBackend *backend,",
          "812:          GVfsJobPull *pull_job,",
          "813:          const char *source,",
          "814:          const char *local_path,",
          "815:          GFileCopyFlags flags,",
          "816:          gboolean remove_source,",
          "817:          GFileProgressCallback progress_callback,",
          "818:          gpointer progress_callback_data)",
          "819: {",
          "820:   GVfsBackendAdmin *self = G_VFS_BACKEND_ADMIN (backend);",
          "821:   GVfsJob *job = G_VFS_JOB (pull_job);",
          "822:   GError *error = NULL;",
          "823:   GFile *src_file, *dst_file;",
          "828:   if (!(flags & G_FILE_COPY_ALL_METADATA))",
          "829:     {",
          "830:       g_vfs_job_failed_literal (G_VFS_JOB (job), G_IO_ERROR,",
          "831:                                 G_IO_ERROR_NOT_SUPPORTED,",
          "832:                                 _(\"Operation not supported\"));",
          "833:       return;",
          "834:     }",
          "836:   if (!check_permission (self, job))",
          "837:     return;",
          "839:   src_file = g_file_new_for_path (source);",
          "840:   dst_file = g_file_new_for_path (local_path);",
          "842:   if (remove_source)",
          "843:     g_file_move (src_file, dst_file, flags, job->cancellable,",
          "844:                  progress_callback, progress_callback_data, &error);",
          "845:   else",
          "846:     g_file_copy (src_file, dst_file, flags, job->cancellable,",
          "847:                  progress_callback, progress_callback_data, &error);",
          "849:   g_object_unref (src_file);",
          "850:   g_object_unref (dst_file);",
          "852:   complete_job (job, error);",
          "853: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "927:   backend_class->set_attribute = do_set_attribute;",
          "928:   backend_class->delete = do_delete;",
          "929:   backend_class->move = do_move;",
          "930:   backend_class->query_settable_attributes = do_query_settable_attributes;",
          "931:   backend_class->query_writable_namespaces = do_query_writable_namespaces;",
          "932: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "975:   backend_class->pull = do_pull;",
          "",
          "---------------"
        ]
      }
    }
  ]
}