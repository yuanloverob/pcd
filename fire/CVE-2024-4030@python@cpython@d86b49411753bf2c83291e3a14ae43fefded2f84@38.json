{
  "cve_id": "CVE-2024-4030",
  "cve_desc": "On Windows a directory returned by tempfile.mkdtemp() would not always have permissions set to restrict reading and writing to the temporary directory by other users, instead usually inheriting the correct permissions from the default location. Alternate configurations or users without a profile directory may not have the intended permissions.\n\nIf you\u2019re not using Windows or haven\u2019t changed the temporary directory location then you aren\u2019t affected by this vulnerability. On other platforms the returned directory is consistently readable and writable only by the current user.\n\nThis issue was caused by Python not supporting Unix permissions on Windows. The fix adds support for Unix \u201c700\u201d for the mkdir function on Windows which is used by mkdtemp() to ensure the newly created directory has the proper permissions.",
  "repo": "python/cpython",
  "patch_hash": "d86b49411753bf2c83291e3a14ae43fefded2f84",
  "patch_info": {
    "commit_hash": "d86b49411753bf2c83291e3a14ae43fefded2f84",
    "repo": "python/cpython",
    "commit_url": "https://github.com/python/cpython/commit/d86b49411753bf2c83291e3a14ae43fefded2f84",
    "files": [
      "Doc/whatsnew/3.13.rst",
      "Misc/NEWS.d/next/Security/2024-05-01-20-57-09.gh-issue-118486.K44KJG.rst"
    ],
    "message": "gh-118486: Update docs for CVE-2024-4030 reference (GH-118737)\n\nUpdate docs for CVE-2024-4030 reference",
    "before_after_code_files": []
  },
  "patch_diff": {},
  "candidates": [
    {
      "candidate_hash": "4480dd86d917dffbf020e68446579bfa48c8eb25",
      "candidate_info": {
        "commit_hash": "4480dd86d917dffbf020e68446579bfa48c8eb25",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/4480dd86d917dffbf020e68446579bfa48c8eb25",
        "files": [
          "Misc/NEWS.d/next/Core and Builtins/2024-05-09-19-47-12.gh-issue-117657.Vn0Yey.rst",
          "Python/pystate.c",
          "Tools/tsan/suppressions_free_threading.txt"
        ],
        "message": "[3.13] gh-117657: Fix data races reported by TSAN on `interp->threads.main` (GH-118865) (#118904)\n\nUse relaxed loads/stores when reading/writing to this field.\n(cherry picked from commit 22d5185308f85efa22ec1e8251c409fe1cbd9e6b)\n\nCo-authored-by: mpage <mpage@meta.com>",
        "before_after_code_files": [
          "Python/pystate.c||Python/pystate.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Python/pystate.c||Python/pystate.c": [
          "File: Python/pystate.c -> Python/pystate.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1038: }",
          "1039: #endif",
          "1042: int",
          "1043: _PyInterpreterState_SetRunningMain(PyInterpreterState *interp)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1041: static inline void",
          "1042: set_main_thread(PyInterpreterState *interp, PyThreadState *tstate)",
          "1043: {",
          "1044:     _Py_atomic_store_ptr_relaxed(&interp->threads.main, tstate);",
          "1045: }",
          "1047: static inline PyThreadState *",
          "1048: get_main_thread(PyInterpreterState *interp)",
          "1049: {",
          "1050:     return _Py_atomic_load_ptr_relaxed(&interp->threads.main);",
          "1051: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1052:                         \"current tstate has wrong interpreter\");",
          "1053:         return -1;",
          "1054:     }",
          "1056:     return 0;",
          "1057: }",
          "1059: void",
          "1060: _PyInterpreterState_SetNotRunningMain(PyInterpreterState *interp)",
          "1061: {",
          "1064: }",
          "1066: int",
          "1067: _PyInterpreterState_IsRunningMain(PyInterpreterState *interp)",
          "1068: {",
          "1070:         return 1;",
          "1071:     }",
          "",
          "[Removed Lines]",
          "1055:     interp->threads.main = tstate;",
          "1062:     assert(interp->threads.main == current_fast_get());",
          "1063:     interp->threads.main = NULL;",
          "1069:     if (interp->threads.main != NULL) {",
          "",
          "[Added Lines]",
          "1066:     set_main_thread(interp, tstate);",
          "1074:     assert(get_main_thread(interp) == current_fast_get());",
          "1075:     set_main_thread(interp, NULL);",
          "1081:     if (get_main_thread(interp) != NULL) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1082: _PyThreadState_IsRunningMain(PyThreadState *tstate)",
          "1083: {",
          "1084:     PyInterpreterState *interp = tstate->interp;",
          "1091: }",
          "1093: int",
          "1094: _PyInterpreterState_FailIfRunningMain(PyInterpreterState *interp)",
          "1095: {",
          "1097:         PyErr_SetString(PyExc_InterpreterError,",
          "1098:                         \"interpreter already running\");",
          "1099:         return -1;",
          "",
          "[Removed Lines]",
          "1085:     if (interp->threads.main != NULL) {",
          "1086:         return tstate == interp->threads.main;",
          "1087:     }",
          "1090:     return 0;",
          "1096:     if (interp->threads.main != NULL) {",
          "",
          "[Added Lines]",
          "1099:     return get_main_thread(interp) == tstate;",
          "1105:     if (get_main_thread(interp) != NULL) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1105: _PyInterpreterState_ReinitRunningMain(PyThreadState *tstate)",
          "1106: {",
          "1107:     PyInterpreterState *interp = tstate->interp;",
          "1110:     }",
          "1111: }",
          "",
          "[Removed Lines]",
          "1108:     if (interp->threads.main != tstate) {",
          "1109:         interp->threads.main = NULL;",
          "",
          "[Added Lines]",
          "1117:     if (get_main_thread(interp) != tstate) {",
          "1118:         set_main_thread(interp, NULL);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "17188270b6e6671ab721235745ad9f3ab0a7a8d8",
      "candidate_info": {
        "commit_hash": "17188270b6e6671ab721235745ad9f3ab0a7a8d8",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/17188270b6e6671ab721235745ad9f3ab0a7a8d8",
        "files": [
          "Python/instrumentation.c"
        ],
        "message": "[3.13] gh-117657: Fix some simple races in instrumentation.c (GH-120118) (#120444)\n\ngh-117657: Fix some simple races in instrumentation.c (GH-120118)\n\n* stop the world when setting local events\n(cherry picked from commit b1b61dc4cee43920ef2b08d5ac94ddf08119c507)\n\nCo-authored-by: Ken Jin <kenjin@python.org>",
        "before_after_code_files": [
          "Python/instrumentation.c||Python/instrumentation.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Python/instrumentation.c||Python/instrumentation.c": [
          "File: Python/instrumentation.c -> Python/instrumentation.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1977:     }",
          "1979:     int res;",
          "1981:     if (allocate_instrumentation_data(code)) {",
          "1982:         res = -1;",
          "1983:         goto done;",
          "",
          "[Removed Lines]",
          "1980:     LOCK_CODE(code);",
          "",
          "[Added Lines]",
          "1980:     _PyEval_StopTheWorld(interp);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1994:     res = force_instrument_lock_held(code, interp);",
          "1996: done:",
          "1998:     return res;",
          "1999: }",
          "",
          "[Removed Lines]",
          "1997:     UNLOCK_CODE();",
          "",
          "[Added Lines]",
          "1997:     _PyEval_StartTheWorld(interp);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6e67fd5beaa26cd80d43a258c14f6044803d33fa",
      "candidate_info": {
        "commit_hash": "6e67fd5beaa26cd80d43a258c14f6044803d33fa",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/6e67fd5beaa26cd80d43a258c14f6044803d33fa",
        "files": [
          "Python/pylifecycle.c"
        ],
        "message": "[3.13] gh-111499: Fix PYTHONMALLOCSTATS at Python exit (GH-120021) (#120022)\n\ngh-111499: Fix PYTHONMALLOCSTATS at Python exit (GH-120021)\n\nCall _PyObject_DebugMallocStats() earlier in Py_FinalizeEx(), before\nthe interpreter is deleted.\n(cherry picked from commit 5a1205b641df133932ed4c65b9a4ff5724e89963)\n\nCo-authored-by: Victor Stinner <vstinner@python.org>",
        "before_after_code_files": [
          "Python/pylifecycle.c||Python/pylifecycle.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Python/pylifecycle.c||Python/pylifecycle.c": [
          "File: Python/pylifecycle.c -> Python/pylifecycle.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2119:     }",
          "2122:     finalize_interp_delete(tstate->interp);",
          "2124: #ifdef Py_REF_DEBUG",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2122: #ifdef WITH_PYMALLOC",
          "2123:     if (malloc_stats) {",
          "2124:         _PyObject_DebugMallocStats(stderr);",
          "2125:     }",
          "2126: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2129: #endif",
          "2130:     _Py_FinalizeAllocatedBlocks(runtime);",
          "2138:     call_ll_exitfuncs(runtime);",
          "2140:     _PyRuntime_Finalize();",
          "",
          "[Removed Lines]",
          "2132: #ifdef WITH_PYMALLOC",
          "2133:     if (malloc_stats) {",
          "2134:         _PyObject_DebugMallocStats(stderr);",
          "2135:     }",
          "2136: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "29a2f9cc286f6cef8a359fc7022fe9d480a2eb79",
      "candidate_info": {
        "commit_hash": "29a2f9cc286f6cef8a359fc7022fe9d480a2eb79",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/29a2f9cc286f6cef8a359fc7022fe9d480a2eb79",
        "files": [
          "Misc/NEWS.d/next/Build/2024-05-13-15-57-58.gh-issue-118836.7yN1iB.rst",
          "Tools/jit/_targets.py"
        ],
        "message": "[3.13] GH-118836: Fix JIT build error when SHT_NOTE section is present (GH-119020)\n\n(cherry picked from commit e04cd964eb4eee1b0ae5b2c34727abce6c0fb7f0)\n\nCo-authored-by: Micha\u0142 G\u00f3rny <mgorny@gentoo.org>",
        "before_after_code_files": [
          "Tools/jit/_targets.py||Tools/jit/_targets.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Tools/jit/_targets.py||Tools/jit/_targets.py": [
          "File: Tools/jit/_targets.py -> Tools/jit/_targets.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "349:             assert section_type in {",
          "350:                 \"SHT_GROUP\",",
          "351:                 \"SHT_LLVM_ADDRSIG\",",
          "352:                 \"SHT_NULL\",",
          "353:                 \"SHT_STRTAB\",",
          "354:                 \"SHT_SYMTAB\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "352:                 \"SHT_NOTE\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d26ce50f7bd59aa0bf6d1659ff96fb3a9075ff38",
      "candidate_info": {
        "commit_hash": "d26ce50f7bd59aa0bf6d1659ff96fb3a9075ff38",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/d26ce50f7bd59aa0bf6d1659ff96fb3a9075ff38",
        "files": [
          "Misc/NEWS.d/next/Build/2024-06-21-09-24-03.gh-issue-120671.Z8sBQB.rst",
          "configure",
          "configure.ac"
        ],
        "message": "[3.13] gh-120671: Fix PY_CHECK_CC_WARNING() in configure.ac (GH-120822) (#120985)\n\ngh-120671: Fix PY_CHECK_CC_WARNING() in configure.ac (GH-120822)\n\nAdd missing space in AS_VAR_APPEND() on CFLAGS.\n(cherry picked from commit 2106c9bef0c18ff35db7d6c083cb8f189507758e)\n\nCo-authored-by: Michael Allwright <allsey87@gmail.com>",
        "before_after_code_files": [
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "2432:   AS_VAR_PUSHDEF([py_var], [ac_cv_$1_]m4_normalize($2)[_warning])",
          "2433:   AC_CACHE_CHECK([m4_ifblank([$3], [if we can $1 $CC $2 warning], [$3])], [py_var], [",
          "2434:     AS_VAR_COPY([py_cflags], [CFLAGS])",
          "2436:     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[]])],",
          "2437:                       [AS_VAR_SET([py_var], [yes])],",
          "2438:                       [AS_VAR_SET([py_var], [no])])",
          "",
          "[Removed Lines]",
          "2435:     AS_VAR_APPEND([CFLAGS], [\"-W$2 -Werror\"])",
          "",
          "[Added Lines]",
          "2435:     AS_VAR_APPEND([CFLAGS], [\" -W$2 -Werror\"])",
          "",
          "---------------"
        ]
      }
    }
  ]
}