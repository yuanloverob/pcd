{
  "cve_id": "CVE-2023-34105",
  "cve_desc": "SRS is a real-time video server supporting RTMP, WebRTC, HLS, HTTP-FLV, SRT, MPEG-DASH, and GB28181. Prior to versions 5.0.157, 5.0-b1, and 6.0.48, SRS's `api-server` server is vulnerable to a drive-by command injection. An attacker may send a request to the `/api/v1/snapshots` endpoint containing any commands to be executed as part of the body of the POST request. This issue may lead to Remote Code Execution (RCE). Versions 5.0.157, 5.0-b1, and 6.0.48 contain a fix.",
  "repo": "ossrs/srs",
  "patch_hash": "1d878c2daaf913ad01c6d0bc2f247116c8050338",
  "patch_info": {
    "commit_hash": "1d878c2daaf913ad01c6d0bc2f247116c8050338",
    "repo": "ossrs/srs",
    "commit_url": "https://github.com/ossrs/srs/commit/1d878c2daaf913ad01c6d0bc2f247116c8050338",
    "files": [
      "trunk/doc/CHANGELOG.md",
      "trunk/research/api-server/server.go",
      "trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp"
    ],
    "message": "Fix command injection in api-server for HTTP callback. v5.0.157, v6.0.48",
    "before_after_code_files": [
      "trunk/research/api-server/server.go||trunk/research/api-server/server.go",
      "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
    ]
  },
  "patch_diff": {
    "trunk/research/api-server/server.go||trunk/research/api-server/server.go": [
      "File: trunk/research/api-server/server.go -> trunk/research/api-server/server.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "400:  normalPicPath := path.Join(outputPicDir, fmt.Sprintf(\"%v\", v.Stream)+\"-%03d.png\")",
      "401:  bestPng := path.Join(outputPicDir, fmt.Sprintf(\"%v-best.png\", v.Stream))",
      "405:  timeoutCtx, _ := context.WithTimeout(v.cancelCtx, v.timeout)",
      "407:  if err = cmd.Run(); err != nil {",
      "408:   log.Println(fmt.Sprintf(\"run snapshot %v cmd failed, err is %v\", v.Tag(), err))",
      "409:   return",
      "",
      "[Removed Lines]",
      "403:  param := fmt.Sprintf(\"%v -i %v -vf fps=1 -vcodec png -f image2 -an -y -vframes %v -y %v\", ffmpegPath, inputUrl, v.vframes, normalPicPath)",
      "404:  log.Println(fmt.Sprintf(\"start snapshot, cmd param=%v\", param))",
      "406:  cmd := exec.CommandContext(timeoutCtx, \"/bin/bash\", \"-c\", param)",
      "",
      "[Added Lines]",
      "403:  params := []string{",
      "404:   \"-i\", inputUrl,",
      "405:   \"-vf\", \"fps=1\",",
      "406:   \"-vcodec\", \"png\",",
      "407:   \"-f\", \"image2\",",
      "408:   \"-an\",",
      "409:   \"-vframes\", strconv.Itoa(v.vframes),",
      "410:   \"-y\", normalPicPath,",
      "411:  }",
      "412:  log.Println(fmt.Sprintf(\"start snapshot, cmd param=%v %v\", ffmpegPath, strings.Join(params, \" \")))",
      "414:  cmd := exec.CommandContext(timeoutCtx, ffmpegPath, params...)",
      "",
      "---------------"
    ],
    "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
      "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       5",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    156",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    157",
      "",
      "---------------"
    ],
    "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
      "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       6",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    47",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    48",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a2324a620ae8d7d9f91984030da44deac9b81447",
      "candidate_info": {
        "commit_hash": "a2324a620ae8d7d9f91984030da44deac9b81447",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/a2324a620ae8d7d9f91984030da44deac9b81447",
        "files": [
          "trunk/auto/options.sh",
          "trunk/configure",
          "trunk/doc/CHANGELOG.md",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "Support configure with --extra-ldflags. v5.0.199 v6.0.99 (#3879)\n\n1. add --extra-ldflags\n2. support  commas in configure file\n3. support link system library for utest\n\n```\n./configure --extra-ldflags=-Wl,-z,now\n```",
        "before_after_code_files": [
          "trunk/auto/options.sh||trunk/auto/options.sh",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/auto/options.sh||trunk/auto/options.sh": [
          "File: trunk/auto/options.sh -> trunk/auto/options.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "119: SRS_TOOL_LD=ld",
          "120: SRS_TOOL_RANDLIB=randlib",
          "121: SRS_EXTRA_FLAGS=",
          "122: #",
          "123: #####################################################################################",
          "124: # Performance optimize.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "122: SRS_EXTRA_LDFLAGS=",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "209:   --ld=<LD>                 Toolchain: Use linker tool LD. Default: $SRS_TOOL_CXX",
          "210:   --randlib=<RANDLIB>       Toolchain: Use randlib tool RANDLIB. Default: $SRS_TOOL_CXX",
          "211:   --extra-flags=<EFLAGS>    Set EFLAGS as CFLAGS and CXXFLAGS. Also passed to ST as EXTRA_CFLAGS.",
          "213: Cross Build options:        @see https://ossrs.net/lts/zh-cn/docs/v4/doc/arm#ubuntu-cross-build-srs",
          "214:   --cross=on|off            Enable cross-build, please set bellow Toolchain also. Default: $(value2switch $SRS_CROSS_BUILD)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "213:   --extra-ldflags=<ELDFLAGS> Set ELDFLAGS as LDFLAGS.",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "313:         --ld)                           SRS_TOOL_LD=${value}        ;;",
          "314:         --randlib)                      SRS_TOOL_RANDLIB=${value}   ;;",
          "315:         --extra-flags)                  SRS_EXTRA_FLAGS=${value}    ;;",
          "316:         --build-tag)                    SRS_BUILD_TAG=${value}      ;;",
          "318:         --srtp-nasm)                    SRS_SRTP_ASM=$(switch2value $value) ;;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "318:         --extra-ldflags)                SRS_EXTRA_LDFLAGS=${value}  ;;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "442:     case \"$option\" in",
          "443:         -*=*)",
          "444:             value=`echo \"$option\" | sed -e 's|[-_a-zA-Z0-9/]*=||'`",
          "446:         ;;",
          "448:     esac",
          "",
          "[Removed Lines]",
          "445:             option=`echo \"$option\" | sed -e 's|=[-_a-zA-Z0-9/. +]*||'`",
          "",
          "[Added Lines]",
          "448:             option=`echo \"$option\" | sed -e 's|=[,-_a-zA-Z0-9/. +]*||'`",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "684:     if [[ $SRS_CROSS_BUILD_HOST != \"\" ]]; then SRS_AUTO_CONFIGURE=\"$SRS_AUTO_CONFIGURE --host=$SRS_CROSS_BUILD_HOST\"; fi",
          "685:     if [[ $SRS_CROSS_BUILD_PREFIX != \"\" ]]; then SRS_AUTO_CONFIGURE=\"$SRS_AUTO_CONFIGURE --cross-prefix=$SRS_CROSS_BUILD_PREFIX\"; fi",
          "686:     if [[ $SRS_EXTRA_FLAGS != '' ]]; then   SRS_AUTO_CONFIGURE=\"${SRS_AUTO_CONFIGURE} --extra-flags=\\\\\\\"$SRS_EXTRA_FLAGS\\\\\\\"\"; fi",
          "687:     if [[ $SRS_BUILD_TAG != '' ]]; then     SRS_AUTO_CONFIGURE=\"${SRS_AUTO_CONFIGURE} --build-tag=\\\\\\\"$SRS_BUILD_TAG\\\\\\\"\"; fi",
          "688:     if [[ $SRS_TOOL_CC != '' ]]; then       SRS_AUTO_CONFIGURE=\"${SRS_AUTO_CONFIGURE} --cc=$SRS_TOOL_CC\"; fi",
          "689:     if [[ $SRS_TOOL_CXX != '' ]]; then      SRS_AUTO_CONFIGURE=\"${SRS_AUTO_CONFIGURE} --cxx=$SRS_TOOL_CXX\"; fi",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "690:     if [[ $SRS_EXTRA_LDFLAGS != '' ]]; then SRS_AUTO_CONFIGURE=\"${SRS_AUTO_CONFIGURE} --extra-ldflags=\\\\\\\"$SRS_EXTRA_LDFLAGS\\\\\\\"\"; fi",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    198",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    199",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    98",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    99",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6d56c407c638cd1ae39822e611354b24312d448e",
      "candidate_info": {
        "commit_hash": "6d56c407c638cd1ae39822e611354b24312d448e",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/6d56c407c638cd1ae39822e611354b24312d448e",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_http_static.cpp",
          "trunk/src/app/srs_app_http_static.hpp",
          "trunk/src/app/srs_app_http_stream.cpp",
          "trunk/src/app/srs_app_http_stream.hpp",
          "trunk/src/app/srs_app_rtc_api.cpp",
          "trunk/src/app/srs_app_rtc_api.hpp",
          "trunk/src/app/srs_app_security.cpp",
          "trunk/src/app/srs_app_srt_conn.cpp",
          "trunk/src/app/srs_app_srt_conn.hpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "Security: Support IP whitelist for HTTP-FLV, HLS, WebRTC, and SRT. v5.0.202 v6.0.104 (#3902)\n\nSecurity is the built-in IP whitelist feature of SRS, which allows and\ndenies certain IP and IP range users. Previously, it only supported\nRTMP, but this PR now supports HTTP-FLV, HLS, WebRTC, SRT, and other\nprotocols.\n\nSee https://ossrs.io/lts/en-us/docs/v6/doc/security as example.\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_http_static.cpp||trunk/src/app/srs_app_http_static.cpp",
          "trunk/src/app/srs_app_http_static.hpp||trunk/src/app/srs_app_http_static.hpp",
          "trunk/src/app/srs_app_http_stream.cpp||trunk/src/app/srs_app_http_stream.cpp",
          "trunk/src/app/srs_app_http_stream.hpp||trunk/src/app/srs_app_http_stream.hpp",
          "trunk/src/app/srs_app_rtc_api.cpp||trunk/src/app/srs_app_rtc_api.cpp",
          "trunk/src/app/srs_app_rtc_api.hpp||trunk/src/app/srs_app_rtc_api.hpp",
          "trunk/src/app/srs_app_security.cpp||trunk/src/app/srs_app_security.cpp",
          "trunk/src/app/srs_app_srt_conn.cpp||trunk/src/app/srs_app_srt_conn.cpp",
          "trunk/src/app/srs_app_srt_conn.hpp||trunk/src/app/srs_app_srt_conn.hpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_http_static.cpp||trunk/src/app/srs_app_http_static.cpp": [
          "File: trunk/src/app/srs_app_http_static.cpp -> trunk/src/app/srs_app_http_static.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "64: SrsHlsStream::SrsHlsStream()",
          "65: {",
          "66:     _srs_hybrid->timer5s()->subscribe(this);",
          "67: }",
          "69: SrsHlsStream::~SrsHlsStream()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "67:     security_ = new SrsSecurity();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:         srs_freep(info);",
          "77:     }",
          "78:     map_ctx_info_.clear();",
          "79: }",
          "81: srs_error_t SrsHlsStream::serve_m3u8_ctx(ISrsHttpResponseWriter* w, ISrsHttpMessage* r, ISrsFileReaderFactory* factory, string fullpath, SrsRequest* req, bool* served)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80:     srs_freep(security_);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "167:         return srs_error_wrap(err, \"stat on client\");",
          "168:     }",
          "171:     if ((err = http_hooks_on_play(req)) != srs_success) {",
          "172:         return srs_error_wrap(err, \"HLS: http_hooks_on_play\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "172:     if ((err = security_->check(SrsHlsPlay, req->ip, req)) != srs_success) {",
          "173:         return srs_error_wrap(err, \"HLS: security check\");",
          "174:     }",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_http_static.hpp||trunk/src/app/srs_app_http_static.hpp": [
          "File: trunk/src/app/srs_app_http_static.hpp -> trunk/src/app/srs_app_http_static.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: #define SRS_APP_HTTP_STATIC_HPP",
          "10: #include <srs_core.hpp>",
          "12: #include <srs_app_http_conn.hpp>",
          "14: class ISrsFileReaderFactory;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: #include <srs_app_security.hpp>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53: private:",
          "54:     srs_error_t on_timer(srs_utime_t interval);",
          "55: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55: private:",
          "56:     SrsSecurity* security_;",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_http_stream.cpp||trunk/src/app/srs_app_http_stream.cpp": [
          "File: trunk/src/app/srs_app_http_stream.cpp -> trunk/src/app/srs_app_http_stream.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "558:     source = s;",
          "559:     cache = c;",
          "560:     req = r->copy()->as_http();",
          "561: }",
          "563: SrsLiveStream::~SrsLiveStream()",
          "564: {",
          "565:     srs_freep(req);",
          "566: }",
          "568: srs_error_t SrsLiveStream::update_auth(SrsLiveSource* s, SrsRequest* r)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "561:     security_ = new SrsSecurity();",
          "567:     srs_freep(security_);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "600:         return srs_error_wrap(err, \"stat on client\");",
          "601:     }",
          "604:     if ((err = http_hooks_on_play(r)) != srs_success) {",
          "605:         return srs_error_wrap(err, \"http hook\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "605:     if ((err = security_->check(SrsFlvPlay, req->ip, req)) != srs_success) {",
          "606:         return srs_error_wrap(err, \"flv: security check\");",
          "607:     }",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_http_stream.hpp||trunk/src/app/srs_app_http_stream.hpp": [
          "File: trunk/src/app/srs_app_http_stream.hpp -> trunk/src/app/srs_app_http_stream.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: #define SRS_APP_HTTP_STREAM_HPP",
          "10: #include <srs_core.hpp>",
          "12: #include <srs_app_http_conn.hpp>",
          "14: class SrsAacTransmuxer;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: #include <srs_app_security.hpp>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "180:     SrsRequest* req;",
          "181:     SrsLiveSource* source;",
          "182:     SrsBufferCache* cache;",
          "183: public:",
          "184:     SrsLiveStream(SrsLiveSource* s, SrsRequest* r, SrsBufferCache* c);",
          "185:     virtual ~SrsLiveStream();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "183:     SrsSecurity* security_;",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_rtc_api.cpp||trunk/src/app/srs_app_rtc_api.cpp": [
          "File: trunk/src/app/srs_app_rtc_api.cpp -> trunk/src/app/srs_app_rtc_api.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: SrsGoApiRtcPlay::SrsGoApiRtcPlay(SrsRtcServer* server)",
          "32: {",
          "33:     server_ = server;",
          "34: }",
          "36: SrsGoApiRtcPlay::~SrsGoApiRtcPlay()",
          "37: {",
          "38: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34:     security_ = new SrsSecurity();",
          "39:     srs_freep(security_);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "228:         }",
          "229:     }",
          "231:     if ((err = http_hooks_on_play(ruc->req_)) != srs_success) {",
          "232:         return srs_error_wrap(err, \"RTC: http_hooks_on_play\");",
          "233:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "233:     if ((err = security_->check(SrsRtcConnPlay, ruc->req_->ip, ruc->req_)) != srs_success) {",
          "234:         return srs_error_wrap(err, \"RTC: security check\");",
          "235:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "324: SrsGoApiRtcPublish::SrsGoApiRtcPublish(SrsRtcServer* server)",
          "325: {",
          "326:     server_ = server;",
          "327: }",
          "329: SrsGoApiRtcPublish::~SrsGoApiRtcPublish()",
          "330: {",
          "331: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "333:     security_ = new SrsSecurity();",
          "338:     srs_freep(security_);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "503:         return srs_error_wrap(err, \"create session\");",
          "504:     }",
          "507:     if ((err = http_hooks_on_publish(ruc->req_)) != srs_success) {",
          "508:         return srs_error_wrap(err, \"RTC: http_hooks_on_publish\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "514:     if ((err = security_->check(SrsRtcConnPublish, ruc->req_->ip, ruc->req_)) != srs_success) {",
          "515:         return srs_error_wrap(err, \"RTC: security check\");",
          "516:     }",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_rtc_api.hpp||trunk/src/app/srs_app_rtc_api.hpp": [
          "File: trunk/src/app/srs_app_rtc_api.hpp -> trunk/src/app/srs_app_rtc_api.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: #define SRS_APP_RTC_API_HPP",
          "10: #include <srs_core.hpp>",
          "12: #include <srs_protocol_http_stack.hpp>",
          "14: class SrsRtcServer;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: #include <srs_app_security.hpp>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20: {",
          "21: private:",
          "22:     SrsRtcServer* server_;",
          "23: public:",
          "24:     SrsGoApiRtcPlay(SrsRtcServer* server);",
          "25:     virtual ~SrsGoApiRtcPlay();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23:     SrsSecurity* security_;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "39: {",
          "40: private:",
          "41:     SrsRtcServer* server_;",
          "42: public:",
          "43:     SrsGoApiRtcPublish(SrsRtcServer* server);",
          "44:     virtual ~SrsGoApiRtcPublish();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43:     SrsSecurity* security_;",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_security.cpp||trunk/src/app/srs_app_security.cpp": [
          "File: trunk/src/app/srs_app_security.cpp -> trunk/src/app/srs_app_security.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:         switch (type) {",
          "77:             case SrsRtmpConnPlay:",
          "79:                 if (rule->arg0() != \"play\") {",
          "80:                     break;",
          "81:                 }",
          "",
          "[Removed Lines]",
          "78:             case SrsRtcConnPlay:",
          "",
          "[Added Lines]",
          "78:             case SrsHlsPlay:",
          "79:             case SrsFlvPlay:",
          "80:             case SrsRtcConnPlay:",
          "81:             case SrsSrtConnPlay:",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90:             case SrsRtmpConnFlashPublish:",
          "91:             case SrsRtmpConnHaivisionPublish:",
          "92:             case SrsRtcConnPublish:",
          "93:                 if (rule->arg0() != \"publish\") {",
          "94:                     break;",
          "95:                 }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "96:             case SrsSrtConnPublish:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "127:         switch (type) {",
          "128:             case SrsRtmpConnPlay:",
          "130:                 if (rule->arg0() != \"play\") {",
          "131:                     break;",
          "132:                 }",
          "",
          "[Removed Lines]",
          "129:             case SrsRtcConnPlay:",
          "",
          "[Added Lines]",
          "133:             case SrsHlsPlay:",
          "134:             case SrsFlvPlay:",
          "135:             case SrsRtcConnPlay:",
          "136:             case SrsSrtConnPlay:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "141:             case SrsRtmpConnFlashPublish:",
          "142:             case SrsRtmpConnHaivisionPublish:",
          "143:             case SrsRtcConnPublish:",
          "144:                 if (rule->arg0() != \"publish\") {",
          "145:                     break;",
          "146:                 }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "151:             case SrsSrtConnPublish:",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_srt_conn.cpp||trunk/src/app/srs_app_srt_conn.cpp": [
          "File: trunk/src/app/srs_app_srt_conn.cpp -> trunk/src/app/srs_app_srt_conn.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "174:     srt_source_ = NULL;",
          "175:     req_ = new SrsRequest();",
          "176:     req_->ip = ip;",
          "177: }",
          "179: SrsMpegtsSrtConn::~SrsMpegtsSrtConn()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "178:     security_ = new SrsSecurity();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "184:     srs_freep(delta_);",
          "185:     srs_freep(srt_conn_);",
          "186:     srs_freep(req_);",
          "187: }",
          "189: std::string SrsMpegtsSrtConn::desc()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "189:     srs_freep(security_);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "311:         return srs_error_wrap(err, \"srt: stat client\");",
          "312:     }",
          "315:     if ((err = http_hooks_on_publish()) != srs_success) {",
          "316:         return srs_error_wrap(err, \"srt: callback on publish\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "317:     if ((err = security_->check(SrsSrtConnPublish, ip_, req_)) != srs_success) {",
          "318:         return srs_error_wrap(err, \"srt: security check\");",
          "319:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "334:     SrsStatistic* stat = SrsStatistic::instance();",
          "335:     if ((err = stat->on_client(_srs_context->get_id().c_str(), req_, this, SrsSrtConnPlay)) != srs_success) {",
          "337:     }",
          "340:     if ((err = http_hooks_on_play()) != srs_success) {",
          "342:     }",
          "344:     err = do_playing();",
          "",
          "[Removed Lines]",
          "336:         return srs_error_wrap(err, \"rtmp: stat client\");",
          "341:         return srs_error_wrap(err, \"rtmp: callback on play\");",
          "",
          "[Added Lines]",
          "343:         return srs_error_wrap(err, \"srt: stat client\");",
          "344:     }",
          "346:     if ((err = security_->check(SrsSrtConnPlay, ip_, req_)) != srs_success) {",
          "347:         return srs_error_wrap(err, \"srt: security check\");",
          "352:         return srs_error_wrap(err, \"srt: callback on play\");",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_srt_conn.hpp||trunk/src/app/srs_app_srt_conn.hpp": [
          "File: trunk/src/app/srs_app_srt_conn.hpp -> trunk/src/app/srs_app_srt_conn.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: #include <srs_app_st.hpp>",
          "17: #include <srs_app_conn.hpp>",
          "18: #include <srs_app_srt_utility.hpp>",
          "20: class SrsBuffer;",
          "21: class SrsLiveSource;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: #include <srs_app_security.hpp>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "124:     SrsRequest* req_;",
          "125:     SrsSrtSource* srt_source_;",
          "126: };",
          "128: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127:     SrsSecurity* security_;",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    201",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    202",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    103",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    104",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bb94d0ff2fa2c783d6e2e2f706ca3476d434460d",
      "candidate_info": {
        "commit_hash": "bb94d0ff2fa2c783d6e2e2f706ca3476d434460d",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/bb94d0ff2fa2c783d6e2e2f706ca3476d434460d",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_rtc_api.cpp",
          "trunk/src/app/srs_app_rtc_server.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/kernel/srs_kernel_error.hpp",
          "trunk/src/protocol/srs_protocol_rtmp_stack.hpp"
        ],
        "message": "Support set the ice-ufrag and ice-pwd for connectivity check. v5.0.191 v6.0.91 (#3837)\n\nChecking the HTTPS API or UDP connectivity for WHIP tests can be\ndifficult. For example, if the UDP port isn't available but the API is\nfine, OBS only says it can't connect to the server. It's hard to see the\nHTTPS API response or check if the UDP port is available.\n\nThis feature lets you set the ice username and password in SRS. You can\nthen send a STUN request using nc and see the response, making it easier\nto check UDP port connectivity.\n\n1. Use curl to test the WHIP API, including ice-frag and ice-pwd\nqueries.\n2. Use nc to send a STUN binding request to test UDP connectivity.\n3. If both the API and UDP are working, you should get a STUN response.\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_rtc_api.cpp||trunk/src/app/srs_app_rtc_api.cpp",
          "trunk/src/app/srs_app_rtc_server.cpp||trunk/src/app/srs_app_rtc_server.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/kernel/srs_kernel_error.hpp||trunk/src/kernel/srs_kernel_error.hpp",
          "trunk/src/protocol/srs_protocol_rtmp_stack.hpp||trunk/src/protocol/srs_protocol_rtmp_stack.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_rtc_api.cpp||trunk/src/app/srs_app_rtc_api.cpp": [
          "File: trunk/src/app/srs_app_rtc_api.cpp -> trunk/src/app/srs_app_rtc_api.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: #include <deque>",
          "21: using namespace std;",
          "23: SrsGoApiRtcPlay::SrsGoApiRtcPlay(SrsRtcServer* server)",
          "24: {",
          "25:     server_ = server;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: #define SRS_ICE_UFRAG_MIN 4",
          "25: #define SRS_ICE_UFRAG_MAX 32",
          "27: #define SRS_ICE_PWD_MIN 22",
          "29: #define SRS_ICE_PWD_MAX 32",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "691:     ruc->req_->stream = stream.empty() ? \"livestream\" : stream;",
          "692:     ruc->req_->param = r->query();",
          "695:     SrsConfDirective* parsed_vhost = _srs_config->get_vhost(ruc->req_->vhost);",
          "696:     if (parsed_vhost) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "702:     ruc->req_->ice_ufrag_ = r->query_get(\"ice-ufrag\");",
          "703:     ruc->req_->ice_pwd_ = r->query_get(\"ice-pwd\");",
          "704:     if (!ruc->req_->ice_ufrag_.empty() && (ruc->req_->ice_ufrag_.length() < SRS_ICE_UFRAG_MIN || ruc->req_->ice_ufrag_.length() > SRS_ICE_UFRAG_MAX)) {",
          "705:         return srs_error_new(ERROR_RTC_INVALID_ICE, \"Invalid ice-ufrag %s\", ruc->req_->ice_ufrag_.c_str());",
          "706:     }",
          "707:     if (!ruc->req_->ice_pwd_.empty() && (ruc->req_->ice_pwd_.length() < SRS_ICE_PWD_MIN || ruc->req_->ice_pwd_.length() > SRS_ICE_PWD_MAX)) {",
          "708:         return srs_error_new(ERROR_RTC_INVALID_ICE, \"Invalid ice-pwd %s\", ruc->req_->ice_pwd_.c_str());",
          "709:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "701:     string srtp = r->query_get(\"encrypt\");",
          "702:     string dtls = r->query_get(\"dtls\");",
          "705:         action.c_str(), ruc->req_->get_stream_url().c_str(), clientip.c_str(), ruc->req_->app.c_str(), ruc->req_->stream.c_str(),",
          "707:     );",
          "709:     ruc->eip_ = eip;",
          "",
          "[Removed Lines]",
          "704:     srs_trace(\"RTC whip %s %s, clientip=%s, app=%s, stream=%s, offer=%dB, eip=%s, codec=%s, srtp=%s, dtls=%s, param=%s\",",
          "706:         remote_sdp_str.length(), eip.c_str(), codec.c_str(), srtp.c_str(), dtls.c_str(), ruc->req_->param.c_str()",
          "",
          "[Added Lines]",
          "721:     srs_trace(\"RTC whip %s %s, clientip=%s, app=%s, stream=%s, offer=%dB, eip=%s, codec=%s, srtp=%s, dtls=%s, ufrag=%s, pwd=%s, param=%s\",",
          "723:         remote_sdp_str.length(), eip.c_str(), codec.c_str(), srtp.c_str(), dtls.c_str(), ruc->req_->ice_ufrag_.c_str(),",
          "724:         ruc->req_->ice_pwd_.c_str(), ruc->req_->param.c_str()",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_rtc_server.cpp||trunk/src/app/srs_app_rtc_server.cpp": [
          "File: trunk/src/app/srs_app_rtc_server.cpp -> trunk/src/app/srs_app_rtc_server.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "544:     session->set_all_tracks_status(req->get_stream_url(), ruc->publish_, true);",
          "549:     std::string username = \"\";",
          "550:     while (true) {",
          "553:         username = local_ufrag + \":\" + ruc->remote_sdp_.get_ice_ufrag();",
          "554:         if (!_srs_rtc_manager->find_by_name(username)) {",
          "555:             break;",
          "556:         }",
          "557:     }",
          "559:     local_sdp.set_ice_ufrag(local_ufrag);",
          "",
          "[Removed Lines]",
          "546:     std::string local_pwd = srs_random_str(32);",
          "547:     std::string local_ufrag = \"\";",
          "551:         local_ufrag = srs_random_str(8);",
          "",
          "[Added Lines]",
          "546:     std::string local_pwd = ruc->req_->ice_pwd_.empty() ? srs_random_str(32) : ruc->req_->ice_pwd_;",
          "547:     std::string local_ufrag = ruc->req_->ice_ufrag_.empty() ? srs_random_str(8) : ruc->req_->ice_ufrag_;",
          "557:         local_ufrag = srs_random_str(8);",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    190",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    191",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    90",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    91",
          "",
          "---------------"
        ],
        "trunk/src/kernel/srs_kernel_error.hpp||trunk/src/kernel/srs_kernel_error.hpp": [
          "File: trunk/src/kernel/srs_kernel_error.hpp -> trunk/src/kernel/srs_kernel_error.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "374:     XX(ERROR_RTC_TCP_PACKET                , 5033, \"RtcTcpStun\", \"RTC TCP first packet must be STUN\") \\",
          "375:     XX(ERROR_RTC_TCP_STUN                  , 5034, \"RtcTcpSession\", \"RTC TCP packet is invalid for session not found\") \\",
          "376:     XX(ERROR_RTC_TCP_UNIQUE                , 5035, \"RtcUnique\", \"RTC only support one UDP or TCP network\") \\",
          "",
          "[Removed Lines]",
          "377:     XX(ERROR_RTC_INVALID_SESSION           , 5036, \"RtcInvalidSession\", \"Invalid request for no RTC session matched\")",
          "",
          "[Added Lines]",
          "377:     XX(ERROR_RTC_INVALID_SESSION           , 5036, \"RtcInvalidSession\", \"Invalid request for no RTC session matched\") \\",
          "378:     XX(ERROR_RTC_INVALID_ICE               , 5037, \"RtcInvalidIce\", \"Invalid ICE ufrag or pwd\")",
          "",
          "---------------"
        ],
        "trunk/src/protocol/srs_protocol_rtmp_stack.hpp||trunk/src/protocol/srs_protocol_rtmp_stack.hpp": [
          "File: trunk/src/protocol/srs_protocol_rtmp_stack.hpp -> trunk/src/protocol/srs_protocol_rtmp_stack.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "424:     std::string param;",
          "426:     std::string stream;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "428:     std::string ice_ufrag_;",
          "430:     std::string ice_pwd_;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "244ce7bc013a0b805274a65132a2980680ba6b9d",
      "candidate_info": {
        "commit_hash": "244ce7bc013a0b805274a65132a2980680ba6b9d",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/244ce7bc013a0b805274a65132a2980680ba6b9d",
        "files": [
          "trunk/configure",
          "trunk/doc/CHANGELOG.md",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/kernel/srs_kernel_error.hpp",
          "trunk/src/protocol/srs_protocol_http_conn.cpp",
          "trunk/src/utest/srs_utest_protocol3.cpp",
          "trunk/src/utest/srs_utest_protocol3.hpp"
        ],
        "message": "Merge pull request from GHSA-gv9r-qcjc-5hj7\n\n* Filter JSONP callback function name. v5.0.210,v6.0.121\n\n* Add utest.\n\n* Refine utest",
        "before_after_code_files": [
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/kernel/srs_kernel_error.hpp||trunk/src/kernel/srs_kernel_error.hpp",
          "trunk/src/protocol/srs_protocol_http_conn.cpp||trunk/src/protocol/srs_protocol_http_conn.cpp",
          "trunk/src/utest/srs_utest_protocol3.cpp||trunk/src/utest/srs_utest_protocol3.cpp",
          "trunk/src/utest/srs_utest_protocol3.hpp||trunk/src/utest/srs_utest_protocol3.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    209",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    210",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    120",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    121",
          "",
          "---------------"
        ],
        "trunk/src/kernel/srs_kernel_error.hpp||trunk/src/kernel/srs_kernel_error.hpp": [
          "File: trunk/src/kernel/srs_kernel_error.hpp -> trunk/src/kernel/srs_kernel_error.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "332:     XX(ERROR_STREAM_CASTER_HEVC_VPS        , 4054, \"CasterTsHevcVps\", \"Invalid ts HEVC VPS for stream caster\") \\",
          "333:     XX(ERROR_STREAM_CASTER_HEVC_SPS        , 4055, \"CasterTsHevcSps\", \"Invalid ts HEVC SPS for stream caster\") \\",
          "334:     XX(ERROR_STREAM_CASTER_HEVC_PPS        , 4056, \"CasterTsHevcPps\", \"Invalid ts HEVC PPS for stream caster\") \\",
          "",
          "[Removed Lines]",
          "335:     XX(ERROR_STREAM_CASTER_HEVC_FORMAT     , 4057, \"CasterTsHevcFormat\", \"Invalid ts HEVC Format for stream caster\")",
          "",
          "[Added Lines]",
          "335:     XX(ERROR_STREAM_CASTER_HEVC_FORMAT     , 4057, \"CasterTsHevcFormat\", \"Invalid ts HEVC Format for stream caster\") \\",
          "336:     XX(ERROR_HTTP_JSONP                    , 4058, \"HttpJsonp\", \"Invalid callback for JSONP\")",
          "",
          "---------------"
        ],
        "trunk/src/protocol/srs_protocol_http_conn.cpp||trunk/src/protocol/srs_protocol_http_conn.cpp": [
          "File: trunk/src/protocol/srs_protocol_http_conn.cpp -> trunk/src/protocol/srs_protocol_http_conn.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "332:     }",
          "333: }",
          "335: srs_error_t SrsHttpMessage::set_url(string url, bool allow_jsonp)",
          "336: {",
          "337:     srs_error_t err = srs_success;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336: bool srs_is_valid_jsonp_callback(std::string callback)",
          "337: {",
          "338:     for (int i = 0; i < (int)callback.length(); i++) {",
          "339:         char ch = callback.at(i);",
          "340:         bool is_alpha_beta = (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');",
          "341:         bool is_number = (ch >= '0' && ch <= '9');",
          "342:         if (!is_alpha_beta && !is_number && ch != '.' && ch != '_' && ch != '-') {",
          "343:             return false;",
          "344:         }",
          "345:     }",
          "346:     return true;",
          "347: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "375:     if (allow_jsonp) {",
          "379:         if (jsonp) {",
          "380:             jsonp_method = query_get(\"method\");",
          "381:         }",
          "382:     }",
          "384:     return err;",
          "",
          "[Removed Lines]",
          "376:         if (!query_get(\"callback\").empty()) {",
          "377:             jsonp = true;",
          "378:         }",
          "",
          "[Added Lines]",
          "390:         string callback= query_get(\"callback\");",
          "391:         jsonp = !callback.empty();",
          "397:         if (!srs_is_valid_jsonp_callback(callback)) {",
          "398:             return srs_error_new(ERROR_HTTP_JSONP, \"invalid callback=%s\", callback.c_str());",
          "399:         }",
          "",
          "---------------"
        ],
        "trunk/src/utest/srs_utest_protocol3.cpp||trunk/src/utest/srs_utest_protocol3.cpp": [
          "File: trunk/src/utest/srs_utest_protocol3.cpp -> trunk/src/utest/srs_utest_protocol3.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: #include <srs_utest_protocol3.hpp>",
          "8: using namespace std;",
          "10: #include <srs_kernel_error.hpp>",
          "11: #include <srs_core_autofree.hpp>",
          "12: #include <srs_protocol_utility.hpp>",
          "13: #include <srs_protocol_rtmp_msg_array.hpp>",
          "14: #include <srs_protocol_rtmp_stack.hpp>",
          "15: #include <srs_kernel_utility.hpp>",
          "16: #include <srs_app_st.hpp>",
          "17: #include <srs_protocol_amf0.hpp>",
          "18: #include <srs_protocol_rtmp_stack.hpp>",
          "19: #include <srs_protocol_http_conn.hpp>",
          "20: #include <srs_protocol_protobuf.hpp>",
          "21: #include <srs_kernel_buffer.hpp>",
          "23: extern bool srs_is_valid_jsonp_callback(std::string callback);",
          "25: VOID TEST(ProtocolHttpTest, JsonpCallbackName)",
          "26: {",
          "27:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"\"));",
          "28:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"callback\"));",
          "29:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback\"));",
          "30:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback1234567890\"));",
          "31:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback-1234567890\"));",
          "32:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback_1234567890\"));",
          "33:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback.1234567890\"));",
          "34:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback1234567890-_.\"));",
          "35:     EXPECT_FALSE(srs_is_valid_jsonp_callback(\"callback()//\"));",
          "36:     EXPECT_FALSE(srs_is_valid_jsonp_callback(\"callback!\"));",
          "37:     EXPECT_FALSE(srs_is_valid_jsonp_callback(\"callback;\"));",
          "38: }",
          "",
          "---------------"
        ],
        "trunk/src/utest/srs_utest_protocol3.hpp||trunk/src/utest/srs_utest_protocol3.hpp": [
          "File: trunk/src/utest/srs_utest_protocol3.hpp -> trunk/src/utest/srs_utest_protocol3.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: #ifndef SRS_UTEST_PROTOCOL3_HPP",
          "8: #define SRS_UTEST_PROTOCOL3_HPP",
          "11: #include <srs_utest_protocol3.hpp>",
          "13: #include <srs_utest_protocol.hpp>",
          "15: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cdbe50b72a099631290a1babcfa71b1b8053a8a7",
      "candidate_info": {
        "commit_hash": "cdbe50b72a099631290a1babcfa71b1b8053a8a7",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/cdbe50b72a099631290a1babcfa71b1b8053a8a7",
        "files": [
          "Dockerfile",
          "trunk/auto/depends.sh",
          "trunk/auto/setup_variables.sh",
          "trunk/auto/utest.sh",
          "trunk/configure",
          "trunk/doc/CHANGELOG.md",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "Compile: Fix typo for 3rdparty. v5.0.166, v6.0.59 (#3615)\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/auto/depends.sh||trunk/auto/depends.sh",
          "trunk/auto/setup_variables.sh||trunk/auto/setup_variables.sh",
          "trunk/auto/utest.sh||trunk/auto/utest.sh",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/auto/depends.sh||trunk/auto/depends.sh": [
          "File: trunk/auto/depends.sh -> trunk/auto/depends.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "281: _ST_MAKE_ARGS=\"${_ST_MAKE} STATIC_ONLY=${_ST_STATIC_ONLY}\"",
          "282: _ST_MAKE_ARGS=\"${_ST_MAKE_ARGS} CC=${SRS_TOOL_CC} AR=${SRS_TOOL_AR} LD=${SRS_TOOL_LD} RANDLIB=${SRS_TOOL_RANDLIB}\"",
          "283: # Patched ST from https://github.com/ossrs/state-threads/tree/srs",
          "286:     echo \"The state-threads is ok.\"",
          "287: else",
          "288:     echo \"Building state-threads.\" &&",
          "290:     cp -rf ${SRS_WORKDIR}/3rdparty/st-srs ${SRS_OBJS}/${SRS_PLATFORM}/ &&",
          "291:     env EXTRA_CFLAGS=\"${_ST_EXTRA_CFLAGS}\" make -C ${SRS_OBJS}/${SRS_PLATFORM}/st-srs ${_ST_MAKE_ARGS} &&",
          "296:     echo \"The state-threads is ok.\"",
          "297: fi",
          "298: # check status",
          "",
          "[Removed Lines]",
          "284: if [[ -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/st/libst.a ]]; then",
          "285:     rm -rf ${SRS_OBJS}/st && cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/st ${SRS_OBJS}/ &&",
          "289:     rm -rf ${SRS_OBJS}/${SRS_PLATFORM}/st-srs ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/st ${SRS_OBJS}/st &&",
          "292:     mkdir -p ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/st &&",
          "293:     cp -f ${SRS_OBJS}/${SRS_PLATFORM}/st-srs/${_ST_OBJ}/st.h ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/st/ &&",
          "294:     cp -f ${SRS_OBJS}/${SRS_PLATFORM}/st-srs/${_ST_OBJ}/libst.a ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/st/ &&",
          "295:     cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/st ${SRS_OBJS}/ &&",
          "",
          "[Added Lines]",
          "284: if [[ -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/st/libst.a ]]; then",
          "285:     rm -rf ${SRS_OBJS}/st && cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/st ${SRS_OBJS}/ &&",
          "289:     rm -rf ${SRS_OBJS}/${SRS_PLATFORM}/st-srs ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/st ${SRS_OBJS}/st &&",
          "292:     mkdir -p ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/st &&",
          "293:     cp -f ${SRS_OBJS}/${SRS_PLATFORM}/st-srs/${_ST_OBJ}/st.h ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/st/ &&",
          "294:     cp -f ${SRS_OBJS}/${SRS_PLATFORM}/st-srs/${_ST_OBJ}/libst.a ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/st/ &&",
          "295:     cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/st ${SRS_OBJS}/ &&",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "371:         if [[ $SRS_CROSS_BUILD_ARCH == \"arm\" ]]; then OPENSSL_CONFIG=\"./Configure linux-armv4\"; fi",
          "372:         if [[ $SRS_CROSS_BUILD_ARCH == \"aarch64\" ]]; then OPENSSL_CONFIG=\"./Configure linux-aarch64\"; fi",
          "373:         if [[ $SRS_CROSS_BUILD_ARCH == \"mipsel\" ]]; then OPENSSL_CONFIG=\"./Configure linux-mips32\"; fi",
          "375:         # Try to use exists libraries.",
          "376:         if [[ -f /usr/local/ssl/lib/libssl.a && $SRS_SSL_LOCAL == NO ]]; then",
          "378:                 cp /usr/local/ssl/lib/libssl.a . && cp /usr/local/ssl/lib/libcrypto.a . &&",
          "379:                 mkdir -p /usr/local/ssl/lib/pkgconfig && cp -rf /usr/local/ssl/lib/pkgconfig .)",
          "381:                 cp -rf /usr/local/ssl/include/openssl .)",
          "382:         fi",
          "383:         # Warning if not use the system ssl.",
          "",
          "[Removed Lines]",
          "374:     elif [[ ! -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/openssl/lib/libssl.a ]]; then",
          "377:             (mkdir -p  ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/openssl/lib && cd ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/openssl/lib &&",
          "380:             (mkdir -p ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/openssl/include && cd ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/openssl/include &&",
          "",
          "[Added Lines]",
          "374:     elif [[ ! -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/openssl/lib/libssl.a ]]; then",
          "377:             (mkdir -p  ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/openssl/lib && cd ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/openssl/lib &&",
          "380:             (mkdir -p ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/openssl/include && cd ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/openssl/include &&",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "418:     #OPENSSL_OPTIONS=\"$OPENSSL_OPTIONS -no-ssl2 -no-comp -no-idea -no-hw -no-engine -no-dso -no-err -no-nextprotoneg -no-psk -no-srp -no-ec2m -no-weak-ssl-ciphers\"",
          "419:     #",
          "420:     # cross build not specified, if exists flag, need to rebuild for no-arm platform.",
          "423:         echo \"The $OPENSSL_CANDIDATE is ok.\"",
          "424:     else",
          "425:         echo \"Building $OPENSSL_CANDIDATE.\" &&",
          "427:             ${SRS_OBJS}/openssl &&",
          "428:         ${OPENSSL_UNZIP} &&",
          "429:         (",
          "430:             cd ${SRS_OBJS}/${SRS_PLATFORM}/${OPENSSL_CANDIDATE} &&",
          "431:             chmod +x ./config ./Configure &&",
          "433:         ) &&",
          "434:         make -C ${SRS_OBJS}/${SRS_PLATFORM}/${OPENSSL_CANDIDATE} CC=${SRS_TOOL_CC} AR=\"${OPENSSL_AR}\" \\",
          "435:             LD=${SRS_TOOL_LD} RANDLIB=${SRS_TOOL_RANDLIB} ${SRS_JOBS} &&",
          "436:         make -C ${SRS_OBJS}/${SRS_PLATFORM}/${OPENSSL_CANDIDATE} install_sw &&",
          "438:         echo \"The $OPENSSL_CANDIDATE is ok.\"",
          "439:     fi",
          "440:     # check status",
          "",
          "[Removed Lines]",
          "421:     if [[ -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/openssl/lib/libssl.a ]]; then",
          "422:         rm -rf ${SRS_OBJS}/openssl && cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/openssl ${SRS_OBJS}/ &&",
          "426:         rm -rf ${SRS_OBJS}/${SRS_PLATFORM}/${OPENSSL_CANDIDATE} ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/openssl \\",
          "432:             ${OPENSSL_CONFIG} --prefix=${SRS_DEPENDS_LIBS}/${SRS_PLATFORM}/3rdpatry/openssl $OPENSSL_OPTIONS",
          "437:         cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/openssl ${SRS_OBJS}/ &&",
          "",
          "[Added Lines]",
          "421:     if [[ -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/openssl/lib/libssl.a ]]; then",
          "422:         rm -rf ${SRS_OBJS}/openssl && cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/openssl ${SRS_OBJS}/ &&",
          "426:         rm -rf ${SRS_OBJS}/${SRS_PLATFORM}/${OPENSSL_CANDIDATE} ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/openssl \\",
          "432:             ${OPENSSL_CONFIG} --prefix=${SRS_DEPENDS_LIBS}/${SRS_PLATFORM}/3rdparty/openssl $OPENSSL_OPTIONS",
          "437:         cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/openssl ${SRS_OBJS}/ &&",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "467:         SRTP_OPTIONS=\"$SRTP_OPTIONS --build=loongarch64-unknown-linux-gnu\"",
          "468:     fi",
          "469:     # Copy and patch source files, then build and install libsrtp.",
          "471:         rm -rf ${SRS_OBJS}/srtp2 &&",
          "473:         echo \"The libsrtp-2-fit is ok.\"",
          "474:     else",
          "475:         echo \"Building libsrtp-2-fit.\"",
          "477:             ${SRS_OBJS}/srtp2 &&",
          "478:         cp -rf ${SRS_WORKDIR}/3rdparty/libsrtp-2-fit ${SRS_OBJS}/${SRS_PLATFORM}/ &&",
          "479:         # For cygwin64, the patch is not available, so use sed instead.",
          "",
          "[Removed Lines]",
          "470:     if [[ -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/srtp2/lib/libsrtp2.a ]]; then",
          "472:         cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/srtp2 ${SRS_OBJS} &&",
          "476:         rm -rf ${SRS_OBJS}/${SRS_PLATFORM}/libsrtp-2-fit ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/srtp2 \\",
          "",
          "[Added Lines]",
          "470:     if [[ -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/srtp2/lib/libsrtp2.a ]]; then",
          "472:         cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/srtp2 ${SRS_OBJS} &&",
          "476:         rm -rf ${SRS_OBJS}/${SRS_PLATFORM}/libsrtp-2-fit ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/srtp2 \\",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "488:         fi &&",
          "489:         (",
          "490:             cd ${SRS_OBJS}/${SRS_PLATFORM}/libsrtp-2-fit &&",
          "492:         ) &&",
          "493:         # Sometimes it might fail because autoconf failed to generate crypto/include.config.h",
          "494:         if [[ $SRS_CYGWIN64 == YES ]]; then",
          "",
          "[Removed Lines]",
          "491:             $SRTP_CONFIGURE ${SRTP_OPTIONS} --prefix=${SRS_DEPENDS_LIBS}/${SRS_PLATFORM}/3rdpatry/srtp2",
          "",
          "[Added Lines]",
          "491:             $SRTP_CONFIGURE ${SRTP_OPTIONS} --prefix=${SRS_DEPENDS_LIBS}/${SRS_PLATFORM}/3rdparty/srtp2",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "501:         fi &&",
          "502:         make -C ${SRS_OBJS}/${SRS_PLATFORM}/libsrtp-2-fit ${SRS_JOBS} &&",
          "503:         make -C ${SRS_OBJS}/${SRS_PLATFORM}/libsrtp-2-fit install &&",
          "505:         echo \"The libsrtp-2-fit is ok.\"",
          "506:     fi",
          "507:     ret=$?; if [[ $ret -ne 0 ]]; then echo \"Build libsrtp failed, ret=$ret\"; exit $ret; fi",
          "",
          "[Removed Lines]",
          "504:         cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/srtp2 ${SRS_OBJS}/ &&",
          "",
          "[Added Lines]",
          "504:         cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/srtp2 ${SRS_OBJS}/ &&",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "519:     if [[ $OS_IS_LOONGARCH64 == YES ]]; then",
          "520:         OPUS_OPTIONS=\"$OPUS_OPTIONS --build=loongarch64-unknown-linux-gnu\"",
          "521:     fi",
          "524:         echo \"The opus-1.3.1 is ok.\"",
          "525:     else",
          "526:         echo \"Building opus-1.3.1.\" &&",
          "528:         tar xf ${SRS_WORKDIR}/3rdparty/opus-1.3.1.tar.gz -C ${SRS_OBJS}/${SRS_PLATFORM} &&",
          "529:         (",
          "530:             # Opus requires automake 1.15, and fails for automake 1.16+, so we run autoreconf to fix it.",
          "531:             cd ${SRS_OBJS}/${SRS_PLATFORM}/opus-1.3.1 && autoreconf &&",
          "533:         ) &&",
          "534:         make -C ${SRS_OBJS}/${SRS_PLATFORM}/opus-1.3.1 ${SRS_JOBS} &&",
          "535:         make -C ${SRS_OBJS}/${SRS_PLATFORM}/opus-1.3.1 install &&",
          "537:         echo \"The opus-1.3.1 is ok.\"",
          "538:     fi",
          "539:     if [ ! -f ${SRS_OBJS}/opus/lib/libopus.a ]; then echo \"Build opus-1.3.1 failed.\"; exit -1; fi",
          "",
          "[Removed Lines]",
          "522:     if [[ -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/opus/lib/libopus.a ]]; then",
          "523:         rm -rf ${SRS_OBJS}/opus && cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/opus ${SRS_OBJS}/ &&",
          "527:         rm -rf ${SRS_OBJS}/${SRS_PLATFORM}/opus-1.3.1 ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/opus ${SRS_OBJS}/opus &&",
          "532:             ./configure --prefix=${SRS_DEPENDS_LIBS}/${SRS_PLATFORM}/3rdpatry/opus --enable-static $OPUS_OPTIONS",
          "536:         cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/opus ${SRS_OBJS}/ &&",
          "",
          "[Added Lines]",
          "522:     if [[ -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/opus/lib/libopus.a ]]; then",
          "523:         rm -rf ${SRS_OBJS}/opus && cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/opus ${SRS_OBJS}/ &&",
          "527:         rm -rf ${SRS_OBJS}/${SRS_PLATFORM}/opus-1.3.1 ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/opus ${SRS_OBJS}/opus &&",
          "532:             ./configure --prefix=${SRS_DEPENDS_LIBS}/${SRS_PLATFORM}/3rdparty/opus --enable-static $OPUS_OPTIONS",
          "536:         cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/opus ${SRS_OBJS}/ &&",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "586:     # Enable FFmpeg native MP3 decoder, which depends on dct.",
          "587:     FFMPEG_OPTIONS=\"$FFMPEG_OPTIONS --enable-decoder=mp3 --enable-dct\"",
          "591:         echo \"The ffmpeg-4-fit is ok.\"",
          "592:     else",
          "593:         echo \"Building ffmpeg-4-fit.\" &&",
          "595:             ${SRS_OBJS}/ffmpeg &&",
          "596:         cp -rf ${SRS_WORKDIR}/3rdparty/ffmpeg-4-fit ${SRS_OBJS}/${SRS_PLATFORM}/ &&",
          "597:         (",
          "598:             cd ${SRS_OBJS}/${SRS_PLATFORM}/ffmpeg-4-fit &&",
          "600:                 --pkg-config=pkg-config --pkg-config-flags='--static' --extra-libs='-lpthread' --extra-libs='-lm' \\",
          "601:                 ${FFMPEG_OPTIONS}",
          "602:         ) &&",
          "",
          "[Removed Lines]",
          "589:     if [[ -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/ffmpeg/lib/libavcodec.a ]]; then",
          "590:         rm -rf ${SRS_OBJS}/ffmpeg && cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/ffmpeg ${SRS_OBJS}/ &&",
          "594:         rm -rf ${SRS_OBJS}/${SRS_PLATFORM}/ffmpeg-4-fit ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/ffmpeg \\",
          "599:             $FFMPEG_CONFIGURE --prefix=${SRS_DEPENDS_LIBS}/${SRS_PLATFORM}/3rdpatry/ffmpeg \\",
          "",
          "[Added Lines]",
          "589:     if [[ -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/ffmpeg/lib/libavcodec.a ]]; then",
          "590:         rm -rf ${SRS_OBJS}/ffmpeg && cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/ffmpeg ${SRS_OBJS}/ &&",
          "594:         rm -rf ${SRS_OBJS}/${SRS_PLATFORM}/ffmpeg-4-fit ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/ffmpeg \\",
          "599:             $FFMPEG_CONFIGURE --prefix=${SRS_DEPENDS_LIBS}/${SRS_PLATFORM}/3rdparty/ffmpeg \\",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "626:         fi &&",
          "627:         make -C ${SRS_OBJS}/${SRS_PLATFORM}/ffmpeg-4-fit ${SRS_JOBS} &&",
          "628:         make -C ${SRS_OBJS}/${SRS_PLATFORM}/ffmpeg-4-fit install &&",
          "630:         echo \"The ffmpeg-4-fit is ok.\"",
          "631:     fi",
          "632:     # check status",
          "",
          "[Removed Lines]",
          "629:         cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/ffmpeg ${SRS_OBJS}/ &&",
          "",
          "[Added Lines]",
          "629:         cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/ffmpeg ${SRS_OBJS}/ &&",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "678:         LIBSRT_OPTIONS=\"$LIBSRT_OPTIONS --with-compiler-prefix=$SRT_COMPILER_PREFIX\"",
          "679:     fi",
          "683:         echo \"libsrt-1-fit is ok.\"",
          "684:     else",
          "685:         if [[ ! -d ${SRS_OBJS}/openssl/lib/pkgconfig ]]; then",
          "",
          "[Removed Lines]",
          "681:     if [[ -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/srt/lib/libsrt.a ]]; then",
          "682:         rm -rf ${SRS_OBJS}/srt && cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/srt ${SRS_OBJS}/ &&",
          "",
          "[Added Lines]",
          "681:     if [[ -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/srt/lib/libsrt.a ]]; then",
          "682:         rm -rf ${SRS_OBJS}/srt && cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/srt ${SRS_OBJS}/ &&",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "687:             exit -1",
          "688:         fi",
          "689:         echo \"Build srt-1-fit\" &&",
          "691:         cp -rf ${SRS_WORKDIR}/3rdparty/srt-1-fit ${SRS_OBJS}/${SRS_PLATFORM}/ &&",
          "692:         (",
          "693:             cd ${SRS_OBJS}/${SRS_PLATFORM}/srt-1-fit &&",
          "694:             env PKG_CONFIG_PATH=${SRS_DEPENDS_LIBS}/openssl/lib/pkgconfig \\",
          "696:         ) &&",
          "697:         make -C ${SRS_OBJS}/${SRS_PLATFORM}/srt-1-fit ${SRS_JOBS} &&",
          "698:         make -C ${SRS_OBJS}/${SRS_PLATFORM}/srt-1-fit install &&",
          "699:         # If exists lib64 of libsrt, copy it to lib",
          "702:         fi &&",
          "704:         echo \"libsrt-1-fit is ok.\"",
          "705:     fi",
          "706:     ret=$?; if [[ $ret -ne 0 ]]; then echo \"Build srt-1-fit failed, ret=$ret\"; exit $ret; fi",
          "",
          "[Removed Lines]",
          "690:         rm -rf ${SRS_OBJS}/${SRS_PLATFORM}/srt-1-fit ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/srt ${SRS_OBJS}/srt &&",
          "695:                 ./configure --prefix=${SRS_DEPENDS_LIBS}/${SRS_PLATFORM}/3rdpatry/srt $LIBSRT_OPTIONS",
          "700:         if [[ -d ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/srt/lib64 ]]; then",
          "701:             cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/srt/lib64 ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/srt/lib",
          "703:         cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/srt ${SRS_OBJS}/ &&",
          "",
          "[Added Lines]",
          "690:         rm -rf ${SRS_OBJS}/${SRS_PLATFORM}/srt-1-fit ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/srt ${SRS_OBJS}/srt &&",
          "695:                 ./configure --prefix=${SRS_DEPENDS_LIBS}/${SRS_PLATFORM}/3rdparty/srt $LIBSRT_OPTIONS",
          "700:         if [[ -d ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/srt/lib64 ]]; then",
          "701:             cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/srt/lib64 ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/srt/lib",
          "703:         cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/srt ${SRS_OBJS}/ &&",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "710: # build utest code",
          "711: #####################################################################################",
          "712: if [[ $SRS_UTEST == YES ]]; then",
          "715:         echo \"The gtest-fit is ok.\"",
          "716:     else",
          "717:         echo \"Build gtest-fit\" &&",
          "721:         echo \"The gtest-fit is ok.\"",
          "722:     fi",
          "723:     # check status",
          "",
          "[Removed Lines]",
          "713:     if [[ -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/gtest/googletest/include/gtest/gtest.h ]]; then",
          "714:         rm -rf ${SRS_OBJS}/gtest && cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/gtest ${SRS_OBJS}/ &&",
          "718:         rm -rf ${SRS_OBJS}/${SRS_PLATFORM}gtest-fit ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/gtest ${SRS_OBJS}/gtest &&",
          "719:         cp -rf ${SRS_WORKDIR}/3rdparty/gtest-fit ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/gtest &&",
          "720:         cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/gtest ${SRS_OBJS}/ &&",
          "",
          "[Added Lines]",
          "713:     if [[ -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/gtest/googletest/include/gtest/gtest.h ]]; then",
          "714:         rm -rf ${SRS_OBJS}/gtest && cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/gtest ${SRS_OBJS}/ &&",
          "718:         rm -rf ${SRS_OBJS}/${SRS_PLATFORM}gtest-fit ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/gtest ${SRS_OBJS}/gtest &&",
          "719:         cp -rf ${SRS_WORKDIR}/3rdparty/gtest-fit ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/gtest &&",
          "720:         cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/gtest ${SRS_OBJS}/ &&",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "728: # build gperf code",
          "729: #####################################################################################",
          "730: if [[ $SRS_GPERF == YES ]]; then",
          "733:         cp -f ${SRS_OBJS}/gperf/bin/pprof ${SRS_OBJS}/ &&",
          "734:         echo \"The gperftools-2-fit is ok.\"",
          "735:     else",
          "736:         echo \"Build gperftools-2-fit\" &&",
          "738:             ${SRS_OBJS}/gperf ${SRS_OBJS}/pprof &&",
          "739:         cp -rf ${SRS_WORKDIR}/3rdparty/gperftools-2-fit ${SRS_OBJS}/${SRS_PLATFORM}/ &&",
          "740:         (",
          "741:             cd ${SRS_OBJS}/${SRS_PLATFORM}/gperftools-2-fit &&",
          "743:         ) &&",
          "744:         make -C ${SRS_OBJS}/${SRS_PLATFORM}/gperftools-2-fit ${SRS_JOBS} &&",
          "745:         make -C ${SRS_OBJS}/${SRS_PLATFORM}/gperftools-2-fit install &&",
          "747:         cp -f ${SRS_OBJS}/gperf/bin/pprof ${SRS_OBJS}/ &&",
          "748:         echo \"The gperftools-2-fit is ok.\"",
          "749:     fi",
          "",
          "[Removed Lines]",
          "731:     if [[ -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/gperf/bin/pprof ]]; then",
          "732:         rm -rf ${SRS_OBJS}/gperf && cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/gperf ${SRS_OBJS}/ &&",
          "737:         rm -rf ${SRS_OBJS}/${SRS_PLATFORM}/gperftools-2-fit ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/gperf \\",
          "742:             ./configure --prefix=${SRS_DEPENDS_LIBS}/${SRS_PLATFORM}/3rdpatry/gperf --enable-frame-pointers",
          "746:         cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/gperf ${SRS_OBJS}/ &&",
          "",
          "[Added Lines]",
          "731:     if [[ -f ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/gperf/bin/pprof ]]; then",
          "732:         rm -rf ${SRS_OBJS}/gperf && cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/gperf ${SRS_OBJS}/ &&",
          "737:         rm -rf ${SRS_OBJS}/${SRS_PLATFORM}/gperftools-2-fit ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/gperf \\",
          "742:             ./configure --prefix=${SRS_DEPENDS_LIBS}/${SRS_PLATFORM}/3rdparty/gperf --enable-frame-pointers",
          "746:         cp -rf ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/gperf ${SRS_OBJS}/ &&",
          "",
          "---------------"
        ],
        "trunk/auto/setup_variables.sh||trunk/auto/setup_variables.sh": [
          "File: trunk/auto/setup_variables.sh -> trunk/auto/setup_variables.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:     (cd ${SRS_OBJS} && rm -rf src utest srs srs_utest research include lib srs_hls_ingester srs_mp4_parser) &&",
          "55:     mkdir -p ${SRS_OBJS}/src ${SRS_OBJS}/research ${SRS_OBJS}/utest &&",
          "58:     (cd ${SRS_OBJS} && rm -rf st ffmpeg opus srtp2 openssl srt) &&",
          "59:     mkdir -p ${SRS_OBJS}/st ${SRS_OBJS}/ffmpeg ${SRS_OBJS}/opus ${SRS_OBJS}/srtp2 ${SRS_OBJS}/openssl \\",
          "60:         ${SRS_OBJS}/srt &&",
          "64: )",
          "65: ret=$?; if [[ $ret -ne 0 ]]; then echo \"Create build directory failed, ret=$ret\"; exit $ret; fi",
          "",
          "[Removed Lines]",
          "57:     mkdir -p ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry &&",
          "61:     mkdir -p ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/st ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/ffmpeg \\",
          "62:         ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/opus ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/srtp2 \\",
          "63:         ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/openssl ${SRS_OBJS}/${SRS_PLATFORM}/3rdpatry/srt",
          "",
          "[Added Lines]",
          "57:     mkdir -p ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty &&",
          "61:     mkdir -p ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/st ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/ffmpeg \\",
          "62:         ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/opus ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/srtp2 \\",
          "63:         ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/openssl ${SRS_OBJS}/${SRS_PLATFORM}/3rdparty/srt",
          "",
          "---------------"
        ],
        "trunk/auto/utest.sh||trunk/auto/utest.sh": [
          "File: trunk/auto/utest.sh -> trunk/auto/utest.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: # trunk of srs, which contains the src dir, relative to objs/utest, it's trunk",
          "18: SRS_TRUNK_PREFIX=../../..",
          "19: # gest dir, relative to objs/utest, it's trunk/objs/{Platform}/gtest",
          "22: # Whether enable C++11 or higher versions.",
          "23: # For linux, always use C++11 for gtest required, see https://github.com/google/googletest",
          "",
          "[Removed Lines]",
          "20: GTEST_DIR=../3rdpatry/gtest/googletest",
          "",
          "[Added Lines]",
          "20: GTEST_DIR=../3rdparty/gtest/googletest",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    164",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    166",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    58",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    59",
          "",
          "---------------"
        ]
      }
    }
  ]
}