{
  "cve_id": "CVE-2022-3341",
  "cve_desc": "A null pointer dereference issue was discovered in 'FFmpeg' in decode_main_header() function of libavformat/nutdec.c file. The flaw occurs because the function lacks check of the return value of avformat_new_stream() and triggers the null pointer dereference error, causing an application to crash.",
  "repo": "FFmpeg/FFmpeg",
  "patch_hash": "9cf652cef49d74afe3d454f27d49eb1a1394951e",
  "patch_info": {
    "commit_hash": "9cf652cef49d74afe3d454f27d49eb1a1394951e",
    "repo": "FFmpeg/FFmpeg",
    "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/9cf652cef49d74afe3d454f27d49eb1a1394951e",
    "files": [
      "libavformat/nutdec.c"
    ],
    "message": "avformat/nutdec: Add check for avformat_new_stream\n\nCheck for failure of avformat_new_stream() and propagate\nthe error code.\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
    "before_after_code_files": [
      "libavformat/nutdec.c||libavformat/nutdec.c"
    ]
  },
  "patch_diff": {
    "libavformat/nutdec.c||libavformat/nutdec.c": [
      "File: libavformat/nutdec.c -> libavformat/nutdec.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "351:         ret = AVERROR(ENOMEM);",
      "352:         goto fail;",
      "353:     }",
      "357:     return 0;",
      "358: fail:",
      "",
      "[Removed Lines]",
      "354:     for (i = 0; i < stream_count; i++)",
      "355:         avformat_new_stream(s, NULL);",
      "",
      "[Added Lines]",
      "354:     for (i = 0; i < stream_count; i++) {",
      "355:         if (!avformat_new_stream(s, NULL)) {",
      "356:             ret = AVERROR(ENOMEM);",
      "357:             goto fail;",
      "358:         }",
      "359:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "800:     NUTContext *nut = s->priv_data;",
      "801:     AVIOContext *bc = s->pb;",
      "802:     int64_t pos;",
      "805:     nut->avf = s;",
      "808:     pos = 0;",
      "809:     do {",
      "810:         pos = find_startcode(bc, MAIN_STARTCODE, pos) + 1;",
      "811:         if (pos < 0 + 1) {",
      "812:             av_log(s, AV_LOG_ERROR, \"No main startcode found.\\n\");",
      "813:             return AVERROR_INVALIDDATA;",
      "814:         }",
      "818:     pos = 0;",
      "",
      "[Removed Lines]",
      "803:     int initialized_stream_count;",
      "815:     } while (decode_main_header(nut) < 0);",
      "",
      "[Added Lines]",
      "807:     int initialized_stream_count, ret;",
      "813:     ret = 0;",
      "815:         if (ret == AVERROR(ENOMEM))",
      "816:             return ret;",
      "823:     } while ((ret = decode_main_header(nut)) < 0);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "481e81be1271ac9a0124ee615700390c2371bd89",
      "candidate_info": {
        "commit_hash": "481e81be1271ac9a0124ee615700390c2371bd89",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/481e81be1271ac9a0124ee615700390c2371bd89",
        "files": [
          "libavformat/nutdec.c"
        ],
        "message": "avformat/nutdec: Add check for avformat_new_stream\n\nCheck for failure of avformat_new_stream() and propagate\nthe error code.\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 9cf652cef49d74afe3d454f27d49eb1a1394951e)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/nutdec.c||libavformat/nutdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/nutdec.c||libavformat/nutdec.c"
          ],
          "candidate": [
            "libavformat/nutdec.c||libavformat/nutdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/nutdec.c||libavformat/nutdec.c": [
          "File: libavformat/nutdec.c -> libavformat/nutdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "358:         ret = AVERROR(ENOMEM);",
          "359:         goto fail;",
          "360:     }",
          "364:     return 0;",
          "365: fail:",
          "",
          "[Removed Lines]",
          "361:     for (i = 0; i < stream_count; i++)",
          "362:         avformat_new_stream(s, NULL);",
          "",
          "[Added Lines]",
          "361:     for (i = 0; i < stream_count; i++) {",
          "362:         if (!avformat_new_stream(s, NULL)) {",
          "363:             ret = AVERROR(ENOMEM);",
          "364:             goto fail;",
          "365:         }",
          "366:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "807:     NUTContext *nut = s->priv_data;",
          "808:     AVIOContext *bc = s->pb;",
          "809:     int64_t pos;",
          "812:     nut->avf = s;",
          "815:     pos = 0;",
          "816:     do {",
          "817:         pos = find_startcode(bc, MAIN_STARTCODE, pos) + 1;",
          "818:         if (pos < 0 + 1) {",
          "819:             av_log(s, AV_LOG_ERROR, \"No main startcode found.\\n\");",
          "820:             return AVERROR_INVALIDDATA;",
          "821:         }",
          "825:     pos = 0;",
          "",
          "[Removed Lines]",
          "810:     int initialized_stream_count;",
          "822:     } while (decode_main_header(nut) < 0);",
          "",
          "[Added Lines]",
          "814:     int initialized_stream_count, ret;",
          "820:     ret = 0;",
          "822:         if (ret == AVERROR(ENOMEM))",
          "823:             return ret;",
          "830:     } while ((ret = decode_main_header(nut)) < 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c513bd48039a718dabf6d7a829efb6732693c04b",
      "candidate_info": {
        "commit_hash": "c513bd48039a718dabf6d7a829efb6732693c04b",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/c513bd48039a718dabf6d7a829efb6732693c04b",
        "files": [
          "libavformat/nutdec.c"
        ],
        "message": "avformat/nutdec: Add check for avformat_new_stream\n\nCheck for failure of avformat_new_stream() and propagate\nthe error code.\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 9cf652cef49d74afe3d454f27d49eb1a1394951e)\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/nutdec.c||libavformat/nutdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/nutdec.c||libavformat/nutdec.c"
          ],
          "candidate": [
            "libavformat/nutdec.c||libavformat/nutdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/nutdec.c||libavformat/nutdec.c": [
          "File: libavformat/nutdec.c -> libavformat/nutdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "358:         ret = AVERROR(ENOMEM);",
          "359:         goto fail;",
          "360:     }",
          "364:     return 0;",
          "365: fail:",
          "",
          "[Removed Lines]",
          "361:     for (i = 0; i < stream_count; i++)",
          "362:         avformat_new_stream(s, NULL);",
          "",
          "[Added Lines]",
          "361:     for (i = 0; i < stream_count; i++) {",
          "362:         if (!avformat_new_stream(s, NULL)) {",
          "363:             ret = AVERROR(ENOMEM);",
          "364:             goto fail;",
          "365:         }",
          "366:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "807:     NUTContext *nut = s->priv_data;",
          "808:     AVIOContext *bc = s->pb;",
          "809:     int64_t pos;",
          "812:     nut->avf = s;",
          "815:     pos = 0;",
          "816:     do {",
          "817:         pos = find_startcode(bc, MAIN_STARTCODE, pos) + 1;",
          "818:         if (pos < 0 + 1) {",
          "819:             av_log(s, AV_LOG_ERROR, \"No main startcode found.\\n\");",
          "820:             goto fail;",
          "821:         }",
          "825:     pos = 0;",
          "",
          "[Removed Lines]",
          "810:     int initialized_stream_count;",
          "822:     } while (decode_main_header(nut) < 0);",
          "",
          "[Added Lines]",
          "814:     int initialized_stream_count, ret;",
          "820:     ret = 0;",
          "822:         if (ret == AVERROR(ENOMEM))",
          "823:             return ret;",
          "830:     } while ((ret = decode_main_header(nut)) < 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d811434b5d731c0fad2eb5fbf3fc3e53df98ae67",
      "candidate_info": {
        "commit_hash": "d811434b5d731c0fad2eb5fbf3fc3e53df98ae67",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/d811434b5d731c0fad2eb5fbf3fc3e53df98ae67",
        "files": [
          "libavformat/nutdec.c"
        ],
        "message": "avformat/nutdec: Add check for avformat_new_stream\n\nCheck for failure of avformat_new_stream() and propagate\nthe error code.\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>\n(cherry picked from commit 9cf652cef49d74afe3d454f27d49eb1a1394951e)",
        "before_after_code_files": [
          "libavformat/nutdec.c||libavformat/nutdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/nutdec.c||libavformat/nutdec.c"
          ],
          "candidate": [
            "libavformat/nutdec.c||libavformat/nutdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/nutdec.c||libavformat/nutdec.c": [
          "File: libavformat/nutdec.c -> libavformat/nutdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "358:         ret = AVERROR(ENOMEM);",
          "359:         goto fail;",
          "360:     }",
          "364:     return 0;",
          "365: fail:",
          "",
          "[Removed Lines]",
          "361:     for (i = 0; i < stream_count; i++)",
          "362:         avformat_new_stream(s, NULL);",
          "",
          "[Added Lines]",
          "361:     for (i = 0; i < stream_count; i++) {",
          "362:         if (!avformat_new_stream(s, NULL)) {",
          "363:             ret = AVERROR(ENOMEM);",
          "364:             goto fail;",
          "365:         }",
          "366:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "807:     NUTContext *nut = s->priv_data;",
          "808:     AVIOContext *bc = s->pb;",
          "809:     int64_t pos;",
          "812:     nut->avf = s;",
          "815:     pos = 0;",
          "816:     do {",
          "817:         pos = find_startcode(bc, MAIN_STARTCODE, pos) + 1;",
          "818:         if (pos < 0 + 1) {",
          "819:             av_log(s, AV_LOG_ERROR, \"No main startcode found.\\n\");",
          "820:             goto fail;",
          "821:         }",
          "825:     pos = 0;",
          "",
          "[Removed Lines]",
          "810:     int initialized_stream_count;",
          "822:     } while (decode_main_header(nut) < 0);",
          "",
          "[Added Lines]",
          "814:     int initialized_stream_count, ret;",
          "820:     ret = 0;",
          "822:         if (ret == AVERROR(ENOMEM))",
          "823:             return ret;",
          "830:     } while ((ret = decode_main_header(nut)) < 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "08f0a18c3488b2fb8297ebba3684792da8a6606e",
      "candidate_info": {
        "commit_hash": "08f0a18c3488b2fb8297ebba3684792da8a6606e",
        "repo": "FFmpeg/FFmpeg",
        "commit_url": "https://github.com/FFmpeg/FFmpeg/commit/08f0a18c3488b2fb8297ebba3684792da8a6606e",
        "files": [
          "libavformat/nutdec.c"
        ],
        "message": "avformat/nutdec: Add check for avformat_new_stream\n\nCheck for failure of avformat_new_stream() and propagate\nthe error code.\n\nSigned-off-by: Michael Niedermayer <michael@niedermayer.cc>",
        "before_after_code_files": [
          "libavformat/nutdec.c||libavformat/nutdec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libavformat/nutdec.c||libavformat/nutdec.c"
          ],
          "candidate": [
            "libavformat/nutdec.c||libavformat/nutdec.c"
          ]
        }
      },
      "candidate_diff": {
        "libavformat/nutdec.c||libavformat/nutdec.c": [
          "File: libavformat/nutdec.c -> libavformat/nutdec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "358:         ret = AVERROR(ENOMEM);",
          "359:         goto fail;",
          "360:     }",
          "364:     return 0;",
          "365: fail:",
          "",
          "[Removed Lines]",
          "361:     for (i = 0; i < stream_count; i++)",
          "362:         avformat_new_stream(s, NULL);",
          "",
          "[Added Lines]",
          "361:     for (i = 0; i < stream_count; i++) {",
          "362:         if (!avformat_new_stream(s, NULL)) {",
          "363:             ret = AVERROR(ENOMEM);",
          "364:             goto fail;",
          "365:         }",
          "366:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "805:     NUTContext *nut = s->priv_data;",
          "806:     AVIOContext *bc = s->pb;",
          "807:     int64_t pos;",
          "810:     nut->avf = s;",
          "813:     pos = 0;",
          "814:     do {",
          "815:         pos = find_startcode(bc, MAIN_STARTCODE, pos) + 1;",
          "816:         if (pos < 0 + 1) {",
          "817:             av_log(s, AV_LOG_ERROR, \"No main startcode found.\\n\");",
          "818:             goto fail;",
          "819:         }",
          "823:     pos = 0;",
          "",
          "[Removed Lines]",
          "808:     int initialized_stream_count;",
          "820:     } while (decode_main_header(nut) < 0);",
          "",
          "[Added Lines]",
          "812:     int initialized_stream_count, ret;",
          "818:     ret = 0;",
          "820:         if (ret == AVERROR(ENOMEM))",
          "821:             return ret;",
          "828:     } while ((ret = decode_main_header(nut)) < 0);",
          "",
          "---------------"
        ]
      }
    }
  ]
}