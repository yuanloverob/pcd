{
  "cve_id": "CVE-2023-0512",
  "cve_desc": "Divide By Zero in GitHub repository vim/vim prior to 9.0.1247.",
  "repo": "vim/vim",
  "patch_hash": "870219c58c0804bdc55419b2e455c06ac715a835",
  "patch_info": {
    "commit_hash": "870219c58c0804bdc55419b2e455c06ac715a835",
    "repo": "vim/vim",
    "commit_url": "https://github.com/vim/vim/commit/870219c58c0804bdc55419b2e455c06ac715a835",
    "files": [
      "src/move.c",
      "src/testdir/dumps/Test_smoothscroll_zero_1.dump",
      "src/testdir/dumps/Test_smoothscroll_zero_2.dump",
      "src/testdir/test_scroll_opt.vim",
      "src/version.c"
    ],
    "message": "patch 9.0.1247: divide by zero with 'smoothscroll' set and a narrow window\n\nProblem:    Divide by zero with 'smoothscroll' set and a narrow window.\nSolution:   Bail out when the window is too narrow.",
    "before_after_code_files": [
      "src/move.c||src/move.c",
      "src/testdir/dumps/Test_smoothscroll_zero_1.dump||src/testdir/dumps/Test_smoothscroll_zero_1.dump",
      "src/testdir/dumps/Test_smoothscroll_zero_2.dump||src/testdir/dumps/Test_smoothscroll_zero_2.dump",
      "src/testdir/test_scroll_opt.vim||src/testdir/test_scroll_opt.vim",
      "src/version.c||src/version.c"
    ]
  },
  "patch_diff": {
    "src/move.c||src/move.c": [
      "File: src/move.c -> src/move.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1933:  return;",
      "1935:     int     width1 = curwin->w_width - curwin_col_off();",
      "1936:     int     width2 = width1 + curwin_col_off2();",
      "1937:     long    so = get_scrolloff_value();",
      "1938:     int     scrolloff_cols = so == 0 ? 0 : width1 + (so - 1) * width2;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1936:     if (width1 <= 0)",
      "1937:  return;  // no text will be displayed",
      "",
      "---------------"
    ],
    "src/testdir/dumps/Test_smoothscroll_zero_1.dump||src/testdir/dumps/Test_smoothscroll_zero_1.dump": [
      "File: src/testdir/dumps/Test_smoothscroll_zero_1.dump -> src/testdir/dumps/Test_smoothscroll_zero_1.dump",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: > +0&#ffffff0@59",
      "2: @60",
      "3: @60",
      "4: @60",
      "5: @60",
      "6: @60",
      "",
      "---------------"
    ],
    "src/testdir/dumps/Test_smoothscroll_zero_2.dump||src/testdir/dumps/Test_smoothscroll_zero_2.dump": [
      "File: src/testdir/dumps/Test_smoothscroll_zero_2.dump -> src/testdir/dumps/Test_smoothscroll_zero_2.dump",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: |:+0&#ffffff0|s|i|l| |n|o|r|m| |^|W|^|N| @45",
      "2: > @59",
      "3: @60",
      "4: @60",
      "5: @60",
      "6: @60",
      "",
      "---------------"
    ],
    "src/testdir/test_scroll_opt.vim||src/testdir/test_scroll_opt.vim": [
      "File: src/testdir/test_scroll_opt.vim -> src/testdir/test_scroll_opt.vim",
      "--- Hunk 1 ---",
      "[Context before]",
      "560:   let &ttymouse = save_ttymouse",
      "561: endfunc",
      "564: \" vim: shiftwidth=2 sts=2 expandtab",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "563: \" this was dividing by zero",
      "564: func Test_smoothscrol_zero_width()",
      "565:   CheckScreendump",
      "567:   let lines =<< trim END",
      "568:       winsize 0 0",
      "569:       vsplit",
      "570:       vsplit",
      "571:       vsplit",
      "572:       vsplit",
      "573:       vsplit",
      "574:       sil norm \u0017\u000e\u0017H",
      "575:       set wrap",
      "576:       set smoothscroll",
      "577:       set number",
      "578:   END",
      "579:   call writefile(lines, 'XSmoothScrollZero', 'D')",
      "580:   let buf = RunVimInTerminal('-u NONE -i NONE -n -m -X -Z -e -s -S XSmoothScrollZero', #{rows: 6, cols: 60, wait_for_ruler: 0})",
      "581:   call TermWait(buf, 3000)",
      "582:   call VerifyScreenDump(buf, 'Test_smoothscroll_zero_1', {})",
      "584:   call term_sendkeys(buf, \":sil norm \\<C-V>\\<C-W>\\<C-V>\\<C-N>\\<CR>\")",
      "585:   call VerifyScreenDump(buf, 'Test_smoothscroll_zero_2', {})",
      "587:   call StopVimInTerminal(buf)",
      "588: endfunc",
      "",
      "---------------"
    ],
    "src/version.c||src/version.c": [
      "File: src/version.c -> src/version.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "696: static int included_patches[] =",
      "699:     1246,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "699:     1247,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c8502f9b880b6d23baa4f9d28b60e1ceb442e35f",
      "candidate_info": {
        "commit_hash": "c8502f9b880b6d23baa4f9d28b60e1ceb442e35f",
        "repo": "vim/vim",
        "commit_url": "https://github.com/vim/vim/commit/c8502f9b880b6d23baa4f9d28b60e1ceb442e35f",
        "files": [
          "src/drawscreen.c",
          "src/move.c",
          "src/proto/move.pro",
          "src/testdir/dumps/Test_smooth_ins_lines.dump",
          "src/testdir/test_scroll_opt.vim",
          "src/version.c"
        ],
        "message": "patch 9.0.1512: inserting lines when scrolling with 'smoothscroll' set\n\nProblem:    Inserting lines when scrolling with 'smoothscroll' set.\nSolution:   Adjust line height computation for w_skipcol. (Luuk van Baal,\n            closes #12350)",
        "before_after_code_files": [
          "src/drawscreen.c||src/drawscreen.c",
          "src/move.c||src/move.c",
          "src/proto/move.pro||src/proto/move.pro",
          "src/testdir/dumps/Test_smooth_ins_lines.dump||src/testdir/dumps/Test_smooth_ins_lines.dump",
          "src/testdir/test_scroll_opt.vim||src/testdir/test_scroll_opt.vim",
          "src/version.c||src/version.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/move.c||src/move.c",
            "src/testdir/test_scroll_opt.vim||src/testdir/test_scroll_opt.vim",
            "src/version.c||src/version.c"
          ],
          "candidate": [
            "src/move.c||src/move.c",
            "src/testdir/test_scroll_opt.vim||src/testdir/test_scroll_opt.vim",
            "src/version.c||src/version.c"
          ]
        }
      },
      "candidate_diff": {
        "src/drawscreen.c||src/drawscreen.c": [
          "File: src/drawscreen.c -> src/drawscreen.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2327:    {",
          "2328: #ifdef FEAT_DIFF",
          "2329:        if (l == wp->w_topline)",
          "2332:        else",
          "2333: #endif",
          "2334:     new_rows += plines_win(wp, l, TRUE);",
          "",
          "[Removed Lines]",
          "2330:     new_rows += plines_win_nofill(wp, l, TRUE)",
          "2331:              + wp->w_topfill;",
          "",
          "[Added Lines]",
          "2330:        {",
          "2331:     int n = plines_win_nofill(wp, l, FALSE)",
          "2332:         + wp->w_topfill;",
          "2333:     n = adjust_plines_for_skipcol(wp, n);",
          "2334:     if (n > wp->w_height)",
          "2335:         n = wp->w_height;",
          "2336:     new_rows += n;",
          "2337:        }",
          "",
          "---------------"
        ],
        "src/move.c||src/move.c": [
          "File: src/move.c -> src/move.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "42: adjust_plines_for_skipcol(win_T *wp, int n)",
          "43: {",
          "44:     if (wp->w_skipcol == 0)",
          "",
          "[Removed Lines]",
          "41:     static int",
          "",
          "[Added Lines]",
          "41:     int",
          "",
          "---------------"
        ],
        "src/proto/move.pro||src/proto/move.pro": [
          "File: src/proto/move.pro -> src/proto/move.pro",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: void redraw_for_cursorline(win_T *wp);",
          "3: void update_topline_redraw(void);",
          "4: void update_topline(void);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: int adjust_plines_for_skipcol(win_T *wp, int n);",
          "",
          "---------------"
        ],
        "src/testdir/dumps/Test_smooth_ins_lines.dump||src/testdir/dumps/Test_smooth_ins_lines.dump": [
          "File: src/testdir/dumps/Test_smooth_ins_lines.dump -> src/testdir/dumps/Test_smooth_ins_lines.dump",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: |<+0#4040ff13#ffffff0@2|l+0#0000000&|o|t|s| |o|f| |t|e|x|t| |i|n| |o|n|e| |l|i|n|e> @12",
          "2: |l|i|n|e| |t|w|o| @31",
          "3: |l|i|n|e| |t|h|r|e@1| @29",
          "4: |l|i|n|e| |f|o|u|r| @30",
          "5: |l|i|n|e| |f|i|v|e| @30",
          "6: @22|1|,|6|8| @9|A|l@1|",
          "",
          "---------------"
        ],
        "src/testdir/test_scroll_opt.vim||src/testdir/test_scroll_opt.vim": [
          "File: src/testdir/test_scroll_opt.vim -> src/testdir/test_scroll_opt.vim",
          "--- Hunk 1 ---",
          "[Context before]",
          "587: endfunc",
          "589: \" this was dividing by zero",
          "591:   CheckScreendump",
          "593:   let lines =<< trim END",
          "",
          "[Removed Lines]",
          "590: func Test_smoothscrol_zero_width()",
          "",
          "[Added Lines]",
          "590: func Test_smoothscroll_zero_width()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "613:   call StopVimInTerminal(buf)",
          "614: endfunc",
          "617: \" vim: shiftwidth=2 sts=2 expandtab",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "616: \" this was unnecessarily inserting lines",
          "617: func Test_smoothscroll_ins_lines()",
          "618:   CheckScreendump",
          "620:   let lines =<< trim END",
          "621:       set wrap",
          "622:       set smoothscroll",
          "623:       set scrolloff=0",
          "624:       set conceallevel=2",
          "625:       call setline(1, [",
          "626:         \\'line one' .. 'with lots of text in one line '->repeat(2),",
          "627:         \\'line two',",
          "628:         \\'line three',",
          "629:         \\'line four',",
          "630:         \\'line five'",
          "631:       \\])",
          "632:   END",
          "633:   call writefile(lines, 'XSmoothScrollInsLines', 'D')",
          "634:   let buf = RunVimInTerminal('-S XSmoothScrollInsLines', #{rows: 6, cols: 40})",
          "636:   call term_sendkeys(buf, \"\\<C-E>gjgk\")",
          "637:   call VerifyScreenDump(buf, 'Test_smooth_ins_lines', {})",
          "639:   call StopVimInTerminal(buf)",
          "640: endfunc",
          "",
          "---------------"
        ],
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "696: static int included_patches[] =",
          "699:     1511,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "699:     1512,",
          "",
          "---------------"
        ]
      }
    }
  ]
}