{
  "cve_id": "CVE-2017-12476",
  "cve_desc": "The AP4_AvccAtom::InspectFields function in Core/Ap4AvccAtom.cpp in Bento4 mp4dump before 1.5.0-616 allows remote attackers to cause a denial of service (NULL pointer dereference and application crash) via a crafted mp4 file.",
  "repo": "axiomatic-systems/Bento4",
  "patch_hash": "4d3f0bebd5f8518fd775f671c12bea58c68e814e",
  "patch_info": {
    "commit_hash": "4d3f0bebd5f8518fd775f671c12bea58c68e814e",
    "repo": "axiomatic-systems/Bento4",
    "commit_url": "https://github.com/axiomatic-systems/Bento4/commit/4d3f0bebd5f8518fd775f671c12bea58c68e814e",
    "files": [
      "Source/C++/Core/Ap4AtomSampleTable.cpp",
      "Source/C++/Core/Ap4AvccAtom.cpp",
      "Source/C++/Core/Ap4Processor.cpp",
      "Source/C++/Core/Ap4Version.h"
    ],
    "message": "fixed possible crashes on malformed inputs.",
    "before_after_code_files": [
      "Source/C++/Core/Ap4AtomSampleTable.cpp||Source/C++/Core/Ap4AtomSampleTable.cpp",
      "Source/C++/Core/Ap4AvccAtom.cpp||Source/C++/Core/Ap4AvccAtom.cpp",
      "Source/C++/Core/Ap4Processor.cpp||Source/C++/Core/Ap4Processor.cpp",
      "Source/C++/Core/Ap4Version.h||Source/C++/Core/Ap4Version.h"
    ]
  },
  "patch_diff": {
    "Source/C++/Core/Ap4AtomSampleTable.cpp||Source/C++/Core/Ap4AtomSampleTable.cpp": [
      "File: Source/C++/Core/Ap4AtomSampleTable.cpp -> Source/C++/Core/Ap4AtomSampleTable.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "87: {",
      "88:     AP4_Result result;",
      "91:     if (m_StcoAtom == NULL && m_Co64Atom == NULL) {",
      "92:         return AP4_ERROR_INVALID_FORMAT;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "91:     if (!m_StscAtom) {",
      "92:         return AP4_ERROR_INVALID_FORMAT;",
      "93:     }",
      "",
      "---------------"
    ],
    "Source/C++/Core/Ap4AvccAtom.cpp||Source/C++/Core/Ap4AvccAtom.cpp": [
      "File: Source/C++/Core/Ap4AvccAtom.cpp -> Source/C++/Core/Ap4AvccAtom.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "270:     for (unsigned int i=0; i<m_SequenceParameters.ItemCount(); i++) {",
      "271:         inspector.AddField(\"Sequence Parameter\", m_SequenceParameters[i].GetData(), m_SequenceParameters[i].GetDataSize());",
      "272:     }",
      "274:         inspector.AddField(\"Picture Parameter\", m_PictureParameters[i].GetData(), m_PictureParameters[i].GetDataSize());",
      "275:     }",
      "276:     return AP4_SUCCESS;",
      "",
      "[Removed Lines]",
      "273:     for (unsigned int i=0; i<m_SequenceParameters.ItemCount(); i++) {",
      "",
      "[Added Lines]",
      "273:     for (unsigned int i=0; i<m_PictureParameters.ItemCount(); i++) {",
      "",
      "---------------"
    ],
    "Source/C++/Core/Ap4Processor.cpp||Source/C++/Core/Ap4Processor.cpp": [
      "File: Source/C++/Core/Ap4Processor.cpp -> Source/C++/Core/Ap4Processor.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "554:             int cursor = -1;",
      "555:             for (unsigned int i=0; i<track_count; i++) {",
      "556:                 if (!cursors[i].m_EndReached &&",
      "557:                     cursors[i].m_Locator.m_Sample.GetOffset() <= min_offset) {",
      "558:                     min_offset = cursors[i].m_Locator.m_Sample.GetOffset();",
      "559:                     cursor = i;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "557:                     cursors[i].m_Locator.m_SampleTable &&",
      "",
      "---------------"
    ],
    "Source/C++/Core/Ap4Version.h||Source/C++/Core/Ap4Version.h": [
      "File: Source/C++/Core/Ap4Version.h -> Source/C++/Core/Ap4Version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "43: #endif // _AP4_VERSION_H_",
      "",
      "[Removed Lines]",
      "40: #define AP4_VERSION        0x01050000",
      "41: #define AP4_VERSION_STRING \"1.5.0.0\"",
      "",
      "[Added Lines]",
      "40: #define AP4_VERSION        0x01050001",
      "41: #define AP4_VERSION_STRING \"1.5.0.1\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e799f78132c14b1a27a24c52cead206ba8199446",
      "candidate_info": {
        "commit_hash": "e799f78132c14b1a27a24c52cead206ba8199446",
        "repo": "axiomatic-systems/Bento4",
        "commit_url": "https://github.com/axiomatic-systems/Bento4/commit/e799f78132c14b1a27a24c52cead206ba8199446",
        "files": [
          "Source/C++/Core/Ap4OmaDcf.cpp",
          "Source/C++/Core/Ap4SampleDescription.cpp",
          "Source/C++/Core/Ap4Version.h",
          "Source/Python/utils/mp4-dash.py",
          "Source/Python/utils/mp4-hls.py"
        ],
        "message": "prep for r620",
        "before_after_code_files": [
          "Source/C++/Core/Ap4OmaDcf.cpp||Source/C++/Core/Ap4OmaDcf.cpp",
          "Source/C++/Core/Ap4SampleDescription.cpp||Source/C++/Core/Ap4SampleDescription.cpp",
          "Source/C++/Core/Ap4Version.h||Source/C++/Core/Ap4Version.h",
          "Source/Python/utils/mp4-dash.py||Source/Python/utils/mp4-dash.py",
          "Source/Python/utils/mp4-hls.py||Source/Python/utils/mp4-hls.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Source/C++/Core/Ap4Version.h||Source/C++/Core/Ap4Version.h"
          ],
          "candidate": [
            "Source/C++/Core/Ap4Version.h||Source/C++/Core/Ap4Version.h"
          ]
        }
      },
      "candidate_diff": {
        "Source/C++/Core/Ap4OmaDcf.cpp||Source/C++/Core/Ap4OmaDcf.cpp": [
          "File: Source/C++/Core/Ap4OmaDcf.cpp -> Source/C++/Core/Ap4OmaDcf.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "351:     if (odaf) {",
          "352:         if (odaf->GetIvLength() > AP4_CIPHER_BLOCK_SIZE) return AP4_ERROR_INVALID_FORMAT;",
          "353:         if (odaf->GetKeyIndicatorLength() != 0) return AP4_ERROR_INVALID_FORMAT;",
          "354:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "354:     } else {",
          "355:         return AP4_ERROR_INVALID_FORMAT;",
          "",
          "---------------"
        ],
        "Source/C++/Core/Ap4SampleDescription.cpp||Source/C++/Core/Ap4SampleDescription.cpp": [
          "File: Source/C++/Core/Ap4SampleDescription.cpp -> Source/C++/Core/Ap4SampleDescription.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "512:        bits >>= 1;",
          "513:        count--;",
          "514:     }",
          "516: }",
          "",
          "[Removed Lines]",
          "515:     return reverse_bits << count;",
          "",
          "[Added Lines]",
          "515:     return (count < 32) ? (reverse_bits << count) : 0;",
          "",
          "---------------"
        ],
        "Source/C++/Core/Ap4Version.h||Source/C++/Core/Ap4Version.h": [
          "File: Source/C++/Core/Ap4Version.h -> Source/C++/Core/Ap4Version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: #endif // _AP4_VERSION_H_",
          "",
          "[Removed Lines]",
          "40: #define AP4_VERSION        0x01050002",
          "41: #define AP4_VERSION_STRING \"1.5.0.2\"",
          "",
          "[Added Lines]",
          "40: #define AP4_VERSION        0x01050100",
          "41: #define AP4_VERSION_STRING \"1.5.1.0\"",
          "",
          "---------------"
        ],
        "Source/Python/utils/mp4-dash.py||Source/Python/utils/mp4-dash.py": [
          "File: Source/Python/utils/mp4-dash.py -> Source/Python/utils/mp4-dash.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "29: # setup main options",
          "30: VERSION = \"1.8.0\"",
          "32: SCRIPT_PATH = path.abspath(path.dirname(__file__))",
          "33: sys.path += [SCRIPT_PATH]",
          "",
          "[Removed Lines]",
          "31: SDK_REVISION = '619'",
          "",
          "[Added Lines]",
          "31: SDK_REVISION = '620'",
          "",
          "---------------"
        ],
        "Source/Python/utils/mp4-hls.py||Source/Python/utils/mp4-hls.py": [
          "File: Source/Python/utils/mp4-hls.py -> Source/Python/utils/mp4-hls.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: # setup main options",
          "29: VERSION = \"1.1.0\"",
          "31: SCRIPT_PATH = path.abspath(path.dirname(__file__))",
          "32: sys.path += [SCRIPT_PATH]",
          "",
          "[Removed Lines]",
          "30: SDK_REVISION = '619'",
          "",
          "[Added Lines]",
          "30: SDK_REVISION = '620'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dd1a7ea5087f771cbc7c3713b3b812eecacd4de4",
      "candidate_info": {
        "commit_hash": "dd1a7ea5087f771cbc7c3713b3b812eecacd4de4",
        "repo": "axiomatic-systems/Bento4",
        "commit_url": "https://github.com/axiomatic-systems/Bento4/commit/dd1a7ea5087f771cbc7c3713b3b812eecacd4de4",
        "files": [
          "Source/C++/Core/Ap4Version.h",
          "Source/Python/utils/mp4-dash.py",
          "Source/Python/utils/mp4-hls.py"
        ],
        "message": "fixed python tools for HLS/fMP4",
        "before_after_code_files": [
          "Source/C++/Core/Ap4Version.h||Source/C++/Core/Ap4Version.h",
          "Source/Python/utils/mp4-dash.py||Source/Python/utils/mp4-dash.py",
          "Source/Python/utils/mp4-hls.py||Source/Python/utils/mp4-hls.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Source/C++/Core/Ap4Version.h||Source/C++/Core/Ap4Version.h"
          ],
          "candidate": [
            "Source/C++/Core/Ap4Version.h||Source/C++/Core/Ap4Version.h"
          ]
        }
      },
      "candidate_diff": {
        "Source/C++/Core/Ap4Version.h||Source/C++/Core/Ap4Version.h": [
          "File: Source/C++/Core/Ap4Version.h -> Source/C++/Core/Ap4Version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: #endif // _AP4_VERSION_H_",
          "",
          "[Removed Lines]",
          "40: #define AP4_VERSION        0x01050001",
          "41: #define AP4_VERSION_STRING \"1.5.0.1\"",
          "",
          "[Added Lines]",
          "40: #define AP4_VERSION        0x01050002",
          "41: #define AP4_VERSION_STRING \"1.5.0.2\"",
          "",
          "---------------"
        ],
        "Source/Python/utils/mp4-dash.py||Source/Python/utils/mp4-dash.py": [
          "File: Source/Python/utils/mp4-dash.py -> Source/Python/utils/mp4-dash.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "222:     # resolve the default KID and KEY",
          "223:     key_info = None",
          "227:     if key_info:",
          "228:         default_kid = key_info['kid']",
          "",
          "[Removed Lines]",
          "224:     if hasattr(options, 'track_key_infos'):",
          "225:         key_info = options.track_key_infos.get(tracks[0].id)",
          "",
          "[Added Lines]",
          "224:     if len(tracks):",
          "225:         key_info = tracks[0].key_info",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "591:         segment_pattern = SEGMENT_PATTERN.replace('ll','')",
          "593:     if options.encryption_key:",
          "598:     for i in range(len(track.segment_durations)):",
          "599:         media_playlist_file.write('#EXTINF:%f,\\r\\n' % (track.segment_durations[i]))",
          "",
          "[Removed Lines]",
          "594:         print '-------------', track.id",
          "595:         key_info = options.track_key_infos.get(track.id)",
          "596:         media_playlist_file.write('#EXT-X-KEY:METHOD=SAMPLE-AES,URI=\"'+options.hls_key_url+'\",IV=0x'+key_info['iv']+'\\r\\n')",
          "",
          "[Added Lines]",
          "594:         media_playlist_file.write('#EXT-X-KEY:METHOD=SAMPLE-AES,URI=\"'+options.hls_key_url+'\",IV=0x'+track.key_info['iv']+'\\r\\n')",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "809:         key_info = None",
          "810:         if options.encryption_key:",
          "811:             if len(video_tracks):",
          "813:                 if not key_info and len(audio_tracks):",
          "816:         if key_info:",
          "817:             kid = key_info['kid']",
          "",
          "[Removed Lines]",
          "812:                 key_info = options.track_key_infos.get(video_tracks[0].id)",
          "814:                     key_info = options.track_key_infos.get(audio_tracks[0].id)",
          "",
          "[Added Lines]",
          "810:                 key_info = video_tracks[0].key_info",
          "812:                     key_info = audio_tracks[0].key_info",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1071:             separator = key_spec.find(':')",
          "1072:             key_info['filter'] = [key_spec[:separator]]",
          "1073:             key_spec = key_spec[separator+1:]",
          "1074:         if key_spec.startswith('@'):",
          "1075:             kid_hex, key_hex = GetEncryptionKey(options, key_spec[1:])",
          "1076:         else:",
          "1077:             if ':' not in key_spec:",
          "1078:                 raise Exception('Invalid argument syntax for --encryption-key option')",
          "1080:             if len(kid_hex) != 32:",
          "1081:                 raise Exception('Invalid argument format for --encryption-key option')",
          "",
          "[Removed Lines]",
          "1079:             kid_hex, key_hex = key_spec.split(':', 1)",
          "",
          "[Added Lines]",
          "1072:         iv_hex = None",
          "1078:             parts = key_spec.split(':', 2)",
          "1079:             kid_hex = parts[0]",
          "1080:             key_hex = parts[1]",
          "1081:             if len(parts) > 2:",
          "1082:                 iv_hex = parts[2]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1095:         key_info['key'] = key_hex",
          "1096:         key_info['kid'] = kid_hex",
          "1098:             # for HLS, we need to know the IV",
          "1099:             import random",
          "1100:             sys_random = random.SystemRandom()",
          "1101:             random_iv = sys_random.getrandbits(128)",
          "1102:             key_info['iv'] = '%016x' % random_iv",
          "1106:         options.key_infos.append(key_info)",
          "",
          "[Removed Lines]",
          "1097:         if options.hls:",
          "1103:         else:",
          "1104:             key_info['iv'] = 'random'",
          "",
          "[Added Lines]",
          "1100:         key_info['iv']  = iv_hex or 'random'",
          "1101:         if options.hls and not iv_hex:",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1204:                       help=\"Use the original DASH MPD namespace as it was specified in the first published specification\")",
          "1205:     parser.add_option('', \"--encryption-key\", dest=\"encryption_key\", metavar='<key-spec>', default=None,",
          "1206:                       help=\"Encrypt some or all tracks with MPEG CENC (AES-128), where <key-spec> specifies the KID(s) and Key(s) to use, using one of the following forms: \" +",
          "1208:                            \"(2) @<key-locator> where <key-locator> is an expression of one of the supported key locator schemes. Each entry may be prefixed with an optional track filter, and multiple <key-spec> entries can be used, separated by ','. (see online docs for details)\")",
          "1209:     parser.add_option('', \"--encryption-cenc-scheme\", dest=\"encryption_cenc_scheme\", metavar='<cenc-scheme>', default='cenc', choices=('cenc', 'cbc1', 'cens', 'cbcs'),",
          "1210:                       help=\"MPEG Common Encryption scheme (cenc, cbc1, cens or cbcs). (default: cenc)\")",
          "",
          "[Removed Lines]",
          "1207:                            \"(1) <KID>:<key> with <KID> as a 32-character hex string and <key> either a 32-character hex string or the character '#' followed by a base64-encoded key seed; or \" +",
          "",
          "[Added Lines]",
          "1209:                            \"(1) <KID>:<key> or <KID>:<key>:<IV> with <KID> (and <IV> if specififed) as a 32-character hex string and <key> either a 32-character hex string or the character '#' followed by a base64-encoded key seed; or \" +",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1349:         if options.verbose:",
          "1350:             for key_info in options.key_infos:",
          "1351:                 if key_info['key']:",
          "1353:                 else:",
          "1354:                     message = '[NOT ENCRYPTED]'",
          "1355:                 print 'Key Info for '+'/'.join(key_info['filter'])+': '+message",
          "",
          "[Removed Lines]",
          "1352:                     message = 'KID='+key_info['kid']+', KEY='+key_info['key']",
          "",
          "[Added Lines]",
          "1354:                     message = 'KID='+key_info['kid']+', KEY='+key_info['key']+', IV='+key_info['iv']",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1431:             # select which KID/KEY to use for each track",
          "1432:             default_kid = options.key_infos[0]['kid']",
          "1433:             default_key = options.key_infos[0]['key']",
          "1435:             for track in info['tracks']:",
          "1436:                 for key_info in options.key_infos:",
          "1437:                     if track['type'].lower() in key_info['filter']:",
          "1440:             # skip now if we're only outputing the MPD",
          "1441:             if options.no_media:",
          "1442:                 continue",
          "1444:             # don't process any further if we won't have key material for this media source",
          "1446:                 continue",
          "1449:             encrypted_file = tempfile.NamedTemporaryFile(dir = options.output_dir, delete=False)",
          "1450:             encrypted_files[media_file] = encrypted_file",
          "1451:             TempFiles.append(encrypted_file.name)",
          "",
          "[Removed Lines]",
          "1434:             options.track_key_infos = {}",
          "1438:                         options.track_key_infos[track['id']] = key_info",
          "1445:             if len(options.track_key_infos) == 0:",
          "1448:             print 'Encrypting track IDs '+str(sorted(options.track_key_infos.keys()))+' in '+ GetMappedFileName(media_file)",
          "",
          "[Added Lines]",
          "1436:             media_source.track_key_infos = {}",
          "1440:                         media_source.track_key_infos[track['id']] = key_info",
          "1447:             if len(media_source.track_key_infos) == 0:",
          "1450:             print 'Encrypting track IDs '+str(sorted(media_source.track_key_infos.keys()))+' in '+ GetMappedFileName(media_file)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1459:                 if options.smooth or options.playready:",
          "1460:                     args += ['--global-option', 'mpeg-cenc.piff-compatible:true']",
          "1464:                 args += ['--key', str(track_id)+':'+key_info['key']+':'+key_info['iv'], '--property', str(track_id)+':KID:'+key_info['kid']]",
          "1466:             # EME Common Encryption / Clearkey",
          "",
          "[Removed Lines]",
          "1462:             for track_id in sorted(options.track_key_infos.keys()):",
          "1463:                 key_info = options.track_key_infos[track_id]",
          "",
          "[Added Lines]",
          "1464:             for track_id in sorted(media_source.track_key_infos.keys()):",
          "1465:                 key_info = media_source.track_key_infos[track_id]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1526:         print 'Video:',     video_sets",
          "1527:         print 'Subtitles:', subtitles_sets",
          "1529:     # check that segments are consistent between tracks of the same adaptation set",
          "1530:     for tracks in video_sets.values():",
          "1531:         prev_track = None",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1531:     # assign key info to tracks",
          "1532:     for track in audio_tracks+video_tracks+subtitles_tracks:",
          "1533:         track.key_info = track.parent.media_source.track_key_infos.get(track.id)",
          "",
          "---------------"
        ],
        "Source/Python/utils/mp4-hls.py||Source/Python/utils/mp4-hls.py": [
          "File: Source/Python/utils/mp4-hls.py -> Source/Python/utils/mp4-hls.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "348:         master_playlist.write('\\r\\n')",
          "349:         master_playlist.write('#EXT-X-VERSION:'+str(options.hls_version)+'\\r\\n')",
          "351:     # process subtitles sources",
          "352:     subtitles_files = [SubtitlesFile(options, media_source) for media_source in media_sources if media_source.format in ['ttml', 'webvtt']]",
          "353:     if len(subtitles_files):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "351:     # optional session key",
          "352:     if options.signal_session_key:",
          "353:         ext_x_session_key_line = '#EXT-X-SESSION-KEY:METHOD='+options.encryption_mode+',URI=\"'+options.encryption_key_uri+'\"'",
          "354:         if options.encryption_key_format:",
          "355:             ext_x_session_key_line += ',KEYFORMAT=\"'+options.encryption_key_format+'\"'",
          "356:         if options.encryption_key_format_versions:",
          "357:             ext_x_session_key_line += ',KEYFORMATVERSIONS=\"'+options.encryption_key_format_versions+'\"'",
          "358:         master_playlist.write(ext_x_session_key_line+'\\r\\n')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "513:                       help=\"Encryption key in hexadecimal (default: no encryption)\")",
          "514:     parser.add_option('', '--encryption-iv-mode', dest=\"encryption_iv_mode\", metavar=\"<mode>\",",
          "515:                       help=\"Encryption IV mode: 'sequence', 'random' or 'fps' (Fairplay Streaming) (default: sequence). When the mode is 'fps', the encryption key must be 32 bytes: 16 bytes for the key followed by 16 bytes for the IV.\")",
          "517:                       help=\"Encryption key URI (may be a relative or absolute URI). (default: key.bin)\")",
          "518:     parser.add_option('', '--encryption-key-format', dest=\"encryption_key_format\", metavar=\"<format>\",",
          "519:                       help=\"Encryption key format. (default: 'identity')\")",
          "520:     parser.add_option('', '--encryption-key-format-versions', dest=\"encryption_key_format_versions\", metavar=\"<versions>\",",
          "521:                       help=\"Encryption key format versions.\")",
          "522:     parser.add_option('', '--fairplay', dest=\"fairplay\", metavar=\"<fairplay-parameters>\", help=\"Enable Fairplay Key Delivery. The <fairplay-parameters> argument is one or more <name>:<value> pair(s) (separated by '#' if more than one). Names include 'uri' [string] (required)\")",
          "523:     parser.add_option('', '--widevine', dest=\"widevine\", metavar=\"<widevine-parameters>\", help=\"Enable Widevine Key Delivery. The <widevine-parameters> argument is one or more <name>:<value> pair(s) (separated by '#' if more than one). Names include 'provider' [string] (required), 'content_id' [byte array in hex] (optional), 'kid' [16-byte array in hex] (required)\")",
          "524:     parser.add_option('', '--output-encryption-key', dest=\"output_encryption_key\", action=\"store_true\", default=False,",
          "",
          "[Removed Lines]",
          "516:     parser.add_option('', '--encryption-key-uri', dest=\"encryption_key_uri\", metavar=\"<uri>\",",
          "",
          "[Added Lines]",
          "525:     parser.add_option('', '--encryption-key-uri', dest=\"encryption_key_uri\", metavar=\"<uri>\", default=\"key.bin\",",
          "531:     parser.add_option('', '--signal-session-key', dest='signal_session_key', action='store_true', default=False,",
          "532:                       help=\"Signal an #EXT-X-SESSION-KEY tag in the master playlist\")",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "553:     # Fairplay option",
          "554:     if options.fairplay:",
          "555:         if options.encryption_iv_mode:",
          "556:             if options.encryption_iv_mode != 'fps':",
          "557:                 sys.stderr.write(\"ERROR: --fairplay requires --encryption-iv-mode to be 'fps'\\n\")",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "566:         if not options.encryption_key_format:",
          "567:             options.encryption_key_format = 'com.apple.streamingkeydelivery'",
          "568:         if not options.encryption_key_format_versions:",
          "569:             options.encryption_key_format_versions = '1'",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "572:             sys.stderr.write('ERROR: --fairplay option requires a \"uri\" parameter (ex: skd://xxx)\\n')",
          "573:             sys.exit(1)",
          "575:     # Widevine option",
          "576:     if options.widevine:",
          "577:         if not options.encryption_key:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "591:         options.signal_session_key = True",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "598:         else:",
          "599:             options.widevine['content_id'] = '*'",
          "601:     if options.encryption_mode == 'SAMPLE-AES':",
          "602:         options.hls_version = 5",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "619:     # defaults",
          "620:     if not options.encryption_mode:",
          "621:         options.encryption_mode = 'AES-128'",
          "",
          "---------------"
        ]
      }
    }
  ]
}