{
  "cve_id": "CVE-2023-33658",
  "cve_desc": "A heap buffer overflow vulnerability exists in NanoMQ 0.17.2. The vulnerability can be triggered by calling the function nni_msg_get_pub_pid() in the file message.c. An attacker could exploit this vulnerability to cause a denial of service attack.",
  "repo": "nanomq/NanoNNG",
  "patch_hash": "657e6c81c474bdee0e6413483b990e90610030c1",
  "patch_info": {
    "commit_hash": "657e6c81c474bdee0e6413483b990e90610030c1",
    "repo": "nanomq/NanoNNG",
    "commit_url": "https://github.com/nanomq/NanoNNG/commit/657e6c81c474bdee0e6413483b990e90610030c1",
    "files": [
      "src/mqtt/transport/tls/mqtt_tls.c",
      "src/sp/transport/mqtts/broker_tls.c",
      "src/sp/transport/mqttws/nmq_websocket.c"
    ],
    "message": "* FIX [transport] fix #1153 https://github.com/emqx/nanomq/issues/1153 for other transport",
    "before_after_code_files": [
      "src/mqtt/transport/tls/mqtt_tls.c||src/mqtt/transport/tls/mqtt_tls.c",
      "src/sp/transport/mqtts/broker_tls.c||src/sp/transport/mqtts/broker_tls.c",
      "src/sp/transport/mqttws/nmq_websocket.c||src/sp/transport/mqttws/nmq_websocket.c"
    ]
  },
  "patch_diff": {
    "src/mqtt/transport/tls/mqtt_tls.c||src/mqtt/transport/tls/mqtt_tls.c": [
      "File: src/mqtt/transport/tls/mqtt_tls.c -> src/mqtt/transport/tls/mqtt_tls.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "695:     ack_cmd = CMD_PUBACK;",
      "696:    } else if (qos_pac == 2) {",
      "697:     ack_cmd = CMD_PUBREC;",
      "698:    }",
      "700:    ack = true;",
      "701:   }",
      "702:   break;",
      "",
      "[Removed Lines]",
      "699:    packet_id = nni_msg_get_pub_pid(msg);",
      "",
      "[Added Lines]",
      "698:    } else {",
      "699:     log_warn(\"Wrong QoS level!\");",
      "700:     rv = PROTOCOL_ERROR;",
      "701:     goto recv_error;",
      "702:    }",
      "703:    if ((packet_id = nni_msg_get_pub_pid(msg)) == 0) {",
      "704:     rv = PROTOCOL_ERROR;",
      "705:     goto recv_error;",
      "",
      "---------------"
    ],
    "src/sp/transport/mqtts/broker_tls.c||src/sp/transport/mqtts/broker_tls.c": [
      "File: src/sp/transport/mqtts/broker_tls.c -> src/sp/transport/mqtts/broker_tls.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "717:     ack_cmd = CMD_PUBACK;",
      "718:    } else if (qos_pac == 2) {",
      "719:     ack_cmd = CMD_PUBREC;",
      "720:    }",
      "722:    ack       = true;",
      "723:   }",
      "724:  } else if (type == CMD_PUBREC) {",
      "",
      "[Removed Lines]",
      "721:    packet_id = nni_msg_get_pub_pid(msg);",
      "",
      "[Added Lines]",
      "720:    } else {",
      "721:     log_warn(\"Wrong QoS level!\");",
      "722:     rv = PROTOCOL_ERROR;",
      "723:     goto recv_error;",
      "724:    }",
      "725:    if ((packet_id = nni_msg_get_pub_pid(msg)) == 0) {",
      "726:     rv = PROTOCOL_ERROR;",
      "727:     goto recv_error;",
      "",
      "---------------"
    ],
    "src/sp/transport/mqttws/nmq_websocket.c||src/sp/transport/mqttws/nmq_websocket.c": [
      "File: src/sp/transport/mqttws/nmq_websocket.c -> src/sp/transport/mqttws/nmq_websocket.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "250:      ack_cmd = CMD_PUBACK;",
      "251:     } else if (qos_pac == 2) {",
      "252:      ack_cmd = CMD_PUBREC;",
      "253:     }",
      "256:    }",
      "257:   } else if (cmd == CMD_PUBREC) {",
      "258:    if (nni_mqtt_pubres_decode(smsg, &packet_id, &reason_code, &prop,",
      "",
      "[Removed Lines]",
      "254:     packet_id = nni_msg_get_pub_pid(smsg);",
      "255:     ack       = true;",
      "",
      "[Added Lines]",
      "253:     } else {",
      "254:      log_warn(\"Wrong QoS level!\");",
      "255:      rv = PROTOCOL_ERROR;",
      "256:      goto recv_error;",
      "258:     if ((packet_id = nni_msg_get_pub_pid(msg)) ==",
      "259:         0) {",
      "260:      rv = PROTOCOL_ERROR;",
      "261:      goto recv_error;",
      "262:     }",
      "263:     ack = true;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "971b7d0264a706d2bd091125e2efe6599aa13756",
      "candidate_info": {
        "commit_hash": "971b7d0264a706d2bd091125e2efe6599aa13756",
        "repo": "nanomq/NanoNNG",
        "commit_url": "https://github.com/nanomq/NanoNNG/commit/971b7d0264a706d2bd091125e2efe6599aa13756",
        "files": [
          "src/mqtt/transport/tcp/mqtt_tcp.c"
        ],
        "message": "* FIX [mqtt_tcp] fix https://github.com/emqx/nanomq/issues/1153 for nanosdk",
        "before_after_code_files": [
          "src/mqtt/transport/tcp/mqtt_tcp.c||src/mqtt/transport/tcp/mqtt_tcp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/nanomq/NanoNNG/pull/512"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/mqtt/transport/tcp/mqtt_tcp.c||src/mqtt/transport/tcp/mqtt_tcp.c": [
          "File: src/mqtt/transport/tcp/mqtt_tcp.c -> src/mqtt/transport/tcp/mqtt_tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "696:     ack_cmd = CMD_PUBACK;",
          "697:    } else if (qos_pac == 2) {",
          "698:     ack_cmd = CMD_PUBREC;",
          "699:    }",
          "701:    ack = true;",
          "702:   }",
          "703:   break;",
          "",
          "[Removed Lines]",
          "700:    packet_id = nni_msg_get_pub_pid(msg);",
          "",
          "[Added Lines]",
          "699:    } else {",
          "700:     rv = PROTOCOL_ERROR;",
          "701:     goto recv_error;",
          "702:    }",
          "703:    if ((packet_id = nni_msg_get_pub_pid(msg)) == 0) {",
          "704:     rv = PROTOCOL_ERROR;",
          "705:     goto recv_error;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fe5ac81648275a3623ecc2c2f1185517187c36e6",
      "candidate_info": {
        "commit_hash": "fe5ac81648275a3623ecc2c2f1185517187c36e6",
        "repo": "nanomq/NanoNNG",
        "commit_url": "https://github.com/nanomq/NanoNNG/commit/fe5ac81648275a3623ecc2c2f1185517187c36e6",
        "files": [
          "src/core/message.c"
        ],
        "message": "* FIX [core] fix #1153",
        "before_after_code_files": [
          "src/core/message.c||src/core/message.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/core/message.c||src/core/message.c": [
          "File: src/core/message.c -> src/core/message.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "772:  pos = nni_msg_body(m);",
          "773:  NNI_GET16(pos, len);",
          "776: }",
          "",
          "[Removed Lines]",
          "774:  NNI_GET16(pos + len + 2, pid);",
          "775:  return pid;",
          "",
          "[Added Lines]",
          "774:  if (len > nni_msg_remaining_len(m) - 2)",
          "775:   return 0;",
          "776:  else {",
          "777:   NNI_GET16(pos + len + 2, pid);",
          "778:   return pid;",
          "779:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e175ad046bae26221fe3c48a36c1fc3c27b7f6b0",
      "candidate_info": {
        "commit_hash": "e175ad046bae26221fe3c48a36c1fc3c27b7f6b0",
        "repo": "nanomq/NanoNNG",
        "commit_url": "https://github.com/nanomq/NanoNNG/commit/e175ad046bae26221fe3c48a36c1fc3c27b7f6b0",
        "files": [
          "src/mqtt/protocol/mqtt/mqttv5_client.c",
          "src/sp/transport/mqttws/nmq_websocket.c"
        ],
        "message": "* FIX [websocket] fix websocket wrong pointer of msg",
        "before_after_code_files": [
          "src/mqtt/protocol/mqtt/mqttv5_client.c||src/mqtt/protocol/mqtt/mqttv5_client.c",
          "src/sp/transport/mqttws/nmq_websocket.c||src/sp/transport/mqttws/nmq_websocket.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/sp/transport/mqttws/nmq_websocket.c||src/sp/transport/mqttws/nmq_websocket.c"
          ],
          "candidate": [
            "src/sp/transport/mqttws/nmq_websocket.c||src/sp/transport/mqttws/nmq_websocket.c"
          ]
        }
      },
      "candidate_diff": {
        "src/mqtt/protocol/mqtt/mqttv5_client.c||src/mqtt/protocol/mqtt/mqttv5_client.c": [
          "File: src/mqtt/protocol/mqtt/mqttv5_client.c -> src/mqtt/protocol/mqtt/mqttv5_client.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "543:   count++;",
          "544:  }",
          "545:  if (count == 0) {",
          "547:   nni_msg_free(tmsg);",
          "548:  }",
          "549: #endif",
          "",
          "[Removed Lines]",
          "546:   nni_println(\"disconnect msg of bridging is lost due to no ctx on receving\");",
          "",
          "[Added Lines]",
          "546:   log_info(\"disconnect msg of bridging is lost due to no ctx on receving\");",
          "",
          "---------------"
        ],
        "src/sp/transport/mqttws/nmq_websocket.c||src/sp/transport/mqttws/nmq_websocket.c": [
          "File: src/sp/transport/mqttws/nmq_websocket.c -> src/sp/transport/mqttws/nmq_websocket.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "255:      rv = PROTOCOL_ERROR;",
          "256:      goto recv_error;",
          "257:     }",
          "259:         0) {",
          "260:      rv = PROTOCOL_ERROR;",
          "261:      goto recv_error;",
          "",
          "[Removed Lines]",
          "258:     if ((packet_id = nni_msg_get_pub_pid(msg)) ==",
          "",
          "[Added Lines]",
          "258:     if ((packet_id = nni_msg_get_pub_pid(smsg)) ==",
          "",
          "---------------"
        ]
      }
    }
  ]
}