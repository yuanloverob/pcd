{
  "cve_id": "CVE-2022-47520",
  "cve_desc": "An issue was discovered in the Linux kernel before 6.0.11. Missing offset validation in drivers/net/wireless/microchip/wilc1000/hif.c in the WILC1000 wireless driver can trigger an out-of-bounds read when parsing a Robust Security Network (RSN) information element from a Netlink packet.",
  "repo": "torvalds/linux",
  "patch_hash": "cd21d99e595ec1d8721e1058dcdd4f1f7de1d793",
  "patch_info": {
    "commit_hash": "cd21d99e595ec1d8721e1058dcdd4f1f7de1d793",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/cd21d99e595ec1d8721e1058dcdd4f1f7de1d793",
    "files": [
      "drivers/net/wireless/microchip/wilc1000/hif.c"
    ],
    "message": "wifi: wilc1000: validate pairwise and authentication suite offsets\n\nThere is no validation of 'offset' which can trigger an out-of-bounds\nread when extracting RSN capabilities.\n\nSigned-off-by: Phil Turnbull <philipturnbull@github.com>\nTested-by: Ajay Kathat <ajay.kathat@microchip.com>\nAcked-by: Ajay Kathat <ajay.kathat@microchip.com>\nSigned-off-by: Kalle Valo <kvalo@kernel.org>\nLink: https://lore.kernel.org/r/20221123153543.8568-2-philipturnbull@github.com",
    "before_after_code_files": [
      "drivers/net/wireless/microchip/wilc1000/hif.c||drivers/net/wireless/microchip/wilc1000/hif.c"
    ]
  },
  "patch_diff": {
    "drivers/net/wireless/microchip/wilc1000/hif.c||drivers/net/wireless/microchip/wilc1000/hif.c": [
      "File: drivers/net/wireless/microchip/wilc1000/hif.c -> drivers/net/wireless/microchip/wilc1000/hif.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "483:  rsn_ie = cfg80211_find_ie(WLAN_EID_RSN, ies->data, ies->len);",
      "484:  if (rsn_ie) {",
      "485:   int offset = 8;",
      "493:  }",
      "495:  if (param->rsn_found) {",
      "",
      "[Removed Lines]",
      "487:   param->mode_802_11i = 2;",
      "488:   param->rsn_found = true;",
      "490:   offset += (rsn_ie[offset] * 4) + 2;",
      "491:   offset += (rsn_ie[offset] * 4) + 2;",
      "492:   memcpy(param->rsn_cap, &rsn_ie[offset], 2);",
      "",
      "[Added Lines]",
      "485:   int rsn_ie_len = sizeof(struct element) + rsn_ie[1];",
      "489:   if (offset < rsn_ie_len) {",
      "491:    offset += (rsn_ie[offset] * 4) + 2;",
      "493:    if (offset < rsn_ie_len) {",
      "495:     offset += (rsn_ie[offset] * 4) + 2;",
      "497:     if (offset + 1 < rsn_ie_len) {",
      "498:      param->mode_802_11i = 2;",
      "499:      param->rsn_found = true;",
      "500:      memcpy(param->rsn_cap, &rsn_ie[offset], 2);",
      "501:     }",
      "502:    }",
      "503:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9ce4bb09123e9754996e358bd808d39f5d112899",
      "candidate_info": {
        "commit_hash": "9ce4bb09123e9754996e358bd808d39f5d112899",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/9ce4bb09123e9754996e358bd808d39f5d112899",
        "files": [
          "drivers/net/wireless/microchip/wilc1000/hif.c"
        ],
        "message": "wifi: wilc1000: fix for absent RSN capabilities WFA testcase\n\nMandatory WFA testcase\nCT_Security_WPA2Personal_STA_RSNEBoundsVerification-AbsentRSNCap,\nperforms bounds verfication on Beacon and/or Probe response frames. It\nfailed and observed the reason to be absence of cipher suite and AKM\nsuite in RSN information. To fix this, enable the RSN flag before extracting RSN\ncapabilities.\n\nFixes: cd21d99e595e (\"wifi: wilc1000: validate pairwise and authentication suite offsets\")\nSigned-off-by: Amisha Patel <amisha.patel@microchip.com>\nSigned-off-by: Kalle Valo <kvalo@kernel.org>\nLink: https://lore.kernel.org/r/20230421181005.4865-1-amisha.patel@microchip.com",
        "before_after_code_files": [
          "drivers/net/wireless/microchip/wilc1000/hif.c||drivers/net/wireless/microchip/wilc1000/hif.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "drivers/net/wireless/microchip/wilc1000/hif.c||drivers/net/wireless/microchip/wilc1000/hif.c"
          ],
          "candidate": [
            "drivers/net/wireless/microchip/wilc1000/hif.c||drivers/net/wireless/microchip/wilc1000/hif.c"
          ]
        }
      },
      "candidate_diff": {
        "drivers/net/wireless/microchip/wilc1000/hif.c||drivers/net/wireless/microchip/wilc1000/hif.c": [
          "File: drivers/net/wireless/microchip/wilc1000/hif.c -> drivers/net/wireless/microchip/wilc1000/hif.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "485:   int rsn_ie_len = sizeof(struct element) + rsn_ie[1];",
          "486:   int offset = 8;",
          "489:   if (offset < rsn_ie_len) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "488:   param->mode_802_11i = 2;",
          "489:   param->rsn_found = true;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "495:     offset += (rsn_ie[offset] * 4) + 2;",
          "500:      memcpy(param->rsn_cap, &rsn_ie[offset], 2);",
          "502:    }",
          "503:   }",
          "504:  }",
          "",
          "[Removed Lines]",
          "497:     if (offset + 1 < rsn_ie_len) {",
          "498:      param->mode_802_11i = 2;",
          "499:      param->rsn_found = true;",
          "501:     }",
          "",
          "[Added Lines]",
          "500:     if (offset + 1 < rsn_ie_len)",
          "",
          "---------------"
        ]
      }
    }
  ]
}