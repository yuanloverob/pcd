{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f010ce818dc4c74732008ffbbfd2eb9f54465a64",
      "candidate_info": {
        "commit_hash": "f010ce818dc4c74732008ffbbfd2eb9f54465a64",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/f010ce818dc4c74732008ffbbfd2eb9f54465a64",
        "files": [
          "modules/mi_script/mi_script.c"
        ],
        "message": "mi_script: prevent leak on write error case\n\nThanks go to Suchi Sahoo from Five9 for reporting it\n\n(cherry picked from commit 443fdf90e635b48debcf71449e6c72754e3b24c7)",
        "before_after_code_files": [
          "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c": [
          "File: modules/mi_script/mi_script.c -> modules/mi_script/mi_script.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "541:  mi_request_t *req;",
          "542: };",
          "544: static void mi_script_async_resume_job(int sender, void *param)",
          "545: {",
          "546:  int ret;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "544: static void mi_script_async_job_free(struct mi_script_async_job *job)",
          "545: {",
          "546:  if (job->msg.s)",
          "547:   shm_free(job->msg.s);",
          "548:  shm_free(job);",
          "549: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "550:  do {",
          "551:   ret = write(job->fd, &r, sizeof r);",
          "552:  } while (ret < 0 && (errno == EINTR || errno == EAGAIN));",
          "554:   LM_ERR(\"could not notify resume: %s\\n\", strerror(errno));",
          "555: }",
          "557: static void mi_script_async_job(mi_response_t *resp, struct mi_script_async_job *job)",
          "",
          "[Removed Lines]",
          "553:  if (ret < 0)",
          "",
          "[Added Lines]",
          "560:  if (ret < 0) {",
          "562:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "573:  if (ipc_send_rpc(job->process_no, mi_script_async_resume_job, job) < 0) {",
          "574:   LM_ERR(\"could not resume async MI command!\\n\");",
          "578:  }",
          "579: }",
          "",
          "[Removed Lines]",
          "575:   if (job->msg.s)",
          "576:    shm_free(job->msg.s);",
          "577:   shm_free(job);",
          "",
          "[Added Lines]",
          "583:   mi_script_async_job_free(job);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "654:    ret = -3;",
          "655:  }",
          "656: end:",
          "660:  return ret;",
          "661: }",
          "",
          "[Removed Lines]",
          "657:  if (job->msg.s)",
          "658:   shm_free(job->msg.s);",
          "659:  shm_free(job);",
          "",
          "[Added Lines]",
          "663:  mi_script_async_job_free(job);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed7a33a28ff52103e35d33a32e081c1d92c2a893",
      "candidate_info": {
        "commit_hash": "ed7a33a28ff52103e35d33a32e081c1d92c2a893",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/ed7a33a28ff52103e35d33a32e081c1d92c2a893",
        "files": [
          "modules/aaa_diameter/aaa_impl.c",
          "modules/aaa_diameter/aaa_impl.h"
        ],
        "message": "aaa_diameter: Avoid all pthread_cond race conditions\n\nThe recommended usage of the wait/signal pthread_cond_t functions\nincludes using a \"counter\" variable in order to keep track of any\n\"signal\" events happening before the actual \"wait\".\n\nMany thanks to Ryan Caicse (@ryancaicse) for reporting this bug and the\nexcellent fix suggestion!\n\nFixes #2789\n\n(cherry picked from commit 5422799e77662db58d23cbd38bc92875091f177a)",
        "before_after_code_files": [
          "modules/aaa_diameter/aaa_impl.c||modules/aaa_diameter/aaa_impl.c",
          "modules/aaa_diameter/aaa_impl.h||modules/aaa_diameter/aaa_impl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/aaa_diameter/aaa_impl.c||modules/aaa_diameter/aaa_impl.c": [
          "File: modules/aaa_diameter/aaa_impl.c -> modules/aaa_diameter/aaa_impl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "194:  pthread_mutex_lock(&rpl_cond->mutex);",
          "196:  pthread_mutex_unlock(&rpl_cond->mutex);",
          "198: out:",
          "",
          "[Removed Lines]",
          "195:  pthread_cond_signal(&rpl_cond->cond);",
          "",
          "[Added Lines]",
          "195:  if (rpl_cond->count == 0)",
          "196:   pthread_cond_signal(&rpl_cond->cond);",
          "197:  rpl_cond->count += 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1240:   LM_DBG(\"awaiting auth reply...\\n\");",
          "1242:   pthread_mutex_lock(&my_reply_cond->mutex);",
          "1244:   pthread_mutex_unlock(&my_reply_cond->mutex);",
          "1246:   LM_DBG(\"reply received, Result-Code: %d (%s)\\n\", my_reply_cond->rc,",
          "",
          "[Removed Lines]",
          "1243:   pthread_cond_wait(&my_reply_cond->cond, &my_reply_cond->mutex);",
          "",
          "[Added Lines]",
          "1245:   while (my_reply_cond->count == 0)",
          "1246:    pthread_cond_wait(&my_reply_cond->cond, &my_reply_cond->mutex);",
          "1247:   my_reply_cond->count -= 1;",
          "",
          "---------------"
        ],
        "modules/aaa_diameter/aaa_impl.h||modules/aaa_diameter/aaa_impl.h": [
          "File: modules/aaa_diameter/aaa_impl.h -> modules/aaa_diameter/aaa_impl.h"
        ]
      }
    },
    {
      "candidate_hash": "0b270ad04db8081bbb829f89fa515fa0c37698c7",
      "candidate_info": {
        "commit_hash": "0b270ad04db8081bbb829f89fa515fa0c37698c7",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/0b270ad04db8081bbb829f89fa515fa0c37698c7",
        "files": [
          "net/net_tcp.c",
          "net/proto_tcp/proto_tcp.c"
        ],
        "message": "Fix crash in bogus OOM handling while TCP async in enabled.\n\nThe async support assums the c->async exists all the time, so error if we cannot alloc the c->async struct while creating a new TCP conn",
        "before_after_code_files": [
          "net/net_tcp.c||net/net_tcp.c",
          "net/proto_tcp/proto_tcp.c||net/proto_tcp/proto_tcp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "net/net_tcp.c||net/net_tcp.c": [
          "File: net/net_tcp.c -> net/net_tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "810:    c->async->allocated = protos[si->proto].net.async_chunks;",
          "811:    c->async->oldest = 0;",
          "812:    c->async->pending = 0;",
          "815:  }",
          "817:  tcp_connections_no++;",
          "",
          "[Removed Lines]",
          "813:   } else",
          "814:    LM_WARN(\"could not allocate async data for con!\\n\");",
          "",
          "[Added Lines]",
          "813:   } else {",
          "814:    LM_ERR(\"could not allocate async data for con!\\n\");",
          "815:    goto error;",
          "816:   }",
          "",
          "---------------"
        ],
        "net/proto_tcp/proto_tcp.c||net/proto_tcp/proto_tcp.c": [
          "File: net/proto_tcp/proto_tcp.c -> net/proto_tcp/proto_tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "210:  }",
          "214:   pi->net.async_chunks= tcp_async_max_postponed_chunks;",
          "216:  return 0;",
          "217: }",
          "",
          "[Removed Lines]",
          "213:  if (tcp_async!=0)",
          "",
          "[Added Lines]",
          "213:  if (tcp_async!=0) {",
          "216:   if (tcp_async_max_postponed_chunks<=1)",
          "217:    tcp_async_max_postponed_chunks = 2;",
          "219:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6da77f423fc93f4c6e5d6aba405cc793ec74d14a",
      "candidate_info": {
        "commit_hash": "6da77f423fc93f4c6e5d6aba405cc793ec74d14a",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/6da77f423fc93f4c6e5d6aba405cc793ec74d14a",
        "files": [
          "lib/reg/lookup.c"
        ],
        "message": "Merge pull request #2914 from MayamaTakeshi/reg_lookup_log_correction\n\nCorrected 'getting contacts' log\n\n(cherry picked from commit 9be68bf34f8d1d54708a6a3de8f689e1e91288fc)",
        "before_after_code_files": [
          "lib/reg/lookup.c||lib/reg/lookup.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/reg/lookup.c||lib/reg/lookup.c": [
          "File: lib/reg/lookup.c -> lib/reg/lookup.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:   aor_uri = &branch_uris[idx];",
          "180:   LM_DBG(\"getting contacts from aor [%.*s] \"",
          "183:   if (extract_aor(aor_uri, &aor, NULL, &call_id, reg_use_domain) < 0) {",
          "184:    LM_ERR(\"failed to extract address of record for branch uri\\n\");",
          "",
          "[Removed Lines]",
          "181:          \"in branch %d\\n\", aor.len, aor.s, idx);",
          "",
          "[Added Lines]",
          "181:          \"in branch %d\\n\", aor_uri->len, aor_uri->s, idx);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "204092b4110ba76f2b99f05bf31c5d278fc76730",
      "candidate_info": {
        "commit_hash": "204092b4110ba76f2b99f05bf31c5d278fc76730",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/204092b4110ba76f2b99f05bf31c5d278fc76730",
        "files": [
          "parser/msg_parser.c",
          "parser/test/test_parser.c"
        ],
        "message": "parse_msg(): Fix heap buffer overflow edge-case (OSS-Fuzz)\n\nThis patch fixes a SIP message parsing error log which could lead to an\nunsafe printing of a non-NULL terminated string.  Fortunately, the\nOpenSIPS PKG memory allocator minimizes the severity of this overflow,\nthanks to its pre-allocated, large chunk of heap memory.\n\nSeverity: Low\nFixes OSS-Fuzz#52204\n\n(cherry picked from commit 2a6f8c67aa15ebf507cc9ff2bd881d771858fed7)",
        "before_after_code_files": [
          "parser/msg_parser.c||parser/msg_parser.c",
          "parser/test/test_parser.c||parser/test/test_parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "parser/msg_parser.c||parser/msg_parser.c": [
          "File: parser/msg_parser.c -> parser/msg_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:     if (match){",
          "240:      match++;",
          "241:     }else {",
          "243:      tmp=end;",
          "244:      goto error_bad_hdr;",
          "245:     }",
          "",
          "[Removed Lines]",
          "242:      LM_ERR(\"bad body for <%s>(%d)\\n\", hdr->name.s, hdr->type);",
          "",
          "[Added Lines]",
          "242:      LM_ERR(\"bad body for <%.*s>(%d)\\n\",",
          "243:               hdr->name.len, hdr->name.s, hdr->type);",
          "",
          "---------------"
        ],
        "parser/test/test_parser.c||parser/test/test_parser.c": [
          "File: parser/test/test_parser.c -> parser/test/test_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "152:   \"e \\xff\\xff\\xff\\xff     \\xff\\n\\xff\\xff  \",",
          "153:   -1,",
          "158:   \"d  \\x02\\x80\\0\\nt\\0:G;150=\\\"a8\",",
          "159:   -1,",
          "160:  },",
          "162:  {\"\\0\", 0},",
          "",
          "[Removed Lines]",
          "154:  },",
          "156:  {",
          "",
          "[Added Lines]",
          "154:  }, {",
          "158:  }, {",
          "160:   \"m  r\\nu:c \\x1b\\r   : ]\",",
          "161:   -1,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "173:   msg.buf = (char *)tset[i].tmsg;",
          "174:   msg.len = strlen(msg.buf);",
          "177:  }",
          "178: }",
          "",
          "[Removed Lines]",
          "176:   ok(parse_msg(msg.buf, msg.len, &msg) == tset[i].tres, \"parse-msg-0\");",
          "",
          "[Added Lines]",
          "178:   ok(parse_msg(msg.buf, msg.len, &msg) == tset[i].tres, \"parse-msg-t%d\", i);",
          "",
          "---------------"
        ]
      }
    }
  ]
}