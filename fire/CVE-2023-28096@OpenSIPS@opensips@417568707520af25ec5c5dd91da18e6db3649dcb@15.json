{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "806d0c4690dbdb6aafff93bf620fb9fca25a7489",
      "candidate_info": {
        "commit_hash": "806d0c4690dbdb6aafff93bf620fb9fca25a7489",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/806d0c4690dbdb6aafff93bf620fb9fca25a7489",
        "files": [
          "Makefile.conf.template"
        ],
        "message": "Add QM_DBG_MALLOC_HIST flag to Makefile.conf template\n\n(cherry picked from commit 4c748b3f8380185ed74ed8ea37e9e9e9470b685f)",
        "before_after_code_files": [
          "Makefile.conf.template||Makefile.conf.template"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.conf.template||Makefile.conf.template": [
          "File: Makefile.conf.template -> Makefile.conf.template",
          "--- Hunk 1 ---",
          "[Context before]",
          "82: DEFS+= -DQ_MALLOC #Quality assurance memory allocator with runtime safety checks",
          "83: DEFS+= -DHP_MALLOC #High performance allocator with fine-grained locking",
          "84: DEFS+= -DDBG_MALLOC #Include additional, debug-enabled allocator flavors",
          "85: #DEFS+= -DNO_DEBUG #Compile out all debug messages",
          "86: #DEFS+= -DNO_LOG #Compile out all logging",
          "87: #DEFS_GROUP_START",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "85: #DEFS+= -DQM_DBG_MALLOC_HIST=3 #Size of debug history for Q_MALLOC (default is 1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1d314b2ad07046e3a80b0c1de59daab3cd4e08f2",
      "candidate_info": {
        "commit_hash": "1d314b2ad07046e3a80b0c1de59daab3cd4e08f2",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/1d314b2ad07046e3a80b0c1de59daab3cd4e08f2",
        "files": [
          "parser/parse_content.c"
        ],
        "message": "parse_content_length(): Fix integer overflow edge-case (OSS-Fuzz)\n\nThis completes commit 7cab422e2f, where it was still possible to cause\nan integer overflow even after the fix, with input such as 2147483609,\ndue to missing parentheses in the number equation.\n\nFixes OSS-Fuzz#52112\n\n(cherry picked from commit 837263b47dcb33909b109b5cc050c1ab4a6c64a2)",
        "before_after_code_files": [
          "parser/parse_content.c||parser/parse_content.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "parser/parse_content.c||parser/parse_content.c": [
          "File: parser/parse_content.c -> parser/parse_content.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "242:  number = 0;",
          "243:  while (p<end && *p>='0' && *p<='9') {",
          "247:     (int)(p-buffer),(int)(end-buffer), buffer);",
          "249:   }",
          "252:   size ++;",
          "253:   p++;",
          "254:  }",
          "",
          "[Removed Lines]",
          "245:   if (number > 214748363) {",
          "246:    LM_ERR(\"integer overflow risk at pos %d in len number [%.*s]\\n\",",
          "248:    return 0;",
          "251:   number = number*10 + (*p)-'0';",
          "",
          "[Added Lines]",
          "245:   if (number >= INT_MAX/10) {",
          "246:    LM_ERR(\"integer overflow risk at pos %d in length value [%.*s]\\n\",",
          "248:    return NULL;",
          "251:   number = number*10 + ((*p)-'0');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268:  return p;",
          "269: error:",
          "270:  LM_ERR(\"parse error near char [%d][%c]\\n\",*p,*p);",
          "272: }",
          "",
          "[Removed Lines]",
          "271:  return 0;",
          "",
          "[Added Lines]",
          "271:  return NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2f58ffa930fee411a83d3196f682f4958ad57277",
      "candidate_info": {
        "commit_hash": "2f58ffa930fee411a83d3196f682f4958ad57277",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/2f58ffa930fee411a83d3196f682f4958ad57277",
        "files": [
          "modules/rtpproxy/rtpproxy.c"
        ],
        "message": "rtpproxy: Fix bad error handling on rare OOM case\n\n(cherry picked from commit d2cec34346fea49a98b5c5d33ae20044e47eec69)",
        "before_after_code_files": [
          "modules/rtpproxy/rtpproxy.c||modules/rtpproxy/rtpproxy.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/rtpproxy/rtpproxy.c||modules/rtpproxy/rtpproxy.c": [
          "File: modules/rtpproxy/rtpproxy.c -> modules/rtpproxy/rtpproxy.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1086:  rtpp_no = (unsigned int*)shm_malloc(sizeof(unsigned int));",
          "1087:  list_version = (unsigned int*)shm_malloc(sizeof(unsigned int));",
          "1092:  if(!rtpp_no || !list_version) {",
          "1093:   LM_ERR(\"No more shared memory\\n\");",
          "1094:   return -1;",
          "1095:  }",
          "1096:  if (!(rtpp_set_list = (struct rtpp_set_head **)",
          "1097:   shm_malloc(sizeof(struct rtpp_set_head *)))) {",
          "1098:   LM_ERR(\"no more shm mem\\n\");",
          "",
          "[Removed Lines]",
          "1090:  my_version = 0;",
          "",
          "[Added Lines]",
          "1094:  my_version = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5582666ba49365dd18387e1b7cc59d853c3841ad",
      "candidate_info": {
        "commit_hash": "5582666ba49365dd18387e1b7cc59d853c3841ad",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/5582666ba49365dd18387e1b7cc59d853c3841ad",
        "files": [
          "modules/aaa_diameter/app_opensips/avps.c"
        ],
        "message": "aaa_diameter: Fix `app_opensips` compilation\n\nThe \"peer.h\" import is not available when compiling \"app_opensips\"\nwithin freeDiameter.  Moreover, it's not used anyway, so just remove it.\n\n(cherry picked from commit 7c3fef41a22b39d296c97a21ea5aed1d4d5770e7)",
        "before_after_code_files": [
          "modules/aaa_diameter/app_opensips/avps.c||modules/aaa_diameter/app_opensips/avps.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/aaa_diameter/app_opensips/avps.c||modules/aaa_diameter/app_opensips/avps.c": [
          "File: modules/aaa_diameter/app_opensips/avps.c -> modules/aaa_diameter/app_opensips/avps.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: #include \"ctype.h\"",
          "41: #include \"avps.h\"",
          "",
          "[Removed Lines]",
          "40: #include \"../peer.h\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "698baa104aac1dcafb3e90a61d8e8b0c5202ef7d",
      "candidate_info": {
        "commit_hash": "698baa104aac1dcafb3e90a61d8e8b0c5202ef7d",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/698baa104aac1dcafb3e90a61d8e8b0c5202ef7d",
        "files": [
          "modules/clusterer/sharing_tags.c"
        ],
        "message": "clusterer: advertise tag's active state only in defined cluster\n\nThanks go to Vlad Patrascu for brainstorming this!\n\n(cherry picked from commit d741f1875cb2b01e6deb96ae2235e23e029dc35f)",
        "before_after_code_files": [
          "modules/clusterer/sharing_tags.c||modules/clusterer/sharing_tags.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/clusterer/sharing_tags.c||modules/clusterer/sharing_tags.c": [
          "File: modules/clusterer/sharing_tags.c -> modules/clusterer/sharing_tags.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "673:   if (!tag->send_active_msg)",
          "674:    continue;",
          "677:   for (ni = tag->active_msgs_sent; ni && ni->node_id != node_id;",
          "678:    ni = ni->next) ;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "676:   if (tag->cluster_id != c_id)",
          "677:    continue;",
          "",
          "---------------"
        ]
      }
    }
  ]
}