{
  "cve_id": "CVE-2021-41201",
  "cve_desc": "TensorFlow is an open source platform for machine learning. In affeced versions during execution, `EinsumHelper::ParseEquation()` is supposed to set the flags in `input_has_ellipsis` vector and `*output_has_ellipsis` boolean to indicate whether there is ellipsis in the corresponding inputs and output. However, the code only changes these flags to `true` and never assigns `false`. This results in unitialized variable access if callers assume that `EinsumHelper::ParseEquation()` always sets these flags. The fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "f09caa532b6e1ac8d2aa61b7832c78c5b79300c6",
  "patch_info": {
    "commit_hash": "f09caa532b6e1ac8d2aa61b7832c78c5b79300c6",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/f09caa532b6e1ac8d2aa61b7832c78c5b79300c6",
    "files": [
      "tensorflow/core/kernels/linalg/einsum_op_impl.h"
    ],
    "message": "Fix EinsumHelper::ParseEquation to avoid uninitialized accesses.\n\nEinsumHelper::ParseEquation is supposed to return true or false in\ninput_has_ellipsis and output_has_ellipsis to indicate whether there is\nellipsis in the inputs and output. Previously, when there is no ellipsis in the\ninputs or output, the routine doesn't assign false to the variables. This\nchange initializes the two variables with false to fix the problem.\nPiperOrigin-RevId: 391772004\nChange-Id: I17b6c88aadef4131470378e48cced054bf252e86",
    "before_after_code_files": [
      "tensorflow/core/kernels/linalg/einsum_op_impl.h||tensorflow/core/kernels/linalg/einsum_op_impl.h"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/linalg/einsum_op_impl.h||tensorflow/core/kernels/linalg/einsum_op_impl.h": [
      "File: tensorflow/core/kernels/linalg/einsum_op_impl.h -> tensorflow/core/kernels/linalg/einsum_op_impl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "153:     input_has_ellipsis->resize(num_inputs);",
      "154:     for (int i = 0; i < num_inputs; ++i) {",
      "155:       input_label_counts->at(i).resize(num_labels);",
      "156:       for (const int label : input_labels->at(i)) {",
      "157:         if (label != kEllipsisLabel)",
      "158:           input_label_counts->at(i)[label] += 1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "156:       input_has_ellipsis->at(i) = false;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "011e541cdfa2d038e06b12378e91b94a02ef7a62",
      "candidate_info": {
        "commit_hash": "011e541cdfa2d038e06b12378e91b94a02ef7a62",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/011e541cdfa2d038e06b12378e91b94a02ef7a62",
        "files": [
          "tensorflow/core/kernels/linalg/einsum_op_impl.h"
        ],
        "message": "Fix EinsumHelper::ParseEquation to avoid uninitialized accesses.\n\nEinsumHelper::ParseEquation is supposed to return true or false in\ninput_has_ellipsis and output_has_ellipsis to indicate whether there is\nellipsis in the inputs and output. Previously, when there is no ellipsis in the\ninputs or output, the routine doesn't assign false to the variables. This\nchange initializes the two variables with false to fix the problem.\nPiperOrigin-RevId: 391772004\nChange-Id: I17b6c88aadef4131470378e48cced054bf252e86",
        "before_after_code_files": [
          "tensorflow/core/kernels/linalg/einsum_op_impl.h||tensorflow/core/kernels/linalg/einsum_op_impl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/linalg/einsum_op_impl.h||tensorflow/core/kernels/linalg/einsum_op_impl.h"
          ],
          "candidate": [
            "tensorflow/core/kernels/linalg/einsum_op_impl.h||tensorflow/core/kernels/linalg/einsum_op_impl.h"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/linalg/einsum_op_impl.h||tensorflow/core/kernels/linalg/einsum_op_impl.h": [
          "File: tensorflow/core/kernels/linalg/einsum_op_impl.h -> tensorflow/core/kernels/linalg/einsum_op_impl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "155:     input_has_ellipsis->resize(num_inputs);",
          "156:     for (int i = 0; i < num_inputs; ++i) {",
          "157:       input_label_counts->at(i).resize(num_labels);",
          "158:       for (const int label : input_labels->at(i)) {",
          "159:         if (label != kEllipsisLabel)",
          "160:           input_label_counts->at(i)[label] += 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "158:       input_has_ellipsis->at(i) = false;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "990b020e1a4a033ee2d624eaa38ebc38750447ec",
      "candidate_info": {
        "commit_hash": "990b020e1a4a033ee2d624eaa38ebc38750447ec",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/990b020e1a4a033ee2d624eaa38ebc38750447ec",
        "files": [
          "tensorflow/core/kernels/linalg/einsum_op_impl.h"
        ],
        "message": "Fix EinsumHelper::ParseEquation to avoid uninitialized accesses.\n\nEinsumHelper::ParseEquation is supposed to return true or false in\ninput_has_ellipsis and output_has_ellipsis to indicate whether there is\nellipsis in the inputs and output. Previously, when there is no ellipsis in the\ninputs or output, the routine doesn't assign false to the variables. This\nchange initializes the two variables with false to fix the problem.\nPiperOrigin-RevId: 391772004\nChange-Id: I17b6c88aadef4131470378e48cced054bf252e86",
        "before_after_code_files": [
          "tensorflow/core/kernels/linalg/einsum_op_impl.h||tensorflow/core/kernels/linalg/einsum_op_impl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/linalg/einsum_op_impl.h||tensorflow/core/kernels/linalg/einsum_op_impl.h"
          ],
          "candidate": [
            "tensorflow/core/kernels/linalg/einsum_op_impl.h||tensorflow/core/kernels/linalg/einsum_op_impl.h"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/linalg/einsum_op_impl.h||tensorflow/core/kernels/linalg/einsum_op_impl.h": [
          "File: tensorflow/core/kernels/linalg/einsum_op_impl.h -> tensorflow/core/kernels/linalg/einsum_op_impl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:     input_has_ellipsis->resize(num_inputs);",
          "154:     for (int i = 0; i < num_inputs; ++i) {",
          "155:       input_label_counts->at(i).resize(num_labels);",
          "156:       for (const int label : input_labels->at(i)) {",
          "157:         if (label != kEllipsisLabel)",
          "158:           input_label_counts->at(i)[label] += 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "156:       input_has_ellipsis->at(i) = false;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f721a1dbf08ceb0ae2abd2daecfc0e9d070c3741",
      "candidate_info": {
        "commit_hash": "f721a1dbf08ceb0ae2abd2daecfc0e9d070c3741",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/f721a1dbf08ceb0ae2abd2daecfc0e9d070c3741",
        "files": [
          "tensorflow/core/kernels/linalg/einsum_op_impl.h"
        ],
        "message": "Fix EinsumHelper::ParseEquation to avoid uninitialized accesses.\n\nEinsumHelper::ParseEquation is supposed to return true or false in\ninput_has_ellipsis and output_has_ellipsis to indicate whether there is\nellipsis in the inputs and output. Previously, when there is no ellipsis in the\ninputs or output, the routine doesn't assign false to the variables. This\nchange initializes the two variables with false to fix the problem.\nPiperOrigin-RevId: 391772004\nChange-Id: I17b6c88aadef4131470378e48cced054bf252e86",
        "before_after_code_files": [
          "tensorflow/core/kernels/linalg/einsum_op_impl.h||tensorflow/core/kernels/linalg/einsum_op_impl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/linalg/einsum_op_impl.h||tensorflow/core/kernels/linalg/einsum_op_impl.h"
          ],
          "candidate": [
            "tensorflow/core/kernels/linalg/einsum_op_impl.h||tensorflow/core/kernels/linalg/einsum_op_impl.h"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/linalg/einsum_op_impl.h||tensorflow/core/kernels/linalg/einsum_op_impl.h": [
          "File: tensorflow/core/kernels/linalg/einsum_op_impl.h -> tensorflow/core/kernels/linalg/einsum_op_impl.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:     input_has_ellipsis->resize(num_inputs);",
          "154:     for (int i = 0; i < num_inputs; ++i) {",
          "155:       input_label_counts->at(i).resize(num_labels);",
          "156:       for (const int label : input_labels->at(i)) {",
          "157:         if (label != kEllipsisLabel)",
          "158:           input_label_counts->at(i)[label] += 1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "156:       input_has_ellipsis->at(i) = false;",
          "",
          "---------------"
        ]
      }
    }
  ]
}