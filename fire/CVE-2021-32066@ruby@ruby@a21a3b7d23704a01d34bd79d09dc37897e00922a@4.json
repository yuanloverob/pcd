{
  "cve_id": "CVE-2021-32066",
  "cve_desc": "An issue was discovered in Ruby through 2.6.7, 2.7.x through 2.7.3, and 3.x through 3.0.1. Net::IMAP does not raise an exception when StartTLS fails with an an unknown response, which might allow man-in-the-middle attackers to bypass the TLS protections by leveraging a network position between the client and the registry to block the StartTLS command, aka a \"StartTLS stripping attack.\"",
  "repo": "ruby/ruby",
  "patch_hash": "a21a3b7d23704a01d34bd79d09dc37897e00922a",
  "patch_info": {
    "commit_hash": "a21a3b7d23704a01d34bd79d09dc37897e00922a",
    "repo": "ruby/ruby",
    "commit_url": "https://github.com/ruby/ruby/commit/a21a3b7d23704a01d34bd79d09dc37897e00922a",
    "files": [
      "lib/net/imap.rb",
      "test/net/imap/test_imap.rb",
      "version.h"
    ],
    "message": "Fix StartTLS stripping vulnerability\n\nReported by Alexandr Savca in https://hackerone.com/reports/1178562\n\nCo-authored-by: Shugo Maeda <shugo@ruby-lang.org>",
    "before_after_code_files": [
      "lib/net/imap.rb||lib/net/imap.rb",
      "test/net/imap/test_imap.rb||test/net/imap/test_imap.rb",
      "version.h||version.h"
    ]
  },
  "patch_diff": {
    "lib/net/imap.rb||lib/net/imap.rb": [
      "File: lib/net/imap.rb -> lib/net/imap.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "1216:       end",
      "1217:       resp = @tagged_responses.delete(tag)",
      "1218:       case resp.name",
      "1219:       when /\\A(?:NO)\\z/ni",
      "1220:         raise NoResponseError, resp",
      "1221:       when /\\A(?:BAD)\\z/ni",
      "1222:         raise BadResponseError, resp",
      "1223:       else",
      "1225:       end",
      "1226:     end",
      "",
      "[Removed Lines]",
      "1224:         return resp",
      "",
      "[Added Lines]",
      "1219:       when /\\A(?:OK)\\z/ni",
      "1220:         return resp",
      "1226:         raise UnknownResponseError, resp",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3717:     class ByeResponseError < ResponseError",
      "3718:     end",
      "3720:     RESPONSE_ERRORS = Hash.new(ResponseError)",
      "3721:     RESPONSE_ERRORS[\"NO\"] = NoResponseError",
      "3722:     RESPONSE_ERRORS[\"BAD\"] = BadResponseError",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3722:     # Error raised upon an unknown response from the server.",
      "3723:     class UnknownResponseError < ResponseError",
      "3724:     end",
      "",
      "---------------"
    ],
    "test/net/imap/test_imap.rb||test/net/imap/test_imap.rb": [
      "File: test/net/imap/test_imap.rb -> test/net/imap/test_imap.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "127:         imap.disconnect",
      "128:       end",
      "129:     end",
      "130:   end",
      "132:   def start_server",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "131:     def test_starttls_stripping",
      "132:       starttls_stripping_test do |port|",
      "133:         imap = Net::IMAP.new(\"localhost\", :port => port)",
      "134:         assert_raise(Net::IMAP::UnknownResponseError) do",
      "135:           imap.starttls(:ca_file => CA_FILE)",
      "136:         end",
      "137:         imap",
      "138:       end",
      "139:     end",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "784:     end",
      "785:   end",
      "787:   def create_tcp_server",
      "788:     return TCPServer.new(server_addr, 0)",
      "789:   end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "797:   def starttls_stripping_test",
      "798:     server = create_tcp_server",
      "799:     port = server.addr[1]",
      "800:     start_server do",
      "801:       sock = server.accept",
      "802:       begin",
      "803:         sock.print(\"* OK test server\\r\\n\")",
      "804:         sock.gets",
      "805:         sock.print(\"RUBY0001 BUG unhandled command\\r\\n\")",
      "806:       ensure",
      "807:         sock.close",
      "808:         server.close",
      "809:       end",
      "810:     end",
      "811:     begin",
      "812:       imap = yield(port)",
      "813:     ensure",
      "814:       imap.disconnect if imap && !imap.disconnected?",
      "815:     end",
      "816:   end",
      "",
      "---------------"
    ],
    "version.h||version.h": [
      "File: version.h -> version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
      "3: #define RUBY_VERSION_TEENY 4",
      "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
      "7: #define RUBY_RELEASE_YEAR 2021",
      "8: #define RUBY_RELEASE_MONTH 7",
      "",
      "[Removed Lines]",
      "5: #define RUBY_PATCHLEVEL 190",
      "",
      "[Added Lines]",
      "5: #define RUBY_PATCHLEVEL 191",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "419266d44c54c6b75f1e824f060c8b388f7a405b",
      "candidate_info": {
        "commit_hash": "419266d44c54c6b75f1e824f060c8b388f7a405b",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/419266d44c54c6b75f1e824f060c8b388f7a405b",
        "files": [
          "marshal.c",
          "spec/ruby/core/marshal/shared/load.rb",
          "test/ruby/test_marshal.rb",
          "version.h"
        ],
        "message": "merge revision(s) 89242279e61b023a81c58065c62a82de8829d0b3,529fc204af84f825f98f83c34b004acbaa802615: [Backport #18141]\n\n\tMarshal.load: do not call the proc until strings have their encoding\n\n\tRef: https://bugs.ruby-lang.org/issues/18141\n\t---\n\t marshal.c                             |  7 +++-\n\t spec/ruby/core/marshal/shared/load.rb | 62 +++++++++++++++++++++++------------\n\t test/ruby/test_marshal.rb             | 17 ++++++++++\n\t 3 files changed, 64 insertions(+), 22 deletions(-)\n\n\tmarshal.c: don't call the proc with partially initialized objects.\n\t (#4866)\n\n\tFor cyclic objects, it requires to keep a st_table of the partially\n\tinitialized objects.\n\t---\n\t marshal.c                             | 75 ++++++++++++++++++++---------------\n\t spec/ruby/core/marshal/shared/load.rb | 75 ++++++++++++++++++++---------------\n\t test/ruby/test_marshal.rb             | 12 ++++++\n\t 3 files changed, 97 insertions(+), 65 deletions(-)",
        "before_after_code_files": [
          "marshal.c||marshal.c",
          "spec/ruby/core/marshal/shared/load.rb||spec/ruby/core/marshal/shared/load.rb",
          "test/ruby/test_marshal.rb||test/ruby/test_marshal.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "marshal.c||marshal.c": [
          "File: marshal.c -> marshal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1679:      v = r_object0(arg, &ivar, extmod);",
          "1680:      if (ivar) r_ivar(v, NULL, arg);",
          "1681:  }",
          "1682:  break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1681:      if (RB_TYPE_P(v, T_STRING)) {",
          "1682:          v = r_leave(v, arg);",
          "1683:      }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1806:       case TYPE_STRING:",
          "1807:  v = r_entry(r_string(arg), arg);",
          "1809:  break;",
          "1811:       case TYPE_REGEXP:",
          "",
          "[Removed Lines]",
          "1808:         v = r_leave(v, arg);",
          "",
          "[Added Lines]",
          "1811:  if (!ivp) {",
          "1812:      v = r_leave(v, arg);",
          "1813:  }",
          "",
          "---------------"
        ],
        "spec/ruby/core/marshal/shared/load.rb||spec/ruby/core/marshal/shared/load.rb": [
          "File: spec/ruby/core/marshal/shared/load.rb -> spec/ruby/core/marshal/shared/load.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:   end",
          "23:   describe \"when called with a proc\" do",
          "24:     it \"returns the value of the proc\" do",
          "25:       Marshal.send(@method, Marshal.dump([1,2]), proc { [3,4] }).should ==  [3,4]",
          "26:     end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:     ruby_bug \"#18141\", \"\"...\"3.1\" do",
          "25:       it \"call the proc with fully initialized strings\" do",
          "26:         utf8_string = \"foo\".encode(Encoding::UTF_8)",
          "27:         Marshal.send(@method, Marshal.dump(utf8_string), proc { |arg|",
          "28:           if arg.is_a?(String)",
          "29:             arg.should == utf8_string",
          "30:             arg.encoding.should == Encoding::UTF_8",
          "31:           end",
          "32:           arg",
          "33:         })",
          "34:       end",
          "36:       it \"no longer mutate the object after it was passed to the proc\" do",
          "37:         string = Marshal.load(Marshal.dump(\"foo\"), :freeze.to_proc)",
          "38:         string.should.frozen?",
          "39:       end",
          "40:     end",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:       ret.size.should == 3",
          "37:     end",
          "60:     end",
          "61:   end",
          "",
          "[Removed Lines]",
          "39:     it \"loads an Array with proc\" do",
          "40:       arr = []",
          "41:       s = 'hi'",
          "42:       s.instance_variable_set(:@foo, 5)",
          "43:       st = Struct.new(\"Brittle\", :a).new",
          "44:       st.instance_variable_set(:@clue, 'none')",
          "45:       st.a = 0.0",
          "46:       h = Hash.new('def')",
          "47:       h['nine'] = 9",
          "48:       a = [:a, :b, :c]",
          "49:       a.instance_variable_set(:@two, 2)",
          "50:       obj = [s, 10, s, s, st, a]",
          "51:       obj.instance_variable_set(:@zoo, 'ant')",
          "52:       proc = Proc.new { |o| arr << o; o}",
          "54:       Marshal.send(@method, \"\\x04\\bI[\\vI\\\"\\ahi\\a:\\x06EF:\\t@fooi\\ni\\x0F@\\x06@\\x06IS:\\x14Struct::Brittle\\x06:\\x06af\\x060\\x06:\\n@clueI\\\"\\tnone\\x06;\\x00FI[\\b;\\b:\\x06b:\\x06c\\x06:\\t@twoi\\a\\x06:\\t@zooI\\\"\\bant\\x06;\\x00F\", proc)",
          "56:       arr.should == [\"hi\", false, 5, 10, \"hi\", \"hi\", 0.0, st, \"none\", false,",
          "57:                      :b, :c, a, 2, [\"hi\", 10, \"hi\", \"hi\", st, [:a, :b, :c]], \"ant\", false]",
          "59:       Struct.send(:remove_const, :Brittle)",
          "",
          "[Added Lines]",
          "57:     ruby_bug \"#18141\", \"\"...\"3.1\" do",
          "58:       it \"loads an Array with proc\" do",
          "59:         arr = []",
          "60:         s = 'hi'",
          "61:         s.instance_variable_set(:@foo, 5)",
          "62:         st = Struct.new(\"Brittle\", :a).new",
          "63:         st.instance_variable_set(:@clue, 'none')",
          "64:         st.a = 0.0",
          "65:         h = Hash.new('def')",
          "66:         h['nine'] = 9",
          "67:         a = [:a, :b, :c]",
          "68:         a.instance_variable_set(:@two, 2)",
          "69:         obj = [s, 10, s, s, st, a]",
          "70:         obj.instance_variable_set(:@zoo, 'ant')",
          "71:         proc = Proc.new { |o| arr << o; o}",
          "73:         Marshal.send(@method, \"\\x04\\bI[\\vI\\\"\\ahi\\a:\\x06EF:\\t@fooi\\ni\\x0F@\\x06@\\x06IS:\\x14Struct::Brittle\\x06:\\x06af\\x060\\x06:\\n@clueI\\\"\\tnone\\x06;\\x00FI[\\b;\\b:\\x06b:\\x06c\\x06:\\t@twoi\\a\\x06:\\t@zooI\\\"\\bant\\x06;\\x00F\", proc)",
          "75:         arr.should == [false, 5, \"hi\", 10, \"hi\", \"hi\", 0.0, st, false, \"none\",",
          "76:                        :b, :c, a, 2, [\"hi\", 10, \"hi\", \"hi\", st, [:a, :b, :c]], false, \"ant\"]",
          "78:         Struct.send(:remove_const, :Brittle)",
          "79:       end",
          "",
          "---------------"
        ],
        "test/ruby/test_marshal.rb||test/ruby/test_marshal.rb": [
          "File: test/ruby/test_marshal.rb -> test/ruby/test_marshal.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "651:     assert_equal(['X', 'X'], Marshal.load(Marshal.dump(obj), ->(v) { v == str ? v.upcase : v }))",
          "652:   end",
          "654:   def test_marshal_load_extended_class_crash",
          "655:     assert_separately([], \"#{<<-\"begin;\"}\\n#{<<-\"end;\"}\")",
          "656:     begin;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "654:   def test_marshal_proc_string_encoding",
          "655:     string = \"foo\"",
          "656:     payload = Marshal.dump(string)",
          "657:     Marshal.load(payload, ->(v) {",
          "658:       if v.is_a?(String)",
          "659:         assert_equal(string, v)",
          "660:         assert_equal(string.encoding, v.encoding)",
          "661:       end",
          "662:       v",
          "663:     })",
          "664:   end",
          "666:   def test_marshal_proc_freeze",
          "667:     object = { foo: [42, \"bar\"] }",
          "668:     assert_equal object, Marshal.load(Marshal.dump(object), :freeze.to_proc)",
          "669:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
          "3: #define RUBY_VERSION_TEENY 5",
          "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
          "7: #define RUBY_RELEASE_YEAR 2021",
          "8: #define RUBY_RELEASE_MONTH 11",
          "",
          "[Removed Lines]",
          "5: #define RUBY_PATCHLEVEL 199",
          "",
          "[Added Lines]",
          "5: #define RUBY_PATCHLEVEL 200",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "19fec939a6fed650135c6ce8b567fcb7b001b068",
      "candidate_info": {
        "commit_hash": "19fec939a6fed650135c6ce8b567fcb7b001b068",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/19fec939a6fed650135c6ce8b567fcb7b001b068",
        "files": [
          "load.c",
          "test/ruby/test_exception.rb",
          "version.h"
        ],
        "message": "merge revision(s) c79d2e54748f52c5023b0a1ee441561df9826c17: [Backport #18562]\n\n    Fix TAG_THROW through require [Bug #18562]\n\n    Previously this was being incorrectly swapped with TAG_RAISE in the next\n    line. This would end up checking the T_IMEMO throw_data to the exception\n    handling (which calls Module#===). This happened to not break existing\n    tests because Module#=== returned false when klass is NULL.\n\n    This commit handles throw from require correctly by jumping to the tag\n    retaining the TAG_THROW state.\n    ---\n     load.c                      |  2 +-\n     test/ruby/test_exception.rb | 21 +++++++++++++++++++++\n     2 files changed, 22 insertions(+), 1 deletion(-)",
        "before_after_code_files": [
          "load.c||load.c",
          "test/ruby/test_exception.rb||test/ruby/test_exception.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "load.c||load.c": [
          "File: load.c -> load.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1076:     if (ftptr) load_unlock(RSTRING_PTR(path), !state);",
          "1078:     if (state) {",
          "1080:             EC_JUMP_TAG(ec, state);",
          "1081:         }",
          "1082:         else if (exception) {",
          "",
          "[Removed Lines]",
          "1079:         if (state == TAG_FATAL) {",
          "",
          "[Added Lines]",
          "1079:         if (state == TAG_FATAL || state == TAG_THROW) {",
          "",
          "---------------"
        ],
        "test/ruby/test_exception.rb||test/ruby/test_exception.rb": [
          "File: test/ruby/test_exception.rb -> test/ruby/test_exception.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "181:     }",
          "182:   end",
          "184:   def test_throw_false",
          "185:     bug12743 = '[ruby-core:77229] [Bug #12743]'",
          "186:     Thread.start {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "184:   def test_catch_throw_in_require_cant_be_rescued",
          "185:     bug18562 = '[ruby-core:107403]'",
          "186:     Tempfile.create([\"dep\", \".rb\"]) {|t|",
          "187:       t.puts(\"throw :extdep, 42\")",
          "188:       t.close",
          "190:       rescue_all = Class.new(Exception)",
          "191:       def rescue_all.===(_)",
          "192:         raise \"should not reach here\"",
          "193:       end",
          "195:       v = assert_throw(:extdep, bug18562) do",
          "196:         require t.path",
          "197:       rescue rescue_all => e",
          "198:         assert(false, \"should not reach here\")",
          "199:       end",
          "201:       assert_equal(42, v, bug18562)",
          "202:     }",
          "203:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
          "3: #define RUBY_VERSION_TEENY 6",
          "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
          "7: #define RUBY_RELEASE_YEAR 2022",
          "8: #define RUBY_RELEASE_MONTH 3",
          "",
          "[Removed Lines]",
          "5: #define RUBY_PATCHLEVEL 216",
          "",
          "[Added Lines]",
          "5: #define RUBY_PATCHLEVEL 217",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd10572b059d07fe236ef9c9db9fd2a8ffc7dd38",
      "candidate_info": {
        "commit_hash": "cd10572b059d07fe236ef9c9db9fd2a8ffc7dd38",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/cd10572b059d07fe236ef9c9db9fd2a8ffc7dd38",
        "files": [
          "re.c",
          "test/ruby/test_regexp.rb",
          "version.h"
        ],
        "message": "merge revision(s) 99d8c4832a7133ca52578d015e3ddcfd94820f4a: [Backport #18160]\n\n\tPreserve the encoding of the argument in IndexError [Bug #18160]\n\n\t---\n\t re.c                     | 20 ++++++++++----------\n\t test/ruby/test_regexp.rb |  7 ++++++-\n\t 2 files changed, 16 insertions(+), 11 deletions(-)",
        "before_after_code_files": [
          "re.c||re.c",
          "test/ruby/test_regexp.rb||test/ruby/test_regexp.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "re.c||re.c": [
          "File: re.c -> re.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1141: }",
          "1143: static int name_to_backref_number(struct re_registers *, VALUE, const char*, const char*);",
          "1145: static int",
          "1146: match_backref_number(VALUE match, VALUE backref)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1144: NORETURN(static void name_to_backref_error(VALUE name));",
          "1146: static void",
          "1147: name_to_backref_error(VALUE name)",
          "1148: {",
          "1149:     rb_raise(rb_eIndexError, \"undefined group name reference: % \"PRIsVALUE,",
          "1150:       name);",
          "1151: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1160:     }",
          "1161:     name = StringValueCStr(backref);",
          "1165:     if (num < 1) {",
          "1167:     }",
          "1169:     return num;",
          "",
          "[Removed Lines]",
          "1163:     num = name_to_backref_number(regs, regexp, name, name + strlen(name));",
          "1166:         rb_raise(rb_eIndexError, \"undefined group name reference: %s\", name);",
          "",
          "[Added Lines]",
          "1171:     num = name_to_backref_number(regs, regexp, name, name + RSTRING_LEN(backref));",
          "1174:         name_to_backref_error(backref);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1910:  (const unsigned char *)name, (const unsigned char *)name_end, regs);",
          "1911: }",
          "1921: #define NAME_TO_NUMBER(regs, re, name, name_ptr, name_end) \\",
          "1922:     (NIL_P(re) ? 0 : \\",
          "1923:      !rb_enc_compatible(RREGEXP_SRC(re), (name)) ? 0 : \\",
          "",
          "[Removed Lines]",
          "1913: NORETURN(static void name_to_backref_error(VALUE name));",
          "1914: static void",
          "1915: name_to_backref_error(VALUE name)",
          "1916: {",
          "1917:     rb_raise(rb_eIndexError, \"undefined group name reference: % \"PRIsVALUE,",
          "1918:       name);",
          "1919: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/ruby/test_regexp.rb||test/ruby/test_regexp.rb": [
          "File: test/ruby/test_regexp.rb -> test/ruby/test_regexp.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "691:     test = proc {|&blk| \"abc\".sub(\"a\", \"\"); blk.call($~) }",
          "693:     bug10877 = '[ruby-core:68209] [Bug #10877]'",
          "694:     test.call {|m| assert_raise_with_message(IndexError, /foo/, bug10877) {m[\"foo\"]} }",
          "695:     key = \"\\u{3042}\"",
          "696:     [Encoding::UTF_8, Encoding::Shift_JIS, Encoding::EUC_JP].each do |enc|",
          "697:       idx = key.encode(enc)",
          "699:     end",
          "700:     test.call {|m| assert_equal(/a/, m.regexp) }",
          "701:     test.call {|m| assert_equal(\"abc\", m.string) }",
          "",
          "[Removed Lines]",
          "698:       test.call {|m| assert_raise_with_message(IndexError, /#{idx}/, bug10877) {m[idx]} }",
          "",
          "[Added Lines]",
          "694:     bug18160 = '[Bug #18160]'",
          "699:       pat = /#{idx}/",
          "700:       test.call {|m| assert_raise_with_message(IndexError, pat, bug10877) {m[idx]} }",
          "701:       test.call {|m| assert_raise_with_message(IndexError, pat, bug18160) {m.offset(idx)} }",
          "702:       test.call {|m| assert_raise_with_message(IndexError, pat, bug18160) {m.begin(idx)} }",
          "703:       test.call {|m| assert_raise_with_message(IndexError, pat, bug18160) {m.end(idx)} }",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
          "3: #define RUBY_VERSION_TEENY 5",
          "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
          "7: #define RUBY_RELEASE_YEAR 2021",
          "8: #define RUBY_RELEASE_MONTH 11",
          "",
          "[Removed Lines]",
          "5: #define RUBY_PATCHLEVEL 197",
          "",
          "[Added Lines]",
          "5: #define RUBY_PATCHLEVEL 198",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ac7c2754c004cdb3618738e315d2e2cb5f68a3a8",
      "candidate_info": {
        "commit_hash": "ac7c2754c004cdb3618738e315d2e2cb5f68a3a8",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/ac7c2754c004cdb3618738e315d2e2cb5f68a3a8",
        "files": [
          "tool/lib/vcs.rb",
          "version.h"
        ],
        "message": "merge revision(s) b8386f7f7f6d7a7d76481e02d389d0f5211f0f2c [Backport #18161]\n\n    Prepend DebugSystem to VCS class only\n\n    And revert 24e5f1c982966c379220b1bbb26b4e0320180fa1, pepending to\n    Kernel did not affect the top level methods before 3.0.",
        "before_after_code_files": [
          "tool/lib/vcs.rb||tool/lib/vcs.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "tool/lib/vcs.rb||tool/lib/vcs.rb": [
          "File: tool/lib/vcs.rb -> tool/lib/vcs.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:       ret",
          "118:     end",
          "119:   end",
          "123: end",
          "125: class VCS",
          "",
          "[Removed Lines]",
          "120:   module Kernel",
          "121:     prepend(DebugSystem)",
          "122:   end",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # define RUBY_VERSION_MAJOR RUBY_API_VERSION_MAJOR",
          "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
          "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
          "7: #define RUBY_RELEASE_YEAR 2021",
          "11: #include \"ruby/version.h\"",
          "",
          "[Removed Lines]",
          "3: #define RUBY_VERSION_TEENY 4",
          "5: #define RUBY_PATCHLEVEL 191",
          "8: #define RUBY_RELEASE_MONTH 7",
          "9: #define RUBY_RELEASE_DAY 31",
          "",
          "[Added Lines]",
          "3: #define RUBY_VERSION_TEENY 5",
          "5: #define RUBY_PATCHLEVEL 192",
          "8: #define RUBY_RELEASE_MONTH 9",
          "9: #define RUBY_RELEASE_DAY 19",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b1985629565c3c54b1a64d6faf213e8144857515",
      "candidate_info": {
        "commit_hash": "b1985629565c3c54b1a64d6faf213e8144857515",
        "repo": "ruby/ruby",
        "commit_url": "https://github.com/ruby/ruby/commit/b1985629565c3c54b1a64d6faf213e8144857515",
        "files": [
          "enum.c",
          "test/ruby/test_enum.rb",
          "version.h"
        ],
        "message": "merge revision(s) e83c02a768af61cd0890a75e90bcae1119d8bd93: [Backport #18289]\n\n\tDelegate keywords from Enumerable#to_a to #each\n\n\tFixes [Bug #18289]\n\t---\n\t enum.c                 | 2 +-\n\t test/ruby/test_enum.rb | 5 +++++\n\t 2 files changed, 6 insertions(+), 1 deletion(-)",
        "before_after_code_files": [
          "enum.c||enum.c",
          "test/ruby/test_enum.rb||test/ruby/test_enum.rb",
          "version.h||version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "version.h||version.h"
          ],
          "candidate": [
            "version.h||version.h"
          ]
        }
      },
      "candidate_diff": {
        "enum.c||enum.c": [
          "File: enum.c -> enum.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "648: {",
          "649:     VALUE ary = rb_ary_new();",
          "653:     return ary;",
          "654: }",
          "",
          "[Removed Lines]",
          "651:     rb_block_call(obj, id_each, argc, argv, collect_all, ary);",
          "",
          "[Added Lines]",
          "651:     rb_block_call_kw(obj, id_each, argc, argv, collect_all, ary, RB_PASS_CALLED_KEYWORDS);",
          "",
          "---------------"
        ],
        "test/ruby/test_enum.rb||test/ruby/test_enum.rb": [
          "File: test/ruby/test_enum.rb -> test/ruby/test_enum.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:     assert_equal([1, 2, 3, 1, 2], @obj.to_a)",
          "115:   end",
          "117:   def test_to_a_size_symbol",
          "118:     sym = Object.new",
          "119:     class << sym",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:   def test_to_a_keywords",
          "118:     def @obj.each(foo:) yield foo end",
          "119:     assert_equal([1], @obj.to_a(foo: 1))",
          "120:   end",
          "",
          "---------------"
        ],
        "version.h||version.h": [
          "File: version.h -> version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: # define RUBY_VERSION_MINOR RUBY_API_VERSION_MINOR",
          "3: #define RUBY_VERSION_TEENY 5",
          "4: #define RUBY_RELEASE_DATE RUBY_RELEASE_YEAR_STR\"-\"RUBY_RELEASE_MONTH_STR\"-\"RUBY_RELEASE_DAY_STR",
          "7: #define RUBY_RELEASE_YEAR 2021",
          "8: #define RUBY_RELEASE_MONTH 11",
          "",
          "[Removed Lines]",
          "5: #define RUBY_PATCHLEVEL 201",
          "",
          "[Added Lines]",
          "5: #define RUBY_PATCHLEVEL 202",
          "",
          "---------------"
        ]
      }
    }
  ]
}