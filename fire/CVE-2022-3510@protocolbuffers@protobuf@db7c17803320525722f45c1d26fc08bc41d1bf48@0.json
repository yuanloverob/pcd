{
  "cve_id": "CVE-2022-3510",
  "cve_desc": "A parsing issue similar to CVE-2022-3171, but with Message-Type Extensions in protobuf-java core and lite versions prior to 3.21.7, 3.20.3, 3.19.6 and 3.16.3 can lead to a denial of service attack. Inputs containing multiple instances of non-repeated embedded messages with repeated or unknown fields causes objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses. We recommend updating to the versions mentioned above.\n\n",
  "repo": "protocolbuffers/protobuf",
  "patch_hash": "db7c17803320525722f45c1d26fc08bc41d1bf48",
  "patch_info": {
    "commit_hash": "db7c17803320525722f45c1d26fc08bc41d1bf48",
    "repo": "protocolbuffers/protobuf",
    "commit_url": "https://github.com/protocolbuffers/protobuf/commit/db7c17803320525722f45c1d26fc08bc41d1bf48",
    "files": [
      "CHANGES.txt",
      "java/core/src/main/java/com/google/protobuf/MessageReflection.java",
      "ruby/compatibility_tests/v3.0.0/tests/basic.rb",
      "ruby/ext/google/protobuf_c/message.c",
      "ruby/src/main/java/com/google/protobuf/jruby/RubyEnumDescriptor.java",
      "ruby/tests/basic_test.proto",
      "ruby/tests/basic_test_proto2.proto",
      "ruby/tests/common_tests.rb",
      "ruby/tests/generated_code.proto",
      "ruby/tests/generated_code_proto2.proto",
      "ruby/tests/repeated_field_test.rb"
    ],
    "message": "Sync from Piper @mkruskal/footmitten\n\nPROTOBUF_SYNC_PIPER",
    "before_after_code_files": [
      "java/core/src/main/java/com/google/protobuf/MessageReflection.java||java/core/src/main/java/com/google/protobuf/MessageReflection.java",
      "ruby/compatibility_tests/v3.0.0/tests/basic.rb||ruby/compatibility_tests/v3.0.0/tests/basic.rb",
      "ruby/ext/google/protobuf_c/message.c||ruby/ext/google/protobuf_c/message.c",
      "ruby/src/main/java/com/google/protobuf/jruby/RubyEnumDescriptor.java||ruby/src/main/java/com/google/protobuf/jruby/RubyEnumDescriptor.java",
      "ruby/tests/basic_test.proto||ruby/tests/basic_test.proto",
      "ruby/tests/basic_test_proto2.proto||ruby/tests/basic_test_proto2.proto",
      "ruby/tests/common_tests.rb||ruby/tests/common_tests.rb",
      "ruby/tests/generated_code.proto||ruby/tests/generated_code.proto",
      "ruby/tests/generated_code_proto2.proto||ruby/tests/generated_code_proto2.proto",
      "ruby/tests/repeated_field_test.rb||ruby/tests/repeated_field_test.rb"
    ]
  },
  "patch_diff": {
    "java/core/src/main/java/com/google/protobuf/MessageReflection.java||java/core/src/main/java/com/google/protobuf/MessageReflection.java": [
      "File: java/core/src/main/java/com/google/protobuf/MessageReflection.java -> java/core/src/main/java/com/google/protobuf/MessageReflection.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "378:   static class BuilderAdapter implements MergeTarget {",
      "380:     private final Message.Builder builder;",
      "382:     @Override",
      "383:     public Descriptors.Descriptor getDescriptorForType() {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "381:     private boolean hasNestedBuilders = true;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "393:       return builder.getField(field);",
      "394:     }",
      "396:     @Override",
      "397:     public boolean hasField(Descriptors.FieldDescriptor field) {",
      "398:       return builder.hasField(field);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "397:     private Message.Builder getFieldBuilder(Descriptors.FieldDescriptor field) {",
      "398:       if (hasNestedBuilders) {",
      "399:         try {",
      "400:           return builder.getFieldBuilder(field);",
      "401:         } catch (UnsupportedOperationException e) {",
      "402:           hasNestedBuilders = false;",
      "403:         }",
      "404:       }",
      "405:       return null;",
      "406:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "401:     @Override",
      "402:     public MergeTarget setField(Descriptors.FieldDescriptor field, Object value) {",
      "403:       builder.setField(field, value);",
      "404:       return this;",
      "405:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "415:       if (!field.isRepeated() && value instanceof MessageLite.Builder) {",
      "416:         if (value != getFieldBuilder(field)) {",
      "417:           builder.setField(field, ((MessageLite.Builder) value).buildPartial());",
      "418:         }",
      "419:         return this;",
      "420:       }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "413:     @Override",
      "414:     public MergeTarget setRepeatedField(",
      "415:         Descriptors.FieldDescriptor field, int index, Object value) {",
      "416:       builder.setRepeatedField(field, index, value);",
      "417:       return this;",
      "418:     }",
      "420:     @Override",
      "421:     public MergeTarget addRepeatedField(Descriptors.FieldDescriptor field, Object value) {",
      "422:       builder.addRepeatedField(field, value);",
      "423:       return this;",
      "424:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "434:       if (value instanceof MessageLite.Builder) {",
      "435:         value = ((MessageLite.Builder) value).buildPartial();",
      "436:       }",
      "443:       if (value instanceof MessageLite.Builder) {",
      "444:         value = ((MessageLite.Builder) value).buildPartial();",
      "445:       }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "536:         Message defaultInstance)",
      "537:         throws IOException {",
      "538:       if (!field.isRepeated()) {",
      "539:         if (hasField(field)) {",
      "542:         }",
      "544:         input.readGroup(field.getNumber(), subBuilder, extensionRegistry);",
      "545:         Object unused = setField(field, subBuilder.buildPartial());",
      "546:       } else {",
      "",
      "[Removed Lines]",
      "540:           input.readGroup(field.getNumber(), builder.getFieldBuilder(field), extensionRegistry);",
      "541:           return;",
      "543:         Message.Builder subBuilder = newMessageFieldInstance(field, defaultInstance);",
      "",
      "[Added Lines]",
      "563:         Message.Builder subBuilder;",
      "565:           subBuilder = getFieldBuilder(field);",
      "566:           if (subBuilder != null) {",
      "567:             input.readGroup(field.getNumber(), subBuilder, extensionRegistry);",
      "568:             return;",
      "569:           } else {",
      "570:             subBuilder = newMessageFieldInstance(field, defaultInstance);",
      "571:             subBuilder.mergeFrom((Message) getField(field));",
      "572:           }",
      "573:         } else {",
      "574:           subBuilder = newMessageFieldInstance(field, defaultInstance);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "558:         Message defaultInstance)",
      "559:         throws IOException {",
      "560:       if (!field.isRepeated()) {",
      "561:         if (hasField(field)) {",
      "564:         }",
      "566:         input.readMessage(subBuilder, extensionRegistry);",
      "567:         Object unused = setField(field, subBuilder.buildPartial());",
      "568:       } else {",
      "",
      "[Removed Lines]",
      "562:           input.readMessage(builder.getFieldBuilder(field), extensionRegistry);",
      "563:           return;",
      "565:         Message.Builder subBuilder = newMessageFieldInstance(field, defaultInstance);",
      "",
      "[Added Lines]",
      "593:         Message.Builder subBuilder;",
      "595:           subBuilder = getFieldBuilder(field);",
      "596:           if (subBuilder != null) {",
      "597:             input.readMessage(subBuilder, extensionRegistry);",
      "598:             return;",
      "599:           } else {",
      "600:             subBuilder = newMessageFieldInstance(field, defaultInstance);",
      "601:             subBuilder.mergeFrom((Message) getField(field));",
      "602:           }",
      "603:         } else {",
      "604:           subBuilder = newMessageFieldInstance(field, defaultInstance);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "586:     public MergeTarget newMergeTargetForField(",
      "587:         Descriptors.FieldDescriptor field, Message defaultInstance) {",
      "588:       Message.Builder subBuilder;",
      "593:       }",
      "594:       if (!field.isRepeated()) {",
      "595:         Message originalMessage = (Message) getField(field);",
      "596:         if (originalMessage != null) {",
      "",
      "[Removed Lines]",
      "589:       if (defaultInstance != null) {",
      "590:         subBuilder = defaultInstance.newBuilderForType();",
      "591:       } else {",
      "592:         subBuilder = builder.newBuilderForField(field);",
      "",
      "[Added Lines]",
      "629:       if (!field.isRepeated() && hasField(field)) {",
      "630:         subBuilder = getFieldBuilder(field);",
      "631:         if (subBuilder != null) {",
      "632:           return new BuilderAdapter(subBuilder);",
      "633:         }",
      "636:       subBuilder = newMessageFieldInstance(field, defaultInstance);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "627:     @Override",
      "628:     public Object finish() {",
      "630:     }",
      "631:   }",
      "",
      "[Removed Lines]",
      "629:       return builder.buildPartial();",
      "",
      "[Added Lines]",
      "672:       return builder;",
      "",
      "---------------"
    ],
    "ruby/compatibility_tests/v3.0.0/tests/basic.rb||ruby/compatibility_tests/v3.0.0/tests/basic.rb": [
      "File: ruby/compatibility_tests/v3.0.0/tests/basic.rb -> ruby/compatibility_tests/v3.0.0/tests/basic.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "667:       assert m[\"z\"] == :C",
      "668:       m[\"z\"] = 2",
      "669:       assert m[\"z\"] == :B",
      "672:       assert_raise RangeError do",
      "673:         m[\"z\"] = :Z",
      "674:       end",
      "",
      "[Removed Lines]",
      "670:       m[\"z\"] = 4",
      "671:       assert m[\"z\"] == 4",
      "",
      "[Added Lines]",
      "670:       m[\"z\"] = 5",
      "671:       assert m[\"z\"] == 5",
      "",
      "---------------"
    ],
    "ruby/ext/google/protobuf_c/message.c||ruby/ext/google/protobuf_c/message.c": [
      "File: ruby/ext/google/protobuf_c/message.c -> ruby/ext/google/protobuf_c/message.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1263:   int n = upb_EnumDef_ValueCount(e);",
      "1264:   for (int i = 0; i < n; i++) {",
      "1265:     const upb_EnumValueDef* ev = upb_EnumDef_Value(e, i);",
      "1267:     int32_t value = upb_EnumValueDef_Number(ev);",
      "1268:     if (name[0] < 'A' || name[0] > 'Z') {",
      "1270:           \"Enum value '%s' does not start with an uppercase letter \"",
      "1271:           \"as is required for Ruby constants.\",",
      "1272:           name);",
      "1273:     }",
      "1274:     rb_define_const(mod, name, INT2NUM(value));",
      "1275:   }",
      "1277:   rb_define_singleton_method(mod, \"lookup\", enum_lookup, 1);",
      "",
      "[Removed Lines]",
      "1266:     const char* name = upb_EnumValueDef_Name(ev);",
      "1269:       rb_warn(",
      "",
      "[Added Lines]",
      "1266:     char* name = strdup(upb_EnumValueDef_Name(ev));",
      "1269:       if (name[0] >= 'a' && name[0] <= 'z') {",
      "1270:         name[0] -= 32; // auto capitalize",
      "1271:       } else {",
      "1272:         rb_warn(",
      "1276:       }",
      "1279:     free(name);",
      "",
      "---------------"
    ],
    "ruby/src/main/java/com/google/protobuf/jruby/RubyEnumDescriptor.java||ruby/src/main/java/com/google/protobuf/jruby/RubyEnumDescriptor.java": [
      "File: ruby/src/main/java/com/google/protobuf/jruby/RubyEnumDescriptor.java -> ruby/src/main/java/com/google/protobuf/jruby/RubyEnumDescriptor.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "162:     boolean defaultValueRequiredButNotFound =",
      "163:         descriptor.getFile().getSyntax() == FileDescriptor.Syntax.PROTO3;",
      "164:     for (EnumValueDescriptor value : descriptor.getValues()) {",
      "168:         enumModule.defineConstant(name, runtime.newFixnum(value.getNumber()));",
      "169:       } else {",
      "170:         runtime",
      "",
      "[Removed Lines]",
      "165:       String name = value.getName();",
      "167:       if (Character.isUpperCase(name.codePointAt(0))) {",
      "",
      "[Added Lines]",
      "165:       String name = fixEnumConstantName(value.getName());",
      "167:       int ch = name.codePointAt(0);",
      "168:       if (Character.isUpperCase(ch)) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "189:     return enumModule;",
      "190:   }",
      "192:   private EnumDescriptor descriptor;",
      "193:   private EnumDescriptorProto.Builder builder;",
      "194:   private IRubyObject name;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "193:   private static String fixEnumConstantName(String name) {",
      "194:     if (name != null && name.length() > 0) {",
      "195:       int ch = name.codePointAt(0);",
      "196:       if (ch >= 'a' && ch <= 'z') {",
      "200:         return new StringBuilder()",
      "201:                 .appendCodePoint(Character.toUpperCase(ch))",
      "202:                 .append(name.substring(1))",
      "203:                 .toString();",
      "204:       }",
      "205:     }",
      "206:     return name;",
      "207:   }",
      "",
      "---------------"
    ],
    "ruby/tests/basic_test.proto||ruby/tests/basic_test.proto": [
      "File: ruby/tests/basic_test.proto -> ruby/tests/basic_test.proto",
      "--- Hunk 1 ---",
      "[Context before]",
      "73:   A = 1;",
      "74:   B = 2;",
      "75:   C = 3;",
      "76: }",
      "78: message TestEmbeddedMessageParent {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "76:   v0 = 4;",
      "",
      "---------------"
    ],
    "ruby/tests/basic_test_proto2.proto||ruby/tests/basic_test_proto2.proto": [
      "File: ruby/tests/basic_test_proto2.proto -> ruby/tests/basic_test_proto2.proto",
      "--- Hunk 1 ---",
      "[Context before]",
      "69:   A = 1;",
      "70:   B = 2;",
      "71:   C = 3;",
      "72: }",
      "74: enum TestNonZeroEnum {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "72:   v0 = 4;",
      "",
      "---------------"
    ],
    "ruby/tests/common_tests.rb||ruby/tests/common_tests.rb": [
      "File: ruby/tests/common_tests.rb -> ruby/tests/common_tests.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "331:     l.push :A",
      "332:     l.push :B",
      "333:     l.push :C",
      "335:     assert_raise RangeError do",
      "336:       l.push :D",
      "337:     end",
      "338:     assert l[0] == :A",
      "342:   end",
      "344:   def test_rptfield_initialize",
      "",
      "[Removed Lines]",
      "334:     assert l.count == 3",
      "340:     l.push 4",
      "341:     assert l[3] == 4",
      "",
      "[Added Lines]",
      "334:     l.push :v0",
      "335:     assert l.count == 4",
      "340:     assert l[3] == :v0",
      "342:     l.push 5",
      "343:     assert l[4] == 5",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "542:     assert m[\"z\"] == :C",
      "543:     m[\"z\"] = 2",
      "544:     assert m[\"z\"] == :B",
      "547:     assert_raise RangeError do",
      "548:       m[\"z\"] = :Z",
      "549:     end",
      "",
      "[Removed Lines]",
      "545:     m[\"z\"] = 4",
      "546:     assert m[\"z\"] == 4",
      "",
      "[Added Lines]",
      "547:     m[\"z\"] = 5",
      "548:     assert m[\"z\"] == 5",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "712:     assert proto_module::TestEnum::A == 1",
      "713:     assert proto_module::TestEnum::B == 2",
      "714:     assert proto_module::TestEnum::C == 3",
      "716:     assert proto_module::TestEnum::lookup(1) == :A",
      "717:     assert proto_module::TestEnum::lookup(2) == :B",
      "718:     assert proto_module::TestEnum::lookup(3) == :C",
      "720:     assert proto_module::TestEnum::resolve(:A) == 1",
      "721:     assert proto_module::TestEnum::resolve(:B) == 2",
      "722:     assert proto_module::TestEnum::resolve(:C) == 3",
      "723:   end",
      "725:   def test_enum_const_get_helpers",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "717:     assert proto_module::TestEnum::V0 == 4",
      "722:     assert proto_module::TestEnum::lookup(4) == :v0",
      "727:     assert proto_module::TestEnum::resolve(:v0) == 4",
      "",
      "---------------"
    ],
    "ruby/tests/generated_code.proto||ruby/tests/generated_code.proto": [
      "File: ruby/tests/generated_code.proto -> ruby/tests/generated_code.proto",
      "--- Hunk 1 ---",
      "[Context before]",
      "67:   A = 1;",
      "68:   B = 2;",
      "69:   C = 3;",
      "70: }",
      "72: message testLowercaseNested {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "71:   v0 = 4;",
      "",
      "---------------"
    ],
    "ruby/tests/generated_code_proto2.proto||ruby/tests/generated_code_proto2.proto": [
      "File: ruby/tests/generated_code_proto2.proto -> ruby/tests/generated_code_proto2.proto",
      "--- Hunk 1 ---",
      "[Context before]",
      "68:   A = 1;",
      "69:   B = 2;",
      "70:   C = 3;",
      "71: }",
      "73: message TestUnknown {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "72:   v0 = 4;",
      "",
      "---------------"
    ],
    "ruby/tests/repeated_field_test.rb||ruby/tests/repeated_field_test.rb": [
      "File: ruby/tests/repeated_field_test.rb -> ruby/tests/repeated_field_test.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "697:       value :A, 1",
      "698:       value :B, 2",
      "699:       value :C, 3",
      "700:     end",
      "701:   end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "700:       value :v0, 4",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a7da44c5ae0a6ebc1ef950bb5699efa8c67586b6",
      "candidate_info": {
        "commit_hash": "a7da44c5ae0a6ebc1ef950bb5699efa8c67586b6",
        "repo": "protocolbuffers/protobuf",
        "commit_url": "https://github.com/protocolbuffers/protobuf/commit/a7da44c5ae0a6ebc1ef950bb5699efa8c67586b6",
        "files": [
          "examples/README.md",
          "java/core/src/main/java/com/google/protobuf/ExtensionSchemaLite.java",
          "java/core/src/main/java/com/google/protobuf/FieldSet.java",
          "third_party/googletest"
        ],
        "message": "Sync from Piper @mkruskal/footmitten\n\nPROTOBUF_SYNC_PIPER",
        "before_after_code_files": [
          "java/core/src/main/java/com/google/protobuf/ExtensionSchemaLite.java||java/core/src/main/java/com/google/protobuf/ExtensionSchemaLite.java",
          "java/core/src/main/java/com/google/protobuf/FieldSet.java||java/core/src/main/java/com/google/protobuf/FieldSet.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "java/core/src/main/java/com/google/protobuf/ExtensionSchemaLite.java||java/core/src/main/java/com/google/protobuf/ExtensionSchemaLite.java": [
          "File: java/core/src/main/java/com/google/protobuf/ExtensionSchemaLite.java -> java/core/src/main/java/com/google/protobuf/ExtensionSchemaLite.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "255:             value = reader.readString();",
          "256:             break;",
          "257:           case GROUP:",
          "258:             value =",
          "259:                 reader.readGroup(",
          "260:                     extension.getMessageDefaultInstance().getClass(), extensionRegistry);",
          "261:             break;",
          "263:           case MESSAGE:",
          "264:             value =",
          "265:                 reader.readMessage(",
          "266:                     extension.getMessageDefaultInstance().getClass(), extensionRegistry);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "258:             if (!extension.isRepeated()) {",
          "259:               Object oldValue = extensions.getField(extension.descriptor);",
          "260:               if (oldValue instanceof GeneratedMessageLite) {",
          "261:                 Schema extSchema = Protobuf.getInstance().schemaFor(oldValue);",
          "262:                 if (!((GeneratedMessageLite<?, ?>) oldValue).isMutable()) {",
          "263:                   Object newValue = extSchema.newInstance();",
          "264:                   extSchema.mergeFrom(newValue, oldValue);",
          "265:                   extensions.setField(extension.descriptor, newValue);",
          "266:                   oldValue = newValue;",
          "267:                 }",
          "268:                 reader.mergeGroupField(oldValue, extSchema, extensionRegistry);",
          "269:                 return unknownFields;",
          "270:               }",
          "271:             }",
          "278:             if (!extension.isRepeated()) {",
          "279:               Object oldValue = extensions.getField(extension.descriptor);",
          "280:               if (oldValue instanceof GeneratedMessageLite) {",
          "281:                 Schema extSchema = Protobuf.getInstance().schemaFor(oldValue);",
          "282:                 if (!((GeneratedMessageLite<?, ?>) oldValue).isMutable()) {",
          "283:                   Object newValue = extSchema.newInstance();",
          "284:                   extSchema.mergeFrom(newValue, oldValue);",
          "285:                   extensions.setField(extension.descriptor, newValue);",
          "286:                   oldValue = newValue;",
          "287:                 }",
          "288:                 reader.mergeMessageField(oldValue, extSchema, extensionRegistry);",
          "289:                 return unknownFields;",
          "290:               }",
          "291:             }",
          "",
          "---------------"
        ],
        "java/core/src/main/java/com/google/protobuf/FieldSet.java||java/core/src/main/java/com/google/protobuf/FieldSet.java": [
          "File: java/core/src/main/java/com/google/protobuf/FieldSet.java -> java/core/src/main/java/com/google/protobuf/FieldSet.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:     if (isImmutable) {",
          "124:       return;",
          "125:     }",
          "126:     fields.makeImmutable();",
          "127:     isImmutable = true;",
          "128:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "126:     for (Object value : fields.values()) {",
          "127:       if (value instanceof GeneratedMessageLite) {",
          "128:         ((GeneratedMessageLite<?, ?>) value).makeImmutable();",
          "129:       }",
          "130:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "77036367ce280423245440f08c0cdb2e807967be",
      "candidate_info": {
        "commit_hash": "77036367ce280423245440f08c0cdb2e807967be",
        "repo": "protocolbuffers/protobuf",
        "commit_url": "https://github.com/protocolbuffers/protobuf/commit/77036367ce280423245440f08c0cdb2e807967be",
        "files": [
          "java/core/src/main/java/com/google/protobuf/ExtensionSchemaLite.java",
          "java/core/src/main/java/com/google/protobuf/FieldSet.java"
        ],
        "message": "Sync from Piper @mkruskal/footmitten\n\nPROTOBUF_SYNC_PIPER",
        "before_after_code_files": [
          "java/core/src/main/java/com/google/protobuf/ExtensionSchemaLite.java||java/core/src/main/java/com/google/protobuf/ExtensionSchemaLite.java",
          "java/core/src/main/java/com/google/protobuf/FieldSet.java||java/core/src/main/java/com/google/protobuf/FieldSet.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "java/core/src/main/java/com/google/protobuf/ExtensionSchemaLite.java||java/core/src/main/java/com/google/protobuf/ExtensionSchemaLite.java": [
          "File: java/core/src/main/java/com/google/protobuf/ExtensionSchemaLite.java -> java/core/src/main/java/com/google/protobuf/ExtensionSchemaLite.java"
        ],
        "java/core/src/main/java/com/google/protobuf/FieldSet.java||java/core/src/main/java/com/google/protobuf/FieldSet.java": [
          "File: java/core/src/main/java/com/google/protobuf/FieldSet.java -> java/core/src/main/java/com/google/protobuf/FieldSet.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: import java.util.Iterator;",
          "40: import java.util.List;",
          "41: import java.util.Map;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42: import java.util.Map.Entry;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "123:     if (isImmutable) {",
          "124:       return;",
          "125:     }",
          "129:       }",
          "130:     }",
          "131:     fields.makeImmutable();",
          "",
          "[Removed Lines]",
          "126:     for (Object value : fields.values()) {",
          "127:       if (value instanceof GeneratedMessageLite) {",
          "128:         ((GeneratedMessageLite<?, ?>) value).makeImmutable();",
          "",
          "[Added Lines]",
          "127:     for (int i = 0; i < fields.getNumArrayEntries(); ++i) {",
          "128:       Entry<T, Object> entry = fields.getArrayEntryAt(i);",
          "129:       if (entry.getValue() instanceof GeneratedMessageLite) {",
          "130:         ((GeneratedMessageLite<?, ?>) entry.getValue()).makeImmutable();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5a95ef8fa20703afef4f88843f55f5bc032d34d3",
      "candidate_info": {
        "commit_hash": "5a95ef8fa20703afef4f88843f55f5bc032d34d3",
        "repo": "protocolbuffers/protobuf",
        "commit_url": "https://github.com/protocolbuffers/protobuf/commit/5a95ef8fa20703afef4f88843f55f5bc032d34d3",
        "files": [
          "src/google/protobuf/arena_align.h",
          "src/google/protobuf/arena_allocation_policy.h",
          "src/google/protobuf/compiler/csharp/csharp_map_field.cc",
          "src/google/protobuf/json/internal/parser.cc",
          "src/google/protobuf/json/internal/parser_traits.h",
          "src/google/protobuf/util/message_differencer.h",
          "src/google/protobuf/util/message_differencer_unittest.cc"
        ],
        "message": "Fixing merge issues",
        "before_after_code_files": [
          "src/google/protobuf/arena_align.h||src/google/protobuf/arena_align.h",
          "src/google/protobuf/arena_allocation_policy.h||src/google/protobuf/arena_allocation_policy.h",
          "src/google/protobuf/compiler/csharp/csharp_map_field.cc||src/google/protobuf/compiler/csharp/csharp_map_field.cc",
          "src/google/protobuf/json/internal/parser.cc||src/google/protobuf/json/internal/parser.cc",
          "src/google/protobuf/json/internal/parser_traits.h||src/google/protobuf/json/internal/parser_traits.h",
          "src/google/protobuf/util/message_differencer.h||src/google/protobuf/util/message_differencer.h",
          "src/google/protobuf/util/message_differencer_unittest.cc||src/google/protobuf/util/message_differencer_unittest.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/protocolbuffers/protobuf/pull/10729"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/google/protobuf/arena_align.h||src/google/protobuf/arena_align.h": [
          "File: src/google/protobuf/arena_align.h -> src/google/protobuf/arena_align.h"
        ],
        "src/google/protobuf/arena_allocation_policy.h||src/google/protobuf/arena_allocation_policy.h": [
          "File: src/google/protobuf/arena_allocation_policy.h -> src/google/protobuf/arena_allocation_policy.h"
        ],
        "src/google/protobuf/compiler/csharp/csharp_map_field.cc||src/google/protobuf/compiler/csharp/csharp_map_field.cc": [
          "File: src/google/protobuf/compiler/csharp/csharp_map_field.cc -> src/google/protobuf/compiler/csharp/csharp_map_field.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "88: void MapFieldGenerator::GenerateMergingCode(io::Printer* printer) {",
          "89:   printer->Print(",
          "90:       variables_,",
          "92: }",
          "94: void MapFieldGenerator::GenerateParsingCode(io::Printer* printer) {",
          "",
          "[Removed Lines]",
          "91:       \"$name$_.Add(other.$name$_);\\n\");",
          "",
          "[Added Lines]",
          "91:       \"$name$_.MergeFrom(other.$name$_);\\n\");",
          "",
          "---------------"
        ],
        "src/google/protobuf/json/internal/parser.cc||src/google/protobuf/json/internal/parser.cc": [
          "File: src/google/protobuf/json/internal/parser.cc -> src/google/protobuf/json/internal/parser.cc"
        ],
        "src/google/protobuf/json/internal/parser_traits.h||src/google/protobuf/json/internal/parser_traits.h": [
          "File: src/google/protobuf/json/internal/parser_traits.h -> src/google/protobuf/json/internal/parser_traits.h"
        ],
        "src/google/protobuf/util/message_differencer.h||src/google/protobuf/util/message_differencer.h": [
          "File: src/google/protobuf/util/message_differencer.h -> src/google/protobuf/util/message_differencer.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "330:     MapKeyComparator& operator=(const MapKeyComparator&) = delete;",
          "331:     virtual ~MapKeyComparator();",
          "354:     virtual bool IsMatch(const Message& message1, const Message& message2,",
          "355:                          int /* unmapped_any */,",
          "356:                          const std::vector<SpecificField>& fields) const {",
          "358:     }",
          "359:   };",
          "",
          "[Removed Lines]",
          "338:     virtual bool IsMatch(",
          "339:         const Message& /* message1 */, const Message& /* message2 */,",
          "340:         const std::vector<SpecificField>& /* parent_fields */) const {",
          "341:       GOOGLE_CHECK(false) << \"IsMatch() is not implemented.\";",
          "342:       return false;",
          "343:     }",
          "357:       return IsMatch(message1, message2, fields);",
          "",
          "[Added Lines]",
          "345:       GOOGLE_CHECK(false) << \"IsMatch() is not implemented.\";",
          "346:       return false;",
          "",
          "---------------"
        ],
        "src/google/protobuf/util/message_differencer_unittest.cc||src/google/protobuf/util/message_differencer_unittest.cc": [
          "File: src/google/protobuf/util/message_differencer_unittest.cc -> src/google/protobuf/util/message_differencer_unittest.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "1907:  public:",
          "1908:   typedef util::MessageDifferencer::SpecificField SpecificField;",
          "1909:   bool IsMatch(const Message& message1, const Message& message2,",
          "1910:                const std::vector<SpecificField>& parent_fields) const override {",
          "1911:     const Reflection* reflection1 = message1.GetReflection();",
          "1912:     const Reflection* reflection2 = message2.GetReflection();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1910:                int unpacked_any,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1968:  public:",
          "1969:   typedef util::MessageDifferencer::SpecificField SpecificField;",
          "1970:   bool IsMatch(const Message& message1, const Message& message2,",
          "1971:                const std::vector<SpecificField>& parent_fields) const override {",
          "1972:     return parent_fields.back().index + 1 == parent_fields.back().new_index;",
          "1973:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1972:                int unpacked_any,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3402:  public:",
          "3403:   typedef util::MessageDifferencer::SpecificField SpecificField;",
          "3404:   bool IsMatch(const Message& message1, const Message& message2,",
          "3405:                const std::vector<SpecificField>& parent_fields) const override {",
          "3406:     const Reflection* reflection1 = message1.GetReflection();",
          "3407:     const Reflection* reflection2 = message2.GetReflection();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3407:                int unpacked_any,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b2e1d7d8a1b1959c782595cd815c22fb690ac8e2",
      "candidate_info": {
        "commit_hash": "b2e1d7d8a1b1959c782595cd815c22fb690ac8e2",
        "repo": "protocolbuffers/protobuf",
        "commit_url": "https://github.com/protocolbuffers/protobuf/commit/b2e1d7d8a1b1959c782595cd815c22fb690ac8e2",
        "files": [
          "build_defs/cpp_opts.bzl",
          "pkg/BUILD.bazel",
          "src/file_lists.cmake",
          "src/google/protobuf/arena.cc",
          "src/google/protobuf/arena_align.h",
          "src/google/protobuf/compiler/cpp/enum.cc",
          "src/google/protobuf/compiler/cpp/enum.h",
          "src/google/protobuf/json/BUILD.bazel",
          "src/google/protobuf/json/internal/lexer.cc",
          "src/google/protobuf/json/internal/writer.h",
          "src/google/protobuf/parse_context.h"
        ],
        "message": "Fix some superficial issues with GCC 4.9, MSVC, and CMake",
        "before_after_code_files": [
          "build_defs/cpp_opts.bzl||build_defs/cpp_opts.bzl",
          "pkg/BUILD.bazel||pkg/BUILD.bazel",
          "src/file_lists.cmake||src/file_lists.cmake",
          "src/google/protobuf/arena.cc||src/google/protobuf/arena.cc",
          "src/google/protobuf/arena_align.h||src/google/protobuf/arena_align.h",
          "src/google/protobuf/compiler/cpp/enum.cc||src/google/protobuf/compiler/cpp/enum.cc",
          "src/google/protobuf/compiler/cpp/enum.h||src/google/protobuf/compiler/cpp/enum.h",
          "src/google/protobuf/json/BUILD.bazel||src/google/protobuf/json/BUILD.bazel",
          "src/google/protobuf/json/internal/lexer.cc||src/google/protobuf/json/internal/lexer.cc",
          "src/google/protobuf/json/internal/writer.h||src/google/protobuf/json/internal/writer.h",
          "src/google/protobuf/parse_context.h||src/google/protobuf/parse_context.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/protocolbuffers/protobuf/pull/10729"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "build_defs/cpp_opts.bzl||build_defs/cpp_opts.bzl": [
          "File: build_defs/cpp_opts.bzl -> build_defs/cpp_opts.bzl",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:         \"-Woverloaded-virtual\",",
          "21:         \"-Wno-sign-compare\",",
          "22:         \"-Werror\",",
          "23:     ],",
          "28: # Android and MSVC builds do not need to link in a separate pthread library.",
          "29: LINK_OPTS = select({",
          "30:     \"//build_defs:config_android\": [],",
          "",
          "[Removed Lines]",
          "24: }) + [",
          "25:     \"-std=c++14\",  # Protobuf requires C++14.",
          "26: ]",
          "",
          "[Added Lines]",
          "23:         \"-std=c++14\",  # Protobuf requires C++14.",
          "25: })",
          "",
          "---------------"
        ],
        "pkg/BUILD.bazel||pkg/BUILD.bazel": [
          "File: pkg/BUILD.bazel -> pkg/BUILD.bazel",
          "--- Hunk 1 ---",
          "[Context before]",
          "340:     tags = [\"manual\"],",
          "341:     deps = [",
          "342:         \"//src/google/protobuf:arena\",",
          "343:         \"//src/google/protobuf:protobuf_lite\",",
          "344:         \"//src/google/protobuf/io\",",
          "345:         \"//src/google/protobuf/io:io_win32\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "343:         \"//src/google/protobuf:arena_align\",",
          "344:         \"//src/google/protobuf:arena_allocation_policy\",",
          "345:         \"//src/google/protobuf:arena_cleanup\",",
          "346:         \"//src/google/protobuf:arena_config\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "361:         \"//src/google/protobuf:wkt_cc_proto\",",
          "362:         \"//src/google/protobuf:protobuf_nowkt\",",
          "363:         \"//src/google/protobuf:arena\",",
          "364:         \"//src/google/protobuf:protobuf_lite\",",
          "365:         \"//src/google/protobuf:port_def\",",
          "366:         \"//src/google/protobuf/compiler:importer\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "368:         \"//src/google/protobuf:arena_align\",",
          "369:         \"//src/google/protobuf:arena_allocation_policy\",",
          "370:         \"//src/google/protobuf:arena_cleanup\",",
          "371:         \"//src/google/protobuf:arena_config\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "371:         \"//src/google/protobuf/io:tokenizer\",",
          "372:         \"//src/google/protobuf/io:zero_copy_sink\",",
          "373:         \"//src/google/protobuf/json\",",
          "374:         \"//src/google/protobuf/stubs\",",
          "375:         \"//src/google/protobuf/stubs:lite\",",
          "376:         \"//src/google/protobuf/util:delimited_message_util\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "382:         \"//src/google/protobuf/json:descriptor_traits\",",
          "383:         \"//src/google/protobuf/json:lexer\",",
          "384:         \"//src/google/protobuf/json:message_path\",",
          "385:         \"//src/google/protobuf/json:parser\",",
          "386:         \"//src/google/protobuf/json:unparser\",",
          "387:         \"//src/google/protobuf/json:untyped_message\",",
          "388:         \"//src/google/protobuf/json:writer\",",
          "389:         \"//src/google/protobuf/json:zero_copy_buffered_stream\",",
          "",
          "---------------"
        ],
        "src/file_lists.cmake||src/file_lists.cmake": [
          "File: src/file_lists.cmake -> src/file_lists.cmake",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:   ${protobuf_SOURCE_DIR}/src/google/protobuf/any.cc",
          "25:   ${protobuf_SOURCE_DIR}/src/google/protobuf/any_lite.cc",
          "26:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena.cc",
          "27:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arenastring.cc",
          "28:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arenaz_sampler.cc",
          "29:   ${protobuf_SOURCE_DIR}/src/google/protobuf/compiler/importer.cc",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena_align.cc",
          "28:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena_config.cc",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:   ${protobuf_SOURCE_DIR}/src/google/protobuf/io/zero_copy_stream.cc",
          "54:   ${protobuf_SOURCE_DIR}/src/google/protobuf/io/zero_copy_stream_impl.cc",
          "55:   ${protobuf_SOURCE_DIR}/src/google/protobuf/io/zero_copy_stream_impl_lite.cc",
          "56:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/json.cc",
          "57:   ${protobuf_SOURCE_DIR}/src/google/protobuf/map.cc",
          "58:   ${protobuf_SOURCE_DIR}/src/google/protobuf/map_field.cc",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/lexer.cc",
          "59:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/message_path.cc",
          "60:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/parser.cc",
          "61:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/unparser.cc",
          "62:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/untyped_message.cc",
          "63:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/writer.cc",
          "64:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/zero_copy_buffered_stream.cc",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "93:   ${protobuf_SOURCE_DIR}/src/google/protobuf/wrappers.pb.h",
          "94:   ${protobuf_SOURCE_DIR}/src/google/protobuf/any.h",
          "95:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena.h",
          "96:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena_config.h",
          "97:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena_impl.h",
          "98:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arenastring.h",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena_align.h",
          "106:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena_allocation_policy.h",
          "107:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena_cleanup.h",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "129:   ${protobuf_SOURCE_DIR}/src/google/protobuf/io/zero_copy_stream.h",
          "130:   ${protobuf_SOURCE_DIR}/src/google/protobuf/io/zero_copy_stream_impl.h",
          "131:   ${protobuf_SOURCE_DIR}/src/google/protobuf/io/zero_copy_stream_impl_lite.h",
          "132:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/json.h",
          "133:   ${protobuf_SOURCE_DIR}/src/google/protobuf/map.h",
          "134:   ${protobuf_SOURCE_DIR}/src/google/protobuf/map_entry.h",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "144:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/descriptor_traits.h",
          "145:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/lexer.h",
          "146:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/message_path.h",
          "147:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/parser.h",
          "148:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/parser_traits.h",
          "149:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/unparser.h",
          "150:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/unparser_traits.h",
          "151:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/untyped_message.h",
          "152:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/writer.h",
          "153:   ${protobuf_SOURCE_DIR}/src/google/protobuf/json/internal/zero_copy_buffered_stream.h",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "179: set(libprotobuf_lite_srcs",
          "180:   ${protobuf_SOURCE_DIR}/src/google/protobuf/any_lite.cc",
          "181:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena.cc",
          "182:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arenastring.cc",
          "183:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arenaz_sampler.cc",
          "184:   ${protobuf_SOURCE_DIR}/src/google/protobuf/extension_set.cc",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena_align.cc",
          "205:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena_config.cc",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "208: set(libprotobuf_lite_hdrs",
          "209:   ${protobuf_SOURCE_DIR}/src/google/protobuf/any.h",
          "210:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena.h",
          "211:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena_config.h",
          "212:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena_impl.h",
          "213:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arenastring.h",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "235:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena_align.h",
          "236:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena_allocation_policy.h",
          "237:   ${protobuf_SOURCE_DIR}/src/google/protobuf/arena_cleanup.h",
          "",
          "---------------"
        ],
        "src/google/protobuf/arena.cc||src/google/protobuf/arena.cc": [
          "File: src/google/protobuf/arena.cc -> src/google/protobuf/arena.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: namespace internal {",
          "57: namespace {",
          "63: ArenaBlock* SentryArenaBlock() {",
          "65:   return const_cast<ArenaBlock*>(&kSentryArenaBlock);",
          "66: }",
          "68: }  // namespace",
          "",
          "[Removed Lines]",
          "61: constexpr ArenaBlock kSentryArenaBlock = {};",
          "",
          "[Added Lines]",
          "59: #if defined(__GNUC__) && __GNUC__ >= 5",
          "62: constexpr ArenaBlock kSentryArenaBlock;",
          "68: #else",
          "73: ArenaBlock* SentryArenaBlock() {",
          "74:   static const ArenaBlock kSentryArenaBlock;",
          "76:   return const_cast<ArenaBlock*>(&kSentryArenaBlock);",
          "77: }",
          "78: #endif",
          "",
          "---------------"
        ],
        "src/google/protobuf/arena_align.h||src/google/protobuf/arena_align.h": [
          "File: src/google/protobuf/arena_align.h -> src/google/protobuf/arena_align.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "110: struct ArenaAlign {",
          "111:   static constexpr bool IsDefault() { return false; };",
          "115:   constexpr bool IsAligned(size_t n) const { return (n & (align - 1)) == 0; }",
          "",
          "[Removed Lines]",
          "113:   size_t align = 8;",
          "",
          "[Added Lines]",
          "113:   size_t align;",
          "",
          "---------------"
        ],
        "src/google/protobuf/compiler/cpp/enum.cc||src/google/protobuf/compiler/cpp/enum.cc": [
          "File: src/google/protobuf/compiler/cpp/enum.cc -> src/google/protobuf/compiler/cpp/enum.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:     }",
          "98:   }",
          "101: }",
          "103: EnumGenerator::EnumGenerator(const EnumDescriptor* descriptor,",
          "",
          "[Removed Lines]",
          "100:   return {min_desc, max_desc};",
          "",
          "[Added Lines]",
          "100:   return EnumGenerator::ValueLimits{min_desc, max_desc};",
          "",
          "---------------"
        ],
        "src/google/protobuf/compiler/cpp/enum.h||src/google/protobuf/compiler/cpp/enum.h": [
          "File: src/google/protobuf/compiler/cpp/enum.h -> src/google/protobuf/compiler/cpp/enum.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:   friend class FileGenerator;",
          "84:   struct ValueLimits {",
          "88:     static ValueLimits FromEnum(const EnumDescriptor* descriptor);",
          "89:   };",
          "",
          "[Removed Lines]",
          "85:     const EnumValueDescriptor* min = nullptr;",
          "86:     const EnumValueDescriptor* max = nullptr;",
          "",
          "[Added Lines]",
          "85:     const EnumValueDescriptor* min;",
          "86:     const EnumValueDescriptor* max;",
          "",
          "---------------"
        ],
        "src/google/protobuf/json/BUILD.bazel||src/google/protobuf/json/BUILD.bazel": [
          "File: src/google/protobuf/json/BUILD.bazel -> src/google/protobuf/json/BUILD.bazel",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: load(\"//build_defs:cpp_opts.bzl\", \"COPTS\")",
          "4: package(default_visibility = [",
          "6: ])",
          "8: licenses([\"notice\"])",
          "",
          "[Removed Lines]",
          "5:     \"//src/google/protobuf/util:__subpackages__\",",
          "",
          "[Added Lines]",
          "5:     \"//src/google/protobuf/json:__pkg__\",",
          "6:     \"//pkg:__pkg__\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:     hdrs = [\"internal/zero_copy_buffered_stream.h\"],",
          "71:     copts = COPTS,",
          "72:     strip_include_prefix = \"/src\",",
          "74:     deps = [",
          "75:         \"//src/google/protobuf:port_def\",",
          "76:         \"//src/google/protobuf/io\",",
          "",
          "[Removed Lines]",
          "73:     visibility = [\"//visibility:private\"],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "101:     hdrs = [\"internal/untyped_message.h\"],",
          "102:     copts = COPTS,",
          "103:     strip_include_prefix = \"/src\",",
          "105:     deps = [",
          "106:         \"//src/google/protobuf\",",
          "107:         \"//src/google/protobuf:port_def\",",
          "",
          "[Removed Lines]",
          "104:     visibility = [\"//visibility:private\"],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "124:     hdrs = [\"internal/lexer.h\"],",
          "125:     copts = COPTS,",
          "126:     strip_include_prefix = \"/src\",",
          "128:     deps = [",
          "129:         \":message_path\",",
          "130:         \":zero_copy_buffered_stream\",",
          "",
          "[Removed Lines]",
          "127:     visibility = [\"//visibility:private\"],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "164:     hdrs = [\"internal/writer.h\"],",
          "165:     copts = COPTS,",
          "166:     strip_include_prefix = \"/src\",",
          "168:     deps = [",
          "169:         \"//src/google/protobuf:port_def\",",
          "170:         \"//src/google/protobuf/io\",",
          "",
          "[Removed Lines]",
          "167:     visibility = [\"//visibility:private\"],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "180:     hdrs = [\"internal/descriptor_traits.h\"],",
          "181:     copts = COPTS,",
          "182:     strip_include_prefix = \"/src\",",
          "184:     deps = [",
          "185:         \":lexer\",",
          "186:         \":untyped_message\",",
          "",
          "[Removed Lines]",
          "183:     visibility = [\"//visibility:private\"],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "207:     ],",
          "208:     copts = COPTS,",
          "209:     strip_include_prefix = \"/src\",",
          "211:     deps = [",
          "212:         \":descriptor_traits\",",
          "213:         \":lexer\",",
          "",
          "[Removed Lines]",
          "210:     visibility = [\"//visibility:private\"],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "242:     ],",
          "243:     copts = COPTS,",
          "244:     strip_include_prefix = \"/src\",",
          "246:     deps = [",
          "247:         \":descriptor_traits\",",
          "248:         \":untyped_message\",",
          "",
          "[Removed Lines]",
          "245:     visibility = [\"//visibility:private\"],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "266:     hdrs = [\"internal/message_path.h\"],",
          "267:     copts = COPTS,",
          "268:     strip_include_prefix = \"/src\",",
          "270:     deps = [",
          "271:         \"//src/google/protobuf\",",
          "272:         \"@com_google_absl//absl/cleanup\",",
          "",
          "[Removed Lines]",
          "269:     visibility = [\"//visibility:private\"],",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/google/protobuf/json/internal/lexer.cc||src/google/protobuf/json/internal/lexer.cc": [
          "File: src/google/protobuf/json/internal/lexer.cc -> src/google/protobuf/json/internal/lexer.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:   uint64_t state = absl::bit_cast<uintptr_t>(kAslrSeed) + kB +",
          "81:                    kCounterSeed.fetch_add(1, std::memory_order_relaxed);",
          "83:     state = state * kA + kB;",
          "84:     return absl::rotr(static_cast<uint32_t>(((state >> 18) ^ state) >> 27),",
          "85:                       state >> 59);",
          "",
          "[Removed Lines]",
          "82:   auto rng = [&state] {",
          "",
          "[Added Lines]",
          "82:   auto rng = [&state, &kA, &kB] {",
          "",
          "---------------"
        ],
        "src/google/protobuf/json/internal/writer.h||src/google/protobuf/json/internal/writer.h": [
          "File: src/google/protobuf/json/internal/writer.h -> src/google/protobuf/json/internal/writer.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "81: template <typename Tuple, typename F, size_t... i>",
          "82: void EachInner(const Tuple& value, F f, std::index_sequence<i...>) {",
          "84: }",
          "",
          "[Removed Lines]",
          "83:   (void)(int[]){(f(std::get<i>(value)), 0)...};  // NOLINT(readability/braces)",
          "",
          "[Added Lines]",
          "83:   int ignored[] =",
          "84:     {(f(std::get<i>(value)), 0)...};  // NOLINT(readability/braces)",
          "85:   (void)ignored;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "157:   template <typename... Ts>",
          "158:   void Write(Quoted<Ts...> val) {",
          "159:     Write('\"');",
          "161:     Write('\"');",
          "162:   }",
          "",
          "[Removed Lines]",
          "160:     Each(val.value, [this](auto x) { WriteQuoted(x); });",
          "",
          "[Added Lines]",
          "162:     Each(val.value, [this](auto x) { this->WriteQuoted(x); });",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "168:       typename std::enable_if<sizeof...(Ts) != 1, void>::type {",
          "170:   }",
          "172:   void Whitespace(absl::string_view ws) {",
          "",
          "[Removed Lines]",
          "169:     Each(std::make_tuple(args...), [this](auto x) { Write(x); });",
          "",
          "[Added Lines]",
          "171:     Each(std::make_tuple(args...), [this](auto x) { this->Write(x); });",
          "",
          "---------------"
        ],
        "src/google/protobuf/parse_context.h||src/google/protobuf/parse_context.h": [
          "File: src/google/protobuf/parse_context.h -> src/google/protobuf/parse_context.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "250:       if (aliasing_ == kOnPatch) aliasing_ = kNoDelta;",
          "251:       return flat.data();",
          "252:     } else {",
          "254:       limit_ = 0;",
          "255:       limit_end_ = buffer_end_ = buffer_ + flat.size();",
          "256:       next_chunk_ = nullptr;",
          "",
          "[Removed Lines]",
          "253:       std::memcpy(buffer_, flat.data(), flat.size());",
          "",
          "[Added Lines]",
          "253:       if (!flat.empty()) {",
          "254:         std::memcpy(buffer_, flat.data(), flat.size());",
          "255:       }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7cdf66e292e1ed6cbd9fd2b938e74c3d9e92d851",
      "candidate_info": {
        "commit_hash": "7cdf66e292e1ed6cbd9fd2b938e74c3d9e92d851",
        "repo": "protocolbuffers/protobuf",
        "commit_url": "https://github.com/protocolbuffers/protobuf/commit/7cdf66e292e1ed6cbd9fd2b938e74c3d9e92d851",
        "files": [
          "src/google/protobuf/json/json.cc"
        ],
        "message": "Sync from Piper @479479714\n\nPROTOBUF_SYNC_PIPER",
        "before_after_code_files": [
          "src/google/protobuf/json/json.cc||src/google/protobuf/json/json.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/protocolbuffers/protobuf/pull/10729"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/google/protobuf/json/json.cc||src/google/protobuf/json/json.cc": [
          "File: src/google/protobuf/json/json.cc -> src/google/protobuf/json/json.cc"
        ]
      }
    }
  ]
}