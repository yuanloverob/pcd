{
  "cve_id": "CVE-2023-34105",
  "cve_desc": "SRS is a real-time video server supporting RTMP, WebRTC, HLS, HTTP-FLV, SRT, MPEG-DASH, and GB28181. Prior to versions 5.0.157, 5.0-b1, and 6.0.48, SRS's `api-server` server is vulnerable to a drive-by command injection. An attacker may send a request to the `/api/v1/snapshots` endpoint containing any commands to be executed as part of the body of the POST request. This issue may lead to Remote Code Execution (RCE). Versions 5.0.157, 5.0-b1, and 6.0.48 contain a fix.",
  "repo": "ossrs/srs",
  "patch_hash": "1d878c2daaf913ad01c6d0bc2f247116c8050338",
  "patch_info": {
    "commit_hash": "1d878c2daaf913ad01c6d0bc2f247116c8050338",
    "repo": "ossrs/srs",
    "commit_url": "https://github.com/ossrs/srs/commit/1d878c2daaf913ad01c6d0bc2f247116c8050338",
    "files": [
      "trunk/doc/CHANGELOG.md",
      "trunk/research/api-server/server.go",
      "trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp"
    ],
    "message": "Fix command injection in api-server for HTTP callback. v5.0.157, v6.0.48",
    "before_after_code_files": [
      "trunk/research/api-server/server.go||trunk/research/api-server/server.go",
      "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
    ]
  },
  "patch_diff": {
    "trunk/research/api-server/server.go||trunk/research/api-server/server.go": [
      "File: trunk/research/api-server/server.go -> trunk/research/api-server/server.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "400:  normalPicPath := path.Join(outputPicDir, fmt.Sprintf(\"%v\", v.Stream)+\"-%03d.png\")",
      "401:  bestPng := path.Join(outputPicDir, fmt.Sprintf(\"%v-best.png\", v.Stream))",
      "405:  timeoutCtx, _ := context.WithTimeout(v.cancelCtx, v.timeout)",
      "407:  if err = cmd.Run(); err != nil {",
      "408:   log.Println(fmt.Sprintf(\"run snapshot %v cmd failed, err is %v\", v.Tag(), err))",
      "409:   return",
      "",
      "[Removed Lines]",
      "403:  param := fmt.Sprintf(\"%v -i %v -vf fps=1 -vcodec png -f image2 -an -y -vframes %v -y %v\", ffmpegPath, inputUrl, v.vframes, normalPicPath)",
      "404:  log.Println(fmt.Sprintf(\"start snapshot, cmd param=%v\", param))",
      "406:  cmd := exec.CommandContext(timeoutCtx, \"/bin/bash\", \"-c\", param)",
      "",
      "[Added Lines]",
      "403:  params := []string{",
      "404:   \"-i\", inputUrl,",
      "405:   \"-vf\", \"fps=1\",",
      "406:   \"-vcodec\", \"png\",",
      "407:   \"-f\", \"image2\",",
      "408:   \"-an\",",
      "409:   \"-vframes\", strconv.Itoa(v.vframes),",
      "410:   \"-y\", normalPicPath,",
      "411:  }",
      "412:  log.Println(fmt.Sprintf(\"start snapshot, cmd param=%v %v\", ffmpegPath, strings.Join(params, \" \")))",
      "414:  cmd := exec.CommandContext(timeoutCtx, ffmpegPath, params...)",
      "",
      "---------------"
    ],
    "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
      "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       5",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    156",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    157",
      "",
      "---------------"
    ],
    "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
      "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       6",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    47",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    48",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9238f09b0b41c640324a1173043a4d592c2cc32e",
      "candidate_info": {
        "commit_hash": "9238f09b0b41c640324a1173043a4d592c2cc32e",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/9238f09b0b41c640324a1173043a4d592c2cc32e",
        "files": [
          "trunk/auto/options.sh",
          "trunk/conf/rtc.tcp.only.conf",
          "trunk/conf/rtc.tcp.udp.conf",
          "trunk/doc/CHANGELOG.md",
          "trunk/ide/srs_clion/CMakeLists.txt",
          "trunk/src/app/srs_app_rtc_codec.cpp",
          "trunk/src/app/srs_app_source.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/protocol/srs_protocol_rtmp_handshake.cpp"
        ],
        "message": "RTC: Fix FFmpeg opus audio noisy issue. v5.0.195 v6.0.95 (#3845)\n\nFollow the example in FFmpeg's doc, before calling the API\n`avcodec_send_frame`, always use `av_frame_alloc` to create a new frame.\n\n---------\n\nCo-authored-by: Haibo Chen <495810242@qq.com>",
        "before_after_code_files": [
          "trunk/auto/options.sh||trunk/auto/options.sh",
          "trunk/conf/rtc.tcp.only.conf||trunk/conf/rtc.tcp.only.conf",
          "trunk/conf/rtc.tcp.udp.conf||trunk/conf/rtc.tcp.udp.conf",
          "trunk/src/app/srs_app_rtc_codec.cpp||trunk/src/app/srs_app_rtc_codec.cpp",
          "trunk/src/app/srs_app_source.cpp||trunk/src/app/srs_app_source.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/protocol/srs_protocol_rtmp_handshake.cpp||trunk/src/protocol/srs_protocol_rtmp_handshake.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/auto/options.sh||trunk/auto/options.sh": [
          "File: trunk/auto/options.sh -> trunk/auto/options.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: # FFmpeg fit is the source code for RTC, to transcode audio or video in SRS.",
          "38: SRS_FFMPEG_FIT=RESERVED",
          "39: # Whether use FFmpeg native opus codec for RTC. If not, use libopus instead.",
          "41: # arguments",
          "42: SRS_PREFIX=/usr/local/srs",
          "43: SRS_DEFAULT_CONFIG=conf/srs.conf",
          "",
          "[Removed Lines]",
          "40: SRS_FFMPEG_OPUS=NO",
          "",
          "[Added Lines]",
          "40: SRS_FFMPEG_OPUS=YES",
          "",
          "---------------"
        ],
        "trunk/conf/rtc.tcp.only.conf||trunk/conf/rtc.tcp.only.conf": [
          "File: trunk/conf/rtc.tcp.only.conf -> trunk/conf/rtc.tcp.only.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # WebRTC streaming config for SRS.",
          "2: # @see full.conf for detail config.",
          "4: listen              1935;",
          "5: max_connections     1000;",
          "6: daemon              off;",
          "7: srs_log_tank        console;",
          "9: http_server {",
          "10:     enabled         on;",
          "11:     listen          8080;",
          "12:     dir             ./objs/nginx/html;",
          "13: }",
          "15: http_api {",
          "16:     enabled         on;",
          "17:     listen          1985;",
          "18: }",
          "19: stats {",
          "20:     network         0;",
          "21: }",
          "22: rtc_server {",
          "23:     enabled on;",
          "24:     tcp {",
          "25:         enabled on;",
          "26:         listen 8000;",
          "27:     }",
          "28:     protocol tcp;",
          "29:     # @see https://ossrs.net/lts/zh-cn/docs/v4/doc/webrtc#config-candidate",
          "30:     candidate $CANDIDATE;",
          "31: }",
          "33: vhost __defaultVhost__ {",
          "34:     rtc {",
          "35:         enabled     on;",
          "36:         # @see https://ossrs.net/lts/zh-cn/docs/v4/doc/webrtc#rtmp-to-rtc",
          "37:         rtmp_to_rtc off;",
          "38:         # @see https://ossrs.net/lts/zh-cn/docs/v4/doc/webrtc#rtc-to-rtmp",
          "39:         rtc_to_rtmp off;",
          "40:     }",
          "41:     http_remux {",
          "42:         enabled     on;",
          "43:         mount       [vhost]/[app]/[stream].flv;",
          "44:     }",
          "45: }",
          "",
          "---------------"
        ],
        "trunk/conf/rtc.tcp.udp.conf||trunk/conf/rtc.tcp.udp.conf": [
          "File: trunk/conf/rtc.tcp.udp.conf -> trunk/conf/rtc.tcp.udp.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: # WebRTC streaming config for SRS.",
          "2: # @see full.conf for detail config.",
          "4: listen              1935;",
          "5: max_connections     1000;",
          "6: daemon              off;",
          "7: srs_log_tank        console;",
          "9: http_server {",
          "10:     enabled         on;",
          "11:     listen          8080;",
          "12:     dir             ./objs/nginx/html;",
          "13: }",
          "15: http_api {",
          "16:     enabled         on;",
          "17:     listen          1985;",
          "18: }",
          "19: stats {",
          "20:     network         0;",
          "21: }",
          "22: rtc_server {",
          "23:     enabled on;",
          "24:     listen 8000; # UDP port",
          "25:     tcp {",
          "26:         enabled on;",
          "27:         listen 8000;",
          "28:     }",
          "29:     protocol all;",
          "30:     # @see https://ossrs.net/lts/zh-cn/docs/v4/doc/webrtc#config-candidate",
          "31:     candidate $CANDIDATE;",
          "32: }",
          "34: vhost __defaultVhost__ {",
          "35:     rtc {",
          "36:         enabled     on;",
          "37:         # @see https://ossrs.net/lts/zh-cn/docs/v4/doc/webrtc#rtmp-to-rtc",
          "38:         rtmp_to_rtc off;",
          "39:         # @see https://ossrs.net/lts/zh-cn/docs/v4/doc/webrtc#rtc-to-rtmp",
          "40:         rtc_to_rtmp off;",
          "41:     }",
          "42:     http_remux {",
          "43:         enabled     on;",
          "44:         mount       [vhost]/[app]/[stream].flv;",
          "45:     }",
          "46: }",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_rtc_codec.cpp||trunk/src/app/srs_app_rtc_codec.cpp": [
          "File: trunk/src/app/srs_app_rtc_codec.cpp -> trunk/src/app/srs_app_rtc_codec.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "242:     enc_->channel_layout = av_get_default_channel_layout(dst_channels);",
          "243:     enc_->bit_rate = dst_bit_rate;",
          "244:     enc_->sample_fmt = codec->sample_fmts[0];",
          "246:     if (dst_codec == SrsAudioCodecIdOpus) {",
          "248:         enc_->compression_level = 1;",
          "",
          "[Removed Lines]",
          "245:     enc_->time_base.num = 1; enc_->time_base.den = 1000; // {1, 1000}",
          "",
          "[Added Lines]",
          "245:     enc_->time_base.num = 1; enc_->time_base.den = dst_samplerate; // {1, dst_samplerate}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "261:         return srs_error_new(ERROR_RTC_RTP_MUXER, \"Could not allocate audio encode in frame\");",
          "262:     }",
          "272:     enc_packet_ = av_packet_alloc();",
          "273:     if (!enc_packet_) {",
          "274:         return srs_error_new(ERROR_RTC_RTP_MUXER, \"Could not allocate audio encode out packet\");",
          "",
          "[Removed Lines]",
          "264:     enc_frame_->format = enc_->sample_fmt;",
          "265:     enc_frame_->nb_samples = enc_->frame_size;",
          "266:     enc_frame_->channel_layout = enc_->channel_layout;",
          "268:     if (av_frame_get_buffer(enc_frame_, 0) < 0) {",
          "269:         return srs_error_new(ERROR_RTC_RTP_MUXER, \"Could not get audio frame buffer\");",
          "270:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "380:     if (next_out_pts_ == AV_NOPTS_VALUE) {",
          "381:         next_out_pts_ = new_pkt_pts_;",
          "382:     } else {",
          "384:         if (diff > 1000) {",
          "385:             srs_trace(\"time diff to large=%lld, next out=%lld, new pkt=%lld, set to new pkt\",",
          "386:                 diff, next_out_pts_, new_pkt_pts_);",
          "388:         }",
          "389:     }",
          "392:     while (av_audio_fifo_size(fifo_) >= enc_->frame_size) {",
          "395:         if (av_audio_fifo_read(fifo_, (void **)enc_frame_->data, enc_->frame_size) < enc_->frame_size) {",
          "396:             return srs_error_new(ERROR_RTC_RTP_MUXER, \"Could not read data from FIFO\");",
          "397:         }",
          "401:         int error = avcodec_send_frame(enc_, enc_frame_);",
          "402:         if (error < 0) {",
          "403:             return srs_error_new(ERROR_RTC_RTP_MUXER, \"Error sending the frame to the encoder(%d,%s)\", error,",
          "404:                 av_make_error_string(err_buf, AV_ERROR_MAX_STRING_SIZE, error));",
          "",
          "[Removed Lines]",
          "383:         int64_t diff = llabs(new_pkt_pts_ - next_out_pts_);",
          "387:             next_out_pts_ = new_pkt_pts_;",
          "391:     int frame_cnt = 0;",
          "399:         enc_frame_->pts = next_out_pts_ + av_rescale(enc_->frame_size * frame_cnt, 1000, enc_->sample_rate);",
          "400:         ++frame_cnt;",
          "",
          "[Added Lines]",
          "375:         int64_t diff = llabs(new_pkt_pts_ - av_rescale(next_out_pts_, 1000, enc_->time_base.den));",
          "379:             next_out_pts_ = av_rescale(new_pkt_pts_, enc_->time_base.den, 1000);",
          "384:         enc_frame_->format = enc_->sample_fmt;",
          "385:         enc_frame_->nb_samples = enc_->frame_size;",
          "386:         enc_frame_->channel_layout = enc_->channel_layout;",
          "388:         if (av_frame_get_buffer(enc_frame_, 0) < 0) {",
          "389:             av_frame_free(&enc_frame_);",
          "390:             return srs_error_new(ERROR_RTC_RTP_MUXER, \"Could not get audio frame buffer\");",
          "391:         }",
          "396:             av_frame_free(&enc_frame_);",
          "400:         enc_frame_->pts = next_out_pts_;",
          "401:         next_out_pts_ += enc_->frame_size;",
          "403:         av_frame_unref(enc_frame_);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "419:                     av_make_error_string(err_buf, AV_ERROR_MAX_STRING_SIZE, error));",
          "420:             }",
          "422:             SrsAudioFrame *out_frame = new SrsAudioFrame;",
          "423:             char *buf = new char[enc_packet_->size];",
          "424:             memcpy(buf, enc_packet_->data, enc_packet_->size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "425:             enc_packet_->dts = av_rescale(enc_packet_->dts, 1000, enc_->time_base.den);",
          "426:             enc_packet_->pts = av_rescale(enc_packet_->pts, 1000, enc_->time_base.den);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "429:         }",
          "430:     }",
          "434:     return srs_success;",
          "435: }",
          "",
          "[Removed Lines]",
          "432:     next_out_pts_ += av_rescale(enc_->frame_size * frame_cnt, 1000, enc_->sample_rate);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_source.cpp||trunk/src/app/srs_app_source.cpp": [
          "File: trunk/src/app/srs_app_source.cpp -> trunk/src/app/srs_app_source.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "2723:     if (dg) {",
          "2725:     } else {",
          "2726:         srs_trace(\"create consumer, active=%d, ignore gop cache, jitter=%d\", hub->active(), jitter_algorithm);",
          "2727:     }",
          "",
          "[Removed Lines]",
          "2724:         srs_trace(\"create consumer, active=%d, queue_size=%.2f, jitter=%d\", hub->active(), queue_size, jitter_algorithm);",
          "",
          "[Added Lines]",
          "2724:         srs_trace(\"create consumer, active=%d, queue_size=%dms, jitter=%d\", hub->active(), srsu2msi(queue_size), jitter_algorithm);",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    194",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    195",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    94",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    95",
          "",
          "---------------"
        ],
        "trunk/src/protocol/srs_protocol_rtmp_handshake.cpp||trunk/src/protocol/srs_protocol_rtmp_handshake.cpp": [
          "File: trunk/src/protocol/srs_protocol_rtmp_handshake.cpp -> trunk/src/protocol/srs_protocol_rtmp_handshake.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "298:     {",
          "299:         srs_error_t err = srs_success;",
          "303:         close();",
          "",
          "[Removed Lines]",
          "301:         int32_t bits_count = 1024;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3fa4f66648625c28c2990ffb034415cf27284318",
      "candidate_info": {
        "commit_hash": "3fa4f66648625c28c2990ffb034415cf27284318",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/3fa4f66648625c28c2990ffb034415cf27284318",
        "files": [
          "trunk/conf/full.conf",
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_config.cpp",
          "trunk/src/app/srs_app_config.hpp",
          "trunk/src/app/srs_app_rtc_source.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "WebRTC: Support config the bitrate of transcoding AAC to Opus. v5.0.167, v6.0.60 (#3515)\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/conf/full.conf||trunk/conf/full.conf",
          "trunk/src/app/srs_app_config.cpp||trunk/src/app/srs_app_config.cpp",
          "trunk/src/app/srs_app_config.hpp||trunk/src/app/srs_app_config.hpp",
          "trunk/src/app/srs_app_rtc_source.cpp||trunk/src/app/srs_app_rtc_source.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/conf/full.conf||trunk/conf/full.conf": [
          "File: trunk/conf/full.conf -> trunk/conf/full.conf",
          "--- Hunk 1 ---",
          "[Context before]",
          "550:         # Overwrite by env SRS_VHOST_RTC_KEEP_BFRAME for all vhosts.",
          "551:         # default: off",
          "552:         keep_bframe off;",
          "553:         ###############################################################",
          "554:         # Whether enable transmuxing RTC to RTMP.",
          "555:         # Overwrite by env SRS_VHOST_RTC_RTC_TO_RTMP for all vhosts.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "553:         # The transcode audio bitrate, for RTMP to RTC.",
          "554:         # Overwrite by env SRS_VHOST_RTC_OPUS_BITRATE for all vhosts.",
          "555:         # [8000, 320000]",
          "556:         # default: 48000",
          "557:         opus_bitrate 48000;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "560:         # Overwrite by env SRS_VHOST_RTC_PLI_FOR_RTMP for all vhosts.",
          "561:         # Default: 6.0",
          "562:         pli_for_rtmp 6.0;",
          "563:     }",
          "564:     ###############################################################",
          "565:     # For transmuxing RTMP to RTC, it will impact the default values if RTC is on.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "568:         # The transcode audio bitrate, for RTC to RTMP.",
          "569:         # Overwrite by env SRS_VHOST_RTC_AAC_BITRATE for all vhosts.",
          "570:         # [8000, 320000]",
          "571:         # default: 48000",
          "572:         aac_bitrate 48000;",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_config.cpp||trunk/src/app/srs_app_config.cpp": [
          "File: trunk/src/app/srs_app_config.cpp -> trunk/src/app/srs_app_config.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "2669:                     if (m != \"enabled\" && m != \"nack\" && m != \"twcc\" && m != \"nack_no_copy\"",
          "2670:                         && m != \"bframe\" && m != \"aac\" && m != \"stun_timeout\" && m != \"stun_strict_check\"",
          "2671:                         && m != \"dtls_role\" && m != \"dtls_version\" && m != \"drop_for_pt\" && m != \"rtc_to_rtmp\"",
          "2673:                         return srs_error_new(ERROR_SYSTEM_CONFIG_INVALID, \"illegal vhost.rtc.%s of %s\", m.c_str(), vhost->arg0().c_str());",
          "2674:                     }",
          "2675:                 }",
          "",
          "[Removed Lines]",
          "2672:                         && m != \"pli_for_rtmp\" && m != \"rtmp_to_rtc\" && m != \"keep_bframe\") {",
          "",
          "[Added Lines]",
          "2672:                         && m != \"pli_for_rtmp\" && m != \"rtmp_to_rtc\" && m != \"keep_bframe\" && m != \"opus_bitrate\"",
          "2673:                         && m != \"aac_bitrate\") {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4641:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "4642: }",
          "4644: SrsConfDirective* SrsConfig::get_vhost(string vhost, bool try_default_vhost)",
          "4645: {",
          "4646:     srs_assert(root);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4645: int SrsConfig::get_rtc_opus_bitrate(string vhost)",
          "4646: {",
          "4647:     static int DEFAULT = 48000;",
          "4649:     string opus_bitrate = srs_getenv(\"srs.vhost.rtc.opus_bitrate\"); // SRS_VHOST_RTC_OPUS_BITRATE",
          "4650:     if (!opus_bitrate.empty()) {",
          "4651:         int v = ::atoi(opus_bitrate.c_str());",
          "4652:         if (v < 8000 || v > 320000) {",
          "4653:             srs_warn(\"Reset opus btirate %d to %d\", v, DEFAULT);",
          "4654:             v = DEFAULT;",
          "4655:         }",
          "4657:         return v;",
          "4658:     }",
          "4660:     SrsConfDirective* conf = get_rtc(vhost);",
          "4661:     if (!conf) {",
          "4662:         return DEFAULT;",
          "4663:     }",
          "4665:     conf = conf->get(\"opus_bitrate\");",
          "4666:     if (!conf || conf->arg0().empty()) {",
          "4667:         return DEFAULT;",
          "4668:     }",
          "4670:     int v = ::atoi(conf->arg0().c_str());",
          "4671:     if (v < 8000 || v > 320000) {",
          "4672:         srs_warn(\"Reset opus btirate %d to %d\", v, DEFAULT);",
          "4673:         return DEFAULT;",
          "4674:     }",
          "4676:     return v;",
          "4677: }",
          "4679: int SrsConfig::get_rtc_aac_bitrate(string vhost)",
          "4680: {",
          "4681:     static int DEFAULT = 48000;",
          "4683:     string aac_bitrate = srs_getenv(\"srs.vhost.rtc.aac_bitrate\"); // SRS_VHOST_RTC_AAC_BITRATE",
          "4684:     if (!aac_bitrate.empty()) {",
          "4685:         int v = ::atoi(aac_bitrate.c_str());",
          "4686:         if (v < 8000 || v > 320000) {",
          "4687:             srs_warn(\"Reset aac btirate %d to %d\", v, DEFAULT);",
          "4688:             v = DEFAULT;",
          "4689:         }",
          "4691:         return v;",
          "4692:     }",
          "4694:     SrsConfDirective* conf = get_rtc(vhost);",
          "4695:     if (!conf) {",
          "4696:         return DEFAULT;",
          "4697:     }",
          "4699:     conf = conf->get(\"aac_bitrate\");",
          "4700:     if (!conf || conf->arg0().empty()) {",
          "4701:         return DEFAULT;",
          "4702:     }",
          "4704:     int v = ::atoi(conf->arg0().c_str());",
          "4705:     if (v < 8000 || v > 320000) {",
          "4706:         srs_warn(\"Reset aac btirate %d to %d\", v, DEFAULT);",
          "4707:         return DEFAULT;",
          "4708:     }",
          "4710:     return v;",
          "4711: }",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_config.hpp||trunk/src/app/srs_app_config.hpp": [
          "File: trunk/src/app/srs_app_config.hpp -> trunk/src/app/srs_app_config.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "531:     bool get_rtc_nack_enabled(std::string vhost);",
          "532:     bool get_rtc_nack_no_copy(std::string vhost);",
          "533:     bool get_rtc_twcc_enabled(std::string vhost);",
          "536: public:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "534:     int get_rtc_opus_bitrate(std::string vhost);",
          "535:     int get_rtc_aac_bitrate(std::string vhost);",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_rtc_source.cpp||trunk/src/app/srs_app_rtc_source.cpp": [
          "File: trunk/src/app/srs_app_rtc_source.cpp -> trunk/src/app/srs_app_rtc_source.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "880:     codec_ = new SrsAudioTranscoder();",
          "884:     if ((err = codec_->initialize(codec, SrsAudioCodecIdOpus, kAudioChannel, kAudioSamplerate, bitrate)) != srs_success) {",
          "885:         return srs_error_wrap(err, \"init codec=%d\", codec);",
          "886:     }",
          "",
          "[Removed Lines]",
          "883:     int bitrate = 48000; // The output bitrate in bps.",
          "",
          "[Added Lines]",
          "883:     int bitrate = _srs_config->get_rtc_opus_bitrate(req->vhost);// The output bitrate in bps.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1337:     SrsAudioCodecId to = SrsAudioCodecIdAAC; // The output audio codec.",
          "1338:     int channels = 2; // The output audio channels.",
          "1339:     int sample_rate = 48000; // The output audio sample rate in HZ.",
          "1341:     if ((err = codec_->initialize(from, to, channels, sample_rate, bitrate)) != srs_success) {",
          "1342:         return srs_error_wrap(err, \"bridge initialize\");",
          "1343:     }",
          "",
          "[Removed Lines]",
          "1340:     int bitrate = 48000; // The output audio bitrate in bps.",
          "",
          "[Added Lines]",
          "1340:     int bitrate = _srs_config->get_rtc_aac_bitrate(r->vhost); // The output audio bitrate in bps.",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    166",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    167",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    59",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    60",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "26b31547248967daa081f203ce5340e2e394562e",
      "candidate_info": {
        "commit_hash": "26b31547248967daa081f203ce5340e2e394562e",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/26b31547248967daa081f203ce5340e2e394562e",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_dash.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "Fix dash crash if format not supported. v5.0.177 v6.0.73 (#3795)\n\nFix the issue of DASH crashing when audio/video formats are not\nsupported.\n\n---------\n\nCo-authored-by: Haibo Chen <495810242@qq.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_dash.cpp||trunk/src/app/srs_app_dash.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_dash.cpp||trunk/src/app/srs_app_dash.cpp": [
          "File: trunk/src/app/srs_app_dash.cpp -> trunk/src/app/srs_app_dash.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "619:     srs_error_t err = srs_success;",
          "623:         return err;",
          "624:     }",
          "",
          "[Removed Lines]",
          "622:     if (!format->acodec || !format->vcodec) {",
          "",
          "[Added Lines]",
          "622:     if (!format || !format->acodec || !format->vcodec) {",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    176",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    177",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    72",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    73",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cf46dae80f17260d1a5cb8f0c05edf0bb8e20505",
      "candidate_info": {
        "commit_hash": "cf46dae80f17260d1a5cb8f0c05edf0bb8e20505",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/cf46dae80f17260d1a5cb8f0c05edf0bb8e20505",
        "files": [
          "README.md",
          "trunk/configure",
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_config.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/utest/srs_utest_config.cpp",
          "trunk/src/utest/srs_utest_config2.cpp",
          "trunk/src/utest/srs_utest_config2.hpp"
        ],
        "message": "Support include empty config file. v5.0.173 v6.0.68 (#3768)\n\nSRS supports including another configuration in the include package.\nWhen generating configurations, we can only generate the changed\nconfigurations, while the unchanged configurations are in the fixed\nfiles, for example:\n\n```nginx\nlisten 1935;\ninclude server.conf;\n```\n\nIn `server.conf`, we can manage the changing configurations with the\nprogram:\n\n```nginx\nhttp_api { enabled on; }\n```\n\nHowever, during system initialization, we often create an empty\n`server.conf`, and the content is generated only after the program\nstarts, so `server.conf` might be an empty file. This also makes it\nconvenient to use a script to confirm the existence of this file:\n\n```bash\ntouch server.conf\n```\n\nCurrently, SRS does not support empty configurations and will report an\nerror. This PR is to solve this problem, making it more convenient to\nuse include.\n\n`TRANS_BY_GPT4`\n\n---------\n\nCo-authored-by: Haibo Chen <495810242@qq.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_config.cpp||trunk/src/app/srs_app_config.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/utest/srs_utest_config.cpp||trunk/src/utest/srs_utest_config.cpp",
          "trunk/src/utest/srs_utest_config2.cpp||trunk/src/utest/srs_utest_config2.cpp",
          "trunk/src/utest/srs_utest_config2.hpp||trunk/src/utest/srs_utest_config2.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_config.cpp||trunk/src/app/srs_app_config.cpp": [
          "File: trunk/src/app/srs_app_config.cpp -> trunk/src/app/srs_app_config.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "125:         int filesize = (int)reader.filesize();",
          "128:         srs_freepa(start);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127:         if (filesize <= 0) return err;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1068: srs_error_t SrsConfDirective::parse_conf(SrsConfigBuffer* buffer, SrsDirectiveContext ctx, SrsConfig* conf)",
          "1069: {",
          "1070:     srs_error_t err = srs_success;",
          "1072:     while (true) {",
          "1073:         std::vector<string> args;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1075:     if (ctx == SrsDirectiveContextFile && buffer->empty()) return err;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1127:             }",
          "1129:             if ((err = parse_conf(include_file_buffer, SrsDirectiveContextFile, conf)) != srs_success) {",
          "1131:             }",
          "1132:         }",
          "1133:     }",
          "",
          "[Removed Lines]",
          "1130:                 return srs_error_wrap(err, \"parse include buffer\");",
          "",
          "[Added Lines]",
          "1135:                 return srs_error_wrap(err, \"parse include buffer %s\", file.c_str());",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2197:     SrsConfigBuffer* buffer = NULL;",
          "2198:     SrsAutoFree(SrsConfigBuffer, buffer);",
          "2199:     if ((err = build_buffer(config_file, &buffer)) != srs_success) {",
          "2201:     }",
          "2203:     if ((err = parse_buffer(buffer)) != srs_success) {",
          "2205:     }",
          "2207:     return err;",
          "",
          "[Removed Lines]",
          "2200:         return srs_error_wrap(err, \"buffer fullfill %s\", config_file.c_str());",
          "2204:         return srs_error_wrap(err, \"parse buffer\");",
          "",
          "[Added Lines]",
          "2205:         return srs_error_wrap(err, \"buffer fullfill %s\", filename);",
          "2209:         return srs_error_wrap(err, \"parse buffer %s\", filename);",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    172",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    173",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    67",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    68",
          "",
          "---------------"
        ],
        "trunk/src/utest/srs_utest_config.cpp||trunk/src/utest/srs_utest_config.cpp": [
          "File: trunk/src/utest/srs_utest_config.cpp -> trunk/src/utest/srs_utest_config.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "85: {",
          "86:     srs_error_t err = srs_success;",
          "90:         return srs_error_new(ERROR_SYSTEM_CONFIG_INVALID, \"file %s: no found\", src.c_str());",
          "91:     }",
          "95:     return err;",
          "",
          "[Removed Lines]",
          "88:     string content = included_files[src];",
          "89:     if(content.empty()) {",
          "",
          "[Added Lines]",
          "89:     if(included_files.find(src) == included_files.end()) {",
          "93:     string content = included_files[src];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "689: VOID TEST(ConfigDirectiveTest, ParseInvalidNoEndOfSubDirective)",
          "690: {",
          "691:     srs_error_t err;",
          "696: }",
          "698: VOID TEST(ConfigDirectiveTest, ParseInvalidNoStartOfSubDirective)",
          "",
          "[Removed Lines]",
          "693:     MockSrsConfigBuffer buf(\"dir0 {\");",
          "694:     SrsConfDirective conf;",
          "695:     HELPER_ASSERT_FAILED(conf.parse(&buf));",
          "",
          "[Added Lines]",
          "696:     if (true) {",
          "697:         MockSrsConfigBuffer buf(\"\");",
          "698:         SrsConfDirective conf;",
          "699:         HELPER_ASSERT_SUCCESS(conf.parse(&buf));",
          "700:     }",
          "702:     if (true) {",
          "703:         MockSrsConfigBuffer buf(\"# OK\");",
          "704:         SrsConfDirective conf;",
          "705:         HELPER_ASSERT_SUCCESS(conf.parse(&buf));",
          "706:     }",
          "708:     if (true) {",
          "709:         MockSrsConfigBuffer buf(\"dir0 {\");",
          "710:         SrsConfDirective conf;",
          "711:         HELPER_ASSERT_FAILED(conf.parse(&buf));",
          "712:     }",
          "714:     if (true) {",
          "715:         MockSrsConfigBuffer buf(\"dir0 {} dir1 {\");",
          "716:         SrsConfDirective conf;",
          "717:         HELPER_ASSERT_FAILED(conf.parse(&buf));",
          "718:     }",
          "",
          "---------------"
        ],
        "trunk/src/utest/srs_utest_config2.cpp||trunk/src/utest/srs_utest_config2.cpp": [
          "File: trunk/src/utest/srs_utest_config2.cpp -> trunk/src/utest/srs_utest_config2.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: #include <srs_utest_config2.hpp>",
          "8: #include <srs_kernel_error.hpp>",
          "9: #include <srs_kernel_file.hpp>",
          "10: #include <srs_utest_kernel.hpp>",
          "12: VOID TEST(ConfigMainTest, CheckIncludeEmptyConfig)",
          "13: {",
          "14:     srs_error_t err;",
          "16:     if (true) {",
          "17:         string filepath = _srs_tmp_file_prefix + \"utest-main.conf\";",
          "18:         MockFileRemover _mfr(filepath);",
          "20:         string included = _srs_tmp_file_prefix + \"utest-included-empty.conf\";",
          "21:         MockFileRemover _mfr2(included);",
          "23:         if (true) {",
          "24:             SrsFileWriter fw;",
          "25:             fw.open(included);",
          "26:         }",
          "28:         if (true) {",
          "29:             SrsFileWriter fw;",
          "30:             fw.open(filepath);",
          "31:             string content = _MIN_OK_CONF \"include \" + included + \";\";",
          "32:             fw.write((void*)content.data(), (int)content.length(), NULL);",
          "33:         }",
          "35:         SrsConfig conf;",
          "36:         HELPER_ASSERT_SUCCESS(conf.parse_file(filepath.c_str()));",
          "37:         EXPECT_EQ(1, (int)conf.get_listens().size());",
          "38:     }",
          "40:     if (true) {",
          "41:         MockSrsConfig conf;",
          "42:         conf.mock_include(\"test.conf\", \"\");",
          "43:         HELPER_ASSERT_SUCCESS(conf.parse(_MIN_OK_CONF \"include test.conf;\"));",
          "44:         EXPECT_EQ(1, (int)conf.get_listens().size());",
          "45:     }",
          "46: }",
          "",
          "---------------"
        ],
        "trunk/src/utest/srs_utest_config2.hpp||trunk/src/utest/srs_utest_config2.hpp": [
          "File: trunk/src/utest/srs_utest_config2.hpp -> trunk/src/utest/srs_utest_config2.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: #ifndef SRS_UTEST_CONFIG2_HPP",
          "8: #define SRS_UTEST_CONFIG2_HPP",
          "11: #include <srs_utest_config2.hpp>",
          "13: #include <srs_utest_config.hpp>",
          "15: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b1d1c7abe5a865450b808d19c5980e36cf1fd4d4",
      "candidate_info": {
        "commit_hash": "b1d1c7abe5a865450b808d19c5980e36cf1fd4d4",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/b1d1c7abe5a865450b808d19c5980e36cf1fd4d4",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_rtc_api.cpp",
          "trunk/src/app/srs_app_rtc_conn.cpp",
          "trunk/src/app/srs_app_rtc_conn.hpp",
          "trunk/src/app/srs_app_rtc_server.hpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/kernel/srs_kernel_error.hpp",
          "trunk/src/protocol/srs_protocol_raw_avc.cpp"
        ],
        "message": "WHIP: Improve WHIP deletion by token verification. v5.0.164, v6.0.58 (#3595)\n\n------\n\nCo-authored-by: chundonglinlin <chundonglinlin@163.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_rtc_api.cpp||trunk/src/app/srs_app_rtc_api.cpp",
          "trunk/src/app/srs_app_rtc_conn.cpp||trunk/src/app/srs_app_rtc_conn.cpp",
          "trunk/src/app/srs_app_rtc_conn.hpp||trunk/src/app/srs_app_rtc_conn.hpp",
          "trunk/src/app/srs_app_rtc_server.hpp||trunk/src/app/srs_app_rtc_server.hpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/kernel/srs_kernel_error.hpp||trunk/src/kernel/srs_kernel_error.hpp",
          "trunk/src/protocol/srs_protocol_raw_avc.cpp||trunk/src/protocol/srs_protocol_raw_avc.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_rtc_api.cpp||trunk/src/app/srs_app_rtc_api.cpp": [
          "File: trunk/src/app/srs_app_rtc_api.cpp -> trunk/src/app/srs_app_rtc_api.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "242:     ruc->local_sdp_str_ = local_sdp_str;",
          "243:     ruc->session_id_ = session->username();",
          "245:     srs_trace(\"RTC username=%s, dtls=%u, srtp=%u, offer=%dB, answer=%dB\", session->username().c_str(),",
          "246:         ruc->dtls_, ruc->srtp_, ruc->remote_sdp_str_.length(), local_sdp_escaped.length());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "244:     ruc->token_ = session->token();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "511:     ruc->local_sdp_str_ = local_sdp_str;",
          "512:     ruc->session_id_ = session->username();",
          "514:     srs_trace(\"RTC username=%s, offer=%dB, answer=%dB\", session->username().c_str(),",
          "515:         ruc->remote_sdp_str_.length(), local_sdp_escaped.length());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "514:     ruc->token_ = session->token();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "604:     if (r->method() == SRS_CONSTS_HTTP_DELETE) {",
          "605:         string username = r->query_get(\"session\");",
          "606:         SrsRtcConnection* session = server_->find_session_by_username(username);",
          "607:         if (session) session->expire();",
          "608:         srs_trace(\"WHIP: Delete session=%s, p=%p, url=%s\", username.c_str(), session, r->url().c_str());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "608:         string token = r->query_get(\"token\");",
          "609:         if (token.empty()) {",
          "610:             return srs_error_new(ERROR_RTC_INVALID_SESSION, \"token empty\");",
          "611:         }",
          "614:         if (session && token != session->token()) {",
          "615:             return srs_error_new(ERROR_RTC_INVALID_SESSION, \"token %s not match\", token.c_str());",
          "616:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "627:     w->header()->set(\"Content-Type\", \"application/sdp\");",
          "631:     w->header()->set_content_length((int64_t)sdp.length());",
          "633:     w->write_header(201);",
          "",
          "[Removed Lines]",
          "629:     w->header()->set(\"Location\", srs_fmt(\"/rtc/v1/whip/?action=delete&app=%s&stream=%s&session=%s\",",
          "630:         ruc.req_->app.c_str(), ruc.req_->stream.c_str(), ruc.session_id_.c_str()));",
          "",
          "[Added Lines]",
          "640:     w->header()->set(\"Location\", srs_fmt(\"/rtc/v1/whip/?action=delete&token=%s&app=%s&stream=%s&session=%s\",",
          "641:         ruc.token_.c_str(), ruc.req_->app.c_str(), ruc.req_->stream.c_str(), ruc.session_id_.c_str()));",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_rtc_conn.cpp||trunk/src/app/srs_app_rtc_conn.cpp": [
          "File: trunk/src/app/srs_app_rtc_conn.cpp -> trunk/src/app/srs_app_rtc_conn.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1884:     return username_;",
          "1885: }",
          "1887: ISrsKbpsDelta* SrsRtcConnection::delta()",
          "1888: {",
          "1889:     return networks_->delta();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1887: string SrsRtcConnection::token()",
          "1888: {",
          "1889:     return token_;",
          "1890: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2004:     srs_error_t err = srs_success;",
          "2006:     username_ = username;",
          "2007:     req_ = r->copy();",
          "2009:     SrsSessionConfig* cfg = &local_sdp.session_negotiate_;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2012:     token_ = srs_random_str(9);",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_rtc_conn.hpp||trunk/src/app/srs_app_rtc_conn.hpp": [
          "File: trunk/src/app/srs_app_rtc_conn.hpp -> trunk/src/app/srs_app_rtc_conn.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "444: private:",
          "446:     std::string username_;",
          "448:     SrsRtcNetworks* networks_;",
          "449: private:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "448:     std::string token_;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "484:     void set_state_as_waiting_stun();",
          "486:     std::string username();",
          "487: public:",
          "488:     virtual ISrsKbpsDelta* delta();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "490:     std::string token();",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_rtc_server.hpp||trunk/src/app/srs_app_rtc_server.hpp": [
          "File: trunk/src/app/srs_app_rtc_server.hpp -> trunk/src/app/srs_app_rtc_server.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:     std::string local_sdp_str_;",
          "64:     std::string session_id_;",
          "67:     SrsRequest* req_;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:     std::string token_;",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    163",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    164",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    57",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    58",
          "",
          "---------------"
        ],
        "trunk/src/kernel/srs_kernel_error.hpp||trunk/src/kernel/srs_kernel_error.hpp": [
          "File: trunk/src/kernel/srs_kernel_error.hpp -> trunk/src/kernel/srs_kernel_error.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "373:     XX(ERROR_RTC_TCP_SIZE                  , 5032, \"RtcTcpSize\", \"RTC TCP packet size is invalid\") \\",
          "374:     XX(ERROR_RTC_TCP_PACKET                , 5033, \"RtcTcpStun\", \"RTC TCP first packet must be STUN\") \\",
          "375:     XX(ERROR_RTC_TCP_STUN                  , 5034, \"RtcTcpSession\", \"RTC TCP packet is invalid for session not found\") \\",
          "",
          "[Removed Lines]",
          "376:     XX(ERROR_RTC_TCP_UNIQUE                , 5035, \"RtcUnique\", \"RTC only support one UDP or TCP network\")",
          "",
          "[Added Lines]",
          "376:     XX(ERROR_RTC_TCP_UNIQUE                , 5035, \"RtcUnique\", \"RTC only support one UDP or TCP network\") \\",
          "377:     XX(ERROR_RTC_INVALID_SESSION           , 5036, \"RtcInvalidSession\", \"Invalid request for no RTC session matched\")",
          "",
          "---------------"
        ],
        "trunk/src/protocol/srs_protocol_raw_avc.cpp||trunk/src/protocol/srs_protocol_raw_avc.cpp": [
          "File: trunk/src/protocol/srs_protocol_raw_avc.cpp -> trunk/src/protocol/srs_protocol_raw_avc.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "157:         stream.write_1bytes(level_idc);",
          "161:     }",
          "164:     if (true) {",
          "169:         stream.write_2bytes((int16_t)sps.length());",
          "",
          "[Removed Lines]",
          "160:         stream.write_1bytes(0xfc | 0x03);",
          "167:         stream.write_1bytes(0xe0 | 0x01);",
          "",
          "[Added Lines]",
          "160:         stream.write_1bytes(uint8_t(0xfc | 0x03));",
          "167:         stream.write_1bytes(uint8_t(0xe0 | 0x01));",
          "",
          "---------------"
        ]
      }
    }
  ]
}