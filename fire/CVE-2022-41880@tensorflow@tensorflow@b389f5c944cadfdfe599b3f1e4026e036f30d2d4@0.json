{
  "cve_id": "CVE-2022-41880",
  "cve_desc": "TensorFlow is an open source platform for machine learning. When the `BaseCandidateSamplerOp` function receives a value in `true_classes` larger than `range_max`, a heap oob read occurs. We have patched the issue in GitHub commit b389f5c944cadfdfe599b3f1e4026e036f30d2d4. The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "b389f5c944cadfdfe599b3f1e4026e036f30d2d4",
  "patch_info": {
    "commit_hash": "b389f5c944cadfdfe599b3f1e4026e036f30d2d4",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/b389f5c944cadfdfe599b3f1e4026e036f30d2d4",
    "files": [
      "tensorflow/core/kernels/candidate_sampler_ops.cc",
      "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py"
    ],
    "message": "Add true_classes input validation for candidate sampler ops.\n\nThe values must be within the valid range of the sampler.  Added a\ncheck for this.\n\nPiperOrigin-RevId: 479441496",
    "before_after_code_files": [
      "tensorflow/core/kernels/candidate_sampler_ops.cc||tensorflow/core/kernels/candidate_sampler_ops.cc",
      "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py||tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/candidate_sampler_ops.cc||tensorflow/core/kernels/candidate_sampler_ops.cc": [
      "File: tensorflow/core/kernels/candidate_sampler_ops.cc -> tensorflow/core/kernels/candidate_sampler_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "74:     gtl::ArraySlice<int64_t> true_candidate(",
      "75:         true_classes.matrix<int64_t>().data(), batch_size * num_true_);",
      "76:     gtl::MutableArraySlice<int64_t> sampled_candidate(",
      "77:         out_sampled_candidates->vec<int64_t>().data(), num_sampled_);",
      "78:     gtl::MutableArraySlice<float> true_expected_count(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "77:     for (const auto& candidate : true_candidate) {",
      "78:       OP_REQUIRES(context, candidate >= 0 && candidate < sampler_->range(),",
      "79:                   errors::InvalidArgument(\"`true_candidate` out of range [\", 0,",
      "80:                                           \", \", sampler_->range(),",
      "81:                                           \"), received \", candidate));",
      "82:     }",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py||tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py": [
      "File: tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py -> tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: from tensorflow.python.framework import constant_op",
      "20: from tensorflow.python.framework import dtypes",
      "21: from tensorflow.python.framework import test_util",
      "22: from tensorflow.python.ops import array_ops",
      "23: from tensorflow.python.ops import candidate_sampling_ops",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "21: from tensorflow.python.framework import errors",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "127:     # twice very rarely.",
      "128:     self.assertLessEqual(num_same, 2)",
      "131: if __name__ == \"__main__\":",
      "132:   test.main()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "131:   def testCandidateOutOfRange(self):",
      "132:     with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),",
      "133:                                 \"out of range\"):",
      "134:       self.evaluate(",
      "135:           candidate_sampling_ops.log_uniform_candidate_sampler(",
      "136:               true_classes=[[0, 10]],",
      "137:               num_true=2,",
      "138:               num_sampled=1000,",
      "139:               unique=False,",
      "140:               range_max=2))",
      "142:     with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),",
      "143:                                 \"out of range\"):",
      "144:       self.evaluate(",
      "145:           candidate_sampling_ops.log_uniform_candidate_sampler(",
      "146:               true_classes=[[0, -10]],",
      "147:               num_true=2,",
      "148:               num_sampled=1000,",
      "149:               unique=False,",
      "150:               range_max=2))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "baf015c98d77f1b1be373ff1bae7f453b5ca4343",
      "candidate_info": {
        "commit_hash": "baf015c98d77f1b1be373ff1bae7f453b5ca4343",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/baf015c98d77f1b1be373ff1bae7f453b5ca4343",
        "files": [
          "tensorflow/core/kernels/candidate_sampler_ops.cc",
          "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py"
        ],
        "message": "Add true_classes input validation for candidate sampler ops.\n\nThe values must be within the valid range of the sampler.  Added a\ncheck for this.\n\nPiperOrigin-RevId: 479441496",
        "before_after_code_files": [
          "tensorflow/core/kernels/candidate_sampler_ops.cc||tensorflow/core/kernels/candidate_sampler_ops.cc",
          "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py||tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/candidate_sampler_ops.cc||tensorflow/core/kernels/candidate_sampler_ops.cc",
            "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py||tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/candidate_sampler_ops.cc||tensorflow/core/kernels/candidate_sampler_ops.cc",
            "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py||tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/candidate_sampler_ops.cc||tensorflow/core/kernels/candidate_sampler_ops.cc": [
          "File: tensorflow/core/kernels/candidate_sampler_ops.cc -> tensorflow/core/kernels/candidate_sampler_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     gtl::ArraySlice<int64_t> true_candidate(",
          "75:         true_classes.matrix<int64_t>().data(), batch_size * num_true_);",
          "76:     gtl::MutableArraySlice<int64_t> sampled_candidate(",
          "77:         out_sampled_candidates->vec<int64_t>().data(), num_sampled_);",
          "78:     gtl::MutableArraySlice<float> true_expected_count(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:     for (const auto& candidate : true_candidate) {",
          "78:       OP_REQUIRES(context, candidate >= 0 && candidate < sampler_->range(),",
          "79:                   errors::InvalidArgument(\"`true_candidate` out of range [\", 0,",
          "80:                                           \", \", sampler_->range(),",
          "81:                                           \"), received \", candidate));",
          "82:     }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py||tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py": [
          "File: tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py -> tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: from tensorflow.python.framework import constant_op",
          "20: from tensorflow.python.framework import dtypes",
          "21: from tensorflow.python.framework import test_util",
          "22: from tensorflow.python.ops import array_ops",
          "23: from tensorflow.python.ops import candidate_sampling_ops",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: from tensorflow.python.framework import errors",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127:     # twice very rarely.",
          "128:     self.assertLessEqual(num_same, 2)",
          "131: if __name__ == \"__main__\":",
          "132:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131:   def testCandidateOutOfRange(self):",
          "132:     with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),",
          "133:                                 \"out of range\"):",
          "134:       self.evaluate(",
          "135:           candidate_sampling_ops.log_uniform_candidate_sampler(",
          "136:               true_classes=[[0, 10]],",
          "137:               num_true=2,",
          "138:               num_sampled=1000,",
          "139:               unique=False,",
          "140:               range_max=2))",
          "142:     with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),",
          "143:                                 \"out of range\"):",
          "144:       self.evaluate(",
          "145:           candidate_sampling_ops.log_uniform_candidate_sampler(",
          "146:               true_classes=[[0, -10]],",
          "147:               num_true=2,",
          "148:               num_sampled=1000,",
          "149:               unique=False,",
          "150:               range_max=2))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ee379c22c05bc074dfc5e415dd574dbaed238fc1",
      "candidate_info": {
        "commit_hash": "ee379c22c05bc074dfc5e415dd574dbaed238fc1",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/ee379c22c05bc074dfc5e415dd574dbaed238fc1",
        "files": [
          "tensorflow/core/kernels/candidate_sampler_ops.cc",
          "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py"
        ],
        "message": "Add true_classes input validation for candidate sampler ops.\n\nThe values must be within the valid range of the sampler.  Added a\ncheck for this.\n\nPiperOrigin-RevId: 479441496",
        "before_after_code_files": [
          "tensorflow/core/kernels/candidate_sampler_ops.cc||tensorflow/core/kernels/candidate_sampler_ops.cc",
          "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py||tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/candidate_sampler_ops.cc||tensorflow/core/kernels/candidate_sampler_ops.cc",
            "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py||tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/candidate_sampler_ops.cc||tensorflow/core/kernels/candidate_sampler_ops.cc",
            "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py||tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/candidate_sampler_ops.cc||tensorflow/core/kernels/candidate_sampler_ops.cc": [
          "File: tensorflow/core/kernels/candidate_sampler_ops.cc -> tensorflow/core/kernels/candidate_sampler_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     gtl::ArraySlice<int64_t> true_candidate(",
          "75:         true_classes.matrix<int64_t>().data(), batch_size * num_true_);",
          "76:     gtl::MutableArraySlice<int64_t> sampled_candidate(",
          "77:         out_sampled_candidates->vec<int64_t>().data(), num_sampled_);",
          "78:     gtl::MutableArraySlice<float> true_expected_count(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:     for (const auto& candidate : true_candidate) {",
          "78:       OP_REQUIRES(context, candidate >= 0 && candidate < sampler_->range(),",
          "79:                   errors::InvalidArgument(\"`true_candidate` out of range [\", 0,",
          "80:                                           \", \", sampler_->range(),",
          "81:                                           \"), received \", candidate));",
          "82:     }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py||tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py": [
          "File: tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py -> tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: from tensorflow.python.framework import constant_op",
          "20: from tensorflow.python.framework import dtypes",
          "21: from tensorflow.python.framework import test_util",
          "22: from tensorflow.python.ops import array_ops",
          "23: from tensorflow.python.ops import candidate_sampling_ops",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: from tensorflow.python.framework import errors",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127:     # twice very rarely.",
          "128:     self.assertLessEqual(num_same, 2)",
          "131: if __name__ == \"__main__\":",
          "132:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131:   def testCandidateOutOfRange(self):",
          "132:     with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),",
          "133:                                 \"out of range\"):",
          "134:       self.evaluate(",
          "135:           candidate_sampling_ops.log_uniform_candidate_sampler(",
          "136:               true_classes=[[0, 10]],",
          "137:               num_true=2,",
          "138:               num_sampled=1000,",
          "139:               unique=False,",
          "140:               range_max=2))",
          "142:     with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),",
          "143:                                 \"out of range\"):",
          "144:       self.evaluate(",
          "145:           candidate_sampling_ops.log_uniform_candidate_sampler(",
          "146:               true_classes=[[0, -10]],",
          "147:               num_true=2,",
          "148:               num_sampled=1000,",
          "149:               unique=False,",
          "150:               range_max=2))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ee8c69073007848e91accd21b956e9e6c2149e82",
      "candidate_info": {
        "commit_hash": "ee8c69073007848e91accd21b956e9e6c2149e82",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/ee8c69073007848e91accd21b956e9e6c2149e82",
        "files": [
          "tensorflow/core/kernels/candidate_sampler_ops.cc",
          "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py"
        ],
        "message": "Add true_classes input validation for candidate sampler ops.\n\nThe values must be within the valid range of the sampler.  Added a\ncheck for this.\n\nPiperOrigin-RevId: 479441496",
        "before_after_code_files": [
          "tensorflow/core/kernels/candidate_sampler_ops.cc||tensorflow/core/kernels/candidate_sampler_ops.cc",
          "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py||tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/candidate_sampler_ops.cc||tensorflow/core/kernels/candidate_sampler_ops.cc",
            "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py||tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/candidate_sampler_ops.cc||tensorflow/core/kernels/candidate_sampler_ops.cc",
            "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py||tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/candidate_sampler_ops.cc||tensorflow/core/kernels/candidate_sampler_ops.cc": [
          "File: tensorflow/core/kernels/candidate_sampler_ops.cc -> tensorflow/core/kernels/candidate_sampler_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "74:     gtl::ArraySlice<int64_t> true_candidate(",
          "75:         true_classes.matrix<int64_t>().data(), batch_size * num_true_);",
          "76:     gtl::MutableArraySlice<int64_t> sampled_candidate(",
          "77:         out_sampled_candidates->vec<int64_t>().data(), num_sampled_);",
          "78:     gtl::MutableArraySlice<float> true_expected_count(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "77:     for (const auto& candidate : true_candidate) {",
          "78:       OP_REQUIRES(context, candidate >= 0 && candidate < sampler_->range(),",
          "79:                   errors::InvalidArgument(\"`true_candidate` out of range [\", 0,",
          "80:                                           \", \", sampler_->range(),",
          "81:                                           \"), received \", candidate));",
          "82:     }",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py||tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py": [
          "File: tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py -> tensorflow/python/kernel_tests/random/candidate_sampler_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: from tensorflow.python.framework import constant_op",
          "20: from tensorflow.python.framework import dtypes",
          "21: from tensorflow.python.framework import test_util",
          "22: from tensorflow.python.ops import array_ops",
          "23: from tensorflow.python.ops import candidate_sampling_ops",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: from tensorflow.python.framework import errors",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127:     # twice very rarely.",
          "128:     self.assertLessEqual(num_same, 2)",
          "131: if __name__ == \"__main__\":",
          "132:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131:   def testCandidateOutOfRange(self):",
          "132:     with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),",
          "133:                                 \"out of range\"):",
          "134:       self.evaluate(",
          "135:           candidate_sampling_ops.log_uniform_candidate_sampler(",
          "136:               true_classes=[[0, 10]],",
          "137:               num_true=2,",
          "138:               num_sampled=1000,",
          "139:               unique=False,",
          "140:               range_max=2))",
          "142:     with self.assertRaisesRegex((ValueError, errors.InvalidArgumentError),",
          "143:                                 \"out of range\"):",
          "144:       self.evaluate(",
          "145:           candidate_sampling_ops.log_uniform_candidate_sampler(",
          "146:               true_classes=[[0, -10]],",
          "147:               num_true=2,",
          "148:               num_sampled=1000,",
          "149:               unique=False,",
          "150:               range_max=2))",
          "",
          "---------------"
        ]
      }
    }
  ]
}