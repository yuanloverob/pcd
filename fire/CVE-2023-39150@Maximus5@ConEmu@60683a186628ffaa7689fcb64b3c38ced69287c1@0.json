{
  "cve_id": "CVE-2023-39150",
  "cve_desc": "ConEmu before commit 230724 does not sanitize title responses correctly for control characters, potentially leading to arbitrary code execution. This is related to an incomplete fix for CVE-2022-46387.",
  "repo": "Maximus5/ConEmu",
  "patch_hash": "60683a186628ffaa7689fcb64b3c38ced69287c1",
  "patch_info": {
    "commit_hash": "60683a186628ffaa7689fcb64b3c38ced69287c1",
    "repo": "Maximus5/ConEmu",
    "commit_url": "https://github.com/Maximus5/ConEmu/commit/60683a186628ffaa7689fcb64b3c38ced69287c1",
    "files": [
      "src/ConEmuCD/ConAnsiImpl.cpp",
      "src/ConEmuHk/Ansi.cpp"
    ],
    "message": "gh-2536: Do not emit control characters in title reports (capability fix).",
    "before_after_code_files": [
      "src/ConEmuCD/ConAnsiImpl.cpp||src/ConEmuCD/ConAnsiImpl.cpp",
      "src/ConEmuHk/Ansi.cpp||src/ConEmuHk/Ansi.cpp"
    ]
  },
  "patch_diff": {
    "src/ConEmuCD/ConAnsiImpl.cpp||src/ConEmuCD/ConAnsiImpl.cpp": [
      "File: src/ConEmuCD/ConAnsiImpl.cpp -> src/ConEmuCD/ConAnsiImpl.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "985:  LPCWSTR pc = asRet;",
      "986:  for (int i = 0; i < nLen; i++, p++, pc++)",
      "987:  {",
      "989:   p->EventType = KEY_EVENT;",
      "990:   p->Event.KeyEvent.bKeyDown = TRUE;",
      "991:   p->Event.KeyEvent.wRepeatCount = 1;",
      "",
      "[Removed Lines]",
      "988:   const char ch = *pc >= 0x20 ? *pc : L' ';",
      "",
      "[Added Lines]",
      "988:   const char ch = (*pc == 0x1B || *pc >= 0x20) ? *pc : L' ';",
      "",
      "---------------"
    ],
    "src/ConEmuHk/Ansi.cpp||src/ConEmuHk/Ansi.cpp": [
      "File: src/ConEmuHk/Ansi.cpp -> src/ConEmuHk/Ansi.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "2505:  LPCWSTR pc = asRet;",
      "2506:  for (size_t i = 0; i < nLen; i++, p++, pc++)",
      "2507:  {",
      "2509:   p->EventType = KEY_EVENT;",
      "2510:   p->Event.KeyEvent.bKeyDown = TRUE;",
      "2511:   p->Event.KeyEvent.wRepeatCount = 1;",
      "",
      "[Removed Lines]",
      "2508:   const char ch = *pc >= 0x20 ? *pc : L' ';",
      "",
      "[Added Lines]",
      "2508:   const char ch = (*pc == 0x1B || *pc >= 0x20) ? *pc : L' ';",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "03c48ab024362163da3b1a1b07cc245dc0ea4925",
      "candidate_info": {
        "commit_hash": "03c48ab024362163da3b1a1b07cc245dc0ea4925",
        "repo": "Maximus5/ConEmu",
        "commit_url": "https://github.com/Maximus5/ConEmu/commit/03c48ab024362163da3b1a1b07cc245dc0ea4925",
        "files": [
          "src/ConEmuCD/ConAnsiImpl.cpp",
          "src/ConEmuHk/Ansi.cpp",
          "src/common/WConsole.h"
        ],
        "message": "Do not emit control characters in title reports\n\nSigned-off-by: Martin Kemp <me@martinke.mp>\nCo-authored-by: David Leadbeater <dgl@dgl.cx>",
        "before_after_code_files": [
          "src/ConEmuCD/ConAnsiImpl.cpp||src/ConEmuCD/ConAnsiImpl.cpp",
          "src/ConEmuHk/Ansi.cpp||src/ConEmuHk/Ansi.cpp",
          "src/common/WConsole.h||src/common/WConsole.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/ConEmuCD/ConAnsiImpl.cpp||src/ConEmuCD/ConAnsiImpl.cpp",
            "src/ConEmuHk/Ansi.cpp||src/ConEmuHk/Ansi.cpp"
          ],
          "candidate": [
            "src/ConEmuCD/ConAnsiImpl.cpp||src/ConEmuCD/ConAnsiImpl.cpp",
            "src/ConEmuHk/Ansi.cpp||src/ConEmuHk/Ansi.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/ConEmuCD/ConAnsiImpl.cpp||src/ConEmuCD/ConAnsiImpl.cpp": [
          "File: src/ConEmuCD/ConAnsiImpl.cpp -> src/ConEmuCD/ConAnsiImpl.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "985:  LPCWSTR pc = asRet;",
          "986:  for (int i = 0; i < nLen; i++, p++, pc++)",
          "987:  {",
          "989:   p->EventType = KEY_EVENT;",
          "990:   p->Event.KeyEvent.bKeyDown = TRUE;",
          "991:   p->Event.KeyEvent.wRepeatCount = 1;",
          "",
          "[Removed Lines]",
          "988:   const char ch = (wcschr(UNSAFE_CONSOLE_REPORT_CHARS, *pc) == nullptr) ? *pc : L' ';",
          "",
          "[Added Lines]",
          "988:   const char ch = *pc >= 0x20 ? *pc : L' ';",
          "",
          "---------------"
        ],
        "src/ConEmuHk/Ansi.cpp||src/ConEmuHk/Ansi.cpp": [
          "File: src/ConEmuHk/Ansi.cpp -> src/ConEmuHk/Ansi.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "2505:  LPCWSTR pc = asRet;",
          "2506:  for (size_t i = 0; i < nLen; i++, p++, pc++)",
          "2507:  {",
          "2509:   p->EventType = KEY_EVENT;",
          "2510:   p->Event.KeyEvent.bKeyDown = TRUE;",
          "2511:   p->Event.KeyEvent.wRepeatCount = 1;",
          "",
          "[Removed Lines]",
          "2508:   const char ch = (wcschr(UNSAFE_CONSOLE_REPORT_CHARS, *pc) == nullptr) ? *pc : L' ';",
          "",
          "[Added Lines]",
          "2508:   const char ch = *pc >= 0x20 ? *pc : L' ';",
          "",
          "---------------"
        ],
        "src/common/WConsole.h||src/common/WConsole.h": [
          "File: src/common/WConsole.h -> src/common/WConsole.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: #define DISABLE_NEWLINE_AUTO_RETURN 0x0008",
          "53: #endif",
          "58: struct MY_CONSOLE_SCREEN_BUFFER_INFOEX",
          "59: {",
          "60:  ULONG      cbSize;",
          "",
          "[Removed Lines]",
          "56: #define UNSAFE_CONSOLE_REPORT_CHARS L\"\\r\\n\\t\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}