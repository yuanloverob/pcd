{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6266d0cd66d4d1115a855e170e9c64a373bb1f0a",
      "candidate_info": {
        "commit_hash": "6266d0cd66d4d1115a855e170e9c64a373bb1f0a",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/6266d0cd66d4d1115a855e170e9c64a373bb1f0a",
        "files": [
          "modules/b2b_entities/dlg.c"
        ],
        "message": "b2b_entities: fix shm memory leak\n\nFor the write back db mode, the entity storage data was only freed after\ninserting/updating the entity in the database. This would lead to memory\nleaks if the entity was deleted before the DB timer task had a chance\nto be run.\n\nThanks go to Norm Brandinger from Five9 for reporting!\n\n(cherry picked from commit aee014beb78be050bd2272ee0080a6f8063d9ec0)",
        "before_after_code_files": [
          "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c": [
          "File: modules/b2b_entities/dlg.c -> modules/b2b_entities/dlg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1292:     aux = dlg->next;",
          "1293:     if(dlg->tag[CALLEE_LEG].s)",
          "1294:      shm_free(dlg->tag[CALLEE_LEG].s);",
          "1295:     if(dlg->ack_sdp.s)",
          "1296:      shm_free(dlg->ack_sdp.s);",
          "1297:     shm_free(dlg);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1295:     if (b2be_db_mode == WRITE_BACK && dlg->storage.s)",
          "1296:      shm_free(dlg->storage.s);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1784:  b2b_delete_legs(&dlg->legs);",
          "1786:  if(dlg->uac_tran)",
          "1787:   tmb.unref_cell(dlg->uac_tran);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1788:  if (b2be_db_mode == WRITE_BACK && dlg->storage.s)",
          "1789:   shm_free(dlg->storage.s);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6aea5c5e2bc992bd4dbb243e3d2b99caf0df9769",
      "candidate_info": {
        "commit_hash": "6aea5c5e2bc992bd4dbb243e3d2b99caf0df9769",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/6aea5c5e2bc992bd4dbb243e3d2b99caf0df9769",
        "files": [
          "modules/proto_hep/hep.c"
        ],
        "message": "proto_hep: Fix log message severity (just a debug log)\n\n(cherry picked from commit 612e7a1feb28a6aa359b24a6237928c0e06a3605)",
        "before_after_code_files": [
          "modules/proto_hep/hep.c||modules/proto_hep/hep.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/proto_hep/hep.c||modules/proto_hep/hep.c": [
          "File: modules/proto_hep/hep.c -> modules/proto_hep/hep.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "647:    lock_release(hid_dyn_lock);",
          "648:  }",
          "651:  return NULL;",
          "652: }",
          "",
          "[Removed Lines]",
          "650:  LM_INFO(\"hep id <%.*s> not found!\\n\", name->len, name->s);",
          "",
          "[Added Lines]",
          "650:  LM_DBG(\"hep id <%.*s> not found\\n\", name->len, name->s);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e9d875c3cc3c944d2b0a609e2c4506b62a59f13a",
      "candidate_info": {
        "commit_hash": "e9d875c3cc3c944d2b0a609e2c4506b62a59f13a",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/e9d875c3cc3c944d2b0a609e2c4506b62a59f13a",
        "files": [
          "cfg.y"
        ],
        "message": "Fix for access due to low memory.\n\nIf you check after a memory access, then you always have access from outside. with stricter control of memory boundaries, this can lead to an abnormal termination of the program.\n\n(cherry picked from commit 9ed1485938944ae47f58ac081facb4470c30c47e)",
        "before_after_code_files": [
          "cfg.y||cfg.y"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cfg.y||cfg.y": [
          "File: cfg.y -> cfg.y",
          "--- Hunk 1 ---",
          "[Context before]",
          "1513: timer_route_stm:  ROUTE_TIMER LBRACK route_name COMMA NUMBER RBRACK LBRACE actions RBRACE {",
          "1514:       i_tmp = 0;",
          "1516:        i_tmp++;",
          "1517:       }",
          "1518:       if(i_tmp == TIMER_RT_NO) {",
          "",
          "[Removed Lines]",
          "1515:       while(sroutes->timer[i_tmp].a!=0 && i_tmp<TIMER_RT_NO){",
          "",
          "[Added Lines]",
          "1515:       while(i_tmp<TIMER_RT_NO && sroutes->timer[i_tmp].a!=0){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e0325625ca9e8dceb79225455527af62a2e8e298",
      "candidate_info": {
        "commit_hash": "e0325625ca9e8dceb79225455527af62a2e8e298",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/e0325625ca9e8dceb79225455527af62a2e8e298",
        "files": [
          "db/schema/dr_carriers.xml",
          "modules/auth/doc/auth_admin.xml",
          "modules/cachedb_local/doc/cachedb_local_admin.xml",
          "modules/cfgutils/doc/cfgutils_admin.xml",
          "modules/dispatcher/doc/dispatcher_admin.xml",
          "modules/drouting/doc/drouting_admin.xml",
          "modules/fraud_detection/doc/fraud_detection_admin.xml",
          "modules/mid_registrar/doc/mid_registrar_admin.xml",
          "modules/permissions/doc/permissions_admin.xml",
          "modules/prometheus/doc/prometheus_admin.xml",
          "modules/rtpengine/doc/rtpengine_admin.xml",
          "modules/rtpproxy/doc/rtpproxy_admin.xml",
          "modules/sipmsgops/doc/sipmsgops_admin.xml",
          "modules/stir_shaken/stir_shaken.c",
          "modules/usrloc/doc/usrloc_admin.xml"
        ],
        "message": "Fix various doc typos; Improve wording\n\n(cherry picked from commit dd7b3da0397fe5ccc9978ec9138a6d4395c3f941)\n(cherry picked from commit 7cdbc996ee61eae1ed9757c9bb401c67d96b48fd)",
        "before_after_code_files": [
          "modules/stir_shaken/stir_shaken.c||modules/stir_shaken/stir_shaken.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/stir_shaken/stir_shaken.c||modules/stir_shaken/stir_shaken.c": [
          "File: modules/stir_shaken/stir_shaken.c -> modules/stir_shaken/stir_shaken.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:  if (ca_list || ca_dir) {",
          "206:   if (X509_STORE_load_locations(store, ca_list, ca_dir) != 1) {",
          "208:    return -1;",
          "209:   }",
          "210:   if (X509_STORE_set_default_paths(store) != 1) {",
          "",
          "[Removed Lines]",
          "207:    LM_ERR(\"Failed to load trustefd CAs\\n\");",
          "",
          "[Added Lines]",
          "207:    LM_ERR(\"Failed to load trusted CAs\\n\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e8df85a64a3b8095cd95c0b2d9254de605b61384",
      "candidate_info": {
        "commit_hash": "e8df85a64a3b8095cd95c0b2d9254de605b61384",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/e8df85a64a3b8095cd95c0b2d9254de605b61384",
        "files": [
          "modules/b2b_entities/dlg.c"
        ],
        "message": "b2b_entities: properly handle negative replies to reINVITEs\n\nDo not change the dialog state to terminated as a result of a sending a\nnegative reply to a reINVITE. This would have prevented the forwarding of\nfurther requests.\n\nThanks to David Escartin from Sonoc for reporting and testing the fix.",
        "before_after_code_files": [
          "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c": [
          "File: modules/b2b_entities/dlg.c -> modules/b2b_entities/dlg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1632:   {",
          "1633:    if(code < 300)",
          "1634:     dlg->state = B2B_CONFIRMED;",
          "1636:     dlg->state= B2B_TERMINATED;",
          "1637:    UPDATE_DBFLAG(dlg);",
          "1638:   }",
          "",
          "[Removed Lines]",
          "1635:    else if (!dlg->uac_tran)",
          "",
          "[Added Lines]",
          "1635:    else if (!dlg->uac_tran && dlg->state != B2B_MODIFIED)",
          "",
          "---------------"
        ]
      }
    }
  ]
}