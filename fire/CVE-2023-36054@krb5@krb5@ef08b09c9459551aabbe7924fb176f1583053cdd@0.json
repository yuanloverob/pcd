{
  "cve_id": "CVE-2023-36054",
  "cve_desc": "lib/kadm5/kadm_rpc_xdr.c in MIT Kerberos 5 (aka krb5) before 1.20.2 and 1.21.x before 1.21.1 frees an uninitialized pointer. A remote authenticated user can trigger a kadmind crash. This occurs because _xdr_kadm5_principal_ent_rec does not validate the relationship between n_key_data and the key_data array count.",
  "repo": "krb5/krb5",
  "patch_hash": "ef08b09c9459551aabbe7924fb176f1583053cdd",
  "patch_info": {
    "commit_hash": "ef08b09c9459551aabbe7924fb176f1583053cdd",
    "repo": "krb5/krb5",
    "commit_url": "https://github.com/krb5/krb5/commit/ef08b09c9459551aabbe7924fb176f1583053cdd",
    "files": [
      "src/lib/kadm5/kadm_rpc_xdr.c"
    ],
    "message": "Ensure array count consistency in kadm5 RPC\n\nIn _xdr_kadm5_principal_ent_rec(), ensure that n_key_data matches the\nkey_data array count when decoding.  Otherwise when the structure is\nlater freed, xdr_array() could iterate over the wrong number of\nelements, either leaking some memory or freeing uninitialized\npointers.  Reported by Robert Morris.\n\nCVE-2023-36054:\n\nAn authenticated attacker can cause a kadmind process to crash by\nfreeing uninitialized pointers.  Remote code execution is unlikely.\nAn attacker with control of a kadmin server can cause a kadmin client\nto crash by freeing uninitialized pointers.\n\nticket: 9099 (new)\ntags: pullup\ntarget_version: 1.21-next\ntarget_version: 1.20-next",
    "before_after_code_files": [
      "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c"
    ]
  },
  "patch_diff": {
    "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c": [
      "File: src/lib/kadm5/kadm_rpc_xdr.c -> src/lib/kadm5/kadm_rpc_xdr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "390:         int v)",
      "391: {",
      "392:  unsigned int n;",
      "394:  if (!xdr_krb5_principal(xdrs, &objp->principal)) {",
      "395:   return (FALSE);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "393:  bool_t r;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "443:  if (!xdr_krb5_int16(xdrs, &objp->n_key_data)) {",
      "444:   return (FALSE);",
      "445:  }",
      "446:  if (!xdr_krb5_int16(xdrs, &objp->n_tl_data)) {",
      "447:   return (FALSE);",
      "448:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "447:  if (xdrs->x_op == XDR_DECODE && objp->n_key_data < 0) {",
      "448:   return (FALSE);",
      "449:  }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "451:   return FALSE;",
      "452:  }",
      "453:  n = objp->n_key_data;",
      "457:   return (FALSE);",
      "458:  }",
      "",
      "[Removed Lines]",
      "454:  if (!xdr_array(xdrs, (caddr_t *) &objp->key_data,",
      "455:          &n, ~0, sizeof(krb5_key_data),",
      "456:          xdr_krb5_key_data_nocontents)) {",
      "",
      "[Added Lines]",
      "458:  r = xdr_array(xdrs, (caddr_t *) &objp->key_data, &n, objp->n_key_data,",
      "459:         sizeof(krb5_key_data), xdr_krb5_key_data_nocontents);",
      "460:  objp->n_key_data = n;",
      "461:  if (!r) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c81ffb6c8578a9b55c9d0a10342b5bc1bc6ec4df",
      "candidate_info": {
        "commit_hash": "c81ffb6c8578a9b55c9d0a10342b5bc1bc6ec4df",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/c81ffb6c8578a9b55c9d0a10342b5bc1bc6ec4df",
        "files": [
          "src/lib/kadm5/kadm_rpc_xdr.c"
        ],
        "message": "Ensure array count consistency in kadm5 RPC\n\nIn _xdr_kadm5_principal_ent_rec(), ensure that n_key_data matches the\nkey_data array count when decoding.  Otherwise when the structure is\nlater freed, xdr_array() could iterate over the wrong number of\nelements, either leaking some memory or freeing uninitialized\npointers.  Reported by Robert Morris.\n\nCVE-2023-36054:\n\nAn authenticated attacker can cause a kadmind process to crash by\nfreeing uninitialized pointers.  Remote code execution is unlikely.\nAn attacker with control of a kadmin server can cause a kadmin client\nto crash by freeing uninitialized pointers.\n\n(cherry picked from commit ef08b09c9459551aabbe7924fb176f1583053cdd)\n\nticket: 9099\nversion_fixed: 1.20.2",
        "before_after_code_files": [
          "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c"
          ],
          "candidate": [
            "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c": [
          "File: src/lib/kadm5/kadm_rpc_xdr.c -> src/lib/kadm5/kadm_rpc_xdr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "390:         int v)",
          "391: {",
          "392:  unsigned int n;",
          "394:  if (!xdr_krb5_principal(xdrs, &objp->principal)) {",
          "395:   return (FALSE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "393:  bool_t r;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "443:  if (!xdr_krb5_int16(xdrs, &objp->n_key_data)) {",
          "444:   return (FALSE);",
          "445:  }",
          "446:  if (!xdr_krb5_int16(xdrs, &objp->n_tl_data)) {",
          "447:   return (FALSE);",
          "448:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "447:  if (xdrs->x_op == XDR_DECODE && objp->n_key_data < 0) {",
          "448:   return (FALSE);",
          "449:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "451:   return FALSE;",
          "452:  }",
          "453:  n = objp->n_key_data;",
          "457:   return (FALSE);",
          "458:  }",
          "",
          "[Removed Lines]",
          "454:  if (!xdr_array(xdrs, (caddr_t *) &objp->key_data,",
          "455:          &n, ~0, sizeof(krb5_key_data),",
          "456:          xdr_krb5_key_data_nocontents)) {",
          "",
          "[Added Lines]",
          "458:  r = xdr_array(xdrs, (caddr_t *) &objp->key_data, &n, objp->n_key_data,",
          "459:         sizeof(krb5_key_data), xdr_krb5_key_data_nocontents);",
          "460:  objp->n_key_data = n;",
          "461:  if (!r) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03561e73371554e163333c1133266292b8936a0f",
      "candidate_info": {
        "commit_hash": "03561e73371554e163333c1133266292b8936a0f",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/03561e73371554e163333c1133266292b8936a0f",
        "files": [
          "src/lib/kadm5/kadm_rpc_xdr.c"
        ],
        "message": "Ensure array count consistency in kadm5 RPC\n\nIn _xdr_kadm5_principal_ent_rec(), ensure that n_key_data matches the\nkey_data array count when decoding.  Otherwise when the structure is\nlater freed, xdr_array() could iterate over the wrong number of\nelements, either leaking some memory or freeing uninitialized\npointers.  Reported by Robert Morris.\n\nCVE-2023-36054:\n\nAn authenticated attacker can cause a kadmind process to crash by\nfreeing uninitialized pointers.  Remote code execution is unlikely.\nAn attacker with control of a kadmin server can cause a kadmin client\nto crash by freeing uninitialized pointers.\n\n(cherry picked from commit ef08b09c9459551aabbe7924fb176f1583053cdd)\n\nticket: 9099\nversion_fixed: 1.21.1",
        "before_after_code_files": [
          "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c"
          ],
          "candidate": [
            "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c"
          ]
        }
      },
      "candidate_diff": {
        "src/lib/kadm5/kadm_rpc_xdr.c||src/lib/kadm5/kadm_rpc_xdr.c": [
          "File: src/lib/kadm5/kadm_rpc_xdr.c -> src/lib/kadm5/kadm_rpc_xdr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "390:         int v)",
          "391: {",
          "392:  unsigned int n;",
          "394:  if (!xdr_krb5_principal(xdrs, &objp->principal)) {",
          "395:   return (FALSE);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "393:  bool_t r;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "443:  if (!xdr_krb5_int16(xdrs, &objp->n_key_data)) {",
          "444:   return (FALSE);",
          "445:  }",
          "446:  if (!xdr_krb5_int16(xdrs, &objp->n_tl_data)) {",
          "447:   return (FALSE);",
          "448:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "447:  if (xdrs->x_op == XDR_DECODE && objp->n_key_data < 0) {",
          "448:   return (FALSE);",
          "449:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "451:   return FALSE;",
          "452:  }",
          "453:  n = objp->n_key_data;",
          "457:   return (FALSE);",
          "458:  }",
          "",
          "[Removed Lines]",
          "454:  if (!xdr_array(xdrs, (caddr_t *) &objp->key_data,",
          "455:          &n, ~0, sizeof(krb5_key_data),",
          "456:          xdr_krb5_key_data_nocontents)) {",
          "",
          "[Added Lines]",
          "458:  r = xdr_array(xdrs, (caddr_t *) &objp->key_data, &n, objp->n_key_data,",
          "459:         sizeof(krb5_key_data), xdr_krb5_key_data_nocontents);",
          "460:  objp->n_key_data = n;",
          "461:  if (!r) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}