{
  "cve_id": "CVE-2024-31950",
  "cve_desc": "In FRRouting (FRR) through 9.1, there can be a buffer overflow and daemon crash in ospf_te_parse_ri for OSPF LSA packets during an attempt to read Segment Routing subTLVs (their size is not validated).",
  "repo": "FRRouting/frr",
  "patch_hash": "6b84541df71772f697a7f9e6b2aaf72536aab775",
  "patch_info": {
    "commit_hash": "6b84541df71772f697a7f9e6b2aaf72536aab775",
    "repo": "FRRouting/frr",
    "commit_url": "https://github.com/FRRouting/frr/commit/6b84541df71772f697a7f9e6b2aaf72536aab775",
    "files": [
      "ospfd/ospf_te.c"
    ],
    "message": "ospfd: Solved crash in RI parsing with OSPF TE\n\nIggy Frankovic discovered another ospfd crash when performing fuzzing of OSPF\nLSA packets. The crash occurs in ospf_te_parse_ri() function when attemping to\nread Segment Routing subTLVs. The original code doesn't check if the size of\nthe SR subTLVs have the correct length. In presence of erronous LSA, this will\ncause a buffer overflow and ospfd crash.\n\nThis patch introduces new verification of the subTLVs size for Router\nInformation TLV.\n\nCo-authored-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Olivier Dugeon <olivier.dugeon@orange.com>",
    "before_after_code_files": [
      "ospfd/ospf_te.c||ospfd/ospf_te.c"
    ]
  },
  "patch_diff": {
    "ospfd/ospf_te.c||ospfd/ospf_te.c": [
      "File: ospfd/ospf_te.c -> ospfd/ospf_te.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2457:   switch (ntohs(tlvh->type)) {",
      "2458:   case RI_SR_TLV_SR_ALGORITHM:",
      "2459:    algo = (struct ri_sr_tlv_sr_algorithm *)tlvh;",
      "2461:    for (int i = 0; i < ntohs(algo->header.length); i++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2459:    if (TLV_BODY_SIZE(tlvh) < 1",
      "2460:        || TLV_BODY_SIZE(tlvh) > ALGORITHM_COUNT)",
      "2461:     break;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2480:    break;",
      "2482:   case RI_SR_TLV_SRGB_LABEL_RANGE:",
      "2483:    range = (struct ri_sr_tlv_sid_label_range *)tlvh;",
      "2484:    size = GET_RANGE_SIZE(ntohl(range->size));",
      "2485:    lower = GET_LABEL(ntohl(range->lower.value));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2486:    if (TLV_BODY_SIZE(tlvh) != RI_SR_TLV_LABEL_RANGE_SIZE)",
      "2487:     break;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2497:    break;",
      "2499:   case RI_SR_TLV_SRLB_LABEL_RANGE:",
      "2500:    range = (struct ri_sr_tlv_sid_label_range *)tlvh;",
      "2501:    size = GET_RANGE_SIZE(ntohl(range->size));",
      "2502:    lower = GET_LABEL(ntohl(range->lower.value));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2505:    if (TLV_BODY_SIZE(tlvh) != RI_SR_TLV_LABEL_RANGE_SIZE)",
      "2506:     break;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2514:    break;",
      "2516:   case RI_SR_TLV_NODE_MSD:",
      "2517:    msd = (struct ri_sr_tlv_node_msd *)tlvh;",
      "2518:    if ((CHECK_FLAG(node->flags, LS_NODE_MSD))",
      "2519:        && (node->msd == msd->value))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2524:    if (TLV_BODY_SIZE(tlvh) < RI_SR_TLV_NODE_MSD_SIZE)",
      "2525:     break;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "298704f1e73221172432e2a4afd79086ffcd4cca",
      "candidate_info": {
        "commit_hash": "298704f1e73221172432e2a4afd79086ffcd4cca",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/298704f1e73221172432e2a4afd79086ffcd4cca",
        "files": [
          "ospfd/ospf_te.c"
        ],
        "message": "ospfd: Solved crash in RI parsing with OSPF TE\n\nIggy Frankovic discovered another ospfd crash when performing fuzzing of OSPF\nLSA packets. The crash occurs in ospf_te_parse_ri() function when attemping to\nread Segment Routing subTLVs. The original code doesn't check if the size of\nthe SR subTLVs have the correct length. In presence of erronous LSA, this will\ncause a buffer overflow and ospfd crash.\n\nThis patch introduces new verification of the subTLVs size for Router\nInformation TLV.\n\nCo-authored-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Olivier Dugeon <olivier.dugeon@orange.com>\n(cherry picked from commit f69d1313b19047d3d83fc2b36a518355b861dfc4)",
        "before_after_code_files": [
          "ospfd/ospf_te.c||ospfd/ospf_te.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ],
          "candidate": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ]
        }
      },
      "candidate_diff": {
        "ospfd/ospf_te.c||ospfd/ospf_te.c": [
          "File: ospfd/ospf_te.c -> ospfd/ospf_te.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2484:   switch (ntohs(tlvh->type)) {",
          "2485:   case RI_SR_TLV_SR_ALGORITHM:",
          "2486:    algo = (struct ri_sr_tlv_sr_algorithm *)tlvh;",
          "2488:    for (int i = 0; i < ntohs(algo->header.length); i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2486:    if (TLV_BODY_SIZE(tlvh) < 1 ||",
          "2487:        TLV_BODY_SIZE(tlvh) > ALGORITHM_COUNT)",
          "2488:     break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2507:    break;",
          "2509:   case RI_SR_TLV_SRGB_LABEL_RANGE:",
          "2510:    range = (struct ri_sr_tlv_sid_label_range *)tlvh;",
          "2511:    size = GET_RANGE_SIZE(ntohl(range->size));",
          "2512:    lower = GET_LABEL(ntohl(range->lower.value));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2513:    if (TLV_BODY_SIZE(tlvh) != RI_SR_TLV_LABEL_RANGE_SIZE)",
          "2514:     break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2524:    break;",
          "2526:   case RI_SR_TLV_SRLB_LABEL_RANGE:",
          "2527:    range = (struct ri_sr_tlv_sid_label_range *)tlvh;",
          "2528:    size = GET_RANGE_SIZE(ntohl(range->size));",
          "2529:    lower = GET_LABEL(ntohl(range->lower.value));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2532:    if (TLV_BODY_SIZE(tlvh) != RI_SR_TLV_LABEL_RANGE_SIZE)",
          "2533:     break;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2541:    break;",
          "2543:   case RI_SR_TLV_NODE_MSD:",
          "2544:    msd = (struct ri_sr_tlv_node_msd *)tlvh;",
          "2545:    if ((CHECK_FLAG(node->flags, LS_NODE_MSD))",
          "2546:        && (node->msd == msd->value))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2551:    if (TLV_BODY_SIZE(tlvh) < RI_SR_TLV_NODE_MSD_SIZE)",
          "2552:     break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c7ef95210c4715cbe3e2ecae875c1bc423069d16",
      "candidate_info": {
        "commit_hash": "c7ef95210c4715cbe3e2ecae875c1bc423069d16",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/c7ef95210c4715cbe3e2ecae875c1bc423069d16",
        "files": [
          "ospfd/ospf_te.c"
        ],
        "message": "ospfd: Solved crash in RI parsing with OSPF TE\n\nIggy Frankovic discovered another ospfd crash when performing fuzzing of OSPF\nLSA packets. The crash occurs in ospf_te_parse_ri() function when attemping to\nread Segment Routing subTLVs. The original code doesn't check if the size of\nthe SR subTLVs have the correct length. In presence of erronous LSA, this will\ncause a buffer overflow and ospfd crash.\n\nThis patch introduces new verification of the subTLVs size for Router\nInformation TLV.\n\nCo-authored-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Olivier Dugeon <olivier.dugeon@orange.com>",
        "before_after_code_files": [
          "ospfd/ospf_te.c||ospfd/ospf_te.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ],
          "candidate": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ]
        }
      },
      "candidate_diff": {
        "ospfd/ospf_te.c||ospfd/ospf_te.c": [
          "File: ospfd/ospf_te.c -> ospfd/ospf_te.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2494:   switch (ntohs(tlvh->type)) {",
          "2495:   case RI_SR_TLV_SR_ALGORITHM:",
          "2496:    algo = (struct ri_sr_tlv_sr_algorithm *)tlvh;",
          "2498:    for (int i = 0; i < ntohs(algo->header.length); i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2496:    if (TLV_BODY_SIZE(tlvh) < 1 ||",
          "2497:        TLV_BODY_SIZE(tlvh) > ALGORITHM_COUNT)",
          "2498:     break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2517:    break;",
          "2519:   case RI_SR_TLV_SRGB_LABEL_RANGE:",
          "2520:    range = (struct ri_sr_tlv_sid_label_range *)tlvh;",
          "2521:    size = GET_RANGE_SIZE(ntohl(range->size));",
          "2522:    lower = GET_LABEL(ntohl(range->lower.value));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2523:    if (TLV_BODY_SIZE(tlvh) != RI_SR_TLV_LABEL_RANGE_SIZE)",
          "2524:     break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2534:    break;",
          "2536:   case RI_SR_TLV_SRLB_LABEL_RANGE:",
          "2537:    range = (struct ri_sr_tlv_sid_label_range *)tlvh;",
          "2538:    size = GET_RANGE_SIZE(ntohl(range->size));",
          "2539:    lower = GET_LABEL(ntohl(range->lower.value));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2542:    if (TLV_BODY_SIZE(tlvh) != RI_SR_TLV_LABEL_RANGE_SIZE)",
          "2543:     break;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2551:    break;",
          "2553:   case RI_SR_TLV_NODE_MSD:",
          "2554:    msd = (struct ri_sr_tlv_node_msd *)tlvh;",
          "2555:    if ((CHECK_FLAG(node->flags, LS_NODE_MSD))",
          "2556:        && (node->msd == msd->value))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2561:    if (TLV_BODY_SIZE(tlvh) < RI_SR_TLV_NODE_MSD_SIZE)",
          "2562:     break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "48f000ac2085e03783603071f33cf3fb46f0bfa1",
      "candidate_info": {
        "commit_hash": "48f000ac2085e03783603071f33cf3fb46f0bfa1",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/48f000ac2085e03783603071f33cf3fb46f0bfa1",
        "files": [
          "ospfd/ospf_te.c"
        ],
        "message": "ospfd: Solved crash in RI parsing with OSPF TE\n\nIggy Frankovic discovered another ospfd crash when performing fuzzing of OSPF\nLSA packets. The crash occurs in ospf_te_parse_ri() function when attemping to\nread Segment Routing subTLVs. The original code doesn't check if the size of\nthe SR subTLVs have the correct length. In presence of erronous LSA, this will\ncause a buffer overflow and ospfd crash.\n\nThis patch introduces new verification of the subTLVs size for Router\nInformation TLV.\n\nCo-authored-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Olivier Dugeon <olivier.dugeon@orange.com>\n(cherry picked from commit f69d1313b19047d3d83fc2b36a518355b861dfc4)",
        "before_after_code_files": [
          "ospfd/ospf_te.c||ospfd/ospf_te.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ],
          "candidate": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ]
        }
      },
      "candidate_diff": {
        "ospfd/ospf_te.c||ospfd/ospf_te.c": [
          "File: ospfd/ospf_te.c -> ospfd/ospf_te.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2456:   switch (ntohs(tlvh->type)) {",
          "2457:   case RI_SR_TLV_SR_ALGORITHM:",
          "2458:    algo = (struct ri_sr_tlv_sr_algorithm *)tlvh;",
          "2460:    for (int i = 0; i < ntohs(algo->header.length); i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2458:    if (TLV_BODY_SIZE(tlvh) < 1 ||",
          "2459:        TLV_BODY_SIZE(tlvh) > ALGORITHM_COUNT)",
          "2460:     break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2479:    break;",
          "2481:   case RI_SR_TLV_SRGB_LABEL_RANGE:",
          "2482:    range = (struct ri_sr_tlv_sid_label_range *)tlvh;",
          "2483:    size = GET_RANGE_SIZE(ntohl(range->size));",
          "2484:    lower = GET_LABEL(ntohl(range->lower.value));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2485:    if (TLV_BODY_SIZE(tlvh) != RI_SR_TLV_LABEL_RANGE_SIZE)",
          "2486:     break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2496:    break;",
          "2498:   case RI_SR_TLV_SRLB_LABEL_RANGE:",
          "2499:    range = (struct ri_sr_tlv_sid_label_range *)tlvh;",
          "2500:    size = GET_RANGE_SIZE(ntohl(range->size));",
          "2501:    lower = GET_LABEL(ntohl(range->lower.value));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2504:    if (TLV_BODY_SIZE(tlvh) != RI_SR_TLV_LABEL_RANGE_SIZE)",
          "2505:     break;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2513:    break;",
          "2515:   case RI_SR_TLV_NODE_MSD:",
          "2516:    msd = (struct ri_sr_tlv_node_msd *)tlvh;",
          "2517:    if ((CHECK_FLAG(node->flags, LS_NODE_MSD))",
          "2518:        && (node->msd == msd->value))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2523:    if (TLV_BODY_SIZE(tlvh) < RI_SR_TLV_NODE_MSD_SIZE)",
          "2524:     break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fb1020ff7d032948bd121bd1603bed41afb73e29",
      "candidate_info": {
        "commit_hash": "fb1020ff7d032948bd121bd1603bed41afb73e29",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/fb1020ff7d032948bd121bd1603bed41afb73e29",
        "files": [
          "ospfd/ospf_te.c"
        ],
        "message": "ospfd: Solved crash in RI parsing with OSPF TE\n\nIggy Frankovic discovered another ospfd crash when performing fuzzing of OSPF\nLSA packets. The crash occurs in ospf_te_parse_ri() function when attemping to\nread Segment Routing subTLVs. The original code doesn't check if the size of\nthe SR subTLVs have the correct length. In presence of erronous LSA, this will\ncause a buffer overflow and ospfd crash.\n\nThis patch introduces new verification of the subTLVs size for Router\nInformation TLV.\n\nCo-authored-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Olivier Dugeon <olivier.dugeon@orange.com>\n(cherry picked from commit f69d1313b19047d3d83fc2b36a518355b861dfc4)",
        "before_after_code_files": [
          "ospfd/ospf_te.c||ospfd/ospf_te.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ],
          "candidate": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ]
        }
      },
      "candidate_diff": {
        "ospfd/ospf_te.c||ospfd/ospf_te.c": [
          "File: ospfd/ospf_te.c -> ospfd/ospf_te.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2457:   switch (ntohs(tlvh->type)) {",
          "2458:   case RI_SR_TLV_SR_ALGORITHM:",
          "2459:    algo = (struct ri_sr_tlv_sr_algorithm *)tlvh;",
          "2461:    for (int i = 0; i < ntohs(algo->header.length); i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2459:    if (TLV_BODY_SIZE(tlvh) < 1 ||",
          "2460:        TLV_BODY_SIZE(tlvh) > ALGORITHM_COUNT)",
          "2461:     break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2480:    break;",
          "2482:   case RI_SR_TLV_SRGB_LABEL_RANGE:",
          "2483:    range = (struct ri_sr_tlv_sid_label_range *)tlvh;",
          "2484:    size = GET_RANGE_SIZE(ntohl(range->size));",
          "2485:    lower = GET_LABEL(ntohl(range->lower.value));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2486:    if (TLV_BODY_SIZE(tlvh) != RI_SR_TLV_LABEL_RANGE_SIZE)",
          "2487:     break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2497:    break;",
          "2499:   case RI_SR_TLV_SRLB_LABEL_RANGE:",
          "2500:    range = (struct ri_sr_tlv_sid_label_range *)tlvh;",
          "2501:    size = GET_RANGE_SIZE(ntohl(range->size));",
          "2502:    lower = GET_LABEL(ntohl(range->lower.value));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2505:    if (TLV_BODY_SIZE(tlvh) != RI_SR_TLV_LABEL_RANGE_SIZE)",
          "2506:     break;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2514:    break;",
          "2516:   case RI_SR_TLV_NODE_MSD:",
          "2517:    msd = (struct ri_sr_tlv_node_msd *)tlvh;",
          "2518:    if ((CHECK_FLAG(node->flags, LS_NODE_MSD))",
          "2519:        && (node->msd == msd->value))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2524:    if (TLV_BODY_SIZE(tlvh) < RI_SR_TLV_NODE_MSD_SIZE)",
          "2525:     break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f69d1313b19047d3d83fc2b36a518355b861dfc4",
      "candidate_info": {
        "commit_hash": "f69d1313b19047d3d83fc2b36a518355b861dfc4",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/f69d1313b19047d3d83fc2b36a518355b861dfc4",
        "files": [
          "ospfd/ospf_te.c"
        ],
        "message": "ospfd: Solved crash in RI parsing with OSPF TE\n\nIggy Frankovic discovered another ospfd crash when performing fuzzing of OSPF\nLSA packets. The crash occurs in ospf_te_parse_ri() function when attemping to\nread Segment Routing subTLVs. The original code doesn't check if the size of\nthe SR subTLVs have the correct length. In presence of erronous LSA, this will\ncause a buffer overflow and ospfd crash.\n\nThis patch introduces new verification of the subTLVs size for Router\nInformation TLV.\n\nCo-authored-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Olivier Dugeon <olivier.dugeon@orange.com>",
        "before_after_code_files": [
          "ospfd/ospf_te.c||ospfd/ospf_te.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ],
          "candidate": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ]
        }
      },
      "candidate_diff": {
        "ospfd/ospf_te.c||ospfd/ospf_te.c": [
          "File: ospfd/ospf_te.c -> ospfd/ospf_te.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2457:   switch (ntohs(tlvh->type)) {",
          "2458:   case RI_SR_TLV_SR_ALGORITHM:",
          "2459:    algo = (struct ri_sr_tlv_sr_algorithm *)tlvh;",
          "2461:    for (int i = 0; i < ntohs(algo->header.length); i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2459:    if (TLV_BODY_SIZE(tlvh) < 1 ||",
          "2460:        TLV_BODY_SIZE(tlvh) > ALGORITHM_COUNT)",
          "2461:     break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2480:    break;",
          "2482:   case RI_SR_TLV_SRGB_LABEL_RANGE:",
          "2483:    range = (struct ri_sr_tlv_sid_label_range *)tlvh;",
          "2484:    size = GET_RANGE_SIZE(ntohl(range->size));",
          "2485:    lower = GET_LABEL(ntohl(range->lower.value));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2486:    if (TLV_BODY_SIZE(tlvh) != RI_SR_TLV_LABEL_RANGE_SIZE)",
          "2487:     break;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2497:    break;",
          "2499:   case RI_SR_TLV_SRLB_LABEL_RANGE:",
          "2500:    range = (struct ri_sr_tlv_sid_label_range *)tlvh;",
          "2501:    size = GET_RANGE_SIZE(ntohl(range->size));",
          "2502:    lower = GET_LABEL(ntohl(range->lower.value));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2505:    if (TLV_BODY_SIZE(tlvh) != RI_SR_TLV_LABEL_RANGE_SIZE)",
          "2506:     break;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2514:    break;",
          "2516:   case RI_SR_TLV_NODE_MSD:",
          "2517:    msd = (struct ri_sr_tlv_node_msd *)tlvh;",
          "2518:    if ((CHECK_FLAG(node->flags, LS_NODE_MSD))",
          "2519:        && (node->msd == msd->value))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2524:    if (TLV_BODY_SIZE(tlvh) < RI_SR_TLV_NODE_MSD_SIZE)",
          "2525:     break;",
          "",
          "---------------"
        ]
      }
    }
  ]
}