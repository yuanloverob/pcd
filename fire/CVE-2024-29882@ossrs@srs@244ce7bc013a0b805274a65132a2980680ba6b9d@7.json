{
  "cve_id": "CVE-2024-29882",
  "cve_desc": "SRS is a simple, high-efficiency, real-time video server. SRS's `/api/v1/vhosts/vid-<id>?callback=<payload>` endpoint didn't filter the callback function name which led to injecting malicious javascript payloads and executing XSS ( Cross-Site Scripting). This vulnerability is fixed in 5.0.210 and 6.0.121.",
  "repo": "ossrs/srs",
  "patch_hash": "244ce7bc013a0b805274a65132a2980680ba6b9d",
  "patch_info": {
    "commit_hash": "244ce7bc013a0b805274a65132a2980680ba6b9d",
    "repo": "ossrs/srs",
    "commit_url": "https://github.com/ossrs/srs/commit/244ce7bc013a0b805274a65132a2980680ba6b9d",
    "files": [
      "trunk/configure",
      "trunk/doc/CHANGELOG.md",
      "trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp",
      "trunk/src/kernel/srs_kernel_error.hpp",
      "trunk/src/protocol/srs_protocol_http_conn.cpp",
      "trunk/src/utest/srs_utest_protocol3.cpp",
      "trunk/src/utest/srs_utest_protocol3.hpp"
    ],
    "message": "Merge pull request from GHSA-gv9r-qcjc-5hj7\n\n* Filter JSONP callback function name. v5.0.210,v6.0.121\n\n* Add utest.\n\n* Refine utest",
    "before_after_code_files": [
      "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
      "trunk/src/kernel/srs_kernel_error.hpp||trunk/src/kernel/srs_kernel_error.hpp",
      "trunk/src/protocol/srs_protocol_http_conn.cpp||trunk/src/protocol/srs_protocol_http_conn.cpp",
      "trunk/src/utest/srs_utest_protocol3.cpp||trunk/src/utest/srs_utest_protocol3.cpp",
      "trunk/src/utest/srs_utest_protocol3.hpp||trunk/src/utest/srs_utest_protocol3.hpp"
    ]
  },
  "patch_diff": {
    "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
      "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       5",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    209",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    210",
      "",
      "---------------"
    ],
    "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
      "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       6",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    120",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    121",
      "",
      "---------------"
    ],
    "trunk/src/kernel/srs_kernel_error.hpp||trunk/src/kernel/srs_kernel_error.hpp": [
      "File: trunk/src/kernel/srs_kernel_error.hpp -> trunk/src/kernel/srs_kernel_error.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "332:     XX(ERROR_STREAM_CASTER_HEVC_VPS        , 4054, \"CasterTsHevcVps\", \"Invalid ts HEVC VPS for stream caster\") \\",
      "333:     XX(ERROR_STREAM_CASTER_HEVC_SPS        , 4055, \"CasterTsHevcSps\", \"Invalid ts HEVC SPS for stream caster\") \\",
      "334:     XX(ERROR_STREAM_CASTER_HEVC_PPS        , 4056, \"CasterTsHevcPps\", \"Invalid ts HEVC PPS for stream caster\") \\",
      "",
      "[Removed Lines]",
      "335:     XX(ERROR_STREAM_CASTER_HEVC_FORMAT     , 4057, \"CasterTsHevcFormat\", \"Invalid ts HEVC Format for stream caster\")",
      "",
      "[Added Lines]",
      "335:     XX(ERROR_STREAM_CASTER_HEVC_FORMAT     , 4057, \"CasterTsHevcFormat\", \"Invalid ts HEVC Format for stream caster\") \\",
      "336:     XX(ERROR_HTTP_JSONP                    , 4058, \"HttpJsonp\", \"Invalid callback for JSONP\")",
      "",
      "---------------"
    ],
    "trunk/src/protocol/srs_protocol_http_conn.cpp||trunk/src/protocol/srs_protocol_http_conn.cpp": [
      "File: trunk/src/protocol/srs_protocol_http_conn.cpp -> trunk/src/protocol/srs_protocol_http_conn.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "332:     }",
      "333: }",
      "335: srs_error_t SrsHttpMessage::set_url(string url, bool allow_jsonp)",
      "336: {",
      "337:     srs_error_t err = srs_success;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "336: bool srs_is_valid_jsonp_callback(std::string callback)",
      "337: {",
      "338:     for (int i = 0; i < (int)callback.length(); i++) {",
      "339:         char ch = callback.at(i);",
      "340:         bool is_alpha_beta = (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');",
      "341:         bool is_number = (ch >= '0' && ch <= '9');",
      "342:         if (!is_alpha_beta && !is_number && ch != '.' && ch != '_' && ch != '-') {",
      "343:             return false;",
      "344:         }",
      "345:     }",
      "346:     return true;",
      "347: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "375:     if (allow_jsonp) {",
      "379:         if (jsonp) {",
      "380:             jsonp_method = query_get(\"method\");",
      "381:         }",
      "382:     }",
      "384:     return err;",
      "",
      "[Removed Lines]",
      "376:         if (!query_get(\"callback\").empty()) {",
      "377:             jsonp = true;",
      "378:         }",
      "",
      "[Added Lines]",
      "390:         string callback= query_get(\"callback\");",
      "391:         jsonp = !callback.empty();",
      "397:         if (!srs_is_valid_jsonp_callback(callback)) {",
      "398:             return srs_error_new(ERROR_HTTP_JSONP, \"invalid callback=%s\", callback.c_str());",
      "399:         }",
      "",
      "---------------"
    ],
    "trunk/src/utest/srs_utest_protocol3.cpp||trunk/src/utest/srs_utest_protocol3.cpp": [
      "File: trunk/src/utest/srs_utest_protocol3.cpp -> trunk/src/utest/srs_utest_protocol3.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <srs_utest_protocol3.hpp>",
      "8: using namespace std;",
      "10: #include <srs_kernel_error.hpp>",
      "11: #include <srs_core_autofree.hpp>",
      "12: #include <srs_protocol_utility.hpp>",
      "13: #include <srs_protocol_rtmp_msg_array.hpp>",
      "14: #include <srs_protocol_rtmp_stack.hpp>",
      "15: #include <srs_kernel_utility.hpp>",
      "16: #include <srs_app_st.hpp>",
      "17: #include <srs_protocol_amf0.hpp>",
      "18: #include <srs_protocol_rtmp_stack.hpp>",
      "19: #include <srs_protocol_http_conn.hpp>",
      "20: #include <srs_protocol_protobuf.hpp>",
      "21: #include <srs_kernel_buffer.hpp>",
      "23: extern bool srs_is_valid_jsonp_callback(std::string callback);",
      "25: VOID TEST(ProtocolHttpTest, JsonpCallbackName)",
      "26: {",
      "27:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"\"));",
      "28:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"callback\"));",
      "29:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback\"));",
      "30:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback1234567890\"));",
      "31:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback-1234567890\"));",
      "32:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback_1234567890\"));",
      "33:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback.1234567890\"));",
      "34:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback1234567890-_.\"));",
      "35:     EXPECT_FALSE(srs_is_valid_jsonp_callback(\"callback()//\"));",
      "36:     EXPECT_FALSE(srs_is_valid_jsonp_callback(\"callback!\"));",
      "37:     EXPECT_FALSE(srs_is_valid_jsonp_callback(\"callback;\"));",
      "38: }",
      "",
      "---------------"
    ],
    "trunk/src/utest/srs_utest_protocol3.hpp||trunk/src/utest/srs_utest_protocol3.hpp": [
      "File: trunk/src/utest/srs_utest_protocol3.hpp -> trunk/src/utest/srs_utest_protocol3.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7: #ifndef SRS_UTEST_PROTOCOL3_HPP",
      "8: #define SRS_UTEST_PROTOCOL3_HPP",
      "11: #include <srs_utest_protocol3.hpp>",
      "13: #include <srs_utest_protocol.hpp>",
      "15: #endif",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5eb802dacac4e685989446e51d0ed5c594f86258",
      "candidate_info": {
        "commit_hash": "5eb802dacac4e685989446e51d0ed5c594f86258",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/5eb802dacac4e685989446e51d0ed5c594f86258",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_conn.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "Support x509 certification chiain in single pem file. v5.0.211 v6.0.122 (#4033)\n\nFix #3967 There is an API `SSL_use_certificate_chain_file`, which can load the\ncertification chain and also single certificate.\n\n---------\n\nCo-authored-by: winlin <winlinvip@gmail.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_conn.cpp||trunk/src/app/srs_app_conn.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_conn.cpp||trunk/src/app/srs_app_conn.cpp": [
          "File: trunk/src/app/srs_app_conn.cpp -> trunk/src/app/srs_app_conn.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "772:     int r0, r1, size;",
          "776:         return srs_error_new(ERROR_HTTPS_KEY_CRT, \"use cert %s\", crt_file.c_str());",
          "777:     }",
          "",
          "[Removed Lines]",
          "775:     if ((r0 = SSL_use_certificate_file(ssl, crt_file.c_str(), SSL_FILETYPE_PEM)) != 1) {",
          "",
          "[Added Lines]",
          "775:     if ((r0 = SSL_use_certificate_chain_file(ssl, crt_file.c_str())) != 1) {",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    210",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    211",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    121",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    122",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c2d75ca3956220dbd9a833867630b622cd4e2f13",
      "candidate_info": {
        "commit_hash": "c2d75ca3956220dbd9a833867630b622cd4e2f13",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/c2d75ca3956220dbd9a833867630b622cd4e2f13",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_http_stream.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "HLS:  Fix error when stream has extension. #4215 v5.0.217 v6.0.158 (#4216)\n\n---------\n\nCo-authored-by: Jacob Su <suzp1984@gmail.com>\nCo-authored-by: winlin <winlinvip@gmail.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_http_stream.cpp||trunk/src/app/srs_app_http_stream.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_http_stream.cpp||trunk/src/app/srs_app_http_stream.cpp": [
          "File: trunk/src/app/srs_app_http_stream.cpp -> trunk/src/app/srs_app_http_stream.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "632:     req->stream = srs_path_basename(r->path());",
          "635:     req->ip = hc->remote_ip();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "634:     req->stream = srs_path_filename(req->stream);",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    216",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    217",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    157",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    158",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eb788a62ad6fa81bca15f73f8feb873fb1b139cb",
      "candidate_info": {
        "commit_hash": "eb788a62ad6fa81bca15f73f8feb873fb1b139cb",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/eb788a62ad6fa81bca15f73f8feb873fb1b139cb",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_http_stream.cpp",
          "trunk/src/app/srs_app_http_stream.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/kernel/srs_kernel_ts.cpp",
          "trunk/src/kernel/srs_kernel_ts.hpp"
        ],
        "message": "HTTP-TS: Support guess_has_av for audio only stream. v6.0.141 (#4063)\n\n## Describe ##\nhttp_remux feature support config `has_audio`, `has_video` &\n`guess_has_av` prop.\n\n\nhttps://github.com/ossrs/srs/blob/282d94d7bbfa127868caab401bb7616e26d4c54d/trunk/src/app/srs_app_http_stream.cpp#L630-L632\n\nTake `http_flv` as example, `srs` can accept both RTMP streams with only\naudio, only video or both audio and video streams. It is controlled by\nabove three properties.\n\nBut `guess_has_av` is not implemented by `http_ts`. The problem is that\nif I want publish a RTMP stream with audio or video track, the\n`has_audio` and `has_video`, which are default true/on, must to be\nconfig to match the RTMP stream, otherwise the `mpegts.js` player can't\nplay the `http-ts` stream.\n\n## How to reproduce  ##\n\n1. `export SRS_VHOST_HTTP_REMUX_HAS_AUDIO=on; export\nSRS_VHOST_HTTP_REMUX_HAS_VIDEO=on; export\nSRS_VHOST_HTTP_REMUX_GUESS_HAS_AV=on; ./objs/srs -c\nconf/http.ts.live.conf`\n2. publish rtmp stream without video: `ffmpeg -re -stream_loop -1 -i\nsrs/trunk/doc/source.200kbps.768x320.flv -vn -acodec copy -f flv\nrtmp://localhost/live/livestream`\n3. open chrome browser, open\n`http://localhost:8080/players/srs_player.html?schema=http`, go to\n`LivePlayer`, input URL: `http://localhost:8080/live/livestream.ts`,\nclick play.\n4. the `http://localhost:8080/live/livestream.ts` can not play.\n\n## Solution ##\n\nLet `http-ts` support `guess_has_av`, `http-flv` already supported. The\n`guess_has_av` default value is ture/on, so the `http-ts|flv` can play\nany streams with audio, video or both.\n\n---------\n\nCo-authored-by: Winlin <winlinvip@gmail.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_http_stream.cpp||trunk/src/app/srs_app_http_stream.cpp",
          "trunk/src/app/srs_app_http_stream.hpp||trunk/src/app/srs_app_http_stream.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/kernel/srs_kernel_ts.cpp||trunk/src/kernel/srs_kernel_ts.cpp",
          "trunk/src/kernel/srs_kernel_ts.hpp||trunk/src/kernel/srs_kernel_ts.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_http_stream.cpp||trunk/src/app/srs_app_http_stream.cpp": [
          "File: trunk/src/app/srs_app_http_stream.cpp -> trunk/src/app/srs_app_http_stream.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "257: {",
          "258:     enc->set_has_audio(v);",
          "259: }",
          "260: void SrsTsStreamEncoder::set_has_video(bool v)",
          "261: {",
          "262:     enc->set_has_video(v);",
          "263: }",
          "265: SrsFlvStreamEncoder::SrsFlvStreamEncoder()",
          "266: {",
          "267:     header_written = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "266: void SrsTsStreamEncoder::set_guess_has_av(bool v)",
          "267: {",
          "268:     enc->set_guess_has_av(v);",
          "269: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "677:         enc_raw = new SrsTsStreamEncoder();",
          "678:         ((SrsTsStreamEncoder*)enc_raw)->set_has_audio(has_audio);",
          "679:         ((SrsTsStreamEncoder*)enc_raw)->set_has_video(has_video);",
          "680:     } else {",
          "681:         return srs_error_new(ERROR_HTTP_LIVE_STREAM_EXT, \"invalid pattern=%s\", entry->pattern.c_str());",
          "682:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "686:         ((SrsTsStreamEncoder*)enc_raw)->set_guess_has_av(guess_has_av);",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_http_stream.hpp||trunk/src/app/srs_app_http_stream.hpp": [
          "File: trunk/src/app/srs_app_http_stream.hpp -> trunk/src/app/srs_app_http_stream.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "114: public:",
          "115:     void set_has_audio(bool v);",
          "116:     void set_has_video(bool v);",
          "117: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:     void set_guess_has_av(bool v);",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    140",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    141",
          "",
          "---------------"
        ],
        "trunk/src/kernel/srs_kernel_ts.cpp||trunk/src/kernel/srs_kernel_ts.cpp": [
          "File: trunk/src/kernel/srs_kernel_ts.cpp -> trunk/src/kernel/srs_kernel_ts.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "3176:     context = new SrsTsContext();",
          "3177:     tscw = NULL;",
          "3178:     has_audio_ = has_video_ = true;",
          "3179: }",
          "3181: SrsTsTransmuxer::~SrsTsTransmuxer()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3179:     guess_has_av_ = true;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3189: void SrsTsTransmuxer::set_has_audio(bool v)",
          "3190: {",
          "3191:     has_audio_ = v;",
          "3192: }",
          "3194: void SrsTsTransmuxer::set_has_video(bool v)",
          "3195: {",
          "3196:     has_video_ = v;",
          "3197: }",
          "3199: srs_error_t SrsTsTransmuxer::initialize(ISrsStreamWriter* fw)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3194:     if (tscw != NULL && !v) {",
          "3195:         tscw->set_acodec(SrsAudioCodecIdForbidden);",
          "3196:     }",
          "3203:     if (tscw != NULL && !v) {",
          "3204:         tscw->set_vcodec(SrsVideoCodecIdForbidden);",
          "3205:     }",
          "3206: }",
          "3208: void SrsTsTransmuxer::set_guess_has_av(bool v)",
          "3209: {",
          "3210:     guess_has_av_ = v;",
          "3211:     if (tscw != NULL && v) {",
          "3212:         tscw->set_acodec(SrsAudioCodecIdForbidden);",
          "3213:         tscw->set_vcodec(SrsVideoCodecIdForbidden);",
          "3214:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3211:     SrsAudioCodecId acodec = has_audio_ ? SrsAudioCodecIdAAC : SrsAudioCodecIdForbidden;",
          "3212:     SrsVideoCodecId vcodec = has_video_ ? SrsVideoCodecIdAVC : SrsVideoCodecIdForbidden;",
          "3214:     srs_freep(tscw);",
          "3215:     tscw = new SrsTsContextWriter(fw, context, acodec, vcodec);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3232:     if (guess_has_av_) {",
          "3233:         acodec = SrsAudioCodecIdForbidden;",
          "3234:         vcodec = SrsVideoCodecIdForbidden;",
          "3235:     }",
          "",
          "---------------"
        ],
        "trunk/src/kernel/srs_kernel_ts.hpp||trunk/src/kernel/srs_kernel_ts.hpp": [
          "File: trunk/src/kernel/srs_kernel_ts.hpp -> trunk/src/kernel/srs_kernel_ts.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1333:     ISrsStreamWriter* writer;",
          "1334:     bool has_audio_;",
          "1335:     bool has_video_;",
          "1336: private:",
          "1337:     SrsFormat* format;",
          "1338:     SrsTsMessageCache* tsmc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1336:     bool guess_has_av_;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1344: public:",
          "1345:     void set_has_audio(bool v);",
          "1346:     void set_has_video(bool v);",
          "1347: public:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1348:     void set_guess_has_av(bool v);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2a7f0090b5d405bf7b1f84cc613d3a9787cb41c6",
      "candidate_info": {
        "commit_hash": "2a7f0090b5d405bf7b1f84cc613d3a9787cb41c6",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/2a7f0090b5d405bf7b1f84cc613d3a9787cb41c6",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_rtmp_conn.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "replace values with enums. v6.0.166 (#4303)\n\n---------\n\nCo-authored-by: Haibo Chen <495810242@qq.com>\nCo-authored-by: john <hondaxiao@tencent.com>\nCo-authored-by: winlin <winlinvip@gmail.com>\n\n---------\n\nCo-authored-by: Haibo Chen(\u9648\u6d77\u535a) <495810242@qq.com>\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_rtmp_conn.cpp||trunk/src/app/srs_app_rtmp_conn.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_rtmp_conn.cpp||trunk/src/app/srs_app_rtmp_conn.cpp": [
          "File: trunk/src/app/srs_app_rtmp_conn.cpp -> trunk/src/app/srs_app_rtmp_conn.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "409:         return srs_error_wrap(err, \"rtmp: set in window ack size\");",
          "410:     }",
          "413:         return srs_error_wrap(err, \"rtmp: set peer bandwidth\");",
          "414:     }",
          "",
          "[Removed Lines]",
          "412:     if ((err = rtmp->set_peer_bandwidth((int)(2.5 * 1000 * 1000), 2)) != srs_success) {",
          "",
          "[Added Lines]",
          "412:     if ((err = rtmp->set_peer_bandwidth((int)(2.5 * 1000 * 1000), SrsPeerBandwidthDynamic)) != srs_success) {",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    222",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    223",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    164",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    166",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2b89f7e7e86bb6672463d75de43c467cd9a10d9a",
      "candidate_info": {
        "commit_hash": "2b89f7e7e86bb6672463d75de43c467cd9a10d9a",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/2b89f7e7e86bb6672463d75de43c467cd9a10d9a",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_dvr.cpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "Dvr: support h265 flv fragments. v6.0.162 v7.0.24 (#4296)\n\n1. Issue\nWhen segmenting H.265 encoded FLV files using a DVR, the system does not\ncreate FLV segments at regular intervals as specified by the\n`dvr_wait_keyframe` configuration.\n\n2. Configure dvr.segment.conf\n```config\n\nlisten              1935;\nmax_connections     1000;\ndaemon              off;\nsrs_log_tank        console;\nvhost __defaultVhost__ {\n    dvr {\n        enabled      on;\n        dvr_path     ./objs/nginx/html/[app]/[stream].[timestamp].flv;\n        dvr_plan     segment;\n        dvr_duration    30;\n        dvr_wait_keyframe       on;\n    }\n}\n```\n\n3. Stream Push Testing\nDomestic FFmpeg version (codecId=12)\n```sh\nhevc-12-ffmpeg -stream_loop -1 -re -i 264_aac.flv -c:v libx265 -preset fast -b:v 2000k -maxrate 2000k -bufsize 4000k -bf 0 -c:a aac -b:a 128k -ar 44100 -ac 2 -f flv rtmp://localhost/live/livestream\n```\nFFmpeg version 6.0 or higher (supports `enhanced RTMP`)\n```sh\nffmpeg -stream_loop -1 -re -i 264_aac.flv -c:v libx265 -preset fast -b:v 2000k -maxrate 2000k -bufsize 4000k -bf 0 -c:a aac -b:a 128k -ar 44100 -ac 2 -f flv rtmp://localhost/live/livestream\n```\n\nOBS streaming (version 30.0 or above supports `enhanced RTMP`)\n\n![image](https://github.com/user-attachments/assets/fd2806c3-b0e3-44c4-a2d5-e04e6e5386ff)\n\n![image](https://github.com/user-attachments/assets/15ef9c45-e15a-426e-b70c-d4bdd5dc8055)\n\nSRS player (supports both `enhanced RTMP` and `codec=12 FLV`)\n```\nhttp://127.0.0.1:8080/players/srs_player.html\n```\nDomestic ffplay (supports `codec=12 FLV`)\n```\nhevc-12-ffplay http://127.0.0.1:8080/live/livestream.1740311867638.flv\n```\nffplay (versions above ffmpeg 6.0 support `enhanced RTMP`)\n```\nffplay http://127.0.0.1:8080/live/livestream.1740311867638.flv\n```\n\n![image](https://github.com/user-attachments/assets/711a4182-418c-4134-934f-cba41a08e06f)\n\n---------\n\n`TRANS_BY_GPT4`\n\n---------\n\nCo-authored-by: Haibo Chen <495810242@qq.com>\nCo-authored-by: john <hondaxiao@tencent.com>\nCo-authored-by: winlin <winlinvip@gmail.com>\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_dvr.cpp||trunk/src/app/srs_app_dvr.cpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_dvr.cpp||trunk/src/app/srs_app_dvr.cpp": [
          "File: trunk/src/app/srs_app_dvr.cpp -> trunk/src/app/srs_app_dvr.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "869:         char* payload = msg->payload;",
          "870:         int size = msg->size;",
          "872:         if (!is_key_frame) {",
          "873:             return err;",
          "874:         }",
          "",
          "[Removed Lines]",
          "871:         bool is_key_frame = SrsFlvVideo::h264(payload, size) && SrsFlvVideo::keyframe(payload, size) && !SrsFlvVideo::sh(payload, size);",
          "",
          "[Added Lines]",
          "872:         bool codec_ok = SrsFlvVideo::h264(payload, size);",
          "873: #ifdef SRS_H265",
          "874:         codec_ok = codec_ok? true : SrsFlvVideo::hevc(payload, size);",
          "875: #endif",
          "877:         bool is_key_frame = codec_ok && SrsFlvVideo::keyframe(payload, size) && !SrsFlvVideo::sh(payload, size);",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    161",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    162",
          "",
          "---------------"
        ]
      }
    }
  ]
}