{
  "cve_id": "CVE-2022-41908",
  "cve_desc": "TensorFlow is an open source platform for machine learning. An input `token` that is not a UTF-8 bytestring will trigger a `CHECK` fail in `tf.raw_ops.PyFunc`. We have patched the issue in GitHub commit 9f03a9d3bafe902c1e6beb105b2f24172f238645. The fix will be included in TensorFlow 2.11. We will also cherrypick this commit on TensorFlow 2.10.1, 2.9.3, and TensorFlow 2.8.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "9f03a9d3bafe902c1e6beb105b2f24172f238645",
  "patch_info": {
    "commit_hash": "9f03a9d3bafe902c1e6beb105b2f24172f238645",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/9f03a9d3bafe902c1e6beb105b2f24172f238645",
    "files": [
      "tensorflow/python/lib/core/py_func.cc",
      "tensorflow/python/ops/script_ops_test.py"
    ],
    "message": "Replace CHECK with returning an InternalError on failing to create python tuple\n\nReturns InternalError if a non UTF-8 string is passed in as token, instead of crashing.\n\nPiperOrigin-RevId: 478123498",
    "before_after_code_files": [
      "tensorflow/python/lib/core/py_func.cc||tensorflow/python/lib/core/py_func.cc",
      "tensorflow/python/ops/script_ops_test.py||tensorflow/python/ops/script_ops_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/python/lib/core/py_func.cc||tensorflow/python/lib/core/py_func.cc": [
      "File: tensorflow/python/lib/core/py_func.cc -> tensorflow/python/lib/core/py_func.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "119:     PyList_SetItem(lst, i, arg);",
      "120:   }",
      "123:   return OkStatus();",
      "124: }",
      "",
      "[Removed Lines]",
      "122:   CHECK(*tuple);",
      "",
      "[Added Lines]",
      "122:   if (*tuple == nullptr) {",
      "123:     return errors::Internal(",
      "124:         \"Failed to create python tuple. Please make sure `token` is a \"",
      "125:         \"well-formed UTF-8 string.\");",
      "126:   }",
      "",
      "---------------"
    ],
    "tensorflow/python/ops/script_ops_test.py||tensorflow/python/ops/script_ops_test.py": [
      "File: tensorflow/python/ops/script_ops_test.py -> tensorflow/python/ops/script_ops_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: from tensorflow.python.eager import def_function",
      "18: from tensorflow.python.framework import constant_op",
      "19: from tensorflow.python.framework import dtypes",
      "20: from tensorflow.python.framework import test_util",
      "21: from tensorflow.python.ops import resource_variable_ops",
      "22: from tensorflow.python.ops import script_ops",
      "23: from tensorflow.python.ops.script_ops import numpy_function",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20: from tensorflow.python.framework import errors",
      "22: from tensorflow.python.ops import gen_script_ops",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "103:     expect_result = constant_op.constant(3, dtypes.int32)",
      "104:     self.assertAllEqual(actual_result, expect_result)",
      "107: if __name__ == \"__main__\":",
      "108:   test.main()",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "108:   @test_util.run_in_graph_and_eager_modes",
      "109:   def test_fail_on_non_utf8_token(self):",
      "110:     value = constant_op.constant(value=[1, 2])",
      "111:     token = b\"\\xb0\"",
      "112:     data_type = [dtypes.int32]",
      "113:     with self.assertRaises((errors.InternalError, UnicodeDecodeError)):",
      "114:       self.evaluate(",
      "115:           gen_script_ops.py_func(input=[value], token=token, Tout=data_type))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6fc67e408f239384d26acabc34d287911af92dc8",
      "candidate_info": {
        "commit_hash": "6fc67e408f239384d26acabc34d287911af92dc8",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/6fc67e408f239384d26acabc34d287911af92dc8",
        "files": [
          "tensorflow/python/lib/core/py_func.cc",
          "tensorflow/python/ops/script_ops_test.py"
        ],
        "message": "Replace CHECK with returning an InternalError on failing to create python tuple\n\nReturns InternalError if a non UTF-8 string is passed in as token, instead of crashing.\n\nPiperOrigin-RevId: 478123498",
        "before_after_code_files": [
          "tensorflow/python/lib/core/py_func.cc||tensorflow/python/lib/core/py_func.cc",
          "tensorflow/python/ops/script_ops_test.py||tensorflow/python/ops/script_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/python/lib/core/py_func.cc||tensorflow/python/lib/core/py_func.cc",
            "tensorflow/python/ops/script_ops_test.py||tensorflow/python/ops/script_ops_test.py"
          ],
          "candidate": [
            "tensorflow/python/lib/core/py_func.cc||tensorflow/python/lib/core/py_func.cc",
            "tensorflow/python/ops/script_ops_test.py||tensorflow/python/ops/script_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/python/lib/core/py_func.cc||tensorflow/python/lib/core/py_func.cc": [
          "File: tensorflow/python/lib/core/py_func.cc -> tensorflow/python/lib/core/py_func.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:     PyList_SetItem(lst, i, arg);",
          "120:   }",
          "124: }",
          "126: bool IsSingleNone(PyObject* obj) {",
          "",
          "[Removed Lines]",
          "122:   CHECK(*tuple);",
          "123:   return Status::OK();",
          "",
          "[Added Lines]",
          "122:   if (*tuple == nullptr) {",
          "123:     return errors::Internal(",
          "124:         \"Failed to create python tuple. Please make sure `token` is a \"",
          "125:         \"well-formed UTF-8 string.\");",
          "126:   }",
          "127:   return OkStatus();",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/script_ops_test.py||tensorflow/python/ops/script_ops_test.py": [
          "File: tensorflow/python/ops/script_ops_test.py -> tensorflow/python/ops/script_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: from tensorflow.python.eager import def_function",
          "18: from tensorflow.python.framework import dtypes",
          "19: from tensorflow.python.framework import test_util",
          "20: from tensorflow.python.framework import constant_op",
          "21: from tensorflow.python.ops import script_ops",
          "22: from tensorflow.python.ops.script_ops import numpy_function",
          "23: from tensorflow.python.platform import test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: from tensorflow.python.framework import errors",
          "22: from tensorflow.python.ops import gen_script_ops",
          "23: from tensorflow.python.ops import resource_variable_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "87:                      2)  # as stateful, func is guaranteed to execute twice",
          "90: if __name__ == \"__main__\":",
          "91:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93: class PyFunctionTest(test.TestCase):",
          "95:   @test_util.run_in_graph_and_eager_modes",
          "96:   def test_variable_arguments(self):",
          "98:     def plus(a, b):",
          "99:       return a + b",
          "101:     v1 = resource_variable_ops.ResourceVariable(1)",
          "102:     self.evaluate(v1.initializer)",
          "104:     actual_result = script_ops.eager_py_func(plus, [v1, 2], dtypes.int32)",
          "105:     expect_result = constant_op.constant(3, dtypes.int32)",
          "106:     self.assertAllEqual(actual_result, expect_result)",
          "108:   @test_util.run_in_graph_and_eager_modes",
          "109:   def test_fail_on_non_utf8_token(self):",
          "110:     value = constant_op.constant(value=[1, 2])",
          "111:     token = b\"\\xb0\"",
          "112:     data_type = [dtypes.int32]",
          "113:     with self.assertRaises((errors.InternalError, UnicodeDecodeError)):",
          "114:       self.evaluate(",
          "115:           gen_script_ops.py_func(input=[value], token=token, Tout=data_type))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fad1f79726ecdd53c603ce586b54f48d8ed274ca",
      "candidate_info": {
        "commit_hash": "fad1f79726ecdd53c603ce586b54f48d8ed274ca",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/fad1f79726ecdd53c603ce586b54f48d8ed274ca",
        "files": [
          "tensorflow/python/lib/core/py_func.cc",
          "tensorflow/python/ops/script_ops_test.py"
        ],
        "message": "Replace CHECK with returning an InternalError on failing to create python tuple\n\nReturns InternalError if a non UTF-8 string is passed in as token, instead of crashing.\n\nPiperOrigin-RevId: 478123498",
        "before_after_code_files": [
          "tensorflow/python/lib/core/py_func.cc||tensorflow/python/lib/core/py_func.cc",
          "tensorflow/python/ops/script_ops_test.py||tensorflow/python/ops/script_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/python/lib/core/py_func.cc||tensorflow/python/lib/core/py_func.cc",
            "tensorflow/python/ops/script_ops_test.py||tensorflow/python/ops/script_ops_test.py"
          ],
          "candidate": [
            "tensorflow/python/lib/core/py_func.cc||tensorflow/python/lib/core/py_func.cc",
            "tensorflow/python/ops/script_ops_test.py||tensorflow/python/ops/script_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/python/lib/core/py_func.cc||tensorflow/python/lib/core/py_func.cc": [
          "File: tensorflow/python/lib/core/py_func.cc -> tensorflow/python/lib/core/py_func.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:     PyList_SetItem(lst, i, arg);",
          "120:   }",
          "122:   CHECK(*tuple);",
          "123:   return Status::OK();",
          "124: }",
          "126: bool IsSingleNone(PyObject* obj) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "122: <<<<<<< HEAD",
          "125: =======",
          "126:   if (*tuple == nullptr) {",
          "127:     return errors::Internal(",
          "128:         \"Failed to create python tuple. Please make sure `token` is a \"",
          "129:         \"well-formed UTF-8 string.\");",
          "130:   }",
          "131:   return OkStatus();",
          "132: >>>>>>> 9f03a9d3baf (Replace CHECK with returning an InternalError on failing to create python tuple)",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/script_ops_test.py||tensorflow/python/ops/script_ops_test.py": [
          "File: tensorflow/python/ops/script_ops_test.py -> tensorflow/python/ops/script_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: \"\"\"Tests for script operations.\"\"\"",
          "17: from tensorflow.python.framework import dtypes",
          "18: from tensorflow.python.framework import test_util",
          "19: from tensorflow.python.framework import constant_op",
          "20: from tensorflow.python.ops import script_ops",
          "21: from tensorflow.python.platform import test",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: from tensorflow.python.framework import errors",
          "21: from tensorflow.python.ops import gen_script_ops",
          "22: from tensorflow.python.ops import resource_variable_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:     expect_result = constant_op.constant(3, dtypes.int32)",
          "34:     self.assertAllEqual(actual_result, expect_result)",
          "37: if __name__ == \"__main__\":",
          "38:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:   def test_stateless(self):",
          "40:     call_count = 0",
          "42:     def plus(a, b):",
          "43:       nonlocal call_count",
          "44:       call_count += 1",
          "45:       return a + b",
          "47:     @def_function.function",
          "48:     def numpy_func_stateless(a, b):",
          "49:       return numpy_function(plus, [a, b], dtypes.int32, stateful=False)",
          "51:     @def_function.function",
          "52:     def func_stateless(a, b):",
          "53:       sum1 = numpy_func_stateless(a, b)",
          "54:       sum2 = numpy_func_stateless(a, b)",
          "55:       return sum1 + sum2",
          "57:     self.evaluate(func_stateless(",
          "58:         constant_op.constant(1),",
          "59:         constant_op.constant(2),",
          "60:     ))",
          "62:     self.assertIn(call_count, (1, 2))  # as stateless, func may be deduplicated",
          "64:   def test_stateful(self):",
          "65:     call_count = 0",
          "67:     def plus(a, b):",
          "68:       nonlocal call_count",
          "69:       call_count += 1",
          "70:       return a + b",
          "72:     @def_function.function",
          "73:     def numpy_func_stateful(a, b):",
          "74:       return numpy_function(plus, [a, b], dtypes.int32, stateful=True)",
          "76:     @def_function.function",
          "77:     def func_stateful(a, b):",
          "78:       sum1 = numpy_func_stateful(a, b)",
          "79:       sum2 = numpy_func_stateful(a, b)",
          "80:       return sum1 + sum2",
          "82:     self.evaluate(func_stateful(",
          "83:         constant_op.constant(1),",
          "84:         constant_op.constant(2),",
          "85:     ))",
          "87:     self.assertEqual(call_count,",
          "88:                      2)  # as stateful, func is guaranteed to execute twice",
          "91: class PyFunctionTest(test.TestCase):",
          "93:   @test_util.run_in_graph_and_eager_modes",
          "94:   def test_variable_arguments(self):",
          "96:     def plus(a, b):",
          "97:       return a + b",
          "99:     v1 = resource_variable_ops.ResourceVariable(1)",
          "100:     self.evaluate(v1.initializer)",
          "102:     actual_result = script_ops.eager_py_func(plus, [v1, 2], dtypes.int32)",
          "103:     expect_result = constant_op.constant(3, dtypes.int32)",
          "104:     self.assertAllEqual(actual_result, expect_result)",
          "106:   @test_util.run_in_graph_and_eager_modes",
          "107:   def test_fail_on_non_utf8_token(self):",
          "108:     value = constant_op.constant(value=[1, 2])",
          "109:     token = b\"\\xb0\"",
          "110:     data_type = [dtypes.int32]",
          "111:     with self.assertRaises((errors.InternalError, UnicodeDecodeError)):",
          "112:       self.evaluate(",
          "113:           gen_script_ops.py_func(input=[value], token=token, Tout=data_type))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "617c07209e40a7d803a17540c969a1e31ddd3c6a",
      "candidate_info": {
        "commit_hash": "617c07209e40a7d803a17540c969a1e31ddd3c6a",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/617c07209e40a7d803a17540c969a1e31ddd3c6a",
        "files": [
          "tensorflow/python/lib/core/py_func.cc",
          "tensorflow/python/ops/script_ops_test.py"
        ],
        "message": "Replace CHECK with returning an InternalError on failing to create python tuple\n\nReturns InternalError if a non UTF-8 string is passed in as token, instead of crashing.\n\nPiperOrigin-RevId: 478123498",
        "before_after_code_files": [
          "tensorflow/python/lib/core/py_func.cc||tensorflow/python/lib/core/py_func.cc",
          "tensorflow/python/ops/script_ops_test.py||tensorflow/python/ops/script_ops_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/python/lib/core/py_func.cc||tensorflow/python/lib/core/py_func.cc",
            "tensorflow/python/ops/script_ops_test.py||tensorflow/python/ops/script_ops_test.py"
          ],
          "candidate": [
            "tensorflow/python/lib/core/py_func.cc||tensorflow/python/lib/core/py_func.cc",
            "tensorflow/python/ops/script_ops_test.py||tensorflow/python/ops/script_ops_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/python/lib/core/py_func.cc||tensorflow/python/lib/core/py_func.cc": [
          "File: tensorflow/python/lib/core/py_func.cc -> tensorflow/python/lib/core/py_func.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:     PyList_SetItem(lst, i, arg);",
          "120:   }",
          "123:   return OkStatus();",
          "124: }",
          "",
          "[Removed Lines]",
          "122:   CHECK(*tuple);",
          "",
          "[Added Lines]",
          "122:   if (*tuple == nullptr) {",
          "123:     return errors::Internal(",
          "124:         \"Failed to create python tuple. Please make sure `token` is a \"",
          "125:         \"well-formed UTF-8 string.\");",
          "126:   }",
          "",
          "---------------"
        ],
        "tensorflow/python/ops/script_ops_test.py||tensorflow/python/ops/script_ops_test.py": [
          "File: tensorflow/python/ops/script_ops_test.py -> tensorflow/python/ops/script_ops_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: from tensorflow.python.eager import def_function",
          "18: from tensorflow.python.framework import constant_op",
          "19: from tensorflow.python.framework import dtypes",
          "20: from tensorflow.python.framework import test_util",
          "21: from tensorflow.python.ops import resource_variable_ops",
          "22: from tensorflow.python.ops import script_ops",
          "23: from tensorflow.python.ops.script_ops import numpy_function",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: from tensorflow.python.framework import errors",
          "22: from tensorflow.python.ops import gen_script_ops",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "103:     expect_result = constant_op.constant(3, dtypes.int32)",
          "104:     self.assertAllEqual(actual_result, expect_result)",
          "107: if __name__ == \"__main__\":",
          "108:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "108:   @test_util.run_in_graph_and_eager_modes",
          "109:   def test_fail_on_non_utf8_token(self):",
          "110:     value = constant_op.constant(value=[1, 2])",
          "111:     token = b\"\\xb0\"",
          "112:     data_type = [dtypes.int32]",
          "113:     with self.assertRaises((errors.InternalError, UnicodeDecodeError)):",
          "114:       self.evaluate(",
          "115:           gen_script_ops.py_func(input=[value], token=token, Tout=data_type))",
          "",
          "---------------"
        ]
      }
    }
  ]
}