{
  "cve_id": "CVE-2020-36314",
  "cve_desc": "fr-archive-libarchive.c in GNOME file-roller through 3.38.0, as used by GNOME Shell and other software, allows Directory Traversal during extraction because it lacks a check of whether a file's parent is a symlink in certain complex situations. NOTE: this issue exists because of an incomplete fix for CVE-2020-11736.",
  "repo": "GNOME/file-roller",
  "patch_hash": "e970f4966bf388f6e7c277357c8b186c645683ae",
  "patch_info": {
    "commit_hash": "e970f4966bf388f6e7c277357c8b186c645683ae",
    "repo": "GNOME/file-roller",
    "commit_url": "https://gitlab.gnome.org/GNOME/file-roller/-/commit/e970f4966bf388f6e7c277357c8b186c645683ae",
    "files": [
      "src/fr-archive-libarchive.c"
    ],
    "message": "libarchive: Skip files with symlinks in parents\n\nCurrently, it is still possible that some files are extracted outside of\nthe destination dir in case of malicious archives. The checks from commit\n21dfcdbf can be still bypassed in certain cases. See GNOME/file-roller#108\nfor more details. After some investigation, I am convinced that it would be\nbest to simply disallow symlinks in parents. For example, `tar` fails to\nextract such files with the `ENOTDIR` error. Let's do the same here.\n\nFixes: https://gitlab.gnome.org/GNOME/file-roller/-/issues/108",
    "before_after_code_files": [
      "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
    ]
  },
  "patch_diff": {
    "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c": [
      "File: src/fr-archive-libarchive.c -> src/fr-archive-libarchive.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "697:  return success;",
      "698: }",
      "747: static gboolean",
      "752: {",
      "809:  GFile    *parent;",
      "810:  char    **components;",
      "811:  int       i;",
      "",
      "[Removed Lines]",
      "701: static gboolean",
      "702: _symlink_is_external_to_destination (GFile      *file,",
      "703:          const char *symlink,",
      "704:          GFile      *destination,",
      "705:          GHashTable *external_links);",
      "708: static gboolean",
      "709: _g_file_is_external_link (GFile      *file,",
      "710:      GFile      *destination,",
      "711:      GHashTable *external_links)",
      "712: {",
      "713:  GFileInfo *info;",
      "714:  gboolean   external;",
      "716:  if (g_hash_table_lookup (external_links, file) != NULL)",
      "717:   return TRUE;",
      "719:  info = g_file_query_info (file,",
      "720:       G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK \",\" G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET,",
      "721:       G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS,",
      "722:       NULL,",
      "723:       NULL);",
      "725:  if (info == NULL)",
      "726:   return FALSE;",
      "728:  external = FALSE;",
      "730:  if (g_file_info_get_is_symlink (info)) {",
      "731:   if (_symlink_is_external_to_destination (file,",
      "732:         g_file_info_get_symlink_target (info),",
      "733:         destination,",
      "734:         external_links))",
      "735:   {",
      "736:    g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
      "737:    external = TRUE;",
      "738:   }",
      "739:  }",
      "741:  g_object_unref (info);",
      "743:  return external;",
      "744: }",
      "748: _symlink_is_external_to_destination (GFile      *file,",
      "749:          const char *symlink,",
      "750:          GFile      *destination,",
      "751:          GHashTable *external_links)",
      "753:  gboolean  external = FALSE;",
      "754:  GFile    *parent;",
      "755:  char    **components;",
      "756:  int       i;",
      "758:  if ((file == NULL) || (symlink == NULL))",
      "759:   return FALSE;",
      "761:  if (symlink[0] == '/')",
      "762:   return TRUE;",
      "764:  parent = g_file_get_parent (file);",
      "765:  components = g_strsplit (symlink, \"/\", -1);",
      "766:  for (i = 0; components[i] != NULL; i++) {",
      "767:   char  *name = components[i];",
      "768:   GFile *tmp;",
      "770:   if ((name[0] == 0) || ((name[0] == '.') && (name[1] == 0)))",
      "771:    continue;",
      "773:   if ((name[0] == '.') && (name[1] == '.') && (name[2] == 0)) {",
      "774:    if (g_file_equal (parent, destination)) {",
      "775:     external = TRUE;",
      "776:     break;",
      "777:    }",
      "778:    else {",
      "779:     tmp = g_file_get_parent (parent);",
      "780:     g_object_unref (parent);",
      "781:     parent = tmp;",
      "782:    }",
      "783:   }",
      "784:   else {",
      "785:    tmp = g_file_get_child (parent, components[i]);",
      "786:    g_object_unref (parent);",
      "787:    parent = tmp;",
      "788:   }",
      "790:   if (_g_file_is_external_link (parent, destination, external_links)) {",
      "791:    external = TRUE;",
      "792:    break;",
      "793:   }",
      "794:  }",
      "796:  g_strfreev (components);",
      "797:  g_object_unref (parent);",
      "799:  return external;",
      "800: }",
      "803: static gboolean",
      "804: _g_path_is_external_to_destination (const char *relative_path,",
      "805:         GFile      *destination,",
      "806:         GHashTable *external_links)",
      "807: {",
      "808:  gboolean  external = FALSE;",
      "",
      "[Added Lines]",
      "701: _g_file_contains_symlinks_in_path (const char *relative_path,",
      "702:        GFile      *destination,",
      "703:        GHashTable *symlinks)",
      "705:  gboolean  contains_symlinks = FALSE;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "828:   g_object_unref (parent);",
      "829:   parent = tmp;",
      "833:    break;",
      "834:   }",
      "835:  }",
      "",
      "[Removed Lines]",
      "831:   if (_g_file_is_external_link (parent, destination, external_links)) {",
      "832:    external = TRUE;",
      "",
      "[Added Lines]",
      "728:   if (g_hash_table_contains (symlinks, parent)) {",
      "729:    contains_symlinks = TRUE;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "837:  g_strfreev (components);",
      "838:  g_object_unref (parent);",
      "841: }",
      "",
      "[Removed Lines]",
      "840:  return external;",
      "",
      "[Added Lines]",
      "737:  return contains_symlinks;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "851:  GHashTable           *checked_folders;",
      "852:  GHashTable           *created_files;",
      "853:  GHashTable           *folders_created_during_extraction;",
      "855:  struct archive       *a;",
      "856:  struct archive_entry *entry;",
      "857:  int                   r;",
      "",
      "[Removed Lines]",
      "854:  GHashTable           *external_links;",
      "",
      "[Added Lines]",
      "751:  GHashTable           *symlinks;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "868:  checked_folders = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
      "869:  created_files = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, g_object_unref);",
      "870:  folders_created_during_extraction = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
      "872:  fr_archive_progress_set_total_files (load_data->archive, extract_data->n_files_to_extract);",
      "874:  while ((r = archive_read_next_header (a, &entry)) == ARCHIVE_OK) {",
      "",
      "[Removed Lines]",
      "871:  external_links = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
      "",
      "[Added Lines]",
      "768:  symlinks = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "902:    continue;",
      "903:   }",
      "906:    fr_archive_progress_inc_completed_files (load_data->archive, 1);",
      "907:    fr_archive_progress_inc_completed_bytes (load_data->archive, archive_entry_size_is_set (entry) ? archive_entry_size (entry) : 0);",
      "908:    archive_read_data_skip (a);",
      "",
      "[Removed Lines]",
      "905:   if (_g_path_is_external_to_destination (relative_path, extract_data->destination, external_links)) {",
      "",
      "[Added Lines]",
      "808:   if (_g_file_contains_symlinks_in_path (relative_path, extract_data->destination, symlinks)) {",
      "809:    g_warning (\"Skipping '%s' file as it has symlink in parents.\", relative_path);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1123:       load_data->error = g_error_copy (local_error);",
      "1124:      g_clear_error (&local_error);",
      "1125:     }",
      "1128:     archive_read_data_skip (a);",
      "1129:     break;",
      "",
      "[Removed Lines]",
      "1126:     if ((load_data->error == NULL) && _symlink_is_external_to_destination (file, archive_entry_symlink (entry), extract_data->destination, external_links))",
      "1127:      g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
      "",
      "[Added Lines]",
      "1030:     if (load_data->error == NULL)",
      "1031:      g_hash_table_add (symlinks, g_object_ref (file));",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1159:  g_hash_table_unref (folders_created_during_extraction);",
      "1160:  g_hash_table_unref (created_files);",
      "1161:  g_hash_table_unref (checked_folders);",
      "1163:  archive_read_free (a);",
      "1164:  extract_data_free (extract_data);",
      "1165: }",
      "",
      "[Removed Lines]",
      "1162:  g_hash_table_unref (external_links);",
      "",
      "[Added Lines]",
      "1066:  g_hash_table_unref (symlinks);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4aaa7c65140762d5cf0df335a7bb795f242d18a8",
      "candidate_info": {
        "commit_hash": "4aaa7c65140762d5cf0df335a7bb795f242d18a8",
        "repo": "GNOME/file-roller",
        "commit_url": "https://github.com/GNOME/file-roller/commit/4aaa7c65140762d5cf0df335a7bb795f242d18a8",
        "files": [
          "src/fr-archive-libarchive.c"
        ],
        "message": "libarchive: Skip files with symlinks in parents\n\nCurrently, it is still possible that some files are extracted outside of\nthe destination dir in case of malicious archives. The checks from commit\n21dfcdbf can be still bypassed in certain cases. See GNOME/file-roller#108\nfor more details. After some investigation, I am convinced that it would be\nbest to simply disallow symlinks in parents. For example, `tar` fails to\nextract such files with the `ENOTDIR` error. Let's do the same here.\n\nFixes: https://gitlab.gnome.org/GNOME/file-roller/-/issues/108",
        "before_after_code_files": [
          "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
          ],
          "candidate": [
            "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
          ]
        }
      },
      "candidate_diff": {
        "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c": [
          "File: src/fr-archive-libarchive.c -> src/fr-archive-libarchive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "697:  return success;",
          "698: }",
          "747: static gboolean",
          "752: {",
          "809:  GFile    *parent;",
          "810:  char    **components;",
          "811:  int       i;",
          "",
          "[Removed Lines]",
          "701: static gboolean",
          "702: _symlink_is_external_to_destination (GFile      *file,",
          "703:          const char *symlink,",
          "704:          GFile      *destination,",
          "705:          GHashTable *external_links);",
          "708: static gboolean",
          "709: _g_file_is_external_link (GFile      *file,",
          "710:      GFile      *destination,",
          "711:      GHashTable *external_links)",
          "712: {",
          "713:  GFileInfo *info;",
          "714:  gboolean   external;",
          "716:  if (g_hash_table_lookup (external_links, file) != NULL)",
          "717:   return TRUE;",
          "719:  info = g_file_query_info (file,",
          "720:       G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK \",\" G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET,",
          "721:       G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS,",
          "722:       NULL,",
          "723:       NULL);",
          "725:  if (info == NULL)",
          "726:   return FALSE;",
          "728:  external = FALSE;",
          "730:  if (g_file_info_get_is_symlink (info)) {",
          "731:   if (_symlink_is_external_to_destination (file,",
          "732:         g_file_info_get_symlink_target (info),",
          "733:         destination,",
          "734:         external_links))",
          "735:   {",
          "736:    g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
          "737:    external = TRUE;",
          "738:   }",
          "739:  }",
          "741:  g_object_unref (info);",
          "743:  return external;",
          "744: }",
          "748: _symlink_is_external_to_destination (GFile      *file,",
          "749:          const char *symlink,",
          "750:          GFile      *destination,",
          "751:          GHashTable *external_links)",
          "753:  gboolean  external = FALSE;",
          "754:  GFile    *parent;",
          "755:  char    **components;",
          "756:  int       i;",
          "758:  if ((file == NULL) || (symlink == NULL))",
          "759:   return FALSE;",
          "761:  if (symlink[0] == '/')",
          "762:   return TRUE;",
          "764:  parent = g_file_get_parent (file);",
          "765:  components = g_strsplit (symlink, \"/\", -1);",
          "766:  for (i = 0; components[i] != NULL; i++) {",
          "767:   char  *name = components[i];",
          "768:   GFile *tmp;",
          "770:   if ((name[0] == 0) || ((name[0] == '.') && (name[1] == 0)))",
          "771:    continue;",
          "773:   if ((name[0] == '.') && (name[1] == '.') && (name[2] == 0)) {",
          "774:    if (g_file_equal (parent, destination)) {",
          "775:     external = TRUE;",
          "776:     break;",
          "777:    }",
          "778:    else {",
          "779:     tmp = g_file_get_parent (parent);",
          "780:     g_object_unref (parent);",
          "781:     parent = tmp;",
          "782:    }",
          "783:   }",
          "784:   else {",
          "785:    tmp = g_file_get_child (parent, components[i]);",
          "786:    g_object_unref (parent);",
          "787:    parent = tmp;",
          "788:   }",
          "790:   if (_g_file_is_external_link (parent, destination, external_links)) {",
          "791:    external = TRUE;",
          "792:    break;",
          "793:   }",
          "794:  }",
          "796:  g_strfreev (components);",
          "797:  g_object_unref (parent);",
          "799:  return external;",
          "800: }",
          "803: static gboolean",
          "804: _g_path_is_external_to_destination (const char *relative_path,",
          "805:         GFile      *destination,",
          "806:         GHashTable *external_links)",
          "807: {",
          "808:  gboolean  external = FALSE;",
          "",
          "[Added Lines]",
          "701: _g_file_contains_symlinks_in_path (const char *relative_path,",
          "702:        GFile      *destination,",
          "703:        GHashTable *symlinks)",
          "705:  gboolean  contains_symlinks = FALSE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "828:   g_object_unref (parent);",
          "829:   parent = tmp;",
          "833:    break;",
          "834:   }",
          "835:  }",
          "",
          "[Removed Lines]",
          "831:   if (_g_file_is_external_link (parent, destination, external_links)) {",
          "832:    external = TRUE;",
          "",
          "[Added Lines]",
          "728:   if (g_hash_table_contains (symlinks, parent)) {",
          "729:    contains_symlinks = TRUE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "837:  g_strfreev (components);",
          "838:  g_object_unref (parent);",
          "841: }",
          "",
          "[Removed Lines]",
          "840:  return external;",
          "",
          "[Added Lines]",
          "737:  return contains_symlinks;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "851:  GHashTable           *checked_folders;",
          "852:  GHashTable           *created_files;",
          "853:  GHashTable           *folders_created_during_extraction;",
          "855:  struct archive       *a;",
          "856:  struct archive_entry *entry;",
          "857:  int                   r;",
          "",
          "[Removed Lines]",
          "854:  GHashTable           *external_links;",
          "",
          "[Added Lines]",
          "751:  GHashTable           *symlinks;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "868:  checked_folders = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "869:  created_files = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, g_object_unref);",
          "870:  folders_created_during_extraction = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "872:  fr_archive_progress_set_total_files (load_data->archive, extract_data->n_files_to_extract);",
          "874:  while ((r = archive_read_next_header (a, &entry)) == ARCHIVE_OK) {",
          "",
          "[Removed Lines]",
          "871:  external_links = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "",
          "[Added Lines]",
          "768:  symlinks = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "902:    continue;",
          "903:   }",
          "906:    fr_archive_progress_inc_completed_files (load_data->archive, 1);",
          "907:    fr_archive_progress_inc_completed_bytes (load_data->archive, archive_entry_size_is_set (entry) ? archive_entry_size (entry) : 0);",
          "908:    archive_read_data_skip (a);",
          "",
          "[Removed Lines]",
          "905:   if (_g_path_is_external_to_destination (relative_path, extract_data->destination, external_links)) {",
          "",
          "[Added Lines]",
          "808:   if (_g_file_contains_symlinks_in_path (relative_path, extract_data->destination, symlinks)) {",
          "809:    g_warning (\"Skipping '%s' file as it has symlink in parents.\", relative_path);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1123:       load_data->error = g_error_copy (local_error);",
          "1124:      g_clear_error (&local_error);",
          "1125:     }",
          "1128:     archive_read_data_skip (a);",
          "1129:     break;",
          "",
          "[Removed Lines]",
          "1126:     if ((load_data->error == NULL) && _symlink_is_external_to_destination (file, archive_entry_symlink (entry), extract_data->destination, external_links))",
          "1127:      g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
          "",
          "[Added Lines]",
          "1030:     if (load_data->error == NULL)",
          "1031:      g_hash_table_add (symlinks, g_object_ref (file));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1159:  g_hash_table_unref (folders_created_during_extraction);",
          "1160:  g_hash_table_unref (created_files);",
          "1161:  g_hash_table_unref (checked_folders);",
          "1163:  archive_read_free (a);",
          "1164:  extract_data_free (extract_data);",
          "1165: }",
          "",
          "[Removed Lines]",
          "1162:  g_hash_table_unref (external_links);",
          "",
          "[Added Lines]",
          "1066:  g_hash_table_unref (symlinks);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0bd4a14f3bc8dae7c68469f281da9fddbe9e0d02",
      "candidate_info": {
        "commit_hash": "0bd4a14f3bc8dae7c68469f281da9fddbe9e0d02",
        "repo": "GNOME/file-roller",
        "commit_url": "https://github.com/GNOME/file-roller/commit/0bd4a14f3bc8dae7c68469f281da9fddbe9e0d02",
        "files": [
          "src/fr-archive-libarchive.c"
        ],
        "message": "libarchive: Skip files with symlinks in parents\n\nCurrently, it is still possible that some files are extracted outside of\nthe destination dir in case of malicious archives. The checks from commit\n21dfcdbf can be still bypassed in certain cases. See GNOME/file-roller#108\nfor more details. After some investigation, I am convinced that it would be\nbest to simply disallow symlinks in parents. For example, `tar` fails to\nextract such files with the `ENOTDIR` error. Let's do the same here.\n\nFixes: https://gitlab.gnome.org/GNOME/file-roller/-/issues/108",
        "before_after_code_files": [
          "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
          ],
          "candidate": [
            "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c"
          ]
        }
      },
      "candidate_diff": {
        "src/fr-archive-libarchive.c||src/fr-archive-libarchive.c": [
          "File: src/fr-archive-libarchive.c -> src/fr-archive-libarchive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "697:  return success;",
          "698: }",
          "747: static gboolean",
          "752: {",
          "809:  GFile    *parent;",
          "810:  char    **components;",
          "811:  int       i;",
          "",
          "[Removed Lines]",
          "701: static gboolean",
          "702: _symlink_is_external_to_destination (GFile      *file,",
          "703:          const char *symlink,",
          "704:          GFile      *destination,",
          "705:          GHashTable *external_links);",
          "708: static gboolean",
          "709: _g_file_is_external_link (GFile      *file,",
          "710:      GFile      *destination,",
          "711:      GHashTable *external_links)",
          "712: {",
          "713:  GFileInfo *info;",
          "714:  gboolean   external;",
          "716:  if (g_hash_table_lookup (external_links, file) != NULL)",
          "717:   return TRUE;",
          "719:  info = g_file_query_info (file,",
          "720:       G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK \",\" G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET,",
          "721:       G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS,",
          "722:       NULL,",
          "723:       NULL);",
          "725:  if (info == NULL)",
          "726:   return FALSE;",
          "728:  external = FALSE;",
          "730:  if (g_file_info_get_is_symlink (info)) {",
          "731:   if (_symlink_is_external_to_destination (file,",
          "732:         g_file_info_get_symlink_target (info),",
          "733:         destination,",
          "734:         external_links))",
          "735:   {",
          "736:    g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
          "737:    external = TRUE;",
          "738:   }",
          "739:  }",
          "741:  g_object_unref (info);",
          "743:  return external;",
          "744: }",
          "748: _symlink_is_external_to_destination (GFile      *file,",
          "749:          const char *symlink,",
          "750:          GFile      *destination,",
          "751:          GHashTable *external_links)",
          "753:  gboolean  external = FALSE;",
          "754:  GFile    *parent;",
          "755:  char    **components;",
          "756:  int       i;",
          "758:  if ((file == NULL) || (symlink == NULL))",
          "759:   return FALSE;",
          "761:  if (symlink[0] == '/')",
          "762:   return TRUE;",
          "764:  parent = g_file_get_parent (file);",
          "765:  components = g_strsplit (symlink, \"/\", -1);",
          "766:  for (i = 0; components[i] != NULL; i++) {",
          "767:   char  *name = components[i];",
          "768:   GFile *tmp;",
          "770:   if ((name[0] == 0) || ((name[0] == '.') && (name[1] == 0)))",
          "771:    continue;",
          "773:   if ((name[0] == '.') && (name[1] == '.') && (name[2] == 0)) {",
          "774:    if (g_file_equal (parent, destination)) {",
          "775:     external = TRUE;",
          "776:     break;",
          "777:    }",
          "778:    else {",
          "779:     tmp = g_file_get_parent (parent);",
          "780:     g_object_unref (parent);",
          "781:     parent = tmp;",
          "782:    }",
          "783:   }",
          "784:   else {",
          "785:    tmp = g_file_get_child (parent, components[i]);",
          "786:    g_object_unref (parent);",
          "787:    parent = tmp;",
          "788:   }",
          "790:   if (_g_file_is_external_link (parent, destination, external_links)) {",
          "791:    external = TRUE;",
          "792:    break;",
          "793:   }",
          "794:  }",
          "796:  g_strfreev (components);",
          "797:  g_object_unref (parent);",
          "799:  return external;",
          "800: }",
          "803: static gboolean",
          "804: _g_path_is_external_to_destination (const char *relative_path,",
          "805:         GFile      *destination,",
          "806:         GHashTable *external_links)",
          "807: {",
          "808:  gboolean  external = FALSE;",
          "",
          "[Added Lines]",
          "701: _g_file_contains_symlinks_in_path (const char *relative_path,",
          "702:        GFile      *destination,",
          "703:        GHashTable *symlinks)",
          "705:  gboolean  contains_symlinks = FALSE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "828:   g_object_unref (parent);",
          "829:   parent = tmp;",
          "833:    break;",
          "834:   }",
          "835:  }",
          "",
          "[Removed Lines]",
          "831:   if (_g_file_is_external_link (parent, destination, external_links)) {",
          "832:    external = TRUE;",
          "",
          "[Added Lines]",
          "728:   if (g_hash_table_contains (symlinks, parent)) {",
          "729:    contains_symlinks = TRUE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "837:  g_strfreev (components);",
          "838:  g_object_unref (parent);",
          "841: }",
          "",
          "[Removed Lines]",
          "840:  return external;",
          "",
          "[Added Lines]",
          "737:  return contains_symlinks;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "851:  GHashTable           *checked_folders;",
          "852:  GHashTable           *created_files;",
          "853:  GHashTable           *folders_created_during_extraction;",
          "855:  struct archive       *a;",
          "856:  struct archive_entry *entry;",
          "857:  int                   r;",
          "",
          "[Removed Lines]",
          "854:  GHashTable           *external_links;",
          "",
          "[Added Lines]",
          "751:  GHashTable           *symlinks;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "868:  checked_folders = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "869:  created_files = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, g_object_unref);",
          "870:  folders_created_during_extraction = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "872:  fr_archive_progress_set_total_files (load_data->archive, extract_data->n_files_to_extract);",
          "874:  while ((r = archive_read_next_header (a, &entry)) == ARCHIVE_OK) {",
          "",
          "[Removed Lines]",
          "871:  external_links = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "",
          "[Added Lines]",
          "768:  symlinks = g_hash_table_new_full (g_file_hash, (GEqualFunc) g_file_equal, g_object_unref, NULL);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "902:    continue;",
          "903:   }",
          "906:    fr_archive_progress_inc_completed_files (load_data->archive, 1);",
          "907:    fr_archive_progress_inc_completed_bytes (load_data->archive, archive_entry_size_is_set (entry) ? archive_entry_size (entry) : 0);",
          "908:    archive_read_data_skip (a);",
          "",
          "[Removed Lines]",
          "905:   if (_g_path_is_external_to_destination (relative_path, extract_data->destination, external_links)) {",
          "",
          "[Added Lines]",
          "808:   if (_g_file_contains_symlinks_in_path (relative_path, extract_data->destination, symlinks)) {",
          "809:    g_warning (\"Skipping '%s' file as it has symlink in parents.\", relative_path);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1123:       load_data->error = g_error_copy (local_error);",
          "1124:      g_clear_error (&local_error);",
          "1125:     }",
          "1128:     archive_read_data_skip (a);",
          "1129:     break;",
          "",
          "[Removed Lines]",
          "1126:     if ((load_data->error == NULL) && _symlink_is_external_to_destination (file, archive_entry_symlink (entry), extract_data->destination, external_links))",
          "1127:      g_hash_table_insert (external_links, g_object_ref (file), GINT_TO_POINTER (1));",
          "",
          "[Added Lines]",
          "1030:     if (load_data->error == NULL)",
          "1031:      g_hash_table_add (symlinks, g_object_ref (file));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1159:  g_hash_table_unref (folders_created_during_extraction);",
          "1160:  g_hash_table_unref (created_files);",
          "1161:  g_hash_table_unref (checked_folders);",
          "1163:  archive_read_free (a);",
          "1164:  extract_data_free (extract_data);",
          "1165: }",
          "",
          "[Removed Lines]",
          "1162:  g_hash_table_unref (external_links);",
          "",
          "[Added Lines]",
          "1066:  g_hash_table_unref (symlinks);",
          "",
          "---------------"
        ]
      }
    }
  ]
}