{
  "cve_id": "CVE-2023-48232",
  "cve_desc": "Vim is an open source command line text editor. A floating point exception may occur when calculating the line offset for overlong lines and smooth scrolling is enabled and the cpo-settings include the 'n' flag. This may happen when a window border is present and when the wrapped line continues on the next physical line directly in the window border because the 'cpo' setting includes the 'n' flag. Only users with non-default settings are affected and the exception should only result in a crash. This issue has been addressed in commit `cb0b99f0` which has been included in release version 9.0.2107. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "repo": "vim/vim",
  "patch_hash": "cb0b99f0672d8446585d26e998343dceca17d1ce",
  "patch_info": {
    "commit_hash": "cb0b99f0672d8446585d26e998343dceca17d1ce",
    "repo": "vim/vim",
    "commit_url": "https://github.com/vim/vim/commit/cb0b99f0672d8446585d26e998343dceca17d1ce",
    "files": [
      "src/move.c",
      "src/testdir/test_scroll_opt.vim",
      "src/version.c"
    ],
    "message": "patch 9.0.2107: [security]: FPE in adjust_plines_for_skipcol\n\nProblem:  [security]: FPE in adjust_plines_for_skipcol\nSolution: don't divide by zero, return zero\n\nPrevent a floating point exception when calculating w_skipcol (which can\nhappen with a small window when the number option is set and cpo+=n).\n\nAdd a test to verify\n\nSigned-off-by: Christian Brabandt <cb@256bit.org>",
    "before_after_code_files": [
      "src/move.c||src/move.c",
      "src/testdir/test_scroll_opt.vim||src/testdir/test_scroll_opt.vim",
      "src/version.c||src/version.c"
    ]
  },
  "patch_diff": {
    "src/move.c||src/move.c": [
      "File: src/move.c -> src/move.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "45:  return 0;",
      "47:     int width = wp->w_width - win_col_off(wp);",
      "51:     return 0;",
      "52: }",
      "",
      "[Removed Lines]",
      "48:     if (wp->w_skipcol >= width)",
      "49:  return (wp->w_skipcol - width) / (width + win_col_off2(wp)) + 1;",
      "",
      "[Added Lines]",
      "48:     int w2 = width + win_col_off2(wp);",
      "49:     if (wp->w_skipcol >= width && w2 > 0)",
      "50:  return (wp->w_skipcol - width) / w2 + 1;",
      "",
      "---------------"
    ],
    "src/testdir/test_scroll_opt.vim||src/testdir/test_scroll_opt.vim": [
      "File: src/testdir/test_scroll_opt.vim -> src/testdir/test_scroll_opt.vim",
      "--- Hunk 1 ---",
      "[Context before]",
      "926:   call StopVimInTerminal(buf)",
      "927: endfunc",
      "929: \" vim: shiftwidth=2 sts=2 expandtab",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "929: \" Division by zero, shouldn't crash",
      "930: func Test_smoothscroll_crash()",
      "931:   CheckScreendump",
      "933:   let lines =<< trim END",
      "934:       20 new",
      "935:       vsp",
      "936:       put =repeat('aaaa', 20)",
      "937:       set nu fdc=1  smoothscroll cpo+=n",
      "938:       vert resize 0",
      "939:       exe \"norm! 0\\<c-e>\"",
      "940:   END",
      "941:   call writefile(lines, 'XSmoothScrollCrash', 'D')",
      "942:   let buf = RunVimInTerminal('-u NONE -S XSmoothScrollCrash', #{rows: 12, cols:40})",
      "943:   call term_sendkeys(buf, \"2\\<C-E>\\<C-L>\")",
      "945:   call StopVimInTerminal(buf)",
      "946: endfunc",
      "",
      "---------------"
    ],
    "src/version.c||src/version.c": [
      "File: src/version.c -> src/version.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "705: static int included_patches[] =",
      "708:     2106,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "708:     2107,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5b4d1fcbf06757bae32a894871b9a649c84eba7f",
      "candidate_info": {
        "commit_hash": "5b4d1fcbf06757bae32a894871b9a649c84eba7f",
        "repo": "vim/vim",
        "commit_url": "https://github.com/vim/vim/commit/5b4d1fcbf06757bae32a894871b9a649c84eba7f",
        "files": [
          "src/edit.c",
          "src/testdir/dumps/Test_smoothscroll_insert_bottom.dump",
          "src/testdir/test_scroll_opt.vim",
          "src/version.c"
        ],
        "message": "patch 9.0.2145: wrong scrolling in insert mode with smoothscroll\n\nProblem:  Wrong scrolling in Insert mode with 'smoothscroll' at the\n          bottom of the window.\nSolution: Don't use set_topline() when 'smoothscroll' is set.\n\nfixes: #13612\ncloses: #13613\n\nSigned-off-by: zeertzjq <zeertzjq@outlook.com>\nSigned-off-by: Christian Brabandt <cb@256bit.org>",
        "before_after_code_files": [
          "src/edit.c||src/edit.c",
          "src/testdir/dumps/Test_smoothscroll_insert_bottom.dump||src/testdir/dumps/Test_smoothscroll_insert_bottom.dump",
          "src/testdir/test_scroll_opt.vim||src/testdir/test_scroll_opt.vim",
          "src/version.c||src/version.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/testdir/test_scroll_opt.vim||src/testdir/test_scroll_opt.vim",
            "src/version.c||src/version.c"
          ],
          "candidate": [
            "src/testdir/test_scroll_opt.vim||src/testdir/test_scroll_opt.vim",
            "src/version.c||src/version.c"
          ]
        }
      },
      "candidate_diff": {
        "src/edit.c||src/edit.c": [
          "File: src/edit.c -> src/edit.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "505:  if (curbuf->b_mod_set",
          "506:   && curwin->w_p_wrap",
          "507:   && !did_backspace",
          "508:   && curwin->w_topline == old_topline",
          "509: #ifdef FEAT_DIFF",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "509:   && !curwin->w_p_sms",
          "",
          "---------------"
        ],
        "src/testdir/dumps/Test_smoothscroll_insert_bottom.dump||src/testdir/dumps/Test_smoothscroll_insert_bottom.dump": [
          "File: src/testdir/dumps/Test_smoothscroll_insert_bottom.dump -> src/testdir/dumps/Test_smoothscroll_insert_bottom.dump",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: |<+0#4040ff13#ffffff0@2|e+0#0000000&|r|y| |l|o|n|g| |l|i|n|e| |.@2|A| |v|e|r|y| |l|o|n|g| |l|i|n|e| |.@2",
          "2: |A| |v|e|r|y| |l|o|n|g| |l|i|n|e| |.@2|A| |v|e|r|y| |l|o|n|g| |l|i|n|e| |.@2",
          "3: |A| |v|e|r|y| |l|o|n|g| |l|i|n|e| |.@2|A| |v|e|r|y| |l|o|n|g| |l|i|n|e| |.@2",
          "4: |A| |v|e|r|y| |l|o|n|g| |l|i|n|e| |.@2|A| |v|e|r|y| |l|o|n|g| |l|i|n|e| |.@2",
          "5: |A| |v|e|r|y| |l|o|n|g| |l|i|n|e| |.@2|A| |v|e|r|y| |l|o|n|g| |l|i|n|e| |.@2",
          "6: |A| |v|e|r|y| |l|o|n|g| |l|i|n|e| |.@2|A| |v|e|r|y| |l|o|n|g| |l|i|n|e| |.@2",
          "7: |1|2|3|4|5|6|7|8|9| @30",
          "8: > @39",
          "9: @40",
          "",
          "---------------"
        ],
        "src/testdir/test_scroll_opt.vim||src/testdir/test_scroll_opt.vim": [
          "File: src/testdir/test_scroll_opt.vim -> src/testdir/test_scroll_opt.vim",
          "--- Hunk 1 ---",
          "[Context before]",
          "920:       exe \"norm G3\\<C-E>k\"",
          "921:   END",
          "922:   call writefile(lines, 'XSmoothScrollCursorTop', 'D')",
          "924:   call VerifyScreenDump(buf, 'Test_smoothscroll_cursor_top', {})",
          "926:   call StopVimInTerminal(buf)",
          "",
          "[Removed Lines]",
          "923:   let buf = RunVimInTerminal('-u NONE -S XSmoothScrollCursorTop', #{rows: 12, cols:40})",
          "",
          "[Added Lines]",
          "923:   let buf = RunVimInTerminal('-u NONE -S XSmoothScrollCursorTop', #{rows: 12, cols: 40})",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "939:       exe \"norm! 0\\<c-e>\"",
          "940:   END",
          "941:   call writefile(lines, 'XSmoothScrollCrash', 'D')",
          "943:   call term_sendkeys(buf, \"2\\<C-E>\\<C-L>\")",
          "945:   call StopVimInTerminal(buf)",
          "946: endfunc",
          "948: \" vim: shiftwidth=2 sts=2 expandtab",
          "",
          "[Removed Lines]",
          "942:   let buf = RunVimInTerminal('-u NONE -S XSmoothScrollCrash', #{rows: 12, cols:40})",
          "",
          "[Added Lines]",
          "942:   let buf = RunVimInTerminal('-u NONE -S XSmoothScrollCrash', #{rows: 12, cols: 40})",
          "948: func Test_smoothscroll_insert_bottom()",
          "949:   CheckScreendump",
          "951:   let lines =<< trim END",
          "952:     call setline(1, repeat([repeat('A very long line ...', 10)], 5))",
          "953:     set wrap smoothscroll scrolloff=0",
          "954:   END",
          "955:   call writefile(lines, 'XSmoothScrollInsertBottom', 'D')",
          "956:   let buf = RunVimInTerminal('-u NONE -S XSmoothScrollInsertBottom', #{rows: 9, cols: 40})",
          "957:   call term_sendkeys(buf, \"Go123456789\\<CR>\")",
          "958:   call VerifyScreenDump(buf, 'Test_smoothscroll_insert_bottom', {})",
          "960:   call StopVimInTerminal(buf)",
          "961: endfunc",
          "",
          "---------------"
        ],
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "705: static int included_patches[] =",
          "708:     2144,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "708:     2145,",
          "",
          "---------------"
        ]
      }
    }
  ]
}