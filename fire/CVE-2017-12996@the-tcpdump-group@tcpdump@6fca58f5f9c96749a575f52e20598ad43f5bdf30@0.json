{
  "cve_id": "CVE-2017-12996",
  "cve_desc": "The PIMv2 parser in tcpdump before 4.9.2 has a buffer over-read in print-pim.c:pimv2_print().",
  "repo": "the-tcpdump-group/tcpdump",
  "patch_hash": "6fca58f5f9c96749a575f52e20598ad43f5bdf30",
  "patch_info": {
    "commit_hash": "6fca58f5f9c96749a575f52e20598ad43f5bdf30",
    "repo": "the-tcpdump-group/tcpdump",
    "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/6fca58f5f9c96749a575f52e20598ad43f5bdf30",
    "files": [
      "print-pim.c",
      "tests/TESTLIST",
      "tests/pimv2-oobr-1.out",
      "tests/pimv2-oobr-1.pcap",
      "tests/pimv2-oobr-2.out",
      "tests/pimv2-oobr-2.pcap",
      "tests/pimv2-oobr-3.out",
      "tests/pimv2-oobr-3.pcap",
      "tests/pimv2-oobr-4.out",
      "tests/pimv2-oobr-4.pcap"
    ],
    "message": "CVE-2017-12996/PIMv2: Make sure PIM TLVs have the right length.\n\nWe do bounds checks based on the TLV length, so if the TLV's length is\ntoo short, and we don't check for that, we could end up fetching data\npast the end of the TLV - including past the length of the captured data\nin the packet.\n\nThis fixes a buffer over-read discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd tests using the capture files supplied by the reporter(s).",
    "before_after_code_files": [
      "print-pim.c||print-pim.c"
    ]
  },
  "patch_diff": {
    "print-pim.c||print-pim.c": [
      "File: print-pim.c -> print-pim.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "731:    switch (otype) {",
      "732:    case PIMV2_HELLO_OPTION_HOLDTIME:",
      "734:     break;",
      "736:    case PIMV2_HELLO_OPTION_LANPRUNEDELAY:",
      "",
      "[Removed Lines]",
      "733:     unsigned_relts_print(ndo, EXTRACT_16BITS(bp));",
      "",
      "[Added Lines]",
      "733:     if (olen != 2) {",
      "734:      ND_PRINT((ndo, \"ERROR: Option Length != 2 Bytes (%u)\", olen));",
      "735:     } else {",
      "736:      unsigned_relts_print(ndo, EXTRACT_16BITS(bp));",
      "737:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "764:     break;",
      "766:    case PIMV2_HELLO_OPTION_GENID:",
      "768:     break;",
      "770:    case PIMV2_HELLO_OPTION_REFRESH_CAP:",
      "778:     }",
      "779:     break;",
      "",
      "[Removed Lines]",
      "767:     ND_PRINT((ndo, \"0x%08x\", EXTRACT_32BITS(bp)));",
      "771:     ND_PRINT((ndo, \"v%d\", *bp));",
      "772:     if (*(bp+1) != 0) {",
      "773:      ND_PRINT((ndo, \", interval \"));",
      "774:      unsigned_relts_print(ndo, *(bp+1));",
      "775:     }",
      "776:     if (EXTRACT_16BITS(bp+2) != 0) {",
      "777:      ND_PRINT((ndo, \" ?0x%04x?\", EXTRACT_16BITS(bp+2)));",
      "",
      "[Added Lines]",
      "771:     if (olen != 4) {",
      "772:      ND_PRINT((ndo, \"ERROR: Option Length != 4 Bytes (%u)\", olen));",
      "773:     } else {",
      "774:      ND_PRINT((ndo, \"0x%08x\", EXTRACT_32BITS(bp)));",
      "775:     }",
      "779:     if (olen != 4) {",
      "780:      ND_PRINT((ndo, \"ERROR: Option Length != 4 Bytes (%u)\", olen));",
      "781:     } else {",
      "782:      ND_PRINT((ndo, \"v%d\", *bp));",
      "783:      if (*(bp+1) != 0) {",
      "784:       ND_PRINT((ndo, \", interval \"));",
      "785:       unsigned_relts_print(ndo, *(bp+1));",
      "786:      }",
      "787:      if (EXTRACT_16BITS(bp+2) != 0) {",
      "788:       ND_PRINT((ndo, \" ?0x%04x?\", EXTRACT_16BITS(bp+2)));",
      "789:      }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1cfd6cd2ac8acecbcf16e083a6cd272a19ec994e",
      "candidate_info": {
        "commit_hash": "1cfd6cd2ac8acecbcf16e083a6cd272a19ec994e",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/1cfd6cd2ac8acecbcf16e083a6cd272a19ec994e",
        "files": [
          "print-cdp.c",
          "print-chdlc.c",
          "print-dccp.c",
          "print-fr.c",
          "print-icmp6.c",
          "print-msdp.c",
          "print-pim.c",
          "print-pppoe.c",
          "print-radius.c",
          "print-slow.c",
          "print-snmp.c",
          "print-syslog.c"
        ],
        "message": "Use more the EXTRACT_U_1() macro (51/n)\n\nMoreover: Use more the ND_ISPRINT() macro.",
        "before_after_code_files": [
          "print-cdp.c||print-cdp.c",
          "print-chdlc.c||print-chdlc.c",
          "print-dccp.c||print-dccp.c",
          "print-fr.c||print-fr.c",
          "print-icmp6.c||print-icmp6.c",
          "print-msdp.c||print-msdp.c",
          "print-pim.c||print-pim.c",
          "print-pppoe.c||print-pppoe.c",
          "print-radius.c||print-radius.c",
          "print-slow.c||print-slow.c",
          "print-snmp.c||print-snmp.c",
          "print-syslog.c||print-syslog.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-pim.c||print-pim.c"
          ],
          "candidate": [
            "print-pim.c||print-pim.c"
          ]
        }
      },
      "candidate_diff": {
        "print-cdp.c||print-cdp.c": [
          "File: print-cdp.c -> print-cdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "304:    goto trunc;",
          "",
          "[Removed Lines]",
          "307:   if (pt == PT_NLPID && pl == 1 && *p == NLPID_IP && al == 4) {",
          "",
          "[Added Lines]",
          "307:   if (pt == PT_NLPID && pl == 1 && EXTRACT_U_1(p) == NLPID_IP &&",
          "308:       al == 4) {",
          "",
          "---------------"
        ],
        "print-chdlc.c||print-chdlc.c": [
          "File: print-chdlc.c -> print-chdlc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "95:                 if (length < 2)",
          "96:                     goto trunc;",
          "97:                 ND_TCHECK_2(p);",
          "101:                     isoclns_print(ndo, p + 1, length - 1);",
          "102:                 else",
          "103:                     isoclns_print(ndo, p, length);",
          "",
          "[Removed Lines]",
          "98:                 if (*(p+1) == NLPID_CLNP ||",
          "",
          "[Added Lines]",
          "98:                 if (EXTRACT_U_1(p + 1) == NLPID_CLNP ||",
          "99:                     EXTRACT_U_1(p + 1) == NLPID_ESIS ||",
          "100:                     EXTRACT_U_1(p + 1) == NLPID_ISIS)",
          "",
          "---------------"
        ],
        "print-dccp.c||print-dccp.c": [
          "File: print-dccp.c -> print-dccp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "538:  ND_TCHECK_1(option);",
          "541:   ND_TCHECK_1(option + 1);",
          "542:   optlen = EXTRACT_U_1(option + 1);",
          "543:   if (optlen < 2) {",
          "545:     ND_PRINT((ndo, \"CCID option %u optlen too short\", EXTRACT_U_1(option)));",
          "546:    else",
          "547:     ND_PRINT((ndo, \"%s optlen too short\",",
          "",
          "[Removed Lines]",
          "540:  if (*option >= 32) {",
          "544:    if (*option >= 128)",
          "",
          "[Added Lines]",
          "540:  if (EXTRACT_U_1(option) >= 32) {",
          "544:    if (EXTRACT_U_1(option) >= 128)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "552:   optlen = 1;",
          "554:  if (hlen < optlen) {",
          "556:    ND_PRINT((ndo, \"CCID option %u optlen goes past header length\",",
          "557:       EXTRACT_U_1(option)));",
          "558:   else",
          "",
          "[Removed Lines]",
          "555:   if (*option >= 128)",
          "",
          "[Added Lines]",
          "555:   if (EXTRACT_U_1(option) >= 128)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "562:  }",
          "563:  ND_TCHECK2(*option, optlen);",
          "566:   ND_PRINT((ndo, \"CCID option %d\", EXTRACT_U_1(option)));",
          "567:   switch (optlen) {",
          "568:    case 4:",
          "",
          "[Removed Lines]",
          "565:  if (*option >= 128) {",
          "",
          "[Added Lines]",
          "565:  if (EXTRACT_U_1(option) >= 128) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "585:     ND_PRINT((ndo, \" optlen too short\"));",
          "586:     return optlen;",
          "587:    }",
          "589:     ND_PRINT((ndo, \" %s\", dccp_feature_nums[EXTRACT_U_1(option + 2)]));",
          "590:     for (i = 0; i < optlen - 3; i++)",
          "591:      ND_PRINT((ndo, \" %d\", EXTRACT_U_1(option + 3 + i)));",
          "",
          "[Removed Lines]",
          "588:    if (*(option + 2) < 10){",
          "",
          "[Added Lines]",
          "588:    if (EXTRACT_U_1(option + 2) < 10){",
          "",
          "---------------"
        ],
        "print-fr.c||print-fr.c": [
          "File: print-fr.c -> print-fr.c"
        ],
        "print-icmp6.c||print-icmp6.c": [
          "File: print-icmp6.c -> print-icmp6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1553:    if (cp == ep) {",
          "1555:     ND_PRINT((ndo,\".\"));",
          "1558:    } else {",
          "",
          "[Removed Lines]",
          "1556:    } else if (cp + 1 == ep && *cp == '\\0') {",
          "",
          "[Added Lines]",
          "1556:    } else if (cp + 1 == ep && EXTRACT_U_1(cp) == '\\0') {",
          "",
          "---------------"
        ],
        "print-msdp.c||print-msdp.c": [
          "File: print-msdp.c -> print-msdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "65:     ND_PRINT((ndo, \" [w/data]\"));",
          "66:     if (ndo->ndo_vflag > 1) {",
          "67:      ND_PRINT((ndo, \" \"));",
          "70:     }",
          "71:    }",
          "72:    break;",
          "",
          "[Removed Lines]",
          "68:      ip_print(ndo, sp + *sp * 12 + 8 - 3,",
          "69:               len - (*sp * 12 + 8));",
          "",
          "[Added Lines]",
          "68:      ip_print(ndo, sp +",
          "69:        EXTRACT_U_1(sp) * 12 + 8 - 3,",
          "70:               len - (EXTRACT_U_1(sp) * 12 + 8));",
          "",
          "---------------"
        ],
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "825:      ND_PRINT((ndo, \"ERROR: Option Length != 4 Bytes (%u)\", olen));",
          "826:     } else {",
          "827:      ND_PRINT((ndo, \"v%d\", EXTRACT_U_1(bp)));",
          "829:       ND_PRINT((ndo, \", interval \"));",
          "830:       unsigned_relts_print(ndo,",
          "831:              EXTRACT_U_1(bp + 1));",
          "",
          "[Removed Lines]",
          "828:      if (*(bp+1) != 0) {",
          "",
          "[Added Lines]",
          "828:      if (EXTRACT_U_1(bp + 1) != 0) {",
          "",
          "---------------"
        ],
        "print-pppoe.c||print-pppoe.c": [
          "File: print-pppoe.c -> print-pppoe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "157:     ND_TCHECK2(*p, tag_len);",
          "158:     for (v = p; v < p + tag_len && tag_str_len < MAXTAGPRINT-1; v++)",
          "160:       tag_str[tag_str_len++] = EXTRACT_U_1(v);",
          "161:       ascii_count++;",
          "162:      } else {",
          "",
          "[Removed Lines]",
          "159:      if (*v >= 32 && *v < 127) {",
          "",
          "[Added Lines]",
          "159:      if (ND_ISPRINT(EXTRACT_U_1(v))) {",
          "",
          "---------------"
        ],
        "print-radius.c||print-radius.c": [
          "File: print-radius.c -> print-radius.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "593:       case TUNNEL_PASS:",
          "594:            if (length < 3)",
          "595:               goto trunc;",
          "597:               ND_PRINT((ndo, \"Tag[%u] \", EXTRACT_U_1(data)));",
          "598:            else",
          "599:               ND_PRINT((ndo, \"Tag[Unused] \"));",
          "",
          "[Removed Lines]",
          "596:            if (*data && (*data <=0x1F) )",
          "",
          "[Added Lines]",
          "596:            if (EXTRACT_U_1(data) && (EXTRACT_U_1(data) <= 0x1F))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "613:            {",
          "614:               if (length < 1)",
          "615:                  goto trunc;",
          "617:                 ND_PRINT((ndo, \"Tag[%u] \", EXTRACT_U_1(data)));",
          "618:               else",
          "619:                 ND_PRINT((ndo, \"Tag[Unused] \"));",
          "",
          "[Removed Lines]",
          "616:               if (*data)",
          "",
          "[Added Lines]",
          "616:               if (EXTRACT_U_1(data))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "732:       if ( (attr_code == TUNNEL_TYPE) || (attr_code == TUNNEL_MEDIUM) )",
          "733:       {",
          "735:             ND_PRINT((ndo, \"Tag[Unused] \"));",
          "736:          else",
          "737:             ND_PRINT((ndo, \"Tag[%d] \", EXTRACT_U_1(data)));",
          "",
          "[Removed Lines]",
          "734:          if (!*data)",
          "",
          "[Added Lines]",
          "734:          if (!EXTRACT_U_1(data))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "795:           break;",
          "797:         case TUNNEL_PREFERENCE:",
          "799:                ND_PRINT((ndo, \"Tag[%d] \", EXTRACT_U_1(data)));",
          "800:             else",
          "801:                ND_PRINT((ndo, \"Tag[Unused] \"));",
          "",
          "[Removed Lines]",
          "798:             if (*data)",
          "",
          "[Added Lines]",
          "798:             if (EXTRACT_U_1(data))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1002:                return;",
          "1003:            }",
          "1004:            ND_TCHECK_1(data);",
          "1006:               ND_PRINT((ndo, \"User can change password\"));",
          "1007:            else",
          "1008:               ND_PRINT((ndo, \"User cannot change password\"));",
          "",
          "[Removed Lines]",
          "1005:            if (*data)",
          "",
          "[Added Lines]",
          "1005:            if (EXTRACT_U_1(data))",
          "",
          "---------------"
        ],
        "print-slow.c||print-slow.c": [
          "File: print-slow.c -> print-slow.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "261:         if (len < 2)",
          "262:             goto tooshort;",
          "263:         ND_TCHECK_1(pptr + 1);",
          "265:             ND_PRINT((ndo, \"LACP version %u packet not supported\", EXTRACT_U_1(pptr + 1)));",
          "266:             return;",
          "267:         }",
          "",
          "[Removed Lines]",
          "264:         if (*(pptr+1) != LACP_VERSION) {",
          "",
          "[Added Lines]",
          "264:         if (EXTRACT_U_1(pptr + 1) != LACP_VERSION) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "272:         if (len < 2)",
          "273:             goto tooshort;",
          "274:         ND_TCHECK_1(pptr + 1);",
          "276:             ND_PRINT((ndo, \"MARKER version %u packet not supported\", EXTRACT_U_1(pptr + 1)));",
          "277:             return;",
          "278:         }",
          "",
          "[Removed Lines]",
          "275:         if (*(pptr+1) != MARKER_VERSION) {",
          "",
          "[Added Lines]",
          "275:         if (EXTRACT_U_1(pptr + 1) != MARKER_VERSION) {",
          "",
          "---------------"
        ],
        "print-snmp.c||print-snmp.c": [
          "File: print-snmp.c -> print-snmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "446: #else",
          "449: #endif",
          "450:  elem->form = form;",
          "451:  elem->class = class;",
          "",
          "[Removed Lines]",
          "447:  form = (u_char)(*p & ASN_FORM_BITS) >> ASN_FORM_SHIFT;",
          "448:  class = (u_char)(*p & ASN_CLASS_BITS) >> ASN_CLASS_SHIFT;",
          "",
          "[Added Lines]",
          "447:  form = (u_char)(EXTRACT_U_1(p) & ASN_FORM_BITS) >> ASN_FORM_SHIFT;",
          "448:  class = (u_char)(EXTRACT_U_1(p) & ASN_CLASS_BITS) >> ASN_CLASS_SHIFT;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "470:     ND_PRINT((ndo, \"[Xtagfield?]\"));",
          "471:     return -1;",
          "472:    }",
          "474:    len--;",
          "475:    hdr++;",
          "476:    p++;",
          "",
          "[Removed Lines]",
          "473:    id = (id << 7) | (*p & ~ASN_BIT8);",
          "",
          "[Added Lines]",
          "473:    id = (id << 7) | (EXTRACT_U_1(p) & ~ASN_BIT8);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "772:   for (; i-- > 0; p++) {",
          "773:    ND_TCHECK_1(p);",
          "775:    if (EXTRACT_U_1(p) & ASN_LONGLEN)",
          "776:            continue;",
          "",
          "[Removed Lines]",
          "774:    o = (o << ASN_SHIFT7) + (*p & ~ASN_BIT8);",
          "",
          "[Added Lines]",
          "774:    o = (o << ASN_SHIFT7) + (EXTRACT_U_1(p) & ~ASN_BIT8);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "924:  for (*oidlen = 0; i-- > 0; p++) {",
          "925:   ND_TCHECK_1(p);",
          "927:   if (EXTRACT_U_1(p) & ASN_LONGLEN)",
          "928:       continue;",
          "",
          "[Removed Lines]",
          "926:          o = (o << ASN_SHIFT7) + (*p & ~ASN_BIT8);",
          "",
          "[Added Lines]",
          "926:          o = (o << ASN_SHIFT7) + (EXTRACT_U_1(p) & ~ASN_BIT8);",
          "",
          "---------------"
        ],
        "print-syslog.c||print-syslog.c": [
          "File: print-syslog.c -> print-syslog.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:     ND_TCHECK_1(pptr);",
          "95:         msg_off++;",
          "96:         ND_TCHECK_1(pptr + msg_off);",
          "97:         while (msg_off <= SYSLOG_MAX_DIGITS &&",
          "98:                EXTRACT_U_1(pptr + msg_off) >= '0' &&",
          "99:                EXTRACT_U_1(pptr + msg_off) <= '9') {",
          "101:             msg_off++;",
          "102:             ND_TCHECK_1(pptr + msg_off);",
          "103:         }",
          "105:             ND_PRINT((ndo, \"%s\", tstr));",
          "106:             return;",
          "107:         }",
          "",
          "[Removed Lines]",
          "94:     if (*(pptr+msg_off) == '<') {",
          "100:             pri = pri * 10 + (*(pptr+msg_off) - '0');",
          "104:         if (*(pptr+msg_off) != '>') {",
          "",
          "[Added Lines]",
          "94:     if (EXTRACT_U_1(pptr + msg_off) == '<') {",
          "100:             pri = pri * 10 + (EXTRACT_U_1(pptr + msg_off) - '0');",
          "104:         if (EXTRACT_U_1(pptr + msg_off) != '>') {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "034c2fc03a6ba26f10ef8d02c0bb040fc8720fb7",
      "candidate_info": {
        "commit_hash": "034c2fc03a6ba26f10ef8d02c0bb040fc8720fb7",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/034c2fc03a6ba26f10ef8d02c0bb040fc8720fb7",
        "files": [
          "print-pim.c"
        ],
        "message": "Use more the EXTRACT_U_1() macro (36/n)\n\nIn a unsigned_relts_print() call.\nThe Interval field is one byte length (RFC3973).",
        "before_after_code_files": [
          "print-pim.c||print-pim.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-pim.c||print-pim.c"
          ],
          "candidate": [
            "print-pim.c||print-pim.c"
          ]
        }
      },
      "candidate_diff": {
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "827:      ND_PRINT((ndo, \"v%d\", EXTRACT_U_1(bp)));",
          "828:      if (*(bp+1) != 0) {",
          "829:       ND_PRINT((ndo, \", interval \"));",
          "831:      }",
          "832:      if (EXTRACT_BE_U_2(bp + 2) != 0) {",
          "833:       ND_PRINT((ndo, \" ?0x%04x?\", EXTRACT_BE_U_2(bp + 2)));",
          "",
          "[Removed Lines]",
          "830:       unsigned_relts_print(ndo, *(bp+1));",
          "",
          "[Added Lines]",
          "830:       unsigned_relts_print(ndo,",
          "831:              EXTRACT_U_1(bp + 1));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5ac30c65d54925a272c906528a8ad78fa4c9450b",
      "candidate_info": {
        "commit_hash": "5ac30c65d54925a272c906528a8ad78fa4c9450b",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/5ac30c65d54925a272c906528a8ad78fa4c9450b",
        "files": [
          "print-pim.c"
        ],
        "message": "Use nd_ types, add EXTRACT_ calls, clean up signed vs. unsigned.",
        "before_after_code_files": [
          "print-pim.c||print-pim.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-pim.c||print-pim.c"
          ],
          "candidate": [
            "print-pim.c||print-pim.c"
          ]
        }
      },
      "candidate_diff": {
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "126: struct pim {",
          "",
          "[Removed Lines]",
          "127:  uint8_t pim_typever;",
          "",
          "[Added Lines]",
          "127:  nd_uint8_t pim_typever;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143: pimv1_join_prune_print(netdissect_options *ndo,",
          "144:                        const u_char *bp, u_int len)",
          "145: {",
          "150:  if (ND_TTEST_LEN(bp, 30) && EXTRACT_U_1(bp + 11) == 1 &&",
          "151:      ((njoin = EXTRACT_BE_U_2(bp + 20)) + EXTRACT_BE_U_2(bp + 22)) == 1) {",
          "154:   ND_PRINT((ndo, \" RPF %s \", ipaddr_string(ndo, bp)));",
          "155:   hold = EXTRACT_BE_U_2(bp + 6);",
          "",
          "[Removed Lines]",
          "146:  int ngroups, njoin, nprune;",
          "147:  int njp;",
          "152:   int hold;",
          "",
          "[Added Lines]",
          "146:  u_int ngroups, njoin, nprune;",
          "147:  u_int njp;",
          "152:   u_int hold;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "157:    ND_PRINT((ndo, \"Hold \"));",
          "158:    unsigned_relts_print(ndo, hold);",
          "159:   }",
          "161:   ipaddr_string(ndo, bp + 26), EXTRACT_U_1(bp + 25) & 0x3f,",
          "162:   ipaddr_string(ndo, bp + 12)));",
          "163:   if (EXTRACT_BE_U_4(bp + 16) != 0xffffffff)",
          "",
          "[Removed Lines]",
          "160:   ND_PRINT((ndo, \"%s (%s/%d, %s\", njoin ? \"Join\" : \"Prune\",",
          "",
          "[Added Lines]",
          "160:   ND_PRINT((ndo, \"%s (%s/%u, %s\", njoin ? \"Join\" : \"Prune\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "195:  ngroups = EXTRACT_U_1(bp + 3);",
          "196:  bp += 4;",
          "197:  len -= 4;",
          "",
          "[Removed Lines]",
          "198:  while (ngroups--) {",
          "",
          "[Added Lines]",
          "198:  while (ngroups != 0) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "218:   ND_TCHECK_4(bp);",
          "219:   njoin = EXTRACT_BE_U_2(bp);",
          "220:   nprune = EXTRACT_BE_U_2(bp + 2);",
          "222:   bp += 4;",
          "223:   len -= 4;",
          "224:   for (njp = 0; njp < (njoin + nprune); njp++) {",
          "",
          "[Removed Lines]",
          "221:   ND_PRINT((ndo, \" joined: %d pruned: %d\", njoin, nprune));",
          "",
          "[Added Lines]",
          "221:   ND_PRINT((ndo, \" joined: %u pruned: %u\", njoin, nprune));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "231:    if (len < 6)",
          "232:     goto trunc;",
          "233:    ND_TCHECK_6(bp);",
          "235:        (EXTRACT_U_1(bp) & 0x01) ? \"Sparse \" : \"Dense \",",
          "236:        (EXTRACT_U_1(bp + 1) & 0x80) ? \"WC \" : \"\",",
          "237:        (EXTRACT_U_1(bp + 1) & 0x40) ? \"RP \" : \"SPT \",",
          "",
          "[Removed Lines]",
          "234:    ND_PRINT((ndo, \"\\n\\t%s %s%s%s%s/%d\", type,",
          "",
          "[Added Lines]",
          "234:    ND_PRINT((ndo, \"\\n\\t%s %s%s%s%s/%u\", type,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "240:    bp += 6;",
          "241:    len -= 6;",
          "242:   }",
          "243:  }",
          "244:  return;",
          "245: trunc:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "243:   ngroups--;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "271:     ND_PRINT((ndo, \" Sparse-Dense-mode\"));",
          "272:     break;",
          "273:    default:",
          "275:     break;",
          "276:    }",
          "277:   }",
          "",
          "[Removed Lines]",
          "274:     ND_PRINT((ndo, \" mode-%d\", EXTRACT_U_1(bp + 8) >> 4));",
          "",
          "[Added Lines]",
          "275:     ND_PRINT((ndo, \" mode-%u\", EXTRACT_U_1(bp + 8) >> 4));",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "310:   if (EXTRACT_BE_U_4(bp + 12) != 0xffffffff)",
          "311:    ND_PRINT((ndo, \"/%s\", ipaddr_string(ndo, bp + 12)));",
          "312:   ND_TCHECK_4(bp + 24);",
          "314:       (EXTRACT_U_1(bp + 20) & 0x80) ? \"RP-tree\" : \"SPT\",",
          "315:       EXTRACT_BE_U_4(bp + 20) & 0x7fffffff,",
          "316:       EXTRACT_BE_U_4(bp + 24)));",
          "",
          "[Removed Lines]",
          "313:   ND_PRINT((ndo, \" %s pref %d metric %d\",",
          "",
          "[Added Lines]",
          "314:   ND_PRINT((ndo, \" %s pref %u metric %u\",",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "327:  }",
          "328:  ND_TCHECK_1(bp + 4);",
          "329:  if ((EXTRACT_U_1(bp + 4) >> 4) != 1)",
          "331:  return;",
          "333: trunc:",
          "",
          "[Removed Lines]",
          "330:   ND_PRINT((ndo, \" [v%d]\", EXTRACT_U_1(bp + 4) >> 4));",
          "",
          "[Added Lines]",
          "331:   ND_PRINT((ndo, \" [v%u]\", EXTRACT_U_1(bp + 4) >> 4));",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "345: cisco_autorp_print(netdissect_options *ndo,",
          "346:                    const u_char *bp, u_int len)",
          "347: {",
          "352:  if (len < 8)",
          "353:   goto trunc;",
          "",
          "[Removed Lines]",
          "348:  int type;",
          "349:  int numrps;",
          "350:  int hold;",
          "",
          "[Added Lines]",
          "349:  u_int type;",
          "350:  u_int numrps;",
          "351:  u_int hold;",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "399:   char s;",
          "401:   if (len < 4)",
          "",
          "[Removed Lines]",
          "397:  while (numrps--) {",
          "398:   int nentries;",
          "",
          "[Added Lines]",
          "398:  while (numrps != 0) {",
          "399:   u_int nentries;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "428:   bp += 1;",
          "429:   len -= 1;",
          "430:   s = ' ';",
          "432:    if (len < 6)",
          "433:     goto trunc;",
          "434:    ND_TCHECK_6(bp);",
          "436:              ipaddr_string(ndo, bp + 2), EXTRACT_U_1(bp + 1)));",
          "437:    if (EXTRACT_U_1(bp) & 0x02) {",
          "438:     ND_PRINT((ndo, \" bidir\"));",
          "",
          "[Removed Lines]",
          "431:   for (; nentries; nentries--) {",
          "435:    ND_PRINT((ndo, \"%c%s%s/%d\", s, EXTRACT_U_1(bp) & 1 ? \"!\" : \"\",",
          "",
          "[Added Lines]",
          "432:   while (nentries != 0) {",
          "436:    ND_PRINT((ndo, \"%c%s%s/%u\", s, EXTRACT_U_1(bp) & 1 ? \"!\" : \"\",",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "442:    }",
          "443:    s = ',';",
          "444:    bp += 6; len -= 6;",
          "445:   }",
          "446:  }",
          "447:  return;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "446:    nentries--;",
          "448:   numrps--;",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "456:           const u_char *bp, u_int len, const u_char *bp2)",
          "457: {",
          "458:  const struct pim *pim = (const struct pim *)bp;",
          "462: #endif",
          "466:  case 2:",
          "467:   if (!ndo->ndo_vflag) {",
          "468:    ND_PRINT((ndo, \"PIMv%u, %s, length %u\",",
          "471:              len));",
          "472:    return;",
          "473:   } else {",
          "474:    ND_PRINT((ndo, \"PIMv%u, length %u\\n\\t%s\",",
          "476:              len,",
          "478:    pimv2_print(ndo, bp, len, bp2);",
          "479:   }",
          "480:   break;",
          "481:  default:",
          "482:   ND_PRINT((ndo, \"PIMv%u, length %u\",",
          "484:             len));",
          "485:   break;",
          "486:  }",
          "",
          "[Removed Lines]",
          "461:  ND_TCHECK(pim->pim_rsv);",
          "464:  ND_TCHECK(pim->pim_typever);",
          "465:  switch (PIM_VER(pim->pim_typever)) {",
          "469:              PIM_VER(pim->pim_typever),",
          "470:              tok2str(pimv2_type_values,\"Unknown Type\",PIM_TYPE(pim->pim_typever)),",
          "475:              PIM_VER(pim->pim_typever),",
          "477:              tok2str(pimv2_type_values,\"Unknown Type\",PIM_TYPE(pim->pim_typever))));",
          "483:             PIM_VER(pim->pim_typever),",
          "",
          "[Added Lines]",
          "462:  uint8_t pim_typever;",
          "465:  ND_TCHECK_1(pim->pim_rsv);",
          "468:  ND_TCHECK_1(pim->pim_typever);",
          "469:  pim_typever = EXTRACT_U_1(pim->pim_typever);",
          "470:  switch (PIM_VER(pim_typever)) {",
          "474:              PIM_VER(pim_typever),",
          "475:              tok2str(pimv2_type_values,\"Unknown Type\",PIM_TYPE(pim_typever)),",
          "480:              PIM_VER(pim_typever),",
          "482:              tok2str(pimv2_type_values,\"Unknown Type\",PIM_TYPE(pim_typever))));",
          "488:             PIM_VER(pim_typever),",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "560:                  const u_char *bp, u_int len, enum pimv2_addrtype at,",
          "561:                  u_int addr_len, int silent)",
          "562: {",
          "564:  int hdrlen;",
          "566:  if (addr_len == 0) {",
          "",
          "[Removed Lines]",
          "563:  int af;",
          "",
          "[Added Lines]",
          "568:  u_int af;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "697:  const struct pim *pim = (const struct pim *)bp;",
          "698:  int advance;",
          "699:  enum checksum_status cksum_status;",
          "702:  if (len < 2)",
          "703:   goto trunc;",
          "706:  if (pimv2_addr_len != 0)",
          "707:   ND_PRINT((ndo, \", RFC2117-encoding\"));",
          "709:  if (len < 4)",
          "710:   goto trunc;",
          "711:  ND_TCHECK(pim->pim_cksum);",
          "714:   ND_PRINT((ndo, \"(unverified)\"));",
          "715:  } else {",
          "",
          "[Removed Lines]",
          "700:  int pimv2_addr_len;",
          "704:  ND_TCHECK(pim->pim_rsv);",
          "705:  pimv2_addr_len = pim->pim_rsv;",
          "712:  ND_PRINT((ndo, \", cksum 0x%04x \", EXTRACT_BE_U_2(&pim->pim_cksum)));",
          "713:  if (EXTRACT_BE_U_2(&pim->pim_cksum) == 0) {",
          "716:   if (PIM_TYPE(pim->pim_typever) == PIMV2_TYPE_REGISTER) {",
          "",
          "[Added Lines]",
          "705:  u_int pim_typever;",
          "706:  u_int pimv2_addr_len;",
          "710:  ND_TCHECK_1(pim->pim_rsv);",
          "711:  pim_typever = EXTRACT_U_1(pim->pim_typever);",
          "712:  pimv2_addr_len = EXTRACT_U_1(pim->pim_rsv);",
          "719:  ND_PRINT((ndo, \", cksum 0x%04x \", EXTRACT_BE_U_2(pim->pim_cksum)));",
          "720:  if (EXTRACT_BE_U_2(pim->pim_cksum) == 0) {",
          "723:   if (PIM_TYPE(pim_typever) == PIMV2_TYPE_REGISTER) {",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "752:  bp += 4;",
          "753:  len -= 4;",
          "756:  case PIMV2_TYPE_HELLO:",
          "757:      {",
          "758:   uint16_t otype, olen;",
          "",
          "[Removed Lines]",
          "755:  switch (PIM_TYPE(pim->pim_typever)) {",
          "",
          "[Added Lines]",
          "762:  switch (PIM_TYPE(pim_typever)) {",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "792:      override_interval = EXTRACT_BE_U_2(bp + 2);",
          "793:      t_bit = (lan_delay & 0x8000)? 1 : 0;",
          "794:      lan_delay &= ~0x8000;",
          "796:      t_bit, lan_delay, override_interval));",
          "797:     }",
          "798:     break;",
          "",
          "[Removed Lines]",
          "795:      ND_PRINT((ndo, \"\\n\\t    T-bit=%d, LAN delay %dms, Override interval %dms\",",
          "",
          "[Added Lines]",
          "802:      ND_PRINT((ndo, \"\\n\\t    T-bit=%u, LAN delay %ums, Override interval %ums\",",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "824:     if (olen != 4) {",
          "825:      ND_PRINT((ndo, \"ERROR: Option Length != 4 Bytes (%u)\", olen));",
          "826:     } else {",
          "828:      if (EXTRACT_U_1(bp + 1) != 0) {",
          "829:       ND_PRINT((ndo, \", interval \"));",
          "830:       unsigned_relts_print(ndo,",
          "",
          "[Removed Lines]",
          "827:      ND_PRINT((ndo, \"v%d\", EXTRACT_U_1(bp)));",
          "",
          "[Added Lines]",
          "834:      ND_PRINT((ndo, \"v%u\", EXTRACT_U_1(bp)));",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "904:    break;",
          "906:   default:",
          "908:    break;",
          "909:   }",
          "910:   break;",
          "",
          "[Removed Lines]",
          "907:    ND_PRINT((ndo, \"IP ver %d\", IP_V(ip)));",
          "",
          "[Added Lines]",
          "914:    ND_PRINT((ndo, \"IP ver %u\", IP_V(ip)));",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "966:   uint16_t holdtime;",
          "967:   uint16_t njoin;",
          "968:   uint16_t nprune;",
          "972:    ND_PRINT((ndo, \", upstream-neighbor: \"));",
          "973:    if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_unicast, pimv2_addr_len, 0)) < 0)",
          "974:     goto trunc;",
          "",
          "[Removed Lines]",
          "969:   int i, j;",
          "",
          "[Added Lines]",
          "976:   u_int i, j;",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1019:  case PIMV2_TYPE_BOOTSTRAP:",
          "1020:  {",
          "1024:   if (len < 2)",
          "",
          "[Removed Lines]",
          "1021:   int i, j, frpcnt;",
          "",
          "[Added Lines]",
          "1028:   u_int i, j, frpcnt;",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1030:   if (len < 1)",
          "1031:    goto trunc;",
          "1032:   ND_TCHECK_1(bp);",
          "1034:   if (len < 2)",
          "1035:    goto trunc;",
          "1036:   ND_TCHECK_1(bp + 2);",
          "1038:   bp += 2;",
          "1039:   len -= 2;",
          "",
          "[Removed Lines]",
          "1033:   ND_PRINT((ndo, \" hashmlen=%d\", EXTRACT_U_1(bp)));",
          "1037:   ND_PRINT((ndo, \" BSRprio=%d\", EXTRACT_U_1(bp + 1)));",
          "",
          "[Added Lines]",
          "1040:   ND_PRINT((ndo, \" hashmlen=%u\", EXTRACT_U_1(bp)));",
          "1044:   ND_PRINT((ndo, \" BSRprio=%u\", EXTRACT_U_1(bp + 1)));",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1048:   for (i = 0; len > 0; i++) {",
          "1051:    if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_group, pimv2_addr_len, 0)) < 0)",
          "1052:     goto trunc;",
          "1053:    bp += advance;",
          "",
          "[Removed Lines]",
          "1050:    ND_PRINT((ndo, \" (group%d: \", i));",
          "",
          "[Added Lines]",
          "1057:    ND_PRINT((ndo, \" (group%u: \", i));",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1057:    if (len < 1)",
          "1058:     goto trunc;",
          "1059:    ND_TCHECK_1(bp);",
          "1061:    if (len < 2)",
          "1062:     goto trunc;",
          "1063:    ND_TCHECK_1(bp + 1);",
          "1065:    if (len < 4)",
          "1066:     goto trunc;",
          "1067:    bp += 4;",
          "",
          "[Removed Lines]",
          "1060:    ND_PRINT((ndo, \" RPcnt=%d\", EXTRACT_U_1(bp)));",
          "1064:    ND_PRINT((ndo, \" FRPcnt=%d\", frpcnt = EXTRACT_U_1(bp + 1)));",
          "",
          "[Added Lines]",
          "1067:    ND_PRINT((ndo, \" RPcnt=%u\", EXTRACT_U_1(bp)));",
          "1071:    frpcnt = EXTRACT_U_1(bp + 1);",
          "1072:    ND_PRINT((ndo, \" FRPcnt=%u\", frpcnt));",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1070:    for (j = 0; j < frpcnt && len > 0; j++) {",
          "1073:     if ((advance = pimv2_addr_print(ndo, bp, len,",
          "1074:         pimv2_unicast,",
          "1075:         pimv2_addr_len,",
          "",
          "[Removed Lines]",
          "1072:     ND_PRINT((ndo, \" RP%d=\", j));",
          "",
          "[Added Lines]",
          "1080:     ND_PRINT((ndo, \" RP%u=\", j));",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1087:     if (len < 3)",
          "1088:      goto trunc;",
          "1089:     ND_TCHECK_1(bp + 2);",
          "1091:     if (len < 4)",
          "1092:      goto trunc;",
          "1093:     bp += 4;",
          "",
          "[Removed Lines]",
          "1090:     ND_PRINT((ndo, \",prio=%d\", EXTRACT_U_1(bp + 2)));",
          "",
          "[Added Lines]",
          "1098:     ND_PRINT((ndo, \",prio=%u\", EXTRACT_U_1(bp + 2)));",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1118:  case PIMV2_TYPE_CANDIDATE_RP:",
          "1119:  {",
          "1123:   if (len < 1)",
          "1124:    goto trunc;",
          "1125:   ND_TCHECK_1(bp);",
          "1127:   pfxcnt = EXTRACT_U_1(bp);",
          "1128:   if (len < 2)",
          "1129:    goto trunc;",
          "1130:   ND_TCHECK_1(bp + 1);",
          "1132:   if (len < 4)",
          "1133:    goto trunc;",
          "1134:   ND_TCHECK_2(bp + 2);",
          "",
          "[Removed Lines]",
          "1120:   int i, pfxcnt;",
          "1126:   ND_PRINT((ndo, \" prefix-cnt=%d\", EXTRACT_U_1(bp)));",
          "1131:   ND_PRINT((ndo, \" prio=%d\", EXTRACT_U_1(bp + 1)));",
          "",
          "[Added Lines]",
          "1128:   u_int i, pfxcnt;",
          "1134:   ND_PRINT((ndo, \" prefix-cnt=%u\", EXTRACT_U_1(bp)));",
          "1139:   ND_PRINT((ndo, \" prio=%u\", EXTRACT_U_1(bp + 1)));",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1148:   for (i = 0; i < pfxcnt && len > 0; i++) {",
          "1150:    if ((advance = pimv2_addr_print(ndo, bp, len, pimv2_group, pimv2_addr_len, 0)) < 0)",
          "1151:     goto trunc;",
          "1152:    bp += advance;",
          "",
          "[Removed Lines]",
          "1149:    ND_PRINT((ndo, \" Group%d=\", i));",
          "",
          "[Added Lines]",
          "1157:    ND_PRINT((ndo, \" Group%u=\", i));",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1182:   default:",
          "1184:   break;",
          "1185:  }",
          "",
          "[Removed Lines]",
          "1183:   ND_PRINT((ndo, \" [type %d]\", PIM_TYPE(pim->pim_typever)));",
          "",
          "[Added Lines]",
          "1191:   ND_PRINT((ndo, \" [type %u]\", PIM_TYPE(pim_typever)));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f085c93f59fb2332e09f3da20eef5fb2bbd04431",
      "candidate_info": {
        "commit_hash": "f085c93f59fb2332e09f3da20eef5fb2bbd04431",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/f085c93f59fb2332e09f3da20eef5fb2bbd04431",
        "files": [
          "print-ahcp.c",
          "print-aoe.c",
          "print-bfd.c",
          "print-cdp.c",
          "print-cfm.c",
          "print-dccp.c",
          "print-domain.c",
          "print-isoclns.c",
          "print-krb.c",
          "print-lldp.c",
          "print-msdp.c",
          "print-openflow-1.0.c",
          "print-ospf.c",
          "print-pim.c",
          "print-pppoe.c",
          "print-pptp.c",
          "print-radius.c",
          "print-rip.c",
          "print-rpki-rtr.c",
          "print-snmp.c",
          "print-tcp.c",
          "print-udld.c",
          "print-vtp.c",
          "smbutil.c"
        ],
        "message": "Use more the EXTRACT_U_1() macro (31/n)\n\nIn ND_PRINT() macro call(s) (step 9).\n\n*(p)",
        "before_after_code_files": [
          "print-ahcp.c||print-ahcp.c",
          "print-aoe.c||print-aoe.c",
          "print-bfd.c||print-bfd.c",
          "print-cdp.c||print-cdp.c",
          "print-cfm.c||print-cfm.c",
          "print-dccp.c||print-dccp.c",
          "print-domain.c||print-domain.c",
          "print-isoclns.c||print-isoclns.c",
          "print-krb.c||print-krb.c",
          "print-lldp.c||print-lldp.c",
          "print-msdp.c||print-msdp.c",
          "print-openflow-1.0.c||print-openflow-1.0.c",
          "print-ospf.c||print-ospf.c",
          "print-pim.c||print-pim.c",
          "print-pppoe.c||print-pppoe.c",
          "print-pptp.c||print-pptp.c",
          "print-radius.c||print-radius.c",
          "print-rip.c||print-rip.c",
          "print-rpki-rtr.c||print-rpki-rtr.c",
          "print-snmp.c||print-snmp.c",
          "print-tcp.c||print-tcp.c",
          "print-udld.c||print-udld.c",
          "print-vtp.c||print-vtp.c",
          "smbutil.c||smbutil.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-pim.c||print-pim.c"
          ],
          "candidate": [
            "print-pim.c||print-pim.c"
          ]
        }
      },
      "candidate_diff": {
        "print-ahcp.c||print-ahcp.c": [
          "File: print-ahcp.c -> print-ahcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "373:    } else {",
          "375:     ND_TCHECK_1(cp);",
          "377:     cp += 1;",
          "379:     ND_TCHECK_1(cp);",
          "381:     cp += 1;",
          "383:     ND_TCHECK_4(cp);",
          "",
          "[Removed Lines]",
          "376:     ND_PRINT((ndo, \"\\n\\tHopcount %u\", *cp));",
          "380:     ND_PRINT((ndo, \", Original Hopcount %u\", *cp));",
          "",
          "[Added Lines]",
          "376:     ND_PRINT((ndo, \"\\n\\tHopcount %u\", EXTRACT_U_1(cp)));",
          "380:     ND_PRINT((ndo, \", Original Hopcount %u\", EXTRACT_U_1(cp)));",
          "",
          "---------------"
        ],
        "print-aoe.c||print-aoe.c": [
          "File: print-aoe.c -> print-aoe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:  cp += 1;",
          "155:  ND_TCHECK_1(cp);",
          "157:  cp += 1;",
          "159:  ND_TCHECK_1(cp);",
          "161:  cp += 1;",
          "163:  ND_TCHECK_1(cp);",
          "165:  cp += 1;",
          "167:  ND_TCHECK_1(cp);",
          "169:  cp += 1;",
          "171:  ND_TCHECK_1(cp);",
          "173:  cp += 1;",
          "175:  ND_TCHECK_1(cp);",
          "177:  cp += 1;",
          "179:  ND_TCHECK_1(cp);",
          "181:  cp += 1;",
          "183:  ND_TCHECK_1(cp);",
          "185:  cp += 1;",
          "187:  ND_TCHECK_1(cp);",
          "189:  cp += 1;",
          "191:  ND_TCHECK_2(cp);",
          "",
          "[Removed Lines]",
          "156:  ND_PRINT((ndo, \", Err/Feature: %u\", *cp));",
          "160:  ND_PRINT((ndo, \", Sector Count: %u\", *cp));",
          "164:  ND_PRINT((ndo, \", Cmd/Status: %u\", *cp));",
          "168:  ND_PRINT((ndo, \"\\n\\tlba0: %u\", *cp));",
          "172:  ND_PRINT((ndo, \", lba1: %u\", *cp));",
          "176:  ND_PRINT((ndo, \", lba2: %u\", *cp));",
          "180:  ND_PRINT((ndo, \", lba3: %u\", *cp));",
          "184:  ND_PRINT((ndo, \", lba4: %u\", *cp));",
          "188:  ND_PRINT((ndo, \", lba5: %u\", *cp));",
          "",
          "[Added Lines]",
          "156:  ND_PRINT((ndo, \", Err/Feature: %u\", EXTRACT_U_1(cp)));",
          "160:  ND_PRINT((ndo, \", Sector Count: %u\", EXTRACT_U_1(cp)));",
          "164:  ND_PRINT((ndo, \", Cmd/Status: %u\", EXTRACT_U_1(cp)));",
          "168:  ND_PRINT((ndo, \"\\n\\tlba0: %u\", EXTRACT_U_1(cp)));",
          "172:  ND_PRINT((ndo, \", lba1: %u\", EXTRACT_U_1(cp)));",
          "176:  ND_PRINT((ndo, \", lba2: %u\", EXTRACT_U_1(cp)));",
          "180:  ND_PRINT((ndo, \", lba3: %u\", EXTRACT_U_1(cp)));",
          "184:  ND_PRINT((ndo, \", lba4: %u\", EXTRACT_U_1(cp)));",
          "188:  ND_PRINT((ndo, \", lba5: %u\", EXTRACT_U_1(cp)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "222:  cp += 2;",
          "224:  ND_TCHECK_1(cp);",
          "226:  cp += 1;",
          "228:  ND_TCHECK_1(cp);",
          "",
          "[Removed Lines]",
          "225:  ND_PRINT((ndo, \", Sector Count: %u\", *cp));",
          "",
          "[Added Lines]",
          "225:  ND_PRINT((ndo, \", Sector Count: %u\", EXTRACT_U_1(cp)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "366:  cp += 2;",
          "368:  ND_TCHECK_1(cp);",
          "370:  cp += 1;",
          "372:  ND_TCHECK_1(cp);",
          "",
          "[Removed Lines]",
          "369:  ND_PRINT((ndo, \", Minor: 0x%02x\", *cp));",
          "",
          "[Added Lines]",
          "369:  ND_PRINT((ndo, \", Minor: 0x%02x\", EXTRACT_U_1(cp)));",
          "",
          "---------------"
        ],
        "print-bfd.c||print-bfd.c": [
          "File: print-bfd.c -> print-bfd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "191:                  bfd_auth_header->auth_type,",
          "192:                  bfd_auth_header->auth_len));",
          "193:                 pptr += 2;",
          "196:         switch(bfd_auth_header->auth_type) {",
          "197:             case AUTH_PASSWORD:",
          "",
          "[Removed Lines]",
          "194:                 ND_PRINT((ndo, \"\\n\\t  Auth Key ID: %d\", *pptr));",
          "",
          "[Added Lines]",
          "194:                 ND_PRINT((ndo, \"\\n\\t  Auth Key ID: %d\", EXTRACT_U_1(pptr)));",
          "",
          "---------------"
        ],
        "print-cdp.c||print-cdp.c": [
          "File: print-cdp.c -> print-cdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "203:    if (len < 1)",
          "204:        goto trunc;",
          "206:    break;",
          "",
          "[Removed Lines]",
          "205:    ND_PRINT((ndo, \"%s\", *(tptr) ? \"full\": \"half\"));",
          "",
          "[Added Lines]",
          "205:    ND_PRINT((ndo, \"%s\", EXTRACT_U_1(tptr) ? \"full\": \"half\"));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "225:    if (len < 1)",
          "226:        goto trunc;",
          "228:    break;",
          "230:    if (len < 1)",
          "231:        goto trunc;",
          "233:    break;",
          "235:    ND_PRINT((ndo, \"'\"));",
          "",
          "[Removed Lines]",
          "227:    ND_PRINT((ndo, \"0x%02x\", *(tptr)));",
          "232:    ND_PRINT((ndo, \"0x%02x\", *(tptr)));",
          "",
          "[Added Lines]",
          "227:    ND_PRINT((ndo, \"0x%02x\", EXTRACT_U_1(tptr)));",
          "232:    ND_PRINT((ndo, \"0x%02x\", EXTRACT_U_1(tptr)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "244:    if (len < 1)",
          "245:        goto trunc;",
          "247:    if (len > 1) {",
          "248:     ND_PRINT((ndo, \"/\"));",
          "249:     (void)fn_printn(ndo, tptr + 1, len - 1, NULL);",
          "",
          "[Removed Lines]",
          "246:    ND_PRINT((ndo, \"0x%02x\", *(tptr)));",
          "",
          "[Added Lines]",
          "246:    ND_PRINT((ndo, \"0x%02x\", EXTRACT_U_1(tptr)));",
          "",
          "---------------"
        ],
        "print-cfm.c||print-cfm.c": [
          "File: print-cfm.c -> print-cfm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "588:             ND_PRINT((ndo, \", Vendor: %s (%u), Sub-Type %u\",",
          "589:                    tok2str(oui_values,\"Unknown\", EXTRACT_BE_U_3(tptr)),",
          "590:                    EXTRACT_BE_U_3(tptr),",
          "592:             hexdump = TRUE;",
          "593:             break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "591:                    EXTRACT_U_1(tptr + 3)));",
          "",
          "---------------"
        ],
        "print-dccp.c||print-dccp.c": [
          "File: print-dccp.c -> print-dccp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "542:   optlen = EXTRACT_U_1(option + 1);",
          "543:   if (optlen < 2) {",
          "544:    if (*option >= 128)",
          "546:    else",
          "547:     ND_PRINT((ndo, \"%s optlen too short\",",
          "548:        tok2str(dccp_option_values, \"Option %u\", EXTRACT_U_1(option))));",
          "",
          "[Removed Lines]",
          "545:     ND_PRINT((ndo, \"CCID option %u optlen too short\", *option));",
          "",
          "[Added Lines]",
          "545:     ND_PRINT((ndo, \"CCID option %u optlen too short\", EXTRACT_U_1(option)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "554:  if (hlen < optlen) {",
          "555:   if (*option >= 128)",
          "556:    ND_PRINT((ndo, \"CCID option %u optlen goes past header length\",",
          "558:   else",
          "559:    ND_PRINT((ndo, \"%s optlen goes past header length\",",
          "560:       tok2str(dccp_option_values, \"Option %u\", EXTRACT_U_1(option))));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "557:       EXTRACT_U_1(option)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "563:  ND_TCHECK2(*option, optlen);",
          "565:  if (*option >= 128) {",
          "567:   switch (optlen) {",
          "568:    case 4:",
          "569:     ND_PRINT((ndo, \" %u\", EXTRACT_BE_U_2(option + 2)));",
          "",
          "[Removed Lines]",
          "566:   ND_PRINT((ndo, \"CCID option %d\", *option));",
          "",
          "[Added Lines]",
          "566:   ND_PRINT((ndo, \"CCID option %d\", EXTRACT_U_1(option)));",
          "",
          "---------------"
        ],
        "print-domain.c||print-domain.c": [
          "File: print-domain.c -> print-domain.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:  ND_PRINT((ndo, \"\\\\[x\"));",
          "106:  for (bitp = cp + 1, b = bitlen; bitp < lim && b > 7; b -= 8, bitp++) {",
          "107:   ND_TCHECK(*bitp);",
          "109:  }",
          "110:  if (b > 4) {",
          "111:   ND_TCHECK(*bitp);",
          "",
          "[Removed Lines]",
          "108:   ND_PRINT((ndo, \"%02x\", *bitp));",
          "",
          "[Added Lines]",
          "108:   ND_PRINT((ndo, \"%02x\", EXTRACT_U_1(bitp)));",
          "",
          "---------------"
        ],
        "print-isoclns.c||print-isoclns.c": [
          "File: print-isoclns.c -> print-isoclns.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "678:  }",
          "680:  if (ndo->ndo_eflag)",
          "683:  switch (*p) {",
          "",
          "[Removed Lines]",
          "681:   ND_PRINT((ndo, \"OSI NLPID %s (0x%02x): \", tok2str(nlpid_values, \"Unknown\", EXTRACT_U_1(p)), *p));",
          "",
          "[Added Lines]",
          "681:   ND_PRINT((ndo, \"OSI NLPID %s (0x%02x): \", tok2str(nlpid_values, \"Unknown\", EXTRACT_U_1(p)), EXTRACT_U_1(p)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "719:  default:",
          "720:   if (!ndo->ndo_eflag)",
          "722:   ND_PRINT((ndo, \"%slength: %u\", ndo->ndo_eflag ? \"\" : \", \", length));",
          "723:   if (length > 1)",
          "724:    print_unknown_data(ndo, p, \"\\n\\t\", length);",
          "",
          "[Removed Lines]",
          "721:    ND_PRINT((ndo, \"OSI NLPID 0x%02x unknown\", *p));",
          "",
          "[Added Lines]",
          "721:    ND_PRINT((ndo, \"OSI NLPID 0x%02x unknown\", EXTRACT_U_1(p)));",
          "",
          "---------------"
        ],
        "print-krb.c||print-krb.c": [
          "File: print-krb.c -> print-krb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:   ND_PRINT((ndo, \" (%d)\", EXTRACT_U_1(cp)));",
          "212:   cp++;",
          "213:   ND_TCHECK(*cp);",
          "215:   break;",
          "217:  case AUTH_MSG_KDC_REPLY:",
          "",
          "[Removed Lines]",
          "214:   ND_PRINT((ndo, \" (%d)\", *cp));",
          "",
          "[Added Lines]",
          "214:   ND_PRINT((ndo, \" (%d)\", EXTRACT_U_1(cp)));",
          "",
          "---------------"
        ],
        "print-lldp.c||print-lldp.c": [
          "File: print-lldp.c -> print-lldp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1209:             }",
          "1210:      ND_PRINT((ndo, \"\\n\\t    Control - Protocol Control (type 0x%x, length %d)\",",
          "1211:   LLDP_DCBX_CONTROL_TLV, tlv_len));",
          "1213:      ND_PRINT((ndo, \"\\n\\t      Max_Version: %d\", EXTRACT_U_1(tptr + 1)));",
          "1214:      ND_PRINT((ndo, \"\\n\\t      Sequence Number: %d\", EXTRACT_BE_U_4(tptr + 2)));",
          "1215:      ND_PRINT((ndo, \"\\n\\t      Acknowledgement Number: %d\",",
          "",
          "[Removed Lines]",
          "1212:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", *tptr));",
          "",
          "[Added Lines]",
          "1212:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", EXTRACT_U_1(tptr)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1221:             }",
          "1222:      ND_PRINT((ndo, \"\\n\\t    Feature - Priority Group (type 0x%x, length %d)\",",
          "1223:   LLDP_DCBX_PRIORITY_GROUPS_TLV, tlv_len));",
          "1225:      ND_PRINT((ndo, \"\\n\\t      Max_Version: %d\", EXTRACT_U_1(tptr + 1)));",
          "1226:      ND_PRINT((ndo, \"\\n\\t      Info block(0x%02X): \", EXTRACT_U_1(tptr + 2)));",
          "1227:      tval = EXTRACT_U_1(tptr + 2);",
          "",
          "[Removed Lines]",
          "1224:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", *tptr));",
          "",
          "[Added Lines]",
          "1224:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", EXTRACT_U_1(tptr)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1252:      ND_PRINT((ndo, \"\\n\\t    Feature - Priority Flow Control\"));",
          "1253:      ND_PRINT((ndo, \" (type 0x%x, length %d)\",",
          "1254:   LLDP_DCBX_PRIORITY_FLOW_CONTROL_TLV, tlv_len));",
          "1256:      ND_PRINT((ndo, \"\\n\\t      Max_Version: %d\", EXTRACT_U_1(tptr + 1)));",
          "1257:      ND_PRINT((ndo, \"\\n\\t      Info block(0x%02X): \", EXTRACT_U_1(tptr + 2)));",
          "1258:      tval = EXTRACT_U_1(tptr + 2);",
          "",
          "[Removed Lines]",
          "1255:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", *tptr));",
          "",
          "[Added Lines]",
          "1255:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", EXTRACT_U_1(tptr)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1273:             }",
          "1274:      ND_PRINT((ndo, \"\\n\\t    Feature - Application (type 0x%x, length %d)\",",
          "1275:   LLDP_DCBX_APPLICATION_TLV, tlv_len));",
          "1277:      ND_PRINT((ndo, \"\\n\\t      Max_Version: %d\", EXTRACT_U_1(tptr + 1)));",
          "1278:      ND_PRINT((ndo, \"\\n\\t      Info block(0x%02X): \", EXTRACT_U_1(tptr + 2)));",
          "1279:      tval = EXTRACT_U_1(tptr + 2);",
          "",
          "[Removed Lines]",
          "1276:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", *tptr));",
          "",
          "[Added Lines]",
          "1276:      ND_PRINT((ndo, \"\\n\\t      Oper_Version: %d\", EXTRACT_U_1(tptr)));",
          "",
          "---------------"
        ],
        "print-msdp.c||print-msdp.c": [
          "File: print-msdp.c -> print-msdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "60:    else",
          "61:     ND_PRINT((ndo, \" SA-Response\"));",
          "62:    ND_TCHECK(*sp);",
          "64:    if ((u_int)((*sp * 12) + 8) < len) {",
          "65:     ND_PRINT((ndo, \" [w/data]\"));",
          "66:     if (ndo->ndo_vflag > 1) {",
          "",
          "[Removed Lines]",
          "63:    ND_PRINT((ndo, \" %u entries\", *sp));",
          "",
          "[Added Lines]",
          "63:    ND_PRINT((ndo, \" %u entries\", EXTRACT_U_1(sp)));",
          "",
          "---------------"
        ],
        "print-openflow-1.0.c||print-openflow-1.0.c": [
          "File: print-openflow-1.0.c -> print-openflow-1.0.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "784:    goto invalid;",
          "786:   ND_TCHECK_1(cp);",
          "788:   cp += 1;",
          "790:   ND_TCHECK_7(cp);",
          "",
          "[Removed Lines]",
          "787:   ND_PRINT((ndo, \", index %u\", *cp));",
          "",
          "[Added Lines]",
          "787:   ND_PRINT((ndo, \", index %u\", EXTRACT_U_1(cp)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "808:    goto invalid;",
          "810:   ND_TCHECK_1(cp);",
          "812:   cp += 1;",
          "814:   ND_TCHECK_3(cp);",
          "",
          "[Removed Lines]",
          "811:   ND_PRINT((ndo, \", index %u\", *cp));",
          "",
          "[Added Lines]",
          "811:   ND_PRINT((ndo, \", index %u\", EXTRACT_U_1(cp)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1397:  ND_TCHECK_1(cp);",
          "1398:  if (! (wildcards & OFPFW_NW_TOS))",
          "1400:  cp += 1;",
          "1402:  ND_TCHECK_1(cp);",
          "",
          "[Removed Lines]",
          "1399:   ND_PRINT((ndo, \"%smatch nw_tos 0x%02x\", pfx, *cp));",
          "",
          "[Added Lines]",
          "1399:   ND_PRINT((ndo, \"%smatch nw_tos 0x%02x\", pfx, EXTRACT_U_1(cp)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1560:   case OFPAT_SET_NW_TOS:",
          "1562:    ND_TCHECK_1(cp);",
          "1564:    cp += 1;",
          "1566:    ND_TCHECK_3(cp);",
          "",
          "[Removed Lines]",
          "1563:    ND_PRINT((ndo, \", nw_tos 0x%02x\", *cp));",
          "",
          "[Added Lines]",
          "1563:    ND_PRINT((ndo, \", nw_tos 0x%02x\", EXTRACT_U_1(cp)));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1628:  cp += 4;",
          "1630:  ND_TCHECK_1(cp);",
          "1632:  cp += 1;",
          "1634:  ND_TCHECK_3(cp);",
          "",
          "[Removed Lines]",
          "1631:  ND_PRINT((ndo, \", n_tables %u\", *cp));",
          "",
          "[Added Lines]",
          "1631:  ND_PRINT((ndo, \", n_tables %u\", EXTRACT_U_1(cp)));",
          "",
          "---------------"
        ],
        "print-ospf.c||print-ospf.c": [
          "File: print-ospf.c -> print-ospf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "231:             }",
          "232:             ND_PRINT((ndo, \"%s (%u)\",",
          "233:                    tok2str(lsa_opaque_grace_tlv_reason_values, \"Unknown\", EXTRACT_U_1(tptr)),",
          "235:             break;",
          "237:         case LS_OPAQUE_GRACE_TLV_INT_ADDRESS:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "234:                    EXTRACT_U_1(tptr)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "384:                     ND_PRINT((ndo, \"\\n\\t\\tBandwidth Constraints Model ID: %s (%u)\",",
          "385:                            tok2str(diffserv_te_bc_values, \"unknown\", EXTRACT_U_1(tptr)),",
          "387:       if (subtlv_length % 4 != 0) {",
          "388:    ND_PRINT((ndo, \"\\n\\t\\tlength %u != N x 4\", subtlv_length));",
          "389:    goto invalid;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "386:                            EXTRACT_U_1(tptr)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "440:       }",
          "441:                     ND_PRINT((ndo, \", %s (%u)\",",
          "442:                            tok2str(lsa_opaque_te_tlv_link_type_sub_tlv_values,\"unknown\",EXTRACT_U_1(tptr)),",
          "444:                     break;",
          "446:                 case LS_OPAQUE_TE_LINK_SUBTLV_SHARED_RISK_GROUP:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "443:                            EXTRACT_U_1(tptr)));",
          "",
          "---------------"
        ],
        "print-pim.c||print-pim.c": [
          "File: print-pim.c -> print-pim.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "824:     if (olen != 4) {",
          "825:      ND_PRINT((ndo, \"ERROR: Option Length != 4 Bytes (%u)\", olen));",
          "826:     } else {",
          "828:      if (*(bp+1) != 0) {",
          "829:       ND_PRINT((ndo, \", interval \"));",
          "830:       unsigned_relts_print(ndo, *(bp+1));",
          "",
          "[Removed Lines]",
          "827:      ND_PRINT((ndo, \"v%d\", *bp));",
          "",
          "[Added Lines]",
          "827:      ND_PRINT((ndo, \"v%d\", EXTRACT_U_1(bp)));",
          "",
          "---------------"
        ],
        "print-pppoe.c||print-pppoe.c": [
          "File: print-pppoe.c -> print-pppoe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "176:      ND_PRINT((ndo, \" [%s 0x\", tok2str(pppoetag2str, \"TAG-0x%x\", tag_type)));",
          "177:      for (v=p; v<p+tag_len; v++) {",
          "179:      }",
          "180:      ND_PRINT((ndo, \"]\"));",
          "181:     }",
          "",
          "[Removed Lines]",
          "178:       ND_PRINT((ndo, \"%02X\", *v));",
          "",
          "[Added Lines]",
          "178:       ND_PRINT((ndo, \"%02X\", EXTRACT_U_1(v)));",
          "",
          "---------------"
        ],
        "print-pptp.c||print-pptp.c": [
          "File: print-pptp.c -> print-pptp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "336: pptp_err_code_print(netdissect_options *ndo,",
          "337:                     const uint8_t *err_code)",
          "338: {",
          "340:  if (ndo->ndo_vflag) {",
          "341:   ND_PRINT((ndo, \":%s\", tok2str(pptp_errcode_str, \"?\", EXTRACT_U_1(err_code))));",
          "342:  }",
          "",
          "[Removed Lines]",
          "339:  ND_PRINT((ndo, \" ERR_CODE(%u\", *err_code));",
          "",
          "[Added Lines]",
          "339:  ND_PRINT((ndo, \" ERR_CODE(%u\", EXTRACT_U_1(err_code)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "482: pptp_result_code_print(netdissect_options *ndo,",
          "483:                        const uint8_t *result_code, int ctrl_msg_type)",
          "484: {",
          "486:  if (ndo->ndo_vflag) {",
          "487:   const struct tok *dict =",
          "488:    ctrl_msg_type == PPTP_CTRL_MSG_TYPE_SCCRP    ? pptp_scrrp_str :",
          "",
          "[Removed Lines]",
          "485:  ND_PRINT((ndo, \" RESULT_CODE(%u\", *result_code));",
          "",
          "[Added Lines]",
          "485:  ND_PRINT((ndo, \" RESULT_CODE(%u\", EXTRACT_U_1(result_code)));",
          "",
          "---------------"
        ],
        "print-radius.c||print-radius.c": [
          "File: print-radius.c -> print-radius.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "594:            if (length < 3)",
          "595:               goto trunc;",
          "596:            if (*data && (*data <=0x1F) )",
          "598:            else",
          "599:               ND_PRINT((ndo, \"Tag[Unused] \"));",
          "600:            data++;",
          "",
          "[Removed Lines]",
          "597:               ND_PRINT((ndo, \"Tag[%u] \", *data));",
          "",
          "[Added Lines]",
          "597:               ND_PRINT((ndo, \"Tag[%u] \", EXTRACT_U_1(data)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "614:               if (length < 1)",
          "615:                  goto trunc;",
          "616:               if (*data)",
          "618:               else",
          "619:                 ND_PRINT((ndo, \"Tag[Unused] \"));",
          "620:               data++;",
          "",
          "[Removed Lines]",
          "617:                 ND_PRINT((ndo, \"Tag[%u] \", *data));",
          "",
          "[Added Lines]",
          "617:                 ND_PRINT((ndo, \"Tag[%u] \", EXTRACT_U_1(data)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "626:               goto trunc;",
          "627:            ND_PRINT((ndo, \"%s (0x%02x) \",",
          "628:                   tok2str(rfc4675_tagged,\"Unknown tag\",EXTRACT_U_1(data)),",
          "630:            data++;",
          "631:            length--;",
          "632:         break;",
          "633:    }",
          "635:    for (i=0; i < length && EXTRACT_U_1(data); i++, data++)",
          "638:    return;",
          "",
          "[Removed Lines]",
          "636:        ND_PRINT((ndo, \"%c\", (*data < 32 || *data > 126) ? '.' : *data));",
          "",
          "[Added Lines]",
          "629:                   EXTRACT_U_1(data)));",
          "636:        ND_PRINT((ndo, \"%c\", (EXTRACT_U_1(data) < 32 || EXTRACT_U_1(data) > 126) ? '.' : EXTRACT_U_1(data)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "693:                vendor_type,",
          "694:                vendor_length));",
          "695:         for (idx = 0; idx < vendor_length ; idx++, data++)",
          "697:         length-=vendor_length;",
          "698:     }",
          "699:     return;",
          "",
          "[Removed Lines]",
          "696:             ND_PRINT((ndo, \"%c\", (*data < 32 || *data > 126) ? '.' : *data));",
          "",
          "[Added Lines]",
          "696:             ND_PRINT((ndo, \"%c\", (EXTRACT_U_1(data) < 32 || EXTRACT_U_1(data) > 126) ? '.' : EXTRACT_U_1(data)));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "734:          if (!*data)",
          "735:             ND_PRINT((ndo, \"Tag[Unused] \"));",
          "736:          else",
          "738:          data++;",
          "739:          data_value = EXTRACT_BE_U_3(data);",
          "740:       }",
          "",
          "[Removed Lines]",
          "737:             ND_PRINT((ndo, \"Tag[%d] \", *data));",
          "",
          "[Added Lines]",
          "737:             ND_PRINT((ndo, \"Tag[%d] \", EXTRACT_U_1(data)));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "797:         case TUNNEL_PREFERENCE:",
          "798:             if (*data)",
          "800:             else",
          "801:                ND_PRINT((ndo, \"Tag[Unused] \"));",
          "802:             data++;",
          "",
          "[Removed Lines]",
          "799:                ND_PRINT((ndo, \"Tag[%d] \", *data));",
          "",
          "[Added Lines]",
          "799:                ND_PRINT((ndo, \"Tag[%d] \", EXTRACT_U_1(data)));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "806:         case EGRESS_VLAN_ID:",
          "807:             ND_PRINT((ndo, \"%s (0x%02x) \",",
          "808:                    tok2str(rfc4675_tagged,\"Unknown tag\",EXTRACT_U_1(data)),",
          "810:             data++;",
          "811:             ND_PRINT((ndo, \"%d\", EXTRACT_BE_U_3(data)));",
          "812:           break;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "809:                    EXTRACT_U_1(data)));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1008:               ND_PRINT((ndo, \"User cannot change password\"));",
          "1009:            data++;",
          "1010:            ND_TCHECK_1(data);",
          "1012:            data++;",
          "1013:            ND_PRINT((ndo, \", created at: \"));",
          "1014:            ND_TCHECK_4(data);",
          "",
          "[Removed Lines]",
          "1011:            ND_PRINT((ndo, \", Min password length: %d\", *data));",
          "",
          "[Added Lines]",
          "1011:            ND_PRINT((ndo, \", Min password length: %d\", EXTRACT_U_1(data)));",
          "",
          "---------------"
        ],
        "print-rip.c||print-rip.c": [
          "File: print-rip.c -> print-rip.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "138:    u_int i = 0;",
          "139:    ND_PRINT((ndo, \"\\n\\t  Simple Text Authentication data: \"));",
          "140:    for (; i < RIP_AUTHLEN; p++, i++)",
          "142:   } else if (auth_type == 3) {",
          "143:    ND_PRINT((ndo, \"\\n\\t  Auth header:\"));",
          "144:    ND_PRINT((ndo, \" Packet Len %u,\", EXTRACT_BE_U_2((const uint8_t *)ni + 4)));",
          "",
          "[Removed Lines]",
          "141:     ND_PRINT((ndo, \"%c\", ND_ISPRINT(*p) ? *p : '.'));",
          "",
          "[Added Lines]",
          "141:     ND_PRINT((ndo, \"%c\",",
          "142:       ND_ISPRINT(*p) ? EXTRACT_U_1(p) : '.'));",
          "",
          "---------------"
        ],
        "print-rpki-rtr.c||print-rpki-rtr.c": [
          "File: print-rpki-rtr.c -> print-rpki-rtr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "194:  return len;",
          "195:     }",
          "196:     if (len < sizeof(rpki_rtr_pdu)) {",
          "",
          "[Removed Lines]",
          "193:  ND_PRINT((ndo, \"%sRPKI-RTRv%u (unknown)\", indent_string(8), *tptr));",
          "",
          "[Added Lines]",
          "193:  ND_PRINT((ndo, \"%sRPKI-RTRv%u (unknown)\", indent_string(8), EXTRACT_U_1(tptr)));",
          "",
          "---------------"
        ],
        "print-snmp.c||print-snmp.c": [
          "File: print-snmp.c -> print-snmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "683:  ND_TCHECK2(*p, asnlen);",
          "684:  for (i = asnlen; i-- > 0; p++)",
          "686:  return 0;",
          "688: trunc:",
          "",
          "[Removed Lines]",
          "685:   ND_PRINT((ndo, \"_%.2x\", *p));",
          "",
          "[Added Lines]",
          "685:   ND_PRINT((ndo, \"_%.2x\", EXTRACT_U_1(p)));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "712:   ND_PRINT((ndo, \"\\\"\"));",
          "713:  } else {",
          "714:   for (i = asnlen; i-- > 0; p++) {",
          "716:    first = 0;",
          "717:   }",
          "718:  }",
          "",
          "[Removed Lines]",
          "715:    ND_PRINT((ndo, first ? \"%.2x\" : \"_%.2x\", *p));",
          "",
          "[Added Lines]",
          "715:    ND_PRINT((ndo, first ? \"%.2x\" : \"_%.2x\", EXTRACT_U_1(p)));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "825:   p = (const u_char *)elem->data.raw;",
          "826:   ND_TCHECK2(*p, asnlen);",
          "827:   for (i = asnlen; i-- != 0; p++) {",
          "829:   }",
          "830:   break;",
          "",
          "[Removed Lines]",
          "828:    ND_PRINT((ndo, (i == asnlen-1) ? \"%u\" : \".%u\", *p));",
          "",
          "[Added Lines]",
          "828:    ND_PRINT((ndo, (i == asnlen-1) ? \"%u\" : \".%u\", EXTRACT_U_1(p)));",
          "",
          "---------------"
        ],
        "print-tcp.c||print-tcp.c": [
          "File: print-tcp.c -> print-tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "461:                         case TCPOPT_WSCALE:",
          "462:                                 datalen = 1;",
          "463:                                 LENCHECK(datalen);",
          "465:                                 break;",
          "467:                         case TCPOPT_SACK:",
          "",
          "[Removed Lines]",
          "464:                                 ND_PRINT((ndo, \" %u\", *cp));",
          "",
          "[Added Lines]",
          "464:                                 ND_PRINT((ndo, \" %u\", EXTRACT_U_1(cp)));",
          "",
          "---------------"
        ],
        "print-udld.c||print-udld.c": [
          "File: print-udld.c -> print-udld.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:         case UDLD_TIMEOUT_INTERVAL_TLV:",
          "167:             if (len != 1)",
          "168:                 goto invalid;",
          "170:             break;",
          "172:         case UDLD_SEQ_NUMBER_TLV:",
          "",
          "[Removed Lines]",
          "169:             ND_PRINT((ndo, \", %us\", (*tptr)));",
          "",
          "[Added Lines]",
          "169:             ND_PRINT((ndo, \", %us\", (EXTRACT_U_1(tptr))));",
          "",
          "---------------"
        ],
        "print-vtp.c||print-vtp.c": [
          "File: print-vtp.c -> print-vtp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:     type = EXTRACT_U_1(tptr + 1);",
          "134:     ND_PRINT((ndo, \"VTPv%u, Message %s (0x%02x), length %u\",",
          "136:     tok2str(vtp_message_type_values,\"Unknown message type\", type),",
          "137:     type,",
          "138:     length));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "135:     EXTRACT_U_1(tptr),",
          "",
          "---------------"
        ],
        "smbutil.c||smbutil.c": [
          "File: smbutil.c -> smbutil.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "638:      ND_TCHECK(*buf);",
          "639:      if (*buf != 4 && *buf != 2) {",
          "642:      }",
          "643:      len = 0;",
          "",
          "[Removed Lines]",
          "640:   ND_PRINT((ndo, \"Error! ASCIIZ buffer of type %u\", *buf));",
          "",
          "[Added Lines]",
          "640:   ND_PRINT((ndo, \"Error! ASCIIZ buffer of type %u\", EXTRACT_U_1(buf)));",
          "",
          "---------------"
        ]
      }
    }
  ]
}