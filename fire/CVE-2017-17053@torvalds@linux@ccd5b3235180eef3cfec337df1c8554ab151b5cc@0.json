{
  "cve_id": "CVE-2017-17053",
  "cve_desc": "The init_new_context function in arch/x86/include/asm/mmu_context.h in the Linux kernel before 4.12.10 does not correctly handle errors from LDT table allocation when forking a new process, allowing a local attacker to achieve a use-after-free or possibly have unspecified other impact by running a specially crafted program. This vulnerability only affected kernels built with CONFIG_MODIFY_LDT_SYSCALL=y.",
  "repo": "torvalds/linux",
  "patch_hash": "ccd5b3235180eef3cfec337df1c8554ab151b5cc",
  "patch_info": {
    "commit_hash": "ccd5b3235180eef3cfec337df1c8554ab151b5cc",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/ccd5b3235180eef3cfec337df1c8554ab151b5cc",
    "files": [
      "arch/x86/include/asm/mmu_context.h"
    ],
    "message": "x86/mm: Fix use-after-free of ldt_struct\n\nThe following commit:\n\n  39a0526fb3f7 (\"x86/mm: Factor out LDT init from context init\")\n\nrenamed init_new_context() to init_new_context_ldt() and added a new\ninit_new_context() which calls init_new_context_ldt().  However, the\nerror code of init_new_context_ldt() was ignored.  Consequently, if a\nmemory allocation in alloc_ldt_struct() failed during a fork(), the\n->context.ldt of the new task remained the same as that of the old task\n(due to the memcpy() in dup_mm()).  ldt_struct's are not intended to be\nshared, so a use-after-free occurred after one task exited.\n\nFix the bug by making init_new_context() pass through the error code of\ninit_new_context_ldt().\n\nThis bug was found by syzkaller, which encountered the following splat:\n\n    BUG: KASAN: use-after-free in free_ldt_struct.part.2+0x10a/0x150 arch/x86/kernel/ldt.c:116\n    Read of size 4 at addr ffff88006d2cb7c8 by task kworker/u9:0/3710\n\n    CPU: 1 PID: 3710 Comm: kworker/u9:0 Not tainted 4.13.0-rc4-next-20170811 #2\n    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011\n    Call Trace:\n     __dump_stack lib/dump_stack.c:16 [inline]\n     dump_stack+0x194/0x257 lib/dump_stack.c:52\n     print_address_description+0x73/0x250 mm/kasan/report.c:252\n     kasan_report_error mm/kasan/report.c:351 [inline]\n     kasan_report+0x24e/0x340 mm/kasan/report.c:409\n     __asan_report_load4_noabort+0x14/0x20 mm/kasan/report.c:429\n     free_ldt_struct.part.2+0x10a/0x150 arch/x86/kernel/ldt.c:116\n     free_ldt_struct arch/x86/kernel/ldt.c:173 [inline]\n     destroy_context_ldt+0x60/0x80 arch/x86/kernel/ldt.c:171\n     destroy_context arch/x86/include/asm/mmu_context.h:157 [inline]\n     __mmdrop+0xe9/0x530 kernel/fork.c:889\n     mmdrop include/linux/sched/mm.h:42 [inline]\n     exec_mmap fs/exec.c:1061 [inline]\n     flush_old_exec+0x173c/0x1ff0 fs/exec.c:1291\n     load_elf_binary+0x81f/0x4ba0 fs/binfmt_elf.c:855\n     search_binary_handler+0x142/0x6b0 fs/exec.c:1652\n     exec_binprm fs/exec.c:1694 [inline]\n     do_execveat_common.isra.33+0x1746/0x22e0 fs/exec.c:1816\n     do_execve+0x31/0x40 fs/exec.c:1860\n     call_usermodehelper_exec_async+0x457/0x8f0 kernel/umh.c:100\n     ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431\n\n    Allocated by task 3700:\n     save_stack_trace+0x16/0x20 arch/x86/kernel/stacktrace.c:59\n     save_stack+0x43/0xd0 mm/kasan/kasan.c:447\n     set_track mm/kasan/kasan.c:459 [inline]\n     kasan_kmalloc+0xad/0xe0 mm/kasan/kasan.c:551\n     kmem_cache_alloc_trace+0x136/0x750 mm/slab.c:3627\n     kmalloc include/linux/slab.h:493 [inline]\n     alloc_ldt_struct+0x52/0x140 arch/x86/kernel/ldt.c:67\n     write_ldt+0x7b7/0xab0 arch/x86/kernel/ldt.c:277\n     sys_modify_ldt+0x1ef/0x240 arch/x86/kernel/ldt.c:307\n     entry_SYSCALL_64_fastpath+0x1f/0xbe\n\n    Freed by task 3700:\n     save_stack_trace+0x16/0x20 arch/x86/kernel/stacktrace.c:59\n     save_stack+0x43/0xd0 mm/kasan/kasan.c:447\n     set_track mm/kasan/kasan.c:459 [inline]\n     kasan_slab_free+0x71/0xc0 mm/kasan/kasan.c:524\n     __cache_free mm/slab.c:3503 [inline]\n     kfree+0xca/0x250 mm/slab.c:3820\n     free_ldt_struct.part.2+0xdd/0x150 arch/x86/kernel/ldt.c:121\n     free_ldt_struct arch/x86/kernel/ldt.c:173 [inline]\n     destroy_context_ldt+0x60/0x80 arch/x86/kernel/ldt.c:171\n     destroy_context arch/x86/include/asm/mmu_context.h:157 [inline]\n     __mmdrop+0xe9/0x530 kernel/fork.c:889\n     mmdrop include/linux/sched/mm.h:42 [inline]\n     __mmput kernel/fork.c:916 [inline]\n     mmput+0x541/0x6e0 kernel/fork.c:927\n     copy_process.part.36+0x22e1/0x4af0 kernel/fork.c:1931\n     copy_process kernel/fork.c:1546 [inline]\n     _do_fork+0x1ef/0xfb0 kernel/fork.c:2025\n     SYSC_clone kernel/fork.c:2135 [inline]\n     SyS_clone+0x37/0x50 kernel/fork.c:2129\n     do_syscall_64+0x26c/0x8c0 arch/x86/entry/common.c:287\n     return_from_SYSCALL_64+0x0/0x7a\n\nHere is a C reproducer:\n\n    #include <asm/ldt.h>\n    #include <pthread.h>\n    #include <signal.h>\n    #include <stdlib.h>\n    #include <sys/syscall.h>\n    #include <sys/wait.h>\n    #include <unistd.h>\n\n    static void *fork_thread(void *_arg)\n    {\n        fork();\n    }\n\n    int main(void)\n    {\n        struct user_desc desc = { .entry_number = 8191 };\n\n        syscall(__NR_modify_ldt, 1, &desc, sizeof(desc));\n\n        for (;;) {\n            if (fork() == 0) {\n                pthread_t t;\n\n                srand(getpid());\n                pthread_create(&t, NULL, fork_thread, NULL);\n                usleep(rand() % 10000);\n                syscall(__NR_exit_group, 0);\n            }\n            wait(NULL);\n        }\n    }\n\nNote: the reproducer takes advantage of the fact that alloc_ldt_struct()\nmay use vmalloc() to allocate a large ->entries array, and after\ncommit:\n\n  5d17a73a2ebe (\"vmalloc: back off when the current task is killed\")\n\nit is possible for userspace to fail a task's vmalloc() by\nsending a fatal signal, e.g. via exit_group().  It would be more\ndifficult to reproduce this bug on kernels without that commit.\n\nThis bug only affected kernels with CONFIG_MODIFY_LDT_SYSCALL=y.\n\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nAcked-by: Dave Hansen <dave.hansen@linux.intel.com>\nCc: <stable@vger.kernel.org> [v4.6+]\nCc: Andrew Morton <akpm@linux-foundation.org>\nCc: Andy Lutomirski <luto@amacapital.net>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: Christoph Hellwig <hch@lst.de>\nCc: Denys Vlasenko <dvlasenk@redhat.com>\nCc: Dmitry Vyukov <dvyukov@google.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Michal Hocko <mhocko@suse.com>\nCc: Peter Zijlstra <peterz@infradead.org>\nCc: Rik van Riel <riel@redhat.com>\nCc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>\nCc: Thomas Gleixner <tglx@linutronix.de>\nCc: linux-mm@kvack.org\nFixes: 39a0526fb3f7 (\"x86/mm: Factor out LDT init from context init\")\nLink: http://lkml.kernel.org/r/20170824175029.76040-1-ebiggers3@gmail.com\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
    "before_after_code_files": [
      "arch/x86/include/asm/mmu_context.h||arch/x86/include/asm/mmu_context.h"
    ]
  },
  "patch_diff": {
    "arch/x86/include/asm/mmu_context.h||arch/x86/include/asm/mmu_context.h": [
      "File: arch/x86/include/asm/mmu_context.h -> arch/x86/include/asm/mmu_context.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "140:   mm->context.execute_only_pkey = -1;",
      "141:  }",
      "142:  #endif",
      "146: }",
      "147: static inline void destroy_context(struct mm_struct *mm)",
      "148: {",
      "",
      "[Removed Lines]",
      "143:  init_new_context_ldt(tsk, mm);",
      "145:  return 0;",
      "",
      "[Added Lines]",
      "143:  return init_new_context_ldt(tsk, mm);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "3fd87127073292538047adf1c9c757e9cab0dd56",
      "candidate_info": {
        "commit_hash": "3fd87127073292538047adf1c9c757e9cab0dd56",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/3fd87127073292538047adf1c9c757e9cab0dd56",
        "files": [
          "Documentation/networking/strparser.txt",
          "include/net/strparser.h",
          "kernel/bpf/sockmap.c",
          "net/kcm/kcmsock.c",
          "net/strparser/strparser.c"
        ],
        "message": "strparser: initialize all callbacks\n\ncommit bbb03029a899 (\"strparser: Generalize strparser\") added more\nfunction pointers to 'struct strp_callbacks'; however, kcm_attach() was\nnot updated to initialize them.  This could cause the ->lock() and/or\n->unlock() function pointers to be set to garbage values, causing a\ncrash in strp_work().\n\nFix the bug by moving the callback structs into static memory, so\nunspecified members are zeroed.  Also constify them while we're at it.\n\nThis bug was found by syzkaller, which encountered the following splat:\n\n    IP: 0x55\n    PGD 3b1ca067\n    P4D 3b1ca067\n    PUD 3b12f067\n    PMD 0\n\n    Oops: 0010 [#1] SMP KASAN\n    Dumping ftrace buffer:\n       (ftrace buffer empty)\n    Modules linked in:\n    CPU: 2 PID: 1194 Comm: kworker/u8:1 Not tainted 4.13.0-rc4-next-20170811 #2\n    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011\n    Workqueue: kstrp strp_work\n    task: ffff88006bb0e480 task.stack: ffff88006bb10000\n    RIP: 0010:0x55\n    RSP: 0018:ffff88006bb17540 EFLAGS: 00010246\n    RAX: dffffc0000000000 RBX: ffff88006ce4bd60 RCX: 0000000000000000\n    RDX: 1ffff1000d9c97bd RSI: 0000000000000000 RDI: ffff88006ce4bc48\n    RBP: ffff88006bb17558 R08: ffffffff81467ab2 R09: 0000000000000000\n    R10: ffff88006bb17438 R11: ffff88006bb17940 R12: ffff88006ce4bc48\n    R13: ffff88003c683018 R14: ffff88006bb17980 R15: ffff88003c683000\n    FS:  0000000000000000(0000) GS:ffff88006de00000(0000) knlGS:0000000000000000\n    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n    CR2: 0000000000000055 CR3: 000000003c145000 CR4: 00000000000006e0\n    DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n    DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n    Call Trace:\n     process_one_work+0xbf3/0x1bc0 kernel/workqueue.c:2098\n     worker_thread+0x223/0x1860 kernel/workqueue.c:2233\n     kthread+0x35e/0x430 kernel/kthread.c:231\n     ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431\n    Code:  Bad RIP value.\n    RIP: 0x55 RSP: ffff88006bb17540\n    CR2: 0000000000000055\n    ---[ end trace f0e4920047069cee ]---\n\nHere is a C reproducer (requires CONFIG_BPF_SYSCALL=y and\nCONFIG_AF_KCM=y):\n\n    #include <linux/bpf.h>\n    #include <linux/kcm.h>\n    #include <linux/types.h>\n    #include <stdint.h>\n    #include <sys/ioctl.h>\n    #include <sys/socket.h>\n    #include <sys/syscall.h>\n    #include <unistd.h>\n\n    static const struct bpf_insn bpf_insns[3] = {\n        { .code = 0xb7 }, /* BPF_MOV64_IMM(0, 0) */\n        { .code = 0x95 }, /* BPF_EXIT_INSN() */\n    };\n\n    static const union bpf_attr bpf_attr = {\n        .prog_type = 1,\n        .insn_cnt = 2,\n        .insns = (uintptr_t)&bpf_insns,\n        .license = (uintptr_t)\"\",\n    };\n\n    int main(void)\n    {\n        int bpf_fd = syscall(__NR_bpf, BPF_PROG_LOAD,\n                             &bpf_attr, sizeof(bpf_attr));\n        int inet_fd = socket(AF_INET, SOCK_STREAM, 0);\n        int kcm_fd = socket(AF_KCM, SOCK_DGRAM, 0);\n\n        ioctl(kcm_fd, SIOCKCMATTACH,\n              &(struct kcm_attach) { .fd = inet_fd, .bpf_fd = bpf_fd });\n    }\n\nFixes: bbb03029a899 (\"strparser: Generalize strparser\")\nCc: Dmitry Vyukov <dvyukov@google.com>\nCc: Tom Herbert <tom@quantonium.net>\nSigned-off-by: Eric Biggers <ebiggers@google.com>\nSigned-off-by: David S. Miller <davem@davemloft.net>",
        "before_after_code_files": [
          "include/net/strparser.h||include/net/strparser.h",
          "kernel/bpf/sockmap.c||kernel/bpf/sockmap.c",
          "net/kcm/kcmsock.c||net/kcm/kcmsock.c",
          "net/strparser/strparser.c||net/strparser/strparser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/net/strparser.h||include/net/strparser.h": [
          "File: include/net/strparser.h -> include/net/strparser.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "138: void strp_stop(struct strparser *strp);",
          "139: void strp_check_rcv(struct strparser *strp);",
          "140: int strp_init(struct strparser *strp, struct sock *sk,",
          "142: void strp_data_ready(struct strparser *strp);",
          "143: int strp_process(struct strparser *strp, struct sk_buff *orig_skb,",
          "144:    unsigned int orig_offset, size_t orig_len,",
          "",
          "[Removed Lines]",
          "141:        struct strp_callbacks *cb);",
          "",
          "[Added Lines]",
          "141:        const struct strp_callbacks *cb);",
          "",
          "---------------"
        ],
        "kernel/bpf/sockmap.c||kernel/bpf/sockmap.c": [
          "File: kernel/bpf/sockmap.c -> kernel/bpf/sockmap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "368: static int smap_init_sock(struct smap_psock *psock,",
          "369:      struct sock *sk)",
          "370: {",
          "377:  return strp_init(&psock->strp, sk, &cb);",
          "378: }",
          "",
          "[Removed Lines]",
          "371:  struct strp_callbacks cb;",
          "373:  memset(&cb, 0, sizeof(cb));",
          "374:  cb.rcv_msg = smap_read_sock_strparser;",
          "375:  cb.parse_msg = smap_parse_func_strparser;",
          "376:  cb.read_sock_done = smap_read_sock_done;",
          "",
          "[Added Lines]",
          "371:  static const struct strp_callbacks cb = {",
          "372:   .rcv_msg = smap_read_sock_strparser,",
          "373:   .parse_msg = smap_parse_func_strparser,",
          "374:   .read_sock_done = smap_read_sock_done,",
          "375:  };",
          "",
          "---------------"
        ],
        "net/kcm/kcmsock.c||net/kcm/kcmsock.c": [
          "File: net/kcm/kcmsock.c -> net/kcm/kcmsock.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1376:  struct kcm_psock *psock = NULL, *tpsock;",
          "1377:  struct list_head *head;",
          "1378:  int index = 0;",
          "1380:  int err;",
          "1382:  csk = csock->sk;",
          "",
          "[Removed Lines]",
          "1379:  struct strp_callbacks cb;",
          "",
          "[Added Lines]",
          "1379:  static const struct strp_callbacks cb = {",
          "1380:   .rcv_msg = kcm_rcv_strparser,",
          "1381:   .parse_msg = kcm_parse_func_strparser,",
          "1382:   .read_sock_done = kcm_read_sock_done,",
          "1383:  };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1391:  psock->sk = csk;",
          "1392:  psock->bpf_prog = prog;",
          "1399:  err = strp_init(&psock->strp, csk, &cb);",
          "1400:  if (err) {",
          "1401:   kmem_cache_free(kcm_psockp, psock);",
          "",
          "[Removed Lines]",
          "1394:  cb.rcv_msg = kcm_rcv_strparser;",
          "1395:  cb.abort_parser = NULL;",
          "1396:  cb.parse_msg = kcm_parse_func_strparser;",
          "1397:  cb.read_sock_done = kcm_read_sock_done;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "net/strparser/strparser.c||net/strparser/strparser.c": [
          "File: net/strparser/strparser.c -> net/strparser/strparser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "472: }",
          "474: int strp_init(struct strparser *strp, struct sock *sk,",
          "476: {",
          "478:  if (!cb || !cb->rcv_msg || !cb->parse_msg)",
          "",
          "[Removed Lines]",
          "475:        struct strp_callbacks *cb)",
          "",
          "[Added Lines]",
          "475:        const struct strp_callbacks *cb)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "69956d83267e29e38cda7d506c4085932789fef2",
      "candidate_info": {
        "commit_hash": "69956d83267e29e38cda7d506c4085932789fef2",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/69956d83267e29e38cda7d506c4085932789fef2",
        "files": [
          "drivers/infiniband/ulp/ipoib/ipoib.h",
          "drivers/infiniband/ulp/ipoib/ipoib_cm.c",
          "drivers/infiniband/ulp/ipoib/ipoib_main.c",
          "drivers/infiniband/ulp/ipoib/ipoib_vlan.c"
        ],
        "message": "IB/ipoib: Sync between remove_one to sysfs calls that use rtnl_lock\n\nIn order to avoid deadlock between sysfs functions (like create/delete\nchild) and remove_one (both of them are using the sysfs lock and\nrtnl_lock) the driver will use a state mutex for sync.\n\nThat will fix traces as the following:\nschedule+0x3e/0x90\nkernfs_drain+0x75/0xf0\n? wait_woken+0x90/0x90\n__kernfs_remove+0x12e/0x1c0\nkernfs_remove+0x25/0x40\nsysfs_remove_dir+0x57/0x90\nkobject_del+0x22/0x60\ndevice_del+0x195/0x230\n pm_runtime_set_memalloc_noio+0xac/0xf0\nnetdev_unregister_kobject+0x71/0x80\nrollback_registered_many+0x205/0x2f0\nrollback_registered+0x31/0x40\nunregister_netdevice_queue+0x58/0xb0\nunregister_netdev+0x20/0x30\nipoib_remove_one+0xb7/0x240 [ib_ipoib]\nib_unregister_device+0xbc/0x1b0 [ib_core]\nib_unregister_mad_agent+0x29/0x30 [ib_core]\nmlx4_ib_remove+0x67/0x280 [mlx4_ib]\nINFO: task echo:24082 blocked for more than 120 seconds.\nTainted: G           OE   4.1.12-37.5.1.el6uek.x86_64 #2\n\"echo 0 > /proc/sys/kernel/hung_task_timeout_secs\" disables this\nmessage.\nCall Trace:\nschedule+0x3e/0x90\nschedule_preempt_disabled+0xe/0x10\n__mutex_lock_slowpath+0x95/0x110\n? _rcu_barrier+0x177/0x220\nmutex_lock+0x23/0x40\nrtnl_lock+0x15/0x20\nnetdev_run_todo+0x81/0x1f0\nrtnl_unlock+0xe/0x10\nipoib_vlan_delete+0x12f/0x1c0 [ib_ipoib]\ndelete_child+0x69/0x80 [ib_ipoib]\ndev_attr_store+0x20/0x30\nsysfs_kf_write+0x41/0x50\n\nSigned-off-by: Erez Shitrit <erezsh@mellanox.com>\nReviewed-by: Alex Vesker <valex@mellanox.com>\nSigned-off-by: Leon Romanovsky <leon@kernel.org>\nSigned-off-by: Doug Ledford <dledford@redhat.com>",
        "before_after_code_files": [
          "drivers/infiniband/ulp/ipoib/ipoib.h||drivers/infiniband/ulp/ipoib/ipoib.h",
          "drivers/infiniband/ulp/ipoib/ipoib_cm.c||drivers/infiniband/ulp/ipoib/ipoib_cm.c",
          "drivers/infiniband/ulp/ipoib/ipoib_main.c||drivers/infiniband/ulp/ipoib/ipoib_main.c",
          "drivers/infiniband/ulp/ipoib/ipoib_vlan.c||drivers/infiniband/ulp/ipoib/ipoib_vlan.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/infiniband/ulp/ipoib/ipoib.h||drivers/infiniband/ulp/ipoib/ipoib.h": [
          "File: drivers/infiniband/ulp/ipoib/ipoib.h -> drivers/infiniband/ulp/ipoib/ipoib.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "338:  struct rw_semaphore vlan_rwsem;",
          "339:  struct mutex mcast_mutex;",
          "341:  struct rb_root  path_tree;",
          "342:  struct list_head path_list;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "340:  struct mutex sysfs_mutex;",
          "",
          "---------------"
        ],
        "drivers/infiniband/ulp/ipoib/ipoib_cm.c||drivers/infiniband/ulp/ipoib/ipoib_cm.c": [
          "File: drivers/infiniband/ulp/ipoib/ipoib_cm.c -> drivers/infiniband/ulp/ipoib/ipoib_cm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1506:  if (test_bit(IPOIB_FLAG_GOING_DOWN, &priv->flags))",
          "1507:   return -EPERM;",
          "1510:   return restart_syscall();",
          "1512:  ret = ipoib_set_mode(dev, buf);",
          "",
          "[Removed Lines]",
          "1509:  if (!rtnl_trylock())",
          "",
          "[Added Lines]",
          "1509:  if (!mutex_trylock(&priv->sysfs_mutex))",
          "1512:  if (!rtnl_trylock()) {",
          "1513:   mutex_unlock(&priv->sysfs_mutex);",
          "1514:   return restart_syscall();",
          "1515:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1518:  if (ret != -EBUSY)",
          "1519:   rtnl_unlock();",
          "1521:  return (!ret || ret == -EBUSY) ? count : ret;",
          "1522: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1525:  mutex_unlock(&priv->sysfs_mutex);",
          "",
          "---------------"
        ],
        "drivers/infiniband/ulp/ipoib/ipoib_main.c||drivers/infiniband/ulp/ipoib/ipoib_main.c": [
          "File: drivers/infiniband/ulp/ipoib/ipoib_main.c -> drivers/infiniband/ulp/ipoib/ipoib_main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1878:  spin_lock_init(&priv->lock);",
          "1879:  init_rwsem(&priv->vlan_rwsem);",
          "1880:  mutex_init(&priv->mcast_mutex);",
          "1882:  INIT_LIST_HEAD(&priv->path_list);",
          "1883:  INIT_LIST_HEAD(&priv->child_intfs);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1881:  mutex_init(&priv->sysfs_mutex);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2329:   cancel_delayed_work(&priv->neigh_reap_task);",
          "2330:   flush_workqueue(priv->wq);",
          "2332:   unregister_netdev(priv->dev);",
          "2333:   rn->free_rdma_netdev(priv->dev);",
          "2335:   list_for_each_entry_safe(cpriv, tcpriv, &priv->child_intfs, list)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2334:   mutex_lock(&priv->sysfs_mutex);",
          "2336:   mutex_unlock(&priv->sysfs_mutex);",
          "",
          "---------------"
        ],
        "drivers/infiniband/ulp/ipoib/ipoib_vlan.c||drivers/infiniband/ulp/ipoib/ipoib_vlan.c": [
          "File: drivers/infiniband/ulp/ipoib/ipoib_vlan.c -> drivers/infiniband/ulp/ipoib/ipoib_vlan.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:  snprintf(intf_name, sizeof intf_name, \"%s.%04x\",",
          "134:    ppriv->dev->name, pkey);",
          "137:   return restart_syscall();",
          "139:  priv = ipoib_intf_alloc(ppriv->ca, ppriv->port, intf_name);",
          "141:   return -ENOMEM;",
          "143:  down_write(&ppriv->vlan_rwsem);",
          "",
          "[Removed Lines]",
          "136:  if (!rtnl_trylock())",
          "140:  if (!priv)",
          "",
          "[Added Lines]",
          "136:  if (!mutex_trylock(&ppriv->sysfs_mutex))",
          "139:  if (!rtnl_trylock()) {",
          "140:   mutex_unlock(&ppriv->sysfs_mutex);",
          "141:   return restart_syscall();",
          "142:  }",
          "145:  if (!priv) {",
          "146:   rtnl_unlock();",
          "147:   mutex_unlock(&ppriv->sysfs_mutex);",
          "149:  }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "165: out:",
          "166:  up_write(&ppriv->vlan_rwsem);",
          "168:  rtnl_unlock();",
          "170:  if (result) {",
          "171:   free_netdev(priv->dev);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "176:  mutex_unlock(&ppriv->sysfs_mutex);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "188:  if (test_bit(IPOIB_FLAG_GOING_DOWN, &ppriv->flags))",
          "189:   return -EPERM;",
          "192:   return restart_syscall();",
          "194:  down_write(&ppriv->vlan_rwsem);",
          "195:  list_for_each_entry_safe(priv, tpriv, &ppriv->child_intfs, list) {",
          "",
          "[Removed Lines]",
          "191:  if (!rtnl_trylock())",
          "",
          "[Added Lines]",
          "199:  if (!mutex_trylock(&ppriv->sysfs_mutex))",
          "200:   return restart_syscall();",
          "202:  if (!rtnl_trylock()) {",
          "203:   mutex_unlock(&ppriv->sysfs_mutex);",
          "205:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "208:  }",
          "210:  rtnl_unlock();",
          "212:  if (dev) {",
          "213:   free_netdev(dev);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "224:  mutex_unlock(&ppriv->sysfs_mutex);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a17305954d732ace786095ed6c911782c18529b9",
      "candidate_info": {
        "commit_hash": "a17305954d732ace786095ed6c911782c18529b9",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/a17305954d732ace786095ed6c911782c18529b9",
        "files": [
          "drivers/scsi/qla2xxx/qla_isr.c"
        ],
        "message": "scsi: qla2xxx: Fix system panic due to pointer access problem\n\n[ 1013.772926] BUG: unable to handle kernel paging request at 0000000300000020\n[ 1013.772950] IP: qla24xx_els_ct_entry.isra.17+0x78/0x2a0 [qla2xxx]\n[ 1013.772951] PGD 0\n[ 1013.772952] P4D 0\n[ 1013.772952]\n[ 1013.772953] Oops: 0000 [#1] SMP\n[ 1013.772955] Modules linked in: qla2xxx(+) scsi_transport_fc nvme_fc\nnvme_fabrics nvme_core netconsole configfs af_packet iscsi_ibft\niscsi_boot_sysfs xfs intel_rapl sb_edac libcrc32c x86_pkg_temp_thermal\nintel_powerclamp coretemp mgag200 kvm_intel ttm kvm drm_kms_helper\nipmi_ssif irqbypass tg3 drm fb_sys_fops crct10dif_pclmul syscopyarea\ncrc32_pclmul ghash_clmulni_intel ptp pcbc sysfillrect pps_core\naesni_intel joydev aes_x86_64 sysimgblt crypto_simd iTCO_wdt libphy\niTCO_vendor_support i2c_algo_bit glue_helper ipmi_si lpc_ich hpwdt\nioatdma cryptd ipmi_devintf pcspkr mfd_core pcc_cpufreq ipmi_msghandler\nhpilo thermal dca button shpchp btrfs xor raid6_pq hid_generic usbhid\nsr_mod cdrom sd_mod ata_generic crc32c_intel serio_raw ata_piix ahci\nlibahci uhci_hcd ehci_pci ehci_hcd libata usbcore hpsa scsi_transport_sas\n[ 1013.772994]  sg scsi_mod autofs4\n[ 1013.772998] CPU: 0 PID: 374 Comm: systemd-journal Not tainted 4.13.0-rc1-2-default #2\n[ 1013.772999] Hardware name: HP ProLiant DL380p Gen8, BIOS P70 07/15/2012\n[ 1013.773000] task: ffff88082c188380 task.stack: ffffc90004d7c000\n[ 1013.773011] RIP: 0010:qla24xx_els_ct_entry.isra.17+0x78/0x2a0 [qla2xxx]\n[ 1013.773012] RSP: 0000:ffff88042f603d90 EFLAGS: 00010082\n[ 1013.773013] RAX: ffff88039f723ac8 RBX: ffff88039f723ac8 RCX: ffff8803a2e18010\n[ 1013.773014] RDX: ffff88039f723ac0 RSI: ffff88042f603dc4 RDI: ffff88041b6787c0\n[ 1013.773015] RBP: ffff88042f603e00 R08: 0000000000000002 R09: 000000000000000d\n[ 1013.773016] R10: 0000000000000002 R11: 0000000000000000 R12: ffff8803a2e80080\n[ 1013.773016] R13: ffff88041b6787c0 R14: 0000000300000000 R15: 0000000000000102\n[ 1013.773018] FS:  00007fa2e0a73880(0000) GS:ffff88042f600000(0000) knlGS:0000000000000000\n[ 1013.773019] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[ 1013.773020] CR2: 0000000300000020 CR3: 000000042cd7e000 CR4: 00000000000406f0\n[ 1013.773021] Call Trace:\n[ 1013.773022]  <IRQ>\n[ 1013.773026]  ? consume_skb+0x34/0xa0\n[ 1013.773040]  qla24xx_process_response_queue+0x319/0x700 [qla2xxx]\n[ 1013.773050]  qla24xx_msix_rsp_q+0x7b/0xd0 [qla2xxx]\n[ 1013.773054]  __handle_irq_event_percpu+0x3c/0x1b0\n[ 1013.773056]  handle_irq_event_percpu+0x23/0x60\n[ 1013.773057]  handle_irq_event+0x42/0x70\n[ 1013.773059]  handle_edge_irq+0x8f/0x190\n[ 1013.773062]  handle_irq+0x1d/0x30\n[ 1013.773065]  do_IRQ+0x48/0xd0\n[ 1013.773067]  common_interrupt+0x93/0x93\n[ 1013.773068] RIP: 0033:0xed622c6e42\n[ 1013.773069] RSP: 002b:00007ffee8b5c820 EFLAGS: 00000202 ORIG_RAX: ffffffffffffff17\n[ 1013.773071] RAX: 000000ed6316a3f0 RBX: 000000ed6316a840 RCX: 00000000000c4e33\n[ 1013.773071] RDX: 000000ed6316a878 RSI: 000000ed6316a840 RDI: 000000ed631682d0\n[ 1013.773072] RBP: 0000000000000001 R08: 0000000000000001 R09: 000000ed63179b70\n[ 1013.773073] R10: 000000000005f6f8 R11: 0000000000000202 R12: 0000000000000001\n[ 1013.773074] R13: 00007ffee8b5c85c R14: 000000ed6316a840 R15: 00007ffee8b5c850\n[ 1013.773074]  </IRQ>\n[ 1013.773076] Code: a9 8a 9a e0 48 8d 75 c4 48 89 da 4c 89 e1 4c 89 ef\ne8 54 6e fb ff 48 85 c0 48 89 c3 0f 84 0e 02 00 00 44 0f b7 48 36 4c 8b\n70 58 <4d> 8b 7e 20 41 8d 41 fd 66 83 f8 0c 77 6c 0f b7 c0 ff 24 c5 88\n[ 1013.773102] RIP: qla24xx_els_ct_entry.isra.17+0x78/0x2a0 [qla2xxx] RSP: ffff88042f603d90\n[ 1013.773102] CR2: 0000000300000020\n[ 1013.773129] ---[ end trace 532363559924f426 ]---\n[ 1013.773131] Kernel panic - not syncing: Fatal exception in interrupt\n[ 1013.777719] Kernel Offset: disabled\n[ 1013.827528] ---[ end Kernel panic - not syncing: Fatal exception in interrupt\n\nSigned-off-by: Duane Grigsby <Duane.Grigsby@cavium.com>\nSigned-off-by: Quinn Tran <quinn.tran@cavium.com>\nSigned-off-by: Himanshu Madhani <himanshu.madhani@cavium.com>\nSigned-off-by: Martin K. Petersen <martin.petersen@oracle.com>",
        "before_after_code_files": [
          "drivers/scsi/qla2xxx/qla_isr.c||drivers/scsi/qla2xxx/qla_isr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/scsi/qla2xxx/qla_isr.c||drivers/scsi/qla2xxx/qla_isr.c": [
          "File: drivers/scsi/qla2xxx/qla_isr.c -> drivers/scsi/qla2xxx/qla_isr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1537:  sp = qla2x00_get_sp_from_handle(vha, func, req, pkt);",
          "1538:  if (!sp)",
          "1539:   return;",
          "1543:  type = NULL;",
          "1544:  switch (sp->type) {",
          "",
          "[Removed Lines]",
          "1540:  bsg_job = sp->u.bsg_job;",
          "1541:  bsg_reply = bsg_job->reply;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1580:  bsg_reply->reply_data.ctels_reply.status = FC_CTELS_STATUS_OK;",
          "1581:  bsg_job->reply_len = sizeof(struct fc_bsg_reply) + sizeof(fw_status);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1578:  bsg_job = sp->u.bsg_job;",
          "1579:  bsg_reply = bsg_job->reply;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "28923f6b74060b183207a373ddae4ce4948cabea",
      "candidate_info": {
        "commit_hash": "28923f6b74060b183207a373ddae4ce4948cabea",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/28923f6b74060b183207a373ddae4ce4948cabea",
        "files": [
          "arch/arc/include/asm/entry-compact.h",
          "arch/arc/include/asm/ptrace.h",
          "arch/arc/kernel/process.c"
        ],
        "message": "ARC: [plat-eznps] handle extra aux regs #2: kernel/entry exit\n\nPreserve eflags and gpa1 aux during entry/exit into kernel as these\ncould be modified by kernel mode\n\nThese registers used by compare exchange instructions.\n  - GPA1 is used for compare value,\n  - EFLAGS got bit reflects atomic operation response.\n\nEFLAGS is zeroed for each new user task so it won't get its\nparent value.\n\nSigned-off-by: Liav Rehana <liavr@mellanox.com>\nSigned-off-by: Noam Camus <noamc@ezchip.com>\nSigned-off-by: Vineet Gupta <vgupta@synopsys.com>",
        "before_after_code_files": [
          "arch/arc/include/asm/entry-compact.h||arch/arc/include/asm/entry-compact.h",
          "arch/arc/include/asm/ptrace.h||arch/arc/include/asm/ptrace.h",
          "arch/arc/kernel/process.c||arch/arc/kernel/process.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/arc/include/asm/entry-compact.h||arch/arc/include/asm/entry-compact.h": [
          "File: arch/arc/include/asm/entry-compact.h -> arch/arc/include/asm/entry-compact.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "192:  PUSHAX lp_start",
          "193:  PUSHAX erbta",
          "195:  lr r9, [ecr]",
          "197: .endm",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195: #ifdef CONFIG_ARC_PLAT_EZNPS",
          "196:  .word CTOP_INST_SCHD_RW",
          "197:  PUSHAX  CTOP_AUX_GPA1",
          "198:  PUSHAX  CTOP_AUX_EFLAGS",
          "199: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "210: .macro EXCEPTION_EPILOGUE",
          "211:  POPAX erbta",
          "212:  POPAX lp_start",
          "213:  POPAX lp_end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "217: #ifdef CONFIG_ARC_PLAT_EZNPS",
          "218:  .word CTOP_INST_SCHD_RW",
          "219:  POPAX   CTOP_AUX_EFLAGS",
          "220:  POPAX   CTOP_AUX_GPA1",
          "221: #endif",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "265:  PUSHAX lp_end",
          "266:  PUSHAX lp_start",
          "267:  PUSHAX bta_l\\LVL\\()",
          "268: .endm",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "281: #ifdef CONFIG_ARC_PLAT_EZNPS",
          "282:  .word CTOP_INST_SCHD_RW",
          "283:  PUSHAX  CTOP_AUX_GPA1",
          "284:  PUSHAX  CTOP_AUX_EFLAGS",
          "285: #endif",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "279: .macro INTERRUPT_EPILOGUE  LVL",
          "280:  POPAX bta_l\\LVL\\()",
          "281:  POPAX lp_start",
          "282:  POPAX lp_end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "298: #ifdef CONFIG_ARC_PLAT_EZNPS",
          "299:  .word CTOP_INST_SCHD_RW",
          "300:  POPAX   CTOP_AUX_EFLAGS",
          "301:  POPAX   CTOP_AUX_GPA1",
          "302: #endif",
          "",
          "---------------"
        ],
        "arch/arc/include/asm/ptrace.h||arch/arc/include/asm/ptrace.h": [
          "File: arch/arc/include/asm/ptrace.h -> arch/arc/include/asm/ptrace.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: #ifdef CONFIG_ISA_ARCOMPACT",
          "20: struct pt_regs {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #ifdef CONFIG_ARC_PLAT_EZNPS",
          "25: #endif",
          "",
          "---------------"
        ],
        "arch/arc/kernel/process.c||arch/arc/kernel/process.c": [
          "File: arch/arc/kernel/process.c -> arch/arc/kernel/process.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "235:  regs->status32 = STATUS_U_MASK | STATUS_L_MASK | ISA_INIT_STATUS_BITS;",
          "238:  regs->lp_start = 0x10;",
          "239:  regs->lp_end = 0x80;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "237: #ifdef CONFIG_EZNPS_MTM_EXT",
          "238:  regs->eflags = 0;",
          "239: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a4828f81037f491b2cc986595e3a969a6eeb2fb5",
      "candidate_info": {
        "commit_hash": "a4828f81037f491b2cc986595e3a969a6eeb2fb5",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/a4828f81037f491b2cc986595e3a969a6eeb2fb5",
        "files": [
          "arch/x86/include/asm/mmu_context.h",
          "arch/x86/kernel/ldt.c",
          "tools/testing/selftests/x86/ldt_gdt.c"
        ],
        "message": "x86/ldt: Prevent LDT inheritance on exec\n\nThe LDT is inherited across fork() or exec(), but that makes no sense\nat all because exec() is supposed to start the process clean.\n\nThe reason why this happens is that init_new_context_ldt() is called from\ninit_new_context() which obviously needs to be called for both fork() and\nexec().\n\nIt would be surprising if anything relies on that behaviour, so it seems to\nbe safe to remove that misfeature.\n\nSplit the context initialization into two parts. Clear the LDT pointer and\ninitialize the mutex from the general context init and move the LDT\nduplication to arch_dup_mmap() which is only called on fork().\n\nSigned-off-by: Thomas Gleixner <tglx@linutronix.de>\nSigned-off-by: Peter Zijlstra <peterz@infradead.org>\nCc: Andy Lutomirski <luto@kernel.org>\nCc: Andy Lutomirsky <luto@kernel.org>\nCc: Boris Ostrovsky <boris.ostrovsky@oracle.com>\nCc: Borislav Petkov <bp@alien8.de>\nCc: Borislav Petkov <bpetkov@suse.de>\nCc: Brian Gerst <brgerst@gmail.com>\nCc: Dave Hansen <dave.hansen@intel.com>\nCc: Dave Hansen <dave.hansen@linux.intel.com>\nCc: David Laight <David.Laight@aculab.com>\nCc: Denys Vlasenko <dvlasenk@redhat.com>\nCc: Eduardo Valentin <eduval@amazon.com>\nCc: Greg KH <gregkh@linuxfoundation.org>\nCc: H. Peter Anvin <hpa@zytor.com>\nCc: Josh Poimboeuf <jpoimboe@redhat.com>\nCc: Juergen Gross <jgross@suse.com>\nCc: Linus Torvalds <torvalds@linux-foundation.org>\nCc: Will Deacon <will.deacon@arm.com>\nCc: aliguori@amazon.com\nCc: dan.j.williams@intel.com\nCc: hughd@google.com\nCc: keescook@google.com\nCc: kirill.shutemov@linux.intel.com\nCc: linux-mm@kvack.org\nSigned-off-by: Ingo Molnar <mingo@kernel.org>",
        "before_after_code_files": [
          "arch/x86/include/asm/mmu_context.h||arch/x86/include/asm/mmu_context.h",
          "arch/x86/kernel/ldt.c||arch/x86/kernel/ldt.c",
          "tools/testing/selftests/x86/ldt_gdt.c||tools/testing/selftests/x86/ldt_gdt.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "arch/x86/include/asm/mmu_context.h||arch/x86/include/asm/mmu_context.h"
          ],
          "candidate": [
            "arch/x86/include/asm/mmu_context.h||arch/x86/include/asm/mmu_context.h"
          ]
        }
      },
      "candidate_diff": {
        "arch/x86/include/asm/mmu_context.h||arch/x86/include/asm/mmu_context.h": [
          "File: arch/x86/include/asm/mmu_context.h -> arch/x86/include/asm/mmu_context.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: void destroy_context_ldt(struct mm_struct *mm);",
          "65: {",
          "66:  return 0;",
          "67: }",
          "",
          "[Removed Lines]",
          "60: int init_new_context_ldt(struct task_struct *tsk, struct mm_struct *mm);",
          "63: static inline int init_new_context_ldt(struct task_struct *tsk,",
          "64:            struct mm_struct *mm)",
          "",
          "[Added Lines]",
          "60: static inline void init_new_context_ldt(struct mm_struct *mm)",
          "61: {",
          "62:  mm->context.ldt = NULL;",
          "63:  init_rwsem(&mm->context.ldt_usr_sem);",
          "64: }",
          "65: int ldt_dup_context(struct mm_struct *oldmm, struct mm_struct *mm);",
          "68: static inline void init_new_context_ldt(struct mm_struct *mm) { }",
          "69: static inline int ldt_dup_context(struct mm_struct *oldmm,",
          "70:       struct mm_struct *mm)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "137:  mm->context.ctx_id = atomic64_inc_return(&last_mm_ctx_id);",
          "138:  atomic64_set(&mm->context.tlb_gen, 0);",
          "141:  if (cpu_feature_enabled(X86_FEATURE_OSPKE)) {",
          "143:   mm->context.pkey_allocation_map = 0x1;",
          "145:   mm->context.execute_only_pkey = -1;",
          "146:  }",
          "149: }",
          "150: static inline void destroy_context(struct mm_struct *mm)",
          "151: {",
          "",
          "[Removed Lines]",
          "140:  #ifdef CONFIG_X86_INTEL_MEMORY_PROTECTION_KEYS",
          "147:  #endif",
          "148:  return init_new_context_ldt(tsk, mm);",
          "",
          "[Added Lines]",
          "146: #ifdef CONFIG_X86_INTEL_MEMORY_PROTECTION_KEYS",
          "153: #endif",
          "154:  init_new_context_ldt(mm);",
          "155:  return 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "181: static inline int arch_dup_mmap(struct mm_struct *oldmm, struct mm_struct *mm)",
          "182: {",
          "183:  paravirt_arch_dup_mmap(oldmm, mm);",
          "185: }",
          "187: static inline void arch_exit_mmap(struct mm_struct *mm)",
          "",
          "[Removed Lines]",
          "184:  return 0;",
          "",
          "[Added Lines]",
          "191:  return ldt_dup_context(oldmm, mm);",
          "",
          "---------------"
        ],
        "arch/x86/kernel/ldt.c||arch/x86/kernel/ldt.c": [
          "File: arch/x86/kernel/ldt.c -> arch/x86/kernel/ldt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "131: }",
          "138: {",
          "139:  struct ldt_struct *new_ldt;",
          "141:  int retval = 0;",
          "148:   return 0;",
          "151:  mutex_lock(&old_mm->context.lock);",
          "154:   goto out_unlock;",
          "157:  new_ldt = alloc_ldt_struct(old_mm->context.ldt->nr_entries);",
          "158:  if (!new_ldt) {",
          "",
          "[Removed Lines]",
          "137: int init_new_context_ldt(struct task_struct *tsk, struct mm_struct *mm)",
          "140:  struct mm_struct *old_mm;",
          "143:  init_rwsem(&mm->context.ldt_usr_sem);",
          "145:  old_mm = current->mm;",
          "146:  if (!old_mm) {",
          "147:   mm->context.ldt = NULL;",
          "149:  }",
          "152:  if (!old_mm->context.ldt) {",
          "153:   mm->context.ldt = NULL;",
          "155:  }",
          "",
          "[Added Lines]",
          "137: int ldt_dup_context(struct mm_struct *old_mm, struct mm_struct *mm)",
          "142:  if (!old_mm)",
          "146:  if (!old_mm->context.ldt)",
          "",
          "---------------"
        ],
        "tools/testing/selftests/x86/ldt_gdt.c||tools/testing/selftests/x86/ldt_gdt.c": [
          "File: tools/testing/selftests/x86/ldt_gdt.c -> tools/testing/selftests/x86/ldt_gdt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "627: static int finish_exec_test(void)",
          "628: {",
          "638:  return nerrs ? 1 : 0;",
          "639: }",
          "",
          "[Removed Lines]",
          "634:  check_valid_segment(0, 1,",
          "635:        AR_DPL3 | AR_TYPE_XRCODE | AR_S | AR_P | AR_DB,",
          "636:        42, true);",
          "",
          "[Added Lines]",
          "633:  check_invalid_segment(0, 1);",
          "",
          "---------------"
        ]
      }
    }
  ]
}