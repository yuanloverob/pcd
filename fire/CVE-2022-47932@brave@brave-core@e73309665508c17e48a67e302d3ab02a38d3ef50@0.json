{
  "cve_id": "CVE-2022-47932",
  "cve_desc": "Brave Browser before 1.43.34 allowed a remote attacker to cause a denial of service via a crafted HTML file that mentions an ipfs:// or ipns:// URL. This vulnerability is caused by an incomplete fix for CVE-2022-47933.",
  "repo": "brave/brave-core",
  "patch_hash": "e73309665508c17e48a67e302d3ab02a38d3ef50",
  "patch_info": {
    "commit_hash": "e73309665508c17e48a67e302d3ab02a38d3ef50",
    "repo": "brave/brave-core",
    "commit_url": "https://github.com/brave/brave-core/commit/e73309665508c17e48a67e302d3ab02a38d3ef50",
    "files": [
      "browser/net/ipfs_redirect_network_delegate_helper.cc",
      "browser/net/ipfs_redirect_network_delegate_helper_unittest.cc"
    ],
    "message": "Merge pull request #14211 from brave/brave_24093\n\nBlock incorrect IPFS\\IPNS urls.",
    "before_after_code_files": [
      "browser/net/ipfs_redirect_network_delegate_helper.cc||browser/net/ipfs_redirect_network_delegate_helper.cc",
      "browser/net/ipfs_redirect_network_delegate_helper_unittest.cc||browser/net/ipfs_redirect_network_delegate_helper_unittest.cc"
    ]
  },
  "patch_diff": {
    "browser/net/ipfs_redirect_network_delegate_helper.cc||browser/net/ipfs_redirect_network_delegate_helper.cc": [
      "File: browser/net/ipfs_redirect_network_delegate_helper.cc -> browser/net/ipfs_redirect_network_delegate_helper.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "59:     } else {",
      "60:       ctx->blocked_by = brave::kOtherBlocked;",
      "61:     }",
      "62:   }",
      "63:   return net::OK;",
      "64: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "62:   } else if (has_ipfs_scheme) {",
      "64:     ctx->blocked_by = brave::kOtherBlocked;",
      "",
      "---------------"
    ],
    "browser/net/ipfs_redirect_network_delegate_helper_unittest.cc||browser/net/ipfs_redirect_network_delegate_helper_unittest.cc": [
      "File: browser/net/ipfs_redirect_network_delegate_helper_unittest.cc -> browser/net/ipfs_redirect_network_delegate_helper_unittest.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "117:   EXPECT_EQ(brave_request_info->blocked_by, brave::kOtherBlocked);",
      "118: }",
      "120: TEST_F(IPFSRedirectNetworkDelegateHelperTest,",
      "121:        SubFrameRequestDisabledWhen_NoContext) {",
      "122:   profile()->GetPrefs()->SetInteger(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "120: TEST_F(IPFSRedirectNetworkDelegateHelperTest,",
      "121:        LoadDisabledWhenIPFS_WhenWrongIPFSUrl) {",
      "122:   profile()->GetPrefs()->SetInteger(",
      "123:       kIPFSResolveMethod, static_cast<int>(IPFSResolveMethodTypes::IPFS_LOCAL));",
      "126:   {",
      "127:     GURL url(\"ipfs://10.10.10.1\");",
      "128:     auto brave_request_info = std::make_shared<brave::BraveRequestInfo>(url);",
      "129:     brave_request_info->resource_type = blink::mojom::ResourceType::kSubFrame;",
      "130:     brave_request_info->browser_context = profile();",
      "131:     int rc = ipfs::OnBeforeURLRequest_IPFSRedirectWork(",
      "132:         brave::ResponseCallback(), brave_request_info);",
      "133:     EXPECT_EQ(rc, net::OK);",
      "134:     ASSERT_EQ(brave_request_info->blocked_by, brave::kOtherBlocked);",
      "135:   }",
      "138:   {",
      "139:     GURL url(\"ipfs://10.10.10.1\");",
      "140:     auto brave_request_info = std::make_shared<brave::BraveRequestInfo>(url);",
      "141:     brave_request_info->resource_type = blink::mojom::ResourceType::kMainFrame;",
      "142:     brave_request_info->browser_context = profile();",
      "143:     int rc = ipfs::OnBeforeURLRequest_IPFSRedirectWork(",
      "144:         brave::ResponseCallback(), brave_request_info);",
      "145:     EXPECT_EQ(rc, net::OK);",
      "146:     ASSERT_EQ(brave_request_info->blocked_by, brave::kOtherBlocked);",
      "147:   }",
      "150:   {",
      "151:     GURL url(\"ipns://10.10.10.1\");",
      "152:     auto brave_request_info = std::make_shared<brave::BraveRequestInfo>(url);",
      "153:     brave_request_info->resource_type = blink::mojom::ResourceType::kSubFrame;",
      "154:     brave_request_info->browser_context = profile();",
      "155:     int rc = ipfs::OnBeforeURLRequest_IPFSRedirectWork(",
      "156:         brave::ResponseCallback(), brave_request_info);",
      "157:     EXPECT_EQ(rc, net::OK);",
      "158:     ASSERT_EQ(brave_request_info->blocked_by, brave::kOtherBlocked);",
      "159:   }",
      "162:   {",
      "163:     GURL url(\"ipns://10.10.10.1\");",
      "164:     auto brave_request_info = std::make_shared<brave::BraveRequestInfo>(url);",
      "165:     brave_request_info->resource_type = blink::mojom::ResourceType::kMainFrame;",
      "166:     brave_request_info->browser_context = profile();",
      "167:     int rc = ipfs::OnBeforeURLRequest_IPFSRedirectWork(",
      "168:         brave::ResponseCallback(), brave_request_info);",
      "169:     EXPECT_EQ(rc, net::OK);",
      "171:     ASSERT_EQ(brave_request_info->blocked_by, brave::kNotBlocked);",
      "172:   }",
      "173: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "498ade8c00de9a3393698deee17f7e89b4d9ac39",
      "candidate_info": {
        "commit_hash": "498ade8c00de9a3393698deee17f7e89b4d9ac39",
        "repo": "brave/brave-core",
        "commit_url": "https://github.com/brave/brave-core/commit/498ade8c00de9a3393698deee17f7e89b4d9ac39",
        "files": [
          "browser/net/ipfs_redirect_network_delegate_helper.cc",
          "browser/net/ipfs_redirect_network_delegate_helper_unittest.cc"
        ],
        "message": "Block incorrect IPFS\\IPNS urls. Fixes https://github.com/brave/brave-browser/issues/24093 Don't allow to commit raw ipfs\\ipns navigations.",
        "before_after_code_files": [
          "browser/net/ipfs_redirect_network_delegate_helper.cc||browser/net/ipfs_redirect_network_delegate_helper.cc",
          "browser/net/ipfs_redirect_network_delegate_helper_unittest.cc||browser/net/ipfs_redirect_network_delegate_helper_unittest.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/brave/brave-core/pull/14211"
        ],
        "olp_code_files": {
          "patch": [
            "browser/net/ipfs_redirect_network_delegate_helper.cc||browser/net/ipfs_redirect_network_delegate_helper.cc",
            "browser/net/ipfs_redirect_network_delegate_helper_unittest.cc||browser/net/ipfs_redirect_network_delegate_helper_unittest.cc"
          ],
          "candidate": [
            "browser/net/ipfs_redirect_network_delegate_helper.cc||browser/net/ipfs_redirect_network_delegate_helper.cc",
            "browser/net/ipfs_redirect_network_delegate_helper_unittest.cc||browser/net/ipfs_redirect_network_delegate_helper_unittest.cc"
          ]
        }
      },
      "candidate_diff": {
        "browser/net/ipfs_redirect_network_delegate_helper.cc||browser/net/ipfs_redirect_network_delegate_helper.cc": [
          "File: browser/net/ipfs_redirect_network_delegate_helper.cc -> browser/net/ipfs_redirect_network_delegate_helper.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:     } else {",
          "60:       ctx->blocked_by = brave::kOtherBlocked;",
          "61:     }",
          "62:   }",
          "63:   return net::OK;",
          "64: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62:   } else if (has_ipfs_scheme) {",
          "64:     ctx->blocked_by = brave::kOtherBlocked;",
          "",
          "---------------"
        ],
        "browser/net/ipfs_redirect_network_delegate_helper_unittest.cc||browser/net/ipfs_redirect_network_delegate_helper_unittest.cc": [
          "File: browser/net/ipfs_redirect_network_delegate_helper_unittest.cc -> browser/net/ipfs_redirect_network_delegate_helper_unittest.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:   EXPECT_EQ(brave_request_info->blocked_by, brave::kOtherBlocked);",
          "118: }",
          "120: TEST_F(IPFSRedirectNetworkDelegateHelperTest,",
          "121:        SubFrameRequestDisabledWhen_NoContext) {",
          "122:   profile()->GetPrefs()->SetInteger(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "120: TEST_F(IPFSRedirectNetworkDelegateHelperTest,",
          "121:        LoadDisabledWhenIPFS_WhenWrongIPFSUrl) {",
          "122:   profile()->GetPrefs()->SetInteger(",
          "123:       kIPFSResolveMethod, static_cast<int>(IPFSResolveMethodTypes::IPFS_LOCAL));",
          "126:   {",
          "127:     GURL url(\"ipfs://10.10.10.1\");",
          "128:     auto brave_request_info = std::make_shared<brave::BraveRequestInfo>(url);",
          "129:     brave_request_info->resource_type = blink::mojom::ResourceType::kSubFrame;",
          "130:     brave_request_info->browser_context = profile();",
          "131:     int rc = ipfs::OnBeforeURLRequest_IPFSRedirectWork(",
          "132:         brave::ResponseCallback(), brave_request_info);",
          "133:     EXPECT_EQ(rc, net::OK);",
          "134:     ASSERT_EQ(brave_request_info->blocked_by, brave::kOtherBlocked);",
          "135:   }",
          "138:   {",
          "139:     GURL url(\"ipfs://10.10.10.1\");",
          "140:     auto brave_request_info = std::make_shared<brave::BraveRequestInfo>(url);",
          "141:     brave_request_info->resource_type = blink::mojom::ResourceType::kMainFrame;",
          "142:     brave_request_info->browser_context = profile();",
          "143:     int rc = ipfs::OnBeforeURLRequest_IPFSRedirectWork(",
          "144:         brave::ResponseCallback(), brave_request_info);",
          "145:     EXPECT_EQ(rc, net::OK);",
          "146:     ASSERT_EQ(brave_request_info->blocked_by, brave::kOtherBlocked);",
          "147:   }",
          "150:   {",
          "151:     GURL url(\"ipns://10.10.10.1\");",
          "152:     auto brave_request_info = std::make_shared<brave::BraveRequestInfo>(url);",
          "153:     brave_request_info->resource_type = blink::mojom::ResourceType::kSubFrame;",
          "154:     brave_request_info->browser_context = profile();",
          "155:     int rc = ipfs::OnBeforeURLRequest_IPFSRedirectWork(",
          "156:         brave::ResponseCallback(), brave_request_info);",
          "157:     EXPECT_EQ(rc, net::OK);",
          "158:     ASSERT_EQ(brave_request_info->blocked_by, brave::kOtherBlocked);",
          "159:   }",
          "162:   {",
          "163:     GURL url(\"ipns://10.10.10.1\");",
          "164:     auto brave_request_info = std::make_shared<brave::BraveRequestInfo>(url);",
          "165:     brave_request_info->resource_type = blink::mojom::ResourceType::kMainFrame;",
          "166:     brave_request_info->browser_context = profile();",
          "167:     int rc = ipfs::OnBeforeURLRequest_IPFSRedirectWork(",
          "168:         brave::ResponseCallback(), brave_request_info);",
          "169:     EXPECT_EQ(rc, net::OK);",
          "171:     ASSERT_EQ(brave_request_info->blocked_by, brave::kNotBlocked);",
          "172:   }",
          "173: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}