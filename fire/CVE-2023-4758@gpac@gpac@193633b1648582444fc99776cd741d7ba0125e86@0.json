{
  "cve_id": "CVE-2023-4758",
  "cve_desc": "Buffer Over-read in GitHub repository gpac/gpac prior to 2.3-DEV.",
  "repo": "gpac/gpac",
  "patch_hash": "193633b1648582444fc99776cd741d7ba0125e86",
  "patch_info": {
    "commit_hash": "193633b1648582444fc99776cd741d7ba0125e86",
    "repo": "gpac/gpac",
    "commit_url": "https://github.com/gpac/gpac/commit/193633b1648582444fc99776cd741d7ba0125e86",
    "files": [
      "src/media_tools/avilib.c"
    ],
    "message": "fixed #2573",
    "before_after_code_files": [
      "src/media_tools/avilib.c||src/media_tools/avilib.c"
    ]
  },
  "patch_diff": {
    "src/media_tools/avilib.c||src/media_tools/avilib.c": [
      "File: src/media_tools/avilib.c -> src/media_tools/avilib.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2077:       alBITMAPINFOHEADER bih;",
      "2079:       memcpy(&bih, hdrl_data + i, sizeof(alBITMAPINFOHEADER));",
      "2082:       if (AVI->bitmap_info_header != NULL)",
      "2086:       AVI->width  = str2ulong(hdrl_data+i+4);",
      "2087:       AVI->height = str2ulong(hdrl_data+i+8);",
      "",
      "[Removed Lines]",
      "2080:       AVI->bitmap_info_header = (alBITMAPINFOHEADER *)",
      "2081:                                 gf_malloc(str2ulong((unsigned char *)&bih.bi_size));",
      "2083:        memcpy(AVI->bitmap_info_header, hdrl_data + i,",
      "2084:               str2ulong((unsigned char *)&bih.bi_size));",
      "",
      "[Added Lines]",
      "2080:       bih.bi_size = str2ulong((unsigned char *)&bih.bi_size);",
      "2082:       if (i + bih.bi_size > hdrl_len) ERR_EXIT(AVI_ERR_READ)",
      "2084:       AVI->bitmap_info_header = (alBITMAPINFOHEADER *) gf_malloc(bih.bi_size);",
      "2086:        memcpy(AVI->bitmap_info_header, hdrl_data + i, bih.bi_size);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2154:      {",
      "2156:       a = (char*)hdrl_data+i;",
      "2158:       AVI->video_superindex = (avisuperindex_chunk *) gf_malloc (sizeof (avisuperindex_chunk));",
      "2159:       memset(AVI->video_superindex, 0, sizeof (avisuperindex_chunk));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2159:       int avail = hdrl_len-i;",
      "2160:       if (avail<32) ERR_EXIT(AVI_ERR_READ)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2180:       if (AVI->video_superindex->bIndexSubType != 0) {",
      "2181:        GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[avilib] Invalid Header, bIndexSubType != 0\\n\"));",
      "2182:       }",
      "2184:       AVI->video_superindex->aIndex = (avisuperindex_entry*)",
      "2185:                                       gf_malloc (AVI->video_superindex->wLongsPerEntry * AVI->video_superindex->nEntriesInUse * sizeof (u32));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2187:       avail -= 32;",
      "2188:       if (avail < AVI->video_superindex->nEntriesInUse*16) ERR_EXIT(AVI_ERR_READ)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2221:      {",
      "2223:       a = (char*) hdrl_data+i;",
      "2225:       AVI->track[AVI->aptr].audio_superindex = (avisuperindex_chunk *) gf_malloc (sizeof (avisuperindex_chunk));",
      "2226:       memcpy (AVI->track[AVI->aptr].audio_superindex->fcc, a, 4);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2230:       int avail = hdrl_len-i;",
      "2231:       if (avail<32) ERR_EXIT(AVI_ERR_READ)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2247:        GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[avilib] Invalid Header, bIndexSubType != 0\\n\"));",
      "2248:       }",
      "2250:       AVI->track[AVI->aptr].audio_superindex->aIndex = (avisuperindex_entry*)",
      "2251:               gf_malloc (AVI->track[AVI->aptr].audio_superindex->wLongsPerEntry *",
      "2252:                          AVI->track[AVI->aptr].audio_superindex->nEntriesInUse * sizeof (u32));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2258:       avail -= 32;",
      "2259:       if (avail < AVI->track[AVI->aptr].audio_superindex->nEntriesInUse*16) ERR_EXIT(AVI_ERR_READ)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ccc0033ba3cab09c3350228000a3a44198b892bb",
      "candidate_info": {
        "commit_hash": "ccc0033ba3cab09c3350228000a3a44198b892bb",
        "repo": "gpac/gpac",
        "commit_url": "https://github.com/gpac/gpac/commit/ccc0033ba3cab09c3350228000a3a44198b892bb",
        "files": [
          "src/filters/in_pipe.c",
          "src/filters/mux_isom.c",
          "src/isomedia/box_dump.c",
          "src/media_tools/avilib.c",
          "src/utils/os_divers.c"
        ],
        "message": "fixed msvc build and warnings",
        "before_after_code_files": [
          "src/filters/in_pipe.c||src/filters/in_pipe.c",
          "src/filters/mux_isom.c||src/filters/mux_isom.c",
          "src/isomedia/box_dump.c||src/isomedia/box_dump.c",
          "src/media_tools/avilib.c||src/media_tools/avilib.c",
          "src/utils/os_divers.c||src/utils/os_divers.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/media_tools/avilib.c||src/media_tools/avilib.c"
          ],
          "candidate": [
            "src/media_tools/avilib.c||src/media_tools/avilib.c"
          ]
        }
      },
      "candidate_diff": {
        "src/filters/in_pipe.c||src/filters/in_pipe.c": [
          "File: src/filters/in_pipe.c -> src/filters/in_pipe.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:  char *src;",
          "58:  char *ext;",
          "59:  char *mime;",
          "63:  u32 read_block_size;",
          "",
          "[Removed Lines]",
          "60:  u32 block_size, bpcnt;",
          "61:  Bool blk, ka, mkp, sigflush, marker, timeout;",
          "",
          "[Added Lines]",
          "60:  u32 block_size, bpcnt, timeout;",
          "61:  Bool blk, ka, mkp, sigflush, marker;",
          "",
          "---------------"
        ],
        "src/filters/mux_isom.c||src/filters/mux_isom.c": [
          "File: src/filters/mux_isom.c -> src/filters/mux_isom.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7468:    ctx->dst_pck = gf_filter_pck_new_ref(ctx->opid, cbk_magic, block_size, srcp);",
          "7469:   }",
          "7470:   gf_list_del_item(ctx->ref_pcks, srcp);",
          "7472:   gf_filter_pck_unref(srcp);",
          "7473:  }",
          "",
          "[Removed Lines]",
          "7471:   src_pck_dur = gf_timestamp_rescale(gf_filter_pck_get_duration(srcp), gf_filter_pck_get_timescale(srcp), 1000);",
          "",
          "[Added Lines]",
          "7471:   src_pck_dur = (u32) gf_timestamp_rescale(gf_filter_pck_get_duration(srcp), gf_filter_pck_get_timescale(srcp), 1000);",
          "",
          "---------------"
        ],
        "src/isomedia/box_dump.c||src/isomedia/box_dump.c": [
          "File: src/isomedia/box_dump.c -> src/isomedia/box_dump.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "7191:  if (box && box_has_children && (unparsed_bytes>=8)) {",
          "7193:   u32 boff = buflen-unparsed_bytes;",
          "7194:   box->size = unparsed_bytes;",
          "7195:   GF_BitStream *bs = gf_bs_new(buf+boff, unparsed_bytes, GF_BITSTREAM_READ);",
          "",
          "[Removed Lines]",
          "7192:   u32 osize = box->size;",
          "",
          "[Added Lines]",
          "7192:   u32 osize = (u32) box->size;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7317:   sprintf(szName, \"%s\", gf_4cc_to_str(b4cc));",
          "7318:   if (box) {",
          "7319:    JS_SetPropertyStr(ctx, obj, \"type\", JS_NewString(ctx, szName));",
          "7321:    strcat(szName, \"Box\");",
          "7322:   } else {",
          "",
          "[Removed Lines]",
          "7320:    JS_SetPropertyStr(ctx, obj, \"Size\", JS_NewInt32(ctx, box->size));",
          "",
          "[Added Lines]",
          "7320:    JS_SetPropertyStr(ctx, obj, \"Size\", JS_NewInt32(ctx, (u32) box->size));",
          "",
          "---------------"
        ],
        "src/media_tools/avilib.c||src/media_tools/avilib.c": [
          "File: src/media_tools/avilib.c -> src/media_tools/avilib.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2164:      {",
          "2166:       a = (char*)hdrl_data+i;",
          "2168:       if (avail<32) ERR_EXIT(AVI_ERR_READ)",
          "2170:       AVI->video_superindex = (avisuperindex_chunk *) gf_malloc (sizeof (avisuperindex_chunk));",
          "",
          "[Removed Lines]",
          "2167:       int avail = hdrl_len-i;",
          "",
          "[Added Lines]",
          "2167:       int avail =(int) (hdrl_len-i);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2193:        GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (\"[avilib] Invalid Header, bIndexSubType != 0\\n\"));",
          "2194:       }",
          "2195:       avail -= 32;",
          "2198:       AVI->video_superindex->aIndex = (avisuperindex_entry*)",
          "2199:                                       gf_malloc (AVI->video_superindex->wLongsPerEntry * AVI->video_superindex->nEntriesInUse * sizeof (u32));",
          "",
          "[Removed Lines]",
          "2196:       if (avail < AVI->video_superindex->nEntriesInUse*16) ERR_EXIT(AVI_ERR_READ)",
          "",
          "[Added Lines]",
          "2196:       if (avail < (int) AVI->video_superindex->nEntriesInUse*16) ERR_EXIT(AVI_ERR_READ)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2235:      {",
          "2237:       a = (char*) hdrl_data+i;",
          "2239:       if (avail<32) ERR_EXIT(AVI_ERR_READ)",
          "2241:       AVI->track[AVI->aptr].audio_superindex = (avisuperindex_chunk *) gf_malloc (sizeof (avisuperindex_chunk));",
          "",
          "[Removed Lines]",
          "2238:       int avail = hdrl_len-i;",
          "",
          "[Added Lines]",
          "2238:       int avail = (int) (hdrl_len-i);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2264:       }",
          "2266:       avail -= 32;",
          "2269:       AVI->track[AVI->aptr].audio_superindex->aIndex = (avisuperindex_entry*)",
          "2270:               gf_malloc (AVI->track[AVI->aptr].audio_superindex->wLongsPerEntry *",
          "",
          "[Removed Lines]",
          "2267:       if (avail < AVI->track[AVI->aptr].audio_superindex->nEntriesInUse*16) ERR_EXIT(AVI_ERR_READ)",
          "",
          "[Added Lines]",
          "2267:       if (avail < (int) AVI->track[AVI->aptr].audio_superindex->nEntriesInUse*16) ERR_EXIT(AVI_ERR_READ)",
          "",
          "---------------"
        ],
        "src/utils/os_divers.c||src/utils/os_divers.c": [
          "File: src/utils/os_divers.c -> src/utils/os_divers.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1860: #if defined(_WIN32_WCE)",
          "1861:  last_total_k_u_time = total_cpu_time;",
          "1862: #else",
          "1863:  last_proc_idle_time = proc_idle_time;",
          "1864:  last_proc_k_u_time = proc_k_u_time;",
          "1865: #endif",
          "1870:  memcpy(rti, &the_rti, sizeof(GF_SystemRTInfo));",
          "1871:  return GF_TRUE;",
          "1872: }",
          "",
          "[Removed Lines]",
          "1867:  if (!the_rti.process_memory && (mem_usage_at_startup >= ms.dwAvailPhys))",
          "1868:   the_rti.process_memory = mem_usage_at_startup - ms.dwAvailPhys;",
          "",
          "[Added Lines]",
          "1862:  if (!the_rti.process_memory && (mem_usage_at_startup >= ms.dwAvailPhys))",
          "1863:   the_rti.process_memory = mem_usage_at_startup - ms.dwAvailPhys;",
          "",
          "---------------"
        ]
      }
    }
  ]
}