{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "56eacbe95ff9958945b81d577bb142792aa1fea9",
      "candidate_info": {
        "commit_hash": "56eacbe95ff9958945b81d577bb142792aa1fea9",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/56eacbe95ff9958945b81d577bb142792aa1fea9",
        "files": [
          "receive.c"
        ],
        "message": "Fix possible bogus exec_msg_threshold reporting\n\nReset the exec_msg_threshold stack (longest found actions) when a parse error is detected (before running the actual scritp). Otherwise we may inherit old records from previous runs\n\n(cherry picked from commit e7ed29e50f8dc76717fe38281945aa331958db25)",
        "before_after_code_files": [
          "receive.c||receive.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "receive.c||receive.c": [
          "File: receive.c -> receive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:    LM_ERR(\"no via found in request\\n\");",
          "172:    update_stat( err_reqs, 1);",
          "174:   }",
          "",
          "[Removed Lines]",
          "173:    goto parse_error;",
          "",
          "[Added Lines]",
          "175:    goto parse_error_reset;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "192:   if (existing_context == NULL)",
          "194:   current_processing_ctx = ctx;",
          "",
          "[Removed Lines]",
          "193:    prepare_context( ctx, parse_error );",
          "",
          "[Added Lines]",
          "195:    prepare_context( ctx, parse_error_reset );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "226:    LM_ERR(\"no via found in reply\\n\");",
          "227:    update_stat( err_rpls, 1);",
          "229:   }",
          "",
          "[Removed Lines]",
          "228:    goto parse_error;",
          "",
          "[Added Lines]",
          "230:    goto parse_error_reset;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "236:   if (existing_context == NULL)",
          "238:   current_processing_ctx = ctx;",
          "",
          "[Removed Lines]",
          "237:    prepare_context( ctx, parse_error );",
          "",
          "[Added Lines]",
          "239:    prepare_context( ctx, parse_error_reset );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "294:  if (in_buff.s != buf)",
          "295:   pkg_free(in_buff.s);",
          "296:  return 0;",
          "297: parse_error:",
          "298:  exec_parse_err_cb(msg);",
          "299:  free_sip_msg(msg);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "299: parse_error_reset:",
          "300:  reset_longest_action_list(execmsgthreshold);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9aa1033b9598f85d88a9bdd1b12d0cb15b0ca940",
      "candidate_info": {
        "commit_hash": "9aa1033b9598f85d88a9bdd1b12d0cb15b0ca940",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/9aa1033b9598f85d88a9bdd1b12d0cb15b0ca940",
        "files": [
          "parser/parse_to.c"
        ],
        "message": "parse_to_param(): Rework previous fix (OSS-Fuzz)\n\nInvoking strlen() on a non NULL-terminated buffer is equally bad,\npossibly even worse.  Instead, simply rely on the @end parameter being\ncorrect, which is an assumption already made by the current code of the\nfunction.\n\nFixes OSS-Fuzz#41073\n\n(cherry picked from commit 51b908f8fde0aa2eac8dbcfff319281625d6f3f2)",
        "before_after_code_files": [
          "parser/parse_to.c||parser/parse_to.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "parser/parse_to.c||parser/parse_to.c": [
          "File: parser/parse_to.c -> parser/parse_to.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "480: parse_error:",
          "481:  LM_ERR(\"unexpected char [%c] in status %d: <<%.*s>> .\\n\",",
          "484: error:",
          "485:  if (param) pkg_free(param);",
          "486:  free_to_params(to_b);",
          "",
          "[Removed Lines]",
          "482:      tmp < end? *tmp : *(buffer+strlen(buffer)-1),status,",
          "483:      (int)(tmp-buffer), ZSW(buffer));",
          "",
          "[Added Lines]",
          "482:      tmp < end? *tmp : *(end-1),status, (int)(tmp-buffer), ZSW(buffer));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "818: parse_error:",
          "819:  LM_ERR(\"unexpected char [%c] in status %d: <<%.*s>> .\\n\",",
          "822: error:",
          "823:  first_b->error=PARSE_ERROR;",
          "824:  free_to_params(first_b);",
          "",
          "[Removed Lines]",
          "820:      tmp < end? *tmp : *(buffer+strlen(buffer)-1),",
          "821:      status, (int)(tmp-buffer), buffer);",
          "",
          "[Added Lines]",
          "819:      tmp < end? *tmp : *(end-1), status, (int)(tmp-buffer), buffer);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cb6d7fa7ae230e984f52aedb261a16e9a17ef568",
      "candidate_info": {
        "commit_hash": "cb6d7fa7ae230e984f52aedb261a16e9a17ef568",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/cb6d7fa7ae230e984f52aedb261a16e9a17ef568",
        "files": [
          "modules/b2b_logic/b2b_logic.c",
          "modules/b2b_logic/b2b_logic.h",
          "modules/b2b_logic/doc/b2b_logic_admin.xml",
          "modules/b2b_logic/logic.c"
        ],
        "message": "b2b_logic: properly decrease value and pass Max-Forwrads header\n\nThis applies to requests that are effectively \"passed\" from one entity to its\npeer such as initial INVITEs handled with b2b_init_request() or requests\nhandled with b2b_pass_request().\n\nFixes #2471\n\n(cherry picked from commit fa84d8d0e6cf719c0d2c7bd215fa74e5e33e1a2f)",
        "before_after_code_files": [
          "modules/b2b_logic/b2b_logic.c||modules/b2b_logic/b2b_logic.c",
          "modules/b2b_logic/b2b_logic.h||modules/b2b_logic/b2b_logic.h",
          "modules/b2b_logic/logic.c||modules/b2b_logic/logic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_logic/b2b_logic.c||modules/b2b_logic/b2b_logic.c": [
          "File: modules/b2b_logic/b2b_logic.c -> modules/b2b_logic/b2b_logic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "124: static str default_headers[HDR_DEFAULT_LEN]=",
          "125: {",
          "126:    {\"Content-Type\",12},",
          "127:    {\"Supported\", 9},",
          "128:    {\"Allow\", 5},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "126:    {\"Max-Forwards\",12},",
          "",
          "---------------"
        ],
        "modules/b2b_logic/b2b_logic.h||modules/b2b_logic/b2b_logic.h": [
          "File: modules/b2b_logic/b2b_logic.h -> modules/b2b_logic/b2b_logic.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: #define b2b_peer(type) ((type+1)%2)",
          "49: #define HDR_LST_LEN       32",
          "53: #define  B2BL_FLAG_TRANSPARENT_AUTH 0x01",
          "",
          "[Removed Lines]",
          "50: #define HDR_DEFAULT_LEN   8",
          "",
          "[Added Lines]",
          "50: #define HDR_DEFAULT_LEN   9",
          "",
          "---------------"
        ],
        "modules/b2b_logic/logic.c||modules/b2b_logic/logic.c": [
          "File: modules/b2b_logic/logic.c -> modules/b2b_logic/logic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "293:  return 0;",
          "294: }",
          "297: b2bl_entity_id_t* b2bl_create_new_entity(enum b2b_entity_type type, str* entity_id,",
          "298:   str* to_uri, str *proxy, str* from_uri,str*from_dname, str* ssid, str* hdrs,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "296: int b2b_msg_get_maxfwd(struct sip_msg *msg)",
          "297: {",
          "298:  str vals;",
          "299:  unsigned int valn;",
          "301:  if (!msg->maxforwards) {",
          "302:   if (parse_headers(msg, HDR_MAXFORWARDS_F, 0) == -1) {",
          "303:    LM_ERR(\"parsing MAX_FORWARD header failed!\\n\");",
          "304:    return -1;",
          "305:   }",
          "306:   if (!msg->maxforwards) {",
          "307:    LM_DBG(\"max_forwards header not found!\\n\");",
          "308:    return -1;",
          "309:   }",
          "310:  }",
          "312:  trim_len(vals.len, vals.s, msg->maxforwards->body);",
          "313:  if (str2int(&vals, &valn) < 0) {",
          "314:   LM_ERR(\"Failed to parse Max-Forwards value\\n\");",
          "315:   return -1;",
          "316:  }",
          "318:  return valn;",
          "319: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1625:  b2b_req_data_t req_data;",
          "1626:  b2b_rpl_data_t rpl_data;",
          "1627:  int do_unlock = 0;",
          "1629:  if (!tuple) {",
          "1630:   lock_get(&b2bl_htable[cur_route_ctx.hash_index].lock);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1652:  int maxfwd;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1692:   req_data.extra_headers =",
          "1693:    cur_route_ctx.extra_headers->len?cur_route_ctx.extra_headers:NULL;",
          "1694:   req_data.body =cur_route_ctx.body->len?cur_route_ctx.body:NULL;",
          "1695:   b2bl_htable[cur_route_ctx.hash_index].locked_by = process_no;",
          "1696:   if(b2b_api.send_request(&req_data) < 0)",
          "1697:   {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1721:   if ((maxfwd = b2b_msg_get_maxfwd(msg)) > 0)",
          "1722:    req_data.maxfwd = maxfwd;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2998:  str from_tag_gen= {0, 0};",
          "2999:  str new_body={0, 0};",
          "3000:  struct sip_uri ct_uri;",
          "3002:  if(b2b_msg_get_from(msg, &from_uri, &from_dname)< 0 ||  b2b_msg_get_to(msg, &to_uri, params->flags)< 0)",
          "3003:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3029:  int maxfwd;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3105:   goto error;",
          "3106:  }",
          "3108:  b2bl_htable[hash_index].locked_by = process_no;",
          "3110:  client_id = b2b_api.client_new(&ci, b2b_client_notify,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3138:  if ((maxfwd = b2b_msg_get_maxfwd(msg)) > 0)",
          "3139:   ci.maxfwd = maxfwd;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3326:  str *hdrs;",
          "3327:  struct b2bl_new_entity *new_entity;",
          "3328:  struct sip_uri ct_uri;",
          "3330:  if(msg == NULL)",
          "3331:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3362:  int maxfwd;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3444:  ci.send_sock     = msg->force_send_socket?",
          "3445:   msg->force_send_socket:msg->rcv.bind_address;",
          "3447:  if (new_entity->adv_contact.s) {",
          "3448:   ci.local_contact = new_entity->adv_contact;",
          "3449:  } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3482:  if ((maxfwd = b2b_msg_get_maxfwd(msg)) > 0)",
          "3483:   ci.maxfwd = maxfwd;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0b38b5425e896c15313955489bd8a94d273e4990",
      "candidate_info": {
        "commit_hash": "0b38b5425e896c15313955489bd8a94d273e4990",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/0b38b5425e896c15313955489bd8a94d273e4990",
        "files": [
          "modules/rtpengine/rtpengine.c"
        ],
        "message": "rtpengine: fix API crash when no set/node is defined\n\n(cherry picked from commit 206b3a1d0f3cc899b6076657c9ccb89eeb3f8395)",
        "before_after_code_files": [
          "modules/rtpengine/rtpengine.c||modules/rtpengine/rtpengine.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/rtpengine/rtpengine.c||modules/rtpengine/rtpengine.c": [
          "File: modules/rtpengine/rtpengine.c -> modules/rtpengine/rtpengine.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3780:  if (!server->node.s) {",
          "3781:   node = NULL;",
          "3782:   rset = rtpengine_get_set(server->set);",
          "3783:   server->set = rset->id_set;",
          "3784:  } else {",
          "3785:   rset = select_rtpe_set(server->set);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3783:   if (!rset) {",
          "3784:    LM_ERR(\"no rtpengine set availble!\\n\");",
          "3785:    RTPE_STOP_READ();",
          "3786:    return -1;",
          "3787:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d5f20d8623451890354b4c5115a50cb2622cc07c",
      "candidate_info": {
        "commit_hash": "d5f20d8623451890354b4c5115a50cb2622cc07c",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/d5f20d8623451890354b4c5115a50cb2622cc07c",
        "files": [
          "modules/python/python_exec.c"
        ],
        "message": "python: Don't leak memory in python_exec().\n\nThe bug was introduced in rev 302058d8d38 (April 2019) along\nwith module API cleanup and affects all releases since 3.0.",
        "before_after_code_files": [
          "modules/python/python_exec.c||modules/python/python_exec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/python/python_exec.c||modules/python/python_exec.c": [
          "File: modules/python/python_exec.c -> modules/python/python_exec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:     str mystr;",
          "49:     if (pkg_nt_str_dup(&method_name, _method_name_s) < 0)",
          "51:     if (_mystr_s && pkg_nt_str_dup(&mystr, _mystr_s) < 0)",
          "54:     PyEval_AcquireThread(myThreadState);",
          "",
          "[Removed Lines]",
          "50:         return -1;",
          "52:         return -1;",
          "",
          "[Added Lines]",
          "50:         goto e0;",
          "52:         goto e1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "115:     rval = PyLong_AsLong(pResult);",
          "116:     Py_DECREF(pResult);",
          "117:     PyEval_ReleaseThread(myThreadState);",
          "119:     pkg_free(method_name.s);",
          "121:     return rval;",
          "123: error:",
          "125:     if (_mystr_s)",
          "126:         pkg_free(mystr.s);",
          "128:     return -1;",
          "129: }",
          "",
          "[Removed Lines]",
          "124:     pkg_free(method_name.s);",
          "",
          "[Added Lines]",
          "119:     if (_mystr_s)",
          "120:         pkg_free(mystr.s);",
          "128: e1: pkg_free(method_name.s);",
          "129: e0:",
          "",
          "---------------"
        ]
      }
    }
  ]
}