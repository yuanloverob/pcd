{
  "cve_id": "CVE-2023-1350",
  "cve_desc": "A vulnerability was found in liferea. It has been rated as critical. Affected by this issue is the function update_job_run of the file src/update.c of the component Feed Enrichment. The manipulation of the argument source with the input |date &gt;/tmp/bad-item-link.txt leads to os command injection. The attack may be launched remotely. The exploit has been disclosed to the public and may be used. The name of the patch is 8d8b5b963fa64c7a2122d1bbfbb0bed46e813e59. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-222848.",
  "repo": "lwindolf/liferea",
  "patch_hash": "8d8b5b963fa64c7a2122d1bbfbb0bed46e813e59",
  "patch_info": {
    "commit_hash": "8d8b5b963fa64c7a2122d1bbfbb0bed46e813e59",
    "repo": "lwindolf/liferea",
    "commit_url": "https://github.com/lwindolf/liferea/commit/8d8b5b963fa64c7a2122d1bbfbb0bed46e813e59",
    "files": [
      "src/subscription.c",
      "src/update.c",
      "src/update.h"
    ],
    "message": "Fix RCE vulnerability on feed enrichment\n\nCurrently there are a few places in the code that do not check URLs for\nthe presence of a command prefix, allowing malicious websites to run any\ncommand in the local system.\n\nTrying to run feed enrichment (i.e. after option \"Extract full content\nfrom HTML5 and Google AMP\" is enabled) in a subscription that produces\nthis item:\n\n    <item>\n      <title>Check /tmp/bad-item-link.txt</title>\n      <link>|date &gt;/tmp/bad-item-link.txt</link>\n    </item>\n\nwill cause Liferea to call update_request_new on URL\n\"|date >/tmp/bad-item-link.txt\" and then blindly run the command. A\nsimilar effect happens when running the feed enrichment in a item that\nlinks to a document like this:\n\n    <!DOCTYPE html>\n    <html>\n     <head>\n      <title>AMP URL RCE PoC</title>\n      <link rel=\"amphtml\" href=\"|date &gt; /tmp/bad-amp-url.txt\">\n     </head>\n     <body>\n         Check the results in /tmp/bad-amp-url.txt\n     </body>\n    </html>\n\nonce Liferea tries to load the AMP URL.\n\nThere are other calls to update_request_* functions where URLs are\nvalidated correctly (e.g. in feed icons and comments) and do not trigger\nthis vulnerability. Since the subscription update is the exception where\nfeed commands are supported (and welcome!) I chose to lock this feature\nbehind a non-persistent flag and only enable it when required. This is\nsafer than adding the flag in updateOptions, which is usually reused in\nsubordinate requests.\n\nThis failure exists since commits b8288389820a3f510ef4b21684b22439c41d95a5\nand b67dbba73443ab7b36fcd3c78aa803e974c0f23e from Setember 2017.",
    "before_after_code_files": [
      "src/subscription.c||src/subscription.c",
      "src/update.c||src/update.c",
      "src/update.h||src/update.h"
    ]
  },
  "patch_diff": {
    "src/subscription.c||src/subscription.c": [
      "File: src/subscription.c -> src/subscription.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "282:    subscription->updateState,",
      "283:    subscription->updateOptions",
      "284:   );",
      "286:   if (subscription_get_filter (subscription))",
      "287:    request->filtercmd = g_strdup (subscription_get_filter (subscription));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "285:   update_request_allow_commands (request, TRUE);",
      "",
      "---------------"
    ],
    "src/update.c||src/update.c": [
      "File: src/update.c -> src/update.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "234:  request->authValue = g_strdup (authValue);",
      "235: }",
      "239: updateResultPtr",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "237: void",
      "238: update_request_allow_commands (UpdateRequest *request, gboolean allowCommands)",
      "239: {",
      "240:  request->allowCommands = allowCommands;",
      "241: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "674:  if (*(job->request->source) == '|') {",
      "677:   return;",
      "678:  }",
      "",
      "[Removed Lines]",
      "675:   debug1 (DEBUG_UPDATE, \"Recognized local command: %s\", job->request->source);",
      "676:   update_exec_cmd (job);",
      "",
      "[Added Lines]",
      "682:   if (job->request->allowCommands) {",
      "683:    debug1 (DEBUG_UPDATE, \"Recognized local command: %s\", job->request->source);",
      "684:    update_exec_cmd (job);",
      "685:   } else {",
      "686:    debug1 (DEBUG_UPDATE, \"Refusing to run local command from unexpected source: %s\", job->request->source);",
      "688:    update_process_finished_job (job);",
      "689:   }",
      "",
      "---------------"
    ],
    "src/update.h||src/update.h": [
      "File: src/update.h -> src/update.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "229: void update_request_set_auth_value (UpdateRequest *request, const gchar* authValue);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "245: void update_request_allow_commands (UpdateRequest *request, gboolean allowCommands);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "39834934f53383bb028b37be3cd5eea027fb7a1d",
      "candidate_info": {
        "commit_hash": "39834934f53383bb028b37be3cd5eea027fb7a1d",
        "repo": "lwindolf/liferea",
        "commit_url": "https://github.com/lwindolf/liferea/commit/39834934f53383bb028b37be3cd5eea027fb7a1d",
        "files": [
          "src/subscription.c",
          "src/update.c",
          "src/update.h"
        ],
        "message": "Fixes CVE-2023-1350 (patch by Alexander Erwin Ittner)\n\nCurrently there are a few places in the code that do not check URLs for\nthe presence of a command prefix, allowing malicious websites to run any\ncommand in the local system.\n\nTrying to run feed enrichment (i.e. after option \"Extract full content\nfrom HTML5 and Google AMP\" is enabled) in a subscription that produces\nthis item:\n\n    <item>\n      <title>Check /tmp/bad-item-link.txt</title>\n      <link>|date &gt;/tmp/bad-item-link.txt</link>\n    </item>\n\nwill cause Liferea to call update_request_new on URL\n\"|date >/tmp/bad-item-link.txt\" and then blindly run the command. A\nsimilar effect happens when running the feed enrichment in a item that\nlinks to a document like this:\n\n    <!DOCTYPE html>\n    <html>\n     <head>\n      <title>AMP URL RCE PoC</title>\n      <link rel=\"amphtml\" href=\"|date &gt; /tmp/bad-amp-url.txt\">\n     </head>\n     <body>\n         Check the results in /tmp/bad-amp-url.txt\n     </body>\n    </html>\n\nonce Liferea tries to load the AMP URL.\n\nThere are other calls to update_request_* functions where URLs are\nvalidated correctly (e.g. in feed icons and comments) and do not trigger\nthis vulnerability. Since the subscription update is the exception where\nfeed commands are supported (and welcome!) I chose to lock this feature\nbehind a non-persistent flag and only enable it when required. This is\nsafer than adding the flag in updateOptions, which is usually reused in\nsubordinate requests.",
        "before_after_code_files": [
          "src/subscription.c||src/subscription.c",
          "src/update.c||src/update.c",
          "src/update.h||src/update.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/subscription.c||src/subscription.c",
            "src/update.c||src/update.c",
            "src/update.h||src/update.h"
          ],
          "candidate": [
            "src/subscription.c||src/subscription.c",
            "src/update.c||src/update.c",
            "src/update.h||src/update.h"
          ]
        }
      },
      "candidate_diff": {
        "src/subscription.c||src/subscription.c": [
          "File: src/subscription.c -> src/subscription.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "321:   request->updateState = update_state_copy (subscription->updateState);",
          "322:   request->options = update_options_copy (subscription->updateOptions);",
          "323:   request->source = g_strdup (subscription_get_source (subscription));",
          "324:   if (subscription_get_filter (subscription))",
          "325:    request->filtercmd = g_strdup (subscription_get_filter (subscription));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "324:   update_request_allow_commands (request, TRUE);",
          "",
          "---------------"
        ],
        "src/update.c||src/update.c": [
          "File: src/update.c -> src/update.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "184:  request->authValue = g_strdup(authValue);",
          "185: }",
          "187: updateResultPtr",
          "188: update_result_new (void)",
          "189: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "187: void",
          "188: update_request_allow_commands (updateRequestPtr request, gboolean allowCommands)",
          "189: {",
          "190:  request->allowCommands = allowCommands;",
          "191: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "492:  if (*(job->request->source) == '|') {",
          "495:   return;",
          "496:  }",
          "",
          "[Removed Lines]",
          "493:   debug1 (DEBUG_UPDATE, \"Recognized local command: %s\", job->request->source);",
          "494:   update_exec_cmd (job);",
          "",
          "[Added Lines]",
          "499:   if (job->request->allowCommands) {",
          "500:    debug1 (DEBUG_UPDATE, \"Recognized local command: %s\", job->request->source);",
          "501:    update_exec_cmd (job);",
          "502:   } else {",
          "503:    debug1 (DEBUG_UPDATE, \"Refusing to run local command from unexpected source: %s\", job->request->source);",
          "505:    update_process_finished_job (job);",
          "506:   }",
          "",
          "---------------"
        ],
        "src/update.h||src/update.h": [
          "File: src/update.h -> src/update.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "226: updateResultPtr update_result_new (void);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "242: void update_request_allow_commands (updateRequestPtr request, gboolean allowCommands);",
          "",
          "---------------"
        ]
      }
    }
  ]
}