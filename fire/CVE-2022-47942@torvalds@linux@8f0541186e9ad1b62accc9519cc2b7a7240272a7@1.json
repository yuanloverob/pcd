{
  "cve_id": "CVE-2022-47942",
  "cve_desc": "An issue was discovered in ksmbd in the Linux kernel 5.15 through 5.19 before 5.19.2. There is a heap-based buffer overflow in set_ntacl_dacl, related to use of SMB2_QUERY_INFO_HE after a malformed SMB2_SET_INFO_HE command.",
  "repo": "torvalds/linux",
  "patch_hash": "8f0541186e9ad1b62accc9519cc2b7a7240272a7",
  "patch_info": {
    "commit_hash": "8f0541186e9ad1b62accc9519cc2b7a7240272a7",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/8f0541186e9ad1b62accc9519cc2b7a7240272a7",
    "files": [
      "fs/ksmbd/smb2pdu.c",
      "fs/ksmbd/smbacl.c",
      "fs/ksmbd/smbacl.h",
      "fs/ksmbd/vfs.c"
    ],
    "message": "ksmbd: fix heap-based overflow in set_ntacl_dacl()\n\nThe testcase use SMB2_SET_INFO_HE command to set a malformed file attribute\nunder the label `security.NTACL`. SMB2_QUERY_INFO_HE command in testcase\ntrigger the following overflow.\n\n[ 4712.003781] ==================================================================\n[ 4712.003790] BUG: KASAN: slab-out-of-bounds in build_sec_desc+0x842/0x1dd0 [ksmbd]\n[ 4712.003807] Write of size 1060 at addr ffff88801e34c068 by task kworker/0:0/4190\n\n[ 4712.003813] CPU: 0 PID: 4190 Comm: kworker/0:0 Not tainted 5.19.0-rc5 #1\n[ 4712.003850] Workqueue: ksmbd-io handle_ksmbd_work [ksmbd]\n[ 4712.003867] Call Trace:\n[ 4712.003870]  <TASK>\n[ 4712.003873]  dump_stack_lvl+0x49/0x5f\n[ 4712.003935]  print_report.cold+0x5e/0x5cf\n[ 4712.003972]  ? ksmbd_vfs_get_sd_xattr+0x16d/0x500 [ksmbd]\n[ 4712.003984]  ? cmp_map_id+0x200/0x200\n[ 4712.003988]  ? build_sec_desc+0x842/0x1dd0 [ksmbd]\n[ 4712.004000]  kasan_report+0xaa/0x120\n[ 4712.004045]  ? build_sec_desc+0x842/0x1dd0 [ksmbd]\n[ 4712.004056]  kasan_check_range+0x100/0x1e0\n[ 4712.004060]  memcpy+0x3c/0x60\n[ 4712.004064]  build_sec_desc+0x842/0x1dd0 [ksmbd]\n[ 4712.004076]  ? parse_sec_desc+0x580/0x580 [ksmbd]\n[ 4712.004088]  ? ksmbd_acls_fattr+0x281/0x410 [ksmbd]\n[ 4712.004099]  smb2_query_info+0xa8f/0x6110 [ksmbd]\n[ 4712.004111]  ? psi_group_change+0x856/0xd70\n[ 4712.004148]  ? update_load_avg+0x1c3/0x1af0\n[ 4712.004152]  ? asym_cpu_capacity_scan+0x5d0/0x5d0\n[ 4712.004157]  ? xas_load+0x23/0x300\n[ 4712.004162]  ? smb2_query_dir+0x1530/0x1530 [ksmbd]\n[ 4712.004173]  ? _raw_spin_lock_bh+0xe0/0xe0\n[ 4712.004179]  handle_ksmbd_work+0x30e/0x1020 [ksmbd]\n[ 4712.004192]  process_one_work+0x778/0x11c0\n[ 4712.004227]  ? _raw_spin_lock_irq+0x8e/0xe0\n[ 4712.004231]  worker_thread+0x544/0x1180\n[ 4712.004234]  ? __cpuidle_text_end+0x4/0x4\n[ 4712.004239]  kthread+0x282/0x320\n[ 4712.004243]  ? process_one_work+0x11c0/0x11c0\n[ 4712.004246]  ? kthread_complete_and_exit+0x30/0x30\n[ 4712.004282]  ret_from_fork+0x1f/0x30\n\nThis patch add the buffer validation for security descriptor that is\nstored by malformed SMB2_SET_INFO_HE command. and allocate large\nresponse buffer about SMB2_O_INFO_SECURITY file info class.\n\nFixes: e2f34481b24d (\"cifsd: add server-side procedures for SMB3\")\nCc: stable@vger.kernel.org\nReported-by: zdi-disclosures@trendmicro.com # ZDI-CAN-17771\nReviewed-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>\nSigned-off-by: Steve French <stfrench@microsoft.com>",
    "before_after_code_files": [
      "fs/ksmbd/smb2pdu.c||fs/ksmbd/smb2pdu.c",
      "fs/ksmbd/smbacl.c||fs/ksmbd/smbacl.c",
      "fs/ksmbd/smbacl.h||fs/ksmbd/smbacl.h",
      "fs/ksmbd/vfs.c||fs/ksmbd/vfs.c"
    ]
  },
  "patch_diff": {
    "fs/ksmbd/smb2pdu.c||fs/ksmbd/smb2pdu.c": [
      "File: fs/ksmbd/smb2pdu.c -> fs/ksmbd/smb2pdu.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "535:   struct smb2_query_info_req *req;",
      "537:   req = smb2_get_msg(work->request_buf);",
      "541:    sz = large_sz;",
      "542:  }",
      "",
      "[Removed Lines]",
      "538:   if (req->InfoType == SMB2_O_INFO_FILE &&",
      "539:       (req->FileInfoClass == FILE_FULL_EA_INFORMATION ||",
      "540:        req->FileInfoClass == FILE_ALL_INFORMATION))",
      "",
      "[Added Lines]",
      "538:   if ((req->InfoType == SMB2_O_INFO_FILE &&",
      "539:        (req->FileInfoClass == FILE_FULL_EA_INFORMATION ||",
      "540:        req->FileInfoClass == FILE_ALL_INFORMATION)) ||",
      "541:       req->InfoType == SMB2_O_INFO_SECURITY)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2988:       goto err_out;",
      "2990:      rc = build_sec_desc(user_ns,",
      "2992:            OWNER_SECINFO |",
      "2993:            GROUP_SECINFO |",
      "2994:            DACL_SECINFO,",
      "",
      "[Removed Lines]",
      "2991:            pntsd, NULL,",
      "",
      "[Added Lines]",
      "2992:            pntsd, NULL, 0,",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3833:  return 0;",
      "3834: }",
      "3836: static int smb2_calc_max_out_buf_len(struct ksmbd_work *work,",
      "3837:          unsigned short hdr2_len,",
      "3838:          unsigned int out_buf_len)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3837: static int smb2_resp_buf_len(struct ksmbd_work *work, unsigned short hdr2_len)",
      "3838: {",
      "3839:  int free_len;",
      "3841:  free_len = (int)(work->response_sz -",
      "3842:   (get_rfc1002_len(work->response_buf) + 4)) - hdr2_len;",
      "3843:  return free_len;",
      "3844: }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "3842:  if (out_buf_len > work->conn->vals->max_trans_size)",
      "3843:   return -EINVAL;",
      "3848:  if (free_len < 0)",
      "3849:   return -EINVAL;",
      "",
      "[Removed Lines]",
      "3845:  free_len = (int)(work->response_sz -",
      "3846:     (get_rfc1002_len(work->response_buf) + 4)) -",
      "3847:   hdr2_len;",
      "",
      "[Added Lines]",
      "3855:  free_len = smb2_resp_buf_len(work, hdr2_len);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "5107:  struct smb_ntsd *pntsd = (struct smb_ntsd *)rsp->Buffer, *ppntsd = NULL;",
      "5108:  struct smb_fattr fattr = {{0}};",
      "5109:  struct inode *inode;",
      "5111:  unsigned int id = KSMBD_NO_FID, pid = KSMBD_NO_FID;",
      "5112:  int addition_info = le32_to_cpu(req->AdditionalInformation);",
      "5115:  if (addition_info & ~(OWNER_SECINFO | GROUP_SECINFO | DACL_SECINFO |",
      "5116:          PROTECTED_DACL_SECINFO |",
      "",
      "[Removed Lines]",
      "5110:  __u32 secdesclen;",
      "5113:  int rc;",
      "",
      "[Added Lines]",
      "5118:  __u32 secdesclen = 0;",
      "5121:  int rc = 0, ppntsd_size = 0;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "5157:  if (test_share_config_flag(work->tcon->share_conf,",
      "5158:        KSMBD_SHARE_FLAG_ACL_XATTR))",
      "5164:  posix_acl_release(fattr.cf_acls);",
      "5165:  posix_acl_release(fattr.cf_dacls);",
      "5166:  kfree(ppntsd);",
      "",
      "[Removed Lines]",
      "5159:   ksmbd_vfs_get_sd_xattr(work->conn, user_ns,",
      "5160:            fp->filp->f_path.dentry, &ppntsd);",
      "5162:  rc = build_sec_desc(user_ns, pntsd, ppntsd, addition_info,",
      "5163:        &secdesclen, &fattr);",
      "",
      "[Added Lines]",
      "5167:   ppntsd_size = ksmbd_vfs_get_sd_xattr(work->conn, user_ns,",
      "5168:            fp->filp->f_path.dentry,",
      "5169:            &ppntsd);",
      "5172:  if (smb2_resp_buf_len(work, 8) > ppntsd_size)",
      "5173:   rc = build_sec_desc(user_ns, pntsd, ppntsd, ppntsd_size,",
      "5174:         addition_info, &secdesclen, &fattr);",
      "",
      "---------------"
    ],
    "fs/ksmbd/smbacl.c||fs/ksmbd/smbacl.c": [
      "File: fs/ksmbd/smbacl.c -> fs/ksmbd/smbacl.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "690: static void set_ntacl_dacl(struct user_namespace *user_ns,",
      "691:       struct smb_acl *pndacl,",
      "692:       struct smb_acl *nt_dacl,",
      "693:       const struct smb_sid *pownersid,",
      "694:       const struct smb_sid *pgrpsid,",
      "695:       struct smb_fattr *fattr)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "693:       unsigned int aces_size,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "703:  if (nt_num_aces) {",
      "704:   ntace = (struct smb_ace *)((char *)nt_dacl + sizeof(struct smb_acl));",
      "705:   for (i = 0; i < nt_num_aces; i++) {",
      "709:    num_aces++;",
      "710:   }",
      "711:  }",
      "",
      "[Removed Lines]",
      "706:    memcpy((char *)pndace + size, ntace, le16_to_cpu(ntace->size));",
      "707:    size += le16_to_cpu(ntace->size);",
      "708:    ntace = (struct smb_ace *)((char *)ntace + le16_to_cpu(ntace->size));",
      "",
      "[Added Lines]",
      "707:    unsigned short nt_ace_size;",
      "709:    if (offsetof(struct smb_ace, access_req) > aces_size)",
      "710:     break;",
      "712:    nt_ace_size = le16_to_cpu(ntace->size);",
      "713:    if (nt_ace_size > aces_size)",
      "714:     break;",
      "716:    memcpy((char *)pndace + size, ntace, nt_ace_size);",
      "717:    size += nt_ace_size;",
      "718:    aces_size -= nt_ace_size;",
      "719:    ntace = (struct smb_ace *)((char *)ntace + nt_ace_size);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "879: int build_sec_desc(struct user_namespace *user_ns,",
      "880:      struct smb_ntsd *pntsd, struct smb_ntsd *ppntsd,",
      "882:      struct smb_fattr *fattr)",
      "883: {",
      "884:  int rc = 0;",
      "",
      "[Removed Lines]",
      "881:      int addition_info, __u32 *secdesclen,",
      "",
      "[Added Lines]",
      "892:      int ppntsd_size, int addition_info, __u32 *secdesclen,",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "939:   if (!ppntsd) {",
      "940:    set_mode_dacl(user_ns, dacl_ptr, fattr);",
      "943:   } else {",
      "944:    struct smb_acl *ppdacl_ptr;",
      "948:    set_ntacl_dacl(user_ns, dacl_ptr, ppdacl_ptr,",
      "950:   }",
      "951:   pntsd->dacloffset = cpu_to_le32(offset);",
      "952:   offset += le16_to_cpu(dacl_ptr->size);",
      "",
      "[Removed Lines]",
      "941:   } else if (!ppntsd->dacloffset) {",
      "942:    goto out;",
      "946:    ppdacl_ptr = (struct smb_acl *)((char *)ppntsd +",
      "947:       le32_to_cpu(ppntsd->dacloffset));",
      "949:            nowner_sid_ptr, ngroup_sid_ptr, fattr);",
      "",
      "[Added Lines]",
      "954:    unsigned int dacl_offset = le32_to_cpu(ppntsd->dacloffset);",
      "955:    int ppdacl_size, ntacl_size = ppntsd_size - dacl_offset;",
      "957:    if (!dacl_offset ||",
      "958:        (dacl_offset + sizeof(struct smb_acl) > ppntsd_size))",
      "959:     goto out;",
      "961:    ppdacl_ptr = (struct smb_acl *)((char *)ppntsd + dacl_offset);",
      "962:    ppdacl_size = le16_to_cpu(ppdacl_ptr->size);",
      "963:    if (ppdacl_size > ntacl_size ||",
      "964:        ppdacl_size < sizeof(struct smb_acl))",
      "965:     goto out;",
      "968:            ntacl_size - sizeof(struct smb_acl),",
      "969:            nowner_sid_ptr, ngroup_sid_ptr,",
      "970:            fattr);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "980:  struct smb_sid owner_sid, group_sid;",
      "981:  struct dentry *parent = path->dentry->d_parent;",
      "982:  struct user_namespace *user_ns = mnt_user_ns(path->mnt);",
      "985:  char *aces_base;",
      "986:  bool is_dir = S_ISDIR(d_inode(path->dentry)->i_mode);",
      "991:   return -ENOENT;",
      "992:  dacloffset = le32_to_cpu(parent_pntsd->dacloffset);",
      "994:   rc = -EINVAL;",
      "995:   goto free_parent_pntsd;",
      "996:  }",
      "998:  parent_pdacl = (struct smb_acl *)((char *)parent_pntsd + dacloffset);",
      "999:  num_aces = le32_to_cpu(parent_pdacl->num_aces);",
      "1000:  pntsd_type = le16_to_cpu(parent_pntsd->type);",
      "1002:  aces_base = kmalloc(sizeof(struct smb_ace) * num_aces * 2, GFP_KERNEL);",
      "1003:  if (!aces_base) {",
      "",
      "[Removed Lines]",
      "983:  int inherited_flags = 0, flags = 0, i, ace_cnt = 0, nt_size = 0;",
      "984:  int rc = 0, num_aces, dacloffset, pntsd_type, acl_len;",
      "988:  acl_len = ksmbd_vfs_get_sd_xattr(conn, user_ns,",
      "989:       parent, &parent_pntsd);",
      "990:  if (acl_len <= 0)",
      "993:  if (!dacloffset) {",
      "",
      "[Added Lines]",
      "1004:  int inherited_flags = 0, flags = 0, i, ace_cnt = 0, nt_size = 0, pdacl_size;",
      "1005:  int rc = 0, num_aces, dacloffset, pntsd_type, pntsd_size, acl_len, aces_size;",
      "1009:  pntsd_size = ksmbd_vfs_get_sd_xattr(conn, user_ns,",
      "1010:          parent, &parent_pntsd);",
      "1011:  if (pntsd_size <= 0)",
      "1014:  if (!dacloffset || (dacloffset + sizeof(struct smb_acl) > pntsd_size)) {",
      "1020:  acl_len = pntsd_size - dacloffset;",
      "1023:  pdacl_size = le16_to_cpu(parent_pdacl->size);",
      "1025:  if (pdacl_size > acl_len || pdacl_size < sizeof(struct smb_acl)) {",
      "1026:   rc = -EINVAL;",
      "1027:   goto free_parent_pntsd;",
      "1028:  }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1008:  aces = (struct smb_ace *)aces_base;",
      "1009:  parent_aces = (struct smb_ace *)((char *)parent_pdacl +",
      "1010:    sizeof(struct smb_acl));",
      "1012:  if (pntsd_type & DACL_AUTO_INHERITED)",
      "1013:   inherited_flags = INHERITED_ACE;",
      "1015:  for (i = 0; i < num_aces; i++) {",
      "1016:   flags = parent_aces->flags;",
      "1017:   if (!smb_inherit_flags(flags, is_dir))",
      "1018:    goto pass;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1039:  aces_size = acl_len - sizeof(struct smb_acl);",
      "1045:   int pace_size;",
      "1047:   if (offsetof(struct smb_ace, access_req) > aces_size)",
      "1048:    break;",
      "1050:   pace_size = le16_to_cpu(parent_aces->size);",
      "1051:   if (pace_size > aces_size)",
      "1052:    break;",
      "1054:   aces_size -= pace_size;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1057:   aces = (struct smb_ace *)((char *)aces + le16_to_cpu(aces->size));",
      "1058:   ace_cnt++;",
      "1059: pass:",
      "1062:  }",
      "1064:  if (nt_size > 0) {",
      "",
      "[Removed Lines]",
      "1060:   parent_aces =",
      "1061:    (struct smb_ace *)((char *)parent_aces + le16_to_cpu(parent_aces->size));",
      "",
      "[Added Lines]",
      "1100:   parent_aces = (struct smb_ace *)((char *)parent_aces + pace_size);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1153:  struct smb_ntsd *pntsd = NULL;",
      "1154:  struct smb_acl *pdacl;",
      "1155:  struct posix_acl *posix_acls;",
      "1157:  struct smb_sid sid;",
      "1158:  int granted = le32_to_cpu(*pdaccess & ~FILE_MAXIMAL_ACCESS_LE);",
      "1159:  struct smb_ace *ace;",
      "",
      "[Removed Lines]",
      "1156:  int rc = 0, acl_size;",
      "",
      "[Added Lines]",
      "1195:  int rc = 0, pntsd_size, acl_size, aces_size, pdacl_size, dacl_offset;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1162:  struct smb_ace *others_ace = NULL;",
      "1163:  struct posix_acl_entry *pa_entry;",
      "1164:  unsigned int sid_type = SIDOWNER;",
      "1167:  ksmbd_debug(SMB, \"check permission using windows acl\\n\");",
      "1175:  pdacl = (struct smb_acl *)((char *)pntsd + le32_to_cpu(pntsd->dacloffset));",
      "1188:  if (!pdacl->num_aces) {",
      "1191:    rc = -EACCES;",
      "1192:    goto err_out;",
      "1193:   }",
      "1196:  }",
      "1198:  if (*pdaccess & FILE_MAXIMAL_ACCESS_LE) {",
      "",
      "[Removed Lines]",
      "1165:  char *end_of_acl;",
      "1168:  acl_size = ksmbd_vfs_get_sd_xattr(conn, user_ns,",
      "1169:        path->dentry, &pntsd);",
      "1170:  if (acl_size <= 0 || !pntsd || !pntsd->dacloffset) {",
      "1171:   kfree(pntsd);",
      "1172:   return 0;",
      "1173:  }",
      "1176:  end_of_acl = ((char *)pntsd) + acl_size;",
      "1177:  if (end_of_acl <= (char *)pdacl) {",
      "1178:   kfree(pntsd);",
      "1179:   return 0;",
      "1180:  }",
      "1182:  if (end_of_acl < (char *)pdacl + le16_to_cpu(pdacl->size) ||",
      "1183:      le16_to_cpu(pdacl->size) < sizeof(struct smb_acl)) {",
      "1184:   kfree(pntsd);",
      "1185:   return 0;",
      "1186:  }",
      "1189:   if (!(le16_to_cpu(pdacl->size) - sizeof(struct smb_acl)) &&",
      "1194:   kfree(pntsd);",
      "1195:   return 0;",
      "",
      "[Added Lines]",
      "1204:  unsigned short ace_size;",
      "1207:  pntsd_size = ksmbd_vfs_get_sd_xattr(conn, user_ns,",
      "1208:          path->dentry, &pntsd);",
      "1209:  if (pntsd_size <= 0 || !pntsd)",
      "1210:   goto err_out;",
      "1212:  dacl_offset = le32_to_cpu(pntsd->dacloffset);",
      "1213:  if (!dacl_offset ||",
      "1214:      (dacl_offset + sizeof(struct smb_acl) > pntsd_size))",
      "1215:   goto err_out;",
      "1218:  acl_size = pntsd_size - dacl_offset;",
      "1219:  pdacl_size = le16_to_cpu(pdacl->size);",
      "1221:  if (pdacl_size > acl_size || pdacl_size < sizeof(struct smb_acl))",
      "1222:   goto err_out;",
      "1225:   if (!(pdacl_size - sizeof(struct smb_acl)) &&",
      "1230:   goto err_out;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1200:    DELETE;",
      "1202:   ace = (struct smb_ace *)((char *)pdacl + sizeof(struct smb_acl));",
      "1203:   for (i = 0; i < le32_to_cpu(pdacl->num_aces); i++) {",
      "1204:    granted |= le32_to_cpu(ace->access_req);",
      "1205:    ace = (struct smb_ace *)((char *)ace + le16_to_cpu(ace->size));",
      "1208:   }",
      "1210:   if (!pdacl->num_aces)",
      "",
      "[Removed Lines]",
      "1206:    if (end_of_acl < (char *)ace)",
      "1207:     goto err_out;",
      "",
      "[Added Lines]",
      "1238:   aces_size = acl_size - sizeof(struct smb_acl);",
      "1240:    if (offsetof(struct smb_ace, access_req) > aces_size)",
      "1241:     break;",
      "1242:    ace_size = le16_to_cpu(ace->size);",
      "1243:    if (ace_size > aces_size)",
      "1244:     break;",
      "1245:    aces_size -= ace_size;",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1216:  id_to_sid(uid, sid_type, &sid);",
      "1218:  ace = (struct smb_ace *)((char *)pdacl + sizeof(struct smb_acl));",
      "1219:  for (i = 0; i < le32_to_cpu(pdacl->num_aces); i++) {",
      "1220:   if (!compare_sids(&sid, &ace->sid) ||",
      "1221:       !compare_sids(&sid_unix_NFS_mode, &ace->sid)) {",
      "1222:    found = 1;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1259:  aces_size = acl_size - sizeof(struct smb_acl);",
      "1261:   if (offsetof(struct smb_ace, access_req) > aces_size)",
      "1262:    break;",
      "1263:   ace_size = le16_to_cpu(ace->size);",
      "1264:   if (ace_size > aces_size)",
      "1265:    break;",
      "1266:   aces_size -= ace_size;",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "1226:    others_ace = ace;",
      "1228:   ace = (struct smb_ace *)((char *)ace + le16_to_cpu(ace->size));",
      "1231:  }",
      "1233:  if (*pdaccess & FILE_MAXIMAL_ACCESS_LE && found) {",
      "",
      "[Removed Lines]",
      "1229:   if (end_of_acl < (char *)ace)",
      "1230:    goto err_out;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "fs/ksmbd/smbacl.h||fs/ksmbd/smbacl.h": [
      "File: fs/ksmbd/smbacl.h -> fs/ksmbd/smbacl.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "193: int parse_sec_desc(struct user_namespace *user_ns, struct smb_ntsd *pntsd,",
      "194:      int acl_len, struct smb_fattr *fattr);",
      "195: int build_sec_desc(struct user_namespace *user_ns, struct smb_ntsd *pntsd,",
      "197:      __u32 *secdesclen, struct smb_fattr *fattr);",
      "198: int init_acl_state(struct posix_acl_state *state, int cnt);",
      "199: void free_acl_state(struct posix_acl_state *state);",
      "",
      "[Removed Lines]",
      "196:      struct smb_ntsd *ppntsd, int addition_info,",
      "",
      "[Added Lines]",
      "196:      struct smb_ntsd *ppntsd, int ppntsd_size, int addition_info,",
      "",
      "---------------"
    ],
    "fs/ksmbd/vfs.c||fs/ksmbd/vfs.c": [
      "File: fs/ksmbd/vfs.c -> fs/ksmbd/vfs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1539:  }",
      "1542:  (*pntsd)->osidoffset = cpu_to_le32(le32_to_cpu((*pntsd)->osidoffset) -",
      "1543:         NDR_NTSD_OFFSETOF);",
      "1544:  (*pntsd)->gsidoffset = cpu_to_le32(le32_to_cpu((*pntsd)->gsidoffset) -",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1542:  if (acl.sd_size < sizeof(struct smb_ntsd)) {",
      "1543:   pr_err(\"sd size is invalid\\n\");",
      "1544:   goto out_free;",
      "1545:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e151db8ecfb019b7da31d076130a794574c89f6f",
      "candidate_info": {
        "commit_hash": "e151db8ecfb019b7da31d076130a794574c89f6f",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/e151db8ecfb019b7da31d076130a794574c89f6f",
        "files": [
          "drivers/md/md.c"
        ],
        "message": "md-raid: destroy the bitmap after destroying the thread\n\nWhen we ran the lvm test \"shell/integrity-blocksize-3.sh\" on a kernel with\nkasan, we got failure in write_page.\n\nThe reason for the failure is that md_bitmap_destroy is called before\ndestroying the thread and the thread may be waiting in the function\nwrite_page for the bio to complete. When the thread finishes waiting, it\nexecutes \"if (test_bit(BITMAP_WRITE_ERROR, &bitmap->flags))\", which\ntriggers the kasan warning.\n\nNote that the commit 48df498daf62 that caused this bug claims that it is\nneede for md-cluster, you should check md-cluster and possibly find\nanother bugfix for it.\n\nBUG: KASAN: use-after-free in write_page+0x18d/0x680 [md_mod]\nRead of size 8 at addr ffff889162030c78 by task mdX_raid1/5539\n\nCPU: 10 PID: 5539 Comm: mdX_raid1 Not tainted 5.19.0-rc2 #1\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.14.0-2 04/01/2014\nCall Trace:\n <TASK>\n dump_stack_lvl+0x34/0x44\n print_report.cold+0x45/0x57a\n ? __lock_text_start+0x18/0x18\n ? write_page+0x18d/0x680 [md_mod]\n kasan_report+0xa8/0xe0\n ? write_page+0x18d/0x680 [md_mod]\n kasan_check_range+0x13f/0x180\n write_page+0x18d/0x680 [md_mod]\n ? super_sync+0x4d5/0x560 [dm_raid]\n ? md_bitmap_file_kick+0xa0/0xa0 [md_mod]\n ? rs_set_dev_and_array_sectors+0x2e0/0x2e0 [dm_raid]\n ? mutex_trylock+0x120/0x120\n ? preempt_count_add+0x6b/0xc0\n ? preempt_count_sub+0xf/0xc0\n md_update_sb+0x707/0xe40 [md_mod]\n md_reap_sync_thread+0x1b2/0x4a0 [md_mod]\n md_check_recovery+0x533/0x960 [md_mod]\n raid1d+0xc8/0x2a20 [raid1]\n ? var_wake_function+0xe0/0xe0\n ? psi_group_change+0x411/0x500\n ? preempt_count_sub+0xf/0xc0\n ? _raw_spin_lock_irqsave+0x78/0xc0\n ? __lock_text_start+0x18/0x18\n ? raid1_end_read_request+0x2a0/0x2a0 [raid1]\n ? preempt_count_sub+0xf/0xc0\n ? _raw_spin_unlock_irqrestore+0x19/0x40\n ? del_timer_sync+0xa9/0x100\n ? try_to_del_timer_sync+0xc0/0xc0\n ? _raw_spin_lock_irqsave+0x78/0xc0\n ? __lock_text_start+0x18/0x18\n ? __list_del_entry_valid+0x68/0xa0\n ? finish_wait+0xa3/0x100\n md_thread+0x161/0x260 [md_mod]\n ? unregister_md_personality+0xa0/0xa0 [md_mod]\n ? _raw_spin_lock_irqsave+0x78/0xc0\n ? prepare_to_wait_event+0x2c0/0x2c0\n ? unregister_md_personality+0xa0/0xa0 [md_mod]\n kthread+0x148/0x180\n ? kthread_complete_and_exit+0x20/0x20\n ret_from_fork+0x1f/0x30\n </TASK>\n\nAllocated by task 5522:\n kasan_save_stack+0x1e/0x40\n __kasan_kmalloc+0x80/0xa0\n md_bitmap_create+0xa8/0xe80 [md_mod]\n md_run+0x777/0x1300 [md_mod]\n raid_ctr+0x249c/0x4a30 [dm_raid]\n dm_table_add_target+0x2b0/0x620 [dm_mod]\n table_load+0x1c8/0x400 [dm_mod]\n ctl_ioctl+0x29e/0x560 [dm_mod]\n dm_compat_ctl_ioctl+0x7/0x20 [dm_mod]\n __do_compat_sys_ioctl+0xfa/0x160\n do_syscall_64+0x90/0xc0\n entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nFreed by task 5680:\n kasan_save_stack+0x1e/0x40\n kasan_set_track+0x21/0x40\n kasan_set_free_info+0x20/0x40\n __kasan_slab_free+0xf7/0x140\n kfree+0x80/0x240\n md_bitmap_free+0x1c3/0x280 [md_mod]\n __md_stop+0x21/0x120 [md_mod]\n md_stop+0x9/0x40 [md_mod]\n raid_dtr+0x1b/0x40 [dm_raid]\n dm_table_destroy+0x98/0x1e0 [dm_mod]\n __dm_destroy+0x199/0x360 [dm_mod]\n dev_remove+0x10c/0x160 [dm_mod]\n ctl_ioctl+0x29e/0x560 [dm_mod]\n dm_compat_ctl_ioctl+0x7/0x20 [dm_mod]\n __do_compat_sys_ioctl+0xfa/0x160\n do_syscall_64+0x90/0xc0\n entry_SYSCALL_64_after_hwframe+0x46/0xb0\n\nSigned-off-by: Mikulas Patocka <mpatocka@redhat.com>\nCc: stable@vger.kernel.org\nFixes: 48df498daf62 (\"md: move bitmap_destroy to the beginning of __md_stop\")\nSigned-off-by: Song Liu <song@kernel.org>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
        "before_after_code_files": [
          "drivers/md/md.c||drivers/md/md.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/md/md.c||drivers/md/md.c": [
          "File: drivers/md/md.c -> drivers/md/md.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "6238: static void __md_stop(struct mddev *mddev)",
          "6239: {",
          "6240:  struct md_personality *pers = mddev->pers;",
          "6242:  mddev_detach(mddev);",
          "6244:  if (mddev->event_work.func)",
          "6245:   flush_workqueue(md_misc_wq);",
          "6246:  spin_lock(&mddev->lock);",
          "6247:  mddev->pers = NULL;",
          "6248:  spin_unlock(&mddev->lock);",
          "",
          "[Removed Lines]",
          "6241:  md_bitmap_destroy(mddev);",
          "",
          "[Added Lines]",
          "6245:  md_bitmap_destroy(mddev);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "020e1aede7ee31d8b0e24a46ee364c7bb0939f02",
      "candidate_info": {
        "commit_hash": "020e1aede7ee31d8b0e24a46ee364c7bb0939f02",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/020e1aede7ee31d8b0e24a46ee364c7bb0939f02",
        "files": [
          "drivers/nvdimm/virtio_pmem.c"
        ],
        "message": "virtio_pmem: initialize provider_data through nd_region_desc\n\nWe used to initialize the provider_data manually after\nnvdimm_pemm_region_create(). This seems to be racy if the flush is\nissued before the initialization of provider_data[1]. Fixing this by\ninitializing the provider_data through nd_region_desc to make sure the\nprovider_data is ready after the pmem is created.\n\n[1]:\n\n[   80.152281] nd_pmem namespace0.0: unable to guarantee persistence of writes\n[   92.393956] BUG: kernel NULL pointer dereference, address: 0000000000000318\n[   92.394551] #PF: supervisor read access in kernel mode\n[   92.394955] #PF: error_code(0x0000) - not-present page\n[   92.395365] PGD 0 P4D 0\n[   92.395566] Oops: 0000 [#1] PREEMPT SMP PTI\n[   92.395867] CPU: 2 PID: 506 Comm: mkfs.ext4 Not tainted 5.19.0-rc1+ #453\n[   92.396365] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009),\nBIOS rel-1.16.0-0-gd239552ce722-prebuilt.qemu.org 04/01/2014\n[   92.397178] RIP: 0010:virtio_pmem_flush+0x2f/0x1f0\n[   92.397521] Code: 55 41 54 55 53 48 81 ec a0 00 00 00 65 48 8b 04\n25 28 00 00 00 48 89 84 24 98 00 00 00 31 c0 48 8b 87 78 03 00 00 48\n89 04 24 <48> 8b 98 18 03 00 00 e8 85 bf 6b 00 ba 58 00 00 00 be c0 0c\n00 00\n[   92.398982] RSP: 0018:ffff9a7380aefc88 EFLAGS: 00010246\n[   92.399349] RAX: 0000000000000000 RBX: ffff8e77c3f86f00 RCX: 0000000000000000\n[   92.399833] RDX: ffffffffad4ea720 RSI: ffff8e77c41e39c0 RDI: ffff8e77c41c5c00\n[   92.400388] RBP: ffff8e77c41e39c0 R08: ffff8e77c19f0600 R09: 0000000000000000\n[   92.400874] R10: 0000000000000000 R11: 0000000000000000 R12: ffff8e77c0814e28\n[   92.401364] R13: 0000000000000000 R14: 0000000000000000 R15: ffff8e77c41e39c0\n[   92.401849] FS:  00007f3cd75b2780(0000) GS:ffff8e7937d00000(0000)\nknlGS:0000000000000000\n[   92.402423] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n[   92.402821] CR2: 0000000000000318 CR3: 0000000103c80002 CR4: 0000000000370ee0\n[   92.403307] DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\n[   92.403793] DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\n[   92.404278] Call Trace:\n[   92.404481]  <TASK>\n[   92.404654]  ? mempool_alloc+0x5d/0x160\n[   92.404939]  ? terminate_walk+0x5f/0xf0\n[   92.405226]  ? bio_alloc_bioset+0xbb/0x3f0\n[   92.405525]  async_pmem_flush+0x17/0x80\n[   92.405806]  nvdimm_flush+0x11/0x30\n[   92.406067]  pmem_submit_bio+0x1e9/0x200\n[   92.406354]  __submit_bio+0x80/0x120\n[   92.406621]  submit_bio_noacct_nocheck+0xdc/0x2a0\n[   92.406958]  submit_bio_wait+0x4e/0x80\n[   92.407234]  blkdev_issue_flush+0x31/0x50\n[   92.407526]  ? punt_bios_to_rescuer+0x230/0x230\n[   92.407852]  blkdev_fsync+0x1e/0x30\n[   92.408112]  do_fsync+0x33/0x70\n[   92.408354]  __x64_sys_fsync+0xb/0x10\n[   92.408625]  do_syscall_64+0x43/0x90\n[   92.408895]  entry_SYSCALL_64_after_hwframe+0x46/0xb0\n[   92.409257] RIP: 0033:0x7f3cd76c6c44\n\nFixes 6e84200c0a29 (\"virtio-pmem: Add virtio pmem driver\")\nAcked-by: Pankaj Gupta <pankaj.gupta@amd.com>\nReviewed-by: Dan Williams <dan.j.williams@intel.com>\nSigned-off-by: Jason Wang <jasowang@redhat.com>\nMessage-Id: <20220628083430.61856-1-jasowang@redhat.com>\nSigned-off-by: Michael S. Tsirkin <mst@redhat.com>",
        "before_after_code_files": [
          "drivers/nvdimm/virtio_pmem.c||drivers/nvdimm/virtio_pmem.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/nvdimm/virtio_pmem.c||drivers/nvdimm/virtio_pmem.c": [
          "File: drivers/nvdimm/virtio_pmem.c -> drivers/nvdimm/virtio_pmem.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:  ndr_desc.res = &res;",
          "82:  ndr_desc.numa_node = nid;",
          "83:  ndr_desc.flush = async_pmem_flush;",
          "84:  set_bit(ND_REGION_PAGEMAP, &ndr_desc.flags);",
          "85:  set_bit(ND_REGION_ASYNC, &ndr_desc.flags);",
          "86:  nd_region = nvdimm_pmem_region_create(vpmem->nvdimm_bus, &ndr_desc);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84:  ndr_desc.provider_data = vdev;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "89:   err = -ENXIO;",
          "90:   goto out_nd;",
          "91:  }",
          "93:  return 0;",
          "94: out_nd:",
          "95:  nvdimm_bus_unregister(vpmem->nvdimm_bus);",
          "",
          "[Removed Lines]",
          "92:  nd_region->provider_data = dev_to_virtio(nd_region->dev.parent->parent);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1e1c2b86ef86a8477fd9b9a4f48a6bfe235606f6",
      "candidate_info": {
        "commit_hash": "1e1c2b86ef86a8477fd9b9a4f48a6bfe235606f6",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/1e1c2b86ef86a8477fd9b9a4f48a6bfe235606f6",
        "files": [
          "fs/ext4/mballoc.c"
        ],
        "message": "ext4: block range must be validated before use in ext4_mb_clear_bb()\n\nBlock range to free is validated in ext4_free_blocks() using\next4_inode_block_valid() and then it's passed to ext4_mb_clear_bb().\nHowever in some situations on bigalloc file system the range might be\nadjusted after the validation in ext4_free_blocks() which can lead to\ntroubles on corrupted file systems such as one found by syzkaller that\nresulted in the following BUG\n\nkernel BUG at fs/ext4/ext4.h:3319!\nPREEMPT SMP NOPTI\nCPU: 28 PID: 4243 Comm: repro Kdump: loaded Not tainted 5.19.0-rc6+ #1\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.15.0-1.fc35 04/01/2014\nRIP: 0010:ext4_free_blocks+0x95e/0xa90\nCall Trace:\n <TASK>\n ? lock_timer_base+0x61/0x80\n ? __es_remove_extent+0x5a/0x760\n ? __mod_timer+0x256/0x380\n ? ext4_ind_truncate_ensure_credits+0x90/0x220\n ext4_clear_blocks+0x107/0x1b0\n ext4_free_data+0x15b/0x170\n ext4_ind_truncate+0x214/0x2c0\n ? _raw_spin_unlock+0x15/0x30\n ? ext4_discard_preallocations+0x15a/0x410\n ? ext4_journal_check_start+0xe/0x90\n ? __ext4_journal_start_sb+0x2f/0x110\n ext4_truncate+0x1b5/0x460\n ? __ext4_journal_start_sb+0x2f/0x110\n ext4_evict_inode+0x2b4/0x6f0\n evict+0xd0/0x1d0\n ext4_enable_quotas+0x11f/0x1f0\n ext4_orphan_cleanup+0x3de/0x430\n ? proc_create_seq_private+0x43/0x50\n ext4_fill_super+0x295f/0x3ae0\n ? snprintf+0x39/0x40\n ? sget_fc+0x19c/0x330\n ? ext4_reconfigure+0x850/0x850\n get_tree_bdev+0x16d/0x260\n vfs_get_tree+0x25/0xb0\n path_mount+0x431/0xa70\n __x64_sys_mount+0xe2/0x120\n do_syscall_64+0x5b/0x80\n ? do_user_addr_fault+0x1e2/0x670\n ? exc_page_fault+0x70/0x170\n entry_SYSCALL_64_after_hwframe+0x46/0xb0\nRIP: 0033:0x7fdf4e512ace\n\nFix it by making sure that the block range is properly validated before\nused every time it changes in ext4_free_blocks() or ext4_mb_clear_bb().\n\nLink: https://syzkaller.appspot.com/bug?id=5266d464285a03cee9dbfda7d2452a72c3c2ae7c\nReported-by: syzbot+15cd994e273307bf5cfa@syzkaller.appspotmail.com\nSigned-off-by: Lukas Czerner <lczerner@redhat.com>\nCc: Tadeusz Struk <tadeusz.struk@linaro.org>\nTested-by: Tadeusz Struk <tadeusz.struk@linaro.org>\nLink: https://lore.kernel.org/r/20220714165903.58260-1-lczerner@redhat.com\nSigned-off-by: Theodore Ts'o <tytso@mit.edu>",
        "before_after_code_files": [
          "fs/ext4/mballoc.c||fs/ext4/mballoc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fs/ext4/mballoc.c||fs/ext4/mballoc.c": [
          "File: fs/ext4/mballoc.c -> fs/ext4/mballoc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5935:  sbi = EXT4_SB(sb);",
          "5937: do_more:",
          "5938:  overflow = 0;",
          "5939:  ext4_get_group_no_and_offset(sb, block, &block_group, &bit);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5937:  if (!(flags & EXT4_FREE_BLOCKS_VALIDATED) &&",
          "5938:      !ext4_inode_block_valid(inode, block, count)) {",
          "5939:   ext4_error(sb, \"Freeing blocks in system zone - \"",
          "5940:       \"Block = %llu, count = %lu\", block, count);",
          "5942:   goto error_return;",
          "5943:  }",
          "5944:  flags |= EXT4_FREE_BLOCKS_VALIDATED;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5950:   overflow = EXT4_C2B(sbi, bit) + count -",
          "5951:    EXT4_BLOCKS_PER_GROUP(sb);",
          "5952:   count -= overflow;",
          "5953:  }",
          "5954:  count_clusters = EXT4_NUM_B2C(sbi, count);",
          "5955:  bitmap_bh = ext4_read_block_bitmap(sb, block_group);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5963:   flags &= ~EXT4_FREE_BLOCKS_VALIDATED;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5964:   goto error_return;",
          "5965:  }",
          "5968:   ext4_error(sb, \"Freeing blocks in system zone - \"",
          "5969:       \"Block = %llu, count = %lu\", block, count);",
          "",
          "[Removed Lines]",
          "5967:  if (!ext4_inode_block_valid(inode, block, count)) {",
          "",
          "[Added Lines]",
          "5978:  if (!(flags & EXT4_FREE_BLOCKS_VALIDATED) &&",
          "5979:      !ext4_inode_block_valid(inode, block, count)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6087:   block += count;",
          "6088:   count = overflow;",
          "6089:   put_bh(bitmap_bh);",
          "6090:   goto do_more;",
          "6091:  }",
          "6092: error_return:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6103:   flags &= ~EXT4_FREE_BLOCKS_VALIDATED;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6133:       \"block = %llu, count = %lu\", block, count);",
          "6134:   return;",
          "6135:  }",
          "6137:  ext4_debug(\"freeing block %llu\\n\", block);",
          "6138:  trace_ext4_free_blocks(inode, block, count, flags);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6150:  flags |= EXT4_FREE_BLOCKS_VALIDATED;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "6164:    block -= overflow;",
          "6165:    count += overflow;",
          "6166:   }",
          "6167:  }",
          "6168:  overflow = EXT4_LBLK_COFF(sbi, count);",
          "6169:  if (overflow) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6183:   flags &= ~EXT4_FREE_BLOCKS_VALIDATED;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "6174:     return;",
          "6175:   } else",
          "6176:    count += sbi->s_cluster_ratio - overflow;",
          "6177:  }",
          "6179:  if (!bh && (flags & EXT4_FREE_BLOCKS_FORGET)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6195:   flags &= ~EXT4_FREE_BLOCKS_VALIDATED;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2f1c4523f7a3aaabe7e53d3ebd378292947e95c8",
      "candidate_info": {
        "commit_hash": "2f1c4523f7a3aaabe7e53d3ebd378292947e95c8",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/2f1c4523f7a3aaabe7e53d3ebd378292947e95c8",
        "files": [
          "drivers/video/fbdev/arkfb.c"
        ],
        "message": "video: fbdev: arkfb: Fix a divide-by-zero bug in ark_set_pixclock()\n\nSince the user can control the arguments of the ioctl() from the user\nspace, under special arguments that may result in a divide-by-zero bug\nin:\n  drivers/video/fbdev/arkfb.c:784: ark_set_pixclock(info, (hdiv * info->var.pixclock) / hmul);\nwith hdiv=1, pixclock=1 and hmul=2 you end up with (1*1)/2 = (int) 0.\nand then in:\n  drivers/video/fbdev/arkfb.c:504: rv = dac_set_freq(par->dac, 0, 1000000000 / pixclock);\nwe'll get a division-by-zero.\n\nThe following log can reveal it:\n\ndivide error: 0000 [#1] PREEMPT SMP KASAN PTI\nRIP: 0010:ark_set_pixclock drivers/video/fbdev/arkfb.c:504 [inline]\nRIP: 0010:arkfb_set_par+0x10fc/0x24c0 drivers/video/fbdev/arkfb.c:784\nCall Trace:\n fb_set_var+0x604/0xeb0 drivers/video/fbdev/core/fbmem.c:1034\n do_fb_ioctl+0x234/0x670 drivers/video/fbdev/core/fbmem.c:1110\n fb_ioctl+0xdd/0x130 drivers/video/fbdev/core/fbmem.c:1189\n\nFix this by checking the argument of ark_set_pixclock() first.\n\nFixes: 681e14730c73 (\"arkfb: new framebuffer driver for ARK Logic cards\")\nSigned-off-by: Zheyu Ma <zheyuma97@gmail.com>\nSigned-off-by: Helge Deller <deller@gmx.de>",
        "before_after_code_files": [
          "drivers/video/fbdev/arkfb.c||drivers/video/fbdev/arkfb.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "drivers/video/fbdev/arkfb.c||drivers/video/fbdev/arkfb.c": [
          "File: drivers/video/fbdev/arkfb.c -> drivers/video/fbdev/arkfb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "781:   return -EINVAL;",
          "782:  }",
          "785:  svga_set_timings(par->state.vgabase, &ark_timing_regs, &(info->var), hmul, hdiv,",
          "786:     (info->var.vmode & FB_VMODE_DOUBLE)     ? 2 : 1,",
          "787:     (info->var.vmode & FB_VMODE_INTERLACED) ? 2 : 1,",
          "",
          "[Removed Lines]",
          "784:  ark_set_pixclock(info, (hdiv * info->var.pixclock) / hmul);",
          "",
          "[Added Lines]",
          "784:  value = (hdiv * info->var.pixclock) / hmul;",
          "785:  if (!value) {",
          "786:   fb_dbg(info, \"invalid pixclock\\n\");",
          "787:   value = 1;",
          "788:  }",
          "789:  ark_set_pixclock(info, value);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "59c026c359c30f116fef6ee958e24d04983efbb0",
      "candidate_info": {
        "commit_hash": "59c026c359c30f116fef6ee958e24d04983efbb0",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/59c026c359c30f116fef6ee958e24d04983efbb0",
        "files": [
          "arch/riscv/kernel/crash_save_regs.S"
        ],
        "message": "RISC-V: Fixup get incorrect user mode PC for kernel mode regs\n\nWhen use 'echo c > /proc/sysrq-trigger' to trigger kdump, riscv_crash_save_regs()\nwill be called to save regs for vmcore, we found \"epc\" value 00ffffffa5537400\nis not a valid kernel virtual address, but is a user virtual address. Other\nregs(eg, ra, sp, gp...) are correct kernel virtual address.\nActually 0x00ffffffb0dd9400 is the user mode PC of 'PID: 113 Comm: sh', which\nis saved in the task's stack.\n\n[   21.201701] CPU: 0 PID: 113 Comm: sh Kdump: loaded Not tainted 5.18.9 #45\n[   21.201979] Hardware name: riscv-virtio,qemu (DT)\n[   21.202160] epc : 00ffffffa5537400 ra : ffffffff80088640 sp : ff20000010333b90\n[   21.202435]  gp : ffffffff810dde38 tp : ff6000000226c200 t0 : ffffffff8032be7c\n[   21.202707]  t1 : 0720072007200720 t2 : 30203a7375746174 s0 : ff20000010333cf0\n[   21.202973]  s1 : 0000000000000000 a0 : ff20000010333b98 a1 : 0000000000000001\n[   21.203243]  a2 : 0000000000000010 a3 : 0000000000000000 a4 : 28c8f0aeffea4e00\n[   21.203519]  a5 : 28c8f0aeffea4e00 a6 : 0000000000000009 a7 : ffffffff8035c9b8\n[   21.203794]  s2 : ffffffff810df0a8 s3 : ffffffff810df718 s4 : ff20000010333b98\n[   21.204062]  s5 : 0000000000000000 s6 : 0000000000000007 s7 : ffffffff80c4a468\n[   21.204331]  s8 : 00ffffffef451410 s9 : 0000000000000007 s10: 00aaaaaac0510700\n[   21.204606]  s11: 0000000000000001 t3 : ff60000001218f00 t4 : ff60000001218f00\n[   21.204876]  t5 : ff60000001218000 t6 : ff200000103338b8\n[   21.205079] status: 0000000200000020 badaddr: 0000000000000000 cause: 0000000000000008\n\nWith the incorrect PC, the backtrace showed by crash tool as below, the first\nstack frame is abnormal,\n\ncrash> bt\nPID: 113      TASK: ff60000002269600  CPU: 0    COMMAND: \"sh\"\n #0 [ff2000001039bb90] __efistub_.Ldebug_info0 at 00ffffffa5537400 <-- Abnormal\n #1 [ff2000001039bcf0] panic at ffffffff806578ba\n #2 [ff2000001039bd50] sysrq_reset_seq_param_set at ffffffff8038c030\n #3 [ff2000001039bda0] __handle_sysrq at ffffffff8038c5f8\n #4 [ff2000001039be00] write_sysrq_trigger at ffffffff8038cad8\n #5 [ff2000001039be20] proc_reg_write at ffffffff801b7edc\n #6 [ff2000001039be40] vfs_write at ffffffff80152ba6\n #7 [ff2000001039be80] ksys_write at ffffffff80152ece\n #8 [ff2000001039bed0] sys_write at ffffffff80152f46\n\nWith the patch, we can get current kernel mode PC, the output as below,\n\n[   17.607658] CPU: 0 PID: 113 Comm: sh Kdump: loaded Not tainted 5.18.9 #42\n[   17.607937] Hardware name: riscv-virtio,qemu (DT)\n[   17.608150] epc : ffffffff800078f8 ra : ffffffff8008862c sp : ff20000010333b90\n[   17.608441]  gp : ffffffff810dde38 tp : ff6000000226c200 t0 : ffffffff8032be68\n[   17.608741]  t1 : 0720072007200720 t2 : 666666666666663c s0 : ff20000010333cf0\n[   17.609025]  s1 : 0000000000000000 a0 : ff20000010333b98 a1 : 0000000000000001\n[   17.609320]  a2 : 0000000000000010 a3 : 0000000000000000 a4 : 0000000000000000\n[   17.609601]  a5 : ff60000001c78000 a6 : 000000000000003c a7 : ffffffff8035c9a4\n[   17.609894]  s2 : ffffffff810df0a8 s3 : ffffffff810df718 s4 : ff20000010333b98\n[   17.610186]  s5 : 0000000000000000 s6 : 0000000000000007 s7 : ffffffff80c4a468\n[   17.610469]  s8 : 00ffffffca281410 s9 : 0000000000000007 s10: 00aaaaaab5bb6700\n[   17.610755]  s11: 0000000000000001 t3 : ff60000001218f00 t4 : ff60000001218f00\n[   17.611041]  t5 : ff60000001218000 t6 : ff20000010333988\n[   17.611255] status: 0000000200000020 badaddr: 0000000000000000 cause: 0000000000000008\n\nWith the correct PC, the backtrace showed by crash tool as below,\n\ncrash> bt\nPID: 113      TASK: ff6000000226c200  CPU: 0    COMMAND: \"sh\"\n #0 [ff20000010333b90] riscv_crash_save_regs at ffffffff800078f8 <--- Normal\n #1 [ff20000010333cf0] panic at ffffffff806578c6\n #2 [ff20000010333d50] sysrq_reset_seq_param_set at ffffffff8038c03c\n #3 [ff20000010333da0] __handle_sysrq at ffffffff8038c604\n #4 [ff20000010333e00] write_sysrq_trigger at ffffffff8038cae4\n #5 [ff20000010333e20] proc_reg_write at ffffffff801b7ee8\n #6 [ff20000010333e40] vfs_write at ffffffff80152bb2\n #7 [ff20000010333e80] ksys_write at ffffffff80152eda\n #8 [ff20000010333ed0] sys_write at ffffffff80152f52\n\nFixes: e53d28180d4d (\"RISC-V: Add kdump support\")\nCo-developed-by: Guo Ren <guoren@kernel.org>\nSigned-off-by: Xianting Tian <xianting.tian@linux.alibaba.com>\nLink: https://lore.kernel.org/r/20220811074150.3020189-3-xianting.tian@linux.alibaba.com\nCc: stable@vger.kernel.org\nSigned-off-by: Palmer Dabbelt <palmer@rivosinc.com>",
        "before_after_code_files": [
          "arch/riscv/kernel/crash_save_regs.S||arch/riscv/kernel/crash_save_regs.S"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "arch/riscv/kernel/crash_save_regs.S||arch/riscv/kernel/crash_save_regs.S": [
          "File: arch/riscv/kernel/crash_save_regs.S -> arch/riscv/kernel/crash_save_regs.S",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:  csrr t1, CSR_STATUS",
          "48:  csrr t3, CSR_TVAL",
          "49:  csrr t4, CSR_CAUSE",
          "",
          "[Removed Lines]",
          "47:  csrr t2, CSR_EPC",
          "",
          "[Added Lines]",
          "47:  auipc t2, 0x0",
          "",
          "---------------"
        ]
      }
    }
  ]
}