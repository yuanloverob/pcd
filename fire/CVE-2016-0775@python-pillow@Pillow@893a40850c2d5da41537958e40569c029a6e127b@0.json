{
  "cve_id": "CVE-2016-0775",
  "cve_desc": "Buffer overflow in the ImagingFliDecode function in libImaging/FliDecode.c in Pillow before 3.1.1 allows remote attackers to cause a denial of service (crash) via a crafted FLI file.",
  "repo": "python-pillow/Pillow",
  "patch_hash": "893a40850c2d5da41537958e40569c029a6e127b",
  "patch_info": {
    "commit_hash": "893a40850c2d5da41537958e40569c029a6e127b",
    "repo": "python-pillow/Pillow",
    "commit_url": "https://github.com/python-pillow/Pillow/commit/893a40850c2d5da41537958e40569c029a6e127b",
    "files": [
      "Tests/check_fli_overflow.py",
      "Tests/images/fli_overflow.fli",
      "libImaging/FliDecode.c"
    ],
    "message": "FLI overflow error fix and testcase CVE-2016-0775",
    "before_after_code_files": [
      "Tests/check_fli_overflow.py||Tests/check_fli_overflow.py",
      "libImaging/FliDecode.c||libImaging/FliDecode.c"
    ]
  },
  "patch_diff": {
    "Tests/check_fli_overflow.py||Tests/check_fli_overflow.py": [
      "File: Tests/check_fli_overflow.py -> Tests/check_fli_overflow.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: from helper import unittest, PillowTestCase",
      "2: from PIL import Image",
      "4: TEST_FILE = \"Tests/images/fli_overflow.fli\"",
      "7: class TestFliOverflow(PillowTestCase):",
      "8:     def test_fli_overflow(self):",
      "10:         # this should not crash with a malloc error or access violation",
      "11:         im = Image.open(TEST_FILE)",
      "12:         im.load()",
      "15: if __name__ == '__main__':",
      "16:     unittest.main()",
      "",
      "---------------"
    ],
    "libImaging/FliDecode.c||libImaging/FliDecode.c": [
      "File: libImaging/FliDecode.c -> libImaging/FliDecode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "186:      for (y = 0; y < state->ysize; y++) {",
      "187:   UINT8* buf = (UINT8*) im->image[y];",
      "189:   data += state->xsize;",
      "190:      }",
      "191:      break;",
      "",
      "[Removed Lines]",
      "188:   memcpy(buf+x, data, state->xsize);",
      "",
      "[Added Lines]",
      "188:   memcpy(buf, data, state->xsize);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bcaaf97f4ff25b3b5b9e8efeda364e17e80858ec",
      "candidate_info": {
        "commit_hash": "bcaaf97f4ff25b3b5b9e8efeda364e17e80858ec",
        "repo": "python-pillow/Pillow",
        "commit_url": "https://github.com/python-pillow/Pillow/commit/bcaaf97f4ff25b3b5b9e8efeda364e17e80858ec",
        "files": [
          "Tests/check_fli_overflow.py",
          "Tests/images/fli_overflow.fli",
          "libImaging/FliDecode.c"
        ],
        "message": "FLI overflow error fix and testcase CVE-2016-0775",
        "before_after_code_files": [
          "Tests/check_fli_overflow.py||Tests/check_fli_overflow.py",
          "libImaging/FliDecode.c||libImaging/FliDecode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "Tests/check_fli_overflow.py||Tests/check_fli_overflow.py",
            "libImaging/FliDecode.c||libImaging/FliDecode.c"
          ],
          "candidate": [
            "Tests/check_fli_overflow.py||Tests/check_fli_overflow.py",
            "libImaging/FliDecode.c||libImaging/FliDecode.c"
          ]
        }
      },
      "candidate_diff": {
        "Tests/check_fli_overflow.py||Tests/check_fli_overflow.py": [
          "File: Tests/check_fli_overflow.py -> Tests/check_fli_overflow.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from helper import unittest, PillowTestCase",
          "2: from PIL import Image",
          "4: TEST_FILE = \"Tests/images/fli_overflow.fli\"",
          "7: class TestFliOverflow(PillowTestCase):",
          "8:     def test_fli_overflow(self):",
          "10:         # this should not crash with a malloc error or access violation",
          "11:         im = Image.open(TEST_FILE)",
          "12:         im.load()",
          "15: if __name__ == '__main__':",
          "16:     unittest.main()",
          "",
          "---------------"
        ],
        "libImaging/FliDecode.c||libImaging/FliDecode.c": [
          "File: libImaging/FliDecode.c -> libImaging/FliDecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "186:      for (y = 0; y < state->ysize; y++) {",
          "187:   UINT8* buf = (UINT8*) im->image[y];",
          "189:   data += state->xsize;",
          "190:      }",
          "191:      break;",
          "",
          "[Removed Lines]",
          "188:   memcpy(buf+x, data, state->xsize);",
          "",
          "[Added Lines]",
          "188:   memcpy(buf, data, state->xsize);",
          "",
          "---------------"
        ]
      }
    }
  ]
}