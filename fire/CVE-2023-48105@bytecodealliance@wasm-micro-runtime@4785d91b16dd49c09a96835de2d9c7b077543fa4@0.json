{
  "cve_id": "CVE-2023-48105",
  "cve_desc": "An heap overflow vulnerability was discovered in Bytecode alliance wasm-micro-runtime v.1.2.3 allows a remote attacker to cause a denial of service via the wasm_loader_prepare_bytecode function in core/iwasm/interpreter/wasm_loader.c.",
  "repo": "bytecodealliance/wasm-micro-runtime",
  "patch_hash": "4785d91b16dd49c09a96835de2d9c7b077543fa4",
  "patch_info": {
    "commit_hash": "4785d91b16dd49c09a96835de2d9c7b077543fa4",
    "repo": "bytecodealliance/wasm-micro-runtime",
    "commit_url": "https://github.com/bytecodealliance/wasm-micro-runtime/pull/2734/commits/4785d91b16dd49c09a96835de2d9c7b077543fa4",
    "files": [
      "core/iwasm/interpreter/wasm_loader.c"
    ],
    "message": "Add more buf boundary checks in wasm loader",
    "before_after_code_files": [
      "core/iwasm/interpreter/wasm_loader.c||core/iwasm/interpreter/wasm_loader.c"
    ]
  },
  "patch_diff": {
    "core/iwasm/interpreter/wasm_loader.c||core/iwasm/interpreter/wasm_loader.c": [
      "File: core/iwasm/interpreter/wasm_loader.c -> core/iwasm/interpreter/wasm_loader.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "174: #define read_uint8(p) TEMPLATE_READ_VALUE(uint8, p)",
      "175: #define read_uint32(p) TEMPLATE_READ_VALUE(uint32, p)",
      "178: #define read_leb_int64(p, p_end, res)                                   \\",
      "179:     do {                                                                \\",
      "",
      "[Removed Lines]",
      "176: #define read_bool(p) TEMPLATE_READ_VALUE(bool, p)",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "490:             if (type != VALUE_TYPE_V128)",
      "491:                 goto fail_type_mismatch;",
      "493:             flag = read_uint8(p);",
      "494:             (void)flag;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "492:             CHECK_BUF(p, p_end, 1);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "7138:                 BlockType block_type;",
      "7140:                 p_org = p - 1;",
      "7141:                 value_type = read_uint8(p);",
      "7142:                 if (is_byte_a_type(value_type)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7141:                 CHECK_BUF(p, p_end, 1);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "9099:             {",
      "9100:                 uint32 opcode1;",
      "9102:                 opcode1 = read_uint8(p);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "9103:                 CHECK_BUF(p, p_end, 1);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "9760:             {",
      "9761:                 uint32 opcode1;",
      "9763:                 opcode1 = read_uint8(p);",
      "9764: #if WASM_ENABLE_FAST_INTERP != 0",
      "9765:                 emit_byte(loader_ctx, opcode1);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "9765:                 CHECK_BUF(p, p_end, 1);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7f8292ffd12b0881ce7b9797a9075da09c849cae",
      "candidate_info": {
        "commit_hash": "7f8292ffd12b0881ce7b9797a9075da09c849cae",
        "repo": "bytecodealliance/wasm-micro-runtime",
        "commit_url": "https://github.com/bytecodealliance/wasm-micro-runtime/commit/7f8292ffd12b0881ce7b9797a9075da09c849cae",
        "files": [
          "core/iwasm/aot/aot_runtime.c",
          "core/iwasm/interpreter/wasm_loader.c",
          "core/iwasm/interpreter/wasm_runtime.c",
          "product-mini/platforms/posix/main.c",
          "product-mini/platforms/windows/main.c"
        ],
        "message": "Add more buffer boundary checks in wasm loader (#2734)\n\nAnd fix exception not printed in `iwasm --repl` mode and resize the memory\ndata size to UINT32_MAX if the initial page number is 65536.",
        "before_after_code_files": [
          "core/iwasm/aot/aot_runtime.c||core/iwasm/aot/aot_runtime.c",
          "core/iwasm/interpreter/wasm_loader.c||core/iwasm/interpreter/wasm_loader.c",
          "core/iwasm/interpreter/wasm_runtime.c||core/iwasm/interpreter/wasm_runtime.c",
          "product-mini/platforms/posix/main.c||product-mini/platforms/posix/main.c",
          "product-mini/platforms/windows/main.c||product-mini/platforms/windows/main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/bytecodealliance/wasm-micro-runtime/pull/2734"
        ],
        "olp_code_files": {
          "patch": [
            "core/iwasm/interpreter/wasm_loader.c||core/iwasm/interpreter/wasm_loader.c"
          ],
          "candidate": [
            "core/iwasm/interpreter/wasm_loader.c||core/iwasm/interpreter/wasm_loader.c"
          ]
        }
      },
      "candidate_diff": {
        "core/iwasm/aot/aot_runtime.c||core/iwasm/aot/aot_runtime.c": [
          "File: core/iwasm/aot/aot_runtime.c -> core/iwasm/aot/aot_runtime.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "489:         if (max_page_count > DEFAULT_MAX_PAGES)",
          "490:             max_page_count = DEFAULT_MAX_PAGES;",
          "491:     }",
          "493:     LOG_VERBOSE(\"Memory instantiate:\");",
          "494:     LOG_VERBOSE(\"  page bytes: %u, init pages: %u, max pages: %u\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "493:         if (init_page_count == DEFAULT_MAX_PAGES) {",
          "494:             num_bytes_per_page = UINT32_MAX;",
          "495:             init_page_count = max_page_count = 1;",
          "496:         }",
          "497:     }",
          "",
          "---------------"
        ],
        "core/iwasm/interpreter/wasm_loader.c||core/iwasm/interpreter/wasm_loader.c": [
          "File: core/iwasm/interpreter/wasm_loader.c -> core/iwasm/interpreter/wasm_loader.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "174: #define read_uint8(p) TEMPLATE_READ_VALUE(uint8, p)",
          "175: #define read_uint32(p) TEMPLATE_READ_VALUE(uint32, p)",
          "178: #define read_leb_int64(p, p_end, res)                                   \\",
          "179:     do {                                                                \\",
          "",
          "[Removed Lines]",
          "176: #define read_bool(p) TEMPLATE_READ_VALUE(bool, p)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "490:             if (type != VALUE_TYPE_V128)",
          "491:                 goto fail_type_mismatch;",
          "493:             flag = read_uint8(p);",
          "494:             (void)flag;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "492:             CHECK_BUF(p, p_end, 1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7138:                 BlockType block_type;",
          "7140:                 p_org = p - 1;",
          "7141:                 value_type = read_uint8(p);",
          "7142:                 if (is_byte_a_type(value_type)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7141:                 CHECK_BUF(p, p_end, 1);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "9099:             {",
          "9100:                 uint32 opcode1;",
          "9102:                 opcode1 = read_uint8(p);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9103:                 CHECK_BUF(p, p_end, 1);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "9760:             {",
          "9761:                 uint32 opcode1;",
          "9763:                 opcode1 = read_uint8(p);",
          "9764: #if WASM_ENABLE_FAST_INTERP != 0",
          "9765:                 emit_byte(loader_ctx, opcode1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9765:                 CHECK_BUF(p, p_end, 1);",
          "",
          "---------------"
        ],
        "core/iwasm/interpreter/wasm_runtime.c||core/iwasm/interpreter/wasm_runtime.c": [
          "File: core/iwasm/interpreter/wasm_runtime.c -> core/iwasm/interpreter/wasm_runtime.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "276:         if (max_page_count > DEFAULT_MAX_PAGES)",
          "277:             max_page_count = DEFAULT_MAX_PAGES;",
          "278:     }",
          "280:     LOG_VERBOSE(\"Memory instantiate:\");",
          "281:     LOG_VERBOSE(\"  page bytes: %u, init pages: %u, max pages: %u\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "280:         if (init_page_count == DEFAULT_MAX_PAGES) {",
          "281:             num_bytes_per_page = UINT32_MAX;",
          "282:             init_page_count = max_page_count = 1;",
          "283:         }",
          "284:     }",
          "",
          "---------------"
        ],
        "product-mini/platforms/posix/main.c||product-mini/platforms/posix/main.c": [
          "File: product-mini/platforms/posix/main.c -> product-mini/platforms/posix/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:             break;",
          "208:         }",
          "209:         if (app_argc != 0) {",
          "210:             wasm_application_execute_func(module_inst, app_argv[0],",
          "211:                                           app_argc - 1, app_argv + 1);",
          "212:         }",
          "213:         free(app_argv);",
          "214:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "210:             const char *exception;",
          "213:             if ((exception = wasm_runtime_get_exception(module_inst)))",
          "214:                 printf(\"%s\\n\", exception);",
          "",
          "---------------"
        ],
        "product-mini/platforms/windows/main.c||product-mini/platforms/windows/main.c": [
          "File: product-mini/platforms/windows/main.c -> product-mini/platforms/windows/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "161:             break;",
          "162:         }",
          "163:         if (app_argc != 0) {",
          "164:             wasm_application_execute_func(module_inst, app_argv[0],",
          "165:                                           app_argc - 1, app_argv + 1);",
          "166:         }",
          "167:         free(app_argv);",
          "168:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "164:             const char *exception;",
          "167:             if ((exception = wasm_runtime_get_exception(module_inst)))",
          "168:                 printf(\"%s\\n\", exception);",
          "",
          "---------------"
        ]
      }
    }
  ]
}