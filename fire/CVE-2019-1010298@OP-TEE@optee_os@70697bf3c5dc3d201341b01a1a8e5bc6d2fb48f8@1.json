{
  "cve_id": "CVE-2019-1010298",
  "cve_desc": "Linaro/OP-TEE OP-TEE 3.3.0 and earlier is affected by: Buffer Overflow. The impact is: Code execution in the context of TEE core (kernel). The component is: optee_os. The fixed version is: 3.4.0 and later.",
  "repo": "OP-TEE/optee_os",
  "patch_hash": "70697bf3c5dc3d201341b01a1a8e5bc6d2fb48f8",
  "patch_info": {
    "commit_hash": "70697bf3c5dc3d201341b01a1a8e5bc6d2fb48f8",
    "repo": "OP-TEE/optee_os",
    "commit_url": "https://github.com/OP-TEE/optee_os/commit/70697bf3c5dc3d201341b01a1a8e5bc6d2fb48f8",
    "files": [
      "core/tee/tee_svc_cryp.c"
    ],
    "message": "svc: check for allocation overflow in crypto calls part 2\n\nWithout checking for overflow there is a risk of allocating a buffer\nwith size smaller than anticipated and as a consequence of that it might\nlead to a heap based overflow with attacker controlled data written\noutside the boundaries of the buffer.\n\nFixes: OP-TEE-2018-0011: \"Integer overflow in crypto system calls (x2)\"\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
    "before_after_code_files": [
      "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
    ]
  },
  "patch_diff": {
    "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c": [
      "File: core/tee/tee_svc_cryp.c -> core/tee/tee_svc_cryp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3274:  if (res != TEE_SUCCESS)",
      "3275:   return res;",
      "3278:  if (!params)",
      "3279:   return TEE_ERROR_OUT_OF_MEMORY;",
      "3280:  res = copy_in_attrs(utc, usr_params, num_params, params);",
      "",
      "[Removed Lines]",
      "3277:  params = malloc(sizeof(TEE_Attribute) * num_params);",
      "",
      "[Added Lines]",
      "3277:  size_t alloc_size = 0;",
      "3279:  if (MUL_OVERFLOW(sizeof(TEE_Attribute), num_params, &alloc_size))",
      "3280:   return TEE_ERROR_OVERFLOW;",
      "3282:  params = malloc(alloc_size);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3436:  if (res != TEE_SUCCESS)",
      "3437:   return res;",
      "3440:  if (!params)",
      "3441:   return TEE_ERROR_OUT_OF_MEMORY;",
      "3442:  res = copy_in_attrs(utc, usr_params, num_params, params);",
      "",
      "[Removed Lines]",
      "3439:  params = malloc(sizeof(TEE_Attribute) * num_params);",
      "",
      "[Added Lines]",
      "3444:  size_t alloc_size = 0;",
      "3446:  if (MUL_OVERFLOW(sizeof(TEE_Attribute), num_params, &alloc_size))",
      "3447:   return TEE_ERROR_OVERFLOW;",
      "3449:  params = malloc(alloc_size);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "99e8a8cc3db341d703b6779563af98491253960a",
      "candidate_info": {
        "commit_hash": "99e8a8cc3db341d703b6779563af98491253960a",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/99e8a8cc3db341d703b6779563af98491253960a",
        "files": [
          "core/tee/tee_svc_storage.c"
        ],
        "message": "svc: fix NULL pointer dereference during storage enumeration\n\nIn syscall_storage_next_enum(..) when 'tee_obj o' isn't successfully\ninitialized, then 'o->pobj->fops' is a NULL pointer and therefore we\nneed to check for that before trying to dereference it in the clean-up\npart of the function.\n\nFixes: \"Null pointer dereference in storage system call\" as reported by\nRiscure.\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
        "before_after_code_files": [
          "core/tee/tee_svc_storage.c||core/tee/tee_svc_storage.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/2745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/tee/tee_svc_storage.c||core/tee/tee_svc_storage.c": [
          "File: core/tee/tee_svc_storage.c -> core/tee/tee_svc_storage.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "777: exit:",
          "778:  if (o) {",
          "779:   if (o->pobj) {",
          "781:    free(o->pobj->obj_id);",
          "782:   }",
          "783:   free(o->pobj);",
          "",
          "[Removed Lines]",
          "780:    o->pobj->fops->close(&o->fh);",
          "",
          "[Added Lines]",
          "780:    if (o->pobj->fops)",
          "781:     o->pobj->fops->close(&o->fh);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c4f75cc6f9991b78a29216b938fb885ab88f7961",
      "candidate_info": {
        "commit_hash": "c4f75cc6f9991b78a29216b938fb885ab88f7961",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/c4f75cc6f9991b78a29216b938fb885ab88f7961",
        "files": [
          "core/include/optee_msg.h"
        ],
        "message": "core: optee_msg.h: define OPTEE_MSG_MAX_NUM_PARAMS\n\nDefines OPTEE_MSG_MAX_NUM_PARAMS to be used with the macro\nOPTEE_MSG_GET_ARG_SIZE() in order to avoid unexpected wrapping.\n\nFixes: \"Macro for checking size of parameter buffer can overflow\" as\nreported by Riscure.\n\nSigned-off-by: Jens Wiklander <jens.wiklander@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Joakim Bech <joakim.bech@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
        "before_after_code_files": [
          "core/include/optee_msg.h||core/include/optee_msg.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/2745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/include/optee_msg.h||core/include/optee_msg.h": [
          "File: core/include/optee_msg.h -> core/include/optee_msg.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "201: #define OPTEE_MSG_GET_ARG_SIZE(num_params) \\",
          "202:  (sizeof(struct optee_msg_arg) + \\",
          "203:   sizeof(struct optee_msg_param) * (num_params))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "209: #define OPTEE_MSG_MAX_NUM_PARAMS \\",
          "210:  ((OPTEE_MSG_NONCONTIG_PAGE_SIZE - sizeof(struct optee_msg_arg)) / \\",
          "211:   sizeof(struct optee_msg_param))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c6edc12acd490e272aade091b5f2389eba37bb33",
      "candidate_info": {
        "commit_hash": "c6edc12acd490e272aade091b5f2389eba37bb33",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/c6edc12acd490e272aade091b5f2389eba37bb33",
        "files": [
          "core/arch/arm/tee/entry_std.c"
        ],
        "message": "core: entry_std: check value of num_params\n\nChecks value of num_params against OPTEE_MSG_MAX_NUM_PARAMS before using\nit in OPTEE_MSG_GET_ARG_SIZE() in order to avoid unexpected wrapping.\n\nFixes: \"Macro for checking size of parameter buffer can overflow\" as\nreported by Riscure.\n\nSigned-off-by: Jens Wiklander <jens.wiklander@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Joakim Bech <joakim.bech@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
        "before_after_code_files": [
          "core/arch/arm/tee/entry_std.c||core/arch/arm/tee/entry_std.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/2745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/arch/arm/tee/entry_std.c||core/arch/arm/tee/entry_std.c": [
          "File: core/arch/arm/tee/entry_std.c -> core/arch/arm/tee/entry_std.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "479:   return NULL;",
          "481:  arg = mobj_get_va(mobj, 0);",
          "488:  args_size = OPTEE_MSG_GET_ARG_SIZE(*num_params);",
          "489:  if (args_size > SMALL_PAGE_SIZE) {",
          "490:   EMSG(\"Command buffer spans across page boundary\");",
          "493:  }",
          "495:  return mobj;",
          "496: }",
          "498: static struct mobj *get_cmd_buffer(paddr_t parg, uint32_t *num_params)",
          "",
          "[Removed Lines]",
          "482:  if (!arg) {",
          "483:   mobj_free(mobj);",
          "484:   return NULL;",
          "485:  }",
          "491:   mobj_free(mobj);",
          "492:   return NULL;",
          "",
          "[Added Lines]",
          "482:  if (!arg)",
          "483:   goto err;",
          "486:  if (*num_params > OPTEE_MSG_MAX_NUM_PARAMS)",
          "487:   goto err;",
          "492:   goto err;",
          "496: err:",
          "497:  mobj_free(mobj);",
          "498:  return NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "505:   return NULL;",
          "508:  args_size = OPTEE_MSG_GET_ARG_SIZE(*num_params);",
          "510:  return mobj_shm_alloc(parg, args_size, 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "511:  if (*num_params > OPTEE_MSG_MAX_NUM_PARAMS)",
          "512:   return NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d8e3005e8d7a8cd6a1e4a4a3dbee094c0cee8962",
      "candidate_info": {
        "commit_hash": "d8e3005e8d7a8cd6a1e4a4a3dbee094c0cee8962",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/d8e3005e8d7a8cd6a1e4a4a3dbee094c0cee8962",
        "files": [
          "core/arch/arm/tee/entry_std.c"
        ],
        "message": "core: initialize saved_attr\n\nThe saved_attr variable is used in the cleanup condition in the\nentry_open_session(..) function. The function cleanup_params(..)\nconditionally free up memory based on the values from saved_attr and\ntherefore saved_attr must be initialized with a proper value in case the\nfunctions that are supposed to fill in correct attributes are failing.\n\nFixes: \"Use of uninitialized variable in REE exposed function\" as\nreported by Riscure.\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
        "before_after_code_files": [
          "core/arch/arm/tee/entry_std.c||core/arch/arm/tee/entry_std.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/2745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/arch/arm/tee/entry_std.c||core/arch/arm/tee/entry_std.c": [
          "File: core/arch/arm/tee/entry_std.c -> core/arch/arm/tee/entry_std.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "289:  TEE_UUID uuid;",
          "290:  struct tee_ta_param param;",
          "291:  size_t num_meta;",
          "294:  res = get_open_session_meta(num_params, arg->params, &num_meta, &uuid,",
          "295:         &clnt_id);",
          "",
          "[Removed Lines]",
          "292:  uint64_t saved_attr[TEE_NUM_PARAMS];",
          "",
          "[Added Lines]",
          "292:  uint64_t saved_attr[TEE_NUM_PARAMS] = { 0 };",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ca9e426d8d17f1e1b19ebfa782f7f914e4f6c53",
      "candidate_info": {
        "commit_hash": "4ca9e426d8d17f1e1b19ebfa782f7f914e4f6c53",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/4ca9e426d8d17f1e1b19ebfa782f7f914e4f6c53",
        "files": [
          "core/crypto/signed_hdr.c"
        ],
        "message": "core: add missing return(s) in shdr_alloc_and_copy\n\nFixes: \"Incorrect error handling in shdr_alloc_and_copy (x2)\" as\nreported by Riscure.\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nTested-by: Joakim Bech <joakim.bech@linaro.org> (QEMU v7, v8)\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>\nReported-by: Riscure <inforequest@riscure.com>\nReported-by: Alyssa Milburn <a.a.milburn@vu.nl>\nAcked-by: Etienne Carriere <etienne.carriere@linaro.org>",
        "before_after_code_files": [
          "core/crypto/signed_hdr.c||core/crypto/signed_hdr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/2745"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "core/crypto/signed_hdr.c||core/crypto/signed_hdr.c": [
          "File: core/crypto/signed_hdr.c -> core/crypto/signed_hdr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:  struct shdr *shdr;",
          "20:  if (img_size < sizeof(struct shdr))",
          "22:  shdr_size = SHDR_GET_SIZE(img);",
          "23:  if (img_size < shdr_size)",
          "26:  shdr = malloc(shdr_size);",
          "27:  if (!shdr)",
          "",
          "[Removed Lines]",
          "21:   NULL;",
          "24:   NULL;",
          "",
          "[Added Lines]",
          "21:   return NULL;",
          "25:   return NULL;",
          "",
          "---------------"
        ]
      }
    }
  ]
}