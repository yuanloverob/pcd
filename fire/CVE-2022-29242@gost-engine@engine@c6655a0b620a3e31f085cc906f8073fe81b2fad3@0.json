{
  "cve_id": "CVE-2022-29242",
  "cve_desc": "GOST engine is a reference implementation of the Russian GOST crypto algorithms for OpenSSL. TLS clients using GOST engine when ciphersuite `TLS_GOSTR341112_256_WITH_KUZNYECHIK_CTR_OMAC` is agreed and the server uses 512 bit GOST secret keys are vulnerable to buffer overflow. GOST engine version 3.0.1 contains a patch for this issue. Disabling ciphersuite `TLS_GOSTR341112_256_WITH_KUZNYECHIK_CTR_OMAC` is a possible workaround.",
  "repo": "gost-engine/engine",
  "patch_hash": "c6655a0b620a3e31f085cc906f8073fe81b2fad3",
  "patch_info": {
    "commit_hash": "c6655a0b620a3e31f085cc906f8073fe81b2fad3",
    "repo": "gost-engine/engine",
    "commit_url": "https://github.com/gost-engine/engine/commit/c6655a0b620a3e31f085cc906f8073fe81b2fad3",
    "files": [
      "e_gost_err.c",
      "e_gost_err.h",
      "gost_ec_keyx.c"
    ],
    "message": "Fix buffer overrun in creating key transport blob according to RFC 9189, 4.2.4.1\n\nResolves: CVE-2022-29242",
    "before_after_code_files": [
      "e_gost_err.c||e_gost_err.c",
      "e_gost_err.h||e_gost_err.h",
      "gost_ec_keyx.c||gost_ec_keyx.c"
    ]
  },
  "patch_diff": {
    "e_gost_err.c||e_gost_err.c": [
      "File: e_gost_err.c -> e_gost_err.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "141:     {ERR_PACK(0, 0, GOST_R_ERROR_SETTING_PEER_KEY), \"error setting peer key\"},",
      "142:     {ERR_PACK(0, 0, GOST_R_INCOMPATIBLE_ALGORITHMS), \"incompatible algorithms\"},",
      "143:     {ERR_PACK(0, 0, GOST_R_INCOMPATIBLE_PEER_KEY), \"incompatible peer key\"},",
      "144:     {ERR_PACK(0, 0, GOST_R_INVALID_CIPHER), \"invalid cipher\"},",
      "145:     {ERR_PACK(0, 0, GOST_R_INVALID_CIPHER_PARAMS), \"invalid cipher params\"},",
      "146:     {ERR_PACK(0, 0, GOST_R_INVALID_CIPHER_PARAM_OID),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "144:     {ERR_PACK(0, 0, GOST_R_INVALID_BUFFER_SIZE), \"invalid buffer size\"},",
      "",
      "---------------"
    ],
    "e_gost_err.h||e_gost_err.h": [
      "File: e_gost_err.h -> e_gost_err.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "115: # define GOST_R_ERROR_SETTING_PEER_KEY                    139",
      "116: # define GOST_R_INCOMPATIBLE_ALGORITHMS                   108",
      "117: # define GOST_R_INCOMPATIBLE_PEER_KEY                     109",
      "118: # define GOST_R_INVALID_CIPHER                            134",
      "119: # define GOST_R_INVALID_CIPHER_PARAMS                     110",
      "120: # define GOST_R_INVALID_CIPHER_PARAM_OID                  111",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "118: # define GOST_R_INVALID_BUFFER_SIZE                       140",
      "",
      "---------------"
    ],
    "gost_ec_keyx.c||gost_ec_keyx.c": [
      "File: gost_ec_keyx.c -> gost_ec_keyx.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "406:     int exp_len = 0, iv_len = 0;",
      "407:     unsigned char *exp_buf = NULL;",
      "408:     int key_is_ephemeral = 0;",
      "410:     switch (data->cipher_nid) {",
      "411:     case NID_magma_ctr:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "409:     int res_len = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "499:         goto err;",
      "500:     }",
      "503:         ret = 1;",
      "504:  err:",
      "505:     OPENSSL_cleanse(expkeys, sizeof(expkeys));",
      "506:     if (key_is_ephemeral)",
      "",
      "[Removed Lines]",
      "502:     if ((*out_len = i2d_PSKeyTransport_gost(pst, out ? &out : NULL)) > 0)",
      "",
      "[Added Lines]",
      "503:     res_len = i2d_PSKeyTransport_gost(pst, NULL);",
      "504:     if (res_len <= 0) {",
      "505:         GOSTerr(GOST_F_PKEY_GOST2018_ENCRYPT, ERR_R_ASN1_LIB);",
      "506:         goto err;",
      "507:     }",
      "509:     if (out == NULL) {",
      "512:     } else {",
      "513:         if ((size_t)res_len > *out_len) {",
      "514:             GOSTerr(GOST_F_PKEY_GOST2018_ENCRYPT, GOST_R_INVALID_BUFFER_SIZE);",
      "515:             goto err;",
      "516:         }",
      "517:         if ((*out_len = i2d_PSKeyTransport_gost(pst, &out)) > 0)",
      "518:             ret = 1;",
      "519:         else",
      "520:             GOSTerr(GOST_F_PKEY_GOST2018_ENCRYPT, ERR_R_ASN1_LIB);",
      "521:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ac13dafdd889b51c3f91c7351674ca9935a551f1",
      "candidate_info": {
        "commit_hash": "ac13dafdd889b51c3f91c7351674ca9935a551f1",
        "repo": "gost-engine/engine",
        "commit_url": "https://github.com/gost-engine/engine/commit/ac13dafdd889b51c3f91c7351674ca9935a551f1",
        "files": [
          "e_gost_err.c",
          "e_gost_err.h",
          "gost_ec_keyx.c"
        ],
        "message": "Fix buffer overrun in creating key transport blob according to RFC 9189, 4.2.4.1\n\nResolves: CVE-2022-29242",
        "before_after_code_files": [
          "e_gost_err.c||e_gost_err.c",
          "e_gost_err.h||e_gost_err.h",
          "gost_ec_keyx.c||gost_ec_keyx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "e_gost_err.c||e_gost_err.c",
            "e_gost_err.h||e_gost_err.h",
            "gost_ec_keyx.c||gost_ec_keyx.c"
          ],
          "candidate": [
            "e_gost_err.c||e_gost_err.c",
            "e_gost_err.h||e_gost_err.h",
            "gost_ec_keyx.c||gost_ec_keyx.c"
          ]
        }
      },
      "candidate_diff": {
        "e_gost_err.c||e_gost_err.c": [
          "File: e_gost_err.c -> e_gost_err.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:     {ERR_PACK(0, 0, GOST_R_ERROR_SETTING_PEER_KEY), \"error setting peer key\"},",
          "151:     {ERR_PACK(0, 0, GOST_R_INCOMPATIBLE_ALGORITHMS), \"incompatible algorithms\"},",
          "152:     {ERR_PACK(0, 0, GOST_R_INCOMPATIBLE_PEER_KEY), \"incompatible peer key\"},",
          "153:     {ERR_PACK(0, 0, GOST_R_INVALID_CIPHER), \"invalid cipher\"},",
          "154:     {ERR_PACK(0, 0, GOST_R_INVALID_CIPHER_PARAMS), \"invalid cipher params\"},",
          "155:     {ERR_PACK(0, 0, GOST_R_INVALID_CIPHER_PARAM_OID),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "153:     {ERR_PACK(0, 0, GOST_R_INVALID_BUFFER_SIZE), \"invalid buffer size\"},",
          "",
          "---------------"
        ],
        "e_gost_err.h||e_gost_err.h": [
          "File: e_gost_err.h -> e_gost_err.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "129: # define GOST_R_ERROR_SETTING_PEER_KEY                    139",
          "130: # define GOST_R_INCOMPATIBLE_ALGORITHMS                   108",
          "131: # define GOST_R_INCOMPATIBLE_PEER_KEY                     109",
          "132: # define GOST_R_INVALID_CIPHER                            134",
          "133: # define GOST_R_INVALID_CIPHER_PARAMS                     110",
          "134: # define GOST_R_INVALID_CIPHER_PARAM_OID                  111",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "132: # define GOST_R_INVALID_BUFFER_SIZE                       140",
          "",
          "---------------"
        ],
        "gost_ec_keyx.c||gost_ec_keyx.c": [
          "File: gost_ec_keyx.c -> gost_ec_keyx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "532:     int exp_len = 0, iv_len = 0;",
          "533:     unsigned char *exp_buf = NULL;",
          "534:     int key_is_ephemeral = 0;",
          "536:     switch (data->cipher_nid) {",
          "537:     case NID_magma_ctr:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "535:     int res_len = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "625:         goto err;",
          "626:     }",
          "629:         ret = 1;",
          "630:  err:",
          "631:     OPENSSL_cleanse(expkeys, sizeof(expkeys));",
          "632:     if (key_is_ephemeral)",
          "",
          "[Removed Lines]",
          "628:     if ((*out_len = i2d_PSKeyTransport_gost(pst, out ? &out : NULL)) > 0)",
          "",
          "[Added Lines]",
          "629:     res_len = i2d_PSKeyTransport_gost(pst, NULL);",
          "630:     if (res_len <= 0) {",
          "631:         GOSTerr(GOST_F_PKEY_GOST2018_ENCRYPT, ERR_R_ASN1_LIB);",
          "632:         goto err;",
          "633:     }",
          "635:     if (out == NULL) {",
          "638:     } else {",
          "639:         if ((size_t)res_len > *out_len) {",
          "640:             GOSTerr(GOST_F_PKEY_GOST2018_ENCRYPT, GOST_R_INVALID_BUFFER_SIZE);",
          "641:             goto err;",
          "642:         }",
          "643:         if ((*out_len = i2d_PSKeyTransport_gost(pst, &out)) > 0)",
          "644:             ret = 1;",
          "645:         else",
          "646:             GOSTerr(GOST_F_PKEY_GOST2018_ENCRYPT, ERR_R_ASN1_LIB);",
          "647:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}