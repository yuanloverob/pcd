{
  "cve_id": "CVE-2014-9765",
  "cve_desc": "Buffer overflow in the main_get_appheader function in xdelta3-main.h in xdelta3 before 3.0.9 allows remote attackers to execute arbitrary code via a crafted input file.",
  "repo": "jmacd/xdelta-devel",
  "patch_hash": "ef93ff74203e030073b898c05e8b4860b5d09ef2",
  "patch_info": {
    "commit_hash": "ef93ff74203e030073b898c05e8b4860b5d09ef2",
    "repo": "jmacd/xdelta-devel",
    "commit_url": "https://github.com/jmacd/xdelta-devel/commit/ef93ff74203e030073b898c05e8b4860b5d09ef2",
    "files": [
      "xdelta3/xdelta3-main.h",
      "xdelta3/xdelta3-test.h"
    ],
    "message": "Add appheader tests; fix buffer overflow in main_get_appheader",
    "before_after_code_files": [
      "xdelta3/xdelta3-main.h||xdelta3/xdelta3-main.h",
      "xdelta3/xdelta3-test.h||xdelta3/xdelta3-test.h"
    ]
  },
  "patch_diff": {
    "xdelta3/xdelta3-main.h||xdelta3/xdelta3-main.h": [
      "File: xdelta3/xdelta3-main.h -> xdelta3/xdelta3-main.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "2811:   if (appheadsz > 0)",
      "2812:     {",
      "2813:       char *start = (char*)apphead;",
      "2814:       char *slash;",
      "2815:       int   place = 0;",
      "2818:       memset (parsed, 0, sizeof (parsed));",
      "2821:  {",
      "2823:    parsed[place++] = start;",
      "",
      "[Removed Lines]",
      "2816:       char *parsed[4];",
      "2820:       while ((slash = strchr (start, '/')) != NULL)",
      "",
      "[Added Lines]",
      "2813:       const int kMaxArgs = 4;",
      "2817:       char *parsed[kMaxArgs];",
      "2821:       while ((slash = strchr (start, '/')) != NULL && place < (kMaxArgs-1))",
      "",
      "---------------"
    ],
    "xdelta3/xdelta3-test.h||xdelta3/xdelta3-test.h": [
      "File: xdelta3/xdelta3-test.h -> xdelta3/xdelta3-test.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "56:     mt->mt_buffer_[i] =",
      "58:     (mt->mt_buffer_[i-1] >> 30)) + i);",
      "59:   }",
      "60: }",
      "",
      "[Removed Lines]",
      "57:  (1812433253UL * (mt->mt_buffer_[i-1] ^",
      "",
      "[Added Lines]",
      "57:  (1812433253UL * (mt->mt_buffer_[i-1] ^",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "69:     int kk;",
      "71:     for (kk = 0; kk < MT_LEN - MT_IA; kk++) {",
      "73:  (mt->mt_buffer_[kk + 1] & LOWER_MASK);",
      "75:  (y >> 1) ^ mag01[y & 0x1UL];",
      "76:     }",
      "77:     for (;kk < MT_LEN - 1; kk++) {",
      "79:  (mt->mt_buffer_[kk + 1] & LOWER_MASK);",
      "81:  (y >> 1) ^ mag01[y & 0x1UL];",
      "82:     }",
      "84:       (mt->mt_buffer_[0] & LOWER_MASK);",
      "86:       (y >> 1) ^ mag01[y & 0x1UL];",
      "87:     mt->mt_index_ = 0;",
      "88:   }",
      "",
      "[Removed Lines]",
      "72:       y = (mt->mt_buffer_[kk] & UPPER_MASK) |",
      "74:       mt->mt_buffer_[kk] = mt->mt_buffer_[kk + MT_IA] ^",
      "78:       y = (mt->mt_buffer_[kk] & UPPER_MASK) |",
      "80:       mt->mt_buffer_[kk] = mt->mt_buffer_[kk + (MT_IA - MT_LEN)] ^",
      "83:     y = (mt->mt_buffer_[MT_LEN - 1] & UPPER_MASK) |",
      "85:     mt->mt_buffer_[MT_LEN - 1] = mt->mt_buffer_[MT_IA - 1] ^",
      "",
      "[Added Lines]",
      "72:       y = (mt->mt_buffer_[kk] & UPPER_MASK) |",
      "74:       mt->mt_buffer_[kk] = mt->mt_buffer_[kk + MT_IA] ^",
      "78:       y = (mt->mt_buffer_[kk] & UPPER_MASK) |",
      "80:       mt->mt_buffer_[kk] = mt->mt_buffer_[kk + (MT_IA - MT_LEN)] ^",
      "83:     y = (mt->mt_buffer_[MT_LEN - 1] & UPPER_MASK) |",
      "85:     mt->mt_buffer_[MT_LEN - 1] = mt->mt_buffer_[MT_IA - 1] ^",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "166:  {",
      "167:    stream->msg = \"abnormal command termination\";",
      "168:  }",
      "170:     }",
      "171:   return 0;",
      "172: }",
      "",
      "[Removed Lines]",
      "169:       return XD3_INTERNAL;",
      "",
      "[Added Lines]",
      "169:       return ret;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "257: static int",
      "258: test_make_inputs (xd3_stream *stream, xoff_t *ss_out, xoff_t *ts_out)",
      "259: {",
      "262:   uint8_t *buf = (uint8_t*) malloc (ts + ss), *sbuf = buf, *tbuf = buf + ss;",
      "263:   usize_t sadd = 0, sadd_max = (usize_t)(ss * TEST_ADD_RATIO);",
      "264:   FILE  *tf = NULL, *sf = NULL;",
      "",
      "[Removed Lines]",
      "260:   usize_t ts = (mt_random (&static_mtrand) % TEST_FILE_MEAN) + TEST_FILE_MEAN / 2;",
      "261:   usize_t ss = (mt_random (&static_mtrand) % TEST_FILE_MEAN) + TEST_FILE_MEAN / 2;",
      "",
      "[Added Lines]",
      "260:   usize_t ts = (mt_random (&static_mtrand) % TEST_FILE_MEAN) +",
      "261:     TEST_FILE_MEAN / 2;",
      "262:   usize_t ss = (mt_random (&static_mtrand) % TEST_FILE_MEAN) +",
      "263:     TEST_FILE_MEAN / 2;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "409:  {",
      "410:    if (obuf[i] != rbuf[i])",
      "411:       {",
      "413:     (int)i, (int)oc, offset, obuf[i], rbuf[i]);",
      "414:        diffs++;",
      "415:        return XD3_INTERNAL;",
      "",
      "[Removed Lines]",
      "412:        XPR(NT \"byte %u (read %u @ %\"Q\"u) %d != %d\\n\",",
      "",
      "[Added Lines]",
      "414:        XPR(NT \"byte %u (read %u @ %\"Q\"u) %d != %d\\n\",",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "422:     fclose (orig);",
      "423:     fclose (recons);",
      "425:       {",
      "426:  return XD3_INTERNAL;",
      "427:       }",
      "",
      "[Removed Lines]",
      "424:     if (diffs != 0)",
      "",
      "[Added Lines]",
      "426:     if (diffs != 0)",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "429: }",
      "431: static int",
      "433: {",
      "434:   char buf[TESTBUFSIZE];",
      "435:   int ret;",
      "439:   if ((ret = system (buf)) != 0)",
      "440:     {",
      "",
      "[Removed Lines]",
      "432: test_save_copy (const char *origname)",
      "437:   snprintf_func (buf, TESTBUFSIZE, \"cp -f %s %s\", origname, TEST_COPY_FILE);",
      "",
      "[Added Lines]",
      "434: test_copy_to (const char *from, const char *to)",
      "439:   snprintf_func (buf, TESTBUFSIZE, \"cp -f %s %s\", from, to);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "444:   return 0;",
      "445: }",
      "447: static int",
      "448: test_file_size (const char* file, xoff_t *size)",
      "449: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "449: static int",
      "450: test_save_copy (const char *origname)",
      "451: {",
      "452:   return test_copy_to(origname, TEST_COPY_FILE);",
      "453: }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "499:   inp = buf->base;",
      "500:   max = buf->base + buf->next - trunto;",
      "503:       XD3_INVALID_INPUT ||",
      "504:       !MSG_IS (msg))",
      "505:     {",
      "",
      "[Removed Lines]",
      "502:   if ((ret = xd3_read_uint32_t (stream, & inp, max, & rval)) !=",
      "",
      "[Added Lines]",
      "510:   if ((ret = xd3_read_uint32_t (stream, & inp, max, & rval)) !=",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1654:   if ((buf = (uint8_t*) malloc (TWO_MEGS_AND_DELTA)) == NULL) { return ENOMEM; }",
      "1656:   memset (buf, 0, TWO_MEGS_AND_DELTA);",
      "1658:     {",
      "1659:       int j;",
      "1660:       int off = mt_random(& static_mtrand) % 10;",
      "1662:  {",
      "1663:    buf[i + j] = j + off;",
      "1664:  }",
      "",
      "[Removed Lines]",
      "1657:   for (i = 0; i < (2 << 20); i += 256)",
      "1661:       for (j = 0; j < 256; j++)",
      "",
      "[Added Lines]",
      "1665:   for (i = 0; i < (2 << 20); i += 256)",
      "1669:       for (j = 0; j < 256; j++)",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "1683:     }",
      "1691:     {",
      "1692:       goto fail;",
      "1693:     }",
      "",
      "[Removed Lines]",
      "1686:   if ((ret = test_streaming (stream,",
      "1687:         buf,",
      "1688:         buf + (1 << 20),",
      "1689:         buf + (2 << 20),",
      "1690:         1 << 12)))",
      "",
      "[Added Lines]",
      "1694:   if ((ret = test_streaming (stream,",
      "1695:         buf,",
      "1696:         buf + (1 << 20),",
      "1697:         buf + (2 << 20),",
      "1698:         1 << 12)))",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "1889:     }",
      "1893:      program_name, test_softcfg_str,",
      "1894:      has_adler32 ? \"\" : \"-n \",",
      "1895:      has_apphead ? \"-A=encode_apphead \" : \"-A= \",",
      "",
      "[Removed Lines]",
      "1892:   snprintf_func (ecmd, TESTBUFSIZE, \"%s %s -f %s %s %s %s %s %s %s\",",
      "",
      "[Added Lines]",
      "1900:   snprintf_func (ecmd, TESTBUFSIZE, \"%s %s -f %s %s %s %s %s %s %s\",",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "1910:   snprintf_func (recmd, TESTBUFSIZE,",
      "1911:      \"%s recode %s -f %s %s %s %s %s\", program_name, test_softcfg_str,",
      "1912:      recoded_adler32 ? \"\" : \"-n \",",
      "1914:          (recoded_apphead ? \"-A=recode_apphead \" : \"-A= \"),",
      "1915:      recoded_secondary ? \"-S djw \" : \"-S none \",",
      "1916:      TEST_DELTA_FILE,",
      "",
      "[Removed Lines]",
      "1913:      !change_apphead ? \"\" :",
      "",
      "[Added Lines]",
      "1921:      !change_apphead ? \"\" :",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "2361:   return 0;",
      "2362: }",
      "2365:  Source identical optimization",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2373: static int",
      "2374: test_appheader (xd3_stream *stream, int ignore)",
      "2375: {",
      "2376:   int i;",
      "2377:   int ret;",
      "2378:   char buf[TESTBUFSIZE];",
      "2379:   char bogus[TESTBUFSIZE];",
      "2380:   xoff_t ssize, tsize;",
      "2381:   test_setup ();",
      "2383:   if ((ret = test_make_inputs (stream, &ssize, &tsize))) { return ret; }",
      "2385:   snprintf_func (buf, TESTBUFSIZE, \"%s -q -f -e -s %s %s %s\", program_name,",
      "2386:    TEST_SOURCE_FILE, TEST_TARGET_FILE, TEST_DELTA_FILE);",
      "2387:   if ((ret = do_cmd (stream, buf))) { return ret; }",
      "2389:   if ((ret = test_copy_to (program_name, TEST_RECON2_FILE))) { return ret; }",
      "2391:   snprintf_func (buf, TESTBUFSIZE, \"chmod 0700 %s\", TEST_RECON2_FILE);",
      "2392:   if ((ret = do_cmd (stream, buf))) { return ret; }",
      "2394:   if ((ret = test_save_copy (TEST_TARGET_FILE))) { return ret; }",
      "2395:   if ((ret = test_copy_to (TEST_SOURCE_FILE, TEST_TARGET_FILE))) { return ret; }",
      "2397:   if ((ret = test_compare_files (TEST_TARGET_FILE, TEST_COPY_FILE)) == 0)",
      "2398:     {",
      "2399:       return XD3_INVALID;  // I.e., files are different!",
      "2400:     }",
      "2403:   snprintf_func (buf, TESTBUFSIZE, \"(cd /tmp && %s -q -f -d %s)\",",
      "2404:    TEST_RECON2_FILE,",
      "2405:    TEST_DELTA_FILE);",
      "2406:   if ((ret = do_cmd (stream, buf))) { return ret; }",
      "2408:   if ((ret = test_compare_files (TEST_TARGET_FILE, TEST_COPY_FILE)) != 0)",
      "2409:     {",
      "2410:       return ret;",
      "2411:     }",
      "2415:   for (i = 0; i < TESTBUFSIZE / 4; ++i)",
      "2416:     {",
      "2417:       bogus[2*i] = 'G';",
      "2418:       bogus[2*i+1] = '/';",
      "2419:     }",
      "2420:   bogus[TESTBUFSIZE/2-1] = 0;",
      "2422:   snprintf_func (buf, TESTBUFSIZE,",
      "2423:    \"%s -q -f -A=%s -e -s %s %s %s\", program_name, bogus,",
      "2424:    TEST_SOURCE_FILE, TEST_TARGET_FILE, TEST_DELTA_FILE);",
      "2425:   if ((ret = do_cmd (stream, buf))) { return ret; }",
      "2427:   snprintf_func (buf, TESTBUFSIZE, \"(cd /tmp && %s -q -f -d %s)\",",
      "2428:    TEST_RECON2_FILE,",
      "2429:    TEST_DELTA_FILE);",
      "2430:   if ((ret = do_cmd (stream, buf)) == 0)",
      "2431:     {",
      "2432:       return XD3_INVALID;  // Impossible",
      "2433:     }",
      "2434:   if (!WIFEXITED(ret))",
      "2435:     {",
      "2436:       return XD3_INVALID;  // Must have crashed!",
      "2437:     }",
      "2439:   return 0;",
      "2440: }",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "2603:      default: CHECK(0);",
      "2604:      }",
      "2607:     inst->pos, inst->size);",
      "2608:    rptr += strlen (rptr);",
      "",
      "[Removed Lines]",
      "2606:    snprintf_func (rptr, rbuf+TESTBUFSIZE-rptr, \"%d/%d\",",
      "",
      "[Added Lines]",
      "2684:    snprintf_func (rptr, rbuf+TESTBUFSIZE-rptr, \"%d/%d\",",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "2848:   DO_TEST (force_behavior, 0, 0);",
      "2849:   DO_TEST (stdout_behavior, 0, 0);",
      "2850:   DO_TEST (no_output, 0, 0);",
      "2851:   DO_TEST (command_line_arguments, 0, 0);",
      "2853: #if EXTERNAL_COMPRESSION",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2929:   DO_TEST (appheader, 0, 0);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a4aba85c92f68f15421a6c2360a9a3d3851f7a8f",
      "candidate_info": {
        "commit_hash": "a4aba85c92f68f15421a6c2360a9a3d3851f7a8f",
        "repo": "jmacd/xdelta-devel",
        "commit_url": "https://github.com/jmacd/xdelta-devel/commit/a4aba85c92f68f15421a6c2360a9a3d3851f7a8f",
        "files": [
          "xdelta3/xdelta3-main.h",
          "xdelta3/xdelta3.vcxproj"
        ],
        "message": "Update include & link paths; minor MSVC++ issue.",
        "before_after_code_files": [
          "xdelta3/xdelta3-main.h||xdelta3/xdelta3-main.h",
          "xdelta3/xdelta3.vcxproj||xdelta3/xdelta3.vcxproj"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "xdelta3/xdelta3-main.h||xdelta3/xdelta3-main.h"
          ],
          "candidate": [
            "xdelta3/xdelta3-main.h||xdelta3/xdelta3-main.h"
          ]
        }
      },
      "candidate_diff": {
        "xdelta3/xdelta3-main.h||xdelta3/xdelta3-main.h": [
          "File: xdelta3/xdelta3-main.h -> xdelta3/xdelta3-main.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "2809:   if (appheadsz > 0)",
          "2810:     {",
          "2812:       char *start = (char*)apphead;",
          "2813:       char *slash;",
          "2814:       int   place = 0;",
          "2817:       memset (parsed, 0, sizeof (parsed));",
          "",
          "[Removed Lines]",
          "2811:       const int kMaxArgs = 4;",
          "2815:       char *parsed[kMaxArgs];",
          "",
          "[Added Lines]",
          "2814:       const int kMaxArgs = 4;",
          "2815:       char *parsed[4];",
          "",
          "---------------"
        ],
        "xdelta3/xdelta3.vcxproj||xdelta3/xdelta3.vcxproj": [
          "File: xdelta3/xdelta3.vcxproj -> xdelta3/xdelta3.vcxproj",
          "--- Hunk 1 ---",
          "[Context before]",
          "197:     <Link>",
          "198:       <SubSystem>Console</SubSystem>",
          "199:       <GenerateDebugInformation>true</GenerateDebugInformation>",
          "201:     </Link>",
          "202:   </ItemDefinitionGroup>",
          "203:   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Itanium'\">",
          "",
          "[Removed Lines]",
          "200:       <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;..\\xz\\bin_i486\\liblzma_static.lib;%(AdditionalDependencies)</AdditionalDependencies>",
          "",
          "[Added Lines]",
          "200:       <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;..\\..\\..\\..\\src\\xz\\bin_i486\\liblzma_static.lib;%(AdditionalDependencies)</AdditionalDependencies>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "224:     <Link>",
          "225:       <SubSystem>Console</SubSystem>",
          "226:       <GenerateDebugInformation>true</GenerateDebugInformation>",
          "228:     </Link>",
          "229:   </ItemDefinitionGroup>",
          "230:   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">",
          "",
          "[Removed Lines]",
          "227:       <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;..\\xz\\bin_x86-64\\liblzma_static.lib;%(AdditionalDependencies)</AdditionalDependencies>",
          "",
          "[Added Lines]",
          "227:       <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;..\\..\\..\\..\\src\\xz\\bin_x86-64\\liblzma_static.lib;%(AdditionalDependencies)</AdditionalDependencies>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "236:       <IntrinsicFunctions>true</IntrinsicFunctions>",
          "237:       <PreprocessorDefinitions>WIN32;XD3_MAIN=1;XD3_DEBUG=0;XD3_USE_LARGEFILE64=1;REGRESSION_TEST=1;SECONDARY_DJW=1;SECONDARY_FGK=1;SECONDARY_LZMA=1;XD3_WIN32=1;EXTERNAL_COMPRESSION=0;SHELL_TESTS=0;_DEBUG;_CONSOLE;LZMA_API_STATIC;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "238:       <RuntimeLibrary>MultiThreaded</RuntimeLibrary>",
          "240:     </ClCompile>",
          "241:     <Link>",
          "242:       <SubSystem>Console</SubSystem>",
          "243:       <GenerateDebugInformation>true</GenerateDebugInformation>",
          "244:       <EnableCOMDATFolding>true</EnableCOMDATFolding>",
          "245:       <OptimizeReferences>true</OptimizeReferences>",
          "247:     </Link>",
          "248:   </ItemDefinitionGroup>",
          "249:   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Itanium'\">",
          "",
          "[Removed Lines]",
          "239:       <AdditionalIncludeDirectories>..\\xz\\include</AdditionalIncludeDirectories>",
          "246:       <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;..\\xz\\bin_i486\\liblzma_static.lib;%(AdditionalDependencies)</AdditionalDependencies>",
          "",
          "[Added Lines]",
          "239:       <AdditionalIncludeDirectories>..\\..\\..\\..\\src\\xz\\include</AdditionalIncludeDirectories>",
          "246:       <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;..\\..\\..\\..\\src\\xz\\bin_i486\\liblzma_static.lib;%(AdditionalDependencies)</AdditionalDependencies>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "272:       <IntrinsicFunctions>true</IntrinsicFunctions>",
          "273:       <PreprocessorDefinitions>WIN32;XD3_MAIN=1;XD3_DEBUG=0;XD3_USE_LARGEFILE64=1;REGRESSION_TEST=1;SECONDARY_DJW=1;SECONDARY_FGK=1;SECONDARY_LZMA=1;XD3_WIN32=1;EXTERNAL_COMPRESSION=0;SHELL_TESTS=0;_DEBUG;_CONSOLE;LZMA_API_STATIC;%(PreprocessorDefinitions)</PreprocessorDefinitions>",
          "274:       <RuntimeLibrary>MultiThreaded</RuntimeLibrary>",
          "275:     </ClCompile>",
          "276:     <Link>",
          "277:       <SubSystem>Console</SubSystem>",
          "278:       <GenerateDebugInformation>true</GenerateDebugInformation>",
          "279:       <EnableCOMDATFolding>true</EnableCOMDATFolding>",
          "280:       <OptimizeReferences>true</OptimizeReferences>",
          "282:     </Link>",
          "283:   </ItemDefinitionGroup>",
          "284:   <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='xdelta3-64|Win32'\">",
          "",
          "[Removed Lines]",
          "281:       <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies);..\\xz\\bin_x86-64\\liblzma_static.lib</AdditionalDependencies>",
          "",
          "[Added Lines]",
          "275:       <AdditionalIncludeDirectories>..\\..\\..\\..\\src\\xz\\include</AdditionalIncludeDirectories>",
          "282:       <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;comdlg32.lib;advapi32.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;odbc32.lib;odbccp32.lib;%(AdditionalDependencies);..\\..\\..\\..\\src\\xz\\bin_x86-64\\liblzma_static.lib</AdditionalDependencies>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bcb07d68e689c0641be5a5d9b692b779aa9deeb0",
      "candidate_info": {
        "commit_hash": "bcb07d68e689c0641be5a5d9b692b779aa9deeb0",
        "repo": "jmacd/xdelta-devel",
        "commit_url": "https://github.com/jmacd/xdelta-devel/commit/bcb07d68e689c0641be5a5d9b692b779aa9deeb0",
        "files": [
          "xdelta3/Makefile.am",
          "xdelta3/xdelta3-blkcache.h",
          "xdelta3/xdelta3-decode.h",
          "xdelta3/xdelta3-djw.h",
          "xdelta3/xdelta3-main.h",
          "xdelta3/xdelta3-second.h",
          "xdelta3/xdelta3-test.h",
          "xdelta3/xdelta3.c",
          "xdelta3/xdelta3.h"
        ],
        "message": "Support for 64bit usize_t w/ XD3_USE_LARGEWINDOW64",
        "before_after_code_files": [
          "xdelta3/Makefile.am||xdelta3/Makefile.am",
          "xdelta3/xdelta3-blkcache.h||xdelta3/xdelta3-blkcache.h",
          "xdelta3/xdelta3-decode.h||xdelta3/xdelta3-decode.h",
          "xdelta3/xdelta3-djw.h||xdelta3/xdelta3-djw.h",
          "xdelta3/xdelta3-main.h||xdelta3/xdelta3-main.h",
          "xdelta3/xdelta3-second.h||xdelta3/xdelta3-second.h",
          "xdelta3/xdelta3-test.h||xdelta3/xdelta3-test.h",
          "xdelta3/xdelta3.c||xdelta3/xdelta3.c",
          "xdelta3/xdelta3.h||xdelta3/xdelta3.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "xdelta3/xdelta3-main.h||xdelta3/xdelta3-main.h",
            "xdelta3/xdelta3-test.h||xdelta3/xdelta3-test.h"
          ],
          "candidate": [
            "xdelta3/xdelta3-main.h||xdelta3/xdelta3-main.h",
            "xdelta3/xdelta3-test.h||xdelta3/xdelta3-test.h"
          ]
        }
      },
      "candidate_diff": {
        "xdelta3/Makefile.am||xdelta3/Makefile.am": [
          "File: xdelta3/Makefile.am -> xdelta3/Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: # Note: for extra sanity checks, enable -Wconversion. Note there",
          "39: # are a lot of false positives.",
          "40: WFLAGS = -Wall -Wshadow -fno-builtin -Wextra -Wsign-compare \\",
          "44: C_WFLAGS = $(WFLAGS) -pedantic -std=c99",
          "",
          "[Removed Lines]",
          "41:   -Wextra -Wno-unused-parameter -Wconversion",
          "",
          "[Added Lines]",
          "41:   -Wextra -Wno-unused-parameter # -Wconversion",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:        -DSECONDARY_FGK=1 \\",
          "51:        -DXD3_POSIX=1 \\",
          "52:        -DXD3_USE_LARGEFILE64=1 \\",
          "53:        -DXD3_MAIN=1",
          "55: if DEBUG_SYMBOLS",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53:        -DXD3_USE_LARGEWINDOW64=1 \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "57: endif",
          "59: # For additional debugging, add -DXD3_DEBUG=1, 2, 3, ...",
          "61: xdelta3_LDADD = -lm",
          "63: xdelta3decode_CFLAGS = \\",
          "",
          "[Removed Lines]",
          "60: xdelta3_CFLAGS = $(C_WFLAGS) $(common_CFLAGS) -DXD3_DEBUG=0",
          "",
          "[Added Lines]",
          "61: xdelta3_CFLAGS = $(C_WFLAGS) $(common_CFLAGS) -DXD3_DEBUG=3",
          "",
          "---------------"
        ],
        "xdelta3/xdelta3-blkcache.h||xdelta3/xdelta3-blkcache.h": [
          "File: xdelta3/xdelta3-blkcache.h -> xdelta3/xdelta3-blkcache.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "247:       if (sfile->size_known)",
          "248:  {",
          "250:     main_format_bcnt (source_size, &srccntbuf),",
          "251:     source_size);",
          "252:  }",
          "",
          "[Removed Lines]",
          "249:    short_sprintf (srcszbuf, \"source size %s [%\"Q\"u]\",",
          "",
          "[Added Lines]",
          "249:    short_sprintf (srcszbuf, \"source size %s [%\"Q\"]\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "260:       if (option_verbose > 1)",
          "261:  {",
          "263:  }",
          "265:       XPR(NT \"source %s %s blksize %s window %s%s%s\\n\",",
          "",
          "[Removed Lines]",
          "262:    short_sprintf (nbufs, \" #bufs %u\", lru_size);",
          "",
          "[Added Lines]",
          "262:    short_sprintf (nbufs, \" #bufs %\"Z, lru_size);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "366:    if (!option_quiet)",
          "367:      {",
          "368:        XPR(NT \"source can't seek backwards; requested block offset \"",
          "370:     pos, sfile->source_position);",
          "371:      }",
          "",
          "[Removed Lines]",
          "369:     \"%\"Q\"u source position is %\"Q\"u\\n\",",
          "",
          "[Added Lines]",
          "369:     \"%\"Q\" source position is %\"Q\"\\n\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "387:    if (option_verbose > 1)",
          "388:      {",
          "390:     pos, xd3_mainerror (ret));",
          "391:      }",
          "392:  }",
          "",
          "[Removed Lines]",
          "389:        XPR(NT \"seek error at offset %\"Q\"u: %s\\n\",",
          "",
          "[Added Lines]",
          "389:        XPR(NT \"seek error at offset %\"Q\": %s\\n\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "396:       if (option_verbose > 1 && pos != sfile->source_position)",
          "397:  {",
          "399:        pos - sfile->source_position,",
          "400:        sfile->source_position);",
          "401:  }",
          "",
          "[Removed Lines]",
          "398:    XPR(NT \"non-seekable source skipping %\"Q\"u bytes @ %\"Q\"u\\n\",",
          "",
          "[Added Lines]",
          "398:    XPR(NT \"non-seekable source skipping %\"Q\" bytes @ %\"Q\"\\n\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "440:    sfile->source_position += nread;",
          "441:    blru->size = nread;",
          "444:    skip_blkno, blru->size));",
          "446:    XD3_ASSERT (sfile->source_position <= pos);",
          "",
          "[Removed Lines]",
          "443:    IF_DEBUG1 (DP(RINT \"[getblk] skip blkno %\"Q\"u size %u\\n\",",
          "",
          "[Added Lines]",
          "443:    IF_DEBUG1 (DP(RINT \"[getblk] skip blkno %\"Q\" size %u\\n\",",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "536:  {",
          "537:    if (blru->blkno != blkno)",
          "538:      {",
          "540:     \"lru_misses=%u, lru_filled=%u)\\n\",",
          "541:     blkno, nread, blru->blkno, lru_hits, lru_misses, lru_filled);",
          "542:      }",
          "543:    else",
          "544:      {",
          "546:     \"lru_misses=%u, lru_filled=%u)\\n\",",
          "547:     blkno, nread, lru_hits, lru_misses, lru_filled);",
          "548:      }",
          "549:  }",
          "550:       else",
          "551:  {",
          "553:        \"lru_filled=%u)\\n\", blkno, nread,",
          "554:        lru_hits, lru_misses, lru_filled);",
          "555:  }",
          "",
          "[Removed Lines]",
          "539:        XPR(NT \"source block %\"Q\"u read %zu ejects %\"Q\"u (lru_hits=%u, \"",
          "545:        XPR(NT \"source block %\"Q\"u read %zu (lru_hits=%u, \"",
          "552:    XPR(NT \"source block %\"Q\"u read %zu (lru_hits=%u, lru_misses=%u, \"",
          "",
          "[Added Lines]",
          "539:        XPR(NT \"source block %\"Q\" read %zu ejects %\"Q\" (lru_hits=%u, \"",
          "545:        XPR(NT \"source block %\"Q\" read %zu (lru_hits=%u, \"",
          "552:    XPR(NT \"source block %\"Q\" read %zu (lru_hits=%u, lru_misses=%u, \"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "561:   blru->size       = nread;",
          "562:   blru->blkno      = blkno;",
          "566:   blkno, nread, pos, sfile->source_position));",
          "568:   return 0;",
          "",
          "[Removed Lines]",
          "564:   IF_DEBUG1 (DP(RINT \"[main_getblk] blkno %\"Q\"u onblk %zu pos %\"Q\"u \"",
          "565:   \"srcpos %\"Q\"u\\n\",",
          "",
          "[Added Lines]",
          "564:   IF_DEBUG1 (DP(RINT \"[main_getblk] blkno %\"Q\" onblk %zu pos %\"Q\" \"",
          "565:   \"srcpos %\"Q\"\\n\",",
          "",
          "---------------"
        ],
        "xdelta3/xdelta3-decode.h||xdelta3/xdelta3-decode.h": [
          "File: xdelta3/xdelta3-decode.h -> xdelta3/xdelta3-decode.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "224:     {",
          "225:       IF_DEBUG2 ({",
          "226:  static int cnt = 0;",
          "234:       });",
          "236:       if ((ret = xd3_decode_address (stream,",
          "",
          "[Removed Lines]",
          "227:  XPR(NT \"DECODE:%u: COPY at %\"Q\"u (winoffset %u) size %u winaddr %u\\n\",",
          "228:    cnt++,",
          "229:    stream->total_out + (stream->dec_position -",
          "230:           stream->dec_cpylen),",
          "231:    (stream->dec_position - stream->dec_cpylen),",
          "232:    inst->size,",
          "233:    inst->addr);",
          "",
          "[Added Lines]",
          "227:  XPR(NT \"DECODE:%u: COPY at %\"Q\" (winoffset %\"Z\") \"",
          "228:      \"size %\"Z\" winaddr %\"Z\"\\n\",",
          "229:      cnt++,",
          "230:      stream->total_out + (stream->dec_position -",
          "231:      stream->dec_cpylen),",
          "232:      (stream->dec_position - stream->dec_cpylen),",
          "233:      inst->size,",
          "234:      inst->addr);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "265:  if (inst->type == XD3_ADD)",
          "266:    {",
          "267:      static int cnt;",
          "269:         cnt++,",
          "270:         (stream->total_out + stream->dec_position - stream->dec_cpylen),",
          "271:         stream->dec_position - stream->dec_cpylen,",
          "",
          "[Removed Lines]",
          "268:      XPR(NT \"DECODE:%d: ADD at %\"Q\"u (winoffset %u) size %u\\n\",",
          "",
          "[Added Lines]",
          "269:      XPR(NT \"DECODE:%d: ADD at %\"Q\" (winoffset %\"Z\") size %\"Z\"\\n\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "275:    {",
          "276:      static int cnt;",
          "277:      XD3_ASSERT (inst->type == XD3_RUN);",
          "279:         cnt++,",
          "280:         stream->total_out + stream->dec_position - stream->dec_cpylen,",
          "281:         stream->dec_position - stream->dec_cpylen,",
          "",
          "[Removed Lines]",
          "278:      XPR(NT \"DECODE:%d: RUN at %\"Q\"u (winoffset %u) size %u\\n\",",
          "",
          "[Added Lines]",
          "279:      XPR(NT \"DECODE:%d: RUN at %\"Q\" (winoffset %\"Z\") size %\"Z\"\\n\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "453:   if ((source->onblk != blksize) &&",
          "454:       (blkoff + take > source->onblk))",
          "455:     {",
          "458:        block,",
          "459:        source->onblk,",
          "460:        blksize,",
          "",
          "[Removed Lines]",
          "456:       IF_DEBUG1 (XPR(NT \"[srcfile] short at blkno %\"Q\"u onblk \"",
          "457:        \"%u blksize %u blkoff %u take %u\\n\",",
          "",
          "[Added Lines]",
          "457:       IF_DEBUG1 (XPR(NT \"[srcfile] short at blkno %\"Q\" onblk \"",
          "458:        \"%\"Z\" blksize %\"Z\" blkoff %\"Z\" take %\"Z\"\\n\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "917:  stream->dec_state = DEC_CPYLEN;",
          "920:         stream->current_window));",
          "921:       }",
          "",
          "[Removed Lines]",
          "919:  IF_DEBUG2 (DP(RINT \"--------- TARGET WINDOW %\"Q\"u -----------\\n\",",
          "",
          "[Added Lines]",
          "920:  IF_DEBUG2 (DP(RINT \"--------- TARGET WINDOW %\"Q\" -----------\\n\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1073:      &src->cpyoff_blkoff);",
          "1075:    IF_DEBUG1(DP(RINT",
          "1078:          \"cpyblkoff %u \"",
          "1079:          \"blksize %u\\n\",",
          "1080:          stream->dec_cpyoff,",
          "",
          "[Removed Lines]",
          "1076:          \"decode cpyoff %\"Q\"u \"",
          "1077:          \"cpyblkno %\"Q\"u \"",
          "",
          "[Added Lines]",
          "1077:          \"decode cpyoff %\"Q\" \"",
          "1078:          \"cpyblkno %\"Q\" \"",
          "",
          "---------------"
        ],
        "xdelta3/xdelta3-djw.h||xdelta3/xdelta3-djw.h": [
          "File: xdelta3/xdelta3-djw.h -> xdelta3/xdelta3-djw.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "493:     {",
          "494:       IF_DEBUG2 (if (first_bits != total_bits)",
          "495:       {",
          "498:       });",
          "499:       return total_bits;",
          "500:     }",
          "",
          "[Removed Lines]",
          "496:  DP(RINT \"code length overflow changed %u bits\\n\",",
          "497:     (usize_t)(total_bits - first_bits));",
          "",
          "[Added Lines]",
          "496:  DP(RINT \"code length overflow changed %\"Z\" bits\\n\",",
          "497:     total_bits - first_bits);",
          "",
          "---------------"
        ],
        "xdelta3/xdelta3-main.h||xdelta3/xdelta3-main.h": [
          "File: xdelta3/xdelta3-main.h -> xdelta3/xdelta3-main.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "383:   XPR(NTR \"XD3_STDIO=%d\\n\", XD3_STDIO);",
          "384:   XPR(NTR \"XD3_WIN32=%d\\n\", XD3_WIN32);",
          "385:   XPR(NTR \"XD3_USE_LARGEFILE64=%d\\n\", XD3_USE_LARGEFILE64);",
          "386:   XPR(NTR \"XD3_DEFAULT_LEVEL=%d\\n\", XD3_DEFAULT_LEVEL);",
          "387:   XPR(NTR \"XD3_DEFAULT_IOPT_SIZE=%d\\n\", XD3_DEFAULT_IOPT_SIZE);",
          "388:   XPR(NTR \"XD3_DEFAULT_SPREVSZ=%d\\n\", XD3_DEFAULT_SPREVSZ);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "386:   XPR(NTR \"XD3_USE_LARGEWINDOW64=%d\\n\", XD3_USE_LARGEWINDOW64);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "611:       if (r >= 100 && r < 1000)",
          "612:  {",
          "614:    return buf->buf;",
          "615:  }",
          "",
          "[Removed Lines]",
          "613:    short_sprintf (*buf, \"%\"Q\"u %s\", r, fmts[i]);",
          "",
          "[Added Lines]",
          "614:    short_sprintf (*buf, \"%\"Q\" %s\", r, fmts[i]);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "711:   if (x < low)",
          "712:     {",
          "714:       return EXIT_FAILURE;",
          "715:     }",
          "716:   if (high != 0 && x > high)",
          "717:     {",
          "719:       return EXIT_FAILURE;",
          "720:     }",
          "721:   (*xo) = x;",
          "",
          "[Removed Lines]",
          "713:       XPR(NT \"-%c: minimum value: %\"Q\"u\\n\", which, low);",
          "718:       XPR(NT \"-%c: maximum value: %\"Q\"u\\n\", which, high);",
          "",
          "[Added Lines]",
          "714:       XPR(NT \"-%c: minimum value: %\"Q\"\\n\", which, low);",
          "719:       XPR(NT \"-%c: maximum value: %\"Q\"\\n\", which, high);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1105:     }",
          "1106:   else",
          "1107:     {",
          "1109:         ofile->filename, size); }",
          "1110:       ofile->nwrite += size;",
          "1111:     }",
          "",
          "[Removed Lines]",
          "1108:       if (option_verbose > 5) { XPR(NT \"write %s: %u bytes\\n\",",
          "",
          "[Added Lines]",
          "1109:       if (option_verbose > 5) { XPR(NT \"write %s: %\"Z\" bytes\\n\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1291:       if ((ret = xd3_decode_instruction (stream)))",
          "1292:  {",
          "1294:        stream->dec_winstart + size, stream->msg);",
          "1295:    return ret;",
          "1296:  }",
          "",
          "[Removed Lines]",
          "1293:    XPR(NT \"instruction decode error at %\"Q\"u: %s\\n\",",
          "",
          "[Added Lines]",
          "1294:    XPR(NT \"instruction decode error at %\"Q\": %s\\n\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1298:       addr_bytes = (usize_t)(stream->addr_sect.buf - addr_before);",
          "1299:       inst_bytes = (usize_t)(stream->inst_sect.buf - inst_before);",
          "1302:   option_print_cpymode ? code : 0,",
          "1303:   xd3_rtype_to_string ((xd3_rtype) stream->dec_current1.type,",
          "1304:          option_print_cpymode),",
          "",
          "[Removed Lines]",
          "1301:       VC(UT \"  %06\"Q\"u %03u  %s %6u\", stream->dec_winstart + size,",
          "",
          "[Added Lines]",
          "1302:       VC(UT \"  %06\"Q\" %03\"Z\"  %s %6\"Z,",
          "1303:   stream->dec_winstart + size,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1310:      {",
          "1311:        if (stream->dec_current1.addr >= stream->dec_cpylen)",
          "1312:   {",
          "1314:        stream->dec_current1.addr - stream->dec_cpylen)VE;",
          "1315:   }",
          "1316:        else",
          "1317:   {",
          "1319:        stream->dec_cpyoff + stream->dec_current1.addr)VE;",
          "1320:   }",
          "1321:      }",
          "",
          "[Removed Lines]",
          "1313:     VC(UT \" T@%-6u\",",
          "1318:     VC(UT \" S@%-6\"Q\"u\",",
          "",
          "[Added Lines]",
          "1315:     VC(UT \" T@%-6\"Z,",
          "1320:     VC(UT \" S@%-6\"Q,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1330:       if (stream->dec_current2.type != XD3_NOOP)",
          "1331:  {",
          "1333:       xd3_rtype_to_string ((xd3_rtype) stream->dec_current2.type,",
          "1334:       option_print_cpymode),",
          "1335:       stream->dec_current2.size)VE;",
          "",
          "[Removed Lines]",
          "1332:    VC(UT \"  %s %6u\",",
          "",
          "[Added Lines]",
          "1334:    VC(UT \"  %s %6\"Z,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1338:      {",
          "1339:        if (stream->dec_current2.addr >= stream->dec_cpylen)",
          "1340:   {",
          "1342:        stream->dec_current2.addr - stream->dec_cpylen)VE;",
          "1343:   }",
          "1344:        else",
          "1345:   {",
          "1347:        stream->dec_cpyoff + stream->dec_current2.addr)VE;",
          "1348:   }",
          "1349:      }",
          "",
          "[Removed Lines]",
          "1341:     VC(UT \" T@%-6u\",",
          "1346:     VC(UT \" S@%-6\"Q\"u\",",
          "",
          "[Added Lines]",
          "1343:     VC(UT \" T@%-6\"Q,",
          "1348:     VC(UT \" S@%-6\"Q\"\",",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1358:    (stream->dec_current1.type >= XD3_CPY ||",
          "1359:     stream->dec_current2.type >= XD3_CPY))",
          "1360:  {",
          "1362:       stream->dec_winstart + size_before,",
          "1363:       size - size_before,",
          "1364:       addr_bytes + inst_bytes)VE;",
          "",
          "[Removed Lines]",
          "1361:    VC(UT \"  %06\"Q\"u (inefficiency) %u encoded as %u bytes\\n\",",
          "",
          "[Added Lines]",
          "1363:    VC(UT \"  %06\"Q\" (inefficiency) %\"Z\" encoded as %\"Z\" bytes\\n\",",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1426:   if (stream->dec_winstart == 0)",
          "1427:     {",
          "1428:       VC(UT \"VCDIFF version:               0\\n\")VE;",
          "1430:   stream->dec_hdrsize)VE;",
          "1431:       VC(UT \"VCDIFF header indicator:      \")VE;",
          "1432:       if ((stream->dec_hdr_ind & VCD_SECONDARY) != 0)",
          "",
          "[Removed Lines]",
          "1429:       VC(UT \"VCDIFF header size:           %d\\n\",",
          "",
          "[Added Lines]",
          "1431:       VC(UT \"VCDIFF header size:           %\"Z\"\\n\",",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1481:       VC(UT \"\\n\")VE;",
          "1482:     }",
          "1485:   VC(UT \"VCDIFF window indicator:      \")VE;",
          "1486:   if ((stream->dec_win_ind & VCD_SOURCE) != 0) VC(UT \"VCD_SOURCE \")VE;",
          "1487:   if ((stream->dec_win_ind & VCD_TARGET) != 0) VC(UT \"VCD_TARGET \")VE;",
          "",
          "[Removed Lines]",
          "1484:   VC(UT \"VCDIFF window number:         %\"Q\"u\\n\", stream->current_window)VE;",
          "",
          "[Added Lines]",
          "1486:   VC(UT \"VCDIFF window number:         %\"Q\"\\n\", stream->current_window)VE;",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "1492:   if ((stream->dec_win_ind & VCD_ADLER32) != 0)",
          "1493:     {",
          "1494:       VC(UT \"VCDIFF adler32 checksum:      %08X\\n\",",
          "1496:     }",
          "1498:   if (stream->dec_del_ind != 0)",
          "",
          "[Removed Lines]",
          "1495:   (usize_t)stream->dec_adler32)VE;",
          "",
          "[Added Lines]",
          "1497:   stream->dec_adler32)VE;",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "1508:   if (stream->dec_winstart != 0)",
          "1509:     {",
          "1511:     }",
          "1513:   if (SRCORTGT (stream->dec_win_ind))",
          "1514:     {",
          "1518:   stream->dec_cpyoff)VE;",
          "1519:     }",
          "1522:      (usize_t)stream->dec_enclen)VE;",
          "1524:      (usize_t)stream->dec_tgtlen)VE;",
          "1527:      (usize_t)stream->data_sect.size)VE;",
          "1529:      (usize_t)stream->inst_sect.size)VE;",
          "1531:      (usize_t)stream->addr_sect.size)VE;",
          "1533:   ret = 0;",
          "",
          "[Removed Lines]",
          "1510:       VC(UT \"VCDIFF window at offset:      %\"Q\"u\\n\", stream->dec_winstart)VE;",
          "1515:       VC(UT \"VCDIFF copy window length:    %u\\n\",",
          "1516:   (usize_t)stream->dec_cpylen)VE;",
          "1517:       VC(UT \"VCDIFF copy window offset:    %\"Q\"u\\n\",",
          "1521:   VC(UT \"VCDIFF delta encoding length: %u\\n\",",
          "1523:   VC(UT \"VCDIFF target window length:  %u\\n\",",
          "1526:   VC(UT \"VCDIFF data section length:   %u\\n\",",
          "1528:   VC(UT \"VCDIFF inst section length:   %u\\n\",",
          "1530:   VC(UT \"VCDIFF addr section length:   %u\\n\",",
          "",
          "[Added Lines]",
          "1512:       VC(UT \"VCDIFF window at offset:      %\"Q\"\\n\", stream->dec_winstart)VE;",
          "1517:       VC(UT \"VCDIFF copy window length:    %\"Z\"\\n\",",
          "1518:   stream->dec_cpylen)VE;",
          "1519:       VC(UT \"VCDIFF copy window offset:    %\"Q\"\\n\",",
          "1523:   VC(UT \"VCDIFF delta encoding length: %\"Z\"\\n\",",
          "1525:   VC(UT \"VCDIFF target window length:  %\"Z\"\\n\",",
          "1528:   VC(UT \"VCDIFF data section length:   %\"Z\"\\n\",",
          "1530:   VC(UT \"VCDIFF inst section length:   %\"Z\"\\n\",",
          "1532:   VC(UT \"VCDIFF addr section length:   %\"Z\"\\n\",",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1967:     XD3_ASSERT (inst->addr >= window_start);",
          "1968:     addr = inst->addr - window_start;",
          "1969:   }",
          "1972:        if ((ret = xd3_found_match (recode_stream, window_pos, take,",
          "1973:        addr, inst->mode != 0)))",
          "1974:   {",
          "",
          "[Removed Lines]",
          "1970:        IF_DEBUG2 (XPR(NTR \"[merge copy] winpos %u take %u addr %\"Q\"u mode %u\\n\",",
          "1971:        window_pos, take, addr, inst->mode));",
          "",
          "[Added Lines]",
          "1972:        IF_DEBUG2 ({",
          "1973:     XPR(NTR \"[merge copy] winpos %\"Z\" take %\"Z\" \"",
          "1974:         \"addr %\"Q\" mode %u\\n\",",
          "1975:         window_pos, take, addr, inst->mode);",
          "1976:   });",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "2244:   if (option_verbose && skipped != 0)",
          "2245:     {",
          "2247:    skipped, ifile->filename);",
          "2248:     }",
          "2249:   return 0;",
          "",
          "[Removed Lines]",
          "2246:       XPR(NT \"skipping %\"Q\"u bytes in %s\\n\",",
          "",
          "[Added Lines]",
          "2251:       XPR(NT \"skipping %\"Q\" bytes in %s\\n\",",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "3041:  {",
          "3042:    const char *s = option_smatch_config;",
          "3043:    char *e;",
          "3045:    int got;",
          "3047:    config.smatch_cfg = XD3_SMATCH_SOFT;",
          "",
          "[Removed Lines]",
          "3044:    usize_t values[XD3_SOFTCFG_VARCNT];",
          "",
          "[Added Lines]",
          "3049:    long values[XD3_SOFTCFG_VARCNT];",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "3285:       if (option_verbose && ! xd3_encoder_used_source (& stream))",
          "3286:         {",
          "3288:        \"no source copies\\n\",",
          "3289:        stream.current_window * winsize,",
          "3290:        (stream.current_window+1) * winsize);",
          "",
          "[Removed Lines]",
          "3287:    XPR(NT \"warning: input window %\"Q\"u..%\"Q\"u has \"",
          "",
          "[Added Lines]",
          "3292:    XPR(NT \"warning: input window %\"Q\"..%\"Q\" has \"",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "3297:    stream.srcwin_decided_early &&",
          "3298:    stream.i_slots_used > stream.iopt_size)",
          "3299:         {",
          "3302:        \"consider changing -I\\n\",",
          "3303:        stream.current_window * winsize,",
          "3304:        stream.i_slots_used, stream.iopt_size);",
          "",
          "[Removed Lines]",
          "3300:    XPR(NT \"warning: input position %\"Q\"u overflowed \"",
          "3301:        \"instruction buffer, needed %u (vs. %u), \"",
          "",
          "[Added Lines]",
          "3305:    XPR(NT \"warning: input position %\"Q\" overflowed \"",
          "3306:        \"instruction buffer, needed %\"Z\" (vs. %\"Z\"), \"",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "3322:       if (option_verbose > 1)",
          "3323:         {",
          "3325:        \"total in %s: out %s: %s: srcpos %s\\n\",",
          "3326:        stream.current_window,",
          "3327:        main_format_bcnt (this_read, &rdb),",
          "",
          "[Removed Lines]",
          "3324:    XPR(NT \"%\"Q\"u: in %s (%s): out %s (%s): \"",
          "",
          "[Added Lines]",
          "3329:    XPR(NT \"%\"Q\": in %s (%s): out %s (%s): \"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "3335:         }",
          "3336:       else",
          "3337:         {",
          "3339:        \"out %s: %s\\n\",",
          "3340:         stream.current_window,",
          "3341:        main_format_bcnt (this_read, &rdb),",
          "",
          "[Removed Lines]",
          "3338:    XPR(NT \"%\"Q\"u: in %s: out %s: total in %s: \"",
          "",
          "[Added Lines]",
          "3343:    XPR(NT \"%\"Q\": in %s: out %s: total in %s: \"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "3422:   if (option_verbose > 1 && cmd == CMD_ENCODE)",
          "3423:     {",
          "3424:       XPR(NT \"scanner configuration: %s\\n\", stream.smatcher.name);",
          "3426:       if (sfile != NULL && sfile->filename != NULL)",
          "3427:  {",
          "3429:  }",
          "3430:     }",
          "3432:   if (option_verbose > 2 && cmd == CMD_ENCODE)",
          "3433:     {",
          "3435:    stream.n_scpy, stream.l_scpy);",
          "3437:    stream.n_tcpy, stream.l_tcpy);",
          "3440:     }",
          "3441: #endif",
          "",
          "[Removed Lines]",
          "3425:       XPR(NT \"target hash table size: %u\\n\", stream.small_hash.size);",
          "3428:    XPR(NT \"source hash table size: %u\\n\", stream.large_hash.size);",
          "3434:       XPR(NT \"source copies: %\"Q\"u (%\"Q\"u bytes)\\n\",",
          "3436:       XPR(NT \"target copies: %\"Q\"u (%\"Q\"u bytes)\\n\",",
          "3438:       XPR(NT \"adds: %\"Q\"u (%\"Q\"u bytes)\\n\", stream.n_add, stream.l_add);",
          "3439:       XPR(NT \"runs: %\"Q\"u (%\"Q\"u bytes)\\n\", stream.n_run, stream.l_run);",
          "",
          "[Added Lines]",
          "3430:       XPR(NT \"target hash table size: %\"Z\"\\n\", stream.small_hash.size);",
          "3433:    XPR(NT \"source hash table size: %\"Z\"\\n\", stream.large_hash.size);",
          "3439:       XPR(NT \"source copies: %\"Q\" (%\"Q\" bytes)\\n\",",
          "3441:       XPR(NT \"target copies: %\"Q\" (%\"Q\" bytes)\\n\",",
          "3443:       XPR(NT \"adds: %\"Q\" (%\"Q\" bytes)\\n\", stream.n_add, stream.l_add);",
          "3444:       XPR(NT \"runs: %\"Q\" (%\"Q\" bytes)\\n\", stream.n_run, stream.l_run);",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "3448:       long end_time = get_millisecs_now ();",
          "3449:       xoff_t nwrite = ofile != NULL ? ofile->nwrite : 0;",
          "3452:    main_format_millis (end_time - start_time, &tm),",
          "3453:    ifile->nread, nwrite, 100.0 * nwrite / ifile->nread);",
          "3454:     }",
          "",
          "[Removed Lines]",
          "3451:       XPR(NT \"finished in %s; input %\"Q\"u output %\"Q\"u bytes (%0.2f%%)\\n\",",
          "",
          "[Added Lines]",
          "3456:       XPR(NT \"finished in %s; input %\"Q\" output %\"Q\" bytes (%0.2f%%)\\n\",",
          "",
          "---------------"
        ],
        "xdelta3/xdelta3-second.h||xdelta3/xdelta3-second.h": [
          "File: xdelta3/xdelta3-second.h -> xdelta3/xdelta3-second.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "122:         xd3_desect      *sect,",
          "123:         xd3_sec_stream **sec_streamp)",
          "124: {",
          "126:   uint8_t *out_used;",
          "127:   int ret;",
          "",
          "[Removed Lines]",
          "125:   uint32_t dec_size;",
          "",
          "[Added Lines]",
          "125:   usize_t dec_size;",
          "",
          "---------------"
        ],
        "xdelta3/xdelta3-test.h||xdelta3/xdelta3-test.h": [
          "File: xdelta3/xdelta3-test.h -> xdelta3/xdelta3-test.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "139: static char   TEST_COPY_FILE[TESTFILESIZE];",
          "140: static char   TEST_NOPERM_FILE[TESTFILESIZE];",
          "144: #if SHELL_TESTS",
          "",
          "[Removed Lines]",
          "142: #define CHECK(cond) if (!(cond)) { XPR(NT \"check failure: \" #cond); abort(); }",
          "",
          "[Added Lines]",
          "142: #define CHECK(cond)      \\",
          "143:   if (!(cond)) {      \\",
          "144:     XPR(NT __FILE__\":%d: check failure: \" #cond, __LINE__); \\",
          "145:     abort(); }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "200:   for (i = 0; i < n_rounds; i += 1)",
          "201:     {",
          "203:     }",
          "205:   average = (double) sum / (double) n_rounds;",
          "",
          "[Removed Lines]",
          "202:       sum += mt_exp_rand (mean, USIZE_T_MAX);",
          "",
          "[Added Lines]",
          "205:       sum += mt_exp_rand (mean, UINT32_MAX);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "411:  {",
          "412:    if (obuf[i] != rbuf[i])",
          "413:       {",
          "415:     (int)i, (int)oc, offset, obuf[i], rbuf[i]);",
          "416:        diffs++;",
          "417:        return XD3_INTERNAL;",
          "",
          "[Removed Lines]",
          "414:        XPR(NT \"byte %u (read %u @ %\"Q\"u) %d != %d\\n\",",
          "",
          "[Added Lines]",
          "417:        XPR(NT \"byte %u (read %u @ %\"Q\") %d != %d\\n\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "678:   for (i = 0; i < 256; i++)",
          "679:     {",
          "681:     }",
          "683:   for (i = 0; i < 255; i++)",
          "684:     {",
          "685:       buf2[i] = 1;",
          "687:       buf2[i] = 0;",
          "688:     }",
          "",
          "[Removed Lines]",
          "680:       CHECK(xd3_forward_match(buf1, buf2, i) == (int)i);",
          "686:       CHECK(xd3_forward_match(buf1, buf2, 256) == (int)i);",
          "",
          "[Added Lines]",
          "683:       CHECK(xd3_forward_match(buf1, buf2, i) == i);",
          "689:       CHECK(xd3_forward_match(buf1, buf2, 256) == i);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "732:       usize_t prev_i;",
          "733:       usize_t nearby;",
          "736:       prev_i    = mt_random (&static_mtrand) % offset;",
          "737:       nearby    = (mt_random (&static_mtrand) % 256) % offset;",
          "738:       nearby    = max (1U, nearby);",
          "",
          "[Removed Lines]",
          "735:       p         = (mt_random (&static_mtrand) / (double)USIZE_T_MAX);",
          "",
          "[Added Lines]",
          "738:       p         = (mt_random (&static_mtrand) / (double)UINT32_MAX);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "764:   for (offset = 1; offset < ADDR_CACHE_ROUNDS; offset += 1)",
          "765:     {",
          "770:       if (addr != addrs[offset])",
          "771:  {",
          "",
          "[Removed Lines]",
          "766:       uint32_t addr;",
          "768:       if ((ret = xd3_decode_address (stream, offset, modes[offset], & buf, buf_max, & addr))) { return ret; }",
          "",
          "[Added Lines]",
          "769:       usize_t addr;",
          "771:       if ((ret = xd3_decode_address (stream, offset, modes[offset],",
          "772:          & buf, buf_max, & addr)))",
          "773:  {",
          "774:    return ret;",
          "775:  }",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1391:    if ((ret = sec->encode (stream, enc_stream,",
          "1392:       in_head, out_head, & cfg)))",
          "1393:      {",
          "1395:        goto fail;",
          "1396:      }",
          "",
          "[Removed Lines]",
          "1394:        XPR(NT \"test %u: encode: %s\", test_i, stream->msg);",
          "",
          "[Added Lines]",
          "1401:        XPR(NT \"test %\"Z\": encode: %s\", test_i, stream->msg);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1430:          compress_size, dec_input,",
          "1431:          dec_correct, dec_output)))",
          "1432:      {",
          "1434:        goto fail;",
          "1435:      }",
          "",
          "[Removed Lines]",
          "1433:        XPR(NT \"test %u: decode: %s\", test_i, stream->msg);",
          "",
          "[Added Lines]",
          "1440:        XPR(NT \"test %\"Z\": decode: %s\", test_i, stream->msg);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1759:       if (ratio >= TEST_ADD_RATIO + TEST_EPSILON)",
          "1760:  {",
          "1761:    XPR(NT \"test encode with size ratio %.4f, \"",
          "1763:      ratio, TEST_ADD_RATIO + TEST_EPSILON, dsize, tsize);",
          "1764:    stream->msg = \"strange encoding\";",
          "1765:    return XD3_INTERNAL;",
          "",
          "[Removed Lines]",
          "1762:       \"expected < %.4f (%\"Q\"u, %\"Q\"u)\\n\",",
          "",
          "[Added Lines]",
          "1769:       \"expected < %.4f (%\"Q\", %\"Q\")\\n\",",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2645:      default: CHECK(0);",
          "2646:      }",
          "2649:     inst->pos, inst->size);",
          "2650:    rptr += strlen (rptr);",
          "2652:    if (inst->type == XD3_CPY)",
          "2653:      {",
          "2656:        rptr += strlen (rptr);",
          "2657:      }",
          "",
          "[Removed Lines]",
          "2648:    snprintf_func (rptr, rbuf+TESTBUFSIZE-rptr, \"%d/%d\",",
          "2655:        snprintf_func (rptr, rbuf+TESTBUFSIZE-rptr, \"%\"Q\"d\", inst->addr);",
          "",
          "[Added Lines]",
          "2655:    snprintf_func (rptr, rbuf+TESTBUFSIZE-rptr, \"%\"Z\"/%\"Z\"\",",
          "2662:        snprintf_func (rptr, rbuf+TESTBUFSIZE-rptr, \"%\"Q, inst->addr);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2669:       if (strcmp (rbuf, test->result) != 0)",
          "2670:  {",
          "2672:    stream->msg = \"wrong result\";",
          "2673:    return XD3_INTERNAL;",
          "2674:  }",
          "",
          "[Removed Lines]",
          "2671:    XPR(NT \"test %u: expected %s: got %s\", i, test->result, rbuf);",
          "",
          "[Added Lines]",
          "2678:    XPR(NT \"test %\"Z\": expected %s: got %s\", i, test->result, rbuf);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2746: static int",
          "2747: test_source_cksum_offset (xd3_stream *stream, int ignore)",
          "2748: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2753: #if !XD3_USE_LARGEWINDOW64",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2868:   DO_TEST (in_memory, 0, 0);",
          "2870:   DO_TEST (iopt_flush_instructions, 0, 0);",
          "2871:   DO_TEST (source_cksum_offset, 0, 0);",
          "2873:   DO_TEST (decompress_single_bit_error, 0, 3);",
          "2874:   DO_TEST (decompress_single_bit_error, XD3_ADLER32, 3);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2880: #if !XD3_USE_LARGEWINDOW64",
          "2882: #endif",
          "",
          "---------------"
        ],
        "xdelta3/xdelta3.c||xdelta3/xdelta3.c": [
          "File: xdelta3/xdelta3.c -> xdelta3/xdelta3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1644: static int",
          "1645: xd3_decode_address (xd3_stream *stream, usize_t here,",
          "1646:       usize_t mode, const uint8_t **inpp,",
          "1648: {",
          "1649:   int ret;",
          "1650:   usize_t same_start = 2 + stream->acache.s_near;",
          "",
          "[Removed Lines]",
          "1647:       const uint8_t *max, uint32_t *valp)",
          "",
          "[Added Lines]",
          "1647:       const uint8_t *max, usize_t *valp)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2164:       ret = stream->getblk (stream, source, blkno);",
          "2165:       if (ret != 0)",
          "2166:  {",
          "2168:    blkno, xd3_strerror (ret)));",
          "2169:    return ret;",
          "2170:  }",
          "2172:       \"%u blksize %u\\n\", blkno, source->onblk, source->blksize));",
          "2173:     }",
          "",
          "[Removed Lines]",
          "2167:    IF_DEBUG1 (DP(RINT \"[getblk] app error blkno %\"Q\"u: %s\\n\",",
          "2171:       IF_DEBUG2 (DP(RINT \"[getblk] read source block %\"Q\"u onblk \"",
          "",
          "[Added Lines]",
          "2167:    IF_DEBUG1 (DP(RINT \"[getblk] app error blkno %\"Q\": %s\\n\",",
          "2171:       IF_DEBUG2 (DP(RINT \"[getblk] read source block %\"Q\" onblk \"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2184:  {",
          "2185:    source->frontier_blkno = blkno + 1;",
          "2189:    blkno,",
          "2190:    xd3_source_eof (source)));",
          "2191:  }",
          "",
          "[Removed Lines]",
          "2187:    IF_DEBUG2 (DP(RINT \"[getblk] full source blkno %\"Q\"u: \"",
          "2188:    \"source length unknown %\"Q\"u\\n\",",
          "",
          "[Added Lines]",
          "2187:    IF_DEBUG2 (DP(RINT \"[getblk] full source blkno %\"Q\": \"",
          "2188:    \"source length unknown %\"Q\"\\n\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2194:    if (!source->eof_known)",
          "2195:      {",
          "2196:        IF_DEBUG2 (DP(RINT \"[getblk] eof block has %d bytes; \"",
          "2198:        xd3_bytes_on_srcblk (source, blkno),",
          "2199:        xd3_source_eof (source)));",
          "2200:        source->eof_known = 1;",
          "",
          "[Removed Lines]",
          "2197:        \"source length known %\"Q\"u\\n\",",
          "",
          "[Added Lines]",
          "2197:        \"source length known %\"Q\"\\n\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2264:   if (ret == 0)",
          "2265:     {",
          "2266:       stream->src->eof_known = 1;",
          "2268:       source_size));",
          "2270:       xd3_blksize_div(source_size,",
          "",
          "[Removed Lines]",
          "2267:       IF_DEBUG2 (DP(RINT \"[set source] size known %\"Q\"u\\n\",",
          "",
          "[Added Lines]",
          "2267:       IF_DEBUG2 (DP(RINT \"[set source] size known %\"Q\"\\n\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2475:  IF_DEBUG2 ({",
          "2476:    static int cnt;",
          "2478:      cnt++,",
          "2479:      stream->total_in + inst->pos,",
          "2480:      stream->total_in + inst->pos + inst->size,",
          "",
          "[Removed Lines]",
          "2477:    DP(RINT \"[iopt copy:%d] pos %\"Q\"u-%\"Q\"u addr %\"Q\"u-%\"Q\"u size %u\\n\",",
          "",
          "[Added Lines]",
          "2477:    DP(RINT \"[iopt copy:%d] pos %\"Q\"-%\"Q\" addr %\"Q\"-%\"Q\" size %u\\n\",",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2494:  IF_DEBUG2 ({",
          "2495:    static int cnt;",
          "2497:  });",
          "2498:  break;",
          "2499:       }",
          "",
          "[Removed Lines]",
          "2496:    DP(RINT \"[iopt run:%d] pos %\"Q\"u size %u\\n\", cnt++, stream->total_in + inst->pos, inst->size);",
          "",
          "[Added Lines]",
          "2496:    DP(RINT \"[iopt run:%d] pos %\"Q\" size %u\\n\", cnt++, stream->total_in + inst->pos, inst->size);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2508:  IF_DEBUG2 ({",
          "2509:    static int cnt;",
          "2511:  });",
          "2513:  break;",
          "",
          "[Removed Lines]",
          "2510:    DP(RINT \"[iopt add:%d] pos %\"Q\"u size %u\\n\", cnt++, stream->total_in + inst->pos, inst->size);",
          "",
          "[Added Lines]",
          "2510:    DP(RINT \"[iopt add:%d] pos %\"Q\" size %u\\n\", cnt++, stream->total_in + inst->pos, inst->size);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3411:       stream->enc_state = ENC_SEARCH;",
          "3414:       stream->current_window, stream->avail_in,",
          "3415:       stream->total_in));",
          "3416:       return XD3_WINSTART;",
          "",
          "[Removed Lines]",
          "3413:       IF_DEBUG2 (DP(RINT \"[WINSTART:%\"Q\"u] input bytes %u offset %\"Q\"u\\n\",",
          "",
          "[Added Lines]",
          "3413:       IF_DEBUG2 (DP(RINT \"[WINSTART:%\"Q\"] input bytes %u offset %\"Q\"\\n\",",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3551:       stream->total_in += (xoff_t) stream->avail_in;",
          "3552:       stream->enc_state = ENC_POSTWIN;",
          "3555:       stream->current_window,",
          "3556:       stream->total_in));",
          "3557:       return XD3_WINFINISH;",
          "",
          "[Removed Lines]",
          "3554:       IF_DEBUG2 (DP(RINT \"[WINFINISH:%\"Q\"u] in=%\"Q\"u\\n\",",
          "",
          "[Added Lines]",
          "3554:       IF_DEBUG2 (DP(RINT \"[WINFINISH:%\"Q\"] in=%\"Q\"\\n\",",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "4004:   frontier_pos = stream->src->frontier_blkno * stream->src->blksize;",
          "4007:         frontier_pos, srcpos, stream->src->max_winsize));",
          "4008:   if (srcpos < frontier_pos &&",
          "4009:       frontier_pos - srcpos > stream->src->max_winsize) {",
          "4010:     IF_DEBUG1(DP(RINT \"[match_setup] rejected due to src->max_winsize \"",
          "4012:    xd3_source_eof (stream->src),",
          "4013:    srcpos, stream->src->max_winsize));",
          "4014:     goto bad;",
          "",
          "[Removed Lines]",
          "4005:   IF_DEBUG2(DP(RINT \"[match_setup] frontier_pos %\"Q\"u, srcpos %\"Q\"u, \"",
          "4006:         \"src->max_winsize %\"Q\"u\\n\",",
          "4011:    \"distance eof=%\"Q\"u srcpos=%\"Q\"u maxsz=%\"Q\"u\\n\",",
          "",
          "[Added Lines]",
          "4005:   IF_DEBUG2(DP(RINT \"[match_setup] frontier_pos %\"Q\", srcpos %\"Q\", \"",
          "4006:         \"src->max_winsize %\"Q\"\\n\",",
          "4011:    \"distance eof=%\"Q\" srcpos=%\"Q\" maxsz=%\"Q\"\\n\",",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "4065:  }",
          "4067:       IF_DEBUG2(DP(RINT",
          "4069:      \"unrestricted maxback %u maxfwd %u\\n\",",
          "4070:      srcpos,",
          "4071:      stream->total_in + stream->input_position,",
          "",
          "[Removed Lines]",
          "4068:      \"[match_setup] srcpos %\"Q\"u (tgtpos %\"Q\"u) \"",
          "",
          "[Added Lines]",
          "4068:      \"[match_setup] srcpos %\"Q\" (tgtpos %\"Q\") \"",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "4101:  }",
          "4103:       IF_DEBUG1(DP(RINT",
          "4105:      \"restricted maxback %u maxfwd %u\\n\",",
          "4106:      srcpos,",
          "4107:      stream->total_in + stream->input_position,",
          "",
          "[Removed Lines]",
          "4104:      \"[match_setup] srcpos %\"Q\"u (tgtpos %\"Q\"u) \"",
          "",
          "[Added Lines]",
          "4104:      \"[match_setup] srcpos %\"Q\" (tgtpos %\"Q\") \"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "4181:   usize_t matched;",
          "4184:         stream->match_srcpos));",
          "4186:   XD3_ASSERT (src != NULL);",
          "",
          "[Removed Lines]",
          "4183:   IF_DEBUG2(DP(RINT \"[extend match] srcpos %\"Q\"u\\n\",",
          "",
          "[Added Lines]",
          "4183:   IF_DEBUG2(DP(RINT \"[extend match] srcpos %\"Q\"\\n\",",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "4219:    tryrem = min (tryoff, stream->match_maxback - stream->match_back);",
          "4222:          stream->match_maxback, tryblk, tryoff, streamoff, tryrem));",
          "",
          "[Removed Lines]",
          "4221:    IF_DEBUG2(DP(RINT \"[maxback] maxback %u trysrc %\"Q\"u/%u tgt %u tryrem %u\\n\",",
          "",
          "[Added Lines]",
          "4221:    IF_DEBUG2(DP(RINT \"[maxback] maxback %u trysrc %\"Q\"/%u tgt %u tryrem %u\\n\",",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "4340:       IF_DEBUG2 ({",
          "4341:  static int x = 0;",
          "4343:     x++,",
          "4344:     stream->total_in + target_position,",
          "4345:     stream->total_in + target_position + match_length,",
          "",
          "[Removed Lines]",
          "4342:  DP(RINT \"[source match:%d] <inp %\"Q\"u %\"Q\"u>  <src %\"Q\"u %\"Q\"u> (%s) [ %u bytes ]\\n\",",
          "",
          "[Added Lines]",
          "4342:  DP(RINT \"[source match:%d] <inp %\"Q\" %\"Q\">  <src %\"Q\" %\"Q\"> (%s) [ %u bytes ]\\n\",",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4666:         ret = XD3_INTERNAL;",
          "4667:      }",
          "4668:    IF_DEBUG1 (DP(RINT",
          "4670:    blkno));",
          "4671:    return ret;",
          "4672:  }",
          "4674:       IF_DEBUG1 (DP(RINT",
          "4676:       stream->total_in + stream->input_position,",
          "4677:       logical_input_cksum_pos,",
          "4678:       stream->srcwin_cksum_pos,",
          "",
          "[Removed Lines]",
          "4669:    \"[srcwin_move_point] async getblk return for %\"Q\"u\\n\",",
          "4675:       \"[srcwin_move_point] T=%\"Q\"u{%\"Q\"u} S=%\"Q\"u EOF=%\"Q\"u %s\\n\",",
          "",
          "[Added Lines]",
          "4669:    \"[srcwin_move_point] async getblk return for %\"Q\"\\n\",",
          "4675:       \"[srcwin_move_point] T=%\"Q\"{%\"Q\"} S=%\"Q\" EOF=%\"Q\" %s\\n\",",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "4720:     }",
          "4722:   IF_DEBUG1 (DP(RINT",
          "4725:   stream->total_in + stream->input_position,",
          "4726:   logical_input_cksum_pos,",
          "4727:   stream->srcwin_cksum_pos,",
          "",
          "[Removed Lines]",
          "4723:   \"[srcwin_move_point] exited loop T=%\"Q\"u{%\"Q\"u} \"",
          "4724:   \"S=%\"Q\"u EOF=%\"Q\"u %s\\n\",",
          "",
          "[Added Lines]",
          "4723:   \"[srcwin_move_point] exited loop T=%\"Q\"{%\"Q\"} \"",
          "4724:   \"S=%\"Q\" EOF=%\"Q\" %s\\n\",",
          "",
          "---------------"
        ],
        "xdelta3/xdelta3.h||xdelta3/xdelta3.h": [
          "File: xdelta3/xdelta3.h -> xdelta3/xdelta3.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "101: #define XD3_USE_LARGEFILE64 1",
          "102: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105: #ifndef XD3_USE_LARGEWINDOW64",
          "106: #define XD3_USE_LARGEWINDOW64 0",
          "107: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "111: #ifndef _WIN32",
          "112: #include <stdint.h>",
          "113: #else",
          "114: #define WIN32_LEAN_AND_MEAN",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117: #define __STDC_FORMAT_MACROS",
          "118: #include <inttypes.h>",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "142: #endif",
          "143: #endif",
          "147: #if XD3_USE_LARGEFILE64",
          "149: #ifndef _LARGEFILE_SOURCE",
          "",
          "[Removed Lines]",
          "145: typedef uint32_t usize_t;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "153: #define _FILE_OFFSET_BITS 64",
          "154: #endif",
          "157: #define SIZEOF_XOFF_T 8",
          "167: #endif",
          "170: #define SIZEOF_XOFF_T 4",
          "171: #define SIZEOF_USIZE_T 4",
          "173: #endif",
          "175: #define USE_UINT32 (SIZEOF_USIZE_T == 4 || \\",
          "",
          "[Removed Lines]",
          "156: typedef uint64_t xoff_t;",
          "158: #define SIZEOF_USIZE_T 4",
          "159: #ifndef WIN32",
          "160: #if SIZEOF_SIZE_T == 8",
          "161: #define Q \"z\"",
          "162: #else",
          "163: #define Q \"ll\"",
          "164: #endif",
          "165: #else",
          "166: #define Q \"I64\"",
          "168: #else",
          "169: typedef uint32_t xoff_t;",
          "172: #define Q",
          "",
          "[Added Lines]",
          "162: typedef uint64_t xoff_t;",
          "164: #ifndef _WIN32",
          "165: #define Q PRIu64",
          "168: #define Q \"I64u\"",
          "175: typedef uint32_t xoff_t;",
          "177: #define Q \"u\"",
          "182: #if XD3_USE_LARGEWINDOW64",
          "184: #if !XD3_USE_LARGEFILE64",
          "185: #error \"Invalid configuration\"",
          "186: #endif",
          "188: #define SIZEOF_USIZE_T 8",
          "189: typedef uint64_t usize_t;",
          "191: #define Z Q",
          "195: typedef uint32_t usize_t;",
          "197: #define Z \"u\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "304: #if XD3_DEBUG",
          "308: #else",
          "309: #define XD3_ASSERT(x) (void)0",
          "",
          "[Removed Lines]",
          "305: #define XD3_ASSERT(x) \\",
          "306:     do { if (! (x)) { DP(RINT \"%s:%d: XD3 assertion failed: %s\\n\", __FILE__, __LINE__, #x); \\",
          "307:     abort (); } } while (0)",
          "",
          "[Added Lines]",
          "330: #define XD3_ASSERT(x)         \\",
          "331:   do {           \\",
          "332:     if (! (x)) {         \\",
          "333:       DP(RINT \"%s:%d: XD3 assertion failed: %s\\n\",   \\",
          "334:   __FILE__, __LINE__, #x);       \\",
          "335:       abort (); } } while (0)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "557: struct _xd3_hinst",
          "558: {",
          "562: };",
          "",
          "[Removed Lines]",
          "559:   uint8_t     type;",
          "",
          "[Added Lines]",
          "587:   uint8_t    type;",
          "588:   usize_t    size;",
          "589:   usize_t    addr;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "585: {",
          "586:   const uint8_t *buf;",
          "587:   const uint8_t *buf_max;",
          "589:   usize_t        pos;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "616:   usize_t        size;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "909:   uint8_t          *dec_appheader;    /* Optional application header:",
          "",
          "[Removed Lines]",
          "907:   uint32_t          dec_appheadsz;    /* Optional application header:",
          "",
          "[Added Lines]",
          "933:   usize_t           dec_appheadsz;    /* Optional application header:",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "921:   xoff_t             dec_cpyoff;       /* offset of copy window",
          "928: #if USE_UINT64",
          "",
          "[Removed Lines]",
          "919:   uint32_t           dec_cpylen;       /* length of copy window",
          "",
          "[Added Lines]",
          "944:   usize_t            dec_cpylen;       /* length of copy window",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "db89f26dec16ef999a782a1f90ec2e58e674e2b1",
      "candidate_info": {
        "commit_hash": "db89f26dec16ef999a782a1f90ec2e58e674e2b1",
        "repo": "jmacd/xdelta-devel",
        "commit_url": "https://github.com/jmacd/xdelta-devel/commit/db89f26dec16ef999a782a1f90ec2e58e674e2b1",
        "files": [
          "xdelta3/xdelta3-blkcache.h",
          "xdelta3/xdelta3-main.h",
          "xdelta3/xdelta3-test.h"
        ],
        "message": "Use W printf insert for 32- or 64-bit usize_t",
        "before_after_code_files": [
          "xdelta3/xdelta3-blkcache.h||xdelta3/xdelta3-blkcache.h",
          "xdelta3/xdelta3-main.h||xdelta3/xdelta3-main.h",
          "xdelta3/xdelta3-test.h||xdelta3/xdelta3-test.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "xdelta3/xdelta3-main.h||xdelta3/xdelta3-main.h",
            "xdelta3/xdelta3-test.h||xdelta3/xdelta3-test.h"
          ],
          "candidate": [
            "xdelta3/xdelta3-main.h||xdelta3/xdelta3-main.h",
            "xdelta3/xdelta3-test.h||xdelta3/xdelta3-test.h"
          ]
        }
      },
      "candidate_diff": {
        "xdelta3/xdelta3-blkcache.h||xdelta3/xdelta3-blkcache.h": [
          "File: xdelta3/xdelta3-blkcache.h -> xdelta3/xdelta3-blkcache.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "259:       if (option_verbose > 1)",
          "260:  {",
          "262:  }",
          "264:       XPR(NT \"source %s %s blksize %s window %s%s%s\\n\",",
          "",
          "[Removed Lines]",
          "261:    short_sprintf (nbufs, \" #bufs %\"Z\"u\", lru_size);",
          "",
          "[Added Lines]",
          "261:    short_sprintf (nbufs, \" #bufs %\"W\"u\", lru_size);",
          "",
          "---------------"
        ],
        "xdelta3/xdelta3-main.h||xdelta3/xdelta3-main.h": [
          "File: xdelta3/xdelta3-main.h -> xdelta3/xdelta3-main.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1102:     }",
          "1103:   else",
          "1104:     {",
          "1106:         ofile->filename, size); }",
          "1107:       ofile->nwrite += size;",
          "1108:     }",
          "",
          "[Removed Lines]",
          "1105:       if (option_verbose > 5) { XPR(NT \"write %s: %\"Z\"u bytes\\n\",",
          "",
          "[Added Lines]",
          "1105:       if (option_verbose > 5) { XPR(NT \"write %s: %\"W\"u bytes\\n\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1296:       addr_bytes = (usize_t)(stream->addr_sect.buf - addr_before);",
          "1297:       inst_bytes = (usize_t)(stream->inst_sect.buf - inst_before);",
          "1300:   stream->dec_winstart + size,",
          "1301:   option_print_cpymode ? code : 0,",
          "1302:   xd3_rtype_to_string ((xd3_rtype) stream->dec_current1.type,",
          "",
          "[Removed Lines]",
          "1299:       VC(UT \"  %06\"Q\"u %03\"Z\"u  %s %6\"Z\"u\",",
          "",
          "[Added Lines]",
          "1299:       VC(UT \"  %06\"Q\"u %03\"W\"u  %s %6\"W\"u\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1309:      {",
          "1310:        if (stream->dec_current1.addr >= stream->dec_cpylen)",
          "1311:   {",
          "1313:        stream->dec_current1.addr - stream->dec_cpylen)VE;",
          "1314:   }",
          "1315:        else",
          "",
          "[Removed Lines]",
          "1312:     VC(UT \" T@%-6\"Z\"u\",",
          "",
          "[Added Lines]",
          "1312:     VC(UT \" T@%-6\"W\"u\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1329:       if (stream->dec_current2.type != XD3_NOOP)",
          "1330:  {",
          "1332:       xd3_rtype_to_string ((xd3_rtype) stream->dec_current2.type,",
          "1333:       option_print_cpymode),",
          "1334:       stream->dec_current2.size)VE;",
          "",
          "[Removed Lines]",
          "1331:    VC(UT \"  %s %6\"Z\"u\",",
          "",
          "[Added Lines]",
          "1331:    VC(UT \"  %s %6\"W\"u\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1337:      {",
          "1338:        if (stream->dec_current2.addr >= stream->dec_cpylen)",
          "1339:   {",
          "1341:        stream->dec_current2.addr - stream->dec_cpylen)VE;",
          "1342:   }",
          "1343:        else",
          "",
          "[Removed Lines]",
          "1340:     VC(UT \" T@%-6\"Z\"u\",",
          "",
          "[Added Lines]",
          "1340:     VC(UT \" T@%-6\"W\"u\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1357:    (stream->dec_current1.type >= XD3_CPY ||",
          "1358:     stream->dec_current2.type >= XD3_CPY))",
          "1359:  {",
          "1361:       stream->dec_winstart + size_before,",
          "1362:       size - size_before,",
          "1363:       addr_bytes + inst_bytes)VE;",
          "",
          "[Removed Lines]",
          "1360:    VC(UT \"  %06\"Q\"u (inefficiency) %\"Z\"u encoded as %\"Z\"u bytes\\n\",",
          "",
          "[Added Lines]",
          "1360:    VC(UT \"  %06\"Q\"u (inefficiency) %\"W\"u encoded as %\"W\"u bytes\\n\",",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1425:   if (stream->dec_winstart == 0)",
          "1426:     {",
          "1427:       VC(UT \"VCDIFF version:               0\\n\")VE;",
          "1429:   stream->dec_hdrsize)VE;",
          "1430:       VC(UT \"VCDIFF header indicator:      \")VE;",
          "1431:       if ((stream->dec_hdr_ind & VCD_SECONDARY) != 0)",
          "",
          "[Removed Lines]",
          "1428:       VC(UT \"VCDIFF header size:           %\"Z\"u\\n\",",
          "",
          "[Added Lines]",
          "1428:       VC(UT \"VCDIFF header size:           %\"W\"u\\n\",",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1512:   if (SRCORTGT (stream->dec_win_ind))",
          "1513:     {",
          "1515:   stream->dec_cpylen)VE;",
          "1516:       VC(UT \"VCDIFF copy window offset:    %\"Q\"u\\n\",",
          "1517:   stream->dec_cpyoff)VE;",
          "1518:     }",
          "1521:      (usize_t)stream->dec_enclen)VE;",
          "1523:      (usize_t)stream->dec_tgtlen)VE;",
          "1526:      (usize_t)stream->data_sect.size)VE;",
          "1528:      (usize_t)stream->inst_sect.size)VE;",
          "1530:      (usize_t)stream->addr_sect.size)VE;",
          "1532:   ret = 0;",
          "",
          "[Removed Lines]",
          "1514:       VC(UT \"VCDIFF copy window length:    %\"Z\"u\\n\",",
          "1520:   VC(UT \"VCDIFF delta encoding length: %\"Z\"u\\n\",",
          "1522:   VC(UT \"VCDIFF target window length:  %\"Z\"u\\n\",",
          "1525:   VC(UT \"VCDIFF data section length:   %\"Z\"u\\n\",",
          "1527:   VC(UT \"VCDIFF inst section length:   %\"Z\"u\\n\",",
          "1529:   VC(UT \"VCDIFF addr section length:   %\"Z\"u\\n\",",
          "",
          "[Added Lines]",
          "1514:       VC(UT \"VCDIFF copy window length:    %\"W\"u\\n\",",
          "1520:   VC(UT \"VCDIFF delta encoding length: %\"W\"u\\n\",",
          "1522:   VC(UT \"VCDIFF target window length:  %\"W\"u\\n\",",
          "1525:   VC(UT \"VCDIFF data section length:   %\"W\"u\\n\",",
          "1527:   VC(UT \"VCDIFF inst section length:   %\"W\"u\\n\",",
          "1529:   VC(UT \"VCDIFF addr section length:   %\"W\"u\\n\",",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1967:     addr = inst->addr - window_start;",
          "1968:   }",
          "1969:        IF_DEBUG2 ({",
          "1971:         \"addr %\"Q\" mode %u\\n\",",
          "1972:         window_pos, take, addr, inst->mode);",
          "1973:   });",
          "",
          "[Removed Lines]",
          "1970:     XPR(NTR \"[merge copy] winpos %\"Z\" take %\"Z\" \"",
          "",
          "[Added Lines]",
          "1970:     XPR(NTR \"[merge copy] winpos %\"W\" take %\"W\" \"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3300:    stream.i_slots_used > stream.iopt_size)",
          "3301:         {",
          "3302:    XPR(NT \"warning: input position %\"Q\"u overflowed \"",
          "3304:        \"consider changing -I\\n\",",
          "3305:        stream.current_window * winsize,",
          "3306:        stream.i_slots_used, stream.iopt_size);",
          "",
          "[Removed Lines]",
          "3303:        \"instruction buffer, needed %\"Z\"u (vs. %\"Z\"u), \"",
          "",
          "[Added Lines]",
          "3303:        \"instruction buffer, needed %\"W\"u (vs. %\"W\"u), \"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "3424:   if (option_verbose > 1 && cmd == CMD_ENCODE)",
          "3425:     {",
          "3426:       XPR(NT \"scanner configuration: %s\\n\", stream.smatcher.name);",
          "3428:       if (sfile != NULL && sfile->filename != NULL)",
          "3429:  {",
          "3431:  }",
          "3432:     }",
          "",
          "[Removed Lines]",
          "3427:       XPR(NT \"target hash table size: %\"Z\"u\\n\", stream.small_hash.size);",
          "3430:    XPR(NT \"source hash table size: %\"Z\"u\\n\", stream.large_hash.size);",
          "",
          "[Added Lines]",
          "3427:       XPR(NT \"target hash table size: %\"W\"u\\n\", stream.small_hash.size);",
          "3430:    XPR(NT \"source hash table size: %\"W\"u\\n\", stream.large_hash.size);",
          "",
          "---------------"
        ],
        "xdelta3/xdelta3-test.h||xdelta3/xdelta3-test.h": [
          "File: xdelta3/xdelta3-test.h -> xdelta3/xdelta3-test.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "1420:    if ((ret = sec->encode (stream, enc_stream,",
          "1421:       in_head, out_head, & cfg)))",
          "1422:      {",
          "1424:        goto fail;",
          "1425:      }",
          "",
          "[Removed Lines]",
          "1423:        XPR(NT \"test %\"Z\"u: encode: %s\", test_i, stream->msg);",
          "",
          "[Added Lines]",
          "1423:        XPR(NT \"test %\"W\"u: encode: %s\", test_i, stream->msg);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1459:          compress_size, dec_input,",
          "1460:          dec_correct, dec_output)))",
          "1461:      {",
          "1463:        goto fail;",
          "1464:      }",
          "",
          "[Removed Lines]",
          "1462:        XPR(NT \"test %\"Z\"u: decode: %s\", test_i, stream->msg);",
          "",
          "[Added Lines]",
          "1462:        XPR(NT \"test %\"W\"u: decode: %s\", test_i, stream->msg);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2713:      default: CHECK(0);",
          "2714:      }",
          "2717:     inst->pos, inst->size);",
          "2718:    rptr += strlen (rptr);",
          "",
          "[Removed Lines]",
          "2716:    snprintf_func (rptr, rbuf+TESTBUFSIZE-rptr, \"%\"Z\"u/%\"Z\"u\",",
          "",
          "[Added Lines]",
          "2716:    snprintf_func (rptr, rbuf+TESTBUFSIZE-rptr, \"%\"W\"u/%\"W\"u\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2737:       if (strcmp (rbuf, test->result) != 0)",
          "2738:  {",
          "2740:    stream->msg = \"wrong result\";",
          "2741:    return XD3_INTERNAL;",
          "2742:  }",
          "",
          "[Removed Lines]",
          "2739:    XPR(NT \"test %\"Z\"u: expected %s: got %s\", i, test->result, rbuf);",
          "",
          "[Added Lines]",
          "2739:    XPR(NT \"test %\"W\"u: expected %s: got %s\", i, test->result, rbuf);",
          "",
          "---------------"
        ]
      }
    }
  ]
}