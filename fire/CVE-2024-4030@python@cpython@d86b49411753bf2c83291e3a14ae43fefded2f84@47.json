{
  "cve_id": "CVE-2024-4030",
  "cve_desc": "On Windows a directory returned by tempfile.mkdtemp() would not always have permissions set to restrict reading and writing to the temporary directory by other users, instead usually inheriting the correct permissions from the default location. Alternate configurations or users without a profile directory may not have the intended permissions.\n\nIf you\u2019re not using Windows or haven\u2019t changed the temporary directory location then you aren\u2019t affected by this vulnerability. On other platforms the returned directory is consistently readable and writable only by the current user.\n\nThis issue was caused by Python not supporting Unix permissions on Windows. The fix adds support for Unix \u201c700\u201d for the mkdir function on Windows which is used by mkdtemp() to ensure the newly created directory has the proper permissions.",
  "repo": "python/cpython",
  "patch_hash": "d86b49411753bf2c83291e3a14ae43fefded2f84",
  "patch_info": {
    "commit_hash": "d86b49411753bf2c83291e3a14ae43fefded2f84",
    "repo": "python/cpython",
    "commit_url": "https://github.com/python/cpython/commit/d86b49411753bf2c83291e3a14ae43fefded2f84",
    "files": [
      "Doc/whatsnew/3.13.rst",
      "Misc/NEWS.d/next/Security/2024-05-01-20-57-09.gh-issue-118486.K44KJG.rst"
    ],
    "message": "gh-118486: Update docs for CVE-2024-4030 reference (GH-118737)\n\nUpdate docs for CVE-2024-4030 reference",
    "before_after_code_files": []
  },
  "patch_diff": {},
  "candidates": [
    {
      "candidate_hash": "0dbb86c5bebf8d85dd295840261e1c944726271c",
      "candidate_info": {
        "commit_hash": "0dbb86c5bebf8d85dd295840261e1c944726271c",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/0dbb86c5bebf8d85dd295840261e1c944726271c",
        "files": [
          "Python/fileutils.c",
          "Tools/tsan/suppressions_free_threading.txt"
        ],
        "message": "[3.13] gh-117657: Fix TSan reported data race on ioctl_works (GH-120175) (#120654)\n\n(cherry picked from commit 460cc9e14e221c53c0038a847bfd411fe184ebf3)\n\nCo-authored-by: Sam Gross <colesbury@gmail.com>",
        "before_after_code_files": [
          "Python/fileutils.c||Python/fileutils.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Python/fileutils.c||Python/fileutils.c": [
          "File: Python/fileutils.c -> Python/fileutils.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1502: #else",
          "1504: #if defined(HAVE_SYS_IOCTL_H) && defined(FIOCLEX) && defined(FIONCLEX)",
          "",
          "[Removed Lines]",
          "1505:     if (ioctl_works != 0 && raise != 0) {",
          "",
          "[Added Lines]",
          "1505:     if (raise != 0 && _Py_atomic_load_int_relaxed(&ioctl_works) != 0) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1512:             request = FIOCLEX;",
          "1513:         err = ioctl(fd, request, NULL);",
          "1514:         if (!err) {",
          "1516:             return 0;",
          "1517:         }",
          "",
          "[Removed Lines]",
          "1515:             ioctl_works = 1;",
          "",
          "[Added Lines]",
          "1515:             if (_Py_atomic_load_int_relaxed(&ioctl_works) == -1) {",
          "1516:                 _Py_atomic_store_int_relaxed(&ioctl_works, 1);",
          "1517:             }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1539:                with EACCES. While FIOCLEX is safe operation it may be",
          "1540:                unavailable because ioctl was denied altogether.",
          "1543:         }",
          "1545:     }",
          "",
          "[Removed Lines]",
          "1542:             ioctl_works = 0;",
          "",
          "[Added Lines]",
          "1544:             _Py_atomic_store_int_relaxed(&ioctl_works, 0);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4ce1246a9958d2d1452f83be961e369f7d050714",
      "candidate_info": {
        "commit_hash": "4ce1246a9958d2d1452f83be961e369f7d050714",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/4ce1246a9958d2d1452f83be961e369f7d050714",
        "files": [
          "Lib/test/test_compile.py",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-18-22-41-05.gh-issue-120722.rS7tkE.rst",
          "Python/compile.c"
        ],
        "message": "[3.13] gh-120722: Set position on RETURN_VALUE in lambda (GH-120724) (#120738)\n\n(cherry picked from commit d8f27cb1141fd3575de816438ed80a916c0560ed)\n\nCo-authored-by: Jelle Zijlstra <jelle.zijlstra@gmail.com>",
        "before_after_code_files": [
          "Lib/test/test_compile.py||Lib/test/test_compile.py",
          "Python/compile.c||Python/compile.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Lib/test/test_compile.py||Lib/test/test_compile.py": [
          "File: Lib/test/test_compile.py -> Lib/test/test_compile.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: import _testinternalcapi",
          "17: from test import support",
          "19:                           requires_specialization, get_c_recursion_limit)",
          "20: from test.support.bytecode_helper import instructions_with_positions",
          "21: from test.support.os_helper import FakePath",
          "",
          "[Removed Lines]",
          "18: from test.support import (script_helper, requires_debug_ranges,",
          "",
          "[Added Lines]",
          "18: from test.support import (script_helper, requires_debug_ranges, run_code,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2028:             code, \"LOAD_GLOBAL\", line=3, end_line=3, column=4, end_column=9",
          "2029:         )",
          "2032: class TestExpectedAttributes(unittest.TestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2031:     def test_lambda_return_position(self):",
          "2032:         snippets = [",
          "2033:             \"f = lambda: x\",",
          "2034:             \"f = lambda: 42\",",
          "2035:             \"f = lambda: 1 + 2\",",
          "2036:             \"f = lambda: a + b\",",
          "2037:         ]",
          "2038:         for snippet in snippets:",
          "2039:             with self.subTest(snippet=snippet):",
          "2040:                 lamb = run_code(snippet)[\"f\"]",
          "2041:                 positions = lamb.__code__.co_positions()",
          "2042:                 # assert that all positions are within the lambda",
          "2043:                 for i, pos in enumerate(positions):",
          "2044:                     with self.subTest(i=i, pos=pos):",
          "2045:                         start_line, end_line, start_col, end_col = pos",
          "2046:                         if i == 0 and start_col == end_col == 0:",
          "2047:                             # ignore the RESUME in the beginning",
          "2048:                             continue",
          "2049:                         self.assertEqual(start_line, 1)",
          "2050:                         self.assertEqual(end_line, 1)",
          "2051:                         code_start = snippet.find(\":\") + 2",
          "2052:                         code_end = len(snippet)",
          "2053:                         self.assertGreaterEqual(start_col, code_start)",
          "2054:                         self.assertLessEqual(end_col, code_end)",
          "2055:                         self.assertGreaterEqual(end_col, start_col)",
          "2056:                         self.assertLessEqual(end_col, code_end)",
          "",
          "---------------"
        ],
        "Python/compile.c||Python/compile.c": [
          "File: Python/compile.c -> Python/compile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3043:         co = optimize_and_assemble(c, 0);",
          "3044:     }",
          "3045:     else {",
          "3047:         ADDOP_IN_SCOPE(c, loc, RETURN_VALUE);",
          "3048:         co = optimize_and_assemble(c, 1);",
          "3049:     }",
          "",
          "[Removed Lines]",
          "3046:         location loc = LOCATION(e->lineno, e->lineno, 0, 0);",
          "",
          "[Added Lines]",
          "3046:         location loc = LOC(e->v.Lambda.body);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "61a2229005749dac782fc2e950d3f4fd25ed2181",
      "candidate_info": {
        "commit_hash": "61a2229005749dac782fc2e950d3f4fd25ed2181",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/61a2229005749dac782fc2e950d3f4fd25ed2181",
        "files": [
          "Lib/test/test_compile.py",
          "Misc/NEWS.d/next/Core and Builtins/2024-06-12-18-50-29.gh-issue-120367.LmXx2y.rst",
          "Python/flowgraph.c"
        ],
        "message": "[3.13] gh-120367: fix removal of redundant NOPs and jumps after reordering hot-cold blocks (GH-120425) (#120621)\n\ngh-120367: fix removal of redundant NOPs and jumps after reordering hot-cold blocks (GH-120425)\n(cherry picked from commit 21866c8ed296524f0ca175c0f55b43744c2b30df)\n\nCo-authored-by: Irit Katriel <1055913+iritkatriel@users.noreply.github.com>",
        "before_after_code_files": [
          "Lib/test/test_compile.py||Lib/test/test_compile.py",
          "Python/flowgraph.c||Python/flowgraph.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Lib/test/test_compile.py||Lib/test/test_compile.py": [
          "File: Lib/test/test_compile.py -> Lib/test/test_compile.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "502:         with self.assertRaisesRegex(TypeError, \"NamedExpr target must be a Name\"):",
          "503:             compile(ast.fix_missing_locations(m), \"<file>\", \"exec\")",
          "505:     def test_compile_ast(self):",
          "506:         fname = __file__",
          "507:         if fname.lower().endswith('pyc'):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "505:     def test_compile_redundant_jumps_and_nops_after_moving_cold_blocks(self):",
          "506:         # See gh-120367",
          "507:         code=textwrap.dedent(\"\"\"",
          "508:             try:",
          "509:                 pass",
          "510:             except:",
          "511:                 pass",
          "512:             else:",
          "513:                 match name_2:",
          "514:                     case b'':",
          "515:                         pass",
          "516:             finally:",
          "517:                 something",
          "518:             \"\"\")",
          "520:         tree = ast.parse(code)",
          "522:         # make all instructions locations the same to create redundancies",
          "523:         for node in ast.walk(tree):",
          "524:             if hasattr(node,\"lineno\"):",
          "525:                  del node.lineno",
          "526:                  del node.end_lineno",
          "527:                  del node.col_offset",
          "528:                  del node.end_col_offset",
          "530:         compile(ast.fix_missing_locations(tree), \"<file>\", \"exec\")",
          "",
          "---------------"
        ],
        "Python/flowgraph.c||Python/flowgraph.c": [
          "File: Python/flowgraph.c -> Python/flowgraph.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1830: static int resolve_line_numbers(cfg_builder *g, int firstlineno);",
          "1833:    The consts object should still be in list form to allow new constants",
          "1834:    to be appended.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1832: static int",
          "1833: remove_redundant_nops_and_jumps(cfg_builder *g)",
          "1834: {",
          "1835:     int removed_nops, removed_jumps;",
          "1836:     do {",
          "1840:         removed_nops = remove_redundant_nops(g);",
          "1841:         RETURN_IF_ERROR(removed_nops);",
          "1842:         removed_jumps = remove_redundant_jumps(g);",
          "1843:         RETURN_IF_ERROR(removed_jumps);",
          "1844:     } while(removed_nops + removed_jumps > 0);",
          "1845:     return SUCCESS;",
          "1846: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1850:     }",
          "1851:     RETURN_IF_ERROR(remove_redundant_nops_and_pairs(g->g_entryblock));",
          "1852:     RETURN_IF_ERROR(remove_unreachable(g->g_entryblock));",
          "1864:     assert(no_redundant_jumps(g));",
          "1865:     return SUCCESS;",
          "1866: }",
          "",
          "[Removed Lines]",
          "1854:     int removed_nops, removed_jumps;",
          "1855:     do {",
          "1859:         removed_nops = remove_redundant_nops(g);",
          "1860:         RETURN_IF_ERROR(removed_nops);",
          "1861:         removed_jumps = remove_redundant_jumps(g);",
          "1862:         RETURN_IF_ERROR(removed_jumps);",
          "1863:     } while(removed_nops + removed_jumps > 0);",
          "",
          "[Added Lines]",
          "1869:     RETURN_IF_ERROR(remove_redundant_nops_and_jumps(g));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2330:     b->b_next = cold_blocks;",
          "2332:     if (cold_blocks != NULL) {",
          "2334:     }",
          "2335:     return SUCCESS;",
          "2336: }",
          "",
          "[Removed Lines]",
          "2333:         RETURN_IF_ERROR(remove_redundant_jumps(g));",
          "",
          "[Added Lines]",
          "2339:         RETURN_IF_ERROR(remove_redundant_nops_and_jumps(g));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "09d4c072eb9687bf37c4cd387d5be5008125ff6e",
      "candidate_info": {
        "commit_hash": "09d4c072eb9687bf37c4cd387d5be5008125ff6e",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/09d4c072eb9687bf37c4cd387d5be5008125ff6e",
        "files": [
          "Lib/bdb.py",
          "Lib/test/test_pdb.py",
          "Misc/NEWS.d/next/Library/2024-05-12-21-38-42.gh-issue-58933.0kgU2l.rst"
        ],
        "message": "[3.13] gh-58933: Make pdb return to caller frame correctly when f_trace is not set (GH-118979) (#119007)\n\ngh-58933: Make pdb return to caller frame correctly when f_trace is not set (GH-118979)\n(cherry picked from commit f526314194f7fd15931025f8a4439c1765666e42)\n\nCo-authored-by: Tian Gao <gaogaotiantian@hotmail.com>",
        "before_after_code_files": [
          "Lib/bdb.py||Lib/bdb.py",
          "Lib/test/test_pdb.py||Lib/test/test_pdb.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Lib/bdb.py||Lib/bdb.py": [
          "File: Lib/bdb.py -> Lib/bdb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:             # The user issued a 'next' or 'until' command.",
          "166:             if self.stopframe is frame and self.stoplineno != -1:",
          "167:                 self._set_stopinfo(None, None)",
          "168:         return self.trace_dispatch",
          "170:     def dispatch_exception(self, frame, arg):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168:             # The previous frame might not have f_trace set, unless we are",
          "169:             # issuing a command that does not expect to stop, we should set",
          "170:             # f_trace",
          "171:             if self.stoplineno != -1:",
          "172:                 self._set_caller_tracefunc(frame)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "320:         self.stoplineno = stoplineno",
          "321:         self._set_trace_opcodes(opcode)",
          "324:         # Issue #13183: pdb skips frames after hitting a breakpoint and running",
          "325:         # step commands.",
          "326:         # Restore the trace function in the caller (that may not have been set",
          "327:         # for performance reasons) when returning from the current frame.",
          "333:     # Derived classes and clients can call the following methods",
          "334:     # to affect the stepping state.",
          "",
          "[Removed Lines]",
          "323:     def _set_caller_tracefunc(self):",
          "328:         if self.frame_returning:",
          "329:             caller_frame = self.frame_returning.f_back",
          "330:             if caller_frame and not caller_frame.f_trace:",
          "331:                 caller_frame.f_trace = self.trace_dispatch",
          "",
          "[Added Lines]",
          "328:     def _set_caller_tracefunc(self, current_frame):",
          "333:         caller_frame = current_frame.f_back",
          "334:         if caller_frame and not caller_frame.f_trace:",
          "335:             caller_frame.f_trace = self.trace_dispatch",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "344:     def set_step(self):",
          "345:         \"\"\"Stop after one line of code.\"\"\"",
          "347:         self._set_stopinfo(None, None)",
          "349:     def set_stepinstr(self):",
          "350:         \"\"\"Stop before the next instruction.\"\"\"",
          "352:         self._set_stopinfo(None, None, opcode=True)",
          "354:     def set_next(self, frame):",
          "",
          "[Removed Lines]",
          "346:         self._set_caller_tracefunc()",
          "351:         self._set_caller_tracefunc()",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "Lib/test/test_pdb.py||Lib/test/test_pdb.py": [
          "File: Lib/test/test_pdb.py -> Lib/test/test_pdb.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1453:     \"\"\"",
          "1456: def test_pdb_skip_modules():",
          "1457:     \"\"\"This illustrates the simple case of module skipping.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1456: def test_pdb_return_to_different_file():",
          "1457:     \"\"\"When pdb returns to a different file, it should not skip if f_trace is",
          "1458:        not already set",
          "1460:     >>> import pprint",
          "1462:     >>> class A:",
          "1463:     ...    def __repr__(self):",
          "1464:     ...        return 'A'",
          "1466:     >>> def test_function():",
          "1467:     ...     import pdb; pdb.Pdb(nosigint=True, readrc=False).set_trace()",
          "1468:     ...     pprint.pprint(A())",
          "1470:     >>> reset_Breakpoint()",
          "1471:     >>> with PdbTestInput([  # doctest: +ELLIPSIS, +NORMALIZE_WHITESPACE",
          "1472:     ...     'b A.__repr__',",
          "1473:     ...     'continue',",
          "1474:     ...     'return',",
          "1475:     ...     'next',",
          "1476:     ...     'return',",
          "1477:     ...     'return',",
          "1478:     ...     'continue',",
          "1479:     ... ]):",
          "1480:     ...    test_function()",
          "1481:     > <doctest test.test_pdb.test_pdb_return_to_different_file[2]>(2)test_function()",
          "1482:     -> import pdb; pdb.Pdb(nosigint=True, readrc=False).set_trace()",
          "1483:     (Pdb) b A.__repr__",
          "1484:     Breakpoint 1 at <doctest test.test_pdb.test_pdb_return_to_different_file[1]>:3",
          "1485:     (Pdb) continue",
          "1486:     > <doctest test.test_pdb.test_pdb_return_to_different_file[1]>(3)__repr__()",
          "1487:     -> return 'A'",
          "1488:     (Pdb) return",
          "1489:     --Return--",
          "1490:     > <doctest test.test_pdb.test_pdb_return_to_different_file[1]>(3)__repr__()->'A'",
          "1491:     -> return 'A'",
          "1492:     (Pdb) next",
          "1493:     > ...pprint.py..._safe_repr()",
          "1494:     -> return rep,...",
          "1495:     (Pdb) return",
          "1496:     --Return--",
          "1497:     > ...pprint.py..._safe_repr()->('A'...)",
          "1498:     -> return rep,...",
          "1499:     (Pdb) return",
          "1500:     --Return--",
          "1501:     > ...pprint.py...format()->('A'...)",
          "1502:     -> return...",
          "1503:     (Pdb) continue",
          "1504:     A",
          "1505:     \"\"\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "608cfb8b416d0c2f55efb94f57efcc86d74dbf80",
      "candidate_info": {
        "commit_hash": "608cfb8b416d0c2f55efb94f57efcc86d74dbf80",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/608cfb8b416d0c2f55efb94f57efcc86d74dbf80",
        "files": [
          "Doc/whatsnew/3.13.rst",
          "Makefile.pre.in",
          "Misc/NEWS.d/next/Build/2024-05-29-17-40-50.gh-issue-119729.k0xJ5U.rst"
        ],
        "message": "[3.13] gh-119729: Use 't' in pkg-config file name for free-threaded build (GH-119738) (#119797)\n\nFor example, the free-threaded build now generates\n`lib/pkgconfig/python-3.13t.pc` and the debug build generates\n`lib/pkgconfig/python-3.13d.pc`.\n(cherry picked from commit 1c04c63ced5038e8f45a2aac7dc45f0815a4ddc5)\n\nCo-authored-by: Sam Gross <colesbury@gmail.com>",
        "before_after_code_files": [
          "Makefile.pre.in||Makefile.pre.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.pre.in||Makefile.pre.in": [
          "File: Makefile.pre.in -> Makefile.pre.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: AR=  @AR@",
          "41: READELF= @READELF@",
          "42: SOABI=  @SOABI@",
          "43: LDVERSION= @LDVERSION@",
          "44: MODULE_LDFLAGS=@MODULE_LDFLAGS@",
          "45: GITVERSION= @GITVERSION@",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43: ABIFLAGS= @ABIFLAGS@",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "150: CONFINCLUDEDIR= $(exec_prefix)/include",
          "151: PLATLIBDIR= @PLATLIBDIR@",
          "152: SCRIPTDIR= $(prefix)/$(PLATLIBDIR)",
          "154: # executable name for shebangs",
          "155: EXENAME= $(BINDIR)/python$(LDVERSION)$(EXE)",
          "156: # Variable used by ensurepip",
          "",
          "[Removed Lines]",
          "153: ABIFLAGS= @ABIFLAGS@",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2261:  -if test \"$(VERSION)\" != \"$(LDVERSION)\"; then \\",
          "2262:   rm -f $(DESTDIR)$(BINDIR)/python$(VERSION)-config; \\",
          "2263:   (cd $(DESTDIR)$(BINDIR); $(LN) -s python$(LDVERSION)-config python$(VERSION)-config); \\",
          "2268:  fi",
          "2269:  -rm -f $(DESTDIR)$(BINDIR)/python3-config",
          "2270:  (cd $(DESTDIR)$(BINDIR); $(LN) -s python$(VERSION)-config python3-config)",
          "",
          "[Removed Lines]",
          "2264:   rm -f $(DESTDIR)$(LIBPC)/python-$(LDVERSION).pc; \\",
          "2265:   (cd $(DESTDIR)$(LIBPC); $(LN) -s python-$(VERSION).pc python-$(LDVERSION).pc); \\",
          "2266:   rm -f $(DESTDIR)$(LIBPC)/python-$(LDVERSION)-embed.pc; \\",
          "2267:   (cd $(DESTDIR)$(LIBPC); $(LN) -s python-$(VERSION)-embed.pc python-$(LDVERSION)-embed.pc); \\",
          "",
          "[Added Lines]",
          "2264:   rm -f $(DESTDIR)$(LIBPC)/python-$(VERSION).pc; \\",
          "2265:   (cd $(DESTDIR)$(LIBPC); $(LN) -s python-$(LDVERSION).pc python-$(VERSION).pc); \\",
          "2266:   rm -f $(DESTDIR)$(LIBPC)/python-$(VERSION)-embed.pc; \\",
          "2267:   (cd $(DESTDIR)$(LIBPC); $(LN) -s python-$(LDVERSION)-embed.pc python-$(VERSION)-embed.pc); \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2701:  $(INSTALL_DATA) Modules/Setup.bootstrap $(DESTDIR)$(LIBPL)/Setup.bootstrap",
          "2702:  $(INSTALL_DATA) Modules/Setup.stdlib $(DESTDIR)$(LIBPL)/Setup.stdlib",
          "2703:  $(INSTALL_DATA) Modules/Setup.local $(DESTDIR)$(LIBPL)/Setup.local",
          "2706:  $(INSTALL_SCRIPT) $(srcdir)/Modules/makesetup $(DESTDIR)$(LIBPL)/makesetup",
          "2707:  $(INSTALL_SCRIPT) $(srcdir)/install-sh $(DESTDIR)$(LIBPL)/install-sh",
          "2708:  $(INSTALL_SCRIPT) python-config.py $(DESTDIR)$(LIBPL)/python-config.py",
          "",
          "[Removed Lines]",
          "2704:  $(INSTALL_DATA) Misc/python.pc $(DESTDIR)$(LIBPC)/python-$(VERSION).pc",
          "2705:  $(INSTALL_DATA) Misc/python-embed.pc $(DESTDIR)$(LIBPC)/python-$(VERSION)-embed.pc",
          "",
          "[Added Lines]",
          "2704:  $(INSTALL_DATA) Misc/python.pc $(DESTDIR)$(LIBPC)/python-$(LDVERSION).pc",
          "2705:  $(INSTALL_DATA) Misc/python-embed.pc $(DESTDIR)$(LIBPC)/python-$(LDVERSION)-embed.pc",
          "",
          "---------------"
        ]
      }
    }
  ]
}