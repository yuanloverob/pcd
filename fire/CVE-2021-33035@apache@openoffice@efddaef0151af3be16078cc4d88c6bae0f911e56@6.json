{
  "cve_id": "CVE-2021-33035",
  "cve_desc": "Apache OpenOffice opens dBase/DBF documents and shows the contents as spreadsheets. DBF are database files with data organized in fields. When reading DBF data the size of certain fields is not checked: the data is just copied into local variables. A carefully crafted document could overflow the allocated space, leading to the execution of arbitrary code by altering the contents of the program stack. This issue affects Apache OpenOffice up to and including version 4.1.10",
  "repo": "apache/openoffice",
  "patch_hash": "efddaef0151af3be16078cc4d88c6bae0f911e56",
  "patch_info": {
    "commit_hash": "efddaef0151af3be16078cc4d88c6bae0f911e56",
    "repo": "apache/openoffice",
    "commit_url": "https://github.com/apache/openoffice/commit/efddaef0151af3be16078cc4d88c6bae0f911e56#diff-ea66e734dd358922aba12ad4ba39c96bdc6cbde587d07dbc63d04daa0a30e90f",
    "files": [
      "main/connectivity/source/drivers/dbase/DTable.cxx"
    ],
    "message": "add useful checks",
    "before_after_code_files": [
      "main/connectivity/source/drivers/dbase/DTable.cxx||main/connectivity/source/drivers/dbase/DTable.cxx"
    ]
  },
  "patch_diff": {
    "main/connectivity/source/drivers/dbase/DTable.cxx||main/connectivity/source/drivers/dbase/DTable.cxx": [
      "File: main/connectivity/source/drivers/dbase/DTable.cxx -> main/connectivity/source/drivers/dbase/DTable.cxx",
      "--- Hunk 1 ---",
      "[Context before]",
      "896:         else if ( DataType::TIMESTAMP == nType )",
      "897:         {",
      "898:             sal_Int32 nDate = 0,nTime = 0;",
      "899:    memcpy(&nDate, pData, 4);",
      "900:             memcpy(&nTime, pData+ 4, 4);",
      "901:             if ( !nDate && !nTime )",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "899:             OSL_ENSURE(nLen == 8, \"Invalid length for date field\");",
      "900:             if (nLen != 8) {",
      "901:                 return false;",
      "902:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "911:         }",
      "912:         else if ( DataType::INTEGER == nType )",
      "913:         {",
      "914:             sal_Int32 nValue = 0;",
      "915:    memcpy(&nValue, pData, nLen);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "918:             OSL_ENSURE(nLen == 4, \"Invalid length for integer field\");",
      "919:             if (nLen != 4) {",
      "920:                 return false;",
      "921:             }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "918:         else if ( DataType::DOUBLE == nType )",
      "919:         {",
      "920:             double d = 0.0;",
      "921:             if (getBOOL((*aIter)->getPropertyValue(OMetaConnection::getPropMap().getNameByIndex(PROPERTY_ID_ISCURRENCY)))) // Currency wird gesondert behandelt",
      "922:             {",
      "923:                 sal_Int64 nValue = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "929:             OSL_ENSURE(nLen == 8, \"Invalid length for double field\");",
      "930:             if (nLen != 8) {",
      "931:                 return false;",
      "932:             }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "959:    {",
      "960:     case DataType::DATE:",
      "961:     {",
      "962:      if (aStr.Len() != nLen)",
      "963:      {",
      "964:       (_rRow->get())[i]->setNull();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "974:                     OSL_ENSURE(nLen == 8, \"Invalid length for date field\");",
      "975:                     if (nLen != 8) {",
      "976:                         return false;",
      "977:                     }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "978:     break;",
      "979:     case DataType::BIT:",
      "980:     {",
      "981:      sal_Bool b;",
      "982:      switch (* ((const char *)pData))",
      "983:      {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "997:                     OSL_ENSURE(nLen == 1, \"Invalid length for bit field\");",
      "998:                     if (nLen != 1) {",
      "999:                         return false;",
      "1000:                     }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1873:    {",
      "1874:                 case DataType::TIMESTAMP:",
      "1875:                     {",
      "1876:                         sal_Int32 nJulianDate = 0, nJulianTime = 0;",
      "1877:                         lcl_CalcJulDate(nJulianDate,nJulianTime,rRow.get()[nPos]->getValue());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1896:                         OSL_ENSURE(nLen == 8, \"Invalid length for timestamp field\");",
      "1897:                         if (nLen != 8) {",
      "1898:                             bHadError = true;",
      "1899:                             break;",
      "1900:                         }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1882:                     break;",
      "1883:     case DataType::DATE:",
      "1884:     {",
      "1885:      ::com::sun::star::util::Date aDate;",
      "1886:      if(rRow.get()[nPos]->getValue().getTypeKind() == DataType::DOUBLE)",
      "1887:       aDate = ::dbtools::DBTypeConversion::toDate(rRow.get()[nPos]->getValue().getDouble());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1910:                     OSL_ENSURE(nLen == 8, \"Invalid length for date field\");",
      "1911:                     if (nLen != 8) {",
      "1912:                         bHadError = true;",
      "1913:                         break;",
      "1914:                     }",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1900:     } break;",
      "1901:                 case DataType::INTEGER:",
      "1902:                     {",
      "1903:                         sal_Int32 nValue = rRow.get()[nPos]->getValue();",
      "1904:                         memcpy(pData,&nValue,nLen);",
      "1905:                     }",
      "1906:                     break;",
      "1907:                 case DataType::DOUBLE:",
      "1908:                     {",
      "1909:                         const double d = rRow.get()[nPos]->getValue();",
      "1910:                         m_pColumns->getByIndex(i) >>= xCol;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1933:                         OSL_ENSURE(nLen == 4, \"Invalid length for integer field\");",
      "1934:                         if (nLen != 4) {",
      "1935:                             bHadError = true;",
      "1936:                             break;",
      "1937:                         }",
      "1944:                         OSL_ENSURE(nLen == 8, \"Invalid length for double field\");",
      "1945:                         if (nLen != 8) {",
      "1946:                             bHadError = true;",
      "1947:                             break;",
      "1948:                         }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1958:      }",
      "1959:     } break;",
      "1960:     case DataType::BIT:",
      "1962:      break;",
      "1963:                 case DataType::LONGVARBINARY:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2001:                     OSL_ENSURE(nLen == 1, \"Invalid length for bit field\");",
      "2002:                     if (nLen != 1) {",
      "2003:                         bHadError = true;",
      "2004:                         break;",
      "2005:                     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b03cf221c44fcd24f83842530ff3cfd81e8a9390",
      "candidate_info": {
        "commit_hash": "b03cf221c44fcd24f83842530ff3cfd81e8a9390",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/b03cf221c44fcd24f83842530ff3cfd81e8a9390",
        "files": [
          "main/sw/source/ui/ribbar/workctrl.cxx"
        ],
        "message": "Treat negative values correctly\n\nFixes bug #128461\n\nThanks to Czes\u0142aw Wola\u0144ski for pointing out the problem and the\nsolution.\n\n(cherry picked from commit 1dfc6c9463fbb9b844e2b5cbe65eeb832bc1a977)",
        "before_after_code_files": [
          "main/sw/source/ui/ribbar/workctrl.cxx||main/sw/source/ui/ribbar/workctrl.cxx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/sw/source/ui/ribbar/workctrl.cxx||main/sw/source/ui/ribbar/workctrl.cxx": [
          "File: main/sw/source/ui/ribbar/workctrl.cxx -> main/sw/source/ui/ribbar/workctrl.cxx",
          "--- Hunk 1 ---",
          "[Context before]",
          "817:     {",
          "818:         String sEntry(GetText());",
          "819:         sEntry.EraseAllChars( '%' );",
          "821:         if(nZoom < MINZOOM)",
          "822:             nZoom = MINZOOM;",
          "823:         if(nZoom > MAXZOOM)",
          "824:             nZoom = MAXZOOM;",
          "827:         if ( FN_PREVIEW_ZOOM == nSlotId )",
          "828:         {",
          "829:             Any a;",
          "",
          "[Removed Lines]",
          "820:         sal_uInt16 nZoom = (sal_uInt16)sEntry.ToInt32();",
          "826:         SfxUInt16Item aItem( nSlotId, nZoom );",
          "",
          "[Added Lines]",
          "820:         sal_Int32 nZoom = sEntry.ToInt32();",
          "826:         SfxUInt16Item aItem( nSlotId, (sal_uInt16)nZoom );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "57221d74ec27db61efcf416a9f0e37ad824b5ccc",
      "candidate_info": {
        "commit_hash": "57221d74ec27db61efcf416a9f0e37ad824b5ccc",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/57221d74ec27db61efcf416a9f0e37ad824b5ccc",
        "files": [
          "main/scripting/source/protocolhandler/scripthandler.cxx"
        ],
        "message": "All scripts must be subject to checks\n\n(cherry picked from commit fb9ad7aa17549019ccdd2762a97d104449abf45d)",
        "before_after_code_files": [
          "main/scripting/source/protocolhandler/scripthandler.cxx||main/scripting/source/protocolhandler/scripthandler.cxx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/scripting/source/protocolhandler/scripthandler.cxx||main/scripting/source/protocolhandler/scripthandler.cxx": [
          "File: main/scripting/source/protocolhandler/scripthandler.cxx -> main/scripting/source/protocolhandler/scripthandler.cxx",
          "--- Hunk 1 ---",
          "[Context before]",
          "163:                 rtl_UriDecodeWithCharset, RTL_TEXTENCODING_UTF8 );",
          "164:             bool bIsDocumentScript = ( xStringUri.indexOfAsciiL( RTL_CONSTASCII_STRINGPARAM( \"document\" ) ) !=-1 );",
          "171:                     xDocumentScripts.set( m_xScriptInvocation->getScriptContainer(), UNO_SET_THROW );",
          "173:                 OSL_ENSURE( xDocumentScripts.is(), \"ScriptProtocolHandler::dispatchWithNotification: can't do the security check!\" );",
          "",
          "[Removed Lines]",
          "166:             if ( bIsDocumentScript )",
          "167:             {",
          "169:                 Reference< XEmbeddedScripts > xDocumentScripts;",
          "170:                 if ( getScriptInvocation() )",
          "",
          "[Added Lines]",
          "167:             if ( getScriptInvocation() ) {",
          "168:                     Reference< XEmbeddedScripts > xDocumentScripts;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f76c88023642e2d81093a0f72c05e19cda1f23f3",
      "candidate_info": {
        "commit_hash": "f76c88023642e2d81093a0f72c05e19cda1f23f3",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/f76c88023642e2d81093a0f72c05e19cda1f23f3",
        "files": [
          "main/solenv/bin/deliver.pl"
        ],
        "message": "Create 'tmp' directory into solver\n\nCompletes f110f2132c033266ae9e2e1ff7ec2f29347b01ab",
        "before_after_code_files": [
          "main/solenv/bin/deliver.pl||main/solenv/bin/deliver.pl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/solenv/bin/deliver.pl||main/solenv/bin/deliver.pl": [
          "File: main/solenv/bin/deliver.pl -> main/solenv/bin/deliver.pl",
          "--- Hunk 1 ---",
          "[Context before]",
          "1002:                     'pck',",
          "1003:                     'rdb',",
          "1004:                     'res',",
          "1005:                     'xml'",
          "1006:                 );",
          "1007:     push(@subdirs, 'zip') if $opt_zip;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1005:                     'tmp',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "120ba44504350be1b483c3b327353da84b27d1d8",
      "candidate_info": {
        "commit_hash": "120ba44504350be1b483c3b327353da84b27d1d8",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/120ba44504350be1b483c3b327353da84b27d1d8",
        "files": [
          "main/sw/source/core/layout/paintfrm.cxx"
        ],
        "message": "Revert \"Code cleanup for removing Writer page shadows\"\n\nThis reverts commit cf2047b48da09145d9aec329d02ddae268cb5ffb.",
        "before_after_code_files": [
          "main/sw/source/core/layout/paintfrm.cxx||main/sw/source/core/layout/paintfrm.cxx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/sw/source/core/layout/paintfrm.cxx||main/sw/source/core/layout/paintfrm.cxx": [
          "File: main/sw/source/core/layout/paintfrm.cxx -> main/sw/source/core/layout/paintfrm.cxx",
          "--- Hunk 1 ---",
          "[Context before]",
          "2860:     while ( pPage )",
          "2861:     {",
          "2863:         const bool bRightSidebar = pPage->SidebarPosition() == sw::sidebarwindows::SIDEBAR_RIGHT;",
          "2865:         if ( !pPage->IsEmptyPage() )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2862:         const bool bPaintRightShadow =  !bBookMode || (pPage == Lower()) || (!bLTR && !pPage->OnRightPage()) || (bLTR && pPage->OnRightPage());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a79a06311ced25e568e14a86c486a3865f3de04b",
      "candidate_info": {
        "commit_hash": "a79a06311ced25e568e14a86c486a3865f3de04b",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/a79a06311ced25e568e14a86c486a3865f3de04b",
        "files": [
          "main/shell/source/backends/gconfbe/gconfbackend.cxx",
          "main/shell/source/backends/gconfbe/makefile.mk"
        ],
        "message": "Don't require ORbit to compile. We never really needed it: GConf makes its own CORBA connection if it needs to, and the only reason we included orbit.h is to check whether the problematic version < 2.8 was present, as it deadlocks the GTK VCL plugin.\n\nBut ORbit 2.8 was released in 2003, and GConf doesn't\neven use CORBA connections any more. So drop the check\nand stop needing ORBit altogether.\n\nPatch by: me\n\ngit-svn-id: https://svn.apache.org/repos/asf/openoffice/trunk@1812807 13f79535-47bb-0310-9956-ffa450edef68\n(cherry picked from commit 6b1c0a07ced87c91d0adf8f59096a87e364647c0)",
        "before_after_code_files": [
          "main/shell/source/backends/gconfbe/gconfbackend.cxx||main/shell/source/backends/gconfbe/gconfbackend.cxx",
          "main/shell/source/backends/gconfbe/makefile.mk||main/shell/source/backends/gconfbe/makefile.mk"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/shell/source/backends/gconfbe/gconfbackend.cxx||main/shell/source/backends/gconfbe/gconfbackend.cxx": [
          "File: main/shell/source/backends/gconfbe/gconfbackend.cxx -> main/shell/source/backends/gconfbe/gconfbackend.cxx",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: #include \"uno/lbnames.h\"",
          "59: #include \"gconfaccess.hxx\"",
          "62: namespace {",
          "",
          "[Removed Lines]",
          "60: #include \"orbit.h\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "161:             rtl::OUString(",
          "162:                 RTL_CONSTASCII_USTRINGPARAM(\"system.desktop-environment\"))) >>=",
          "163:             desktop;",
          "168:     }",
          "169: }",
          "",
          "[Removed Lines]",
          "164:         enabled_ = desktop.equalsAsciiL(RTL_CONSTASCII_STRINGPARAM(\"GNOME\")) &&",
          "165:             ((orbit_major_version == 2 && orbit_minor_version >= 8) ||",
          "166:              orbit_major_version > 2);",
          "",
          "[Added Lines]",
          "163:         enabled_ = desktop.equalsAsciiL(RTL_CONSTASCII_STRINGPARAM(\"GNOME\"))",
          "167:             ((orbit_major_version == 2 && orbit_minor_version >= 8) ||",
          "168:              orbit_major_version > 2)*/;",
          "",
          "---------------"
        ],
        "main/shell/source/backends/gconfbe/makefile.mk||main/shell/source/backends/gconfbe/makefile.mk": [
          "File: main/shell/source/backends/gconfbe/makefile.mk -> main/shell/source/backends/gconfbe/makefile.mk",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: .IF \"$(ENABLE_GCONF)\"!=\"\"",
          "44: COMPILER_WARN_ALL=TRUE",
          "46: .INCLUDE: pkg_config.mk",
          "48: .IF \"$(OS)\" == \"SOLARIS\"",
          "",
          "[Removed Lines]",
          "45: PKGCONFIG_MODULES=gconf-2.0 gobject-2.0 ORBit-2.0 glib-2.0",
          "",
          "[Added Lines]",
          "45: PKGCONFIG_MODULES=gconf-2.0 gobject-2.0 glib-2.0",
          "",
          "---------------"
        ]
      }
    }
  ]
}