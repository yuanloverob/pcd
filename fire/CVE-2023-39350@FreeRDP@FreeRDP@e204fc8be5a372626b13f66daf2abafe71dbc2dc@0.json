{
  "cve_id": "CVE-2023-39350",
  "cve_desc": "FreeRDP is a free implementation of the Remote Desktop Protocol (RDP), released under the Apache license. This issue affects Clients only. Integer underflow leading to DOS (e.g. abort due to `WINPR_ASSERT` with default compilation flags). When an insufficient blockLen is provided, and proper length validation is not performed, an Integer Underflow occurs, leading to a Denial of Service (DOS) vulnerability. This issue has been addressed in versions 2.11.0 and 3.0.0-beta3. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "repo": "FreeRDP/FreeRDP",
  "patch_hash": "e204fc8be5a372626b13f66daf2abafe71dbc2dc",
  "patch_info": {
    "commit_hash": "e204fc8be5a372626b13f66daf2abafe71dbc2dc",
    "repo": "FreeRDP/FreeRDP",
    "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/e204fc8be5a372626b13f66daf2abafe71dbc2dc",
    "files": [
      "libfreerdp/codec/rfx.c"
    ],
    "message": "[coded,rfx] check indices are within range\n\nreported by @pwn2carr",
    "before_after_code_files": [
      "libfreerdp/codec/rfx.c||libfreerdp/codec/rfx.c"
    ]
  },
  "patch_diff": {
    "libfreerdp/codec/rfx.c||libfreerdp/codec/rfx.c": [
      "File: libfreerdp/codec/rfx.c -> libfreerdp/codec/rfx.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "997:    if (tile->quantIdxY >= context->numQuant)",
      "998:    {",
      "999:     WLog_Print(context->priv->log, WLOG_ERROR,",
      "1000:                \"quantIdxY %\" PRIu8 \" >= numQuant %\" PRIu8, tile->quantIdxY,",
      "1001:                context->numQuant);",
      "1002:     rc = FALSE;",
      "1003:     break;",
      "1004:    }",
      "1005:    if (tile->quantIdxCb >= context->numQuant)",
      "1006:    {",
      "1007:     WLog_Print(context->priv->log, WLOG_ERROR,",
      "1008:                \"quantIdxCb %\" PRIu8 \" >= numQuant %\" PRIu8, tile->quantIdxCb,",
      "1009:                context->numQuant);",
      "1010:     rc = FALSE;",
      "1011:     break;",
      "1012:    }",
      "1013:    if (tile->quantIdxCr >= context->numQuant)",
      "1014:    {",
      "1015:     WLog_Print(context->priv->log, WLOG_ERROR,",
      "1016:                \"quantIdxCr %\" PRIu8 \" >= numQuant %\" PRIu8, tile->quantIdxCr,",
      "1017:                context->numQuant);",
      "1018:     rc = FALSE;",
      "1019:     break;",
      "1020:    }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "efa0567c027239b901ccdc590b9e229e0111c68b",
      "candidate_info": {
        "commit_hash": "efa0567c027239b901ccdc590b9e229e0111c68b",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/efa0567c027239b901ccdc590b9e229e0111c68b",
        "files": [
          "libfreerdp/codec/rfx.c"
        ],
        "message": "[coded,rfx] check indices are within range\n\nreported by @pwn2carr\n\n(cherry picked from commit 61e17f4707cee66ecaa7519073bae74ecf0a9af4)",
        "before_after_code_files": [
          "libfreerdp/codec/rfx.c||libfreerdp/codec/rfx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "libfreerdp/codec/rfx.c||libfreerdp/codec/rfx.c"
          ],
          "candidate": [
            "libfreerdp/codec/rfx.c||libfreerdp/codec/rfx.c"
          ]
        }
      },
      "candidate_diff": {
        "libfreerdp/codec/rfx.c||libfreerdp/codec/rfx.c": [
          "File: libfreerdp/codec/rfx.c -> libfreerdp/codec/rfx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "939:   if (tile->quantIdxY >= context->numQuant)",
          "940:    {",
          "941:     WLog_Print(context->priv->log, WLOG_ERROR,",
          "942:                \"quantIdxY %\" PRIu8 \" >= numQuant %\" PRIu8, tile->quantIdxY,",
          "943:                context->numQuant);",
          "944:     rc = FALSE;",
          "945:     break;",
          "946:    }",
          "947:    if (tile->quantIdxCb >= context->numQuant)",
          "948:    {",
          "949:     WLog_Print(context->priv->log, WLOG_ERROR,",
          "950:                \"quantIdxCb %\" PRIu8 \" >= numQuant %\" PRIu8, tile->quantIdxCb,",
          "951:                context->numQuant);",
          "952:     rc = FALSE;",
          "953:     break;",
          "954:    }",
          "955:    if (tile->quantIdxCr >= context->numQuant)",
          "956:    {",
          "957:     WLog_Print(context->priv->log, WLOG_ERROR,",
          "958:                \"quantIdxCr %\" PRIu8 \" >= numQuant %\" PRIu8, tile->quantIdxCr,",
          "959:                context->numQuant);",
          "960:     rc = FALSE;",
          "961:     break;",
          "",
          "---------------"
        ]
      }
    }
  ]
}