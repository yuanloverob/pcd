{
  "cve_id": "CVE-2023-34105",
  "cve_desc": "SRS is a real-time video server supporting RTMP, WebRTC, HLS, HTTP-FLV, SRT, MPEG-DASH, and GB28181. Prior to versions 5.0.157, 5.0-b1, and 6.0.48, SRS's `api-server` server is vulnerable to a drive-by command injection. An attacker may send a request to the `/api/v1/snapshots` endpoint containing any commands to be executed as part of the body of the POST request. This issue may lead to Remote Code Execution (RCE). Versions 5.0.157, 5.0-b1, and 6.0.48 contain a fix.",
  "repo": "ossrs/srs",
  "patch_hash": "1d878c2daaf913ad01c6d0bc2f247116c8050338",
  "patch_info": {
    "commit_hash": "1d878c2daaf913ad01c6d0bc2f247116c8050338",
    "repo": "ossrs/srs",
    "commit_url": "https://github.com/ossrs/srs/commit/1d878c2daaf913ad01c6d0bc2f247116c8050338",
    "files": [
      "trunk/doc/CHANGELOG.md",
      "trunk/research/api-server/server.go",
      "trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp"
    ],
    "message": "Fix command injection in api-server for HTTP callback. v5.0.157, v6.0.48",
    "before_after_code_files": [
      "trunk/research/api-server/server.go||trunk/research/api-server/server.go",
      "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
    ]
  },
  "patch_diff": {
    "trunk/research/api-server/server.go||trunk/research/api-server/server.go": [
      "File: trunk/research/api-server/server.go -> trunk/research/api-server/server.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "400:  normalPicPath := path.Join(outputPicDir, fmt.Sprintf(\"%v\", v.Stream)+\"-%03d.png\")",
      "401:  bestPng := path.Join(outputPicDir, fmt.Sprintf(\"%v-best.png\", v.Stream))",
      "405:  timeoutCtx, _ := context.WithTimeout(v.cancelCtx, v.timeout)",
      "407:  if err = cmd.Run(); err != nil {",
      "408:   log.Println(fmt.Sprintf(\"run snapshot %v cmd failed, err is %v\", v.Tag(), err))",
      "409:   return",
      "",
      "[Removed Lines]",
      "403:  param := fmt.Sprintf(\"%v -i %v -vf fps=1 -vcodec png -f image2 -an -y -vframes %v -y %v\", ffmpegPath, inputUrl, v.vframes, normalPicPath)",
      "404:  log.Println(fmt.Sprintf(\"start snapshot, cmd param=%v\", param))",
      "406:  cmd := exec.CommandContext(timeoutCtx, \"/bin/bash\", \"-c\", param)",
      "",
      "[Added Lines]",
      "403:  params := []string{",
      "404:   \"-i\", inputUrl,",
      "405:   \"-vf\", \"fps=1\",",
      "406:   \"-vcodec\", \"png\",",
      "407:   \"-f\", \"image2\",",
      "408:   \"-an\",",
      "409:   \"-vframes\", strconv.Itoa(v.vframes),",
      "410:   \"-y\", normalPicPath,",
      "411:  }",
      "412:  log.Println(fmt.Sprintf(\"start snapshot, cmd param=%v %v\", ffmpegPath, strings.Join(params, \" \")))",
      "414:  cmd := exec.CommandContext(timeoutCtx, ffmpegPath, params...)",
      "",
      "---------------"
    ],
    "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
      "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       5",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    156",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    157",
      "",
      "---------------"
    ],
    "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
      "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       6",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    47",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    48",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fe230365ab9b090d940be506f02623a28087345e",
      "candidate_info": {
        "commit_hash": "fe230365ab9b090d940be506f02623a28087345e",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/fe230365ab9b090d940be506f02623a28087345e",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_dvr.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/protocol/srs_protocol_raw_avc.cpp"
        ],
        "message": "BugFix: Resolve the problem of srs_error_t memory leak. v5.0.163, v6.0.57 (#3605)\n\n---------\n\nCo-authored-by: Haibo Chen <495810242@qq.com>\nCo-authored-by: chundonglinlin <chundonglinlin@163.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_dvr.cpp||trunk/src/app/srs_app_dvr.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/protocol/srs_protocol_raw_avc.cpp||trunk/src/protocol/srs_protocol_raw_avc.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_dvr.cpp||trunk/src/app/srs_app_dvr.cpp": [
          "File: trunk/src/app/srs_app_dvr.cpp -> trunk/src/app/srs_app_dvr.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "737:     srs_error_t err = segment->close();",
          "738:     if (err != srs_success) {",
          "739:         srs_warn(\"ignore flv close error %s\", srs_error_desc(err).c_str());",
          "740:     }",
          "742:     dvr_enabled = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "740:         srs_error_reset(err);",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    162",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    163",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    56",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    57",
          "",
          "---------------"
        ],
        "trunk/src/protocol/srs_protocol_raw_avc.cpp||trunk/src/protocol/srs_protocol_raw_avc.cpp": [
          "File: trunk/src/protocol/srs_protocol_raw_avc.cpp -> trunk/src/protocol/srs_protocol_raw_avc.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "410:     SrsFormat format;",
          "411:     if ((err = format.initialize()) != srs_success) {",
          "413:     }",
          "415:     SrsHevcDecoderConfigurationRecord *hevc_info = &format.vcodec->hevc_dec_conf_record_;",
          "",
          "[Removed Lines]",
          "412:         return srs_error_new(ERROR_STREAM_CASTER_HEVC_FORMAT, \"format failed\");",
          "",
          "[Added Lines]",
          "412:         return srs_error_wrap(err, \"format failed\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "421:         SrsBuffer vps_stream((char*)vps.data(), vps.length());",
          "422:         if ((err = format.hevc_demux_vps(&vps_stream)) != srs_success) {",
          "424:         }",
          "",
          "[Removed Lines]",
          "423:             return srs_error_new(ERROR_STREAM_CASTER_HEVC_VPS, \"vps demux failed, len=%d\", vps.length());",
          "",
          "[Added Lines]",
          "423:             return srs_error_wrap(err, \"vps demux failed, len=%d\", vps.length());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "429:         SrsBuffer sps_stream((char*)sps.data(), sps.length());",
          "430:         if ((err = format.hevc_demux_sps(&sps_stream)) != srs_success) {",
          "432:         }",
          "433:     }",
          "",
          "[Removed Lines]",
          "431:             return srs_error_new(ERROR_STREAM_CASTER_HEVC_SPS, \"sps demux failed, len=%d\",sps.length());",
          "",
          "[Added Lines]",
          "431:             return srs_error_wrap(err, \"sps demux failed, len=%d\",sps.length());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1e43bb6b9fe7d6e0d5ffda6410d1206e8e7c1fb1",
      "candidate_info": {
        "commit_hash": "1e43bb6b9fe7d6e0d5ffda6410d1206e8e7c1fb1",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/1e43bb6b9fe7d6e0d5ffda6410d1206e8e7c1fb1",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/research/api-server/server.go",
          "trunk/src/core/srs_core_version5.hpp"
        ],
        "message": "Fix command injection in api-server for HTTP callback. v5.0.157, v6.0.48",
        "before_after_code_files": [
          "trunk/research/api-server/server.go||trunk/research/api-server/server.go",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "trunk/research/api-server/server.go||trunk/research/api-server/server.go",
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp"
          ],
          "candidate": [
            "trunk/research/api-server/server.go||trunk/research/api-server/server.go",
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/research/api-server/server.go||trunk/research/api-server/server.go": [
          "File: trunk/research/api-server/server.go -> trunk/research/api-server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "400:  normalPicPath := path.Join(outputPicDir, fmt.Sprintf(\"%v\", v.Stream)+\"-%03d.png\")",
          "401:  bestPng := path.Join(outputPicDir, fmt.Sprintf(\"%v-best.png\", v.Stream))",
          "405:  timeoutCtx, _ := context.WithTimeout(v.cancelCtx, v.timeout)",
          "407:  if err = cmd.Run(); err != nil {",
          "408:   log.Println(fmt.Sprintf(\"run snapshot %v cmd failed, err is %v\", v.Tag(), err))",
          "409:   return",
          "",
          "[Removed Lines]",
          "403:  param := fmt.Sprintf(\"%v -i %v -vf fps=1 -vcodec png -f image2 -an -y -vframes %v -y %v\", ffmpegPath, inputUrl, v.vframes, normalPicPath)",
          "404:  log.Println(fmt.Sprintf(\"start snapshot, cmd param=%v\", param))",
          "406:  cmd := exec.CommandContext(timeoutCtx, \"/bin/bash\", \"-c\", param)",
          "",
          "[Added Lines]",
          "403:  params := []string{",
          "404:   \"-i\", inputUrl,",
          "405:   \"-vf\", \"fps=1\",",
          "406:   \"-vcodec\", \"png\",",
          "407:   \"-f\", \"image2\",",
          "408:   \"-an\",",
          "409:   \"-vframes\", strconv.Itoa(v.vframes),",
          "410:   \"-y\", normalPicPath,",
          "411:  }",
          "412:  log.Println(fmt.Sprintf(\"start snapshot, cmd param=%v %v\", ffmpegPath, strings.Join(params, \" \")))",
          "414:  cmd := exec.CommandContext(timeoutCtx, ffmpegPath, params...)",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    156",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    157",
          "",
          "---------------"
        ]
      }
    }
  ]
}