{
  "cve_id": "CVE-2024-29188",
  "cve_desc": "WiX toolset lets developers create installers for Windows Installer, the Windows installation engine. The custom action behind WiX's `RemoveFolderEx` functionality could allow a standard user to delete protected directories. `RemoveFolderEx` deletes an entire directory tree during installation or uninstallation. It does so by recursing every subdirectory starting at a specified directory and adding each subdirectory to the list of directories Windows Installer should delete. If the setup author instructed `RemoveFolderEx` to delete a per-user folder from a per-machine installer, an attacker could create a directory junction in that per-user folder pointing to a per-machine, protected directory. Windows Installer, when executing the per-machine installer after approval by an administrator, would delete the target of the directory junction. This vulnerability is fixed in 3.14.1 and 4.0.5.",
  "repo": "wixtoolset/wix",
  "patch_hash": "2e5960b575881567a8807e6b8b9c513138b19742",
  "patch_info": {
    "commit_hash": "2e5960b575881567a8807e6b8b9c513138b19742",
    "repo": "wixtoolset/wix",
    "commit_url": "https://github.com/wixtoolset/wix/commit/2e5960b575881567a8807e6b8b9c513138b19742",
    "files": [
      "src/dtf/SfxCA/SfxUtil.cpp",
      "src/ext/Util/ca/RemoveFoldersEx.cpp"
    ],
    "message": "Don't follow junctions when recursing directories.\n\nWhen deleting directories recursively, an elevated custom action\nfollowing junctions in a user-writable location could recurse into\nany directory, including some that you might not want to be deleted.\nTherefore, avoid recursing into directories that are actually\njunctions (aka \"reparse points\").\n\nThis applies to:\n\n- The RemoveFoldersEx custom action (which doesn't actually do deletions\nbut would instruct elevated MSI to delete on your behalf).\n- DTF's custom action runner.",
    "before_after_code_files": [
      "src/dtf/SfxCA/SfxUtil.cpp||src/dtf/SfxCA/SfxUtil.cpp",
      "src/ext/Util/ca/RemoveFoldersEx.cpp||src/ext/Util/ca/RemoveFoldersEx.cpp"
    ]
  },
  "patch_diff": {
    "src/dtf/SfxCA/SfxUtil.cpp||src/dtf/SfxCA/SfxUtil.cpp": [
      "File: src/dtf/SfxCA/SfxUtil.cpp -> src/dtf/SfxCA/SfxUtil.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "93:                 StringCchCopy(szPath + cchDir + 1, cchPathBuf - (cchDir + 1), fd.cFileName);",
      "94:                 if ((fd.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) != 0)",
      "95:                 {",
      "97:                         {",
      "98:                                 DeleteDirectory(szPath);",
      "99:                         }",
      "",
      "[Removed Lines]",
      "96:                         if (wcscmp(fd.cFileName, L\".\") != 0 && wcscmp(fd.cFileName, L\"..\") != 0)",
      "",
      "[Added Lines]",
      "96:                         if (wcscmp(fd.cFileName, L\".\") != 0",
      "97:                             && wcscmp(fd.cFileName, L\"..\") != 0",
      "98:                             && ((fd.dwFileAttributes & FILE_ATTRIBUTE_REPARSE_POINT) == 0))",
      "",
      "---------------"
    ],
    "src/ext/Util/ca/RemoveFoldersEx.cpp||src/ext/Util/ca/RemoveFoldersEx.cpp": [
      "File: src/ext/Util/ca/RemoveFoldersEx.cpp -> src/ext/Util/ca/RemoveFoldersEx.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "38:     }",
      "39: #endif",
      "42:     hr = StrAllocFormatted(&sczSearch, L\"%s*\", wzPath);",
      "43:     ExitOnFailure(hr, \"Failed to allocate file search string in path: %S\", wzPath);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "42:     DWORD dwAttributes = ::GetFileAttributesW(wzPath);",
      "43:     if (dwAttributes & FILE_ATTRIBUTE_REPARSE_POINT)",
      "44:     {",
      "45:         WcaLog(LOGMSG_STANDARD, \"Path is a junction; skipping: %ls\", wzPath);",
      "46:         ExitFunction();",
      "47:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e84b6768772c01e44dd55fb583cf78388ec7e48a",
      "candidate_info": {
        "commit_hash": "e84b6768772c01e44dd55fb583cf78388ec7e48a",
        "repo": "wixtoolset/wix",
        "commit_url": "https://github.com/wixtoolset/wix/commit/e84b6768772c01e44dd55fb583cf78388ec7e48a",
        "files": [
          "src/dtf/SfxCA/SfxUtil.cpp",
          "src/ext/Util/ca/RemoveFoldersEx.cpp"
        ],
        "message": "Don't follow junctions when recursing directories.\n\nWhen deleting directories recursively, an elevated custom action\nfollowing junctions in a user-writable location could recurse into\nany directory, including some that you might not want to be deleted.\nTherefore, avoid recursing into directories that are actually\njunctions (aka \"reparse points\").\n\nThis applies to:\n\n- The RemoveFoldersEx custom action (which doesn't actually do deletions\nbut would instruct elevated MSI to delete on your behalf).\n- DTF's custom action runner.",
        "before_after_code_files": [
          "src/dtf/SfxCA/SfxUtil.cpp||src/dtf/SfxCA/SfxUtil.cpp",
          "src/ext/Util/ca/RemoveFoldersEx.cpp||src/ext/Util/ca/RemoveFoldersEx.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/dtf/SfxCA/SfxUtil.cpp||src/dtf/SfxCA/SfxUtil.cpp",
            "src/ext/Util/ca/RemoveFoldersEx.cpp||src/ext/Util/ca/RemoveFoldersEx.cpp"
          ],
          "candidate": [
            "src/dtf/SfxCA/SfxUtil.cpp||src/dtf/SfxCA/SfxUtil.cpp",
            "src/ext/Util/ca/RemoveFoldersEx.cpp||src/ext/Util/ca/RemoveFoldersEx.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/dtf/SfxCA/SfxUtil.cpp||src/dtf/SfxCA/SfxUtil.cpp": [
          "File: src/dtf/SfxCA/SfxUtil.cpp -> src/dtf/SfxCA/SfxUtil.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:                 StringCchCopy(szPath + cchDir + 1, cchPathBuf - (cchDir + 1), fd.cFileName);",
          "94:                 if ((fd.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) != 0)",
          "95:                 {",
          "97:                         {",
          "98:                                 DeleteDirectory(szPath);",
          "99:                         }",
          "",
          "[Removed Lines]",
          "96:                         if (wcscmp(fd.cFileName, L\".\") != 0 && wcscmp(fd.cFileName, L\"..\") != 0)",
          "",
          "[Added Lines]",
          "96:                         if (wcscmp(fd.cFileName, L\".\") != 0",
          "97:                             && wcscmp(fd.cFileName, L\"..\") != 0",
          "98:                             && ((fd.dwFileAttributes & FILE_ATTRIBUTE_REPARSE_POINT) == 0))",
          "",
          "---------------"
        ],
        "src/ext/Util/ca/RemoveFoldersEx.cpp||src/ext/Util/ca/RemoveFoldersEx.cpp": [
          "File: src/ext/Util/ca/RemoveFoldersEx.cpp -> src/ext/Util/ca/RemoveFoldersEx.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     }",
          "39: #endif",
          "42:     hr = StrAllocFormatted(&sczSearch, L\"%s*\", wzPath);",
          "43:     ExitOnFailure(hr, \"Failed to allocate file search string in path: %S\", wzPath);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:     DWORD dwAttributes = ::GetFileAttributesW(wzPath);",
          "43:     if (dwAttributes & FILE_ATTRIBUTE_REPARSE_POINT)",
          "44:     {",
          "45:         WcaLog(LOGMSG_STANDARD, \"Path is a junction; skipping: %ls\", wzPath);",
          "46:         ExitFunction();",
          "47:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2e5960b575881567a8807e6b8b9c513138b19742",
      "candidate_info": {
        "commit_hash": "2e5960b575881567a8807e6b8b9c513138b19742",
        "repo": "wixtoolset/wix",
        "commit_url": "https://github.com/wixtoolset/wix/commit/2e5960b575881567a8807e6b8b9c513138b19742",
        "files": [
          "src/dtf/SfxCA/SfxUtil.cpp",
          "src/ext/Util/ca/RemoveFoldersEx.cpp"
        ],
        "message": "Don't follow junctions when recursing directories.\n\nWhen deleting directories recursively, an elevated custom action\nfollowing junctions in a user-writable location could recurse into\nany directory, including some that you might not want to be deleted.\nTherefore, avoid recursing into directories that are actually\njunctions (aka \"reparse points\").\n\nThis applies to:\n\n- The RemoveFoldersEx custom action (which doesn't actually do deletions\nbut would instruct elevated MSI to delete on your behalf).\n- DTF's custom action runner.",
        "before_after_code_files": [
          "src/dtf/SfxCA/SfxUtil.cpp||src/dtf/SfxCA/SfxUtil.cpp",
          "src/ext/Util/ca/RemoveFoldersEx.cpp||src/ext/Util/ca/RemoveFoldersEx.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/dtf/SfxCA/SfxUtil.cpp||src/dtf/SfxCA/SfxUtil.cpp",
            "src/ext/Util/ca/RemoveFoldersEx.cpp||src/ext/Util/ca/RemoveFoldersEx.cpp"
          ],
          "candidate": [
            "src/dtf/SfxCA/SfxUtil.cpp||src/dtf/SfxCA/SfxUtil.cpp",
            "src/ext/Util/ca/RemoveFoldersEx.cpp||src/ext/Util/ca/RemoveFoldersEx.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/dtf/SfxCA/SfxUtil.cpp||src/dtf/SfxCA/SfxUtil.cpp": [
          "File: src/dtf/SfxCA/SfxUtil.cpp -> src/dtf/SfxCA/SfxUtil.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:                 StringCchCopy(szPath + cchDir + 1, cchPathBuf - (cchDir + 1), fd.cFileName);",
          "94:                 if ((fd.dwFileAttributes & FILE_ATTRIBUTE_DIRECTORY) != 0)",
          "95:                 {",
          "97:                         {",
          "98:                                 DeleteDirectory(szPath);",
          "99:                         }",
          "",
          "[Removed Lines]",
          "96:                         if (wcscmp(fd.cFileName, L\".\") != 0 && wcscmp(fd.cFileName, L\"..\") != 0)",
          "",
          "[Added Lines]",
          "96:                         if (wcscmp(fd.cFileName, L\".\") != 0",
          "97:                             && wcscmp(fd.cFileName, L\"..\") != 0",
          "98:                             && ((fd.dwFileAttributes & FILE_ATTRIBUTE_REPARSE_POINT) == 0))",
          "",
          "---------------"
        ],
        "src/ext/Util/ca/RemoveFoldersEx.cpp||src/ext/Util/ca/RemoveFoldersEx.cpp": [
          "File: src/ext/Util/ca/RemoveFoldersEx.cpp -> src/ext/Util/ca/RemoveFoldersEx.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     }",
          "39: #endif",
          "42:     hr = StrAllocFormatted(&sczSearch, L\"%s*\", wzPath);",
          "43:     ExitOnFailure(hr, \"Failed to allocate file search string in path: %S\", wzPath);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:     DWORD dwAttributes = ::GetFileAttributesW(wzPath);",
          "43:     if (dwAttributes & FILE_ATTRIBUTE_REPARSE_POINT)",
          "44:     {",
          "45:         WcaLog(LOGMSG_STANDARD, \"Path is a junction; skipping: %ls\", wzPath);",
          "46:         ExitFunction();",
          "47:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}