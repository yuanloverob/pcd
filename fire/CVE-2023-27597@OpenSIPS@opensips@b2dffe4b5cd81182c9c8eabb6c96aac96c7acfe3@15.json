{
  "cve_id": "CVE-2023-27597",
  "cve_desc": "OpenSIPS is a Session Initiation Protocol (SIP) server implementation. Prior to versions 3.1.8 and 3.2.5, when a specially crafted SIP message is processed by the function `rewrite_ruri`, a crash occurs due to a segmentation fault. This issue causes the server to crash. It affects configurations containing functions that make use of the affected code, such as the function `setport`. This issue has been fixed in version 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
  "patch_info": {
    "commit_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "files": [
      "parser/parse_uri.c"
    ],
    "message": "[core] fix parse_uri() parsing\n\nIssue discovered during OpenSIPS Security Audit 2022,\n\tby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-358f-935m-7p9c",
    "before_after_code_files": [
      "parser/parse_uri.c||parser/parse_uri.c"
    ]
  },
  "patch_diff": {
    "parser/parse_uri.c||parser/parse_uri.c": [
      "File: parser/parse_uri.c -> parser/parse_uri.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1532:   case TELS_URI_T:",
      "1534:    uri->user=uri->host;",
      "1536:    uri->host.len=0;",
      "1537:    break;",
      "1538:   case SIP_URI_T:",
      "",
      "[Removed Lines]",
      "1535:    uri->host.s=\"\";",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1543:   case URN_NENA_SERVICE_URI_T:",
      "1544:    uri->user.s=0;",
      "1545:    uri->user.len=0;",
      "1548:    break;",
      "1549:   case ERROR_URI_T:",
      "1550:    LM_ERR(\"unexpected error (BUG?)\\n\");",
      "",
      "[Removed Lines]",
      "1546:    uri->host.s=\"\";",
      "1547:    uri->host.len=0;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e8c084e4d593c8ac89d3a62d8489575d58f93fe5",
      "candidate_info": {
        "commit_hash": "e8c084e4d593c8ac89d3a62d8489575d58f93fe5",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/e8c084e4d593c8ac89d3a62d8489575d58f93fe5",
        "files": [
          "modules/b2b_entities/dlg.c"
        ],
        "message": "Merge pull request #2773 from carstenbock/use_library_for_require_parsing\n\nUse library function to fix edge case in require parsing\n\n(cherry picked from commit 432a53305ba421067f2feb7b19cb2c3f1b0289ee)",
        "before_after_code_files": [
          "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c": [
          "File: modules/b2b_entities/dlg.c -> modules/b2b_entities/dlg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: #include \"../../parser/parse_methods.h\"",
          "35: #include \"../../parser/parse_content.h\"",
          "36: #include \"../../parser/parse_authenticate.h\"",
          "37: #include \"../../parser/sdp/sdp.h\"",
          "38: #include \"../../locking.h\"",
          "39: #include \"../../script_cb.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37: #include \"../../parser/parse_supported.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2573:  int b2b_ev = -1;",
          "2574:  struct b2b_context *ctx;",
          "2575:  int b2b_cb_flags = 0;",
          "2577:  to_hdr_parsed.param_lst = from_hdr_parsed.param_lst = NULL;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2578:  unsigned int reqmask;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3141:     while(hdr)",
          "3142:     {",
          "3143:      LM_DBG(\"Found require hdr\\n\");",
          "3152:      hdr = hdr->sibling;",
          "3153:     }",
          "3154:     if(hdr)",
          "",
          "[Removed Lines]",
          "3144:      if ( (hdr->body.len == 6 &&",
          "3145:       strncmp(hdr->body.s, \"100rel\", 6)==0) ||",
          "3146:      (hdr->body.len == 8 &&",
          "3147:       strncmp(hdr->body.s, \"100rel\\r\\n\", 8)==0) )",
          "3148:      {",
          "3149:       LM_DBG(\"Found 100rel header\\n\");",
          "3150:       break;",
          "3151:      }",
          "",
          "[Added Lines]",
          "3147:      parse_supported_body(&(hdr->body), &reqmask);",
          "3148:      if (reqmask & F_SUPPORTED_100REL) {",
          "3149:        LM_DBG(\"Found 100rel header\\n\");",
          "3150:        break;",
          "3151:      }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cb6d7fa7ae230e984f52aedb261a16e9a17ef568",
      "candidate_info": {
        "commit_hash": "cb6d7fa7ae230e984f52aedb261a16e9a17ef568",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/cb6d7fa7ae230e984f52aedb261a16e9a17ef568",
        "files": [
          "modules/b2b_logic/b2b_logic.c",
          "modules/b2b_logic/b2b_logic.h",
          "modules/b2b_logic/doc/b2b_logic_admin.xml",
          "modules/b2b_logic/logic.c"
        ],
        "message": "b2b_logic: properly decrease value and pass Max-Forwrads header\n\nThis applies to requests that are effectively \"passed\" from one entity to its\npeer such as initial INVITEs handled with b2b_init_request() or requests\nhandled with b2b_pass_request().\n\nFixes #2471\n\n(cherry picked from commit fa84d8d0e6cf719c0d2c7bd215fa74e5e33e1a2f)",
        "before_after_code_files": [
          "modules/b2b_logic/b2b_logic.c||modules/b2b_logic/b2b_logic.c",
          "modules/b2b_logic/b2b_logic.h||modules/b2b_logic/b2b_logic.h",
          "modules/b2b_logic/logic.c||modules/b2b_logic/logic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_logic/b2b_logic.c||modules/b2b_logic/b2b_logic.c": [
          "File: modules/b2b_logic/b2b_logic.c -> modules/b2b_logic/b2b_logic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "124: static str default_headers[HDR_DEFAULT_LEN]=",
          "125: {",
          "126:    {\"Content-Type\",12},",
          "127:    {\"Supported\", 9},",
          "128:    {\"Allow\", 5},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "126:    {\"Max-Forwards\",12},",
          "",
          "---------------"
        ],
        "modules/b2b_logic/b2b_logic.h||modules/b2b_logic/b2b_logic.h": [
          "File: modules/b2b_logic/b2b_logic.h -> modules/b2b_logic/b2b_logic.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: #define b2b_peer(type) ((type+1)%2)",
          "49: #define HDR_LST_LEN       32",
          "53: #define  B2BL_FLAG_TRANSPARENT_AUTH 0x01",
          "",
          "[Removed Lines]",
          "50: #define HDR_DEFAULT_LEN   8",
          "",
          "[Added Lines]",
          "50: #define HDR_DEFAULT_LEN   9",
          "",
          "---------------"
        ],
        "modules/b2b_logic/logic.c||modules/b2b_logic/logic.c": [
          "File: modules/b2b_logic/logic.c -> modules/b2b_logic/logic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "293:  return 0;",
          "294: }",
          "297: b2bl_entity_id_t* b2bl_create_new_entity(enum b2b_entity_type type, str* entity_id,",
          "298:   str* to_uri, str *proxy, str* from_uri,str*from_dname, str* ssid, str* hdrs,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "296: int b2b_msg_get_maxfwd(struct sip_msg *msg)",
          "297: {",
          "298:  str vals;",
          "299:  unsigned int valn;",
          "301:  if (!msg->maxforwards) {",
          "302:   if (parse_headers(msg, HDR_MAXFORWARDS_F, 0) == -1) {",
          "303:    LM_ERR(\"parsing MAX_FORWARD header failed!\\n\");",
          "304:    return -1;",
          "305:   }",
          "306:   if (!msg->maxforwards) {",
          "307:    LM_DBG(\"max_forwards header not found!\\n\");",
          "308:    return -1;",
          "309:   }",
          "310:  }",
          "312:  trim_len(vals.len, vals.s, msg->maxforwards->body);",
          "313:  if (str2int(&vals, &valn) < 0) {",
          "314:   LM_ERR(\"Failed to parse Max-Forwards value\\n\");",
          "315:   return -1;",
          "316:  }",
          "318:  return valn;",
          "319: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1625:  b2b_req_data_t req_data;",
          "1626:  b2b_rpl_data_t rpl_data;",
          "1627:  int do_unlock = 0;",
          "1629:  if (!tuple) {",
          "1630:   lock_get(&b2bl_htable[cur_route_ctx.hash_index].lock);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1652:  int maxfwd;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1692:   req_data.extra_headers =",
          "1693:    cur_route_ctx.extra_headers->len?cur_route_ctx.extra_headers:NULL;",
          "1694:   req_data.body =cur_route_ctx.body->len?cur_route_ctx.body:NULL;",
          "1695:   b2bl_htable[cur_route_ctx.hash_index].locked_by = process_no;",
          "1696:   if(b2b_api.send_request(&req_data) < 0)",
          "1697:   {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1721:   if ((maxfwd = b2b_msg_get_maxfwd(msg)) > 0)",
          "1722:    req_data.maxfwd = maxfwd;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2998:  str from_tag_gen= {0, 0};",
          "2999:  str new_body={0, 0};",
          "3000:  struct sip_uri ct_uri;",
          "3002:  if(b2b_msg_get_from(msg, &from_uri, &from_dname)< 0 ||  b2b_msg_get_to(msg, &to_uri, params->flags)< 0)",
          "3003:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3029:  int maxfwd;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3105:   goto error;",
          "3106:  }",
          "3108:  b2bl_htable[hash_index].locked_by = process_no;",
          "3110:  client_id = b2b_api.client_new(&ci, b2b_client_notify,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3138:  if ((maxfwd = b2b_msg_get_maxfwd(msg)) > 0)",
          "3139:   ci.maxfwd = maxfwd;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3326:  str *hdrs;",
          "3327:  struct b2bl_new_entity *new_entity;",
          "3328:  struct sip_uri ct_uri;",
          "3330:  if(msg == NULL)",
          "3331:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3362:  int maxfwd;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3444:  ci.send_sock     = msg->force_send_socket?",
          "3445:   msg->force_send_socket:msg->rcv.bind_address;",
          "3447:  if (new_entity->adv_contact.s) {",
          "3448:   ci.local_contact = new_entity->adv_contact;",
          "3449:  } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3482:  if ((maxfwd = b2b_msg_get_maxfwd(msg)) > 0)",
          "3483:   ci.maxfwd = maxfwd;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "86915d16b33f35e139038f669475b194c6fc5856",
      "candidate_info": {
        "commit_hash": "86915d16b33f35e139038f669475b194c6fc5856",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/86915d16b33f35e139038f669475b194c6fc5856",
        "files": [
          "modules/clusterer/clusterer.c"
        ],
        "message": "clusterer: fix seed fallback during sync\n\nDo not fall back to the synced state for a capability if syncing is\nactually in progress.\n\n(cherry picked from commit 3960008a14fa75395cc4b49c7e7cae52ac68aed7)",
        "before_after_code_files": [
          "modules/clusterer/clusterer.c||modules/clusterer/clusterer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/clusterer/clusterer.c||modules/clusterer/clusterer.c": [
          "File: modules/clusterer/clusterer.c -> modules/clusterer/clusterer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:    lock_get(cl->lock);",
          "78:    if ((cap->flags & CAP_STATE_ENABLED) &&",
          "79:     !(cap->flags & CAP_STATE_OK) &&",
          "80:     (cl->current_node->flags & NODE_IS_SEED) &&",
          "81:     (TIME_DIFF(cap->sync_req_time, now) >= seed_fb_interval*1000000)) {",
          "82:     cap->flags |= CAP_STATE_OK;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80:     !(cap->flags & CAP_SYNC_IN_PROGRESS) &&",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d5f20d8623451890354b4c5115a50cb2622cc07c",
      "candidate_info": {
        "commit_hash": "d5f20d8623451890354b4c5115a50cb2622cc07c",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/d5f20d8623451890354b4c5115a50cb2622cc07c",
        "files": [
          "modules/python/python_exec.c"
        ],
        "message": "python: Don't leak memory in python_exec().\n\nThe bug was introduced in rev 302058d8d38 (April 2019) along\nwith module API cleanup and affects all releases since 3.0.",
        "before_after_code_files": [
          "modules/python/python_exec.c||modules/python/python_exec.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/python/python_exec.c||modules/python/python_exec.c": [
          "File: modules/python/python_exec.c -> modules/python/python_exec.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:     str mystr;",
          "49:     if (pkg_nt_str_dup(&method_name, _method_name_s) < 0)",
          "51:     if (_mystr_s && pkg_nt_str_dup(&mystr, _mystr_s) < 0)",
          "54:     PyEval_AcquireThread(myThreadState);",
          "",
          "[Removed Lines]",
          "50:         return -1;",
          "52:         return -1;",
          "",
          "[Added Lines]",
          "50:         goto e0;",
          "52:         goto e1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "115:     rval = PyLong_AsLong(pResult);",
          "116:     Py_DECREF(pResult);",
          "117:     PyEval_ReleaseThread(myThreadState);",
          "119:     pkg_free(method_name.s);",
          "121:     return rval;",
          "123: error:",
          "125:     if (_mystr_s)",
          "126:         pkg_free(mystr.s);",
          "128:     return -1;",
          "129: }",
          "",
          "[Removed Lines]",
          "124:     pkg_free(method_name.s);",
          "",
          "[Added Lines]",
          "119:     if (_mystr_s)",
          "120:         pkg_free(mystr.s);",
          "128: e1: pkg_free(method_name.s);",
          "129: e0:",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0c2e70058fe3e5f5071ce4677017cb3eaf2511c3",
      "candidate_info": {
        "commit_hash": "0c2e70058fe3e5f5071ce4677017cb3eaf2511c3",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/0c2e70058fe3e5f5071ce4677017cb3eaf2511c3",
        "files": [
          "lib/csv.c"
        ],
        "message": "lib/csv: Fix some memleak corner-cases (reported by OSS-Fuzz)\n\nFixes OSS-Fuzz#39925\n\n(cherry picked from commit ff34d213cad9c2b24460aecc206520bac5411bdc)",
        "before_after_code_files": [
          "lib/csv.c||lib/csv.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/csv.c||lib/csv.c": [
          "File: lib/csv.c -> lib/csv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:  return record;",
          "117: rfc_4180_parsing:",
          "118:  if (in.len >= 2 && in.s[in.len - 2] == '\\r' && in.s[in.len - 1] == '\\n')",
          "119:   in.len -= 2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:  parse_flags |= CSV_DUP_FIELDS;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "180:    field.len = c - field.s;",
          "183:     goto oom;",
          "185:    last = &(*last)->next;",
          "187:    if (ch == lim - 1)",
          "",
          "[Removed Lines]",
          "182:    if (!push_csv_field(&field, last, parse_flags & (~CSV_DUP_FIELDS)))",
          "",
          "[Added Lines]",
          "184:    if (!push_csv_field(&field, last, parse_flags)) {",
          "185:     free_f(field.s);",
          "187:    }",
          "189:    free_f(field.s);",
          "",
          "---------------"
        ]
      }
    }
  ]
}