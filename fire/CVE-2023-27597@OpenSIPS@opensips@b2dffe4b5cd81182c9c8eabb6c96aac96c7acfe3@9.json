{
  "cve_id": "CVE-2023-27597",
  "cve_desc": "OpenSIPS is a Session Initiation Protocol (SIP) server implementation. Prior to versions 3.1.8 and 3.2.5, when a specially crafted SIP message is processed by the function `rewrite_ruri`, a crash occurs due to a segmentation fault. This issue causes the server to crash. It affects configurations containing functions that make use of the affected code, such as the function `setport`. This issue has been fixed in version 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
  "patch_info": {
    "commit_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "files": [
      "parser/parse_uri.c"
    ],
    "message": "[core] fix parse_uri() parsing\n\nIssue discovered during OpenSIPS Security Audit 2022,\n\tby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-358f-935m-7p9c",
    "before_after_code_files": [
      "parser/parse_uri.c||parser/parse_uri.c"
    ]
  },
  "patch_diff": {
    "parser/parse_uri.c||parser/parse_uri.c": [
      "File: parser/parse_uri.c -> parser/parse_uri.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1532:   case TELS_URI_T:",
      "1534:    uri->user=uri->host;",
      "1536:    uri->host.len=0;",
      "1537:    break;",
      "1538:   case SIP_URI_T:",
      "",
      "[Removed Lines]",
      "1535:    uri->host.s=\"\";",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1543:   case URN_NENA_SERVICE_URI_T:",
      "1544:    uri->user.s=0;",
      "1545:    uri->user.len=0;",
      "1548:    break;",
      "1549:   case ERROR_URI_T:",
      "1550:    LM_ERR(\"unexpected error (BUG?)\\n\");",
      "",
      "[Removed Lines]",
      "1546:    uri->host.s=\"\";",
      "1547:    uri->host.len=0;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "80179471cb4a4ce11469de2bdb720e6f866f78aa",
      "candidate_info": {
        "commit_hash": "80179471cb4a4ce11469de2bdb720e6f866f78aa",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/80179471cb4a4ce11469de2bdb720e6f866f78aa",
        "files": [
          "modules/tracer/tracer.c"
        ],
        "message": "tracer: fix trace_stop removal from list\n\nFix the way we detect the previous element when removing from list\nBefore this change, if there were multiple elements in the list, they\nwere leaking due to the bad handling of the list removal.\n\n(cherry picked from commit dae9817b313cb98ed3d4d449064c64c9a4ac7cd8)",
        "before_after_code_files": [
          "modules/tracer/tracer.c||modules/tracer/tracer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/tracer/tracer.c||modules/tracer/tracer.c": [
          "File: modules/tracer/tracer.c -> modules/tracer/tracer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3253:  hash=it->hash;",
          "3257:   if (it->next->hash == hash)",
          "3258:    break;",
          "3259:   else",
          "",
          "[Removed Lines]",
          "3256:  for (prev=NULL, it=(*dyn_trace_list); it && it->next; it = it->next) {",
          "",
          "[Added Lines]",
          "3256:  for (prev=NULL, it=(*dyn_trace_list); it && it->hash != hash && it->next; it = it->next) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c22da3e06611cc7a7aec8019d8469c28abe53507",
      "candidate_info": {
        "commit_hash": "c22da3e06611cc7a7aec8019d8469c28abe53507",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/c22da3e06611cc7a7aec8019d8469c28abe53507",
        "files": [
          "modules/rtpengine/rtpengine.c"
        ],
        "message": "[rtpengine] avoid returning 0 as it breaks the script execution\n\nFixes #2796\n\n(cherry picked from commit 1763c7a5c894c9adecd19023cd1470a408f626fb)",
        "before_after_code_files": [
          "modules/rtpengine/rtpengine.c||modules/rtpengine/rtpengine.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/rtpengine/rtpengine.c||modules/rtpengine/rtpengine.c": [
          "File: modules/rtpengine/rtpengine.c -> modules/rtpengine/rtpengine.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3523:  if (bencode_dictionary_get_strcmp(ret, \"result\", \"ok\")) {",
          "3524:   LM_ERR(\"proxy didn't return \\\"ok\\\" result\\n\");",
          "3525:  } else",
          "3528:  bencode_buffer_free(&bencbuf);",
          "3529:  return rcode;",
          "",
          "[Removed Lines]",
          "3526:   rcode = 0;",
          "",
          "[Added Lines]",
          "3526:   rcode = 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "847f341db7437834a53c8f605d8358c4618b8c66",
      "candidate_info": {
        "commit_hash": "847f341db7437834a53c8f605d8358c4618b8c66",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/847f341db7437834a53c8f605d8358c4618b8c66",
        "files": [
          "Makefile.defs",
          "packaging/debian/changelog",
          "packaging/freebsd/Makefile",
          "packaging/netbsd/Makefile",
          "packaging/openbsd/Makefile",
          "packaging/redhat_fedora/opensips.spec",
          "packaging/solaris/base-pkginfo",
          "packaging/solaris/berkeley-pkginfo",
          "packaging/solaris/carrierroute-pkginfo",
          "packaging/solaris/identity-pkginfo",
          "packaging/solaris/ldap-pkginfo",
          "packaging/solaris/mmgeoip-pkginfo",
          "packaging/solaris/mysql-pkginfo",
          "packaging/solaris/perl-pkginfo",
          "packaging/solaris/pgsql-pkginfo",
          "packaging/solaris/pkginfo",
          "packaging/solaris/regex-pkginfo",
          "packaging/solaris/snmp-pkginfo",
          "packaging/solaris/tls-pkginfo",
          "packaging/solaris/xmlrpc-pkginfo"
        ],
        "message": "Bump version to 3.2.5",
        "before_after_code_files": [
          "Makefile.defs||Makefile.defs",
          "packaging/redhat_fedora/opensips.spec||packaging/redhat_fedora/opensips.spec"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.defs||Makefile.defs": [
          "File: Makefile.defs -> Makefile.defs",
          "--- Hunk 1 ---",
          "[Context before]",
          "66: #version number",
          "67: VERSION_MAJOR = 3",
          "68: VERSION_MINOR = 2",
          "70: VERSION_BUILD =",
          "72: ifneq (,$(VERSION_BUILD))",
          "",
          "[Removed Lines]",
          "69: VERSION_SUBMINOR = 4",
          "",
          "[Added Lines]",
          "69: VERSION_SUBMINOR = 5",
          "",
          "---------------"
        ],
        "packaging/redhat_fedora/opensips.spec||packaging/redhat_fedora/opensips.spec": [
          "File: packaging/redhat_fedora/opensips.spec -> packaging/redhat_fedora/opensips.spec",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: Summary:  Very fast and configurable SIP server",
          "47: Name:     opensips",
          "49: Release:  1%{?dist}",
          "50: License:  GPLv2+",
          "51: Group:    System Environment/Daemons",
          "",
          "[Removed Lines]",
          "48: Version:  3.2.4",
          "",
          "[Added Lines]",
          "48: Version:  3.2.5",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ff646336e82ce1bdea56156c826520090c9786ad",
      "candidate_info": {
        "commit_hash": "ff646336e82ce1bdea56156c826520090c9786ad",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/ff646336e82ce1bdea56156c826520090c9786ad",
        "files": [
          "modules/b2b_entities/b2b_common.h",
          "modules/b2b_logic/b2b_logic.c",
          "modules/b2b_logic/logic.c"
        ],
        "message": "b2b_logic: prevent possible crashes when accessing $b2b_logic vars\n\nMake sure to always search in the hash for the current tuple instead of relying\non a pointer saved in the b2b context. There might be races between processing\nBYEs and deleting the tuple and running a b2b_logic reply route where we access\na $b2b_logic variable.\n\nThanks to David Escartin from Sonoc for reporting.",
        "before_after_code_files": [
          "modules/b2b_entities/b2b_common.h||modules/b2b_entities/b2b_common.h",
          "modules/b2b_logic/b2b_logic.c||modules/b2b_logic/b2b_logic.c",
          "modules/b2b_logic/logic.c||modules/b2b_logic/logic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_entities/b2b_common.h||modules/b2b_entities/b2b_common.h": [
          "File: modules/b2b_entities/b2b_common.h -> modules/b2b_entities/b2b_common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: struct b2b_context {",
          "33:  str b2bl_key;",
          "35: };",
          "37: #endif",
          "",
          "[Removed Lines]",
          "34:  void *data;",
          "",
          "[Added Lines]",
          "34:  unsigned int hash_index;",
          "35:  unsigned int local_index;",
          "36:  int init;",
          "",
          "---------------"
        ],
        "modules/b2b_logic/b2b_logic.c||modules/b2b_logic/b2b_logic.c": [
          "File: modules/b2b_logic/b2b_logic.c -> modules/b2b_logic/b2b_logic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1507:  return NULL;",
          "1508: }",
          "1512: {",
          "1513:  b2bl_tuple_t *tuple;",
          "1517:  if (!tuple) {",
          "1531:     ctx->b2bl_key.s);",
          "1534:    return NULL;",
          "1535:   }",
          "1542:  }",
          "1544:  return tuple;",
          "1545: }",
          "1548: {",
          "1549:  b2bl_tuple_t *tuple;",
          "1550:  struct b2b_context *ctx;",
          "",
          "[Removed Lines]",
          "1511: b2bl_tuple_t *get_entities_ctx_tuple(struct b2b_context *ctx)",
          "1514:  unsigned int hash_index, local_index;",
          "1516:  tuple = ctx->data;",
          "1519:   if (b2bl_parse_key(&ctx->b2bl_key, &hash_index, &local_index) < 0) {",
          "1520:    LM_ERR(\"Failed to parse key [%.*s]\\n\", ctx->b2bl_key.len,",
          "1521:     ctx->b2bl_key.s);",
          "1522:    return NULL;",
          "1523:   }",
          "1525:   if (b2bl_htable[hash_index].locked_by != process_no)",
          "1526:    lock_get(&b2bl_htable[hash_index].lock);",
          "1528:   tuple = b2bl_search_tuple_safe(hash_index, local_index);",
          "1529:   if (!tuple) {",
          "1530:    LM_ERR(\"Tuple [%.*s] not found\\n\", ctx->b2bl_key.len,",
          "1532:    if (b2bl_htable[hash_index].locked_by != process_no)",
          "1533:     lock_release(&b2bl_htable[hash_index].lock);",
          "1538:   ctx->data = tuple;",
          "1540:   if (b2bl_htable[hash_index].locked_by != process_no)",
          "1541:    lock_release(&b2bl_htable[hash_index].lock);",
          "1547: b2bl_tuple_t *get_ctx_tuple(void)",
          "",
          "[Added Lines]",
          "1510: static b2bl_tuple_t *ctx_search_tuple(struct b2b_context *ctx, int *locked)",
          "1515:  if (b2bl_htable[ctx->hash_index].locked_by != process_no)",
          "1516:   lock_get(&b2bl_htable[ctx->hash_index].lock);",
          "1518:  tuple = b2bl_search_tuple_safe(ctx->hash_index, ctx->local_index);",
          "1520:   LM_ERR(\"Tuple [%u, %u] not found\\n\", ctx->hash_index, ctx->local_index);",
          "1521:   if (b2bl_htable[ctx->hash_index].locked_by != process_no)",
          "1522:    lock_release(&b2bl_htable[ctx->hash_index].lock);",
          "1523:   locked = 0;",
          "1524:   return NULL;",
          "1525:  }",
          "1527:  return tuple;",
          "1528: }",
          "1531: b2bl_tuple_t *get_entities_ctx_tuple(struct b2b_context *ctx, int *locked)",
          "1532: {",
          "1533:  b2bl_tuple_t *tuple;",
          "1535:  if (!ctx->init) {",
          "1537:   if (b2bl_parse_key(&ctx->b2bl_key,",
          "1538:    &ctx->hash_index, &ctx->local_index) < 0) {",
          "1539:    LM_ERR(\"Failed to parse key [%.*s]\\n\", ctx->b2bl_key.len,",
          "1544:   tuple = ctx_search_tuple(ctx, locked);",
          "1545:   if (tuple)",
          "1546:    ctx->init = 1;",
          "1547:  } else {",
          "1548:   tuple = ctx_search_tuple(ctx, locked);",
          "1554: b2bl_tuple_t *get_ctx_tuple(int *locked)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1560:    LM_DBG(\"b2b_logic key not set in b2b_entities context\\n\");",
          "1564:   }",
          "1567:   if (!tuple) {",
          "1568:    LM_ERR(\"Failed to get tuple [%.*s] from b2b context\\n\",",
          "1569:     ctx->b2bl_key.len, ctx->b2bl_key.s);",
          "",
          "[Removed Lines]",
          "1563:    return ctx->data;",
          "1566:   tuple = get_entities_ctx_tuple(ctx);",
          "",
          "[Added Lines]",
          "1570:    if (!ctx->init)",
          "1571:     return NULL;",
          "1572:    else",
          "1573:     return ctx_search_tuple(ctx, locked);",
          "1576:   tuple = get_entities_ctx_tuple(ctx, locked);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1581: int pv_get_b2bl_key(struct sip_msg *msg, pv_param_t *param, pv_value_t *res)",
          "1582: {",
          "1583:  b2bl_tuple_t *tuple;",
          "1586:  if (!tuple) {",
          "1587:   LM_DBG(\"Unable to get the tuple from the current context\\n\");",
          "1588:   return pv_get_null(msg, param, res);",
          "",
          "[Removed Lines]",
          "1585:  tuple = get_ctx_tuple();",
          "",
          "[Added Lines]",
          "1594:  int locked = 0;",
          "1596:  tuple = get_ctx_tuple(&locked);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1591:  res->flags = PV_VAL_STR;",
          "1592:  res->rs = *tuple->key;",
          "1594:  return 0;",
          "1595: }",
          "1597: int pv_get_scenario(struct sip_msg *msg, pv_param_t *param, pv_value_t *res)",
          "1598: {",
          "1599:  b2bl_tuple_t *tuple;",
          "1602:  if (!tuple) {",
          "1603:   LM_DBG(\"Unable to get the tuple from the current context\\n\");",
          "1604:   return pv_get_null(msg, param, res);",
          "",
          "[Removed Lines]",
          "1601:  tuple = get_ctx_tuple();",
          "",
          "[Added Lines]",
          "1605:  if (locked && b2bl_htable[tuple->hash_index].locked_by != process_no)",
          "1606:   lock_release(&b2bl_htable[tuple->hash_index].lock);",
          "1614:  int locked = 0;",
          "1616:  tuple = get_ctx_tuple(&locked);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1607:  res->flags = PV_VAL_STR;",
          "1608:  res->rs = *tuple->scenario_id;",
          "1610:  return 0;",
          "1611: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1625:  if (locked && b2bl_htable[tuple->hash_index].locked_by != process_no)",
          "1626:   lock_release(&b2bl_htable[tuple->hash_index].lock);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1668:  b2b_dlginfo_t dummy_dlginfo;",
          "1669:  str callid;",
          "1670:  int i;",
          "1673:  if (!tuple) {",
          "1674:   LM_ERR(\"Failed to get the tuple from the current context\\n\");",
          "1675:   return pv_get_null(msg, param, res);",
          "1676:  }",
          "1679:   lock_get(&b2bl_htable[tuple->hash_index].lock);",
          "1681:  curr_entities[0] = tuple->bridge_entities[0];",
          "",
          "[Removed Lines]",
          "1672:  tuple = get_ctx_tuple();",
          "1678:  if (b2bl_htable[tuple->hash_index].locked_by != process_no)",
          "",
          "[Added Lines]",
          "1689:  int locked = 0;",
          "1691:  tuple = get_ctx_tuple(&locked);",
          "1697:  if (!locked && b2bl_htable[tuple->hash_index].locked_by != process_no)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1914:  return 0;",
          "1915: }",
          "1918: {",
          "1919:  struct b2b_context *ctx;",
          "",
          "[Removed Lines]",
          "1917: int get_ctx_vals(struct b2b_ctx_val ***vals, b2bl_tuple_t **tuple)",
          "",
          "[Added Lines]",
          "1936: int get_ctx_vals(struct b2b_ctx_val ***vals, b2bl_tuple_t **tuple, int *locked)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1926:   }",
          "1928:   if (!ctx->b2bl_key.s) {",
          "1930:     LM_DBG(\"tuple not created yet\\n\");",
          "1933:     return 0;",
          "1934:    } else {",
          "1936:    }",
          "1937:   } else {",
          "1939:    if (*tuple == NULL) {",
          "1940:     LM_ERR(\"Failed to get tuple [%.*s] from b2b context\\n\",",
          "1941:      ctx->b2bl_key.len, ctx->b2bl_key.s);",
          "",
          "[Removed Lines]",
          "1929:    if (!ctx->data) {",
          "",
          "[Added Lines]",
          "1948:    if (!ctx->init) {",
          "1955:     if (*tuple == NULL)",
          "1956:      return -1;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1955: {",
          "1956:  struct b2b_ctx_val **vals;",
          "1957:  b2bl_tuple_t *tuple = NULL;",
          "1959:  if (!param || !param->pvn.u.isname.name.s.s) {",
          "1960:   LM_ERR(\"Bad parameters!\\n\");",
          "1961:   return -1;",
          "1962:  }",
          "1965:   LM_ERR(\"Failed to get context values list\\n\");",
          "1966:   return pv_get_null(msg, param, res);",
          "1967:  }",
          "1970:   lock_get(&b2bl_htable[tuple->hash_index].lock);",
          "1972:  if (fetch_ctx_value(*vals, &param->pvn.u.isname.name.s, &param->pvv) != 0) {",
          "",
          "[Removed Lines]",
          "1964:  if (get_ctx_vals(&vals, &tuple) < 0) {",
          "1969:  if (tuple && b2bl_htable[tuple->hash_index].locked_by != process_no)",
          "",
          "[Added Lines]",
          "1979:  int locked = 0;",
          "1986:  if (get_ctx_vals(&vals, &tuple, &locked) < 0) {",
          "1991:  if (tuple && !locked && b2bl_htable[tuple->hash_index].locked_by != process_no)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1987: {",
          "1988:  struct b2b_ctx_val **ctx_vals = NULL;",
          "1989:  b2bl_tuple_t *tuple = NULL;",
          "1991:  if (!param || !param->pvn.u.isname.name.s.s) {",
          "1992:   LM_ERR(\"Bad parameters!\\n\");",
          "1993:   return -1;",
          "1994:  }",
          "1997:   LM_ERR(\"Failed to get context values list\\n\");",
          "1998:   return -1;",
          "1999:  }",
          "2002:   lock_get(&b2bl_htable[tuple->hash_index].lock);",
          "2004:  if (val==NULL || val->flags&(PV_VAL_NONE|PV_VAL_NULL|PV_VAL_EMPTY)) {",
          "",
          "[Removed Lines]",
          "1996:  if (get_ctx_vals(&ctx_vals, &tuple) < 0) {",
          "2001:  if (tuple && b2bl_htable[tuple->hash_index].locked_by != process_no)",
          "",
          "[Added Lines]",
          "2012:  int locked = 0;",
          "2019:  if (get_ctx_vals(&ctx_vals, &tuple, &locked) < 0) {",
          "2024:  if (tuple && !locked && b2bl_htable[tuple->hash_index].locked_by != process_no)",
          "",
          "---------------"
        ],
        "modules/b2b_logic/logic.c||modules/b2b_logic/logic.c": [
          "File: modules/b2b_logic/logic.c -> modules/b2b_logic/logic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3070:   LM_ERR(\"Failed to get b2b context\\n\");",
          "3071:   goto error;",
          "3072:  }",
          "3076:  if (params->init_timeout == 0)",
          "",
          "[Removed Lines]",
          "3073:  ctx->data = tuple;",
          "",
          "[Added Lines]",
          "3073:  ctx->init = 1;",
          "3074:  ctx->hash_index = hash_index;",
          "3075:  ctx->local_index = tuple->id;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3412:   LM_ERR(\"Failed to get b2b context\\n\");",
          "3413:   goto error;",
          "3414:  }",
          "3417:  if (new_entities_no != MAX_BRIDGE_ENT-1) {",
          "3418:   LM_ERR(\"Two bridge entities required!\\n\");",
          "",
          "[Removed Lines]",
          "3415:  ctx->data = tuple;",
          "",
          "[Added Lines]",
          "3417:  ctx->init = 1;",
          "3418:  ctx->hash_index = hash_index;",
          "3419:  ctx->local_index = tuple->id;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4549:   LM_ERR(\"Failed to get b2b context\\n\");",
          "4550:   goto error;",
          "4551:  }",
          "4554:  if(entity_no!=0 && entity_no!=1)",
          "4555:  {",
          "",
          "[Removed Lines]",
          "4552:  ctx->data = tuple;",
          "",
          "[Added Lines]",
          "4556:  ctx->init = 1;",
          "4557:  ctx->hash_index = hash_index;",
          "4558:  ctx->local_index = local_index;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ff17c36863b4582f597f3750444c12e7ce323cc8",
      "candidate_info": {
        "commit_hash": "ff17c36863b4582f597f3750444c12e7ce323cc8",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/ff17c36863b4582f597f3750444c12e7ce323cc8",
        "files": [
          "parser/parse_hname2.c"
        ],
        "message": "Fix rare UB on left-shift signed int overflow\n\nBy default, most commonly used compilers *define* some behaviour when\nthis overflow occurs, such that the program will continue normally,\nwithout any negative consequences.\n\nSeverity: Minor\nFixes OSS-Fuzz#40201\n\n(cherry picked from commit 2ba963b0c5e2b6705a3f28ce44e57b248988a103)",
        "before_after_code_files": [
          "parser/parse_hname2.c||parser/parse_hname2.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "parser/parse_hname2.c||parser/parse_hname2.c": [
          "File: parser/parse_hname2.c -> parser/parse_hname2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"keys.h\"",
          "",
          "[Removed Lines]",
          "35: #define LOWER_BYTE(b) ((b) | 0x20)",
          "36: #define LOWER_DWORD(d) ((d) | 0x20202020)",
          "",
          "[Added Lines]",
          "35: #define LOWER_BYTE(b) ((b) | 0x20U)",
          "36: #define LOWER_DWORD(d) ((d) | 0x20202020U)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94: #ifdef FUZZ_BUILD",
          "",
          "[Removed Lines]",
          "91: #define READ(val) \\",
          "92: (*(val + 0) + (*(val + 1) << 8) + (*(val + 2) << 16) + (*(val + 3) << 24))",
          "",
          "[Added Lines]",
          "97: #define READ(addr) \\",
          "98:  ((unsigned)*((unsigned char *)addr + 0) + \\",
          "99:   ((unsigned)*((unsigned char *)addr + 1) << 8) + \\",
          "100:   ((unsigned)*((unsigned char *)addr + 2) << 16) + \\",
          "101:   ((unsigned)*((unsigned char *)addr + 3) << 24))",
          "",
          "---------------"
        ]
      }
    }
  ]
}