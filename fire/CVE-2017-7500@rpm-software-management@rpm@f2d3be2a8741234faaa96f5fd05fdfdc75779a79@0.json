{
  "cve_id": "CVE-2017-7500",
  "cve_desc": "It was found that rpm did not properly handle RPM installations when a destination path was a symbolic link to a directory, possibly changing ownership and permissions of an arbitrary directory, and RPM files being placed in an arbitrary destination. An attacker, with write access to a directory in which a subdirectory will be installed, could redirect that directory to an arbitrary location and gain root privilege.",
  "repo": "rpm-software-management/rpm",
  "patch_hash": "f2d3be2a8741234faaa96f5fd05fdfdc75779a79",
  "patch_info": {
    "commit_hash": "f2d3be2a8741234faaa96f5fd05fdfdc75779a79",
    "repo": "rpm-software-management/rpm",
    "commit_url": "https://github.com/rpm-software-management/rpm/commit/f2d3be2a8741234faaa96f5fd05fdfdc75779a79",
    "files": [
      "lib/fsm.c",
      "tests/data/SPECS/replacetest.spec",
      "tests/rpmreplace.at"
    ],
    "message": "Restrict following symlinks to directories by ownership (CVE-2017-7500)\n\nOnly follow directory symlinks owned by target directory owner or root.\nThis prevents privilege escalation from user-writable directories via\ndirectory symlinks to privileged directories on package upgrade, while\nstill allowing admin to arrange disk usage with symlinks.\n\nThe rationale is that if you can create symlinks owned by user X you *are*\nuser X (or root), and if you also own directory Y you can do whatever with\nit already, including change permissions. So when you create a symlink to\nthat directory, the link ownership acts as a simple stamp of authority that\nyou indeed want rpm to treat this symlink as it were the directory that\nyou own. Such a permission can only be given by you or root, which\nis just the way we want it. Plus it's almost ridiculously simple as far\nas rules go, compared to trying to calculate something from the\nsource vs destination directory permissions etc.\n\nIn the normal case, the user arranging diskspace with symlinks is indeed\nroot so nothing changes, the only real change here is to links created by\nnon-privileged users which should be few and far between in practise.\nUnfortunately our test-suite runs as a regular user via fakechroot and\nthus the testcase for this fails under the new rules. Adjust the testcase\nto get the ownership straight and add a second case for the illegal\nbehavior, basically the same as the old one but with different expectations.",
    "before_after_code_files": [
      "lib/fsm.c||lib/fsm.c",
      "tests/data/SPECS/replacetest.spec||tests/data/SPECS/replacetest.spec",
      "tests/rpmreplace.at||tests/rpmreplace.at"
    ]
  },
  "patch_diff": {
    "lib/fsm.c||lib/fsm.c": [
      "File: lib/fsm.c -> lib/fsm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "650:     return rc;",
      "651: }",
      "654: {",
      "655:     int rc;",
      "656:     int saveerrno = errno;",
      "",
      "[Removed Lines]",
      "653: static int fsmVerify(const char *path, rpmfi fi)",
      "",
      "[Added Lines]",
      "653: static int fsmVerify(const char *path, rpmfi fi, const struct stat *fsb)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "675:     } else if (S_ISDIR(mode)) {",
      "676:         if (S_ISDIR(dsb.st_mode)) return 0;",
      "677:         if (S_ISLNK(dsb.st_mode)) {",
      "678:             rc = fsmStat(path, 0, &dsb);",
      "679:             if (rc == RPMERR_ENOENT) rc = 0;",
      "680:             if (rc) return rc;",
      "681:             errno = saveerrno;",
      "683:         }",
      "684:     } else if (S_ISLNK(mode)) {",
      "685:         if (S_ISLNK(dsb.st_mode)) {",
      "",
      "[Removed Lines]",
      "682:             if (S_ISDIR(dsb.st_mode)) return 0;",
      "",
      "[Added Lines]",
      "678:      uid_t luid = dsb.st_uid;",
      "684:             if (S_ISDIR(dsb.st_mode) && (luid == 0 || luid == fsb->st_uid))",
      "685:       return 0;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "921:      }",
      "923:      if (!suffix) {",
      "925:      } else {",
      "926:   rc = (action == FA_TOUCH) ? 0 : RPMERR_ENOENT;",
      "927:      }",
      "",
      "[Removed Lines]",
      "924:   rc = fsmVerify(fpath, fi);",
      "",
      "[Added Lines]",
      "927:   rc = fsmVerify(fpath, fi, &sb);",
      "",
      "---------------"
    ],
    "tests/data/SPECS/replacetest.spec||tests/data/SPECS/replacetest.spec": [
      "File: tests/data/SPECS/replacetest.spec -> tests/data/SPECS/replacetest.spec",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: %{!?filetype: %global filetype file}",
      "2: %{?fixit: %global havepretrans 1}",
      "4: Name:  replacetest%{?sub:-%{sub}}",
      "5: Version: %{ver}",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3: %{!?user: %global user root}",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "43: %endif",
      "45: %files",
      "47: /opt/*",
      "",
      "[Removed Lines]",
      "46: %defattr(-,root,root,-)",
      "",
      "[Added Lines]",
      "47: %defattr(-,%{user},%{user},-)",
      "",
      "---------------"
    ],
    "tests/rpmreplace.at||tests/rpmreplace.at": [
      "File: tests/rpmreplace.at -> tests/rpmreplace.at",
      "--- Hunk 1 ---",
      "[Context before]",
      "402:         --define \"ver 1.0\" \\",
      "403:  --define \"filetype datadir\" \\",
      "404:  --define \"filedata README1\" \\",
      "405:           /data/SPECS/replacetest.spec",
      "407: runroot rpmbuild --quiet -bb \\",
      "408:         --define \"ver 2.0\" \\",
      "409:  --define \"filetype datadir\" \\",
      "410:  --define \"filedata README2\" \\",
      "411:           /data/SPECS/replacetest.spec",
      "413: mkdir \"${RPMTEST}\"/opt/f00f",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "405:  --define \"user $(id -u -n)\" \\",
      "412:  --define \"user $(id -u -n)\" \\",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421: [])",
      "422: AT_CLEANUP",
      "424: AT_SETUP([upgrade empty directory to broken link])",
      "425: AT_KEYWORDS([install])",
      "426: AT_CHECK([",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "426: AT_SETUP([upgrade invalid locally symlinked directory])",
      "427: AT_KEYWORDS([install])",
      "428: AT_CHECK([",
      "429: RPMDB_CLEAR",
      "430: RPMDB_INIT",
      "431: tf=\"${RPMTEST}\"/opt/foo",
      "432: rm -rf \"${RPMTEST}\"/opt/*",
      "433: rm -rf \"${TOPDIR}\"",
      "435: runroot rpmbuild --quiet -bb \\",
      "436:         --define \"ver 1.0\" \\",
      "437:  --define \"filetype datadir\" \\",
      "438:  --define \"filedata README1\" \\",
      "439:           /data/SPECS/replacetest.spec",
      "441: runroot rpmbuild --quiet -bb \\",
      "442:         --define \"ver 2.0\" \\",
      "443:  --define \"filetype datadir\" \\",
      "444:  --define \"filedata README2\" \\",
      "445:           /data/SPECS/replacetest.spec",
      "447: mkdir \"${RPMTEST}\"/opt/f00f",
      "448: ln -s f00f \"${RPMTEST}\"/opt/foo",
      "449: runroot rpm -U /build/RPMS/noarch/replacetest-1.0-1.noarch.rpm",
      "450: test -L \"${tf}\" && test -d \"${tf}\" && runroot rpm -U /build/RPMS/noarch/replacetest-2.0-1.noarch.rpm",
      "451: test -d \"${tf}\"",
      "452: ],",
      "453: [0],",
      "454: [],",
      "455: [])",
      "456: AT_CLEANUP",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a450d05728f8372763c00b6c90fb00b282fc1dac",
      "candidate_info": {
        "commit_hash": "a450d05728f8372763c00b6c90fb00b282fc1dac",
        "repo": "rpm-software-management/rpm",
        "commit_url": "https://github.com/rpm-software-management/rpm/commit/a450d05728f8372763c00b6c90fb00b282fc1dac",
        "files": [
          "lib/fsm.c",
          "tests/data/SPECS/replacetest.spec",
          "tests/rpmreplace.at"
        ],
        "message": "Restrict following symlinks to directories by ownership (CVE-2017-7500)\n\nOnly follow directory symlinks owned by target directory owner or root.\nThis prevents privilege escalation from user-writable directories via\ndirectory symlinks to privileged directories on package upgrade, while\nstill allowing admin to arrange disk usage with symlinks.\n\nThe rationale is that if you can create symlinks owned by user X you *are*\nuser X (or root), and if you also own directory Y you can do whatever with\nit already, including change permissions. So when you create a symlink to\nthat directory, the link ownership acts as a simple stamp of authority that\nyou indeed want rpm to treat this symlink as it were the directory that\nyou own. Such a permission can only be given by you or root, which\nis just the way we want it. Plus it's almost ridiculously simple as far\nas rules go, compared to trying to calculate something from the\nsource vs destination directory permissions etc.\n\nIn the normal case, the user arranging diskspace with symlinks is indeed\nroot so nothing changes, the only real change here is to links created by\nnon-privileged users which should be few and far between in practise.\nUnfortunately our test-suite runs as a regular user via fakechroot and\nthus the testcase for this fails under the new rules. Adjust the testcase\nto get the ownership straight and add a second case for the illegal\nbehavior, basically the same as the old one but with different expectations.\n\n(cherry picked from commit f2d3be2a8741234faaa96f5fd05fdfdc75779a79)",
        "before_after_code_files": [
          "lib/fsm.c||lib/fsm.c",
          "tests/data/SPECS/replacetest.spec||tests/data/SPECS/replacetest.spec",
          "tests/rpmreplace.at||tests/rpmreplace.at"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/fsm.c||lib/fsm.c",
            "tests/data/SPECS/replacetest.spec||tests/data/SPECS/replacetest.spec",
            "tests/rpmreplace.at||tests/rpmreplace.at"
          ],
          "candidate": [
            "lib/fsm.c||lib/fsm.c",
            "tests/data/SPECS/replacetest.spec||tests/data/SPECS/replacetest.spec",
            "tests/rpmreplace.at||tests/rpmreplace.at"
          ]
        }
      },
      "candidate_diff": {
        "lib/fsm.c||lib/fsm.c": [
          "File: lib/fsm.c -> lib/fsm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "650:     return rc;",
          "651: }",
          "654: {",
          "655:     int rc;",
          "656:     int saveerrno = errno;",
          "",
          "[Removed Lines]",
          "653: static int fsmVerify(const char *path, rpmfi fi)",
          "",
          "[Added Lines]",
          "653: static int fsmVerify(const char *path, rpmfi fi, const struct stat *fsb)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "675:     } else if (S_ISDIR(mode)) {",
          "676:         if (S_ISDIR(dsb.st_mode)) return 0;",
          "677:         if (S_ISLNK(dsb.st_mode)) {",
          "678:             rc = fsmStat(path, 0, &dsb);",
          "679:             if (rc == RPMERR_ENOENT) rc = 0;",
          "680:             if (rc) return rc;",
          "681:             errno = saveerrno;",
          "683:         }",
          "684:     } else if (S_ISLNK(mode)) {",
          "685:         if (S_ISLNK(dsb.st_mode)) {",
          "",
          "[Removed Lines]",
          "682:             if (S_ISDIR(dsb.st_mode)) return 0;",
          "",
          "[Added Lines]",
          "678:      uid_t luid = dsb.st_uid;",
          "684:             if (S_ISDIR(dsb.st_mode) && (luid == 0 || luid == fsb->st_uid))",
          "685:       return 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "921:      }",
          "923:      if (!suffix) {",
          "925:      } else {",
          "926:   rc = (action == FA_TOUCH) ? 0 : RPMERR_ENOENT;",
          "927:      }",
          "",
          "[Removed Lines]",
          "924:   rc = fsmVerify(fpath, fi);",
          "",
          "[Added Lines]",
          "927:   rc = fsmVerify(fpath, fi, &sb);",
          "",
          "---------------"
        ],
        "tests/data/SPECS/replacetest.spec||tests/data/SPECS/replacetest.spec": [
          "File: tests/data/SPECS/replacetest.spec -> tests/data/SPECS/replacetest.spec",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: %{!?filetype: %global filetype file}",
          "2: %{?fixit: %global havepretrans 1}",
          "4: Name:  replacetest%{?sub:-%{sub}}",
          "5: Version: %{ver}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: %{!?user: %global user root}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: %endif",
          "45: %files",
          "47: /opt/*",
          "",
          "[Removed Lines]",
          "46: %defattr(-,root,root,-)",
          "",
          "[Added Lines]",
          "47: %defattr(-,%{user},%{user},-)",
          "",
          "---------------"
        ],
        "tests/rpmreplace.at||tests/rpmreplace.at": [
          "File: tests/rpmreplace.at -> tests/rpmreplace.at",
          "--- Hunk 1 ---",
          "[Context before]",
          "402:         --define \"ver 1.0\" \\",
          "403:  --define \"filetype datadir\" \\",
          "404:  --define \"filedata README1\" \\",
          "405:           /data/SPECS/replacetest.spec",
          "407: runroot rpmbuild --quiet -bb \\",
          "408:         --define \"ver 2.0\" \\",
          "409:  --define \"filetype datadir\" \\",
          "410:  --define \"filedata README2\" \\",
          "411:           /data/SPECS/replacetest.spec",
          "413: mkdir \"${RPMTEST}\"/opt/f00f",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "405:  --define \"user $(id -u -n)\" \\",
          "412:  --define \"user $(id -u -n)\" \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "421: [])",
          "422: AT_CLEANUP",
          "424: AT_SETUP([upgrade empty directory to broken link])",
          "425: AT_KEYWORDS([install])",
          "426: AT_CHECK([",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "426: AT_SETUP([upgrade invalid locally symlinked directory])",
          "427: AT_KEYWORDS([install])",
          "428: AT_CHECK([",
          "429: RPMDB_CLEAR",
          "430: RPMDB_INIT",
          "431: tf=\"${RPMTEST}\"/opt/foo",
          "432: rm -rf \"${RPMTEST}\"/opt/*",
          "433: rm -rf \"${TOPDIR}\"",
          "435: runroot rpmbuild --quiet -bb \\",
          "436:         --define \"ver 1.0\" \\",
          "437:  --define \"filetype datadir\" \\",
          "438:  --define \"filedata README1\" \\",
          "439:           /data/SPECS/replacetest.spec",
          "441: runroot rpmbuild --quiet -bb \\",
          "442:         --define \"ver 2.0\" \\",
          "443:  --define \"filetype datadir\" \\",
          "444:  --define \"filedata README2\" \\",
          "445:           /data/SPECS/replacetest.spec",
          "447: mkdir \"${RPMTEST}\"/opt/f00f",
          "448: ln -s f00f \"${RPMTEST}\"/opt/foo",
          "449: runroot rpm -U /build/RPMS/noarch/replacetest-1.0-1.noarch.rpm",
          "450: test -L \"${tf}\" && test -d \"${tf}\" && runroot rpm -U /build/RPMS/noarch/replacetest-2.0-1.noarch.rpm",
          "451: test -d \"${tf}\"",
          "452: ],",
          "453: [0],",
          "454: [],",
          "455: [])",
          "456: AT_CLEANUP",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e964b839863e7a8480983251ac546570bc31c09",
      "candidate_info": {
        "commit_hash": "8e964b839863e7a8480983251ac546570bc31c09",
        "repo": "rpm-software-management/rpm",
        "commit_url": "https://github.com/rpm-software-management/rpm/commit/8e964b839863e7a8480983251ac546570bc31c09",
        "files": [
          "lib/fsm.c",
          "tests/data/SPECS/replacetest.spec",
          "tests/rpmreplace.at"
        ],
        "message": "Restrict following symlinks to directories by ownership (CVE-2017-7500)\n\nOnly follow directory symlinks owned by target directory owner or root.\nThis prevents privilege escalation from user-writable directories via\ndirectory symlinks to privileged directories on package upgrade, while\nstill allowing admin to arrange disk usage with symlinks.\n\nThe rationale is that if you can create symlinks owned by user X you *are*\nuser X (or root), and if you also own directory Y you can do whatever with\nit already, including change permissions. So when you create a symlink to\nthat directory, the link ownership acts as a simple stamp of authority that\nyou indeed want rpm to treat this symlink as it were the directory that\nyou own. Such a permission can only be given by you or root, which\nis just the way we want it. Plus it's almost ridiculously simple as far\nas rules go, compared to trying to calculate something from the\nsource vs destination directory permissions etc.\n\nIn the normal case, the user arranging diskspace with symlinks is indeed\nroot so nothing changes, the only real change here is to links created by\nnon-privileged users which should be few and far between in practise.\nUnfortunately our test-suite runs as a regular user via fakechroot and\nthus the testcase for this fails under the new rules. Adjust the testcase\nto get the ownership straight and add a second case for the illegal\nbehavior, basically the same as the old one but with different expectations.\n\n(cherry picked from commit f2d3be2a8741234faaa96f5fd05fdfdc75779a79)",
        "before_after_code_files": [
          "lib/fsm.c||lib/fsm.c",
          "tests/data/SPECS/replacetest.spec||tests/data/SPECS/replacetest.spec",
          "tests/rpmreplace.at||tests/rpmreplace.at"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/fsm.c||lib/fsm.c",
            "tests/data/SPECS/replacetest.spec||tests/data/SPECS/replacetest.spec",
            "tests/rpmreplace.at||tests/rpmreplace.at"
          ],
          "candidate": [
            "lib/fsm.c||lib/fsm.c",
            "tests/data/SPECS/replacetest.spec||tests/data/SPECS/replacetest.spec",
            "tests/rpmreplace.at||tests/rpmreplace.at"
          ]
        }
      },
      "candidate_diff": {
        "lib/fsm.c||lib/fsm.c": [
          "File: lib/fsm.c -> lib/fsm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "638:     return rc;",
          "639: }",
          "642: {",
          "643:     int rc;",
          "644:     int saveerrno = errno;",
          "",
          "[Removed Lines]",
          "641: static int fsmVerify(const char *path, rpmfi fi)",
          "",
          "[Added Lines]",
          "641: static int fsmVerify(const char *path, rpmfi fi, const struct stat *fsb)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "663:     } else if (S_ISDIR(mode)) {",
          "664:         if (S_ISDIR(dsb.st_mode)) return 0;",
          "665:         if (S_ISLNK(dsb.st_mode)) {",
          "666:             rc = fsmStat(path, 0, &dsb);",
          "667:             if (rc == RPMERR_ENOENT) rc = 0;",
          "668:             if (rc) return rc;",
          "669:             errno = saveerrno;",
          "671:         }",
          "672:     } else if (S_ISLNK(mode)) {",
          "673:         if (S_ISLNK(dsb.st_mode)) {",
          "",
          "[Removed Lines]",
          "670:             if (S_ISDIR(dsb.st_mode)) return 0;",
          "",
          "[Added Lines]",
          "666:      uid_t luid = dsb.st_uid;",
          "672:             if (S_ISDIR(dsb.st_mode) && (luid == 0 || luid == fsb->st_uid))",
          "673:       return 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "899:      }",
          "901:      if (!suffix) {",
          "903:      } else {",
          "904:   rc = RPMERR_ENOENT;",
          "905:      }",
          "",
          "[Removed Lines]",
          "902:   rc = fsmVerify(fpath, fi);",
          "",
          "[Added Lines]",
          "905:   rc = fsmVerify(fpath, fi, &sb);",
          "",
          "---------------"
        ],
        "tests/data/SPECS/replacetest.spec||tests/data/SPECS/replacetest.spec": [
          "File: tests/data/SPECS/replacetest.spec -> tests/data/SPECS/replacetest.spec",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: %{!?filetype: %global filetype file}",
          "2: %{?fixit: %global havepretrans 1}",
          "4: Name:  replacetest%{?sub:-%{sub}}",
          "5: Version: %{ver}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: %{!?user: %global user root}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: %endif",
          "45: %files",
          "47: /opt/*",
          "",
          "[Removed Lines]",
          "46: %defattr(-,root,root,-)",
          "",
          "[Added Lines]",
          "47: %defattr(-,%{user},%{user},-)",
          "",
          "---------------"
        ],
        "tests/rpmreplace.at||tests/rpmreplace.at": [
          "File: tests/rpmreplace.at -> tests/rpmreplace.at",
          "--- Hunk 1 ---",
          "[Context before]",
          "402:         --define \"ver 1.0\" \\",
          "403:  --define \"filetype datadir\" \\",
          "404:  --define \"filedata README1\" \\",
          "405:           /data/SPECS/replacetest.spec",
          "407: runroot rpmbuild --quiet -bb \\",
          "408:         --define \"ver 2.0\" \\",
          "409:  --define \"filetype datadir\" \\",
          "410:  --define \"filedata README2\" \\",
          "411:           /data/SPECS/replacetest.spec",
          "413: mkdir \"${RPMTEST}\"/opt/f00f",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "405:  --define \"user $(id -u -n)\" \\",
          "412:  --define \"user $(id -u -n)\" \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "421: [])",
          "422: AT_CLEANUP",
          "424: AT_SETUP([upgrade empty directory to broken link])",
          "425: AT_KEYWORDS([install])",
          "426: AT_CHECK([",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "426: AT_SETUP([upgrade invalid locally symlinked directory])",
          "427: AT_KEYWORDS([install])",
          "428: AT_CHECK([",
          "429: RPMDB_CLEAR",
          "430: RPMDB_INIT",
          "431: tf=\"${RPMTEST}\"/opt/foo",
          "432: rm -rf \"${RPMTEST}\"/opt/*",
          "433: rm -rf \"${TOPDIR}\"",
          "435: runroot rpmbuild --quiet -bb \\",
          "436:         --define \"ver 1.0\" \\",
          "437:  --define \"filetype datadir\" \\",
          "438:  --define \"filedata README1\" \\",
          "439:           /data/SPECS/replacetest.spec",
          "441: runroot rpmbuild --quiet -bb \\",
          "442:         --define \"ver 2.0\" \\",
          "443:  --define \"filetype datadir\" \\",
          "444:  --define \"filedata README2\" \\",
          "445:           /data/SPECS/replacetest.spec",
          "447: mkdir \"${RPMTEST}\"/opt/f00f",
          "448: ln -s f00f \"${RPMTEST}\"/opt/foo",
          "449: runroot rpm -U /build/RPMS/noarch/replacetest-1.0-1.noarch.rpm",
          "450: test -L \"${tf}\" && test -d \"${tf}\" && runroot rpm -U /build/RPMS/noarch/replacetest-2.0-1.noarch.rpm",
          "451: test -d \"${tf}\"",
          "452: ],",
          "453: [0],",
          "454: [],",
          "455: [])",
          "456: AT_CLEANUP",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d3fae43615f4e925e21fd12a96974a85542f13b9",
      "candidate_info": {
        "commit_hash": "d3fae43615f4e925e21fd12a96974a85542f13b9",
        "repo": "rpm-software-management/rpm",
        "commit_url": "https://github.com/rpm-software-management/rpm/commit/d3fae43615f4e925e21fd12a96974a85542f13b9",
        "files": [
          "lib/fsm.c"
        ],
        "message": "Really fix CVE-2017-7500. Ugh.\n\nThis is what you get for rushing a fix and relying on a test-suite that\ncannot test ownership changes :( The idea behind passing the stat struct\nfrom the package in commit f2d3be2a8741234faaa96f5fd05fdfdc75779a79\nperhaps was that we'd actually want the owner of the target directory in\nthe package, not disk. But it's not the target directory we're passing\nthere (we can't easily get that data from here) so the test is bogus\nand thus doesn't fix the actual problem. Just use the target directory\npermissions on disk since that's the best we have, and remove the now\nunused argument from fsmVerify() again.\n\nThanks to Michael Schroeder and SUSE QA team for noticing and reporting!",
        "before_after_code_files": [
          "lib/fsm.c||lib/fsm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/fsm.c||lib/fsm.c"
          ],
          "candidate": [
            "lib/fsm.c||lib/fsm.c"
          ]
        }
      },
      "candidate_diff": {
        "lib/fsm.c||lib/fsm.c": [
          "File: lib/fsm.c -> lib/fsm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "653:     return rc;",
          "654: }",
          "657: {",
          "658:     int rc;",
          "659:     int saveerrno = errno;",
          "",
          "[Removed Lines]",
          "656: static int fsmVerify(const char *path, rpmfi fi, const struct stat *fsb)",
          "",
          "[Added Lines]",
          "656: static int fsmVerify(const char *path, rpmfi fi)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "684:             if (rc) return rc;",
          "685:             errno = saveerrno;",
          "688:       return 0;",
          "689:         }",
          "690:     } else if (S_ISLNK(mode)) {",
          "",
          "[Removed Lines]",
          "687:             if (S_ISDIR(dsb.st_mode) && (luid == 0 || luid == fsb->st_uid))",
          "",
          "[Added Lines]",
          "687:             if (S_ISDIR(dsb.st_mode) && (luid == 0 || luid == dsb.st_uid))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "928:      }",
          "930:      if (!suffix) {",
          "932:      } else {",
          "933:   rc = (action == FA_TOUCH) ? 0 : RPMERR_ENOENT;",
          "934:      }",
          "",
          "[Removed Lines]",
          "931:   rc = fsmVerify(fpath, fi, &sb);",
          "",
          "[Added Lines]",
          "931:   rc = fsmVerify(fpath, fi);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "92b718bb0e98ecaea6d4229eab9ef3bc0220d9c2",
      "candidate_info": {
        "commit_hash": "92b718bb0e98ecaea6d4229eab9ef3bc0220d9c2",
        "repo": "rpm-software-management/rpm",
        "commit_url": "https://github.com/rpm-software-management/rpm/commit/92b718bb0e98ecaea6d4229eab9ef3bc0220d9c2",
        "files": [
          "tests/data/SPECS/replacetest.spec",
          "tests/rpmreplace.at",
          "tests/rpmverify.at"
        ],
        "message": "Don't assume per-user groups in test-suite\n\nThe tests from commits f2d3be2a8741234faaa96f5fd05fdfdc75779a79 and\nc815822c8bdb138066ff58c624ae83e3a12ebfa9 assume per-user groups,\nbut this is not a generally valid assumption and causes unnecessary\nbogus failures in the test-suite in some setups (eg mock)",
        "before_after_code_files": [
          "tests/data/SPECS/replacetest.spec||tests/data/SPECS/replacetest.spec",
          "tests/rpmreplace.at||tests/rpmreplace.at",
          "tests/rpmverify.at||tests/rpmverify.at"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/data/SPECS/replacetest.spec||tests/data/SPECS/replacetest.spec",
            "tests/rpmreplace.at||tests/rpmreplace.at"
          ],
          "candidate": [
            "tests/data/SPECS/replacetest.spec||tests/data/SPECS/replacetest.spec",
            "tests/rpmreplace.at||tests/rpmreplace.at"
          ]
        }
      },
      "candidate_diff": {
        "tests/data/SPECS/replacetest.spec||tests/data/SPECS/replacetest.spec": [
          "File: tests/data/SPECS/replacetest.spec -> tests/data/SPECS/replacetest.spec",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: %{!?filetype: %global filetype file}",
          "2: %{?fixit: %global havepretrans 1}",
          "3: %{!?user: %global user root}",
          "5: Name:  replacetest%{?sub:-%{sub}}",
          "6: Version: %{ver}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: %{!?grp: %global grp root}",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44: %endif",
          "46: %files",
          "48: /opt/*",
          "",
          "[Removed Lines]",
          "47: %defattr(-,%{user},%{user},-)",
          "",
          "[Added Lines]",
          "48: %defattr(-,%{user},%{grp},-)",
          "",
          "---------------"
        ],
        "tests/rpmreplace.at||tests/rpmreplace.at": [
          "File: tests/rpmreplace.at -> tests/rpmreplace.at",
          "--- Hunk 1 ---",
          "[Context before]",
          "403:  --define \"filetype datadir\" \\",
          "404:  --define \"filedata README1\" \\",
          "405:  --define \"user $(id -u -n)\" \\",
          "406:           /data/SPECS/replacetest.spec",
          "408: runroot rpmbuild --quiet -bb \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "406:  --define \"grp $(id -g -n)\" \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "410:  --define \"filetype datadir\" \\",
          "411:  --define \"filedata README2\" \\",
          "412:  --define \"user $(id -u -n)\" \\",
          "413:           /data/SPECS/replacetest.spec",
          "415: mkdir \"${RPMTEST}\"/opt/f00f",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "414:  --define \"grp $(id -g -n)\" \\",
          "",
          "---------------"
        ],
        "tests/rpmverify.at||tests/rpmverify.at": [
          "File: tests/rpmverify.at -> tests/rpmverify.at",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:         --define \"filetype datadir\" \\",
          "79:         --define \"filedata README1\" \\",
          "80:         --define \"user $(id -u -n)\" \\",
          "81:           /data/SPECS/replacetest.spec",
          "83: runroot rpm -U /build/RPMS/noarch/replacetest-1.0-1.noarch.rpm",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:         --define \"grp $(id -g -n)\" \\",
          "",
          "---------------"
        ]
      }
    }
  ]
}