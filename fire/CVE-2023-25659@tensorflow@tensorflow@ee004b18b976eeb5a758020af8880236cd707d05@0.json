{
  "cve_id": "CVE-2023-25659",
  "cve_desc": "TensorFlow is an open source platform for machine learning. Prior to versions 2.12.0 and 2.11.1, if the parameter `indices` for `DynamicStitch` does not match the shape of the parameter `data`, it can trigger an stack OOB read. A fix is included in TensorFlow version 2.12.0 and version 2.11.1.\n",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "ee004b18b976eeb5a758020af8880236cd707d05",
  "patch_info": {
    "commit_hash": "ee004b18b976eeb5a758020af8880236cd707d05",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/ee004b18b976eeb5a758020af8880236cd707d05",
    "files": [
      "tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc",
      "tensorflow/core/kernels/dynamic_stitch_op.cc",
      "tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py"
    ],
    "message": "Add out of bounds array check to dynamic_stitch_op.\n\nPiperOrigin-RevId: 506418249",
    "before_after_code_files": [
      "tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc||tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc",
      "tensorflow/core/kernels/dynamic_stitch_op.cc||tensorflow/core/kernels/dynamic_stitch_op.cc",
      "tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py||tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc||tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc": [
      "File: tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc -> tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "146:     for (int input_num = 0; input_num < indices.size(); input_num++) {",
      "147:       for (int i = 0; i < indices[input_num].shape().dimensions(0); ++i) {",
      "148:         int index = indices[input_num].Get<int>({i});",
      "149:         src_input_vector[index] = input_num;",
      "150:         src_slice_vector[index] = i;",
      "151:         if (!src_index_used[index]) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "149:         OP_REQUIRES(",
      "150:             ctx, index >= 0,",
      "151:             errors::InvalidArgument(\"indices[\", index, \"] is out of range\"));",
      "",
      "---------------"
    ],
    "tensorflow/core/kernels/dynamic_stitch_op.cc||tensorflow/core/kernels/dynamic_stitch_op.cc": [
      "File: tensorflow/core/kernels/dynamic_stitch_op.cc -> tensorflow/core/kernels/dynamic_stitch_op.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "101:     OP_REQUIRES_OK(c, c->input_list(\"data\", data_inputs));",
      "102:     const Tensor& data0 = (*data_inputs)[0];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "100:     for (const Tensor& indices : *indices_inputs) {",
      "101:       auto indices_vec = indices.flat<int32>();",
      "103:       for (int i = 0; i < indices_vec.size(); i++) {",
      "104:         int32_t index = internal::SubtleMustCopy(indices_vec(i));",
      "105:         OP_REQUIRES(",
      "106:             c, FastBoundsCheck(index, *first_dim_size),",
      "107:             errors::InvalidArgument(\"indices[\", i, \"] is out of range\"));",
      "108:       }",
      "109:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "265:           const T* data_base = data_flat.data();",
      "266:           for (int i = 0; i < indices_vec.size(); i++) {",
      "267:             int32_t index = internal::SubtleMustCopy(indices_vec(i));",
      "271:             memcpy(merged_base + index * slice_size, data_base + i * slice_size,",
      "272:                    slice_bytes);",
      "273:           }",
      "",
      "[Removed Lines]",
      "268:             OP_REQUIRES(",
      "269:                 c, FastBoundsCheck(index, first_dim_size),",
      "270:                 errors::InvalidArgument(\"indices[\", i, \"] is out of range\"));",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "278:             Eigen::DSizes<Eigen::DenseIndex, 2> data_indices(i, 0);",
      "279:             int32_t index = internal::SubtleMustCopy(indices_vec(i));",
      "283:             Eigen::DSizes<Eigen::DenseIndex, 2> merged_indices(index, 0);",
      "284:             merged_flat.slice(merged_indices, sizes) =",
      "285:                 data_flat.slice(data_indices, sizes);",
      "",
      "[Removed Lines]",
      "280:             OP_REQUIRES(",
      "281:                 c, FastBoundsCheck(index, first_dim_size),",
      "282:                 errors::InvalidArgument(\"indices[\", i, \"] is out of range\"));",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py||tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py": [
      "File: tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py -> tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "226:     with self.assertRaises(ValueError):",
      "227:       self.stitch_op(indices, data)",
      "230: class DynamicStitchTest(DynamicStitchTestBase, test.TestCase):",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "229:   def testOutOfBoundsIndexRaisesInvalidArgument(self):",
      "230:     with self.assertRaisesRegex(errors.InvalidArgumentError, \"out of range\"):",
      "231:       indices = [[-1000], [405], [519], [758], [1015]]",
      "232:       data = [",
      "233:           [110.27793884277344],",
      "234:           [120.29475402832031],",
      "235:           [157.2418212890625],",
      "236:           [157.2626953125],",
      "237:           [188.45382690429688],",
      "238:       ]",
      "240:       self.evaluate(self.stitch_op(indices, data))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6b48e16c5311a4be90a0820286c39bd1a5874efe",
      "candidate_info": {
        "commit_hash": "6b48e16c5311a4be90a0820286c39bd1a5874efe",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/6b48e16c5311a4be90a0820286c39bd1a5874efe",
        "files": [
          "tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc",
          "tensorflow/core/kernels/dynamic_stitch_op.cc",
          "tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py"
        ],
        "message": "Add out of bounds array check to dynamic_stitch_op.\n\nPiperOrigin-RevId: 506418249",
        "before_after_code_files": [
          "tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc||tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc",
          "tensorflow/core/kernels/dynamic_stitch_op.cc||tensorflow/core/kernels/dynamic_stitch_op.cc",
          "tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py||tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc||tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc",
            "tensorflow/core/kernels/dynamic_stitch_op.cc||tensorflow/core/kernels/dynamic_stitch_op.cc",
            "tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py||tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py"
          ],
          "candidate": [
            "tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc||tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc",
            "tensorflow/core/kernels/dynamic_stitch_op.cc||tensorflow/core/kernels/dynamic_stitch_op.cc",
            "tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py||tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc||tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc": [
          "File: tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc -> tensorflow/compiler/tf2xla/kernels/dynamic_stitch_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "146:     for (int input_num = 0; input_num < indices.size(); input_num++) {",
          "147:       for (int i = 0; i < indices[input_num].shape().dimensions(0); ++i) {",
          "148:         int index = indices[input_num].Get<int>({i});",
          "149:         src_input_vector[index] = input_num;",
          "150:         src_slice_vector[index] = i;",
          "151:         if (!src_index_used[index]) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "149:         OP_REQUIRES(",
          "150:             ctx, index >= 0,",
          "151:             errors::InvalidArgument(\"indices[\", index, \"] is out of range\"));",
          "",
          "---------------"
        ],
        "tensorflow/core/kernels/dynamic_stitch_op.cc||tensorflow/core/kernels/dynamic_stitch_op.cc": [
          "File: tensorflow/core/kernels/dynamic_stitch_op.cc -> tensorflow/core/kernels/dynamic_stitch_op.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:     OP_REQUIRES_OK(c, c->input_list(\"data\", data_inputs));",
          "102:     const Tensor& data0 = (*data_inputs)[0];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:     for (const Tensor& indices : *indices_inputs) {",
          "101:       auto indices_vec = indices.flat<int32>();",
          "103:       for (int i = 0; i < indices_vec.size(); i++) {",
          "104:         int32_t index = internal::SubtleMustCopy(indices_vec(i));",
          "105:         OP_REQUIRES(",
          "106:             c, FastBoundsCheck(index, *first_dim_size),",
          "107:             errors::InvalidArgument(\"indices[\", i, \"] is out of range\"));",
          "108:       }",
          "109:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "265:           const T* data_base = data_flat.data();",
          "266:           for (int i = 0; i < indices_vec.size(); i++) {",
          "267:             int32_t index = internal::SubtleMustCopy(indices_vec(i));",
          "271:             memcpy(merged_base + index * slice_size, data_base + i * slice_size,",
          "272:                    slice_bytes);",
          "273:           }",
          "",
          "[Removed Lines]",
          "268:             OP_REQUIRES(",
          "269:                 c, FastBoundsCheck(index, first_dim_size),",
          "270:                 errors::InvalidArgument(\"indices[\", i, \"] is out of range\"));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "278:             Eigen::DSizes<Eigen::DenseIndex, 2> data_indices(i, 0);",
          "279:             int32_t index = internal::SubtleMustCopy(indices_vec(i));",
          "283:             Eigen::DSizes<Eigen::DenseIndex, 2> merged_indices(index, 0);",
          "284:             merged_flat.slice(merged_indices, sizes) =",
          "285:                 data_flat.slice(data_indices, sizes);",
          "",
          "[Removed Lines]",
          "280:             OP_REQUIRES(",
          "281:                 c, FastBoundsCheck(index, first_dim_size),",
          "282:                 errors::InvalidArgument(\"indices[\", i, \"] is out of range\"));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py||tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py": [
          "File: tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py -> tensorflow/python/kernel_tests/data_structures/dynamic_stitch_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "221:     with self.assertRaises(ValueError):",
          "222:       self.stitch_op(indices, data)",
          "225: class DynamicStitchTest(DynamicStitchTestBase, test.TestCase):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "224:   def testOutOfBoundsIndexRaisesInvalidArgument(self):",
          "225:     with self.assertRaisesRegex(errors.InvalidArgumentError, \"out of range\"):",
          "226:       indices = [[-1000], [405], [519], [758], [1015]]",
          "227:       data = [",
          "228:           [110.27793884277344],",
          "229:           [120.29475402832031],",
          "230:           [157.2418212890625],",
          "231:           [157.2626953125],",
          "232:           [188.45382690429688],",
          "233:       ]",
          "235:       self.evaluate(self.stitch_op(indices, data))",
          "",
          "---------------"
        ]
      }
    }
  ]
}