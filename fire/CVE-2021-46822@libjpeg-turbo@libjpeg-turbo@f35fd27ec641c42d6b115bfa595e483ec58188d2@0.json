{
  "cve_id": "CVE-2021-46822",
  "cve_desc": "The PPM reader in libjpeg-turbo through 2.0.90 mishandles use of tjLoadImage for loading a 16-bit binary PPM file into a grayscale buffer and loading a 16-bit binary PGM file into an RGB buffer. This is related to a heap-based buffer overflow in the get_word_rgb_row function in rdppm.c.",
  "repo": "libjpeg-turbo/libjpeg-turbo",
  "patch_hash": "f35fd27ec641c42d6b115bfa595e483ec58188d2",
  "patch_info": {
    "commit_hash": "f35fd27ec641c42d6b115bfa595e483ec58188d2",
    "repo": "libjpeg-turbo/libjpeg-turbo",
    "commit_url": "https://github.com/libjpeg-turbo/libjpeg-turbo/commit/f35fd27ec641c42d6b115bfa595e483ec58188d2",
    "files": [
      "ChangeLog.md",
      "rdppm.c"
    ],
    "message": "tjLoadImage: Fix issues w/loading 16-bit PPMs/PGMs\n\n- The PPM reader now throws an error rather than segfaulting (due to a\n  buffer overrun) if an application attempts to load a 16-bit PPM file\n  into a grayscale uncompressed image buffer.  No known applications\n  allowed that (not even the test applications in libjpeg-turbo),\n  because that mode of operation was never expected to work and did not\n  work under any circumstances.  (In fact, it was necessary to modify\n  TJBench in order to reproduce the issue outside of a fuzzing\n  environment.)  This was purely a matter of making the library bow out\n  gracefully rather than crash if an application tries to do something\n  really stupid.\n\n- The PPM reader now throws an error rather than generating incorrect\n  pixels if an application attempts to load a 16-bit PGM file into an\n  RGB uncompressed image buffer.\n\n- The PPM reader now correctly loads 16-bit PPM files into extended\n  RGB uncompressed image buffers.  (Previously it generated incorrect\n  pixels unless the input colorspace was JCS_RGB or JCS_EXT_RGB.)\n\nThe only way that users could have potentially encountered these issues\nwas through the tjLoadImage() function.  cjpeg and TJBench were\nunaffected.",
    "before_after_code_files": [
      "rdppm.c||rdppm.c"
    ]
  },
  "patch_diff": {
    "rdppm.c||rdppm.c": [
      "File: rdppm.c -> rdppm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "516:   register JSAMPLE *rescale = source->rescale;",
      "517:   JDIMENSION col;",
      "518:   unsigned int maxval = source->maxval;",
      "520:   if (!ReadOK(source->pub.input_file, source->iobuffer, source->buffer_width))",
      "521:     ERREXIT(cinfo, JERR_INPUT_EOF);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "519:   register int rindex = rgb_red[cinfo->in_color_space];",
      "520:   register int gindex = rgb_green[cinfo->in_color_space];",
      "521:   register int bindex = rgb_blue[cinfo->in_color_space];",
      "522:   register int aindex = alpha_index[cinfo->in_color_space];",
      "523:   register int ps = rgb_pixelsize[cinfo->in_color_space];",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "527:     temp |= UCH(*bufferptr++);",
      "528:     if (temp > maxval)",
      "529:       ERREXIT(cinfo, JERR_PPM_OUTOFRANGE);",
      "531:     temp  = UCH(*bufferptr++) << 8;",
      "532:     temp |= UCH(*bufferptr++);",
      "533:     if (temp > maxval)",
      "534:       ERREXIT(cinfo, JERR_PPM_OUTOFRANGE);",
      "536:     temp  = UCH(*bufferptr++) << 8;",
      "537:     temp |= UCH(*bufferptr++);",
      "538:     if (temp > maxval)",
      "539:       ERREXIT(cinfo, JERR_PPM_OUTOFRANGE);",
      "541:   }",
      "542:   return 1;",
      "543: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "535:     ptr[rindex] = rescale[temp];",
      "540:     ptr[gindex] = rescale[temp];",
      "545:     ptr[bindex] = rescale[temp];",
      "546:     if (aindex >= 0)",
      "547:       ptr[aindex] = 0xFF;",
      "548:     ptr += ps;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "624:       cinfo->in_color_space = JCS_GRAYSCALE;",
      "625:     TRACEMS2(cinfo, 1, JTRC_PGM, w, h);",
      "626:     if (maxval > 255) {",
      "628:     } else if (maxval == MAXJSAMPLE && sizeof(JSAMPLE) == sizeof(U_CHAR) &&",
      "629:                cinfo->in_color_space == JCS_GRAYSCALE) {",
      "630:       source->pub.get_pixel_rows = get_raw_row;",
      "",
      "[Removed Lines]",
      "627:       source->pub.get_pixel_rows = get_word_gray_row;",
      "",
      "[Added Lines]",
      "635:       if (cinfo->in_color_space == JCS_GRAYSCALE)",
      "636:         source->pub.get_pixel_rows = get_word_gray_row;",
      "637:       else",
      "638:         ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "647:       cinfo->in_color_space = JCS_EXT_RGB;",
      "648:     TRACEMS2(cinfo, 1, JTRC_PPM, w, h);",
      "649:     if (maxval > 255) {",
      "651:     } else if (maxval == MAXJSAMPLE && sizeof(JSAMPLE) == sizeof(U_CHAR) &&",
      "652: #if RGB_RED == 0 && RGB_GREEN == 1 && RGB_BLUE == 2 && RGB_PIXELSIZE == 3",
      "653:                (cinfo->in_color_space == JCS_EXT_RGB ||",
      "",
      "[Removed Lines]",
      "650:       source->pub.get_pixel_rows = get_word_rgb_row;",
      "",
      "[Added Lines]",
      "661:       if (IsExtRGB(cinfo->in_color_space))",
      "662:         source->pub.get_pixel_rows = get_word_rgb_row;",
      "663:       else",
      "664:         ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5b56c7f80817955daa60d8b60644d0a5a0caa90a",
      "candidate_info": {
        "commit_hash": "5b56c7f80817955daa60d8b60644d0a5a0caa90a",
        "repo": "libjpeg-turbo/libjpeg-turbo",
        "commit_url": "https://github.com/libjpeg-turbo/libjpeg-turbo/commit/5b56c7f80817955daa60d8b60644d0a5a0caa90a",
        "files": [
          "ChangeLog.md",
          "rdppm.c"
        ],
        "message": "tjLoadImage: Fix issues w/loading 16-bit PPMs/PGMs\n\n- The PPM reader now throws an error rather than segfaulting (due to a\n  buffer overrun) if an application attempts to load a 16-bit PPM file\n  into a grayscale uncompressed image buffer.  No known applications\n  allowed that (not even the test applications in libjpeg-turbo),\n  because that mode of operation was never expected to work and did not\n  work under any circumstances.  (In fact, it was necessary to modify\n  TJBench in order to reproduce the issue outside of a fuzzing\n  environment.)  This was purely a matter of making the library bow out\n  gracefully rather than crash if an application tries to do something\n  really stupid.\n\n- The PPM reader now throws an error rather than generating incorrect\n  pixels if an application attempts to load a 16-bit PGM file into an\n  RGB uncompressed image buffer.\n\n- The PPM reader now correctly loads 16-bit PPM files into extended\n  RGB uncompressed image buffers.  (Previously it generated incorrect\n  pixels unless the input colorspace was JCS_RGB or JCS_EXT_RGB.)\n\nThe only way that users could have potentially encountered these issues\nwas through the tjLoadImage() function.  cjpeg and TJBench were\nunaffected.",
        "before_after_code_files": [
          "rdppm.c||rdppm.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "rdppm.c||rdppm.c"
          ],
          "candidate": [
            "rdppm.c||rdppm.c"
          ]
        }
      },
      "candidate_diff": {
        "rdppm.c||rdppm.c": [
          "File: rdppm.c -> rdppm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "526:   register JSAMPLE *rescale = source->rescale;",
          "527:   JDIMENSION col;",
          "528:   unsigned int maxval = source->maxval;",
          "530:   if (!ReadOK(source->pub.input_file, source->iobuffer, source->buffer_width))",
          "531:     ERREXIT(cinfo, JERR_INPUT_EOF);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "529:   register int rindex = rgb_red[cinfo->in_color_space];",
          "530:   register int gindex = rgb_green[cinfo->in_color_space];",
          "531:   register int bindex = rgb_blue[cinfo->in_color_space];",
          "532:   register int aindex = alpha_index[cinfo->in_color_space];",
          "533:   register int ps = rgb_pixelsize[cinfo->in_color_space];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "537:     temp |= UCH(*bufferptr++);",
          "538:     if (temp > maxval)",
          "539:       ERREXIT(cinfo, JERR_PPM_OUTOFRANGE);",
          "541:     temp  = UCH(*bufferptr++) << 8;",
          "542:     temp |= UCH(*bufferptr++);",
          "543:     if (temp > maxval)",
          "544:       ERREXIT(cinfo, JERR_PPM_OUTOFRANGE);",
          "546:     temp  = UCH(*bufferptr++) << 8;",
          "547:     temp |= UCH(*bufferptr++);",
          "548:     if (temp > maxval)",
          "549:       ERREXIT(cinfo, JERR_PPM_OUTOFRANGE);",
          "551:   }",
          "552:   return 1;",
          "553: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "545:     ptr[rindex] = rescale[temp];",
          "550:     ptr[gindex] = rescale[temp];",
          "555:     ptr[bindex] = rescale[temp];",
          "556:     if (aindex >= 0)",
          "557:       ptr[aindex] = 0xFF;",
          "558:     ptr += ps;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "634:       cinfo->in_color_space = JCS_GRAYSCALE;",
          "635:     TRACEMS2(cinfo, 1, JTRC_PGM, w, h);",
          "636:     if (maxval > 255) {",
          "638:     } else if (maxval == MAXJSAMPLE && sizeof(JSAMPLE) == sizeof(U_CHAR) &&",
          "639:                cinfo->in_color_space == JCS_GRAYSCALE) {",
          "640:       source->pub.get_pixel_rows = get_raw_row;",
          "",
          "[Removed Lines]",
          "637:       source->pub.get_pixel_rows = get_word_gray_row;",
          "",
          "[Added Lines]",
          "645:       if (cinfo->in_color_space == JCS_GRAYSCALE)",
          "646:         source->pub.get_pixel_rows = get_word_gray_row;",
          "647:       else",
          "648:         ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "657:       cinfo->in_color_space = JCS_EXT_RGB;",
          "658:     TRACEMS2(cinfo, 1, JTRC_PPM, w, h);",
          "659:     if (maxval > 255) {",
          "661:     } else if (maxval == MAXJSAMPLE && sizeof(JSAMPLE) == sizeof(U_CHAR) &&",
          "662: #if RGB_RED == 0 && RGB_GREEN == 1 && RGB_BLUE == 2 && RGB_PIXELSIZE == 3",
          "663:                (cinfo->in_color_space == JCS_EXT_RGB ||",
          "",
          "[Removed Lines]",
          "660:       source->pub.get_pixel_rows = get_word_rgb_row;",
          "",
          "[Added Lines]",
          "671:       if (IsExtRGB(cinfo->in_color_space))",
          "672:         source->pub.get_pixel_rows = get_word_rgb_row;",
          "673:       else",
          "674:         ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);",
          "",
          "---------------"
        ]
      }
    }
  ]
}