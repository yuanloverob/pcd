{
  "cve_id": "CVE-2023-52138",
  "cve_desc": "Engrampa is an archive manager for the MATE environment. Engrampa is found to be vulnerable to a Path Traversal vulnerability that can be leveraged to achieve full Remote Command Execution (RCE) on the target. While handling CPIO archives, the Engrampa Archive manager follows symlink, cpio by default will follow stored symlinks while extracting and the Archiver will not check the symlink location, which leads to arbitrary file writes to unintended locations. When the victim extracts the archive, the attacker can craft a malicious cpio or ISO archive to achieve RCE on the target system. This vulnerability was fixed in commit 63d5dfa.",
  "repo": "mate-desktop/engrampa",
  "patch_hash": "63d5dfa9005c6b16d0f0ccd888cc859fca78f970",
  "patch_info": {
    "commit_hash": "63d5dfa9005c6b16d0f0ccd888cc859fca78f970",
    "repo": "mate-desktop/engrampa",
    "commit_url": "https://github.com/mate-desktop/engrampa/commit/63d5dfa9005c6b16d0f0ccd888cc859fca78f970",
    "files": [
      "src/fr-command-cpio.c",
      "src/fr-command-unarchiver.c"
    ],
    "message": "Use unar instead of cpio for CPIO archives",
    "before_after_code_files": [
      "src/fr-command-cpio.c||src/fr-command-cpio.c",
      "src/fr-command-unarchiver.c||src/fr-command-unarchiver.c"
    ]
  },
  "patch_diff": {
    "src/fr-command-cpio.c||src/fr-command-cpio.c": [
      "File: src/fr-command-cpio.c -> src/fr-command-cpio.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "219:  fr_process_end_command (comm->process);",
      "220: }",
      "224: static const char **",
      "225: fr_command_cpio_get_mime_types (FrCommand *comm)",
      "",
      "[Removed Lines]",
      "222: const char *cpio_mime_type[] = { \"application/x-cpio\", NULL };",
      "",
      "[Added Lines]",
      "222: const char *cpio_mime_type[] = { /*\"application/x-cpio\",*/ NULL };",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "235:  FrCommandCaps capabilities;",
      "237:  capabilities = FR_COMMAND_CAN_ARCHIVE_MANY_FILES;",
      "241:  return capabilities;",
      "242: }",
      "",
      "[Removed Lines]",
      "238:  if (is_program_available (CPIO_PATH, check_command))",
      "239:   capabilities |= FR_COMMAND_CAN_READ;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "src/fr-command-unarchiver.c||src/fr-command-unarchiver.c": [
      "File: src/fr-command-unarchiver.c -> src/fr-command-unarchiver.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "247: const char *unarchiver_mime_type[] = { \"application/zip\",",
      "248:            \"application/x-cbr\",",
      "249:            \"application/x-rar\",",
      "250:            NULL };",
      "252: static const char **",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "250:            \"application/x-cpio\",",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8cd485a58d865d89d71931b66d7e2cb2202fc1be",
      "candidate_info": {
        "commit_hash": "8cd485a58d865d89d71931b66d7e2cb2202fc1be",
        "repo": "mate-desktop/engrampa",
        "commit_url": "https://github.com/mate-desktop/engrampa/commit/8cd485a58d865d89d71931b66d7e2cb2202fc1be",
        "files": [
          "src/fr-command-cpio.c",
          "src/fr-command-unarchiver.c"
        ],
        "message": "Use unar instead of cpio for CPIO archives",
        "before_after_code_files": [
          "src/fr-command-cpio.c||src/fr-command-cpio.c",
          "src/fr-command-unarchiver.c||src/fr-command-unarchiver.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/fr-command-cpio.c||src/fr-command-cpio.c",
            "src/fr-command-unarchiver.c||src/fr-command-unarchiver.c"
          ],
          "candidate": [
            "src/fr-command-cpio.c||src/fr-command-cpio.c",
            "src/fr-command-unarchiver.c||src/fr-command-unarchiver.c"
          ]
        }
      },
      "candidate_diff": {
        "src/fr-command-cpio.c||src/fr-command-cpio.c": [
          "File: src/fr-command-cpio.c -> src/fr-command-cpio.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "224: }",
          "230: static const char **",
          "",
          "[Removed Lines]",
          "227: const char *cpio_mime_type[] = { \"application/x-cpio\", NULL };",
          "",
          "[Added Lines]",
          "227: const char *cpio_mime_type[] = { /*\"application/x-cpio\",*/ NULL };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "242:  FrCommandCap capabilities;",
          "244:  capabilities = FR_COMMAND_CAN_ARCHIVE_MANY_FILES;",
          "248:  return capabilities;",
          "249: }",
          "",
          "[Removed Lines]",
          "245:  if (is_program_available (CPIO_PATH, check_command))",
          "246:   capabilities |= FR_COMMAND_CAN_READ;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/fr-command-unarchiver.c||src/fr-command-unarchiver.c": [
          "File: src/fr-command-unarchiver.c -> src/fr-command-unarchiver.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "255: const char *unarchiver_mime_type[] = { \"application/zip\",",
          "256:            \"application/x-cbr\",",
          "257:            \"application/x-rar\",",
          "258:            NULL };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "258:            \"application/x-cpio\",",
          "",
          "---------------"
        ]
      }
    }
  ]
}