{
  "cve_id": "CVE-2023-27597",
  "cve_desc": "OpenSIPS is a Session Initiation Protocol (SIP) server implementation. Prior to versions 3.1.8 and 3.2.5, when a specially crafted SIP message is processed by the function `rewrite_ruri`, a crash occurs due to a segmentation fault. This issue causes the server to crash. It affects configurations containing functions that make use of the affected code, such as the function `setport`. This issue has been fixed in version 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
  "patch_info": {
    "commit_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "files": [
      "parser/parse_uri.c"
    ],
    "message": "[core] fix parse_uri() parsing\n\nIssue discovered during OpenSIPS Security Audit 2022,\n\tby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-358f-935m-7p9c",
    "before_after_code_files": [
      "parser/parse_uri.c||parser/parse_uri.c"
    ]
  },
  "patch_diff": {
    "parser/parse_uri.c||parser/parse_uri.c": [
      "File: parser/parse_uri.c -> parser/parse_uri.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1532:   case TELS_URI_T:",
      "1534:    uri->user=uri->host;",
      "1536:    uri->host.len=0;",
      "1537:    break;",
      "1538:   case SIP_URI_T:",
      "",
      "[Removed Lines]",
      "1535:    uri->host.s=\"\";",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1543:   case URN_NENA_SERVICE_URI_T:",
      "1544:    uri->user.s=0;",
      "1545:    uri->user.len=0;",
      "1548:    break;",
      "1549:   case ERROR_URI_T:",
      "1550:    LM_ERR(\"unexpected error (BUG?)\\n\");",
      "",
      "[Removed Lines]",
      "1546:    uri->host.s=\"\";",
      "1547:    uri->host.len=0;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "973b04d8805d9e1b73833eba682790fcd7d0e56c",
      "candidate_info": {
        "commit_hash": "973b04d8805d9e1b73833eba682790fcd7d0e56c",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/973b04d8805d9e1b73833eba682790fcd7d0e56c",
        "files": [
          "parser/parse_hname2.c",
          "parser/test/test_parser.c"
        ],
        "message": "parse_msg(): Fix out-of-bounds read edge-case (OSS-Fuzz)\n\nAlso add a unit test suite for parse_msg().\n\nSeverity: low\nFixes OSS-Fuzz#39802\n\n(cherry picked from commit 66898d8208d158d95a27f1a76078a29bd1e08d7e)",
        "before_after_code_files": [
          "parser/parse_hname2.c||parser/parse_hname2.c",
          "parser/test/test_parser.c||parser/test/test_parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "parser/parse_hname2.c||parser/parse_hname2.c": [
          "File: parser/parse_hname2.c -> parser/parse_hname2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "216:  if (p>=end)",
          "217:   goto error;",
          "218:  p = skip_ws(p, end);",
          "220:   goto error;",
          "222:  return (p+1);",
          "",
          "[Removed Lines]",
          "219:  if (*p != ':')",
          "",
          "[Added Lines]",
          "219:  if (p >= end || *p != ':')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "236:   case '\\t':",
          "238:    p = skip_ws( p+1, end);",
          "240:     goto error;",
          "241:    return (p+1);",
          "",
          "[Removed Lines]",
          "239:    if (*p != ':')",
          "",
          "[Added Lines]",
          "239:    if (p >= end || *p != ':')",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "257:    case '\\t':",
          "258:     hdr->name.len = p - hdr->name.s;",
          "259:     p = skip_ws(p+1, end);",
          "261:      goto error;",
          "262:     return (p+1);",
          "263:   }",
          "",
          "[Removed Lines]",
          "260:     if (*p != ':')",
          "",
          "[Added Lines]",
          "260:     if (p >= end || *p != ':')",
          "",
          "---------------"
        ],
        "parser/test/test_parser.c||parser/test/test_parser.c": [
          "File: parser/test/test_parser.c -> parser/test/test_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "143:  ok(str_match(&u.pn_purr_val, const_str(\"t\")), \"puri-43\");",
          "144: }",
          "146: void test_parser(void)",
          "147: {",
          "148:  test_parse_qop_val();",
          "149:  test_parse_fcaps();",
          "151:  test_parse_authenticate_body();",
          "152: }",
          "",
          "[Removed Lines]",
          "150:  test_parse_uri();",
          "",
          "[Added Lines]",
          "146: static const struct tts {",
          "147:  const unsigned char tmsg[32];",
          "148:  int tres;",
          "149: } tset[] = {",
          "150:  {",
          "152:   {'e', ' ', 255, 255, 255, 255, ' ', ' ', ' ', ' ', ' ', 255, '\\n', 255, 255, ' ', ' '},",
          "153:   -1,",
          "154:  },",
          "156:  {{0}, 0},",
          "157: };",
          "159: void test_parse_msg(void)",
          "160: {",
          "161:  int i;",
          "163:  for (i = 0; tset[i].tmsg[0]; i++) {",
          "164:   struct sip_msg msg;",
          "166:   memset(&msg, 0, sizeof msg);",
          "167:   msg.buf = (char *)tset[i].tmsg;",
          "168:   msg.len = strlen(msg.buf);",
          "170:   ok(parse_msg(msg.buf, msg.len, &msg) == tset[i].tres, \"parse-msg-0\");",
          "171:  }",
          "172: }",
          "177:  test_parse_uri();",
          "178:  test_parse_msg();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fa2145b12cb6590e4366cb8a2659b7b79813b374",
      "candidate_info": {
        "commit_hash": "fa2145b12cb6590e4366cb8a2659b7b79813b374",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/fa2145b12cb6590e4366cb8a2659b7b79813b374",
        "files": [
          "modules/b2b_logic/records.c"
        ],
        "message": "b2b_logic: fix possible crash when init_callid_hdr param is set\n\nThe crash would occur if the Call-ID header name is received in compact\nform(\"i\" instead of \"Call-ID\").\n\nThanks to David Escartin from Sonoc for reporting.",
        "before_after_code_files": [
          "modules/b2b_logic/records.c||modules/b2b_logic/records.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_logic/records.c||modules/b2b_logic/records.c": [
          "File: modules/b2b_logic/records.c -> modules/b2b_logic/records.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "917:   len += hdrs[i]->len;",
          "919:  if(init_callid_hdr.len && msg->callid)",
          "922:  if(custom_hdrs && custom_hdrs->s && custom_hdrs->len)",
          "923:  {",
          "",
          "[Removed Lines]",
          "920:   len+= init_callid_hdr.len + msg->callid->len;",
          "",
          "[Added Lines]",
          "920:   len += init_callid_hdr.len +",
          "921:    (int)(msg->callid->name.s+msg->callid->len-msg->callid->body.s) +",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1628c902a1ce251ae9c4ecf782a3a1814f52b888",
      "candidate_info": {
        "commit_hash": "1628c902a1ce251ae9c4ecf782a3a1814f52b888",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/1628c902a1ce251ae9c4ecf782a3a1814f52b888",
        "files": [
          "Makefile.conf.template"
        ],
        "message": "Properly exclude tls_openssl/wolfssl when using menuconfig\n\n(cherry picked from commit 870f19040b2e28d671552ff2d1e62c7661333894)",
        "before_after_code_files": [
          "Makefile.conf.template||Makefile.conf.template"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.conf.template||Makefile.conf.template": [
          "File: Makefile.conf.template -> Makefile.conf.template",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: #sngtc= Voice Transcoding using the D-series Sangoma transcoding cards | libsngtc_node",
          "59: #siprec= SIP Call Recording to an external/passive recorder | uuid-dev",
          "60: #snmpstats= Provides an SNMP management interface to OpenSIPS | NetSNMP v5.3",
          "62: #xcap= XCAP utility functions for OpenSIPS. | libxml-dev",
          "63: #xcap_client= XCAP client for OpenSIPS.It fetches XCAP elements, either documents or part of them, by sending HTTP GET requests | libxml-dev and libcurl-dev",
          "64: #xml= Introduces a new type of variable that provides both serialization and de-serialization from XML format. | XML library, libxml2-dev",
          "",
          "[Removed Lines]",
          "61: #tls_mgm= Provides a TLS interface to manage certificates for OpenSIPS | SSL development library, typically libssl-dev",
          "",
          "[Added Lines]",
          "61: #tls_openssl= Implements TLS operations using the OpenSSL libarary | SSL development library, typically libssl-dev",
          "62: #tls_mgm= Provides a TLS interface to manage certificates for OpenSIPS |",
          "63: #tls_wolfssl= Implements TLS operations using the wolfSSL libarary |",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4dadf7782725ddd8e047166c1a1296d1c7c2d74f",
      "candidate_info": {
        "commit_hash": "4dadf7782725ddd8e047166c1a1296d1c7c2d74f",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/4dadf7782725ddd8e047166c1a1296d1c7c2d74f",
        "files": [
          "modules/dispatcher/dispatch.c"
        ],
        "message": "dispatcher: Fix IP printing on error case\n\nMany thanks to @Cossack9989 for the report!\n\nFixes #2780\n\n(cherry picked from commit e2f13d3747577937152346b031b86639b37bc2b5)",
        "before_after_code_files": [
          "modules/dispatcher/dispatch.c||modules/dispatcher/dispatch.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/dispatcher/dispatch.c||modules/dispatcher/dispatch.c": [
          "File: modules/dispatcher/dispatch.c -> modules/dispatcher/dispatch.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2318:  char *pattern = NULL;",
          "2320:  if (!(ip = str2ip(_ip)) && !(ip = str2ip6(_ip))) {",
          "2322:   return -1;",
          "2323:  }",
          "",
          "[Removed Lines]",
          "2321:   LM_ERR(\"IP val is not IP <%.*s>\\n\",val.rs.len,val.rs.s);",
          "",
          "[Added Lines]",
          "2321:   LM_ERR(\"IP val is not IP <%.*s>\\n\", _ip->len, _ip->s);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d6215c1fad65551db9760aa3b8389d039934161c",
      "candidate_info": {
        "commit_hash": "d6215c1fad65551db9760aa3b8389d039934161c",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/d6215c1fad65551db9760aa3b8389d039934161c",
        "files": [
          "modules/dialog/dlg_repl_profile.h"
        ],
        "message": "dialog: Fix shm memleak on OOM error case\n\n(cherry picked from commit 6d03091833a0ee9a9d1294b0aff87a7435c60bf4)",
        "before_after_code_files": [
          "modules/dialog/dlg_repl_profile.h||modules/dialog/dlg_repl_profile.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/dialog/dlg_repl_profile.h||modules/dialog/dlg_repl_profile.h": [
          "File: modules/dialog/dlg_repl_profile.h -> modules/dialog/dlg_repl_profile.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "120:   memset(cnt, 0, sizeof *cnt);",
          "122:   if (shtag->len && shm_str_dup(&cnt->shtag, shtag) < 0) {",
          "123:    LM_ERR(\"oom\\n\");",
          "124:    return NULL;",
          "125:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "123:    shm_free(cnt);",
          "",
          "---------------"
        ]
      }
    }
  ]
}