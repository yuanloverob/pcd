{
  "cve_id": "CVE-2021-3181",
  "cve_desc": "rfc822.c in Mutt through 2.0.4 allows remote attackers to cause a denial of service (mailbox unavailability) by sending email messages with sequences of semicolon characters in RFC822 address fields (aka terminators of empty groups). A small email message from the attacker can cause large memory consumption, and the victim may then be unable to see email messages from other persons.",
  "repo": "muttmua/mutt",
  "patch_hash": "939b02b33ae29bc0d642570c1dcfd4b339037d19",
  "patch_info": {
    "commit_hash": "939b02b33ae29bc0d642570c1dcfd4b339037d19",
    "repo": "muttmua/mutt",
    "commit_url": "https://github.com/muttmua/mutt/commit/939b02b33ae29bc0d642570c1dcfd4b339037d19",
    "files": [
      "rfc822.c"
    ],
    "message": "Don't allocate a group terminator unless we are in a group-list.\n\nThis will reduce memory allocation for garbage/spam address lists.\n\nIt also makes no sense to store a terminator when there wasn't a\ndisplay-name indicating the start of a group.",
    "before_after_code_files": [
      "rfc822.c||rfc822.c"
    ]
  },
  "patch_diff": {
    "rfc822.c||rfc822.c": [
      "File: rfc822.c -> rfc822.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "462: ADDRESS *rfc822_parse_adrlist (ADDRESS *top, const char *s)",
      "463: {",
      "465: #ifdef EXACT_ADDRESS",
      "466:   const char *begin;",
      "467: #endif",
      "",
      "[Removed Lines]",
      "464:   int ws_pending, nl;",
      "",
      "[Added Lines]",
      "464:   int ws_pending, nl, in_group = 0;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "551:       terminate_buffer (phrase, phraselen);",
      "552:       cur->mailbox = safe_strdup (phrase);",
      "553:       cur->group = 1;",
      "555:       if (last)",
      "556:  last->next = cur;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "554:       in_group = 1;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "587: #endif",
      "591:       {",
      "592:  last->next = rfc822_new_address ();",
      "593:  last = last->next;",
      "594:       }",
      "596:       phraselen = 0;",
      "597:       commentlen = 0;",
      "",
      "[Removed Lines]",
      "590:       if (last)",
      "",
      "[Added Lines]",
      "591:       if (last && in_group)",
      "596:       in_group = 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e72c8ce132bb272c1b36227202e818d2f43db6b8",
      "candidate_info": {
        "commit_hash": "e72c8ce132bb272c1b36227202e818d2f43db6b8",
        "repo": "muttmua/mutt",
        "commit_url": "https://github.com/muttmua/mutt/commit/e72c8ce132bb272c1b36227202e818d2f43db6b8",
        "files": [
          "rfc822.c"
        ],
        "message": "Tighten up group list parsing a bit more.\n\nThe display-name is not optional for a group, so don't start a group\nlist if the display-name is empty.\n\nGroups can't be nested, so terminate a previous group list if the\nterminator was left off.",
        "before_after_code_files": [
          "rfc822.c||rfc822.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "rfc822.c||rfc822.c"
          ],
          "candidate": [
            "rfc822.c||rfc822.c"
          ]
        }
      },
      "candidate_diff": {
        "rfc822.c||rfc822.c": [
          "File: rfc822.c -> rfc822.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "547:     }",
          "548:     else if (*s == ':')",
          "549:     {",
          "562: #ifdef EXACT_ADDRESS",
          "564: #endif",
          "566:       phraselen = 0;",
          "567:       commentlen = 0;",
          "",
          "[Removed Lines]",
          "550:       cur = rfc822_new_address ();",
          "551:       terminate_buffer (phrase, phraselen);",
          "552:       cur->mailbox = safe_strdup (phrase);",
          "553:       cur->group = 1;",
          "554:       in_group = 1;",
          "556:       if (last)",
          "557:  last->next = cur;",
          "558:       else",
          "559:  top = cur;",
          "560:       last = cur;",
          "563:       last->val = mutt_substrdup (begin, s);",
          "",
          "[Added Lines]",
          "550:       if (phraselen)",
          "551:       {",
          "553:         if (last && in_group)",
          "554:         {",
          "555:           last->next = rfc822_new_address ();",
          "556:           last = last->next;",
          "557:         }",
          "559:         cur = rfc822_new_address ();",
          "560:         terminate_buffer (phrase, phraselen);",
          "561:         cur->mailbox = safe_strdup (phrase);",
          "562:         cur->group = 1;",
          "563:         in_group = 1;",
          "565:         if (last)",
          "566:           last->next = cur;",
          "567:         else",
          "568:           top = cur;",
          "569:         last = cur;",
          "572:         last->val = mutt_substrdup (begin, s);",
          "574:       }",
          "",
          "---------------"
        ]
      }
    }
  ]
}