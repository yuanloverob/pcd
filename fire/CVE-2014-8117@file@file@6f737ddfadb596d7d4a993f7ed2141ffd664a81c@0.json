{
  "cve_id": "CVE-2014-8117",
  "cve_desc": "softmagic.c in file before 5.21 does not properly limit recursion, which allows remote attackers to cause a denial of service (CPU consumption or crash) via unspecified vectors.",
  "repo": "file/file",
  "patch_hash": "6f737ddfadb596d7d4a993f7ed2141ffd664a81c",
  "patch_info": {
    "commit_hash": "6f737ddfadb596d7d4a993f7ed2141ffd664a81c",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/6f737ddfadb596d7d4a993f7ed2141ffd664a81c",
    "files": [
      "src/file.h",
      "src/funcs.c",
      "src/softmagic.c"
    ],
    "message": "- reduce recursion level from 20 to 10 and make a symbolic constant for it. - pull out the guts of saving and restoring the output buffer into functions   and take care not to overwrite the error message if an error happened.",
    "before_after_code_files": [
      "src/file.h||src/file.h",
      "src/funcs.c||src/funcs.c",
      "src/softmagic.c||src/softmagic.c"
    ]
  },
  "patch_diff": {
    "src/file.h||src/file.h": [
      "File: src/file.h -> src/file.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "495: protected void file_regfree(file_regex_t *);",
      "496: protected void file_regerror(file_regex_t *, int, struct magic_set *);",
      "498: #ifndef COMPILE_ONLY",
      "499: extern const char *file_names[];",
      "500: extern const size_t file_nnames;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "498: typedef struct {",
      "499:  char *buf;",
      "500:  uint32_t offset;",
      "501: } file_pushbuf_t;",
      "503: protected file_pushbuf_t *file_push_buffer(struct magic_set *);",
      "504: protected char  *file_pop_buffer(struct magic_set *, file_pushbuf_t *);",
      "",
      "---------------"
    ],
    "src/funcs.c||src/funcs.c": [
      "File: src/funcs.c -> src/funcs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #include \"file.h\"",
      "29: #ifndef lint",
      "33: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.72 2014/05/14 23:15:42 christos Exp $\")",
      "",
      "[Added Lines]",
      "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.73 2014/09/10 18:41:51 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "491:  file_magerror(ms, \"regex error %d for `%s', (%s)\", rc, rx->pat,",
      "492:      errmsg);",
      "493: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "495: protected file_pushbuf_t *",
      "496: file_push_buffer(struct magic_set *ms)",
      "497: {",
      "498:  file_pushbuf_t *pb;",
      "500:  if (ms->event_flags & EVENT_HAD_ERR)",
      "501:   return NULL;",
      "503:  if ((pb = (CAST(file_pushbuf_t *, malloc(sizeof(*pb))))) == NULL)",
      "504:   return NULL;",
      "506:  pb->buf = ms->o.buf;",
      "507:  pb->offset = ms->offset;",
      "509:  ms->o.buf = NULL;",
      "510:  ms->offset = 0;",
      "512:  return pb;",
      "513: }",
      "515: protected char *",
      "516: file_pop_buffer(struct magic_set *ms, file_pushbuf_t *pb)",
      "517: {",
      "518:  char *rbuf;",
      "520:  if (ms->event_flags & EVENT_HAD_ERR) {",
      "521:   free(pb->buf);",
      "522:   free(pb);",
      "523:   return NULL;",
      "524:  }",
      "526:  rbuf = ms->o.buf;",
      "528:  ms->o.buf = pb->buf;",
      "529:  ms->offset = pb->offset;",
      "531:  free(pb);",
      "532:  return rbuf;",
      "533: }",
      "",
      "---------------"
    ],
    "src/softmagic.c||src/softmagic.c": [
      "File: src/softmagic.c -> src/softmagic.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "32: #include \"file.h\"",
      "34: #ifndef lint",
      "38: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.196 2014/11/07 15:24:14 christos Exp $\")",
      "",
      "[Added Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.197 2014/11/11 17:48:23 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "63: private void cvt_64(union VALUETYPE *, const struct magic *);",
      "65: #define OFFSET_OOB(n, o, i) ((n) < (o) || (i) > ((n) - (o)))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "67: #define MAX_RECURSION_LEVEL 10",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1217:     int flip, int recursion_level, int *printed_something,",
      "1218:     int *need_separator, int *returnval)",
      "1219: {",
      "1221:  uint32_t lhs;",
      "1222:  int rv, oneed_separator, in_type;",
      "1224:  union VALUETYPE *p = &ms->ms_value;",
      "1225:  struct mlist ml;",
      "1228:   file_error(ms, 0, \"recursion nesting exceeded\");",
      "1229:   return -1;",
      "1230:  }",
      "",
      "[Removed Lines]",
      "1220:  uint32_t soffset, offset = ms->offset;",
      "1223:  char *sbuf, *rbuf;",
      "1227:  if (recursion_level >= 20) {",
      "",
      "[Added Lines]",
      "1223:  uint32_t offset = ms->offset;",
      "1225:  file_pushbuf_t *pb;",
      "1227:  char *rbuf;",
      "1231:  if (recursion_level >= MAX_RECURSION_LEVEL) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1669:  case FILE_INDIRECT:",
      "1670:   if (offset == 0)",
      "1671:    return 0;",
      "1672:   if (nbytes < offset)",
      "1673:    return 0;",
      "1678:   rv = file_softmagic(ms, s + offset, nbytes - offset,",
      "1679:       recursion_level, BINTEST, text);",
      "1680:   if ((ms->flags & MAGIC_DEBUG) != 0)",
      "1681:    fprintf(stderr, \"indirect @offs=%u[%d]\\n\", offset, rv);",
      "1685:   if (rv == 1) {",
      "1686:    if ((ms->flags & (MAGIC_MIME|MAGIC_APPLE)) == 0 &&",
      "1687:        file_printf(ms, F(ms, m, \"%u\"), offset) == -1) {",
      "",
      "[Removed Lines]",
      "1674:   sbuf = ms->o.buf;",
      "1675:   soffset = ms->offset;",
      "1676:   ms->o.buf = NULL;",
      "1677:   ms->offset = 0;",
      "1682:   rbuf = ms->o.buf;",
      "1683:   ms->o.buf = sbuf;",
      "1684:   ms->offset = soffset;",
      "",
      "[Added Lines]",
      "1680:   if ((pb = file_push_buffer(ms)) == NULL)",
      "1681:    return -1;",
      "1689:   rbuf = file_pop_buffer(ms, pb);",
      "1690:   if (rbuf == NULL)",
      "1691:    return -1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1699:  case FILE_USE:",
      "1700:   if (nbytes < offset)",
      "1701:    return 0;",
      "1705:    flip = !flip;",
      "1706:   }",
      "1709:    return -1;",
      "1710:   }",
      "",
      "[Removed Lines]",
      "1702:   sbuf = m->value.s;",
      "1703:   if (*sbuf == '^') {",
      "1704:    sbuf++;",
      "1707:   if (file_magicfind(ms, sbuf, &ml) == -1) {",
      "1708:    file_error(ms, 0, \"cannot find entry `%s'\", sbuf);",
      "",
      "[Added Lines]",
      "1710:   rbuf = m->value.s;",
      "1711:   if (*rbuf == '^') {",
      "1712:    rbuf++;",
      "1715:   if (file_magicfind(ms, rbuf, &ml) == -1) {",
      "1716:    file_error(ms, 0, \"cannot find entry `%s'\", rbuf);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d54a3cd6dbfdb3b1a00654d72adb4823c7a688e7",
      "candidate_info": {
        "commit_hash": "d54a3cd6dbfdb3b1a00654d72adb4823c7a688e7",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/d54a3cd6dbfdb3b1a00654d72adb4823c7a688e7",
        "files": [
          "src/funcs.c"
        ],
        "message": "Always print the method we are trying in debug mode.",
        "before_after_code_files": [
          "src/funcs.c||src/funcs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/funcs.c||src/funcs.c"
          ],
          "candidate": [
            "src/funcs.c||src/funcs.c"
          ]
        }
      },
      "candidate_diff": {
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.82 2015/06/03 18:01:20 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.83 2015/06/16 14:17:37 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "205: #ifdef __EMX__",
          "206:  if ((ms->flags & MAGIC_NO_CHECK_APPTYPE) == 0 && inname) {",
          "208:   case -1:",
          "209:    return -1;",
          "210:   case 0:",
          "",
          "[Removed Lines]",
          "207:   switch (file_os2_apptype(ms, inname, buf, nb)) {",
          "",
          "[Added Lines]",
          "207:   m = file_os2_apptype(ms, inname, buf, nb);",
          "208:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "209:    (void)fprintf(stderr, \"[try os2_apptype %d]\\n\", m);",
          "210:   switch (m) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "216: #endif",
          "217: #if HAVE_FORK",
          "223:    goto done_encoding;",
          "224:   }",
          "225: #endif",
          "231:    if (checkdone(ms, &rv))",
          "232:     goto done;",
          "233:   }",
          "240:    if (checkdone(ms, &rv))",
          "241:     goto done;",
          "242:   }",
          "245:  if ((ms->flags & MAGIC_NO_CHECK_SOFT) == 0)",
          "250: #ifdef BUILTIN_ELF",
          "251:    if ((ms->flags & MAGIC_NO_CHECK_ELF) == 0 && m == 1 &&",
          "252:        nb > 5 && fd != -1) {",
          "",
          "[Removed Lines]",
          "219:  if ((ms->flags & MAGIC_NO_CHECK_COMPRESS) == 0)",
          "220:   if ((m = file_zmagic(ms, fd, inname, ubuf, nb)) != 0) {",
          "221:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "222:     (void)fprintf(stderr, \"zmagic %d\\n\", m);",
          "227:  if ((ms->flags & MAGIC_NO_CHECK_TAR) == 0)",
          "228:   if ((m = file_is_tar(ms, ubuf, nb)) != 0) {",
          "229:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "230:     (void)fprintf(stderr, \"tar %d\\n\", m);",
          "236:  if ((ms->flags & MAGIC_NO_CHECK_CDF) == 0)",
          "237:   if ((m = file_trycdf(ms, fd, ubuf, nb)) != 0) {",
          "238:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "239:     (void)fprintf(stderr, \"cdf %d\\n\", m);",
          "246:   if ((m = file_softmagic(ms, ubuf, nb, 0, NULL, BINTEST,",
          "247:       looks_text)) != 0) {",
          "248:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "249:     (void)fprintf(stderr, \"softmagic %d\\n\", m);",
          "",
          "[Added Lines]",
          "222:  if ((ms->flags & MAGIC_NO_CHECK_COMPRESS) == 0) {",
          "223:   m = file_zmagic(ms, fd, inname, ubuf, nb);",
          "224:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "225:    (void)fprintf(stderr, \"[try zmagic %d]\\n\", m);",
          "226:   if (m) {",
          "229:  }",
          "232:  if ((ms->flags & MAGIC_NO_CHECK_TAR) == 0) {",
          "233:   m = file_is_tar(ms, ubuf, nb);",
          "234:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "235:    (void)fprintf(stderr, \"[try tar %d]\\n\", m);",
          "236:   if (m) {",
          "240:  }",
          "243:  if ((ms->flags & MAGIC_NO_CHECK_CDF) == 0) {",
          "244:   m = file_trycdf(ms, fd, ubuf, nb);",
          "245:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "246:    (void)fprintf(stderr, \"[try cdf %d]\\n\", m);",
          "247:   if (m) {",
          "251:  }",
          "255:   m = file_softmagic(ms, ubuf, nb, 0, NULL, BINTEST, looks_text);",
          "256:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "257:    (void)fprintf(stderr, \"[try softmagic %d]\\n\", m);",
          "258:   if (m) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "266:    }",
          "267: #endif",
          "268:    if (checkdone(ms, &rv))",
          "",
          "[Removed Lines]",
          "262:     if ((m = file_tryelf(ms, fd, ubuf, nb)) != 0)",
          "263:      if ((ms->flags & MAGIC_DEBUG) != 0)",
          "264:       (void)fprintf(stderr,",
          "265:           \"elf %d\\n\", m);",
          "",
          "[Added Lines]",
          "271:     m = file_tryelf(ms, fd, ubuf, nb);",
          "272:     if ((ms->flags & MAGIC_DEBUG) != 0)",
          "273:      (void)fprintf(stderr, \"[try elf %d]\\n\",",
          "274:          m);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "273:  if ((ms->flags & MAGIC_NO_CHECK_TEXT) == 0) {",
          "278:    if (checkdone(ms, &rv))",
          "279:     goto done;",
          "280:   }",
          "",
          "[Removed Lines]",
          "275:   if ((m = file_ascmagic(ms, ubuf, nb, looks_text)) != 0) {",
          "276:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "277:     (void)fprintf(stderr, \"ascmagic %d\\n\", m);",
          "",
          "[Added Lines]",
          "284:   m = file_ascmagic(ms, ubuf, nb, looks_text);",
          "285:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "286:    (void)fprintf(stderr, \"[try ascmagic %d]\\n\", m);",
          "287:   if (m) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b72c33fb4446da23dedee1179ebafbb2404bb5e4",
      "candidate_info": {
        "commit_hash": "b72c33fb4446da23dedee1179ebafbb2404bb5e4",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/b72c33fb4446da23dedee1179ebafbb2404bb5e4",
        "files": [
          "src/softmagic.c"
        ],
        "message": "remove over-zealous, and fix test properly.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.219 2015/09/16 18:25:23 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.220 2015/09/16 22:17:12 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1098: mcopy(struct magic_set *ms, union VALUETYPE *p, int type, int indir,",
          "1099:     const unsigned char *s, uint32_t offset, size_t nbytes, struct magic *m)",
          "1100: {",
          "",
          "[Removed Lines]",
          "1101:  if (offset >= nbytes) {",
          "1102:   file_magerror(ms,",
          "1103:       \"offset in magic %u greater than buffer size %zu\",",
          "1104:       offset, nbytes);",
          "1105:   return -1;",
          "1106:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1268:   if (m->in_op & FILE_OPINDIRECT) {",
          "1269:    const union VALUETYPE *q = CAST(const union VALUETYPE *,",
          "1270:        ((const void *)(s + offset + off)));",
          "1272:     return 0;",
          "1273:    switch (cvt_flip(m->in_type, flip)) {",
          "1274:    case FILE_BYTE:",
          "",
          "[Removed Lines]",
          "1271:    if (OFFSET_OOB(offset + off, nbytes, sizeof(*q)))",
          "",
          "[Added Lines]",
          "1265:    if (OFFSET_OOB(nbytes, offset + off, sizeof(*q)))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2166: private int",
          "2167: handle_annotation(struct magic_set *ms, struct magic *m)",
          "2168: {",
          "2170:  if (ms->flags & MAGIC_APPLE) {",
          "2171:   if (file_printf(ms, \"%.8s\", m->apple) == -1)",
          "2172:    return -1;",
          "",
          "[Removed Lines]",
          "2169: printf(\"desc = %s, ext = %s mime = %s\\n\", m->desc, m->ext, m->mimetype);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9c77cb3c382541372b8f5caeaf0caa0e8e7c58f7",
      "candidate_info": {
        "commit_hash": "9c77cb3c382541372b8f5caeaf0caa0e8e7c58f7",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/9c77cb3c382541372b8f5caeaf0caa0e8e7c58f7",
        "files": [
          "src/softmagic.c"
        ],
        "message": "PR/495: Spurious msooxml match. REG_STARTEND code is not working as it is supposed to, remove it.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.221 2015/09/16 22:37:05 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.222 2015/09/17 01:10:00 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2005:    file_regerror(&rx, rc, ms);",
          "2006:    v = (uint64_t)-1;",
          "2007:   } else {",
          "2009:    size_t slen = ms->search.s_len;",
          "2012:    char *copy;",
          "2013:    if (slen != 0) {",
          "2014:        copy = malloc(slen);",
          "",
          "[Removed Lines]",
          "2008:    regmatch_t pmatch[1];",
          "2010: #ifndef REG_STARTEND",
          "2011: #define REG_STARTEND 0",
          "",
          "[Added Lines]",
          "2008:    regmatch_t pmatch;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2025:        search = ms->search.s;",
          "2026:        copy = NULL;",
          "2027:    }",
          "2033:    rc = file_regexec(&rx, (const char *)search,",
          "2036:    free(copy);",
          "2038:    switch (rc) {",
          "2039:    case 0:",
          "2042:     ms->search.rm_len =",
          "2044:     v = 0;",
          "2045:     break;",
          "",
          "[Removed Lines]",
          "2028: #else",
          "2029:    search = ms->search.s;",
          "2030:    pmatch[0].rm_so = 0;",
          "2031:    pmatch[0].rm_eo = slen;",
          "2032: #endif",
          "2034:        1, pmatch, REG_STARTEND);",
          "2035: #if REG_STARTEND == 0",
          "2037: #endif",
          "2040:     ms->search.s += (int)pmatch[0].rm_so;",
          "2041:     ms->search.offset += (size_t)pmatch[0].rm_so;",
          "2043:         (size_t)(pmatch[0].rm_eo - pmatch[0].rm_so);",
          "",
          "[Added Lines]",
          "2027:        1, &pmatch, 0);",
          "2031:     ms->search.s += (int)pmatch.rm_so;",
          "2032:     ms->search.offset += (size_t)pmatch.rm_so;",
          "2034:         (size_t)(pmatch.rm_eo - pmatch.rm_so);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "af444af0738468393f40f9d2261b1ea10fc4b2ba",
      "candidate_info": {
        "commit_hash": "af444af0738468393f40f9d2261b1ea10fc4b2ba",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/af444af0738468393f40f9d2261b1ea10fc4b2ba",
        "files": [
          "doc/file.man",
          "doc/libmagic.man",
          "src/apprentice.c",
          "src/ascmagic.c",
          "src/elfclass.h",
          "src/file.c",
          "src/file.h",
          "src/funcs.c",
          "src/magic.c",
          "src/softmagic.c"
        ],
        "message": "Remove name recursion limit, it is always lower than the count... Rename things for consistency.",
        "before_after_code_files": [
          "src/apprentice.c||src/apprentice.c",
          "src/ascmagic.c||src/ascmagic.c",
          "src/elfclass.h||src/elfclass.h",
          "src/file.c||src/file.c",
          "src/file.h||src/file.h",
          "src/funcs.c||src/funcs.c",
          "src/magic.c||src/magic.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/file.h||src/file.h",
            "src/funcs.c||src/funcs.c",
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/file.h||src/file.h",
            "src/funcs.c||src/funcs.c",
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/apprentice.c||src/apprentice.c": [
          "File: src/apprentice.c -> src/apprentice.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.225 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.226 2014/11/28 02:35:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "524:   ms->mlist[i] = NULL;",
          "525:  ms->file = \"unknown\";",
          "526:  ms->line = 0;",
          "529:  ms->name_max = FILE_NAME_MAX;",
          "532:  return ms;",
          "533: free:",
          "534:  free(ms);",
          "",
          "[Removed Lines]",
          "527:  ms->indir_recursion = FILE_INDIR_RECURSION;",
          "528:  ms->name_recursion = FILE_NAME_RECURSION;",
          "530:  ms->shnum_max = FILE_ELF_SHNUM;",
          "531:  ms->phnum_max = FILE_ELF_PHNUM;",
          "",
          "[Added Lines]",
          "527:  ms->indir_max = FILE_INDIR_MAX;",
          "529:  ms->elf_shnum_max = FILE_ELF_SHNUM_MAX;",
          "530:  ms->elf_phnum_max = FILE_ELF_PHNUM_MAX;",
          "",
          "---------------"
        ],
        "src/ascmagic.c||src/ascmagic.c": [
          "File: src/ascmagic.c -> src/ascmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "41: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: ascmagic.c,v 1.89 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: ascmagic.c,v 1.90 2014/11/28 02:35:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "147:       == NULL)",
          "148:    goto done;",
          "149:   if ((rv = file_softmagic(ms, utf8_buf,",
          "151:       TEXTTEST, text)) == 0)",
          "152:    rv = -1;",
          "153:  }",
          "",
          "[Removed Lines]",
          "150:       (size_t)(utf8_end - utf8_buf), 0, 0, NULL,",
          "",
          "[Added Lines]",
          "150:       (size_t)(utf8_end - utf8_buf), 0, NULL,",
          "",
          "---------------"
        ],
        "src/elfclass.h||src/elfclass.h": [
          "File: src/elfclass.h -> src/elfclass.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: #ifdef ELFCORE",
          "37:  case ET_CORE:",
          "38:   phnum = elf_getu16(swap, elfhdr.e_phnum);",
          "40:    return toomany(ms, \"program\", phnum);",
          "41:   flags |= FLAGS_IS_CORE;",
          "42:   if (dophn_core(ms, clazz, swap, fd,",
          "",
          "[Removed Lines]",
          "39:   if (phnum > ms->phnum_max)",
          "",
          "[Added Lines]",
          "39:   if (phnum > ms->elf_phnum_max)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49:  case ET_EXEC:",
          "50:  case ET_DYN:",
          "51:   phnum = elf_getu16(swap, elfhdr.e_phnum);",
          "53:    return toomany(ms, \"program\", phnum);",
          "54:   shnum = elf_getu16(swap, elfhdr.e_shnum);",
          "56:    return toomany(ms, \"section\", shnum);",
          "57:   if (dophn_exec(ms, clazz, swap, fd,",
          "58:       (off_t)elf_getu(swap, elfhdr.e_phoff), phnum,",
          "",
          "[Removed Lines]",
          "52:   if (phnum > ms->phnum_max)",
          "55:   if (shnum > ms->shnum_max)",
          "",
          "[Added Lines]",
          "52:   if (phnum > ms->elf_phnum_max)",
          "55:   if (shnum > ms->elf_shnum_max)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "63:  case ET_REL:",
          "64:   shnum = elf_getu16(swap, elfhdr.e_shnum);",
          "66:    return toomany(ms, \"section\", shnum);",
          "67:   if (doshn(ms, clazz, swap, fd,",
          "68:       (off_t)elf_getu(swap, elfhdr.e_shoff), shnum,",
          "",
          "[Removed Lines]",
          "65:   if (shnum > ms->shnum_max)",
          "",
          "[Added Lines]",
          "65:   if (shnum > ms->elf_shnum_max)",
          "",
          "---------------"
        ],
        "src/file.c||src/file.c": [
          "File: src/file.c -> src/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.157 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.158 2014/11/28 02:35:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121:  int tag;",
          "122:  size_t value;",
          "123: } pm[] = {",
          "129: };",
          "",
          "[Removed Lines]",
          "124:  { \"indir\", MAGIC_PARAM_INDIR_RECURSION, 0 },",
          "125:  { \"name\", MAGIC_PARAM_NAME_RECURSION, 0 },",
          "126:  { \"namenum\", MAGIC_PARAM_NAME_MAX, 0 },",
          "127:  { \"phnum\", MAGIC_PARAM_PHNUM_MAX, 0 },",
          "128:  { \"shnum\", MAGIC_PARAM_SHNUM_MAX, 0 },",
          "",
          "[Added Lines]",
          "124:  { \"indir\", MAGIC_PARAM_INDIR_MAX, 0 },",
          "125:  { \"name\", MAGIC_PARAM_NAME_MAX, 0 },",
          "126:  { \"elf_phnum\", MAGIC_PARAM_ELF_PHNUM_MAX, 0 },",
          "127:  { \"elf_shnum\", MAGIC_PARAM_ELF_SHNUM_MAX, 0 },",
          "",
          "---------------"
        ],
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "406:  uint16_t name_max;",
          "414: };",
          "",
          "[Removed Lines]",
          "404:  uint16_t indir_recursion;",
          "405:  uint16_t name_recursion;",
          "407:  uint16_t shnum_max;",
          "408:  uint16_t phnum_max;",
          "409: #define FILE_INDIR_RECURSION 15",
          "410: #define FILE_NAME_RECURSION 40",
          "411: #define FILE_NAME_MAX  30",
          "412: #define FILE_ELF_SHNUM  32768",
          "413: #define FILE_ELF_PHNUM  128",
          "",
          "[Added Lines]",
          "404:  uint16_t indir_max;",
          "406:  uint16_t elf_shnum_max;",
          "407:  uint16_t elf_phnum_max;",
          "408: #define FILE_INDIR_MAX   15",
          "409: #define FILE_NAME_MAX   30",
          "410: #define FILE_ELF_SHNUM_MAX  32768",
          "411: #define FILE_ELF_PHNUM_MAX  128",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "450:     unichar **, size_t *, const char **, const char **, const char **);",
          "451: protected int file_is_tar(struct magic_set *, const unsigned char *, size_t);",
          "452: protected int file_softmagic(struct magic_set *, const unsigned char *, size_t,",
          "454: protected int file_apprentice(struct magic_set *, const char *, int);",
          "455: protected int buffer_apprentice(struct magic_set *, struct magic **,",
          "456:     size_t *, size_t);",
          "",
          "[Removed Lines]",
          "453:     uint16_t, uint16_t, uint16_t *, int, int);",
          "",
          "[Added Lines]",
          "451:     uint16_t, uint16_t *, int, int);",
          "",
          "---------------"
        ],
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.75 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.76 2014/11/28 02:35:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "229:  if ((ms->flags & MAGIC_NO_CHECK_SOFT) == 0)",
          "231:       looks_text)) != 0) {",
          "232:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "233:     (void)fprintf(stderr, \"softmagic %d\\n\", m);",
          "",
          "[Removed Lines]",
          "230:   if ((m = file_softmagic(ms, ubuf, nb, 0, 0, NULL, BINTEST,",
          "",
          "[Added Lines]",
          "230:   if ((m = file_softmagic(ms, ubuf, nb, 0, NULL, BINTEST,",
          "",
          "---------------"
        ],
        "src/magic.c||src/magic.c": [
          "File: src/magic.c -> src/magic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include \"file.h\"",
          "35: #ifndef lint",
          "39: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.87 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "[Added Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.88 2014/11/28 02:35:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "541: magic_setparam(struct magic_set *ms, int param, const void *val)",
          "542: {",
          "543:  switch (param) {",
          "549:   return 0;",
          "550:  case MAGIC_PARAM_NAME_MAX:",
          "551:   ms->name_max = *(const size_t *)val;",
          "552:   return 0;",
          "555:   return 0;",
          "558:   return 0;",
          "559:  default:",
          "560:   errno = EINVAL;",
          "",
          "[Removed Lines]",
          "544:  case MAGIC_PARAM_INDIR_RECURSION:",
          "545:   ms->indir_recursion = *(const size_t *)val;",
          "546:   return 0;",
          "547:  case MAGIC_PARAM_NAME_RECURSION:",
          "548:   ms->name_recursion = *(const size_t *)val;",
          "553:  case MAGIC_PARAM_PHNUM_MAX:",
          "554:   ms->phnum_max = *(const size_t *)val;",
          "556:  case MAGIC_PARAM_SHNUM_MAX:",
          "557:   ms->shnum_max = *(const size_t *)val;",
          "",
          "[Added Lines]",
          "544:  case MAGIC_PARAM_INDIR_MAX:",
          "545:   ms->indir_max = *(const size_t *)val;",
          "550:  case MAGIC_PARAM_ELF_PHNUM_MAX:",
          "551:   ms->elf_phnum_max = *(const size_t *)val;",
          "553:  case MAGIC_PARAM_ELF_SHNUM_MAX:",
          "554:   ms->elf_shnum_max = *(const size_t *)val;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "566: magic_getparam(struct magic_set *ms, int param, void *val)",
          "567: {",
          "568:  switch (param) {",
          "574:   return 0;",
          "575:  case MAGIC_PARAM_NAME_MAX:",
          "577:   return 0;",
          "580:   return 0;",
          "583:   return 0;",
          "584:  default:",
          "585:   errno = EINVAL;",
          "",
          "[Removed Lines]",
          "569:  case MAGIC_PARAM_INDIR_RECURSION:",
          "571:   return 0;",
          "572:  case MAGIC_PARAM_NAME_RECURSION:",
          "578:  case MAGIC_PARAM_PHNUM_MAX:",
          "581:  case MAGIC_PARAM_SHNUM_MAX:",
          "",
          "[Added Lines]",
          "566:  case MAGIC_PARAM_INDIR_MAX:",
          "572:  case MAGIC_PARAM_ELF_PHNUM_MAX:",
          "575:  case MAGIC_PARAM_ELF_SHNUM_MAX:",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.200 2014/11/27 23:42:58 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.201 2014/11/28 02:35:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: #include <time.h>",
          "45: private int match(struct magic_set *, struct magic *, uint32_t,",
          "47:     uint16_t *, int *, int *, int *);",
          "48: private int mget(struct magic_set *, const unsigned char *,",
          "49:     struct magic *, size_t, size_t, unsigned int, int, int, int, uint16_t,",
          "51: private int magiccheck(struct magic_set *, struct magic *);",
          "52: private int32_t mprint(struct magic_set *, struct magic *);",
          "53: private int32_t moffset(struct magic_set *, struct magic *);",
          "",
          "[Removed Lines]",
          "46:     const unsigned char *, size_t, size_t, int, int, int, uint16_t, uint16_t,",
          "50:     uint16_t, uint16_t *, int *, int *, int *);",
          "",
          "[Added Lines]",
          "46:     const unsigned char *, size_t, size_t, int, int, int, uint16_t,",
          "50:     uint16_t *, int *, int *, int *);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "72: protected int",
          "73: file_softmagic(struct magic_set *ms, const unsigned char *buf, size_t nbytes,",
          "76: {",
          "77:  struct mlist *ml;",
          "78:  int rv, printed_something = 0, need_separator = 0;",
          "",
          "[Removed Lines]",
          "74:     uint16_t indir_level, uint16_t name_level, uint16_t *name_count,",
          "75:  int mode, int text)",
          "",
          "[Added Lines]",
          "74:     uint16_t indir_level, uint16_t *name_count, int mode, int text)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "86:  for (ml = ms->mlist[0]->next; ml != ms->mlist[0]; ml = ml->next)",
          "87:   if ((rv = match(ms, ml->magic, ml->nmagic, buf, nbytes, 0, mode,",
          "89:       &printed_something, &need_separator, NULL)) != 0)",
          "90:    return rv;",
          "",
          "[Removed Lines]",
          "88:       text, 0, indir_level, name_level, name_count,",
          "",
          "[Added Lines]",
          "87:       text, 0, indir_level, name_count,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "141: private int",
          "142: match(struct magic_set *ms, struct magic *magic, uint32_t nmagic,",
          "143:     const unsigned char *s, size_t nbytes, size_t offset, int mode, int text,",
          "145:     int *printed_something, int *need_separator, int *returnval)",
          "146: {",
          "147:  uint32_t magindex = 0;",
          "",
          "[Removed Lines]",
          "144:     int flip, uint16_t indir_level, uint16_t name_level, uint16_t *name_count,",
          "",
          "[Added Lines]",
          "143:     int flip, uint16_t indir_level, uint16_t *name_count,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "181:   switch (mget(ms, s, m, nbytes, offset, cont_level, mode, text,",
          "183:       printed_something, need_separator, returnval)) {",
          "184:   case -1:",
          "185:    return -1;",
          "",
          "[Removed Lines]",
          "182:       flip, indir_level, name_level, name_count,",
          "",
          "[Added Lines]",
          "181:       flip, indir_level, name_count,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "268:    }",
          "269: #endif",
          "270:    switch (mget(ms, s, m, nbytes, offset, cont_level, mode,",
          "272:        printed_something, need_separator, returnval)) {",
          "273:    case -1:",
          "274:     return -1;",
          "",
          "[Removed Lines]",
          "271:        text, flip, indir_level, name_level, name_count,",
          "",
          "[Added Lines]",
          "270:        text, flip, indir_level, name_count,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1222: private int",
          "1223: mget(struct magic_set *ms, const unsigned char *s, struct magic *m,",
          "1224:     size_t nbytes, size_t o, unsigned int cont_level, int mode, int text,",
          "1226:     int *printed_something, int *need_separator, int *returnval)",
          "1227: {",
          "1228:  uint32_t offset = ms->offset;",
          "",
          "[Removed Lines]",
          "1225:     int flip, uint16_t indir_level, uint16_t name_level, uint16_t *name_count,",
          "",
          "[Added Lines]",
          "1224:     int flip, uint16_t indir_level, uint16_t *name_count,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1233:  union VALUETYPE *p = &ms->ms_value;",
          "1234:  struct mlist ml;",
          "1237:   file_error(ms, 0, \"indirect recursion nesting (%hu) exceeded\",",
          "1238:       indir_level);",
          "1239:   return -1;",
          "1240:  }",
          "1248:  if (*name_count >= ms->name_max) {",
          "1249:   file_error(ms, 0, \"name use count (%hu) exceeded\",",
          "",
          "[Removed Lines]",
          "1236:  if (indir_level >= ms->indir_recursion) {",
          "1242:  if (name_level >= ms->name_recursion) {",
          "1243:   file_error(ms, 0, \"name recursion nesting (%hu) exceeded\",",
          "1244:       name_level);",
          "1245:   return -1;",
          "1246:  }",
          "",
          "[Added Lines]",
          "1235:  if (indir_level >= ms->indir_max) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1258:  if ((ms->flags & MAGIC_DEBUG) != 0) {",
          "1259:   fprintf(stderr, \"mget(type=%d, flag=%x, offset=%u, o=%\"",
          "1260:       SIZE_T_FORMAT \"u, \" \"nbytes=%\" SIZE_T_FORMAT",
          "1262:       m->type, m->flag, offset, o, nbytes,",
          "1264:   mdebug(offset, (char *)(void *)p, sizeof(union VALUETYPE));",
          "1265: #ifndef COMPILE_ONLY",
          "1266:   file_mdump(m);",
          "",
          "[Removed Lines]",
          "1261:       \"u, il=%hu, nl=%hu nc=%hu)\\n\",",
          "1263:       indir_level, name_level, *name_count);",
          "",
          "[Added Lines]",
          "1254:       \"u, il=%hu, nc=%hu)\\n\",",
          "1256:       indir_level, *name_count);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1701:    return -1;",
          "1703:   rv = file_softmagic(ms, s + offset, nbytes - offset,",
          "1706:   if ((ms->flags & MAGIC_DEBUG) != 0)",
          "1707:    fprintf(stderr, \"indirect @offs=%u[%d]\\n\", offset, rv);",
          "",
          "[Removed Lines]",
          "1704:       indir_level + 1, name_level, name_count, BINTEST, text);",
          "",
          "[Added Lines]",
          "1697:       indir_level + 1, name_count, BINTEST, text);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "1741:   if (m->flag & NOSPACE)",
          "1743:   rv = match(ms, ml.magic, ml.nmagic, s, nbytes, offset + o,",
          "1745:       printed_something, need_separator, returnval);",
          "1746:   if (rv != 1)",
          "",
          "[Removed Lines]",
          "1744:       mode, text, flip, indir_level, name_level + 1, name_count,",
          "",
          "[Added Lines]",
          "1737:       mode, text, flip, indir_level, name_count,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9e6b2129a45b5d5d6bf5928ffd76b99169497c9e",
      "candidate_info": {
        "commit_hash": "9e6b2129a45b5d5d6bf5928ffd76b99169497c9e",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/9e6b2129a45b5d5d6bf5928ffd76b99169497c9e",
        "files": [
          "src/softmagic.c"
        ],
        "message": "Move the annotation code back and add similar code to the mime code that checks if there is a string to be printed and skips otherwise.",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.220 2015/09/16 22:17:12 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.221 2015/09/16 22:37:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "228:    continue;",
          "229:   }",
          "235:   if (*m->desc) {",
          "244:    if (print_sep(ms, firstline) == -1)",
          "",
          "[Removed Lines]",
          "236:    if ((e = handle_annotation(ms, m)) != 0) {",
          "240:     return e;",
          "241:    }",
          "",
          "[Added Lines]",
          "231:   if ((e = handle_annotation(ms, m)) != 0) {",
          "235:    return e;",
          "236:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "318:       break;",
          "319:     } else",
          "320:      ms->c.li[cont_level].got_match = 1;",
          "325:     if (*m->desc) {",
          "332:      if (!*printed_something) {",
          "334:       if (print_sep(ms, firstline)",
          "",
          "[Removed Lines]",
          "326:      if ((e = handle_annotation(ms, m)) != 0) {",
          "330:       return e;",
          "331:      }",
          "",
          "[Added Lines]",
          "323:     if ((e = handle_annotation(ms, m)) != 0) {",
          "327:      return e;",
          "328:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2160: private int",
          "2161: handle_annotation(struct magic_set *ms, struct magic *m)",
          "2162: {",
          "2164:   if (file_printf(ms, \"%.8s\", m->apple) == -1)",
          "2165:    return -1;",
          "2166:   return 1;",
          "2167:  }",
          "2169:   if (file_printf(ms, \"%s\", m->ext) == -1)",
          "2170:    return -1;",
          "2171:   return 1;",
          "",
          "[Removed Lines]",
          "2163:  if (ms->flags & MAGIC_APPLE) {",
          "2168:  if (ms->flags & MAGIC_EXTENSION) {",
          "",
          "[Added Lines]",
          "2165:  if ((ms->flags & MAGIC_APPLE) && m->apple[0]) {",
          "2170:  if ((ms->flags & MAGIC_EXTENSION) && m->ext[0]) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}