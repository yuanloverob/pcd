{
  "cve_id": "CVE-2021-29585",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. The TFLite computation for size of output after padding, `ComputeOutSize`(https://github.com/tensorflow/tensorflow/blob/0c9692ae7b1671c983569e5d3de5565843d500cf/tensorflow/lite/kernels/padding.h#L43-L55), does not check that the `stride` argument is not 0 before doing the division. Users can craft special models such that `ComputeOutSize` is called with `stride` set to 0. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "49847ae69a4e1a97ae7f2db5e217c77721e37948",
  "patch_info": {
    "commit_hash": "49847ae69a4e1a97ae7f2db5e217c77721e37948",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/49847ae69a4e1a97ae7f2db5e217c77721e37948",
    "files": [
      "tensorflow/lite/kernels/padding.h"
    ],
    "message": "Fix division by zero in TFLite padding.\n\nPiperOrigin-RevId: 370777494\nChange-Id: Ic1331e4a1603b9e4c8aa183012a6c8237410aa0f",
    "before_after_code_files": [
      "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h"
    ]
  },
  "patch_diff": {
    "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h": [
      "File: tensorflow/lite/kernels/padding.h -> tensorflow/lite/kernels/padding.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "44: inline int ComputeOutSize(TfLitePadding padding, int image_size,",
      "45:                           int filter_size, int stride, int dilation_rate = 1) {",
      "46:   int effective_filter_size = (filter_size - 1) * dilation_rate + 1;",
      "47:   switch (padding) {",
      "48:     case kTfLitePaddingSame:",
      "49:       return (image_size + stride - 1) / stride;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "50:   if (stride == 0) return 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e5688eb22b941b946475d96e407827544d1d94ef",
      "candidate_info": {
        "commit_hash": "e5688eb22b941b946475d96e407827544d1d94ef",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/e5688eb22b941b946475d96e407827544d1d94ef",
        "files": [
          "tensorflow/lite/kernels/padding.h"
        ],
        "message": "Fix division by zero in TFLite padding.\n\nPiperOrigin-RevId: 370777494\nChange-Id: Ic1331e4a1603b9e4c8aa183012a6c8237410aa0f",
        "before_after_code_files": [
          "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h"
          ],
          "candidate": [
            "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h": [
          "File: tensorflow/lite/kernels/padding.h -> tensorflow/lite/kernels/padding.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: inline int ComputeOutSize(TfLitePadding padding, int image_size,",
          "45:                           int filter_size, int stride, int dilation_rate = 1) {",
          "46:   int effective_filter_size = (filter_size - 1) * dilation_rate + 1;",
          "47:   switch (padding) {",
          "48:     case kTfLitePaddingSame:",
          "49:       return (image_size + stride - 1) / stride;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:   if (stride == 0) return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f76310aaa71e690ae359af3b4d7f59efa56aa7b9",
      "candidate_info": {
        "commit_hash": "f76310aaa71e690ae359af3b4d7f59efa56aa7b9",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/f76310aaa71e690ae359af3b4d7f59efa56aa7b9",
        "files": [
          "tensorflow/lite/kernels/padding.h"
        ],
        "message": "Fix division by zero in TFLite padding.\n\nPiperOrigin-RevId: 370777494\nChange-Id: Ic1331e4a1603b9e4c8aa183012a6c8237410aa0f",
        "before_after_code_files": [
          "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h"
          ],
          "candidate": [
            "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h": [
          "File: tensorflow/lite/kernels/padding.h -> tensorflow/lite/kernels/padding.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: inline int ComputeOutSize(TfLitePadding padding, int image_size,",
          "45:                           int filter_size, int stride, int dilation_rate = 1) {",
          "46:   int effective_filter_size = (filter_size - 1) * dilation_rate + 1;",
          "47:   switch (padding) {",
          "48:     case kTfLitePaddingSame:",
          "49:       return (image_size + stride - 1) / stride;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:   if (stride == 0) return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "34c901f5853d1a9a6000971b3cbd39b09b874fda",
      "candidate_info": {
        "commit_hash": "34c901f5853d1a9a6000971b3cbd39b09b874fda",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/34c901f5853d1a9a6000971b3cbd39b09b874fda",
        "files": [
          "tensorflow/lite/kernels/padding.h"
        ],
        "message": "Fix division by zero in TFLite padding.\n\nPiperOrigin-RevId: 370777494\nChange-Id: Ic1331e4a1603b9e4c8aa183012a6c8237410aa0f",
        "before_after_code_files": [
          "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h"
          ],
          "candidate": [
            "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h": [
          "File: tensorflow/lite/kernels/padding.h -> tensorflow/lite/kernels/padding.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: inline int ComputeOutSize(TfLitePadding padding, int image_size,",
          "46:                           int filter_size, int stride, int dilation_rate = 1) {",
          "47:   int effective_filter_size = (filter_size - 1) * dilation_rate + 1;",
          "48:   switch (padding) {",
          "49:     case kTfLitePaddingSame:",
          "50:       return (image_size + stride - 1) / stride;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:   if (stride == 0) return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3c40555eda8b239264347d4ca065162786e68191",
      "candidate_info": {
        "commit_hash": "3c40555eda8b239264347d4ca065162786e68191",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/3c40555eda8b239264347d4ca065162786e68191",
        "files": [
          "tensorflow/lite/kernels/padding.h"
        ],
        "message": "Fix division by zero in TFLite padding.\n\nPiperOrigin-RevId: 370777494\nChange-Id: Ic1331e4a1603b9e4c8aa183012a6c8237410aa0f",
        "before_after_code_files": [
          "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h"
          ],
          "candidate": [
            "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h": [
          "File: tensorflow/lite/kernels/padding.h -> tensorflow/lite/kernels/padding.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: inline int ComputeOutSize(TfLitePadding padding, int image_size,",
          "45:                           int filter_size, int stride, int dilation_rate = 1) {",
          "46:   int effective_filter_size = (filter_size - 1) * dilation_rate + 1;",
          "47:   switch (padding) {",
          "48:     case kTfLitePaddingSame:",
          "49:       return (image_size + stride - 1) / stride;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:   if (stride == 0) return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "717629aa0fb6675abcf3acaa8a769a005988d31e",
      "candidate_info": {
        "commit_hash": "717629aa0fb6675abcf3acaa8a769a005988d31e",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/717629aa0fb6675abcf3acaa8a769a005988d31e",
        "files": [
          "tensorflow/lite/kernels/padding.h"
        ],
        "message": "Fix division by zero in TFLite padding.\n\nPiperOrigin-RevId: 370777494\nChange-Id: Ic1331e4a1603b9e4c8aa183012a6c8237410aa0f",
        "before_after_code_files": [
          "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h"
          ],
          "candidate": [
            "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/lite/kernels/padding.h||tensorflow/lite/kernels/padding.h": [
          "File: tensorflow/lite/kernels/padding.h -> tensorflow/lite/kernels/padding.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "44: inline int ComputeOutSize(TfLitePadding padding, int image_size,",
          "45:                           int filter_size, int stride, int dilation_rate = 1) {",
          "46:   int effective_filter_size = (filter_size - 1) * dilation_rate + 1;",
          "47:   switch (padding) {",
          "48:     case kTfLitePaddingSame:",
          "49:       return (image_size + stride - 1) / stride;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:   if (stride == 0) return 0;",
          "",
          "---------------"
        ]
      }
    }
  ]
}