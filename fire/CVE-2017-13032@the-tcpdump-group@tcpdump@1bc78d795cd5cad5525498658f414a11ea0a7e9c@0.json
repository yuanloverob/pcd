{
  "cve_id": "CVE-2017-13032",
  "cve_desc": "The RADIUS parser in tcpdump before 4.9.2 has a buffer over-read in print-radius.c:print_attr_string().",
  "repo": "the-tcpdump-group/tcpdump",
  "patch_hash": "1bc78d795cd5cad5525498658f414a11ea0a7e9c",
  "patch_info": {
    "commit_hash": "1bc78d795cd5cad5525498658f414a11ea0a7e9c",
    "repo": "the-tcpdump-group/tcpdump",
    "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/1bc78d795cd5cad5525498658f414a11ea0a7e9c",
    "files": [
      "print-radius.c",
      "tests/TESTLIST",
      "tests/radius_attr_asan.out",
      "tests/radius_attr_asan.pcap"
    ],
    "message": "CVE-2017-13032/RADIUS: Check whether a byte exists before testing its value.\n\nReverse the test in a for loop to test the length before testing whether\nwe have a null byte.\n\nThis fixes a buffer over-read discovered by Bhargava Shastry.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't be rejected as an invalid capture.\n\nClean up other length tests while we're at it.",
    "before_after_code_files": [
      "print-radius.c||print-radius.c"
    ]
  },
  "patch_diff": {
    "print-radius.c||print-radius.c": [
      "File: print-radius.c -> print-radius.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "503:    {",
      "504:       case TUNNEL_PASS:",
      "505:            if (length < 3)",
      "510:            if (*data && (*data <=0x1F) )",
      "511:               ND_PRINT((ndo, \"Tag[%u] \", *data));",
      "512:            else",
      "",
      "[Removed Lines]",
      "506:            {",
      "507:               ND_PRINT((ndo, \"%s\", tstr));",
      "508:               return;",
      "509:            }",
      "",
      "[Added Lines]",
      "506:               goto trunc;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "526:            if (*data <= 0x1F)",
      "527:            {",
      "528:               if (length < 1)",
      "533:               if (*data)",
      "534:                 ND_PRINT((ndo, \"Tag[%u] \", *data));",
      "535:               else",
      "",
      "[Removed Lines]",
      "529:               {",
      "530:                  ND_PRINT((ndo, \"%s\", tstr));",
      "531:                  return;",
      "532:               }",
      "",
      "[Added Lines]",
      "526:                  goto trunc;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "539:            }",
      "540:         break;",
      "541:       case EGRESS_VLAN_NAME:",
      "542:            ND_PRINT((ndo, \"%s (0x%02x) \",",
      "543:                   tok2str(rfc4675_tagged,\"Unknown tag\",*data),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "536:            if (length < 1)",
      "537:               goto trunc;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "547:         break;",
      "548:    }",
      "551:        ND_PRINT((ndo, \"%c\", (*data < 32 || *data > 126) ? '.' : *data));",
      "553:    return;",
      "",
      "[Removed Lines]",
      "550:    for (i=0; *data && i < length ; i++, data++)",
      "",
      "[Added Lines]",
      "546:    for (i=0; i < length && *data; i++, data++)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c8e0a4a1681fd3a9673cddcd7b3f93a869ac6813",
      "candidate_info": {
        "commit_hash": "c8e0a4a1681fd3a9673cddcd7b3f93a869ac6813",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/c8e0a4a1681fd3a9673cddcd7b3f93a869ac6813",
        "files": [
          "print-cdp.c",
          "print-icmp6.c",
          "print-radius.c",
          "print-rsvp.c",
          "print-snmp.c"
        ],
        "message": "Use more the EXTRACT_8BITS() macro to fetch a one-byte value (20/n)\n\ne op *p\n\nPartial list.",
        "before_after_code_files": [
          "print-cdp.c||print-cdp.c",
          "print-icmp6.c||print-icmp6.c",
          "print-radius.c||print-radius.c",
          "print-rsvp.c||print-rsvp.c",
          "print-snmp.c||print-snmp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-radius.c||print-radius.c"
          ],
          "candidate": [
            "print-radius.c||print-radius.c"
          ]
        }
      },
      "candidate_diff": {
        "print-cdp.c||print-cdp.c": [
          "File: print-cdp.c -> print-cdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "396:     unsigned long res=0;",
          "397:     while( l>0 )",
          "398:     {",
          "400:  p++; l--;",
          "401:     }",
          "402:     return res;",
          "",
          "[Removed Lines]",
          "399:  res = (res<<8) + *p;",
          "",
          "[Added Lines]",
          "399:  res = (res<<8) + EXTRACT_8BITS(p);",
          "",
          "---------------"
        ],
        "print-icmp6.c||print-icmp6.c": [
          "File: print-icmp6.c -> print-icmp6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1546:     safeputchar(ndo, *cp);",
          "1547:     cp++;",
          "1548:    }",
          "1550:     ND_PRINT((ndo,\".\"));",
          "1551:   } else {",
          "1552:    if (cp == ep) {",
          "",
          "[Removed Lines]",
          "1549:    if (cp + 1 < ep && *cp)",
          "",
          "[Added Lines]",
          "1549:    if (cp + 1 < ep && EXTRACT_8BITS(cp))",
          "",
          "---------------"
        ],
        "print-radius.c||print-radius.c": [
          "File: print-radius.c -> print-radius.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "632:         break;",
          "633:    }",
          "636:        ND_PRINT((ndo, \"%c\", (*data < 32 || *data > 126) ? '.' : *data));",
          "638:    return;",
          "",
          "[Removed Lines]",
          "635:    for (i=0; i < length && *data; i++, data++)",
          "",
          "[Added Lines]",
          "635:    for (i=0; i < length && EXTRACT_8BITS(data); i++, data++)",
          "",
          "---------------"
        ],
        "print-rsvp.c||print-rsvp.c": [
          "File: print-rsvp.c -> print-rsvp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1185:                                   \"none\",",
          "1186:                                   EXTRACT_8BITS((obj_tptr + 2))),",
          "1190:                 break;",
          "1191:             default:",
          "1192:                 hexdump=TRUE;",
          "",
          "[Removed Lines]",
          "1188:                 obj_tlen-=4+*(obj_tptr+3);",
          "1189:                 obj_tptr+=4+*(obj_tptr+3);",
          "",
          "[Added Lines]",
          "1188:                 obj_tlen-=4+EXTRACT_8BITS((obj_tptr + 3));",
          "1189:                 obj_tptr+=4+EXTRACT_8BITS((obj_tptr + 3));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1649:                            tok2str(rsvp_obj_prop_tlv_values,\"unknown\",EXTRACT_8BITS(obj_tptr)),",
          "1650:                            EXTRACT_8BITS(obj_tptr),",
          "1653:                         return-1;",
          "1654:                     if (*(obj_tptr+1) < 2)",
          "1655:                         return -1;",
          "",
          "[Removed Lines]",
          "1652:                     if (obj_tlen < *(obj_tptr+1))",
          "",
          "[Added Lines]",
          "1652:                     if (obj_tlen < EXTRACT_8BITS((obj_tptr + 1)))",
          "",
          "---------------"
        ],
        "print-snmp.c||print-snmp.c": [
          "File: print-snmp.c -> print-snmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "481:    return -1;",
          "482:   }",
          "483:   ND_TCHECK(*p);",
          "485:   --len;",
          "486:   ++hdr;",
          "487:   ++p;",
          "",
          "[Removed Lines]",
          "484:   elem->id = id = (id << 7) | *p;",
          "",
          "[Added Lines]",
          "484:   elem->id = id = (id << 7) | EXTRACT_8BITS(p);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "501:    return -1;",
          "502:   }",
          "503:   ND_TCHECK2(*p, noct);",
          "506:  }",
          "507:  if (len < elem->asnlen) {",
          "508:   ND_PRINT((ndo, \"[len%d<asnlen%u]\", len, elem->asnlen));",
          "",
          "[Removed Lines]",
          "504:   for (; noct-- > 0; len--, hdr++)",
          "505:    elem->asnlen = (elem->asnlen << ASN_SHIFT8) | *p++;",
          "",
          "[Added Lines]",
          "504:   for (; noct-- > 0; len--, hdr++) {",
          "505:    elem->asnlen = (elem->asnlen << ASN_SHIFT8) | EXTRACT_8BITS(p);",
          "506:    p++;",
          "507:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "545:      data = -1;",
          "546:     for (i = elem->asnlen; i-- > 0; p++)",
          "548:     elem->data.integer = data;",
          "549:     break;",
          "550:    }",
          "",
          "[Removed Lines]",
          "547:      data = (data << ASN_SHIFT8) | *p;",
          "",
          "[Added Lines]",
          "549:      data = (data << ASN_SHIFT8) | EXTRACT_8BITS(p);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "581:     elem->type = BE_UNS;",
          "582:     data = 0;",
          "583:     for (i = elem->asnlen; i-- > 0; p++)",
          "585:     elem->data.uns = data;",
          "586:     break;",
          "587:    }",
          "",
          "[Removed Lines]",
          "584:      data = (data << 8) + *p;",
          "",
          "[Added Lines]",
          "586:      data = (data << 8) + EXTRACT_8BITS(p);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "591:            elem->type = BE_UNS64;",
          "592:     data64 = 0;",
          "593:     for (i = elem->asnlen; i-- > 0; p++)",
          "595:     elem->data.uns64 = data64;",
          "596:     break;",
          "597:    }",
          "",
          "[Removed Lines]",
          "594:      data64 = (data64 << 8) + *p;",
          "",
          "[Added Lines]",
          "596:      data64 = (data64 << 8) + EXTRACT_8BITS(p);",
          "",
          "---------------"
        ]
      }
    }
  ]
}