{
  "cve_id": "CVE-2021-29618",
  "cve_desc": "TensorFlow is an end-to-end open source platform for machine learning. Passing a complex argument to `tf.transpose` at the same time as passing `conjugate=True` argument results in a crash. The fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "1dc6a7ce6e0b3e27a7ae650bfc05b195ca793f88",
  "patch_info": {
    "commit_hash": "1dc6a7ce6e0b3e27a7ae650bfc05b195ca793f88",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/1dc6a7ce6e0b3e27a7ae650bfc05b195ca793f88",
    "files": [
      "tensorflow/core/kernels/transpose_functor.h",
      "tensorflow/python/kernel_tests/transpose_op_test.py"
    ],
    "message": "Merge pull request #46973 from yongtang:46891-tf.transpose-conjugate\n\nPiperOrigin-RevId: 367235888\nChange-Id: I1bfe9fcae65cf68100ec55a60d680c536c0e70a7",
    "before_after_code_files": [
      "tensorflow/core/kernels/transpose_functor.h||tensorflow/core/kernels/transpose_functor.h",
      "tensorflow/python/kernel_tests/transpose_op_test.py||tensorflow/python/kernel_tests/transpose_op_test.py"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/transpose_functor.h||tensorflow/core/kernels/transpose_functor.h": [
      "File: tensorflow/core/kernels/transpose_functor.h -> tensorflow/core/kernels/transpose_functor.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "166: Status DoTransposeImpl(const Device& d, const Tensor& in,",
      "167:                        const gtl::ArraySlice<int32> perm, bool conjugate,",
      "168:                        Tensor* out) {",
      "170:   CHECK_EQ(in.dims(), out->dims());",
      "171:   CHECK_EQ(in.dims(), perm.size());",
      "172:   CHECK_EQ(in.dtype(), out->dtype());",
      "",
      "[Removed Lines]",
      "169:   CHECK_GE(in.dims(), 2);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "tensorflow/python/kernel_tests/transpose_op_test.py||tensorflow/python/kernel_tests/transpose_op_test.py": [
      "File: tensorflow/python/kernel_tests/transpose_op_test.py -> tensorflow/python/kernel_tests/transpose_op_test.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "379:         np.arange(0, 16).reshape([1, 2, 1, 2, 1, 2, 1, 2]).astype(np.float64))",
      "381:   def testComplex64(self):",
      "382:     self._testBoth(",
      "383:         np.complex(1, 2) *",
      "384:         np.arange(0, 21).reshape([3, 7]).astype(np.complex64))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "382:     self._testBoth(np.array(np.complex(1, 2)).astype(np.complex64))",
      "383:     self._testBoth(np.complex(1, 2) * np.arange(0, 21).astype(np.complex64))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "390:         np.arange(0, 1260).reshape([2, 3, 5, 7, 2, 3]).astype(np.complex64))",
      "392:   def testComplex128(self):",
      "393:     self._testBoth(",
      "394:         np.complex(1, 2) *",
      "395:         np.arange(0, 21).reshape([3, 7]).astype(np.complex128))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "395:     self._testBoth(np.array(np.complex(1, 2)).astype(np.complex128))",
      "396:     self._testBoth(np.complex(1, 2) * np.arange(0, 21).astype(np.complex128))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6cbc31d6a2fd963e09c600fce70469d9e461469b",
      "candidate_info": {
        "commit_hash": "6cbc31d6a2fd963e09c600fce70469d9e461469b",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/6cbc31d6a2fd963e09c600fce70469d9e461469b",
        "files": [
          "tensorflow/python/kernel_tests/transpose_op_test.py"
        ],
        "message": "Address review comment and merge tests into testComplex64() and testComplex128()\n\nwith additional update to sort test cases in increasing rank order\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>",
        "before_after_code_files": [
          "tensorflow/python/kernel_tests/transpose_op_test.py||tensorflow/python/kernel_tests/transpose_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/tensorflow/tensorflow/pull/46973"
        ],
        "olp_code_files": {
          "patch": [
            "tensorflow/python/kernel_tests/transpose_op_test.py||tensorflow/python/kernel_tests/transpose_op_test.py"
          ],
          "candidate": [
            "tensorflow/python/kernel_tests/transpose_op_test.py||tensorflow/python/kernel_tests/transpose_op_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/python/kernel_tests/transpose_op_test.py||tensorflow/python/kernel_tests/transpose_op_test.py": [
          "File: tensorflow/python/kernel_tests/transpose_op_test.py -> tensorflow/python/kernel_tests/transpose_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "379:         np.arange(0, 16).reshape([1, 2, 1, 2, 1, 2, 1, 2]).astype(np.float64))",
          "381:   def testComplex64(self):",
          "382:     self._testBoth(",
          "383:         np.complex(1, 2) *",
          "384:         np.arange(0, 21).reshape([3, 7]).astype(np.complex64))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "382:     self._testBoth(np.array(np.complex(1, 2)).astype(np.complex64))",
          "383:     self._testBoth(np.complex(1, 2) * np.arange(0, 21).astype(np.complex64))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "390:         np.arange(0, 1260).reshape([2, 3, 5, 7, 2, 3]).astype(np.complex64))",
          "392:   def testComplex128(self):",
          "393:     self._testBoth(",
          "394:         np.complex(1, 2) *",
          "395:         np.arange(0, 21).reshape([3, 7]).astype(np.complex128))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "395:     self._testBoth(np.array(np.complex(1, 2)).astype(np.complex128))",
          "396:     self._testBoth(np.complex(1, 2) * np.arange(0, 21).astype(np.complex128))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "531:     self._testError(",
          "532:         np.arange(0., 30).reshape([2, 3, 5]), [0, 1, 1], \"2 is missing\")",
          "551: if __name__ == \"__main__\":",
          "552:   test.main()",
          "",
          "[Removed Lines]",
          "534:   @test_util.run_v1_only(\"b/120545219\")",
          "535:   def testComplexScaler(self):",
          "536:     # Test case for GitHub issue 46891.",
          "537:     for dtype in [np.complex64, np.complex128]:",
          "538:       x = np.asarray(1+1j, dtype=dtype)",
          "539:       xt = self.evaluate(array_ops.transpose(x, conjugate=True))",
          "540:       self.assertAllEqual(xt, np.transpose(x).conj())",
          "542:   @test_util.run_v1_only(\"b/120545219\")",
          "543:   def testComplex1D(self):",
          "544:     # Test case for GitHub issue 46891.",
          "545:     for dtype in [np.complex64, np.complex128]:",
          "546:       x = np.asarray([1+1j], dtype=dtype)",
          "547:       xt = self.evaluate(array_ops.transpose(x, conjugate=True))",
          "548:       self.assertAllEqual(xt, np.transpose(x).conj())",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "63333b967844327856352f484aeddd1509b10604",
      "candidate_info": {
        "commit_hash": "63333b967844327856352f484aeddd1509b10604",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/63333b967844327856352f484aeddd1509b10604",
        "files": [
          "tensorflow/core/kernels/transpose_functor.h",
          "tensorflow/python/kernel_tests/transpose_op_test.py"
        ],
        "message": "Fix crash with tf.transpose when a is complex and conjugate is True\n\nThis PR tries to address the issue raised in 46891 where\ntf.transpose will crash when a is complex and conjugate is True.\nThe issue comes from:\nhttps://github.com/tensorflow/tensorflow/blob/57bbc5e0d4b93483b8ae853352173516f1c08018/tensorflow/core/kernels/transpose_functor.h#L169\n\nHowever, as ndims < 2 has already been handled properly:\nhttps://github.com/tensorflow/tensorflow/blob/57bbc5e0d4b93483b8ae853352173516f1c08018/tensorflow/core/kernels/transpose_functor_cpu.cc#L103-L105\nThe check could be removed.\n\nThis PR fixes 46891.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>",
        "before_after_code_files": [
          "tensorflow/core/kernels/transpose_functor.h||tensorflow/core/kernels/transpose_functor.h",
          "tensorflow/python/kernel_tests/transpose_op_test.py||tensorflow/python/kernel_tests/transpose_op_test.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/tensorflow/tensorflow/pull/46973"
        ],
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/transpose_functor.h||tensorflow/core/kernels/transpose_functor.h",
            "tensorflow/python/kernel_tests/transpose_op_test.py||tensorflow/python/kernel_tests/transpose_op_test.py"
          ],
          "candidate": [
            "tensorflow/core/kernels/transpose_functor.h||tensorflow/core/kernels/transpose_functor.h",
            "tensorflow/python/kernel_tests/transpose_op_test.py||tensorflow/python/kernel_tests/transpose_op_test.py"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/transpose_functor.h||tensorflow/core/kernels/transpose_functor.h": [
          "File: tensorflow/core/kernels/transpose_functor.h -> tensorflow/core/kernels/transpose_functor.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "166: Status DoTransposeImpl(const Device& d, const Tensor& in,",
          "167:                        const gtl::ArraySlice<int32> perm, bool conjugate,",
          "168:                        Tensor* out) {",
          "170:   CHECK_EQ(in.dims(), out->dims());",
          "171:   CHECK_EQ(in.dims(), perm.size());",
          "172:   CHECK_EQ(in.dtype(), out->dtype());",
          "",
          "[Removed Lines]",
          "169:   CHECK_GE(in.dims(), 2);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tensorflow/python/kernel_tests/transpose_op_test.py||tensorflow/python/kernel_tests/transpose_op_test.py": [
          "File: tensorflow/python/kernel_tests/transpose_op_test.py -> tensorflow/python/kernel_tests/transpose_op_test.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "531:     self._testError(",
          "532:         np.arange(0., 30).reshape([2, 3, 5]), [0, 1, 1], \"2 is missing\")",
          "535: if __name__ == \"__main__\":",
          "536:   test.main()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "534:   @test_util.run_v1_only(\"b/120545219\")",
          "535:   def testComplexScaler(self):",
          "536:     # Test case for GitHub issue 46891.",
          "537:     for dtype in [np.complex64, np.complex128]:",
          "538:       x = np.asarray(1+1j, dtype=dtype)",
          "539:       xt = self.evaluate(array_ops.transpose(x, conjugate=True))",
          "540:       self.assertAllEqual(xt, np.transpose(x).conj())",
          "542:   @test_util.run_v1_only(\"b/120545219\")",
          "543:   def testComplex1D(self):",
          "544:     # Test case for GitHub issue 46891.",
          "545:     for dtype in [np.complex64, np.complex128]:",
          "546:       x = np.asarray([1+1j], dtype=dtype)",
          "547:       xt = self.evaluate(array_ops.transpose(x, conjugate=True))",
          "548:       self.assertAllEqual(xt, np.transpose(x).conj())",
          "",
          "---------------"
        ]
      }
    }
  ]
}