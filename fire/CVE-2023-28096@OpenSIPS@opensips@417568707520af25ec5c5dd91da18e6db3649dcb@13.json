{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "159ffbbf5c10138b1e8bc06e2b72c30510c0bac3",
      "candidate_info": {
        "commit_hash": "159ffbbf5c10138b1e8bc06e2b72c30510c0bac3",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/159ffbbf5c10138b1e8bc06e2b72c30510c0bac3",
        "files": [
          "modules/b2b_entities/client.c",
          "modules/b2b_entities/dlg.c",
          "modules/b2b_entities/dlg.h"
        ],
        "message": "b2b_entities: use the proxy from b2b_client_new() for all requests\n\nFixes #2759\n\n(cherry picked from commit ceb1d6a074383bca96df0e7a592719dda52bd60b)",
        "before_after_code_files": [
          "modules/b2b_entities/client.c||modules/b2b_entities/client.c",
          "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c",
          "modules/b2b_entities/dlg.h||modules/b2b_entities/dlg.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_entities/client.c||modules/b2b_entities/client.c": [
          "File: modules/b2b_entities/client.c -> modules/b2b_entities/client.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:  size = sizeof(b2b_dlg_t) + ci->to_uri.len + ci->from_uri.len",
          "117:   from_tag.len + ci->local_contact.len + B2B_MAX_KEY_SIZE +",
          "118:   B2BL_MAX_KEY_LEN + mod_name->len;",
          "",
          "[Removed Lines]",
          "116:   + ci->from_dname.len + ci->to_dname.len +",
          "",
          "[Added Lines]",
          "116:   + ci->from_dname.len + ci->to_dname.len + ci->dst_uri.len +",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133:   CONT_COPY(dlg, dlg->to_dname, ci->to_dname);",
          "134:  if(ci->from_dname.s)",
          "135:   CONT_COPY(dlg, dlg->from_dname, ci->from_dname);",
          "136:  CONT_COPY(dlg, dlg->tag[CALLER_LEG], from_tag);",
          "137:  CONT_COPY(dlg, dlg->contact[CALLER_LEG], ci->local_contact);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136:  if(ci->dst_uri.s)",
          "137:   CONT_COPY(dlg, dlg->proxy, ci->dst_uri);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "290:  td->loc_dname = dlg->from_dname;",
          "291:  td->rem_dname = dlg->to_dname;",
          "293:  if(leg)",
          "294:  {",
          "295:   if(leg->route_set.s && leg->route_set.len)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295:  if(dlg->proxy.len)",
          "296:   td->obp = dlg->proxy;",
          "",
          "---------------"
        ],
        "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c": [
          "File: modules/b2b_entities/dlg.c -> modules/b2b_entities/dlg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "389:  b2b_dlg_t* new_dlg;",
          "390:  int size;",
          "393:   dlg->tag[0].len + dlg->tag[1].len+ dlg->route_set[0].len+ dlg->route_set[1].len+",
          "394:   dlg->contact[0].len+ dlg->contact[1].len+ dlg->ruri.len+ B2BL_MAX_KEY_LEN+",
          "395:   dlg->from_dname.len + dlg->to_dname.len + dlg->mod_name.len;",
          "",
          "[Removed Lines]",
          "392:  size = sizeof(b2b_dlg_t) + dlg->callid.len+ dlg->from_uri.len+ dlg->to_uri.len+",
          "",
          "[Added Lines]",
          "392:  size = sizeof(b2b_dlg_t) + dlg->callid.len+ dlg->from_uri.len+ dlg->to_uri.len+dlg->proxy.len+",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "406:  if(dlg->ruri.s)",
          "407:   CONT_COPY(new_dlg, new_dlg->ruri, dlg->ruri);",
          "408:  CONT_COPY(new_dlg, new_dlg->callid, dlg->callid);",
          "409:  CONT_COPY(new_dlg, new_dlg->from_uri, dlg->from_uri);",
          "410:  CONT_COPY(new_dlg, new_dlg->to_uri, dlg->to_uri);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "408:  if(dlg->proxy.s)",
          "409:   CONT_COPY(new_dlg, new_dlg->proxy, dlg->proxy);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1386:   dlg.to_dname = init_dlg->to_dname;",
          "1387:   dlg.from_uri = init_dlg->from_uri;",
          "1388:   dlg.from_dname = init_dlg->from_dname;",
          "1389:  }",
          "1390:  else",
          "1391:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1391:   dlg.proxy = init_dlg->proxy;",
          "",
          "---------------"
        ],
        "modules/b2b_entities/dlg.h||modules/b2b_entities/dlg.h": [
          "File: modules/b2b_entities/dlg.h -> modules/b2b_entities/dlg.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:  unsigned int         id;",
          "86:  b2b_state_t          state;",
          "87:  str                  ruri;",
          "88:  str                  callid;",
          "89:  str                  from_uri;",
          "90:  str                  from_dname;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:  str                  proxy;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6a71c14997936b3911ffa73d01e632838a40b97d",
      "candidate_info": {
        "commit_hash": "6a71c14997936b3911ffa73d01e632838a40b97d",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/6a71c14997936b3911ffa73d01e632838a40b97d",
        "files": [
          "cachedb/cachedb.h",
          "modules/cachedb_local/cachedb_local.c",
          "modules/sql_cacher/sql_cacher.c"
        ],
        "message": "sql_cacher: don't allow usage of a replicated local cache\n\nUsing a replicated collection for cachedb_local would lead to invalid\nkeys in the cache due to reload version inconsistencies.\n\n(cherry picked from commit 1b9662649d2e0606225b5e198a083619d0ca97e1)",
        "before_after_code_files": [
          "cachedb/cachedb.h||cachedb/cachedb.h",
          "modules/cachedb_local/cachedb_local.c||modules/cachedb_local/cachedb_local.c",
          "modules/sql_cacher/sql_cacher.c||modules/sql_cacher/sql_cacher.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cachedb/cachedb.h||cachedb/cachedb.h": [
          "File: cachedb/cachedb.h -> cachedb/cachedb.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:                 const cdb_dict_t *pairs);",
          "147:  int capability;",
          "148: } cachedb_funcs;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "150:  int (*is_replicated) (cachedb_con *con);",
          "",
          "---------------"
        ],
        "modules/cachedb_local/cachedb_local.c||modules/cachedb_local/cachedb_local.c": [
          "File: modules/cachedb_local/cachedb_local.c -> modules/cachedb_local/cachedb_local.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "321:  cachedb_do_close(con,lcache_free_connection);",
          "322: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "324: int lcache_is_replicated (cachedb_con *con)",
          "325: {",
          "326:  return cluster_id ? 1 : 0;",
          "327: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "348:  cde.cdb_func.remove = lcache_htable_remove;",
          "349:  cde.cdb_func.add = lcache_htable_add;",
          "350:  cde.cdb_func.sub = lcache_htable_sub;",
          "352:  cde.cdb_func.capability = CACHEDB_CAP_BINARY_VALUE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "355:  cde.cdb_func.is_replicated = lcache_is_replicated;",
          "",
          "---------------"
        ],
        "modules/sql_cacher/sql_cacher.c||modules/sql_cacher/sql_cacher.c": [
          "File: modules/sql_cacher/sql_cacher.c -> modules/sql_cacher/sql_cacher.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "743:    c_entry->cachedb_url.len, c_entry->cachedb_url.s);",
          "744:   return NULL;",
          "745:  }",
          "747:  if (new_db_hdls->cdbf.set(new_db_hdls->cdbcon, &cdb_test_key, &cdb_test_val,",
          "748:   0) < 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "747:  if (new_db_hdls->cdbf.is_replicated &&",
          "748:   new_db_hdls->cdbf.is_replicated(new_db_hdls->cdbcon)) {",
          "749:   LM_ERR(\"Cannot use an OpenSIPS replicated cacheDB\\n\");",
          "750:   return NULL;",
          "751:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fa2145b12cb6590e4366cb8a2659b7b79813b374",
      "candidate_info": {
        "commit_hash": "fa2145b12cb6590e4366cb8a2659b7b79813b374",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/fa2145b12cb6590e4366cb8a2659b7b79813b374",
        "files": [
          "modules/b2b_logic/records.c"
        ],
        "message": "b2b_logic: fix possible crash when init_callid_hdr param is set\n\nThe crash would occur if the Call-ID header name is received in compact\nform(\"i\" instead of \"Call-ID\").\n\nThanks to David Escartin from Sonoc for reporting.",
        "before_after_code_files": [
          "modules/b2b_logic/records.c||modules/b2b_logic/records.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_logic/records.c||modules/b2b_logic/records.c": [
          "File: modules/b2b_logic/records.c -> modules/b2b_logic/records.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "917:   len += hdrs[i]->len;",
          "919:  if(init_callid_hdr.len && msg->callid)",
          "922:  if(custom_hdrs && custom_hdrs->s && custom_hdrs->len)",
          "923:  {",
          "",
          "[Removed Lines]",
          "920:   len+= init_callid_hdr.len + msg->callid->len;",
          "",
          "[Added Lines]",
          "920:   len += init_callid_hdr.len +",
          "921:    (int)(msg->callid->name.s+msg->callid->len-msg->callid->body.s) +",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9af70963ded16c369fe5d3be2027d8efe247adf6",
      "candidate_info": {
        "commit_hash": "9af70963ded16c369fe5d3be2027d8efe247adf6",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/9af70963ded16c369fe5d3be2027d8efe247adf6",
        "files": [
          "Makefile.defs",
          "packaging/debian/changelog",
          "packaging/freebsd/Makefile",
          "packaging/netbsd/Makefile",
          "packaging/openbsd/Makefile",
          "packaging/redhat_fedora/opensips.spec",
          "packaging/solaris/base-pkginfo",
          "packaging/solaris/berkeley-pkginfo",
          "packaging/solaris/carrierroute-pkginfo",
          "packaging/solaris/identity-pkginfo",
          "packaging/solaris/ldap-pkginfo",
          "packaging/solaris/mmgeoip-pkginfo",
          "packaging/solaris/mysql-pkginfo",
          "packaging/solaris/perl-pkginfo",
          "packaging/solaris/pgsql-pkginfo",
          "packaging/solaris/pkginfo",
          "packaging/solaris/regex-pkginfo",
          "packaging/solaris/snmp-pkginfo",
          "packaging/solaris/tls-pkginfo",
          "packaging/solaris/xmlrpc-pkginfo"
        ],
        "message": "Bump version to 3.2.7",
        "before_after_code_files": [
          "Makefile.defs||Makefile.defs",
          "packaging/redhat_fedora/opensips.spec||packaging/redhat_fedora/opensips.spec"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.defs||Makefile.defs": [
          "File: Makefile.defs -> Makefile.defs",
          "--- Hunk 1 ---",
          "[Context before]",
          "66: #version number",
          "67: VERSION_MAJOR = 3",
          "68: VERSION_MINOR = 2",
          "70: VERSION_BUILD =",
          "72: ifneq (,$(VERSION_BUILD))",
          "",
          "[Removed Lines]",
          "69: VERSION_SUBMINOR = 6",
          "",
          "[Added Lines]",
          "69: VERSION_SUBMINOR = 7",
          "",
          "---------------"
        ],
        "packaging/redhat_fedora/opensips.spec||packaging/redhat_fedora/opensips.spec": [
          "File: packaging/redhat_fedora/opensips.spec -> packaging/redhat_fedora/opensips.spec",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: Summary:  Very fast and configurable SIP server",
          "47: Name:     opensips",
          "49: Release:  1%{?dist}",
          "50: License:  GPLv2+",
          "51: Group:    System Environment/Daemons",
          "",
          "[Removed Lines]",
          "48: Version:  3.2.6",
          "",
          "[Added Lines]",
          "48: Version:  3.2.7",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0cca86fe789d77ea3e2b58326d6f282eb3433544",
      "candidate_info": {
        "commit_hash": "0cca86fe789d77ea3e2b58326d6f282eb3433544",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/0cca86fe789d77ea3e2b58326d6f282eb3433544",
        "files": [
          "modules/presence_dialoginfo/notify_body.c"
        ],
        "message": "[presence_dialoginfo] Fix aggregating dialoginfo XML\n\nFix the looping when aggregating the dialog info XML documents with multiple dialog elements. The xmlUnlinkNode() function inside the loop is breaking the looping (the \"next\" member is reset).\nCredits for reporting and fixing go to Damien Sandras (@dsandras)",
        "before_after_code_files": [
          "modules/presence_dialoginfo/notify_body.c||modules/presence_dialoginfo/notify_body.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/presence_dialoginfo/notify_body.c||modules/presence_dialoginfo/notify_body.c": [
          "File: modules/presence_dialoginfo/notify_body.c -> modules/presence_dialoginfo/notify_body.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "109: str* agregate_xmls(str* pres_user, str* pres_domain, str** body_array, int n, int partial)",
          "110: {",
          "111:  int i, j= 0;",
          "113:  xmlDocPtr  doc = NULL;",
          "114:  xmlNodePtr root_node = NULL;",
          "115:  xmlNsPtr   namespace = NULL;",
          "117:  xmlNodePtr p_root= NULL;",
          "118:  xmlDocPtr* xml_array ;",
          "119:  xmlNodePtr node = NULL;",
          "120:  char *state;",
          "121:  int winner_priority = -1, priority ;",
          "122:  xmlNodePtr winner_dialog_node = NULL ;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:  xmlNodePtr next_node = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "211:     goto error;",
          "212:    }",
          "213:    if (p_root->children) {",
          "215:     if (node->type == XML_ELEMENT_NODE) {",
          "216:      LM_DBG(\"node type: Element, name: %s\\n\", node->name);",
          "",
          "[Removed Lines]",
          "214:    for (node = p_root->children; node; node = node->next) {",
          "",
          "[Added Lines]",
          "213:    for (node = p_root->children; node; node = next_node) {",
          "214:     next_node = node->next;",
          "",
          "---------------"
        ]
      }
    }
  ]
}