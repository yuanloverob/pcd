{
  "cve_id": "CVE-2024-29882",
  "cve_desc": "SRS is a simple, high-efficiency, real-time video server. SRS's `/api/v1/vhosts/vid-<id>?callback=<payload>` endpoint didn't filter the callback function name which led to injecting malicious javascript payloads and executing XSS ( Cross-Site Scripting). This vulnerability is fixed in 5.0.210 and 6.0.121.",
  "repo": "ossrs/srs",
  "patch_hash": "244ce7bc013a0b805274a65132a2980680ba6b9d",
  "patch_info": {
    "commit_hash": "244ce7bc013a0b805274a65132a2980680ba6b9d",
    "repo": "ossrs/srs",
    "commit_url": "https://github.com/ossrs/srs/commit/244ce7bc013a0b805274a65132a2980680ba6b9d",
    "files": [
      "trunk/configure",
      "trunk/doc/CHANGELOG.md",
      "trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp",
      "trunk/src/kernel/srs_kernel_error.hpp",
      "trunk/src/protocol/srs_protocol_http_conn.cpp",
      "trunk/src/utest/srs_utest_protocol3.cpp",
      "trunk/src/utest/srs_utest_protocol3.hpp"
    ],
    "message": "Merge pull request from GHSA-gv9r-qcjc-5hj7\n\n* Filter JSONP callback function name. v5.0.210,v6.0.121\n\n* Add utest.\n\n* Refine utest",
    "before_after_code_files": [
      "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
      "trunk/src/kernel/srs_kernel_error.hpp||trunk/src/kernel/srs_kernel_error.hpp",
      "trunk/src/protocol/srs_protocol_http_conn.cpp||trunk/src/protocol/srs_protocol_http_conn.cpp",
      "trunk/src/utest/srs_utest_protocol3.cpp||trunk/src/utest/srs_utest_protocol3.cpp",
      "trunk/src/utest/srs_utest_protocol3.hpp||trunk/src/utest/srs_utest_protocol3.hpp"
    ]
  },
  "patch_diff": {
    "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
      "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       5",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    209",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    210",
      "",
      "---------------"
    ],
    "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
      "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       6",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    120",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    121",
      "",
      "---------------"
    ],
    "trunk/src/kernel/srs_kernel_error.hpp||trunk/src/kernel/srs_kernel_error.hpp": [
      "File: trunk/src/kernel/srs_kernel_error.hpp -> trunk/src/kernel/srs_kernel_error.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "332:     XX(ERROR_STREAM_CASTER_HEVC_VPS        , 4054, \"CasterTsHevcVps\", \"Invalid ts HEVC VPS for stream caster\") \\",
      "333:     XX(ERROR_STREAM_CASTER_HEVC_SPS        , 4055, \"CasterTsHevcSps\", \"Invalid ts HEVC SPS for stream caster\") \\",
      "334:     XX(ERROR_STREAM_CASTER_HEVC_PPS        , 4056, \"CasterTsHevcPps\", \"Invalid ts HEVC PPS for stream caster\") \\",
      "",
      "[Removed Lines]",
      "335:     XX(ERROR_STREAM_CASTER_HEVC_FORMAT     , 4057, \"CasterTsHevcFormat\", \"Invalid ts HEVC Format for stream caster\")",
      "",
      "[Added Lines]",
      "335:     XX(ERROR_STREAM_CASTER_HEVC_FORMAT     , 4057, \"CasterTsHevcFormat\", \"Invalid ts HEVC Format for stream caster\") \\",
      "336:     XX(ERROR_HTTP_JSONP                    , 4058, \"HttpJsonp\", \"Invalid callback for JSONP\")",
      "",
      "---------------"
    ],
    "trunk/src/protocol/srs_protocol_http_conn.cpp||trunk/src/protocol/srs_protocol_http_conn.cpp": [
      "File: trunk/src/protocol/srs_protocol_http_conn.cpp -> trunk/src/protocol/srs_protocol_http_conn.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "332:     }",
      "333: }",
      "335: srs_error_t SrsHttpMessage::set_url(string url, bool allow_jsonp)",
      "336: {",
      "337:     srs_error_t err = srs_success;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "336: bool srs_is_valid_jsonp_callback(std::string callback)",
      "337: {",
      "338:     for (int i = 0; i < (int)callback.length(); i++) {",
      "339:         char ch = callback.at(i);",
      "340:         bool is_alpha_beta = (ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z');",
      "341:         bool is_number = (ch >= '0' && ch <= '9');",
      "342:         if (!is_alpha_beta && !is_number && ch != '.' && ch != '_' && ch != '-') {",
      "343:             return false;",
      "344:         }",
      "345:     }",
      "346:     return true;",
      "347: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "375:     if (allow_jsonp) {",
      "379:         if (jsonp) {",
      "380:             jsonp_method = query_get(\"method\");",
      "381:         }",
      "382:     }",
      "384:     return err;",
      "",
      "[Removed Lines]",
      "376:         if (!query_get(\"callback\").empty()) {",
      "377:             jsonp = true;",
      "378:         }",
      "",
      "[Added Lines]",
      "390:         string callback= query_get(\"callback\");",
      "391:         jsonp = !callback.empty();",
      "397:         if (!srs_is_valid_jsonp_callback(callback)) {",
      "398:             return srs_error_new(ERROR_HTTP_JSONP, \"invalid callback=%s\", callback.c_str());",
      "399:         }",
      "",
      "---------------"
    ],
    "trunk/src/utest/srs_utest_protocol3.cpp||trunk/src/utest/srs_utest_protocol3.cpp": [
      "File: trunk/src/utest/srs_utest_protocol3.cpp -> trunk/src/utest/srs_utest_protocol3.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6: #include <srs_utest_protocol3.hpp>",
      "8: using namespace std;",
      "10: #include <srs_kernel_error.hpp>",
      "11: #include <srs_core_autofree.hpp>",
      "12: #include <srs_protocol_utility.hpp>",
      "13: #include <srs_protocol_rtmp_msg_array.hpp>",
      "14: #include <srs_protocol_rtmp_stack.hpp>",
      "15: #include <srs_kernel_utility.hpp>",
      "16: #include <srs_app_st.hpp>",
      "17: #include <srs_protocol_amf0.hpp>",
      "18: #include <srs_protocol_rtmp_stack.hpp>",
      "19: #include <srs_protocol_http_conn.hpp>",
      "20: #include <srs_protocol_protobuf.hpp>",
      "21: #include <srs_kernel_buffer.hpp>",
      "23: extern bool srs_is_valid_jsonp_callback(std::string callback);",
      "25: VOID TEST(ProtocolHttpTest, JsonpCallbackName)",
      "26: {",
      "27:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"\"));",
      "28:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"callback\"));",
      "29:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback\"));",
      "30:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback1234567890\"));",
      "31:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback-1234567890\"));",
      "32:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback_1234567890\"));",
      "33:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback.1234567890\"));",
      "34:     EXPECT_TRUE(srs_is_valid_jsonp_callback(\"Callback1234567890-_.\"));",
      "35:     EXPECT_FALSE(srs_is_valid_jsonp_callback(\"callback()//\"));",
      "36:     EXPECT_FALSE(srs_is_valid_jsonp_callback(\"callback!\"));",
      "37:     EXPECT_FALSE(srs_is_valid_jsonp_callback(\"callback;\"));",
      "38: }",
      "",
      "---------------"
    ],
    "trunk/src/utest/srs_utest_protocol3.hpp||trunk/src/utest/srs_utest_protocol3.hpp": [
      "File: trunk/src/utest/srs_utest_protocol3.hpp -> trunk/src/utest/srs_utest_protocol3.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7: #ifndef SRS_UTEST_PROTOCOL3_HPP",
      "8: #define SRS_UTEST_PROTOCOL3_HPP",
      "11: #include <srs_utest_protocol3.hpp>",
      "13: #include <srs_utest_protocol.hpp>",
      "15: #endif",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6a612784d0907bae6141f97c5c33124f989a1f95",
      "candidate_info": {
        "commit_hash": "6a612784d0907bae6141f97c5c33124f989a1f95",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/6a612784d0907bae6141f97c5c33124f989a1f95",
        "files": [
          ".github/workflows/test.yml",
          "trunk/doc/CHANGELOG.md",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/core/srs_core_version7.hpp"
        ],
        "message": "fix ci error. v5.0.219 v6.0.160 v7.0.22 (#4291)\n\nStarting January 30th, 2025, GitHub Actions customers will no longer be\nable to use v3 of\n[actions/upload-artifact](https://github.com/actions/upload-artifact) or\n[actions/download-artifact](https://github.com/actions/download-artifact).\nCustomers should update workflows to begin using [v4 of the artifact\nactions](https://github.blog/2024-02-12-get-started-with-v4-of-github-actions-artifacts/).\nLearn more:\nhttps://github.blog/changelog/2024-04-16-deprecation-notice-v3-of-the-artifact-actions/\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>\nCo-authored-by: winlin <winlinvip@gmail.com>\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/core/srs_core_version7.hpp||trunk/src/core/srs_core_version7.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    218",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    219",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    159",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    160",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version7.hpp||trunk/src/core/srs_core_version7.hpp": [
          "File: trunk/src/core/srs_core_version7.hpp -> trunk/src/core/srs_core_version7.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       7",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    21",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    22",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "75ddd8f5b6c293b1b98bd027e0c3de9500a7d0c3",
      "candidate_info": {
        "commit_hash": "75ddd8f5b6c293b1b98bd027e0c3de9500a7d0c3",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/75ddd8f5b6c293b1b98bd027e0c3de9500a7d0c3",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_config.cpp",
          "trunk/src/app/srs_app_rtc_source.cpp",
          "trunk/src/app/srs_app_source.cpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/kernel/srs_kernel_flv.cpp",
          "trunk/src/kernel/srs_kernel_flv.hpp",
          "trunk/src/kernel/srs_kernel_utility.cpp",
          "trunk/src/kernel/srs_kernel_utility.hpp",
          "trunk/src/protocol/srs_protocol_rtmp_stack.cpp",
          "trunk/src/protocol/srs_protocol_rtmp_stack.hpp",
          "trunk/src/utest/srs_utest_kernel.cpp",
          "trunk/src/utest/srs_utest_protocol.cpp",
          "trunk/src/utest/srs_utest_protocol2.cpp"
        ],
        "message": "Fix misspelling error in app config. v6.0.133 (#4077)\n\n1. misspelling fix;\n2. remove finished TODO;\n\n---------\n\nCo-authored-by: Haibo Chen <495810242@qq.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_config.cpp||trunk/src/app/srs_app_config.cpp",
          "trunk/src/app/srs_app_rtc_source.cpp||trunk/src/app/srs_app_rtc_source.cpp",
          "trunk/src/app/srs_app_source.cpp||trunk/src/app/srs_app_source.cpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/kernel/srs_kernel_flv.cpp||trunk/src/kernel/srs_kernel_flv.cpp",
          "trunk/src/kernel/srs_kernel_flv.hpp||trunk/src/kernel/srs_kernel_flv.hpp",
          "trunk/src/kernel/srs_kernel_utility.cpp||trunk/src/kernel/srs_kernel_utility.cpp",
          "trunk/src/kernel/srs_kernel_utility.hpp||trunk/src/kernel/srs_kernel_utility.hpp",
          "trunk/src/protocol/srs_protocol_rtmp_stack.cpp||trunk/src/protocol/srs_protocol_rtmp_stack.cpp",
          "trunk/src/protocol/srs_protocol_rtmp_stack.hpp||trunk/src/protocol/srs_protocol_rtmp_stack.hpp",
          "trunk/src/utest/srs_utest_kernel.cpp||trunk/src/utest/srs_utest_kernel.cpp",
          "trunk/src/utest/srs_utest_protocol.cpp||trunk/src/utest/srs_utest_protocol.cpp",
          "trunk/src/utest/srs_utest_protocol2.cpp||trunk/src/utest/srs_utest_protocol2.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_config.cpp||trunk/src/app/srs_app_config.cpp": [
          "File: trunk/src/app/srs_app_config.cpp -> trunk/src/app/srs_app_config.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: const char* _srs_version = \"XCORE-\" RTMP_SIG_SRS_SERVER;",
          "53: #define SRS_CONF_DEFAULT_COFNIG_FILE SRS_DEFAULT_CONFIG",
          "",
          "[Removed Lines]",
          "49: #define SRS_CONF_PERFER_FALSE(conf_arg) conf_arg == \"on\"",
          "50: #define SRS_CONF_PERFER_TRUE(conf_arg) conf_arg != \"off\"",
          "",
          "[Added Lines]",
          "49: #define SRS_CONF_PREFER_FALSE(conf_arg) conf_arg == \"on\"",
          "50: #define SRS_CONF_PREFER_TRUE(conf_arg) conf_arg != \"off\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62: #define SRS_OVERWRITE_BY_ENV_STRING(key) if (!srs_getenv(key).empty()) return srs_getenv(key)",
          "65: #define SRS_OVERWRITE_BY_ENV_INT(key) if (!srs_getenv(key).empty()) return ::atoi(srs_getenv(key).c_str())",
          "66: #define SRS_OVERWRITE_BY_ENV_FLOAT(key) if (!srs_getenv(key).empty()) return ::atof(srs_getenv(key).c_str())",
          "67: #define SRS_OVERWRITE_BY_ENV_SECONDS(key) if (!srs_getenv(key).empty()) return srs_utime_t(::atoi(srs_getenv(key).c_str()) * SRS_UTIME_SECONDS)",
          "",
          "[Removed Lines]",
          "63: #define SRS_OVERWRITE_BY_ENV_BOOL(key) if (!srs_getenv(key).empty()) return SRS_CONF_PERFER_FALSE(srs_getenv(key))",
          "64: #define SRS_OVERWRITE_BY_ENV_BOOL2(key) if (!srs_getenv(key).empty()) return SRS_CONF_PERFER_TRUE(srs_getenv(key))",
          "",
          "[Added Lines]",
          "63: #define SRS_OVERWRITE_BY_ENV_BOOL(key) if (!srs_getenv(key).empty()) return SRS_CONF_PREFER_FALSE(srs_getenv(key))",
          "64: #define SRS_OVERWRITE_BY_ENV_BOOL2(key) if (!srs_getenv(key).empty()) return SRS_CONF_PREFER_TRUE(srs_getenv(key))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2908:         return true;",
          "2909:     }",
          "2912: }",
          "2914: bool SrsConfig::get_in_docker()",
          "",
          "[Removed Lines]",
          "2911:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "2911:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2922:         return DEFAULT;",
          "2923:     }",
          "2926: }",
          "2928: bool SrsConfig::is_full_config()",
          "",
          "[Removed Lines]",
          "2925:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "2925:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2934:         return DEFAULT;",
          "2935:     }",
          "2938: }",
          "2940: SrsConfDirective* SrsConfig::get_root()",
          "",
          "[Removed Lines]",
          "2937:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "2937:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3098:         return DEFAULT;",
          "3099:     }",
          "3102: }",
          "3104: string SrsConfig::get_work_dir()",
          "",
          "[Removed Lines]",
          "3101:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "3101:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3126:         return DEFAULT;",
          "3127:     }",
          "3130: }",
          "3132: bool SrsConfig::whether_query_latest_version()",
          "",
          "[Removed Lines]",
          "3129:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "3129:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3140:         return DEFAULT;",
          "3141:     }",
          "3144: }",
          "3146: srs_utime_t SrsConfig::first_wait_for_qlv()",
          "",
          "[Removed Lines]",
          "3143:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "3143:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3168:         return DEFAULT;",
          "3169:     }",
          "3172: }",
          "3174: srs_utime_t SrsConfig::get_grace_start_wait()",
          "",
          "[Removed Lines]",
          "3171:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "3171:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "3210:         return DEFAULT;",
          "3211:     }",
          "3214: }",
          "3216: bool SrsConfig::disable_daemon_for_docker()",
          "",
          "[Removed Lines]",
          "3213:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "3213:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "3224:         return DEFAULT;",
          "3225:     }",
          "3228: }",
          "3230: bool SrsConfig::inotify_auto_reload()",
          "",
          "[Removed Lines]",
          "3227:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "3227:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3238:         return DEFAULT;",
          "3239:     }",
          "3242: }",
          "3244: bool SrsConfig::auto_reload_for_docker()",
          "",
          "[Removed Lines]",
          "3241:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "3241:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "3252:         return DEFAULT;",
          "3253:     }",
          "3256: }",
          "",
          "[Removed Lines]",
          "3255:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "3255:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3318:         return DEFAULT;",
          "3319:     }",
          "3322: }",
          "3324: int SrsConfig::get_high_threshold()",
          "",
          "[Removed Lines]",
          "3321:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "3321:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "3451:         return DEFAULT;",
          "3452:     }",
          "3455: }",
          "3457: bool SrsConfig::get_tencentcloud_cls_stat_heartbeat()",
          "",
          "[Removed Lines]",
          "3454:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "3454:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "3470:         return DEFAULT;",
          "3471:     }",
          "3474: }",
          "3476: bool SrsConfig::get_tencentcloud_cls_stat_streams()",
          "",
          "[Removed Lines]",
          "3473:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "3473:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "3489:         return DEFAULT;",
          "3490:     }",
          "3493: }",
          "3495: bool SrsConfig::get_tencentcloud_cls_debug_logging()",
          "",
          "[Removed Lines]",
          "3492:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "3492:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "3508:         return DEFAULT;",
          "3509:     }",
          "3512: }",
          "3514: int SrsConfig::get_tencentcloud_cls_heartbeat_ratio()",
          "",
          "[Removed Lines]",
          "3511:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "3511:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "3679:         return DEFAULT;",
          "3680:     }",
          "3683: }",
          "3685: string SrsConfig::get_tencentcloud_apm_team()",
          "",
          "[Removed Lines]",
          "3682:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "3682:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "3774:         return DEFAULT;",
          "3775:     }",
          "3778: }",
          "3780: bool SrsConfig::get_exporter_enabled()",
          "",
          "[Removed Lines]",
          "3777:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "3777:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "3793:         return DEFAULT;",
          "3794:     }",
          "3797: }",
          "3799: string SrsConfig::get_exporter_listen()",
          "",
          "[Removed Lines]",
          "3796:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "3796:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "3885:         return DEFAULT;",
          "3886:     }",
          "3889: }",
          "3891: string SrsConfig::get_stream_caster_engine(SrsConfDirective* conf)",
          "",
          "[Removed Lines]",
          "3888:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "3888:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "3954:         return DEFAULT;",
          "3955:     }",
          "3958: }",
          "3960: int SrsConfig::get_stream_caster_sip_listen(SrsConfDirective* conf)",
          "",
          "[Removed Lines]",
          "3957:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "3957:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "4072:         return DEFAULT;",
          "4073:     }",
          "4076: }",
          "4078: int SrsConfig::get_rtc_server_listen()",
          "",
          "[Removed Lines]",
          "4075:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "4075:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "4144:         return DEFAULT;",
          "4145:     }",
          "4148: }",
          "4150: bool SrsConfig::get_resolve_api_domain()",
          "",
          "[Removed Lines]",
          "4147:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "4147:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "4163:         return DEFAULT;",
          "4164:     }",
          "4167: }",
          "4169: bool SrsConfig::get_keep_api_domain()",
          "",
          "[Removed Lines]",
          "4166:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "4166:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "4182:         return DEFAULT;",
          "4183:     }",
          "4186: }",
          "4188: bool SrsConfig::get_use_auto_detect_network_ip()",
          "",
          "[Removed Lines]",
          "4185:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "4185:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "4201:         return DEFAULT;",
          "4202:     }",
          "4205: }",
          "4207: bool SrsConfig::get_rtc_server_tcp_enabled()",
          "",
          "[Removed Lines]",
          "4204:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "4204:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "4225:         return DEFAULT;",
          "4226:     }",
          "4229: }",
          "4231: int SrsConfig::get_rtc_server_tcp_listen()",
          "",
          "[Removed Lines]",
          "4228:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "4228:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "4306:         return DEFAULT;",
          "4307:     }",
          "4310: }",
          "4312: bool SrsConfig::get_rtc_server_encrypt()",
          "",
          "[Removed Lines]",
          "4309:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "4309:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "4325:         return DEFAULT;",
          "4326:     }",
          "4329: }",
          "4331: int SrsConfig::get_rtc_server_reuseport()",
          "",
          "[Removed Lines]",
          "4328:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "4328:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "4377:         return DEFAULT;",
          "4378:     }",
          "4381: }",
          "4383: bool SrsConfig::get_rtc_server_black_hole()",
          "",
          "[Removed Lines]",
          "4380:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "4380:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "4401:         return DEFAULT;",
          "4402:     }",
          "4405: }",
          "4407: std::string SrsConfig::get_rtc_server_black_hole_addr()",
          "",
          "[Removed Lines]",
          "4404:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "4404:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "4451:         return DEFAULT;",
          "4452:     }",
          "4455: }",
          "4457: bool SrsConfig::get_rtc_keep_bframe(string vhost)",
          "",
          "[Removed Lines]",
          "4454:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "4454:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "4471:         return DEFAULT;",
          "4472:     }",
          "4475: }",
          "4477: bool SrsConfig::get_rtc_keep_avc_nalu_sei(std::string vhost)",
          "",
          "[Removed Lines]",
          "4474:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "4474:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "4491:         return DEFAULT;",
          "4492:     }",
          "4495: }",
          "4497: bool SrsConfig::get_rtc_from_rtmp(string vhost)",
          "",
          "[Removed Lines]",
          "4494:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "4494:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "4511:         return DEFAULT;",
          "4512:     }",
          "4515: }",
          "4517: srs_utime_t SrsConfig::get_rtc_stun_timeout(string vhost)",
          "",
          "[Removed Lines]",
          "4514:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "4514:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "4551:         return DEFAULT;",
          "4552:     }",
          "4555: }",
          "4557: std::string SrsConfig::get_rtc_dtls_role(string vhost)",
          "",
          "[Removed Lines]",
          "4554:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "4554:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "4629:         return DEFAULT;",
          "4630:     }",
          "4633: }",
          "4635: srs_utime_t SrsConfig::get_rtc_pli_for_rtmp(string vhost)",
          "",
          "[Removed Lines]",
          "4632:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "4632:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "4677:         return DEFAULT;",
          "4678:     }",
          "4681: }",
          "4683: bool SrsConfig::get_rtc_nack_no_copy(string vhost)",
          "",
          "[Removed Lines]",
          "4680:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "4680:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "4696:         return DEFAULT;",
          "4697:     }",
          "4700: }",
          "4702: bool SrsConfig::get_rtc_twcc_enabled(string vhost)",
          "",
          "[Removed Lines]",
          "4699:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "4699:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "4715:         return DEFAULT;",
          "4716:     }",
          "4719: }",
          "4721: int SrsConfig::get_rtc_opus_bitrate(string vhost)",
          "",
          "[Removed Lines]",
          "4718:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "4718:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "4840:         return false;",
          "4841:     }",
          "4844:     conf = conf->get(\"enabled\");",
          "4845:     if (!conf || conf->arg0().empty()) {",
          "4846:         return DEFAULT;",
          "4847:     }",
          "4850: }",
          "4852: bool SrsConfig::get_gop_cache(string vhost)",
          "",
          "[Removed Lines]",
          "4849:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "4849:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "4868:         return SRS_PERF_GOP_CACHE;",
          "4869:     }",
          "4872: }",
          "",
          "[Removed Lines]",
          "4871:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "4871:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "4916:         return DEFAULT;",
          "4917:     }",
          "4920: }",
          "4922: bool SrsConfig::get_atc(string vhost)",
          "",
          "[Removed Lines]",
          "4919:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "4919:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "4940:         return DEFAULT;",
          "4941:     }",
          "4944: }",
          "4946: bool SrsConfig::get_atc_auto(string vhost)",
          "",
          "[Removed Lines]",
          "4943:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "4943:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "4964:         return DEFAULT;",
          "4965:     }",
          "4968: }",
          "4970: int SrsConfig::get_time_jitter(string vhost)",
          "",
          "[Removed Lines]",
          "4967:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "4967:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "5014:         return DEFAULT;",
          "5015:     }",
          "5018: }",
          "5020: srs_utime_t SrsConfig::get_queue_length(string vhost)",
          "",
          "[Removed Lines]",
          "5017:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "5017:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "5060:         return DEFAULT;",
          "5061:     }",
          "5064: }",
          "5066: SrsConfDirective* SrsConfig::get_refer_all(string vhost)",
          "",
          "[Removed Lines]",
          "5063:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "5063:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "5199:         return DEFAULT;",
          "5200:     }",
          "5203: }",
          "5205: bool SrsConfig::try_annexb_first(string vhost)",
          "",
          "[Removed Lines]",
          "5202:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "5202:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "5224:         return DEFAULT;",
          "5225:     }",
          "5228: }",
          "5230: bool SrsConfig::get_mr_enabled(string vhost)",
          "",
          "[Removed Lines]",
          "5227:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "5227:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "5246:         return SRS_PERF_MR_ENABLED;",
          "5247:     }",
          "5250: }",
          "5252: srs_utime_t SrsConfig::get_mr_sleep(string vhost)",
          "",
          "[Removed Lines]",
          "5249:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "5249:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "5382:     }",
          "5384:     if (is_rtc) {",
          "5386:     } else {",
          "5388:     }",
          "5389: }",
          "",
          "[Removed Lines]",
          "5385:         return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "5387:         return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "5385:         return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "5387:         return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "5404:         return DEFAULT;",
          "5405:     }",
          "5408: }",
          "5410: srs_utime_t SrsConfig::get_send_min_interval(string vhost)",
          "",
          "[Removed Lines]",
          "5407:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "5407:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "5452:         return DEFAULT;",
          "5453:     }",
          "5456: }",
          "5458: srs_utime_t SrsConfig::get_publish_1stpkt_timeout(string vhost)",
          "",
          "[Removed Lines]",
          "5455:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "5455:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "5573:         return DEFAULT;",
          "5574:     }",
          "5577: }",
          "5579: SrsConfDirective* SrsConfig::get_forwards(string vhost)",
          "",
          "[Removed Lines]",
          "5576:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "5576:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "5646:         return DEFAULT;",
          "5647:     }",
          "5650: }",
          "5652: SrsConfDirective* SrsConfig::get_vhost_on_connect(string vhost)",
          "",
          "[Removed Lines]",
          "5649:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "5649:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "5841:         return DEFAULT;",
          "5842:     }",
          "5845: }",
          "5847: bool SrsConfig::get_vhost_edge_token_traverse(string vhost)",
          "",
          "[Removed Lines]",
          "5844:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "5844:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "5863:         return DEFAULT;",
          "5864:     }",
          "5867: }",
          "5869: string SrsConfig::get_vhost_edge_transform_vhost(string vhost)",
          "",
          "[Removed Lines]",
          "5866:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "5866:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "5913:         return DEFAULT;",
          "5914:     }",
          "5917: }",
          "5919: vector<string> SrsConfig::get_vhost_coworkers(string vhost)",
          "",
          "[Removed Lines]",
          "5916:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "5916:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "5967:         return DEFAULT;",
          "5968:     }",
          "5971: }",
          "5973: SrsConfDirective* SrsConfig::get_security_rules(string vhost)",
          "",
          "[Removed Lines]",
          "5970:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "5970:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "6008:         return DEFAULT;",
          "6009:     }",
          "6012: }",
          "6014: string SrsConfig::get_transcode_ffmpeg(SrsConfDirective* conf)",
          "",
          "[Removed Lines]",
          "6011:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "6011:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "6059:         return DEFAULT;",
          "6060:     }",
          "6063: }",
          "6065: string srs_prefix_underscores_ifno(string name)",
          "",
          "[Removed Lines]",
          "6062:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "6062:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "6459:         return DEFAULT;",
          "6460:     }",
          "6463: }",
          "6465: vector<SrsConfDirective*> SrsConfig::get_exec_publishs(string vhost)",
          "",
          "[Removed Lines]",
          "6462:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "6462:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "6524:         return DEFAULT;",
          "6525:     }",
          "6528: }",
          "6530: string SrsConfig::get_ingest_ffmpeg(SrsConfDirective* conf)",
          "",
          "[Removed Lines]",
          "6527:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "6527:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "6723:         return DEFAULT;",
          "6724:     }",
          "6727: }",
          "6729: srs_utime_t SrsConfig::get_dash_fragment(string vhost)",
          "",
          "[Removed Lines]",
          "6726:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "6726:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "6856:         return DEFAULT;",
          "6857:     }",
          "6860: }",
          "6862: srs_utime_t SrsConfig::get_dash_dispose(std::string vhost)",
          "",
          "[Removed Lines]",
          "6859:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "6859:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "6915:         return DEFAULT;",
          "6916:     }",
          "6919: }",
          "6921: string SrsConfig::get_hls_entry_prefix(string vhost)",
          "",
          "[Removed Lines]",
          "6918:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "6918:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "7010:         return DEFAULT;",
          "7011:     }",
          "7014: }",
          "7016: srs_utime_t SrsConfig::get_hls_fragment(string vhost)",
          "",
          "[Removed Lines]",
          "7013:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "7013:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "7182:         return DEFAULT;",
          "7183:     }",
          "7186: }",
          "7188: bool SrsConfig::get_hls_ctx_enabled(std::string vhost)",
          "",
          "[Removed Lines]",
          "7185:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "7185:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "7201:         return DEFAULT;",
          "7202:     }",
          "7205: }",
          "7207: bool SrsConfig::get_hls_ts_ctx_enabled(std::string vhost)",
          "",
          "[Removed Lines]",
          "7204:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "7204:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "7220:         return DEFAULT;",
          "7221:     }",
          "7224: }",
          "7226: bool SrsConfig::get_hls_cleanup(string vhost)",
          "",
          "[Removed Lines]",
          "7223:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "7223:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "7239:         return DEFAULT;",
          "7240:     }",
          "7243: }",
          "7245: srs_utime_t SrsConfig::get_hls_dispose(string vhost)",
          "",
          "[Removed Lines]",
          "7242:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "7242:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "7277:         return DEFAULT;",
          "7278:     }",
          "7281: }",
          "7283: bool SrsConfig::get_hls_keys(string vhost)",
          "",
          "[Removed Lines]",
          "7280:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "7280:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "7296:         return DEFAULT;",
          "7297:     }",
          "7300: }",
          "7302: int SrsConfig::get_hls_fragments_per_key(string vhost)",
          "",
          "[Removed Lines]",
          "7299:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "7299:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "7418:         return DEFAULT;",
          "7419:     }",
          "7422: }",
          "7424: string SrsConfig::get_hds_path(const string &vhost)",
          "",
          "[Removed Lines]",
          "7421:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "7421:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "7518:         return DEFAULT;",
          "7519:     }",
          "7522: }",
          "7524: SrsConfDirective* SrsConfig::get_dvr_apply(string vhost)",
          "",
          "[Removed Lines]",
          "7521:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "7521:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "7609:         return DEFAULT;",
          "7610:     }",
          "7613: }",
          "7615: int SrsConfig::get_dvr_time_jitter(string vhost)",
          "",
          "[Removed Lines]",
          "7612:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "7612:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "7655:         return DEFAULT;",
          "7656:     }",
          "7659: }",
          "7661: string SrsConfig::get_http_api_listen()",
          "",
          "[Removed Lines]",
          "7658:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "7658:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "7694:         return DEFAULT;",
          "7695:     }",
          "7698: }",
          "7700: bool SrsConfig::get_raw_api()",
          "",
          "[Removed Lines]",
          "7697:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "7697:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 81 ---",
          "[Context before]",
          "7718:         return DEFAULT;",
          "7719:     }",
          "7722: }",
          "7724: bool SrsConfig::get_raw_api_allow_reload()",
          "",
          "[Removed Lines]",
          "7721:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "7721:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 82 ---",
          "[Context before]",
          "7742:         return DEFAULT;",
          "7743:     }",
          "7746: }",
          "7748: bool SrsConfig::get_raw_api_allow_query()",
          "",
          "[Removed Lines]",
          "7745:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "7745:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 83 ---",
          "[Context before]",
          "7778:         return DEFAULT;",
          "7779:     }",
          "7782: }",
          "7784: std::string SrsConfig::get_http_api_auth_username()",
          "",
          "[Removed Lines]",
          "7781:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "7781:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 84 ---",
          "[Context before]",
          "7855:         return DEFAULT;",
          "7856:     }",
          "7859: }",
          "7861: string SrsConfig::get_https_api_listen()",
          "",
          "[Removed Lines]",
          "7858:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "7858:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 85 ---",
          "[Context before]",
          "7936:         return DEFAULT;",
          "7937:     }",
          "7940: }",
          "7942: unsigned short SrsConfig::get_srt_listen_port()",
          "",
          "[Removed Lines]",
          "7939:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "7939:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 86 ---",
          "[Context before]",
          "8004:     if (!conf || conf->arg0().empty()) {",
          "8005:         return DEFAULT;",
          "8006:     }",
          "8008: }",
          "8010: int SrsConfig::get_srto_latency()",
          "",
          "[Removed Lines]",
          "8007:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "8007:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 87 ---",
          "[Context before]",
          "8072:     if (!conf || conf->arg0().empty()) {",
          "8073:         return DEFAULT;",
          "8074:     }",
          "8076: }",
          "8078: bool SrsConfig::get_srto_tlpktdrop()",
          "",
          "[Removed Lines]",
          "8075:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "8075:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 88 ---",
          "[Context before]",
          "8089:     if (!conf || conf->arg0().empty()) {",
          "8090:         return DEFAULT;",
          "8091:     }",
          "8093: }",
          "8095: srs_utime_t SrsConfig::get_srto_conntimeout()",
          "",
          "[Removed Lines]",
          "8092:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "8092:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 89 ---",
          "[Context before]",
          "8251:         return DEFAULT;",
          "8252:     }",
          "8255: }",
          "8257: bool SrsConfig::get_srt_to_rtmp(std::string vhost)",
          "",
          "[Removed Lines]",
          "8254:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "8254:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 90 ---",
          "[Context before]",
          "8271:         return DEFAULT;",
          "8272:     }",
          "8275: }",
          "8277: bool SrsConfig::get_http_stream_enabled()",
          "",
          "[Removed Lines]",
          "8274:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "8274:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 91 ---",
          "[Context before]",
          "8295:         return DEFAULT;",
          "8296:     }",
          "8299: }",
          "8301: string SrsConfig::get_http_stream_listen()",
          "",
          "[Removed Lines]",
          "8298:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "8298:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 92 ---",
          "[Context before]",
          "8352:         return DEFAULT;",
          "8353:     }",
          "8356: }",
          "8358: SrsConfDirective* SrsConfig::get_https_stream()",
          "",
          "[Removed Lines]",
          "8355:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "8355:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 93 ---",
          "[Context before]",
          "8381:         return DEFAULT;",
          "8382:     }",
          "8385: }",
          "8387: string SrsConfig::get_https_stream_listen()",
          "",
          "[Removed Lines]",
          "8384:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "8384:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 94 ---",
          "[Context before]",
          "8462:         return DEFAULT;",
          "8463:     }",
          "8466: }",
          "8468: string SrsConfig::get_vhost_http_mount(string vhost)",
          "",
          "[Removed Lines]",
          "8465:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "8465:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 95 ---",
          "[Context before]",
          "8543:         return DEFAULT;",
          "8544:     }",
          "8547: }",
          "8549: srs_utime_t SrsConfig::get_vhost_http_remux_fast_cache(string vhost)",
          "",
          "[Removed Lines]",
          "8546:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "8546:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 96 ---",
          "[Context before]",
          "8591:         return DEFAULT;",
          "8592:     }",
          "8595: }",
          "8597: bool SrsConfig::get_vhost_http_remux_has_audio(string vhost)",
          "",
          "[Removed Lines]",
          "8594:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "8594:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 97 ---",
          "[Context before]",
          "8615:         return DEFAULT;",
          "8616:     }",
          "8619: }",
          "8621: bool SrsConfig::get_vhost_http_remux_has_video(string vhost)",
          "",
          "[Removed Lines]",
          "8618:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "8618:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 98 ---",
          "[Context before]",
          "8639:         return DEFAULT;",
          "8640:     }",
          "8643: }",
          "8645: bool SrsConfig::get_vhost_http_remux_guess_has_av(string vhost)",
          "",
          "[Removed Lines]",
          "8642:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "8642:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 99 ---",
          "[Context before]",
          "8663:         return DEFAULT;",
          "8664:     }",
          "8667: }",
          "8669: string SrsConfig::get_vhost_http_remux_mount(string vhost)",
          "",
          "[Removed Lines]",
          "8666:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "8666:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 100 ---",
          "[Context before]",
          "8711:         return DEFAULT;",
          "8712:     }",
          "8715: }",
          "8717: srs_utime_t SrsConfig::get_heartbeat_interval()",
          "",
          "[Removed Lines]",
          "8714:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "8714:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 101 ---",
          "[Context before]",
          "8787:         return DEFAULT;",
          "8788:     }",
          "8791: }",
          "8793: SrsConfDirective* SrsConfig::get_stats()",
          "",
          "[Removed Lines]",
          "8790:     return SRS_CONF_PERFER_FALSE(conf->arg0());",
          "",
          "[Added Lines]",
          "8790:     return SRS_CONF_PREFER_FALSE(conf->arg0());",
          "",
          "---------------",
          "--- Hunk 102 ---",
          "[Context before]",
          "8809:         return DEFAULT;",
          "8810:     }",
          "8813: }",
          "8815: int SrsConfig::get_stats_network()",
          "",
          "[Removed Lines]",
          "8812:     return SRS_CONF_PERFER_TRUE(conf->arg0());",
          "",
          "[Added Lines]",
          "8812:     return SRS_CONF_PREFER_TRUE(conf->arg0());",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_rtc_source.cpp||trunk/src/app/srs_app_rtc_source.cpp": [
          "File: trunk/src/app/srs_app_rtc_source.cpp -> trunk/src/app/srs_app_rtc_source.cpp"
        ],
        "trunk/src/app/srs_app_source.cpp||trunk/src/app/srs_app_source.cpp": [
          "File: trunk/src/app/srs_app_source.cpp -> trunk/src/app/srs_app_source.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "2533:         o.header.timestamp_delta = timestamp;",
          "2534:         o.header.timestamp = timestamp;",
          "2535:         o.header.stream_id = stream_id;",
          "2538:         if (data_size > 0) {",
          "2539:             o.size = data_size;",
          "",
          "[Removed Lines]",
          "2536:         o.header.perfer_cid = msg->header.perfer_cid;",
          "",
          "[Added Lines]",
          "2536:         o.header.prefer_cid = msg->header.prefer_cid;",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    132",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    133",
          "",
          "---------------"
        ],
        "trunk/src/kernel/srs_kernel_flv.cpp||trunk/src/kernel/srs_kernel_flv.cpp": [
          "File: trunk/src/kernel/srs_kernel_flv.cpp -> trunk/src/kernel/srs_kernel_flv.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     timestamp = 0;",
          "41: }",
          "43: SrsMessageHeader::~SrsMessageHeader()",
          "",
          "[Removed Lines]",
          "40:     perfer_cid = RTMP_CID_OverConnection;",
          "",
          "[Added Lines]",
          "40:     prefer_cid = RTMP_CID_OverConnection;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "113:     stream_id = (int32_t)stream;",
          "117: }",
          "119: void SrsMessageHeader::initialize_audio(int size, uint32_t time, int stream)",
          "",
          "[Removed Lines]",
          "116:     perfer_cid = RTMP_CID_OverConnection2;",
          "",
          "[Added Lines]",
          "116:     prefer_cid = RTMP_CID_OverConnection2;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "125:     stream_id = (int32_t)stream;",
          "129: }",
          "131: void SrsMessageHeader::initialize_video(int size, uint32_t time, int stream)",
          "",
          "[Removed Lines]",
          "128:     perfer_cid = RTMP_CID_Audio;",
          "",
          "[Added Lines]",
          "128:     prefer_cid = RTMP_CID_Audio;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "137:     stream_id = (int32_t)stream;",
          "141: }",
          "143: SrsCommonMessage::SrsCommonMessage()",
          "",
          "[Removed Lines]",
          "140:     perfer_cid = RTMP_CID_Video;",
          "",
          "[Added Lines]",
          "140:     prefer_cid = RTMP_CID_Video;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "175: {",
          "176:     payload_length = 0;",
          "177:     message_type = 0;",
          "179: }",
          "181: SrsSharedMessageHeader::~SrsSharedMessageHeader()",
          "",
          "[Removed Lines]",
          "178:     perfer_cid = 0;",
          "",
          "[Added Lines]",
          "178:     prefer_cid = 0;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "244:     if (pheader) {",
          "245:         ptr->header.message_type = pheader->message_type;",
          "246:         ptr->header.payload_length = size;",
          "248:         this->timestamp = pheader->timestamp;",
          "249:         this->stream_id = pheader->stream_id;",
          "250:     }",
          "",
          "[Removed Lines]",
          "247:         ptr->header.perfer_cid = pheader->perfer_cid;",
          "",
          "[Added Lines]",
          "247:         ptr->header.prefer_cid = pheader->prefer_cid;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "290:     }",
          "",
          "[Removed Lines]",
          "287:     if (ptr->header.perfer_cid < 2 || ptr->header.perfer_cid > 63) {",
          "288:         srs_info(\"change the chunk_id=%d to default=%d\", ptr->header.perfer_cid, RTMP_CID_ProtocolControl);",
          "289:         ptr->header.perfer_cid = RTMP_CID_ProtocolControl;",
          "",
          "[Added Lines]",
          "287:     if (ptr->header.prefer_cid < 2 || ptr->header.prefer_cid > 63) {",
          "288:         srs_info(\"change the chunk_id=%d to default=%d\", ptr->header.prefer_cid, RTMP_CID_ProtocolControl);",
          "289:         ptr->header.prefer_cid = RTMP_CID_ProtocolControl;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "317: int SrsSharedPtrMessage::chunk_header(char* cache, int nb_cache, bool c0)",
          "318: {",
          "319:     if (c0) {",
          "321:             ptr->header.payload_length, ptr->header.message_type, stream_id, cache, nb_cache);",
          "322:     } else {",
          "324:             cache, nb_cache);",
          "325:     }",
          "326: }",
          "",
          "[Removed Lines]",
          "320:         return srs_chunk_header_c0(ptr->header.perfer_cid, (uint32_t)timestamp,",
          "323:         return srs_chunk_header_c3(ptr->header.perfer_cid, (uint32_t)timestamp,",
          "",
          "[Added Lines]",
          "320:         return srs_chunk_header_c0(ptr->header.prefer_cid, (uint32_t)timestamp,",
          "323:         return srs_chunk_header_c3(ptr->header.prefer_cid, (uint32_t)timestamp,",
          "",
          "---------------"
        ],
        "trunk/src/kernel/srs_kernel_flv.hpp||trunk/src/kernel/srs_kernel_flv.hpp": [
          "File: trunk/src/kernel/srs_kernel_flv.hpp -> trunk/src/kernel/srs_kernel_flv.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "154:     int64_t timestamp;",
          "155: public:",
          "160: public:",
          "161:     SrsMessageHeader();",
          "162:     virtual ~SrsMessageHeader();",
          "",
          "[Removed Lines]",
          "159:     int perfer_cid;",
          "",
          "[Added Lines]",
          "159:     int prefer_cid;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "232:     int8_t message_type;",
          "237: public:",
          "238:     SrsSharedMessageHeader();",
          "239:     virtual ~SrsSharedMessageHeader();",
          "",
          "[Removed Lines]",
          "236:     int perfer_cid;",
          "",
          "[Added Lines]",
          "236:     int prefer_cid;",
          "",
          "---------------"
        ],
        "trunk/src/kernel/srs_kernel_utility.cpp||trunk/src/kernel/srs_kernel_utility.cpp": [
          "File: trunk/src/kernel/srs_kernel_utility.cpp -> trunk/src/kernel/srs_kernel_utility.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1180:     return size / 2;",
          "1181: }",
          "1184: {",
          "1186:     char* pp = NULL;",
          "",
          "[Removed Lines]",
          "1183: int srs_chunk_header_c0(int perfer_cid, uint32_t timestamp, int32_t payload_length, int8_t message_type, int32_t stream_id, char* cache, int nb_cache)",
          "",
          "[Added Lines]",
          "1183: int srs_chunk_header_c0(int prefer_cid, uint32_t timestamp, int32_t payload_length, int8_t message_type, int32_t stream_id, char* cache, int nb_cache)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1255:     return (int)(p - cache);",
          "1256: }",
          "1259: {",
          "1261:     char* pp = NULL;",
          "",
          "[Removed Lines]",
          "1258: int srs_chunk_header_c3(int perfer_cid, uint32_t timestamp, char* cache, int nb_cache)",
          "",
          "[Added Lines]",
          "1258: int srs_chunk_header_c3(int prefer_cid, uint32_t timestamp, char* cache, int nb_cache)",
          "",
          "---------------"
        ],
        "trunk/src/kernel/srs_kernel_utility.hpp||trunk/src/kernel/srs_kernel_utility.hpp": [
          "File: trunk/src/kernel/srs_kernel_utility.hpp -> trunk/src/kernel/srs_kernel_utility.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "163: #include <sys/time.h>",
          "",
          "[Removed Lines]",
          "154: extern int srs_chunk_header_c0(int perfer_cid, uint32_t timestamp, int32_t payload_length, int8_t message_type, int32_t stream_id, char* cache, int nb_cache);",
          "160: extern int srs_chunk_header_c3(int perfer_cid, uint32_t timestamp, char* cache, int nb_cache);",
          "",
          "[Added Lines]",
          "154: extern int srs_chunk_header_c0(int prefer_cid, uint32_t timestamp, int32_t payload_length, int8_t message_type, int32_t stream_id, char* cache, int nb_cache);",
          "160: extern int srs_chunk_header_c3(int prefer_cid, uint32_t timestamp, char* cache, int nb_cache);",
          "",
          "---------------"
        ],
        "trunk/src/protocol/srs_protocol_rtmp_stack.cpp||trunk/src/protocol/srs_protocol_rtmp_stack.cpp": [
          "File: trunk/src/protocol/srs_protocol_rtmp_stack.cpp -> trunk/src/protocol/srs_protocol_rtmp_stack.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "110:     header.payload_length = size;",
          "111:     header.message_type = get_message_type();",
          "112:     header.stream_id = stream_id;",
          "115:     if ((err = msg->create(&header, payload, size)) != srs_success) {",
          "116:         return srs_error_wrap(err, \"create %dB message\", size);",
          "",
          "[Removed Lines]",
          "113:     header.perfer_cid = get_prefer_cid();",
          "",
          "[Added Lines]",
          "113:     header.prefer_cid = get_prefer_cid();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "200:     }",
          "201:     for (int cid = 0; cid < SRS_PERF_CHUNK_STREAM_CACHE; cid++) {",
          "202:         SrsChunkStream* cs = new SrsChunkStream(cid);",
          "207:         cs_cache[cid] = cs;",
          "208:     }",
          "",
          "[Removed Lines]",
          "205:         cs->header.perfer_cid = cid;",
          "",
          "[Added Lines]",
          "205:         cs->header.prefer_cid = cid;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "813:         if (chunk_streams.find(cid) == chunk_streams.end()) {",
          "814:             chunk = chunk_streams[cid] = new SrsChunkStream(cid);",
          "818:         } else {",
          "819:             chunk = chunk_streams[cid];",
          "820:         }",
          "",
          "[Removed Lines]",
          "817:             chunk->header.perfer_cid = cid;",
          "",
          "[Added Lines]",
          "817:             chunk->header.prefer_cid = cid;",
          "",
          "---------------"
        ],
        "trunk/src/protocol/srs_protocol_rtmp_stack.hpp||trunk/src/protocol/srs_protocol_rtmp_stack.hpp": [
          "File: trunk/src/protocol/srs_protocol_rtmp_stack.hpp -> trunk/src/protocol/srs_protocol_rtmp_stack.hpp"
        ],
        "trunk/src/utest/srs_utest_kernel.cpp||trunk/src/utest/srs_utest_kernel.cpp": [
          "File: trunk/src/utest/srs_utest_kernel.cpp -> trunk/src/utest/srs_utest_kernel.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "4868:  if (true) {",
          "4869:   SrsMessageHeader h;",
          "4872:   SrsSharedPtrMessage m;",
          "4873:   HELPER_EXPECT_SUCCESS(m.create(&h, NULL, 0));",
          "",
          "[Removed Lines]",
          "4870:   h.perfer_cid = 1;",
          "",
          "[Added Lines]",
          "4870:   h.prefer_cid = 1;",
          "",
          "---------------"
        ],
        "trunk/src/utest/srs_utest_protocol.cpp||trunk/src/utest/srs_utest_protocol.cpp": [
          "File: trunk/src/utest/srs_utest_protocol.cpp -> trunk/src/utest/srs_utest_protocol.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "2097:     SrsAutoFree(SrsCommonMessage, msg);",
          "2098:     EXPECT_TRUE(msg->header.is_video());",
          "2101: }",
          "",
          "[Removed Lines]",
          "2100:     EXPECT_EQ(0x09, msg->header.perfer_cid);",
          "",
          "[Added Lines]",
          "2100:     EXPECT_EQ(0x09, msg->header.prefer_cid);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2150:     SrsAutoFree(SrsCommonMessage, msg);",
          "2151:     EXPECT_TRUE(msg->header.is_video());",
          "2154: }",
          "",
          "[Removed Lines]",
          "2153:     EXPECT_EQ(0x3F, msg->header.perfer_cid);",
          "",
          "[Added Lines]",
          "2153:     EXPECT_EQ(0x3F, msg->header.prefer_cid);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2203:     SrsAutoFree(SrsCommonMessage, msg);",
          "2204:     EXPECT_TRUE(msg->header.is_video());",
          "2207: }",
          "",
          "[Removed Lines]",
          "2206:     EXPECT_EQ(64, msg->header.perfer_cid);",
          "",
          "[Added Lines]",
          "2206:     EXPECT_EQ(64, msg->header.prefer_cid);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2256:     SrsAutoFree(SrsCommonMessage, msg);",
          "2257:     EXPECT_TRUE(msg->header.is_video());",
          "2260: }",
          "",
          "[Removed Lines]",
          "2259:     EXPECT_EQ(0x10+64, msg->header.perfer_cid);",
          "",
          "[Added Lines]",
          "2259:     EXPECT_EQ(0x10+64, msg->header.prefer_cid);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2309:     SrsAutoFree(SrsCommonMessage, msg);",
          "2310:     EXPECT_TRUE(msg->header.is_video());",
          "2313: }",
          "",
          "[Removed Lines]",
          "2312:     EXPECT_EQ(0x11+64, msg->header.perfer_cid);",
          "",
          "[Added Lines]",
          "2312:     EXPECT_EQ(0x11+64, msg->header.prefer_cid);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2362:     SrsAutoFree(SrsCommonMessage, msg);",
          "2363:     EXPECT_TRUE(msg->header.is_video());",
          "2366: }",
          "",
          "[Removed Lines]",
          "2365:     EXPECT_EQ(319, msg->header.perfer_cid);",
          "",
          "[Added Lines]",
          "2365:     EXPECT_EQ(319, msg->header.prefer_cid);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2415:     SrsAutoFree(SrsCommonMessage, msg);",
          "2416:     EXPECT_TRUE(msg->header.is_video());",
          "2419: }",
          "",
          "[Removed Lines]",
          "2418:     EXPECT_EQ(64, msg->header.perfer_cid);",
          "",
          "[Added Lines]",
          "2418:     EXPECT_EQ(64, msg->header.prefer_cid);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2468:     SrsAutoFree(SrsCommonMessage, msg);",
          "2469:     EXPECT_TRUE(msg->header.is_video());",
          "2472: }",
          "",
          "[Removed Lines]",
          "2471:     EXPECT_EQ(0x10*256+64, msg->header.perfer_cid);",
          "",
          "[Added Lines]",
          "2471:     EXPECT_EQ(0x10*256+64, msg->header.prefer_cid);",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2521:     SrsAutoFree(SrsCommonMessage, msg);",
          "2522:     EXPECT_TRUE(msg->header.is_video());",
          "2525: }",
          "",
          "[Removed Lines]",
          "2524:     EXPECT_EQ(0x01 + (0x10*256) + 64, msg->header.perfer_cid);",
          "",
          "[Added Lines]",
          "2524:     EXPECT_EQ(0x01 + (0x10*256) + 64, msg->header.prefer_cid);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2574:     SrsAutoFree(SrsCommonMessage, msg);",
          "2575:     EXPECT_TRUE(msg->header.is_video());",
          "2578: }",
          "",
          "[Removed Lines]",
          "2577:     EXPECT_EQ(0xFF + (0x10*256) + 64, msg->header.perfer_cid);",
          "",
          "[Added Lines]",
          "2577:     EXPECT_EQ(0xFF + (0x10*256) + 64, msg->header.prefer_cid);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2627:     SrsAutoFree(SrsCommonMessage, msg);",
          "2628:     EXPECT_TRUE(msg->header.is_video());",
          "2631: }",
          "",
          "[Removed Lines]",
          "2630:     EXPECT_EQ(0x02 + (0x10*256) + 64, msg->header.perfer_cid);",
          "",
          "[Added Lines]",
          "2630:     EXPECT_EQ(0x02 + (0x10*256) + 64, msg->header.prefer_cid);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2680:     SrsAutoFree(SrsCommonMessage, msg);",
          "2681:     EXPECT_TRUE(msg->header.is_video());",
          "2684: }",
          "",
          "[Removed Lines]",
          "2683:     EXPECT_EQ(65599, msg->header.perfer_cid);",
          "",
          "[Added Lines]",
          "2683:     EXPECT_EQ(65599, msg->header.prefer_cid);",
          "",
          "---------------"
        ],
        "trunk/src/utest/srs_utest_protocol2.cpp||trunk/src/utest/srs_utest_protocol2.cpp": [
          "File: trunk/src/utest/srs_utest_protocol2.cpp -> trunk/src/utest/srs_utest_protocol2.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1228:     SrsAutoFree(SrsCommonMessage, msg);",
          "1229:     EXPECT_TRUE(msg->header.is_video());",
          "1232: }",
          "1234: VOID TEST(ProtocolKbpsTest, Connections)",
          "",
          "[Removed Lines]",
          "1231:     EXPECT_EQ(0x02, msg->header.perfer_cid);",
          "",
          "[Added Lines]",
          "1231:     EXPECT_EQ(0x02, msg->header.prefer_cid);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b05f7b4452a9914c9a28cb1586d0c56db16d2368",
      "candidate_info": {
        "commit_hash": "b05f7b4452a9914c9a28cb1586d0c56db16d2368",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/b05f7b4452a9914c9a28cb1586d0c56db16d2368",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/main/srs_main_mp4_parser.cpp"
        ],
        "message": "Build: Fix srs_mp4_parser compiling error. v6.0.150 (#4156)\n\n`SrsAutoFree` moved to `srs_core_deprecated.hpp`.\n\n---------\n\nCo-authored-by: winlin <winlinvip@gmail.com>",
        "before_after_code_files": [
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/main/srs_main_mp4_parser.cpp||trunk/src/main/srs_main_mp4_parser.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    149",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    150",
          "",
          "---------------"
        ],
        "trunk/src/main/srs_main_mp4_parser.cpp||trunk/src/main/srs_main_mp4_parser.cpp": [
          "File: trunk/src/main/srs_main_mp4_parser.cpp -> trunk/src/main/srs_main_mp4_parser.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: #include <srs_core_autofree.hpp>",
          "15: #include <srs_app_config.hpp>",
          "16: #include <srs_protocol_kbps.hpp>",
          "18: #include <stdio.h>",
          "19: #include <stdlib.h>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: #include <srs_core_deprecated.hpp>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1d98b98303e3c92eb1f33beebf4e9154a54e4ed",
      "candidate_info": {
        "commit_hash": "f1d98b98303e3c92eb1f33beebf4e9154a54e4ed",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/f1d98b98303e3c92eb1f33beebf4e9154a54e4ed",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_http_conn.cpp",
          "trunk/src/app/srs_app_http_conn.hpp",
          "trunk/src/app/srs_app_server.cpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "HTTPS: Support config key/cert for HTTPS API. v6.0.137 (#4028)\n\nCo-authored-by: winlin <winlinvip@gmail.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_http_conn.cpp||trunk/src/app/srs_app_http_conn.cpp",
          "trunk/src/app/srs_app_http_conn.hpp||trunk/src/app/srs_app_http_conn.hpp",
          "trunk/src/app/srs_app_server.cpp||trunk/src/app/srs_app_server.cpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_http_conn.cpp||trunk/src/app/srs_app_http_conn.cpp": [
          "File: trunk/src/app/srs_app_http_conn.cpp -> trunk/src/app/srs_app_http_conn.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "300:     trd->interrupt();",
          "301: }",
          "304: {",
          "306:     _srs_context->set_id(_srs_context->generate_id());",
          "313:         ssl = new SrsSslConnection(io_);",
          "314:         conn = new SrsHttpConn(this, ssl, m, cip, port);",
          "315:     } else {",
          "",
          "[Removed Lines]",
          "303: SrsHttpxConn::SrsHttpxConn(bool https, ISrsResourceManager* cm, ISrsProtocolReadWriter* io, ISrsHttpServeMux* m, string cip, int port)",
          "308:     io_ = io;",
          "309:     manager = cm;",
          "310:     enable_stat_ = false;",
          "312:     if (https) {",
          "",
          "[Added Lines]",
          "303: SrsHttpxConn::SrsHttpxConn(ISrsResourceManager* cm, ISrsProtocolReadWriter* io, ISrsHttpServeMux* m, string cip, int port, string key, string cert) : manager(cm), io_(io), enable_stat_(false), ssl_key_file_(key), ssl_cert_file_(cert)",
          "308:     if (!ssl_key_file_.empty() &&",
          "309:         !ssl_cert_file_.empty()) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "382:     if (ssl)  {",
          "383:         srs_utime_t starttime = srs_update_system_time();",
          "387:             return srs_error_wrap(err, \"handshake\");",
          "388:         }",
          "390:         int cost = srsu2msi(srs_update_system_time() - starttime);",
          "391:         srs_trace(\"https: stream server done, use key %s and cert %s, cost=%dms\",",
          "393:     }",
          "395:     return err;",
          "",
          "[Removed Lines]",
          "384:         string crt_file = _srs_config->get_https_stream_ssl_cert();",
          "385:         string key_file = _srs_config->get_https_stream_ssl_key();",
          "386:         if ((err = ssl->handshake(key_file, crt_file)) != srs_success) {",
          "392:             key_file.c_str(), crt_file.c_str(), cost);",
          "",
          "[Added Lines]",
          "381:         if ((err = ssl->handshake(ssl_key_file_, ssl_cert_file_)) != srs_success) {",
          "387:             ssl_key_file_.c_str(), ssl_cert_file_.c_str(), cost);",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_http_conn.hpp||trunk/src/app/srs_app_http_conn.hpp": [
          "File: trunk/src/app/srs_app_http_conn.hpp -> trunk/src/app/srs_app_http_conn.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:     SrsHttpConn* conn;",
          "138:     bool enable_stat_;",
          "139: public:",
          "141:     virtual ~SrsHttpxConn();",
          "142: public:",
          "",
          "[Removed Lines]",
          "140:     SrsHttpxConn(bool https, ISrsResourceManager* cm, ISrsProtocolReadWriter* io, ISrsHttpServeMux* m, std::string cip, int port);",
          "",
          "[Added Lines]",
          "140:     const std::string ssl_key_file_;",
          "141:     const std::string ssl_cert_file_;",
          "144:     SrsHttpxConn(ISrsResourceManager* cm, ISrsProtocolReadWriter* io, ISrsHttpServeMux* m, std::string cip, int port, std::string key, std::string cert);",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_server.cpp||trunk/src/app/srs_app_server.cpp": [
          "File: trunk/src/app/srs_app_server.cpp -> trunk/src/app/srs_app_server.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1207:         ) {",
          "1208:             resource = new SrsRtcTcpConn(io, ip, port);",
          "1209:         } else {",
          "1211:         }",
          "1212:     }",
          "1213: #endif",
          "",
          "[Removed Lines]",
          "1210:             resource = new SrsHttpxConn(listener == http_listener_, this, io, http_server, ip, port);",
          "",
          "[Added Lines]",
          "1210:             string key = listener == https_listener_ ? _srs_config->get_https_stream_ssl_key() : \"\";",
          "1211:             string cert = listener == https_listener_ ? _srs_config->get_https_stream_ssl_cert() : \"\";",
          "1212:             resource = new SrsHttpxConn(this, io, http_server, ip, port, key, cert);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1217:         if (listener == rtmp_listener_) {",
          "1218:             resource = new SrsRtmpConn(this, stfd2, ip, port);",
          "1219:         } else if (listener == api_listener_ || listener == apis_listener_) {",
          "1222:         } else if (listener == http_listener_ || listener == https_listener_) {",
          "1225: #ifdef SRS_RTC",
          "1226:         } else if (listener == webrtc_listener_) {",
          "1227:             resource = new SrsRtcTcpConn(new SrsTcpConnection(stfd2), ip, port);",
          "1228: #endif",
          "1229:         } else if (listener == exporter_listener_) {",
          "1233:         } else {",
          "1234:             srs_close_stfd(stfd2);",
          "1235:             srs_warn(\"Close for invalid fd=%d, ip=%s:%d\", fd, ip.c_str(), port);",
          "",
          "[Removed Lines]",
          "1220:             bool is_https = listener == apis_listener_;",
          "1221:             resource = new SrsHttpxConn(is_https, this, new SrsTcpConnection(stfd2), http_api_mux, ip, port);",
          "1223:             bool is_https = listener == https_listener_;",
          "1224:             resource = new SrsHttpxConn(is_https, this, new SrsTcpConnection(stfd2), http_server, ip, port);",
          "1231:             bool is_https = false;",
          "1232:             resource = new SrsHttpxConn(is_https, this, new SrsTcpConnection(stfd2), http_api_mux, ip, port);",
          "",
          "[Added Lines]",
          "1222:             string key = listener == apis_listener_ ? _srs_config->get_https_api_ssl_key() : \"\";",
          "1223:             string cert = listener == apis_listener_ ? _srs_config->get_https_api_ssl_cert() : \"\";",
          "1224:             resource = new SrsHttpxConn(this, new SrsTcpConnection(stfd2), http_api_mux, ip, port, key, cert);",
          "1226:             string key = listener == https_listener_ ? _srs_config->get_https_stream_ssl_key() : \"\";",
          "1227:             string cert = listener == https_listener_ ? _srs_config->get_https_stream_ssl_cert() : \"\";",
          "1228:             resource = new SrsHttpxConn(this, new SrsTcpConnection(stfd2), http_server, ip, port, key, cert);",
          "1235:             resource = new SrsHttpxConn(this, new SrsTcpConnection(stfd2), http_api_mux, ip, port, \"\", \"\");",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    136",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    137",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3e1a4e443907c006f801537e59b531566be0d96d",
      "candidate_info": {
        "commit_hash": "3e1a4e443907c006f801537e59b531566be0d96d",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/3e1a4e443907c006f801537e59b531566be0d96d",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/research/console/en_index.html",
          "trunk/research/console/ng_index.html",
          "trunk/research/players/rtc_player.html",
          "trunk/research/players/rtc_publisher.html",
          "trunk/research/players/srs_bwt.html",
          "trunk/research/players/srs_chat.html",
          "trunk/research/players/srs_gb28181.html",
          "trunk/research/players/srs_player.html",
          "trunk/research/players/srs_player_deprecated.html",
          "trunk/research/players/srs_publisher.html",
          "trunk/research/players/srs_publisher_flash.html",
          "trunk/research/players/vlc.html",
          "trunk/research/players/whep.html",
          "trunk/research/players/whip.html",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "Player: Fix empty img tag occupy 20px size in safari. v6.0.142 (#4029)\n\nthe html img tag occupy 20px size in safari. \n\nhttps://github.com/ossrs/srs/blob/427104f1dab86f5afc7d7b49b02ed27d03ef9346/trunk/research/players/rtc_player.html#L19\n\n> <img width=\"1011\" alt=\"Screenshot 2024-04-17 at 9 17 07\u202fAM\"\nsrc=\"https://github.com/ossrs/srs/assets/2757043/79a4edf8-5bbf-4300-8817-039088f13283\">\n\n\n(ignore the img css warning: `auto\\9;` it's another problem, I will file\nanother PR.)\n\nbut, the empty img tag just occupy 1px size in chrome. So I guess it's a\nhtml compatible problem.\n\n> <img width=\"608\" alt=\"Screenshot 2024-04-17 at 9 46 33\u202fAM\"\nsrc=\"https://github.com/ossrs/srs/assets/2757043/40cb2eb6-3a6d-4bb7-9b17-51c5fd6d2272\">\n\n---------\n\n`TRANS_BY_GPT4`\n\n---------\n\nCo-authored-by: winlin <winlinvip@gmail.com>",
        "before_after_code_files": [
          "trunk/research/console/en_index.html||trunk/research/console/en_index.html",
          "trunk/research/console/ng_index.html||trunk/research/console/ng_index.html",
          "trunk/research/players/rtc_player.html||trunk/research/players/rtc_player.html",
          "trunk/research/players/rtc_publisher.html||trunk/research/players/rtc_publisher.html",
          "trunk/research/players/srs_bwt.html||trunk/research/players/srs_bwt.html",
          "trunk/research/players/srs_chat.html||trunk/research/players/srs_chat.html",
          "trunk/research/players/srs_gb28181.html||trunk/research/players/srs_gb28181.html",
          "trunk/research/players/srs_player.html||trunk/research/players/srs_player.html",
          "trunk/research/players/srs_player_deprecated.html||trunk/research/players/srs_player_deprecated.html",
          "trunk/research/players/srs_publisher.html||trunk/research/players/srs_publisher.html",
          "trunk/research/players/srs_publisher_flash.html||trunk/research/players/srs_publisher_flash.html",
          "trunk/research/players/vlc.html||trunk/research/players/vlc.html",
          "trunk/research/players/whep.html||trunk/research/players/whep.html",
          "trunk/research/players/whip.html||trunk/research/players/whip.html",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/research/console/en_index.html||trunk/research/console/en_index.html": [
          "File: trunk/research/console/en_index.html -> trunk/research/console/en_index.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:     <script type=\"text/javascript\" src=\"js/srs.console.js\"></script>",
          "21: </head>",
          "22: <body ng-controller=\"CSCMain\">",
          "24:     <div class=\"navbar navbar-inverse navbar-fixed-top\">",
          "25:         <div class=\"navbar-inner\">",
          "26:             <div class=\"container\">",
          "",
          "[Removed Lines]",
          "23: <img src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/console/enindex'/>",
          "",
          "[Added Lines]",
          "23: <img style=\"width: 0px; height: 0px;\" src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/console/enindex'/>",
          "",
          "---------------"
        ],
        "trunk/research/console/ng_index.html||trunk/research/console/ng_index.html": [
          "File: trunk/research/console/ng_index.html -> trunk/research/console/ng_index.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:     <script type=\"text/javascript\" src=\"js/srs.console.js\"></script>",
          "21: </head>",
          "22: <body ng-controller=\"CSCMain\">",
          "24:     <div class=\"navbar navbar-inverse navbar-fixed-top\">",
          "25:         <div class=\"navbar-inner\">",
          "26:             <div class=\"container\">",
          "",
          "[Removed Lines]",
          "23: <img src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/console/cnindex'/>",
          "",
          "[Added Lines]",
          "23: <img style=\"width: 0px; height: 0px;\" src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/console/cnindex'/>",
          "",
          "---------------"
        ],
        "trunk/research/players/rtc_player.html||trunk/research/players/rtc_player.html": [
          "File: trunk/research/players/rtc_player.html -> trunk/research/players/rtc_player.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:     <script type=\"text/javascript\" src=\"js/srs.page.js\"></script>",
          "17: </head>",
          "18: <body>",
          "20: <div class=\"navbar navbar-fixed-top\">",
          "21:     <div class=\"navbar-inner\">",
          "22:         <div class=\"container\">",
          "",
          "[Removed Lines]",
          "19: <img src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/rtcplayer'/>",
          "",
          "[Added Lines]",
          "19: <img style=\"width: 0px; height: 0px;\" src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/rtcplayer'/>",
          "",
          "---------------"
        ],
        "trunk/research/players/rtc_publisher.html||trunk/research/players/rtc_publisher.html": [
          "File: trunk/research/players/rtc_publisher.html -> trunk/research/players/rtc_publisher.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:     <script type=\"text/javascript\" src=\"js/srs.page.js\"></script>",
          "17: </head>",
          "18: <body>",
          "20: <div class=\"navbar navbar-fixed-top\">",
          "21:     <div class=\"navbar-inner\">",
          "22:         <div class=\"container\">",
          "",
          "[Removed Lines]",
          "19: <img src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/rtcpublisher'/>",
          "",
          "[Added Lines]",
          "19: <img style=\"width: 0px; height: 0px;\" src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/rtcpublisher'/>",
          "",
          "---------------"
        ],
        "trunk/research/players/srs_bwt.html||trunk/research/players/srs_bwt.html": [
          "File: trunk/research/players/srs_bwt.html -> trunk/research/players/srs_bwt.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:     </style>",
          "16: </head>",
          "17: <body>",
          "19: <div class=\"navbar navbar-fixed-top\">",
          "20:     <div class=\"navbar-inner\">",
          "21:         <div class=\"container\">",
          "",
          "[Removed Lines]",
          "18: <img src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/bwt'/>",
          "",
          "[Added Lines]",
          "18: <img style=\"width: 0px; height: 0px;\" src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/bwt'/>",
          "",
          "---------------"
        ],
        "trunk/research/players/srs_chat.html||trunk/research/players/srs_chat.html": [
          "File: trunk/research/players/srs_chat.html -> trunk/research/players/srs_chat.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:     </style>",
          "15: </head>",
          "16: <body>",
          "18: <div class=\"navbar navbar-fixed-top\">",
          "19:     <div class=\"navbar-inner\">",
          "20:         <div class=\"container\">",
          "",
          "[Removed Lines]",
          "17: <img src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/chat'/>",
          "",
          "[Added Lines]",
          "17: <img style=\"width: 0px; height: 0px;\" src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/chat'/>",
          "",
          "---------------"
        ],
        "trunk/research/players/srs_gb28181.html||trunk/research/players/srs_gb28181.html": [
          "File: trunk/research/players/srs_gb28181.html -> trunk/research/players/srs_gb28181.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:     </style>",
          "29: </head>",
          "30: <body>",
          "32: <div class=\"navbar navbar-fixed-top\">",
          "33:     <div class=\"navbar-inner\">",
          "34:         <div class=\"container\">",
          "",
          "[Removed Lines]",
          "31: <img src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/srsplayer'/>",
          "",
          "[Added Lines]",
          "31: <img style=\"width: 0px; height: 0px;\" src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/srsplayer'/>",
          "",
          "---------------"
        ],
        "trunk/research/players/srs_player.html||trunk/research/players/srs_player.html": [
          "File: trunk/research/players/srs_player.html -> trunk/research/players/srs_player.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:     </style>",
          "12: </head>",
          "13: <body>",
          "15: <div class=\"navbar navbar-fixed-top\">",
          "16:     <div class=\"navbar-inner\">",
          "17:         <div class=\"container\">",
          "",
          "[Removed Lines]",
          "14: <img src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/srsplayer'/>",
          "",
          "[Added Lines]",
          "14: <img style=\"width: 0px; height: 0px;\" src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/srsplayer'/>",
          "",
          "---------------"
        ],
        "trunk/research/players/srs_player_deprecated.html||trunk/research/players/srs_player_deprecated.html": [
          "File: trunk/research/players/srs_player_deprecated.html -> trunk/research/players/srs_player_deprecated.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:     </style>",
          "26: </head>",
          "27: <body>",
          "29: <div class=\"navbar navbar-fixed-top\">",
          "30:     <div class=\"navbar-inner\">",
          "31:         <div class=\"container\">",
          "",
          "[Removed Lines]",
          "28: <img src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/srsplayer'/>",
          "",
          "[Added Lines]",
          "28: <img style=\"width: 0px; height: 0px;\" src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/srsplayer'/>",
          "",
          "---------------"
        ],
        "trunk/research/players/srs_publisher.html||trunk/research/players/srs_publisher.html": [
          "File: trunk/research/players/srs_publisher.html -> trunk/research/players/srs_publisher.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:     </style>",
          "15: </head>",
          "16: <body>",
          "18: <div class=\"navbar navbar-fixed-top\">",
          "19:     <div class=\"navbar-inner\">",
          "20:         <div class=\"container\">",
          "",
          "[Removed Lines]",
          "17: <img src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/obs'/>",
          "",
          "[Added Lines]",
          "17: <img style=\"width: 0px; height: 0px;\" src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/obs'/>",
          "",
          "---------------"
        ],
        "trunk/research/players/srs_publisher_flash.html||trunk/research/players/srs_publisher_flash.html": [
          "File: trunk/research/players/srs_publisher_flash.html -> trunk/research/players/srs_publisher_flash.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:     </style>",
          "12: </head>",
          "13: <body>",
          "15: <div class=\"navbar navbar-fixed-top\">",
          "16:     <div class=\"navbar-inner\">",
          "17:         <div class=\"container\">",
          "",
          "[Removed Lines]",
          "14: <img src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/srspublisher'/>",
          "",
          "[Added Lines]",
          "14: <img style=\"width: 0px; height: 0px;\" src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/srspublisher'/>",
          "",
          "---------------"
        ],
        "trunk/research/players/vlc.html||trunk/research/players/vlc.html": [
          "File: trunk/research/players/vlc.html -> trunk/research/players/vlc.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:     </style>",
          "12: </head>",
          "13: <body>",
          "15: <div class=\"navbar navbar-fixed-top\">",
          "16:     <div class=\"navbar-inner\">",
          "17:         <div class=\"container\">",
          "",
          "[Removed Lines]",
          "14: <img src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/vlc'/>",
          "",
          "[Added Lines]",
          "14: <img style=\"width: 0px; height: 0px;\" src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/vlc'/>",
          "",
          "---------------"
        ],
        "trunk/research/players/whep.html||trunk/research/players/whep.html": [
          "File: trunk/research/players/whep.html -> trunk/research/players/whep.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:     <script type=\"text/javascript\" src=\"js/srs.page.js\"></script>",
          "17: </head>",
          "18: <body>",
          "20: <div class=\"navbar navbar-fixed-top\">",
          "21:     <div class=\"navbar-inner\">",
          "22:         <div class=\"container\">",
          "",
          "[Removed Lines]",
          "19: <img src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/rtcpublisher'/>",
          "",
          "[Added Lines]",
          "19: <img style=\"width: 0px; height: 0px;\" src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/rtcpublisher'/>",
          "",
          "---------------"
        ],
        "trunk/research/players/whip.html||trunk/research/players/whip.html": [
          "File: trunk/research/players/whip.html -> trunk/research/players/whip.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:     <script type=\"text/javascript\" src=\"js/srs.page.js\"></script>",
          "17: </head>",
          "18: <body>",
          "20: <div class=\"navbar navbar-fixed-top\">",
          "21:     <div class=\"navbar-inner\">",
          "22:         <div class=\"container\">",
          "",
          "[Removed Lines]",
          "19: <img src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/rtcpublisher'/>",
          "",
          "[Added Lines]",
          "19: <img style=\"width: 0px; height: 0px;\" src='//ossrs.net/gif/v1/sls.gif?site=ossrs.net&path=/player/rtcpublisher'/>",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    141",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    142",
          "",
          "---------------"
        ]
      }
    }
  ]
}