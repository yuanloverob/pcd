{
  "cve_id": "CVE-2017-12989",
  "cve_desc": "The RESP parser in tcpdump before 4.9.2 could enter an infinite loop due to a bug in print-resp.c:resp_get_length().",
  "repo": "the-tcpdump-group/tcpdump",
  "patch_hash": "db24063b01cba8e9d4d88b7d8ac70c9000c104e4",
  "patch_info": {
    "commit_hash": "db24063b01cba8e9d4d88b7d8ac70c9000c104e4",
    "repo": "the-tcpdump-group/tcpdump",
    "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/db24063b01cba8e9d4d88b7d8ac70c9000c104e4",
    "files": [
      "print-resp.c",
      "tests/TESTLIST",
      "tests/resp_4_infiniteloop.out",
      "tests/resp_4_infiniteloop.pcap"
    ],
    "message": "CVE-2017-12989/RESP: Make sure resp_get_length() advances the pointer for invalid lengths.\n\nMake sure that it always sends *endp before returning and that, for\ninvalid lengths where we don't like a character in the length string,\nwhat it sets *endp to is past the character in question, so we don't\nrun the risk of infinitely looping (or doing something else random) if a\ncharacter in the length is invalid.\n\nThis fixes an infinite loop discovered by Forcepoint's security\nresearchers Otto Airamo & Antti Levom\u00e4ki.\n\nAdd a test using the capture file supplied by the reporter(s).",
    "before_after_code_files": [
      "print-resp.c||print-resp.c"
    ]
  },
  "patch_diff": {
    "print-resp.c||print-resp.c": [
      "File: print-resp.c -> print-resp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "481:         ND_TCHECK(*bp);",
      "482:         c = *bp;",
      "483:         if (!(c >= '0' && c <= '9')) {",
      "485:                 goto invalid;",
      "486:             break;",
      "487:         }",
      "488:         c -= '0';",
      "",
      "[Removed Lines]",
      "484:             if (!saw_digit)",
      "",
      "[Added Lines]",
      "484:             if (!saw_digit) {",
      "485:                 bp++;",
      "487:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "510:     if (len == 0)",
      "511:         goto trunc;",
      "512:     ND_TCHECK(*bp);",
      "514:         goto invalid;",
      "515:     bp++;",
      "516:     len--;",
      "517:     if (len == 0)",
      "518:         goto trunc;",
      "519:     ND_TCHECK(*bp);",
      "521:         goto invalid;",
      "522:     bp++;",
      "523:     len--;",
      "",
      "[Removed Lines]",
      "513:     if (*bp != '\\r')",
      "520:     if (*bp != '\\n')",
      "",
      "[Added Lines]",
      "515:     if (*bp != '\\r') {",
      "516:         bp++;",
      "518:     }",
      "524:     if (*bp != '\\n') {",
      "525:         bp++;",
      "527:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "03a2d9c4c1e360def4f9d0473f9b378ef2f14431",
      "candidate_info": {
        "commit_hash": "03a2d9c4c1e360def4f9d0473f9b378ef2f14431",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/03a2d9c4c1e360def4f9d0473f9b378ef2f14431",
        "files": [
          "print-ahcp.c",
          "print-arp.c",
          "print-ascii.c",
          "print-atm.c",
          "print-llc.c",
          "print-msdp.c",
          "print-radius.c",
          "print-resp.c",
          "print-rpki-rtr.c",
          "print-sl.c",
          "print-snmp.c",
          "print-telnet.c",
          "print-tftp.c",
          "smbutil.c"
        ],
        "message": "Use more the EXTRACT_U_1() macro (47/n)\n\nIn: if (... *(p) ...) ...",
        "before_after_code_files": [
          "print-ahcp.c||print-ahcp.c",
          "print-arp.c||print-arp.c",
          "print-ascii.c||print-ascii.c",
          "print-atm.c||print-atm.c",
          "print-llc.c||print-llc.c",
          "print-msdp.c||print-msdp.c",
          "print-radius.c||print-radius.c",
          "print-resp.c||print-resp.c",
          "print-rpki-rtr.c||print-rpki-rtr.c",
          "print-sl.c||print-sl.c",
          "print-snmp.c||print-snmp.c",
          "print-telnet.c||print-telnet.c",
          "print-tftp.c||print-tftp.c",
          "smbutil.c||smbutil.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-resp.c||print-resp.c"
          ],
          "candidate": [
            "print-resp.c||print-resp.c"
          ]
        }
      },
      "candidate_diff": {
        "print-ahcp.c||print-ahcp.c": [
          "File: print-ahcp.c -> print-ahcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "355:   goto invalid;",
          "357:  ND_TCHECK_1(cp);",
          "359:   goto invalid;",
          "360:  cp += 1;",
          "",
          "[Removed Lines]",
          "358:  if (*cp != AHCP_MAGIC_NUMBER)",
          "",
          "[Added Lines]",
          "358:  if (EXTRACT_U_1(cp) != AHCP_MAGIC_NUMBER)",
          "",
          "---------------"
        ],
        "print-arp.c||print-arp.c": [
          "File: print-arp.c -> print-arp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "181: isnonzero(const u_char *a, size_t len)",
          "182: {",
          "183:  while (len > 0) {",
          "185:    return (1);",
          "186:   a++;",
          "187:   len--;",
          "",
          "[Removed Lines]",
          "184:   if (*a != 0)",
          "",
          "[Added Lines]",
          "184:   if (EXTRACT_U_1(a) != 0)",
          "",
          "---------------"
        ],
        "print-ascii.c||print-ascii.c": [
          "File: print-ascii.c -> print-ascii.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: #include <stdio.h>",
          "48: #include \"netdissect.h\"",
          "50: #define ASCII_LINELENGTH 300",
          "51: #define HEXDUMP_BYTES_PER_LINE 16",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "49: #include \"extract.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:     ND_PRINT((ndo, \".\"));",
          "83:   } else {",
          "84:    if (!ND_ISGRAPH(s) &&",
          "",
          "[Removed Lines]",
          "81:    if (length > 1 && *cp != '\\n')",
          "",
          "[Added Lines]",
          "82:    if (length > 1 && EXTRACT_U_1(cp) != '\\n')",
          "",
          "---------------"
        ],
        "print-atm.c||print-atm.c": [
          "File: print-atm.c -> print-atm.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "259:  }",
          "263:             if (ndo->ndo_eflag)",
          "264:                 ND_PRINT((ndo, \"CNLPID \"));",
          "265:             isoclns_print(ndo, p + 1, length - 1);",
          "",
          "[Removed Lines]",
          "262:         if (*p == LLC_UI) {",
          "",
          "[Added Lines]",
          "262:         if (EXTRACT_U_1(p) == LLC_UI) {",
          "",
          "---------------"
        ],
        "print-llc.c||print-llc.c": [
          "File: print-llc.c -> print-llc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "372:      ND_DEFAULTPRINT((const u_char *)p, caplen);",
          "373:     return (hdrlen);",
          "374:    }",
          "376:     if (caplen < 3 || length < 3) {",
          "377:      ND_PRINT((ndo, \"[|llc]\"));",
          "378:      if (caplen > 0)",
          "",
          "[Removed Lines]",
          "375:    if (*p == LLC_XID_FI) {",
          "",
          "[Added Lines]",
          "375:    if (EXTRACT_U_1(p) == LLC_XID_FI) {",
          "",
          "---------------"
        ],
        "print-msdp.c||print-msdp.c": [
          "File: print-msdp.c -> print-msdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:     ND_PRINT((ndo, \" SA-Response\"));",
          "62:    ND_TCHECK_1(sp);",
          "63:    ND_PRINT((ndo, \" %u entries\", EXTRACT_U_1(sp)));",
          "65:     ND_PRINT((ndo, \" [w/data]\"));",
          "66:     if (ndo->ndo_vflag > 1) {",
          "67:      ND_PRINT((ndo, \" \"));",
          "",
          "[Removed Lines]",
          "64:    if ((u_int)((*sp * 12) + 8) < len) {",
          "",
          "[Added Lines]",
          "64:    if ((u_int)((EXTRACT_U_1(sp) * 12) + 8) < len) {",
          "",
          "---------------"
        ],
        "print-radius.c||print-radius.c": [
          "File: print-radius.c -> print-radius.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "609:       case TUNNEL_ASSIGN_ID:",
          "610:       case TUNNEL_CLIENT_AUTH:",
          "611:       case TUNNEL_SERVER_AUTH:",
          "613:            {",
          "614:               if (length < 1)",
          "615:                  goto trunc;",
          "",
          "[Removed Lines]",
          "612:            if (*data <= 0x1F)",
          "",
          "[Added Lines]",
          "612:            if (EXTRACT_U_1(data) <= 0x1F)",
          "",
          "---------------"
        ],
        "print-resp.c||print-resp.c": [
          "File: print-resp.c -> print-resp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "467:     ND_TCHECK_1(bp);",
          "468:     too_large = 0;",
          "469:     neg = 0;",
          "471:         neg = 1;",
          "472:         bp++;",
          "473:         len--;",
          "",
          "[Removed Lines]",
          "470:     if (*bp == '-') {",
          "",
          "[Added Lines]",
          "470:     if (EXTRACT_U_1(bp) == '-') {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "512:         bp++;",
          "513:         goto invalid;",
          "514:     }",
          "",
          "[Removed Lines]",
          "511:     if (*bp != '\\r') {",
          "",
          "[Added Lines]",
          "511:     if (EXTRACT_U_1(bp) != '\\r') {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "517:     if (len == 0)",
          "518:         goto trunc;",
          "519:     ND_TCHECK_1(bp);",
          "521:         bp++;",
          "522:         goto invalid;",
          "523:     }",
          "",
          "[Removed Lines]",
          "520:     if (*bp != '\\n') {",
          "",
          "[Added Lines]",
          "520:     if (EXTRACT_U_1(bp) != '\\n') {",
          "",
          "---------------"
        ],
        "print-rpki-rtr.c||print-rpki-rtr.c": [
          "File: print-rpki-rtr.c -> print-rpki-rtr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "185:     ND_TCHECK_1(tptr);",
          "",
          "[Removed Lines]",
          "186:     if (*tptr != 0) {",
          "",
          "[Added Lines]",
          "186:     if (EXTRACT_U_1(tptr) != 0) {",
          "",
          "---------------"
        ],
        "print-sl.c||print-sl.c": [
          "File: print-sl.c -> print-sl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "198: {",
          "199:  register u_int i;",
          "202:   i = EXTRACT_BE_U_2(cp);",
          "203:   cp += 2;",
          "204:  }",
          "",
          "[Removed Lines]",
          "201:  if ((i = *cp++) == 0) {",
          "",
          "[Added Lines]",
          "201:  if ((i = EXTRACT_U_1(cp)) == 0) {",
          "202:   cp++;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "212: {",
          "213:  register short i;",
          "216:   i = EXTRACT_BE_U_2(cp);",
          "217:   cp += 2;",
          "218:  }",
          "",
          "[Removed Lines]",
          "215:  if ((i = *cp++) == 0) {",
          "",
          "[Added Lines]",
          "216:  if ((i = EXTRACT_U_1(cp)) == 0) {",
          "217:   cp++;",
          "",
          "---------------"
        ],
        "print-snmp.c||print-snmp.c": [
          "File: print-snmp.c -> print-snmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "772:   for (; i-- > 0; p++) {",
          "773:    ND_TCHECK_1(p);",
          "774:    o = (o << ASN_SHIFT7) + (*p & ~ASN_BIT8);",
          "776:            continue;",
          "",
          "[Removed Lines]",
          "775:    if (*p & ASN_LONGLEN)",
          "",
          "[Added Lines]",
          "775:    if (EXTRACT_U_1(p) & ASN_LONGLEN)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "924:  for (*oidlen = 0; i-- > 0; p++) {",
          "925:   ND_TCHECK_1(p);",
          "926:          o = (o << ASN_SHIFT7) + (*p & ~ASN_BIT8);",
          "928:       continue;",
          "",
          "[Removed Lines]",
          "927:   if (*p & ASN_LONGLEN)",
          "",
          "[Added Lines]",
          "927:   if (EXTRACT_U_1(p) & ASN_LONGLEN)",
          "",
          "---------------"
        ],
        "print-telnet.c||print-telnet.c": [
          "File: print-telnet.c -> print-telnet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "444:    p++;",
          "445:   }",
          "446:   ND_TCHECK_1(p);",
          "448:    goto pktend;",
          "450:   switch (x) {",
          "",
          "[Removed Lines]",
          "447:   if (*p != IAC)",
          "",
          "[Added Lines]",
          "447:   if (EXTRACT_U_1(p) != IAC)",
          "",
          "---------------"
        ],
        "print-tftp.c||print-tftp.c": [
          "File: print-tftp.c -> print-tftp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "141:   while (length != 0) {",
          "142:    ND_TCHECK_1(bp);",
          "144:     ND_PRINT((ndo, \" \"));",
          "145:    ui = fn_printztn(ndo, bp, length, ndo->ndo_snapend);",
          "146:    if (ui == 0)",
          "",
          "[Removed Lines]",
          "143:    if (*bp != '\\0')",
          "",
          "[Added Lines]",
          "143:    if (EXTRACT_U_1(bp) != '\\0')",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "155:   while (length != 0) {",
          "156:    ND_TCHECK_1(bp);",
          "158:     ND_PRINT((ndo, \" \"));",
          "159:    ui = fn_printztn(ndo, bp, length, ndo->ndo_snapend);",
          "160:    if (ui == 0)",
          "",
          "[Removed Lines]",
          "157:    if (*bp != '\\0')",
          "",
          "[Added Lines]",
          "157:    if (EXTRACT_U_1(bp) != '\\0')",
          "",
          "---------------"
        ],
        "smbutil.c||smbutil.c": [
          "File: smbutil.c -> smbutil.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "637:      uint32_t len;",
          "639:      ND_TCHECK_1(buf);",
          "641:   ND_PRINT((ndo, \"Error! ASCIIZ buffer of type %u\", EXTRACT_U_1(buf)));",
          "643:      }",
          "",
          "[Removed Lines]",
          "640:      if (*buf != 4 && *buf != 2) {",
          "",
          "[Added Lines]",
          "640:      if (EXTRACT_U_1(buf) != 4 && EXTRACT_U_1(buf) != 2) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}