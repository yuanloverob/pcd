{
  "cve_id": "CVE-2019-11932",
  "cve_desc": "A double free vulnerability in the DDGifSlurp function in decoding.c in the android-gif-drawable library before version 1.2.18, as used in WhatsApp for Android before version 2.19.244 and many other Android applications, allows remote attackers to execute arbitrary code or cause a denial of service when the library is used to parse a specially crafted GIF image.",
  "repo": "koral--/android-gif-drawable",
  "patch_hash": "cc5b4f8e43463995a84efd594f89a21f906c2d20",
  "patch_info": {
    "commit_hash": "cc5b4f8e43463995a84efd594f89a21f906c2d20",
    "repo": "koral--/android-gif-drawable",
    "commit_url": "https://github.com/koral--/android-gif-drawable/commit/cc5b4f8e43463995a84efd594f89a21f906c2d20",
    "files": [
      "android-gif-drawable/src/main/c/decoding.c"
    ],
    "message": "Do not realloc array if new raster size is 0.\n\nif realloc() is called with 0 size it may return NULL and this will be incorrectly handled\nas not enough memory and (also) rasterBits will be freed by realloc but we will not update\nit.",
    "before_after_code_files": [
      "android-gif-drawable/src/main/c/decoding.c||android-gif-drawable/src/main/c/decoding.c"
    ]
  },
  "patch_diff": {
    "android-gif-drawable/src/main/c/decoding.c||android-gif-drawable/src/main/c/decoding.c": [
      "File: android-gif-drawable/src/main/c/decoding.c -> android-gif-drawable/src/main/c/decoding.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "56:     }",
      "58:     if (decode) {",
      "61:      const uint_fast32_t newRasterSize = gifFilePtr->Image.Width * gifFilePtr->Image.Height;",
      "62:      if (newRasterSize > info->rasterSize || widthOverflow > 0 || heightOverflow > 0) {",
      "63:       void *tmpRasterBits = reallocarray(info->rasterBits, newRasterSize, sizeof(GifPixelType));",
      "64:       if (tmpRasterBits == NULL) {",
      "",
      "[Removed Lines]",
      "59:      int_fast32_t widthOverflow = gifFilePtr->Image.Width - info->originalWidth;",
      "60:      int_fast32_t heightOverflow = gifFilePtr->Image.Height - info->originalHeight;",
      "",
      "[Added Lines]",
      "60:      if (newRasterSize == 0) {",
      "61:       free(info->rasterBits);",
      "62:       info->rasterBits = NULL;",
      "63:       info->rasterSize = newRasterSize;",
      "64:       return;",
      "65:      }",
      "66:      const int_fast32_t widthOverflow = gifFilePtr->Image.Width - info->originalWidth;",
      "67:      const int_fast32_t heightOverflow = gifFilePtr->Image.Height - info->originalHeight;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0a25e9cf4d455c911515c92cb57363856dd03088",
      "candidate_info": {
        "commit_hash": "0a25e9cf4d455c911515c92cb57363856dd03088",
        "repo": "koral--/android-gif-drawable",
        "commit_url": "https://github.com/koral--/android-gif-drawable/commit/0a25e9cf4d455c911515c92cb57363856dd03088",
        "files": [
          "android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifAnimationMetaData.java",
          "android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDrawableInit.java",
          "android-gif-drawable/src/main/java/pl/droidsonroids/gif/InputSource.java"
        ],
        "message": "Change the method name 'build' to 'createGifDrawable', 'with' to 'setOldDrawable' (#669)",
        "before_after_code_files": [
          "android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifAnimationMetaData.java||android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifAnimationMetaData.java",
          "android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDrawableInit.java||android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDrawableInit.java",
          "android-gif-drawable/src/main/java/pl/droidsonroids/gif/InputSource.java||android-gif-drawable/src/main/java/pl/droidsonroids/gif/InputSource.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/koral--/android-gif-drawable/pull/689"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifAnimationMetaData.java||android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifAnimationMetaData.java": [
          "File: android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifAnimationMetaData.java -> android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifAnimationMetaData.java"
        ],
        "android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDrawableInit.java||android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDrawableInit.java": [
          "File: android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDrawableInit.java -> android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDrawableInit.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:         if (mInputSource == null) {",
          "62:             throw new NullPointerException(\"Source is not set\");",
          "63:         }",
          "65:     }",
          "",
          "[Removed Lines]",
          "64:         return mInputSource.build(mOldDrawable, mExecutor, mIsRenderingTriggeredOnDraw, mOptions);",
          "",
          "[Added Lines]",
          "64:         return mInputSource.createGifDrawable(mOldDrawable, mExecutor, mIsRenderingTriggeredOnDraw, mOptions);",
          "",
          "---------------"
        ],
        "android-gif-drawable/src/main/java/pl/droidsonroids/gif/InputSource.java||android-gif-drawable/src/main/java/pl/droidsonroids/gif/InputSource.java": [
          "File: android-gif-drawable/src/main/java/pl/droidsonroids/gif/InputSource.java -> android-gif-drawable/src/main/java/pl/droidsonroids/gif/InputSource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:  abstract GifInfoHandle open() throws IOException;",
          "33:   return new GifDrawable(createHandleWith(options), oldDrawable, executor, isRenderingAlwaysEnabled);",
          "34:  }",
          "",
          "[Removed Lines]",
          "30:  final GifDrawable build(final GifDrawable oldDrawable, final ScheduledThreadPoolExecutor executor,",
          "31:                          final boolean isRenderingAlwaysEnabled, final GifOptions options) throws IOException {",
          "",
          "[Added Lines]",
          "30:  final GifDrawable createGifDrawable(final GifDrawable oldDrawable, final ScheduledThreadPoolExecutor executor,",
          "31:           final boolean isRenderingAlwaysEnabled, final GifOptions options) throws IOException {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4c399f9f532f5f43ead12408f09ed45bf6bffe35",
      "candidate_info": {
        "commit_hash": "4c399f9f532f5f43ead12408f09ed45bf6bffe35",
        "repo": "koral--/android-gif-drawable",
        "commit_url": "https://github.com/koral--/android-gif-drawable/commit/4c399f9f532f5f43ead12408f09ed45bf6bffe35",
        "files": [
          "android-gif-drawable/src/main/c/decoding.c"
        ],
        "message": "Let's clear rasterBits if failed to read frame's header.\n\nIf we will not clear the bits then someone may try to read them with\n(possibly) bigger size from the current frame.",
        "before_after_code_files": [
          "android-gif-drawable/src/main/c/decoding.c||android-gif-drawable/src/main/c/decoding.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/koral--/android-gif-drawable/pull/689"
        ],
        "olp_code_files": {
          "patch": [
            "android-gif-drawable/src/main/c/decoding.c||android-gif-drawable/src/main/c/decoding.c"
          ],
          "candidate": [
            "android-gif-drawable/src/main/c/decoding.c||android-gif-drawable/src/main/c/decoding.c"
          ]
        }
      },
      "candidate_diff": {
        "android-gif-drawable/src/main/c/decoding.c||android-gif-drawable/src/main/c/decoding.c": [
          "File: android-gif-drawable/src/main/c/decoding.c -> android-gif-drawable/src/main/c/decoding.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:    case IMAGE_DESC_RECORD_TYPE:",
          "32:     if (DGifGetImageDesc(gifFilePtr, isInitialPass) == GIF_ERROR) {",
          "33:      break;",
          "34:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33:      if (info->rasterBits != NULL) {",
          "34:       free(info->rasterBits);",
          "35:       info->rasterBits = NULL;",
          "36:      }",
          "37:      info->rasterSize = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5318d64ea8d44da50afd7ec2bcd60b8546c6769b",
      "candidate_info": {
        "commit_hash": "5318d64ea8d44da50afd7ec2bcd60b8546c6769b",
        "repo": "koral--/android-gif-drawable",
        "commit_url": "https://github.com/koral--/android-gif-drawable/commit/5318d64ea8d44da50afd7ec2bcd60b8546c6769b",
        "files": [
          "android-gif-drawable/consumer-proguard-rules.pro"
        ],
        "message": "Add AndroidX annotations warnings supperssion. Fixes #671",
        "before_after_code_files": [
          "android-gif-drawable/consumer-proguard-rules.pro||android-gif-drawable/consumer-proguard-rules.pro"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/koral--/android-gif-drawable/pull/689"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "android-gif-drawable/consumer-proguard-rules.pro||android-gif-drawable/consumer-proguard-rules.pro": [
          "File: android-gif-drawable/consumer-proguard-rules.pro -> android-gif-drawable/consumer-proguard-rules.pro",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: -keep public class pl.droidsonroids.gif.GifIOException{<init>(int, java.lang.String);}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: #Prevents warnings for consumers not using AndroidX",
          "3: -dontwarn androidx.annotation.**",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "983910050db103901a6c7112a9a737c4dd78bcf9",
      "candidate_info": {
        "commit_hash": "983910050db103901a6c7112a9a737c4dd78bcf9",
        "repo": "koral--/android-gif-drawable",
        "commit_url": "https://github.com/koral--/android-gif-drawable/commit/983910050db103901a6c7112a9a737c4dd78bcf9",
        "files": [
          "android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDecoder.java"
        ],
        "message": "Add Bitmap config check in GifDecoder, fixes #635",
        "before_after_code_files": [
          "android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDecoder.java||android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDecoder.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/koral--/android-gif-drawable/pull/689"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDecoder.java||android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDecoder.java": [
          "File: android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDecoder.java -> android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDecoder.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import android.graphics.Bitmap;",
          "7: import androidx.annotation.IntRange;",
          "8: import androidx.annotation.NonNull;",
          "9: import androidx.annotation.Nullable;",
          "",
          "[Removed Lines]",
          "5: import java.io.IOException;",
          "",
          "[Added Lines]",
          "9: import java.io.IOException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "163:   if (buffer.getWidth() < mGifInfoHandle.getWidth() || buffer.getHeight() < mGifInfoHandle.getHeight()) {",
          "164:    throw new IllegalArgumentException(\"Bitmap ia too small, size must be greater than or equal to GIF size\");",
          "165:   }",
          "166:  }",
          "167: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167:   if (buffer.getConfig() != Bitmap.Config.ARGB_8888) {",
          "168:    throw new IllegalArgumentException(\"Only Config.ARGB_8888 is supported. Current bitmap config: \" + buffer.getConfig());",
          "169:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f56dc75718beed72bd617fade37de31e54cca0dd",
      "candidate_info": {
        "commit_hash": "f56dc75718beed72bd617fade37de31e54cca0dd",
        "repo": "koral--/android-gif-drawable",
        "commit_url": "https://github.com/koral--/android-gif-drawable/commit/f56dc75718beed72bd617fade37de31e54cca0dd",
        "files": [
          "android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDrawable.java",
          "android-gif-drawable/src/main/java/pl/droidsonroids/gif/InvalidationHandler.java"
        ],
        "message": "Adjust NonNull and Nullable annotations to be compatible with API level 29",
        "before_after_code_files": [
          "android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDrawable.java||android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDrawable.java",
          "android-gif-drawable/src/main/java/pl/droidsonroids/gif/InvalidationHandler.java||android-gif-drawable/src/main/java/pl/droidsonroids/gif/InvalidationHandler.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/koral--/android-gif-drawable/pull/689"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDrawable.java||android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDrawable.java": [
          "File: android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDrawable.java -> android-gif-drawable/src/main/java/pl/droidsonroids/gif/GifDrawable.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import android.os.StrictMode;",
          "24: import android.os.SystemClock;",
          "25: import android.widget.MediaController.MediaPlayerControl;",
          "26: import java.io.File;",
          "27: import java.io.FileDescriptor;",
          "28: import java.io.IOException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27: import androidx.annotation.DrawableRes;",
          "28: import androidx.annotation.FloatRange;",
          "29: import androidx.annotation.IntRange;",
          "30: import androidx.annotation.NonNull;",
          "31: import androidx.annotation.Nullable;",
          "32: import androidx.annotation.RawRes;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "34: import java.util.concurrent.ScheduledThreadPoolExecutor;",
          "35: import java.util.concurrent.TimeUnit;",
          "43: import pl.droidsonroids.gif.transforms.CornerRadiusTransform;",
          "44: import pl.droidsonroids.gif.transforms.Transform;",
          "",
          "[Removed Lines]",
          "37: import androidx.annotation.DrawableRes;",
          "38: import androidx.annotation.FloatRange;",
          "39: import androidx.annotation.IntRange;",
          "40: import androidx.annotation.NonNull;",
          "41: import androidx.annotation.Nullable;",
          "42: import androidx.annotation.RawRes;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "880:  }",
          "882:  @Override",
          "884:   mTintMode = tintMode;",
          "885:   mTintFilter = updateTintFilter(mTint, tintMode);",
          "886:   invalidateSelf();",
          "",
          "[Removed Lines]",
          "883:  public void setTintMode(@NonNull PorterDuff.Mode tintMode) {",
          "",
          "[Added Lines]",
          "885:  public void setTintMode(@Nullable PorterDuff.Mode tintMode) {",
          "",
          "---------------"
        ],
        "android-gif-drawable/src/main/java/pl/droidsonroids/gif/InvalidationHandler.java||android-gif-drawable/src/main/java/pl/droidsonroids/gif/InvalidationHandler.java": [
          "File: android-gif-drawable/src/main/java/pl/droidsonroids/gif/InvalidationHandler.java -> android-gif-drawable/src/main/java/pl/droidsonroids/gif/InvalidationHandler.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import android.os.Looper;",
          "5: import android.os.Message;",
          "7: import java.lang.ref.WeakReference;",
          "9: class InvalidationHandler extends Handler {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: import androidx.annotation.NonNull;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13:  private final WeakReference<GifDrawable> mDrawableRef;",
          "16:   super(Looper.getMainLooper());",
          "17:   mDrawableRef = new WeakReference<>(gifDrawable);",
          "18:  }",
          "20:  @Override",
          "22:   final GifDrawable gifDrawable = mDrawableRef.get();",
          "23:   if (gifDrawable == null) {",
          "24:    return;",
          "",
          "[Removed Lines]",
          "15:  public InvalidationHandler(final GifDrawable gifDrawable) {",
          "21:  public void handleMessage(final Message msg) {",
          "",
          "[Added Lines]",
          "17:  InvalidationHandler(final GifDrawable gifDrawable) {",
          "23:  public void handleMessage(@NonNull final Message msg) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}