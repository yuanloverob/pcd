{
  "cve_id": "CVE-2024-31948",
  "cve_desc": "In FRRouting (FRR) through 9.1, an attacker using a malformed Prefix SID attribute in a BGP UPDATE packet can cause the bgpd daemon to crash.",
  "repo": "FRRouting/frr",
  "patch_hash": "ba6a8f1a31e1a88df2de69ea46068e8bd9b97138",
  "patch_info": {
    "commit_hash": "ba6a8f1a31e1a88df2de69ea46068e8bd9b97138",
    "repo": "FRRouting/frr",
    "commit_url": "https://github.com/FRRouting/frr/commit/ba6a8f1a31e1a88df2de69ea46068e8bd9b97138",
    "files": [
      "bgpd/bgp_attr.c"
    ],
    "message": "bgpd: Fix error handling when receiving BGP Prefix SID attribute\n\nWithout this patch, we always set the BGP Prefix SID attribute flag without\nchecking if it's malformed or not. RFC8669 says that this attribute MUST be discarded.\n\nAlso, this fixes the bgpd crash when a malformed Prefix SID attribute is received,\nwith malformed transitive flags and/or TLVs.\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>",
    "before_after_code_files": [
      "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
    ]
  },
  "patch_diff": {
    "bgpd/bgp_attr.c||bgpd/bgp_attr.c": [
      "File: bgpd/bgp_attr.c -> bgpd/bgp_attr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1398:  case BGP_ATTR_AS4_AGGREGATOR:",
      "1399:  case BGP_ATTR_AGGREGATOR:",
      "1400:  case BGP_ATTR_ATOMIC_AGGREGATE:",
      "1401:   return BGP_ATTR_PARSE_PROCEED;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1401:  case BGP_ATTR_PREFIX_SID:",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3163:  struct attr *const attr = args->attr;",
      "3164:  enum bgp_attr_parse_ret ret;",
      "3168:  uint8_t type;",
      "3169:  uint16_t length;",
      "3170:  size_t headersz = sizeof(type) + sizeof(length);",
      "",
      "[Removed Lines]",
      "3166:  attr->flag |= ATTR_FLAG_BIT(BGP_ATTR_PREFIX_SID);",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3214:   }",
      "3215:  }",
      "3217:  return BGP_ATTR_PARSE_PROCEED;",
      "3218: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3216:  SET_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_PREFIX_SID));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "babb23b74855e23c987a63f8256d24e28c044d07",
      "candidate_info": {
        "commit_hash": "babb23b74855e23c987a63f8256d24e28c044d07",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/babb23b74855e23c987a63f8256d24e28c044d07",
        "files": [
          "bgpd/bgp_attr.c"
        ],
        "message": "bgpd: Prevent from one more CVE triggering this place\n\nIf we receive an attribute that is handled by bgp_attr_malformed(), use\ntreat-as-withdraw behavior for unknown (or missing to add - if new) attributes.\n\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>",
        "before_after_code_files": [
          "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FRRouting/frr/pull/15628"
        ],
        "olp_code_files": {
          "patch": [
            "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
          ],
          "candidate": [
            "bgpd/bgp_attr.c||bgpd/bgp_attr.c"
          ]
        }
      },
      "candidate_diff": {
        "bgpd/bgp_attr.c||bgpd/bgp_attr.c": [
          "File: bgpd/bgp_attr.c -> bgpd/bgp_attr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1389:    (args->startp - STREAM_DATA(BGP_INPUT(peer)))",
          "1390:     + args->total);",
          "1392:  switch (args->type) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1396:  if (CHECK_FLAG(flags, BGP_ATTR_FLAG_TRANS) &&",
          "1397:      CHECK_FLAG(flags, BGP_ATTR_FLAG_OPTIONAL) &&",
          "1398:      CHECK_FLAG(flags, BGP_ATTR_FLAG_PARTIAL))",
          "1399:   return BGP_ATTR_PARSE_WITHDRAW;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1426:        BGP_NOTIFY_UPDATE_ERR, subcode,",
          "1427:        notify_datap, length);",
          "1428:   return BGP_ATTR_PARSE_ERROR;",
          "1429:  }",
          "1442: }",
          "",
          "[Removed Lines]",
          "1435:  if (CHECK_FLAG(flags, BGP_ATTR_FLAG_TRANS)",
          "1436:      && CHECK_FLAG(flags, BGP_ATTR_FLAG_OPTIONAL)",
          "1437:      && CHECK_FLAG(flags, BGP_ATTR_FLAG_PARTIAL))",
          "1438:   return BGP_ATTR_PARSE_WITHDRAW;",
          "1441:  return BGP_ATTR_PARSE_ERROR_NOTIFYPLS;",
          "",
          "[Added Lines]",
          "1438:  default:",
          "1446:   flog_err(EC_BGP_ATTR_FLAG,",
          "1447:     \"%s(%u) attribute received, while it is not known how to handle it, treating as withdraw\",",
          "1448:     lookup_msg(attr_str, args->type, NULL), args->type);",
          "1449:   break;",
          "1452:  return BGP_ATTR_PARSE_WITHDRAW;",
          "",
          "---------------"
        ]
      }
    }
  ]
}