{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "31e2f33ec2dd28d88c6d356e7cffeb6c53cd5ac1",
      "candidate_info": {
        "commit_hash": "31e2f33ec2dd28d88c6d356e7cffeb6c53cd5ac1",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/31e2f33ec2dd28d88c6d356e7cffeb6c53cd5ac1",
        "files": [
          "modules/rtp_relay/rtp_relay_ctx.c"
        ],
        "message": "Ignore faked replies",
        "before_after_code_files": [
          "modules/rtp_relay/rtp_relay_ctx.c||modules/rtp_relay/rtp_relay_ctx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/rtp_relay/rtp_relay_ctx.c||modules/rtp_relay/rtp_relay_ctx.c": [
          "File: modules/rtp_relay/rtp_relay_ctx.c -> modules/rtp_relay/rtp_relay_ctx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1285:   return -1;",
          "1286:  }",
          "1288:  switch (tmp->state) {",
          "1289:   case RTP_RELAY_TMP_OFFER:",
          "1290:    pbody = get_body_part(msg, TYPE_APPLICATION, SUBTYPE_SDP);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1288:  if (msg == NULL || msg == FAKED_REPLY) {",
          "1290:   goto error;",
          "1291:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d4a05448c4822bac6ffe744e8ee1747e14614ff9",
      "candidate_info": {
        "commit_hash": "d4a05448c4822bac6ffe744e8ee1747e14614ff9",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/d4a05448c4822bac6ffe744e8ee1747e14614ff9",
        "files": [
          "modules/mi_script/mi_script.c"
        ],
        "message": "mi_script: fix infinite loop where there are multiple params\n\n(cherry picked from commit 34ce451c664a3f51299cccbc263a8fb1bca214c7)",
        "before_after_code_files": [
          "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c": [
          "File: modules/mi_script/mi_script.c -> modules/mi_script/mi_script.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:    trim_leading(params);",
          "212:    p = q_memchr(params->s, ' ', params->len);",
          "213:    avp_val.s = *params;",
          "215:     avp_val.s.len = p - avp_val.s.s;",
          "216:    if (avp_val.s.len <= 0)",
          "217:     break;",
          "218:    val = cJSON_CreateStr(avp_val.s.s, avp_val.s.len);",
          "",
          "[Removed Lines]",
          "214:    if (p)",
          "",
          "[Added Lines]",
          "214:    if (p) {",
          "216:     params->s += avp_val.s.len;",
          "217:     params->len -= avp_val.s.len;",
          "218:    }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "35b29e618b1175618c61747591dcf87370056102",
      "candidate_info": {
        "commit_hash": "35b29e618b1175618c61747591dcf87370056102",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/35b29e618b1175618c61747591dcf87370056102",
        "files": [
          "modules/tls_wolfssl/wolfssl_conn_ops.c"
        ],
        "message": "tls_wolfssl: fix differing TLS version for write duplicate struct\n\nWhen using a range of supported TLS versions, the WOLFSSL write duplicate\nstructure uses the highest TLS version set for the context instead of the one\nactually negociated for the current session. This may lead to errors for TLS\nwrite or shutdown operations, for ciphers that are not supported in the\nTLS version used by the write dup structure.\n\nFixes #2729",
        "before_after_code_files": [
          "modules/tls_wolfssl/wolfssl_conn_ops.c||modules/tls_wolfssl/wolfssl_conn_ops.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/tls_wolfssl/wolfssl_conn_ops.c||modules/tls_wolfssl/wolfssl_conn_ops.c": [
          "File: modules/tls_wolfssl/wolfssl_conn_ops.c -> modules/tls_wolfssl/wolfssl_conn_ops.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "305: }",
          "307: int _wolfssl_tls_async_connect(struct tcp_connection *con, int fd,",
          "308:  int timeout, trace_dest t_dst)",
          "309: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "307: static inline void _wolfssl_enforce_max_version(struct tcp_connection *c)",
          "308: {",
          "309:  int r_vers, wr_vers;",
          "311:  r_vers = wolfSSL_version(_WOLFSSL_READ_SSL(c->extra_data));",
          "312:  wr_vers = wolfSSL_version(_WOLFSSL_WRITE_SSL(c->extra_data));",
          "313:  if (r_vers == wr_vers)",
          "314:   return;",
          "316:  switch(r_vers) {",
          "317:  case SSL2_VERSION:",
          "318:   LM_BUG(\"SSLv2 should not be supported\\n\");",
          "319:   break;",
          "320:  case SSL3_VERSION:",
          "321:   wolfSSL_set_options(_WOLFSSL_WRITE_SSL(c->extra_data),",
          "322:    WOLFSSL_OP_NO_TLSv1);",
          "323:  case TLS1_VERSION:",
          "324:   wolfSSL_set_options(_WOLFSSL_WRITE_SSL(c->extra_data),",
          "325:    WOLFSSL_OP_NO_TLSv1_1);",
          "326:  case TLS1_1_VERSION:",
          "327:   wolfSSL_set_options(_WOLFSSL_WRITE_SSL(c->extra_data),",
          "328:    WOLFSSL_OP_NO_TLSv1_2);",
          "329:  case TLS1_2_VERSION:",
          "330:   wolfSSL_set_options(_WOLFSSL_WRITE_SSL(c->extra_data),",
          "331:    WOLFSSL_OP_NO_TLSv1_3);",
          "332:  case TLS1_3_VERSION:",
          "333:   break;",
          "334:  }",
          "335: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "358:     return -1;",
          "359:    }",
          "361:    return 1;",
          "362:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "391:    _wolfssl_enforce_max_version(con);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "530:    return -1;",
          "531:   }",
          "533:   LM_DBG(\"new TLS connection from %s:%d using %s\\n\",",
          "534:    ip_addr2a(&c->rcv.src_ip), c->rcv.src_port,",
          "535:    wolfSSL_get_cipher_name(ssl));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "565:   _wolfssl_enforce_max_version(c);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "636:    return -1;",
          "637:   }",
          "639:   LM_DBG(\"new TLS connection to %s:%d using %s\\n\",",
          "640:    ip_addr2a(&c->rcv.src_ip), c->rcv.src_port,",
          "641:    wolfSSL_get_cipher_name(ssl));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "673:   _wolfssl_enforce_max_version(c);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "570c0aafab9e2983f2b10d678823962e6c9146c1",
      "candidate_info": {
        "commit_hash": "570c0aafab9e2983f2b10d678823962e6c9146c1",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/570c0aafab9e2983f2b10d678823962e6c9146c1",
        "files": [
          "modules/tm/uac.c"
        ],
        "message": "[tm] fix adding rport in local route\n\nForce the VIA rebuild if add_local_rport() (for adding rport param to VIA) was called from local route\n\nCloses #2833\n\n(cherry picked from commit c85d93c7a3c3e9177d4621163295816b77bcdddc)",
        "before_after_code_files": [
          "modules/tm/uac.c||modules/tm/uac.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/tm/uac.c||modules/tm/uac.c": [
          "File: modules/tm/uac.c -> modules/tm/uac.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:  if (req->new_uri.s || req->force_send_socket!=dialog->send_sock ||",
          "208:  req->dst_uri.len != dialog->hooks.next_hop->len ||",
          "209:  memcmp(req->dst_uri.s,dialog->hooks.next_hop->s,req->dst_uri.len) ||",
          "",
          "[Removed Lines]",
          "210:  (dst_changed=0)!=0 || req->add_rm || should_update_sip_body(req)) {",
          "",
          "[Added Lines]",
          "210:  (dst_changed=0)!=0 || req->add_rm || should_update_sip_body(req)",
          "211:  || req->msg_flags&FL_FORCE_LOCAL_RPORT) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "236:    }",
          "237:   }",
          "242:    LM_DBG(\"Interface change in local route -> \"",
          "243:     \"rebuilding via\\n\");",
          "",
          "[Removed Lines]",
          "240:   if (new_send_sock && new_send_sock != dialog->send_sock) {",
          "",
          "[Added Lines]",
          "242:   if ( (new_send_sock && new_send_sock != dialog->send_sock)",
          "243:   || (req->msg_flags&FL_FORCE_LOCAL_RPORT &&",
          "247:   (new_send_sock=dialog->send_sock)!=NULL) ) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "edc90fb544d7f2fba5862352ef1a17f4a3838034",
      "candidate_info": {
        "commit_hash": "edc90fb544d7f2fba5862352ef1a17f4a3838034",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/edc90fb544d7f2fba5862352ef1a17f4a3838034",
        "files": [
          "modules/dialog/dialog.c",
          "modules/dialog/dlg_replication.c",
          "modules/dialog/dlg_replication.h"
        ],
        "message": "dialog: fix incorrectly discarded dialogs after sync\n\nSyncing while the donor node is also sending live replication packets\nmay lead to incorrectly discarding some of the newly received dialogs.\nThere were two ways in which new dialogs were actually mistaken as old,\n\"local\" dialogs from before syncing:\n* overwriting the dialog flags when handling a replicated update;\n* not marking live replicated dialogs received during sync as \"new\" dialogs.\n\n(cherry picked from commit 46e9a53ead0574272609038dc9dbfb92f9087fe4)",
        "before_after_code_files": [
          "modules/dialog/dialog.c||modules/dialog/dialog.c",
          "modules/dialog/dlg_replication.c||modules/dialog/dlg_replication.c",
          "modules/dialog/dlg_replication.h||modules/dialog/dlg_replication.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/5",
          "https://github.com/naveenecosmob/opensips/pull/1"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/dialog/dialog.c||modules/dialog/dialog.c": [
          "File: modules/dialog/dialog.c -> modules/dialog/dialog.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "830:   return -1;",
          "831:  }",
          "838:   return -1;",
          "839:  }",
          "870:  if ( register_timer( \"dlg-timer\", dlg_timer_routine, NULL, 1,",
          "871:  TIMER_FLAG_DELAY_ON_DELAY)<0 ) {",
          "",
          "[Removed Lines]",
          "835:  if (dialog_repl_cluster < 0) {",
          "836:   LM_ERR(\"Invalid dialog_replication_cluster, must be 0 or \"",
          "837:    \"a positive cluster id\\n\");",
          "840:  if (profile_repl_cluster < 0) {",
          "841:   LM_ERR(\"Invalid profile_repl_cluster, must be 0 or \"",
          "842:    \"a positive cluster id\\n\");",
          "843:   return -1;",
          "844:  }",
          "846:  if ((dialog_repl_cluster || profile_repl_cluster) &&",
          "847:   (load_clusterer_api(&clusterer_api) < 0)) {",
          "848:   LM_DBG(\"failed to load clusterer API - is clusterer module loaded?\\n\");",
          "849:   return -1;",
          "850:  }",
          "852:  if (profile_repl_cluster && clusterer_api.register_capability(",
          "853:   &prof_repl_cap, receive_prof_repl, NULL, profile_repl_cluster, 0,",
          "854:   NODE_CMP_ANY) < 0) {",
          "855:   LM_ERR(\"Cannot register clusterer callback for profile replication!\\n\");",
          "856:   return -1;",
          "857:  }",
          "859:  if (dialog_repl_cluster) {",
          "860:   if (clusterer_api.register_capability(&dlg_repl_cap, receive_dlg_repl,",
          "861:     rcv_cluster_event, dialog_repl_cluster, 1, NODE_CMP_ANY) < 0) {",
          "862:    LM_ERR(\"Cannot register clusterer callback for dialog replication!\\n\");",
          "863:    return -1;",
          "864:   }",
          "866:   if (clusterer_api.request_sync(&dlg_repl_cap, dialog_repl_cluster, 0) < 0)",
          "867:    LM_ERR(\"Sync request failed\\n\");",
          "868:  }",
          "",
          "[Added Lines]",
          "833:  if (dlg_init_clustering() < 0) {",
          "834:   LM_ERR(\"Failed to initialize clustering\\n\");",
          "",
          "---------------"
        ],
        "modules/dialog/dlg_replication.c||modules/dialog/dlg_replication.c": [
          "File: modules/dialog/dlg_replication.c -> modules/dialog/dlg_replication.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: str shtag_dlg_val = str_init(\"dlgX_shtag\");",
          "48: static int get_shtag_sync_status(struct dlg_cell *dlg);",
          "50: static struct socket_info * fetch_socket_info(str *addr)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: char *dlg_sync_in_progress;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:  return 0;",
          "121: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "125: int dlg_init_clustering(void)",
          "126: {",
          "129:  if (dialog_repl_cluster < 0) {",
          "130:   LM_ERR(\"Invalid dialog_replication_cluster, must be 0 or \"",
          "131:    \"a positive cluster id\\n\");",
          "132:   return -1;",
          "133:  }",
          "134:  if (profile_repl_cluster < 0) {",
          "135:   LM_ERR(\"Invalid profile_repl_cluster, must be 0 or \"",
          "136:    \"a positive cluster id\\n\");",
          "137:   return -1;",
          "138:  }",
          "140:  if ((dialog_repl_cluster || profile_repl_cluster) &&",
          "141:   (load_clusterer_api(&clusterer_api) < 0)) {",
          "142:   LM_DBG(\"failed to load clusterer API - is clusterer module loaded?\\n\");",
          "143:   return -1;",
          "144:  }",
          "146:  if (profile_repl_cluster && clusterer_api.register_capability(",
          "147:   &prof_repl_cap, receive_prof_repl, NULL, profile_repl_cluster, 0,",
          "148:   NODE_CMP_ANY) < 0) {",
          "149:   LM_ERR(\"Cannot register clusterer callback for profile replication!\\n\");",
          "150:   return -1;",
          "151:  }",
          "153:  if (dialog_repl_cluster) {",
          "154:   if (clusterer_api.register_capability(&dlg_repl_cap, receive_dlg_repl,",
          "155:     rcv_cluster_event, dialog_repl_cluster, 1, NODE_CMP_ANY) < 0) {",
          "156:    LM_ERR(\"Cannot register clusterer callback for dialog replication!\\n\");",
          "157:    return -1;",
          "158:   }",
          "160:   dlg_sync_in_progress = shm_malloc(sizeof *dlg_sync_in_progress);",
          "161:   if (*dlg_sync_in_progress) {",
          "162:    LM_ERR(\"no more shm memory!\\n\");",
          "163:    return -1;",
          "164:   }",
          "167:   if (clusterer_api.request_sync(&dlg_repl_cap, dialog_repl_cluster, 0) < 0)",
          "168:    LM_ERR(\"Sync request failed\\n\");",
          "170:  }",
          "172:  return 0;",
          "173: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "178:    dlg->flags &= ~DLG_FLAG_FROM_DB;",
          "180:     dlg->flags |= DLG_FLAG_SYNCED;",
          "181:    dlg_unlock(d_table, d_entry);",
          "182:    return 0;",
          "183:   }",
          "",
          "[Removed Lines]",
          "179:    if (from_sync)",
          "",
          "[Added Lines]",
          "231:    if (from_sync || *dlg_sync_in_progress)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "328:    return 0;",
          "329:   }",
          "330:  }",
          "332:  if (dlg_db_mode == DB_MODE_DELAYED) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "383:  } else if (*dlg_sync_in_progress) {",
          "386:   dlg->flags |= DLG_FLAG_SYNCED;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "389:  int timeout, h_entry;",
          "390:  str st;",
          "391:  struct dlg_entry *d_entry;",
          "393:  unsigned int h_id;",
          "394:  short pkg_ver = get_bin_pkg_version(packet);",
          "",
          "[Removed Lines]",
          "392:  int rcv_flags, save_new_flag;",
          "",
          "[Added Lines]",
          "449:  int rcv_flags, save_new_flag, save_sync_flag;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "492:  save_new_flag = dlg->flags & DLG_FLAG_NEW;",
          "493:  dlg->flags = rcv_flags;",
          "496:  bin_pop_int(packet, &timeout);",
          "497:  bin_skip_int(packet, 2);",
          "",
          "[Removed Lines]",
          "494:  dlg->flags |= ((save_new_flag ? DLG_FLAG_NEW : 0) | DLG_FLAG_CHANGED);",
          "",
          "[Added Lines]",
          "550:  save_sync_flag = dlg->flags & DLG_FLAG_SYNCED;",
          "552:  dlg->flags |= ((save_new_flag ? DLG_FLAG_NEW : 0) |",
          "553:   (save_sync_flag ? DLG_FLAG_SYNCED : 0) | DLG_FLAG_CHANGED);",
          "",
          "---------------"
        ],
        "modules/dialog/dlg_replication.h||modules/dialog/dlg_replication.h": [
          "File: modules/dialog/dlg_replication.h -> modules/dialog/dlg_replication.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: extern int cluster_auto_sync;",
          "53: void replicate_dialog_created(struct dlg_cell *dlg);",
          "54: void replicate_dialog_updated(struct dlg_cell *dlg);",
          "55: void replicate_dialog_deleted(struct dlg_cell *dlg);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53: int dlg_init_clustering(void);",
          "",
          "---------------"
        ]
      }
    }
  ]
}