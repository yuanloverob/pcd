{
  "cve_id": "CVE-2023-5341",
  "cve_desc": "A heap use-after-free flaw was found in coders/bmp.c in ImageMagick.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "aa673b2e4defc7cad5bec16c4fc8324f71e531f1",
  "patch_info": {
    "commit_hash": "aa673b2e4defc7cad5bec16c4fc8324f71e531f1",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/aa673b2e4defc7cad5bec16c4fc8324f71e531f1",
    "files": [
      "coders/bmp.c"
    ],
    "message": "check for BMP file size, poc provided by Hardik Shah of Vehere (Dawn Treaders team)",
    "before_after_code_files": [
      "coders/bmp.c||coders/bmp.c"
    ]
  },
  "patch_diff": {
    "coders/bmp.c||coders/bmp.c": [
      "File: coders/bmp.c -> coders/bmp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "695:     if (image->debug != MagickFalse)",
      "696:       (void) LogMagickEvent(CoderEvent,GetMagickModule(),",
      "697:         \"  BMP header size: %u\",bmp_info.size);",
      "698:     if (LocaleNCompare((char *) magick,\"CI\",2) == 0)",
      "699:       {",
      "700:         if ((bmp_info.size != 12) && (bmp_info.size != 40) &&",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "698:     if (LocaleNCompare((char *) magick,\"CI\",2) == 0)",
      "699:       {",
      "700:         if ((bmp_info.size != 12) && (bmp_info.size != 40) &&",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "75f9a5120deaf02a7a6211986d5efd6dc702df4d",
      "candidate_info": {
        "commit_hash": "75f9a5120deaf02a7a6211986d5efd6dc702df4d",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/75f9a5120deaf02a7a6211986d5efd6dc702df4d",
        "files": [
          "coders/bmp.c"
        ],
        "message": "Minor refactoring of the ignore filesize checks.",
        "before_after_code_files": [
          "coders/bmp.c||coders/bmp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/bmp.c||coders/bmp.c"
          ],
          "candidate": [
            "coders/bmp.c||coders/bmp.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/bmp.c||coders/bmp.c": [
          "File: coders/bmp.c -> coders/bmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "587: }",
          "589: static Image *ReadBMPImage(const ImageInfo *image_info,ExceptionInfo *exception)",
          "590: {",
          "591:   BMPInfo",
          "592:     bmp_info;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "590: {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "621:   ssize_t",
          "622:     count,",
          "623:     i,",
          "627:   unsigned char",
          "628:     magick[12],",
          "",
          "[Removed Lines]",
          "624:     x,",
          "625:     y;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "707:     if (LocaleNCompare((char *) magick,\"CI\",2) == 0)",
          "708:       {",
          "709:         if ((bmp_info.size != 12) && (bmp_info.size != 40) &&",
          "713:     if (bmp_info.size > 124)",
          "714:       ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");",
          "",
          "[Removed Lines]",
          "710:             (bmp_info.size != 64))",
          "711:           ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");",
          "712:       }",
          "",
          "[Added Lines]",
          "708:             (bmp_info.size != 64))",
          "709:           ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");",
          "710:       }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "949:               case LCS_GM_ABS_COLORIMETRIC:",
          "950:               {",
          "951:                 image->rendering_intent=AbsoluteIntent;",
          "960:     if ((MagickSizeType) bmp_info.file_size != blob_size)",
          "961:       {",
          "962:         option=GetImageOption(image_info,\"bmp:ignore-filesize\");",
          "",
          "[Removed Lines]",
          "952:                 break;",
          "953:               }",
          "954:             }",
          "955:             profile_data=(MagickOffsetType) ReadBlobLSBLong(image);",
          "956:             profile_size=(MagickOffsetType) ReadBlobLSBLong(image);",
          "958:           }",
          "959:       }",
          "",
          "[Added Lines]",
          "950:                 break;",
          "951:               }",
          "952:             }",
          "953:             profile_data=(MagickOffsetType) ReadBlobLSBLong(image);",
          "954:             profile_size=(MagickOffsetType) ReadBlobLSBLong(image);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8d548139d0fe645892290fcbdaf07e994c65b4bc",
      "candidate_info": {
        "commit_hash": "8d548139d0fe645892290fcbdaf07e994c65b4bc",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/8d548139d0fe645892290fcbdaf07e994c65b4bc",
        "files": [
          "coders/bmp.c"
        ],
        "message": "Fix bmp option to bypass file size check (#7194)",
        "before_after_code_files": [
          "coders/bmp.c||coders/bmp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/bmp.c||coders/bmp.c"
          ],
          "candidate": [
            "coders/bmp.c||coders/bmp.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/bmp.c||coders/bmp.c": [
          "File: coders/bmp.c -> coders/bmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "621:   ssize_t",
          "622:     count,",
          "623:     i,",
          "624:     x,",
          "625:     y;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "624:     x,",
          "625:     y;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "700:     if (image->debug != MagickFalse)",
          "701:       (void) LogMagickEvent(CoderEvent,GetMagickModule(),",
          "702:         \"  BMP header size: %u\",bmp_info.size);",
          "704:       {",
          "705:         if ((bmp_info.size != 12) && (bmp_info.size != 40) &&",
          "706:             (bmp_info.size != 64))",
          "",
          "[Removed Lines]",
          "703:     if (LocaleNCompare((char *) magick,\"CI\",2) == 0)",
          "",
          "[Added Lines]",
          "708:       {",
          "709:         if ((bmp_info.size != 12) && (bmp_info.size != 40) &&",
          "710:             (bmp_info.size != 64))",
          "711:           ThrowReaderException(CorruptImageError,\"ImproperImageHeader\");",
          "712:       }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "942:                 image->rendering_intent=AbsoluteIntent;",
          "943:                 break;",
          "944:               }",
          "949:           }",
          "950:       }",
          "",
          "[Removed Lines]",
          "945:             }",
          "946:             profile_data=(MagickOffsetType) ReadBlobLSBLong(image);",
          "947:             profile_size=(MagickOffsetType) ReadBlobLSBLong(image);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}