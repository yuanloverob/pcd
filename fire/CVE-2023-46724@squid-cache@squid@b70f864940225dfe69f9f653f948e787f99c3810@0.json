{
  "cve_id": "CVE-2023-46724",
  "cve_desc": "Squid is a caching proxy for the Web. Due to an Improper Validation of Specified Index bug, Squid versions 3.3.0.1 through 5.9 and 6.0 prior to 6.4 compiled using `--with-openssl` are vulnerable to a Denial of Service attack against SSL Certificate validation. This problem allows a remote server to perform Denial of Service against Squid Proxy by initiating a TLS Handshake with a specially crafted SSL Certificate in a server certificate chain. This attack is limited to HTTPS and SSL-Bump. This bug is fixed in Squid version 6.4. In addition, patches addressing this problem for the stable releases can be found in Squid's patch archives. Those who you use a prepackaged version of Squid should refer to the package vendor for availability information on updated packages.",
  "repo": "squid-cache/squid",
  "patch_hash": "b70f864940225dfe69f9f653f948e787f99c3810",
  "patch_info": {
    "commit_hash": "b70f864940225dfe69f9f653f948e787f99c3810",
    "repo": "squid-cache/squid",
    "commit_url": "https://github.com/squid-cache/squid/commit/b70f864940225dfe69f9f653f948e787f99c3810",
    "files": [
      "src/anyp/Uri.cc"
    ],
    "message": "Fix validation of certificates with CN=* (#1523)\n\nThe bug was discovered and detailed by Joshua Rogers at\nhttps://megamansec.github.io/Squid-Security-Audit/\nwhere it was filed as \"Buffer UnderRead in SSL CN Parsing\".",
    "before_after_code_files": [
      "src/anyp/Uri.cc||src/anyp/Uri.cc"
    ]
  },
  "patch_diff": {
    "src/anyp/Uri.cc||src/anyp/Uri.cc": [
      "File: src/anyp/Uri.cc -> src/anyp/Uri.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "175:     assert(0 == matchDomainName(\"*.foo.com\", \".foo.com\", mdnHonorWildcards));",
      "176:     assert(0 != matchDomainName(\"*.foo.com\", \"foo.com\", mdnHonorWildcards));",
      "179: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "178:     assert(0 != matchDomainName(\"foo.com\", \"\"));",
      "179:     assert(0 != matchDomainName(\"foo.com\", \"\", mdnHonorWildcards));",
      "180:     assert(0 != matchDomainName(\"foo.com\", \"\", mdnRejectSubsubDomains));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "828:         return -1;",
      "830:     dl = strlen(d);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "835:     if (dl == 0)",
      "836:         return 1;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "12b8efc07ff74548d5582c4890f8bdb9057a1bb3",
      "candidate_info": {
        "commit_hash": "12b8efc07ff74548d5582c4890f8bdb9057a1bb3",
        "repo": "squid-cache/squid",
        "commit_url": "https://github.com/squid-cache/squid/commit/12b8efc07ff74548d5582c4890f8bdb9057a1bb3",
        "files": [
          "src/anyp/Uri.cc"
        ],
        "message": "Fix validation of certificates with CN=* (#1523)\n\nThe bug was discovered and detailed by Joshua Rogers at\nhttps://megamansec.github.io/Squid-Security-Audit/\nwhere it was filed as \"Buffer UnderRead in SSL CN Parsing\".",
        "before_after_code_files": [
          "src/anyp/Uri.cc||src/anyp/Uri.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/anyp/Uri.cc||src/anyp/Uri.cc"
          ],
          "candidate": [
            "src/anyp/Uri.cc||src/anyp/Uri.cc"
          ]
        }
      },
      "candidate_diff": {
        "src/anyp/Uri.cc||src/anyp/Uri.cc": [
          "File: src/anyp/Uri.cc -> src/anyp/Uri.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "174:     assert(0 == matchDomainName(\"*.foo.com\", \".foo.com\", mdnHonorWildcards));",
          "175:     assert(0 != matchDomainName(\"*.foo.com\", \"foo.com\", mdnHonorWildcards));",
          "178: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:     assert(0 != matchDomainName(\"foo.com\", \"\"));",
          "178:     assert(0 != matchDomainName(\"foo.com\", \"\", mdnHonorWildcards));",
          "179:     assert(0 != matchDomainName(\"foo.com\", \"\", mdnRejectSubsubDomains));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "748:         return -1;",
          "750:     dl = strlen(d);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "755:     if (dl == 0)",
          "756:         return 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "792ef23e6e1c05780fe17f733859eef6eb8c8be3",
      "candidate_info": {
        "commit_hash": "792ef23e6e1c05780fe17f733859eef6eb8c8be3",
        "repo": "squid-cache/squid",
        "commit_url": "https://github.com/squid-cache/squid/commit/792ef23e6e1c05780fe17f733859eef6eb8c8be3",
        "files": [
          "src/anyp/Uri.cc"
        ],
        "message": "Fix validation of certificates with CN=* (#1523)\n\nThe bug was discovered and detailed by Joshua Rogers at\nhttps://megamansec.github.io/Squid-Security-Audit/\nwhere it was filed as \"Buffer UnderRead in SSL CN Parsing\".",
        "before_after_code_files": [
          "src/anyp/Uri.cc||src/anyp/Uri.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/anyp/Uri.cc||src/anyp/Uri.cc"
          ],
          "candidate": [
            "src/anyp/Uri.cc||src/anyp/Uri.cc"
          ]
        }
      },
      "candidate_diff": {
        "src/anyp/Uri.cc||src/anyp/Uri.cc": [
          "File: src/anyp/Uri.cc -> src/anyp/Uri.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "173:     assert(0 == matchDomainName(\"*.foo.com\", \".foo.com\", mdnHonorWildcards));",
          "174:     assert(0 != matchDomainName(\"*.foo.com\", \"foo.com\", mdnHonorWildcards));",
          "177: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "176:     assert(0 != matchDomainName(\"foo.com\", \"\"));",
          "177:     assert(0 != matchDomainName(\"foo.com\", \"\", mdnHonorWildcards));",
          "178:     assert(0 != matchDomainName(\"foo.com\", \"\", mdnRejectSubsubDomains));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "756:         return -1;",
          "758:     dl = strlen(d);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "763:     if (dl == 0)",
          "764:         return 1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}