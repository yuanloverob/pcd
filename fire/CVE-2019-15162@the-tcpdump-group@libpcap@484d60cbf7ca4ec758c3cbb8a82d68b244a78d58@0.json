{
  "cve_id": "CVE-2019-15162",
  "cve_desc": "rpcapd/daemon.c in libpcap before 1.9.1 on non-Windows platforms provides details about why authentication failed, which might make it easier for attackers to enumerate valid usernames.",
  "repo": "the-tcpdump-group/libpcap",
  "patch_hash": "484d60cbf7ca4ec758c3cbb8a82d68b244a78d58",
  "patch_info": {
    "commit_hash": "484d60cbf7ca4ec758c3cbb8a82d68b244a78d58",
    "repo": "the-tcpdump-group/libpcap",
    "commit_url": "https://github.com/the-tcpdump-group/libpcap/commit/484d60cbf7ca4ec758c3cbb8a82d68b244a78d58",
    "files": [
      "rpcapd/daemon.c"
    ],
    "message": "On UN*X, don't tell the client why authentication failed.\n\n\"no such user\" tells the client that the user ID isn't valid and,\ntherefore, that it needn't bother trying to do password cracking for\nthat user ID; just saying that the authentication failed dosn't give\nthem that hint.\n\nThis resolves the third problem in Include Security issue F11: [libpcap]\nRemote Packet Capture Daemon Multiple Authentication Improvements.\n\nThe Windows LogonUser() API returns ERROR_LOGON_FAILURE for both cases,\nso the Windows code doesn't have this issue.  Just return the same\n\"Authentication failed\" message on Windows to the user.\n\nFor various authentication failures *other* than \"no such user\" and\n\"password not valid\", log a message, as there's a problem that may need\ndebugging.  We don't need to tell the end user what the problem is, as\nthey may not bother reporting it and, even if they do, they may not give\nthe full error message.",
    "before_after_code_files": [
      "rpcapd/daemon.c||rpcapd/daemon.c"
    ]
  },
  "patch_diff": {
    "rpcapd/daemon.c||rpcapd/daemon.c": [
      "File: rpcapd/daemon.c -> rpcapd/daemon.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1179:  HANDLE Token;",
      "1180:  if (LogonUser(username, \".\", password, LOGON32_LOGON_NETWORK, LOGON32_PROVIDER_DEFAULT, &Token) == 0)",
      "1181:  {",
      "1184:   return -1;",
      "1185:  }",
      "",
      "[Removed Lines]",
      "1182:   pcap_fmt_errmsg_for_win32_err(errbuf, PCAP_ERRBUF_SIZE,",
      "1183:       GetLastError(), \"LogonUser() failed\");",
      "",
      "[Added Lines]",
      "1179:  DWORD error;",
      "1181:  char errmsgbuf[PCAP_ERRBUF_SIZE]; // buffer for errors to log",
      "1185:   pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");",
      "1186:   error = GetLastError();",
      "1187:   if (error != ERROR_LOGON_FAILURE)",
      "1188:   {",
      "1191:    pcap_fmt_errmsg_for_win32_err(errmsgbuf,",
      "1192:        PCAP_ERRBUF_SIZE, error, \"LogonUser() failed\");",
      "1193:    rpcapd_log(LOGPRIO_ERROR, \"%s\", errmsgbuf);",
      "1194:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1189:  if (ImpersonateLoggedOnUser(Token) == 0)",
      "1190:  {",
      "1192:       GetLastError(), \"ImpersonateLoggedOnUser() failed\");",
      "1193:   CloseHandle(Token);",
      "1194:   return -1;",
      "1195:  }",
      "",
      "[Removed Lines]",
      "1191:   pcap_fmt_errmsg_for_win32_err(errbuf, PCAP_ERRBUF_SIZE,",
      "",
      "[Added Lines]",
      "1202:   pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");",
      "1203:   pcap_fmt_errmsg_for_win32_err(errmsgbuf, PCAP_ERRBUF_SIZE,",
      "1205:   rpcapd_log(LOGPRIO_ERROR, \"%s\", errmsgbuf);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1220:  struct passwd *user;",
      "1221:  char *user_password;",
      "1222: #ifdef HAVE_GETSPNAM",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1233:  int error;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1228:  if ((user = getpwnam(username)) == NULL)",
      "1229:  {",
      "1231:   return -1;",
      "1232:  }",
      "",
      "[Removed Lines]",
      "1230:   pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed: user name or password incorrect\");",
      "",
      "[Added Lines]",
      "1244:   pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1236:  if ((usersp = getspnam(username)) == NULL)",
      "1237:  {",
      "1239:   return -1;",
      "1240:  }",
      "1241:  user_password = usersp->sp_pwdp;",
      "",
      "[Removed Lines]",
      "1238:   pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed: user name or password incorrect\");",
      "",
      "[Added Lines]",
      "1252:   pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1253:  user_password = user->pw_passwd;",
      "1254: #endif",
      "1256:  crypt_password = crypt(password, user_password);",
      "1257:  if (crypt_password == NULL)",
      "1258:  {",
      "1259:   pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");",
      "1260:   return -1;",
      "1261:  }",
      "1262:  if (strcmp(user_password, crypt_password) != 0)",
      "1263:  {",
      "1265:   return -1;",
      "1266:  }",
      "1268:  if (setuid(user->pw_uid))",
      "1269:  {",
      "1270:   pcap_fmt_errmsg_for_errno(errbuf, PCAP_ERRBUF_SIZE,",
      "1272:   return -1;",
      "1273:  }",
      "1276:  {",
      "1277:   pcap_fmt_errmsg_for_errno(errbuf, PCAP_ERRBUF_SIZE,",
      "1278:       errno, \"setgid\");",
      "1279:   return -1;",
      "1280:  }",
      "",
      "[Removed Lines]",
      "1264:   pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed: user name or password incorrect\");",
      "1271:       errno, \"setuid\");",
      "",
      "[Added Lines]",
      "1275:  errno = 0;",
      "1279:   error = errno;",
      "1281:   if (error == 0)",
      "1282:   {",
      "1284:    rpcapd_log(LOGPRIO_ERROR, \"crypt() failed\");",
      "1285:   }",
      "1286:   else",
      "1287:   {",
      "1288:    rpcapd_log(LOGPRIO_ERROR, \"crypt() failed: %s\",",
      "1289:        strerror(error));",
      "1290:   }",
      "1295:   pcap_snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");",
      "1301:   error = errno;",
      "1303:       error, \"setuid\");",
      "1304:   rpcapd_log(LOGPRIO_ERROR, \"setuid() failed: %s\",",
      "1305:       strerror(error));",
      "1311:   error = errno;",
      "1314:   rpcapd_log(LOGPRIO_ERROR, \"setgid() failed: %s\",",
      "1315:       strerror(error));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6dd222dc6ee8fd5e0407b717651ad23d2ac40ae4",
      "candidate_info": {
        "commit_hash": "6dd222dc6ee8fd5e0407b717651ad23d2ac40ae4",
        "repo": "the-tcpdump-group/libpcap",
        "commit_url": "https://github.com/the-tcpdump-group/libpcap/commit/6dd222dc6ee8fd5e0407b717651ad23d2ac40ae4",
        "files": [
          "rpcapd/daemon.c"
        ],
        "message": "Remove more trailing white space.",
        "before_after_code_files": [
          "rpcapd/daemon.c||rpcapd/daemon.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "rpcapd/daemon.c||rpcapd/daemon.c"
          ],
          "candidate": [
            "rpcapd/daemon.c||rpcapd/daemon.c"
          ]
        }
      },
      "candidate_diff": {
        "rpcapd/daemon.c||rpcapd/daemon.c": [
          "File: rpcapd/daemon.c -> rpcapd/daemon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1193:    pcap_fmt_errmsg_for_win32_err(errmsgbuf,",
          "1194:        PCAP_ERRBUF_SIZE, error, \"LogonUser() failed\");",
          "1195:    rpcapd_log(LOGPRIO_ERROR, \"%s\", errmsgbuf);",
          "1197:   return -1;",
          "1198:  }",
          "",
          "[Removed Lines]",
          "1196:   }",
          "",
          "[Added Lines]",
          "1196:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bdd8fa72224bf4ca286ff4ee365d39d075b18187",
      "candidate_info": {
        "commit_hash": "bdd8fa72224bf4ca286ff4ee365d39d075b18187",
        "repo": "the-tcpdump-group/libpcap",
        "commit_url": "https://github.com/the-tcpdump-group/libpcap/commit/bdd8fa72224bf4ca286ff4ee365d39d075b18187",
        "files": [
          "rpcapd/daemon.c"
        ],
        "message": "Get rid of trailing white space.",
        "before_after_code_files": [
          "rpcapd/daemon.c||rpcapd/daemon.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "rpcapd/daemon.c||rpcapd/daemon.c"
          ],
          "candidate": [
            "rpcapd/daemon.c||rpcapd/daemon.c"
          ]
        }
      },
      "candidate_diff": {
        "rpcapd/daemon.c||rpcapd/daemon.c": [
          "File: rpcapd/daemon.c -> rpcapd/daemon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1193:    pcap_fmt_errmsg_for_win32_err(errmsgbuf,",
          "1194:        PCAP_ERRBUF_SIZE, error, \"LogonUser() failed\");",
          "1195:    rpcapd_log(LOGPRIO_ERROR, \"%s\", errmsgbuf);",
          "1197:   return -1;",
          "1198:  }",
          "",
          "[Removed Lines]",
          "1196:   }",
          "",
          "[Added Lines]",
          "1196:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bff61ee0b5b6b832faba63ec26a224d2be0a6cf0",
      "candidate_info": {
        "commit_hash": "bff61ee0b5b6b832faba63ec26a224d2be0a6cf0",
        "repo": "the-tcpdump-group/libpcap",
        "commit_url": "https://github.com/the-tcpdump-group/libpcap/commit/bff61ee0b5b6b832faba63ec26a224d2be0a6cf0",
        "files": [
          "rpcapd/daemon.c"
        ],
        "message": "On UN*X, don't tell the client why authentication failed.\n\n\"no such user\" tells the client that the user ID isn't valid and,\ntherefore, that it needn't bother trying to do password cracking for\nthat user ID; just saying that the authentication failed dosn't give\nthem that hint.\n\nThis resolves the third problem in Include Security issue F11: [libpcap]\nRemote Packet Capture Daemon Multiple Authentication Improvements.\n\nThe Windows LogonUser() API returns ERROR_LOGON_FAILURE for both cases,\nso the Windows code doesn't have this issue.  Just return the same\n\"Authentication failed\" message on Windows to the user.\n\nFor various authentication failures *other* than \"no such user\" and\n\"password not valid\", log a message, as there's a problem that may need\ndebugging.  We don't need to tell the end user what the problem is, as\nthey may not bother reporting it and, even if they do, they may not give\nthe full error message.",
        "before_after_code_files": [
          "rpcapd/daemon.c||rpcapd/daemon.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "rpcapd/daemon.c||rpcapd/daemon.c"
          ],
          "candidate": [
            "rpcapd/daemon.c||rpcapd/daemon.c"
          ]
        }
      },
      "candidate_diff": {
        "rpcapd/daemon.c||rpcapd/daemon.c": [
          "File: rpcapd/daemon.c -> rpcapd/daemon.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1415:  HANDLE Token;",
          "1416:  if (LogonUser(username, \".\", password, LOGON32_LOGON_NETWORK, LOGON32_PROVIDER_DEFAULT, &Token) == 0)",
          "1417:  {",
          "1420:   return -1;",
          "1421:  }",
          "",
          "[Removed Lines]",
          "1418:   pcap_fmt_errmsg_for_win32_err(errbuf, PCAP_ERRBUF_SIZE,",
          "1419:       GetLastError(), \"LogonUser() failed\");",
          "",
          "[Added Lines]",
          "1415:  DWORD error;",
          "1417:  char errmsgbuf[PCAP_ERRBUF_SIZE]; // buffer for errors to log",
          "1421:   snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");",
          "1422:   error = GetLastError();",
          "1423:   if (error != ERROR_LOGON_FAILURE)",
          "1424:   {",
          "1427:    pcap_fmt_errmsg_for_win32_err(errmsgbuf,",
          "1428:        PCAP_ERRBUF_SIZE, error, \"LogonUser() failed\");",
          "1429:    rpcapd_log(LOGPRIO_ERROR, \"%s\", errmsgbuf);",
          "1430:   }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1425:  if (ImpersonateLoggedOnUser(Token) == 0)",
          "1426:  {",
          "1428:       GetLastError(), \"ImpersonateLoggedOnUser() failed\");",
          "1429:   CloseHandle(Token);",
          "1430:   return -1;",
          "1431:  }",
          "",
          "[Removed Lines]",
          "1427:   pcap_fmt_errmsg_for_win32_err(errbuf, PCAP_ERRBUF_SIZE,",
          "",
          "[Added Lines]",
          "1438:   snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");",
          "1439:   pcap_fmt_errmsg_for_win32_err(errmsgbuf, PCAP_ERRBUF_SIZE,",
          "1441:   rpcapd_log(LOGPRIO_ERROR, \"%s\", errmsgbuf);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1456:  struct passwd *user;",
          "1457:  char *user_password;",
          "1458: #ifdef HAVE_GETSPNAM",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1469:  int error;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1464:  if ((user = getpwnam(username)) == NULL)",
          "1465:  {",
          "1467:   return -1;",
          "1468:  }",
          "",
          "[Removed Lines]",
          "1466:   snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed: user name or password incorrect\");",
          "",
          "[Added Lines]",
          "1480:   snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1472:  if ((usersp = getspnam(username)) == NULL)",
          "1473:  {",
          "1475:   return -1;",
          "1476:  }",
          "1477:  user_password = usersp->sp_pwdp;",
          "",
          "[Removed Lines]",
          "1474:   snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed: user name or password incorrect\");",
          "",
          "[Added Lines]",
          "1488:   snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1489:  user_password = user->pw_passwd;",
          "1490: #endif",
          "1492:  crypt_password = crypt(password, user_password);",
          "1493:  if (crypt_password == NULL)",
          "1494:  {",
          "1495:   snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");",
          "1496:   return -1;",
          "1497:  }",
          "1498:  if (strcmp(user_password, crypt_password) != 0)",
          "1499:  {",
          "1501:   return -1;",
          "1502:  }",
          "1504:  if (setuid(user->pw_uid))",
          "1505:  {",
          "1506:   pcap_fmt_errmsg_for_errno(errbuf, PCAP_ERRBUF_SIZE,",
          "1508:   return -1;",
          "1509:  }",
          "1512:  {",
          "1513:   pcap_fmt_errmsg_for_errno(errbuf, PCAP_ERRBUF_SIZE,",
          "1514:       errno, \"setgid\");",
          "1515:   return -1;",
          "1516:  }",
          "",
          "[Removed Lines]",
          "1500:   snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed: user name or password incorrect\");",
          "1507:       errno, \"setuid\");",
          "",
          "[Added Lines]",
          "1511:  errno = 0;",
          "1515:   error = errno;",
          "1517:   if (error == 0)",
          "1518:   {",
          "1520:    rpcapd_log(LOGPRIO_ERROR, \"crypt() failed\");",
          "1521:   }",
          "1522:   else",
          "1523:   {",
          "1524:    rpcapd_log(LOGPRIO_ERROR, \"crypt() failed: %s\",",
          "1525:        strerror(error));",
          "1526:   }",
          "1531:   snprintf(errbuf, PCAP_ERRBUF_SIZE, \"Authentication failed\");",
          "1537:   error = errno;",
          "1539:       error, \"setuid\");",
          "1540:   rpcapd_log(LOGPRIO_ERROR, \"setuid() failed: %s\",",
          "1541:       strerror(error));",
          "1547:   error = errno;",
          "1550:   rpcapd_log(LOGPRIO_ERROR, \"setgid() failed: %s\",",
          "1551:       strerror(error));",
          "",
          "---------------"
        ]
      }
    }
  ]
}