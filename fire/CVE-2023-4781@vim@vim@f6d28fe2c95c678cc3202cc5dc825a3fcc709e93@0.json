{
  "cve_id": "CVE-2023-4781",
  "cve_desc": "Heap-based Buffer Overflow in GitHub repository vim/vim prior to 9.0.1873.",
  "repo": "vim/vim",
  "patch_hash": "f6d28fe2c95c678cc3202cc5dc825a3fcc709e93",
  "patch_info": {
    "commit_hash": "f6d28fe2c95c678cc3202cc5dc825a3fcc709e93",
    "repo": "vim/vim",
    "commit_url": "https://github.com/vim/vim/commit/f6d28fe2c95c678cc3202cc5dc825a3fcc709e93",
    "files": [
      "src/ex_cmds.c",
      "src/testdir/crash/vim_regsub_both_poc",
      "src/testdir/test_crash.vim",
      "src/version.c",
      "src/window.c"
    ],
    "message": "patch 9.0.1873: [security] heap-buffer-overflow in vim_regsub_both\n\nProblem:  heap-buffer-overflow in vim_regsub_both\nSolution: Disallow exchanging windows when textlock is active\n\nSigned-off-by: Christian Brabandt <cb@256bit.org>",
    "before_after_code_files": [
      "src/ex_cmds.c||src/ex_cmds.c",
      "src/testdir/test_crash.vim||src/testdir/test_crash.vim",
      "src/version.c||src/version.c",
      "src/window.c||src/window.c"
    ]
  },
  "patch_diff": {
    "src/ex_cmds.c||src/ex_cmds.c": [
      "File: src/ex_cmds.c -> src/ex_cmds.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "4519:   {",
      "4520:       nmatch = curbuf->b_ml.ml_line_count - sub_firstlnum + 1;",
      "4521:       skip_match = TRUE;",
      "4522:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4523:       if (nmatch < 0)",
      "4524:    goto skip;",
      "",
      "---------------"
    ],
    "src/testdir/test_crash.vim||src/testdir/test_crash.vim": [
      "File: src/testdir/test_crash.vim -> src/testdir/test_crash.vim",
      "--- Hunk 1 ---",
      "[Context before]",
      "47:   let file = 'crash/poc_tagfunc.vim'",
      "48:   let args = printf(cmn_args, vim, file)",
      "49:   call term_sendkeys(buf, args ..",
      "50:     \\ '  || echo \"crash 5: [OK]\" >> X_crash1_result.txt' .. \"\\<cr>\")",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "49:   \" using || because this poc causes vim to exit with exitstatus != 0",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "59:   call delete('X')",
      "60:   call TermWait(buf, 3000)",
      "62:   \" clean up",
      "63:   exe buf .. \"bw!\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "63:   let file = 'crash/vim_regsub_both_poc'",
      "64:   let args = printf(cmn_args, vim, file)",
      "65:   \" using || because this poc causes vim to exit with exitstatus != 0",
      "66:   call term_sendkeys(buf, args ..",
      "67:     \\ '  && echo \"crash 7: [OK]\" >> X_crash1_result.txt' .. \"\\<cr>\")",
      "68:   call TermWait(buf, 1000)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "71:       \\ 'crash 4: [OK]',",
      "72:       \\ 'crash 5: [OK]',",
      "73:       \\ 'crash 6: [OK]',",
      "74:       \\ ]",
      "76:   call assert_equal(expected, getline(1, '$'))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "82:       \\ 'crash 7: [OK]',",
      "",
      "---------------"
    ],
    "src/version.c||src/version.c": [
      "File: src/version.c -> src/version.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "700: static int included_patches[] =",
      "703:     1872,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "703:     1873,",
      "",
      "---------------"
    ],
    "src/window.c||src/window.c": [
      "File: src/window.c -> src/window.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1733:  beep_flush();",
      "1734:  return;",
      "1735:     }",
      "1737: #ifdef FEAT_GUI",
      "1738:     need_mouse_correct = TRUE;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1736:     if (text_or_buf_locked())",
      "1737:     {",
      "1738:  beep_flush();",
      "1739:  return;",
      "1740:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1690ec64ffd784cddddb937870f5891adbb21986",
      "candidate_info": {
        "commit_hash": "1690ec64ffd784cddddb937870f5891adbb21986",
        "repo": "vim/vim",
        "commit_url": "https://github.com/vim/vim/commit/1690ec64ffd784cddddb937870f5891adbb21986",
        "files": [
          "src/testdir/test_crash.vim",
          "src/testdir/test_xxd.vim",
          "src/version.c"
        ],
        "message": "patch 9.0.1878: tests running sh have problems\n\nProblem:  tests running sh have problems\nSolution: Check that dash is installed\n\ncloses: #13040\n\nSigned-off-by: Christian Brabandt <cb@256bit.org>\nCo-authored-by: Philip H <47042125+pheiduck@users.noreply.github.com>\nCo-authored-by: Christian Brabandt <cb@256bit.org>",
        "before_after_code_files": [
          "src/testdir/test_crash.vim||src/testdir/test_crash.vim",
          "src/testdir/test_xxd.vim||src/testdir/test_xxd.vim",
          "src/version.c||src/version.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/testdir/test_crash.vim||src/testdir/test_crash.vim",
            "src/version.c||src/version.c"
          ],
          "candidate": [
            "src/testdir/test_crash.vim||src/testdir/test_crash.vim",
            "src/version.c||src/version.c"
          ]
        }
      },
      "candidate_diff": {
        "src/testdir/test_crash.vim||src/testdir/test_crash.vim": [
          "File: src/testdir/test_crash.vim -> src/testdir/test_crash.vim",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: func Test_crash1()",
          "8:   CheckNotBSD",
          "13:   \" The following used to crash Vim",
          "14:   let opts = #{cmd: 'sh'}",
          "15:   let vim  = GetVimProg()",
          "",
          "[Removed Lines]",
          "10:   if !executable('sh')",
          "11:     throw 'Skipped: sh not executable!'",
          "12:   endif",
          "",
          "[Added Lines]",
          "9:   CheckExecutable dash",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:   let args = printf(cmn_args, vim, file)",
          "65:   call term_sendkeys(buf, args ..",
          "66:     \\ '  && echo \"crash 7: [OK]\" >> X_crash1_result.txt' .. \"\\<cr>\")",
          "69:   \" clean up",
          "70:   exe buf .. \"bw!\"",
          "",
          "[Removed Lines]",
          "67:   call TermWait(buf, 1000)",
          "",
          "[Added Lines]",
          "65:   call TermWait(buf, 3000)",
          "",
          "---------------"
        ],
        "src/testdir/test_xxd.vim||src/testdir/test_xxd.vim": [
          "File: src/testdir/test_xxd.vim -> src/testdir/test_xxd.vim",
          "--- Hunk 1 ---",
          "[Context before]",
          "552:   CheckUnix",
          "553:   CheckNotMac",
          "554:   CheckNotBSD",
          "556:   \"Note Quotation mark escaped",
          "557:   \"Note Aposhpere vaihdettu apostrophe replaced with 0x00",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "555:   CheckExecutable dash",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "578:   call system(s:xxd_cmd .. ' -r < Xinput > XXDfile_colors')",
          "580:   let $PS1='$ '",
          "581:   let buf = RunVimInTerminal('', #{rows: 20, cmd: 'sh'})",
          "582:   call term_sendkeys(buf,  s:xxd_cmd .. \" -R never  < XXDfile_colors\\<cr>\")",
          "583:   call TermWait(buf)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "582:   \" This needs dash, plain bashs sh does not seem to work :(",
          "",
          "---------------"
        ],
        "src/version.c||src/version.c": [
          "File: src/version.c -> src/version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "700: static int included_patches[] =",
          "703:     1877,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "703:     1878,",
          "",
          "---------------"
        ]
      }
    }
  ]
}