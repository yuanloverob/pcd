{
  "cve_id": "CVE-2024-25678",
  "cve_desc": "In LiteSpeed QUIC (LSQUIC) Library before 4.0.4, DCID validation is mishandled.",
  "repo": "litespeedtech/lsquic",
  "patch_hash": "515f453556c99d27c4dddb5424898dc1a5537708",
  "patch_info": {
    "commit_hash": "515f453556c99d27c4dddb5424898dc1a5537708",
    "repo": "litespeedtech/lsquic",
    "commit_url": "https://github.com/litespeedtech/lsquic/commit/515f453556c99d27c4dddb5424898dc1a5537708",
    "files": [
      "src/liblsquic/lsquic_full_conn_ietf.c"
    ],
    "message": "Release 4.0.4",
    "before_after_code_files": [
      "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c"
    ]
  },
  "patch_diff": {
    "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c": [
      "File: src/liblsquic/lsquic_full_conn_ietf.c -> src/liblsquic/lsquic_full_conn_ietf.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "7284:     struct conn_cid_elem *cce;",
      "7288:     for (cce = lconn->cn_cces; cce < END_OF_CCES(lconn); ++cce)",
      "7289:         if (cce - lconn->cn_cces != lconn->cn_cur_cce_idx",
      "",
      "[Removed Lines]",
      "7286:     LSQ_DEBUG(\"peer switched its DCID, attempt to switch own SCID\");",
      "",
      "[Added Lines]",
      "7286:     LSQ_DEBUGC(\"peer switched its DCID to %\"CID_FMT",
      "7287:               \", attempt to switch own SCID\", CID_BITS(dcid_in));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "7545:                                                     << packet_in->pi_path_id);",
      "7546:                 }",
      "7547:             }",
      "7549:             {",
      "7550:                 if (0 != on_dcid_change(conn, &packet_in->pi_dcid))",
      "7551:                     return -1;",
      "",
      "[Removed Lines]",
      "7548:             else if (is_dcid_changed)",
      "",
      "[Added Lines]",
      "7549:             else if (is_dcid_changed",
      "7550:                 && !LSQUIC_CIDS_EQ(CN_SCID(&conn->ifc_conn),",
      "7551:                                    &packet_in->pi_dcid))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d3582f34f0b8dcdb64b3d6b0a25d351bc96f8cdf",
      "candidate_info": {
        "commit_hash": "d3582f34f0b8dcdb64b3d6b0a25d351bc96f8cdf",
        "repo": "litespeedtech/lsquic",
        "commit_url": "https://github.com/litespeedtech/lsquic/commit/d3582f34f0b8dcdb64b3d6b0a25d351bc96f8cdf",
        "files": [
          "CHANGELOG",
          "docs/conf.py",
          "include/lsquic.h",
          "src/liblsquic/ls-qpack",
          "src/liblsquic/lsquic_conn.c",
          "src/liblsquic/lsquic_conn.h",
          "src/liblsquic/lsquic_enc_sess_ietf.c",
          "src/liblsquic/lsquic_engine.c",
          "src/liblsquic/lsquic_engine_public.h",
          "src/liblsquic/lsquic_full_conn_ietf.c",
          "src/liblsquic/lsquic_mini_conn_ietf.c",
          "src/liblsquic/lsquic_packet_common.c",
          "src/liblsquic/lsquic_packet_common.h",
          "src/liblsquic/lsquic_parse_common.c",
          "src/liblsquic/lsquic_parse_iquic_common.c",
          "src/liblsquic/lsquic_version.c",
          "src/liblsquic/lsquic_version.h"
        ],
        "message": "Release 4.1.0",
        "before_after_code_files": [
          "include/lsquic.h||include/lsquic.h",
          "src/liblsquic/lsquic_conn.c||src/liblsquic/lsquic_conn.c",
          "src/liblsquic/lsquic_conn.h||src/liblsquic/lsquic_conn.h",
          "src/liblsquic/lsquic_enc_sess_ietf.c||src/liblsquic/lsquic_enc_sess_ietf.c",
          "src/liblsquic/lsquic_engine.c||src/liblsquic/lsquic_engine.c",
          "src/liblsquic/lsquic_engine_public.h||src/liblsquic/lsquic_engine_public.h",
          "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c",
          "src/liblsquic/lsquic_mini_conn_ietf.c||src/liblsquic/lsquic_mini_conn_ietf.c",
          "src/liblsquic/lsquic_packet_common.c||src/liblsquic/lsquic_packet_common.c",
          "src/liblsquic/lsquic_packet_common.h||src/liblsquic/lsquic_packet_common.h",
          "src/liblsquic/lsquic_parse_common.c||src/liblsquic/lsquic_parse_common.c",
          "src/liblsquic/lsquic_parse_iquic_common.c||src/liblsquic/lsquic_parse_iquic_common.c",
          "src/liblsquic/lsquic_version.c||src/liblsquic/lsquic_version.c",
          "src/liblsquic/lsquic_version.h||src/liblsquic/lsquic_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c"
          ],
          "candidate": [
            "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c"
          ]
        }
      },
      "candidate_diff": {
        "include/lsquic.h||include/lsquic.h": [
          "File: include/lsquic.h -> include/lsquic.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #endif",
          "28: #define LSQUIC_MAJOR_VERSION 4",
          "",
          "[Removed Lines]",
          "29: #define LSQUIC_MINOR_VERSION 0",
          "30: #define LSQUIC_PATCH_VERSION 12",
          "",
          "[Added Lines]",
          "29: #define LSQUIC_MINOR_VERSION 1",
          "30: #define LSQUIC_PATCH_VERSION 0",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1379:     void                               (*ea_generate_scid)(void *ctx,",
          "1382:     void                                *ea_gen_scid_ctx;",
          "1383: };",
          "",
          "[Removed Lines]",
          "1380:                                 lsquic_conn_t *, lsquic_cid_t *, unsigned);",
          "",
          "[Added Lines]",
          "1380:                                 lsquic_conn_t *, uint8_t *, unsigned);",
          "1388: unsigned",
          "1389: lsquic_engine_get_conns_count (lsquic_engine_t *engine);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1438:         const struct sockaddr *sa_local, const struct sockaddr *sa_peer,",
          "1439:         void *peer_ctx, int ecn);",
          "",
          "[Removed Lines]",
          "1444: unsigned",
          "1445: lsquic_engine_get_conns_count (lsquic_engine_t *engine);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2086: int",
          "2087: lsquic_dcid_from_packet (const unsigned char *, size_t bufsz,",
          "",
          "[Removed Lines]",
          "2088:                                 unsigned server_cid_len, unsigned *cid_len);",
          "",
          "[Added Lines]",
          "2088:                                 unsigned server_cid_len, uint8_t *cid_len);",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_conn.c||src/liblsquic/lsquic_conn.c": [
          "File: src/liblsquic/lsquic_conn.c -> src/liblsquic/lsquic_conn.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "241: void",
          "243:                                                                 unsigned len)",
          "244: {",
          "245:     if (len)",
          "249: }",
          "252: void",
          "253: lsquic_generate_cid_gquic (lsquic_cid_t *cid)",
          "254: {",
          "256: }",
          "",
          "[Removed Lines]",
          "242: lsquic_generate_scid (void *ctx, struct lsquic_conn *lconn, lsquic_cid_t *scid,",
          "246:         lsquic_generate_cid(scid, len);",
          "247:     else",
          "248:         scid->len = len;",
          "255:     lsquic_generate_cid(cid, GQUIC_CID_LEN);",
          "",
          "[Added Lines]",
          "242: lsquic_generate_scid (void *ctx, struct lsquic_conn *lconn, uint8_t *cid,",
          "246:         RAND_bytes(cid, len);",
          "253:     RAND_bytes(cid->idbuf, GQUIC_CID_LEN);",
          "254:     cid->len = GQUIC_CID_LEN;",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_conn.h||src/liblsquic/lsquic_conn.h": [
          "File: src/liblsquic/lsquic_conn.h -> src/liblsquic/lsquic_conn.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "394: lsquic_generate_cid_gquic (lsquic_cid_t *cid);",
          "396: void",
          "398:                                                                 unsigned len);",
          "400: void",
          "",
          "[Removed Lines]",
          "397: lsquic_generate_scid (void *, struct lsquic_conn *lconn, lsquic_cid_t *scid,",
          "",
          "[Added Lines]",
          "397: lsquic_generate_scid (void *, struct lsquic_conn *lconn, uint8_t *scid,",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_enc_sess_ietf.c||src/liblsquic/lsquic_enc_sess_ietf.c": [
          "File: src/liblsquic/lsquic_enc_sess_ietf.c -> src/liblsquic/lsquic_enc_sess_ietf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "607:             cce->cce_seqno = seqno + 1;",
          "608:             cce->cce_flags = CCE_SEQNO;",
          "610:             enc_sess->esi_enpub->enp_generate_scid(",
          "611:                 enc_sess->esi_enpub->enp_gen_scid_ctx, enc_sess->esi_conn,",
          "",
          "[Removed Lines]",
          "612:                 &cce->cce_cid, enc_sess->esi_enpub->enp_settings.es_scid_len);",
          "",
          "[Added Lines]",
          "610:             cce->cce_cid.len = enc_sess->esi_enpub->enp_settings.es_scid_len;",
          "613:                 cce->cce_cid.buf, cce->cce_cid.len);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1181:     char hexbuf[EVP_MAX_MD_SIZE * 2 + 1];",
          "1182:     struct label_set *labels;",
          "1184:     if (!enc_sess->esi_hsk_crypto)",
          "1185:     {",
          "1186:         enc_sess->esi_hsk_crypto = calloc(N_HSK_PAIRS,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1185:     LSQ_INFOC(\"setup_handshake_keys for DCID %\"CID_FMT, CID_BITS(cid));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2746:     else",
          "2747:         memset(&enc_sess->esi_hsk_crypto[ENC_LEV_INIT], 0,",
          "2748:                sizeof(enc_sess->esi_hsk_crypto[ENC_LEV_INIT]));",
          "2751:     {",
          "2752:         LSQ_INFO(\"update handshake keys to version %s\",",
          "2753:                  lsquic_ver2str[enc_sess->esi_conn->cn_version]);",
          "",
          "[Removed Lines]",
          "2750:     if (0 == setup_handshake_keys(enc_sess, dcid ? dcid : &enc_sess->esi_odcid))",
          "",
          "[Added Lines]",
          "2752:     if (!dcid)",
          "2753:     {",
          "2754:         if (enc_sess->esi_flags & ESI_RETRY)",
          "2755:             dcid = &enc_sess->esi_rscid;",
          "2756:         else",
          "2757:             dcid = &enc_sess->esi_odcid;",
          "2758:     }",
          "2759:     if (0 == setup_handshake_keys(enc_sess, dcid))",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_engine.c||src/liblsquic/lsquic_engine.c": [
          "File: src/liblsquic/lsquic_engine.c -> src/liblsquic/lsquic_engine.c"
        ],
        "src/liblsquic/lsquic_engine_public.h||src/liblsquic/lsquic_engine_public.h": [
          "File: src/liblsquic/lsquic_engine_public.h -> src/liblsquic/lsquic_engine_public.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     const struct lsquic_hset_if    *enp_hsi_if;",
          "50:     void                           *enp_hsi_ctx;",
          "51:     void                          (*enp_generate_scid)(void *,",
          "53:     void                           *enp_gen_scid_ctx;",
          "54:     int                           (*enp_verify_cert)(void *verify_ctx,",
          "55:                                             struct stack_st_X509 *chain);",
          "",
          "[Removed Lines]",
          "52:                         struct lsquic_conn *, struct lsquic_cid *, unsigned);",
          "",
          "[Added Lines]",
          "52:                         struct lsquic_conn *, uint8_t *, unsigned);",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c": [
          "File: src/liblsquic/lsquic_full_conn_ietf.c -> src/liblsquic/lsquic_full_conn_ietf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1196:     }",
          "1198:     if (enpub->enp_settings.es_scid_len)",
          "1202:     cce->cce_seqno = conn->ifc_scid_seqno++;",
          "1203:     cce->cce_flags |= CCE_SEQNO | flags;",
          "",
          "[Removed Lines]",
          "1199:         enpub->enp_generate_scid(enpub->enp_gen_scid_ctx, lconn, &cce->cce_cid,",
          "1200:                                             enpub->enp_settings.es_scid_len);",
          "",
          "[Added Lines]",
          "1199:     {",
          "1200:         cce->cce_cid.len = enpub->enp_settings.es_scid_len;",
          "1201:         enpub->enp_generate_scid(enpub->enp_gen_scid_ctx, lconn,",
          "1202:                                  cce->cce_cid.buf, cce->cce_cid.len);",
          "1203:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7254:         LSQ_DEBUG(\"cannot verify retry packet: ignore it\");",
          "7255:         return 0;",
          "7256:     }",
          "7258:     if (0 != lsquic_send_ctl_retry(&conn->ifc_send_ctl,",
          "7259:                     packet_in->pi_data + packet_in->pi_token,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7260:     LSQ_INFO(\"Received a retry packet.  Will retry.\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "7272:     lsquic_alarmset_unset(&conn->ifc_alset, AL_RETX_HSK);",
          "7273:     lsquic_alarmset_unset(&conn->ifc_alset, AL_RETX_APP);",
          "7276:     conn->ifc_flags |= IFC_RETRIED;",
          "7277:     return 0;",
          "7278: }",
          "",
          "[Removed Lines]",
          "7275:     LSQ_INFO(\"Received a retry packet.  Will retry.\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_mini_conn_ietf.c||src/liblsquic/lsquic_mini_conn_ietf.c": [
          "File: src/liblsquic/lsquic_mini_conn_ietf.c -> src/liblsquic/lsquic_mini_conn_ietf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "581:     conn->imc_conn.cn_n_cces = sizeof(conn->imc_cces)",
          "582:                                                 / sizeof(conn->imc_cces[0]);",
          "583:     conn->imc_cces[0].cce_cid = packet_in->pi_dcid;",
          "585:     conn->imc_conn.cn_cces_mask = 1;",
          "586:     lsquic_scid_from_packet_in(packet_in, &conn->imc_path.np_dcid);",
          "590:     enpub->enp_generate_scid(enpub->enp_gen_scid_ctx, &conn->imc_conn,",
          "593:     if (conn->imc_path.np_dcid.len)",
          "594:         conn->imc_conn.cn_logid = conn->imc_path.np_dcid;",
          "",
          "[Removed Lines]",
          "584:     conn->imc_cces[0].cce_flags = CCE_USED;",
          "591:         &conn->imc_conn.cn_cces[1].cce_cid, enpub->enp_settings.es_scid_len);",
          "",
          "[Added Lines]",
          "584:     conn->imc_cces[0].cce_flags = CCE_USED | CCE_REG;",
          "590:     conn->imc_conn.cn_cces[1].cce_cid.len = enpub->enp_settings.es_scid_len;",
          "592:         conn->imc_conn.cn_cces[1].cce_cid.buf, enpub->enp_settings.es_scid_len);",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_packet_common.c||src/liblsquic/lsquic_packet_common.c": [
          "File: src/liblsquic/lsquic_packet_common.c -> src/liblsquic/lsquic_packet_common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: #include \"lsquic_packet_common.h\"",
          "17: const char *",
          "18: lsquic_frame_types_to_str (char *buf, size_t bufsz,",
          "19:                                            enum quic_ft_bit frame_types)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: const char * const frame_type_2_str[N_QUIC_FRAMES] = {",
          "18:     [QUIC_FRAME_INVALID]           =  \"QUIC_FRAME_INVALID\",",
          "19:     [QUIC_FRAME_STREAM]            =  \"QUIC_FRAME_STREAM\",",
          "20:     [QUIC_FRAME_ACK]               =  \"QUIC_FRAME_ACK\",",
          "21:     [QUIC_FRAME_PADDING]           =  \"QUIC_FRAME_PADDING\",",
          "22:     [QUIC_FRAME_RST_STREAM]        =  \"QUIC_FRAME_RST_STREAM\",",
          "23:     [QUIC_FRAME_CONNECTION_CLOSE]  =  \"QUIC_FRAME_CONNECTION_CLOSE\",",
          "24:     [QUIC_FRAME_GOAWAY]            =  \"QUIC_FRAME_GOAWAY\",",
          "25:     [QUIC_FRAME_WINDOW_UPDATE]     =  \"QUIC_FRAME_WINDOW_UPDATE\",",
          "26:     [QUIC_FRAME_BLOCKED]           =  \"QUIC_FRAME_BLOCKED\",",
          "27:     [QUIC_FRAME_STOP_WAITING]      =  \"QUIC_FRAME_STOP_WAITING\",",
          "28:     [QUIC_FRAME_PING]              =  \"QUIC_FRAME_PING\",",
          "29:     [QUIC_FRAME_MAX_DATA]          =  \"QUIC_FRAME_MAX_DATA\",",
          "30:     [QUIC_FRAME_MAX_STREAM_DATA]   =  \"QUIC_FRAME_MAX_STREAM_DATA\",",
          "31:     [QUIC_FRAME_MAX_STREAMS]       =  \"QUIC_FRAME_MAX_STREAMS\",",
          "32:     [QUIC_FRAME_STREAM_BLOCKED]    =  \"QUIC_FRAME_STREAM_BLOCKED\",",
          "33:     [QUIC_FRAME_STREAMS_BLOCKED]   =  \"QUIC_FRAME_STREAMS_BLOCKED\",",
          "34:     [QUIC_FRAME_NEW_CONNECTION_ID] =  \"QUIC_FRAME_NEW_CONNECTION_ID\",",
          "35:     [QUIC_FRAME_STOP_SENDING]      =  \"QUIC_FRAME_STOP_SENDING\",",
          "36:     [QUIC_FRAME_PATH_CHALLENGE]    =  \"QUIC_FRAME_PATH_CHALLENGE\",",
          "37:     [QUIC_FRAME_PATH_RESPONSE]     =  \"QUIC_FRAME_PATH_RESPONSE\",",
          "38:     [QUIC_FRAME_CRYPTO]            =  \"QUIC_FRAME_CRYPTO\",",
          "39:     [QUIC_FRAME_NEW_TOKEN]         =  \"QUIC_FRAME_NEW_TOKEN\",",
          "40:     [QUIC_FRAME_RETIRE_CONNECTION_ID]  =  \"QUIC_FRAME_RETIRE_CONNECTION_ID\",",
          "41:     [QUIC_FRAME_HANDSHAKE_DONE]    =  \"QUIC_FRAME_HANDSHAKE_DONE\",",
          "42:     [QUIC_FRAME_ACK_FREQUENCY]     =  \"QUIC_FRAME_ACK_FREQUENCY\",",
          "43:     [QUIC_FRAME_TIMESTAMP]         =  \"QUIC_FRAME_TIMESTAMP\",",
          "44:     [QUIC_FRAME_DATAGRAM]          =  \"QUIC_FRAME_DATAGRAM\",",
          "45: };",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_packet_common.h||src/liblsquic/lsquic_packet_common.h": [
          "File: src/liblsquic/lsquic_packet_common.h -> src/liblsquic/lsquic_packet_common.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:     QUIC_FTBIT_DATAGRAM          = 1 << QUIC_FRAME_DATAGRAM,",
          "71: };",
          "103: #define QUIC_FRAME_PRELEN   (sizeof(\"QUIC_FRAME_\"))",
          "104: #define QUIC_FRAME_SLEN(x)  (sizeof(#x) - QUIC_FRAME_PRELEN)",
          "",
          "[Removed Lines]",
          "73: static const char * const frame_type_2_str[N_QUIC_FRAMES] = {",
          "74:     [QUIC_FRAME_INVALID]           =  \"QUIC_FRAME_INVALID\",",
          "75:     [QUIC_FRAME_STREAM]            =  \"QUIC_FRAME_STREAM\",",
          "76:     [QUIC_FRAME_ACK]               =  \"QUIC_FRAME_ACK\",",
          "77:     [QUIC_FRAME_PADDING]           =  \"QUIC_FRAME_PADDING\",",
          "78:     [QUIC_FRAME_RST_STREAM]        =  \"QUIC_FRAME_RST_STREAM\",",
          "79:     [QUIC_FRAME_CONNECTION_CLOSE]  =  \"QUIC_FRAME_CONNECTION_CLOSE\",",
          "80:     [QUIC_FRAME_GOAWAY]            =  \"QUIC_FRAME_GOAWAY\",",
          "81:     [QUIC_FRAME_WINDOW_UPDATE]     =  \"QUIC_FRAME_WINDOW_UPDATE\",",
          "82:     [QUIC_FRAME_BLOCKED]           =  \"QUIC_FRAME_BLOCKED\",",
          "83:     [QUIC_FRAME_STOP_WAITING]      =  \"QUIC_FRAME_STOP_WAITING\",",
          "84:     [QUIC_FRAME_PING]              =  \"QUIC_FRAME_PING\",",
          "85:     [QUIC_FRAME_MAX_DATA]          =  \"QUIC_FRAME_MAX_DATA\",",
          "86:     [QUIC_FRAME_MAX_STREAM_DATA]   =  \"QUIC_FRAME_MAX_STREAM_DATA\",",
          "87:     [QUIC_FRAME_MAX_STREAMS]       =  \"QUIC_FRAME_MAX_STREAMS\",",
          "88:     [QUIC_FRAME_STREAM_BLOCKED]    =  \"QUIC_FRAME_STREAM_BLOCKED\",",
          "89:     [QUIC_FRAME_STREAMS_BLOCKED]   =  \"QUIC_FRAME_STREAMS_BLOCKED\",",
          "90:     [QUIC_FRAME_NEW_CONNECTION_ID] =  \"QUIC_FRAME_NEW_CONNECTION_ID\",",
          "91:     [QUIC_FRAME_STOP_SENDING]      =  \"QUIC_FRAME_STOP_SENDING\",",
          "92:     [QUIC_FRAME_PATH_CHALLENGE]    =  \"QUIC_FRAME_PATH_CHALLENGE\",",
          "93:     [QUIC_FRAME_PATH_RESPONSE]     =  \"QUIC_FRAME_PATH_RESPONSE\",",
          "94:     [QUIC_FRAME_CRYPTO]            =  \"QUIC_FRAME_CRYPTO\",",
          "95:     [QUIC_FRAME_NEW_TOKEN]         =  \"QUIC_FRAME_NEW_TOKEN\",",
          "96:     [QUIC_FRAME_RETIRE_CONNECTION_ID]  =  \"QUIC_FRAME_RETIRE_CONNECTION_ID\",",
          "97:     [QUIC_FRAME_HANDSHAKE_DONE]    =  \"QUIC_FRAME_HANDSHAKE_DONE\",",
          "98:     [QUIC_FRAME_ACK_FREQUENCY]     =  \"QUIC_FRAME_ACK_FREQUENCY\",",
          "99:     [QUIC_FRAME_TIMESTAMP]         =  \"QUIC_FRAME_TIMESTAMP\",",
          "100:     [QUIC_FRAME_DATAGRAM]          =  \"QUIC_FRAME_DATAGRAM\",",
          "101: };",
          "",
          "[Added Lines]",
          "73: extern const char * const frame_type_2_str[N_QUIC_FRAMES];",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_parse_common.c||src/liblsquic/lsquic_parse_common.c": [
          "File: src/liblsquic/lsquic_parse_common.c -> src/liblsquic/lsquic_parse_common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "221: int",
          "222: lsquic_dcid_from_packet (const unsigned char *buf, size_t bufsz,",
          "224: {",
          "225:     const unsigned char *p;",
          "226:     unsigned dcil, scil;",
          "",
          "[Removed Lines]",
          "223:                                 unsigned server_cid_len, unsigned *cid_len)",
          "",
          "[Added Lines]",
          "223:                                 unsigned server_cid_len, uint8_t *cid_len)",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_parse_iquic_common.c||src/liblsquic/lsquic_parse_iquic_common.c": [
          "File: src/liblsquic/lsquic_parse_iquic_common.c -> src/liblsquic/lsquic_parse_iquic_common.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "430:     memcpy(p, scid->idbuf, scid->len);",
          "431:     p += scid->len;",
          "434:     p += our_scid_len;",
          "435:     sz = lsquic_tg_generate_retry(tokgen, p, end - p,",
          "436:                         p - our_scid_len, our_scid_len, sockaddr, dcid);",
          "",
          "[Removed Lines]",
          "433:     RAND_bytes(p, our_scid_len);",
          "",
          "[Added Lines]",
          "433:     enpub->enp_generate_scid(enpub->enp_gen_scid_ctx, NULL, p, our_scid_len);",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_version.c||src/liblsquic/lsquic_version.c": [
          "File: src/liblsquic/lsquic_version.c -> src/liblsquic/lsquic_version.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: {",
          "54:     unsigned char ch;",
          "55:     ch = *tag;",
          "57:     {",
          "62:     }",
          "63:     else if (ch == 0x6b && *(tag + 1) == 0x33",
          "64:              && *(tag + 2) == 0x43 && *(tag + 3) == 0xcf)",
          "65:     {",
          "66:         return LSQVER_I002;",
          "67:     }",
          "69:     {",
          "70:         if (*(tag + 3) == 0x01)",
          "71:             return LSQVER_I001;",
          "",
          "[Removed Lines]",
          "56:     if (ch == 'Q' && *(tag + 1) == '0')",
          "58:         if (*(tag + 2) == '5' && *(tag + 3) == '0')",
          "59:             return LSQVER_050;",
          "60:         else if (*(tag + 2) == '4' && *(tag + 3) == '6')",
          "61:             return LSQVER_046;",
          "68:     else if (ch == '\\0' && *(tag + 1) == 0 && *(tag + 2) == 0)",
          "",
          "[Added Lines]",
          "56:     if (ch == '\\0' && *(tag + 1) == 0 && *(tag + 2) == 0)",
          "58:         if (*(tag + 3) == 0x01)",
          "59:             return LSQVER_I001;",
          "60:         else if (*(tag + 3) == 0x00)",
          "61:             return LSQVER_VERNEG;",
          "62:     }",
          "63:     else if (ch == 0xff && *(tag + 1) == 0 && *(tag + 2) == 0)",
          "64:     {",
          "65:         if (*(tag + 3) == 0x1D)",
          "66:             return LSQVER_ID29;",
          "67:         else if (*(tag + 3) == 0x1B)",
          "68:             return LSQVER_ID27;",
          "75:     else if (ch == 'Q' && *(tag + 1) == '0')",
          "76:     {",
          "77:         if (*(tag + 2) == '5' && *(tag + 3) == '0')",
          "78:             return LSQVER_050;",
          "79:         else if (*(tag + 2) == '4' && *(tag + 3) == '6')",
          "80:             return LSQVER_046;",
          "81:     }",
          "82:     else if ((ch & 0xf) == 0xa && (*(tag + 1) & 0xf) == 0xa",
          "83:             && (*(tag + 2) & 0xf) == 0xa && (*(tag + 3) & 0xf) == 0xa)",
          "84:         return LSQVER_RESVED;",
          "85:     return N_LSQVER;",
          "86: }",
          "89: enum lsquic_version",
          "90: lsquic_tag2ver_ietf (const unsigned char *tag)",
          "91: {",
          "92:     unsigned char ch;",
          "93:     ch = *tag;",
          "94:     if (ch == '\\0' && *(tag + 1) == 0 && *(tag + 2) == 0)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:         else if (*(tag + 3) == 0x1B)",
          "80:             return LSQVER_ID27;",
          "81:     }",
          "82:     else if ((ch & 0xf) == 0xa && (*(tag + 1) & 0xf) == 0xa",
          "83:             && (*(tag + 2) & 0xf) == 0xa && (*(tag + 3) & 0xf) == 0xa)",
          "84:         return LSQVER_RESVED;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "108:     else if (ch == 0x6b && *(tag + 1) == 0x33",
          "109:              && *(tag + 2) == 0x43 && *(tag + 3) == 0xcf)",
          "110:     {",
          "111:         return LSQVER_I002;",
          "112:     }",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_version.h||src/liblsquic/lsquic_version.h": [
          "File: src/liblsquic/lsquic_version.h -> src/liblsquic/lsquic_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: enum lsquic_version",
          "15: lsquic_tag2ver (uint32_t ver_tag);",
          "17: enum lsquic_version",
          "18: lsquic_tag2ver_fast (const unsigned char * tag);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: enum lsquic_version",
          "18: lsquic_tag2ver_ietf (const unsigned char *tag);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aa3b438a67d3c7e01c8316d58d40fa9bce434c58",
      "candidate_info": {
        "commit_hash": "aa3b438a67d3c7e01c8316d58d40fa9bce434c58",
        "repo": "litespeedtech/lsquic",
        "commit_url": "https://github.com/litespeedtech/lsquic/commit/aa3b438a67d3c7e01c8316d58d40fa9bce434c58",
        "files": [
          "CHANGELOG",
          "docs/conf.py",
          "include/lsquic.h",
          "src/liblsquic/lsquic_full_conn_ietf.c",
          "src/liblsquic/lsquic_send_ctl.c",
          "src/liblsquic/lsquic_stream.c"
        ],
        "message": "Release 4.0.8",
        "before_after_code_files": [
          "include/lsquic.h||include/lsquic.h",
          "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c",
          "src/liblsquic/lsquic_send_ctl.c||src/liblsquic/lsquic_send_ctl.c",
          "src/liblsquic/lsquic_stream.c||src/liblsquic/lsquic_stream.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_message": 1,
        "olp_code_files": {
          "patch": [
            "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c"
          ],
          "candidate": [
            "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c"
          ]
        }
      },
      "candidate_diff": {
        "include/lsquic.h||include/lsquic.h": [
          "File: include/lsquic.h -> include/lsquic.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: #define LSQUIC_MAJOR_VERSION 4",
          "29: #define LSQUIC_MINOR_VERSION 0",
          "",
          "[Removed Lines]",
          "30: #define LSQUIC_PATCH_VERSION 7",
          "",
          "[Added Lines]",
          "30: #define LSQUIC_PATCH_VERSION 8",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_full_conn_ietf.c||src/liblsquic/lsquic_full_conn_ietf.c": [
          "File: src/liblsquic/lsquic_full_conn_ietf.c -> src/liblsquic/lsquic_full_conn_ietf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "467:     }                           ifc_peer_hq_settings;",
          "468:     struct dcid_elem           *ifc_dces[MAX_IETF_CONN_DCIDS];",
          "469:     TAILQ_HEAD(, dcid_elem)     ifc_to_retire;",
          "470:     unsigned                    ifc_scid_seqno;",
          "471:     lsquic_time_t               ifc_scid_timestamp[MAX_SCID];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "470:     unsigned                    ifc_n_to_retire;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1277:     TAILQ_INIT(&conn->ifc_pub.service_streams);",
          "1278:     STAILQ_INIT(&conn->ifc_stream_ids_to_ss);",
          "1279:     TAILQ_INIT(&conn->ifc_to_retire);",
          "1281:     lsquic_alarmset_init(&conn->ifc_alset, &conn->ifc_conn);",
          "1282:     lsquic_alarmset_init_alarm(&conn->ifc_alset, AL_IDLE, idle_alarm_expired, conn);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1281:     conn->ifc_n_to_retire = 0;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2293:     lsquic_send_ctl_incr_pack_sz(&conn->ifc_send_ctl, packet_out, w);",
          "2295:     TAILQ_REMOVE(&conn->ifc_to_retire, dce, de_next_to_ret);",
          "2296:     lsquic_malo_put(dce);",
          "2298:     if (TAILQ_EMPTY(&conn->ifc_to_retire))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2298:     --conn->ifc_n_to_retire;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2307: {",
          "2308:     int s;",
          "2310:     do",
          "2311:         s = generate_retire_cid_frame(conn);",
          "2312:     while (0 == s && (conn->ifc_send_flags & SF_SEND_RETIRE_CID));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2313:     if (conn->ifc_n_to_retire >= MAX_IETF_CONN_DCIDS * 3)",
          "2314:     {",
          "2315:         ABORT_QUIETLY(0, TEC_CONNECTION_ID_LIMIT_ERROR,",
          "2316:             \"too many (%d) CIDs to retire\", conn->ifc_n_to_retire);",
          "2317:         return;",
          "2318:     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3027:     if ((*dce)->de_hash_el.qhe_flags & QHE_HASHED)",
          "3028:         lsquic_hash_erase(conn->ifc_enpub->enp_srst_hash, &(*dce)->de_hash_el);",
          "3029:     TAILQ_INSERT_TAIL(&conn->ifc_to_retire, *dce, de_next_to_ret);",
          "3030:     LSQ_DEBUG(\"prepare to retire DCID seqno %\"PRIu32\"\", (*dce)->de_seqno);",
          "3032:     conn->ifc_send_flags |= SF_SEND_RETIRE_CID;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3040:     ++conn->ifc_n_to_retire;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3044:         memset(dce, 0, sizeof(*dce));",
          "3045:         dce->de_seqno = seqno;",
          "3046:         TAILQ_INSERT_TAIL(&conn->ifc_to_retire, dce, de_next_to_ret);",
          "3047:         LSQ_DEBUG(\"prepare to retire DCID seqno %\"PRIu32, seqno);",
          "3048:         conn->ifc_send_flags |= SF_SEND_RETIRE_CID;",
          "3049:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3058:         ++conn->ifc_n_to_retire;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3175:     while ((dce = TAILQ_FIRST(&conn->ifc_to_retire)))",
          "3176:     {",
          "3177:         TAILQ_REMOVE(&conn->ifc_to_retire, dce, de_next_to_ret);",
          "3178:         lsquic_malo_put(dce);",
          "3179:     }",
          "3180:     lsquic_send_ctl_cleanup(&conn->ifc_send_ctl);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3190:         --conn->ifc_n_to_retire;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "3376:                                                     sizeof(dce->de_srst));",
          "3377:     dce->de_flags = DE_SRST;",
          "3378:     TAILQ_INSERT_TAIL(&conn->ifc_to_retire, dce, de_next_to_ret);",
          "3379:     LSQ_DEBUG(\"prepare to retire DCID seqno %\"PRIu32, dce->de_seqno);",
          "3380:     conn->ifc_send_flags |= SF_SEND_RETIRE_CID;",
          "3381: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3392:     ++conn->ifc_n_to_retire;",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_send_ctl.c||src/liblsquic/lsquic_send_ctl.c": [
          "File: src/liblsquic/lsquic_send_ctl.c -> src/liblsquic/lsquic_send_ctl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1606:         send_ctl_destroy_packet(ctl, packet_out);",
          "1607:     }",
          "1608:     assert(0 == ctl->sc_n_scheduled);",
          "1610:     for (pns = PNS_INIT; pns < N_PNS; ++pns)",
          "1611:         while ((packet_out = TAILQ_FIRST(&ctl->sc_unacked_packets[pns])))",
          "1612:         {",
          "",
          "[Removed Lines]",
          "1609:     assert(0 == ctl->sc_bytes_scheduled);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/liblsquic/lsquic_stream.c||src/liblsquic/lsquic_stream.c": [
          "File: src/liblsquic/lsquic_stream.c -> src/liblsquic/lsquic_stream.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1888:             {",
          "1889:                 LSQ_DEBUG(\"turned on FIN flag in the yet-unsent STREAM frame\");",
          "1890:                 stream->stream_flags |= STREAM_FIN_SENT;",
          "1891:             }",
          "1892:             else",
          "1893:             {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1891:                 if (stream->sm_qflags & SMQF_WANT_FLUSH)",
          "1892:                 {",
          "1893:                     LSQ_DEBUG(\"turned off SMQF_WANT_FLUSH flag as FIN flag is turned on.\");",
          "1894:                     maybe_remove_from_write_q(stream, SMQF_WANT_FLUSH);",
          "1895:                 }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3459:                 if (use_framing && seen_ok)",
          "3460:                     maybe_close_varsize_hq_frame(stream);",
          "3461:                 stream->stream_flags |= STREAM_FIN_SENT;",
          "3462:                 goto end;",
          "3463:             }",
          "3464:             else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3467:                 if (stream->sm_qflags & SMQF_WANT_FLUSH)",
          "3468:                 {",
          "3469:                     LSQ_DEBUG(\"turned off SMQF_WANT_FLUSH flag as FIN has been sent.\");",
          "3470:                     maybe_remove_from_write_q(stream, SMQF_WANT_FLUSH);",
          "3471:                 }",
          "",
          "---------------"
        ]
      }
    }
  ]
}