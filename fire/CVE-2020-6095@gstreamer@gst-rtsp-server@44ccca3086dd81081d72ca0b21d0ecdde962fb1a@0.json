{
  "cve_id": "CVE-2020-6095",
  "cve_desc": "An exploitable denial of service vulnerability exists in the GstRTSPAuth functionality of GStreamer/gst-rtsp-server 1.14.5. A specially crafted RTSP setup request can cause a null pointer deference resulting in denial-of-service. An attacker can send a malicious packet to trigger this vulnerability.",
  "repo": "gstreamer/gst-rtsp-server",
  "patch_hash": "44ccca3086dd81081d72ca0b21d0ecdde962fb1a",
  "patch_info": {
    "commit_hash": "44ccca3086dd81081d72ca0b21d0ecdde962fb1a",
    "repo": "gstreamer/gst-rtsp-server",
    "commit_url": "https://gitlab.freedesktop.org/gstreamer/gst-rtsp-server/-/commit/44ccca3086dd81081d72ca0b21d0ecdde962fb1a",
    "files": [
      "gst/rtsp-server/rtsp-auth.c"
    ],
    "message": "rtsp-auth: Fix NULL pointer dereference when handling an invalid basic Authorization header\n\nWhen using the basic authentication scheme, we wouldn't validate that\nthe authorization field of the credentials is not NULL and pass it on\nto g_hash_table_lookup(). g_str_hash() however is not NULL-safe and will\ndereference the NULL pointer and crash.\nA specially crafted (read: invalid) RTSP header can cause this to\nhappen.\n\nAs a solution, check for the authorization to be not NULL before\ncontinuing processing it and if it is simply fail authentication.\n\nThis fixes CVE-2020-6095 and TALOS-2020-1018.\n\nDiscovered by Peter Wang of Cisco ASIG.",
    "before_after_code_files": [
      "gst/rtsp-server/rtsp-auth.c||gst/rtsp-server/rtsp-auth.c"
    ]
  },
  "patch_diff": {
    "gst/rtsp-server/rtsp-auth.c||gst/rtsp-server/rtsp-auth.c": [
      "File: gst/rtsp-server/rtsp-auth.c -> gst/rtsp-server/rtsp-auth.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "872:       GST_DEBUG_OBJECT (auth, \"check Basic auth\");",
      "873:       g_mutex_lock (&priv->lock);",
      "875:               g_hash_table_lookup (priv->basic,",
      "876:                   (*credential)->authorization))) {",
      "877:         GST_DEBUG_OBJECT (auth, \"setting token %p\", token);",
      "",
      "[Removed Lines]",
      "874:       if ((token =",
      "",
      "[Added Lines]",
      "874:       if ((*credential)->authorization && (token =",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ccc8d0c4388056acc801fd855e065eb2b0ca6578",
      "candidate_info": {
        "commit_hash": "ccc8d0c4388056acc801fd855e065eb2b0ca6578",
        "repo": "gstreamer/gst-rtsp-server",
        "commit_url": "https://github.com/gstreamer/gst-rtsp-server/commit/ccc8d0c4388056acc801fd855e065eb2b0ca6578",
        "files": [
          "gst/rtsp-server/rtsp-auth.c"
        ],
        "message": "rtsp-auth: Fix NULL pointer dereference when handling an invalid basic Authorization header\n\nWhen using the basic authentication scheme, we wouldn't validate that\nthe authorization field of the credentials is not NULL and pass it on\nto g_hash_table_lookup(). g_str_hash() however is not NULL-safe and will\ndereference the NULL pointer and crash.\nA specially crafted (read: invalid) RTSP header can cause this to\nhappen.\n\nAs a solution, check for the authorization to be not NULL before\ncontinuing processing it and if it is simply fail authentication.\n\nThis fixes CVE-2020-6095 and TALOS-2020-1018.\n\nDiscovered by Peter Wang of Cisco ASIG.",
        "before_after_code_files": [
          "gst/rtsp-server/rtsp-auth.c||gst/rtsp-server/rtsp-auth.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "gst/rtsp-server/rtsp-auth.c||gst/rtsp-server/rtsp-auth.c"
          ],
          "candidate": [
            "gst/rtsp-server/rtsp-auth.c||gst/rtsp-server/rtsp-auth.c"
          ]
        }
      },
      "candidate_diff": {
        "gst/rtsp-server/rtsp-auth.c||gst/rtsp-server/rtsp-auth.c": [
          "File: gst/rtsp-server/rtsp-auth.c -> gst/rtsp-server/rtsp-auth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "872:       GST_DEBUG_OBJECT (auth, \"check Basic auth\");",
          "873:       g_mutex_lock (&priv->lock);",
          "875:               g_hash_table_lookup (priv->basic,",
          "876:                   (*credential)->authorization))) {",
          "877:         GST_DEBUG_OBJECT (auth, \"setting token %p\", token);",
          "",
          "[Removed Lines]",
          "874:       if ((token =",
          "",
          "[Added Lines]",
          "874:       if ((*credential)->authorization && (token =",
          "",
          "---------------"
        ]
      }
    }
  ]
}