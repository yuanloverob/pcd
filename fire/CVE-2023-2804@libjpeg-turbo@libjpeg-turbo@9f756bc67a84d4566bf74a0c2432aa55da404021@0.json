{
  "cve_id": "CVE-2023-2804",
  "cve_desc": "A heap-based buffer overflow issue was discovered in libjpeg-turbo in h2v2_merged_upsample_internal() function of jdmrgext.c file. The vulnerability can only be exploited with 12-bit data precision for which the range of the sample data type exceeds the valid sample range, hence, an attacker could craft a 12-bit lossless JPEG image that contains out-of-range 12-bit samples. An application attempting to decompress such image using merged upsampling would lead to segmentation fault or buffer overflows, causing an application to crash.",
  "repo": "libjpeg-turbo/libjpeg-turbo",
  "patch_hash": "9f756bc67a84d4566bf74a0c2432aa55da404021",
  "patch_info": {
    "commit_hash": "9f756bc67a84d4566bf74a0c2432aa55da404021",
    "repo": "libjpeg-turbo/libjpeg-turbo",
    "commit_url": "https://github.com/libjpeg-turbo/libjpeg-turbo/commit/9f756bc67a84d4566bf74a0c2432aa55da404021",
    "files": [
      "ChangeLog.md",
      "jdlossls.c"
    ],
    "message": "Lossless decomp: Range-limit 12-bit samples\n\n12-bit is the only data precision for which the range of the sample data\ntype exceeds the valid sample range, so it is possible to craft a 12-bit\nlossless JPEG image that contains out-of-range 12-bit samples.\nAttempting to decompress such an image using color quantization or merged\nupsampling (NOTE: libjpeg-turbo cannot generate YCbCr or subsampled\nlossless JPEG images, but it can decompress them) caused segfaults or\nbuffer overruns when those algorithms attempted to use the out-of-range\nsample values as array indices.  This commit modifies the lossless\ndecompressor so that it range-limits the output of the scaler when using\n12-bit samples.\n\nFixes #670\nFixes #672\nFixes #673\nFixes #674\nFixes #675\nFixes #676\nFixes #677\nFixes #678\nFixes #679\nFixes #681\nFixes #683",
    "before_after_code_files": [
      "jdlossls.c||jdlossls.c"
    ]
  },
  "patch_diff": {
    "jdlossls.c||jdlossls.c": [
      "File: jdlossls.c -> jdlossls.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "217:                JDIFFROW diff_buf, _JSAMPROW output_buf, JDIMENSION width)",
      "218: {",
      "219:   do {",
      "221:   } while (--width);",
      "222: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "220: #if BITS_IN_JSAMPLE == 12",
      "226: #else",
      "228: #endif",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "226:         JDIFFROW diff_buf, _JSAMPROW output_buf, JDIMENSION width)",
      "227: {",
      "228:   do {",
      "230:   } while (--width);",
      "231: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "237: #if BITS_IN_JSAMPLE == 12",
      "239: #else",
      "241: #endif",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bf9f319cb4b86b130bee16af19fee95a1cdb5ef2",
      "candidate_info": {
        "commit_hash": "bf9f319cb4b86b130bee16af19fee95a1cdb5ef2",
        "repo": "libjpeg-turbo/libjpeg-turbo",
        "commit_url": "https://github.com/libjpeg-turbo/libjpeg-turbo/commit/bf9f319cb4b86b130bee16af19fee95a1cdb5ef2",
        "files": [
          "CMakeLists.txt",
          "ChangeLog.md",
          "cdjpeg.h",
          "cjpeg.1",
          "djpeg.c",
          "jdlossls.c",
          "jdmaster.c",
          "jdpostct.c",
          "jpegint.h",
          "jquant1.c",
          "jquant2.c",
          "jsamplecomp.h",
          "libjpeg.txt",
          "sharedlib/CMakeLists.txt",
          "structure.txt",
          "usage.txt",
          "wrgif.c"
        ],
        "message": "Disallow color quantization with lossless decomp\n\nColor quantization is a legacy feature that serves little or no purpose\nwith lossless JPEG images.  9f756bc67a84d4566bf74a0c2432aa55da404021\neliminated interaction issues between the lossless decompressor and the\ncolor quantizers related to out-of-range 12-bit samples, but referring\nto #701, other interaction issues apparently still exist.  Such issues\nare likely, given the fact that the color quantizers were not designed\nwith lossless decompression in mind.\n\nThis commit reverts 9f756bc67a84d4566bf74a0c2432aa55da404021, since the\nissues it fixed are no longer relevant because of this commit and\n2192560d74e6e6cf99dd05928885573be00a8208.\n\nFixed #672\nFixes #673\nFixes #674\nFixes #676\nFixes #677\nFixes #678\nFixes #679\nFixes #681\nFixes #683\nFixes #701",
        "before_after_code_files": [
          "cdjpeg.h||cdjpeg.h",
          "cjpeg.1||cjpeg.1",
          "djpeg.c||djpeg.c",
          "jdlossls.c||jdlossls.c",
          "jdmaster.c||jdmaster.c",
          "jdpostct.c||jdpostct.c",
          "jpegint.h||jpegint.h",
          "jquant1.c||jquant1.c",
          "jquant2.c||jquant2.c",
          "jsamplecomp.h||jsamplecomp.h",
          "wrgif.c||wrgif.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "jdlossls.c||jdlossls.c"
          ],
          "candidate": [
            "jdlossls.c||jdlossls.c"
          ]
        }
      },
      "candidate_diff": {
        "cdjpeg.h||cdjpeg.h": [
          "File: cdjpeg.h -> cdjpeg.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "123: EXTERN(djpeg_dest_ptr) jinit_write_gif(j_decompress_ptr cinfo, boolean is_lzw);",
          "124: EXTERN(djpeg_dest_ptr) j12init_write_gif(j_decompress_ptr cinfo,",
          "125:                                          boolean is_lzw);",
          "130: EXTERN(cjpeg_source_ptr) jinit_read_ppm(j_compress_ptr cinfo);",
          "131: EXTERN(cjpeg_source_ptr) j12init_read_ppm(j_compress_ptr cinfo);",
          "132: #ifdef C_LOSSLESS_SUPPORTED",
          "",
          "[Removed Lines]",
          "126: #ifdef D_LOSSLESS_SUPPORTED",
          "127: EXTERN(djpeg_dest_ptr) j16init_write_gif(j_decompress_ptr cinfo,",
          "128:                                          boolean is_lzw);",
          "129: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "155: EXTERN(void) read_color_map(j_decompress_ptr cinfo, FILE *infile);",
          "156: EXTERN(void) read_color_map_12(j_decompress_ptr cinfo, FILE *infile);",
          "",
          "[Removed Lines]",
          "157: #ifdef D_LOSSLESS_SUPPORTED",
          "158: EXTERN(void) read_color_map_16(j_decompress_ptr cinfo, FILE *infile);",
          "159: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "cjpeg.1||cjpeg.1": [
          "File: cjpeg.1 -> cjpeg.1",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: .SH NAME",
          "3: cjpeg \\- compress an image file to a JPEG file",
          "4: .SH SYNOPSIS",
          "",
          "[Removed Lines]",
          "1: .TH CJPEG 1 \"30 November 2022\"",
          "",
          "[Added Lines]",
          "1: .TH CJPEG 1 \"29 June 2023\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "182: - Color space conversion (the JPEG image will use the same color space as the",
          "183: input image)",
          "184: .IP",
          "185: - DCT/IDCT algorithm selection",
          "186: .IP",
          "187: - Smoothing",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "185: - Color quantization",
          "186: .IP",
          "",
          "---------------"
        ],
        "djpeg.c||djpeg.c": [
          "File: djpeg.c -> djpeg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "662: #endif",
          "663: #ifdef GIF_SUPPORTED",
          "664:   case FMT_GIF:",
          "669:       ERREXIT1(&cinfo, JERR_BAD_PRECISION, cinfo.data_precision);",
          "673:       dest_mgr = j12init_write_gif(&cinfo, TRUE);",
          "674:     else",
          "675:       dest_mgr = jinit_write_gif(&cinfo, TRUE);",
          "",
          "[Removed Lines]",
          "665:     if (cinfo.data_precision == 16) {",
          "666: #ifdef D_LOSSLESS_SUPPORTED",
          "667:       dest_mgr = j16init_write_gif(&cinfo, TRUE);",
          "668: #else",
          "670:       break;",
          "671: #endif",
          "672:     } else if (cinfo.data_precision == 12)",
          "",
          "[Added Lines]",
          "665:     if (cinfo.data_precision == 16)",
          "667:     else if (cinfo.data_precision == 12)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "680: #endif",
          "681: #ifdef PPM_SUPPORTED",
          "682:   case FMT_PPM:",
          "684: #ifdef D_LOSSLESS_SUPPORTED",
          "685:       dest_mgr = j16init_write_ppm(&cinfo);",
          "686: #else",
          "687:       ERREXIT1(&cinfo, JERR_BAD_PRECISION, cinfo.data_precision);",
          "689: #endif",
          "691:       dest_mgr = j12init_write_ppm(&cinfo);",
          "692:     else",
          "693:       dest_mgr = jinit_write_ppm(&cinfo);",
          "",
          "[Removed Lines]",
          "683:     if (cinfo.data_precision == 16) {",
          "688:       break;",
          "690:     } else if (cinfo.data_precision == 12)",
          "",
          "[Added Lines]",
          "678:     if (cinfo.data_precision == 16)",
          "684:     else if (cinfo.data_precision == 12)",
          "",
          "---------------"
        ],
        "jdlossls.c||jdlossls.c": [
          "File: jdlossls.c -> jdlossls.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "217:                JDIFFROW diff_buf, _JSAMPROW output_buf, JDIMENSION width)",
          "218: {",
          "219:   do {",
          "229:   } while (--width);",
          "230: }",
          "",
          "[Removed Lines]",
          "220: #if BITS_IN_JSAMPLE == 12",
          "226: #else",
          "228: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "234:         JDIFFROW diff_buf, _JSAMPROW output_buf, JDIMENSION width)",
          "235: {",
          "236:   do {",
          "242:   } while (--width);",
          "243: }",
          "",
          "[Removed Lines]",
          "237: #if BITS_IN_JSAMPLE == 12",
          "239: #else",
          "241: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "jdmaster.c||jdmaster.c": [
          "File: jdmaster.c -> jdmaster.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "571:     if (cinfo->enable_1pass_quant) {",
          "572: #ifdef QUANT_1PASS_SUPPORTED",
          "573:       if (cinfo->data_precision == 16)",
          "577:         ERREXIT1(cinfo, JERR_BAD_PRECISION, cinfo->data_precision);",
          "579:       else if (cinfo->data_precision == 12)",
          "580:         j12init_1pass_quantizer(cinfo);",
          "581:       else",
          "",
          "[Removed Lines]",
          "574: #ifdef D_LOSSLESS_SUPPORTED",
          "575:         j16init_1pass_quantizer(cinfo);",
          "576: #else",
          "578: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "590:     if (cinfo->enable_2pass_quant || cinfo->enable_external_quant) {",
          "591: #ifdef QUANT_2PASS_SUPPORTED",
          "592:       if (cinfo->data_precision == 16)",
          "596:         ERREXIT1(cinfo, JERR_BAD_PRECISION, cinfo->data_precision);",
          "598:       else if (cinfo->data_precision == 12)",
          "599:         j12init_2pass_quantizer(cinfo);",
          "600:       else",
          "",
          "[Removed Lines]",
          "593: #ifdef D_LOSSLESS_SUPPORTED",
          "594:         j16init_2pass_quantizer(cinfo);",
          "595: #else",
          "597: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "jdpostct.c||jdpostct.c": [
          "File: jdpostct.c -> jdpostct.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: METHODDEF(void) post_process_1pass(j_decompress_ptr cinfo,",
          "53:                                    _JSAMPIMAGE input_buf,",
          "54:                                    JDIMENSION *in_row_group_ctr,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52: #if BITS_IN_JSAMPLE != 16",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:                                    _JSAMPARRAY output_buf,",
          "57:                                    JDIMENSION *out_row_ctr,",
          "58:                                    JDIMENSION out_rows_avail);",
          "60: METHODDEF(void) post_process_prepass(j_decompress_ptr cinfo,",
          "61:                                      _JSAMPIMAGE input_buf,",
          "62:                                      JDIMENSION *in_row_group_ctr,",
          "",
          "[Removed Lines]",
          "59: #ifdef QUANT_2PASS_SUPPORTED",
          "",
          "[Added Lines]",
          "60: #endif",
          "61: #if defined(QUANT_2PASS_SUPPORTED) && BITS_IN_JSAMPLE != 16",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "86:   switch (pass_mode) {",
          "87:   case JBUF_PASS_THRU:",
          "88:     if (cinfo->quantize_colors) {",
          "90:       post->pub._post_process_data = post_process_1pass;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "90: #if BITS_IN_JSAMPLE != 16",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "97:           ((j_common_ptr)cinfo, post->whole_image,",
          "98:            (JDIMENSION)0, post->strip_height, TRUE);",
          "99:       }",
          "104:       post->pub._post_process_data = cinfo->upsample->_upsample;",
          "105:     }",
          "106:     break;",
          "108:   case JBUF_SAVE_AND_PASS:",
          "110:     if (post->whole_image == NULL)",
          "",
          "[Removed Lines]",
          "100:     } else {",
          "107: #ifdef QUANT_2PASS_SUPPORTED",
          "",
          "[Added Lines]",
          "103:     } else",
          "104: #endif",
          "105:     {",
          "112: #if defined(QUANT_2PASS_SUPPORTED) && BITS_IN_JSAMPLE != 16",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "134: METHODDEF(void)",
          "135: post_process_1pass(j_decompress_ptr cinfo, _JSAMPIMAGE input_buf,",
          "136:                    JDIMENSION *in_row_group_ctr,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139: #if BITS_IN_JSAMPLE != 16",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "157: }",
          "",
          "[Removed Lines]",
          "160: #ifdef QUANT_2PASS_SUPPORTED",
          "",
          "[Added Lines]",
          "166: #endif",
          "169: #if defined(QUANT_2PASS_SUPPORTED) && BITS_IN_JSAMPLE != 16",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "273:   if (cinfo->quantize_colors) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "283: #if BITS_IN_JSAMPLE != 16",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "296:          cinfo->output_width * cinfo->out_color_components,",
          "297:          post->strip_height);",
          "298:     }",
          "299:   }",
          "300: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "309: #else",
          "310:     ERREXIT(cinfo, JERR_NOTIMPL);",
          "311: #endif",
          "",
          "---------------"
        ],
        "jpegint.h||jpegint.h": [
          "File: jpegint.h -> jpegint.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "431:                           JSAMPARRAY output_buf, int num_rows);",
          "432:   void (*color_quantize_12) (j_decompress_ptr cinfo, J12SAMPARRAY input_buf,",
          "433:                              J12SAMPARRAY output_buf, int num_rows);",
          "438:   void (*finish_pass) (j_decompress_ptr cinfo);",
          "439:   void (*new_color_map) (j_decompress_ptr cinfo);",
          "440: };",
          "",
          "[Removed Lines]",
          "434: #ifdef D_LOSSLESS_SUPPORTED",
          "435:   void (*color_quantize_16) (j_decompress_ptr cinfo, J16SAMPARRAY input_buf,",
          "436:                              J16SAMPARRAY output_buf, int num_rows);",
          "437: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "553:                                        boolean need_full_buffer);",
          "554: EXTERN(void) j16init_upsampler(j_decompress_ptr cinfo);",
          "555: EXTERN(void) j16init_color_deconverter(j_decompress_ptr cinfo);",
          "558: EXTERN(void) jinit_d_diff_controller(j_decompress_ptr cinfo,",
          "559:                                      boolean need_full_buffer);",
          "560: EXTERN(void) j12init_d_diff_controller(j_decompress_ptr cinfo,",
          "",
          "[Removed Lines]",
          "556: EXTERN(void) j16init_1pass_quantizer(j_decompress_ptr cinfo);",
          "557: EXTERN(void) j16init_2pass_quantizer(j_decompress_ptr cinfo);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "jquant1.c||jquant1.c": [
          "File: jquant1.c -> jquant1.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #include \"jpeglib.h\"",
          "19: #include \"jsamplecomp.h\"",
          "",
          "[Removed Lines]",
          "21: #if defined(QUANT_1PASS_SUPPORTED) && \\",
          "22:     (BITS_IN_JSAMPLE != 16 || defined(D_LOSSLESS_SUPPORTED))",
          "",
          "[Added Lines]",
          "21: #if defined(QUANT_1PASS_SUPPORTED) && BITS_IN_JSAMPLE != 16",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "827:   if (cinfo->data_precision != BITS_IN_JSAMPLE)",
          "828:     ERREXIT1(cinfo, JERR_BAD_PRECISION, cinfo->data_precision);",
          "830:   cquantize = (my_cquantize_ptr)",
          "831:     (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_IMAGE,",
          "832:                                 sizeof(my_cquantizer));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "830:   if (cinfo->master->lossless)",
          "831:     ERREXIT(cinfo, JERR_NOTIMPL);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "858:     alloc_fs_workspace(cinfo);",
          "859: }",
          "",
          "[Removed Lines]",
          "861: #endif /* defined(QUANT_1PASS_SUPPORTED) &&",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "jquant2.c||jquant2.c": [
          "File: jquant2.c -> jquant2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include \"jpeglib.h\"",
          "26: #include \"jsamplecomp.h\"",
          "",
          "[Removed Lines]",
          "28: #if defined(QUANT_2PASS_SUPPORTED) && \\",
          "29:     (BITS_IN_JSAMPLE != 16 || defined(D_LOSSLESS_SUPPORTED))",
          "",
          "[Added Lines]",
          "28: #if defined(QUANT_2PASS_SUPPORTED) && BITS_IN_JSAMPLE != 16",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1241:   if (cinfo->out_color_components != 3 ||",
          "1243:     ERREXIT(cinfo, JERR_NOTIMPL);",
          "",
          "[Removed Lines]",
          "1242:       cinfo->out_color_space == JCS_RGB565)",
          "",
          "[Added Lines]",
          "1241:       cinfo->out_color_space == JCS_RGB565 || cinfo->master->lossless)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1291:   }",
          "1292: }",
          "",
          "[Removed Lines]",
          "1294: #endif /* defined(QUANT_2PASS_SUPPORTED) &&",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "jsamplecomp.h||jsamplecomp.h": [
          "File: jsamplecomp.h -> jsamplecomp.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: #define _upsample  upsample_16",
          "59: #define _color_convert  color_convert_16",
          "62: #endif",
          "",
          "[Removed Lines]",
          "61: #define _color_quantize  color_quantize_16",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76: #define _jinit_d_post_controller  j16init_d_post_controller",
          "77: #define _jinit_upsampler  j16init_upsampler",
          "78: #define _jinit_color_deconverter  j16init_color_deconverter",
          "81: #define _jinit_merged_upsampler  j16init_merged_upsampler",
          "82: #define _jinit_d_diff_controller  j16init_d_diff_controller",
          "83: #define _jinit_lossless_decompressor  j16init_lossless_decompressor",
          "",
          "[Removed Lines]",
          "79: #define _jinit_1pass_quantizer  j16init_1pass_quantizer",
          "80: #define _jinit_2pass_quantizer  j16init_2pass_quantizer",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "102: #endif",
          "104: #ifdef D_LOSSLESS_SUPPORTED",
          "106: #define _jinit_write_ppm  j16init_write_ppm",
          "109: #endif",
          "111: #elif BITS_IN_JSAMPLE == 12",
          "",
          "[Removed Lines]",
          "105: #define _jinit_write_gif  j16init_write_gif",
          "108: #define _read_color_map  read_color_map_16",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "wrgif.c||wrgif.c": [
          "File: wrgif.c -> wrgif.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: #include \"jsamplecomp.h\"",
          "",
          "[Removed Lines]",
          "36: #if defined(GIF_SUPPORTED) && \\",
          "37:     (BITS_IN_JSAMPLE != 16 || defined(D_LOSSLESS_SUPPORTED))",
          "",
          "[Added Lines]",
          "36: #if defined(GIF_SUPPORTED) && BITS_IN_JSAMPLE != 16",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "583:   return (djpeg_dest_ptr)dest;",
          "584: }",
          "",
          "[Removed Lines]",
          "586: #endif /* defined(GIF_SUPPORTED) &&",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2192560d74e6e6cf99dd05928885573be00a8208",
      "candidate_info": {
        "commit_hash": "2192560d74e6e6cf99dd05928885573be00a8208",
        "repo": "libjpeg-turbo/libjpeg-turbo",
        "commit_url": "https://github.com/libjpeg-turbo/libjpeg-turbo/commit/2192560d74e6e6cf99dd05928885573be00a8208",
        "files": [
          "fuzz/decompress.cc",
          "jdmaster.c"
        ],
        "message": "Disallow merged upsampling with lossless decomp\n\nColorspace conversion is explicitly not supported with lossless JPEG\nimages.  Merged upsampling implies YCbCr-to-RGB colorspace conversion,\nso allowing it with lossless decompression was an oversight.\n9f756bc67a84d4566bf74a0c2432aa55da404021 eliminated interaction issues\nbetween the lossless decompressor and the merged upsampler related to\nout-of-range 12-bit samples, but referring to #690, other interaction\nissues apparently still exist.  Such issues are likely, given the fact\nthat the merged upsampler was never designed with lossless decompression\nin mind.\n\nThis commit also extends the decompress fuzzer so that it catches the\nissue reported in #690.\n\nFixes #690\nRedundantly fixes #670\nRedundantly fixes #675",
        "before_after_code_files": [
          "fuzz/decompress.cc||fuzz/decompress.cc",
          "jdmaster.c||jdmaster.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fuzz/decompress.cc||fuzz/decompress.cc": [
          "File: fuzz/decompress.cc -> fuzz/decompress.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:     int64_t sum = 0;",
          "79:     if (!tj3Get(handle, TJPARAM_LOSSLESS)) {",
          "82:       tj3Set(handle, TJPARAM_FASTDCT, pfi == 0);",
          "",
          "[Removed Lines]",
          "80:       tj3Set(handle, TJPARAM_BOTTOMUP, pfi == 0);",
          "81:       tj3Set(handle, TJPARAM_FASTUPSAMPLE, pfi == 0);",
          "",
          "[Added Lines]",
          "79:     tj3Set(handle, TJPARAM_BOTTOMUP, pfi == 0);",
          "80:     tj3Set(handle, TJPARAM_FASTUPSAMPLE, pfi == 0);",
          "",
          "---------------"
        ],
        "jdmaster.c||jdmaster.c": [
          "File: jdmaster.c -> jdmaster.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: use_merged_upsample(j_decompress_ptr cinfo)",
          "36: {",
          "37: #ifdef UPSAMPLE_MERGING_SUPPORTED",
          "39:   if (cinfo->do_fancy_upsampling || cinfo->CCIR601_sampling)",
          "40:     return FALSE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:   if (cinfo->master->lossless)",
          "40:     return FALSE;",
          "",
          "---------------"
        ]
      }
    }
  ]
}