{
  "cve_id": "CVE-2023-1289",
  "cve_desc": "A vulnerability was discovered in ImageMagick where a specially created SVG file loads itself and causes a segmentation fault. This flaw allows a remote attacker to pass a specially crafted SVG file that leads to a segmentation fault, generating many trash files in \"/tmp,\" resulting in a denial of service. When ImageMagick crashes, it generates a lot of trash files. These trash files can be large if the SVG file contains many render actions. In a denial of service attack, if a remote attacker uploads an SVG file of size t, ImageMagick generates files of size 103*t. If an attacker uploads a 100M SVG, the server will generate about 10G.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "c5b23cbf2119540725e6dc81f4deb25798ead6a4",
  "patch_info": {
    "commit_hash": "c5b23cbf2119540725e6dc81f4deb25798ead6a4",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/c5b23cbf2119540725e6dc81f4deb25798ead6a4",
    "files": [
      "MagickCore/draw.c"
    ],
    "message": "erecursion detection",
    "before_after_code_files": [
      "MagickCore/draw.c||MagickCore/draw.c"
    ]
  },
  "patch_diff": {
    "MagickCore/draw.c||MagickCore/draw.c": [
      "File: MagickCore/draw.c -> MagickCore/draw.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "5585:     {",
      "5586:       AffineMatrix",
      "5587:         affine;",
      "5589:       char",
      "5590:         composite_geometry[MagickPathExtent];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5589:       char",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9d3dd9192f6710ec8e10f5edda9b7bf67caeb232",
      "candidate_info": {
        "commit_hash": "9d3dd9192f6710ec8e10f5edda9b7bf67caeb232",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/9d3dd9192f6710ec8e10f5edda9b7bf67caeb232",
        "files": [
          "MagickCore/constitute.c",
          "MagickCore/draw.c",
          "MagickCore/draw.h",
          "MagickCore/image.c",
          "MagickCore/image.h"
        ],
        "message": "recursion detection framework",
        "before_after_code_files": [
          "MagickCore/constitute.c||MagickCore/constitute.c",
          "MagickCore/draw.c||MagickCore/draw.c",
          "MagickCore/draw.h||MagickCore/draw.h",
          "MagickCore/image.c||MagickCore/image.c",
          "MagickCore/image.h||MagickCore/image.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/draw.c||MagickCore/draw.c"
          ],
          "candidate": [
            "MagickCore/draw.c||MagickCore/draw.c"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/constitute.c||MagickCore/constitute.c": [
          "File: MagickCore/constitute.c -> MagickCore/constitute.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "82: #include \"MagickCore/transform.h\"",
          "83: #include \"MagickCore/utility.h\"",
          "84: #include \"MagickCore/utility-private.h\"",
          "88:   Typedef declarations.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:   Define declarations.",
          "90: #define MaxReadRecursionDepth  100",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "726:   if (decoder != (DecodeImageHandler *) NULL)",
          "727:     {",
          "729:         Call appropriate image reader based on image type.",
          "731:       if ((magick_info != (const MagickInfo *) NULL) &&",
          "732:           (GetMagickDecoderThreadSupport(magick_info) == MagickFalse))",
          "733:         LockSemaphoreInfo(magick_info->semaphore);",
          "734:       status=IsCoderAuthorized(read_info->magick,ReadPolicyRights,exception);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "735:         Call appropriate image reader based on image type.",
          "737:       if ((magick_info != (const MagickInfo *) NULL) &&",
          "738:           (GetMagickDecoderThreadSupport(magick_info) == MagickFalse))",
          "739:         LockSemaphoreInfo(magick_info->semaphore);",
          "743:           (void) ThrowMagickException(exception,GetMagickModule(),CoderError,",
          "",
          "---------------"
        ],
        "MagickCore/draw.c||MagickCore/draw.c": [
          "File: MagickCore/draw.c -> MagickCore/draw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5582:     {",
          "5583:       AffineMatrix",
          "5584:         affine;",
          "5586:       char",
          "5587:         composite_geometry[MagickPathExtent];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5596:       RectangleInfo",
          "5597:         geometry;",
          "",
          "[Removed Lines]",
          "5593:       ImageInfo",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5605:       clone_info=AcquireImageInfo();",
          "5606:       composite_images=(Image *) NULL;",
          "5607:       if (LocaleNCompare(primitive_info->text,\"data:\",5) == 0)",
          "5619:             struct stat",
          "5620:               attributes;",
          "",
          "[Removed Lines]",
          "5608:         composite_images=ReadInlineImage(clone_info,primitive_info->text,",
          "5609:           exception);",
          "5610:       else",
          "5611:         if (*primitive_info->text != '\\0')",
          "5612:           {",
          "5613:             const MagickInfo",
          "5616:             MagickBooleanType",
          "5617:               path_status;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6010: %    o image_info: the image info..",
          "6011: %",
          "6012: %    o draw_info: the draw info.",
          "6015: MagickExport void GetDrawInfo(const ImageInfo *image_info,DrawInfo *draw_info)",
          "6016: {",
          "",
          "[Removed Lines]",
          "6013: %",
          "",
          "[Added Lines]",
          "6000: %",
          "",
          "---------------"
        ],
        "MagickCore/draw.h||MagickCore/draw.h": [
          "File: MagickCore/draw.h -> MagickCore/draw.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "351:   WordBreakType",
          "352:     word_break;",
          "353: } DrawInfo;",
          "355: typedef struct _PrimitiveInfo",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "354:   const ImageInfo",
          "",
          "---------------"
        ],
        "MagickCore/image.c||MagickCore/image.c": [
          "File: MagickCore/image.c -> MagickCore/image.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1004:   SetImageInfoFile(clone_info,image_info->file);",
          "1005:   SetImageInfoBlob(clone_info,image_info->blob,image_info->length);",
          "1006:   clone_info->stream=image_info->stream;",
          "1007:   clone_info->custom_stream=image_info->custom_stream;",
          "1008:   (void) CopyMagickString(clone_info->magick,image_info->magick,",
          "1009:     MagickPathExtent);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1007:   clone_info->custom_stream=image_info->custom_stream;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1356: {",
          "1357:   char",
          "1361:     File and image dimension members.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "MagickCore/image.h||MagickCore/image.h": [
          "File: MagickCore/image.h -> MagickCore/image.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "493:   PixelInfo",
          "495: };",
          "497: extern MagickExport ChannelType",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "496:   size_t",
          "",
          "---------------"
        ]
      }
    }
  ]
}