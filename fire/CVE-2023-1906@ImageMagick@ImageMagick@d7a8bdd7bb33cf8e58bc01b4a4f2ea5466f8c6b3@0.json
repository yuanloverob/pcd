{
  "cve_id": "CVE-2023-1906",
  "cve_desc": "A heap-based buffer overflow issue was discovered in ImageMagick's ImportMultiSpectralQuantum() function in MagickCore/quantum-import.c. An attacker could pass specially crafted file to convert, triggering an out-of-bounds read error, allowing an application to crash, resulting in a denial of service.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "d7a8bdd7bb33cf8e58bc01b4a4f2ea5466f8c6b3",
  "patch_info": {
    "commit_hash": "d7a8bdd7bb33cf8e58bc01b4a4f2ea5466f8c6b3",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/d7a8bdd7bb33cf8e58bc01b4a4f2ea5466f8c6b3",
    "files": [
      "coders/tiff.c"
    ],
    "message": "possible heap buffer overflow (https://github.com/ImageMagick/ImageMagick/security/advisories/GHSA-35q2-86c7-9247)",
    "before_after_code_files": [
      "coders/tiff.c||coders/tiff.c"
    ]
  },
  "patch_diff": {
    "coders/tiff.c||coders/tiff.c": [
      "File: coders/tiff.c -> coders/tiff.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1903:           strip_size;",
      "1905:         unsigned char",
      "1910:           Convert stripped TIFF image.",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9a9896fce95d09e5e47b86baccbe1ce1a2fca76b",
      "candidate_info": {
        "commit_hash": "9a9896fce95d09e5e47b86baccbe1ce1a2fca76b",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/9a9896fce95d09e5e47b86baccbe1ce1a2fca76b",
        "files": [
          "coders/heic.c",
          "coders/jxl.c",
          "coders/tiff.c"
        ],
        "message": "account for extra samples",
        "before_after_code_files": [
          "coders/heic.c||coders/heic.c",
          "coders/jxl.c||coders/jxl.c",
          "coders/tiff.c||coders/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/tiff.c||coders/tiff.c"
          ],
          "candidate": [
            "coders/tiff.c||coders/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/heic.c||coders/heic.c": [
          "File: coders/heic.c -> coders/heic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "244:       if ((length > 2) &&",
          "245:           ((memcmp(datum,\"\\xff\\xd8\",2) == 0) ||",
          "246:            (memcmp(datum,\"\\xff\\xe1\",2) == 0)) &&",
          "248:         SetStringInfoLength(exif_profile,length-2);",
          "250:         Skip to actual Exif payload.",
          "",
          "[Removed Lines]",
          "247:            memcmp(datum+length-2,\"\\xff\\xd9\",2) == 0)",
          "",
          "[Added Lines]",
          "247:            (memcmp(datum+length-2,\"\\xff\\xd9\",2) == 0))",
          "",
          "---------------"
        ],
        "coders/jxl.c||coders/jxl.c": [
          "File: coders/jxl.c -> coders/jxl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "664:   (void) JxlDecoderReleaseBoxBuffer(jxl_info);",
          "665:   if ((exif_profile != (StringInfo *) NULL) &&",
          "666:       (GetStringInfoLength(exif_profile) > 4))",
          "667:     {",
          "668:       StringInfo",
          "671:       unsigned int",
          "672:         offset=0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "667:     {",
          "668:       size_t",
          "669:         exif_length;",
          "674:       unsigned char",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "682:       snippet=DestroyStringInfo(snippet);",
          "684:         Strip any EOI marker if payload starts with a JPEG marker.",
          "692:         SetStringInfoLength(exif_profile, exif_length-2);",
          "694:         Skip to actual Exif payload.",
          "698:           offset));",
          "699:       (void) SetImageProfile(image,\"exif\",exif_profile,exception);",
          "700:       exif_profile=DestroyStringInfo(exif_profile);",
          "",
          "[Removed Lines]",
          "686:       size_t exif_length = GetStringInfoLength(exif_profile);",
          "687:       unsigned char *exif_datum = GetStringInfoDatum(exif_profile);",
          "688:       if (exif_length > 2 &&",
          "689:           (memcmp(exif_datum, \"\\xff\\xd8\", 2) == 0 ||",
          "690:            memcmp(exif_datum, \"\\xff\\xe1\", 2) == 0) &&",
          "691:           memcmp(exif_datum+exif_length-2, \"\\xff\\xd9\", 2) == 0)",
          "696:       if (offset < GetStringInfoLength(exif_profile))",
          "697:         (void) DestroyStringInfo(SplitStringInfo(exif_profile,",
          "",
          "[Added Lines]",
          "692:       exif_length=GetStringInfoLength(exif_profile);",
          "693:       exif_datum=GetStringInfoDatum(exif_profile);",
          "694:       if ((exif_length > 2) &&",
          "695:           ((memcmp(exif_datum,\"\\xff\\xd8\",2) == 0) ||",
          "696:            (memcmp(exif_datum,\"\\xff\\xe1\",2) == 0)) &&",
          "697:           (memcmp(exif_datum+exif_length-2,\"\\xff\\xd9\",2) == 0))",
          "702:       if (offset < GetStringInfoLength(exif_profile))",
          "",
          "---------------"
        ],
        "coders/tiff.c||coders/tiff.c": [
          "File: coders/tiff.c -> coders/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1906:         unsigned char",
          "1911:           Convert stripped TIFF image.",
          "1913:         strip_size=TIFFStripSize(tiff);",
          "1915:         extent=(size_t) (samples_per_pixel*strip_size);",
          "1916:         length=GetQuantumExtent(image,quantum_info,quantum_type);",
          "1918:           extent+=length;",
          "1919:         strip_pixels=(unsigned char *) AcquireQuantumMemory(extent,",
          "1920:           sizeof(*strip_pixels));",
          "",
          "[Removed Lines]",
          "1914:         stride=(ssize_t) TIFFVStripSize(tiff,1);",
          "1917:         if (length > stride)",
          "",
          "[Added Lines]",
          "1914:         stride=(ssize_t) TIFFVStripSize(tiff,1);",
          "1917:         if (length > stride)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1be141ef854916bf48bdda6f1ef0324fcde8cae9",
      "candidate_info": {
        "commit_hash": "1be141ef854916bf48bdda6f1ef0324fcde8cae9",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/1be141ef854916bf48bdda6f1ef0324fcde8cae9",
        "files": [
          "coders/tiff.c"
        ],
        "message": "multiply strip size by # of samples",
        "before_after_code_files": [
          "coders/tiff.c||coders/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/tiff.c||coders/tiff.c"
          ],
          "candidate": [
            "coders/tiff.c||coders/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/tiff.c||coders/tiff.c": [
          "File: coders/tiff.c -> coders/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1906:         unsigned char",
          "1911:           Convert stripped TIFF image.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "142aa5b51f1b1359a0a583c8db7b6e52a9981642",
      "candidate_info": {
        "commit_hash": "142aa5b51f1b1359a0a583c8db7b6e52a9981642",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/142aa5b51f1b1359a0a583c8db7b6e52a9981642",
        "files": [
          "coders/tiff.c"
        ],
        "message": "Improved calculation of the extent.",
        "before_after_code_files": [
          "coders/tiff.c||coders/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/tiff.c||coders/tiff.c"
          ],
          "candidate": [
            "coders/tiff.c||coders/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/tiff.c||coders/tiff.c": [
          "File: coders/tiff.c -> coders/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1887:               if (status == MagickFalse)",
          "1888:                 break;",
          "1889:             }",
          "1891:         break;",
          "1892:       }",
          "1893:       case ReadStripMethod:",
          "1894:       {",
          "1895:         size_t",
          "1896:           extent;",
          "1898:         ssize_t",
          "",
          "[Removed Lines]",
          "1890:         }",
          "",
          "[Added Lines]",
          "1890:         }",
          "1891:         break;",
          "1897:           length;",
          "1899:         ssize_t",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1900:           strip_id;",
          "1902:         unsigned char",
          "1907:           Convert stripped TIFF image.",
          "1909:         extent=MagickMax(sizeof(uint32),(samples_per_pixel+extra_samples)*",
          "1911:         strip_pixels=(unsigned char *) AcquireQuantumMemory(extent,",
          "1912:           sizeof(*strip_pixels));",
          "1913:         if (strip_pixels == (unsigned char *) NULL)",
          "",
          "[Removed Lines]",
          "1910:           (image->depth+7)/8)*image->columns*rows_per_strip;",
          "",
          "[Added Lines]",
          "1911:           Convert stripped TIFF image.",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1946:             q=GetAuthenticPixels(image,0,y,image->columns,1,exception);",
          "1947:             if (q == (Quantum *) NULL)",
          "1948:               break;",
          "1950:               {",
          "1951:                 tmsize_t",
          "1952:                   size;",
          "",
          "[Removed Lines]",
          "1949:             if (rows_remaining == 0)",
          "",
          "[Added Lines]",
          "1956:             if (rows_remaining == 0)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3151fd858fe8db16fbd4a9b9b8a892a1acb2b1d6",
      "candidate_info": {
        "commit_hash": "3151fd858fe8db16fbd4a9b9b8a892a1acb2b1d6",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/3151fd858fe8db16fbd4a9b9b8a892a1acb2b1d6",
        "files": [
          "coders/tiff.c"
        ],
        "message": "Another improvement of calculating the size of the extent.",
        "before_after_code_files": [
          "coders/tiff.c||coders/tiff.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/tiff.c||coders/tiff.c"
          ],
          "candidate": [
            "coders/tiff.c||coders/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/tiff.c||coders/tiff.c": [
          "File: coders/tiff.c -> coders/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1906:         unsigned char",
          "1913:         strip_size=TIFFStripSize(tiff);",
          "1915:         extent=(size_t) ((samples_per_pixel+extra_samples)*strip_size);",
          "1916:         length=GetQuantumExtent(image,quantum_info,quantum_type);",
          "1918:           extent+=length;",
          "1919:         strip_pixels=(unsigned char *) AcquireQuantumMemory(extent,",
          "1920:           sizeof(uint32));",
          "",
          "[Removed Lines]",
          "1911:           Convert stripped TIFF image.",
          "1914:         stride=(ssize_t) TIFFVStripSize(tiff,1);",
          "1917:         if (length > stride)",
          "",
          "[Added Lines]",
          "1911:           Convert stripped TIFF image.",
          "1913:         strip_size=TIFFStripSize(tiff);",
          "1916:         extent=MagickMax((size_t) strip_size,rows_per_strip*",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fba0e38896d3f2bad7724c36a546a4c6c492bea1",
      "candidate_info": {
        "commit_hash": "fba0e38896d3f2bad7724c36a546a4c6c492bea1",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/fba0e38896d3f2bad7724c36a546a4c6c492bea1",
        "files": [
          "MagickCore/cache.c",
          "MagickCore/color.c",
          "MagickCore/color.h",
          "MagickCore/colorspace.c",
          "MagickCore/enhance.c",
          "MagickCore/exception.c",
          "MagickCore/fx.c",
          "MagickCore/morphology.c",
          "MagickCore/pixel.h",
          "MagickCore/profile.c",
          "MagickCore/property.c",
          "MagickCore/type.c",
          "coders/dds.c",
          "coders/pdf.c",
          "coders/png.c",
          "coders/tiff.c",
          "coders/wpg.c"
        ],
        "message": "eliminate compiler warnings (https://github.com/ImageMagick/ImageMagick/pull/6230)",
        "before_after_code_files": [
          "MagickCore/cache.c||MagickCore/cache.c",
          "MagickCore/color.c||MagickCore/color.c",
          "MagickCore/color.h||MagickCore/color.h",
          "MagickCore/colorspace.c||MagickCore/colorspace.c",
          "MagickCore/enhance.c||MagickCore/enhance.c",
          "MagickCore/exception.c||MagickCore/exception.c",
          "MagickCore/fx.c||MagickCore/fx.c",
          "MagickCore/morphology.c||MagickCore/morphology.c",
          "MagickCore/pixel.h||MagickCore/pixel.h",
          "MagickCore/profile.c||MagickCore/profile.c",
          "MagickCore/property.c||MagickCore/property.c",
          "MagickCore/type.c||MagickCore/type.c",
          "coders/dds.c||coders/dds.c",
          "coders/pdf.c||coders/pdf.c",
          "coders/png.c||coders/png.c",
          "coders/tiff.c||coders/tiff.c",
          "coders/wpg.c||coders/wpg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/tiff.c||coders/tiff.c"
          ],
          "candidate": [
            "coders/tiff.c||coders/tiff.c"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/cache.c||MagickCore/cache.c": [
          "File: MagickCore/cache.c -> MagickCore/cache.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "667:     extent+=number_bytes;",
          "668:   }",
          "669:   buffer=(unsigned char *) RelinquishMagickMemory(buffer);",
          "671:     return(MagickFalse);",
          "672:   return(MagickTrue);",
          "673: }",
          "",
          "[Removed Lines]",
          "670:   if (extent != cache_info->length)",
          "",
          "[Added Lines]",
          "670:   if (extent != cache_info->length)",
          "",
          "---------------"
        ],
        "MagickCore/color.c||MagickCore/color.c": [
          "File: MagickCore/color.c -> MagickCore/color.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2320:     type;",
          "2325:   assert(color != (PixelInfo *) NULL);",
          "2326:   if ((name == (char *) NULL) || (*name == '\\0'))",
          "",
          "[Removed Lines]",
          "2323:     Initialize color return value.",
          "",
          "[Added Lines]",
          "2323:     Initialize color return value.",
          "",
          "---------------"
        ],
        "MagickCore/color.h||MagickCore/color.h": [
          "File: MagickCore/color.h -> MagickCore/color.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:   EIlluminant = 7,",
          "51:   F2Illuminant = 8,",
          "52:   F7Illuminant = 9,",
          "54: } IlluminantType;",
          "56: typedef struct _ColorInfo",
          "",
          "[Removed Lines]",
          "53:   F11Illuminant = 10",
          "",
          "[Added Lines]",
          "53:   F11Illuminant = 10,",
          "54:   InvalidIlluminantType = -1",
          "",
          "---------------"
        ],
        "MagickCore/colorspace.c||MagickCore/colorspace.c": [
          "File: MagickCore/colorspace.c -> MagickCore/colorspace.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "299:   ConvertRGBToXYZ(red,green,blue,&X,&Y,&Z);",
          "300:   gamma=PerceptibleReciprocal(X+Y+Z);",
          "304: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "342:   gamma=pow(S*PerceptibleReciprocal(white_luminance),Jzazbz_n);",
          "343:   Sp=pow((Jzazbz_c1+Jzazbz_c2*gamma)/(1.0+Jzazbz_c3*gamma),Jzazbz_p);",
          "344:   Iz=0.5*Lp+0.5*Mp;",
          "348: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "MagickCore/enhance.c||MagickCore/enhance.c": [
          "File: MagickCore/enhance.c -> MagickCore/enhance.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1369: %",
          "1370: %  A description of each parameter follows:",
          "1371: %",
          "1373: %",
          "1374: %    o sharpen: Increase or decrease image contrast.",
          "1375: %",
          "",
          "[Removed Lines]",
          "1372: %    o image: the image.",
          "",
          "[Added Lines]",
          "1372: %    o image: the image.",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2775:       x;",
          "2777:     if (status == MagickFalse)",
          "2779:     q=GetCacheViewAuthenticPixels(image_view,0,y,image->columns,1,exception);",
          "2780:     if (q == (Quantum *) NULL)",
          "2781:       {",
          "",
          "[Removed Lines]",
          "2778:       continue;",
          "",
          "[Added Lines]",
          "2778:       continue;",
          "",
          "---------------"
        ],
        "MagickCore/exception.c||MagickCore/exception.c": [
          "File: MagickCore/exception.c -> MagickCore/exception.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "807: %                                                                             %",
          "808: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%",
          "809: %",
          "811: %  reason.",
          "812: %",
          "813: %  The format of the MagickError method is:",
          "",
          "[Removed Lines]",
          "810: %  MagickFatalError() calls the fatal exception handler methods with an error",
          "",
          "[Added Lines]",
          "810: %  MagickFatalError() calls the fatal exception handler methods with an error",
          "",
          "---------------"
        ],
        "MagickCore/fx.c||MagickCore/fx.c": [
          "File: MagickCore/fx.c -> MagickCore/fx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "704:   (FxInfo * pfx, const char * strLimit, char * chLimit, MagickBooleanType * needPopAll);",
          "706: static MagickBooleanType GetFunction (FxInfo * pfx, FunctionE fe);",
          "708: static MagickBooleanType inline ChanIsVirtual (PixelChannel pc)",
          "709: {",
          "710:   if (pc==HUE_CHANNEL || pc==SAT_CHANNEL || pc==LIGHT_CHANNEL || pc==INTENSITY_CHANNEL)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "885:   int i;",
          "886:   for (i=0; i <= rNull; i++) {",
          "887:     const char * str = \"\";",
          "892:     if (i >= FirstCont    && i < rNull) str = Controls[i-FirstCont].str;",
          "893:     if      (i==0    ) fprintf (stderr, \"Operators:\\n \");",
          "894:     else if (i==oNull) fprintf (stderr, \"\\nFunctions:\\n \");",
          "",
          "[Removed Lines]",
          "888:     if (                     i < oNull) str = Operators[i].str;",
          "889:     if (i >= FirstFunc    && i < fNull) str = Functions[i-FirstFunc].str;",
          "890:     if (i >= FirstImgAttr && i < aNull) str = ImgAttrs[i-FirstImgAttr].str;",
          "891:     if (i >= FirstSym     && i < sNull) str = Symbols[i-FirstSym].str;",
          "",
          "[Added Lines]",
          "888:     if (                     i < oNull) str = Operators[i].str;",
          "889:     if (i >= (int) FirstFunc    && i < fNull) str = Functions[i-FirstFunc].str;",
          "890:     if (i >= (int) FirstImgAttr && i < aNull) str = ImgAttrs[i-FirstImgAttr].str;",
          "891:     if (i >= (int) FirstSym     && i < sNull) str = Symbols[i-FirstSym].str;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1012:   }",
          "1013:   return MagickTrue;",
          "1014: }",
          "1016: static MagickBooleanType inline OprInPlace (int op)",
          "1017: {",
          "1018:   return (op >= oAddEq && op <= oSubSub ? MagickTrue : MagickFalse);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1254:   pel->type = etColourConstant;",
          "1255:   return MagickTrue;",
          "1256: }",
          "1258: static void inline SkipSpaces (FxInfo * pfx)",
          "1259: {",
          "1260:   while (isspace ((int)*pfx->pex)) pfx->pex++;",
          "1261: }",
          "1263: static char inline PeekChar (FxInfo * pfx)",
          "1264: {",
          "1265:   SkipSpaces (pfx);",
          "1266:   return *pfx->pex;",
          "1267: }",
          "1269: static MagickBooleanType inline PeekStr (FxInfo * pfx, const char * str)",
          "1270: {",
          "1271:   SkipSpaces (pfx);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1366:   return op;",
          "1367: }",
          "1369: static MagickBooleanType inline OprIsUnaryPrefix (OperatorE op)",
          "1370: {",
          "1371:   return (op == oUnaryMinus || op == oUnaryPlus || op == oBitNot || op == oLogNot ? MagickTrue : MagickFalse);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1410: static PixelChannel GetChannelQualifier (FxInfo * pfx, int op)",
          "1411: {",
          "1412:   if (op == fU || op == fV || op == fP ||",
          "1414:       op == fS || (op >= FirstImgAttr && op <= aNull)",
          "1415:      )",
          "1416:   {",
          "",
          "[Removed Lines]",
          "1413:       op == fUP || op == fVP ||",
          "",
          "[Added Lines]",
          "1413:       op == fUP || op == fVP ||",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1420:     while (*pch->str) {",
          "1421:       if (LocaleCompare (pch->str, pfx->token)==0) {",
          "1423:         if (op >= FirstImgAttr && op <= (OperatorE)aNull &&",
          "1424:               ChanIsVirtual (pch->pixChan)",
          "1425:            )",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1558:   return 0;",
          "1559: }",
          "1561: static ssize_t inline GetConstantColour (FxInfo * pfx, fxFltType *v0, fxFltType *v1, fxFltType *v2)",
          "1563:    Returns number of characters to swallow.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1650:   dummy_exception = DestroyExceptionInfo (dummy_exception);",
          "1651:   return (ssize_t)strlen (pfx->token);",
          "1652: }",
          "1654: static ssize_t inline GetHexColour (FxInfo * pfx, fxFltType *v0, fxFltType *v1, fxFltType *v2)",
          "1656:    Negative return means it starts with '#', but invalid hex number.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2359:   return MagickFalse;",
          "2360: }",
          "2362: static MagickBooleanType inline IsRealOperator (OperatorE op)",
          "2363: {",
          "2364:   return (op < oOpenParen || op > oCloseBrace) ? MagickTrue : MagickFalse;",
          "2365: }",
          "2367: static MagickBooleanType inline ProcessTernaryOpr (FxInfo * pfx, TernaryT * ptern)",
          "2369:    returns false iff we have exception",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2850:   return MagickTrue;",
          "2851: }",
          "2853: static MagickBooleanType inline PushVal (FxInfo * pfx, fxRtT * pfxrt, fxFltType val, int addr)",
          "2854: {",
          "2855:   if (pfxrt->usedValStack >=pfxrt->numValStack) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3008:   return ret;",
          "3009: }",
          "3011: static fxFltType inline FxGcd (fxFltType x, fxFltType y, const size_t depth)",
          "3012: {",
          "3013: #define FxMaxFunctionDepth  200",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "3018:     return (x);",
          "3019:   return (FxGcd (y, x-y*floor((double) (x/y)), depth+1));",
          "3020: }",
          "3022: static ssize_t inline ChkImgNum (FxInfo * pfx, fxFltType f)",
          "3024: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3104:   return 0.0;",
          "3105: }",
          "3107: static fxFltType inline GetIntensity (FxInfo * pfx, ssize_t ImgNum, const fxFltType fx, const fxFltType fy)",
          "3108: {",
          "3109:   Quantum",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "MagickCore/morphology.c||MagickCore/morphology.c": [
          "File: MagickCore/morphology.c -> MagickCore/morphology.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3221:         #pragma omp atomic",
          "3222: #endif",
          "3223:         progress++;",
          "3225:         if (proceed == MagickFalse)",
          "3226:           status=MagickFalse;",
          "3227:       }",
          "",
          "[Removed Lines]",
          "3224:         proceed=SetImageProgress(image,MorphologyTag,progress,image->rows);",
          "",
          "[Added Lines]",
          "3224:         proceed=SetImageProgress(image,MorphologyTag,progress,image->rows);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3617:           proceed;",
          "3619: #if defined(MAGICKCORE_OPENMP_SUPPORT)",
          "3621: #endif",
          "3622:         progress++;",
          "3623:         proceed=SetImageProgress(image,MorphologyTag,progress,2*image->rows);",
          "",
          "[Removed Lines]",
          "3620:         #pragma omp atomic",
          "",
          "[Added Lines]",
          "3620:         #pragma omp atomic",
          "",
          "---------------"
        ],
        "MagickCore/pixel.h||MagickCore/pixel.h": [
          "File: MagickCore/pixel.h -> MagickCore/pixel.h"
        ],
        "MagickCore/profile.c||MagickCore/profile.c": [
          "File: MagickCore/profile.c -> MagickCore/profile.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2175: #define MaxDirectoryStack  16",
          "2176: #define EXIF_DELIMITER  \"\\n\"",
          "2177: #define EXIF_NUM_FORMATS  12",
          "2179: #define TAG_INTEROP_OFFSET  0xa005",
          "2181:   typedef struct _DirectoryInfo",
          "",
          "[Removed Lines]",
          "2178: #define TAG_EXIF_OFFSET  0x8769",
          "",
          "[Added Lines]",
          "2178: #define TAG_EXIF_OFFSET  0x8769",
          "",
          "---------------"
        ],
        "MagickCore/property.c||MagickCore/property.c": [
          "File: MagickCore/property.c -> MagickCore/property.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1234:   const StringInfo",
          "1237:   const unsigned char",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "MagickCore/type.c||MagickCore/type.c": [
          "File: MagickCore/type.c -> MagickCore/type.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "250:         font_path=DestroyString(font_path);",
          "251:       }",
          "252:   }",
          "254:   magick_unreferenced(filename);",
          "255: #endif",
          "256:   if (GetNumberOfNodesInSplayTree(cache) == 0)",
          "257:     status&=LoadTypeCache(cache,TypeMap,\"built-in\",0,exception);",
          "",
          "[Removed Lines]",
          "253: #else",
          "",
          "[Added Lines]",
          "253: #else",
          "",
          "---------------"
        ],
        "coders/dds.c||coders/dds.c": [
          "File: coders/dds.c -> coders/dds.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2034: static MagickBooleanType ReadBC5Pixels(Image *image,",
          "2035:   const DDSInfo *magick_unused(dds_info),ExceptionInfo *exception)",
          "2037:   BC5Colors",
          "2038:     colors = { { 0 } };",
          "",
          "[Removed Lines]",
          "2036: {",
          "",
          "[Added Lines]",
          "2036: {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2149: static MagickBooleanType ReadBC7Pixels(Image *image,",
          "2150:   const DDSInfo *magick_unused(dds_info),ExceptionInfo *exception)",
          "2152:   BC7Colors",
          "2153:     colors = {{ 0 }};",
          "",
          "[Removed Lines]",
          "2151: {",
          "",
          "[Added Lines]",
          "2151: {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3896:   {",
          "3897:     for (x=0; x < (ssize_t) image->columns; x+=4)",
          "3898:     {",
          "3900:         match;",
          "3902:       DDSVector4",
          "",
          "[Removed Lines]",
          "3899:       MagickBooleanType",
          "",
          "[Added Lines]",
          "3899:       MagickBooleanType",
          "",
          "---------------"
        ],
        "coders/pdf.c||coders/pdf.c": [
          "File: coders/pdf.c -> coders/pdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1251: static const char *GetPDFTitle(const ImageInfo *image_info,",
          "1252:   const char *default_title)",
          "1253: {",
          "1257:   option=GetImageOption(image_info,\"pdf:title\");",
          "1258:   if (option != (const char *) NULL)",
          "",
          "[Removed Lines]",
          "1254:   const char",
          "",
          "[Added Lines]",
          "1254:   const char",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1270:   if (option != (const char *) NULL)",
          "1271:     {",
          "1272:       time_t",
          "1275:       epoch=(time_t) StringToDouble(option,(char **) NULL);",
          "1276:       if (epoch > 0)",
          "1277:         return(epoch);",
          "",
          "[Removed Lines]",
          "1273:         epoch;",
          "",
          "[Added Lines]",
          "1272:         epoch;",
          "",
          "---------------"
        ],
        "coders/png.c||coders/png.c": [
          "File: coders/png.c -> coders/png.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2789:                   {",
          "2790:                      png_set_tRNS(ping,ping_info,mng_info->global_trns,",
          "2791:                        (int) mng_info->global_trns_length,NULL);",
          "2793:                }",
          "2794: #ifdef PNG_READ_bKGD_SUPPORTED",
          "2795:               if (",
          "",
          "[Removed Lines]",
          "2792:                   }",
          "",
          "[Added Lines]",
          "2792:                   }",
          "",
          "---------------"
        ],
        "coders/tiff.c||coders/tiff.c": [
          "File: coders/tiff.c -> coders/tiff.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1913:         strip_size=TIFFStripSize(tiff);",
          "1914:         stride=(ssize_t) TIFFVStripSize(tiff,1);",
          "",
          "[Removed Lines]",
          "1911:           Convert stripped TIFF image.",
          "",
          "[Added Lines]",
          "1911:           Convert stripped TIFF image.",
          "",
          "---------------"
        ],
        "coders/wpg.c||coders/wpg.c": [
          "File: coders/wpg.c -> coders/wpg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1756: {",
          "1757:   rle_info->pixels[rle_info->offset++]=byte;",
          "1758:   if (rle_info->offset > 1)",
          "1760:       if ((rle_info->count == 0x7E) ||",
          "1761:           (rle_info->pixels[rle_info->offset-2] != byte))",
          "1762:         {",
          "",
          "[Removed Lines]",
          "1759:     {",
          "",
          "[Added Lines]",
          "1759:     {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1924:             (void) WriteBlobByte(image,ScaleQuantumToChar(",
          "1925:               image->colormap[i].blue));",
          "1926:           }",
          "1931:   (void) WriteBlobByte(image,0x0b);",
          "1932:   (void) WriteBlobByte(image,0xff);",
          "",
          "[Removed Lines]",
          "1927:     }",
          "1929:     Bitmap 1 header.",
          "",
          "[Added Lines]",
          "1927:     }",
          "1929:     Bitmap 1 header.",
          "",
          "---------------"
        ]
      }
    }
  ]
}