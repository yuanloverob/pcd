{
  "cve_id": "CVE-2020-27545",
  "cve_desc": "libdwarf before 20201017 has a one-byte out-of-bounds read because of an invalid pointer dereference via an invalid line table in a crafted object.",
  "repo": "davea42/libdwarf-code",
  "patch_hash": "95f634808c01f1c61bbec56ed2395af997f397ea",
  "patch_info": {
    "commit_hash": "95f634808c01f1c61bbec56ed2395af997f397ea",
    "repo": "davea42/libdwarf-code",
    "commit_url": "https://github.com/davea42/libdwarf-code/commit/95f634808c01f1c61bbec56ed2395af997f397ea",
    "files": [
      "ChangeLog",
      "configure",
      "configure.ac",
      "dwarfdump/ChangeLog",
      "dwarfdump/dwarf_names.c",
      "dwarfdump/dwarf_names.h",
      "dwarfdump/dwarfdump-ta-ext-table.h",
      "dwarfdump/dwarfdump-ta-table.h",
      "dwarfdump/dwarfdump-tt-ext-table.h",
      "dwarfdump/dwarfdump-tt-table.h",
      "libdwarf/ChangeLog",
      "libdwarf/dwarf_names.c",
      "libdwarf/dwarf_names.h",
      "libdwarf/dwarf_names_enum.h",
      "libdwarf/dwarf_names_new.h",
      "libdwarf/generated_libdwarf.h.in",
      "libdwarf/libdwarf_version.h"
    ],
    "message": "modified:   configure \tmodified:   configure.ac now version 20201017\n\nupdated version string libdwarf_version.h\nand regenerated files that have the version\nstring.\n\tmodified:   dwarfdump/dwarf_names.c\n\tmodified:   dwarfdump/dwarf_names.h\n\tmodified:   dwarfdump/dwarfdump-ta-ext-table.h\n\tmodified:   dwarfdump/dwarfdump-ta-table.h\n\tmodified:   dwarfdump/dwarfdump-tt-ext-table.h\n\tmodified:   dwarfdump/dwarfdump-tt-table.h\n\n\tmodified:   libdwarf/dwarf_names.c\n\tmodified:   libdwarf/dwarf_names.h\n\tmodified:   libdwarf/dwarf_names_enum.h\n\tmodified:   libdwarf/dwarf_names_new.h\n\tmodified:   libdwarf/generated_libdwarf.h.in\n\tmodified:   libdwarf/libdwarf_version.h",
    "before_after_code_files": [
      "configure.ac||configure.ac",
      "dwarfdump/dwarf_names.c||dwarfdump/dwarf_names.c",
      "dwarfdump/dwarf_names.h||dwarfdump/dwarf_names.h",
      "dwarfdump/dwarfdump-ta-ext-table.h||dwarfdump/dwarfdump-ta-ext-table.h",
      "dwarfdump/dwarfdump-ta-table.h||dwarfdump/dwarfdump-ta-table.h",
      "dwarfdump/dwarfdump-tt-ext-table.h||dwarfdump/dwarfdump-tt-ext-table.h",
      "dwarfdump/dwarfdump-tt-table.h||dwarfdump/dwarfdump-tt-table.h",
      "libdwarf/dwarf_names.c||libdwarf/dwarf_names.c",
      "libdwarf/dwarf_names.h||libdwarf/dwarf_names.h",
      "libdwarf/dwarf_names_enum.h||libdwarf/dwarf_names_enum.h",
      "libdwarf/dwarf_names_new.h||libdwarf/dwarf_names_new.h",
      "libdwarf/generated_libdwarf.h.in||libdwarf/generated_libdwarf.h.in",
      "libdwarf/libdwarf_version.h||libdwarf/libdwarf_version.h"
    ]
  },
  "patch_diff": {
    "configure.ac||configure.ac": [
      "File: configure.ac -> configure.ac",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: ### Sets the release name.",
      "18: ###m4_define([v_date], [m4_esyscmd_s([date \"+%Y%m%d\"])])",
      "21: AC_PREREQ([2.52])",
      "22: ### 2nd arg to AC_INIT is the version 'number'.",
      "",
      "[Removed Lines]",
      "19: m4_define([v_date], [20201011])])",
      "",
      "[Added Lines]",
      "19: m4_define([v_date], [20201017])])",
      "",
      "---------------"
    ],
    "dwarfdump/dwarf_names.c||dwarfdump/dwarf_names.c": [
      "File: dwarfdump/dwarf_names.c -> dwarfdump/dwarf_names.c"
    ],
    "dwarfdump/dwarf_names.h||dwarfdump/dwarf_names.h": [
      "File: dwarfdump/dwarf_names.h -> dwarfdump/dwarf_names.h"
    ],
    "dwarfdump/dwarfdump-ta-ext-table.h||dwarfdump/dwarfdump-ta-ext-table.h": [
      "File: dwarfdump/dwarfdump-ta-ext-table.h -> dwarfdump/dwarfdump-ta-ext-table.h"
    ],
    "dwarfdump/dwarfdump-ta-table.h||dwarfdump/dwarfdump-ta-table.h": [
      "File: dwarfdump/dwarfdump-ta-table.h -> dwarfdump/dwarfdump-ta-table.h"
    ],
    "dwarfdump/dwarfdump-tt-ext-table.h||dwarfdump/dwarfdump-tt-ext-table.h": [
      "File: dwarfdump/dwarfdump-tt-ext-table.h -> dwarfdump/dwarfdump-tt-ext-table.h"
    ],
    "dwarfdump/dwarfdump-tt-table.h||dwarfdump/dwarfdump-tt-table.h": [
      "File: dwarfdump/dwarfdump-tt-table.h -> dwarfdump/dwarfdump-tt-table.h"
    ],
    "libdwarf/dwarf_names.c||libdwarf/dwarf_names.c": [
      "File: libdwarf/dwarf_names.c -> libdwarf/dwarf_names.c"
    ],
    "libdwarf/dwarf_names.h||libdwarf/dwarf_names.h": [
      "File: libdwarf/dwarf_names.h -> libdwarf/dwarf_names.h"
    ],
    "libdwarf/dwarf_names_enum.h||libdwarf/dwarf_names_enum.h": [
      "File: libdwarf/dwarf_names_enum.h -> libdwarf/dwarf_names_enum.h"
    ],
    "libdwarf/dwarf_names_new.h||libdwarf/dwarf_names_new.h": [
      "File: libdwarf/dwarf_names_new.h -> libdwarf/dwarf_names_new.h"
    ],
    "libdwarf/generated_libdwarf.h.in||libdwarf/generated_libdwarf.h.in": [
      "File: libdwarf/generated_libdwarf.h.in -> libdwarf/generated_libdwarf.h.in",
      "--- Hunk 1 ---",
      "[Context before]",
      "3320:     Dwarf_Error    * /*error*/);",
      "3324: int dwarf_macro_operands_table(Dwarf_Macro_Context /*head*/,",
      "3326:     Dwarf_Half  * /*opcode_number*/,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3323:     in the macro unit header. The last op has",
      "",
      "---------------"
    ],
    "libdwarf/libdwarf_version.h||libdwarf/libdwarf_version.h": [
      "File: libdwarf/libdwarf_version.h -> libdwarf/libdwarf_version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "4:     and is modified from time to time.",
      "",
      "[Removed Lines]",
      "7: #define DW_VERSION_DATE_STR \" 2020-10-11 11:34:27-07:00  \"",
      "",
      "[Added Lines]",
      "7: #define DW_VERSION_DATE_STR \" 2020-10-17 11:30:22-07:00  \"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a8aef5095849b272f6c6cfedaabf74d685736c23",
      "candidate_info": {
        "commit_hash": "a8aef5095849b272f6c6cfedaabf74d685736c23",
        "repo": "davea42/libdwarf-code",
        "commit_url": "https://github.com/davea42/libdwarf-code/commit/a8aef5095849b272f6c6cfedaabf74d685736c23",
        "files": [
          "ChangeLog",
          "configure",
          "configure.ac"
        ],
        "message": "Version now 20201123 \tmodified:   configure.ac \tmodified:   configure",
        "before_after_code_files": [
          "configure.ac||configure.ac"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: ### Sets the release name.",
          "18: ###m4_define([v_date], [m4_esyscmd_s([date \"+%Y%m%d\"])])",
          "21: AC_PREREQ([2.52])",
          "22: ### 2nd arg to AC_INIT is the version 'number'.",
          "",
          "[Removed Lines]",
          "19: m4_define([v_date], [20201109])])",
          "",
          "[Added Lines]",
          "19: m4_define([v_date], [20201123])])",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7e3d0ec9c3947ddd9933d3af9998aede829a8773",
      "candidate_info": {
        "commit_hash": "7e3d0ec9c3947ddd9933d3af9998aede829a8773",
        "repo": "davea42/libdwarf-code",
        "commit_url": "https://github.com/davea42/libdwarf-code/commit/7e3d0ec9c3947ddd9933d3af9998aede829a8773",
        "files": [
          "libdwarf/ChangeLog",
          "libdwarf/dwarf_names.c",
          "libdwarf/dwarf_names.h",
          "libdwarf/dwarf_names_enum.h",
          "libdwarf/dwarf_names_new.h",
          "libdwarf/libdwarf_version.h"
        ],
        "message": "New version string \tmodified:   libdwarf_version.h\n\nRegenerated\n\tmodified:   dwarf_names.c\n\tmodified:   dwarf_names.h\n\tmodified:   dwarf_names_enum.h\n\tmodified:   dwarf_names_new.h",
        "before_after_code_files": [
          "libdwarf/dwarf_names.c||libdwarf/dwarf_names.c",
          "libdwarf/dwarf_names.h||libdwarf/dwarf_names.h",
          "libdwarf/dwarf_names_enum.h||libdwarf/dwarf_names_enum.h",
          "libdwarf/dwarf_names_new.h||libdwarf/dwarf_names_new.h",
          "libdwarf/libdwarf_version.h||libdwarf/libdwarf_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libdwarf/dwarf_names.c||libdwarf/dwarf_names.c",
            "libdwarf/dwarf_names.h||libdwarf/dwarf_names.h",
            "libdwarf/dwarf_names_enum.h||libdwarf/dwarf_names_enum.h",
            "libdwarf/dwarf_names_new.h||libdwarf/dwarf_names_new.h",
            "libdwarf/libdwarf_version.h||libdwarf/libdwarf_version.h"
          ],
          "candidate": [
            "libdwarf/dwarf_names.c||libdwarf/dwarf_names.c",
            "libdwarf/dwarf_names.h||libdwarf/dwarf_names.h",
            "libdwarf/dwarf_names_enum.h||libdwarf/dwarf_names_enum.h",
            "libdwarf/dwarf_names_new.h||libdwarf/dwarf_names_new.h",
            "libdwarf/libdwarf_version.h||libdwarf/libdwarf_version.h"
          ]
        }
      },
      "candidate_diff": {
        "libdwarf/dwarf_names.c||libdwarf/dwarf_names.c": [
          "File: libdwarf/dwarf_names.c -> libdwarf/dwarf_names.c"
        ],
        "libdwarf/dwarf_names.h||libdwarf/dwarf_names.h": [
          "File: libdwarf/dwarf_names.h -> libdwarf/dwarf_names.h"
        ],
        "libdwarf/dwarf_names_enum.h||libdwarf/dwarf_names_enum.h": [
          "File: libdwarf/dwarf_names_enum.h -> libdwarf/dwarf_names_enum.h"
        ],
        "libdwarf/dwarf_names_new.h||libdwarf/dwarf_names_new.h": [
          "File: libdwarf/dwarf_names_new.h -> libdwarf/dwarf_names_new.h"
        ],
        "libdwarf/libdwarf_version.h||libdwarf/libdwarf_version.h": [
          "File: libdwarf/libdwarf_version.h -> libdwarf/libdwarf_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:     and is modified from time to time.",
          "",
          "[Removed Lines]",
          "7: #define DW_VERSION_DATE_STR \" 2021-02-15 14:54:41-08:00  \"",
          "",
          "[Added Lines]",
          "7: #define DW_VERSION_DATE_STR \" 2021-03-05 18:40:37-08:00  \"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03f20230b617a148dbb3e0d257cbd916802c95b2",
      "candidate_info": {
        "commit_hash": "03f20230b617a148dbb3e0d257cbd916802c95b2",
        "repo": "davea42/libdwarf-code",
        "commit_url": "https://github.com/davea42/libdwarf-code/commit/03f20230b617a148dbb3e0d257cbd916802c95b2",
        "files": [
          "ChangeLog",
          "configure",
          "configure.ac",
          "dwarfdump/ChangeLog",
          "dwarfdump/dwarf_names.c",
          "dwarfdump/dwarf_names.h",
          "dwarfdump/dwarfdump-ta-ext-table.h",
          "dwarfdump/dwarfdump-ta-table.h",
          "dwarfdump/dwarfdump-tt-ext-table.h",
          "dwarfdump/dwarfdump-tt-table.h",
          "libdwarf/ChangeLog",
          "libdwarf/dwarf_names.c",
          "libdwarf/dwarf_names.h",
          "libdwarf/dwarf_names_enum.h",
          "libdwarf/dwarf_names_new.h",
          "libdwarf/libdwarf_version.h"
        ],
        "message": "New version, 20201125 and new version strings.\n\n\tmodified:   configure\n\tmodified:   configure.ac\n\n\tmodified:   dwarfdump/dwarf_names.c\n\tmodified:   dwarfdump/dwarf_names.h\n\tmodified:   dwarfdump/dwarfdump-ta-ext-table.h\n\tmodified:   dwarfdump/dwarfdump-ta-table.h\n\tmodified:   dwarfdump/dwarfdump-tt-ext-table.h\n\tmodified:   dwarfdump/dwarfdump-tt-table.h\n\n\tmodified:   libdwarf/dwarf_names.c\n\tmodified:   libdwarf/dwarf_names.h\n\tmodified:   libdwarf/dwarf_names_enum.h\n\tmodified:   libdwarf/dwarf_names_new.h\n\tmodified:   libdwarf/libdwarf_version.h",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "dwarfdump/dwarf_names.c||dwarfdump/dwarf_names.c",
          "dwarfdump/dwarf_names.h||dwarfdump/dwarf_names.h",
          "dwarfdump/dwarfdump-ta-ext-table.h||dwarfdump/dwarfdump-ta-ext-table.h",
          "dwarfdump/dwarfdump-ta-table.h||dwarfdump/dwarfdump-ta-table.h",
          "dwarfdump/dwarfdump-tt-ext-table.h||dwarfdump/dwarfdump-tt-ext-table.h",
          "dwarfdump/dwarfdump-tt-table.h||dwarfdump/dwarfdump-tt-table.h",
          "libdwarf/dwarf_names.c||libdwarf/dwarf_names.c",
          "libdwarf/dwarf_names.h||libdwarf/dwarf_names.h",
          "libdwarf/dwarf_names_enum.h||libdwarf/dwarf_names_enum.h",
          "libdwarf/dwarf_names_new.h||libdwarf/dwarf_names_new.h",
          "libdwarf/libdwarf_version.h||libdwarf/libdwarf_version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "dwarfdump/dwarf_names.c||dwarfdump/dwarf_names.c",
            "dwarfdump/dwarf_names.h||dwarfdump/dwarf_names.h",
            "dwarfdump/dwarfdump-ta-ext-table.h||dwarfdump/dwarfdump-ta-ext-table.h",
            "dwarfdump/dwarfdump-ta-table.h||dwarfdump/dwarfdump-ta-table.h",
            "dwarfdump/dwarfdump-tt-ext-table.h||dwarfdump/dwarfdump-tt-ext-table.h",
            "dwarfdump/dwarfdump-tt-table.h||dwarfdump/dwarfdump-tt-table.h",
            "libdwarf/dwarf_names.c||libdwarf/dwarf_names.c",
            "libdwarf/dwarf_names.h||libdwarf/dwarf_names.h",
            "libdwarf/dwarf_names_enum.h||libdwarf/dwarf_names_enum.h",
            "libdwarf/dwarf_names_new.h||libdwarf/dwarf_names_new.h",
            "libdwarf/libdwarf_version.h||libdwarf/libdwarf_version.h"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "dwarfdump/dwarf_names.c||dwarfdump/dwarf_names.c",
            "dwarfdump/dwarf_names.h||dwarfdump/dwarf_names.h",
            "dwarfdump/dwarfdump-ta-ext-table.h||dwarfdump/dwarfdump-ta-ext-table.h",
            "dwarfdump/dwarfdump-ta-table.h||dwarfdump/dwarfdump-ta-table.h",
            "dwarfdump/dwarfdump-tt-ext-table.h||dwarfdump/dwarfdump-tt-ext-table.h",
            "dwarfdump/dwarfdump-tt-table.h||dwarfdump/dwarfdump-tt-table.h",
            "libdwarf/dwarf_names.c||libdwarf/dwarf_names.c",
            "libdwarf/dwarf_names.h||libdwarf/dwarf_names.h",
            "libdwarf/dwarf_names_enum.h||libdwarf/dwarf_names_enum.h",
            "libdwarf/dwarf_names_new.h||libdwarf/dwarf_names_new.h",
            "libdwarf/libdwarf_version.h||libdwarf/libdwarf_version.h"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: ### Sets the release name.",
          "18: ###m4_define([v_date], [m4_esyscmd_s([date \"+%Y%m%d\"])])",
          "21: AC_PREREQ([2.52])",
          "22: ### 2nd arg to AC_INIT is the version 'number'.",
          "",
          "[Removed Lines]",
          "19: m4_define([v_date], [20201123])])",
          "",
          "[Added Lines]",
          "19: m4_define([v_date], [20201125])])",
          "",
          "---------------"
        ],
        "dwarfdump/dwarf_names.c||dwarfdump/dwarf_names.c": [
          "File: dwarfdump/dwarf_names.c -> dwarfdump/dwarf_names.c"
        ],
        "dwarfdump/dwarf_names.h||dwarfdump/dwarf_names.h": [
          "File: dwarfdump/dwarf_names.h -> dwarfdump/dwarf_names.h"
        ],
        "dwarfdump/dwarfdump-ta-ext-table.h||dwarfdump/dwarfdump-ta-ext-table.h": [
          "File: dwarfdump/dwarfdump-ta-ext-table.h -> dwarfdump/dwarfdump-ta-ext-table.h"
        ],
        "dwarfdump/dwarfdump-ta-table.h||dwarfdump/dwarfdump-ta-table.h": [
          "File: dwarfdump/dwarfdump-ta-table.h -> dwarfdump/dwarfdump-ta-table.h"
        ],
        "dwarfdump/dwarfdump-tt-ext-table.h||dwarfdump/dwarfdump-tt-ext-table.h": [
          "File: dwarfdump/dwarfdump-tt-ext-table.h -> dwarfdump/dwarfdump-tt-ext-table.h"
        ],
        "dwarfdump/dwarfdump-tt-table.h||dwarfdump/dwarfdump-tt-table.h": [
          "File: dwarfdump/dwarfdump-tt-table.h -> dwarfdump/dwarfdump-tt-table.h"
        ],
        "libdwarf/dwarf_names.c||libdwarf/dwarf_names.c": [
          "File: libdwarf/dwarf_names.c -> libdwarf/dwarf_names.c"
        ],
        "libdwarf/dwarf_names.h||libdwarf/dwarf_names.h": [
          "File: libdwarf/dwarf_names.h -> libdwarf/dwarf_names.h"
        ],
        "libdwarf/dwarf_names_enum.h||libdwarf/dwarf_names_enum.h": [
          "File: libdwarf/dwarf_names_enum.h -> libdwarf/dwarf_names_enum.h"
        ],
        "libdwarf/dwarf_names_new.h||libdwarf/dwarf_names_new.h": [
          "File: libdwarf/dwarf_names_new.h -> libdwarf/dwarf_names_new.h"
        ],
        "libdwarf/libdwarf_version.h||libdwarf/libdwarf_version.h": [
          "File: libdwarf/libdwarf_version.h -> libdwarf/libdwarf_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:     and is modified from time to time.",
          "",
          "[Removed Lines]",
          "7: #define DW_VERSION_DATE_STR \" 2020-11-23 18:16:30-08:00  \"",
          "",
          "[Added Lines]",
          "7: #define DW_VERSION_DATE_STR \" 2020-11-25 09:07:03-08:00  \"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "27a6b6b0df2157eb8812c6ba8177284ef63d8e38",
      "candidate_info": {
        "commit_hash": "27a6b6b0df2157eb8812c6ba8177284ef63d8e38",
        "repo": "davea42/libdwarf-code",
        "commit_url": "https://github.com/davea42/libdwarf-code/commit/27a6b6b0df2157eb8812c6ba8177284ef63d8e38",
        "files": [
          "ChangeLog",
          "NEWS",
          "configure",
          "configure.ac",
          "dwarfdump/CMakeLists.txt",
          "dwarfdump/ChangeLog",
          "dwarfdump/Makefile.am",
          "dwarfdump/Makefile.in",
          "dwarfdump/buildopscounttab.c",
          "dwarfdump/esb.c",
          "dwarfdump/opscounttab.c",
          "dwarfdump/opscounttab.h",
          "dwarfdump/print_die.c",
          "dwarfdump/print_loclists.c",
          "dwarfdump/print_macro.c",
          "dwarfdump/print_ranges.c",
          "scripts/buildstandardsource.sh",
          "scripts/ddbuild.sh"
        ],
        "message": "Base files:     * configure.ac: Now version 20201223.     * configure: Regenerated.     * scripts/buildstandardsource.sh: Added a clarifying       comment.     * scripts/ddbuild.sh: Now builds the sourcefile       opstabcount.c for dwarfdump.\n\ndwarfdump/\n    * CMakeLists.txt: Adds opscounttab.c and opscounttab.h\n      to the files in the build of dwarfdump.\n    * Makefile.am: Adds opscounttab.c opscounttab.h and\n      buildopscounttab.c appropriately.\n    * Makefile.in: Regenerated.\n    * buildopscounttab.h: Fixes spelling mistake.\n    * buildopscounttab.c: Fixes DW_OP_lit0 input.\n      Adjusts indents, remove trailing white and trailing\n      blank lines.\n    * esb.c: Added ESBERR checks and that found mistakes\n      in dwarfdump source.\n    * print_die.c: include opscounttab.h. op_has_no_operands()\n      is just  reference to a byte in dwarf_opscounttab array.\n      Deleted a struct and table that is not used.\n    * print_macro.c: Fixed a esb_append_printf_u() call\n      missing a % .  Removed a stray newline from printf output.\n    * print_ranges.c: An error message was missing\n      a % to esb_append_printf_u. Fixed.\n    * print_loclists.c: Rearranged 4 lines so it is easy\n      to see that the printf has its 0x%  before DW_PR_XZEROS etc.",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "dwarfdump/Makefile.am||dwarfdump/Makefile.am",
          "dwarfdump/Makefile.in||dwarfdump/Makefile.in",
          "dwarfdump/buildopscounttab.c||dwarfdump/buildopscounttab.c",
          "dwarfdump/esb.c||dwarfdump/esb.c",
          "dwarfdump/opscounttab.c||dwarfdump/opscounttab.c",
          "dwarfdump/opscounttab.h||dwarfdump/opscounttab.h",
          "dwarfdump/print_die.c||dwarfdump/print_die.c",
          "dwarfdump/print_loclists.c||dwarfdump/print_loclists.c",
          "dwarfdump/print_macro.c||dwarfdump/print_macro.c",
          "dwarfdump/print_ranges.c||dwarfdump/print_ranges.c",
          "scripts/buildstandardsource.sh||scripts/buildstandardsource.sh",
          "scripts/ddbuild.sh||scripts/ddbuild.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: ### Sets the release name.",
          "18: ###m4_define([v_date], [m4_esyscmd_s([date \"+%Y%m%d\"])])",
          "21: AC_PREREQ([2.52])",
          "22: ### 2nd arg to AC_INIT is the version 'number'.",
          "",
          "[Removed Lines]",
          "19: m4_define([v_date], [20201201])])",
          "",
          "[Added Lines]",
          "19: m4_define([v_date], [20201223])])",
          "",
          "---------------"
        ],
        "dwarfdump/Makefile.am||dwarfdump/Makefile.am": [
          "File: dwarfdump/Makefile.am -> dwarfdump/Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: makename.h \\",
          "48: naming.c \\",
          "49: naming.h \\",
          "50: print_abbrevs.c \\",
          "51: print_aranges.c \\",
          "52: print_debugfission.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: opscounttab.c \\",
          "51: opscounttab.h \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133: README \\",
          "134: README.testcases \\",
          "135: CODINGSTYLE \\",
          "136: print_reloc_decls.h \\",
          "137: makename_test.c  \\",
          "138: section_bitmaps_test.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "138: buildopscounttab.c \\",
          "",
          "---------------"
        ],
        "dwarfdump/Makefile.in||dwarfdump/Makefile.in": [
          "File: dwarfdump/Makefile.in -> dwarfdump/Makefile.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "119:  dwarfdump-esb.$(OBJEXT) dwarfdump-glflags.$(OBJEXT) \\",
          "120:  dwarfdump-helpertree.$(OBJEXT) dwarfdump-macrocheck.$(OBJEXT) \\",
          "121:  dwarfdump-makename.$(OBJEXT) dwarfdump-naming.$(OBJEXT) \\",
          "122:  dwarfdump-print_abbrevs.$(OBJEXT) \\",
          "123:  dwarfdump-print_aranges.$(OBJEXT) \\",
          "124:  dwarfdump-print_debugfission.$(OBJEXT) \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "122:  dwarfdump-opscounttab.$(OBJEXT) \\",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "192:  ./$(DEPDIR)/dwarfdump-macrocheck.Po \\",
          "193:  ./$(DEPDIR)/dwarfdump-makename.Po \\",
          "194:  ./$(DEPDIR)/dwarfdump-naming.Po \\",
          "195:  ./$(DEPDIR)/dwarfdump-print_abbrevs.Po \\",
          "196:  ./$(DEPDIR)/dwarfdump-print_aranges.Po \\",
          "197:  ./$(DEPDIR)/dwarfdump-print_debug_gnu.Po \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "196:  ./$(DEPDIR)/dwarfdump-opscounttab.Po \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "656: makename.h \\",
          "657: naming.c \\",
          "658: naming.h \\",
          "659: print_abbrevs.c \\",
          "660: print_aranges.c \\",
          "661: print_debugfission.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "661: opscounttab.c \\",
          "662: opscounttab.h \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "738: README \\",
          "739: README.testcases \\",
          "740: CODINGSTYLE \\",
          "741: print_reloc_decls.h \\",
          "742: makename_test.c  \\",
          "743: section_bitmaps_test.c \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "745: buildopscounttab.c \\",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "871: @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarfdump-macrocheck.Po@am__quote@ # am--include-marker",
          "872: @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarfdump-makename.Po@am__quote@ # am--include-marker",
          "873: @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarfdump-naming.Po@am__quote@ # am--include-marker",
          "874: @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarfdump-print_abbrevs.Po@am__quote@ # am--include-marker",
          "875: @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarfdump-print_aranges.Po@am__quote@ # am--include-marker",
          "876: @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarfdump-print_debug_gnu.Po@am__quote@ # am--include-marker",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "879: @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dwarfdump-opscounttab.Po@am__quote@ # am--include-marker",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1161: @AMDEP_TRUE@@am__fastdepCC_FALSE@ DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@",
          "1162: @am__fastdepCC_FALSE@ $(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dwarfdump_CPPFLAGS) $(CPPFLAGS) $(dwarfdump_CFLAGS) $(CFLAGS) -c -o dwarfdump-naming.obj `if test -f 'naming.c'; then $(CYGPATH_W) 'naming.c'; else $(CYGPATH_W) '$(srcdir)/naming.c'; fi`",
          "1164: dwarfdump-print_abbrevs.o: print_abbrevs.c",
          "1165: @am__fastdepCC_TRUE@ $(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dwarfdump_CPPFLAGS) $(CPPFLAGS) $(dwarfdump_CFLAGS) $(CFLAGS) -MT dwarfdump-print_abbrevs.o -MD -MP -MF $(DEPDIR)/dwarfdump-print_abbrevs.Tpo -c -o dwarfdump-print_abbrevs.o `test -f 'print_abbrevs.c' || echo '$(srcdir)/'`print_abbrevs.c",
          "1166: @am__fastdepCC_TRUE@ $(AM_V_at)$(am__mv) $(DEPDIR)/dwarfdump-print_abbrevs.Tpo $(DEPDIR)/dwarfdump-print_abbrevs.Po",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1170: dwarfdump-opscounttab.o: opscounttab.c",
          "1171: @am__fastdepCC_TRUE@ $(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dwarfdump_CPPFLAGS) $(CPPFLAGS) $(dwarfdump_CFLAGS) $(CFLAGS) -MT dwarfdump-opscounttab.o -MD -MP -MF $(DEPDIR)/dwarfdump-opscounttab.Tpo -c -o dwarfdump-opscounttab.o `test -f 'opscounttab.c' || echo '$(srcdir)/'`opscounttab.c",
          "1172: @am__fastdepCC_TRUE@ $(AM_V_at)$(am__mv) $(DEPDIR)/dwarfdump-opscounttab.Tpo $(DEPDIR)/dwarfdump-opscounttab.Po",
          "1173: @AMDEP_TRUE@@am__fastdepCC_FALSE@ $(AM_V_CC)source='opscounttab.c' object='dwarfdump-opscounttab.o' libtool=no @AMDEPBACKSLASH@",
          "1174: @AMDEP_TRUE@@am__fastdepCC_FALSE@ DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@",
          "1175: @am__fastdepCC_FALSE@ $(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dwarfdump_CPPFLAGS) $(CPPFLAGS) $(dwarfdump_CFLAGS) $(CFLAGS) -c -o dwarfdump-opscounttab.o `test -f 'opscounttab.c' || echo '$(srcdir)/'`opscounttab.c",
          "1177: dwarfdump-opscounttab.obj: opscounttab.c",
          "1178: @am__fastdepCC_TRUE@ $(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dwarfdump_CPPFLAGS) $(CPPFLAGS) $(dwarfdump_CFLAGS) $(CFLAGS) -MT dwarfdump-opscounttab.obj -MD -MP -MF $(DEPDIR)/dwarfdump-opscounttab.Tpo -c -o dwarfdump-opscounttab.obj `if test -f 'opscounttab.c'; then $(CYGPATH_W) 'opscounttab.c'; else $(CYGPATH_W) '$(srcdir)/opscounttab.c'; fi`",
          "1179: @am__fastdepCC_TRUE@ $(AM_V_at)$(am__mv) $(DEPDIR)/dwarfdump-opscounttab.Tpo $(DEPDIR)/dwarfdump-opscounttab.Po",
          "1180: @AMDEP_TRUE@@am__fastdepCC_FALSE@ $(AM_V_CC)source='opscounttab.c' object='dwarfdump-opscounttab.obj' libtool=no @AMDEPBACKSLASH@",
          "1181: @AMDEP_TRUE@@am__fastdepCC_FALSE@ DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@",
          "1182: @am__fastdepCC_FALSE@ $(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(dwarfdump_CPPFLAGS) $(CPPFLAGS) $(dwarfdump_CFLAGS) $(CFLAGS) -c -o dwarfdump-opscounttab.obj `if test -f 'opscounttab.c'; then $(CYGPATH_W) 'opscounttab.c'; else $(CYGPATH_W) '$(srcdir)/opscounttab.c'; fi`",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2033:  -rm -f ./$(DEPDIR)/dwarfdump-macrocheck.Po",
          "2034:  -rm -f ./$(DEPDIR)/dwarfdump-makename.Po",
          "2035:  -rm -f ./$(DEPDIR)/dwarfdump-naming.Po",
          "2036:  -rm -f ./$(DEPDIR)/dwarfdump-print_abbrevs.Po",
          "2037:  -rm -f ./$(DEPDIR)/dwarfdump-print_aranges.Po",
          "2038:  -rm -f ./$(DEPDIR)/dwarfdump-print_debug_gnu.Po",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2056:  -rm -f ./$(DEPDIR)/dwarfdump-opscounttab.Po",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2129:  -rm -f ./$(DEPDIR)/dwarfdump-macrocheck.Po",
          "2130:  -rm -f ./$(DEPDIR)/dwarfdump-makename.Po",
          "2131:  -rm -f ./$(DEPDIR)/dwarfdump-naming.Po",
          "2132:  -rm -f ./$(DEPDIR)/dwarfdump-print_abbrevs.Po",
          "2133:  -rm -f ./$(DEPDIR)/dwarfdump-print_aranges.Po",
          "2134:  -rm -f ./$(DEPDIR)/dwarfdump-print_debug_gnu.Po",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2153:  -rm -f ./$(DEPDIR)/dwarfdump-opscounttab.Po",
          "",
          "---------------"
        ],
        "dwarfdump/buildopscounttab.c||dwarfdump/buildopscounttab.c": [
          "File: dwarfdump/buildopscounttab.c -> dwarfdump/buildopscounttab.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: Copyright (c) 2020, David Anderson",
          "3: All rights reserved.",
          "5: This software file is hereby placed in the public domain.",
          "6: For use by anyone for any purpose.",
          "10:    a simple fast-access C table.",
          "11:    Build and run with",
          "12:    cc -I ../libdwarf buildopscounttab.c dwarf_names.c -o buildop",
          "13:    ./buildop >opscounttab.c",
          "17: #include <stdio.h>",
          "18: #include \"dwarf.h\"",
          "19: #include \"dwarf_names.h\"",
          "20: #include \"opscounttab.h\"",
          "21: struct ops_table_s {",
          "22:    unsigned char ot_first;",
          "23:    unsigned char ot_last;",
          "24:    signed   char ot_opcount;",
          "25: };",
          "27: #define DW_DLV_OK 0",
          "28: #define DW_DLV_ERROR -1",
          "30: struct ops_table_s optabsource[]= {",
          "31: {DW_OP_addr  ,         0                       , 1 },",
          "32: {DW_OP_deref  ,        0                       , 0 },",
          "33: {DW_OP_const1u,        DW_OP_consts            , 1},",
          "34: {DW_OP_dup,            DW_OP_over              , 0},",
          "35: {DW_OP_pick,           0                       , 1},",
          "36: {DW_OP_swap,           DW_OP_plus              , 0},",
          "37: {DW_OP_plus_uconst,    0                       , 1},",
          "38: {DW_OP_shl,            DW_OP_xor               , 0},",
          "39: {DW_OP_bra ,           0                       , 1},",
          "40: {DW_OP_eq,             DW_OP_ne                , 0},",
          "41: {DW_OP_skip,           0                       , 1},",
          "42: {DW_OP_lit0  ,         DW_OP_lit31             , 0},",
          "43: {DW_OP_reg0  ,         DW_OP_reg31             , 0},",
          "44: {DW_OP_breg0 ,         DW_OP_breg31            , 1},",
          "45: {DW_OP_regx  ,         DW_OP_fbreg             , 1},",
          "46: {DW_OP_bregx,          0                       , 2},",
          "47: {DW_OP_piece,          DW_OP_xderef_size       , 1},",
          "48: {DW_OP_nop  ,          DW_OP_push_object_address ,0},",
          "49: {DW_OP_call2,          DW_OP_call_ref          , 1},",
          "50: {DW_OP_form_tls_address, DW_OP_call_frame_cfa  , 0},",
          "51: {DW_OP_bit_piece,      DW_OP_implicit_value    , 2},",
          "52: {DW_OP_stack_value,            0               , 0},",
          "53: {DW_OP_implicit_pointer,       0               , 2},",
          "54: {DW_OP_addrx,          DW_OP_constx            , 1},",
          "55: {DW_OP_entry_value,             0              , 2},",
          "56: {DW_OP_const_type,              0              , 3},",
          "57: {DW_OP_regval_type, DW_OP_deref_type           , 2},",
          "58: {DW_OP_xderef_type,    0, 0},",
          "59: {DW_OP_convert, DW_OP_reinterpret             , 1},",
          "60: {DW_OP_GNU_push_tls_address,  0,0 },",
          "61: {DW_OP_GNU_uninit,              0              , 0},",
          "62: {DW_OP_GNU_encoded_addr,        0              , 1},",
          "63: {DW_OP_GNU_implicit_pointer,DW_OP_GNU_entry_value , 2},",
          "64: {DW_OP_GNU_const_type,          0              , 3},",
          "65: {DW_OP_GNU_regval_type,DW_OP_GNU_deref_type    , 2},",
          "66: {DW_OP_GNU_convert,    DW_OP_GNU_variable_value, 1},",
          "67: {0,0}",
          "68: };",
          "70: int main()",
          "71: {",
          "72:     struct ops_table_s *op;",
          "73:     int inindex = 0;",
          "74:     int outindex = 0;",
          "75:     int f = 0;",
          "76:     int l = 0;",
          "77:     int c = 0;",
          "78:     int res = 0;",
          "79:     int lastop = 0;",
          "81:     printf(\"/*  Generated expression ops table,\\n\");",
          "82:     printf(\"    do not edit. */\\n\");",
          "83:     printf(\"#include \\\"opscounttab.h\\\"\\n\");",
          "84:     printf(\"\\n\");",
          "85:     printf(\"struct dwarf_opscounttab_s dwarf_opscounttab[] = {\\n\");",
          "86:     for ( ;  ; ++inindex) {",
          "87:         const char *opn = 0;",
          "89:         op = &optabsource[inindex];",
          "90:         f = op->ot_first;",
          "91:         if (!f) {",
          "92:               break;",
          "93:         }",
          "94:         if (lastop && f < lastop) {",
          "95:               printf(\"FAILED buildopscounttab on OP,out of sequence\"",
          "96:                   \" f=0x%x lastop=0x%x\\n\",",
          "97:                   (unsigned)f,(unsigned)lastop);",
          "99:         }",
          "100:         l = op->ot_last;",
          "101:         c = op->ot_opcount;",
          "102:         while (f > outindex) {",
          "103:               printf(\"{/* %-26s 0x%02x*/ %d},\\n\",\"unused\",outindex,-1);",
          "104:               ++outindex;",
          "105:         }",
          "106:         if (!l) {",
          "107:               res = dwarf_get_OP_name(f,&opn);",
          "108:               if (res != DW_DLV_OK) {",
          "109:                   printf(\"FAILED buildopscounttab on OP 0x%x\\n\",",
          "110:                       f);",
          "112:               }",
          "113:               lastop = f;",
          "114:               printf(\"{/* %-26s 0x%02x*/ %d},\\n\",opn,f,c);",
          "115:               ++outindex;",
          "116:         } else {",
          "117:               int j = f;",
          "118:               for (  ; j <= l; ++j) {",
          "119:                   res = dwarf_get_OP_name(j,&opn);",
          "120:                   if (res != DW_DLV_OK) {",
          "121:                       printf(\"FAILED buildopscounttab on OP 0x%x\\n\",",
          "122:                           f);",
          "124:                   }",
          "125:                   printf(\"{/* %-26s 0x%2x*/ %d},\\n\",opn,j,c);",
          "126:                   ++outindex;",
          "127:                   lastop = j;",
          "128:               }",
          "129:         }",
          "130:     }",
          "131:     while (outindex < DWOPS_ARRAY_SIZE) {",
          "132:           printf(\"{/* %-26s 0x%02x*/ %d},\\n\",\"unused\",outindex,-1);",
          "133:           ++outindex;",
          "134:     }",
          "135:     printf(\"};\\n\");",
          "136:     return 0;",
          "137: }",
          "",
          "---------------"
        ],
        "dwarfdump/esb.c||dwarfdump/esb.c": [
          "File: dwarfdump/esb.c -> dwarfdump/esb.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "79: #define ESBERR(m) esb_appendn_internal(data,m,sizeof(m)-1)",
          "81: FILE *esb_open_null_device(void)",
          "82: {",
          "83:     if (!null_device_handle) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81: #define INCRVALIDATENEXT(n) do { \\",
          "82:      ++n ;                       \\",
          "83:      if (!format[n]) {         \\",
          "84:         ESBERR(\"ESBERR_next_followedby_end\"); \\",
          "85:         return;                  \\",
          "86:      }                           \\",
          "87:      } while (0)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "410:     if (prefixlen) {",
          "411:         esb_appendn_internal(data,format,prefixlen);",
          "412:     }",
          "413:     next++;",
          "414:     if (format[next] == '-') {",
          "415:         leftjustify++;",
          "416:         next++;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "420:     if (format[next] != '%') {",
          "422:         ESBERR(\"ESBERR..esb_append_printf_s has no percent operator\");",
          "423:         return;",
          "424:     }",
          "426:     if (format[next] == ' ') {",
          "427:         ESBERR(\"ESBERR_pct_followedby_space_in_s\");",
          "428:         return;",
          "429:     }",
          "430:     if (!format[next]) {",
          "431:         ESBERR(\"ESBERR_pct_followedby_wrong_in_s\");",
          "432:         return;",
          "433:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "510:     esb_appendn_internal(data,format,prefixlen);",
          "511:     if (format[next] != '%') {",
          "514:         return;",
          "515:     }",
          "516:     next++;",
          "517:     if (format[next] == '-') {",
          "518:         ESBERR(\"ESBERR_printf_u - format not supported\");",
          "520:     }",
          "521:     if (format[next] == '0') {",
          "522:         leadingzero = 1;",
          "524:     }",
          "525:     numptr = format+next;",
          "526:     val = strtol(numptr,&endptr,10);",
          "",
          "[Removed Lines]",
          "513:         ESBERR(\"ESBERR..esb_append_printf_u has no % operator\");",
          "519:         next++;",
          "523:         next++;",
          "",
          "[Added Lines]",
          "533:         ESBERR(\"ESBERR..esb_append_printf_u has no percent operator\");",
          "537:     if (format[next] == ' ') {",
          "538:         ESBERR(\"ESBERR_pct_followedby_space_in_s\");",
          "539:         return;",
          "540:     }",
          "541:     if (!format[next]) {",
          "542:         ESBERR(\"ESBERR_pct_followedby_wrong_in_s\");",
          "543:         return;",
          "544:     }",
          "547:         INCRVALIDATENEXT(next);",
          "551:         INCRVALIDATENEXT(next);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "686:     esb_appendn_internal(data,format,prefixlen);",
          "687:     if (format[next] != '%') {",
          "690:         return;",
          "691:     }",
          "692:     next++;",
          "693:     if (format[next] == '-') {",
          "694:         ESBERR(\"ESBERR_printf_i - format not supported\");",
          "696:     }",
          "697:     if (format[next] == '+') {",
          "698:         pluscount++;",
          "700:     }",
          "701:     if (format[next] == '0') {",
          "702:         leadingzero = 1;",
          "704:     }",
          "705:     numptr = format+next;",
          "706:     val = strtol(numptr,&endptr,10);",
          "",
          "[Removed Lines]",
          "689:         ESBERR(\"ESBERR..esb_append_printf_i has no % operator\");",
          "695:         next++;",
          "699:         next++;",
          "703:         next++;",
          "",
          "[Added Lines]",
          "717:         ESBERR(\"ESBERR..esb_append_printf_i has no percent operator\");",
          "721:     if (format[next] == ' ') {",
          "722:         ESBERR(\"ESBERR_pct_followedby_space_in_s\");",
          "723:         return;",
          "724:     }",
          "725:     if (!format[next]) {",
          "726:         ESBERR(\"ESBERR_pct_followedby_wrong_in_s\");",
          "727:         return;",
          "728:     }",
          "731:         INCRVALIDATENEXT(next);",
          "735:         INCRVALIDATENEXT(next);",
          "739:         INCRVALIDATENEXT(next);",
          "",
          "---------------"
        ],
        "dwarfdump/opscounttab.c||dwarfdump/opscounttab.c": [
          "File: dwarfdump/opscounttab.c -> dwarfdump/opscounttab.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: #include \"opscounttab.h\"",
          "5: struct dwarf_opscounttab_s dwarf_opscounttab[] = {",
          "6: {/* unused                     0x00*/ -1},",
          "7: {/* unused                     0x01*/ -1},",
          "8: {/* unused                     0x02*/ -1},",
          "9: {/* DW_OP_addr                 0x03*/ 1},",
          "10: {/* unused                     0x04*/ -1},",
          "11: {/* unused                     0x05*/ -1},",
          "12: {/* DW_OP_deref                0x06*/ 0},",
          "13: {/* unused                     0x07*/ -1},",
          "14: {/* DW_OP_const1u              0x 8*/ 1},",
          "15: {/* DW_OP_const1s              0x 9*/ 1},",
          "16: {/* DW_OP_const2u              0x a*/ 1},",
          "17: {/* DW_OP_const2s              0x b*/ 1},",
          "18: {/* DW_OP_const4u              0x c*/ 1},",
          "19: {/* DW_OP_const4s              0x d*/ 1},",
          "20: {/* DW_OP_const8u              0x e*/ 1},",
          "21: {/* DW_OP_const8s              0x f*/ 1},",
          "22: {/* DW_OP_constu               0x10*/ 1},",
          "23: {/* DW_OP_consts               0x11*/ 1},",
          "24: {/* DW_OP_dup                  0x12*/ 0},",
          "25: {/* DW_OP_drop                 0x13*/ 0},",
          "26: {/* DW_OP_over                 0x14*/ 0},",
          "27: {/* DW_OP_pick                 0x15*/ 1},",
          "28: {/* DW_OP_swap                 0x16*/ 0},",
          "29: {/* DW_OP_rot                  0x17*/ 0},",
          "30: {/* DW_OP_xderef               0x18*/ 0},",
          "31: {/* DW_OP_abs                  0x19*/ 0},",
          "32: {/* DW_OP_and                  0x1a*/ 0},",
          "33: {/* DW_OP_div                  0x1b*/ 0},",
          "34: {/* DW_OP_minus                0x1c*/ 0},",
          "35: {/* DW_OP_mod                  0x1d*/ 0},",
          "36: {/* DW_OP_mul                  0x1e*/ 0},",
          "37: {/* DW_OP_neg                  0x1f*/ 0},",
          "38: {/* DW_OP_not                  0x20*/ 0},",
          "39: {/* DW_OP_or                   0x21*/ 0},",
          "40: {/* DW_OP_plus                 0x22*/ 0},",
          "41: {/* DW_OP_plus_uconst          0x23*/ 1},",
          "42: {/* DW_OP_shl                  0x24*/ 0},",
          "43: {/* DW_OP_shr                  0x25*/ 0},",
          "44: {/* DW_OP_shra                 0x26*/ 0},",
          "45: {/* DW_OP_xor                  0x27*/ 0},",
          "46: {/* DW_OP_bra                  0x28*/ 1},",
          "47: {/* DW_OP_eq                   0x29*/ 0},",
          "48: {/* DW_OP_ge                   0x2a*/ 0},",
          "49: {/* DW_OP_gt                   0x2b*/ 0},",
          "50: {/* DW_OP_le                   0x2c*/ 0},",
          "51: {/* DW_OP_lt                   0x2d*/ 0},",
          "52: {/* DW_OP_ne                   0x2e*/ 0},",
          "53: {/* DW_OP_skip                 0x2f*/ 1},",
          "54: {/* DW_OP_lit0                 0x30*/ 0},",
          "55: {/* DW_OP_lit1                 0x31*/ 0},",
          "56: {/* DW_OP_lit2                 0x32*/ 0},",
          "57: {/* DW_OP_lit3                 0x33*/ 0},",
          "58: {/* DW_OP_lit4                 0x34*/ 0},",
          "59: {/* DW_OP_lit5                 0x35*/ 0},",
          "60: {/* DW_OP_lit6                 0x36*/ 0},",
          "61: {/* DW_OP_lit7                 0x37*/ 0},",
          "62: {/* DW_OP_lit8                 0x38*/ 0},",
          "63: {/* DW_OP_lit9                 0x39*/ 0},",
          "64: {/* DW_OP_lit10                0x3a*/ 0},",
          "65: {/* DW_OP_lit11                0x3b*/ 0},",
          "66: {/* DW_OP_lit12                0x3c*/ 0},",
          "67: {/* DW_OP_lit13                0x3d*/ 0},",
          "68: {/* DW_OP_lit14                0x3e*/ 0},",
          "69: {/* DW_OP_lit15                0x3f*/ 0},",
          "70: {/* DW_OP_lit16                0x40*/ 0},",
          "71: {/* DW_OP_lit17                0x41*/ 0},",
          "72: {/* DW_OP_lit18                0x42*/ 0},",
          "73: {/* DW_OP_lit19                0x43*/ 0},",
          "74: {/* DW_OP_lit20                0x44*/ 0},",
          "75: {/* DW_OP_lit21                0x45*/ 0},",
          "76: {/* DW_OP_lit22                0x46*/ 0},",
          "77: {/* DW_OP_lit23                0x47*/ 0},",
          "78: {/* DW_OP_lit24                0x48*/ 0},",
          "79: {/* DW_OP_lit25                0x49*/ 0},",
          "80: {/* DW_OP_lit26                0x4a*/ 0},",
          "81: {/* DW_OP_lit27                0x4b*/ 0},",
          "82: {/* DW_OP_lit28                0x4c*/ 0},",
          "83: {/* DW_OP_lit29                0x4d*/ 0},",
          "84: {/* DW_OP_lit30                0x4e*/ 0},",
          "85: {/* DW_OP_lit31                0x4f*/ 0},",
          "86: {/* DW_OP_reg0                 0x50*/ 0},",
          "87: {/* DW_OP_reg1                 0x51*/ 0},",
          "88: {/* DW_OP_reg2                 0x52*/ 0},",
          "89: {/* DW_OP_reg3                 0x53*/ 0},",
          "90: {/* DW_OP_reg4                 0x54*/ 0},",
          "91: {/* DW_OP_reg5                 0x55*/ 0},",
          "92: {/* DW_OP_reg6                 0x56*/ 0},",
          "93: {/* DW_OP_reg7                 0x57*/ 0},",
          "94: {/* DW_OP_reg8                 0x58*/ 0},",
          "95: {/* DW_OP_reg9                 0x59*/ 0},",
          "96: {/* DW_OP_reg10                0x5a*/ 0},",
          "97: {/* DW_OP_reg11                0x5b*/ 0},",
          "98: {/* DW_OP_reg12                0x5c*/ 0},",
          "99: {/* DW_OP_reg13                0x5d*/ 0},",
          "100: {/* DW_OP_reg14                0x5e*/ 0},",
          "101: {/* DW_OP_reg15                0x5f*/ 0},",
          "102: {/* DW_OP_reg16                0x60*/ 0},",
          "103: {/* DW_OP_reg17                0x61*/ 0},",
          "104: {/* DW_OP_reg18                0x62*/ 0},",
          "105: {/* DW_OP_reg19                0x63*/ 0},",
          "106: {/* DW_OP_reg20                0x64*/ 0},",
          "107: {/* DW_OP_reg21                0x65*/ 0},",
          "108: {/* DW_OP_reg22                0x66*/ 0},",
          "109: {/* DW_OP_reg23                0x67*/ 0},",
          "110: {/* DW_OP_reg24                0x68*/ 0},",
          "111: {/* DW_OP_reg25                0x69*/ 0},",
          "112: {/* DW_OP_reg26                0x6a*/ 0},",
          "113: {/* DW_OP_reg27                0x6b*/ 0},",
          "114: {/* DW_OP_reg28                0x6c*/ 0},",
          "115: {/* DW_OP_reg29                0x6d*/ 0},",
          "116: {/* DW_OP_reg30                0x6e*/ 0},",
          "117: {/* DW_OP_reg31                0x6f*/ 0},",
          "118: {/* DW_OP_breg0                0x70*/ 1},",
          "119: {/* DW_OP_breg1                0x71*/ 1},",
          "120: {/* DW_OP_breg2                0x72*/ 1},",
          "121: {/* DW_OP_breg3                0x73*/ 1},",
          "122: {/* DW_OP_breg4                0x74*/ 1},",
          "123: {/* DW_OP_breg5                0x75*/ 1},",
          "124: {/* DW_OP_breg6                0x76*/ 1},",
          "125: {/* DW_OP_breg7                0x77*/ 1},",
          "126: {/* DW_OP_breg8                0x78*/ 1},",
          "127: {/* DW_OP_breg9                0x79*/ 1},",
          "128: {/* DW_OP_breg10               0x7a*/ 1},",
          "129: {/* DW_OP_breg11               0x7b*/ 1},",
          "130: {/* DW_OP_breg12               0x7c*/ 1},",
          "131: {/* DW_OP_breg13               0x7d*/ 1},",
          "132: {/* DW_OP_breg14               0x7e*/ 1},",
          "133: {/* DW_OP_breg15               0x7f*/ 1},",
          "134: {/* DW_OP_breg16               0x80*/ 1},",
          "135: {/* DW_OP_breg17               0x81*/ 1},",
          "136: {/* DW_OP_breg18               0x82*/ 1},",
          "137: {/* DW_OP_breg19               0x83*/ 1},",
          "138: {/* DW_OP_breg20               0x84*/ 1},",
          "139: {/* DW_OP_breg21               0x85*/ 1},",
          "140: {/* DW_OP_breg22               0x86*/ 1},",
          "141: {/* DW_OP_breg23               0x87*/ 1},",
          "142: {/* DW_OP_breg24               0x88*/ 1},",
          "143: {/* DW_OP_breg25               0x89*/ 1},",
          "144: {/* DW_OP_breg26               0x8a*/ 1},",
          "145: {/* DW_OP_breg27               0x8b*/ 1},",
          "146: {/* DW_OP_breg28               0x8c*/ 1},",
          "147: {/* DW_OP_breg29               0x8d*/ 1},",
          "148: {/* DW_OP_breg30               0x8e*/ 1},",
          "149: {/* DW_OP_breg31               0x8f*/ 1},",
          "150: {/* DW_OP_regx                 0x90*/ 1},",
          "151: {/* DW_OP_fbreg                0x91*/ 1},",
          "152: {/* DW_OP_bregx                0x92*/ 2},",
          "153: {/* DW_OP_piece                0x93*/ 1},",
          "154: {/* DW_OP_deref_size           0x94*/ 1},",
          "155: {/* DW_OP_xderef_size          0x95*/ 1},",
          "156: {/* DW_OP_nop                  0x96*/ 0},",
          "157: {/* DW_OP_push_object_address  0x97*/ 0},",
          "158: {/* DW_OP_call2                0x98*/ 1},",
          "159: {/* DW_OP_call4                0x99*/ 1},",
          "160: {/* DW_OP_call_ref             0x9a*/ 1},",
          "161: {/* DW_OP_form_tls_address     0x9b*/ 0},",
          "162: {/* DW_OP_call_frame_cfa       0x9c*/ 0},",
          "163: {/* DW_OP_bit_piece            0x9d*/ 2},",
          "164: {/* DW_OP_implicit_value       0x9e*/ 2},",
          "165: {/* DW_OP_stack_value          0x9f*/ 0},",
          "166: {/* DW_OP_implicit_pointer     0xa0*/ 2},",
          "167: {/* DW_OP_addrx                0xa1*/ 1},",
          "168: {/* DW_OP_constx               0xa2*/ 1},",
          "169: {/* DW_OP_entry_value          0xa3*/ 2},",
          "170: {/* DW_OP_const_type           0xa4*/ 3},",
          "171: {/* DW_OP_regval_type          0xa5*/ 2},",
          "172: {/* DW_OP_deref_type           0xa6*/ 2},",
          "173: {/* DW_OP_xderef_type          0xa7*/ 0},",
          "174: {/* DW_OP_convert              0xa8*/ 1},",
          "175: {/* DW_OP_reinterpret          0xa9*/ 1},",
          "176: {/* unused                     0xaa*/ -1},",
          "177: {/* unused                     0xab*/ -1},",
          "178: {/* unused                     0xac*/ -1},",
          "179: {/* unused                     0xad*/ -1},",
          "180: {/* unused                     0xae*/ -1},",
          "181: {/* unused                     0xaf*/ -1},",
          "182: {/* unused                     0xb0*/ -1},",
          "183: {/* unused                     0xb1*/ -1},",
          "184: {/* unused                     0xb2*/ -1},",
          "185: {/* unused                     0xb3*/ -1},",
          "186: {/* unused                     0xb4*/ -1},",
          "187: {/* unused                     0xb5*/ -1},",
          "188: {/* unused                     0xb6*/ -1},",
          "189: {/* unused                     0xb7*/ -1},",
          "190: {/* unused                     0xb8*/ -1},",
          "191: {/* unused                     0xb9*/ -1},",
          "192: {/* unused                     0xba*/ -1},",
          "193: {/* unused                     0xbb*/ -1},",
          "194: {/* unused                     0xbc*/ -1},",
          "195: {/* unused                     0xbd*/ -1},",
          "196: {/* unused                     0xbe*/ -1},",
          "197: {/* unused                     0xbf*/ -1},",
          "198: {/* unused                     0xc0*/ -1},",
          "199: {/* unused                     0xc1*/ -1},",
          "200: {/* unused                     0xc2*/ -1},",
          "201: {/* unused                     0xc3*/ -1},",
          "202: {/* unused                     0xc4*/ -1},",
          "203: {/* unused                     0xc5*/ -1},",
          "204: {/* unused                     0xc6*/ -1},",
          "205: {/* unused                     0xc7*/ -1},",
          "206: {/* unused                     0xc8*/ -1},",
          "207: {/* unused                     0xc9*/ -1},",
          "208: {/* unused                     0xca*/ -1},",
          "209: {/* unused                     0xcb*/ -1},",
          "210: {/* unused                     0xcc*/ -1},",
          "211: {/* unused                     0xcd*/ -1},",
          "212: {/* unused                     0xce*/ -1},",
          "213: {/* unused                     0xcf*/ -1},",
          "214: {/* unused                     0xd0*/ -1},",
          "215: {/* unused                     0xd1*/ -1},",
          "216: {/* unused                     0xd2*/ -1},",
          "217: {/* unused                     0xd3*/ -1},",
          "218: {/* unused                     0xd4*/ -1},",
          "219: {/* unused                     0xd5*/ -1},",
          "220: {/* unused                     0xd6*/ -1},",
          "221: {/* unused                     0xd7*/ -1},",
          "222: {/* unused                     0xd8*/ -1},",
          "223: {/* unused                     0xd9*/ -1},",
          "224: {/* unused                     0xda*/ -1},",
          "225: {/* unused                     0xdb*/ -1},",
          "226: {/* unused                     0xdc*/ -1},",
          "227: {/* unused                     0xdd*/ -1},",
          "228: {/* unused                     0xde*/ -1},",
          "229: {/* unused                     0xdf*/ -1},",
          "230: {/* DW_OP_GNU_push_tls_address 0xe0*/ 0},",
          "231: {/* unused                     0xe1*/ -1},",
          "232: {/* unused                     0xe2*/ -1},",
          "233: {/* unused                     0xe3*/ -1},",
          "234: {/* unused                     0xe4*/ -1},",
          "235: {/* unused                     0xe5*/ -1},",
          "236: {/* unused                     0xe6*/ -1},",
          "237: {/* unused                     0xe7*/ -1},",
          "238: {/* unused                     0xe8*/ -1},",
          "239: {/* unused                     0xe9*/ -1},",
          "240: {/* unused                     0xea*/ -1},",
          "241: {/* unused                     0xeb*/ -1},",
          "242: {/* unused                     0xec*/ -1},",
          "243: {/* unused                     0xed*/ -1},",
          "244: {/* unused                     0xee*/ -1},",
          "245: {/* unused                     0xef*/ -1},",
          "246: {/* DW_OP_GNU_uninit           0xf0*/ 0},",
          "247: {/* DW_OP_GNU_encoded_addr     0xf1*/ 1},",
          "248: {/* DW_OP_GNU_implicit_pointer 0xf2*/ 2},",
          "249: {/* DW_OP_GNU_entry_value      0xf3*/ 2},",
          "250: {/* DW_OP_GNU_const_type       0xf4*/ 3},",
          "251: {/* DW_OP_GNU_regval_type      0xf5*/ 2},",
          "252: {/* DW_OP_GNU_deref_type       0xf6*/ 2},",
          "253: {/* DW_OP_GNU_convert          0xf7*/ 1},",
          "254: {/* DW_OP_PGI_omp_thread_num   0xf8*/ 1},",
          "255: {/* DW_OP_GNU_reinterpret      0xf9*/ 1},",
          "256: {/* DW_OP_GNU_parameter_ref    0xfa*/ 1},",
          "257: {/* DW_OP_GNU_addr_index       0xfb*/ 1},",
          "258: {/* DW_OP_GNU_const_index      0xfc*/ 1},",
          "259: {/* DW_OP_GNU_variable_value   0xfd*/ 1},",
          "260: {/* unused                     0xfe*/ -1},",
          "261: {/* unused                     0xff*/ -1},",
          "262: };",
          "",
          "---------------"
        ],
        "dwarfdump/opscounttab.h||dwarfdump/opscounttab.h": [
          "File: dwarfdump/opscounttab.h -> dwarfdump/opscounttab.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: Copyright (c) 2020, David Anderson",
          "3: All rights reserved.",
          "5: This software file is hereby placed in the public domain.",
          "6: For use by anyone for any purpose.",
          "11: struct dwarf_opscounttab_s {",
          "12:     signed   char oc_opcount;",
          "13: };",
          "15: #define DWOPS_ARRAY_SIZE 256",
          "16: extern struct dwarf_opscounttab_s dwarf_opscounttab[DWOPS_ARRAY_SIZE];",
          "",
          "---------------"
        ],
        "dwarfdump/print_die.c||dwarfdump/print_die.c": [
          "File: dwarfdump/print_die.c -> dwarfdump/print_die.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "45: #include \"macrocheck.h\"",
          "46: #include \"helpertree.h\"",
          "47: #include \"tag_common.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "47: #include \"opscounttab.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "456:     dwarf_dealloc_die(other_die);",
          "457: }",
          "566:     is what we want to return. The lowest sibling",
          "567:     offset in the stack.  Or 0 if we have none known.",
          "",
          "[Removed Lines]",
          "459: struct operation_descr_s {",
          "460:     int op_code;",
          "461:     int op_count;",
          "464:     const char * op_1type;",
          "465: };",
          "466: struct operation_descr_s opdesc[]= {",
          "467:     {DW_OP_addr,1,\"addr\" },",
          "469:     {DW_OP_deref,0,\"\" },",
          "470:     {DW_OP_const1u,1,\"1u\" },",
          "471:     {DW_OP_const1s,1,\"1s\" },",
          "472:     {DW_OP_const2u,1,\"2u\" },",
          "473:     {DW_OP_const2s,1,\"2s\" },",
          "474:     {DW_OP_const4u,1,\"4u\" },",
          "475:     {DW_OP_const4s,1,\"4s\" },",
          "476:     {DW_OP_const8u,1,\"8u\" },",
          "477:     {DW_OP_const8s,1,\"8s\" },",
          "478:     {DW_OP_constu,1,\"uleb\" },",
          "479:     {DW_OP_consts,1,\"sleb\" },",
          "480:     {DW_OP_dup,0,\"\"},",
          "481:     {DW_OP_drop,0,\"\"},",
          "482:     {DW_OP_over,0,\"\"},",
          "483:     {DW_OP_pick,1,\"1u\"},",
          "484:     {DW_OP_swap,0,\"\"},",
          "485:     {DW_OP_rot,0,\"\"},",
          "487:     {DW_OP_abs,0,\"\"},",
          "488:     {DW_OP_and,0,\"\"},",
          "489:     {DW_OP_div,0,\"\"},",
          "490:     {DW_OP_minus,0,\"\"},",
          "491:     {DW_OP_mod,0,\"\"},",
          "492:     {DW_OP_mul,0,\"\"},",
          "493:     {DW_OP_neg,0,\"\"},",
          "494:     {DW_OP_not,0,\"\"},",
          "495:     {DW_OP_or,0,\"\"},",
          "496:     {DW_OP_plus,0,\"\"},",
          "497:     {DW_OP_plus_uconst,1,\"uleb\"},",
          "498:     {DW_OP_shl,0,\"\"},",
          "499:     {DW_OP_shr,0,\"\"},",
          "500:     {DW_OP_shra,0,\"\"},",
          "501:     {DW_OP_xor,0,\"\"},",
          "502:     {DW_OP_skip,1,\"2s\"},",
          "503:     {DW_OP_bra,1,\"2s\"},",
          "504:     {DW_OP_eq,0,\"\"},",
          "505:     {DW_OP_ge,0,\"\"},",
          "506:     {DW_OP_gt,0,\"\"},",
          "507:     {DW_OP_le,0,\"\"},",
          "508:     {DW_OP_lt,0,\"\"},",
          "509:     {DW_OP_ne,0,\"\"},",
          "512:     {DW_OP_regx,1,\"uleb\"},",
          "513:     {DW_OP_fbreg,1,\"sleb\"},",
          "514:     {DW_OP_bregx,2,\"uleb\"},",
          "515:     {DW_OP_piece,1,\"uleb\"},",
          "516:     {DW_OP_deref_size,1,\"1u\"},",
          "517:     {DW_OP_xderef_size,1,\"1u\"},",
          "518:     {DW_OP_nop,0,\"\"},",
          "519:     {DW_OP_push_object_address,0,\"\"},",
          "520:     {DW_OP_call2,1,\"2u\"},",
          "521:     {DW_OP_call4,1,\"4u\"},",
          "522:     {DW_OP_call_ref,1,\"off\"},",
          "523:     {DW_OP_form_tls_address,0,\"\"},",
          "524:     {DW_OP_call_frame_cfa,0,\"\"},",
          "525:     {DW_OP_bit_piece,2,\"uleb\"},",
          "526:     {DW_OP_implicit_value,2,\"u\"},",
          "527:     {DW_OP_stack_value,0,\"\"},",
          "528:     {DW_OP_GNU_uninit,0,\"\"},",
          "529:     {DW_OP_GNU_encoded_addr,1,\"addr\"},",
          "531:     {DW_OP_GNU_implicit_pointer,2,\"addr\" },",
          "533:     {DW_OP_GNU_entry_value,2,\"val\" },",
          "535:     {DW_OP_GNU_const_type,3,\"uleb\" },",
          "537:     {DW_OP_GNU_regval_type,2,\"uleb\" },",
          "539:     {DW_OP_GNU_deref_type,1,\"val\" },",
          "541:     {DW_OP_GNU_convert,1,\"uleb\" },",
          "543:     {DW_OP_GNU_reinterpret,1,\"uleb\" },",
          "545:     {DW_OP_GNU_parameter_ref,1,\"val\" },",
          "546:     {DW_OP_GNU_const_index,1,\"val\" },",
          "547:     {DW_OP_GNU_push_tls_address,0,\"\" },",
          "550:     {DW_OP_GNU_addr_index,1,\"val\" },",
          "552:     {DW_OP_GNU_const_index,1,\"u\" },",
          "553:     {DW_OP_GNU_parameter_ref,1,\"u\" },",
          "558:     {DW_OP_GNU_variable_value,1,\"val\" },",
          "562:     {0,0,\"\"}",
          "563: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "5044: }",
          "5046: static int",
          "5048: {",
          "5067: }",
          "5069: static void",
          "",
          "[Removed Lines]",
          "5047: op_has_no_operands(int op)",
          "5049:     unsigned i = 0;",
          "5050:     if (op >= DW_OP_lit0 && op <= DW_OP_reg31) {",
          "5051:         return TRUE;",
          "5052:     }",
          "5053:     for (; ; ++i) {",
          "5054:         struct operation_descr_s *odp = opdesc+i;",
          "5055:         if (odp->op_code == 0) {",
          "5056:             break;",
          "5057:         }",
          "5058:         if (odp->op_code != op) {",
          "5059:             continue;",
          "5060:         }",
          "5061:         if (odp->op_count == 0) {",
          "5062:             return TRUE;",
          "5063:         }",
          "5064:         return FALSE;",
          "5065:     }",
          "5066:     return FALSE;",
          "",
          "[Added Lines]",
          "4942: op_has_no_operands(Dwarf_Small op)",
          "4944:     return (dwarf_opscounttab[op].oc_opcount == 0);",
          "",
          "---------------"
        ],
        "dwarfdump/print_loclists.c||dwarfdump/print_loclists.c": [
          "File: dwarfdump/print_loclists.c -> dwarfdump/print_loclists.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "333:         printf(\"   context size in bytes : %3\" DW_PR_DUu \"\\n\",",
          "334:             offset_past_last_locentry - header_offset);",
          "335:         if (glflags.verbose) {",
          "338:                 header_offset);",
          "341:                 offset_of_offset_array);",
          "344:                 offset_of_first_locentry);",
          "347:                 offset_past_last_locentry);",
          "348:         }",
          "349:         if (offset_entry_count) {",
          "",
          "[Removed Lines]",
          "336:             printf(\"   Offset in section     : 0x%\"",
          "337:                 DW_PR_XZEROS DW_PR_DUx\"\\n\",",
          "339:             printf(\"   Offset  of offsets    : 0x%\"",
          "340:                 DW_PR_XZEROS DW_PR_DUx\"\\n\",",
          "342:             printf(\"   Offsetof first loc    : 0x%\"",
          "343:                 DW_PR_XZEROS DW_PR_DUx\"\\n\",",
          "345:             printf(\"   Offset past locations : 0x%\"",
          "346:                 DW_PR_XZEROS DW_PR_DUx\"\\n\",",
          "",
          "[Added Lines]",
          "336:             printf(\"   Offset in section     : \"",
          "337:                 \"0x%\"  DW_PR_XZEROS DW_PR_DUx\"\\n\",",
          "339:             printf(\"   Offset  of offsets    : \"",
          "340:                 \"0x%\" DW_PR_XZEROS DW_PR_DUx\"\\n\",",
          "342:             printf(\"   Offsetof first loc    : \"",
          "343:                 \"0x%\" DW_PR_XZEROS DW_PR_DUx\"\\n\",",
          "345:             printf(\"   Offset past locations : \"",
          "346:                 \"0x%\" DW_PR_XZEROS DW_PR_DUx\"\\n\",",
          "",
          "---------------"
        ],
        "dwarfdump/print_macro.c||dwarfdump/print_macro.c": [
          "File: dwarfdump/print_macro.c -> dwarfdump/print_macro.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "680:                     dwarf_names_print_on_error):",
          "681:                 \"end-of-macros\"));",
          "682:         if (glflags.gf_show_global_offsets) {",
          "684:                 DW_PR_XZEROS DW_PR_DUx \">\",",
          "685:                 section_offset);",
          "686:         }",
          "",
          "[Removed Lines]",
          "683:             esb_append_printf_u(&mtext,\" <GOFF=0x\"",
          "",
          "[Added Lines]",
          "683:             esb_append_printf_u(&mtext,\" <GOFF=0x%\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "714:                 \" next byte offset 0x%\" DW_PR_XZEROS DW_PR_DUx,",
          "715:                 section_offset+1);",
          "720:             if (do_print_dwarf) {",
          "721:                 printf(\"%s\",sanitized(esb_get_string(&mtext)));",
          "722:             }",
          "",
          "[Removed Lines]",
          "717:             if (do_print_dwarf) {",
          "718:                 esb_append(&mtext,\"\\n\");",
          "719:             }",
          "",
          "[Added Lines]",
          "717:             esb_append(&mtext,\"\\n\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "825:                 \" %s\\n\",macro_string?",
          "826:                 sanitized(macro_string):nonameavail);",
          "827:             if (do_print_dwarf) {",
          "830:             }",
          "831:             add_def_undef(k,offset,macro_operator,",
          "832:                 line_number,macro_string,",
          "",
          "[Removed Lines]",
          "828:                 printf(\"%s\",",
          "829:                 sanitized(esb_get_string(&mtext)));",
          "",
          "[Added Lines]",
          "826:                 printf(\"%s\",sanitized(esb_get_string(&mtext)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "920:             }",
          "921:             if (do_print_dwarf) {",
          "922:                 esb_append_printf(&mtext,",
          "924:                     offset);",
          "925:             }",
          "926:             if (do_print_dwarf) {",
          "927:                 printf(\"%s\",sanitized(esb_get_string(&mtext)));",
          "928:             }",
          "",
          "[Removed Lines]",
          "923:                     \"  offset 0x%\" DW_PR_XZEROS DW_PR_DUx \"\\n\",",
          "",
          "[Added Lines]",
          "920:                     \"  offset 0x%\" DW_PR_XZEROS DW_PR_DUx ,",
          "923:             esb_append(&mtext,\"\\n\");",
          "",
          "---------------"
        ],
        "dwarfdump/print_ranges.c||dwarfdump/print_ranges.c": [
          "File: dwarfdump/print_ranges.c -> dwarfdump/print_ranges.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "360:                 esb_append_printf_u(&m,",
          "361:                     \"Call to dwarf_offdie failed \"",
          "362:                     \"getting the CU die from offset \"",
          "364:                     \"in checking ranges\",die_off);",
          "365:                 simple_err_return_msg_either_action(",
          "366:                     res,",
          "",
          "[Removed Lines]",
          "363:                     \" 0x\" DW_PR_XZEROS DW_PR_DUx",
          "",
          "[Added Lines]",
          "363:                     \" 0x%\" DW_PR_XZEROS DW_PR_DUx",
          "",
          "---------------"
        ],
        "scripts/buildstandardsource.sh||scripts/buildstandardsource.sh": [
          "File: scripts/buildstandardsource.sh -> scripts/buildstandardsource.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "49:     echo \"FAIL cd back to top-level\"",
          "50:     exit 1",
          "51: fi",
          "52: cd dwarfdump",
          "53: if [ $? -ne 0 ]",
          "54: then",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52: #Now build the source files needed by dwarfdump builds.",
          "",
          "---------------"
        ],
        "scripts/ddbuild.sh||scripts/ddbuild.sh": [
          "File: scripts/ddbuild.sh -> scripts/ddbuild.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "102:    echo tag_tree_build 4 compile fail",
          "103:    exit 1",
          "104: fi",
          "105: rm -f tmp-tag-tree-build4.tmp",
          "106: rm -f tmp-t4.c",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106: $CC -I $top_srcdir/libdwarf \\",
          "107:   $top_srcdir/dwarfdump/buildopscounttab.c \\",
          "108:   $top_srcdir/dwarfdump/dwarf_names.c -o buildop",
          "109: if [ $? -ne 0 ]",
          "110: then",
          "111:     echo \"FAIL compiling buildop  and building opstabcount.c source\"",
          "112:     exit 1",
          "113: fi",
          "114: ./buildop >opscounttab.c",
          "115: if [ $? -ne 0 ]",
          "116: then",
          "117:     echo \"FAIL building opstabcount.c source\"",
          "118:     exit 1",
          "119: fi",
          "120: rm -f ./buildop",
          "",
          "---------------"
        ]
      }
    }
  ]
}