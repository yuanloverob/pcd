{
  "cve_id": "CVE-2024-0322",
  "cve_desc": "Out-of-bounds Read in GitHub repository gpac/gpac prior to 2.3-DEV.",
  "repo": "gpac/gpac",
  "patch_hash": "092904b80edbc4dce315684a59cc3184c45c1b70",
  "patch_info": {
    "commit_hash": "092904b80edbc4dce315684a59cc3184c45c1b70",
    "repo": "gpac/gpac",
    "commit_url": "https://github.com/gpac/gpac/commit/092904b80edbc4dce315684a59cc3184c45c1b70",
    "files": [
      "src/filters/reframe_ac3.c"
    ],
    "message": "fix 5692dc7: make test more strict (#2627)",
    "before_after_code_files": [
      "src/filters/reframe_ac3.c||src/filters/reframe_ac3.c"
    ]
  },
  "patch_diff": {
    "src/filters/reframe_ac3.c||src/filters/reframe_ac3.c": [
      "File: src/filters/reframe_ac3.c -> src/filters/reframe_ac3.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "480:    cts = GF_FILTER_NO_TS;",
      "481:   }",
      "484:    dst_pck = gf_filter_pck_new_alloc(ctx->opid, ctx->hdr.framesize, &output);",
      "485:    if (!dst_pck) return GF_OUT_OF_MEM;",
      "487:    if (ctx->src_pck) gf_filter_pck_merge_properties(ctx->src_pck, dst_pck);",
      "489:    memcpy(output, sync, ctx->hdr.framesize);",
      "490:    gf_filter_pck_set_dts(dst_pck, ctx->cts);",
      "491:    gf_filter_pck_set_cts(dst_pck, ctx->cts);",
      "",
      "[Removed Lines]",
      "483:   if (!ctx->in_seek && remain >= ctx->hdr.framesize) {",
      "",
      "[Added Lines]",
      "483:   if (!ctx->in_seek && remain >= sync_pos + ctx->hdr.framesize) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5692dc729491805e0e5f55c21d50ba1e6b19e88e",
      "candidate_info": {
        "commit_hash": "5692dc729491805e0e5f55c21d50ba1e6b19e88e",
        "repo": "gpac/gpac",
        "commit_url": "https://github.com/gpac/gpac/commit/5692dc729491805e0e5f55c21d50ba1e6b19e88e",
        "files": [
          "src/filters/reframe_ac3.c"
        ],
        "message": "ac3dmx: add remain size check (fixes #2627)",
        "before_after_code_files": [
          "src/filters/reframe_ac3.c||src/filters/reframe_ac3.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/filters/reframe_ac3.c||src/filters/reframe_ac3.c"
          ],
          "candidate": [
            "src/filters/reframe_ac3.c||src/filters/reframe_ac3.c"
          ]
        }
      },
      "candidate_diff": {
        "src/filters/reframe_ac3.c||src/filters/reframe_ac3.c": [
          "File: src/filters/reframe_ac3.c -> src/filters/reframe_ac3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "480:    cts = GF_FILTER_NO_TS;",
          "481:   }",
          "484:    dst_pck = gf_filter_pck_new_alloc(ctx->opid, ctx->hdr.framesize, &output);",
          "485:    if (!dst_pck) return GF_OUT_OF_MEM;",
          "487:    if (ctx->src_pck) gf_filter_pck_merge_properties(ctx->src_pck, dst_pck);",
          "489:    memcpy(output, sync, ctx->hdr.framesize);",
          "",
          "[Removed Lines]",
          "483:   if (!ctx->in_seek) {",
          "",
          "[Added Lines]",
          "483:   if (!ctx->in_seek && remain >= ctx->hdr.framesize) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}