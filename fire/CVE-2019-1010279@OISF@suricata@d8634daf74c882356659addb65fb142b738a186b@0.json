{
  "cve_id": "CVE-2019-1010279",
  "cve_desc": "Open Information Security Foundation Suricata prior to version 4.1.3 is affected by: Denial of Service - TCP/HTTP detection bypass. The impact is: An attacker can evade a signature detection with a specialy formed sequence of network packets. The component is: detect.c (https://github.com/OISF/suricata/pull/3625/commits/d8634daf74c882356659addb65fb142b738a186b). The attack vector is: An attacker can trigger the vulnerability by a specifically crafted network TCP session. The fixed version is: 4.1.3.",
  "repo": "OISF/suricata",
  "patch_hash": "d8634daf74c882356659addb65fb142b738a186b",
  "patch_info": {
    "commit_hash": "d8634daf74c882356659addb65fb142b738a186b",
    "repo": "OISF/suricata",
    "commit_url": "https://github.com/OISF/suricata/pull/3625/commits/d8634daf74c882356659addb65fb142b738a186b",
    "files": [
      "src/detect.c"
    ],
    "message": "stream: fix false negative on bad RST\n\nIf a bad RST was received the stream inspection would not happen\nfor that packet, but it would still move the 'raw progress' tracker\nforward. Following good packets would then fail to detect anything\nbefore the 'raw progress' position.\n\nBug #2770\n\nReported-by: Alexey Vishnyakov",
    "before_after_code_files": [
      "src/detect.c||src/detect.c"
    ]
  },
  "patch_diff": {
    "src/detect.c||src/detect.c": [
      "File: src/detect.c -> src/detect.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1040:     if (pflow != NULL) {",
      "1043:             StreamReassembleRawUpdateProgress(pflow->protoctx, p,",
      "1044:                     det_ctx->raw_stream_progress);",
      "",
      "[Removed Lines]",
      "1042:         if (p->proto == IPPROTO_TCP && pflow->protoctx != NULL) {",
      "",
      "[Added Lines]",
      "1042:         if (p->proto == IPPROTO_TCP && pflow->protoctx != NULL &&",
      "1043:             (p->flags & PKT_STREAM_EST))",
      "1044:         {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fb18a1655c15d4025d2f0d79daf089079de41232",
      "candidate_info": {
        "commit_hash": "fb18a1655c15d4025d2f0d79daf089079de41232",
        "repo": "OISF/suricata",
        "commit_url": "https://github.com/OISF/suricata/commit/fb18a1655c15d4025d2f0d79daf089079de41232",
        "files": [
          "src/counters.c",
          "src/counters.h",
          "src/output-json-stats.c",
          "src/suricata.c",
          "src/util-error.c",
          "src/util-error.h"
        ],
        "message": "eve.stats: warn that output might miss decoder-events",
        "before_after_code_files": [
          "src/counters.c||src/counters.c",
          "src/counters.h||src/counters.h",
          "src/output-json-stats.c||src/output-json-stats.c",
          "src/suricata.c||src/suricata.c",
          "src/util-error.c||src/util-error.c",
          "src/util-error.h||src/util-error.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OISF/suricata/pull/3625"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/counters.c||src/counters.c": [
          "File: src/counters.c -> src/counters.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "229: {",
          "230:     SCEnter();",
          "231: #ifdef AFLFUZZ_DISABLE_MGTTHREADS",
          "",
          "[Removed Lines]",
          "228: static void StatsInitCtx(void)",
          "",
          "[Added Lines]",
          "228: static void StatsInitCtxPreOutput(void)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "265:         }",
          "266:         stats_decoder_events_prefix = prefix;",
          "267:     }",
          "269:     if (!OutputStatsLoggersRegistered()) {",
          "270:         stats_loggers_active = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "268:     SCReturn;",
          "269: }",
          "271: static void StatsInitCtxPostOutput(void)",
          "272: {",
          "273:     SCEnter();",
          "275:     time(&stats_start_time);",
          "278:     if (SCMutexInit(&stats_ctx->sts_lock, NULL) != 0) {",
          "279:         SCLogError(SC_ERR_INITIALIZATION, \"error initializing sts mutex\");",
          "280:         exit(EXIT_FAILURE);",
          "281:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "278:         }",
          "279:     }",
          "290:     SCReturn;",
          "291: }",
          "",
          "[Removed Lines]",
          "282:     time(&stats_start_time);",
          "285:     if (SCMutexInit(&stats_ctx->sts_lock, NULL) != 0) {",
          "286:         SCLogError(SC_ERR_INITIALIZATION, \"error initializing sts mutex\");",
          "287:         exit(EXIT_FAILURE);",
          "288:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "860:     StatsPublicThreadContextInit(&stats_ctx->global_counter_ctx);",
          "861: }",
          "864: {",
          "866: }",
          "",
          "[Removed Lines]",
          "863: void StatsSetupPostConfig(void)",
          "865:     StatsInitCtx();",
          "",
          "[Added Lines]",
          "868: void StatsSetupPostConfigPreOutput(void)",
          "869: {",
          "870:     StatsInitCtxPreOutput();",
          "871: }",
          "873: void StatsSetupPostConfigPostOutput(void)",
          "875:     StatsInitCtxPostOutput();",
          "",
          "---------------"
        ],
        "src/counters.h||src/counters.h": [
          "File: src/counters.h -> src/counters.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "107: void StatsInit(void);",
          "109: void StatsSpawnThreads(void);",
          "110: void StatsRegisterTests(void);",
          "",
          "[Removed Lines]",
          "108: void StatsSetupPostConfig(void);",
          "",
          "[Added Lines]",
          "108: void StatsSetupPostConfigPreOutput(void);",
          "109: void StatsSetupPostConfigPostOutput(void);",
          "",
          "---------------"
        ],
        "src/output-json-stats.c||src/output-json-stats.c": [
          "File: src/output-json-stats.c -> src/output-json-stats.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "53: #ifdef HAVE_LIBJANSSON",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "55: extern bool stats_decoder_events;",
          "56: const char *stats_decoder_events_prefix;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "387:         return result;",
          "388:     }",
          "390:     if (SCConfLogOpenGeneric(conf, file_ctx, DEFAULT_LOG_FILENAME, 1) < 0) {",
          "391:         LogFileFreeCtx(file_ctx);",
          "392:         return result;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "393:     if (stats_decoder_events &&",
          "394:             strcmp(stats_decoder_events_prefix, \"decoder\") == 0) {",
          "395:         SCLogWarning(SC_WARN_EVE_MISSING_EVENTS, \"json stats will not display \"",
          "396:                 \"all decoder events correctly. See #2225. Set a prefix in \"",
          "397:                 \"stats.decoder-events-prefix. In 5.0 the prefix will default \"",
          "398:                 \"to 'decoder.event'.\");",
          "399:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "449:     if (unlikely(stats_ctx == NULL))",
          "450:         return result;",
          "452:     stats_ctx->flags = JSON_STATS_TOTALS;",
          "454:     if (conf != NULL) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "463:     if (stats_decoder_events &&",
          "464:             strcmp(stats_decoder_events_prefix, \"decoder\") == 0) {",
          "465:         SCLogWarning(SC_WARN_EVE_MISSING_EVENTS, \"eve.stats will not display \"",
          "466:                 \"all decoder events correctly. See #2225. Set a prefix in \"",
          "467:                 \"stats.decoder-events-prefix. In 5.0 the prefix will default \"",
          "468:                 \"to 'decoder.event'.\");",
          "469:     }",
          "",
          "---------------"
        ],
        "src/suricata.c||src/suricata.c": [
          "File: src/suricata.c -> src/suricata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2289:     if (runmode == RUNMODE_UNIX_SOCKET)",
          "2290:         return;",
          "2292:     RunModeInitializeOutputs();",
          "2294: }",
          "",
          "[Removed Lines]",
          "2293:     StatsSetupPostConfig();",
          "",
          "[Added Lines]",
          "2292:     StatsSetupPostConfigPreOutput();",
          "2294:     StatsSetupPostConfigPostOutput();",
          "",
          "---------------"
        ],
        "src/util-error.c||src/util-error.c": [
          "File: src/util-error.c -> src/util-error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "358:         CASE_CODE (SC_ERR_WINDIVERT_TOOLONG_FILTER);",
          "359:         CASE_CODE (SC_WARN_RUST_NOT_AVAILABLE);",
          "360:         CASE_CODE (SC_WARN_DEFAULT_WILL_CHANGE);",
          "362:         CASE_CODE (SC_ERR_MAX);",
          "363:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "361:         CASE_CODE (SC_WARN_EVE_MISSING_EVENTS);",
          "",
          "---------------"
        ],
        "src/util-error.h||src/util-error.h": [
          "File: src/util-error.h -> src/util-error.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "348:     SC_ERR_WINDIVERT_TOOLONG_FILTER,",
          "349:     SC_WARN_RUST_NOT_AVAILABLE,",
          "350:     SC_WARN_DEFAULT_WILL_CHANGE,",
          "352:     SC_ERR_MAX,",
          "353: } SCError;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "351:     SC_WARN_EVE_MISSING_EVENTS,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bb26e6216e5190d841529c0ecb1292b9a358ed54",
      "candidate_info": {
        "commit_hash": "bb26e6216e5190d841529c0ecb1292b9a358ed54",
        "repo": "OISF/suricata",
        "commit_url": "https://github.com/OISF/suricata/commit/bb26e6216e5190d841529c0ecb1292b9a358ed54",
        "files": [
          "src/source-pcap.c"
        ],
        "message": "source-pcap:set PktAcqBreakLoop as pcap_breakloop",
        "before_after_code_files": [
          "src/source-pcap.c||src/source-pcap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OISF/suricata/pull/3625"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/source-pcap.c||src/source-pcap.c": [
          "File: src/source-pcap.c -> src/source-pcap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "94: void ReceivePcapThreadExitStats(ThreadVars *, void *);",
          "95: TmEcode ReceivePcapThreadDeinit(ThreadVars *, void *);",
          "96: TmEcode ReceivePcapLoop(ThreadVars *tv, void *data, void *slot);",
          "98: TmEcode DecodePcapThreadInit(ThreadVars *, const void *, void **);",
          "99: TmEcode DecodePcapThreadDeinit(ThreadVars *tv, void *data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97: TmEcode ReceivePcapBreakLoop(ThreadVars *tv, void *data);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "113:     tmm_modules[TMM_RECEIVEPCAP].ThreadInit = ReceivePcapThreadInit;",
          "114:     tmm_modules[TMM_RECEIVEPCAP].Func = NULL;",
          "115:     tmm_modules[TMM_RECEIVEPCAP].PktAcqLoop = ReceivePcapLoop;",
          "117:     tmm_modules[TMM_RECEIVEPCAP].ThreadExitPrintStats = ReceivePcapThreadExitStats;",
          "118:     tmm_modules[TMM_RECEIVEPCAP].ThreadDeinit = NULL;",
          "119:     tmm_modules[TMM_RECEIVEPCAP].RegisterTests = NULL;",
          "",
          "[Removed Lines]",
          "116:     tmm_modules[TMM_RECEIVEPCAP].PktAcqBreakLoop = NULL;",
          "",
          "[Added Lines]",
          "117:     tmm_modules[TMM_RECEIVEPCAP].PktAcqBreakLoop = ReceivePcapBreakLoop;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "298:     SCReturnInt(TM_ECODE_OK);",
          "299: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "305: TmEcode ReceivePcapBreakLoop(ThreadVars *tv, void *data)",
          "306: {",
          "307:     SCEnter();",
          "308:     PcapThreadVars *ptv = (PcapThreadVars *)data;",
          "309:     if (ptv->pcap_handle == NULL) {",
          "310:         SCReturnInt(TM_ECODE_FAILED);",
          "311:     }",
          "312:     pcap_breakloop(ptv->pcap_handle);",
          "313:     SCReturnInt(TM_ECODE_OK);",
          "314: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0f1fc1f0c8800032865f1e46d1f4bf70dc07b751",
      "candidate_info": {
        "commit_hash": "0f1fc1f0c8800032865f1e46d1f4bf70dc07b751",
        "repo": "OISF/suricata",
        "commit_url": "https://github.com/OISF/suricata/commit/0f1fc1f0c8800032865f1e46d1f4bf70dc07b751",
        "files": [
          "src/Makefile.am",
          "src/detect-metadata.c",
          "src/util-hash-string.c",
          "src/util-hash-string.h"
        ],
        "message": "hash: move string hash funcs into util files",
        "before_after_code_files": [
          "src/Makefile.am||src/Makefile.am",
          "src/detect-metadata.c||src/detect-metadata.c",
          "src/util-hash-string.c||src/util-hash-string.c",
          "src/util-hash-string.h||src/util-hash-string.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OISF/suricata/pull/3625"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/Makefile.am||src/Makefile.am": [
          "File: src/Makefile.am -> src/Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "435: util-hash.c util-hash.h \\",
          "436: util-hashlist.c util-hashlist.h \\",
          "437: util-hash-lookup3.c util-hash-lookup3.h \\",
          "438: util-host-os-info.c util-host-os-info.h \\",
          "439: util-host-info.c util-host-info.h \\",
          "440: util-hyperscan.c util-hyperscan.h \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "438: util-hash-string.c util-hash-string.h \\",
          "",
          "---------------"
        ],
        "src/detect-metadata.c||src/detect-metadata.c": [
          "File: src/detect-metadata.c -> src/detect-metadata.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: #include \"detect-parse.h\"",
          "32: #include \"detect-engine.h\"",
          "33: #include \"detect-metadata.h\"",
          "35: #include \"util-unittest.h\"",
          "37: static int DetectMetadataSetup (DetectEngineCtx *, Signature *, const char *);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: #include \"util-hash-string.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60:     SCReturn;",
          "61: }",
          "95: int DetectMetadataHashInit(DetectEngineCtx *de_ctx)",
          "96: {",
          "97:     if (! DetectEngineMustParseMetadata())",
          "",
          "[Removed Lines]",
          "64: static uint32_t StringHashFunc(HashTable *ht, void *data, uint16_t datalen)",
          "65: {",
          "66:     uint32_t hash = 5381;",
          "67:     int c;",
          "69:     while ((c = *(char *)data++))",
          "72:     hash = hash % ht->array_size;",
          "74:     return hash;",
          "75: }",
          "77: static char StringHashCompareFunc(void *data1, uint16_t datalen1,",
          "78:                                void *data2, uint16_t datalen2)",
          "79: {",
          "80:     int len1 = strlen((char *)data1);",
          "81:     int len2 = strlen((char *)data2);",
          "83:     if (len1 == len2 && memcmp(data1, data2, len1) == 0) {",
          "84:         return 1;",
          "85:     }",
          "87:     return 0;",
          "88: }",
          "90: static void StringHashFreeFunc(void *data)",
          "91: {",
          "92:     SCFree(data);",
          "93: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/util-hash-string.c||src/util-hash-string.c": [
          "File: src/util-hash-string.c -> src/util-hash-string.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: #include \"suricata-common.h\"",
          "19: #include \"util-hash-string.h\"",
          "22: uint32_t StringHashFunc(HashTable *ht, void *data, uint16_t datalen)",
          "23: {",
          "24:     uint32_t hash = 5381;",
          "25:     int c;",
          "27:     while ((c = *(char *)data++))",
          "30:     hash = hash % ht->array_size;",
          "32:     return hash;",
          "33: }",
          "35: char StringHashCompareFunc(void *data1, uint16_t datalen1,",
          "36:                            void *data2, uint16_t datalen2)",
          "37: {",
          "38:     int len1 = strlen((char *)data1);",
          "39:     int len2 = strlen((char *)data2);",
          "41:     if (len1 == len2 && memcmp(data1, data2, len1) == 0) {",
          "42:         return 1;",
          "43:     }",
          "45:     return 0;",
          "46: }",
          "48: void StringHashFreeFunc(void *data)",
          "49: {",
          "50:     SCFree(data);",
          "51: }",
          "",
          "---------------"
        ],
        "src/util-hash-string.h||src/util-hash-string.h": [
          "File: src/util-hash-string.h -> src/util-hash-string.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: #ifndef __UTIL_HASH_STRING_H__",
          "19: #define __UTIL_HASH_STRING_H__",
          "21: uint32_t StringHashFunc(HashTable *ht, void *data, uint16_t datalen);",
          "22: char StringHashCompareFunc(void *data1, uint16_t datalen1,",
          "23:                            void *data2, uint16_t datalen2);",
          "24: void StringHashFreeFunc(void *data);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0d86263efdae0ade81d03f841965a5285bb3e9e1",
      "candidate_info": {
        "commit_hash": "0d86263efdae0ade81d03f841965a5285bb3e9e1",
        "repo": "OISF/suricata",
        "commit_url": "https://github.com/OISF/suricata/commit/0d86263efdae0ade81d03f841965a5285bb3e9e1",
        "files": [
          "src/counters.c",
          "src/decode.c",
          "src/util-error.c",
          "src/util-error.h",
          "suricata.yaml.in"
        ],
        "message": "eve.stats: make decoder event prefix configurable",
        "before_after_code_files": [
          "src/counters.c||src/counters.c",
          "src/decode.c||src/decode.c",
          "src/util-error.c||src/util-error.c",
          "src/util-error.h||src/util-error.h",
          "suricata.yaml.in||suricata.yaml.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OISF/suricata/pull/3625"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/counters.c||src/counters.c": [
          "File: src/counters.c -> src/counters.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "102: bool stats_decoder_events = true;",
          "104: bool stats_stream_events = false;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103: const char *stats_decoder_events_prefix = \"decoder\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "252:         if (ret) {",
          "253:             stats_stream_events = (b == 1);",
          "254:         }",
          "255:     }",
          "257:     if (!OutputStatsLoggersRegistered()) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "257:         const char *prefix = NULL;",
          "258:         if (ConfGet(\"stats.decoder-events-prefix\", &prefix) != 1) {",
          "259:             prefix = \"decoder\";",
          "260:             SCLogWarning(SC_WARN_DEFAULT_WILL_CHANGE, \"in 5.0 the default \"",
          "261:                     \"for decoder event stats will go from \"",
          "262:                     \"'decoder.<proto>.<event>' to 'decoder.event.<proto>.<event>'. \"",
          "263:                     \"See ticket #2225. To suppress this message, \"",
          "264:                     \"set stats.decoder-events-prefix in the yaml.\");",
          "265:         }",
          "266:         stats_decoder_events_prefix = prefix;",
          "",
          "---------------"
        ],
        "src/decode.c||src/decode.c": [
          "File: src/decode.c -> src/decode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "68: #include \"output-flow.h\"",
          "70: extern bool stats_decoder_events;",
          "71: extern bool stats_stream_events;",
          "73: int DecodeTunnel(ThreadVars *tv, DecodeThreadVars *dtv, Packet *p,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "71: const char *stats_decoder_events_prefix;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "501:             char name[256];",
          "502:             char *dot = index(DEvents[i].event_name, '.');",
          "503:             BUG_ON(!dot);",
          "506:             const char *found = HashTableLookup(g_counter_table, name, 0);",
          "507:             if (!found) {",
          "",
          "[Removed Lines]",
          "504:             snprintf(name, sizeof(name), \"decoder.events.%s\", dot+1);",
          "",
          "[Added Lines]",
          "505:             snprintf(name, sizeof(name), \"%s.%s\",",
          "506:                     stats_decoder_events_prefix, dot+1);",
          "",
          "---------------"
        ],
        "src/util-error.c||src/util-error.c": [
          "File: src/util-error.c -> src/util-error.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "357:         CASE_CODE (SC_ERR_WINDIVERT_INVALID_FILTER);",
          "358:         CASE_CODE (SC_ERR_WINDIVERT_TOOLONG_FILTER);",
          "359:         CASE_CODE (SC_WARN_RUST_NOT_AVAILABLE);",
          "361:         CASE_CODE (SC_ERR_MAX);",
          "362:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "360:         CASE_CODE (SC_WARN_DEFAULT_WILL_CHANGE);",
          "",
          "---------------"
        ],
        "src/util-error.h||src/util-error.h": [
          "File: src/util-error.h -> src/util-error.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "347:     SC_ERR_WINDIVERT_INVALID_FILTER,",
          "348:     SC_ERR_WINDIVERT_TOOLONG_FILTER,",
          "349:     SC_WARN_RUST_NOT_AVAILABLE,",
          "351:     SC_ERR_MAX,",
          "352: } SCError;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "350:     SC_WARN_DEFAULT_WILL_CHANGE,",
          "",
          "---------------"
        ],
        "suricata.yaml.in||suricata.yaml.in": [
          "File: suricata.yaml.in -> suricata.yaml.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:   interval: 8",
          "63:   # Add decode events as stats.",
          "64:   #decoder-events: true",
          "65:   # Add stream events as stats.",
          "66:   #stream-events: false",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:   # Decoder event prefix in stats. Has been 'decoder' before, but that leads",
          "66:   # to missing events in the eve.stats records. See issue #2225.",
          "67:   decoder-events-prefix: \"decoder.event\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c140505bece2cc13d098976ff62d4878ab8ce6b7",
      "candidate_info": {
        "commit_hash": "c140505bece2cc13d098976ff62d4878ab8ce6b7",
        "repo": "OISF/suricata",
        "commit_url": "https://github.com/OISF/suricata/commit/c140505bece2cc13d098976ff62d4878ab8ce6b7",
        "files": [
          "src/decode-ipv6.c"
        ],
        "message": "decoder: add gre over ipv6 support",
        "before_after_code_files": [
          "src/decode-ipv6.c||src/decode-ipv6.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OISF/suricata/pull/3625"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/decode-ipv6.c||src/decode-ipv6.c": [
          "File: src/decode-ipv6.c -> src/decode-ipv6.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "631:         case IPPROTO_IPV6:",
          "632:             DecodeIP6inIP6(tv, dtv, p, pkt + IPV6_HEADER_LEN, IPV6_GET_PLEN(p), pq);",
          "633:             return TM_ECODE_OK;",
          "634:         case IPPROTO_FRAGMENT:",
          "635:         case IPPROTO_HOPOPTS:",
          "636:         case IPPROTO_ROUTING:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "634:         case IPPROTO_GRE:",
          "635:             DecodeGRE(tv, dtv, p, pkt + IPV6_HEADER_LEN, IPV6_GET_PLEN(p), pq);",
          "636:             break;",
          "",
          "---------------"
        ]
      }
    }
  ]
}