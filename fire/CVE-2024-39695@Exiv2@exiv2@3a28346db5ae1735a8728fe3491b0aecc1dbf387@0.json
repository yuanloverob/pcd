{
  "cve_id": "CVE-2024-39695",
  "cve_desc": "Exiv2 is a command-line utility and C++ library for reading, writing, deleting, and modifying the metadata of image files. An out-of-bounds read was found in Exiv2 version v0.28.2. The vulnerability is in the parser for the ASF video format, which was a new feature in v0.28.0. The out-of-bounds read is triggered when Exiv2 is used to read the metadata of a crafted video file. The bug is fixed in version v0.28.3.",
  "repo": "Exiv2/exiv2",
  "patch_hash": "3a28346db5ae1735a8728fe3491b0aecc1dbf387",
  "patch_info": {
    "commit_hash": "3a28346db5ae1735a8728fe3491b0aecc1dbf387",
    "repo": "Exiv2/exiv2",
    "commit_url": "https://github.com/Exiv2/exiv2/commit/3a28346db5ae1735a8728fe3491b0aecc1dbf387",
    "files": [
      "src/asfvideo.cpp"
    ],
    "message": "Credit to OSS-Fuzz: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=68210 Use readOrThrow() to detect premature EOF.\n\n(cherry picked from commit fc1fe453a246cb8e188bbc226b48b339d5f81580)",
    "before_after_code_files": [
      "src/asfvideo.cpp||src/asfvideo.cpp"
    ]
  },
  "patch_diff": {
    "src/asfvideo.cpp||src/asfvideo.cpp": [
      "File: src/asfvideo.cpp -> src/asfvideo.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "239: AsfVideo::HeaderReader::HeaderReader(const BasicIo::UniquePtr& io) : IdBuf_(GUID) {",
      "240:   if (io->size() >= io->tell() + GUID + QWORD) {",
      "243:     size_ = readQWORDTag(io);",
      "244:     if (size_ >= GUID + QWORD)",
      "",
      "[Removed Lines]",
      "241:     IdBuf_ = io->read(GUID);",
      "",
      "[Added Lines]",
      "241:     io->readOrThrow(IdBuf_.data(), IdBuf_.size(), Exiv2::ErrorCode::kerCorruptedMetadata);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "297: void AsfVideo::decodeHeader() {",
      "298:   DataBuf nbHeadersBuf(DWORD + 1);",
      "301:   uint32_t nb_headers = Exiv2::getULong(nbHeadersBuf.data(), littleEndian);",
      "302:   Internal::enforce(nb_headers < std::numeric_limits<uint32_t>::max(), Exiv2::ErrorCode::kerCorruptedMetadata);",
      "",
      "[Removed Lines]",
      "299:   io_->read(nbHeadersBuf.data(), DWORD);",
      "",
      "[Added Lines]",
      "299:   io_->readOrThrow(nbHeadersBuf.data(), DWORD, Exiv2::ErrorCode::kerCorruptedMetadata);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "358: }",
      "360: void AsfVideo::streamProperties() {",
      "363:   enum class streamTypeInfo { Audio = 1, Video = 2 };",
      "364:   auto stream = static_cast<streamTypeInfo>(0);",
      "",
      "[Removed Lines]",
      "361:   DataBuf streamTypedBuf = io_->read(GUID);",
      "",
      "[Added Lines]",
      "361:   DataBuf streamTypedBuf(GUID);",
      "362:   io_->readOrThrow(streamTypedBuf.data(), streamTypedBuf.size(), Exiv2::ErrorCode::kerCorruptedMetadata);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "476: }  // AsfVideo::extendedContentDescription",
      "478: void AsfVideo::fileProperties() {",
      "480:   xmpData()[\"Xmp.video.FileID\"] = GUIDTag(FileIddBuf.data()).to_string();",
      "481:   xmpData()[\"Xmp.video.FileLength\"] = readQWORDTag(io_);",
      "482:   xmpData()[\"Xmp.video.CreationDate\"] = readQWORDTag(io_);",
      "",
      "[Removed Lines]",
      "479:   DataBuf FileIddBuf = io_->read(GUID);",
      "",
      "[Added Lines]",
      "480:   DataBuf FileIddBuf(GUID);",
      "481:   io_->readOrThrow(FileIddBuf.data(), FileIddBuf.size(), Exiv2::ErrorCode::kerCorruptedMetadata);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fc1fe453a246cb8e188bbc226b48b339d5f81580",
      "candidate_info": {
        "commit_hash": "fc1fe453a246cb8e188bbc226b48b339d5f81580",
        "repo": "Exiv2/exiv2",
        "commit_url": "https://github.com/Exiv2/exiv2/commit/fc1fe453a246cb8e188bbc226b48b339d5f81580",
        "files": [
          "src/asfvideo.cpp"
        ],
        "message": "Credit to OSS-Fuzz: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=68210 Use readOrThrow() to detect premature EOF.",
        "before_after_code_files": [
          "src/asfvideo.cpp||src/asfvideo.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/asfvideo.cpp||src/asfvideo.cpp"
          ],
          "candidate": [
            "src/asfvideo.cpp||src/asfvideo.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/asfvideo.cpp||src/asfvideo.cpp": [
          "File: src/asfvideo.cpp -> src/asfvideo.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "236: AsfVideo::HeaderReader::HeaderReader(const BasicIo::UniquePtr& io) : IdBuf_(GUID) {",
          "237:   if (io->size() >= io->tell() + GUID + QWORD) {",
          "240:     size_ = readQWORDTag(io);",
          "241:     if (size_ >= GUID + QWORD)",
          "",
          "[Removed Lines]",
          "238:     IdBuf_ = io->read(GUID);",
          "",
          "[Added Lines]",
          "238:     io->readOrThrow(IdBuf_.data(), IdBuf_.size(), Exiv2::ErrorCode::kerCorruptedMetadata);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "292: void AsfVideo::decodeHeader() {",
          "293:   DataBuf nbHeadersBuf(DWORD + 1);",
          "296:   uint32_t nb_headers = Exiv2::getULong(nbHeadersBuf.data(), littleEndian);",
          "297:   Internal::enforce(nb_headers < std::numeric_limits<uint32_t>::max(), Exiv2::ErrorCode::kerCorruptedMetadata);",
          "",
          "[Removed Lines]",
          "294:   io_->read(nbHeadersBuf.data(), DWORD);",
          "",
          "[Added Lines]",
          "294:   io_->readOrThrow(nbHeadersBuf.data(), DWORD, Exiv2::ErrorCode::kerCorruptedMetadata);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "353: }",
          "355: void AsfVideo::streamProperties() {",
          "358:   enum class streamTypeInfo { Audio = 1, Video = 2 };",
          "359:   auto stream = static_cast<streamTypeInfo>(0);",
          "",
          "[Removed Lines]",
          "356:   DataBuf streamTypedBuf = io_->read(GUID);",
          "",
          "[Added Lines]",
          "356:   DataBuf streamTypedBuf(GUID);",
          "357:   io_->readOrThrow(streamTypedBuf.data(), streamTypedBuf.size(), Exiv2::ErrorCode::kerCorruptedMetadata);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "471: }  // AsfVideo::extendedContentDescription",
          "473: void AsfVideo::fileProperties() {",
          "475:   xmpData()[\"Xmp.video.FileID\"] = GUIDTag(FileIddBuf.data()).to_string();",
          "476:   xmpData()[\"Xmp.video.FileLength\"] = readQWORDTag(io_);",
          "477:   xmpData()[\"Xmp.video.CreationDate\"] = readQWORDTag(io_);",
          "",
          "[Removed Lines]",
          "474:   DataBuf FileIddBuf = io_->read(GUID);",
          "",
          "[Added Lines]",
          "475:   DataBuf FileIddBuf(GUID);",
          "476:   io_->readOrThrow(FileIddBuf.data(), FileIddBuf.size(), Exiv2::ErrorCode::kerCorruptedMetadata);",
          "",
          "---------------"
        ]
      }
    }
  ]
}