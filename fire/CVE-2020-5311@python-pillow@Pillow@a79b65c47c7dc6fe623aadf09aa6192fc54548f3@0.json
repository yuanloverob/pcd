{
  "cve_id": "CVE-2020-5311",
  "cve_desc": "libImaging/SgiRleDecode.c in Pillow before 6.2.2 has an SGI buffer overflow.",
  "repo": "python-pillow/Pillow",
  "patch_hash": "a79b65c47c7dc6fe623aadf09aa6192fc54548f3",
  "patch_info": {
    "commit_hash": "a79b65c47c7dc6fe623aadf09aa6192fc54548f3",
    "repo": "python-pillow/Pillow",
    "commit_url": "https://github.com/python-pillow/Pillow/commit/a79b65c47c7dc6fe623aadf09aa6192fc54548f3",
    "files": [
      "Tests/images/sgi_overrun_expandrow.bin",
      "Tests/images/sgi_overrun_expandrow2.bin",
      "Tests/test_image.py",
      "src/libImaging/SgiRleDecode.c"
    ],
    "message": "Catch SGI buffer overruns",
    "before_after_code_files": [
      "Tests/test_image.py||Tests/test_image.py",
      "src/libImaging/SgiRleDecode.c||src/libImaging/SgiRleDecode.c"
    ]
  },
  "patch_diff": {
    "Tests/test_image.py||Tests/test_image.py": [
      "File: Tests/test_image.py -> Tests/test_image.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "593:         for file in [",
      "594:             \"fli_overrun.bin\",",
      "595:             \"sgi_overrun.bin\",",
      "596:             \"pcx_overrun.bin\",",
      "597:             \"pcx_overrun2.bin\",",
      "598:         ]:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "596:             \"sgi_overrun_expandrow.bin\",",
      "597:             \"sgi_overrun_expandrow2.bin\",",
      "",
      "---------------"
    ],
    "src/libImaging/SgiRleDecode.c||src/libImaging/SgiRleDecode.c": [
      "File: src/libImaging/SgiRleDecode.c -> src/libImaging/SgiRleDecode.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: }",
      "29: {",
      "30:     UINT8 pixel, count;",
      "",
      "[Removed Lines]",
      "28: static int expandrow(UINT8* dest, UINT8* src, int n, int z)",
      "",
      "[Added Lines]",
      "28: static int expandrow(UINT8* dest, UINT8* src, int n, int z, int xsize)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "37:         count = pixel & RLE_MAX_RUN;",
      "38:         if (!count)",
      "39:             return count;",
      "40:         if (pixel & RLE_COPY_FLAG) {",
      "41:             while(count--) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "40:         if (count > xsize) {",
      "41:             return -1;",
      "42:         }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "56:     return 0;",
      "57: }",
      "60: {",
      "61:     UINT8 pixel, count;",
      "",
      "[Removed Lines]",
      "59: static int expandrow2(UINT8* dest, const UINT8* src, int n, int z)",
      "",
      "[Added Lines]",
      "62: static int expandrow2(UINT8* dest, const UINT8* src, int n, int z, int xsize)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "70:         count = pixel & RLE_MAX_RUN;",
      "71:         if (!count)",
      "72:             return count;",
      "73:         if (pixel & RLE_COPY_FLAG) {",
      "74:             while(count--) {",
      "75:                 memcpy(dest, src, 2);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "76:         if (count > xsize) {",
      "77:             return -1;",
      "78:         }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "96:     UINT8 *ptr;",
      "97:     SGISTATE *c;",
      "98:     int err = 0;",
      "101:     c = (SGISTATE*)state->context;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "105:     int status;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "166:             if (c->bpc ==1) {",
      "169:             }",
      "170:             else {",
      "173:             }",
      "175:             state->count += c->rlelength;",
      "",
      "[Removed Lines]",
      "167:                 if(expandrow(&state->buffer[c->channo], &ptr[c->rleoffset], c->rlelength, im->bands))",
      "168:                     goto sgi_finish_decode;",
      "171:                 if(expandrow2(&state->buffer[c->channo * 2], &ptr[c->rleoffset], c->rlelength, im->bands))",
      "172:                     goto sgi_finish_decode;",
      "",
      "[Added Lines]",
      "174:                 status = expandrow(&state->buffer[c->channo], &ptr[c->rleoffset], c->rlelength, im->bands, im->xsize);",
      "177:                 status = expandrow2(&state->buffer[c->channo * 2], &ptr[c->rleoffset], c->rlelength, im->bands, im->xsize);",
      "178:             }",
      "179:             if (status == -1) {",
      "180:                 state->errcode = IMAGING_CODEC_OVERRUN;",
      "181:                 return -1;",
      "182:             } else if (status == 1) {",
      "183:                 goto sgi_finish_decode;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "be44f0d9923485f3ed3a7a9fd479cf8cf69d814a",
      "candidate_info": {
        "commit_hash": "be44f0d9923485f3ed3a7a9fd479cf8cf69d814a",
        "repo": "python-pillow/Pillow",
        "commit_url": "https://github.com/python-pillow/Pillow/commit/be44f0d9923485f3ed3a7a9fd479cf8cf69d814a",
        "files": [
          "Tests/images/sgi_overrun_expandrow.bin",
          "Tests/images/sgi_overrun_expandrow2.bin",
          "Tests/test_image.py",
          "src/libImaging/SgiRleDecode.c"
        ],
        "message": "Catch SGI buffer overruns",
        "before_after_code_files": [
          "Tests/test_image.py||Tests/test_image.py",
          "src/libImaging/SgiRleDecode.c||src/libImaging/SgiRleDecode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "Tests/test_image.py||Tests/test_image.py",
            "src/libImaging/SgiRleDecode.c||src/libImaging/SgiRleDecode.c"
          ],
          "candidate": [
            "Tests/test_image.py||Tests/test_image.py",
            "src/libImaging/SgiRleDecode.c||src/libImaging/SgiRleDecode.c"
          ]
        }
      },
      "candidate_diff": {
        "Tests/test_image.py||Tests/test_image.py": [
          "File: Tests/test_image.py -> Tests/test_image.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "593:         for file in [",
          "594:             \"fli_overrun.bin\",",
          "595:             \"sgi_overrun.bin\",",
          "596:             \"pcx_overrun.bin\",",
          "597:             \"pcx_overrun2.bin\",",
          "598:         ]:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "596:             \"sgi_overrun_expandrow.bin\",",
          "597:             \"sgi_overrun_expandrow2.bin\",",
          "",
          "---------------"
        ],
        "src/libImaging/SgiRleDecode.c||src/libImaging/SgiRleDecode.c": [
          "File: src/libImaging/SgiRleDecode.c -> src/libImaging/SgiRleDecode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: }",
          "29: {",
          "30:     UINT8 pixel, count;",
          "",
          "[Removed Lines]",
          "28: static int expandrow(UINT8* dest, UINT8* src, int n, int z)",
          "",
          "[Added Lines]",
          "28: static int expandrow(UINT8* dest, UINT8* src, int n, int z, int xsize)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37:         count = pixel & RLE_MAX_RUN;",
          "38:         if (!count)",
          "39:             return count;",
          "40:         if (pixel & RLE_COPY_FLAG) {",
          "41:             while(count--) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:         if (count > xsize) {",
          "41:             return -1;",
          "42:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "56:     return 0;",
          "57: }",
          "60: {",
          "61:     UINT8 pixel, count;",
          "",
          "[Removed Lines]",
          "59: static int expandrow2(UINT8* dest, const UINT8* src, int n, int z)",
          "",
          "[Added Lines]",
          "62: static int expandrow2(UINT8* dest, const UINT8* src, int n, int z, int xsize)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "70:         count = pixel & RLE_MAX_RUN;",
          "71:         if (!count)",
          "72:             return count;",
          "73:         if (pixel & RLE_COPY_FLAG) {",
          "74:             while(count--) {",
          "75:                 memcpy(dest, src, 2);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "76:         if (count > xsize) {",
          "77:             return -1;",
          "78:         }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "96:     UINT8 *ptr;",
          "97:     SGISTATE *c;",
          "98:     int err = 0;",
          "101:     c = (SGISTATE*)state->context;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "105:     int status;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "166:             if (c->bpc ==1) {",
          "169:             }",
          "170:             else {",
          "173:             }",
          "175:             state->count += c->rlelength;",
          "",
          "[Removed Lines]",
          "167:                 if(expandrow(&state->buffer[c->channo], &ptr[c->rleoffset], c->rlelength, im->bands))",
          "168:                     goto sgi_finish_decode;",
          "171:                 if(expandrow2(&state->buffer[c->channo * 2], &ptr[c->rleoffset], c->rlelength, im->bands))",
          "172:                     goto sgi_finish_decode;",
          "",
          "[Added Lines]",
          "174:                 status = expandrow(&state->buffer[c->channo], &ptr[c->rleoffset], c->rlelength, im->bands, im->xsize);",
          "177:                 status = expandrow2(&state->buffer[c->channo * 2], &ptr[c->rleoffset], c->rlelength, im->bands, im->xsize);",
          "178:             }",
          "179:             if (status == -1) {",
          "180:                 state->errcode = IMAGING_CODEC_OVERRUN;",
          "181:                 return -1;",
          "182:             } else if (status == 1) {",
          "183:                 goto sgi_finish_decode;",
          "",
          "---------------"
        ]
      }
    }
  ]
}