{
  "cve_id": "CVE-2024-37310",
  "cve_desc": "EVerest is an EV charging software stack. An integer overflow in the \"v2g_incoming_v2gtp\" function in the v2g_server.cpp implementation can allow a remote attacker to overflow the process' heap. This vulnerability is fixed in 2024.3.1 and 2024.6.0.",
  "repo": "EVerest/everest-core",
  "patch_hash": "f73620c4c0f626e1097068a47e10cc27b369ad8e",
  "patch_info": {
    "commit_hash": "f73620c4c0f626e1097068a47e10cc27b369ad8e",
    "repo": "EVerest/everest-core",
    "commit_url": "https://github.com/EVerest/everest-core/commit/f73620c4c0f626e1097068a47e10cc27b369ad8e",
    "files": [
      "modules/EvseV2G/v2g_server.cpp"
    ],
    "message": "Fix EvseV2G: Prevent interger overflow after reading v2gtp message length (#706)\n\nSigned-off-by: Sebastian Lukas <sebastian.lukas@pionix.de>",
    "before_after_code_files": [
      "modules/EvseV2G/v2g_server.cpp||modules/EvseV2G/v2g_server.cpp"
    ]
  },
  "patch_diff": {
    "modules/EvseV2G/v2g_server.cpp||modules/EvseV2G/v2g_server.cpp": [
      "File: modules/EvseV2G/v2g_server.cpp -> modules/EvseV2G/v2g_server.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: #include \"v2g_server.hpp\"",
      "27: #define MAX_RES_TIME 98",
      "29: static types::iso15118_charger::V2G_Message_ID get_V2G_Message_ID(enum V2gMsgTypeId v2g_msg,",
      "30:                                                                   enum v2g_protocol selected_protocol, bool is_req) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: #define UINT32_MAX   0xFFFFFFFF",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "162:         return -1;",
      "163:     }",
      "165:     if (conn->payload_len + V2GTP_HEADER_LENGTH > DEFAULT_BUFFER_SIZE) {",
      "167:              conn->payload_len + V2GTP_HEADER_LENGTH);",
      "",
      "[Removed Lines]",
      "166:         dlog(DLOG_LEVEL_ERROR, \"payload too long: have %d, would need %d\", DEFAULT_BUFFER_SIZE,",
      "",
      "[Added Lines]",
      "166:     if (conn->payload_len >= UINT32_MAX - V2GTP_HEADER_LENGTH) {",
      "167:         dlog(DLOG_LEVEL_ERROR, \"Prevent integer overflow - payload too long: have %d, would need %u\",",
      "168:              DEFAULT_BUFFER_SIZE, conn->payload_len);",
      "169:         return -1;",
      "170:     }",
      "173:         dlog(DLOG_LEVEL_ERROR, \"payload too long: have %d, would need %u\", DEFAULT_BUFFER_SIZE,",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "48de33ac9ab5388b7223da60996797f8f7c9e8ed",
      "candidate_info": {
        "commit_hash": "48de33ac9ab5388b7223da60996797f8f7c9e8ed",
        "repo": "EVerest/everest-core",
        "commit_url": "https://github.com/EVerest/everest-core/commit/48de33ac9ab5388b7223da60996797f8f7c9e8ed",
        "files": [
          "modules/EvseV2G/v2g_server.cpp"
        ],
        "message": "Fix EvseV2G: Prevent interger overflow after reading v2gtp message length (#706)\n\nSigned-off-by: Sebastian Lukas <sebastian.lukas@pionix.de>",
        "before_after_code_files": [
          "modules/EvseV2G/v2g_server.cpp||modules/EvseV2G/v2g_server.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "modules/EvseV2G/v2g_server.cpp||modules/EvseV2G/v2g_server.cpp"
          ],
          "candidate": [
            "modules/EvseV2G/v2g_server.cpp||modules/EvseV2G/v2g_server.cpp"
          ]
        }
      },
      "candidate_diff": {
        "modules/EvseV2G/v2g_server.cpp||modules/EvseV2G/v2g_server.cpp": [
          "File: modules/EvseV2G/v2g_server.cpp -> modules/EvseV2G/v2g_server.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include \"v2g_server.hpp\"",
          "27: #define MAX_RES_TIME 98",
          "29: static types::iso15118_charger::V2G_Message_ID get_V2G_Message_ID(enum V2gMsgTypeId v2g_msg,",
          "30:                                                                   enum v2g_protocol selected_protocol, bool is_req) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: #define UINT32_MAX   0xFFFFFFFF",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "162:         return -1;",
          "163:     }",
          "165:     if (conn->payload_len + V2GTP_HEADER_LENGTH > DEFAULT_BUFFER_SIZE) {",
          "167:              conn->payload_len + V2GTP_HEADER_LENGTH);",
          "",
          "[Removed Lines]",
          "166:         dlog(DLOG_LEVEL_ERROR, \"payload too long: have %d, would need %d\", DEFAULT_BUFFER_SIZE,",
          "",
          "[Added Lines]",
          "166:     if (conn->payload_len >= UINT32_MAX - V2GTP_HEADER_LENGTH) {",
          "167:         dlog(DLOG_LEVEL_ERROR, \"Prevent integer overflow - payload too long: have %d, would need %u\",",
          "168:              DEFAULT_BUFFER_SIZE, conn->payload_len);",
          "169:         return -1;",
          "170:     }",
          "173:         dlog(DLOG_LEVEL_ERROR, \"payload too long: have %d, would need %u\", DEFAULT_BUFFER_SIZE,",
          "",
          "---------------"
        ]
      }
    }
  ]
}