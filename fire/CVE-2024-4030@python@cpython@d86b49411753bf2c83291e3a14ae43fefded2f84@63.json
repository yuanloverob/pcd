{
  "cve_id": "CVE-2024-4030",
  "cve_desc": "On Windows a directory returned by tempfile.mkdtemp() would not always have permissions set to restrict reading and writing to the temporary directory by other users, instead usually inheriting the correct permissions from the default location. Alternate configurations or users without a profile directory may not have the intended permissions.\n\nIf you\u2019re not using Windows or haven\u2019t changed the temporary directory location then you aren\u2019t affected by this vulnerability. On other platforms the returned directory is consistently readable and writable only by the current user.\n\nThis issue was caused by Python not supporting Unix permissions on Windows. The fix adds support for Unix \u201c700\u201d for the mkdir function on Windows which is used by mkdtemp() to ensure the newly created directory has the proper permissions.",
  "repo": "python/cpython",
  "patch_hash": "d86b49411753bf2c83291e3a14ae43fefded2f84",
  "patch_info": {
    "commit_hash": "d86b49411753bf2c83291e3a14ae43fefded2f84",
    "repo": "python/cpython",
    "commit_url": "https://github.com/python/cpython/commit/d86b49411753bf2c83291e3a14ae43fefded2f84",
    "files": [
      "Doc/whatsnew/3.13.rst",
      "Misc/NEWS.d/next/Security/2024-05-01-20-57-09.gh-issue-118486.K44KJG.rst"
    ],
    "message": "gh-118486: Update docs for CVE-2024-4030 reference (GH-118737)\n\nUpdate docs for CVE-2024-4030 reference",
    "before_after_code_files": []
  },
  "patch_diff": {},
  "candidates": [
    {
      "candidate_hash": "dcb8030c535343973c963814ad7b1ffe60751453",
      "candidate_info": {
        "commit_hash": "dcb8030c535343973c963814ad7b1ffe60751453",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/dcb8030c535343973c963814ad7b1ffe60751453",
        "files": [
          "Objects/listobject.c"
        ],
        "message": "[3.13] gh-119053: Implement the fast path for list.__getitem__ (gh-119112) (gh-119309)\n\ngh-119053: Implement the fast path for list.__getitem__ (gh-119112)\n(cherry picked from commit ab4263a82abe8b684d8ad1edf7c7c6ec286ff756)\n\nCo-authored-by: Donghee Na <donghee.na@python.org>",
        "before_after_code_files": [
          "Objects/listobject.c||Objects/listobject.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Objects/listobject.c||Objects/listobject.c": [
          "File: Objects/listobject.c -> Objects/listobject.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "351:     if (!valid_index(idx, size)) {",
          "352:         goto exit;",
          "353:     }",
          "354:     item = Py_NewRef(self->ob_item[idx]);",
          "355: exit:",
          "356:     Py_END_CRITICAL_SECTION();",
          "357:     return item;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "354: #ifdef Py_GIL_DISABLED",
          "355:     item = _Py_NewRefWithLock(self->ob_item[idx]);",
          "356: #else",
          "358: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "656:         return NULL;",
          "657:     }",
          "658:     PyObject *item;",
          "660: #ifdef Py_GIL_DISABLED",
          "663:     }",
          "665:     item = Py_NewRef(a->ob_item[i]);",
          "667:     return item;",
          "668: }",
          "",
          "[Removed Lines]",
          "659:     Py_BEGIN_CRITICAL_SECTION(a);",
          "661:     if (!_Py_IsOwnedByCurrentThread((PyObject *)a) && !_PyObject_GC_IS_SHARED(a)) {",
          "662:         _PyObject_GC_SET_SHARED(a);",
          "664: #endif",
          "666:     Py_END_CRITICAL_SECTION();",
          "",
          "[Added Lines]",
          "664:     item = list_get_item_ref(a, i);",
          "665:     if (item == NULL) {",
          "666:         PyErr_SetObject(PyExc_IndexError, &_Py_STR(list_err));",
          "667:         return NULL;",
          "669: #else",
          "671: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2dd07fd899da50a0f25f0d586b8615a05b462244",
      "candidate_info": {
        "commit_hash": "2dd07fd899da50a0f25f0d586b8615a05b462244",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/2dd07fd899da50a0f25f0d586b8615a05b462244",
        "files": [
          "Misc/NEWS.d/next/Core and Builtins/2024-06-11-12-47-54.gh-issue-120346.hhn_6X.rst",
          "Modules/main.c"
        ],
        "message": "[3.13] gh-120346: Respect PYTHON_BASIC_REPL when running in interactive inspect mode (GH-120349) (#120351)\n\n(cherry picked from commit ec3af291fe2f680ab277edde7113e2762754f4aa)\n\nCo-authored-by: Pablo Galindo Salgado <Pablogsal@gmail.com>",
        "before_after_code_files": [
          "Modules/main.c||Modules/main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Modules/main.c||Modules/main.c": [
          "File: Modules/main.c -> Modules/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "542:         return;",
          "543:     }",
          "546:         PyCompilerFlags cf = _PyCompilerFlags_INIT;",
          "547:         int run = PyRun_AnyFileExFlags(stdin, \"<stdin>\", 0, &cf);",
          "",
          "[Removed Lines]",
          "545:     if (!isatty(fileno(stdin))) {",
          "",
          "[Added Lines]",
          "545:     if (!isatty(fileno(stdin))",
          "546:         || _Py_GetEnv(config->use_environment, \"PYTHON_BASIC_REPL\")) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}