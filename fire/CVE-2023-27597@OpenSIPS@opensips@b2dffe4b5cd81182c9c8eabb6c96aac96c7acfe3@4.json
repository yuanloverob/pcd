{
  "cve_id": "CVE-2023-27597",
  "cve_desc": "OpenSIPS is a Session Initiation Protocol (SIP) server implementation. Prior to versions 3.1.8 and 3.2.5, when a specially crafted SIP message is processed by the function `rewrite_ruri`, a crash occurs due to a segmentation fault. This issue causes the server to crash. It affects configurations containing functions that make use of the affected code, such as the function `setport`. This issue has been fixed in version 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
  "patch_info": {
    "commit_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "files": [
      "parser/parse_uri.c"
    ],
    "message": "[core] fix parse_uri() parsing\n\nIssue discovered during OpenSIPS Security Audit 2022,\n\tby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-358f-935m-7p9c",
    "before_after_code_files": [
      "parser/parse_uri.c||parser/parse_uri.c"
    ]
  },
  "patch_diff": {
    "parser/parse_uri.c||parser/parse_uri.c": [
      "File: parser/parse_uri.c -> parser/parse_uri.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1532:   case TELS_URI_T:",
      "1534:    uri->user=uri->host;",
      "1536:    uri->host.len=0;",
      "1537:    break;",
      "1538:   case SIP_URI_T:",
      "",
      "[Removed Lines]",
      "1535:    uri->host.s=\"\";",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1543:   case URN_NENA_SERVICE_URI_T:",
      "1544:    uri->user.s=0;",
      "1545:    uri->user.len=0;",
      "1548:    break;",
      "1549:   case ERROR_URI_T:",
      "1550:    LM_ERR(\"unexpected error (BUG?)\\n\");",
      "",
      "[Removed Lines]",
      "1546:    uri->host.s=\"\";",
      "1547:    uri->host.len=0;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9af70963ded16c369fe5d3be2027d8efe247adf6",
      "candidate_info": {
        "commit_hash": "9af70963ded16c369fe5d3be2027d8efe247adf6",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/9af70963ded16c369fe5d3be2027d8efe247adf6",
        "files": [
          "Makefile.defs",
          "packaging/debian/changelog",
          "packaging/freebsd/Makefile",
          "packaging/netbsd/Makefile",
          "packaging/openbsd/Makefile",
          "packaging/redhat_fedora/opensips.spec",
          "packaging/solaris/base-pkginfo",
          "packaging/solaris/berkeley-pkginfo",
          "packaging/solaris/carrierroute-pkginfo",
          "packaging/solaris/identity-pkginfo",
          "packaging/solaris/ldap-pkginfo",
          "packaging/solaris/mmgeoip-pkginfo",
          "packaging/solaris/mysql-pkginfo",
          "packaging/solaris/perl-pkginfo",
          "packaging/solaris/pgsql-pkginfo",
          "packaging/solaris/pkginfo",
          "packaging/solaris/regex-pkginfo",
          "packaging/solaris/snmp-pkginfo",
          "packaging/solaris/tls-pkginfo",
          "packaging/solaris/xmlrpc-pkginfo"
        ],
        "message": "Bump version to 3.2.7",
        "before_after_code_files": [
          "Makefile.defs||Makefile.defs",
          "packaging/redhat_fedora/opensips.spec||packaging/redhat_fedora/opensips.spec"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Makefile.defs||Makefile.defs": [
          "File: Makefile.defs -> Makefile.defs",
          "--- Hunk 1 ---",
          "[Context before]",
          "66: #version number",
          "67: VERSION_MAJOR = 3",
          "68: VERSION_MINOR = 2",
          "70: VERSION_BUILD =",
          "72: ifneq (,$(VERSION_BUILD))",
          "",
          "[Removed Lines]",
          "69: VERSION_SUBMINOR = 6",
          "",
          "[Added Lines]",
          "69: VERSION_SUBMINOR = 7",
          "",
          "---------------"
        ],
        "packaging/redhat_fedora/opensips.spec||packaging/redhat_fedora/opensips.spec": [
          "File: packaging/redhat_fedora/opensips.spec -> packaging/redhat_fedora/opensips.spec",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: Summary:  Very fast and configurable SIP server",
          "47: Name:     opensips",
          "49: Release:  1%{?dist}",
          "50: License:  GPLv2+",
          "51: Group:    System Environment/Daemons",
          "",
          "[Removed Lines]",
          "48: Version:  3.2.6",
          "",
          "[Added Lines]",
          "48: Version:  3.2.7",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ccfdb699bdb2e43979a780ead5baad31e2120a00",
      "candidate_info": {
        "commit_hash": "ccfdb699bdb2e43979a780ead5baad31e2120a00",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/ccfdb699bdb2e43979a780ead5baad31e2120a00",
        "files": [
          "modules/clusterer/sharing_tags.c"
        ],
        "message": "clusterer: Always broadcast a packet after shtag activation\n\nDue to network outages, it is currently possible for both sharing tags\nof an Active/Backup pair to end up in ACTIVE state.  This patch makes it\nso a \"cluster_shtag_set_active\" MI command always broadcasts (forces)\nthe ACTIVE state onto all neighbours, thus fixing the incorrect,\npost-outage state of the tags.\n\nCredits to @bogdan-iancu and @rvlad-patrascu for their contributions to\nthis fix!\n\n(cherry picked from commit 77c24e2122ea6f66f251349e05984cfbdef9166c)",
        "before_after_code_files": [
          "modules/clusterer/sharing_tags.c||modules/clusterer/sharing_tags.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/clusterer/sharing_tags.c||modules/clusterer/sharing_tags.c": [
          "File: modules/clusterer/sharing_tags.c -> modules/clusterer/sharing_tags.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "584:  }",
          "585:  ret = (tag==NULL)? -1 : tag->state ;",
          "622:     lock_switch_write(shtags_lock, lock_old_flag);",
          "624:     lock_switch_read(shtags_lock, lock_old_flag);",
          "625:    }",
          "626:   }",
          "631:   shtag_run_callbacks( tag_name, SHTAG_STATE_ACTIVE, cluster_id);",
          "635:  return ret;",
          "636: }",
          "",
          "[Removed Lines]",
          "588:  if (ret==SHTAG_STATE_ACTIVE && old_state!=SHTAG_STATE_ACTIVE) {",
          "590:   cl = get_cluster_by_id(cluster_id);",
          "591:   if (!cl) {",
          "592:    LM_ERR(\"Bad cluster id: %d\\n\", cluster_id);",
          "593:    lock_stop_sw_read(shtags_lock);",
          "594:    return ret;",
          "595:   }",
          "598:   for (node = cl->node_list; node; node = node->next) {",
          "599:    if (tag->send_active_msg)",
          "600:     for (ni = tag->active_msgs_sent;",
          "601:      ni && ni->node_id != node->node_id; ni = ni->next) ;",
          "602:    if (!tag->send_active_msg || !ni) {",
          "603:     if (shtag_send_active_info(cluster_id,&tag->name,node->node_id)<0){",
          "604:      LM_ERR(\"Failed to send message about tag [%.*s/%d] \"",
          "605:       \"going active to node: %d\\n\", tag_name->len, tag_name->s,",
          "606:       cluster_id, node->node_id);",
          "608:      lock_switch_write(shtags_lock, lock_old_flag);",
          "609:      tag->send_active_msg = 1;",
          "610:      lock_switch_read(shtags_lock, lock_old_flag);",
          "612:      continue;",
          "613:     }",
          "614:     ni = shm_malloc(sizeof *ni);",
          "615:     if (!ni) {",
          "616:      LM_ERR(\"No more shm memory!\\n\");",
          "617:      lock_stop_sw_read(shtags_lock);",
          "618:      return ret;",
          "619:     }",
          "620:     ni->node_id = node->node_id;",
          "621:     ni->next = tag->active_msgs_sent;",
          "623:     tag->active_msgs_sent = ni;",
          "628:   lock_stop_sw_read(shtags_lock);",
          "632:  } else",
          "633:   lock_stop_sw_read(shtags_lock);",
          "",
          "[Added Lines]",
          "587:  cl = get_cluster_by_id(cluster_id);",
          "588:  if (!cl) {",
          "589:   LM_ERR(\"Bad cluster id: %d\\n\", cluster_id);",
          "590:   lock_stop_sw_read(shtags_lock);",
          "591:   return ret;",
          "592:  }",
          "595:  for (node = cl->node_list; node; node = node->next) {",
          "596:   if (tag->send_active_msg)",
          "597:    for (ni = tag->active_msgs_sent;",
          "598:     ni && ni->node_id != node->node_id; ni = ni->next) ;",
          "599:   if (!tag->send_active_msg || !ni) {",
          "600:    if (shtag_send_active_info(cluster_id,&tag->name,node->node_id)<0){",
          "601:     LM_ERR(\"Failed to send message about tag [%.*s/%d] \"",
          "602:      \"going active to node: %d\\n\", tag_name->len, tag_name->s,",
          "603:      cluster_id, node->node_id);",
          "606:     tag->send_active_msg = 1;",
          "609:     continue;",
          "610:    }",
          "611:    ni = shm_malloc(sizeof *ni);",
          "612:    if (!ni) {",
          "613:     LM_ERR(\"No more shm memory!\\n\");",
          "614:     lock_stop_sw_read(shtags_lock);",
          "615:     return ret;",
          "617:    ni->node_id = node->node_id;",
          "618:    ni->next = tag->active_msgs_sent;",
          "619:    lock_switch_write(shtags_lock, lock_old_flag);",
          "620:    tag->active_msgs_sent = ni;",
          "621:    lock_switch_read(shtags_lock, lock_old_flag);",
          "623:  }",
          "625:  lock_stop_sw_read(shtags_lock);",
          "628:  if (ret==SHTAG_STATE_ACTIVE && old_state!=SHTAG_STATE_ACTIVE)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fa80bdf1aa054e38b64aa5fcab9e6de25e3c08e3",
      "candidate_info": {
        "commit_hash": "fa80bdf1aa054e38b64aa5fcab9e6de25e3c08e3",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/fa80bdf1aa054e38b64aa5fcab9e6de25e3c08e3",
        "files": [
          "modules/freeswitch/fs_proc.c"
        ],
        "message": "freeswitch: If-guard some verbose DBG logs\n\nSuggested by @NormB\n\n(cherry picked from commit 6ec8ddec144ce133a365bdc8a095a1f267376f58)",
        "before_after_code_files": [
          "modules/freeswitch/fs_proc.c||modules/freeswitch/fs_proc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/freeswitch/fs_proc.c||modules/freeswitch/fs_proc.c": [
          "File: modules/freeswitch/fs_proc.c -> modules/freeswitch/fs_proc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "541:  fs_evs *sock;",
          "542:  int rc;",
          "544:  LM_DBG(\"applying FS socket commands\\n\");",
          "546:  lock_start_write(sockets_esl_lock);",
          "547:  list_for_each_safe(_, __, fs_sockets_esl) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "544: #ifdef EXTRA_DEBUG",
          "546: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "576: {",
          "577:  fs_api_set_proc_no();",
          "579:  LM_DBG(\"size: %d, method: %d\\n\", reactor_size, io_poll_method);",
          "581:  if (init_worker_reactor(\"FS Manager\", RCT_PRIO_MAX) != 0) {",
          "582:   LM_BUG(\"failed to init FS reactor\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "581: #ifdef EXTRA_DEBUG",
          "583: #endif",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5582666ba49365dd18387e1b7cc59d853c3841ad",
      "candidate_info": {
        "commit_hash": "5582666ba49365dd18387e1b7cc59d853c3841ad",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/5582666ba49365dd18387e1b7cc59d853c3841ad",
        "files": [
          "modules/aaa_diameter/app_opensips/avps.c"
        ],
        "message": "aaa_diameter: Fix `app_opensips` compilation\n\nThe \"peer.h\" import is not available when compiling \"app_opensips\"\nwithin freeDiameter.  Moreover, it's not used anyway, so just remove it.\n\n(cherry picked from commit 7c3fef41a22b39d296c97a21ea5aed1d4d5770e7)",
        "before_after_code_files": [
          "modules/aaa_diameter/app_opensips/avps.c||modules/aaa_diameter/app_opensips/avps.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/aaa_diameter/app_opensips/avps.c||modules/aaa_diameter/app_opensips/avps.c": [
          "File: modules/aaa_diameter/app_opensips/avps.c -> modules/aaa_diameter/app_opensips/avps.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: #include \"ctype.h\"",
          "41: #include \"avps.h\"",
          "",
          "[Removed Lines]",
          "40: #include \"../peer.h\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6a71c14997936b3911ffa73d01e632838a40b97d",
      "candidate_info": {
        "commit_hash": "6a71c14997936b3911ffa73d01e632838a40b97d",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/6a71c14997936b3911ffa73d01e632838a40b97d",
        "files": [
          "cachedb/cachedb.h",
          "modules/cachedb_local/cachedb_local.c",
          "modules/sql_cacher/sql_cacher.c"
        ],
        "message": "sql_cacher: don't allow usage of a replicated local cache\n\nUsing a replicated collection for cachedb_local would lead to invalid\nkeys in the cache due to reload version inconsistencies.\n\n(cherry picked from commit 1b9662649d2e0606225b5e198a083619d0ca97e1)",
        "before_after_code_files": [
          "cachedb/cachedb.h||cachedb/cachedb.h",
          "modules/cachedb_local/cachedb_local.c||modules/cachedb_local/cachedb_local.c",
          "modules/sql_cacher/sql_cacher.c||modules/sql_cacher/sql_cacher.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cachedb/cachedb.h||cachedb/cachedb.h": [
          "File: cachedb/cachedb.h -> cachedb/cachedb.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:                 const cdb_dict_t *pairs);",
          "147:  int capability;",
          "148: } cachedb_funcs;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "150:  int (*is_replicated) (cachedb_con *con);",
          "",
          "---------------"
        ],
        "modules/cachedb_local/cachedb_local.c||modules/cachedb_local/cachedb_local.c": [
          "File: modules/cachedb_local/cachedb_local.c -> modules/cachedb_local/cachedb_local.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "321:  cachedb_do_close(con,lcache_free_connection);",
          "322: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "324: int lcache_is_replicated (cachedb_con *con)",
          "325: {",
          "326:  return cluster_id ? 1 : 0;",
          "327: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "348:  cde.cdb_func.remove = lcache_htable_remove;",
          "349:  cde.cdb_func.add = lcache_htable_add;",
          "350:  cde.cdb_func.sub = lcache_htable_sub;",
          "352:  cde.cdb_func.capability = CACHEDB_CAP_BINARY_VALUE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "355:  cde.cdb_func.is_replicated = lcache_is_replicated;",
          "",
          "---------------"
        ],
        "modules/sql_cacher/sql_cacher.c||modules/sql_cacher/sql_cacher.c": [
          "File: modules/sql_cacher/sql_cacher.c -> modules/sql_cacher/sql_cacher.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "743:    c_entry->cachedb_url.len, c_entry->cachedb_url.s);",
          "744:   return NULL;",
          "745:  }",
          "747:  if (new_db_hdls->cdbf.set(new_db_hdls->cdbcon, &cdb_test_key, &cdb_test_val,",
          "748:   0) < 0) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "747:  if (new_db_hdls->cdbf.is_replicated &&",
          "748:   new_db_hdls->cdbf.is_replicated(new_db_hdls->cdbcon)) {",
          "749:   LM_ERR(\"Cannot use an OpenSIPS replicated cacheDB\\n\");",
          "750:   return NULL;",
          "751:  }",
          "",
          "---------------"
        ]
      }
    }
  ]
}