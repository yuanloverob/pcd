{
  "cve_id": "CVE-2022-27239",
  "cve_desc": "In cifs-utils through 6.14, a stack-based buffer overflow when parsing the mount.cifs ip= command-line argument could lead to local attackers gaining root privileges.",
  "repo": "piastry/cifs-utils",
  "patch_hash": "955fb147e97a6a74e1aaa65766de91e2c1479765",
  "patch_info": {
    "commit_hash": "955fb147e97a6a74e1aaa65766de91e2c1479765",
    "repo": "piastry/cifs-utils",
    "commit_url": "https://github.com/piastry/cifs-utils/pull/7/commits/955fb147e97a6a74e1aaa65766de91e2c1479765",
    "files": [
      "mount.cifs.c"
    ],
    "message": "CVE-2022-27239: mount.cifs: fix length check for ip option parsing\n\nPrevious check was true whatever the length of the input string was,\nleading to a buffer overflow in the subsequent strcpy call.\n\nBug: https://bugzilla.samba.org/show_bug.cgi?id=15025\n\nSigned-off-by: Jeffrey Bencteux <jbe@improsec.com>\nReviewed-by: David Disseldorp <ddiss@suse.de>",
    "before_after_code_files": [
      "mount.cifs.c||mount.cifs.c"
    ]
  },
  "patch_diff": {
    "mount.cifs.c||mount.cifs.c": [
      "File: mount.cifs.c -> mount.cifs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "926:    if (!value || !*value) {",
      "927:     fprintf(stderr,",
      "928:      \"target ip address argument missing\\n\");",
      "930:     MAX_ADDRESS_LEN) {",
      "932:     if (parsed_info->verboseflag)",
      "933:      fprintf(stderr,",
      "934:       \"ip address %s override specified\\n\",",
      "",
      "[Removed Lines]",
      "929:    } else if (strnlen(value, MAX_ADDRESS_LEN) <=",
      "931:     strcpy(parsed_info->addrlist, value);",
      "",
      "[Added Lines]",
      "929:    } else if (strnlen(value, MAX_ADDRESS_LEN) <",
      "931:     strlcpy(parsed_info->addrlist, value,",
      "932:      MAX_ADDRESS_LEN);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8acc963a2e7e9d63fe1f2e7f73f5a03f83d9c379",
      "candidate_info": {
        "commit_hash": "8acc963a2e7e9d63fe1f2e7f73f5a03f83d9c379",
        "repo": "piastry/cifs-utils",
        "commit_url": "https://github.com/piastry/cifs-utils/commit/8acc963a2e7e9d63fe1f2e7f73f5a03f83d9c379",
        "files": [
          "mount.cifs.c"
        ],
        "message": "mount.cifs: fix verbose messages on option parsing\n\nWhen verbose logging is enabled, invalid credentials file lines may be\ndumped to stderr. This may lead to information disclosure in particular\nconditions when the credentials file given is sensitive and contains '='\nsigns.\n\nBug: https://bugzilla.samba.org/show_bug.cgi?id=15026\n\nSigned-off-by: Jeffrey Bencteux <jbe@improsec.com>\nReviewed-by: David Disseldorp <ddiss@suse.de>",
        "before_after_code_files": [
          "mount.cifs.c||mount.cifs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/piastry/cifs-utils/pull/7"
        ],
        "olp_code_files": {
          "patch": [
            "mount.cifs.c||mount.cifs.c"
          ],
          "candidate": [
            "mount.cifs.c||mount.cifs.c"
          ]
        }
      },
      "candidate_diff": {
        "mount.cifs.c||mount.cifs.c": [
          "File: mount.cifs.c -> mount.cifs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "628:     goto return_i;",
          "629:    break;",
          "630:   case CRED_DOM:",
          "634:    strlcpy(parsed_info->domain, temp_val,",
          "635:     sizeof(parsed_info->domain));",
          "636:    break;",
          "637:   case CRED_UNPARSEABLE:",
          "638:    if (parsed_info->verboseflag)",
          "639:     fprintf(stderr, \"Credential formatted \"",
          "642:    break;",
          "643:   }",
          "644:  }",
          "",
          "[Removed Lines]",
          "631:    if (parsed_info->verboseflag)",
          "632:     fprintf(stderr, \"domain=%s\\n\",",
          "633:      temp_val);",
          "640:      \"incorrectly: %s\\n\",",
          "641:      temp_val ? temp_val : \"(null)\");",
          "",
          "[Added Lines]",
          "637:      \"incorrectly\\n\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "007c07fd91b6d42f8bd45187cf78ebb06801139d",
      "candidate_info": {
        "commit_hash": "007c07fd91b6d42f8bd45187cf78ebb06801139d",
        "repo": "piastry/cifs-utils",
        "commit_url": "https://github.com/piastry/cifs-utils/commit/007c07fd91b6d42f8bd45187cf78ebb06801139d",
        "files": [
          "mount.cifs.c"
        ],
        "message": "CVE-2022-27239: mount.cifs: fix length check for ip option parsing\n\nPrevious check was true whatever the length of the input string was,\nleading to a buffer overflow in the subsequent strcpy call.\n\nBug: https://bugzilla.samba.org/show_bug.cgi?id=15025\n\nSigned-off-by: Jeffrey Bencteux <jbe@improsec.com>\nReviewed-by: David Disseldorp <ddiss@suse.de>",
        "before_after_code_files": [
          "mount.cifs.c||mount.cifs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "mount.cifs.c||mount.cifs.c"
          ],
          "candidate": [
            "mount.cifs.c||mount.cifs.c"
          ]
        }
      },
      "candidate_diff": {
        "mount.cifs.c||mount.cifs.c": [
          "File: mount.cifs.c -> mount.cifs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "926:    if (!value || !*value) {",
          "927:     fprintf(stderr,",
          "928:      \"target ip address argument missing\\n\");",
          "930:     MAX_ADDRESS_LEN) {",
          "932:     if (parsed_info->verboseflag)",
          "933:      fprintf(stderr,",
          "934:       \"ip address %s override specified\\n\",",
          "",
          "[Removed Lines]",
          "929:    } else if (strnlen(value, MAX_ADDRESS_LEN) <=",
          "931:     strcpy(parsed_info->addrlist, value);",
          "",
          "[Added Lines]",
          "929:    } else if (strnlen(value, MAX_ADDRESS_LEN) <",
          "931:     strlcpy(parsed_info->addrlist, value,",
          "932:      MAX_ADDRESS_LEN);",
          "",
          "---------------"
        ]
      }
    }
  ]
}