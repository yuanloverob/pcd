{
  "cve_id": "CVE-2023-27597",
  "cve_desc": "OpenSIPS is a Session Initiation Protocol (SIP) server implementation. Prior to versions 3.1.8 and 3.2.5, when a specially crafted SIP message is processed by the function `rewrite_ruri`, a crash occurs due to a segmentation fault. This issue causes the server to crash. It affects configurations containing functions that make use of the affected code, such as the function `setport`. This issue has been fixed in version 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
  "patch_info": {
    "commit_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "files": [
      "parser/parse_uri.c"
    ],
    "message": "[core] fix parse_uri() parsing\n\nIssue discovered during OpenSIPS Security Audit 2022,\n\tby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-358f-935m-7p9c",
    "before_after_code_files": [
      "parser/parse_uri.c||parser/parse_uri.c"
    ]
  },
  "patch_diff": {
    "parser/parse_uri.c||parser/parse_uri.c": [
      "File: parser/parse_uri.c -> parser/parse_uri.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1532:   case TELS_URI_T:",
      "1534:    uri->user=uri->host;",
      "1536:    uri->host.len=0;",
      "1537:    break;",
      "1538:   case SIP_URI_T:",
      "",
      "[Removed Lines]",
      "1535:    uri->host.s=\"\";",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1543:   case URN_NENA_SERVICE_URI_T:",
      "1544:    uri->user.s=0;",
      "1545:    uri->user.len=0;",
      "1548:    break;",
      "1549:   case ERROR_URI_T:",
      "1550:    LM_ERR(\"unexpected error (BUG?)\\n\");",
      "",
      "[Removed Lines]",
      "1546:    uri->host.s=\"\";",
      "1547:    uri->host.len=0;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "54d44b084391cc6b03ad751592f7509f1ed9c5d8",
      "candidate_info": {
        "commit_hash": "54d44b084391cc6b03ad751592f7509f1ed9c5d8",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/54d44b084391cc6b03ad751592f7509f1ed9c5d8",
        "files": [
          "modules/tracer/tracer.c"
        ],
        "message": "fix tracer.c \"dest port\" print error",
        "before_after_code_files": [
          "modules/tracer/tracer.c||modules/tracer/tracer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/tracer/tracer.c||modules/tracer/tracer.c": [
          "File: modules/tracer/tracer.c -> modules/tracer/tracer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1187:  v[3].iov_base = time_buf;",
          "1188:  v[3].iov_len = strlen(v[3].iov_base);",
          "1189:  v[6].iov_base = int2str(db_vals[6].val.int_val, (int *)&v[6].iov_len);",
          "1192:  if (fd < 0) {",
          "1193:   fd = open(path, O_RDWR|O_APPEND|O_CREAT, trace_file_mode);",
          "",
          "[Removed Lines]",
          "1190:  v[11].iov_base = int2str(db_vals[9].val.int_val, (int *)&v[10].iov_len);",
          "",
          "[Added Lines]",
          "1190:  v[10].iov_base = int2str(db_vals[9].val.int_val, (int *)&v[10].iov_len);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "54d8ff7c2342a5264be010511e8612f2a6de181e",
      "candidate_info": {
        "commit_hash": "54d8ff7c2342a5264be010511e8612f2a6de181e",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/54d8ff7c2342a5264be010511e8612f2a6de181e",
        "files": [
          "net/net_tcp.c"
        ],
        "message": "[TCP] fix init TCP support for auto-scalled procs\n\nWhen starting the TCP Main proc, be sure we initialize the MAIN<>Worker communication sockets also for the procs to be potentially scaled in the future.\n`pt[n].unix_sock` is valid only for running procs (not for the \"autoscale to-be\"), so use the `pt[n].tcp_socks_holder[0]` holder (valid for all procs, running or not).\nThanks go to Yury Kirsanov and Slava Bendersky for reporting and helping with the troubleshooting.\n\n(cherry picked from commit d7a4bf8f134d3d2cd761f528e6963445c9ef9b06)",
        "before_after_code_files": [
          "net/net_tcp.c||net/net_tcp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "net/net_tcp.c||net/net_tcp.c": [
          "File: net/net_tcp.c -> net/net_tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1566:  for (n=1; n<counted_max_processes; n++) {",
          "1571:    RCT_PRIO_PROC, &pt[n])<0){",
          "1572:     LM_ERR(\"failed to add process %d (%s) unix socket \"",
          "1573:      \"to the fd list\\n\", n, pt[n].desc);",
          "",
          "[Removed Lines]",
          "1569:   if (n!=process_no && pt[n].unix_sock>0)",
          "1570:    if (reactor_add_reader( pt[n].unix_sock, F_TCP_WORKER,",
          "",
          "[Added Lines]",
          "1569:   if (n!=process_no && pt[n].tcp_socks_holder[0]>0)",
          "1570:    if (reactor_add_reader( pt[n].tcp_socks_holder[0], F_TCP_WORKER,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d4a05448c4822bac6ffe744e8ee1747e14614ff9",
      "candidate_info": {
        "commit_hash": "d4a05448c4822bac6ffe744e8ee1747e14614ff9",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/d4a05448c4822bac6ffe744e8ee1747e14614ff9",
        "files": [
          "modules/mi_script/mi_script.c"
        ],
        "message": "mi_script: fix infinite loop where there are multiple params\n\n(cherry picked from commit 34ce451c664a3f51299cccbc263a8fb1bca214c7)",
        "before_after_code_files": [
          "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c": [
          "File: modules/mi_script/mi_script.c -> modules/mi_script/mi_script.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:    trim_leading(params);",
          "212:    p = q_memchr(params->s, ' ', params->len);",
          "213:    avp_val.s = *params;",
          "215:     avp_val.s.len = p - avp_val.s.s;",
          "216:    if (avp_val.s.len <= 0)",
          "217:     break;",
          "218:    val = cJSON_CreateStr(avp_val.s.s, avp_val.s.len);",
          "",
          "[Removed Lines]",
          "214:    if (p)",
          "",
          "[Added Lines]",
          "214:    if (p) {",
          "216:     params->s += avp_val.s.len;",
          "217:     params->len -= avp_val.s.len;",
          "218:    }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0a0c8a0ebe8572f96fee98f25fb47f083b86f909",
      "candidate_info": {
        "commit_hash": "0a0c8a0ebe8572f96fee98f25fb47f083b86f909",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/0a0c8a0ebe8572f96fee98f25fb47f083b86f909",
        "files": [
          "parser/parse_uri.c"
        ],
        "message": "parse_uri: Fix possible buffer read overflow with urn: URIs\n\nFixes OSS-Fuzz#39800\n\n(cherry picked from commit 0b6e9db4fcdcd1ff91e4727be07c95ecef26c50d)",
        "before_after_code_files": [
          "parser/parse_uri.c||parser/parse_uri.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [
            "parser/parse_uri.c||parser/parse_uri.c"
          ],
          "candidate": [
            "parser/parse_uri.c||parser/parse_uri.c"
          ]
        }
      },
      "candidate_diff": {
        "parser/parse_uri.c||parser/parse_uri.c": [
          "File: parser/parse_uri.c -> parser/parse_uri.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "666:  }else if (scheme==TEL_SCH){",
          "667:   uri->type=TEL_URI_T;",
          "668:  }else if (scheme==URN_SERVICE_SCH){",
          "670:    p+= URN_SERVICE_STR_LEN-1;",
          "671:    uri->type=URN_SERVICE_URI_T;",
          "672:   }",
          "674:    p+= URN_NENA_SERVICE_STR_LEN-1;",
          "675:    uri->type=URN_NENA_SERVICE_URI_T;",
          "676:   }else goto error_bad_uri;",
          "",
          "[Removed Lines]",
          "669:   if (memcmp(buf+3,URN_SERVICE_STR,URN_SERVICE_STR_LEN) == 0) {",
          "673:   else if (memcmp(buf+3,URN_NENA_SERVICE_STR,URN_NENA_SERVICE_STR_LEN) == 0) {",
          "",
          "[Added Lines]",
          "669:   if ((end-(buf+3)) >= URN_SERVICE_STR_LEN",
          "670:           && memcmp(buf+3,URN_SERVICE_STR,URN_SERVICE_STR_LEN) == 0) {",
          "674:   else if ((end-(buf+3)) >= URN_NENA_SERVICE_STR_LEN",
          "675:           && memcmp(buf+3,URN_NENA_SERVICE_STR,URN_NENA_SERVICE_STR_LEN) == 0) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0b38b5425e896c15313955489bd8a94d273e4990",
      "candidate_info": {
        "commit_hash": "0b38b5425e896c15313955489bd8a94d273e4990",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/0b38b5425e896c15313955489bd8a94d273e4990",
        "files": [
          "modules/rtpengine/rtpengine.c"
        ],
        "message": "rtpengine: fix API crash when no set/node is defined\n\n(cherry picked from commit 206b3a1d0f3cc899b6076657c9ccb89eeb3f8395)",
        "before_after_code_files": [
          "modules/rtpengine/rtpengine.c||modules/rtpengine/rtpengine.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/rtpengine/rtpengine.c||modules/rtpengine/rtpengine.c": [
          "File: modules/rtpengine/rtpengine.c -> modules/rtpengine/rtpengine.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3780:  if (!server->node.s) {",
          "3781:   node = NULL;",
          "3782:   rset = rtpengine_get_set(server->set);",
          "3783:   server->set = rset->id_set;",
          "3784:  } else {",
          "3785:   rset = select_rtpe_set(server->set);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3783:   if (!rset) {",
          "3784:    LM_ERR(\"no rtpengine set availble!\\n\");",
          "3785:    RTPE_STOP_READ();",
          "3786:    return -1;",
          "3787:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}