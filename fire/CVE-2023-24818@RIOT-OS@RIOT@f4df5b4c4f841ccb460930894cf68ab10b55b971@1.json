{
  "cve_id": "CVE-2023-24818",
  "cve_desc": "RIOT-OS, an operating system that supports Internet of Things devices, contains a network stack with the ability to process 6LoWPAN frames. Prior to version 2022.10, an attacker can send a crafted frame to the device resulting in a NULL pointer dereference. During forwarding of a fragment an uninitialized entry in the reassembly buffer is used. The NULL pointer dereference triggers a hard fault exception resulting in denial of service. Version 2022.10 fixes this issue. As a workaround, disable support for fragmented IP datagrams or apply the patches manually.",
  "repo": "RIOT-OS/RIOT",
  "patch_hash": "f4df5b4c4f841ccb460930894cf68ab10b55b971",
  "patch_info": {
    "commit_hash": "f4df5b4c4f841ccb460930894cf68ab10b55b971",
    "repo": "RIOT-OS/RIOT",
    "commit_url": "https://github.com/RIOT-OS/RIOT/commit/f4df5b4c4f841ccb460930894cf68ab10b55b971",
    "files": [
      "sys/net/link_layer/ieee802154/ieee802154.c"
    ],
    "message": "ieee802154: Adjust parsing of IEEE 802.15.4 frame header\n\n(cherry picked from commit 0bec3e245ed3815ad6c8cae54673f0021777768b)",
    "before_after_code_files": [
      "sys/net/link_layer/ieee802154/ieee802154.c||sys/net/link_layer/ieee802154/ieee802154.c"
    ]
  },
  "patch_diff": {
    "sys/net/link_layer/ieee802154/ieee802154.c||sys/net/link_layer/ieee802154/ieee802154.c": [
      "File: sys/net/link_layer/ieee802154/ieee802154.c -> sys/net/link_layer/ieee802154/ieee802154.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "115: size_t ieee802154_get_frame_hdr_len(const uint8_t *mhr)",
      "116: {",
      "134:         return 0;",
      "135:     }",
      "136:     tmp = (mhr[1] & IEEE802154_FCF_SRC_ADDR_MASK);",
      "137:     if (tmp == IEEE802154_FCF_SRC_ADDR_VOID) {",
      "139:     }",
      "140:     else {",
      "141:         if (!(mhr[0] & IEEE802154_FCF_PAN_COMP)) {",
      "",
      "[Removed Lines]",
      "118:     uint8_t tmp;",
      "122:     tmp = (mhr[1] & IEEE802154_FCF_DST_ADDR_MASK);",
      "123:     if (tmp == IEEE802154_FCF_DST_ADDR_SHORT) {",
      "125:     }",
      "126:     else if (tmp == IEEE802154_FCF_DST_ADDR_LONG) {",
      "128:     }",
      "129:     else if (tmp != IEEE802154_FCF_DST_ADDR_VOID) {",
      "130:         return 0;",
      "131:     }",
      "132:     else if (mhr[0] & IEEE802154_FCF_PAN_COMP) {",
      "138:         return len;",
      "",
      "[Added Lines]",
      "118:     uint8_t tmp, has_dst = 0;",
      "121:     tmp = (mhr[0] & IEEE802154_FCF_TYPE_MASK);",
      "122:     if (tmp == IEEE802154_FCF_TYPE_ACK) {",
      "124:         return len;",
      "125:     } else if (tmp != IEEE802154_FCF_TYPE_BEACON) {",
      "127:         tmp = (mhr[1] & IEEE802154_FCF_DST_ADDR_MASK);",
      "128:         if (tmp == IEEE802154_FCF_DST_ADDR_SHORT) {",
      "130:             has_dst = 1;",
      "131:         }",
      "132:         else if (tmp == IEEE802154_FCF_DST_ADDR_LONG) {",
      "134:             has_dst = 1;",
      "135:         }",
      "136:         else if (tmp != IEEE802154_FCF_DST_ADDR_VOID) {",
      "137:             return 0;",
      "138:         }",
      "139:         else if (mhr[0] & IEEE802154_FCF_PAN_COMP) {",
      "141:             return 0;",
      "142:         }",
      "143:     } else if (mhr[0] & IEEE802154_FCF_PAN_COMP) {",
      "150:         return has_dst ? len : 0;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "da63e45ee94c03a2e08625b04ea618653eab4a9f",
      "candidate_info": {
        "commit_hash": "da63e45ee94c03a2e08625b04ea618653eab4a9f",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/pull/18820/commits/da63e45ee94c03a2e08625b04ea618653eab4a9f",
        "files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ],
        "message": "gnrc_sixlowpan_iphc: fix buffer overflow in gnrc_sixlowpan_iphc_recv()\n\n(cherry picked from commit 73615161c01fcfbbc7216cf502cabb12c1598ee4)",
        "before_after_code_files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/18820"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c": [
          "File: sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c -> sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "737:     if (rbuf != NULL) {",
          "738:         ipv6 = rbuf->pkt;",
          "739:         assert(ipv6 != NULL);",
          "740:     }",
          "741:     else {",
          "742:         ipv6 = gnrc_pktbuf_add(NULL, NULL, sizeof(ipv6_hdr_t),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "740:         if ((ipv6->size < sizeof(ipv6_hdr_t)) &&",
          "741:             (gnrc_pktbuf_realloc_data(ipv6, sizeof(ipv6_hdr_t)) != 0)) {",
          "742:             DEBUG(\"6lo iphc: no space to decompress IPHC\\n\");",
          "743:             _recv_error_release(sixlo, ipv6, rbuf);",
          "744:             return;",
          "745:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "872:         payload_len = (sixlo->size + uncomp_hdr_len -",
          "873:                        payload_offset - sizeof(ipv6_hdr_t));",
          "874:     }",
          "881:     }",
          "883:     ipv6_hdr = ipv6->data;",
          "884:     ipv6_hdr->len = byteorder_htons(payload_len);",
          "",
          "[Removed Lines]",
          "875:     if ((rbuf == NULL) &&",
          "877:         (gnrc_pktbuf_realloc_data(ipv6, uncomp_hdr_len + payload_len) != 0)) {",
          "878:         DEBUG(\"6lo iphc: no space left to copy payload\\n\");",
          "879:         _recv_error_release(sixlo, ipv6, rbuf);",
          "880:         return;",
          "",
          "[Added Lines]",
          "881:     if (rbuf == NULL) {",
          "883:         if (gnrc_pktbuf_realloc_data(ipv6, uncomp_hdr_len + payload_len) != 0) {",
          "884:             DEBUG(\"6lo iphc: no space left to copy payload\\n\");",
          "885:             _recv_error_release(sixlo, ipv6, rbuf);",
          "886:             return;",
          "887:         }",
          "889:     else {",
          "890:         if (ipv6->size < (uncomp_hdr_len + (sixlo->size - payload_offset))) {",
          "891:             DEBUG(\"6lo iphc: not enough space to copy payload.\\n\");",
          "892:             DEBUG(\"6lo iphc: potentially malicious datagram size received.\\n\");",
          "893:             _recv_error_release(sixlo, ipv6, rbuf);",
          "894:             return;",
          "895:         }",
          "896:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7253e261556f252816f4a3b7c4f96fc10d642485",
      "candidate_info": {
        "commit_hash": "7253e261556f252816f4a3b7c4f96fc10d642485",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/7253e261556f252816f4a3b7c4f96fc10d642485",
        "files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ],
        "message": "gnrc_sixlowpan_iphc: fix null pointer dereference in _iphc_encode()\n\n(cherry picked from commit 639c04325de4ceb9d444955f4927bfae95843a39)",
        "before_after_code_files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/18820"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c": [
          "File: sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c -> sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1650: #ifdef MODULE_GNRC_SIXLOWPAN_IPHC_NHC",
          "1651:     while (_compressible_nh(nh)) {",
          "1652:         ssize_t local_pos = 0;",
          "1653:         switch (nh) {",
          "1654:             case PROTNUM_UDP:",
          "1655:                 local_pos = _nhc_udp_encode_snip(pkt, &iphc_hdr[inline_pos]);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1653:         if (pkt->next->next == NULL) {",
          "1654:             DEBUG(\"6lo iphc: packet next header missing data\");",
          "1655:             gnrc_pktbuf_release(dispatch);",
          "1656:             return NULL;",
          "1657:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d052e2ee166e55bbdfe4c455e65dbd7e3479ebe3",
      "candidate_info": {
        "commit_hash": "d052e2ee166e55bbdfe4c455e65dbd7e3479ebe3",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/d052e2ee166e55bbdfe4c455e65dbd7e3479ebe3",
        "files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ],
        "message": "gnrc_sixlowpan_iphc: fix integer underflow in gnrc_sixlowpan_iphc_recv()\n\n(cherry picked from commit 2709fbd827b688fe62df2c77c316914f4a3a6d4a)",
        "before_after_code_files": [
          "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/18820"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c||sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c": [
          "File: sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c -> sys/net/gnrc/network_layer/sixlowpan/iphc/gnrc_sixlowpan_iphc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "760:     iface = gnrc_netif_hdr_get_netif(netif->data);",
          "761:     payload_offset = _iphc_ipv6_decode(iphc_hdr, netif->data, iface,",
          "762:                                        ipv6->data);",
          "765:         _recv_error_release(sixlo, ipv6, rbuf);",
          "766:         return;",
          "767:     }",
          "",
          "[Removed Lines]",
          "763:     if (payload_offset == 0) {",
          "",
          "[Added Lines]",
          "763:     if ((payload_offset == 0) || (payload_offset > sixlo->size)) {",
          "765:         DEBUG(\"6lo iphc: malformed IPHC header\\n\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "781:                                                            &prev_nh_offset,",
          "782:                                                            ipv6,",
          "783:                                                            &uncomp_hdr_len);",
          "785:                         _recv_error_release(sixlo, ipv6, rbuf);",
          "786:                         return;",
          "787:                     }",
          "",
          "[Removed Lines]",
          "784:                     if (payload_offset == 0) {",
          "",
          "[Added Lines]",
          "785:                     if ((payload_offset == 0) || (payload_offset > sixlo->size)) {",
          "787:                         DEBUG(\"6lo iphc: malformed IPHC NHC IPv6 header\\n\");",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "796:                                                           prev_nh_offset,",
          "797:                                                           ipv6,",
          "798:                                                           &uncomp_hdr_len);",
          "800:                         _recv_error_release(sixlo, ipv6, rbuf);",
          "801:                         return;",
          "802:                     }",
          "",
          "[Removed Lines]",
          "799:                     if (payload_offset == 0) {",
          "",
          "[Added Lines]",
          "802:                     if ((payload_offset == 0) || (payload_offset > sixlo->size)) {",
          "804:                         DEBUG(\"6lo iphc: malformed IPHC NHC IPv6 header\\n\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "899:     ipv6_hdr = ipv6->data;",
          "900:     ipv6_hdr->len = byteorder_htons(payload_len);",
          "904:     if (rbuf != NULL) {",
          "905:         rbuf->super.current_size += (uncomp_hdr_len - payload_offset);",
          "906: #ifdef MODULE_GNRC_SIXLOWPAN_FRAG_VRB",
          "",
          "[Removed Lines]",
          "901:     memcpy(((uint8_t *)ipv6->data) + uncomp_hdr_len,",
          "902:            ((uint8_t *)sixlo->data) + payload_offset,",
          "903:            sixlo->size - payload_offset);",
          "",
          "[Added Lines]",
          "906:     if (sixlo->size > payload_offset) {",
          "907:         memcpy(((uint8_t *)ipv6->data) + uncomp_hdr_len,",
          "908:                ((uint8_t *)sixlo->data) + payload_offset,",
          "909:                sixlo->size - payload_offset);",
          "910:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}