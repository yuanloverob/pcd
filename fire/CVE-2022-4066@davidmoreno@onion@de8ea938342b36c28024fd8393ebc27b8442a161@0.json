{
  "cve_id": "CVE-2022-4066",
  "cve_desc": "A vulnerability was found in davidmoreno onion. It has been rated as problematic. Affected by this issue is the function onion_response_flush of the file src/onion/response.c of the component Log Handler. The manipulation leads to allocation of resources. The name of the patch is de8ea938342b36c28024fd8393ebc27b8442a161. It is recommended to apply a patch to fix this issue. The identifier of this vulnerability is VDB-214028.",
  "repo": "davidmoreno/onion",
  "patch_hash": "de8ea938342b36c28024fd8393ebc27b8442a161",
  "patch_info": {
    "commit_hash": "de8ea938342b36c28024fd8393ebc27b8442a161",
    "repo": "davidmoreno/onion",
    "commit_url": "https://github.com/davidmoreno/onion/commit/de8ea938342b36c28024fd8393ebc27b8442a161",
    "files": [
      "src/onion/low.h",
      "src/onion/response.c"
    ],
    "message": "Merge pull request #308 from kulkom/master\n\nFix a potential log spamming and DOS attack",
    "before_after_code_files": [
      "src/onion/low.h||src/onion/low.h",
      "src/onion/response.c||src/onion/response.c"
    ]
  },
  "patch_diff": {
    "src/onion/low.h||src/onion/low.h": [
      "File: src/onion/low.h -> src/onion/low.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "48: extern \"C\" {",
      "49: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "59:   #if __STDC_VERSION__ >= 201112 && !defined(__STDC_NO_THREADS__)",
      "60:   # define ONION_THREAD_LOCAL _Thread_local",
      "61:   #elif defined(_WIN32) && ( \\",
      "62:    defined(_MSC_VER) || \\",
      "63:    defined(__ICL) || \\",
      "64:    defined(__DMC__) || \\",
      "65:    defined(__BORLANDC__) \\",
      "66:   )",
      "67:   # define ONION_THREAD_LOCAL __declspec(thread)",
      "69:   # error You are using an obsolete compiler that does not support thread-local variables. Onion will not compile. Consider using a different compiler.",
      "70:   #else",
      "71:   # define ONION_THREAD_LOCAL __thread",
      "72:   #endif",
      "87: #define ONION_CALL_MAX_ONCE_PER_T(seconds, func, ...) do { \\",
      "88:   static ONION_THREAD_LOCAL time_t last_func_call = 0; \\",
      "89:   if (difftime(time(0), last_func_call) >= seconds) { \\",
      "90:     func(__VA_ARGS__); \\",
      "91:     time(&last_func_call); \\",
      "92:   } \\",
      "93: } while (0)",
      "98: #define ONION_CALL_MAX_ONCE_PER_T_COUNT(seconds, func, ...) do { \\",
      "99:   static ONION_THREAD_LOCAL time_t last_func_call = 0; \\",
      "100:   static ONION_THREAD_LOCAL unsigned int func_calls_since = 0; \\",
      "101:   if (difftime(time(0), last_func_call) >= seconds) { \\",
      "102:     func(__VA_ARGS__, func_calls_since + 1); \\",
      "103:     func_calls_since = 0; \\",
      "104:     time(&last_func_call); \\",
      "105:   } \\",
      "106:   else \\",
      "107:     ++func_calls_since; \\",
      "108: } while (0)",
      "",
      "---------------"
    ],
    "src/onion/response.c||src/onion/response.c": [
      "File: src/onion/response.c -> src/onion/response.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "431:     char tmp[16];",
      "432:     snprintf(tmp, sizeof(tmp), \"%X\\r\\n\", (unsigned int)res->buffer_pos);",
      "433:     if ((w = write(req, tmp, strlen(tmp))) <= 0) {",
      "437:       return OCS_CLOSE_CONNECTION;",
      "438:     }",
      "439:     ONION_DEBUG0(\"Write %d-%d bytes\", res->buffer_pos, w);",
      "",
      "[Removed Lines]",
      "434:       ONION_WARNING(\"Error writing chunk encoding length (%X) %s. Aborting write.\",",
      "436:       (unsigned int)res->buffer_pos, strerror(errno));",
      "",
      "[Added Lines]",
      "434:       ONION_CALL_MAX_ONCE_PER_T_COUNT(1, ONION_WARNING, \"Error writing chunk encoding length (%X) %s. Aborting write. (x%u)\",",
      "435:         (unsigned int)res->buffer_pos, strerror(errno));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "89cc1c0bdd9511563b0de4d713e57ebce6ebe6f3",
      "candidate_info": {
        "commit_hash": "89cc1c0bdd9511563b0de4d713e57ebce6ebe6f3",
        "repo": "davidmoreno/onion",
        "commit_url": "https://github.com/davidmoreno/onion/commit/89cc1c0bdd9511563b0de4d713e57ebce6ebe6f3",
        "files": [
          "src/onion/low.h",
          "src/onion/response.c"
        ],
        "message": "Make the fix much neater and more reusable",
        "before_after_code_files": [
          "src/onion/low.h||src/onion/low.h",
          "src/onion/response.c||src/onion/response.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/davidmoreno/onion/pull/308"
        ],
        "olp_code_files": {
          "patch": [
            "src/onion/low.h||src/onion/low.h",
            "src/onion/response.c||src/onion/response.c"
          ],
          "candidate": [
            "src/onion/low.h||src/onion/low.h",
            "src/onion/response.c||src/onion/response.c"
          ]
        }
      },
      "candidate_diff": {
        "src/onion/low.h||src/onion/low.h": [
          "File: src/onion/low.h -> src/onion/low.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: extern \"C\" {",
          "49: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:   #if __STDC_VERSION__ >= 201112 && !defined(__STDC_NO_THREADS__)",
          "60:   # define ONION_THREAD_LOCAL _Thread_local",
          "61:   #elif defined(_WIN32) && ( \\",
          "62:    defined(_MSC_VER) || \\",
          "63:    defined(__ICL) || \\",
          "64:    defined(__DMC__) || \\",
          "65:    defined(__BORLANDC__) \\",
          "66:   )",
          "67:   # define ONION_THREAD_LOCAL __declspec(thread)",
          "69:   # error You are using an obsolete compiler that does not support thread-local variables. Onion will not compile. Consider using a different compiler.",
          "70:   #else",
          "71:   # define ONION_THREAD_LOCAL __thread",
          "72:   #endif",
          "87: #define ONION_CALL_MAX_ONCE_PER_T(seconds, func, ...) do { \\",
          "88:   static ONION_THREAD_LOCAL time_t last_func_call = 0; \\",
          "89:   if (difftime(time(0), last_func_call) >= seconds) { \\",
          "90:     func(__VA_ARGS__); \\",
          "91:     time(&last_func_call); \\",
          "92:   } \\",
          "93: } while (0)",
          "98: #define ONION_CALL_MAX_ONCE_PER_T_COUNT(seconds, func, ...) do { \\",
          "99:   static ONION_THREAD_LOCAL time_t last_func_call = 0; \\",
          "100:   static ONION_THREAD_LOCAL unsigned int func_calls_since = 0; \\",
          "101:   if (difftime(time(0), last_func_call) >= seconds) { \\",
          "102:     func(__VA_ARGS__, func_calls_since + 1); \\",
          "103:     func_calls_since = 0; \\",
          "104:     time(&last_func_call); \\",
          "105:   } \\",
          "106:   else \\",
          "107:     ++func_calls_since; \\",
          "108: } while (0)",
          "",
          "---------------"
        ],
        "src/onion/response.c||src/onion/response.c": [
          "File: src/onion/response.c -> src/onion/response.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "431:     char tmp[16];",
          "432:     snprintf(tmp, sizeof(tmp), \"%X\\r\\n\", (unsigned int)res->buffer_pos);",
          "433:     if ((w = write(req, tmp, strlen(tmp))) <= 0) {",
          "460:       return OCS_CLOSE_CONNECTION;",
          "461:     }",
          "",
          "[Removed Lines]",
          "435:       #if __STDC_VERSION__ >= 201112 && !defined(__STDC_NO_THREADS__)",
          "436:       static _Thread_local time_t last_write_error_time = 0;",
          "437:       static _Thread_local unsigned int write_errors_since = 0;",
          "438:       #elif defined(_WIN32) && ( \\",
          "439:         defined(_MSC_VER) || \\",
          "440:         defined(__ICL) || \\",
          "441:         defined(__DMC__) || \\",
          "442:         defined(__BORLANDC__))",
          "443:       static __declspec(thread) time_t last_write_error_time = 0;",
          "444:       static __declspec(thread) unsigned int write_errors_since = 0;",
          "445:       #else",
          "446:       static __thread time_t last_write_error_time = 0;",
          "447:       static __thread unsigned int write_errors_since = 0;",
          "448:       #endif",
          "450:       if (time(NULL) - last_write_error_time >= 1)",
          "451:       {",
          "452:         ONION_WARNING(\"Error writing chunk encoding length (%X) %s. Aborting write. (x%u)\",",
          "453:           (unsigned int)res->buffer_pos, strerror(errno), write_errors_since + 1);",
          "454:         write_errors_since = 0;",
          "455:         time(&last_write_error_time);",
          "456:       }",
          "457:       else",
          "458:         ++write_errors_since;",
          "",
          "[Added Lines]",
          "434:       ONION_CALL_MAX_ONCE_PER_T_COUNT(1, ONION_WARNING, \"Error writing chunk encoding length (%X) %s. Aborting write. (x%u)\",",
          "435:         (unsigned int)res->buffer_pos, strerror(errno));",
          "",
          "---------------"
        ]
      }
    }
  ]
}