{
  "cve_id": "CVE-2023-46300",
  "cve_desc": "iTerm2 before 3.4.20 allow (potentially remote) code execution because of mishandling of certain escape sequences related to tmux integration.",
  "repo": "gnachman/iTerm2",
  "patch_hash": "ae8192522661c34d1cbe57f6f9ef2ff0a337c2a5",
  "patch_info": {
    "commit_hash": "ae8192522661c34d1cbe57f6f9ef2ff0a337c2a5",
    "repo": "gnachman/iTerm2",
    "commit_url": "https://github.com/gnachman/iTerm2/commit/ae8192522661c34d1cbe57f6f9ef2ff0a337c2a5",
    "files": [
      "sources/PTYSession.m",
      "sources/TmuxController.h",
      "sources/TmuxController.m"
    ],
    "message": "Fix for method 1 and 2.\n\nSend ^C as the first character of output when entering tmux integration mode.",
    "before_after_code_files": [
      "sources/PTYSession.m||sources/PTYSession.m",
      "sources/TmuxController.h||sources/TmuxController.h",
      "sources/TmuxController.m||sources/TmuxController.m"
    ]
  },
  "patch_diff": {
    "sources/PTYSession.m||sources/PTYSession.m": [
      "File: sources/PTYSession.m -> sources/PTYSession.m",
      "--- Hunk 1 ---",
      "[Context before]",
      "7891: - (void)kickOffTmux {",
      "7892:     _haveKickedOffTmux = YES;",
      "7893:     [_tmuxController ping];",
      "7894:     [_tmuxController validateOptions];",
      "7895:     [_tmuxController checkForUTF8];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7893:     [_tmuxController sendControlC];",
      "",
      "---------------"
    ],
    "sources/TmuxController.h||sources/TmuxController.h": [
      "File: sources/TmuxController.h -> sources/TmuxController.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "131: - (void)fitLayoutToWindows;",
      "132: - (void)validateOptions;",
      "133: - (void)ping;",
      "134: - (void)enablePauseModeIfPossible;",
      "135: - (void)unpausePanes:(NSArray<NSNumber *> *)wps;",
      "136: - (void)pausePanes:(NSArray<NSNumber *> *)wps;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "134: - (void)sendControlC;",
      "",
      "---------------"
    ],
    "sources/TmuxController.m||sources/TmuxController.m": [
      "File: sources/TmuxController.m -> sources/TmuxController.m",
      "--- Hunk 1 ---",
      "[Context before]",
      "1081:     [gateway_ sendCommandList:commands];",
      "1082: }",
      "1084: - (void)ping {",
      "1086:     [gateway_ sendCommand:@\"refresh-client -fpause-after=0,wait-exit\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1084: - (void)sendControlC {",
      "1085:     [gateway_ sendCommand:[NSString stringWithFormat:@\"%cphony-command\", 3]",
      "1086:            responseTarget:nil",
      "1087:          responseSelector:nil",
      "1088:            responseObject:nil",
      "1089:                     flags:kTmuxGatewayCommandShouldTolerateErrors];",
      "1090: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "98a25b4465d8e87c691ec1d6f3cf04f07c52fc9c",
      "candidate_info": {
        "commit_hash": "98a25b4465d8e87c691ec1d6f3cf04f07c52fc9c",
        "repo": "gnachman/iTerm2",
        "commit_url": "https://github.com/gnachman/iTerm2/commit/98a25b4465d8e87c691ec1d6f3cf04f07c52fc9c",
        "files": [
          "sources/PTYSession.m",
          "sources/TmuxController.h",
          "sources/TmuxController.m",
          "sources/TmuxGateway.m",
          "sources/VT100ScreenMutableState+TerminalDelegate.m"
        ],
        "message": "Avoid writing to the terminal immediately after getting the TMUX DCS code because if you run 'tmux -CC list-windows' (or anything other than new or attach) tmux may terminate right away, causing that stuff to go to the command line. Instead, wait to read %session-changed before sending any commands. Tmux won't send notifications unless it's in control mode. We still send control-C immediately, but wait to get %session-changed to send the phony command. Issue 11728",
        "before_after_code_files": [
          "sources/PTYSession.m||sources/PTYSession.m",
          "sources/TmuxController.h||sources/TmuxController.h",
          "sources/TmuxController.m||sources/TmuxController.m",
          "sources/TmuxGateway.m||sources/TmuxGateway.m",
          "sources/VT100ScreenMutableState+TerminalDelegate.m||sources/VT100ScreenMutableState+TerminalDelegate.m"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "sources/PTYSession.m||sources/PTYSession.m",
            "sources/TmuxController.h||sources/TmuxController.h",
            "sources/TmuxController.m||sources/TmuxController.m"
          ],
          "candidate": [
            "sources/PTYSession.m||sources/PTYSession.m",
            "sources/TmuxController.h||sources/TmuxController.h",
            "sources/TmuxController.m||sources/TmuxController.m"
          ]
        }
      },
      "candidate_diff": {
        "sources/PTYSession.m||sources/PTYSession.m": [
          "File: sources/PTYSession.m -> sources/PTYSession.m",
          "--- Hunk 1 ---",
          "[Context before]",
          "7768:     if (self.tmuxMode != TMUX_NONE) {",
          "7769:         return;",
          "7770:     }",
          "7771:     NSString *preferredTmuxClientName = [self preferredTmuxClientName];",
          "7772:     self.tmuxMode = TMUX_GATEWAY;",
          "7773:     _tmuxGateway = [[TmuxGateway alloc] initWithDelegate:self dcsID:dcsID];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7774:     [self writeTaskImpl:[NSString stringWithLongCharacter:3] encoding:NSUTF8StringEncoding forceEncoding:NO canBroadcast:NO reporting:NO];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7790:                                                       profile:profile",
          "7791:                                                  profileModel:model];",
          "7794:     [self.variablesScope setValue:_tmuxController.clientName forVariableNamed:iTermVariableKeySessionTmuxClientName];",
          "7795:     _tmuxController.ambiguousIsDoubleWidth = _treatAmbiguousWidthAsDoubleWidth;",
          "7796:     _tmuxController.unicodeVersion = _unicodeVersion;",
          "",
          "[Removed Lines]",
          "7793:     [_tmuxController sendControlC];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8252: - (void)kickOffTmux {",
          "8253:     _haveKickedOffTmux = YES;",
          "8254:     [_tmuxController ping];",
          "8255:     [_tmuxController validateOptions];",
          "8256:     [_tmuxController checkForUTF8];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8259:     [_tmuxController sendPhonyCommand];",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8261: }",
          "8263: - (void)tmuxInitialCommandDidFailWithError:(NSString *)error {",
          "8268: }",
          "8270: - (void)tmuxPrintLine:(NSString *)line {",
          "",
          "[Removed Lines]",
          "8265:     dispatch_async(dispatch_get_main_queue(), ^{",
          "8266:         [self printTmuxMessage:[NSString stringWithFormat:@\"tmux failed with error: \u201c%@\u201d\", error]];",
          "8267:     });",
          "",
          "[Added Lines]",
          "8270:     [self printTmuxMessage:[NSString stringWithFormat:@\"tmux failed with error: \u201c%@\u201d\", error]];",
          "",
          "---------------"
        ],
        "sources/TmuxController.h||sources/TmuxController.h": [
          "File: sources/TmuxController.h -> sources/TmuxController.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "131: - (void)fitLayoutToWindows;",
          "132: - (void)validateOptions;",
          "133: - (void)ping;",
          "135: - (void)sendReport:(NSData *)report pane:(int)pane;",
          "136: - (void)enablePauseModeIfPossible;",
          "137: - (void)unpausePanes:(NSArray<NSNumber *> *)wps;",
          "",
          "[Removed Lines]",
          "134: - (void)sendControlC;",
          "",
          "[Added Lines]",
          "134: - (void)sendPhonyCommand;",
          "",
          "---------------"
        ],
        "sources/TmuxController.m||sources/TmuxController.m": [
          "File: sources/TmuxController.m -> sources/TmuxController.m",
          "--- Hunk 1 ---",
          "[Context before]",
          "1098:                     flags:kTmuxGatewayCommandShouldTolerateErrors];",
          "1099: }",
          "1103:            responseTarget:nil",
          "1104:          responseSelector:nil",
          "1105:            responseObject:nil",
          "",
          "[Removed Lines]",
          "1101: - (void)sendControlC {",
          "1102:     [gateway_ sendCommand:[NSString stringWithFormat:@\"%cphony-command\", 3]",
          "",
          "[Added Lines]",
          "1101: - (void)sendPhonyCommand {",
          "1102:     [gateway_ sendCommand:@\"phony-command\"",
          "",
          "---------------"
        ],
        "sources/TmuxGateway.m||sources/TmuxGateway.m": [
          "File: sources/TmuxGateway.m -> sources/TmuxGateway.m",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:     BOOL _initialized;",
          "100:     NSMutableDictionary<NSString *, iTermTmuxSubscriptionHandle *> *_subscriptions;",
          "101:     int _sessionID;  // -1 if uninitialized",
          "102: }",
          "104: @synthesize delegate = delegate_;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "102:     BOOL _canWrite;",
          "103:     NSMutableString *_writeQueue;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112:         commandQueue_ = [[NSMutableArray alloc] init];",
          "113:         strayMessages_ = [[NSMutableString alloc] init];",
          "114:         _subscriptions = [[NSMutableDictionary alloc] init];",
          "115:         _dcsID = [dcsID copy];",
          "116:         _sessionID = -1;",
          "117:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:         _writeQueue = [NSMutableString string];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "406:     }",
          "407:     _sessionID = [[components objectAtIndex:1] intValue];",
          "408:     [delegate_ tmuxSessionChanged:[components objectAtIndex:2] sessionId:[[components objectAtIndex:1] intValue]];",
          "409: }",
          "411: - (void)parseSessionsChangedCommand:(NSString *)command",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "412:     if (!_canWrite) {",
          "414:         _canWrite = YES;",
          "415:         [self flushWriteQueue];",
          "416:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "802:             [delegate_ tmuxPrintLine:command];",
          "803:         }",
          "804:         if ([self versionAtLeastDecimalNumberWithString:@\"3.2\"]) {",
          "806:         }",
          "807:         [self hostDisconnected];",
          "808:     } else if ([command hasPrefix:@\"%begin\"]) {",
          "",
          "[Removed Lines]",
          "805:             [delegate_ tmuxWriteString:NEWLINE];",
          "",
          "[Added Lines]",
          "813:             [self write:NEWLINE];",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1058:         return;",
          "1059:     }",
          "1060:     TmuxLog(@\"Send command: %@\", commandWithNewline);",
          "1062:     TmuxLog(@\"Send command: %@\", [dict objectForKey:kCommandString]);",
          "1063: }",
          "",
          "[Removed Lines]",
          "1061:     [delegate_ tmuxWriteString:commandWithNewline];",
          "",
          "[Added Lines]",
          "1069:     [self write:commandWithNewline];",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1096:     TmuxLog(@\"-- End command list --\");",
          "1097:     [cmd appendString:NEWLINE];",
          "1098:     TmuxLog(@\"Send command: %@\", cmd);",
          "1100: }",
          "1102: - (NSWindowController<iTermWindowController> *)window {",
          "",
          "[Removed Lines]",
          "1099:     [delegate_ tmuxWriteString:cmd];",
          "",
          "[Added Lines]",
          "1107:     [self write:cmd];",
          "1108: }",
          "1110: - (void)write:(NSString *)string {",
          "1111:     if (_canWrite) {",
          "1112:         [delegate_ tmuxWriteString:string];",
          "1113:         return;",
          "1114:     }",
          "1115:     DLog(@\"Defer writing %@\", string);",
          "1116:     [_writeQueue appendString:string];",
          "1117: }",
          "1119: - (void)flushWriteQueue {",
          "1120:     DLog(@\"flushWriteQueue: %@\", _writeQueue);",
          "1121:     if (!_writeQueue.length) {",
          "1122:         return;",
          "1123:     }",
          "1124:     assert(_canWrite);",
          "1125:     [delegate_ tmuxWriteString:_writeQueue];",
          "1126:     _writeQueue = nil;",
          "",
          "---------------"
        ],
        "sources/VT100ScreenMutableState+TerminalDelegate.m||sources/VT100ScreenMutableState+TerminalDelegate.m": [
          "File: sources/VT100ScreenMutableState+TerminalDelegate.m -> sources/VT100ScreenMutableState+TerminalDelegate.m"
        ]
      }
    },
    {
      "candidate_hash": "ecf3314e8ffeb6517d5f823b90b8299e8246cb23",
      "candidate_info": {
        "commit_hash": "ecf3314e8ffeb6517d5f823b90b8299e8246cb23",
        "repo": "gnachman/iTerm2",
        "commit_url": "https://github.com/gnachman/iTerm2/commit/ecf3314e8ffeb6517d5f823b90b8299e8246cb23",
        "files": [
          "sources/PTYSession.m",
          "sources/TmuxController.h",
          "sources/TmuxController.m",
          "sources/TmuxGateway.m",
          "sources/VT100ScreenMutableState+TerminalDelegate.m"
        ],
        "message": "Avoid writing to the terminal immediately after getting the TMUX DCS code because if you run 'tmux -CC list-windows' (or anything other than new or attach) tmux may terminate right away, causing that stuff to go to the command line. Instead, wait to read %session-changed before sending any commands. Tmux won't send notifications unless it's in control mode. We still send control-C immediately, but wait to get %session-changed to send the phony command. Issue 11728",
        "before_after_code_files": [
          "sources/PTYSession.m||sources/PTYSession.m",
          "sources/TmuxController.h||sources/TmuxController.h",
          "sources/TmuxController.m||sources/TmuxController.m",
          "sources/TmuxGateway.m||sources/TmuxGateway.m",
          "sources/VT100ScreenMutableState+TerminalDelegate.m||sources/VT100ScreenMutableState+TerminalDelegate.m"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "sources/PTYSession.m||sources/PTYSession.m",
            "sources/TmuxController.h||sources/TmuxController.h",
            "sources/TmuxController.m||sources/TmuxController.m"
          ],
          "candidate": [
            "sources/PTYSession.m||sources/PTYSession.m",
            "sources/TmuxController.h||sources/TmuxController.h",
            "sources/TmuxController.m||sources/TmuxController.m"
          ]
        }
      },
      "candidate_diff": {
        "sources/PTYSession.m||sources/PTYSession.m": [
          "File: sources/PTYSession.m -> sources/PTYSession.m",
          "--- Hunk 1 ---",
          "[Context before]",
          "7777:     if (self.tmuxMode != TMUX_NONE) {",
          "7778:         return;",
          "7779:     }",
          "7780:     NSString *preferredTmuxClientName = [self preferredTmuxClientName];",
          "7781:     self.tmuxMode = TMUX_GATEWAY;",
          "7782:     _tmuxGateway = [[TmuxGateway alloc] initWithDelegate:self dcsID:dcsID];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7783:     [self writeTaskImpl:[NSString stringWithLongCharacter:3] encoding:NSUTF8StringEncoding forceEncoding:NO canBroadcast:NO reporting:NO];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "7799:                                                       profile:profile",
          "7800:                                                  profileModel:model];",
          "7803:     [self.variablesScope setValue:_tmuxController.clientName forVariableNamed:iTermVariableKeySessionTmuxClientName];",
          "7804:     _tmuxController.ambiguousIsDoubleWidth = _treatAmbiguousWidthAsDoubleWidth;",
          "7805:     _tmuxController.unicodeVersion = _unicodeVersion;",
          "",
          "[Removed Lines]",
          "7802:     [_tmuxController sendControlC];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "8261: - (void)kickOffTmux {",
          "8262:     _haveKickedOffTmux = YES;",
          "8263:     [_tmuxController ping];",
          "8264:     [_tmuxController validateOptions];",
          "8265:     [_tmuxController checkForUTF8];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8268:     [_tmuxController sendPhonyCommand];",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8270: }",
          "8272: - (void)tmuxInitialCommandDidFailWithError:(NSString *)error {",
          "8277: }",
          "8279: - (void)tmuxPrintLine:(NSString *)line {",
          "",
          "[Removed Lines]",
          "8274:     dispatch_async(dispatch_get_main_queue(), ^{",
          "8275:         [self printTmuxMessage:[NSString stringWithFormat:@\"tmux failed with error: \u201c%@\u201d\", error]];",
          "8276:     });",
          "",
          "[Added Lines]",
          "8279:     [self printTmuxMessage:[NSString stringWithFormat:@\"tmux failed with error: \u201c%@\u201d\", error]];",
          "",
          "---------------"
        ],
        "sources/TmuxController.h||sources/TmuxController.h": [
          "File: sources/TmuxController.h -> sources/TmuxController.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "131: - (void)fitLayoutToWindows;",
          "132: - (void)validateOptions;",
          "133: - (void)ping;",
          "135: - (void)sendReport:(NSData *)report pane:(int)pane;",
          "136: - (void)enablePauseModeIfPossible;",
          "137: - (void)unpausePanes:(NSArray<NSNumber *> *)wps;",
          "",
          "[Removed Lines]",
          "134: - (void)sendControlC;",
          "",
          "[Added Lines]",
          "134: - (void)sendPhonyCommand;",
          "",
          "---------------"
        ],
        "sources/TmuxController.m||sources/TmuxController.m": [
          "File: sources/TmuxController.m -> sources/TmuxController.m",
          "--- Hunk 1 ---",
          "[Context before]",
          "1098:                     flags:kTmuxGatewayCommandShouldTolerateErrors];",
          "1099: }",
          "1103:            responseTarget:nil",
          "1104:          responseSelector:nil",
          "1105:            responseObject:nil",
          "",
          "[Removed Lines]",
          "1101: - (void)sendControlC {",
          "1102:     [gateway_ sendCommand:[NSString stringWithFormat:@\"%cphony-command\", 3]",
          "",
          "[Added Lines]",
          "1101: - (void)sendPhonyCommand {",
          "1102:     [gateway_ sendCommand:@\"phony-command\"",
          "",
          "---------------"
        ],
        "sources/TmuxGateway.m||sources/TmuxGateway.m": [
          "File: sources/TmuxGateway.m -> sources/TmuxGateway.m",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:     BOOL _initialized;",
          "100:     NSMutableDictionary<NSString *, iTermTmuxSubscriptionHandle *> *_subscriptions;",
          "101:     int _sessionID;  // -1 if uninitialized",
          "102: }",
          "104: @synthesize delegate = delegate_;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "102:     BOOL _canWrite;",
          "103:     NSMutableString *_writeQueue;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112:         commandQueue_ = [[NSMutableArray alloc] init];",
          "113:         strayMessages_ = [[NSMutableString alloc] init];",
          "114:         _subscriptions = [[NSMutableDictionary alloc] init];",
          "115:         _dcsID = [dcsID copy];",
          "116:         _sessionID = -1;",
          "117:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "117:         _writeQueue = [NSMutableString string];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "406:     }",
          "407:     _sessionID = [[components objectAtIndex:1] intValue];",
          "408:     [delegate_ tmuxSessionChanged:[components objectAtIndex:2] sessionId:[[components objectAtIndex:1] intValue]];",
          "409: }",
          "411: - (void)parseSessionsChangedCommand:(NSString *)command",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "412:     if (!_canWrite) {",
          "414:         _canWrite = YES;",
          "415:         [self flushWriteQueue];",
          "416:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "802:             [delegate_ tmuxPrintLine:command];",
          "803:         }",
          "804:         if ([self versionAtLeastDecimalNumberWithString:@\"3.2\"]) {",
          "806:         }",
          "807:         [self hostDisconnected];",
          "808:     } else if ([command hasPrefix:@\"%begin\"]) {",
          "",
          "[Removed Lines]",
          "805:             [delegate_ tmuxWriteString:NEWLINE];",
          "",
          "[Added Lines]",
          "813:             [self write:NEWLINE];",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1058:         return;",
          "1059:     }",
          "1060:     TmuxLog(@\"Send command: %@\", commandWithNewline);",
          "1062:     TmuxLog(@\"Send command: %@\", [dict objectForKey:kCommandString]);",
          "1063: }",
          "",
          "[Removed Lines]",
          "1061:     [delegate_ tmuxWriteString:commandWithNewline];",
          "",
          "[Added Lines]",
          "1069:     [self write:commandWithNewline];",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1096:     TmuxLog(@\"-- End command list --\");",
          "1097:     [cmd appendString:NEWLINE];",
          "1098:     TmuxLog(@\"Send command: %@\", cmd);",
          "1100: }",
          "1102: - (NSWindowController<iTermWindowController> *)window {",
          "",
          "[Removed Lines]",
          "1099:     [delegate_ tmuxWriteString:cmd];",
          "",
          "[Added Lines]",
          "1107:     [self write:cmd];",
          "1108: }",
          "1110: - (void)write:(NSString *)string {",
          "1111:     if (_canWrite) {",
          "1112:         [delegate_ tmuxWriteString:string];",
          "1113:         return;",
          "1114:     }",
          "1115:     DLog(@\"Defer writing %@\", string);",
          "1116:     [_writeQueue appendString:string];",
          "1117: }",
          "1119: - (void)flushWriteQueue {",
          "1120:     DLog(@\"flushWriteQueue: %@\", _writeQueue);",
          "1121:     if (!_writeQueue.length) {",
          "1122:         return;",
          "1123:     }",
          "1124:     assert(_canWrite);",
          "1125:     [delegate_ tmuxWriteString:_writeQueue];",
          "1126:     _writeQueue = nil;",
          "",
          "---------------"
        ],
        "sources/VT100ScreenMutableState+TerminalDelegate.m||sources/VT100ScreenMutableState+TerminalDelegate.m": [
          "File: sources/VT100ScreenMutableState+TerminalDelegate.m -> sources/VT100ScreenMutableState+TerminalDelegate.m"
        ]
      }
    },
    {
      "candidate_hash": "0dce047440d6057f092aba7605eb095ed95838f0",
      "candidate_info": {
        "commit_hash": "0dce047440d6057f092aba7605eb095ed95838f0",
        "repo": "gnachman/iTerm2",
        "commit_url": "https://github.com/gnachman/iTerm2/commit/0dce047440d6057f092aba7605eb095ed95838f0",
        "files": [
          "sources/PTYSession.m",
          "sources/TmuxController.h",
          "sources/TmuxController.m"
        ],
        "message": "Fix for method 1 and 2.\n\nSend ^C as the first character of output when entering tmux integration mode.",
        "before_after_code_files": [
          "sources/PTYSession.m||sources/PTYSession.m",
          "sources/TmuxController.h||sources/TmuxController.h",
          "sources/TmuxController.m||sources/TmuxController.m"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "sources/PTYSession.m||sources/PTYSession.m",
            "sources/TmuxController.h||sources/TmuxController.h",
            "sources/TmuxController.m||sources/TmuxController.m"
          ],
          "candidate": [
            "sources/PTYSession.m||sources/PTYSession.m",
            "sources/TmuxController.h||sources/TmuxController.h",
            "sources/TmuxController.m||sources/TmuxController.m"
          ]
        }
      },
      "candidate_diff": {
        "sources/PTYSession.m||sources/PTYSession.m": [
          "File: sources/PTYSession.m -> sources/PTYSession.m",
          "--- Hunk 1 ---",
          "[Context before]",
          "7289: - (void)tmuxInitialCommandDidCompleteSuccessfully {",
          "7291:     [_tmuxController ping];",
          "7292:     [_tmuxController validateOptions];",
          "7293:     [_tmuxController checkForUTF8];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7291:     [_tmuxController sendControlC];",
          "",
          "---------------"
        ],
        "sources/TmuxController.h||sources/TmuxController.h": [
          "File: sources/TmuxController.h -> sources/TmuxController.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "127: - (void)fitLayoutToWindows;",
          "128: - (void)validateOptions;",
          "129: - (void)ping;",
          "130: - (void)enablePauseModeIfPossible;",
          "131: - (void)unpausePanes:(NSArray<NSNumber *> *)wps;",
          "132: - (void)pausePanes:(NSArray<NSNumber *> *)wps;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "130: - (void)sendControlC;",
          "",
          "---------------"
        ],
        "sources/TmuxController.m||sources/TmuxController.m": [
          "File: sources/TmuxController.m -> sources/TmuxController.m",
          "--- Hunk 1 ---",
          "[Context before]",
          "998:     [gateway_ sendCommandList:commands];",
          "999: }",
          "1001: - (void)ping {",
          "1003:     [gateway_ sendCommand:@\"refresh-client -fpause-after=0,wait-exit\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1001: - (void)sendControlC {",
          "1002:     [gateway_ sendCommand:[NSString stringWithFormat:@\"%cphony-command\", 3]",
          "1003:            responseTarget:nil",
          "1004:          responseSelector:nil",
          "1005:            responseObject:nil",
          "1006:                     flags:kTmuxGatewayCommandShouldTolerateErrors];",
          "1007: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}