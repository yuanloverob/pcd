{
  "cve_id": "CVE-2022-25892",
  "cve_desc": "The package muhammara before 2.6.1, from 3.0.0 and before 3.1.1; all versions of package hummus are vulnerable to Denial of Service (DoS) when supplied with a maliciously crafted PDF file to be parsed.",
  "repo": "julianhille/MuhammaraJS",
  "patch_hash": "1890fb555eaf171db79b73fdc3ea543bbd63c002",
  "patch_info": {
    "commit_hash": "1890fb555eaf171db79b73fdc3ea543bbd63c002",
    "repo": "julianhille/MuhammaraJS",
    "commit_url": "https://github.com/julianhille/MuhammaraJS/commit/1890fb555eaf171db79b73fdc3ea543bbd63c002",
    "files": [
      "CHANGELOG.md",
      "src/deps/PDFWriter/PDFParser.cpp",
      "tests/SigSeg.js",
      "tests/TestMaterials/BrokenPdfBadHeader.txt"
    ],
    "message": "Fix NPE in pdf parser\n\nFixes #214",
    "before_after_code_files": [
      "src/deps/PDFWriter/PDFParser.cpp||src/deps/PDFWriter/PDFParser.cpp",
      "tests/SigSeg.js||tests/SigSeg.js"
    ]
  },
  "patch_diff": {
    "src/deps/PDFWriter/PDFParser.cpp||src/deps/PDFWriter/PDFParser.cpp": [
      "File: src/deps/PDFWriter/PDFParser.cpp -> src/deps/PDFWriter/PDFParser.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "352:   mObjectParser.ResetReadState();",
      "353:   RefCountPtr<PDFObject> anObject(mObjectParser.ParseNewObject());",
      "355:   if(anObject->GetType() == PDFObject::ePDFObjectInteger)",
      "356:   {",
      "357:    mLastXrefPosition = (LongFilePositionType)((PDFInteger*)anObject.GetPtr())->GetValue();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "355:   if (!anObject) {",
      "356:    status = PDFHummus::eFailure;",
      "357:    TRACE_LOG(\"PDFParser::ParseXrefPosition: Unable to find any object\");",
      "358:    break;",
      "359:   }",
      "",
      "---------------"
    ],
    "tests/SigSeg.js||tests/SigSeg.js": [
      "File: tests/SigSeg.js -> tests/SigSeg.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: var muhammara = require(\"../muhammara\");",
      "2: const { expect } = require(\"chai\");",
      "4: describe(\"SigSegv test\", function () {",
      "5:   it(\"should read fields correctly\", function () {",
      "6:     expect(() =>",
      "7:       muhammara.createReader(",
      "8:         __dirname + \"/TestMaterials/BrokenPdfBadHeader.txt\"",
      "9:       )",
      "10:     ).to.throw();",
      "11:   });",
      "12: });",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ee59de7eaaffef99b764487b638a1596770a6fb7",
      "candidate_info": {
        "commit_hash": "ee59de7eaaffef99b764487b638a1596770a6fb7",
        "repo": "julianhille/MuhammaraJS",
        "commit_url": "https://github.com/julianhille/MuhammaraJS/commit/ee59de7eaaffef99b764487b638a1596770a6fb7",
        "files": [
          "src/deps/PDFWriter/PDFObjectParser.cpp"
        ],
        "message": "Fix typo",
        "before_after_code_files": [
          "src/deps/PDFWriter/PDFObjectParser.cpp||src/deps/PDFWriter/PDFObjectParser.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/julianhille/MuhammaraJS/pull/217"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/deps/PDFWriter/PDFObjectParser.cpp||src/deps/PDFWriter/PDFObjectParser.cpp": [
          "File: src/deps/PDFWriter/PDFObjectParser.cpp -> src/deps/PDFWriter/PDFObjectParser.cpp"
        ]
      }
    }
  ]
}