{
  "cve_id": "CVE-2018-5808",
  "cve_desc": "An error within the \"find_green()\" function (internal/dcraw_common.cpp) in LibRaw versions prior to 0.18.9 can be exploited to cause a stack-based buffer overflow and subsequently execute arbitrary code.",
  "repo": "LibRaw/LibRaw",
  "patch_hash": "fd6330292501983ac75fe4162275794b18445bd9",
  "patch_info": {
    "commit_hash": "fd6330292501983ac75fe4162275794b18445bd9",
    "repo": "LibRaw/LibRaw",
    "commit_url": "https://github.com/LibRaw/LibRaw/commit/fd6330292501983ac75fe4162275794b18445bd9",
    "files": [
      "dcraw/dcraw.c",
      "internal/dcraw_common.cpp",
      "internal/defines.h"
    ],
    "message": "Secunia 81800#1: samsumg_load_raw\n\nSecunia 81800#2: find_green\n\nSecunia 81800#3: rollei_load_raw\n\nremove_trailing_spaces: isspace() does not works right with signed non-latin chars\n\nSecunia 81800#5/6: nikon_coolscan_load_raw\n\nSecunia 81800#4: rollei_load_raw",
    "before_after_code_files": [
      "dcraw/dcraw.c||dcraw/dcraw.c",
      "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
      "internal/defines.h||internal/defines.h"
    ]
  },
  "patch_diff": {
    "dcraw/dcraw.c||dcraw/dcraw.c": [
      "File: dcraw/dcraw.c -> dcraw/dcraw.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "251:  3 G R G R G R 3 B G B G B G 3 R G R G R G 3 G B G B G B",
      "254: #define RAW(row,col) \\",
      "255:  raw_image[(row)*raw_width+(col)]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "254: #define RAWINDEX(row, col) ((row)*raw_width + (col))",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1512: void CLASS nikon_coolscan_load_raw()",
      "1513: {",
      "1517:   else",
      "1518:     gamma_curve(1.0/imgdata.params.coolscan_nef_gamma,0.,1,65535);",
      "1519:   fseek (ifp, data_offset, SEEK_SET);",
      "",
      "[Removed Lines]",
      "1514:   int bufsize = width*3*tiff_bps/8;",
      "1515:   if(tiff_bps <= 8)",
      "1516:     gamma_curve(1.0/imgdata.params.coolscan_nef_gamma,0.,1,255);",
      "",
      "[Added Lines]",
      "1515:   if(!image)",
      "1516:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "1518:   int bypp = tiff_bps <= 8 ? 1 : 2;",
      "1519:   int bufsize = width * 3 * bypp;",
      "1521:   if (tiff_bps <= 8)",
      "1522:     gamma_curve(1.0 / imgdata.params.coolscan_nef_gamma, 0., 1, 255);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1794: void CLASS rollei_load_raw()",
      "1795: {",
      "1796:   uchar pixel[10];",
      "1799:   isix = raw_width * raw_height * 5 / 8;",
      "1800:   while (fread (pixel, 1, 10, ifp) == 10) {",
      "",
      "[Removed Lines]",
      "1797:   unsigned iten=0, isix, i, buffer=0, todo[16];",
      "",
      "[Added Lines]",
      "1803:   unsigned iten = 0, isix, i, buffer = 0, todo[16];",
      "1804: #ifdef LIBRAW_LIBRARY_BUILD",
      "1805:   if(raw_width > 32767 || raw_height > 32767)",
      "1806:     throw LIBRAW_EXCEPTION_IO_BADFILE;",
      "1807: #endif",
      "1808:   unsigned maxpixel = raw_width*(raw_height+7);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1810:       todo[i]   = isix++;",
      "1811:       todo[i+1] = buffer >> (14-i)*5;",
      "1812:     }",
      "1815:   }",
      "1816:   maximum = 0x3ff;",
      "1817: }",
      "",
      "[Removed Lines]",
      "1813:     for (i=0; i < 16; i+=2)",
      "1814:       raw_image[todo[i]] = (todo[i+1] & 0x3ff);",
      "",
      "[Added Lines]",
      "1824:     for (i = 0; i < 16; i += 2)",
      "1825:       if(todo[i] < maxpixel)",
      "1826:         raw_image[todo[i]] = (todo[i + 1] & 0x3ff);",
      "1827:       else",
      "1828:         derror();",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "3857: void CLASS samsung_load_raw()",
      "3858: {",
      "3859:   int row, col, c, i, dir, op[4], len[4];",
      "3861:   order = 0x4949;",
      "3862:   for (row=0; row < raw_height; row++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3874: #ifdef LIBRAW_LIBRARY_BUILD",
      "3875:   if(raw_width> 32768 || raw_height > 32768)  // definitely too much for old samsung",
      "3876:     throw LIBRAW_EXCEPTION_IO_BADFILE;",
      "3877: #endif",
      "3878:   unsigned maxpixels = raw_width*(raw_height+7);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "3875:  case 2: len[c]--;  break;",
      "3876:  case 1: len[c]++;",
      "3877:       }",
      "3883:       }",
      "3884:     }",
      "3885:   }",
      "",
      "[Removed Lines]",
      "3878:       for (c=0; c < 16; c+=2) {",
      "3879:  i = len[((c & 1) << 1) | (c >> 3)];",
      "3880:         RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +",
      "3881:    (dir ? RAW(row+(~c | -2),col+c) : col ? RAW(row,col+(c | -2)) : 128);",
      "3882:  if (c == 14) c = -1;",
      "",
      "[Added Lines]",
      "3897:       for (c = 0; c < 16; c += 2)",
      "3898:       {",
      "3899:         i = len[((c & 1) << 1) | (c >> 3)];",
      "3900:  unsigned idest = RAWINDEX(row, col + c);",
      "3901:  unsigned isrc = (dir ? RAWINDEX(row + (~c | -2), col + c) : col ? RAWINDEX(row, col + (c | -2)) : 0);",
      "3902:  if(idest < maxpixels && isrc < maxpixels) // less than zero is handled by unsigned conversion",
      "3903:    RAW(row, col + c) = ((signed)ph1_bits(i) << (32 - i) >> (32 - i)) +                    (dir ? RAW(row + (~c | -2), col + c) : col ? RAW(row, col + (c | -2)) : 128);",
      "3904:  else",
      "3905:      derror();",
      "3906:         if (c == 14)",
      "3907:           c = -1;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "11081:        if (((make[0] == '\\0') && (!strncmp(model, \"ov5647\",6))) ||",
      "11082:            ((!strncmp(make, \"RaspberryPi\",11)) && (!strncmp(model, \"RP_OV5647\",9))) ||",
      "11083:            ((!strncmp(make, \"RaspberryPi\",11)) && (!strncmp(model, \"RP_imx219\",9)))) {",
      "11113:        }",
      "11115: #endif",
      "11116:         parse_makernote (base, 0);",
      "11117:        break;",
      "",
      "[Removed Lines]",
      "11084:          char mn_text[512];",
      "11085:          char* pos;",
      "11086:          char ccms[512];",
      "11087:          ushort l;",
      "11088:          float num;",
      "11090:          fgets(mn_text, len, ifp);",
      "11091:          pos = strstr(mn_text, \"gain_r=\");",
      "11092:          if (pos) cam_mul[0] = atof(pos+7);",
      "11093:          pos = strstr(mn_text, \"gain_b=\");",
      "11094:          if (pos) cam_mul[2] = atof(pos+7);",
      "11095:          if ((cam_mul[0] > 0.001f) && (cam_mul[2] > 0.001f)) cam_mul[1] = cam_mul[3] = 1.0f;",
      "11096:          else cam_mul[0] = cam_mul[2] = 0.0f;",
      "11098:          pos = strstr(mn_text, \"ccm=\") + 4;",
      "11099:          l = strstr(pos, \" \") - pos;",
      "11100:          memcpy (ccms, pos, l);",
      "11101:          ccms[l] = '\\0';",
      "11103:          pos = strtok (ccms, \",\");",
      "11104:          for (l=0; l<4; l++) {",
      "11105:            num = 0.0;",
      "11106:            for (c=0; c<3; c++) {",
      "11107:              imgdata.color.ccm[l][c] = (float)atoi(pos);",
      "11108:              num += imgdata.color.ccm[l][c];",
      "11109:              pos = strtok (NULL, \",\");",
      "11110:            }",
      "11111:            if (num > 0.01) FORC3 imgdata.color.ccm[l][c] = imgdata.color.ccm[l][c] / num;",
      "11112:          }",
      "11114:        else",
      "",
      "[Added Lines]",
      "11109:         char mn_text[512];",
      "11110:         char *pos;",
      "11111:         char ccms[512];",
      "11112:         ushort l;",
      "11113:         float num;",
      "11115:  fgets(mn_text, MIN(len,511), ifp);",
      "11116:         mn_text[511] = 0;",
      "11118:         pos = strstr(mn_text, \"gain_r=\");",
      "11119:         if (pos)",
      "11120:           cam_mul[0] = atof(pos + 7);",
      "11121:         pos = strstr(mn_text, \"gain_b=\");",
      "11122:         if (pos)",
      "11123:           cam_mul[2] = atof(pos + 7);",
      "11124:         if ((cam_mul[0] > 0.001f) && (cam_mul[2] > 0.001f))",
      "11125:           cam_mul[1] = cam_mul[3] = 1.0f;",
      "11126:         else",
      "11127:           cam_mul[0] = cam_mul[2] = 0.0f;",
      "11129:         pos = strstr(mn_text, \"ccm=\");",
      "11130:         if(pos)",
      "11131:         {",
      "11132:          pos +=4;",
      "11133:          char *pos2 = strstr(pos, \" \");",
      "11134:          if(pos2)",
      "11135:          {",
      "11136:            l = pos2 - pos;",
      "11137:            memcpy(ccms, pos, l);",
      "11138:            ccms[l] = '\\0';",
      "11139: #if defined WIN32 || defined(__MINGW32__)",
      "11141:           pos = strtok(ccms, \",\");",
      "11142: #else",
      "11143:           char *last=0;",
      "11144:           pos = strtok_r(ccms, \",\",&last);",
      "11145: #endif",
      "11146:           if(pos)",
      "11147:           {",
      "11148:             for (l = 0; l < 4; l++)",
      "11149:             {",
      "11150:               num = 0.0;",
      "11151:               for (c = 0; c < 3; c++)",
      "11152:               {",
      "11153:                 imgdata.color.ccm[l][c] = (float)atoi(pos);",
      "11154:                 num += imgdata.color.ccm[l][c];",
      "11155: #if defined WIN32 || defined(__MINGW32__)",
      "11156:                 pos = strtok(NULL, \",\");",
      "11157: #else",
      "11158:                 pos = strtok_r(NULL, \",\",&last);",
      "11159: #endif",
      "11160:                 if(!pos) goto end; // broken",
      "11161:               }",
      "11162:               if (num > 0.01)",
      "11163:                 FORC3 imgdata.color.ccm[l][c] = imgdata.color.ccm[l][c] / num;",
      "11164:             }",
      "11165:           }",
      "11166:         }",
      "11168:       end:;",
      "11169:       }",
      "11170:       else",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "15077:   UINT64 bitbuf=0;",
      "15078:   int vbits, col, i, c;",
      "15079:   ushort img[2][2064];",
      "15082:   FORC(2) {",
      "15083:     fseek (ifp, c ? off1:off0, SEEK_SET);",
      "",
      "[Removed Lines]",
      "15080:   double sum[]={0,0};",
      "",
      "[Added Lines]",
      "15136:   double sum[] = {0, 0};",
      "15137:   if(width > 2064) return 0.f; // too wide",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "15100: #ifdef LIBRAW_LIBRARY_BUILD",
      "15101: static void remove_trailing_spaces(char *string, size_t len)",
      "15102: {",
      "15108:   {",
      "15111:     else",
      "15112:       break;",
      "15113:   }",
      "",
      "[Removed Lines]",
      "15103:   if(len<1) return; // not needed, b/c sizeof of make/model is 64",
      "15104:   string[len-1]=0;",
      "15105:   if(len<3) return; // also not needed",
      "15106:   len = strnlen(string,len-1);",
      "15107:   for(int i=len-1; i>=0; i--)",
      "15109:     if(isspace(string[i]))",
      "15110:       string[i]=0;",
      "",
      "[Added Lines]",
      "15160:   if (len < 1)",
      "15161:     return; // not needed, b/c sizeof of make/model is 64",
      "15162:   string[len - 1] = 0;",
      "15163:   if (len < 3)",
      "15164:     return; // also not needed",
      "15165:   len = strnlen(string, len - 1);",
      "15166:   for (int i = len - 1; i >= 0; i--)",
      "15168:     if (isspace((unsigned char)string[i]))",
      "15169:       string[i] = 0;",
      "",
      "---------------"
    ],
    "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
      "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "1229: void CLASS nikon_coolscan_load_raw()",
      "1230: {",
      "1234:   else",
      "1235:     gamma_curve(1.0/imgdata.params.coolscan_nef_gamma,0.,1,65535);",
      "1236:   fseek (ifp, data_offset, SEEK_SET);",
      "",
      "[Removed Lines]",
      "1231:   int bufsize = width*3*tiff_bps/8;",
      "1232:   if(tiff_bps <= 8)",
      "1233:     gamma_curve(1.0/imgdata.params.coolscan_nef_gamma,0.,1,255);",
      "",
      "[Added Lines]",
      "1231:   if(!image)",
      "1232:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
      "1234:   int bypp = tiff_bps <= 8 ? 1 : 2;",
      "1235:   int bufsize = width * 3 * bypp;",
      "1237:   if (tiff_bps <= 8)",
      "1238:     gamma_curve(1.0 / imgdata.params.coolscan_nef_gamma, 0., 1, 255);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1506: void CLASS rollei_load_raw()",
      "1507: {",
      "1508:   uchar pixel[10];",
      "1511:   isix = raw_width * raw_height * 5 / 8;",
      "1512:   while (fread (pixel, 1, 10, ifp) == 10) {",
      "",
      "[Removed Lines]",
      "1509:   unsigned iten=0, isix, i, buffer=0, todo[16];",
      "",
      "[Added Lines]",
      "1514:   unsigned iten = 0, isix, i, buffer = 0, todo[16];",
      "1515: #ifdef LIBRAW_LIBRARY_BUILD",
      "1516:   if(raw_width > 32767 || raw_height > 32767)",
      "1517:     throw LIBRAW_EXCEPTION_IO_BADFILE;",
      "1518: #endif",
      "1519:   unsigned maxpixel = raw_width*(raw_height+7);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1522:       todo[i]   = isix++;",
      "1523:       todo[i+1] = buffer >> (14-i)*5;",
      "1524:     }",
      "1527:   }",
      "1528:   maximum = 0x3ff;",
      "1529: }",
      "",
      "[Removed Lines]",
      "1525:     for (i=0; i < 16; i+=2)",
      "1526:       raw_image[todo[i]] = (todo[i+1] & 0x3ff);",
      "",
      "[Added Lines]",
      "1535:     for (i = 0; i < 16; i += 2)",
      "1536:       if(todo[i] < maxpixel)",
      "1537:         raw_image[todo[i]] = (todo[i + 1] & 0x3ff);",
      "1538:       else",
      "1539:         derror();",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "3569: void CLASS samsung_load_raw()",
      "3570: {",
      "3571:   int row, col, c, i, dir, op[4], len[4];",
      "3573:   order = 0x4949;",
      "3574:   for (row=0; row < raw_height; row++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3585: #ifdef LIBRAW_LIBRARY_BUILD",
      "3586:   if(raw_width> 32768 || raw_height > 32768)  // definitely too much for old samsung",
      "3587:     throw LIBRAW_EXCEPTION_IO_BADFILE;",
      "3588: #endif",
      "3589:   unsigned maxpixels = raw_width*(raw_height+7);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "3587:  case 2: len[c]--;  break;",
      "3588:  case 1: len[c]++;",
      "3589:       }",
      "3595:       }",
      "3596:     }",
      "3597:   }",
      "",
      "[Removed Lines]",
      "3590:       for (c=0; c < 16; c+=2) {",
      "3591:  i = len[((c & 1) << 1) | (c >> 3)];",
      "3592:         RAW(row,col+c) = ((signed) ph1_bits(i) << (32-i) >> (32-i)) +",
      "3593:    (dir ? RAW(row+(~c | -2),col+c) : col ? RAW(row,col+(c | -2)) : 128);",
      "3594:  if (c == 14) c = -1;",
      "",
      "[Added Lines]",
      "3608:       for (c = 0; c < 16; c += 2)",
      "3609:       {",
      "3610:         i = len[((c & 1) << 1) | (c >> 3)];",
      "3611:  unsigned idest = RAWINDEX(row, col + c);",
      "3612:  unsigned isrc = (dir ? RAWINDEX(row + (~c | -2), col + c) : col ? RAWINDEX(row, col + (c | -2)) : 0);",
      "3613:  if(idest < maxpixels && isrc < maxpixels) // less than zero is handled by unsigned conversion",
      "3614:    RAW(row, col + c) = ((signed)ph1_bits(i) << (32 - i) >> (32 - i)) +                    (dir ? RAW(row + (~c | -2), col + c) : col ? RAW(row, col + (c | -2)) : 128);",
      "3615:  else",
      "3616:      derror();",
      "3617:         if (c == 14)",
      "3618:           c = -1;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "9890:        if (((make[0] == '\\0') && (!strncmp(model, \"ov5647\",6))) ||",
      "9891:            ((!strncmp(make, \"RaspberryPi\",11)) && (!strncmp(model, \"RP_OV5647\",9))) ||",
      "9892:            ((!strncmp(make, \"RaspberryPi\",11)) && (!strncmp(model, \"RP_imx219\",9)))) {",
      "9922:        }",
      "9924: #endif",
      "9925:         parse_makernote (base, 0);",
      "9926:        break;",
      "",
      "[Removed Lines]",
      "9893:          char mn_text[512];",
      "9894:          char* pos;",
      "9895:          char ccms[512];",
      "9896:          ushort l;",
      "9897:          float num;",
      "9899:          fgets(mn_text, len, ifp);",
      "9900:          pos = strstr(mn_text, \"gain_r=\");",
      "9901:          if (pos) cam_mul[0] = atof(pos+7);",
      "9902:          pos = strstr(mn_text, \"gain_b=\");",
      "9903:          if (pos) cam_mul[2] = atof(pos+7);",
      "9904:          if ((cam_mul[0] > 0.001f) && (cam_mul[2] > 0.001f)) cam_mul[1] = cam_mul[3] = 1.0f;",
      "9905:          else cam_mul[0] = cam_mul[2] = 0.0f;",
      "9907:          pos = strstr(mn_text, \"ccm=\") + 4;",
      "9908:          l = strstr(pos, \" \") - pos;",
      "9909:          memcpy (ccms, pos, l);",
      "9910:          ccms[l] = '\\0';",
      "9912:          pos = strtok (ccms, \",\");",
      "9913:          for (l=0; l<4; l++) {",
      "9914:            num = 0.0;",
      "9915:            for (c=0; c<3; c++) {",
      "9916:              imgdata.color.ccm[l][c] = (float)atoi(pos);",
      "9917:              num += imgdata.color.ccm[l][c];",
      "9918:              pos = strtok (NULL, \",\");",
      "9919:            }",
      "9920:            if (num > 0.01) FORC3 imgdata.color.ccm[l][c] = imgdata.color.ccm[l][c] / num;",
      "9921:          }",
      "9923:        else",
      "",
      "[Added Lines]",
      "9917:         char mn_text[512];",
      "9918:         char *pos;",
      "9919:         char ccms[512];",
      "9920:         ushort l;",
      "9921:         float num;",
      "9923:  fgets(mn_text, MIN(len,511), ifp);",
      "9924:         mn_text[511] = 0;",
      "9926:         pos = strstr(mn_text, \"gain_r=\");",
      "9927:         if (pos)",
      "9928:           cam_mul[0] = atof(pos + 7);",
      "9929:         pos = strstr(mn_text, \"gain_b=\");",
      "9930:         if (pos)",
      "9931:           cam_mul[2] = atof(pos + 7);",
      "9932:         if ((cam_mul[0] > 0.001f) && (cam_mul[2] > 0.001f))",
      "9933:           cam_mul[1] = cam_mul[3] = 1.0f;",
      "9934:         else",
      "9935:           cam_mul[0] = cam_mul[2] = 0.0f;",
      "9937:         pos = strstr(mn_text, \"ccm=\");",
      "9938:         if(pos)",
      "9939:         {",
      "9940:          pos +=4;",
      "9941:          char *pos2 = strstr(pos, \" \");",
      "9942:          if(pos2)",
      "9943:          {",
      "9944:            l = pos2 - pos;",
      "9945:            memcpy(ccms, pos, l);",
      "9946:            ccms[l] = '\\0';",
      "9947: #if defined WIN32 || defined(__MINGW32__)",
      "9949:           pos = strtok(ccms, \",\");",
      "9950: #else",
      "9951:           char *last=0;",
      "9952:           pos = strtok_r(ccms, \",\",&last);",
      "9953: #endif",
      "9954:           if(pos)",
      "9955:           {",
      "9956:             for (l = 0; l < 4; l++)",
      "9957:             {",
      "9958:               num = 0.0;",
      "9959:               for (c = 0; c < 3; c++)",
      "9960:               {",
      "9961:                 imgdata.color.ccm[l][c] = (float)atoi(pos);",
      "9962:                 num += imgdata.color.ccm[l][c];",
      "9963: #if defined WIN32 || defined(__MINGW32__)",
      "9964:                 pos = strtok(NULL, \",\");",
      "9965: #else",
      "9966:                 pos = strtok_r(NULL, \",\",&last);",
      "9967: #endif",
      "9968:                 if(!pos) goto end; // broken",
      "9969:               }",
      "9970:               if (num > 0.01)",
      "9971:                 FORC3 imgdata.color.ccm[l][c] = imgdata.color.ccm[l][c] / num;",
      "9972:             }",
      "9973:           }",
      "9974:         }",
      "9976:       end:;",
      "9977:       }",
      "9978:       else",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "13739:   UINT64 bitbuf=0;",
      "13740:   int vbits, col, i, c;",
      "13741:   ushort img[2][2064];",
      "13744:   FORC(2) {",
      "13745:     fseek (ifp, c ? off1:off0, SEEK_SET);",
      "",
      "[Removed Lines]",
      "13742:   double sum[]={0,0};",
      "",
      "[Added Lines]",
      "13797:   double sum[] = {0, 0};",
      "13798:   if(width > 2064) return 0.f; // too wide",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "13762: #ifdef LIBRAW_LIBRARY_BUILD",
      "13763: static void remove_trailing_spaces(char *string, size_t len)",
      "13764: {",
      "13770:   {",
      "13773:     else",
      "13774:       break;",
      "13775:   }",
      "",
      "[Removed Lines]",
      "13765:   if(len<1) return; // not needed, b/c sizeof of make/model is 64",
      "13766:   string[len-1]=0;",
      "13767:   if(len<3) return; // also not needed",
      "13768:   len = strnlen(string,len-1);",
      "13769:   for(int i=len-1; i>=0; i--)",
      "13771:     if(isspace(string[i]))",
      "13772:       string[i]=0;",
      "",
      "[Added Lines]",
      "13821:   if (len < 1)",
      "13822:     return; // not needed, b/c sizeof of make/model is 64",
      "13823:   string[len - 1] = 0;",
      "13824:   if (len < 3)",
      "13825:     return; // also not needed",
      "13826:   len = strnlen(string, len - 1);",
      "13827:   for (int i = len - 1; i >= 0; i--)",
      "13829:     if (isspace((unsigned char)string[i]))",
      "13830:       string[i] = 0;",
      "",
      "---------------"
    ],
    "internal/defines.h||internal/defines.h": [
      "File: internal/defines.h -> internal/defines.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "153:  3 G R G R G R 3 B G B G B G 3 R G R G R G 3 G B G B G B",
      "156: #define RAW(row,col) \\",
      "157:  raw_image[(row)*raw_width+(col)]",
      "158: #define BAYER(row,col) \\",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "156: #define RAWINDEX(row, col) ((row)*raw_width + (col))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a7adfe103e0f913f3897233ad07262f581980caa",
      "candidate_info": {
        "commit_hash": "a7adfe103e0f913f3897233ad07262f581980caa",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/a7adfe103e0f913f3897233ad07262f581980caa",
        "files": [
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp",
          "internal/defines.h"
        ],
        "message": "Secunia 81800#1: samsumg_load_raw\n\nSecunia 81800#2: find_green\n\nSecunia 81800#3: rollei_load_raw\n\nremove_trailing_spaces: isspace() does not works right with signed non-latin chars\n\nSecunia 81800#5/6: nikon_coolscan_load_raw\n\nSecunia 81800#4: rollei_load_raw",
        "before_after_code_files": [
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/defines.h||internal/defines.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/defines.h||internal/defines.h"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/defines.h||internal/defines.h"
          ]
        }
      },
      "candidate_diff": {
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "262:         3 G R G R G R 3 B G B G B G 3 R G R G R G 3 G B G B G B",
          "265: #define RAW(row, col) raw_image[(row)*raw_width + (col)]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "265: #define RAWINDEX(row, col) ((row)*raw_width + (col))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1772: void CLASS nikon_coolscan_load_raw()",
          "1773: {",
          "1775:   if (tiff_bps <= 8)",
          "1776:     gamma_curve(1.0 / imgdata.params.coolscan_nef_gamma, 0., 1, 255);",
          "1777:   else",
          "",
          "[Removed Lines]",
          "1774:   int bufsize = width * 3 * tiff_bps / 8;",
          "",
          "[Added Lines]",
          "1775:   if(!image)",
          "1776:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
          "1778:   int bypp = tiff_bps <= 8 ? 1 : 2;",
          "1779:   int bufsize = width * 3 * bypp;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2070: {",
          "2071:   uchar pixel[10];",
          "2072:   unsigned iten = 0, isix, i, buffer = 0, todo[16];",
          "2074:   isix = raw_width * raw_height * 5 / 8;",
          "2075:   while (fread(pixel, 1, 10, ifp) == 10)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2079: #ifdef LIBRAW_LIBRARY_BUILD",
          "2080:   if(raw_width > 32767 || raw_height > 32767)",
          "2081:     throw LIBRAW_EXCEPTION_IO_BADFILE;",
          "2082: #endif",
          "2083:   unsigned maxpixel = raw_width*(raw_height+7);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2089:       todo[i + 1] = buffer >> (14 - i) * 5;",
          "2090:     }",
          "2091:     for (i = 0; i < 16; i += 2)",
          "2093:   }",
          "2094:   maximum = 0x3ff;",
          "2095: }",
          "",
          "[Removed Lines]",
          "2092:       raw_image[todo[i]] = (todo[i + 1] & 0x3ff);",
          "",
          "[Added Lines]",
          "2103:       if(todo[i] < maxpixel)",
          "2104:         raw_image[todo[i]] = (todo[i + 1] & 0x3ff);",
          "2105:       else",
          "2106:         derror();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4464: void CLASS samsung_load_raw()",
          "4465: {",
          "4466:   int row, col, c, i, dir, op[4], len[4];",
          "4468:   order = 0x4949;",
          "4469:   for (row = 0; row < raw_height; row++)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4481: #ifdef LIBRAW_LIBRARY_BUILD",
          "4482:   if(raw_width> 32768 || raw_height > 32768)  // definitely too much for old samsung",
          "4483:     throw LIBRAW_EXCEPTION_IO_BADFILE;",
          "4484: #endif",
          "4485:   unsigned maxpixels = raw_width*(raw_height+7);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4493:       for (c = 0; c < 16; c += 2)",
          "4494:       {",
          "4495:         i = len[((c & 1) << 1) | (c >> 3)];",
          "4498:         if (c == 14)",
          "4499:           c = -1;",
          "4500:       }",
          "",
          "[Removed Lines]",
          "4496:         RAW(row, col + c) = ((signed)ph1_bits(i) << (32 - i) >> (32 - i)) +",
          "4497:                             (dir ? RAW(row + (~c | -2), col + c) : col ? RAW(row, col + (c | -2)) : 128);",
          "",
          "[Added Lines]",
          "4515:  unsigned idest = RAWINDEX(row, col + c);",
          "4516:  unsigned isrc = (dir ? RAWINDEX(row + (~c | -2), col + c) : col ? RAWINDEX(row, col + (c | -2)) : 0);",
          "4517:  if(idest < maxpixels && isrc < maxpixels) // less than zero is handled by unsigned conversion",
          "4518:    RAW(row, col + c) = ((signed)ph1_bits(i) << (32 - i) >> (32 - i)) +                    (dir ? RAW(row + (~c | -2), col + c) : col ? RAW(row, col + (c | -2)) : 128);",
          "4519:  else",
          "4520:      derror();",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "13084:         ushort l;",
          "13085:         float num;",
          "13088:         pos = strstr(mn_text, \"gain_r=\");",
          "13089:         if (pos)",
          "13090:           cam_mul[0] = atof(pos + 7);",
          "",
          "[Removed Lines]",
          "13087:         fgets(mn_text, len, ifp);",
          "",
          "[Added Lines]",
          "13110:  fgets(mn_text, MIN(len,511), ifp);",
          "13111:         mn_text[511] = 0;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "13096:         else",
          "13097:           cam_mul[0] = cam_mul[2] = 0.0f;",
          "13106:         {",
          "13109:           {",
          "13113:           }",
          "13116:         }",
          "13117:       }",
          "13118:       else",
          "13119: #endif",
          "13120:         parse_makernote(base, 0);",
          "13121:       break;",
          "",
          "[Removed Lines]",
          "13099:         pos = strstr(mn_text, \"ccm=\") + 4;",
          "13100:         l = strstr(pos, \" \") - pos;",
          "13101:         memcpy(ccms, pos, l);",
          "13102:         ccms[l] = '\\0';",
          "13104:         pos = strtok(ccms, \",\");",
          "13105:         for (l = 0; l < 4; l++)",
          "13107:           num = 0.0;",
          "13108:           for (c = 0; c < 3; c++)",
          "13110:             imgdata.color.ccm[l][c] = (float)atoi(pos);",
          "13111:             num += imgdata.color.ccm[l][c];",
          "13112:             pos = strtok(NULL, \",\");",
          "13114:           if (num > 0.01)",
          "13115:             FORC3 imgdata.color.ccm[l][c] = imgdata.color.ccm[l][c] / num;",
          "",
          "[Added Lines]",
          "13124:         pos = strstr(mn_text, \"ccm=\");",
          "13125:         if(pos)",
          "13127:          pos +=4;",
          "13128:          char *pos2 = strstr(pos, \" \");",
          "13129:          if(pos2)",
          "13130:          {",
          "13131:            l = pos2 - pos;",
          "13132:            memcpy(ccms, pos, l);",
          "13133:            ccms[l] = '\\0';",
          "13134: #if defined WIN32 || defined(__MINGW32__)",
          "13136:           pos = strtok(ccms, \",\");",
          "13137: #else",
          "13138:           char *last=0;",
          "13139:           pos = strtok_r(ccms, \",\",&last);",
          "13140: #endif",
          "13141:           if(pos)",
          "13143:             for (l = 0; l < 4; l++)",
          "13144:             {",
          "13145:               num = 0.0;",
          "13146:               for (c = 0; c < 3; c++)",
          "13147:               {",
          "13148:                 imgdata.color.ccm[l][c] = (float)atoi(pos);",
          "13149:                 num += imgdata.color.ccm[l][c];",
          "13150: #if defined WIN32 || defined(__MINGW32__)",
          "13151:                 pos = strtok(NULL, \",\");",
          "13152: #else",
          "13153:                 pos = strtok_r(NULL, \",\",&last);",
          "13154: #endif",
          "13155:                 if(!pos) goto end; // broken",
          "13156:               }",
          "13157:               if (num > 0.01)",
          "13158:                 FORC3 imgdata.color.ccm[l][c] = imgdata.color.ccm[l][c] / num;",
          "13159:             }",
          "13162:        }",
          "13163:       end:;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "18648:   int vbits, col, i, c;",
          "18649:   ushort img[2][2064];",
          "18650:   double sum[] = {0, 0};",
          "18652:   FORC(2)",
          "18653:   {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18699:   if(width > 2064) return 0.f; // too wide",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "18682:   len = strnlen(string, len - 1);",
          "18683:   for (int i = len - 1; i >= 0; i--)",
          "18684:   {",
          "18686:       string[i] = 0;",
          "18687:     else",
          "18688:       break;",
          "",
          "[Removed Lines]",
          "18685:     if (isspace(string[i]))",
          "",
          "[Added Lines]",
          "18734:     if (isspace((unsigned char)string[i]))",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1480: void CLASS nikon_coolscan_load_raw()",
          "1481: {",
          "1483:   if (tiff_bps <= 8)",
          "1484:     gamma_curve(1.0 / imgdata.params.coolscan_nef_gamma, 0., 1, 255);",
          "1485:   else",
          "",
          "[Removed Lines]",
          "1482:   int bufsize = width * 3 * tiff_bps / 8;",
          "",
          "[Added Lines]",
          "1482:   if(!image)",
          "1483:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
          "1485:   int bypp = tiff_bps <= 8 ? 1 : 2;",
          "1486:   int bufsize = width * 3 * bypp;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1773: {",
          "1774:   uchar pixel[10];",
          "1775:   unsigned iten = 0, isix, i, buffer = 0, todo[16];",
          "1777:   isix = raw_width * raw_height * 5 / 8;",
          "1778:   while (fread(pixel, 1, 10, ifp) == 10)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1781: #ifdef LIBRAW_LIBRARY_BUILD",
          "1782:   if(raw_width > 32767 || raw_height > 32767)",
          "1783:     throw LIBRAW_EXCEPTION_IO_BADFILE;",
          "1784: #endif",
          "1785:   unsigned maxpixel = raw_width*(raw_height+7);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1792:       todo[i + 1] = buffer >> (14 - i) * 5;",
          "1793:     }",
          "1794:     for (i = 0; i < 16; i += 2)",
          "1796:   }",
          "1797:   maximum = 0x3ff;",
          "1798: }",
          "",
          "[Removed Lines]",
          "1795:       raw_image[todo[i]] = (todo[i + 1] & 0x3ff);",
          "",
          "[Added Lines]",
          "1805:       if(todo[i] < maxpixel)",
          "1806:         raw_image[todo[i]] = (todo[i + 1] & 0x3ff);",
          "1807:       else",
          "1808:         derror();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4167: void CLASS samsung_load_raw()",
          "4168: {",
          "4169:   int row, col, c, i, dir, op[4], len[4];",
          "4171:   order = 0x4949;",
          "4172:   for (row = 0; row < raw_height; row++)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4183: #ifdef LIBRAW_LIBRARY_BUILD",
          "4184:   if(raw_width> 32768 || raw_height > 32768)  // definitely too much for old samsung",
          "4185:     throw LIBRAW_EXCEPTION_IO_BADFILE;",
          "4186: #endif",
          "4187:   unsigned maxpixels = raw_width*(raw_height+7);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4196:       for (c = 0; c < 16; c += 2)",
          "4197:       {",
          "4198:         i = len[((c & 1) << 1) | (c >> 3)];",
          "4201:         if (c == 14)",
          "4202:           c = -1;",
          "4203:       }",
          "",
          "[Removed Lines]",
          "4199:         RAW(row, col + c) = ((signed)ph1_bits(i) << (32 - i) >> (32 - i)) +",
          "4200:                             (dir ? RAW(row + (~c | -2), col + c) : col ? RAW(row, col + (c | -2)) : 128);",
          "",
          "[Added Lines]",
          "4217:  unsigned idest = RAWINDEX(row, col + c);",
          "4218:  unsigned isrc = (dir ? RAWINDEX(row + (~c | -2), col + c) : col ? RAWINDEX(row, col + (c | -2)) : 0);",
          "4219:  if(idest < maxpixels && isrc < maxpixels) // less than zero is handled by unsigned conversion",
          "4220:    RAW(row, col + c) = ((signed)ph1_bits(i) << (32 - i) >> (32 - i)) +                    (dir ? RAW(row + (~c | -2), col + c) : col ? RAW(row, col + (c | -2)) : 128);",
          "4221:  else",
          "4222:      derror();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "11753:         ushort l;",
          "11754:         float num;",
          "11757:         pos = strstr(mn_text, \"gain_r=\");",
          "11758:         if (pos)",
          "11759:           cam_mul[0] = atof(pos + 7);",
          "",
          "[Removed Lines]",
          "11756:         fgets(mn_text, len, ifp);",
          "",
          "[Added Lines]",
          "11778:  fgets(mn_text, MIN(len,511), ifp);",
          "11779:         mn_text[511] = 0;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "11765:         else",
          "11766:           cam_mul[0] = cam_mul[2] = 0.0f;",
          "11775:         {",
          "11778:           {",
          "11782:           }",
          "11785:         }",
          "11786:       }",
          "11787:       else",
          "11788: #endif",
          "11789:         parse_makernote(base, 0);",
          "11790:       break;",
          "",
          "[Removed Lines]",
          "11768:         pos = strstr(mn_text, \"ccm=\") + 4;",
          "11769:         l = strstr(pos, \" \") - pos;",
          "11770:         memcpy(ccms, pos, l);",
          "11771:         ccms[l] = '\\0';",
          "11773:         pos = strtok(ccms, \",\");",
          "11774:         for (l = 0; l < 4; l++)",
          "11776:           num = 0.0;",
          "11777:           for (c = 0; c < 3; c++)",
          "11779:             imgdata.color.ccm[l][c] = (float)atoi(pos);",
          "11780:             num += imgdata.color.ccm[l][c];",
          "11781:             pos = strtok(NULL, \",\");",
          "11783:           if (num > 0.01)",
          "11784:             FORC3 imgdata.color.ccm[l][c] = imgdata.color.ccm[l][c] / num;",
          "",
          "[Added Lines]",
          "11792:         pos = strstr(mn_text, \"ccm=\");",
          "11793:         if(pos)",
          "11795:          pos +=4;",
          "11796:          char *pos2 = strstr(pos, \" \");",
          "11797:          if(pos2)",
          "11798:          {",
          "11799:            l = pos2 - pos;",
          "11800:            memcpy(ccms, pos, l);",
          "11801:            ccms[l] = '\\0';",
          "11802: #if defined WIN32 || defined(__MINGW32__)",
          "11804:           pos = strtok(ccms, \",\");",
          "11805: #else",
          "11806:           char *last=0;",
          "11807:           pos = strtok_r(ccms, \",\",&last);",
          "11808: #endif",
          "11809:           if(pos)",
          "11811:             for (l = 0; l < 4; l++)",
          "11812:             {",
          "11813:               num = 0.0;",
          "11814:               for (c = 0; c < 3; c++)",
          "11815:               {",
          "11816:                 imgdata.color.ccm[l][c] = (float)atoi(pos);",
          "11817:                 num += imgdata.color.ccm[l][c];",
          "11818: #if defined WIN32 || defined(__MINGW32__)",
          "11819:                 pos = strtok(NULL, \",\");",
          "11820: #else",
          "11821:                 pos = strtok_r(NULL, \",\",&last);",
          "11822: #endif",
          "11823:                 if(!pos) goto end; // broken",
          "11824:               }",
          "11825:               if (num > 0.01)",
          "11826:                 FORC3 imgdata.color.ccm[l][c] = imgdata.color.ccm[l][c] / num;",
          "11827:             }",
          "11830:        }",
          "11831:       end:;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "17151:   int vbits, col, i, c;",
          "17152:   ushort img[2][2064];",
          "17153:   double sum[] = {0, 0};",
          "17155:   FORC(2)",
          "17156:   {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17201:   if(width > 2064) return 0.f; // too wide",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "17185:   len = strnlen(string, len - 1);",
          "17186:   for (int i = len - 1; i >= 0; i--)",
          "17187:   {",
          "17189:       string[i] = 0;",
          "17190:     else",
          "17191:       break;",
          "",
          "[Removed Lines]",
          "17188:     if (isspace(string[i]))",
          "",
          "[Added Lines]",
          "17236:     if (isspace((unsigned char)string[i]))",
          "",
          "---------------"
        ],
        "internal/defines.h||internal/defines.h": [
          "File: internal/defines.h -> internal/defines.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "161:         3 G R G R G R 3 B G B G B G 3 R G R G R G 3 G B G B G B",
          "164: #define RAW(row, col) raw_image[(row)*raw_width + (col)]",
          "165: #define BAYER(row, col) image[((row) >> shrink) * iwidth + ((col) >> shrink)][FC(row, col)]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "164: #define RAWINDEX(row, col) ((row)*raw_width + (col))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ce4a43cdb3352a3bbeeefcde452a4ff76921af54",
      "candidate_info": {
        "commit_hash": "ce4a43cdb3352a3bbeeefcde452a4ff76921af54",
        "repo": "LibRaw/LibRaw",
        "commit_url": "https://github.com/LibRaw/LibRaw/commit/ce4a43cdb3352a3bbeeefcde452a4ff76921af54",
        "files": [
          "dcraw/dcraw.c",
          "internal/dcraw_common.cpp",
          "internal/defines.h"
        ],
        "message": "Secunia 81800#1: samsumg_load_raw\n\nSecunia 81800#2: find_green\n\nSecunia 81800#3: rollei_load_raw\n\nremove_trailing_spaces: isspace() does not works right with signed non-latin chars\n\nSecunia 81800#5/6: nikon_coolscan_load_raw\n\nSecunia 81800#4: rollei_load_raw",
        "before_after_code_files": [
          "dcraw/dcraw.c||dcraw/dcraw.c",
          "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
          "internal/defines.h||internal/defines.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/defines.h||internal/defines.h"
          ],
          "candidate": [
            "dcraw/dcraw.c||dcraw/dcraw.c",
            "internal/dcraw_common.cpp||internal/dcraw_common.cpp",
            "internal/defines.h||internal/defines.h"
          ]
        }
      },
      "candidate_diff": {
        "dcraw/dcraw.c||dcraw/dcraw.c": [
          "File: dcraw/dcraw.c -> dcraw/dcraw.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "262:         3 G R G R G R 3 B G B G B G 3 R G R G R G 3 G B G B G B",
          "265: #define RAW(row, col) raw_image[(row)*raw_width + (col)]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "265: #define RAWINDEX(row, col) ((row)*raw_width + (col))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1772: void CLASS nikon_coolscan_load_raw()",
          "1773: {",
          "1775:   if (tiff_bps <= 8)",
          "1776:     gamma_curve(1.0 / imgdata.params.coolscan_nef_gamma, 0., 1, 255);",
          "1777:   else",
          "",
          "[Removed Lines]",
          "1774:   int bufsize = width * 3 * tiff_bps / 8;",
          "",
          "[Added Lines]",
          "1775:   if(!image)",
          "1776:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
          "1778:   int bypp = tiff_bps <= 8 ? 1 : 2;",
          "1779:   int bufsize = width * 3 * bypp;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2070: {",
          "2071:   uchar pixel[10];",
          "2072:   unsigned iten = 0, isix, i, buffer = 0, todo[16];",
          "2074:   isix = raw_width * raw_height * 5 / 8;",
          "2075:   while (fread(pixel, 1, 10, ifp) == 10)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2079: #ifdef LIBRAW_LIBRARY_BUILD",
          "2080:   if(raw_width > 32767 || raw_height > 32767)",
          "2081:     throw LIBRAW_EXCEPTION_IO_BADFILE;",
          "2082: #endif",
          "2083:   unsigned maxpixel = raw_width*(raw_height+7);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2089:       todo[i + 1] = buffer >> (14 - i) * 5;",
          "2090:     }",
          "2091:     for (i = 0; i < 16; i += 2)",
          "2093:   }",
          "2094:   maximum = 0x3ff;",
          "2095: }",
          "",
          "[Removed Lines]",
          "2092:       raw_image[todo[i]] = (todo[i + 1] & 0x3ff);",
          "",
          "[Added Lines]",
          "2103:       if(todo[i] < maxpixel)",
          "2104:         raw_image[todo[i]] = (todo[i + 1] & 0x3ff);",
          "2105:       else",
          "2106:         derror();",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4464: void CLASS samsung_load_raw()",
          "4465: {",
          "4466:   int row, col, c, i, dir, op[4], len[4];",
          "4468:   order = 0x4949;",
          "4469:   for (row = 0; row < raw_height; row++)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4481: #ifdef LIBRAW_LIBRARY_BUILD",
          "4482:   if(raw_width> 32768 || raw_height > 32768)  // definitely too much for old samsung",
          "4483:     throw LIBRAW_EXCEPTION_IO_BADFILE;",
          "4484: #endif",
          "4485:   unsigned maxpixels = raw_width*(raw_height+7);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4493:       for (c = 0; c < 16; c += 2)",
          "4494:       {",
          "4495:         i = len[((c & 1) << 1) | (c >> 3)];",
          "4498:         if (c == 14)",
          "4499:           c = -1;",
          "4500:       }",
          "",
          "[Removed Lines]",
          "4496:         RAW(row, col + c) = ((signed)ph1_bits(i) << (32 - i) >> (32 - i)) +",
          "4497:                             (dir ? RAW(row + (~c | -2), col + c) : col ? RAW(row, col + (c | -2)) : 128);",
          "",
          "[Added Lines]",
          "4515:  unsigned idest = RAWINDEX(row, col + c);",
          "4516:  unsigned isrc = (dir ? RAWINDEX(row + (~c | -2), col + c) : col ? RAWINDEX(row, col + (c | -2)) : 0);",
          "4517:  if(idest < maxpixels && isrc < maxpixels) // less than zero is handled by unsigned conversion",
          "4518:    RAW(row, col + c) = ((signed)ph1_bits(i) << (32 - i) >> (32 - i)) +                    (dir ? RAW(row + (~c | -2), col + c) : col ? RAW(row, col + (c | -2)) : 128);",
          "4519:  else",
          "4520:      derror();",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "13102:         ushort l;",
          "13103:         float num;",
          "13106:         pos = strstr(mn_text, \"gain_r=\");",
          "13107:         if (pos)",
          "13108:           cam_mul[0] = atof(pos + 7);",
          "",
          "[Removed Lines]",
          "13105:         fgets(mn_text, len, ifp);",
          "",
          "[Added Lines]",
          "13128:  fgets(mn_text, MIN(len,511), ifp);",
          "13129:         mn_text[511] = 0;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "13114:         else",
          "13115:           cam_mul[0] = cam_mul[2] = 0.0f;",
          "13124:         {",
          "13127:           {",
          "13131:           }",
          "13134:         }",
          "13135:       }",
          "13136:       else",
          "13137: #endif",
          "13138:         parse_makernote(base, 0);",
          "13139:       break;",
          "",
          "[Removed Lines]",
          "13117:         pos = strstr(mn_text, \"ccm=\") + 4;",
          "13118:         l = strstr(pos, \" \") - pos;",
          "13119:         memcpy(ccms, pos, l);",
          "13120:         ccms[l] = '\\0';",
          "13122:         pos = strtok(ccms, \",\");",
          "13123:         for (l = 0; l < 4; l++)",
          "13125:           num = 0.0;",
          "13126:           for (c = 0; c < 3; c++)",
          "13128:             imgdata.color.ccm[l][c] = (float)atoi(pos);",
          "13129:             num += imgdata.color.ccm[l][c];",
          "13130:             pos = strtok(NULL, \",\");",
          "13132:           if (num > 0.01)",
          "13133:             FORC3 imgdata.color.ccm[l][c] = imgdata.color.ccm[l][c] / num;",
          "",
          "[Added Lines]",
          "13142:         pos = strstr(mn_text, \"ccm=\");",
          "13143:         if(pos)",
          "13145:          pos +=4;",
          "13146:          char *pos2 = strstr(pos, \" \");",
          "13147:          if(pos2)",
          "13148:          {",
          "13149:            l = pos2 - pos;",
          "13150:            memcpy(ccms, pos, l);",
          "13151:            ccms[l] = '\\0';",
          "13152: #if defined WIN32 || defined(__MINGW32__)",
          "13154:           pos = strtok(ccms, \",\");",
          "13155: #else",
          "13156:           char *last=0;",
          "13157:           pos = strtok_r(ccms, \",\",&last);",
          "13158: #endif",
          "13159:           if(pos)",
          "13161:             for (l = 0; l < 4; l++)",
          "13162:             {",
          "13163:               num = 0.0;",
          "13164:               for (c = 0; c < 3; c++)",
          "13165:               {",
          "13166:                 imgdata.color.ccm[l][c] = (float)atoi(pos);",
          "13167:                 num += imgdata.color.ccm[l][c];",
          "13168: #if defined WIN32 || defined(__MINGW32__)",
          "13169:                 pos = strtok(NULL, \",\");",
          "13170: #else",
          "13171:                 pos = strtok_r(NULL, \",\",&last);",
          "13172: #endif",
          "13173:                 if(!pos) goto end; // broken",
          "13174:               }",
          "13175:               if (num > 0.01)",
          "13176:                 FORC3 imgdata.color.ccm[l][c] = imgdata.color.ccm[l][c] / num;",
          "13177:             }",
          "13180:        }",
          "13181:       end:;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "18704:   int vbits, col, i, c;",
          "18705:   ushort img[2][2064];",
          "18706:   double sum[] = {0, 0};",
          "18708:   FORC(2)",
          "18709:   {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18755:   if(width > 2064) return 0.f; // too wide",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "18738:   len = strnlen(string, len - 1);",
          "18739:   for (int i = len - 1; i >= 0; i--)",
          "18740:   {",
          "18742:       string[i] = 0;",
          "18743:     else",
          "18744:       break;",
          "",
          "[Removed Lines]",
          "18741:     if (isspace(string[i]))",
          "",
          "[Added Lines]",
          "18790:     if (isspace((unsigned char)string[i]))",
          "",
          "---------------"
        ],
        "internal/dcraw_common.cpp||internal/dcraw_common.cpp": [
          "File: internal/dcraw_common.cpp -> internal/dcraw_common.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1480: void CLASS nikon_coolscan_load_raw()",
          "1481: {",
          "1483:   if (tiff_bps <= 8)",
          "1484:     gamma_curve(1.0 / imgdata.params.coolscan_nef_gamma, 0., 1, 255);",
          "1485:   else",
          "",
          "[Removed Lines]",
          "1482:   int bufsize = width * 3 * tiff_bps / 8;",
          "",
          "[Added Lines]",
          "1482:   if(!image)",
          "1483:     throw LIBRAW_EXCEPTION_IO_CORRUPT;",
          "1485:   int bypp = tiff_bps <= 8 ? 1 : 2;",
          "1486:   int bufsize = width * 3 * bypp;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1773: {",
          "1774:   uchar pixel[10];",
          "1775:   unsigned iten = 0, isix, i, buffer = 0, todo[16];",
          "1777:   isix = raw_width * raw_height * 5 / 8;",
          "1778:   while (fread(pixel, 1, 10, ifp) == 10)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1781: #ifdef LIBRAW_LIBRARY_BUILD",
          "1782:   if(raw_width > 32767 || raw_height > 32767)",
          "1783:     throw LIBRAW_EXCEPTION_IO_BADFILE;",
          "1784: #endif",
          "1785:   unsigned maxpixel = raw_width*(raw_height+7);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1792:       todo[i + 1] = buffer >> (14 - i) * 5;",
          "1793:     }",
          "1794:     for (i = 0; i < 16; i += 2)",
          "1796:   }",
          "1797:   maximum = 0x3ff;",
          "1798: }",
          "",
          "[Removed Lines]",
          "1795:       raw_image[todo[i]] = (todo[i + 1] & 0x3ff);",
          "",
          "[Added Lines]",
          "1805:       if(todo[i] < maxpixel)",
          "1806:         raw_image[todo[i]] = (todo[i + 1] & 0x3ff);",
          "1807:       else",
          "1808:         derror();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4167: void CLASS samsung_load_raw()",
          "4168: {",
          "4169:   int row, col, c, i, dir, op[4], len[4];",
          "4171:   order = 0x4949;",
          "4172:   for (row = 0; row < raw_height; row++)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4183: #ifdef LIBRAW_LIBRARY_BUILD",
          "4184:   if(raw_width> 32768 || raw_height > 32768)  // definitely too much for old samsung",
          "4185:     throw LIBRAW_EXCEPTION_IO_BADFILE;",
          "4186: #endif",
          "4187:   unsigned maxpixels = raw_width*(raw_height+7);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4196:       for (c = 0; c < 16; c += 2)",
          "4197:       {",
          "4198:         i = len[((c & 1) << 1) | (c >> 3)];",
          "4201:         if (c == 14)",
          "4202:           c = -1;",
          "4203:       }",
          "",
          "[Removed Lines]",
          "4199:         RAW(row, col + c) = ((signed)ph1_bits(i) << (32 - i) >> (32 - i)) +",
          "4200:                             (dir ? RAW(row + (~c | -2), col + c) : col ? RAW(row, col + (c | -2)) : 128);",
          "",
          "[Added Lines]",
          "4217:  unsigned idest = RAWINDEX(row, col + c);",
          "4218:  unsigned isrc = (dir ? RAWINDEX(row + (~c | -2), col + c) : col ? RAWINDEX(row, col + (c | -2)) : 0);",
          "4219:  if(idest < maxpixels && isrc < maxpixels) // less than zero is handled by unsigned conversion",
          "4220:    RAW(row, col + c) = ((signed)ph1_bits(i) << (32 - i) >> (32 - i)) +                    (dir ? RAW(row + (~c | -2), col + c) : col ? RAW(row, col + (c | -2)) : 128);",
          "4221:  else",
          "4222:      derror();",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "11771:         ushort l;",
          "11772:         float num;",
          "11775:         pos = strstr(mn_text, \"gain_r=\");",
          "11776:         if (pos)",
          "11777:           cam_mul[0] = atof(pos + 7);",
          "",
          "[Removed Lines]",
          "11774:         fgets(mn_text, len, ifp);",
          "",
          "[Added Lines]",
          "11796:  fgets(mn_text, MIN(len,511), ifp);",
          "11797:         mn_text[511] = 0;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "11783:         else",
          "11784:           cam_mul[0] = cam_mul[2] = 0.0f;",
          "11793:         {",
          "11796:           {",
          "11800:           }",
          "11803:         }",
          "11804:       }",
          "11805:       else",
          "11806: #endif",
          "11807:         parse_makernote(base, 0);",
          "11808:       break;",
          "",
          "[Removed Lines]",
          "11786:         pos = strstr(mn_text, \"ccm=\") + 4;",
          "11787:         l = strstr(pos, \" \") - pos;",
          "11788:         memcpy(ccms, pos, l);",
          "11789:         ccms[l] = '\\0';",
          "11791:         pos = strtok(ccms, \",\");",
          "11792:         for (l = 0; l < 4; l++)",
          "11794:           num = 0.0;",
          "11795:           for (c = 0; c < 3; c++)",
          "11797:             imgdata.color.ccm[l][c] = (float)atoi(pos);",
          "11798:             num += imgdata.color.ccm[l][c];",
          "11799:             pos = strtok(NULL, \",\");",
          "11801:           if (num > 0.01)",
          "11802:             FORC3 imgdata.color.ccm[l][c] = imgdata.color.ccm[l][c] / num;",
          "",
          "[Added Lines]",
          "11810:         pos = strstr(mn_text, \"ccm=\");",
          "11811:         if(pos)",
          "11813:          pos +=4;",
          "11814:          char *pos2 = strstr(pos, \" \");",
          "11815:          if(pos2)",
          "11816:          {",
          "11817:            l = pos2 - pos;",
          "11818:            memcpy(ccms, pos, l);",
          "11819:            ccms[l] = '\\0';",
          "11820: #if defined WIN32 || defined(__MINGW32__)",
          "11822:           pos = strtok(ccms, \",\");",
          "11823: #else",
          "11824:           char *last=0;",
          "11825:           pos = strtok_r(ccms, \",\",&last);",
          "11826: #endif",
          "11827:           if(pos)",
          "11829:             for (l = 0; l < 4; l++)",
          "11830:             {",
          "11831:               num = 0.0;",
          "11832:               for (c = 0; c < 3; c++)",
          "11833:               {",
          "11834:                 imgdata.color.ccm[l][c] = (float)atoi(pos);",
          "11835:                 num += imgdata.color.ccm[l][c];",
          "11836: #if defined WIN32 || defined(__MINGW32__)",
          "11837:                 pos = strtok(NULL, \",\");",
          "11838: #else",
          "11839:                 pos = strtok_r(NULL, \",\",&last);",
          "11840: #endif",
          "11841:                 if(!pos) goto end; // broken",
          "11842:               }",
          "11843:               if (num > 0.01)",
          "11844:                 FORC3 imgdata.color.ccm[l][c] = imgdata.color.ccm[l][c] / num;",
          "11845:             }",
          "11848:        }",
          "11849:       end:;",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "17207:   int vbits, col, i, c;",
          "17208:   ushort img[2][2064];",
          "17209:   double sum[] = {0, 0};",
          "17211:   FORC(2)",
          "17212:   {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17257:   if(width > 2064) return 0.f; // too wide",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "17241:   len = strnlen(string, len - 1);",
          "17242:   for (int i = len - 1; i >= 0; i--)",
          "17243:   {",
          "17245:       string[i] = 0;",
          "17246:     else",
          "17247:       break;",
          "",
          "[Removed Lines]",
          "17244:     if (isspace(string[i]))",
          "",
          "[Added Lines]",
          "17292:     if (isspace((unsigned char)string[i]))",
          "",
          "---------------"
        ],
        "internal/defines.h||internal/defines.h": [
          "File: internal/defines.h -> internal/defines.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "161:         3 G R G R G R 3 B G B G B G 3 R G R G R G 3 G B G B G B",
          "164: #define RAW(row, col) raw_image[(row)*raw_width + (col)]",
          "165: #define BAYER(row, col) image[((row) >> shrink) * iwidth + ((col) >> shrink)][FC(row, col)]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "164: #define RAWINDEX(row, col) ((row)*raw_width + (col))",
          "",
          "---------------"
        ]
      }
    }
  ]
}