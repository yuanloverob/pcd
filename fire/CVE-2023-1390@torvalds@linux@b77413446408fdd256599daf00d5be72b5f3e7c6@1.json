{
  "cve_id": "CVE-2023-1390",
  "cve_desc": "A remote denial of service vulnerability was found in the Linux kernel\u2019s TIPC kernel module. The while loop in tipc_link_xmit() hits an unknown state while attempting to parse SKBs, which are not in the queue. Sending two small UDP packets to a system with a UDP bearer results in the CPU utilization for the system to instantly spike to 100%, causing a denial of service condition.",
  "repo": "torvalds/linux",
  "patch_hash": "b77413446408fdd256599daf00d5be72b5f3e7c6",
  "patch_info": {
    "commit_hash": "b77413446408fdd256599daf00d5be72b5f3e7c6",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/b77413446408fdd256599daf00d5be72b5f3e7c6",
    "files": [
      "net/tipc/link.c"
    ],
    "message": "tipc: fix NULL deref in tipc_link_xmit()\n\nThe buffer list can have zero skb as following path:\ntipc_named_node_up()->tipc_node_xmit()->tipc_link_xmit(), so\nwe need to check the list before casting an &sk_buff.\n\nFault report:\n [] tipc: Bulk publication failure\n [] general protection fault, probably for non-canonical [#1] PREEMPT [...]\n [] KASAN: null-ptr-deref in range [0x00000000000000c8-0x00000000000000cf]\n [] CPU: 0 PID: 0 Comm: swapper/0 Kdump: loaded Not tainted 5.10.0-rc4+ #2\n [] Hardware name: Bochs ..., BIOS Bochs 01/01/2011\n [] RIP: 0010:tipc_link_xmit+0xc1/0x2180\n [] Code: 24 b8 00 00 00 00 4d 39 ec 4c 0f 44 e8 e8 d7 0a 10 f9 48 [...]\n [] RSP: 0018:ffffc90000006ea0 EFLAGS: 00010202\n [] RAX: dffffc0000000000 RBX: ffff8880224da000 RCX: 1ffff11003d3cc0d\n [] RDX: 0000000000000019 RSI: ffffffff886007b9 RDI: 00000000000000c8\n [] RBP: ffffc90000007018 R08: 0000000000000001 R09: fffff52000000ded\n [] R10: 0000000000000003 R11: fffff52000000dec R12: ffffc90000007148\n [] R13: 0000000000000000 R14: 0000000000000000 R15: ffffc90000007018\n [] FS:  0000000000000000(0000) GS:ffff888037400000(0000) knlGS:000[...]\n [] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\n [] CR2: 00007fffd2db5000 CR3: 000000002b08f000 CR4: 00000000000006f0\n\nFixes: af9b028e270fd (\"tipc: make media xmit call outside node spinlock context\")\nAcked-by: Jon Maloy <jmaloy@redhat.com>\nSigned-off-by: Hoang Le <hoang.h.le@dektech.com.au>\nLink: https://lore.kernel.org/r/20210108071337.3598-1-hoang.h.le@dektech.com.au\nSigned-off-by: Jakub Kicinski <kuba@kernel.org>",
    "before_after_code_files": [
      "net/tipc/link.c||net/tipc/link.c"
    ]
  },
  "patch_diff": {
    "net/tipc/link.c||net/tipc/link.c": [
      "File: net/tipc/link.c -> net/tipc/link.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1030: int tipc_link_xmit(struct tipc_link *l, struct sk_buff_head *list,",
      "1031:      struct sk_buff_head *xmitq)",
      "1032: {",
      "1034:  struct sk_buff_head *backlogq = &l->backlogq;",
      "1035:  struct sk_buff_head *transmq = &l->transmq;",
      "1036:  struct sk_buff *skb, *_skb;",
      "",
      "[Removed Lines]",
      "1033:  struct tipc_msg *hdr = buf_msg(skb_peek(list));",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1038:  u16 ack = l->rcv_nxt - 1;",
      "1039:  u16 seqno = l->snd_nxt;",
      "1040:  int pkt_cnt = skb_queue_len(list);",
      "1042:  unsigned int mss = tipc_link_mss(l);",
      "1043:  unsigned int cwin = l->window;",
      "1044:  unsigned int mtu = l->mtu;",
      "1045:  bool new_bundle;",
      "1046:  int rc = 0;",
      "1048:  if (unlikely(msg_size(hdr) > mtu)) {",
      "1049:   pr_warn(\"Too large msg, purging xmit list %d %d %d %d %d!\\n\",",
      "1050:    skb_queue_len(list), msg_user(hdr),",
      "",
      "[Removed Lines]",
      "1041:  int imp = msg_importance(hdr);",
      "",
      "[Added Lines]",
      "1043:  struct tipc_msg *hdr;",
      "1046:  int imp;",
      "1048:  if (pkt_cnt <= 0)",
      "1049:   return 0;",
      "1051:  hdr = buf_msg(skb_peek(list));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1053:   return -EMSGSIZE;",
      "1054:  }",
      "1057:  if (unlikely(l->backlog[imp].len >= l->backlog[imp].limit)) {",
      "1058:   if (imp == TIPC_SYSTEM_IMPORTANCE) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1060:  imp = msg_importance(hdr);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b4411616c26f26c4017b8fa4d3538b1a02028733",
      "candidate_info": {
        "commit_hash": "b4411616c26f26c4017b8fa4d3538b1a02028733",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/b4411616c26f26c4017b8fa4d3538b1a02028733",
        "files": [
          "fs/io_uring.c"
        ],
        "message": "io_uring: fix null-deref in io_disable_sqo_submit\n\ngeneral protection fault, probably for non-canonical address\n\t0xdffffc0000000022: 0000 [#1] KASAN: null-ptr-deref\n\tin range [0x0000000000000110-0x0000000000000117]\nRIP: 0010:io_ring_set_wakeup_flag fs/io_uring.c:6929 [inline]\nRIP: 0010:io_disable_sqo_submit+0xdb/0x130 fs/io_uring.c:8891\nCall Trace:\n io_uring_create fs/io_uring.c:9711 [inline]\n io_uring_setup+0x12b1/0x38e0 fs/io_uring.c:9739\n do_syscall_64+0x2d/0x70 arch/x86/entry/common.c:46\n entry_SYSCALL_64_after_hwframe+0x44/0xa9\n\nio_disable_sqo_submit() might be called before user rings were\nallocated, don't do io_ring_set_wakeup_flag() in those cases.\n\nReported-by: syzbot+ab412638aeb652ded540@syzkaller.appspotmail.com\nFixes: d9d05217cb69 (\"io_uring: stop SQPOLL submit on creator's death\")\nSigned-off-by: Pavel Begunkov <asml.silence@gmail.com>\nSigned-off-by: Jens Axboe <axboe@kernel.dk>",
        "before_after_code_files": [
          "fs/io_uring.c||fs/io_uring.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fs/io_uring.c||fs/io_uring.c": [
          "File: fs/io_uring.c -> fs/io_uring.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "8895:  mutex_unlock(&ctx->uring_lock);",
          "8899: }",
          "",
          "[Removed Lines]",
          "8898:  io_ring_set_wakeup_flag(ctx);",
          "",
          "[Added Lines]",
          "8898:  if (ctx->rings)",
          "8899:   io_ring_set_wakeup_flag(ctx);",
          "",
          "---------------"
        ]
      }
    }
  ]
}