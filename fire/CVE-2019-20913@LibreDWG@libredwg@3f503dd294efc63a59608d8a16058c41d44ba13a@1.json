{
  "cve_id": "CVE-2019-20913",
  "cve_desc": "An issue was discovered in GNU LibreDWG through 0.9.3. Crafted input will lead to a heap-based buffer over-read in dwg_encode_entity in common_entity_data.spec.",
  "repo": "LibreDWG/libredwg",
  "patch_hash": "3f503dd294efc63a59608d8a16058c41d44ba13a",
  "patch_info": {
    "commit_hash": "3f503dd294efc63a59608d8a16058c41d44ba13a",
    "repo": "LibreDWG/libredwg",
    "commit_url": "https://github.com/LibreDWG/libredwg/commit/3f503dd294efc63a59608d8a16058c41d44ba13a",
    "files": [
      "src/classes.inc",
      "src/dec_macros.h"
    ],
    "message": "add DEBUGGING_CLASS_CPP\n\nand use it for TABLECONTENT.\nThis is more stable than CLASS_DXF in cases when\nTABLE is mixed up with TABLECONTENT. See e.g.\nGH #178, where it fixes the heap_overflow2 case.",
    "before_after_code_files": [
      "src/classes.inc||src/classes.inc",
      "src/dec_macros.h||src/dec_macros.h"
    ]
  },
  "patch_diff": {
    "src/classes.inc||src/classes.inc": [
      "File: src/classes.inc -> src/classes.inc",
      "--- Hunk 1 ---",
      "[Context before]",
      "53: # define DEBUGGING_DXF(action, name)                 ALLOW_DXF(action, name)",
      "54: # define DEBUGGING_CLASS(action, name)               UNSTABLE_CLASS(action, name)",
      "55: # define DEBUGGING_CLASS_DXF(action, name, _dxfname) UNSTABLE_CLASS_DXF(action, name, _dxfname)",
      "56: #else",
      "57: # define DEBUGGING_DXF(action, name)                 DISALLOW_DXF(action, name)",
      "58: # define DEBUGGING_CLASS(action, name)               UNHANDLED_CLASS(action, name)",
      "59: # define DEBUGGING_CLASS_DXF(action, name, _dxfname) UNHANDLED_CLASS_DXF(action, name, _dxfname)",
      "60: #endif",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "56: # define DEBUGGING_CLASS_CPP(action, name, _cppname) UNSTABLE_CLASS_CPP(action, name, _cppname)",
      "61: # define DEBUGGING_CLASS_CPP(action, name, _cppname) UNHANDLED_CLASS_CPP(action, name, _cppname)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "123:         obj->dxfname = (char*) #_name; \\",
      "124:         obj->fixedtype = DWG_TYPE_##_name; \\",
      "125:       } \\",
      "127:     }",
      "128: #define UNHANDLED_CLASS(action, _name) \\",
      "129:   if (klass->dxfname && strEQc (klass->dxfname, #_name)) \\",
      "",
      "[Removed Lines]",
      "126:       return DEBUGGING_DXF(action, name) DWG_FUNC_N(action,_name)(dat, obj); \\",
      "",
      "[Added Lines]",
      "128:       return DEBUGGING_DXF(action, name) DWG_FUNC_N(action,_name) (dat, obj); \\",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "144:       if (strEQc (_STR(action), \"decode\") || !memcmp (_STR(action), \"in\", 2)) { \\",
      "145:         obj->name = (char*) #_name; \\",
      "146:         obj->dxfname = (char*) #_dxfname; \\",
      "148:       } \\",
      "150:       return DWG_ERR_UNHANDLEDCLASS; \\",
      "151:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "148:       return DWG_ERR_UNHANDLEDCLASS; \\",
      "149:     }",
      "150: #define UNHANDLED_CLASS_CPP(action, _name, _cppname) \\",
      "151:   if (klass->cppname && strEQc (klass->cppname, #_cppname)) \\",
      "152:     { \\",
      "153:       WARN_UNHANDLED_CLASS; \\",
      "154:       if (strEQc (_STR(action), \"decode\") || !memcmp (_STR(action), \"in\", 2)) { \\",
      "155:         obj->name = (char*) #_name; \\",
      "156:         obj->dxfname = (char*) #_name; \\",
      "157:       } \\",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "170:   STABLE_CLASS    (ACTION, IMAGEDEF)",
      "171:   STABLE_CLASS    (ACTION, IMAGEDEF_REACTOR)",
      "172:   STABLE_CLASS    (ACTION, LAYER_INDEX)",
      "174:   STABLE_CLASS    (ACTION, LWPOLYLINE)",
      "176:   STABLE_CLASS    (ACTION, OBJECTCONTEXTDATA)",
      "177:   STABLE_CLASS_CPP(ACTION, OBJECTCONTEXTDATA, AcDbObjectContextData)",
      "178:   STABLE_CLASS_DXF(ACTION, PLACEHOLDER, ACDBPLACEHOLDER)",
      "",
      "[Removed Lines]",
      "173:   STABLE_CLASS    (ACTION, LAYOUT)",
      "175:   STABLE_CLASS    (ACTION, MLEADERSTYLE)",
      "",
      "[Added Lines]",
      "181:   STABLE_CLASS    (ACTION, LAYOUT) // TODO bottom_margin nan",
      "183:   STABLE_CLASS    (ACTION, MLEADERSTYLE) // TODO block_rotation nan",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "224:   DEBUGGING_CLASS     (ACTION, TABLEGEOMETRY) //wrong geom_data",
      "225:   DEBUGGING_CLASS     (ACTION, CELLSTYLEMAP) //broken",
      "226:   DEBUGGING_CLASS     (ACTION, MATERIAL)     //working on",
      "",
      "[Removed Lines]",
      "222:   DEBUGGING_CLASS     (ACTION, ARC_DIMENSION) //ent",
      "223:   DEBUGGING_CLASS     (ACTION, TABLECONTENT) //wrong values",
      "",
      "[Added Lines]",
      "231:   DEBUGGING_CLASS_CPP (ACTION, TABLECONTENT, AcDbTableContent)",
      "",
      "---------------"
    ],
    "src/dec_macros.h||src/dec_macros.h": [
      "File: src/dec_macros.h -> src/dec_macros.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "1236:       obj_dat = *dat;                                                         \\",
      "1237:       hdl_dat = *dat;                                                         \\",
      "1238:       str_dat = *dat;                                                         \\",
      "1241:     }                                                                         \\",
      "1242:     else { error = dwg_decode_##token##_private (dat, dat, dat, obj); }       \\",
      "1243:     return error;                                                             \\",
      "",
      "[Removed Lines]",
      "1239:       error                                                                   \\",
      "1240:           = dwg_decode_##token##_private (&obj_dat, &hdl_dat, &str_dat, obj); \\",
      "",
      "[Added Lines]",
      "1239:       error = dwg_decode_##token##_private (&obj_dat, &hdl_dat, &str_dat,     \\",
      "1240:                                             obj);                             \\",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d931b61ac89337d1f3b6dbe220ce1da13d482b3d",
      "candidate_info": {
        "commit_hash": "d931b61ac89337d1f3b6dbe220ce1da13d482b3d",
        "repo": "LibreDWG/libredwg",
        "commit_url": "https://github.com/LibreDWG/libredwg/commit/d931b61ac89337d1f3b6dbe220ce1da13d482b3d",
        "files": [
          "src/in_json.c"
        ],
        "message": "in_json: Fatal error on missing OBJECTS type\n\nthough theoretically we could search for the type, as\nwe do for our internal fixedtype.\nFixes GH #178 fuzzing crashes",
        "before_after_code_files": [
          "src/in_json.c||src/in_json.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/in_json.c||src/in_json.c": [
          "File: src/in_json.c -> src/in_json.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1751:                   obj->handle.size = hdl->handleref.size;",
          "1752:                   obj->handle.value = hdl->handleref.value;",
          "1753:                 }",
          "1754:             }",
          "1755:           else if (strEQc (key, \"num_unknown_bits\")",
          "1756:                    && memBEGINc (obj->name, \"UNKNOWN_\"))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1754:               if (!obj->type) // TODO: We could eventually relax this",
          "1755:                 {",
          "1756:                   LOG_ERROR (\"Required %s.type missing\", name)",
          "1757:                   return DWG_ERR_INVALIDDWG;",
          "1758:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6deea06760022108a4b78cc0cb4a0dddc5b99603",
      "candidate_info": {
        "commit_hash": "6deea06760022108a4b78cc0cb4a0dddc5b99603",
        "repo": "LibreDWG/libredwg",
        "commit_url": "https://github.com/LibreDWG/libredwg/commit/6deea06760022108a4b78cc0cb4a0dddc5b99603",
        "files": [
          "programs/dwgrewrite.c",
          "src/encode.c"
        ],
        "message": "free: protect freeing obj->dxfname\n\ndont set INDXF when HANDSEED is missing.\ne.g. GH #178 null_pointer2 testcase",
        "before_after_code_files": [
          "programs/dwgrewrite.c||programs/dwgrewrite.c",
          "src/encode.c||src/encode.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "programs/dwgrewrite.c||programs/dwgrewrite.c": [
          "File: programs/dwgrewrite.c -> programs/dwgrewrite.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "197:   i = optind;",
          "199:   memset (&dwg, 0, sizeof (Dwg_Data));",
          "202:   filename_in = argv[i];",
          "203:   if (!filename_in)",
          "",
          "[Removed Lines]",
          "200:   dwg.opts = opts;",
          "",
          "[Added Lines]",
          "200:   dwg.opts = opts & 0xf;",
          "",
          "---------------"
        ],
        "src/encode.c||src/encode.c": [
          "File: src/encode.c -> src/encode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2421:   if (!_obj->HANDSEED) // minimal or broken DXF",
          "2422:     {",
          "2424:       dat->from_version = dat->version - 1;",
          "2425:       LOG_TRACE (\"encode from minimal DXF\\n\");",
          "2426:       _obj->HANDSEED = calloc(1, sizeof(Dwg_Object_Ref));",
          "",
          "[Removed Lines]",
          "2423:       dwg->opts |= (DWG_OPTS_MINIMAL | DWG_OPTS_INDXF);",
          "",
          "[Added Lines]",
          "2423:       dwg->opts |= DWG_OPTS_MINIMAL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c6f6668b82bfe595899cc820279ac37bb9ef16f5",
      "candidate_info": {
        "commit_hash": "c6f6668b82bfe595899cc820279ac37bb9ef16f5",
        "repo": "LibreDWG/libredwg",
        "commit_url": "https://github.com/LibreDWG/libredwg/commit/c6f6668b82bfe595899cc820279ac37bb9ef16f5",
        "files": [
          "include/dwg.h",
          "src/decode.c",
          "src/encode.c",
          "src/free.c"
        ],
        "message": "cleanup tio.unknown\n\nnot needed anymore, we only have UNKNOWN_OBJ or UNKNOWN_ENT with full common\nentity_data.\nFixes GH #178 heap_overflow2",
        "before_after_code_files": [
          "include/dwg.h||include/dwg.h",
          "src/decode.c||src/decode.c",
          "src/encode.c||src/encode.c",
          "src/free.c||src/free.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "include/dwg.h||include/dwg.h": [
          "File: include/dwg.h -> include/dwg.h"
        ],
        "src/decode.c||src/decode.c": [
          "File: src/decode.c -> src/decode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5013:           bit_set_position (dat, restartpos);",
          "5019:           if (i >= 0 && i < (int)dwg->num_classes)",
          "5020:             {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5014:           obj->supertype = DWG_SUPERTYPE_UNKNOWN;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5032:                   LOG_ERROR (\"Invalid class index %d >%d\", i,",
          "5033:                              (int)dwg->num_classes);",
          "5034:                 }",
          "5036:               obj->type = 0;",
          "5038:               return error | DWG_ERR_VALUEOUTOFBOUNDS;",
          "5039:             }",
          "5096:         }",
          "5097:     }",
          "",
          "[Removed Lines]",
          "5035:               obj->supertype = DWG_SUPERTYPE_UNKNOWN;",
          "5041:           if (klass && !is_entity)",
          "5042:             {",
          "5043:               int err = dwg_decode_UNKNOWN_OBJ (dat, obj);",
          "5044:               error |= err;",
          "5045:               obj->supertype = DWG_SUPERTYPE_UNKNOWN;",
          "5046:               if (!dat)",
          "5047:                 return error;",
          "5048:               if (err >= DWG_ERR_CRITICAL)",
          "5050:             }",
          "5051:           else if (klass) // is_entity",
          "5052:             {",
          "5053:               int err;",
          "5054: #if 0 && !defined(IS_RELEASE)",
          "5055:               if (strEQc(klass->dxfname, \"MULTILEADER\")) { //debug CED",
          "5056:                 char *mleader = bit_read_TF(dat, obj->size);",
          "5057:                 LOG_INSANE_TF(mleader, (int)obj->size)",
          "5058:                 bit_set_position(dat, restartpos);",
          "5059:                 free (mleader);",
          "5060:               }",
          "5061: #endif",
          "5062:               err = dwg_decode_UNKNOWN_ENT (dat, obj);",
          "5063:               error |= err;",
          "5064:               obj->supertype = DWG_SUPERTYPE_UNKNOWN;",
          "5065:               if (!dat)",
          "5066:                 return error;",
          "5067:               if (err >= DWG_ERR_CRITICAL)",
          "5069:             }",
          "5070:           else // not a class",
          "5071:             {",
          "5072:               LOG_WARN (\"Unknown object, skipping eed/reactors/xdic\");",
          "5073:               SINCE (R_2000)",
          "5074:               {",
          "5075:                 obj->bitsize = bit_read_RL (dat);",
          "5076:                 LOG_TRACE (\"bitsize: \" FORMAT_RL \" [RL] @%lu.%u\\n\",",
          "5077:                            obj->bitsize, dat->byte-2, dat->bit);",
          "5078:                 if (obj->bitsize > obj->size * 8)",
          "5079:                   {",
          "5080:                     LOG_ERROR (\"Invalid bitsize \" FORMAT_RL \" => \" FORMAT_RL,",
          "5081:                                obj->bitsize, obj->size * 8);",
          "5082:                     obj->bitsize = obj->size * 8;",
          "5083:                     error |= DWG_ERR_VALUEOUTOFBOUNDS;",
          "5084:                   }",
          "5085:               }",
          "5086:               if (!bit_read_H (dat, &obj->handle))",
          "5087:                 {",
          "5088:                   LOG_TRACE (\"handle: \" FORMAT_H \" [H 5]\\n\",",
          "5089:                              ARGS_H (obj->handle));",
          "5090:                 }",
          "5091:               restartpos = dat->byte;",
          "5092:               obj->supertype = DWG_SUPERTYPE_UNKNOWN;",
          "5093:               obj->tio.unknown = bit_read_TF (dat, obj->size);",
          "5094:               dat->byte = restartpos;",
          "5095:             }",
          "",
          "[Added Lines]",
          "5037:           if (is_entity)",
          "5038:               error |= dwg_decode_UNKNOWN_ENT (dat, obj);",
          "5039:           else",
          "5040:               error |= dwg_decode_UNKNOWN_OBJ (dat, obj);",
          "5042:           if (!dat)",
          "5043:             return error;",
          "5044:           if (error >= DWG_ERR_CRITICAL)",
          "",
          "---------------"
        ],
        "src/encode.c||src/encode.c": [
          "File: src/encode.c -> src/encode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1970:           else",
          "1971:             is_entity = obj->supertype == DWG_SUPERTYPE_ENTITY;",
          "1976:             error = dwg_encode_UNKNOWN_ENT (dat, obj);",
          "1993:         }",
          "1994:     }",
          "",
          "[Removed Lines]",
          "1973:           if (klass && !is_entity)",
          "1974:             error = dwg_encode_UNKNOWN_OBJ (dat, obj);",
          "1975:           else if (klass)",
          "1977:           else // not a class",
          "1978:             {",
          "1979:               LOG_WARN (\"Unknown object, skipping eed/reactors/xdic\");",
          "1980:               error = DWG_ERR_UNHANDLEDCLASS;",
          "1981:               SINCE (R_2000)",
          "1982:               {",
          "1983:                 bit_write_RL (dat, obj->bitsize);",
          "1984:                 LOG_INFO (\"bitsize: \" FORMAT_RL \" [RL] (@%lu.%u)\\n\", obj->bitsize,",
          "1985:                           dat->byte - 4, dat->bit);",
          "1986:               }",
          "1987:               bit_write_H (dat, &obj->handle);",
          "1988:               LOG_INFO (\"handle: \" FORMAT_H \" [H 5]\\n\", ARGS_H (obj->handle));",
          "1991:               bit_write_TF (dat, obj->tio.unknown, obj->size);",
          "1992:             }",
          "",
          "[Added Lines]",
          "1973:           if (is_entity)",
          "1975:           else",
          "1976:             error = dwg_encode_UNKNOWN_OBJ (dat, obj);",
          "",
          "---------------"
        ],
        "src/free.c||src/free.c": [
          "File: src/free.c -> src/free.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "731:       else if ((error = dwg_free_variable_type (obj->parent, obj))",
          "732:                & DWG_ERR_UNHANDLEDCLASS)",
          "733:         {",
          "738:         unhandled:",
          "753:               dwg_free_UNKNOWN_ENT (dat, obj);",
          "761:               dwg_free_UNKNOWN_OBJ (dat, obj);",
          "771:         }",
          "772:     }",
          "",
          "[Removed Lines]",
          "734:           int is_entity;",
          "735:           int i;",
          "736:           Dwg_Class *klass;",
          "739:           is_entity = 0;",
          "740:           i = obj->type - 500;",
          "741:           klass = NULL;",
          "743:           dwg = obj->parent;",
          "744:           if (dwg->dwg_class && i >= 0 && i < (int)dwg->num_classes)",
          "745:             {",
          "746:               klass = &dwg->dwg_class[i];",
          "747:               is_entity = klass ? dwg_class_is_entity (klass) : 0;",
          "748:             }",
          "750:           if (obj->fixedtype == DWG_TYPE_TABLE)",
          "751:             {",
          "754:             }",
          "755:           else if (obj->fixedtype == DWG_TYPE_DATATABLE)",
          "756:             {",
          "757:               dwg_free_UNKNOWN_OBJ (dat, obj);",
          "758:             }",
          "759:           else if (klass && !is_entity)",
          "760:             {",
          "762:             }",
          "763:           else if (klass && is_entity)",
          "764:             {",
          "765:               dwg_free_UNKNOWN_ENT (dat, obj);",
          "766:             }",
          "767:           else // not a class",
          "768:             {",
          "769:               FREE_IF (obj->tio.unknown);",
          "770:             }",
          "",
          "[Added Lines]",
          "735:           if (obj->fixedtype == DWG_TYPE_UNKNOWN_ENT)",
          "737:           else if (obj->fixedtype == DWG_TYPE_UNKNOWN_OBJ)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "03ae5aa71e2ac8a2416439526722ec31455760ea",
      "candidate_info": {
        "commit_hash": "03ae5aa71e2ac8a2416439526722ec31455760ea",
        "repo": "LibreDWG/libredwg",
        "commit_url": "https://github.com/LibreDWG/libredwg/commit/03ae5aa71e2ac8a2416439526722ec31455760ea",
        "files": [
          "src/classes.inc",
          "src/decode.c",
          "src/free.c"
        ],
        "message": "free: fix UNKNOWN_OBJ leak on ERROR: Wrong TABLECONTENT.type\n\nfor obj != TABLE. Some dxfname mixup should not be fatal\nfor free. Check the types.\nSee GH #191",
        "before_after_code_files": [
          "src/classes.inc||src/classes.inc",
          "src/decode.c||src/decode.c",
          "src/free.c||src/free.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/classes.inc||src/classes.inc"
          ],
          "candidate": [
            "src/classes.inc||src/classes.inc"
          ]
        }
      },
      "candidate_diff": {
        "src/classes.inc||src/classes.inc": [
          "File: src/classes.inc -> src/classes.inc",
          "--- Hunk 1 ---",
          "[Context before]",
          "232:   DEBUGGING_CLASS     (ACTION, TABLEGEOMETRY) //wrong geom_data",
          "233:   DEBUGGING_CLASS     (ACTION, CELLSTYLEMAP) //broken",
          "234:   DEBUGGING_CLASS     (ACTION, MATERIAL)     //working on",
          "",
          "[Removed Lines]",
          "231:   DEBUGGING_CLASS_CPP (ACTION, TABLECONTENT, AcDbTableContent)",
          "",
          "[Added Lines]",
          "231:   DEBUGGING_CLASS_CPP (ACTION, TABLECONTENT, AcDbTableContent) // dxfname: \"TABLE\"",
          "",
          "---------------"
        ],
        "src/decode.c||src/decode.c": [
          "File: src/decode.c -> src/decode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "5662:   obj->unknown_bits = bit_read_TF (dat, num_bytes);",
          "5665:              obj->common_size, obj->bitsize - obj->common_size,",
          "5667:   LOG_TRACE_TF (obj->unknown_bits, num_bytes);",
          "5668:   bit_set_position (dat, pos);",
          "5669:   if (num_bits % 8)",
          "",
          "[Removed Lines]",
          "5664:   LOG_TRACE (\"unknown_bits [%ld (%lu,%ld,%d) TF]: \", num_bits,",
          "5666:              (int)obj->stringstream_size);",
          "",
          "[Added Lines]",
          "5664:   LOG_TRACE (\"unknown_bits [%ld (%lu,%ld,%d) %d TF]: \", num_bits,",
          "5666:              (int)obj->stringstream_size, num_bytes);",
          "",
          "---------------"
        ],
        "src/free.c||src/free.c": [
          "File: src/free.c -> src/free.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "438:     {",
          "439:       LOG_ERROR (\"Wrong %s.type %d for obj [%d]: != %s\",  obj->dxfname, obj->type,",
          "440:                  obj->index, klass->dxfname);",
          "442:     }",
          "",
          "[Removed Lines]",
          "441:       return DWG_ERR_INVALIDTYPE;",
          "",
          "[Added Lines]",
          "442:       if (obj->fixedtype == DWG_TYPE_UNKNOWN_OBJ",
          "443:           || obj->fixedtype == DWG_TYPE_UNKNOWN_ENT)",
          "444:         return DWG_ERR_UNHANDLEDCLASS;",
          "445:       else",
          "446:         return DWG_ERR_INVALIDTYPE;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0f2571cd7942fa732fbbaf575fc696a9235d8ebe",
      "candidate_info": {
        "commit_hash": "0f2571cd7942fa732fbbaf575fc696a9235d8ebe",
        "repo": "LibreDWG/libredwg",
        "commit_url": "https://github.com/LibreDWG/libredwg/commit/0f2571cd7942fa732fbbaf575fc696a9235d8ebe",
        "files": [
          "src/bits.c",
          "src/bits.h",
          "src/dec_macros.h",
          "src/decode.c",
          "src/decode.h",
          "src/decode_r2007.c",
          "src/dwg.spec",
          "src/encode.c",
          "src/in_json.c"
        ],
        "message": "encode: init hdl_dat stream earlier #205\n\nadd obj_flush_hdlstream to START_HANDLE_STREAM.\ninitially handles are written to a fresh hdl stream.\nWhen we reach START_HANDLE_STREAM (entity and object) we flush this to dat.\nOn encode we usually don't know obj->bitsize and obj->hdlpos beforehand.\n\nThis greatly simplifies the dwg.spec, avoiding 2nd loops just for\nthe handles, and avoiding free problems.",
        "before_after_code_files": [
          "src/bits.c||src/bits.c",
          "src/bits.h||src/bits.h",
          "src/dec_macros.h||src/dec_macros.h",
          "src/decode.c||src/decode.c",
          "src/decode.h||src/decode.h",
          "src/decode_r2007.c||src/decode_r2007.c",
          "src/dwg.spec||src/dwg.spec",
          "src/encode.c||src/encode.c",
          "src/in_json.c||src/in_json.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/dec_macros.h||src/dec_macros.h"
          ],
          "candidate": [
            "src/dec_macros.h||src/dec_macros.h"
          ]
        }
      },
      "candidate_diff": {
        "src/bits.c||src/bits.c": [
          "File: src/bits.c -> src/bits.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2209:     bit_write_RC (dat, sentinel[i]);",
          "2210: }",
          "2216: #define CHAIN_BLOCK 40960",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2212: void",
          "2213: bit_chain_init (Bit_Chain *dat, const int size)",
          "2214: {",
          "2215:   dat->chain = (unsigned char *)calloc (1, size);",
          "2216:   dat->size = (long unsigned int)size;",
          "2217:   dat->byte = 0;",
          "2218:   dat->bit = 0;",
          "2219: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2219: {",
          "2220:   if (dat->size == 0)",
          "2221:     {",
          "2226:     }",
          "2227:   else",
          "2228:     {",
          "",
          "[Removed Lines]",
          "2222:       dat->chain = (unsigned char *)calloc (1, CHAIN_BLOCK);",
          "2223:       dat->size = CHAIN_BLOCK;",
          "2224:       dat->byte = 0;",
          "2225:       dat->bit = 0;",
          "",
          "[Added Lines]",
          "2231:       bit_chain_init (dat, CHAIN_BLOCK);",
          "",
          "---------------"
        ],
        "src/bits.h||src/bits.h": [
          "File: src/bits.h -> src/bits.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "270: int bit_search_sentinel (Bit_Chain *dat, unsigned char sentinel[16]);",
          "271: void bit_write_sentinel (Bit_Chain *dat, unsigned char sentinel[16]);",
          "273: void bit_chain_alloc (Bit_Chain *dat);",
          "275: void bit_print (Bit_Chain *dat, long unsigned int size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "273: void bit_chain_init (Bit_Chain *dat, const int size);",
          "",
          "---------------"
        ],
        "src/dec_macros.h||src/dec_macros.h": [
          "File: src/dec_macros.h -> src/dec_macros.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: #include \"config.h\"",
          "23: #ifdef HAVE_CTYPE_H",
          "24: #  include <ctype.h>",
          "25: #endif",
          "27: #define ACTION decode",
          "28: #define IS_DECODER",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: #ifndef DEC_MACROS_H",
          "23: #define DEC_MACROS_H",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1247:       return error;                                                           \\",
          "1248:     SINCE (R_2007)                                                            \\",
          "1249:       {                                                                       \\",
          "1256:       }                                                                       \\",
          "1257:     else                                                                      \\",
          "1258:       {                                                                       \\",
          "",
          "[Removed Lines]",
          "1250:         Bit_Chain obj_dat, str_dat, hdl_dat;                                  \\",
          "1251:         obj_dat = *dat;                                                       \\",
          "1252:         hdl_dat = *dat;                                                       \\",
          "1253:         str_dat = *dat;                                                       \\",
          "1254:         error = dwg_decode_##token##_private (&obj_dat, &hdl_dat,             \\",
          "1255:                                               &str_dat, obj);                 \\",
          "",
          "[Added Lines]",
          "1254:         Bit_Chain obj_dat = *dat, str_dat = *dat, hdl_dat = *dat;             \\",
          "1255:         error = dwg_decode_##token##_private (&obj_dat, &hdl_dat, &str_dat,   \\",
          "1256:                                               obj);                           \\",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1263:                                                                               \\",
          "1264:   GCC30_DIAG_IGNORE (-Wformat-nonliteral)                                     \\",
          "1265:   static int dwg_decode_##token##_private (                                   \\",
          "1267:       Dwg_Object *restrict obj)                                               \\",
          "1268:   {                                                                           \\",
          "1269:     BITCODE_BL vcount, rcount3, rcount4;                                      \\",
          "",
          "[Removed Lines]",
          "1266:       Bit_Chain *dat, Bit_Chain *hdl_dat, Bit_Chain *str_dat,                 \\",
          "",
          "[Added Lines]",
          "1267:       Bit_Chain *dat, Bit_Chain *hdl_dat, Bit_Chain *str_dat,\\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1287: #define DWG_ENTITY_END                                                        \\",
          "1295:                                : (padding < 0) ? \"OVERSHOOT\" : \"\");           \\",
          "1298:   }",
          "1300: #define DWG_OBJECT(token)                                                     \\",
          "",
          "[Removed Lines]",
          "1288:   {                                                                           \\",
          "1289:     unsigned long pos = obj_stream_position (dat, hdl_dat, str_dat);          \\",
          "1290:     int64_t padding = (obj->size * 8) - pos;                                  \\",
          "1291:     SINCE (R_2007) bit_set_position (dat, pos);                               \\",
          "1292:     if (padding)                                                              \\",
          "1293:       LOG_HANDLE (\" padding: %+ld %s\\n\", (long)padding,                       \\",
          "1294:                   padding >= 8 ? \"MISSING\"                                    \\",
          "1296:   }                                                                           \\",
          "1297:   return error & ~DWG_ERR_UNHANDLEDCLASS;                                     \\",
          "",
          "[Added Lines]",
          "1289:     {                                                                         \\",
          "1290:       unsigned long pos = obj_stream_position (dat, hdl_dat, str_dat);        \\",
          "1291:       int64_t padding = (obj->size * 8) - pos;                                \\",
          "1292:       SINCE (R_2007) bit_set_position (dat, pos);                             \\",
          "1293:       if (padding)                                                            \\",
          "1294:         LOG_HANDLE (\" padding: %+ld %s\\n\", (long)padding,                     \\",
          "1295:                     padding >= 8 ? \"MISSING\"                                  \\",
          "1297:     }                                                                         \\",
          "1298:     return error & ~DWG_ERR_UNHANDLEDCLASS;                                   \\",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1343:     if (error)                                                                \\",
          "1344:       return error;                                                           \\",
          "1345:     SINCE (R_2007)                                                            \\",
          "1355:     return error;                                                             \\",
          "1356:   }                                                                           \\",
          "1357:                                                                               \\",
          "",
          "[Removed Lines]",
          "1346:     {                                                                         \\",
          "1347:       Bit_Chain obj_dat, str_dat, hdl_dat;                                    \\",
          "1348:       obj_dat = *dat;                                                         \\",
          "1349:       hdl_dat = *dat;                                                         \\",
          "1350:       str_dat = *dat;                                                         \\",
          "1351:       error = dwg_decode_##token##_private (&obj_dat, &hdl_dat, &str_dat,     \\",
          "1352:                                             obj);                             \\",
          "1353:     }                                                                         \\",
          "1354:     else { error = dwg_decode_##token##_private (dat, dat, dat, obj); }       \\",
          "",
          "[Added Lines]",
          "1347:       {                                                                       \\",
          "1348:         Bit_Chain obj_dat = *dat, str_dat = *dat, hdl_dat = *dat;             \\",
          "1349:         error = dwg_decode_##token##_private (&obj_dat, &hdl_dat, &str_dat,   \\",
          "1350:                                               obj);                           \\",
          "1351:       }                                                                       \\",
          "1352:     else                                                                      \\",
          "1353:       {                                                                       \\",
          "1354:         error = dwg_decode_##token##_private (dat, dat, dat, obj);            \\",
          "1355:       }                                                                       \\",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1374:       }",
          "1376: #define DWG_OBJECT_END DWG_ENTITY_END",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1379: #endif",
          "",
          "---------------"
        ],
        "src/decode.c||src/decode.c": [
          "File: src/decode.c -> src/decode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:                               Bit_Chain *str_dat,",
          "102:                               Dwg_Object_Object *restrict obj);",
          "105:                               Bit_Chain *str_dat,",
          "106:                               Dwg_Object_Entity *restrict ent);",
          "107: static int dwg_decode_common_entity_handle_data (Bit_Chain *dat,",
          "",
          "[Removed Lines]",
          "104: static int dwg_decode_entity (Bit_Chain *dat, Bit_Chain *hdl_dat,",
          "",
          "[Added Lines]",
          "104: static int dwg_decode_entity (Bit_Chain *restrict dat, Bit_Chain *restrict hdl_dat,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3974:     }",
          "3975: }",
          "3979:    The last common part is common_entity_handle_data.spec",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3978: int",
          "3979: obj_handle_stream (Bit_Chain *restrict dat, Dwg_Object *restrict obj,",
          "3980:                    Bit_Chain *restrict hdl_dat)",
          "3981: {",
          "3982:   long unsigned int bit8 = obj->bitsize / 8;",
          "3983:   assert (dat != hdl_dat);",
          "3986:   obj->hdlpos = obj->bitsize; // relative to dat",
          "3988:   hdl_dat->byte = bit8;",
          "3989:   hdl_dat->bit = obj->bitsize % 8;",
          "3991:   if (!obj->handlestream_size)",
          "3992:     {",
          "3993:       obj->handlestream_size = (obj->size * 8) - obj->bitsize;",
          "3994:       LOG_TRACE (\" Hdlsize: %lu,\", obj->handlestream_size);",
          "3995:     }",
          "3996:   hdl_dat->size = obj->size;",
          "3997:   if (DWG_LOGLEVEL >= DWG_LOGLEVEL_HANDLE)",
          "3998:     {",
          "3999:       long unsigned int pos = (dat->byte * 8) + obj->bitsize + obj->handlestream_size;",
          "4000:       LOG_HANDLE (\" hdl_dat: @%lu.%u - @%lu.%lu (%lu)\", bit8, hdl_dat->bit,",
          "4001:                   pos / 8, pos % 8, hdl_dat->size);",
          "4002:     }",
          "4003:   LOG_TRACE (\"\\n\")",
          "4004:   return 0;",
          "4005: }",
          "",
          "---------------"
        ],
        "src/decode.h||src/decode.h": [
          "File: src/decode.h -> src/decode.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:                                  Bit_Chain *str_dat, Dwg_Data *restrict dwg);",
          "63: int dwg_decode_add_object (Dwg_Data *restrict dwg, Bit_Chain *dat,",
          "64:                            Bit_Chain *hdl_dat, long unsigned int address);",
          "65: void bfr_read (void *restrict dst, BITCODE_RC *restrict *restrict src,",
          "66:                size_t size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65: int obj_handle_stream (Bit_Chain *restrict dat, Dwg_Object *restrict obj,",
          "66:                        Bit_Chain *restrict hdl_dat);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79: int dwg_validate_POLYLINE (Dwg_Object *restrict obj);",
          "84: int obj_string_stream (Bit_Chain *dat, Dwg_Object *restrict obj,",
          "85:                        Bit_Chain *str_dat);",
          "86: unsigned long obj_stream_position (Bit_Chain *restrict dat,",
          "",
          "[Removed Lines]",
          "82: int obj_handle_stream (Bit_Chain *dat, Dwg_Object *restrict obj,",
          "83:                        Bit_Chain *hdl_dat);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/decode_r2007.c||src/decode_r2007.c": [
          "File: src/decode_r2007.c -> src/decode_r2007.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: #include <assert.h>",
          "26: #include \"common.h\"",
          "27: #include \"bits.h\"",
          "29: #include \"decode.h\"",
          "31: #define MIN(X, Y) ((X) < (Y) ? (X) : (Y))",
          "",
          "[Removed Lines]",
          "28: #include \"dec_macros.h\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: #define DWG_LOGLEVEL loglevel",
          "39: #include \"logging.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39: #include \"dec_macros.h\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1261:   else { return p1; }",
          "1262: }",
          "1290: int",
          "1291: obj_string_stream (Bit_Chain *restrict dat, Dwg_Object *restrict obj,",
          "1292:                    Bit_Chain *restrict str)",
          "",
          "[Removed Lines]",
          "1264: int",
          "1265: obj_handle_stream (Bit_Chain *restrict dat, Dwg_Object *restrict obj,",
          "1266:                    Bit_Chain *restrict hdl_dat)",
          "1267: {",
          "1268:   long unsigned int bit8 = obj->bitsize / 8;",
          "1269:   long unsigned int pos = dat->byte;",
          "1272:   obj->hdlpos = obj->bitsize; // relative to dat",
          "1274:   hdl_dat->byte = bit8;",
          "1275:   hdl_dat->bit = obj->bitsize % 8;",
          "1277:   if (!obj->handlestream_size)",
          "1278:     {",
          "1279:       obj->handlestream_size = (obj->size * 8) - obj->bitsize;",
          "1280:       LOG_TRACE (\" Hdlsize: %lu,\", obj->handlestream_size);",
          "1281:     }",
          "1282:   hdl_dat->size = obj->size;",
          "1283:   pos = (pos * 8) + obj->bitsize + obj->handlestream_size;",
          "1284:   LOG_HANDLE (\" hdl_dat: @%lu.%u - @%lu.%lu (%lu)\", bit8, hdl_dat->bit,",
          "1285:               pos / 8, pos % 8, hdl_dat->size);",
          "1286:   LOG_TRACE (\"\\n\")",
          "1287:   return 0;",
          "1288: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1295:   BITCODE_RL data_size = 0;            // in byte",
          "1296:   BITCODE_RL old_size;                 // in byte",
          "1297:   BITCODE_RL old_byte;",
          "1298:   old_size = str->size;",
          "1299:   old_byte = str->byte;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1272:   assert (dat != str);",
          "",
          "---------------"
        ],
        "src/dwg.spec||src/dwg.spec": [
          "File: src/dwg.spec -> src/dwg.spec",
          "--- Hunk 1 ---",
          "[Context before]",
          "2772:   REPEAT_BLOCK",
          "2773:     SUB_FIELD_BD (dashes[rcount1],length, 49);",
          "2774:     SUB_FIELD_BS (dashes[rcount1],complex_shapecode, 75);",
          "2778:     SUB_FIELD_RD (dashes[rcount1],x_offset, 44);",
          "2779:     SUB_FIELD_RD (dashes[rcount1],y_offset, 45);",
          "2780:     SUB_FIELD_BD (dashes[rcount1],scale, 46);",
          "",
          "[Removed Lines]",
          "2775:     DXF_OR_PRINT {",
          "2776:       SUB_FIELD_HANDLE (dashes[rcount1],style, 5, 340);",
          "2777:     }",
          "",
          "[Added Lines]",
          "2775:     SUB_FIELD_HANDLE (dashes[rcount1],style, 5, 340);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2789:     }",
          "2790:   END_REPEAT_BLOCK",
          "2791:   SET_PARENT_OBJ (dashes)",
          "2793:   END_REPEAT (dashes);  // there's a 2nd loop below, don't free",
          "2796:   UNTIL (R_2004) {",
          "2797:     JSON {",
          "",
          "[Removed Lines]",
          "2792: #ifndef IS_FREE",
          "2794: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2810:   START_OBJECT_HANDLE_STREAM;",
          "2811:   FIELD_HANDLE (extref_handle, 5, 0);",
          "2821: DWG_OBJECT_END",
          "",
          "[Removed Lines]",
          "2813: #if !(defined(IS_JSON) || defined (IS_DXF))",
          "2814:   _REPEAT_CNF (_obj->num_dashes, dashes, Dwg_LTYPE_dash, 1)",
          "2815:   REPEAT_BLOCK",
          "2816:       SUB_FIELD_HANDLE (dashes[rcount1],style, 5, 0);",
          "2817:   END_REPEAT_BLOCK",
          "2818:   END_REPEAT (dashes);",
          "2819: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3586:     PRE (R_2018)",
          "3587:     {",
          "3589:         switch (FIELD_VALUE (lines[rcount1].lt.index)) {",
          "3591:         case 32766: VALUE_TFF (\"BYBLOCK\", 6); break;",
          "",
          "[Removed Lines]",
          "3588: #if defined (IS_DXF) && !defined (IS_ENCODE)",
          "",
          "[Added Lines]",
          "3576: #if defined (IS_DXF) && !defined (IS_ENCODER)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3598:         SUB_FIELD_BSd (lines[rcount1], lt.index, 6);",
          "3599: #endif",
          "3600:     }",
          "3603:       SUB_FIELD_HANDLE (lines[rcount1], lt.ltype, 5, 6);",
          "3604:     }",
          "3606:   END_REPEAT_BLOCK",
          "3607:   SET_PARENT_OBJ (lines)",
          "3613:   START_OBJECT_HANDLE_STREAM;",
          "3627: DWG_OBJECT_END",
          "",
          "[Removed Lines]",
          "3601: #if defined(IS_JSON) || defined (IS_DXF)",
          "3602:     SINCE (R_2018) {",
          "3605: #endif",
          "3608:   if (!IF_IS_FREE || dat->from_version < R_2018) // there's a 2nd loop below, don't free",
          "3609:     {",
          "3610:       END_REPEAT (lines);",
          "3611:     }",
          "3615: #if !(defined(IS_JSON) || defined (IS_DXF))",
          "3616:   SINCE (R_2018)",
          "3617:   {",
          "3618:     _REPEAT_CNF (_obj->num_lines, lines, Dwg_MLINESTYLE_line, 1)",
          "3619:     REPEAT_BLOCK",
          "3620:         SUB_FIELD_HANDLE (lines[rcount1], lt.ltype, 5, 6);",
          "3621:     END_REPEAT_BLOCK",
          "3623:     END_REPEAT (lines);",
          "3624:   }",
          "3625: #endif",
          "",
          "[Added Lines]",
          "3589:     LATER_VERSIONS {",
          "3594:   END_REPEAT (lines);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4720:           SUB_FIELD_BL (cell,has_linked_data, 92); \\",
          "4721:           if (FIELD_VALUE (cell.has_linked_data)) \\",
          "4722:             {      \\",
          "4724:               SUB_FIELD_BL (cell,num_rows, 93);  \\",
          "4725:               SUB_FIELD_BL (cell,num_cols, 94);  \\",
          "4726:               SUB_FIELD_BL (cell,unknown, 96);  \\",
          "",
          "[Removed Lines]",
          "4723:               SUB_FIELD_HANDLE (cell,data_link, 5, 340);\\",
          "",
          "[Added Lines]",
          "4689:               SUB_FIELD_HANDLE (cell,data_link, 5, 340);  \\",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "4753:               SUB_FIELD_BL (content,num_attrs, 91); \\",
          "4754:               REPEAT4 (content.num_attrs, content.attrs, Dwg_TableCellContent_Attr) \\",
          "4755:               REPEAT_BLOCK    \\",
          "4757:                   SUB_FIELD_T (attr,value, 301); \\",
          "4758:                   SUB_FIELD_BL (attr,index, 92); \\",
          "4759:               END_REPEAT_BLOCK    \\",
          "",
          "[Removed Lines]",
          "4756:                   SUB_FIELD_HANDLE (attr,attdef, 5, 330); \\",
          "",
          "[Added Lines]",
          "4722:                   SUB_FIELD_HANDLE (attr,attdef, 5, 330); \\",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "4774:               SUB_FIELD_BD (cell,unknown_d40, 40); \\",
          "4775:               SUB_FIELD_BD (cell,unknown_d41, 41); \\",
          "4776:               SUB_FIELD_BL (cell,has_cell_geom, 0); \\",
          "4778:               if (FIELD_VALUE (cell.has_cell_geom)) \\",
          "4779:                 {     \\",
          "4780:                   REPEAT_N (1, cell.geom_data, Dwg_CellContentGeometry) \\",
          "",
          "[Removed Lines]",
          "4777:               SUB_FIELD_HANDLE (cell,cell_geom_handle, ANYCODE, 0); \\",
          "",
          "[Added Lines]",
          "4743:               SUB_FIELD_HANDLE (cell,cell_geom_handle, ANYCODE, 0); \\",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "5045:           }",
          "5046:     END_REPEAT_BLOCK",
          "5047:     SET_PARENT_OBJ (cells)",
          "5048:     END_REPEAT (cells);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5014: #ifndef IS_FREE",
          "5016: #endif",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "5092:         if (table_flag & 0x20000)",
          "5093:           FIELD_HANDLE (title_text_style, 5, 7);",
          "5094:         if (table_flag & 0x40000)",
          "5096:         if (table_flag & 0x80000)",
          "5098:         if (table_flag & 0x100000)",
          "5099:           FIELD_BD (title_row_height, 140);",
          "5100:         if (table_flag & 0x200000)",
          "",
          "[Removed Lines]",
          "5095:           FIELD_HANDLE (header_text_style, 5, 7); // doc error",
          "5097:           FIELD_HANDLE (data_text_style, 5, 7); // doc error",
          "",
          "[Added Lines]",
          "5063:           FIELD_HANDLE (header_text_style, 5, 7);",
          "5065:           FIELD_HANDLE (data_text_style, 5, 7);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "5259:       FIELD_HANDLE (seqend, 3, 0);",
          "5260:     }",
          "5261:     FIELD_HANDLE (table_style, 5, 342);",
          "5264:     REPEAT_BLOCK",
          "5265:         if (FIELD_VALUE (cells[rcount1].type) == 1)",
          "5267:             SUB_FIELD_HANDLE (cells[rcount1],cell_handle, 5, 344);",
          "5268:           }",
          "5269:         else",
          "5272:           }",
          "5274:         if (FIELD_VALUE (cells[rcount1].type) == 2 &&",
          "5275:             FIELD_VALUE (cells[rcount1].additional_data_flag) == 1)",
          "5280:         if (FIELD_VALUE (cells[rcount1].additional_data_flag2) == 1 &&",
          "5281:             FIELD_VALUE (cells[rcount1].cell_flag_override) & 0x08)",
          "5285:     END_REPEAT_BLOCK",
          "5286:     SET_PARENT_OBJ (cells)",
          "5287:     END_REPEAT (cells);",
          "5289:     if (FIELD_VALUE (has_table_overrides))",
          "5290:       {",
          "5291:         BITCODE_BL table_flag;",
          "",
          "[Removed Lines]",
          "5263:     REPEAT (num_cells, cells, Dwg_TABLE_Cell)",
          "5271:             SUB_FIELD_HANDLE (cells[rcount1],cell_handle, 5, 340);",
          "5276:           {",
          "5277:             HANDLE_VECTOR (cells[rcount1].attr_def_id, cells[rcount1].num_attr_defs, 4, 331);",
          "5278:           }",
          "5282:           {",
          "5283:             SUB_FIELD_HANDLE (cells[rcount1],text_style_override, ANYCODE, 7);",
          "5284:           }",
          "",
          "[Added Lines]",
          "5230:     _REPEAT_CNF (_obj->num_cells, cells, Dwg_TABLE_Cell, 1)",
          "5237:           {",
          "5239:             SUB_FIELD_HANDLE (cells[rcount1],cell_handle, 5, 340)",
          "5244:           HANDLE_VECTOR (cells[rcount1].attr_def_id, cells[rcount1].num_attr_defs, 4, 331);",
          "5247:           SUB_FIELD_HANDLE (cells[rcount1],text_style_override, ANYCODE, 7);",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "5410:     REPEAT_CN (3, rowstyles, Dwg_TABLESTYLE_rowstyles)",
          "5411:     REPEAT_BLOCK",
          "5412:         #define rowstyle rowstyles[rcount1]",
          "5413:         SUB_FIELD_HANDLE (rowstyle,text_style, 5, 7);",
          "5414:         SUB_FIELD_BD (rowstyle,text_height, 140);",
          "5415:         SUB_FIELD_BS (rowstyle,text_alignment, 170);",
          "5417:         SUB_FIELD_CMC (rowstyle,fill_color, 63,0);",
          "5418:         SUB_FIELD_B (rowstyle,has_bgcolor, 283);",
          "",
          "[Removed Lines]",
          "5416:         SUB_FIELD_CMC (rowstyle,text_color, 62,0);",
          "",
          "[Added Lines]",
          "5380:         SUB_FIELD_CMC (rowstyle,text_color, 62,0); //FIXME",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "5569:       SUB_FIELD_B (lnode, has_lastleaderlinepoint, 290);",
          "5570:       SUB_FIELD_B (lnode, has_dogleg, 291);",
          "5571:       if (FIELD_VALUE (lnode.has_lastleaderlinepoint))",
          "5575:       if (FIELD_VALUE (lnode.has_dogleg))",
          "5579:       SUB_FIELD_BL (lnode, num_breaks, 0);",
          "5580:       VALUEOUTOFBOUNDS (lnode.num_breaks, 5000)",
          "5581:       REPEAT2 (lnode.num_breaks, lnode.breaks, Dwg_LEADER_Break)",
          "",
          "[Removed Lines]",
          "5572:         {",
          "5573:           SUB_FIELD_3BD (lnode, lastleaderlinepoint, 10);",
          "5574:         }",
          "5576:         {",
          "5577:           SUB_FIELD_3BD (lnode, dogleg_vector, 11);",
          "5578:         }",
          "",
          "[Added Lines]",
          "5536:         SUB_FIELD_3BD (lnode, lastleaderlinepoint, 10);",
          "5538:         SUB_FIELD_3BD (lnode, dogleg_vector, 11);",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "5644:     {",
          "5645:       FIELD_T (ctx.content.txt.default_text, 304);",
          "5646:       FIELD_3BD (ctx.content.txt.normal, 11);",
          "5649:       FIELD_3BD (ctx.content.txt.location, 12);",
          "5650:       FIELD_3BD (ctx.content.txt.direction, 13);",
          "5651:       FIELD_BD (ctx.content.txt.rotation, 42);",
          "",
          "[Removed Lines]",
          "5647:       SINCE (R_2007)",
          "5648:         FIELD_HANDLE (ctx.content.txt.style, 5, 340);",
          "",
          "[Added Lines]",
          "5607:       FIELD_HANDLE (ctx.content.txt.style, 5, 340);",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "5677:       FIELD_B (ctx.has_content_blk, 296);",
          "5678:       if (FIELD_VALUE (ctx.has_content_blk))",
          "5679:         {",
          "5682:           FIELD_3BD (ctx.content.blk.normal, 14);",
          "5683:           FIELD_3BD (ctx.content.blk.location, 15);",
          "5684:           FIELD_3BD (ctx.content.blk.scale, 16);",
          "",
          "[Removed Lines]",
          "5680:           SINCE (R_2007)",
          "5681:             FIELD_HANDLE (ctx.content.blk.block_table, 4, 341);",
          "",
          "[Added Lines]",
          "5639:           FIELD_HANDLE (ctx.content.blk.block_table, 4, 341);",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "5729:       REPEAT (num_arrowheads, arrowheads, Dwg_LEADER_ArrowHead)",
          "5730:       REPEAT_BLOCK",
          "5731:           SUB_FIELD_BL (arrowheads[rcount1],is_default, 94);",
          "5734:       END_REPEAT_BLOCK",
          "5735:       SET_PARENT_OBJ (arrowheads)",
          "5742:       FIELD_BL (num_blocklabels, 0);",
          "5743:       VALUEOUTOFBOUNDS (num_blocklabels, 5000)",
          "5744:       REPEAT (num_blocklabels, blocklabels, Dwg_LEADER_BlockLabel)",
          "5745:       REPEAT_BLOCK",
          "5748:           SUB_FIELD_T (blocklabels[rcount1],label_text, 302);",
          "5749:           SUB_FIELD_BS (blocklabels[rcount1],ui_index, 177);",
          "5750:           SUB_FIELD_BD (blocklabels[rcount1],width, 44);",
          "5751:       END_REPEAT_BLOCK",
          "5752:       SET_PARENT_OBJ (blocklabels)",
          "5758:       FIELD_B (neg_textdir, 294);",
          "5759:       FIELD_BS (ipe_alignment, 178);",
          "5760:       FIELD_BS (justification, 179);",
          "",
          "[Removed Lines]",
          "5732:           SINCE (R_2007)",
          "5733:             SUB_FIELD_HANDLE (arrowheads[rcount1],arrowhead, 5, 345);",
          "5737:       if (!IF_IS_FREE || dat->version >= R_2007)",
          "5738:         {",
          "5739:           END_REPEAT (arrowheads);",
          "5740:         }",
          "5746:           SINCE (R_2007)",
          "5747:             SUB_FIELD_HANDLE (blocklabels[rcount1],attdef, 4, 330);",
          "5754:       if (!IF_IS_FREE || dat->version >= R_2007)",
          "5755:         {",
          "5756:           END_REPEAT (blocklabels)",
          "5757:         }",
          "",
          "[Added Lines]",
          "5690:           SUB_FIELD_HANDLE (arrowheads[rcount1],arrowhead, 5, 345);",
          "5693:       END_REPEAT (arrowheads);",
          "5699:           SUB_FIELD_HANDLE (blocklabels[rcount1],attdef, 4, 330);",
          "5705:       END_REPEAT (blocklabels)",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "5771:     FIELD_B (text_extended, 295);",
          "5773:   COMMON_ENTITY_HANDLE_DATA;",
          "5797:   FIELD_HANDLE (mleaderstyle, 5, 340);",
          "5798:   FIELD_HANDLE (ltype, 5, 341);",
          "5799:   FIELD_HANDLE (arrow_handle, 5, 342);",
          "",
          "[Removed Lines]",
          "5776:   VERSIONS (R_13, R_2004) {",
          "5777:     if (FIELD_VALUE (ctx.has_content_txt)) {",
          "5778:       FIELD_HANDLE (ctx.content.txt.style, 5, 340);",
          "5779:     } else if (FIELD_VALUE (ctx.has_content_blk)) {",
          "5780:       FIELD_HANDLE (ctx.content.blk.block_table, 4, 341);",
          "5781:     }",
          "5783:     VERSIONS (R_2000, R_2004)",
          "5784:     {",
          "5785:       _REPEAT_CNF (_obj->num_arrowheads, arrowheads, Dwg_LEADER_ArrowHead, 1)",
          "5786:       REPEAT_BLOCK",
          "5787:           SUB_FIELD_HANDLE (arrowheads[rcount1],arrowhead, 5, 345);",
          "5788:       END_REPEAT_BLOCK",
          "5789:       END_REPEAT (arrowheads);",
          "5790:       _REPEAT_CNF (_obj->num_blocklabels, blocklabels, Dwg_LEADER_BlockLabel, 1)",
          "5791:       REPEAT_BLOCK",
          "5792:           SUB_FIELD_HANDLE (blocklabels[rcount1],attdef, 4, 330);",
          "5793:       END_REPEAT_BLOCK",
          "5794:       END_REPEAT (blocklabels)",
          "5795:     }",
          "5796:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "6113:       SUB_FIELD_B  (ref[rcount1], has_lastpt_ref, 75);",
          "6114:       SUB_FIELD_T  (ref[rcount1], classname, 1); // \"AcDbOsnapPointRef\"",
          "6115:       SUB_FIELD_RC (ref[rcount1], osnap_type, 72);",
          "6117:       if (FIELD_VALUE (ref[rcount1].main_subent_type))",
          "6118:         SUB_FIELD_HANDLE (ref[rcount1], mainobj, 4, 331);",
          "6119:       if (FIELD_VALUE (ref[rcount1].intsect_subent_type))",
          "6120:         SUB_FIELD_HANDLE (ref[rcount1], intsectobj, 4, 332);",
          "6122:       SUB_FIELD_BS (ref[rcount1], rotated_type, 71);",
          "6123:       SUB_FIELD_BS (ref[rcount1], main_subent_type, 73);",
          "6124:       SUB_FIELD_BL (ref[rcount1], main_gsmarker, 91);",
          "",
          "[Removed Lines]",
          "6116: #if defined (IS_JSON) || defined (IS_DXF) || defined (IS_FREE)",
          "6121: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "6133:   START_OBJECT_HANDLE_STREAM;",
          "",
          "[Removed Lines]",
          "6134: #if !defined (IS_JSON) && !defined (IS_DXF) && !defined (IS_FREE)",
          "6135:   _REPEAT_CNF (4, ref, Dwg_DIMASSOC_Ref, 1)",
          "6136:   REPEAT_BLOCK",
          "6138:       if (!(FIELD_VALUE (associativity) & (1<<rcount1)))",
          "6139:         continue;",
          "6140:       LOG_TRACE (\"rcount1: %d\\n\", rcount1);",
          "6141:       if (FIELD_VALUE (ref[rcount1].main_subent_type))",
          "6142:         SUB_FIELD_HANDLE (ref[rcount1], mainobj, 4, 0);",
          "6143:       if (FIELD_VALUE (ref[rcount1].intsect_subent_type))",
          "6144:         SUB_FIELD_HANDLE (ref[rcount1], intsectobj, 4, 0);",
          "6145:   END_REPEAT_BLOCK",
          "6146:   END_REPEAT (ref)",
          "6147: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/encode.c||src/encode.c": [
          "File: src/encode.c -> src/encode.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "580:   }",
          "581: #define START_HANDLE_STREAM                                                   \\",
          "583:   LOG_INSANE (\"HANDLE_STREAM @%lu.%u\\n\", dat->byte - obj->address, dat->bit)  \\",
          "587:   if (!obj->bitsize || dwg->opts & DWG_OPTS_INJSON)                           \\",
          "588:     {                                                                         \\",
          "",
          "[Removed Lines]",
          "584:   if (dat->version >= R_2007 && obj->bitsize)                                 \\",
          "585:     bit_set_position (hdl_dat, obj->hdlpos);                                  \\",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "591:       obj->bitsize = bit_position (dat) - (obj->address * 8);                 \\",
          "592:       obj->was_bitsize_set = 1;                                               \\",
          "593:     }                                                                         \\",
          "594:   RESET_VER",
          "596: #if 0",
          "598:    Returns -1 if not added, else returns the new objid.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "591:   if (!obj->hdlpos) obj->hdlpos = bit_position (dat);                         \\",
          "592:   if (dat->version >= R_2007 && bit_position (hdl_dat) > 0)                   \\",
          "593:     obj_flush_hdlstream (obj, dat, hdl_dat);                                  \\",
          "597: static void",
          "598: obj_flush_hdlstream (Dwg_Object *restrict obj, Bit_Chain *restrict dat,",
          "599:                      Bit_Chain *restrict hdl_dat)",
          "600: {",
          "601:   unsigned long datpos = bit_position (dat);",
          "602:   unsigned long hdlpos = bit_position (hdl_dat);",
          "603:   LOG_TRACE (\"Flush handle stream %lu to %lu, hdlpos=%lu\\n\", hdlpos,",
          "604:              datpos, obj->hdlpos);",
          "605:   for (unsigned long i = 0; i < hdlpos; i++)",
          "606:     {",
          "608:       bit_write_B (dat, bit_read_B (hdl_dat));",
          "609:     }",
          "610:   free (hdl_dat->chain);",
          "611:   hdl_dat->size = 0;",
          "612: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "666:     Dwg_Entity_##token *_obj = _ent->tio.token;                               \\",
          "667:     int error;                                                                \\",
          "668:     Bit_Chain *hdl_dat = dat;                                                 \\",
          "670:     Dwg_Data *dwg = obj->parent;                                              \\",
          "671:     LOG_INFO (\"Encode entity \" #token \"\\n\")                                   \\",
          "672:     error = dwg_encode_entity (obj, dat, hdl_dat, str_dat);                   \\",
          "673:     if (error)                                                                \\",
          "674:       return error;",
          "",
          "[Removed Lines]",
          "669:     Bit_Chain *str_dat = dat;                                                 \\",
          "",
          "[Added Lines]",
          "687:     Bit_Chain *str_dat = dat; /* a ref */                                     \\",
          "690:     SINCE (R_2007) {                                                          \\",
          "691:       Bit_Chain _hdl_dat;                                                     \\",
          "692:       hdl_dat = &_hdl_dat; /* a new copy */                                   \\",
          "693:       bit_chain_init (hdl_dat, 128);                                          \\",
          "694:     }                                                                         \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "688:     BITCODE_BL vcount, rcount1, rcount2, rcount3, rcount4;                    \\",
          "689:     int error;                                                                \\",
          "690:     Bit_Chain *hdl_dat = dat;                                                 \\",
          "692:     Dwg_Data *dwg = obj->parent;                                              \\",
          "693:     Dwg_Object_##token *_obj = obj->tio.object ? obj->tio.object->tio.token : NULL; \\",
          "694:     error = dwg_encode_object (obj, dat, hdl_dat, str_dat);                   \\",
          "695:     if (error)                                                                \\",
          "696:       return error;                                                           \\",
          "",
          "[Removed Lines]",
          "691:     Bit_Chain *str_dat = dat;                                                 \\",
          "",
          "[Added Lines]",
          "714:     Bit_Chain *str_dat = dat; /* a ref */                                     \\",
          "717:     SINCE (R_2007) {                                                          \\",
          "718:       Bit_Chain _hdl_dat;                                                     \\",
          "719:       hdl_dat = &_hdl_dat; /* a new copy */                                   \\",
          "720:       bit_chain_init (hdl_dat, 128);                                          \\",
          "721:     }                                                                         \\",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2512:   }",
          "2513:   obj->was_bitsize_set = 0;",
          "2514:   if (obj->bitsize)",
          "2516:   SINCE (R_2007)",
          "2517:   {",
          "",
          "[Removed Lines]",
          "2515:     obj->hdlpos = obj->address * 8 + obj->bitsize;",
          "",
          "[Added Lines]",
          "2543:     {",
          "2544:       obj->hdlpos = obj->address * 8 + obj->bitsize;",
          "2545:     }",
          "",
          "---------------"
        ],
        "src/in_json.c||src/in_json.c": [
          "File: src/in_json.c -> src/in_json.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "77: #define ACTION injson",
          "79: #define IS_JSON",
          "",
          "[Removed Lines]",
          "78: #define IS_ENCODE",
          "",
          "[Added Lines]",
          "78: #define IS_ENCODER",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3212:   return error;",
          "3213: }",
          "3216: #undef IS_JSON",
          "",
          "[Removed Lines]",
          "3215: #undef IS_ENCODE",
          "",
          "[Added Lines]",
          "3215: #undef IS_ENCODER",
          "",
          "---------------"
        ]
      }
    }
  ]
}