{
  "cve_id": "CVE-2023-27597",
  "cve_desc": "OpenSIPS is a Session Initiation Protocol (SIP) server implementation. Prior to versions 3.1.8 and 3.2.5, when a specially crafted SIP message is processed by the function `rewrite_ruri`, a crash occurs due to a segmentation fault. This issue causes the server to crash. It affects configurations containing functions that make use of the affected code, such as the function `setport`. This issue has been fixed in version 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
  "patch_info": {
    "commit_hash": "b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/b2dffe4b5cd81182c9c8eabb6c96aac96c7acfe3",
    "files": [
      "parser/parse_uri.c"
    ],
    "message": "[core] fix parse_uri() parsing\n\nIssue discovered during OpenSIPS Security Audit 2022,\n\tby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-358f-935m-7p9c",
    "before_after_code_files": [
      "parser/parse_uri.c||parser/parse_uri.c"
    ]
  },
  "patch_diff": {
    "parser/parse_uri.c||parser/parse_uri.c": [
      "File: parser/parse_uri.c -> parser/parse_uri.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1532:   case TELS_URI_T:",
      "1534:    uri->user=uri->host;",
      "1536:    uri->host.len=0;",
      "1537:    break;",
      "1538:   case SIP_URI_T:",
      "",
      "[Removed Lines]",
      "1535:    uri->host.s=\"\";",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1543:   case URN_NENA_SERVICE_URI_T:",
      "1544:    uri->user.s=0;",
      "1545:    uri->user.len=0;",
      "1548:    break;",
      "1549:   case ERROR_URI_T:",
      "1550:    LM_ERR(\"unexpected error (BUG?)\\n\");",
      "",
      "[Removed Lines]",
      "1546:    uri->host.s=\"\";",
      "1547:    uri->host.len=0;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b9a1cb0c9103e46a11b26cc904c546acaa011032",
      "candidate_info": {
        "commit_hash": "b9a1cb0c9103e46a11b26cc904c546acaa011032",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/b9a1cb0c9103e46a11b26cc904c546acaa011032",
        "files": [
          "modules/rtp_relay/rtp_relay_ctx.c"
        ],
        "message": "rtp_relay: fix typo in test for ACK in late\n\n(cherry picked from commit 118dcebac717b6a3299407ac152719f38fda5bd4)",
        "before_after_code_files": [
          "modules/rtp_relay/rtp_relay_ctx.c||modules/rtp_relay/rtp_relay_ctx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/rtp_relay/rtp_relay_ctx.c||modules/rtp_relay/rtp_relay_ctx.c": [
          "File: modules/rtp_relay/rtp_relay_ctx.c -> modules/rtp_relay/rtp_relay_ctx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "747:  if (!ret)",
          "748:   return;",
          "749:  if (msg->REQ_METHOD == METHOD_ACK) {",
          "751:    return;",
          "752:   memset(&info, 0, sizeof info);",
          "753:   info.msg = msg;",
          "",
          "[Removed Lines]",
          "750:   if (ctx->main || !rtp_sess_late(ctx->main))",
          "",
          "[Added Lines]",
          "750:   if (!ctx->main || !rtp_sess_late(ctx->main))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f010ce818dc4c74732008ffbbfd2eb9f54465a64",
      "candidate_info": {
        "commit_hash": "f010ce818dc4c74732008ffbbfd2eb9f54465a64",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/f010ce818dc4c74732008ffbbfd2eb9f54465a64",
        "files": [
          "modules/mi_script/mi_script.c"
        ],
        "message": "mi_script: prevent leak on write error case\n\nThanks go to Suchi Sahoo from Five9 for reporting it\n\n(cherry picked from commit 443fdf90e635b48debcf71449e6c72754e3b24c7)",
        "before_after_code_files": [
          "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c": [
          "File: modules/mi_script/mi_script.c -> modules/mi_script/mi_script.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "541:  mi_request_t *req;",
          "542: };",
          "544: static void mi_script_async_resume_job(int sender, void *param)",
          "545: {",
          "546:  int ret;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "544: static void mi_script_async_job_free(struct mi_script_async_job *job)",
          "545: {",
          "546:  if (job->msg.s)",
          "547:   shm_free(job->msg.s);",
          "548:  shm_free(job);",
          "549: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "550:  do {",
          "551:   ret = write(job->fd, &r, sizeof r);",
          "552:  } while (ret < 0 && (errno == EINTR || errno == EAGAIN));",
          "554:   LM_ERR(\"could not notify resume: %s\\n\", strerror(errno));",
          "555: }",
          "557: static void mi_script_async_job(mi_response_t *resp, struct mi_script_async_job *job)",
          "",
          "[Removed Lines]",
          "553:  if (ret < 0)",
          "",
          "[Added Lines]",
          "560:  if (ret < 0) {",
          "562:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "573:  if (ipc_send_rpc(job->process_no, mi_script_async_resume_job, job) < 0) {",
          "574:   LM_ERR(\"could not resume async MI command!\\n\");",
          "578:  }",
          "579: }",
          "",
          "[Removed Lines]",
          "575:   if (job->msg.s)",
          "576:    shm_free(job->msg.s);",
          "577:   shm_free(job);",
          "",
          "[Added Lines]",
          "583:   mi_script_async_job_free(job);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "654:    ret = -3;",
          "655:  }",
          "656: end:",
          "660:  return ret;",
          "661: }",
          "",
          "[Removed Lines]",
          "657:  if (job->msg.s)",
          "658:   shm_free(job->msg.s);",
          "659:  shm_free(job);",
          "",
          "[Added Lines]",
          "663:  mi_script_async_job_free(job);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "edc90fb544d7f2fba5862352ef1a17f4a3838034",
      "candidate_info": {
        "commit_hash": "edc90fb544d7f2fba5862352ef1a17f4a3838034",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/edc90fb544d7f2fba5862352ef1a17f4a3838034",
        "files": [
          "modules/dialog/dialog.c",
          "modules/dialog/dlg_replication.c",
          "modules/dialog/dlg_replication.h"
        ],
        "message": "dialog: fix incorrectly discarded dialogs after sync\n\nSyncing while the donor node is also sending live replication packets\nmay lead to incorrectly discarding some of the newly received dialogs.\nThere were two ways in which new dialogs were actually mistaken as old,\n\"local\" dialogs from before syncing:\n* overwriting the dialog flags when handling a replicated update;\n* not marking live replicated dialogs received during sync as \"new\" dialogs.\n\n(cherry picked from commit 46e9a53ead0574272609038dc9dbfb92f9087fe4)",
        "before_after_code_files": [
          "modules/dialog/dialog.c||modules/dialog/dialog.c",
          "modules/dialog/dlg_replication.c||modules/dialog/dlg_replication.c",
          "modules/dialog/dlg_replication.h||modules/dialog/dlg_replication.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/dialog/dialog.c||modules/dialog/dialog.c": [
          "File: modules/dialog/dialog.c -> modules/dialog/dialog.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "830:   return -1;",
          "831:  }",
          "838:   return -1;",
          "839:  }",
          "870:  if ( register_timer( \"dlg-timer\", dlg_timer_routine, NULL, 1,",
          "871:  TIMER_FLAG_DELAY_ON_DELAY)<0 ) {",
          "",
          "[Removed Lines]",
          "835:  if (dialog_repl_cluster < 0) {",
          "836:   LM_ERR(\"Invalid dialog_replication_cluster, must be 0 or \"",
          "837:    \"a positive cluster id\\n\");",
          "840:  if (profile_repl_cluster < 0) {",
          "841:   LM_ERR(\"Invalid profile_repl_cluster, must be 0 or \"",
          "842:    \"a positive cluster id\\n\");",
          "843:   return -1;",
          "844:  }",
          "846:  if ((dialog_repl_cluster || profile_repl_cluster) &&",
          "847:   (load_clusterer_api(&clusterer_api) < 0)) {",
          "848:   LM_DBG(\"failed to load clusterer API - is clusterer module loaded?\\n\");",
          "849:   return -1;",
          "850:  }",
          "852:  if (profile_repl_cluster && clusterer_api.register_capability(",
          "853:   &prof_repl_cap, receive_prof_repl, NULL, profile_repl_cluster, 0,",
          "854:   NODE_CMP_ANY) < 0) {",
          "855:   LM_ERR(\"Cannot register clusterer callback for profile replication!\\n\");",
          "856:   return -1;",
          "857:  }",
          "859:  if (dialog_repl_cluster) {",
          "860:   if (clusterer_api.register_capability(&dlg_repl_cap, receive_dlg_repl,",
          "861:     rcv_cluster_event, dialog_repl_cluster, 1, NODE_CMP_ANY) < 0) {",
          "862:    LM_ERR(\"Cannot register clusterer callback for dialog replication!\\n\");",
          "863:    return -1;",
          "864:   }",
          "866:   if (clusterer_api.request_sync(&dlg_repl_cap, dialog_repl_cluster, 0) < 0)",
          "867:    LM_ERR(\"Sync request failed\\n\");",
          "868:  }",
          "",
          "[Added Lines]",
          "833:  if (dlg_init_clustering() < 0) {",
          "834:   LM_ERR(\"Failed to initialize clustering\\n\");",
          "",
          "---------------"
        ],
        "modules/dialog/dlg_replication.c||modules/dialog/dlg_replication.c": [
          "File: modules/dialog/dlg_replication.c -> modules/dialog/dlg_replication.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: str shtag_dlg_val = str_init(\"dlgX_shtag\");",
          "48: static int get_shtag_sync_status(struct dlg_cell *dlg);",
          "50: static struct socket_info * fetch_socket_info(str *addr)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: char *dlg_sync_in_progress;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:  return 0;",
          "121: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "125: int dlg_init_clustering(void)",
          "126: {",
          "129:  if (dialog_repl_cluster < 0) {",
          "130:   LM_ERR(\"Invalid dialog_replication_cluster, must be 0 or \"",
          "131:    \"a positive cluster id\\n\");",
          "132:   return -1;",
          "133:  }",
          "134:  if (profile_repl_cluster < 0) {",
          "135:   LM_ERR(\"Invalid profile_repl_cluster, must be 0 or \"",
          "136:    \"a positive cluster id\\n\");",
          "137:   return -1;",
          "138:  }",
          "140:  if ((dialog_repl_cluster || profile_repl_cluster) &&",
          "141:   (load_clusterer_api(&clusterer_api) < 0)) {",
          "142:   LM_DBG(\"failed to load clusterer API - is clusterer module loaded?\\n\");",
          "143:   return -1;",
          "144:  }",
          "146:  if (profile_repl_cluster && clusterer_api.register_capability(",
          "147:   &prof_repl_cap, receive_prof_repl, NULL, profile_repl_cluster, 0,",
          "148:   NODE_CMP_ANY) < 0) {",
          "149:   LM_ERR(\"Cannot register clusterer callback for profile replication!\\n\");",
          "150:   return -1;",
          "151:  }",
          "153:  if (dialog_repl_cluster) {",
          "154:   if (clusterer_api.register_capability(&dlg_repl_cap, receive_dlg_repl,",
          "155:     rcv_cluster_event, dialog_repl_cluster, 1, NODE_CMP_ANY) < 0) {",
          "156:    LM_ERR(\"Cannot register clusterer callback for dialog replication!\\n\");",
          "157:    return -1;",
          "158:   }",
          "160:   dlg_sync_in_progress = shm_malloc(sizeof *dlg_sync_in_progress);",
          "161:   if (*dlg_sync_in_progress) {",
          "162:    LM_ERR(\"no more shm memory!\\n\");",
          "163:    return -1;",
          "164:   }",
          "167:   if (clusterer_api.request_sync(&dlg_repl_cap, dialog_repl_cluster, 0) < 0)",
          "168:    LM_ERR(\"Sync request failed\\n\");",
          "170:  }",
          "172:  return 0;",
          "173: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "178:    dlg->flags &= ~DLG_FLAG_FROM_DB;",
          "180:     dlg->flags |= DLG_FLAG_SYNCED;",
          "181:    dlg_unlock(d_table, d_entry);",
          "182:    return 0;",
          "183:   }",
          "",
          "[Removed Lines]",
          "179:    if (from_sync)",
          "",
          "[Added Lines]",
          "231:    if (from_sync || *dlg_sync_in_progress)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "328:    return 0;",
          "329:   }",
          "330:  }",
          "332:  if (dlg_db_mode == DB_MODE_DELAYED) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "383:  } else if (*dlg_sync_in_progress) {",
          "386:   dlg->flags |= DLG_FLAG_SYNCED;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "389:  int timeout, h_entry;",
          "390:  str st;",
          "391:  struct dlg_entry *d_entry;",
          "393:  unsigned int h_id;",
          "394:  short pkg_ver = get_bin_pkg_version(packet);",
          "",
          "[Removed Lines]",
          "392:  int rcv_flags, save_new_flag;",
          "",
          "[Added Lines]",
          "449:  int rcv_flags, save_new_flag, save_sync_flag;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "492:  save_new_flag = dlg->flags & DLG_FLAG_NEW;",
          "493:  dlg->flags = rcv_flags;",
          "496:  bin_pop_int(packet, &timeout);",
          "497:  bin_skip_int(packet, 2);",
          "",
          "[Removed Lines]",
          "494:  dlg->flags |= ((save_new_flag ? DLG_FLAG_NEW : 0) | DLG_FLAG_CHANGED);",
          "",
          "[Added Lines]",
          "550:  save_sync_flag = dlg->flags & DLG_FLAG_SYNCED;",
          "552:  dlg->flags |= ((save_new_flag ? DLG_FLAG_NEW : 0) |",
          "553:   (save_sync_flag ? DLG_FLAG_SYNCED : 0) | DLG_FLAG_CHANGED);",
          "",
          "---------------"
        ],
        "modules/dialog/dlg_replication.h||modules/dialog/dlg_replication.h": [
          "File: modules/dialog/dlg_replication.h -> modules/dialog/dlg_replication.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: extern int cluster_auto_sync;",
          "53: void replicate_dialog_created(struct dlg_cell *dlg);",
          "54: void replicate_dialog_updated(struct dlg_cell *dlg);",
          "55: void replicate_dialog_deleted(struct dlg_cell *dlg);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53: int dlg_init_clustering(void);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e4f4543218df36b8bc0f9bce2870a898123deb06",
      "candidate_info": {
        "commit_hash": "e4f4543218df36b8bc0f9bce2870a898123deb06",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/e4f4543218df36b8bc0f9bce2870a898123deb06",
        "files": [
          "modules/call_center/call_center.c"
        ],
        "message": "[call_center] avoid a negative setup_time in CDR\n\nIn the DB schema, the setup_time is an unsigned, and a -1 value was computed while a call was rejected by an agent\n\n(cherry picked from commit 9dc28a91c68db792f1df4cf1d6ce8d0faf83ad0e)",
        "before_after_code_files": [
          "modules/call_center/call_center.c||modules/call_center/call_center.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/call_center/call_center.c||modules/call_center/call_center.c": [
          "File: modules/call_center/call_center.c -> modules/call_center/call_center.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "531:  lock_release( data->lock );",
          "537:  type = (stat==NULL) ? -1 : ((prev_state==CC_CALL_TOAGENT && stat->call_time)? 0 : 1);",
          "",
          "[Removed Lines]",
          "533:  if (call->setup_time==-1 && stat)",
          "534:   call->setup_time = stat->setup_time;",
          "",
          "[Added Lines]",
          "533:  if (call->setup_time==-1)",
          "534:   call->setup_time = stat ? stat->setup_time : 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1f3a0f625c223f5f953ca75027072e70a970bd1a",
      "candidate_info": {
        "commit_hash": "1f3a0f625c223f5f953ca75027072e70a970bd1a",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/1f3a0f625c223f5f953ca75027072e70a970bd1a",
        "files": [
          "modules/fraud_detection/frd_events.c"
        ],
        "message": "fraud_detection: Do not raise call-duration alerts for CANCEL/487 calls\n\n(cherry picked from commit 1c4a8a5ac7f685d5515191cd1654aa93c1f72739)",
        "before_after_code_files": [
          "modules/fraud_detection/frd_events.c||modules/fraud_detection/frd_events.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/fraud_detection/frd_events.c||modules/fraud_detection/frd_events.c": [
          "File: modules/fraud_detection/frd_events.c -> modules/fraud_detection/frd_events.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:  extern str call_dur_name;",
          "152:  frd_dlg_param *frdparam = (frd_dlg_param*) *(params->param);",
          "156:   return;",
          "159:  unsigned int duration = time(NULL) - dlg->start_ts;",
          "160:  LM_DBG(\"call-duration: %u sec (warn: %u, crit: %u), dlgcb: %d\\n\",",
          "161:         duration, frdparam->calldur_warn, frdparam->calldur_crit, type);",
          "164:   raise_critical_event(&call_dur_name, &duration,",
          "165:     &frdparam->calldur_crit,",
          "166:     &frdparam->user, &frdparam->number, &frdparam->ruleid);",
          "169:   raise_warning_event(&call_dur_name, &duration,",
          "170:     &frdparam->calldur_warn,",
          "171:     &frdparam->user, &frdparam->number, &frdparam->ruleid);",
          "173:  lock_get(&frdparam->stats->lock);",
          "175:   --frdparam->stats->stats.concurrent_calls;",
          "176:  lock_release(&frdparam->stats->lock);",
          "177: }",
          "179: void free_dialog_CB_param(void *param)",
          "",
          "[Removed Lines]",
          "154:  if (frdparam->dlg_terminated ||",
          "155:          !(type & (DLGCB_FAILED|DLGCB_TERMINATED|DLGCB_EXPIRED)))",
          "157:  frdparam->dlg_terminated = 1;",
          "163:  if (frdparam->calldur_crit && duration >= frdparam->calldur_crit)",
          "168:  else if (frdparam->calldur_warn && duration >= frdparam->calldur_warn)",
          "174:  if (frdparam->interval_id == frdparam->stats->interval_id)",
          "",
          "[Added Lines]",
          "154:  if (!(type & (DLGCB_FAILED|DLGCB_TERMINATED|DLGCB_EXPIRED)))",
          "162:  if (!(type & DLGCB_FAILED) && frdparam->calldur_crit",
          "163:          && duration >= frdparam->calldur_crit)",
          "168:  else if (!(type & DLGCB_FAILED) && frdparam->calldur_warn",
          "169:              && duration >= frdparam->calldur_warn)",
          "175:  if (!frdparam->dlg_terminated",
          "176:          && frdparam->interval_id == frdparam->stats->interval_id)",
          "180:  frdparam->dlg_terminated = 1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}