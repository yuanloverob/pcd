{
  "cve_id": "CVE-2023-39975",
  "cve_desc": "kdc/do_tgs_req.c in MIT Kerberos 5 (aka krb5) 1.21 before 1.21.2 has a double free that is reachable if an authenticated user can trigger an authorization-data handling failure. Incorrect data is copied from one ticket to another.",
  "repo": "krb5/krb5",
  "patch_hash": "88a1701b423c13991a8064feeb26952d3641d840",
  "patch_info": {
    "commit_hash": "88a1701b423c13991a8064feeb26952d3641d840",
    "repo": "krb5/krb5",
    "commit_url": "https://github.com/krb5/krb5/commit/88a1701b423c13991a8064feeb26952d3641d840",
    "files": [
      "src/kdc/do_tgs_req.c"
    ],
    "message": "Fix double-free in KDC TGS processing\n\nWhen issuing a ticket for a TGS renew or validate request, copy only\nthe server field from the outer part of the header ticket to the new\nticket.  Copying the whole structure causes the enc_part pointer to be\naliased to the header ticket until krb5_encrypt_tkt_part() is called,\nresulting in a double-free if handle_authdata() fails.\n\n[ghudson@mit.edu: changed the fix to avoid aliasing enc_part rather\nthan check for aliasing before freeing; rewrote commit message]\n\nCVE-2023-39975:\n\nIn MIT krb5 release 1.21, an authenticated attacker can cause a KDC to\nfree the same pointer twice if it can induce a failure in\nauthorization data handling.\n\nticket: 9101 (new)\ntags: pullup\ntarget_version: 1.21-next",
    "before_after_code_files": [
      "src/kdc/do_tgs_req.c||src/kdc/do_tgs_req.c"
    ]
  },
  "patch_diff": {
    "src/kdc/do_tgs_req.c||src/kdc/do_tgs_req.c": [
      "File: src/kdc/do_tgs_req.c -> src/kdc/do_tgs_req.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1010:     }",
      "1012:     if (t->req->kdc_options & (KDC_OPT_VALIDATE | KDC_OPT_RENEW)) {",
      "1015:         enc_tkt_reply = *t->header_tkt->enc_part2;",
      "1016:         enc_tkt_reply.authorization_data = NULL;",
      "1017:     } else {",
      "",
      "[Removed Lines]",
      "1014:         ticket_reply = *t->header_tkt;",
      "",
      "[Added Lines]",
      "1015:         ticket_reply.server = t->header_tkt->server;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f4dcb7e442e0f314db5b4f7449aa101cbb28bdd4",
      "candidate_info": {
        "commit_hash": "f4dcb7e442e0f314db5b4f7449aa101cbb28bdd4",
        "repo": "krb5/krb5",
        "commit_url": "https://github.com/krb5/krb5/commit/f4dcb7e442e0f314db5b4f7449aa101cbb28bdd4",
        "files": [
          "src/kdc/do_tgs_req.c"
        ],
        "message": "Fix double-free in KDC TGS processing\n\nWhen issuing a ticket for a TGS renew or validate request, copy only\nthe server field from the outer part of the header ticket to the new\nticket.  Copying the whole structure causes the enc_part pointer to be\naliased to the header ticket until krb5_encrypt_tkt_part() is called,\nresulting in a double-free if handle_authdata() fails.\n\n[ghudson@mit.edu: changed the fix to avoid aliasing enc_part rather\nthan check for aliasing before freeing; rewrote commit message]\n\nCVE-2023-39975:\n\nIn MIT krb5 release 1.21, an authenticated attacker can cause a KDC to\nfree the same pointer twice if it can induce a failure in\nauthorization data handling.\n\n(cherry picked from commit 88a1701b423c13991a8064feeb26952d3641d840)\n\nticket: 9101\nversion_fixed: 1.21.2",
        "before_after_code_files": [
          "src/kdc/do_tgs_req.c||src/kdc/do_tgs_req.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/kdc/do_tgs_req.c||src/kdc/do_tgs_req.c"
          ],
          "candidate": [
            "src/kdc/do_tgs_req.c||src/kdc/do_tgs_req.c"
          ]
        }
      },
      "candidate_diff": {
        "src/kdc/do_tgs_req.c||src/kdc/do_tgs_req.c": [
          "File: src/kdc/do_tgs_req.c -> src/kdc/do_tgs_req.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1010:     }",
          "1012:     if (t->req->kdc_options & (KDC_OPT_VALIDATE | KDC_OPT_RENEW)) {",
          "1015:         enc_tkt_reply = *t->header_tkt->enc_part2;",
          "1016:         enc_tkt_reply.authorization_data = NULL;",
          "1017:     } else {",
          "",
          "[Removed Lines]",
          "1014:         ticket_reply = *t->header_tkt;",
          "",
          "[Added Lines]",
          "1015:         ticket_reply.server = t->header_tkt->server;",
          "",
          "---------------"
        ]
      }
    }
  ]
}