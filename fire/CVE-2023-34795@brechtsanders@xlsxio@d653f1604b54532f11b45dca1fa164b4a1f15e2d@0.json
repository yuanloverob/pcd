{
  "cve_id": "CVE-2023-34795",
  "cve_desc": "xlsxio v0.1.2 to v0.2.34 was discovered to contain a free of uninitialized pointer in the xlsxioread_sheetlist_close() function. This vulnerability allows attackers to cause a Denial of Service (DoS) via a crafted XLSX file.",
  "repo": "brechtsanders/xlsxio",
  "patch_hash": "d653f1604b54532f11b45dca1fa164b4a1f15e2d",
  "patch_info": {
    "commit_hash": "d653f1604b54532f11b45dca1fa164b4a1f15e2d",
    "repo": "brechtsanders/xlsxio",
    "commit_url": "https://github.com/brechtsanders/xlsxio/commit/d653f1604b54532f11b45dca1fa164b4a1f15e2d",
    "files": [
      "Changelog.txt",
      "include/xlsxio_version.h",
      "lib/xlsxio_read.c"
    ],
    "message": "",
    "before_after_code_files": [
      "include/xlsxio_version.h||include/xlsxio_version.h",
      "lib/xlsxio_read.c||lib/xlsxio_read.c"
    ]
  },
  "patch_diff": {
    "include/xlsxio_version.h||include/xlsxio_version.h": [
      "File: include/xlsxio_version.h -> include/xlsxio_version.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "50: #define XLSXIO_VERSION_MINOR 2",
      "",
      "[Removed Lines]",
      "52: #define XLSXIO_VERSION_MICRO 34",
      "",
      "[Added Lines]",
      "52: #define XLSXIO_VERSION_MICRO 35",
      "",
      "---------------"
    ],
    "lib/xlsxio_read.c||lib/xlsxio_read.c": [
      "File: lib/xlsxio_read.c -> lib/xlsxio_read.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1410:   result->sheetcallbackdata.xmlparser = NULL;",
      "1411:   result->sheetcallbackdata.callback = xlsxioread_list_sheets_resumable_callback;",
      "1412:   result->sheetcallbackdata.callbackdata = result;",
      "1413:   result->nextsheetname = NULL;",
      "1414:   if ((result->zipfile = XML_Char_openzip(handle->zip, mainsheetfile, 0)) != NULL) {",
      "1415:     result->xmlparser = expat_process_zip_file_suspendable(result->zipfile, main_sheet_list_expat_callback_element_start, NULL, NULL, &result->sheetcallbackdata);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1413:   result->xmlparser = NULL;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f008507901a3aaa391eb22e952bb2b6b2f0ae42b",
      "candidate_info": {
        "commit_hash": "f008507901a3aaa391eb22e952bb2b6b2f0ae42b",
        "repo": "brechtsanders/xlsxio",
        "commit_url": "https://github.com/brechtsanders/xlsxio/commit/f008507901a3aaa391eb22e952bb2b6b2f0ae42b",
        "files": [
          "Changelog.txt",
          "include/xlsxio_version.h",
          "src/xlsxio_xlsx2csv.c"
        ],
        "message": "-",
        "before_after_code_files": [
          "include/xlsxio_version.h||include/xlsxio_version.h",
          "src/xlsxio_xlsx2csv.c||src/xlsxio_xlsx2csv.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "include/xlsxio_version.h||include/xlsxio_version.h"
          ],
          "candidate": [
            "include/xlsxio_version.h||include/xlsxio_version.h"
          ]
        }
      },
      "candidate_diff": {
        "include/xlsxio_version.h||include/xlsxio_version.h": [
          "File: include/xlsxio_version.h -> include/xlsxio_version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: #define XLSXIO_VERSION_MINOR 2",
          "",
          "[Removed Lines]",
          "52: #define XLSXIO_VERSION_MICRO 35",
          "",
          "[Added Lines]",
          "52: #define XLSXIO_VERSION_MICRO 36",
          "",
          "---------------"
        ],
        "src/xlsxio_xlsx2csv.c||src/xlsxio_xlsx2csv.c": [
          "File: src/xlsxio_xlsx2csv.c -> src/xlsxio_xlsx2csv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:   xlsxioreader xlsxioread;",
          "32:   FILE* dst;",
          "33:   int nobom;",
          "36:   const char* newline;",
          "37:   char separator;",
          "38:   char quote;",
          "",
          "[Removed Lines]",
          "34:   int numbers;",
          "35:   int file_count;",
          "",
          "[Added Lines]",
          "34:   int sheetnumbers;",
          "35:   int sheetcount;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:   char* filename;",
          "79:   struct xlsx_data* data = (struct xlsx_data*)callbackdata;",
          "82:     fprintf(stderr, \"Memory allocation error\\n\");",
          "83:   } else {",
          "96:     strcpy(filename, data->filename);",
          "97:     strcat(filename, \".\");",
          "100:   else",
          "101:      strcat(filename, name);",
          "103:     strcat(filename, \".csv\");",
          "105:     printf(\"Sheet found: %s, exporting to: %s\\n\", name, filename);",
          "",
          "[Removed Lines]",
          "81:   if ((filename = (char*)malloc(strlen(data->filename) + strlen(name) + 6)) == NULL ){",
          "85:  char str[16];",
          "87:       if (data->numbers)",
          "88:   {",
          "90:    snprintf(str, sizeof(str), \"%d\", data->file_count++);",
          "91:   }",
          "98:       if (data->numbers)",
          "99:      strcat(filename, str);",
          "",
          "[Added Lines]",
          "81:   if ((filename = (char*)malloc(strlen(data->filename) + (data->sheetnumbers ? 16 : strlen(name)) + 6)) == NULL ){",
          "84:     data->sheetcount++;",
          "88:     if (data->sheetnumbers)",
          "89:       itoa(data->sheetcount, filename + strlen(filename), 10);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "130:     \"  -s separator\\tspecify separator to use (default is comma)\\n\"",
          "131:     \"  -b          \\tdon't write UTF-8 BOM signature\\n\"",
          "132:     \"  -n          \\tuse UNIX style line breaks\\n\"",
          "134:     \"  xlsxfile    \\tpath to .xlsx file (multiple may be specified)\\n\"",
          "135:     \"Description:\\n\"",
          "136:     \"Converts all sheets in all specified .xlsx files to individual CSV (Comma Separated Values) files.\\n\"",
          "",
          "[Removed Lines]",
          "133:     \"  -u          \\toutput sheet number instead of sheet name\\n\"",
          "",
          "[Added Lines]",
          "122:     \"  -u          \\tuse sheet number in output file name (instead of sheet name)\\n\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "146:   xlsxioreader xlsxioread;",
          "147:   struct xlsx_data sheetdata = {",
          "148:     .nobom = 0,",
          "151:     .newline = \"\\r\\n\",",
          "152:     .separator = ',',",
          "153:     .quote = '\"',",
          "",
          "[Removed Lines]",
          "149:     .numbers = 0,",
          "150:     .file_count = 1,",
          "",
          "[Added Lines]",
          "138:     .sheetnumbers = 0,",
          "139:     .sheetcount = 0,",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "179:           sheetdata.nobom = 1;",
          "180:           continue;",
          "181:         case 'u' :",
          "183:           continue;",
          "184:         case 'n' :",
          "185:           sheetdata.newline = \"\\n\";",
          "",
          "[Removed Lines]",
          "182:           sheetdata.numbers = 1;",
          "",
          "[Added Lines]",
          "171:           sheetdata.sheetnumbers = 1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}