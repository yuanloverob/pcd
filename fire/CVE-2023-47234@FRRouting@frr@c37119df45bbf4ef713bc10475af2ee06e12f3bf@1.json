{
  "cve_id": "CVE-2023-47234",
  "cve_desc": "An issue was discovered in FRRouting FRR through 9.0.1. A crash can occur when processing a crafted BGP UPDATE message with a MP_UNREACH_NLRI attribute and additional NLRI data (that lacks mandatory path attributes).",
  "repo": "FRRouting/frr",
  "patch_hash": "c37119df45bbf4ef713bc10475af2ee06e12f3bf",
  "patch_info": {
    "commit_hash": "c37119df45bbf4ef713bc10475af2ee06e12f3bf",
    "repo": "FRRouting/frr",
    "commit_url": "https://github.com/FRRouting/frr/commit/c37119df45bbf4ef713bc10475af2ee06e12f3bf",
    "files": [
      "bgpd/bgp_attr.c",
      "bgpd/bgp_attr.h",
      "bgpd/bgp_packet.c"
    ],
    "message": "bgpd: Ignore handling NLRIs if we received MP_UNREACH_NLRI\n\nIf we receive MP_UNREACH_NLRI, we should stop handling remaining NLRIs if\nno mandatory path attributes received.\n\nIn other words, if MP_UNREACH_NLRI received, the remaining NLRIs should be handled\nas a new data, but without mandatory attributes, it's a malformed packet.\n\nIn normal case, this MUST not happen at all, but to avoid crashing bgpd, we MUST\nhandle that.\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>",
    "before_after_code_files": [
      "bgpd/bgp_attr.c||bgpd/bgp_attr.c",
      "bgpd/bgp_attr.h||bgpd/bgp_attr.h",
      "bgpd/bgp_packet.c||bgpd/bgp_packet.c"
    ]
  },
  "patch_diff": {
    "bgpd/bgp_attr.c||bgpd/bgp_attr.c": [
      "File: bgpd/bgp_attr.c -> bgpd/bgp_attr.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3399:      !length)",
      "3400:   return BGP_ATTR_PARSE_WITHDRAW;",
      "3411:  if (!CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_ORIGIN)))",
      "3412:   type = BGP_ATTR_ORIGIN;",
      "",
      "[Removed Lines]",
      "3403:     to carry any other path attributes.\", though if MP_REACH_NLRI or NLRI",
      "3404:     are present, it should.  Check for any other attribute being present",
      "3405:     instead.",
      "3407:  if ((!CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_MP_REACH_NLRI)) &&",
      "3408:       CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_MP_UNREACH_NLRI))))",
      "3409:   return BGP_ATTR_PARSE_PROCEED;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "3426:      && !CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_LOCAL_PREF)))",
      "3427:   type = BGP_ATTR_LOCAL_PREF;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3425:  if (!CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_MP_REACH_NLRI)) &&",
      "3426:      CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_MP_UNREACH_NLRI)))",
      "3427:   return type ? BGP_ATTR_PARSE_MISSING_MANDATORY",
      "3428:        : BGP_ATTR_PARSE_PROCEED;",
      "",
      "---------------"
    ],
    "bgpd/bgp_attr.h||bgpd/bgp_attr.h": [
      "File: bgpd/bgp_attr.h -> bgpd/bgp_attr.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "366:  BGP_ATTR_PARSE_ERROR_NOTIFYPLS = -3,",
      "367: };",
      "369: struct bpacket_attr_vec_arr;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "367:  BGP_ATTR_PARSE_MISSING_MANDATORY = -4,",
      "",
      "---------------"
    ],
    "bgpd/bgp_packet.c||bgpd/bgp_packet.c": [
      "File: bgpd/bgp_packet.c -> bgpd/bgp_packet.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2360:  update_len = end - stream_pnt(s);",
      "2364:   nlris[NLRI_UPDATE].afi = AFI_IP;",
      "2365:   nlris[NLRI_UPDATE].safi = SAFI_UNICAST;",
      "",
      "[Removed Lines]",
      "2362:  if (update_len && attribute_len) {",
      "",
      "[Added Lines]",
      "2366:  if (update_len && attribute_len &&",
      "2367:      attr_parse_ret != BGP_ATTR_PARSE_MISSING_MANDATORY) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a0c4ec2f52b299d45a77b0fcb29452329d22dce1",
      "candidate_info": {
        "commit_hash": "a0c4ec2f52b299d45a77b0fcb29452329d22dce1",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/a0c4ec2f52b299d45a77b0fcb29452329d22dce1",
        "files": [
          "bgpd/bgp_attr.c",
          "bgpd/bgp_attr.h",
          "bgpd/bgp_packet.c"
        ],
        "message": "bgpd: Ignore handling NLRIs if we received MP_UNREACH_NLRI\n\nIf we receive MP_UNREACH_NLRI, we should stop handling remaining NLRIs if\nno mandatory path attributes received.\n\nIn other words, if MP_UNREACH_NLRI received, the remaining NLRIs should be handled\nas a new data, but without mandatory attributes, it's a malformed packet.\n\nIn normal case, this MUST not happen at all, but to avoid crashing bgpd, we MUST\nhandle that.\n\nReported-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Donatas Abraitis <donatas@opensourcerouting.org>",
        "before_after_code_files": [
          "bgpd/bgp_attr.c||bgpd/bgp_attr.c",
          "bgpd/bgp_attr.h||bgpd/bgp_attr.h",
          "bgpd/bgp_packet.c||bgpd/bgp_packet.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "bgpd/bgp_attr.c||bgpd/bgp_attr.c",
            "bgpd/bgp_attr.h||bgpd/bgp_attr.h",
            "bgpd/bgp_packet.c||bgpd/bgp_packet.c"
          ],
          "candidate": [
            "bgpd/bgp_attr.c||bgpd/bgp_attr.c",
            "bgpd/bgp_attr.h||bgpd/bgp_attr.h",
            "bgpd/bgp_packet.c||bgpd/bgp_packet.c"
          ]
        }
      },
      "candidate_diff": {
        "bgpd/bgp_attr.c||bgpd/bgp_attr.c": [
          "File: bgpd/bgp_attr.c -> bgpd/bgp_attr.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3414:      !length)",
          "3415:   return BGP_ATTR_PARSE_WITHDRAW;",
          "3426:  if (!CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_ORIGIN)))",
          "3427:   type = BGP_ATTR_ORIGIN;",
          "",
          "[Removed Lines]",
          "3418:     to carry any other path attributes.\", though if MP_REACH_NLRI or NLRI",
          "3419:     are present, it should.  Check for any other attribute being present",
          "3420:     instead.",
          "3422:  if ((!CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_MP_REACH_NLRI)) &&",
          "3423:       CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_MP_UNREACH_NLRI))))",
          "3424:   return BGP_ATTR_PARSE_PROCEED;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3441:      && !CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_LOCAL_PREF)))",
          "3442:   type = BGP_ATTR_LOCAL_PREF;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3440:  if (!CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_MP_REACH_NLRI)) &&",
          "3441:      CHECK_FLAG(attr->flag, ATTR_FLAG_BIT(BGP_ATTR_MP_UNREACH_NLRI)))",
          "3442:   return type ? BGP_ATTR_PARSE_MISSING_MANDATORY",
          "3443:        : BGP_ATTR_PARSE_PROCEED;",
          "",
          "---------------"
        ],
        "bgpd/bgp_attr.h||bgpd/bgp_attr.h": [
          "File: bgpd/bgp_attr.h -> bgpd/bgp_attr.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "381:  BGP_ATTR_PARSE_ERROR_NOTIFYPLS = -3,",
          "382: };",
          "384: struct bpacket_attr_vec_arr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "382:  BGP_ATTR_PARSE_MISSING_MANDATORY = -4,",
          "",
          "---------------"
        ],
        "bgpd/bgp_packet.c||bgpd/bgp_packet.c": [
          "File: bgpd/bgp_packet.c -> bgpd/bgp_packet.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1984:  update_len = end - stream_pnt(s);",
          "1988:   nlris[NLRI_UPDATE].afi = AFI_IP;",
          "1989:   nlris[NLRI_UPDATE].safi = SAFI_UNICAST;",
          "",
          "[Removed Lines]",
          "1986:  if (update_len && attribute_len) {",
          "",
          "[Added Lines]",
          "1990:  if (update_len && attribute_len &&",
          "1991:      attr_parse_ret != BGP_ATTR_PARSE_MISSING_MANDATORY) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}