{
  "cve_id": "CVE-2024-4030",
  "cve_desc": "On Windows a directory returned by tempfile.mkdtemp() would not always have permissions set to restrict reading and writing to the temporary directory by other users, instead usually inheriting the correct permissions from the default location. Alternate configurations or users without a profile directory may not have the intended permissions.\n\nIf you\u2019re not using Windows or haven\u2019t changed the temporary directory location then you aren\u2019t affected by this vulnerability. On other platforms the returned directory is consistently readable and writable only by the current user.\n\nThis issue was caused by Python not supporting Unix permissions on Windows. The fix adds support for Unix \u201c700\u201d for the mkdir function on Windows which is used by mkdtemp() to ensure the newly created directory has the proper permissions.",
  "repo": "python/cpython",
  "patch_hash": "d86b49411753bf2c83291e3a14ae43fefded2f84",
  "patch_info": {
    "commit_hash": "d86b49411753bf2c83291e3a14ae43fefded2f84",
    "repo": "python/cpython",
    "commit_url": "https://github.com/python/cpython/commit/d86b49411753bf2c83291e3a14ae43fefded2f84",
    "files": [
      "Doc/whatsnew/3.13.rst",
      "Misc/NEWS.d/next/Security/2024-05-01-20-57-09.gh-issue-118486.K44KJG.rst"
    ],
    "message": "gh-118486: Update docs for CVE-2024-4030 reference (GH-118737)\n\nUpdate docs for CVE-2024-4030 reference",
    "before_after_code_files": []
  },
  "patch_diff": {},
  "candidates": [
    {
      "candidate_hash": "671b740f45bf606208d89300b63b1d206c6a6e4a",
      "candidate_info": {
        "commit_hash": "671b740f45bf606208d89300b63b1d206c6a6e4a",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/671b740f45bf606208d89300b63b1d206c6a6e4a",
        "files": [
          "Misc/NEWS.d/next/Windows/2024-05-30-17-39-25.gh-issue-119679.mZC87w.rst",
          "PC/layout/main.py",
          "Tools/msi/freethreaded/freethreaded_files.wxs"
        ],
        "message": "gh-119679: Ensures correct import libraries are included in Windows install packages (GH-119790)\n\n(cherry picked from commit fd01271366abefa8f991e53f090387882fbd6bdd)\n\nCo-authored-by: Steve Dower <steve.dower@python.org>",
        "before_after_code_files": [
          "PC/layout/main.py||PC/layout/main.py",
          "Tools/msi/freethreaded/freethreaded_files.wxs||Tools/msi/freethreaded/freethreaded_files.wxs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "PC/layout/main.py||PC/layout/main.py": [
          "File: PC/layout/main.py -> PC/layout/main.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "123: def get_layout(ns):",
          "125:         n, _, x = f.rpartition(\".\")",
          "126:         n = new_name or n",
          "127:         src = ns.build / f",
          "",
          "[Removed Lines]",
          "124:     def in_build(f, dest=\"\", new_name=None):",
          "",
          "[Added Lines]",
          "124:     def in_build(f, dest=\"\", new_name=None, no_lib=False):",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "136:             pdb = src.with_suffix(\".pdb\")",
          "137:             if pdb.is_file():",
          "138:                 yield dest + n + \".pdb\", pdb",
          "140:             lib = src.with_suffix(\".lib\")",
          "141:             if lib.is_file():",
          "142:                 yield \"libs/\" + n + \".lib\", lib",
          "",
          "[Removed Lines]",
          "139:         if ns.include_dev:",
          "",
          "[Added Lines]",
          "139:         if ns.include_dev and not no_lib:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "203:     yield \"LICENSE.txt\", ns.build / \"LICENSE.txt\"",
          "206:         if ns.include_freethreaded:",
          "207:             if not src.match(\"*.cp*t-win*.pyd\"):",
          "208:                 continue",
          "",
          "[Removed Lines]",
          "205:     for dest, src in rglob(ns.build, \"*.pyd\"):",
          "",
          "[Added Lines]",
          "205:     dest=\"\" if ns.flat_dlls else \"DLLs/\"",
          "207:     for _, src in rglob(ns.build, \"*.pyd\"):",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "217:             continue",
          "218:         if src in TCLTK_PYDS_ONLY and not ns.include_tcltk:",
          "219:             continue",
          "223:         if src.stem.endswith(\"_d\") != bool(ns.debug) and src not in REQUIRED_DLLS:",
          "224:             continue",
          "225:         if src in EXCLUDE_FROM_DLLS:",
          "226:             continue",
          "229:     if ns.zip_lib:",
          "230:         zip_name = PYTHON_ZIP_NAME",
          "",
          "[Removed Lines]",
          "220:         yield from in_build(src.name, dest=\"\" if ns.flat_dlls else \"DLLs/\")",
          "222:     for dest, src in rglob(ns.build, \"*.dll\"):",
          "227:         yield from in_build(src.name, dest=\"\" if ns.flat_dlls else \"DLLs/\")",
          "",
          "[Added Lines]",
          "222:         yield from in_build(src.name, dest=dest, no_lib=True)",
          "224:     for _, src in rglob(ns.build, \"*.dll\"):",
          "229:         yield from in_build(src.name, no_lib=True)",
          "",
          "---------------"
        ],
        "Tools/msi/freethreaded/freethreaded_files.wxs||Tools/msi/freethreaded/freethreaded_files.wxs": [
          "File: Tools/msi/freethreaded/freethreaded_files.wxs -> Tools/msi/freethreaded/freethreaded_files.wxs",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:             <Component Id=\"freethreaded_python.dll\" Directory=\"InstallDirectory\" Guid=\"*\">",
          "49:                 <File Id=\"freethreaded_python.dll\" Name=\"python$(var.MajorVersionNumber)$(var.MinorVersionNumber)t.dll\" KeyPath=\"yes\" />",
          "50:             </Component>",
          "51:         </ComponentGroup>",
          "52:     </Fragment>",
          "53:     <Fragment>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:             <Component Id=\"freethreaded_python_stable.lib\" Directory=\"libs\" Guid=\"*\">",
          "52:                 <File Id=\"freethreaded_python_stable.lib\" Name=\"python$(var.MajorVersionNumber)t.lib\" KeyPath=\"yes\" />",
          "53:             </Component>",
          "54:             <Component Id=\"freethreaded_python.lib\" Directory=\"libs\" Guid=\"*\">",
          "55:                 <File Id=\"freethreaded_python.lib\" Name=\"python$(var.MajorVersionNumber)$(var.MinorVersionNumber)t.lib\" KeyPath=\"yes\" />",
          "56:             </Component>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "69:                 <File Id=\"freethreaded_python_stable_d.dll\" Name=\"python$(var.MajorVersionNumber)t_d.dll\" KeyPath=\"yes\" />",
          "70:             </Component>",
          "71:             <Component Id=\"freethreaded_python_d.dll\" Directory=\"InstallDirectory\" Guid=\"*\">",
          "74:             </Component>",
          "75:         </ComponentGroup>",
          "76:     </Fragment>",
          "",
          "[Removed Lines]",
          "72:                 <File Id=\"freethreaded_python_d.dll\" Name=\"python$(var.MajorVersionNumber)$(var.MinorVersionNumber)_d.dll\" KeyPath=\"yes\" />",
          "73:                 <File Id=\"freethreaded_python_d.pdb\" Name=\"python$(var.MajorVersionNumber)$(var.MinorVersionNumber)_d.pdb\" KeyPath=\"no\" />",
          "",
          "[Added Lines]",
          "78:                 <File Id=\"freethreaded_python_d.dll\" Name=\"python$(var.MajorVersionNumber)$(var.MinorVersionNumber)t_d.dll\" KeyPath=\"yes\" />",
          "79:                 <File Id=\"freethreaded_python_d.pdb\" Name=\"python$(var.MajorVersionNumber)$(var.MinorVersionNumber)t_d.pdb\" KeyPath=\"no\" />",
          "80:             </Component>",
          "81:             <Component Id=\"freethreaded_python_stable_d.lib\" Directory=\"libs\" Guid=\"*\">",
          "82:                 <File Id=\"freethreaded_python_stable_d.lib\" Name=\"python$(var.MajorVersionNumber)t_d.lib\" KeyPath=\"yes\" />",
          "83:             </Component>",
          "84:             <Component Id=\"freethreaded_python_d.lib\" Directory=\"libs\" Guid=\"*\">",
          "85:                 <File Id=\"freethreaded_python_d.lib\" Name=\"python$(var.MajorVersionNumber)$(var.MinorVersionNumber)t_d.lib\" KeyPath=\"yes\" />",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "148:             <?endforeach ?>",
          "156:             <Component Id=\"venvlaunchert_d.pdb\" Directory=\"Lib_venv_scripts_nt__freethreaded\" Guid=\"*\">",
          "157:                 <File Name=\"venvlaunchert_d.pdb\" KeyPath=\"yes\" />",
          "158:             </Component>",
          "",
          "[Removed Lines]",
          "150:             <Component Id=\"venvlauncher_d.exe\" Directory=\"Lib_venv_scripts_nt__freethreaded\" Guid=\"*\">",
          "151:                 <File Name=\"python_d.exe\" Source=\"venvlauncher_d.exe\" KeyPath=\"yes\" />",
          "152:             </Component>",
          "153:             <Component Id=\"venvwlauncher_d.exe\" Directory=\"Lib_venv_scripts_nt__freethreaded\" Guid=\"*\">",
          "154:                 <File Name=\"pythonw_d.exe\" Source=\"venvwlauncher_d.exe\" KeyPath=\"yes\" />",
          "155:             </Component>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d8c562af55a0b475693ac78b92c477b3416a5ed0",
      "candidate_info": {
        "commit_hash": "d8c562af55a0b475693ac78b92c477b3416a5ed0",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/d8c562af55a0b475693ac78b92c477b3416a5ed0",
        "files": [
          "Tools/build/generate_sbom.py"
        ],
        "message": "[3.13] gh-112844: Update CPE references for external dependencies (GH-118521) (#119237)\n\nCo-authored-by: Seth Michael Larson <seth@python.org>",
        "before_after_code_files": [
          "Tools/build/generate_sbom.py||Tools/build/generate_sbom.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Tools/build/generate_sbom.py||Tools/build/generate_sbom.py": [
          "File: Tools/build/generate_sbom.py -> Tools/build/generate_sbom.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "306:     # Set the versionInfo and downloadLocation fields for all packages.",
          "307:     for package in sbom_data[\"packages\"]:",
          "309:         download_location = (",
          "310:             f\"https://github.com/python/cpython-source-deps/archive/refs/tags/{externals_name_to_git_tag[package['name']]}.tar.gz\"",
          "311:         )",
          "",
          "[Removed Lines]",
          "308:         package[\"versionInfo\"] = externals_name_to_version[package[\"name\"]]",
          "",
          "[Added Lines]",
          "308:         package_version = externals_name_to_version[package[\"name\"]]",
          "310:         # Update the version information in all the locations.",
          "311:         package[\"versionInfo\"] = package_version",
          "312:         for external_ref in package[\"externalRefs\"]:",
          "313:             if external_ref[\"referenceType\"] != \"cpe23Type\":",
          "314:                 continue",
          "315:             # Version is the fifth field of a CPE.",
          "316:             cpe23ref = external_ref[\"referenceLocator\"]",
          "317:             external_ref[\"referenceLocator\"] = re.sub(",
          "318:                 r\"\\A(cpe(?::[^:]+){4}):[^:]+:\",",
          "319:                 fr\"\\1:{package_version}:\",",
          "320:                 cpe23ref",
          "321:             )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "93fce2dcd5198fc742971e4aed0f023aa63c92fb",
      "candidate_info": {
        "commit_hash": "93fce2dcd5198fc742971e4aed0f023aa63c92fb",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/93fce2dcd5198fc742971e4aed0f023aa63c92fb",
        "files": [
          "Objects/typevarobject.c"
        ],
        "message": "[3.13] Rename `notimplemented_methods` into `nodefault_methods` (GH-118896) (#118898)\n\nRename `notimplemented_methods` into `nodefault_methods` (GH-118896)\n(cherry picked from commit 004db2170ecfc27fc8ceea29fee0a10c1b7dafdf)\n\nCo-authored-by: Nikita Sobolev <mail@sobolevn.me>",
        "before_after_code_files": [
          "Objects/typevarobject.c||Objects/typevarobject.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Objects/typevarobject.c||Objects/typevarobject.c": [
          "File: Objects/typevarobject.c -> Objects/typevarobject.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "73:     return PyUnicode_FromString(\"NoDefault\");",
          "74: }",
          "77:     {\"__reduce__\", NoDefault_reduce, METH_NOARGS, NULL},",
          "78:     {NULL, NULL}",
          "79: };",
          "",
          "[Removed Lines]",
          "76: static PyMethodDef notimplemented_methods[] = {",
          "",
          "[Added Lines]",
          "76: static PyMethodDef nodefault_methods[] = {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "98:     _Py_SetImmortal(nodefault);",
          "99: }",
          "102: \"NoDefaultType()\\n\"",
          "103: \"--\\n\\n\"",
          "104: \"The type of the NoDefault singleton.\");",
          "",
          "[Removed Lines]",
          "101: PyDoc_STRVAR(notimplemented_doc,",
          "",
          "[Added Lines]",
          "101: PyDoc_STRVAR(nodefault_doc,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "109:     .tp_dealloc = nodefault_dealloc,",
          "110:     .tp_repr = NoDefault_repr,",
          "111:     .tp_flags = Py_TPFLAGS_DEFAULT,",
          "114:     .tp_new = nodefault_new,",
          "115: };",
          "",
          "[Removed Lines]",
          "112:     .tp_doc = notimplemented_doc,",
          "113:     .tp_methods = notimplemented_methods,",
          "",
          "[Added Lines]",
          "112:     .tp_doc = nodefault_doc,",
          "113:     .tp_methods = nodefault_methods,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7dae73b21b500e34ebb070a4d3774e09d83d6c1d",
      "candidate_info": {
        "commit_hash": "7dae73b21b500e34ebb070a4d3774e09d83d6c1d",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/7dae73b21b500e34ebb070a4d3774e09d83d6c1d",
        "files": [
          "Tools/wasm/python.html",
          "Tools/wasm/python.worker.js"
        ],
        "message": "[3.13] gh-97747: Improvements to WASM browser REPL. (GH-97665) (GH-119828)\n\n(cherry picked from commit 010aaa32fb93c5033a698d7213469af02d76fef3)\n\nCo-authored-by: Katie Bell <katie@katharos.id.au>",
        "before_after_code_files": [
          "Tools/wasm/python.html||Tools/wasm/python.html",
          "Tools/wasm/python.worker.js||Tools/wasm/python.worker.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Tools/wasm/python.html||Tools/wasm/python.html": [
          "File: Tools/wasm/python.html -> Tools/wasm/python.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "35:     <script src=\"https://unpkg.com/xterm@4.18.0/lib/xterm.js\" crossorigin integrity=\"sha384-yYdNmem1ioP5Onm7RpXutin5A8TimLheLNQ6tnMi01/ZpxXdAwIm2t4fJMx1Djs+\"/></script>",
          "36:     <script type=\"module\">",
          "37: class WorkerManager {",
          "39:         this.workerURL = workerURL",
          "40:         this.worker = null",
          "41:         this.standardIO = standardIO",
          "42:         this.readyCallBack = readyCallBack",
          "44:         this.initialiseWorker()",
          "45:     }",
          "",
          "[Removed Lines]",
          "38:     constructor(workerURL, standardIO, readyCallBack) {",
          "",
          "[Added Lines]",
          "38:     constructor(workerURL, standardIO, readyCallBack, finishedCallback) {",
          "43:         this.finishedCallback = finishedCallback",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:         })",
          "60:     }",
          "62:     handleStdinData(inputValue) {",
          "63:         if (this.stdinbuffer && this.stdinbufferInt) {",
          "64:             let startingIndex = 1",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "63:     reset() {",
          "64:         if (this.worker) {",
          "65:             this.worker.terminate()",
          "66:             this.worker = null",
          "67:         }",
          "68:         this.standardIO.message('Worker process terminated.')",
          "69:         this.initialiseWorker()",
          "70:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92:                 this.handleStdinData(inputValue)",
          "93:             })",
          "94:         } else if (type === 'finished') {",
          "96:         }",
          "97:     }",
          "98: }",
          "",
          "[Removed Lines]",
          "95:             this.standardIO.stderr(`Exited with status: ${event.data.returnCode}\\r\\n`)",
          "",
          "[Added Lines]",
          "105:             this.standardIO.message(`Exited with status: ${event.data.returnCode}`)",
          "106:             this.finishedCallback()",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "168:                     break;",
          "169:                 case \"\\x7F\": // BACKSPACE",
          "170:                 case \"\\x08\": // CTRL+H",
          "172:                     this.handleCursorErase(true);",
          "173:                     break;",
          "174:             }",
          "175:         } else {",
          "176:             this.handleCursorInsert(data);",
          "",
          "[Removed Lines]",
          "171:                 case \"\\x04\": // CTRL+D",
          "",
          "[Added Lines]",
          "184:                 case \"\\x04\": // CTRL+D",
          "186:                     if (this.input === '') {",
          "187:                         this.resolveInput('')",
          "188:                         this.activeInput = false;",
          "189:                     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "265:     }",
          "266: }",
          "268: const replButton = document.getElementById('repl')",
          "269: const clearButton = document.getElementById('clear')",
          "271: window.onload = () => {",
          "272:     const terminal = new WasmTerminal()",
          "273:     terminal.open(document.getElementById('terminal'))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "284: const runButton = document.getElementById('run')",
          "286: const stopButton = document.getElementById('stop')",
          "289: const codeBox = document.getElementById('codebox')",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "277:         stderr: (charCode) => { terminal.print(charCode) },",
          "278:         stdin: async () => {",
          "279:             return await terminal.prompt()",
          "280:         }",
          "281:     }",
          "283:     replButton.addEventListener('click', (e) => {",
          "286:         pythonWorkerManager.run({args: ['-i', '-'], files: {}})",
          "287:     })",
          "289:     clearButton.addEventListener('click', (e) => {",
          "290:         terminal.clear()",
          "291:     })",
          "293:     const readyCallback = () => {",
          "294:         replButton.removeAttribute('disabled')",
          "295:         clearButton.removeAttribute('disabled')",
          "296:     }",
          "299: }",
          "300:     </script>",
          "301: </head>",
          "302: <body>",
          "303:     <h1>Simple REPL for Python WASM</h1>",
          "305:     <div class=\"button-container\">",
          "306:       <button id=\"repl\" disabled>Start REPL</button>",
          "307:       <button id=\"clear\" disabled>Clear</button>",
          "308:     </div>",
          "309:     <div id=\"info\">",
          "310:         The simple REPL provides a limited Python experience in the browser.",
          "311:         <a href=\"https://github.com/python/cpython/blob/main/Tools/wasm/README.md\">",
          "",
          "[Removed Lines]",
          "298:     const pythonWorkerManager = new WorkerManager('./python.worker.js', stdio, readyCallback)",
          "304:     <div id=\"terminal\"></div>",
          "",
          "[Added Lines]",
          "300:         },",
          "301:         message: (text) => { terminal.writeLine(`\\r\\n${text}\\r\\n`) },",
          "302:     }",
          "304:     const programRunning = (isRunning) => {",
          "305:         if (isRunning) {",
          "306:             replButton.setAttribute('disabled', true)",
          "307:             runButton.setAttribute('disabled', true)",
          "308:             stopButton.removeAttribute('disabled')",
          "309:         } else {",
          "310:             replButton.removeAttribute('disabled')",
          "311:             runButton.removeAttribute('disabled')",
          "312:             stopButton.setAttribute('disabled', true)",
          "316:     runButton.addEventListener('click', (e) => {",
          "317:         terminal.clear()",
          "318:         programRunning(true)",
          "319:         const code = codeBox.value",
          "320:         pythonWorkerManager.run({args: ['main.py'], files: {'main.py': code}})",
          "321:     })",
          "324:         terminal.clear()",
          "325:         programRunning(true)",
          "331:     stopButton.addEventListener('click', (e) => {",
          "332:         programRunning(false)",
          "333:         pythonWorkerManager.reset()",
          "334:     })",
          "342:         runButton.removeAttribute('disabled')",
          "346:     const finishedCallback = () => {",
          "347:         programRunning(false)",
          "348:     }",
          "350:     const pythonWorkerManager = new WorkerManager('./python.worker.js', stdio, readyCallback, finishedCallback)",
          "356: <textarea id=\"codebox\" cols=\"108\" rows=\"16\">",
          "357: print('Welcome to WASM!')",
          "358: </textarea>",
          "360:       <button id=\"run\" disabled>Run</button>",
          "362:       <button id=\"stop\" disabled>Stop</button>",
          "365:     <div id=\"terminal\"></div>",
          "",
          "---------------"
        ],
        "Tools/wasm/python.worker.js||Tools/wasm/python.worker.js": [
          "File: Tools/wasm/python.worker.js -> Tools/wasm/python.worker.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "19:     }",
          "21:     stdin = () => {",
          "23:             if (!this.sentNull) {",
          "25:                 this.sentNull = true",
          "26:                 return null",
          "27:             }",
          "28:             this.sentNull = false",
          "29:             this.prompt()",
          "30:         }",
          "31:         const char = this.buffer[this.readIndex]",
          "32:         this.readIndex += 1",
          "34:         return char",
          "35:     }",
          "36: }",
          "",
          "[Removed Lines]",
          "22:         if (this.numberOfCharacters + 1 === this.readIndex) {",
          "",
          "[Added Lines]",
          "22:         while (this.numberOfCharacters + 1 === this.readIndex) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "72: onmessage = (event) => {",
          "73:     if (event.data.type === 'run') {",
          "75:         const ret = callMain(event.data.args)",
          "76:         postMessage({",
          "77:             type: 'finished',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:         if (event.data.files) {",
          "75:             for (const [filename, contents] of Object.entries(event.data.files)) {",
          "76:                 Module.FS.writeFile(filename, contents)",
          "77:             }",
          "78:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd39da75afbede2e5f012065fedd709bf74a9c5f",
      "candidate_info": {
        "commit_hash": "cd39da75afbede2e5f012065fedd709bf74a9c5f",
        "repo": "python/cpython",
        "commit_url": "https://github.com/python/cpython/commit/cd39da75afbede2e5f012065fedd709bf74a9c5f",
        "files": [
          "Lib/_pyrepl/_minimal_curses.py",
          "Lib/_pyrepl/input.py",
          "Lib/_pyrepl/keymap.py",
          "Lib/_pyrepl/pager.py",
          "Lib/_pyrepl/readline.py",
          "Lib/_pyrepl/unix_console.py"
        ],
        "message": "[3.13] Improve `pyrepl` type-annotation coverage (GH-119081) (#119415)\n\n(cherry picked from commit 033f5c87f1f876088701d1ae078dc39c41177d4a)\n\nCo-authored-by: Alex Waygood <Alex.Waygood@Gmail.com>",
        "before_after_code_files": [
          "Lib/_pyrepl/_minimal_curses.py||Lib/_pyrepl/_minimal_curses.py",
          "Lib/_pyrepl/input.py||Lib/_pyrepl/input.py",
          "Lib/_pyrepl/keymap.py||Lib/_pyrepl/keymap.py",
          "Lib/_pyrepl/pager.py||Lib/_pyrepl/pager.py",
          "Lib/_pyrepl/readline.py||Lib/_pyrepl/readline.py",
          "Lib/_pyrepl/unix_console.py||Lib/_pyrepl/unix_console.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/AcreetionOS-Linux/python/pull/2"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "Lib/_pyrepl/_minimal_curses.py||Lib/_pyrepl/_minimal_curses.py": [
          "File: Lib/_pyrepl/_minimal_curses.py -> Lib/_pyrepl/_minimal_curses.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "17:     pass",
          "21:     trylibs = [\"ncursesw\", \"ncurses\", \"curses\"]",
          "23:     for lib in trylibs:",
          "",
          "[Removed Lines]",
          "20: def _find_clib():",
          "",
          "[Added Lines]",
          "20: def _find_clib() -> str:",
          "",
          "---------------"
        ],
        "Lib/_pyrepl/input.py||Lib/_pyrepl/input.py": [
          "File: Lib/_pyrepl/input.py -> Lib/_pyrepl/input.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "62: class KeymapTranslator(InputTranslator):",
          "64:         self.verbose = verbose",
          "65:         from .keymap import compile_keymap, parse_keys",
          "",
          "[Removed Lines]",
          "63:     def __init__(self, keymap, verbose=0, invalid_cls=None, character_cls=None):",
          "",
          "[Added Lines]",
          "63:     def __init__(self, keymap, verbose=False, invalid_cls=None, character_cls=None):",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "110:         else:",
          "111:             return None",
          "114:         return not self.results",
          "",
          "[Removed Lines]",
          "113:     def empty(self):",
          "",
          "[Added Lines]",
          "113:     def empty(self) -> bool:",
          "",
          "---------------"
        ],
        "Lib/_pyrepl/keymap.py||Lib/_pyrepl/keymap.py": [
          "File: Lib/_pyrepl/keymap.py -> Lib/_pyrepl/keymap.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "190:     return ret, s",
          "194:     s = 0",
          "195:     r = []",
          "196:     while s < len(key):",
          "",
          "[Removed Lines]",
          "193: def parse_keys(key):",
          "",
          "[Added Lines]",
          "193: def parse_keys(key: str) -> list[str]:",
          "",
          "---------------"
        ],
        "Lib/_pyrepl/pager.py||Lib/_pyrepl/pager.py": [
          "File: Lib/_pyrepl/pager.py -> Lib/_pyrepl/pager.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:         fd = sys.stdin.fileno()",
          "77:         old = termios.tcgetattr(fd)",
          "78:         tty.setcbreak(fd)",
          "80:         has_tty = True",
          "81:     except (ImportError, AttributeError, io.UnsupportedOperation):",
          "84:     try:",
          "85:         try:",
          "",
          "[Removed Lines]",
          "79:         getchar = lambda: sys.stdin.read(1)",
          "82:         getchar = lambda: sys.stdin.readline()[:-1][:1]",
          "",
          "[Added Lines]",
          "81:         def getchar() -> str:",
          "82:             return sys.stdin.read(1)",
          "85:         def getchar() -> str:",
          "86:             return sys.stdin.readline()[:-1][:1]",
          "",
          "---------------"
        ],
        "Lib/_pyrepl/readline.py||Lib/_pyrepl/readline.py": [
          "File: Lib/_pyrepl/readline.py -> Lib/_pyrepl/readline.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "49: from .types import Callback, Completer, KeySpec, CommandName",
          "52: __all__ = [",
          "53:     \"add_history\",",
          "54:     \"clear_history\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52: MoreLinesCallable = Callable[[str], bool]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:     # Instance fields",
          "97:     config: ReadlineConfig",
          "100:     def __post_init__(self) -> None:",
          "101:         super().__post_init__()",
          "",
          "[Removed Lines]",
          "98:     more_lines: Callable[[str], bool] | None = None",
          "",
          "[Added Lines]",
          "101:     more_lines: MoreLinesCallable | None = None",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "288:         reader.ps1 = str(prompt)",
          "289:         return reader.readline(startup_hook=self.startup_hook)",
          "292:         \"\"\"Read an input on possibly multiple lines, asking for more",
          "293:         lines as long as 'more_lines(unicodetext)' returns an object whose",
          "294:         boolean value is true.",
          "",
          "[Removed Lines]",
          "291:     def multiline_input(self, more_lines, ps1, ps2):",
          "",
          "[Added Lines]",
          "294:     def multiline_input(self, more_lines: MoreLinesCallable, ps1: str, ps2: str) -> tuple[str, bool]:",
          "",
          "---------------"
        ],
        "Lib/_pyrepl/unix_console.py||Lib/_pyrepl/unix_console.py": [
          "File: Lib/_pyrepl/unix_console.py -> Lib/_pyrepl/unix_console.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: from .utils import wlen",
          "43: # types",
          "48: class InvalidTerminal(RuntimeError):",
          "",
          "[Removed Lines]",
          "44: if False:",
          "45:     from typing import IO",
          "",
          "[Added Lines]",
          "43: TYPE_CHECKING = False",
          "46: if TYPE_CHECKING:",
          "47:     from typing import IO, Literal, overload",
          "48: else:",
          "49:     overload = lambda func: None",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "157:         curses.setupterm(term or None, self.output_fd)",
          "158:         self.term = term",
          "161:             r = curses.tigetstr(cap)",
          "162:             if not optional and r is None:",
          "163:                 raise InvalidTerminal(",
          "",
          "[Removed Lines]",
          "160:         def _my_getstr(cap, optional=0):",
          "",
          "[Added Lines]",
          "164:         @overload",
          "165:         def _my_getstr(cap: str, optional: Literal[False] = False) -> bytes: ...",
          "167:         @overload",
          "168:         def _my_getstr(cap: str, optional: bool) -> bytes | None: ...",
          "170:         def _my_getstr(cap: str, optional: bool = False) -> bytes | None:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "672:         elif dy < 0:",
          "673:             self.__write_code(self._cuu, -dy)",
          "676:         if x != self.__posxy[0]:",
          "677:             self.__write_code(self._hpa, x)",
          "680:         dx = x - self.__posxy[0]",
          "681:         if dx > 0:",
          "682:             self.__write_code(self._cuf1 * dx)",
          "683:         elif dx < 0:",
          "684:             self.__write_code(self._cub1 * (-dx))",
          "687:         dx = x - self.__posxy[0]",
          "688:         if dx > 0:",
          "689:             self.__write_code(self._cuf, dx)",
          "",
          "[Removed Lines]",
          "675:     def __move_x_hpa(self, x):",
          "679:     def __move_x_cub1_cuf1(self, x):",
          "686:     def __move_x_cub_cuf(self, x):",
          "",
          "[Added Lines]",
          "685:     def __move_x_hpa(self, x: int) -> None:",
          "689:     def __move_x_cub1_cuf1(self, x: int) -> None:",
          "696:     def __move_x_cub_cuf(self, x: int) -> None:",
          "",
          "---------------"
        ]
      }
    }
  ]
}