{
  "cve_id": "CVE-2024-0727",
  "cve_desc": "Issue summary: Processing a maliciously formatted PKCS12 file may lead OpenSSL\nto crash leading to a potential Denial of Service attack\n\nImpact summary: Applications loading files in the PKCS12 format from untrusted\nsources might terminate abruptly.\n\nA file in PKCS12 format can contain certificates and keys and may come from an\nuntrusted source. The PKCS12 specification allows certain fields to be NULL, but\nOpenSSL does not correctly check for this case. This can lead to a NULL pointer\ndereference that results in OpenSSL crashing. If an application processes PKCS12\nfiles from an untrusted source using the OpenSSL APIs then that application will\nbe vulnerable to this issue.\n\nOpenSSL APIs that are vulnerable to this are: PKCS12_parse(),\nPKCS12_unpack_p7data(), PKCS12_unpack_p7encdata(), PKCS12_unpack_authsafes()\nand PKCS12_newpass().\n\nWe have also fixed a similar issue in SMIME_write_PKCS7(). However since this\nfunction is related to writing data we do not consider it security significant.\n\nThe FIPS modules in 3.2, 3.1 and 3.0 are not affected by this issue.",
  "repo": "openssl/openssl",
  "patch_hash": "09df4395b5071217b76dc7d3d2e630eb8c5a79c2",
  "patch_info": {
    "commit_hash": "09df4395b5071217b76dc7d3d2e630eb8c5a79c2",
    "repo": "openssl/openssl",
    "commit_url": "https://github.com/openssl/openssl/commit/09df4395b5071217b76dc7d3d2e630eb8c5a79c2",
    "files": [
      "crypto/pkcs12/p12_add.c",
      "crypto/pkcs12/p12_mutl.c",
      "crypto/pkcs12/p12_npas.c",
      "crypto/pkcs7/pk7_mime.c"
    ],
    "message": "Add NULL checks where ContentInfo data can be NULL\n\nPKCS12 structures contain PKCS7 ContentInfo fields. These fields are\noptional and can be NULL even if the \"type\" is a valid value. OpenSSL\nwas not properly accounting for this and a NULL dereference can occur\ncausing a crash.\n\nCVE-2024-0727\n\nReviewed-by: Tomas Mraz <tomas@openssl.org>\nReviewed-by: Hugo Landau <hlandau@openssl.org>\nReviewed-by: Neil Horman <nhorman@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/23362)\n\n(cherry picked from commit d135eeab8a5dbf72b3da5240bab9ddb7678dbd2c)",
    "before_after_code_files": [
      "crypto/pkcs12/p12_add.c||crypto/pkcs12/p12_add.c",
      "crypto/pkcs12/p12_mutl.c||crypto/pkcs12/p12_mutl.c",
      "crypto/pkcs12/p12_npas.c||crypto/pkcs12/p12_npas.c",
      "crypto/pkcs7/pk7_mime.c||crypto/pkcs7/pk7_mime.c"
    ]
  },
  "patch_diff": {
    "crypto/pkcs12/p12_add.c||crypto/pkcs12/p12_add.c": [
      "File: crypto/pkcs12/p12_add.c -> crypto/pkcs12/p12_add.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "78:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_CONTENT_TYPE_NOT_DATA);",
      "79:         return NULL;",
      "80:     }",
      "81:     return ASN1_item_unpack(p7->d.data, ASN1_ITEM_rptr(PKCS12_SAFEBAGS));",
      "82: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "82:     if (p7->d.data == NULL) {",
      "83:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_DECODE_ERROR);",
      "84:         return NULL;",
      "85:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "150: {",
      "151:     if (!PKCS7_type_is_encrypted(p7))",
      "152:         return NULL;",
      "153:     return PKCS12_item_decrypt_d2i_ex(p7->d.encrypted->enc_data->algorithm,",
      "154:                                    ASN1_ITEM_rptr(PKCS12_SAFEBAGS),",
      "155:                                    pass, passlen,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "160:     if (p7->d.encrypted == NULL) {",
      "161:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_DECODE_ERROR);",
      "162:         return NULL;",
      "163:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "188:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_CONTENT_TYPE_NOT_DATA);",
      "189:         return NULL;",
      "190:     }",
      "191:     p7s = ASN1_item_unpack(p12->authsafes->d.data,",
      "192:                            ASN1_ITEM_rptr(PKCS12_AUTHSAFES));",
      "193:     if (p7s != NULL) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "204:     if (p12->authsafes->d.data == NULL) {",
      "205:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_DECODE_ERROR);",
      "206:         return NULL;",
      "207:     }",
      "",
      "---------------"
    ],
    "crypto/pkcs12/p12_mutl.c||crypto/pkcs12/p12_mutl.c": [
      "File: crypto/pkcs12/p12_mutl.c -> crypto/pkcs12/p12_mutl.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "98:         return 0;",
      "99:     }",
      "101:     salt = p12->mac->salt->data;",
      "102:     saltlen = p12->mac->salt->length;",
      "103:     if (p12->mac->iter == NULL)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "101:     if (p12->authsafes->d.data == NULL) {",
      "102:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_DECODE_ERROR);",
      "103:         return 0;",
      "104:     }",
      "",
      "---------------"
    ],
    "crypto/pkcs12/p12_npas.c||crypto/pkcs12/p12_npas.c": [
      "File: crypto/pkcs12/p12_npas.c -> crypto/pkcs12/p12_npas.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "77:             bags = PKCS12_unpack_p7data(p7);",
      "78:         } else if (bagnid == NID_pkcs7_encrypted) {",
      "79:             bags = PKCS12_unpack_p7encdata(p7, oldpass, -1);",
      "82:                 goto err;",
      "83:         } else {",
      "84:             continue;",
      "",
      "[Removed Lines]",
      "80:             if (!alg_get(p7->d.encrypted->enc_data->algorithm,",
      "81:                          &pbe_nid, &pbe_iter, &pbe_saltlen))",
      "",
      "[Added Lines]",
      "80:             if (p7->d.encrypted == NULL",
      "81:                     || !alg_get(p7->d.encrypted->enc_data->algorithm,",
      "82:                                 &pbe_nid, &pbe_iter, &pbe_saltlen))",
      "",
      "---------------"
    ],
    "crypto/pkcs7/pk7_mime.c||crypto/pkcs7/pk7_mime.c": [
      "File: crypto/pkcs7/pk7_mime.c -> crypto/pkcs7/pk7_mime.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "33:     int ctype_nid = OBJ_obj2nid(p7->type);",
      "34:     const PKCS7_CTX *ctx = ossl_pkcs7_get0_ctx(p7);",
      "37:         mdalgs = p7->d.sign->md_algs;",
      "39:         mdalgs = NULL;",
      "41:     flags ^= SMIME_OLDMIME;",
      "",
      "[Removed Lines]",
      "36:     if (ctype_nid == NID_pkcs7_signed)",
      "38:     else",
      "",
      "[Added Lines]",
      "36:     if (ctype_nid == NID_pkcs7_signed) {",
      "37:         if (p7->d.sign == NULL)",
      "38:             return 0;",
      "40:     } else {",
      "42:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d135eeab8a5dbf72b3da5240bab9ddb7678dbd2c",
      "candidate_info": {
        "commit_hash": "d135eeab8a5dbf72b3da5240bab9ddb7678dbd2c",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/d135eeab8a5dbf72b3da5240bab9ddb7678dbd2c",
        "files": [
          "crypto/pkcs12/p12_add.c",
          "crypto/pkcs12/p12_mutl.c",
          "crypto/pkcs12/p12_npas.c",
          "crypto/pkcs7/pk7_mime.c"
        ],
        "message": "Add NULL checks where ContentInfo data can be NULL\n\nPKCS12 structures contain PKCS7 ContentInfo fields. These fields are\noptional and can be NULL even if the \"type\" is a valid value. OpenSSL\nwas not properly accounting for this and a NULL dereference can occur\ncausing a crash.\n\nCVE-2024-0727\n\nReviewed-by: Tomas Mraz <tomas@openssl.org>\nReviewed-by: Hugo Landau <hlandau@openssl.org>\nReviewed-by: Neil Horman <nhorman@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/23362)",
        "before_after_code_files": [
          "crypto/pkcs12/p12_add.c||crypto/pkcs12/p12_add.c",
          "crypto/pkcs12/p12_mutl.c||crypto/pkcs12/p12_mutl.c",
          "crypto/pkcs12/p12_npas.c||crypto/pkcs12/p12_npas.c",
          "crypto/pkcs7/pk7_mime.c||crypto/pkcs7/pk7_mime.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/pkcs12/p12_add.c||crypto/pkcs12/p12_add.c",
            "crypto/pkcs12/p12_mutl.c||crypto/pkcs12/p12_mutl.c",
            "crypto/pkcs12/p12_npas.c||crypto/pkcs12/p12_npas.c",
            "crypto/pkcs7/pk7_mime.c||crypto/pkcs7/pk7_mime.c"
          ],
          "candidate": [
            "crypto/pkcs12/p12_add.c||crypto/pkcs12/p12_add.c",
            "crypto/pkcs12/p12_mutl.c||crypto/pkcs12/p12_mutl.c",
            "crypto/pkcs12/p12_npas.c||crypto/pkcs12/p12_npas.c",
            "crypto/pkcs7/pk7_mime.c||crypto/pkcs7/pk7_mime.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/pkcs12/p12_add.c||crypto/pkcs12/p12_add.c": [
          "File: crypto/pkcs12/p12_add.c -> crypto/pkcs12/p12_add.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_CONTENT_TYPE_NOT_DATA);",
          "79:         return NULL;",
          "80:     }",
          "81:     return ASN1_item_unpack(p7->d.data, ASN1_ITEM_rptr(PKCS12_SAFEBAGS));",
          "82: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:     if (p7->d.data == NULL) {",
          "83:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_DECODE_ERROR);",
          "84:         return NULL;",
          "85:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "150: {",
          "151:     if (!PKCS7_type_is_encrypted(p7))",
          "152:         return NULL;",
          "153:     return PKCS12_item_decrypt_d2i_ex(p7->d.encrypted->enc_data->algorithm,",
          "154:                                    ASN1_ITEM_rptr(PKCS12_SAFEBAGS),",
          "155:                                    pass, passlen,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "160:     if (p7->d.encrypted == NULL) {",
          "161:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_DECODE_ERROR);",
          "162:         return NULL;",
          "163:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "188:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_CONTENT_TYPE_NOT_DATA);",
          "189:         return NULL;",
          "190:     }",
          "191:     p7s = ASN1_item_unpack(p12->authsafes->d.data,",
          "192:                            ASN1_ITEM_rptr(PKCS12_AUTHSAFES));",
          "193:     if (p7s != NULL) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "204:     if (p12->authsafes->d.data == NULL) {",
          "205:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_DECODE_ERROR);",
          "206:         return NULL;",
          "207:     }",
          "",
          "---------------"
        ],
        "crypto/pkcs12/p12_mutl.c||crypto/pkcs12/p12_mutl.c": [
          "File: crypto/pkcs12/p12_mutl.c -> crypto/pkcs12/p12_mutl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:         return 0;",
          "99:     }",
          "101:     salt = p12->mac->salt->data;",
          "102:     saltlen = p12->mac->salt->length;",
          "103:     if (p12->mac->iter == NULL)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:     if (p12->authsafes->d.data == NULL) {",
          "102:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_DECODE_ERROR);",
          "103:         return 0;",
          "104:     }",
          "",
          "---------------"
        ],
        "crypto/pkcs12/p12_npas.c||crypto/pkcs12/p12_npas.c": [
          "File: crypto/pkcs12/p12_npas.c -> crypto/pkcs12/p12_npas.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:             bags = PKCS12_unpack_p7data(p7);",
          "78:         } else if (bagnid == NID_pkcs7_encrypted) {",
          "79:             bags = PKCS12_unpack_p7encdata(p7, oldpass, -1);",
          "82:                 goto err;",
          "83:         } else {",
          "84:             continue;",
          "",
          "[Removed Lines]",
          "80:             if (!alg_get(p7->d.encrypted->enc_data->algorithm,",
          "81:                          &pbe_nid, &pbe_iter, &pbe_saltlen))",
          "",
          "[Added Lines]",
          "80:             if (p7->d.encrypted == NULL",
          "81:                     || !alg_get(p7->d.encrypted->enc_data->algorithm,",
          "82:                                 &pbe_nid, &pbe_iter, &pbe_saltlen))",
          "",
          "---------------"
        ],
        "crypto/pkcs7/pk7_mime.c||crypto/pkcs7/pk7_mime.c": [
          "File: crypto/pkcs7/pk7_mime.c -> crypto/pkcs7/pk7_mime.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     int ctype_nid = OBJ_obj2nid(p7->type);",
          "34:     const PKCS7_CTX *ctx = ossl_pkcs7_get0_ctx(p7);",
          "37:         mdalgs = p7->d.sign->md_algs;",
          "39:         mdalgs = NULL;",
          "41:     flags ^= SMIME_OLDMIME;",
          "",
          "[Removed Lines]",
          "36:     if (ctype_nid == NID_pkcs7_signed)",
          "38:     else",
          "",
          "[Added Lines]",
          "36:     if (ctype_nid == NID_pkcs7_signed) {",
          "37:         if (p7->d.sign == NULL)",
          "38:             return 0;",
          "40:     } else {",
          "42:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "775acfdbd0c6af9ac855f34969cdab0c0c90844a",
      "candidate_info": {
        "commit_hash": "775acfdbd0c6af9ac855f34969cdab0c0c90844a",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/775acfdbd0c6af9ac855f34969cdab0c0c90844a",
        "files": [
          "crypto/pkcs12/p12_add.c",
          "crypto/pkcs12/p12_mutl.c",
          "crypto/pkcs12/p12_npas.c",
          "crypto/pkcs7/pk7_mime.c"
        ],
        "message": "Add NULL checks where ContentInfo data can be NULL\n\nPKCS12 structures contain PKCS7 ContentInfo fields. These fields are\noptional and can be NULL even if the \"type\" is a valid value. OpenSSL\nwas not properly accounting for this and a NULL dereference can occur\ncausing a crash.\n\nCVE-2024-0727\n\nReviewed-by: Tomas Mraz <tomas@openssl.org>\nReviewed-by: Hugo Landau <hlandau@openssl.org>\nReviewed-by: Neil Horman <nhorman@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/23361)\n\n(cherry picked from commit 041962b429ebe748c8b6b7922980dfb6decfef26)",
        "before_after_code_files": [
          "crypto/pkcs12/p12_add.c||crypto/pkcs12/p12_add.c",
          "crypto/pkcs12/p12_mutl.c||crypto/pkcs12/p12_mutl.c",
          "crypto/pkcs12/p12_npas.c||crypto/pkcs12/p12_npas.c",
          "crypto/pkcs7/pk7_mime.c||crypto/pkcs7/pk7_mime.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/pkcs12/p12_add.c||crypto/pkcs12/p12_add.c",
            "crypto/pkcs12/p12_mutl.c||crypto/pkcs12/p12_mutl.c",
            "crypto/pkcs12/p12_npas.c||crypto/pkcs12/p12_npas.c",
            "crypto/pkcs7/pk7_mime.c||crypto/pkcs7/pk7_mime.c"
          ],
          "candidate": [
            "crypto/pkcs12/p12_add.c||crypto/pkcs12/p12_add.c",
            "crypto/pkcs12/p12_mutl.c||crypto/pkcs12/p12_mutl.c",
            "crypto/pkcs12/p12_npas.c||crypto/pkcs12/p12_npas.c",
            "crypto/pkcs7/pk7_mime.c||crypto/pkcs7/pk7_mime.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/pkcs12/p12_add.c||crypto/pkcs12/p12_add.c": [
          "File: crypto/pkcs12/p12_add.c -> crypto/pkcs12/p12_add.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_CONTENT_TYPE_NOT_DATA);",
          "79:         return NULL;",
          "80:     }",
          "81:     return ASN1_item_unpack_ex(p7->d.data, ASN1_ITEM_rptr(PKCS12_SAFEBAGS),",
          "82:                                ossl_pkcs7_ctx_get0_libctx(&p7->ctx),",
          "83:                                ossl_pkcs7_ctx_get0_propq(&p7->ctx));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:     if (p7->d.data == NULL) {",
          "83:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_DECODE_ERROR);",
          "84:         return NULL;",
          "85:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "152: {",
          "153:     if (!PKCS7_type_is_encrypted(p7))",
          "154:         return NULL;",
          "155:     return PKCS12_item_decrypt_d2i_ex(p7->d.encrypted->enc_data->algorithm,",
          "156:                                    ASN1_ITEM_rptr(PKCS12_SAFEBAGS),",
          "157:                                    pass, passlen,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "162:     if (p7->d.encrypted == NULL) {",
          "163:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_DECODE_ERROR);",
          "164:         return NULL;",
          "165:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "191:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_CONTENT_TYPE_NOT_DATA);",
          "192:         return NULL;",
          "193:     }",
          "194:     p7ctx = &p12->authsafes->ctx;",
          "195:     p7s = ASN1_item_unpack_ex(p12->authsafes->d.data,",
          "196:                               ASN1_ITEM_rptr(PKCS12_AUTHSAFES),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "207:     if (p12->authsafes->d.data == NULL) {",
          "208:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_DECODE_ERROR);",
          "209:         return NULL;",
          "210:     }",
          "",
          "---------------"
        ],
        "crypto/pkcs12/p12_mutl.c||crypto/pkcs12/p12_mutl.c": [
          "File: crypto/pkcs12/p12_mutl.c -> crypto/pkcs12/p12_mutl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:         return 0;",
          "99:     }",
          "101:     salt = p12->mac->salt->data;",
          "102:     saltlen = p12->mac->salt->length;",
          "103:     if (p12->mac->iter == NULL)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:     if (p12->authsafes->d.data == NULL) {",
          "102:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_DECODE_ERROR);",
          "103:         return 0;",
          "104:     }",
          "",
          "---------------"
        ],
        "crypto/pkcs12/p12_npas.c||crypto/pkcs12/p12_npas.c": [
          "File: crypto/pkcs12/p12_npas.c -> crypto/pkcs12/p12_npas.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:             bags = PKCS12_unpack_p7data(p7);",
          "81:         } else if (bagnid == NID_pkcs7_encrypted) {",
          "82:             bags = PKCS12_unpack_p7encdata(p7, oldpass, -1);",
          "85:                 goto err;",
          "86:         } else {",
          "87:             continue;",
          "",
          "[Removed Lines]",
          "83:             if (!alg_get(p7->d.encrypted->enc_data->algorithm,",
          "84:                          &pbe_nid, &pbe_iter, &pbe_saltlen, &cipherid))",
          "",
          "[Added Lines]",
          "83:             if (p7->d.encrypted == NULL",
          "84:                     || !alg_get(p7->d.encrypted->enc_data->algorithm,",
          "85:                                 &pbe_nid, &pbe_iter, &pbe_saltlen, &cipherid))",
          "",
          "---------------"
        ],
        "crypto/pkcs7/pk7_mime.c||crypto/pkcs7/pk7_mime.c": [
          "File: crypto/pkcs7/pk7_mime.c -> crypto/pkcs7/pk7_mime.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     int ctype_nid = OBJ_obj2nid(p7->type);",
          "34:     const PKCS7_CTX *ctx = ossl_pkcs7_get0_ctx(p7);",
          "37:         mdalgs = p7->d.sign->md_algs;",
          "39:         mdalgs = NULL;",
          "41:     flags ^= SMIME_OLDMIME;",
          "",
          "[Removed Lines]",
          "36:     if (ctype_nid == NID_pkcs7_signed)",
          "38:     else",
          "",
          "[Added Lines]",
          "36:     if (ctype_nid == NID_pkcs7_signed) {",
          "37:         if (p7->d.sign == NULL)",
          "38:             return 0;",
          "40:     } else {",
          "42:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "041962b429ebe748c8b6b7922980dfb6decfef26",
      "candidate_info": {
        "commit_hash": "041962b429ebe748c8b6b7922980dfb6decfef26",
        "repo": "openssl/openssl",
        "commit_url": "https://github.com/openssl/openssl/commit/041962b429ebe748c8b6b7922980dfb6decfef26",
        "files": [
          "crypto/pkcs12/p12_add.c",
          "crypto/pkcs12/p12_mutl.c",
          "crypto/pkcs12/p12_npas.c",
          "crypto/pkcs7/pk7_mime.c"
        ],
        "message": "Add NULL checks where ContentInfo data can be NULL\n\nPKCS12 structures contain PKCS7 ContentInfo fields. These fields are\noptional and can be NULL even if the \"type\" is a valid value. OpenSSL\nwas not properly accounting for this and a NULL dereference can occur\ncausing a crash.\n\nCVE-2024-0727\n\nReviewed-by: Tomas Mraz <tomas@openssl.org>\nReviewed-by: Hugo Landau <hlandau@openssl.org>\nReviewed-by: Neil Horman <nhorman@openssl.org>\n(Merged from https://github.com/openssl/openssl/pull/23361)",
        "before_after_code_files": [
          "crypto/pkcs12/p12_add.c||crypto/pkcs12/p12_add.c",
          "crypto/pkcs12/p12_mutl.c||crypto/pkcs12/p12_mutl.c",
          "crypto/pkcs12/p12_npas.c||crypto/pkcs12/p12_npas.c",
          "crypto/pkcs7/pk7_mime.c||crypto/pkcs7/pk7_mime.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "crypto/pkcs12/p12_add.c||crypto/pkcs12/p12_add.c",
            "crypto/pkcs12/p12_mutl.c||crypto/pkcs12/p12_mutl.c",
            "crypto/pkcs12/p12_npas.c||crypto/pkcs12/p12_npas.c",
            "crypto/pkcs7/pk7_mime.c||crypto/pkcs7/pk7_mime.c"
          ],
          "candidate": [
            "crypto/pkcs12/p12_add.c||crypto/pkcs12/p12_add.c",
            "crypto/pkcs12/p12_mutl.c||crypto/pkcs12/p12_mutl.c",
            "crypto/pkcs12/p12_npas.c||crypto/pkcs12/p12_npas.c",
            "crypto/pkcs7/pk7_mime.c||crypto/pkcs7/pk7_mime.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/pkcs12/p12_add.c||crypto/pkcs12/p12_add.c": [
          "File: crypto/pkcs12/p12_add.c -> crypto/pkcs12/p12_add.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_CONTENT_TYPE_NOT_DATA);",
          "79:         return NULL;",
          "80:     }",
          "81:     return ASN1_item_unpack_ex(p7->d.data, ASN1_ITEM_rptr(PKCS12_SAFEBAGS),",
          "82:                                ossl_pkcs7_ctx_get0_libctx(&p7->ctx),",
          "83:                                ossl_pkcs7_ctx_get0_propq(&p7->ctx));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:     if (p7->d.data == NULL) {",
          "83:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_DECODE_ERROR);",
          "84:         return NULL;",
          "85:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "152: {",
          "153:     if (!PKCS7_type_is_encrypted(p7))",
          "154:         return NULL;",
          "155:     return PKCS12_item_decrypt_d2i_ex(p7->d.encrypted->enc_data->algorithm,",
          "156:                                    ASN1_ITEM_rptr(PKCS12_SAFEBAGS),",
          "157:                                    pass, passlen,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "162:     if (p7->d.encrypted == NULL) {",
          "163:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_DECODE_ERROR);",
          "164:         return NULL;",
          "165:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "191:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_CONTENT_TYPE_NOT_DATA);",
          "192:         return NULL;",
          "193:     }",
          "194:     p7ctx = &p12->authsafes->ctx;",
          "195:     p7s = ASN1_item_unpack_ex(p12->authsafes->d.data,",
          "196:                               ASN1_ITEM_rptr(PKCS12_AUTHSAFES),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "207:     if (p12->authsafes->d.data == NULL) {",
          "208:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_DECODE_ERROR);",
          "209:         return NULL;",
          "210:     }",
          "",
          "---------------"
        ],
        "crypto/pkcs12/p12_mutl.c||crypto/pkcs12/p12_mutl.c": [
          "File: crypto/pkcs12/p12_mutl.c -> crypto/pkcs12/p12_mutl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:         return 0;",
          "99:     }",
          "101:     salt = p12->mac->salt->data;",
          "102:     saltlen = p12->mac->salt->length;",
          "103:     if (p12->mac->iter == NULL)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:     if (p12->authsafes->d.data == NULL) {",
          "102:         ERR_raise(ERR_LIB_PKCS12, PKCS12_R_DECODE_ERROR);",
          "103:         return 0;",
          "104:     }",
          "",
          "---------------"
        ],
        "crypto/pkcs12/p12_npas.c||crypto/pkcs12/p12_npas.c": [
          "File: crypto/pkcs12/p12_npas.c -> crypto/pkcs12/p12_npas.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:             bags = PKCS12_unpack_p7data(p7);",
          "81:         } else if (bagnid == NID_pkcs7_encrypted) {",
          "82:             bags = PKCS12_unpack_p7encdata(p7, oldpass, -1);",
          "85:                 goto err;",
          "86:         } else {",
          "87:             continue;",
          "",
          "[Removed Lines]",
          "83:             if (!alg_get(p7->d.encrypted->enc_data->algorithm,",
          "84:                          &pbe_nid, &pbe_iter, &pbe_saltlen, &cipherid))",
          "",
          "[Added Lines]",
          "83:             if (p7->d.encrypted == NULL",
          "84:                     || !alg_get(p7->d.encrypted->enc_data->algorithm,",
          "85:                                 &pbe_nid, &pbe_iter, &pbe_saltlen, &cipherid))",
          "",
          "---------------"
        ],
        "crypto/pkcs7/pk7_mime.c||crypto/pkcs7/pk7_mime.c": [
          "File: crypto/pkcs7/pk7_mime.c -> crypto/pkcs7/pk7_mime.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     int ctype_nid = OBJ_obj2nid(p7->type);",
          "34:     const PKCS7_CTX *ctx = ossl_pkcs7_get0_ctx(p7);",
          "37:         mdalgs = p7->d.sign->md_algs;",
          "39:         mdalgs = NULL;",
          "41:     flags ^= SMIME_OLDMIME;",
          "",
          "[Removed Lines]",
          "36:     if (ctype_nid == NID_pkcs7_signed)",
          "38:     else",
          "",
          "[Added Lines]",
          "36:     if (ctype_nid == NID_pkcs7_signed) {",
          "37:         if (p7->d.sign == NULL)",
          "38:             return 0;",
          "40:     } else {",
          "42:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}