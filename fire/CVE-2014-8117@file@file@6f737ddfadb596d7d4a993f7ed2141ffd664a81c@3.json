{
  "cve_id": "CVE-2014-8117",
  "cve_desc": "softmagic.c in file before 5.21 does not properly limit recursion, which allows remote attackers to cause a denial of service (CPU consumption or crash) via unspecified vectors.",
  "repo": "file/file",
  "patch_hash": "6f737ddfadb596d7d4a993f7ed2141ffd664a81c",
  "patch_info": {
    "commit_hash": "6f737ddfadb596d7d4a993f7ed2141ffd664a81c",
    "repo": "file/file",
    "commit_url": "https://github.com/file/file/commit/6f737ddfadb596d7d4a993f7ed2141ffd664a81c",
    "files": [
      "src/file.h",
      "src/funcs.c",
      "src/softmagic.c"
    ],
    "message": "- reduce recursion level from 20 to 10 and make a symbolic constant for it. - pull out the guts of saving and restoring the output buffer into functions   and take care not to overwrite the error message if an error happened.",
    "before_after_code_files": [
      "src/file.h||src/file.h",
      "src/funcs.c||src/funcs.c",
      "src/softmagic.c||src/softmagic.c"
    ]
  },
  "patch_diff": {
    "src/file.h||src/file.h": [
      "File: src/file.h -> src/file.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "495: protected void file_regfree(file_regex_t *);",
      "496: protected void file_regerror(file_regex_t *, int, struct magic_set *);",
      "498: #ifndef COMPILE_ONLY",
      "499: extern const char *file_names[];",
      "500: extern const size_t file_nnames;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "498: typedef struct {",
      "499:  char *buf;",
      "500:  uint32_t offset;",
      "501: } file_pushbuf_t;",
      "503: protected file_pushbuf_t *file_push_buffer(struct magic_set *);",
      "504: protected char  *file_pop_buffer(struct magic_set *, file_pushbuf_t *);",
      "",
      "---------------"
    ],
    "src/funcs.c||src/funcs.c": [
      "File: src/funcs.c -> src/funcs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: #include \"file.h\"",
      "29: #ifndef lint",
      "33: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.72 2014/05/14 23:15:42 christos Exp $\")",
      "",
      "[Added Lines]",
      "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.73 2014/09/10 18:41:51 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "491:  file_magerror(ms, \"regex error %d for `%s', (%s)\", rc, rx->pat,",
      "492:      errmsg);",
      "493: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "495: protected file_pushbuf_t *",
      "496: file_push_buffer(struct magic_set *ms)",
      "497: {",
      "498:  file_pushbuf_t *pb;",
      "500:  if (ms->event_flags & EVENT_HAD_ERR)",
      "501:   return NULL;",
      "503:  if ((pb = (CAST(file_pushbuf_t *, malloc(sizeof(*pb))))) == NULL)",
      "504:   return NULL;",
      "506:  pb->buf = ms->o.buf;",
      "507:  pb->offset = ms->offset;",
      "509:  ms->o.buf = NULL;",
      "510:  ms->offset = 0;",
      "512:  return pb;",
      "513: }",
      "515: protected char *",
      "516: file_pop_buffer(struct magic_set *ms, file_pushbuf_t *pb)",
      "517: {",
      "518:  char *rbuf;",
      "520:  if (ms->event_flags & EVENT_HAD_ERR) {",
      "521:   free(pb->buf);",
      "522:   free(pb);",
      "523:   return NULL;",
      "524:  }",
      "526:  rbuf = ms->o.buf;",
      "528:  ms->o.buf = pb->buf;",
      "529:  ms->offset = pb->offset;",
      "531:  free(pb);",
      "532:  return rbuf;",
      "533: }",
      "",
      "---------------"
    ],
    "src/softmagic.c||src/softmagic.c": [
      "File: src/softmagic.c -> src/softmagic.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "32: #include \"file.h\"",
      "34: #ifndef lint",
      "38: #include \"magic.h\"",
      "",
      "[Removed Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.196 2014/11/07 15:24:14 christos Exp $\")",
      "",
      "[Added Lines]",
      "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.197 2014/11/11 17:48:23 christos Exp $\")",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "63: private void cvt_64(union VALUETYPE *, const struct magic *);",
      "65: #define OFFSET_OOB(n, o, i) ((n) < (o) || (i) > ((n) - (o)))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "67: #define MAX_RECURSION_LEVEL 10",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1217:     int flip, int recursion_level, int *printed_something,",
      "1218:     int *need_separator, int *returnval)",
      "1219: {",
      "1221:  uint32_t lhs;",
      "1222:  int rv, oneed_separator, in_type;",
      "1224:  union VALUETYPE *p = &ms->ms_value;",
      "1225:  struct mlist ml;",
      "1228:   file_error(ms, 0, \"recursion nesting exceeded\");",
      "1229:   return -1;",
      "1230:  }",
      "",
      "[Removed Lines]",
      "1220:  uint32_t soffset, offset = ms->offset;",
      "1223:  char *sbuf, *rbuf;",
      "1227:  if (recursion_level >= 20) {",
      "",
      "[Added Lines]",
      "1223:  uint32_t offset = ms->offset;",
      "1225:  file_pushbuf_t *pb;",
      "1227:  char *rbuf;",
      "1231:  if (recursion_level >= MAX_RECURSION_LEVEL) {",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1669:  case FILE_INDIRECT:",
      "1670:   if (offset == 0)",
      "1671:    return 0;",
      "1672:   if (nbytes < offset)",
      "1673:    return 0;",
      "1678:   rv = file_softmagic(ms, s + offset, nbytes - offset,",
      "1679:       recursion_level, BINTEST, text);",
      "1680:   if ((ms->flags & MAGIC_DEBUG) != 0)",
      "1681:    fprintf(stderr, \"indirect @offs=%u[%d]\\n\", offset, rv);",
      "1685:   if (rv == 1) {",
      "1686:    if ((ms->flags & (MAGIC_MIME|MAGIC_APPLE)) == 0 &&",
      "1687:        file_printf(ms, F(ms, m, \"%u\"), offset) == -1) {",
      "",
      "[Removed Lines]",
      "1674:   sbuf = ms->o.buf;",
      "1675:   soffset = ms->offset;",
      "1676:   ms->o.buf = NULL;",
      "1677:   ms->offset = 0;",
      "1682:   rbuf = ms->o.buf;",
      "1683:   ms->o.buf = sbuf;",
      "1684:   ms->offset = soffset;",
      "",
      "[Added Lines]",
      "1680:   if ((pb = file_push_buffer(ms)) == NULL)",
      "1681:    return -1;",
      "1689:   rbuf = file_pop_buffer(ms, pb);",
      "1690:   if (rbuf == NULL)",
      "1691:    return -1;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1699:  case FILE_USE:",
      "1700:   if (nbytes < offset)",
      "1701:    return 0;",
      "1705:    flip = !flip;",
      "1706:   }",
      "1709:    return -1;",
      "1710:   }",
      "",
      "[Removed Lines]",
      "1702:   sbuf = m->value.s;",
      "1703:   if (*sbuf == '^') {",
      "1704:    sbuf++;",
      "1707:   if (file_magicfind(ms, sbuf, &ml) == -1) {",
      "1708:    file_error(ms, 0, \"cannot find entry `%s'\", sbuf);",
      "",
      "[Added Lines]",
      "1710:   rbuf = m->value.s;",
      "1711:   if (*rbuf == '^') {",
      "1712:    rbuf++;",
      "1715:   if (file_magicfind(ms, rbuf, &ml) == -1) {",
      "1716:    file_error(ms, 0, \"cannot find entry `%s'\", rbuf);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f4481bdba01ddc1e5d834cd98b04ebf95af9b02b",
      "candidate_info": {
        "commit_hash": "f4481bdba01ddc1e5d834cd98b04ebf95af9b02b",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/f4481bdba01ddc1e5d834cd98b04ebf95af9b02b",
        "files": [
          "src/funcs.c"
        ],
        "message": "Honor MAGIC_CONTINUE for all kinds of magic tests",
        "before_after_code_files": [
          "src/funcs.c||src/funcs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/funcs.c||src/funcs.c"
          ],
          "candidate": [
            "src/funcs.c||src/funcs.c"
          ]
        }
      },
      "candidate_diff": {
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.79 2014/12/16 20:52:49 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.80 2015/01/02 21:29:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159: }",
          "161: #ifndef COMPILE_ONLY",
          "163: protected int",
          "164: file_buffer(struct magic_set *ms, int fd, const char *inname __attribute__ ((__unused__)),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "163: static int",
          "164: checkdone(struct magic_set *ms, int *rv)",
          "165: {",
          "166:  if ((ms->flags & MAGIC_CONTINUE) == 0)",
          "167:   return 1;",
          "168:  if (file_printf(ms, \"\\n- \") == -1)",
          "170:  return 0;",
          "171: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "215:   if ((m = file_is_tar(ms, ubuf, nb)) != 0) {",
          "216:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "217:     (void)fprintf(stderr, \"tar %d\\n\", m);",
          "219:   }",
          "",
          "[Removed Lines]",
          "218:    goto done;",
          "",
          "[Added Lines]",
          "229:    if (checkdone(ms, &rv))",
          "230:     goto done;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "223:   if ((m = file_trycdf(ms, fd, ubuf, nb)) != 0) {",
          "224:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "225:     (void)fprintf(stderr, \"cdf %d\\n\", m);",
          "227:   }",
          "",
          "[Removed Lines]",
          "226:    goto done;",
          "",
          "[Added Lines]",
          "238:    if (checkdone(ms, &rv))",
          "239:     goto done;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "250:           \"elf %d\\n\", m);",
          "251:    }",
          "252: #endif",
          "254:   }",
          "",
          "[Removed Lines]",
          "253:    goto done;",
          "",
          "[Added Lines]",
          "266:    if (checkdone(ms, &rv))",
          "267:     goto done;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "259:   if ((m = file_ascmagic(ms, ubuf, nb, looks_text)) != 0) {",
          "260:    if ((ms->flags & MAGIC_DEBUG) != 0)",
          "261:     (void)fprintf(stderr, \"ascmagic %d\\n\", m);",
          "263:   }",
          "264:  }",
          "",
          "[Removed Lines]",
          "262:    goto done;",
          "",
          "[Added Lines]",
          "276:    if (checkdone(ms, &rv))",
          "277:     goto done;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "78c2b81ccb511a740049ffe8ca5410433aae7d4e",
      "candidate_info": {
        "commit_hash": "78c2b81ccb511a740049ffe8ca5410433aae7d4e",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/78c2b81ccb511a740049ffe8ca5410433aae7d4e",
        "files": [
          "src/apprentice.c",
          "src/cdf.c",
          "src/compress.c",
          "src/file.c",
          "src/file.h",
          "src/funcs.c",
          "src/magic.c",
          "src/print.c",
          "src/readcdf.c",
          "src/readelf.c",
          "src/softmagic.c"
        ],
        "message": "Bug + portability fixes from the NetBSD build.",
        "before_after_code_files": [
          "src/apprentice.c||src/apprentice.c",
          "src/cdf.c||src/cdf.c",
          "src/compress.c||src/compress.c",
          "src/file.c||src/file.c",
          "src/file.h||src/file.h",
          "src/funcs.c||src/funcs.c",
          "src/magic.c||src/magic.c",
          "src/print.c||src/print.c",
          "src/readcdf.c||src/readcdf.c",
          "src/readelf.c||src/readelf.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/file.h||src/file.h",
            "src/funcs.c||src/funcs.c",
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/file.h||src/file.h",
            "src/funcs.c||src/funcs.c",
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/apprentice.c||src/apprentice.c": [
          "File: src/apprentice.c -> src/apprentice.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.228 2014/12/16 23:18:40 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: apprentice.c,v 1.229 2015/01/01 17:07:34 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2199:  size_t i;",
          "2200:  const char *l = line;",
          "2201:  struct magic *m = &me->mp[me->cont_count == 0 ? 0 : me->cont_count - 1];",
          "2204:  if (buf[0] != '\\0') {",
          "2205:   len = nt ? strlen(buf) : len;",
          "",
          "[Removed Lines]",
          "2202:  char *buf = (char *)m + off;",
          "",
          "[Added Lines]",
          "2202:  char *buf = CAST(char *, CAST(void *, m)) + off;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2248: {",
          "2249:  struct magic *m = &me->mp[0];",
          "2252:      sizeof(m->apple), \"APPLE\", \"!+-./\", 0);",
          "2253: }",
          "",
          "[Removed Lines]",
          "2251:  return parse_extra(ms, me, line, offsetof(struct magic, apple),",
          "",
          "[Added Lines]",
          "2251:  return parse_extra(ms, me, line,",
          "2252:      CAST(off_t, offsetof(struct magic, apple)),",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2261: {",
          "2262:  struct magic *m = &me->mp[0];",
          "2265:      sizeof(m->mimetype), \"MIME\", \"+-/.\", 1);",
          "2266: }",
          "",
          "[Removed Lines]",
          "2264:  return parse_extra(ms, me, line, offsetof(struct magic, mimetype),",
          "",
          "[Added Lines]",
          "2265:  return parse_extra(ms, me, line,",
          "2266:      CAST(off_t, offsetof(struct magic, mimetype)),",
          "",
          "---------------"
        ],
        "src/cdf.c||src/cdf.c": [
          "File: src/cdf.c -> src/cdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "39: #endif",
          "41: #include <assert.h>",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.68 2014/10/22 19:27:36 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: cdf.c,v 1.69 2014/12/04 15:56:46 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "73: #define CDF_TOLE8(x) ((uint64_t)(NEED_SWAP ? _cdf_tole8(x) : (uint64_t)(x)))",
          "74: #define CDF_TOLE4(x) ((uint32_t)(NEED_SWAP ? _cdf_tole4(x) : (uint32_t)(x)))",
          "75: #define CDF_TOLE2(x) ((uint16_t)(NEED_SWAP ? _cdf_tole2(x) : (uint16_t)(x)))",
          "78: #define CDF_GETUINT32(x, y) cdf_getuint32(x, y)",
          "",
          "[Removed Lines]",
          "76: #define CDF_TOLE(x) (sizeof(x) == 2 ? CDF_TOLE2(x) : (sizeof(x) == 4 ? \\",
          "77:     CDF_TOLE4(x) : CDF_TOLE8(x)))",
          "",
          "[Added Lines]",
          "76: #define CDF_TOLE(x) (/*CONSTCOND*/sizeof(x) == 2 ? \\",
          "77:        CDF_TOLE2(CAST(uint16_t, x)) : \\",
          "78:    (/*CONSTCOND*/sizeof(x) == 4 ? \\",
          "79:        CDF_TOLE4(CAST(uint32_t, x)) : \\",
          "80:        CDF_TOLE8(CAST(uint64_t, x))))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "271:  const char *e = ((const char *)p) + tail;",
          "272:  size_t ss = sst->sst_dirlen < h->h_min_size_standard_stream ?",
          "273:      CDF_SHORT_SEC_SIZE(h) : CDF_SEC_SIZE(h);",
          "275:  if (e >= b && (size_t)(e - b) <= ss * sst->sst_len)",
          "276:   return 0;",
          "277:  DPRINTF((\"%d: offset begin %p < end %p || %\" SIZE_T_FORMAT \"u\"",
          "",
          "[Removed Lines]",
          "274:  (void)&line;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "998: }",
          "1002:     memcpy(&ce[i].f, b + (l), sizeof(ce[i].f)); \\",
          "1005: int",
          "1006: cdf_unpack_catalog(const cdf_header_t *h, const cdf_stream_t *sst,",
          "",
          "[Removed Lines]",
          "1001: #define extract_catalog_field(f, l) \\",
          "1003:     ce[i].f = CDF_TOLE(ce[i].f)",
          "",
          "[Added Lines]",
          "1004: #define extract_catalog_field(t, f, l) \\",
          "1006:     ce[i].f = CAST(t, CDF_TOLE(ce[i].f))",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1028:  ce = (*cat)->cat_e;",
          "1029:  b = CAST(const char *, sst->sst_tab);",
          "1030:  for (i = 0; i < nr; i++) {",
          "1034:   reclen = ce[i].ce_namlen;",
          "1035:   ce[i].ce_namlen =",
          "1036:       sizeof(ce[i].ce_name) / sizeof(ce[i].ce_name[0]) - 1;",
          "1037:   if (ce[i].ce_namlen > reclen - 14)",
          "1038:    ce[i].ce_namlen = reclen - 14;",
          "1040:   for (k = 0; k < ce[i].ce_namlen; k++) {",
          "1043:   }",
          "1044:   ce[i].ce_name[ce[i].ce_namlen] = 0;",
          "1045:   b += reclen;",
          "",
          "[Removed Lines]",
          "1031:   extract_catalog_field(ce_namlen, 0);",
          "1032:   extract_catalog_field(ce_num, 2);",
          "1033:   extract_catalog_field(ce_timestamp, 6);",
          "1039:   np = CAST(const uint16_t *, (b + 16));",
          "1041:    ce[i].ce_name[k] = np[k];",
          "1042:    CDF_TOLE2(ce[i].ce_name[k]);",
          "",
          "[Added Lines]",
          "1034:   extract_catalog_field(uint16_t, ce_namlen, 0);",
          "1035:   extract_catalog_field(uint16_t, ce_num, 2);",
          "1036:   extract_catalog_field(uint64_t, ce_timestamp, 6);",
          "1042:   np = CAST(const uint16_t *, CAST(const void *, (b + 16)));",
          "",
          "---------------"
        ],
        "src/compress.c||src/compress.c": [
          "File: src/compress.c -> src/compress.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: #include \"file.h\"",
          "37: #ifndef lint",
          "39: #endif",
          "41: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "38: FILE_RCSID(\"@(#)$File: compress.c,v 1.76 2014/12/11 11:47:08 christos Exp $\")",
          "",
          "[Added Lines]",
          "38: FILE_RCSID(\"@(#)$File: compress.c,v 1.77 2014/12/12 16:33:01 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "383:  int fdin[2], fdout[2];",
          "384:  int status;",
          "385:  ssize_t r;",
          "388: #ifdef BUILTIN_DECOMPRESS",
          "",
          "[Removed Lines]",
          "386:  pid_t pid;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "397:   file_error(ms, errno, \"cannot create pipe\");",
          "398:   return NODATA;",
          "399:  }",
          "402:   (void) close(0);",
          "403:   if (fd != -1) {",
          "",
          "[Removed Lines]",
          "400:  switch (pid = fork()) {",
          "",
          "[Added Lines]",
          "399:  switch (fork()) {",
          "",
          "---------------"
        ],
        "src/file.c||src/file.c": [
          "File: src/file.c -> src/file.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.159 2014/11/28 02:46:39 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: file.c,v 1.160 2014/12/16 23:18:40 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133: private void usage(void);",
          "134: private void docprint(const char *);",
          "135: private void help(void);",
          "137: private int unwrap(struct magic_set *, const char *);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "133: #ifdef __dead",
          "134: __dead",
          "135: #endif",
          "138: #ifdef __dead",
          "139: __dead",
          "140: #endif",
          "",
          "---------------"
        ],
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "590: #else",
          "591: #define FILE_RCSID(id)",
          "592: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "593: #ifndef __RCSID",
          "594: #define __RCSID(a)",
          "595: #endif",
          "",
          "---------------"
        ],
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.78 2014/12/11 12:34:24 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.79 2014/12/16 20:52:49 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159: }",
          "161: #ifndef COMPILE_ONLY",
          "162: protected int",
          "164:     const void *buf, size_t nb)",
          "165: {",
          "166:  int m = 0, rv = 0, looks_text = 0;",
          "",
          "[Removed Lines]",
          "163: file_buffer(struct magic_set *ms, int fd, const char *inname __attribute__ ((unused)),",
          "",
          "[Added Lines]",
          "164: file_buffer(struct magic_set *ms, int fd, const char *inname __attribute__ ((__unused__)),",
          "",
          "---------------"
        ],
        "src/magic.c||src/magic.c": [
          "File: src/magic.c -> src/magic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "33: #include \"file.h\"",
          "35: #ifndef lint",
          "39: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.90 2014/12/04 15:56:46 christos Exp $\")",
          "",
          "[Added Lines]",
          "36: FILE_RCSID(\"@(#)$File: magic.c,v 1.91 2014/12/16 23:18:40 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "543: {",
          "544:  switch (param) {",
          "545:  case MAGIC_PARAM_INDIR_MAX:",
          "547:   return 0;",
          "548:  case MAGIC_PARAM_NAME_MAX:",
          "550:   return 0;",
          "551:  case MAGIC_PARAM_ELF_PHNUM_MAX:",
          "553:   return 0;",
          "554:  case MAGIC_PARAM_ELF_SHNUM_MAX:",
          "556:   return 0;",
          "557:  case MAGIC_PARAM_ELF_NOTES_MAX:",
          "559:   return 0;",
          "560:  default:",
          "561:   errno = EINVAL;",
          "",
          "[Removed Lines]",
          "546:   ms->indir_max = *(const size_t *)val;",
          "549:   ms->name_max = *(const size_t *)val;",
          "552:   ms->elf_phnum_max = *(const size_t *)val;",
          "555:   ms->elf_shnum_max = *(const size_t *)val;",
          "558:   ms->elf_notes_max = *(const size_t *)val;",
          "",
          "[Added Lines]",
          "546:   ms->indir_max = (uint16_t)*(const size_t *)val;",
          "549:   ms->name_max = (uint16_t)*(const size_t *)val;",
          "552:   ms->elf_phnum_max = (uint16_t)*(const size_t *)val;",
          "555:   ms->elf_shnum_max = (uint16_t)*(const size_t *)val;",
          "558:   ms->elf_notes_max = (uint16_t)*(const size_t *)val;",
          "",
          "---------------"
        ],
        "src/print.c||src/print.c": [
          "File: src/print.c -> src/print.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include <string.h>",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: print.c,v 1.75 2012/10/30 23:11:51 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: print.c,v 1.76 2013/02/26 18:25:00 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "164:   case FILE_MELDATE:",
          "165:    (void)fprintf(stderr, \"%s,\",",
          "166:        file_fmttime(m->value.l, 0, tbuf));",
          "167:   case FILE_QDATE:",
          "168:   case FILE_LEQDATE:",
          "169:   case FILE_BEQDATE:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167:    break;",
          "",
          "---------------"
        ],
        "src/readcdf.c||src/readcdf.c": [
          "File: src/readcdf.c -> src/readcdf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: #include \"file.h\"",
          "28: #ifndef lint",
          "30: #endif",
          "32: #include <assert.h>",
          "",
          "[Removed Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.48 2014/09/10 18:41:51 christos Exp $\")",
          "",
          "[Added Lines]",
          "29: FILE_RCSID(\"@(#)$File: readcdf.c,v 1.49 2014/12/04 15:56:46 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39: #include \"cdf.h\"",
          "40: #include \"magic.h\"",
          "42: #define NOTMIME(ms) (((ms)->flags & MAGIC_MIME) == 0)",
          "44: static const struct nv {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42: #ifndef __arraycount",
          "43: #define __arraycount(a) (sizeof(a) / sizeof(a[0]))",
          "44: #endif",
          "",
          "---------------"
        ],
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.116 2014/12/16 23:18:40 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.117 2014/12/16 23:29:42 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "622:    return 1;",
          "624:   for (i = 0; i < __arraycount(pax); i++) {",
          "626:     continue;",
          "627:    if (file_printf(ms, \"%s%s\", did++ ? \",\" : \"\",",
          "628:        pax[i]) == -1)",
          "",
          "[Removed Lines]",
          "625:    if (((1 << i) & desc) == 0)",
          "",
          "[Added Lines]",
          "626:    if (((1 << (int)i) & desc) == 0)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1008:  }",
          "1012:   file_badread(ms);",
          "1013:   return -1;",
          "1014:  }",
          "",
          "[Removed Lines]",
          "1011:  if (pread(fd, xsh_addr, xsh_sizeof, off + size * strtab) < (ssize_t)xsh_sizeof) {",
          "",
          "[Added Lines]",
          "1012:  if (pread(fd, xsh_addr, xsh_sizeof, CAST(off_t, (off + size * strtab)))",
          "1013:      < (ssize_t)xsh_sizeof) {",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.205 2015/01/01 04:12:23 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.206 2015/01/01 17:07:34 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1667:  case FILE_INDIRECT:",
          "1668:   if (m->str_flags & INDIRECT_RELATIVE)",
          "1670:   if (offset == 0)",
          "1671:    return 0;",
          "",
          "[Removed Lines]",
          "1669:    offset += o;",
          "",
          "[Added Lines]",
          "1669:    offset += CAST(uint32_t, o);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cf0d80b4564ad2b7426ad7542f6de7f34f29eff5",
      "candidate_info": {
        "commit_hash": "cf0d80b4564ad2b7426ad7542f6de7f34f29eff5",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/cf0d80b4564ad2b7426ad7542f6de7f34f29eff5",
        "files": [
          "src/softmagic.c"
        ],
        "message": "Fix: perl -e 'print \"\\x0\" x 8, \"bad\", \"\\x0\" x 1013, \"H+\", \"\\x0\" x 6, \"good\"' | ./file printing bad... Reset the continuation offset. From Christoph Biedl",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.208 2015/01/05 00:16:01 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.209 2015/01/05 20:05:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "361:   if ((ms->flags & MAGIC_CONTINUE) == 0 && *printed_something) {",
          "363:   }",
          "364:  }",
          "366: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "364:   cont_level = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a02398dde8087d55dccf04e13ec0a0bbf7c24ae2",
      "candidate_info": {
        "commit_hash": "a02398dde8087d55dccf04e13ec0a0bbf7c24ae2",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/a02398dde8087d55dccf04e13ec0a0bbf7c24ae2",
        "files": [
          "ChangeLog",
          "src/file.h",
          "src/funcs.c",
          "src/readelf.c",
          "src/softmagic.c"
        ],
        "message": "* change printable -> file_printable and use it in more places for safety * in ELF, instead of \"(uses dynamic libraries)\" when PT_INTERP   is present print the interpreter name.",
        "before_after_code_files": [
          "src/file.h||src/file.h",
          "src/funcs.c||src/funcs.c",
          "src/readelf.c||src/readelf.c",
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/file.h||src/file.h",
            "src/funcs.c||src/funcs.c",
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/file.h||src/file.h",
            "src/funcs.c||src/funcs.c",
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/file.h||src/file.h": [
          "File: src/file.h -> src/file.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "476:     size_t *);",
          "477: protected size_t file_pstring_length_size(const struct magic *);",
          "478: protected size_t file_pstring_get_length(const struct magic *, const char *);",
          "479: #ifdef __EMX__",
          "480: protected int file_os2_apptype(struct magic_set *, const char *, const void *,",
          "481:     size_t);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "479: protected char * file_printable(char *, size_t, const char *);",
          "",
          "---------------"
        ],
        "src/funcs.c||src/funcs.c": [
          "File: src/funcs.c -> src/funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "33: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.76 2014/11/28 02:35:05 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: funcs.c,v 1.77 2014/11/28 02:46:39 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "531:  free(pb);",
          "532:  return rbuf;",
          "533: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "538: protected char *",
          "539: file_printable(char *buf, size_t bufsiz, const char *str)",
          "540: {",
          "541:  char *ptr, *eptr;",
          "542:  const unsigned char *s = (const unsigned char *)str;",
          "544:  for (ptr = buf, eptr = ptr + bufsiz - 1; ptr < eptr && *s; s++) {",
          "545:   if (isprint(*s)) {",
          "547:    continue;",
          "548:   }",
          "549:   if (ptr >= eptr + 4)",
          "550:    break;",
          "555:  }",
          "557:  return buf;",
          "558: }",
          "",
          "---------------"
        ],
        "src/readelf.c||src/readelf.c": [
          "File: src/readelf.c -> src/readelf.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: #include \"file.h\"",
          "29: #ifndef lint",
          "31: #endif",
          "33: #ifdef BUILTIN_ELF",
          "",
          "[Removed Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.110 2014/12/09 02:47:07 christos Exp $\")",
          "",
          "[Added Lines]",
          "30: FILE_RCSID(\"@(#)$File: readelf.c,v 1.111 2014/12/09 02:47:45 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "489: #endif",
          "490:  uint32_t namesz, descsz;",
          "491:  unsigned char *nbuf = CAST(unsigned char *, vbuf);",
          "493:  if (xnh_sizeof + offset > size) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "492:  char sbuf[512];",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "740:    if (file_printf(ms, \", from '%.31s'\",",
          "742:     return size;",
          "",
          "[Removed Lines]",
          "741:        &nbuf[doff + 0x7c]) == -1)",
          "",
          "[Added Lines]",
          "742:        file_printable(sbuf, sizeof(sbuf),",
          "743:        (const char *)&nbuf[doff + 0x7c])) == -1)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1163:  Elf32_Phdr ph32;",
          "1164:  Elf64_Phdr ph64;",
          "1165:  const char *linking_style = \"statically\";",
          "1167:  unsigned char nbuf[BUFSIZ];",
          "1168:  ssize_t bufsize;",
          "1169:  size_t offset, align, len;",
          "",
          "[Removed Lines]",
          "1166:  const char *shared_libraries = \"\";",
          "",
          "[Added Lines]",
          "1168:  const char *interp = \"\";",
          "1170:  char ibuf[BUFSIZ];",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1181:   }",
          "1183:   off += size;",
          "1186:   switch (xph_type) {",
          "1187:   case PT_DYNAMIC:",
          "1188:    linking_style = \"dynamically\";",
          "1189:    break;",
          "1190:   case PT_INTERP:",
          "1192:    break;",
          "1193:   default:",
          "1194:    if (fsize != SIZE_UNKNOWN && xph_offset > fsize) {",
          "",
          "[Removed Lines]",
          "1191:    shared_libraries = \" (uses shared libs)\";",
          "",
          "[Added Lines]",
          "1187:   bufsize = 0;",
          "1188:   align = 4;",
          "1195:   case PT_NOTE:",
          "1197:     continue;",
          "1198:    if (((align = xph_align) & 0x80000000UL) != 0 ||",
          "1199:        align < 4) {",
          "1200:     if (file_printf(ms,",
          "1201:         \", invalid note alignment 0x%lx\",",
          "1202:         (unsigned long)align) == -1)",
          "1203:      return -1;",
          "1204:     align = 4;",
          "1205:    }",
          "1208:    len = xph_filesz < sizeof(nbuf) ? xph_filesz",
          "1209:        : sizeof(nbuf);",
          "1210:    bufsize = pread(fd, nbuf, len, xph_offset);",
          "1211:    if (bufsize == -1) {",
          "1212:     file_badread(ms);",
          "1213:     return -1;",
          "1214:    }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1202:   switch (xph_type) {",
          "1211:    }",
          "1225:    offset = 0;",
          "1226:    for (;;) {",
          "1227:     if (offset >= (size_t)bufsize)",
          "",
          "[Removed Lines]",
          "1203:   case PT_NOTE:",
          "1204:    if (((align = xph_align) & 0x80000000UL) != 0 ||",
          "1205:        align < 4) {",
          "1206:     if (file_printf(ms,",
          "1207:         \", invalid note alignment 0x%lx\",",
          "1208:         (unsigned long)align) == -1)",
          "1209:      return -1;",
          "1210:     align = 4;",
          "1212:    if (sh_num)",
          "1213:     break;",
          "1218:    len = xph_filesz < sizeof(nbuf) ? xph_filesz",
          "1219:        : sizeof(nbuf);",
          "1220:    bufsize = pread(fd, nbuf, len, xph_offset);",
          "1221:    if (bufsize == -1) {",
          "1222:     file_badread(ms);",
          "1223:     return -1;",
          "1224:    }",
          "",
          "[Added Lines]",
          "1226:   case PT_INTERP:",
          "1227:    if (bufsize) {",
          "1228:     nbuf[bufsize - 1] = '\\0';",
          "1229:     interp = (const char *)nbuf;",
          "1231:    break;",
          "1232:   case PT_NOTE:",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1237:    break;",
          "1238:   }",
          "1239:  }",
          "1241:      == -1)",
          "1243:  return 0;",
          "1244: }",
          "",
          "[Removed Lines]",
          "1240:  if (file_printf(ms, \", %s linked%s\", linking_style, shared_libraries)",
          "1242:      return -1;",
          "",
          "[Added Lines]",
          "1252:  if (file_printf(ms, \", %s linked\", linking_style)",
          "1254:   return -1;",
          "1255:  if (interp[0])",
          "1256:   if (file_printf(ms, \", interpreter %s\",",
          "1257:       file_printable(ibuf, sizeof(ibuf), interp)) == -1)",
          "1258:    return -1;",
          "",
          "---------------"
        ],
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.202 2014/11/28 02:46:39 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.203 2014/12/04 15:22:05 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "404: }",
          "429: private int32_t",
          "430: mprint(struct magic_set *ms, struct magic *m)",
          "431: {",
          "",
          "[Removed Lines]",
          "407: static char *",
          "408: printable(char *buf, size_t bufsiz, const char *str)",
          "409: {",
          "410:  char *ptr, *eptr;",
          "411:  const unsigned char *s = (const unsigned char *)str;",
          "413:  for (ptr = buf, eptr = ptr + bufsiz - 1; ptr < eptr && *s; s++) {",
          "414:   if (isprint(*s)) {",
          "416:    continue;",
          "417:   }",
          "418:   if (ptr >= eptr + 4)",
          "419:    break;",
          "424:  }",
          "426:  return buf;",
          "427: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "433:  float vf;",
          "434:  double vd;",
          "435:  int64_t t = 0;",
          "437:  union VALUETYPE *p = &ms->ms_value;",
          "439:    switch (m->type) {",
          "",
          "[Removed Lines]",
          "436:   char buf[128], tbuf[26];",
          "",
          "[Added Lines]",
          "414:   char buf[128], tbuf[26], sbuf[512];",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "527:    case FILE_BESTRING16:",
          "528:    case FILE_LESTRING16:",
          "529:   if (m->reln == '=' || m->reln == '!') {",
          "531:     return -1;",
          "532:    t = ms->offset + m->vallen;",
          "533:   }",
          "534:   else {",
          "536:    char *str = p->s;",
          "",
          "[Removed Lines]",
          "530:    if (file_printf(ms, F(ms, m, \"%s\"), m->value.s) == -1)",
          "535:    char sbuf[512];",
          "",
          "[Added Lines]",
          "508:    if (file_printf(ms, F(ms, m, \"%s\"),",
          "509:        file_printable(sbuf, sizeof(sbuf), m->value.s))",
          "510:        == -1)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "555:    }",
          "557:    if (file_printf(ms, F(ms, m, \"%s\"),",
          "559:     return -1;",
          "561:    if (m->type == FILE_PSTRING)",
          "",
          "[Removed Lines]",
          "558:        printable(sbuf, sizeof(sbuf), str)) == -1)",
          "",
          "[Added Lines]",
          "537:        file_printable(sbuf, sizeof(sbuf), str)) == -1)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "659:    file_oomem(ms, ms->search.rm_len);",
          "660:    return -1;",
          "661:   }",
          "663:   free(cp);",
          "665:   if (rval == -1)",
          "",
          "[Removed Lines]",
          "662:   rval = file_printf(ms, F(ms, m, \"%s\"), cp);",
          "",
          "[Added Lines]",
          "641:   rval = file_printf(ms, F(ms, m, \"%s\"),",
          "642:       file_printable(sbuf, sizeof(sbuf), cp));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "673:  }",
          "675:  case FILE_SEARCH:",
          "677:    return -1;",
          "678:   if ((m->str_flags & REGEX_OFFSET_START))",
          "679:    t = ms->search.offset;",
          "",
          "[Removed Lines]",
          "676:     if (file_printf(ms, F(ms, m, \"%s\"), m->value.s) == -1)",
          "",
          "[Added Lines]",
          "656:     if (file_printf(ms, F(ms, m, \"%s\"),",
          "657:       file_printable(sbuf, sizeof(sbuf), m->value.s)) == -1)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3046c231e1a2fcdd5033bea0603c23f435a00bd7",
      "candidate_info": {
        "commit_hash": "3046c231e1a2fcdd5033bea0603c23f435a00bd7",
        "repo": "file/file",
        "commit_url": "https://github.com/file/file/commit/3046c231e1a2fcdd5033bea0603c23f435a00bd7",
        "files": [
          "src/softmagic.c"
        ],
        "message": "limit bytecnt",
        "before_after_code_files": [
          "src/softmagic.c||src/softmagic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/softmagic.c||src/softmagic.c"
          ],
          "candidate": [
            "src/softmagic.c||src/softmagic.c"
          ]
        }
      },
      "candidate_diff": {
        "src/softmagic.c||src/softmagic.c": [
          "File: src/softmagic.c -> src/softmagic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"file.h\"",
          "34: #ifndef lint",
          "38: #include \"magic.h\"",
          "",
          "[Removed Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.210 2015/01/05 20:21:30 christos Exp $\")",
          "",
          "[Added Lines]",
          "35: FILE_RCSID(\"@(#)$File: softmagic.c,v 1.211 2015/01/09 19:27:41 christos Exp $\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1103:     bytecnt = m->str_range;",
          "1104:    }",
          "1111:    buf = RCAST(const char *, s) + offset;",
          "1112:    end = last = RCAST(const char *, s) + bytecnt;",
          "",
          "[Removed Lines]",
          "1106:    if (bytecnt == 0)",
          "1107:     bytecnt = 8192;",
          "1108:    if (bytecnt > nbytes)",
          "1109:     bytecnt = nbytes;",
          "",
          "[Added Lines]",
          "1106:    if (bytecnt == 0 || bytecnt > nbytes - offset)",
          "1107:     bytecnt = nbytes - offset;",
          "",
          "---------------"
        ]
      }
    }
  ]
}