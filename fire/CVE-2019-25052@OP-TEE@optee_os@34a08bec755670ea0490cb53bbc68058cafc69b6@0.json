{
  "cve_id": "CVE-2019-25052",
  "cve_desc": "In Linaro OP-TEE before 3.7.0, by using inconsistent or malformed data, it is possible to call update and final cryptographic functions directly, causing a crash that could leak sensitive information.",
  "repo": "OP-TEE/optee_os",
  "patch_hash": "34a08bec755670ea0490cb53bbc68058cafc69b6",
  "patch_info": {
    "commit_hash": "34a08bec755670ea0490cb53bbc68058cafc69b6",
    "repo": "OP-TEE/optee_os",
    "commit_url": "https://github.com/OP-TEE/optee_os/commit/34a08bec755670ea0490cb53bbc68058cafc69b6",
    "files": [
      "core/tee/tee_svc_cryp.c"
    ],
    "message": "cryp: prevent direct calls to update and final functions\n\nWith inconsistent or malformed data it has been possible to call\n\"update\" and \"final\" crypto functions directly. Using a fuzzer tool [1]\nwe have seen that this results in asserts, i.e., a crash that\npotentially could leak sensitive information.\n\nBy setting the state (initialized) in the crypto context (i.e., the\ntee_cryp_state) at the end of all syscall_*_init functions and then add\na check of the state at the beginning of all update and final functions,\n  we prevent direct entrance to the \"update\" and \"final\" functions.\n\n[1] https://github.com/MartijnB/optee_fuzzer\n\nFixes: OP-TEE-2019-0021\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nReported-by: Martijn Bogaard <bogaard@riscure.com>\nAcked-by: Jerome Forissier <jerome.forissier@linaro.org>\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>",
    "before_after_code_files": [
      "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
    ]
  },
  "patch_diff": {
    "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c": [
      "File: core/tee/tee_svc_cryp.c -> core/tee/tee_svc_cryp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "31: #include <tee/tee_cryp_pbkdf2.h>",
      "32: #endif",
      "34: typedef void (*tee_cryp_ctx_finalize_func_t) (void *ctx, uint32_t algo);",
      "35: struct tee_cryp_state {",
      "36:  TAILQ_ENTRY(tee_cryp_state) link;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "34: enum cryp_state {",
      "35:  CRYP_STATE_INITIALIZED = 0,",
      "36:  CRYP_STATE_UNINITIALIZED",
      "37: };",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "40:  vaddr_t key2;",
      "41:  void *ctx;",
      "42:  tee_cryp_ctx_finalize_func_t ctx_finalize;",
      "43: };",
      "45: struct tee_cryp_obj_secret {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "48:  enum cryp_state state;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2056:  TAILQ_INSERT_TAIL(&utc->cryp_states, cs, link);",
      "2057:  cs->algo = algo;",
      "2058:  cs->mode = mode;",
      "2060:  switch (TEE_ALG_GET_CLASS(algo)) {",
      "2061:  case TEE_OPERATION_EXTENSION:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2065:  cs->state = CRYP_STATE_UNINITIALIZED;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2179:   return TEE_ERROR_BAD_STATE;",
      "2180:  }",
      "2182:  return TEE_SUCCESS;",
      "2183: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2189:  cs_dst->state = cs_src->state;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2253:   return TEE_ERROR_BAD_PARAMETERS;",
      "2254:  }",
      "2256:  return TEE_SUCCESS;",
      "2257: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2265:  cs->state = CRYP_STATE_INITIALIZED;",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2286:  if (res != TEE_SUCCESS)",
      "2287:   return res;",
      "2289:  switch (TEE_ALG_GET_CLASS(cs->algo)) {",
      "2290:  case TEE_OPERATION_DIGEST:",
      "2291:   res = crypto_hash_update(cs->ctx, cs->algo, chunk, chunk_size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2300:  if (cs->state != CRYP_STATE_INITIALIZED)",
      "2301:   return TEE_ERROR_BAD_STATE;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2344:  if (res != TEE_SUCCESS)",
      "2345:   return res;",
      "2347:  switch (TEE_ALG_GET_CLASS(cs->algo)) {",
      "2348:  case TEE_OPERATION_DIGEST:",
      "2349:   res = tee_hash_get_digest_size(cs->algo, &hash_size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2361:  if (cs->state != CRYP_STATE_INITIALIZED)",
      "2362:   return TEE_ERROR_BAD_STATE;",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2453:   return res;",
      "2455:  cs->ctx_finalize = crypto_cipher_final;",
      "2456:  return TEE_SUCCESS;",
      "2457: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2473:  cs->state = CRYP_STATE_INITIALIZED;",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2473:  if (res != TEE_SUCCESS)",
      "2474:   return res;",
      "2476:  res = tee_mmu_check_access_rights(to_user_ta_ctx(sess->ctx),",
      "2477:        TEE_MEMORY_ACCESS_READ |",
      "2478:        TEE_MEMORY_ACCESS_ANY_OWNER,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2495:  if (cs->state != CRYP_STATE_INITIALIZED)",
      "2496:   return TEE_ERROR_BAD_STATE;",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2987:   return res;",
      "2989:  cs->ctx_finalize = (tee_cryp_ctx_finalize_func_t)crypto_authenc_final;",
      "2990:  return TEE_SUCCESS;",
      "2991: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3012:  cs->state = CRYP_STATE_INITIALIZED;",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "3013:  if (res != TEE_SUCCESS)",
      "3014:   return res;",
      "3016:  if (TEE_ALG_GET_CLASS(cs->algo) != TEE_OPERATION_AE)",
      "3017:   return TEE_ERROR_BAD_STATE;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3040:  if (cs->state != CRYP_STATE_INITIALIZED)",
      "3041:   return TEE_ERROR_BAD_STATE;",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "3041:  if (res != TEE_SUCCESS)",
      "3042:   return res;",
      "3044:  if (TEE_ALG_GET_CLASS(cs->algo) != TEE_OPERATION_AE)",
      "3045:   return TEE_ERROR_BAD_STATE;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3071:  if (cs->state != CRYP_STATE_INITIALIZED)",
      "3072:   return TEE_ERROR_BAD_STATE;",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "3100:  if (res != TEE_SUCCESS)",
      "3101:   return res;",
      "3103:  if (cs->mode != TEE_MODE_ENCRYPT)",
      "3104:   return TEE_ERROR_BAD_PARAMETERS;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3133:  if (cs->state != CRYP_STATE_INITIALIZED)",
      "3134:   return TEE_ERROR_BAD_STATE;",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "3184:  if (res != TEE_SUCCESS)",
      "3185:   return res;",
      "3187:  if (cs->mode != TEE_MODE_DECRYPT)",
      "3188:   return TEE_ERROR_BAD_PARAMETERS;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3220:  if (cs->state != CRYP_STATE_INITIALIZED)",
      "3221:   return TEE_ERROR_BAD_STATE;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "28aa35f5d9df4a9df841ca89fe1b0b21d595b4d7",
      "candidate_info": {
        "commit_hash": "28aa35f5d9df4a9df841ca89fe1b0b21d595b4d7",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/28aa35f5d9df4a9df841ca89fe1b0b21d595b4d7",
        "files": [
          "core/tee/tee_svc_cryp.c"
        ],
        "message": "cryp: ensure that mode is cipher in syscall_cipher_init\n\nWhen calling syscall_cipher_init there is no check being done that the\nstate coming from the TA has been initialized to a valid cipher state.\nBy checking the class we prevent an assert in cipher_ops.\n\nFixes: OP-TEE-2019-0020\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nReported-by: Martijn Bogaard <bogaard@riscure.com>\nAcked-by: Jerome Forissier <jerome.forissier@linaro.org>\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>",
        "before_after_code_files": [
          "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/3316"
        ],
        "olp_code_files": {
          "patch": [
            "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
          ],
          "candidate": [
            "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
          ]
        }
      },
      "candidate_diff": {
        "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c": [
          "File: core/tee/tee_svc_cryp.c -> core/tee/tee_svc_cryp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2416:  if (res != TEE_SUCCESS)",
          "2417:   return res;",
          "2419:  res = tee_mmu_check_access_rights(utc,",
          "2420:        TEE_MEMORY_ACCESS_READ |",
          "2421:        TEE_MEMORY_ACCESS_ANY_OWNER,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2419:  if (TEE_ALG_GET_CLASS(cs->algo) != TEE_OPERATION_CIPHER)",
          "2420:   return TEE_ERROR_BAD_STATE;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "45a367d8cf3692389c49058731503c54ec5c70df",
      "candidate_info": {
        "commit_hash": "45a367d8cf3692389c49058731503c54ec5c70df",
        "repo": "OP-TEE/optee_os",
        "commit_url": "https://github.com/OP-TEE/optee_os/commit/45a367d8cf3692389c49058731503c54ec5c70df",
        "files": [
          "core/tee/tee_svc_cryp.c"
        ],
        "message": "cryp: ensure that mode is AE in syscall_authenc_ functions\n\nWhen doing calls to syscall_authenc_xyz functions (all of them except\nsyscall_authenc_init) there is no check being done that the state coming\nfrom the TA has been initialized to a valid authenticated encryption\nstate. As a consequence of that it's possible to redirect execution to\nother functions. Doing like that will make TEE core end up with a data\nabort.\n\nFixes: OP-TEE-2019-0019\n\nSigned-off-by: Joakim Bech <joakim.bech@linaro.org>\nReported-by: Martijn Bogaard <bogaard@riscure.com>\nAcked-by: Jerome Forissier <jerome.forissier@linaro.org>\nReviewed-by: Jens Wiklander <jens.wiklander@linaro.org>",
        "before_after_code_files": [
          "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OP-TEE/optee_os/pull/3316"
        ],
        "olp_code_files": {
          "patch": [
            "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
          ],
          "candidate": [
            "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c"
          ]
        }
      },
      "candidate_diff": {
        "core/tee/tee_svc_cryp.c||core/tee/tee_svc_cryp.c": [
          "File: core/tee/tee_svc_cryp.c -> core/tee/tee_svc_cryp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3010:  if (res != TEE_SUCCESS)",
          "3011:   return res;",
          "3013:  res = crypto_authenc_update_aad(cs->ctx, cs->algo, cs->mode,",
          "3014:      aad_data, aad_data_len);",
          "3015:  if (res != TEE_SUCCESS)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3013:  if (TEE_ALG_GET_CLASS(cs->algo) != TEE_OPERATION_AE)",
          "3014:   return TEE_ERROR_BAD_STATE;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3035:  if (res != TEE_SUCCESS)",
          "3036:   return res;",
          "3038:  res = tee_mmu_check_access_rights(to_user_ta_ctx(sess->ctx),",
          "3039:        TEE_MEMORY_ACCESS_READ |",
          "3040:        TEE_MEMORY_ACCESS_ANY_OWNER,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3041:  if (TEE_ALG_GET_CLASS(cs->algo) != TEE_OPERATION_AE)",
          "3042:   return TEE_ERROR_BAD_STATE;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3094:  if (cs->mode != TEE_MODE_ENCRYPT)",
          "3095:   return TEE_ERROR_BAD_PARAMETERS;",
          "3097:  res = tee_mmu_check_access_rights(to_user_ta_ctx(sess->ctx),",
          "3098:        TEE_MEMORY_ACCESS_READ |",
          "3099:        TEE_MEMORY_ACCESS_ANY_OWNER,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3103:  if (TEE_ALG_GET_CLASS(cs->algo) != TEE_OPERATION_AE)",
          "3104:   return TEE_ERROR_BAD_STATE;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3175:  if (cs->mode != TEE_MODE_DECRYPT)",
          "3176:   return TEE_ERROR_BAD_PARAMETERS;",
          "3178:  res = tee_mmu_check_access_rights(to_user_ta_ctx(sess->ctx),",
          "3179:        TEE_MEMORY_ACCESS_READ |",
          "3180:        TEE_MEMORY_ACCESS_ANY_OWNER,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3187:  if (TEE_ALG_GET_CLASS(cs->algo) != TEE_OPERATION_AE)",
          "3188:   return TEE_ERROR_BAD_STATE;",
          "",
          "---------------"
        ]
      }
    }
  ]
}