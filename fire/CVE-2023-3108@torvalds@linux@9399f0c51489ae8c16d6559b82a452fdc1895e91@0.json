{
  "cve_id": "CVE-2023-3108",
  "cve_desc": "A flaw was found in the subsequent get_user_pages_fast in the Linux kernel\u2019s interface for symmetric key cipher algorithms in the skcipher_recvmsg of crypto/algif_skcipher.c function. This flaw allows a local user to crash the system.",
  "repo": "torvalds/linux",
  "patch_hash": "9399f0c51489ae8c16d6559b82a452fdc1895e91",
  "patch_info": {
    "commit_hash": "9399f0c51489ae8c16d6559b82a452fdc1895e91",
    "repo": "torvalds/linux",
    "commit_url": "https://github.com/torvalds/linux/commit/9399f0c51489ae8c16d6559b82a452fdc1895e91",
    "files": [
      "crypto/af_alg.c",
      "crypto/algif_skcipher.c"
    ],
    "message": "crypto: fix af_alg_make_sg() conversion to iov_iter\n\nCommit 1d10eb2f156f (\"crypto: switch af_alg_make_sg() to iov_iter\")\nbroke af_alg_make_sg() and skcipher_recvmsg() in the process of moving\nthem to the iov_iter interfaces.  The 'npages' calculation in the formar\ncalculated the number of *bytes* in the pages, and in the latter case\nthe conversion didn't re-read the value of 'ctx->used' after waiting for\nit to become non-zero.\n\nThis reverts to the original code for both these cases.\n\nCc: Al Viro <viro@zeniv.linux.org.uk>\nCc: David Miller <davem@davemloft.net>\nSigned-off-by: Linus Torvalds <torvalds@linux-foundation.org>",
    "before_after_code_files": [
      "crypto/af_alg.c||crypto/af_alg.c",
      "crypto/algif_skcipher.c||crypto/algif_skcipher.c"
    ]
  },
  "patch_diff": {
    "crypto/af_alg.c||crypto/af_alg.c": [
      "File: crypto/af_alg.c -> crypto/af_alg.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "348:  if (n < 0)",
      "349:   return n;",
      "352:  if (WARN_ON(npages == 0))",
      "353:   return -EINVAL;",
      "",
      "[Removed Lines]",
      "351:  npages = PAGE_ALIGN(off + n);",
      "",
      "[Added Lines]",
      "351:  npages = (off + n + PAGE_SIZE - 1) >> PAGE_SHIFT;",
      "",
      "---------------"
    ],
    "crypto/algif_skcipher.c||crypto/algif_skcipher.c": [
      "File: crypto/algif_skcipher.c -> crypto/algif_skcipher.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "439:   while (!sg->length)",
      "440:    sg++;",
      "444:    err = skcipher_wait_for_data(sk, flags);",
      "445:    if (err)",
      "446:     goto unlock;",
      "447:   }",
      "451:   used = af_alg_make_sg(&ctx->rsgl, &msg->msg_iter, used);",
      "452:   err = used;",
      "",
      "[Removed Lines]",
      "442:   used = ctx->used;",
      "443:   if (!used) {",
      "449:   used = min_t(unsigned long, used, iov_iter_count(&msg->msg_iter));",
      "",
      "[Added Lines]",
      "442:   if (!ctx->used) {",
      "448:   used = min_t(unsigned long, ctx->used, iov_iter_count(&msg->msg_iter));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "01e97e6517053d7c0b9af5248e944a9209909cf5",
      "candidate_info": {
        "commit_hash": "01e97e6517053d7c0b9af5248e944a9209909cf5",
        "repo": "torvalds/linux",
        "commit_url": "https://github.com/torvalds/linux/commit/01e97e6517053d7c0b9af5248e944a9209909cf5",
        "files": [
          "crypto/algif_hash.c",
          "crypto/algif_skcipher.c",
          "drivers/vhost/net.c",
          "include/linux/socket.h",
          "net/core/datagram.c",
          "net/ipv4/tcp.c",
          "net/rxrpc/ar-output.c",
          "net/socket.c"
        ],
        "message": "new helper: msg_data_left()\n\nconvert open-coded instances\n\nSigned-off-by: Al Viro <viro@zeniv.linux.org.uk>",
        "before_after_code_files": [
          "crypto/algif_hash.c||crypto/algif_hash.c",
          "crypto/algif_skcipher.c||crypto/algif_skcipher.c",
          "drivers/vhost/net.c||drivers/vhost/net.c",
          "include/linux/socket.h||include/linux/socket.h",
          "net/core/datagram.c||net/core/datagram.c",
          "net/ipv4/tcp.c||net/ipv4/tcp.c",
          "net/rxrpc/ar-output.c||net/rxrpc/ar-output.c",
          "net/socket.c||net/socket.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "crypto/algif_skcipher.c||crypto/algif_skcipher.c"
          ],
          "candidate": [
            "crypto/algif_skcipher.c||crypto/algif_skcipher.c"
          ]
        }
      },
      "candidate_diff": {
        "crypto/algif_hash.c||crypto/algif_hash.c": [
          "File: crypto/algif_hash.c -> crypto/algif_hash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:  ctx->more = 0;",
          "62:   if (len > limit)",
          "63:    len = limit;",
          "",
          "[Removed Lines]",
          "59:  while (iov_iter_count(&msg->msg_iter)) {",
          "60:   int len = iov_iter_count(&msg->msg_iter);",
          "",
          "[Added Lines]",
          "59:  while (msg_data_left(msg)) {",
          "60:   int len = msg_data_left(msg);",
          "",
          "---------------"
        ],
        "crypto/algif_skcipher.c||crypto/algif_skcipher.c": [
          "File: crypto/algif_skcipher.c -> crypto/algif_skcipher.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "641:  long copied = 0;",
          "643:  lock_sock(sk);",
          "645:   sgl = list_first_entry(&ctx->tsgl,",
          "646:            struct skcipher_sg_list, list);",
          "647:   sg = sgl->sg;",
          "",
          "[Removed Lines]",
          "644:  while (iov_iter_count(&msg->msg_iter)) {",
          "",
          "[Added Lines]",
          "644:  while (msg_data_left(msg)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "655:     goto unlock;",
          "656:   }",
          "660:   used = af_alg_make_sg(&ctx->rsgl, &msg->msg_iter, used);",
          "661:   err = used;",
          "",
          "[Removed Lines]",
          "658:   used = min_t(unsigned long, ctx->used, iov_iter_count(&msg->msg_iter));",
          "",
          "[Added Lines]",
          "658:   used = min_t(unsigned long, ctx->used, msg_data_left(msg));",
          "",
          "---------------"
        ],
        "drivers/vhost/net.c||drivers/vhost/net.c": [
          "File: drivers/vhost/net.c -> drivers/vhost/net.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "357:   iov_iter_init(&msg.msg_iter, WRITE, vq->iov, out, len);",
          "358:   iov_iter_advance(&msg.msg_iter, hdr_size);",
          "361:    vq_err(vq, \"Unexpected header len for TX: \"",
          "362:           \"%zd expected %zd\\n\",",
          "363:           len, hdr_size);",
          "364:    break;",
          "365:   }",
          "368:   zcopy_used = zcopy && len >= VHOST_GOODCOPY_LEN",
          "369:        && (nvq->upend_idx + 1) % UIO_MAXIOV !=",
          "",
          "[Removed Lines]",
          "360:   if (!iov_iter_count(&msg.msg_iter)) {",
          "366:   len = iov_iter_count(&msg.msg_iter);",
          "",
          "[Added Lines]",
          "360:   if (!msg_data_left(&msg)) {",
          "366:   len = msg_data_left(&msg);",
          "",
          "---------------"
        ],
        "include/linux/socket.h||include/linux/socket.h": [
          "File: include/linux/socket.h -> include/linux/socket.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "139:  return __cmsg_nxthdr(__msg->msg_control, __msg->msg_controllen, __cmsg);",
          "140: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142: static inline size_t msg_data_left(struct msghdr *msg)",
          "143: {",
          "144:  return iov_iter_count(&msg->msg_iter);",
          "145: }",
          "",
          "---------------"
        ],
        "net/core/datagram.c||net/core/datagram.c": [
          "File: net/core/datagram.c -> net/core/datagram.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "673:  if (!chunk)",
          "674:   return 0;",
          "677:   if (__skb_checksum_complete(skb))",
          "678:    goto csum_error;",
          "679:   if (skb_copy_datagram_msg(skb, hlen, msg, chunk))",
          "",
          "[Removed Lines]",
          "676:  if (iov_iter_count(&msg->msg_iter) < chunk) {",
          "",
          "[Added Lines]",
          "676:  if (msg_data_left(msg) < chunk) {",
          "",
          "---------------"
        ],
        "net/ipv4/tcp.c||net/ipv4/tcp.c": [
          "File: net/ipv4/tcp.c -> net/ipv4/tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1120:  sg = !!(sk->sk_route_caps & NETIF_F_SG);",
          "1123:   int copy = 0;",
          "1124:   int max = size_goal;",
          "",
          "[Removed Lines]",
          "1122:  while (iov_iter_count(&msg->msg_iter)) {",
          "",
          "[Added Lines]",
          "1122:  while (msg_data_left(msg)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1163:   }",
          "1170:   if (skb_availroom(skb) > 0) {",
          "",
          "[Removed Lines]",
          "1166:   if (copy > iov_iter_count(&msg->msg_iter))",
          "1167:    copy = iov_iter_count(&msg->msg_iter);",
          "",
          "[Added Lines]",
          "1166:   if (copy > msg_data_left(msg))",
          "1167:    copy = msg_data_left(msg);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1221:   tcp_skb_pcount_set(skb, 0);",
          "1223:   copied += copy;",
          "1225:    tcp_tx_timestamp(sk, skb);",
          "1226:    goto out;",
          "1227:   }",
          "",
          "[Removed Lines]",
          "1224:   if (!iov_iter_count(&msg->msg_iter)) {",
          "",
          "[Added Lines]",
          "1224:   if (!msg_data_left(msg)) {",
          "",
          "---------------"
        ],
        "net/rxrpc/ar-output.c||net/rxrpc/ar-output.c": [
          "File: net/rxrpc/ar-output.c -> net/rxrpc/ar-output.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "564:    max &= ~(call->conn->size_align - 1UL);",
          "566:    chunk = max;",
          "570:    space = chunk + call->conn->size_align;",
          "571:    space &= ~(call->conn->size_align - 1UL);",
          "",
          "[Removed Lines]",
          "567:    if (chunk > iov_iter_count(&msg->msg_iter) && !more)",
          "568:     chunk = iov_iter_count(&msg->msg_iter);",
          "",
          "[Added Lines]",
          "567:    if (chunk > msg_data_left(msg) && !more)",
          "568:     chunk = msg_data_left(msg);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "608:   sp = rxrpc_skb(skb);",
          "612:    int copy = skb_tailroom(skb);",
          "613:    ASSERTCMP(copy, >, 0);",
          "616:    if (copy > sp->remain)",
          "617:     copy = sp->remain;",
          "",
          "[Removed Lines]",
          "611:   if (iov_iter_count(&msg->msg_iter) > 0) {",
          "614:    if (copy > iov_iter_count(&msg->msg_iter))",
          "615:     copy = iov_iter_count(&msg->msg_iter);",
          "",
          "[Added Lines]",
          "611:   if (msg_data_left(msg) > 0) {",
          "614:    if (copy > msg_data_left(msg))",
          "615:     copy = msg_data_left(msg);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "635:   if (sp->remain <= 0 ||",
          "637:    struct rxrpc_connection *conn = call->conn;",
          "638:    uint32_t seq;",
          "639:    size_t pad;",
          "",
          "[Removed Lines]",
          "636:       (iov_iter_count(&msg->msg_iter) == 0 && !more)) {",
          "",
          "[Added Lines]",
          "636:       (msg_data_left(msg) == 0 && !more)) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "663:    sp->hdr.serviceId = conn->service_id;",
          "665:    sp->hdr.flags = conn->out_clientflag;",
          "667:     sp->hdr.flags |= RXRPC_LAST_PACKET;",
          "668:    else if (CIRC_SPACE(call->acks_head, call->acks_tail,",
          "669:          call->acks_winsz) > 1)",
          "",
          "[Removed Lines]",
          "666:    if (iov_iter_count(&msg->msg_iter) == 0 && !more)",
          "",
          "[Added Lines]",
          "666:    if (msg_data_left(msg) == 0 && !more)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "680:    memcpy(skb->head, &sp->hdr,",
          "681:           sizeof(struct rxrpc_header));",
          "684:    skb = NULL;",
          "685:   }",
          "688: success:",
          "689:  ret = copied;",
          "",
          "[Removed Lines]",
          "682:    rxrpc_queue_packet(call, skb,",
          "683:         iov_iter_count(&msg->msg_iter) == 0 && !more);",
          "686:  } while (iov_iter_count(&msg->msg_iter) > 0);",
          "",
          "[Added Lines]",
          "682:    rxrpc_queue_packet(call, skb, !msg_data_left(msg) && !more);",
          "685:  } while (msg_data_left(msg) > 0);",
          "",
          "---------------"
        ],
        "net/socket.c||net/socket.c": [
          "File: net/socket.c -> net/socket.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "613: static inline int sock_sendmsg_nosec(struct socket *sock, struct msghdr *msg)",
          "614: {",
          "616:  BUG_ON(ret == -EIOCBQUEUED);",
          "617:  return ret;",
          "618: }",
          "",
          "[Removed Lines]",
          "615:  int ret = sock->ops->sendmsg(sock, msg, iov_iter_count(&msg->msg_iter));",
          "",
          "[Added Lines]",
          "615:  int ret = sock->ops->sendmsg(sock, msg, msg_data_left(msg));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "620: int sock_sendmsg(struct socket *sock, struct msghdr *msg)",
          "621: {",
          "622:  int err = security_socket_sendmsg(sock, msg,",
          "625:  return err ?: sock_sendmsg_nosec(sock, msg);",
          "626: }",
          "",
          "[Removed Lines]",
          "623:        iov_iter_count(&msg->msg_iter));",
          "",
          "[Added Lines]",
          "623:        msg_data_left(msg));",
          "",
          "---------------"
        ]
      }
    }
  ]
}