{
  "cve_id": "CVE-2020-11046",
  "cve_desc": "In FreeRDP after 1.0 and before 2.0.0, there is a stream out-of-bounds seek in update_read_synchronize that could lead to a later out-of-bounds read.",
  "repo": "FreeRDP/FreeRDP",
  "patch_hash": "ed53cd148f43cbab905eaa0f5308c2bf3c48cc37",
  "patch_info": {
    "commit_hash": "ed53cd148f43cbab905eaa0f5308c2bf3c48cc37",
    "repo": "FreeRDP/FreeRDP",
    "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/ed53cd148f43cbab905eaa0f5308c2bf3c48cc37",
    "files": [
      "libfreerdp/core/update.c"
    ],
    "message": "Fixed #6006: bounds checks in update_read_synchronize",
    "before_after_code_files": [
      "libfreerdp/core/update.c||libfreerdp/core/update.c"
    ]
  },
  "patch_diff": {
    "libfreerdp/core/update.c||libfreerdp/core/update.c": [
      "File: libfreerdp/core/update.c -> libfreerdp/core/update.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "287:  return NULL;",
      "288: }",
      "291: {",
      "292:  WINPR_UNUSED(update);",
      "298: }",
      "300: static BOOL update_read_play_sound(wStream* s, PLAY_SOUND_UPDATE* play_sound)",
      "",
      "[Removed Lines]",
      "290: static void update_read_synchronize(rdpUpdate* update, wStream* s)",
      "",
      "[Added Lines]",
      "290: static BOOL update_read_synchronize(rdpUpdate* update, wStream* s)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "807:   break;",
      "809:   case UPDATE_TYPE_SYNCHRONIZE:",
      "811:    rc = IFCALLRESULT(TRUE, update->Synchronize, context);",
      "812:    break;",
      "",
      "[Removed Lines]",
      "810:    update_read_synchronize(update, s);",
      "",
      "[Added Lines]",
      "810:    if (!update_read_synchronize(update, s))",
      "811:     goto fail;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0ad894adbc6c90e6c5b296bd3b4c5dd7b779d897",
      "candidate_info": {
        "commit_hash": "0ad894adbc6c90e6c5b296bd3b4c5dd7b779d897",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/0ad894adbc6c90e6c5b296bd3b4c5dd7b779d897",
        "files": [
          "libfreerdp/core/rdp.c"
        ],
        "message": "Fixed substream read in rdp_recv_tpkt_pdu",
        "before_after_code_files": [
          "libfreerdp/core/rdp.c||libfreerdp/core/rdp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6019"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/core/rdp.c||libfreerdp/core/rdp.c": [
          "File: libfreerdp/core/rdp.c -> libfreerdp/core/rdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "103: };",
          "106: static void rdp_write_share_control_header(wStream* s, UINT16 length, UINT16 type,",
          "107:                                            UINT16 channel_id);",
          "108: static void rdp_write_share_data_header(wStream* s, UINT16 length, BYTE type, UINT32 share_id);",
          "",
          "[Removed Lines]",
          "105: static BOOL rdp_read_flow_control_pdu(wStream* s, UINT16* type);",
          "",
          "[Added Lines]",
          "105: static BOOL rdp_read_flow_control_pdu(wStream* s, UINT16* type, UINT16* channel_id);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "159:  if (len == 0x8000)",
          "160:  {",
          "162:    return FALSE;",
          "",
          "[Removed Lines]",
          "161:   if (!rdp_read_flow_control_pdu(s, type))",
          "",
          "[Added Lines]",
          "161:   if (!rdp_read_flow_control_pdu(s, type, channel_id))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1120:  }",
          "1121: }",
          "1124: {",
          "",
          "[Removed Lines]",
          "1123: BOOL rdp_read_flow_control_pdu(wStream* s, UINT16* type)",
          "",
          "[Added Lines]",
          "1123: BOOL rdp_read_flow_control_pdu(wStream* s, UINT16* type, UINT16* channel_id)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1329:   while (Stream_GetRemainingLength(s) > 3)",
          "1330:   {",
          "1331:    wStream sub;",
          "1335:    if (!rdp_read_share_control_header(s, &pduLength, &pduType, &pduSource))",
          "1336:    {",
          "1337:     WLog_ERR(TAG, \"rdp_recv_tpkt_pdu: rdp_read_share_control_header() fail\");",
          "1338:     return -1;",
          "1339:    }",
          "1351:    Stream_StaticInit(&sub, Stream_Pointer(s), pduLength);",
          "1352:    if (!Stream_SafeSeek(s, pduLength))",
          "1353:     return -1;",
          "",
          "[Removed Lines]",
          "1332:    size_t startheader, endheader, start, end, diff, headerdiff;",
          "1334:    startheader = Stream_GetPosition(s);",
          "1340:    start = endheader = Stream_GetPosition(s);",
          "1341:    headerdiff = endheader - startheader;",
          "1342:    if (pduLength < headerdiff)",
          "1343:    {",
          "1344:     WLog_ERR(",
          "1345:         TAG,",
          "1346:         \"rdp_recv_tpkt_pdu: rdp_read_share_control_header() invalid pduLength %\" PRIu16,",
          "1347:         pduLength);",
          "1348:     return -1;",
          "1349:    }",
          "1350:    pduLength -= headerdiff;",
          "",
          "[Added Lines]",
          "1332:    size_t diff;",
          "1341:    if (pduLength > 5)",
          "1342:     pduLength -= 6;",
          "1343:    else",
          "1344:     pduLength -= 4;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1389:      break;",
          "1390:    }",
          "1395:    {",
          "1396:     WLog_WARN(TAG,",
          "1397:               \"pduType %s not properly parsed, %\" PRIdz",
          "",
          "[Removed Lines]",
          "1392:    end = Stream_GetPosition(&sub);",
          "1393:    diff = end - start;",
          "1394:    if (diff != pduLength)",
          "",
          "[Added Lines]",
          "1386:    diff = Stream_GetRemainingLength(&sub);",
          "1387:    if (diff > 0)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "67c2aa52b2ae0341d469071d1bc8aab91f8d2ed8",
      "candidate_info": {
        "commit_hash": "67c2aa52b2ae0341d469071d1bc8aab91f8d2ed8",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/67c2aa52b2ae0341d469071d1bc8aab91f8d2ed8",
        "files": [
          "libfreerdp/core/orders.c"
        ],
        "message": "Fixed #6013: Check new length is > 0",
        "before_after_code_files": [
          "libfreerdp/core/orders.c||libfreerdp/core/orders.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6019"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/core/orders.c||libfreerdp/core/orders.c": [
          "File: libfreerdp/core/orders.c -> libfreerdp/core/orders.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2165:   goto fail;",
          "2167:  new_data = (BYTE*)realloc(bitmapData->data, new_len);",
          "",
          "[Removed Lines]",
          "2164:  if (Stream_GetRemainingLength(s) < new_len)",
          "",
          "[Added Lines]",
          "2164:  if ((new_len == 0) || (Stream_GetRemainingLength(s) < new_len))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6f00add067b7be513c8153155b6c7499e6c4b8ac",
      "candidate_info": {
        "commit_hash": "6f00add067b7be513c8153155b6c7499e6c4b8ac",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/6f00add067b7be513c8153155b6c7499e6c4b8ac",
        "files": [
          "libfreerdp/core/capabilities.c",
          "libfreerdp/core/peer.c",
          "libfreerdp/core/rdp.c",
          "libfreerdp/core/rdp.h"
        ],
        "message": "Export remaining packet length from rdp_read_share_control_header",
        "before_after_code_files": [
          "libfreerdp/core/capabilities.c||libfreerdp/core/capabilities.c",
          "libfreerdp/core/peer.c||libfreerdp/core/peer.c",
          "libfreerdp/core/rdp.c||libfreerdp/core/rdp.c",
          "libfreerdp/core/rdp.h||libfreerdp/core/rdp.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6019"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/core/capabilities.c||libfreerdp/core/capabilities.c": [
          "File: libfreerdp/core/capabilities.c -> libfreerdp/core/capabilities.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3888: {",
          "3889:  UINT16 channelId;",
          "3890:  UINT16 pduType;",
          "3892:  UINT16 pduSource;",
          "3893:  UINT16 length;",
          "3894:  UINT16 numberCapabilities;",
          "",
          "[Removed Lines]",
          "3891:  UINT16 pduLength;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3901:  if (freerdp_shall_disconnect(rdp->instance))",
          "3902:   return TRUE;",
          "3905:  {",
          "3906:   WLog_ERR(TAG, \"rdp_read_share_control_header failed\");",
          "3907:   return FALSE;",
          "",
          "[Removed Lines]",
          "3904:  if (!rdp_read_share_control_header(s, &pduLength, &pduType, &pduSource))",
          "",
          "[Added Lines]",
          "3903:  if (!rdp_read_share_control_header(s, NULL, NULL, &pduType, &pduSource))",
          "",
          "---------------"
        ],
        "libfreerdp/core/peer.c||libfreerdp/core/peer.c": [
          "File: libfreerdp/core/peer.c -> libfreerdp/core/peer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "348:  rdpRdp* rdp;",
          "349:  UINT16 length;",
          "350:  UINT16 pduType;",
          "352:  UINT16 pduSource;",
          "353:  UINT16 channelId;",
          "354:  UINT16 securityFlags = 0;",
          "",
          "[Removed Lines]",
          "351:  UINT16 pduLength;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "382:  if (channelId == MCS_GLOBAL_CHANNEL_ID)",
          "383:  {",
          "385:    return -1;",
          "387:   client->settings->PduSource = pduSource;",
          "",
          "[Removed Lines]",
          "384:   if (!rdp_read_share_control_header(s, &pduLength, &pduType, &pduSource))",
          "",
          "[Added Lines]",
          "383:   UINT16 pduLength, remain;",
          "384:   if (!rdp_read_share_control_header(s, &pduLength, &remain, &pduType, &pduSource))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "403:    case PDU_TYPE_FLOW_RESPONSE:",
          "404:    case PDU_TYPE_FLOW_STOP:",
          "405:    case PDU_TYPE_FLOW_TEST:",
          "406:     break;",
          "408:    default:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "406:     if (!Stream_SafeSeek(s, remain))",
          "407:      return -1;",
          "",
          "---------------"
        ],
        "libfreerdp/core/rdp.c||libfreerdp/core/rdp.c": [
          "File: libfreerdp/core/rdp.c -> libfreerdp/core/rdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "144: }",
          "147: {",
          "148:  UINT16 len;",
          "149:  if (Stream_GetRemainingLength(s) < 2)",
          "",
          "[Removed Lines]",
          "146: BOOL rdp_read_share_control_header(wStream* s, UINT16* length, UINT16* type, UINT16* channel_id)",
          "",
          "[Added Lines]",
          "146: BOOL rdp_read_share_control_header(wStream* s, UINT16* tpktLength, UINT16* remainingLength,",
          "147:                                    UINT16* type, UINT16* channel_id)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "161:   if (!rdp_read_flow_control_pdu(s, type, channel_id))",
          "162:    return FALSE;",
          "165:   return TRUE;",
          "166:  }",
          "168:  if ((len < 4) || ((len - 2) > Stream_GetRemainingLength(s)))",
          "169:   return FALSE;",
          "176:  else",
          "179:  return TRUE;",
          "180: }",
          "",
          "[Removed Lines]",
          "174:  if (len > 4)",
          "",
          "[Added Lines]",
          "163:   if (tpktLength)",
          "165:   if (remainingLength)",
          "173:  if (tpktLength)",
          "179:  if (len > 5)",
          "180:  {",
          "182:   if (remainingLength)",
          "184:  }",
          "186:  {",
          "188:   if (remainingLength)",
          "190:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1098:  UINT16 length;",
          "1099:  UINT16 channelId;",
          "1102:   return -1;",
          "1104:  if (type == PDU_TYPE_DATA)",
          "",
          "[Removed Lines]",
          "1101:  if (!rdp_read_share_control_header(s, &length, &type, &channelId))",
          "",
          "[Added Lines]",
          "1114:  if (!rdp_read_share_control_header(s, &length, NULL, &type, &channelId))",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1274:  int rc = 0;",
          "1275:  UINT16 length;",
          "1276:  UINT16 pduType;",
          "1278:  UINT16 pduSource;",
          "1279:  UINT16 channelId = 0;",
          "1280:  UINT16 securityFlags = 0;",
          "",
          "[Removed Lines]",
          "1277:  UINT16 pduLength;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1330:   {",
          "1331:    wStream sub;",
          "1332:    size_t diff;",
          "1335:    {",
          "1336:     WLog_ERR(TAG, \"rdp_recv_tpkt_pdu: rdp_read_share_control_header() fail\");",
          "1337:     return -1;",
          "1338:    }",
          "1347:     return -1;",
          "1349:    rdp->settings->PduSource = pduSource;",
          "",
          "[Removed Lines]",
          "1334:    if (!rdp_read_share_control_header(s, &pduLength, &pduType, &pduSource))",
          "1341:    if (pduLength > 5)",
          "1342:     pduLength -= 6;",
          "1343:    else",
          "1344:     pduLength -= 4;",
          "1345:    Stream_StaticInit(&sub, Stream_Pointer(s), pduLength);",
          "1346:    if (!Stream_SafeSeek(s, pduLength))",
          "",
          "[Added Lines]",
          "1345:    UINT16 remain;",
          "1347:    if (!rdp_read_share_control_header(s, NULL, &remain, &pduType, &pduSource))",
          "1353:    Stream_StaticInit(&sub, Stream_Pointer(s), remain);",
          "1354:    if (!Stream_SafeSeek(s, remain))",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1374:     case PDU_TYPE_FLOW_TEST:",
          "1375:      WLog_DBG(TAG, \"flow message 0x%04\" PRIX16 \"\", pduType);",
          "1378:       return -1;",
          "1379:      break;",
          "",
          "[Removed Lines]",
          "1377:      if (!Stream_SafeSeek(&sub, pduLength))",
          "",
          "[Added Lines]",
          "1385:      if (!Stream_SafeSeek(&sub, remain))",
          "",
          "---------------"
        ],
        "libfreerdp/core/rdp.h||libfreerdp/core/rdp.h": [
          "File: libfreerdp/core/rdp.h -> libfreerdp/core/rdp.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "184: FREERDP_LOCAL BOOL rdp_read_security_header(wStream* s, UINT16* flags, UINT16* length);",
          "185: FREERDP_LOCAL void rdp_write_security_header(wStream* s, UINT16 flags);",
          "188:                                                  UINT16* channel_id);",
          "190: FREERDP_LOCAL BOOL rdp_read_share_data_header(wStream* s, UINT16* length, BYTE* type,",
          "",
          "[Removed Lines]",
          "187: FREERDP_LOCAL BOOL rdp_read_share_control_header(wStream* s, UINT16* length, UINT16* type,",
          "",
          "[Added Lines]",
          "187: FREERDP_LOCAL BOOL rdp_read_share_control_header(wStream* s, UINT16* tpktLength,",
          "188:                                                  UINT16* remainingLength, UINT16* type,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "58dc36b3c883fd460199cedb6d30e58eba58298c",
      "candidate_info": {
        "commit_hash": "58dc36b3c883fd460199cedb6d30e58eba58298c",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/58dc36b3c883fd460199cedb6d30e58eba58298c",
        "files": [
          "libfreerdp/cache/bitmap.c"
        ],
        "message": "Fixed possible NULL dereference",
        "before_after_code_files": [
          "libfreerdp/cache/bitmap.c||libfreerdp/cache/bitmap.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6019"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/cache/bitmap.c||libfreerdp/cache/bitmap.c": [
          "File: libfreerdp/cache/bitmap.c -> libfreerdp/cache/bitmap.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "281:  bitmapCache->settings = settings;",
          "282:  bitmapCache->update = ((freerdp*)settings->instance)->update;",
          "283:  bitmapCache->context = bitmapCache->update->context;",
          "287:  if (!bitmapCache->cells)",
          "288:   goto fail;",
          "290:  for (i = 0; i < (int)bitmapCache->maxCells; i++)",
          "291:  {",
          "",
          "[Removed Lines]",
          "284:  bitmapCache->maxCells = settings->BitmapCacheV2NumCells;",
          "285:  bitmapCache->cells = (BITMAP_V2_CELL*)calloc(bitmapCache->maxCells, sizeof(BITMAP_V2_CELL));",
          "",
          "[Added Lines]",
          "284:  bitmapCache->cells =",
          "285:      (BITMAP_V2_CELL*)calloc(settings->BitmapCacheV2NumCells, sizeof(BITMAP_V2_CELL));",
          "289:  bitmapCache->maxCells = settings->BitmapCacheV2NumCells;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9301bfe730c66180263248b74353daa99f5a969b",
      "candidate_info": {
        "commit_hash": "9301bfe730c66180263248b74353daa99f5a969b",
        "repo": "FreeRDP/FreeRDP",
        "commit_url": "https://github.com/FreeRDP/FreeRDP/commit/9301bfe730c66180263248b74353daa99f5a969b",
        "files": [
          "libfreerdp/core/rdp.c"
        ],
        "message": "Fixed #6007: Boundary checks in rdp_read_flow_control_pdu",
        "before_after_code_files": [
          "libfreerdp/core/rdp.c||libfreerdp/core/rdp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/FreeRDP/FreeRDP/pull/6019"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libfreerdp/core/rdp.c||libfreerdp/core/rdp.c": [
          "File: libfreerdp/core/rdp.c -> libfreerdp/core/rdp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "103: };",
          "106: static void rdp_write_share_control_header(wStream* s, UINT16 length, UINT16 type,",
          "107:                                            UINT16 channel_id);",
          "108: static void rdp_write_share_data_header(wStream* s, UINT16 length, BYTE type, UINT32 share_id);",
          "",
          "[Removed Lines]",
          "105: static void rdp_read_flow_control_pdu(wStream* s, UINT16* type);",
          "",
          "[Added Lines]",
          "105: static BOOL rdp_read_flow_control_pdu(wStream* s, UINT16* type);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "146: BOOL rdp_read_share_control_header(wStream* s, UINT16* length, UINT16* type, UINT16* channel_id)",
          "147: {",
          "148:  if (Stream_GetRemainingLength(s) < 2)",
          "149:   return FALSE;",
          "157:  {",
          "161:   return TRUE;",
          "162:  }",
          "165:   return FALSE;",
          "172:  else",
          "",
          "[Removed Lines]",
          "156:  if (*length == 0x8000)",
          "158:   rdp_read_flow_control_pdu(s, type);",
          "164:  if (((size_t)*length - 2) > Stream_GetRemainingLength(s))",
          "170:  if (*length > 4)",
          "",
          "[Added Lines]",
          "148:  UINT16 len;",
          "159:  if (len == 0x8000)",
          "161:   if (!rdp_read_flow_control_pdu(s, type))",
          "162:    return FALSE;",
          "168:  if ((len < 4) || ((len - 2) > Stream_GetRemainingLength(s)))",
          "174:  if (len > 4)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1116:  }",
          "1117: }",
          "1120: {",
          "",
          "[Removed Lines]",
          "1119: void rdp_read_flow_control_pdu(wStream* s, UINT16* type)",
          "",
          "[Added Lines]",
          "1123: BOOL rdp_read_flow_control_pdu(wStream* s, UINT16* type)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1128:  UINT8 pduType;",
          "1135: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1133:  if (!type)",
          "1134:   return FALSE;",
          "1135:  if (Stream_GetRemainingLength(s) < 6)",
          "1136:   return FALSE;",
          "1143:  return TRUE;",
          "",
          "---------------"
        ]
      }
    }
  ]
}