{
  "cve_id": "CVE-2024-31951",
  "cve_desc": "In the Opaque LSA Extended Link parser in FRRouting (FRR) through 9.1, there can be a buffer overflow and daemon crash in ospf_te_parse_ext_link for OSPF LSA packets during an attempt to read Segment Routing Adjacency SID subTLVs (lengths are not validated).",
  "repo": "FRRouting/frr",
  "patch_hash": "344fb4be2bc27316c74b17003c05ea40be395836",
  "patch_info": {
    "commit_hash": "344fb4be2bc27316c74b17003c05ea40be395836",
    "repo": "FRRouting/frr",
    "commit_url": "https://github.com/FRRouting/frr/commit/344fb4be2bc27316c74b17003c05ea40be395836",
    "files": [
      "ospfd/ospf_te.c"
    ],
    "message": "ospfd: Correct Opaque LSA Extended Link parser\n\nIggy Frankovic discovered another ospfd crash when performing fuzzing of OSPF\nLSA packets. The crash occurs in ospf_te_parse_ext_link() function when\nattemping to read Segment Routing Adjacency SID subTLVs. The original code\ndoesn't check if the size of the Extended Link TLVs and subTLVs have the correct\nlength. In presence of erronous LSA, this will cause a buffer overflow and ospfd\ncrashes.\n\nThis patch introduces new verification of the subTLVs size for Extended Link\nTLVs and subTLVs.\n\nCo-authored-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Olivier Dugeon <olivier.dugeon@orange.com>",
    "before_after_code_files": [
      "ospfd/ospf_te.c||ospfd/ospf_te.c"
    ]
  },
  "patch_diff": {
    "ospfd/ospf_te.c||ospfd/ospf_te.c": [
      "File: ospfd/ospf_te.c -> ospfd/ospf_te.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2755:  len = TLV_BODY_SIZE(&ext->header) - EXT_TLV_LINK_SIZE;",
      "2756:  tlvh = (struct tlv_header *)((char *)(ext) + TLV_HDR_SIZE",
      "2757:          + EXT_TLV_LINK_SIZE);",
      "2758:  for (; sum < len; tlvh = TLV_HDR_NEXT(tlvh)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2756:  i = lsa->size - (OSPF_LSA_HEADER_SIZE + TLV_HDR_SIZE);",
      "2757:  if (len != i || len <= 0) {",
      "2758:   ote_debug(\"  |- Wrong TLV size: %u instead of %u\",",
      "2759:    (uint32_t )len, (uint32_t )i);",
      "2760:   return -1;",
      "2761:  }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2763:   switch (ntohs(tlvh->type)) {",
      "2764:   case EXT_SUBTLV_ADJ_SID:",
      "2765:    adj = (struct ext_subtlv_adj_sid *)tlvh;",
      "2766:    label = CHECK_FLAG(adj->flags,",
      "2767:         EXT_SUBTLV_LINK_ADJ_SID_VFLG)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2772:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_ADJ_SID_SIZE)",
      "2773:     break;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2789:    break;",
      "2790:   case EXT_SUBTLV_LAN_ADJ_SID:",
      "2791:    ladj = (struct ext_subtlv_lan_adj_sid *)tlvh;",
      "2792:    label = CHECK_FLAG(ladj->flags,",
      "2793:         EXT_SUBTLV_LINK_ADJ_SID_VFLG)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2800:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_LAN_ADJ_SID_SIZE)",
      "2801:     break;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2818:    break;",
      "2819:   case EXT_SUBTLV_RMT_ITF_ADDR:",
      "2820:    rmt = (struct ext_subtlv_rmt_itf_addr *)tlvh;",
      "2821:    if (CHECK_FLAG(atr->flags, LS_ATTR_NEIGH_ADDR)",
      "2822:        && IPV4_ADDR_SAME(&atr->standard.remote,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2831:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_RMT_ITF_ADDR_SIZE)",
      "2832:     break;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5557a289acdaeec8cc63ffc97b5c2abf6dee7b3a",
      "candidate_info": {
        "commit_hash": "5557a289acdaeec8cc63ffc97b5c2abf6dee7b3a",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/5557a289acdaeec8cc63ffc97b5c2abf6dee7b3a",
        "files": [
          "ospfd/ospf_te.c"
        ],
        "message": "ospfd: Correct Opaque LSA Extended parser\n\nIggy Frankovic discovered another ospfd crash when performing fuzzing of OSPF\nLSA packets. The crash occurs in ospf_te_parse_ext_link() function when\nattemping to read Segment Routing Adjacency SID subTLVs. The original code\ndoesn't check if the size of the Extended Link TLVs and subTLVs have the correct\nlength. In presence of erronous LSA, this will cause a buffer overflow and ospfd\ncrashes.\n\nThis patch introduces new verification of the subTLVs size for Extended Link\nTLVs and subTLVs. Similar check has been also introduced for the Extended\nPrefix TLV.\n\nCo-authored-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Olivier Dugeon <olivier.dugeon@orange.com>",
        "before_after_code_files": [
          "ospfd/ospf_te.c||ospfd/ospf_te.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ],
          "candidate": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ]
        }
      },
      "candidate_diff": {
        "ospfd/ospf_te.c||ospfd/ospf_te.c": [
          "File: ospfd/ospf_te.c -> ospfd/ospf_te.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2620:  struct ext_tlv_prefix *ext;",
          "2621:  struct ext_subtlv_prefix_sid *pref_sid;",
          "2622:  uint32_t label;",
          "2625:  ext = (struct ext_tlv_prefix *)TLV_HDR_TOP(lsa->data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2623:  uint16_t len, size;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2641:  ote_debug(\"  |- Process Extended Prefix LSA %pI4 for subnet %pFX\",",
          "2642:     &lsa->data->id, &pref);",
          "2645:  ls_pref = subnet->ls_pref;",
          "2646:  pref_sid = (struct ext_subtlv_prefix_sid *)((char *)(ext) + TLV_HDR_SIZE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2649:  len = TLV_BODY_SIZE(&ext->header);",
          "2650:  size = lsa->size - (OSPF_LSA_HEADER_SIZE + TLV_HDR_SIZE);",
          "2651:  if (len != size || len <= 0) {",
          "2652:   ote_debug(\"  |- Wrong TLV size: %u instead of %u\",",
          "2653:      (uint32_t)len, (uint32_t)size);",
          "2654:   return -1;",
          "2655:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2751:  ote_debug(\"  |- Process Extended Link LSA %pI4 for edge %pI4\",",
          "2752:     &lsa->data->id, &edge->attributes->standard.local);",
          "2756:  tlvh = (struct tlv_header *)((char *)(ext) + TLV_HDR_SIZE",
          "2757:          + EXT_TLV_LINK_SIZE);",
          "2758:  for (; sum < len; tlvh = TLV_HDR_NEXT(tlvh)) {",
          "",
          "[Removed Lines]",
          "2755:  len = TLV_BODY_SIZE(&ext->header) - EXT_TLV_LINK_SIZE;",
          "",
          "[Added Lines]",
          "2771:  len = TLV_BODY_SIZE(&ext->header);",
          "2772:  i = lsa->size - (OSPF_LSA_HEADER_SIZE + TLV_HDR_SIZE);",
          "2773:  if (len != i || len <= 0) {",
          "2774:   ote_debug(\"  |- Wrong TLV size: %u instead of %u\",",
          "2775:      (uint32_t)len, (uint32_t)i);",
          "2776:   return -1;",
          "2777:  }",
          "2780:  len -= EXT_TLV_LINK_SIZE;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2763:   switch (ntohs(tlvh->type)) {",
          "2764:   case EXT_SUBTLV_ADJ_SID:",
          "2765:    adj = (struct ext_subtlv_adj_sid *)tlvh;",
          "2766:    label = CHECK_FLAG(adj->flags,",
          "2767:         EXT_SUBTLV_LINK_ADJ_SID_VFLG)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2790:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_ADJ_SID_SIZE)",
          "2791:     break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2789:    break;",
          "2790:   case EXT_SUBTLV_LAN_ADJ_SID:",
          "2791:    ladj = (struct ext_subtlv_lan_adj_sid *)tlvh;",
          "2792:    label = CHECK_FLAG(ladj->flags,",
          "2793:         EXT_SUBTLV_LINK_ADJ_SID_VFLG)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2818:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_LAN_ADJ_SID_SIZE)",
          "2819:     break;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2818:    break;",
          "2819:   case EXT_SUBTLV_RMT_ITF_ADDR:",
          "2820:    rmt = (struct ext_subtlv_rmt_itf_addr *)tlvh;",
          "2821:    if (CHECK_FLAG(atr->flags, LS_ATTR_NEIGH_ADDR)",
          "2822:        && IPV4_ADDR_SAME(&atr->standard.remote,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2849:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_RMT_ITF_ADDR_SIZE)",
          "2850:     break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "aa1237612cb26f38ccda1eb7725aedd46524d221",
      "candidate_info": {
        "commit_hash": "aa1237612cb26f38ccda1eb7725aedd46524d221",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/aa1237612cb26f38ccda1eb7725aedd46524d221",
        "files": [
          "ospfd/ospf_te.c"
        ],
        "message": "ospfd: Correct Opaque LSA Extended parser\n\nIggy Frankovic discovered another ospfd crash when performing fuzzing of OSPF\nLSA packets. The crash occurs in ospf_te_parse_ext_link() function when\nattemping to read Segment Routing Adjacency SID subTLVs. The original code\ndoesn't check if the size of the Extended Link TLVs and subTLVs have the correct\nlength. In presence of erronous LSA, this will cause a buffer overflow and ospfd\ncrashes.\n\nThis patch introduces new verification of the subTLVs size for Extended Link\nTLVs and subTLVs. Similar check has been also introduced for the Extended\nPrefix TLV.\n\nCo-authored-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Olivier Dugeon <olivier.dugeon@orange.com>\n(cherry picked from commit 5557a289acdaeec8cc63ffc97b5c2abf6dee7b3a)",
        "before_after_code_files": [
          "ospfd/ospf_te.c||ospfd/ospf_te.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ],
          "candidate": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ]
        }
      },
      "candidate_diff": {
        "ospfd/ospf_te.c||ospfd/ospf_te.c": [
          "File: ospfd/ospf_te.c -> ospfd/ospf_te.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2619:  struct ext_tlv_prefix *ext;",
          "2620:  struct ext_subtlv_prefix_sid *pref_sid;",
          "2621:  uint32_t label;",
          "2624:  ext = (struct ext_tlv_prefix *)TLV_HDR_TOP(lsa->data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2622:  uint16_t len, size;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2640:  ote_debug(\"  |- Process Extended Prefix LSA %pI4 for subnet %pFX\",",
          "2641:     &lsa->data->id, &pref);",
          "2644:  ls_pref = subnet->ls_pref;",
          "2645:  pref_sid = (struct ext_subtlv_prefix_sid *)((char *)(ext) + TLV_HDR_SIZE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2648:  len = TLV_BODY_SIZE(&ext->header);",
          "2649:  size = lsa->size - (OSPF_LSA_HEADER_SIZE + TLV_HDR_SIZE);",
          "2650:  if (len != size || len <= 0) {",
          "2651:   ote_debug(\"  |- Wrong TLV size: %u instead of %u\",",
          "2652:      (uint32_t)len, (uint32_t)size);",
          "2653:   return -1;",
          "2654:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2750:  ote_debug(\"  |- Process Extended Link LSA %pI4 for edge %pI4\",",
          "2751:     &lsa->data->id, &edge->attributes->standard.local);",
          "2755:  tlvh = (struct tlv_header *)((char *)(ext) + TLV_HDR_SIZE",
          "2756:          + EXT_TLV_LINK_SIZE);",
          "2757:  for (; sum < len; tlvh = TLV_HDR_NEXT(tlvh)) {",
          "",
          "[Removed Lines]",
          "2754:  len = TLV_BODY_SIZE(&ext->header) - EXT_TLV_LINK_SIZE;",
          "",
          "[Added Lines]",
          "2770:  len = TLV_BODY_SIZE(&ext->header);",
          "2771:  i = lsa->size - (OSPF_LSA_HEADER_SIZE + TLV_HDR_SIZE);",
          "2772:  if (len != i || len <= 0) {",
          "2773:   ote_debug(\"  |- Wrong TLV size: %u instead of %u\",",
          "2774:      (uint32_t)len, (uint32_t)i);",
          "2775:   return -1;",
          "2776:  }",
          "2779:  len -= EXT_TLV_LINK_SIZE;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2762:   switch (ntohs(tlvh->type)) {",
          "2763:   case EXT_SUBTLV_ADJ_SID:",
          "2764:    adj = (struct ext_subtlv_adj_sid *)tlvh;",
          "2765:    label = CHECK_FLAG(adj->flags,",
          "2766:         EXT_SUBTLV_LINK_ADJ_SID_VFLG)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2789:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_ADJ_SID_SIZE)",
          "2790:     break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2788:    break;",
          "2789:   case EXT_SUBTLV_LAN_ADJ_SID:",
          "2790:    ladj = (struct ext_subtlv_lan_adj_sid *)tlvh;",
          "2791:    label = CHECK_FLAG(ladj->flags,",
          "2792:         EXT_SUBTLV_LINK_ADJ_SID_VFLG)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2817:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_LAN_ADJ_SID_SIZE)",
          "2818:     break;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2817:    break;",
          "2818:   case EXT_SUBTLV_RMT_ITF_ADDR:",
          "2819:    rmt = (struct ext_subtlv_rmt_itf_addr *)tlvh;",
          "2820:    if (CHECK_FLAG(atr->flags, LS_ATTR_NEIGH_ADDR)",
          "2821:        && IPV4_ADDR_SAME(&atr->standard.remote,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2848:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_RMT_ITF_ADDR_SIZE)",
          "2849:     break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fc77daa322580961f2f18afb4747e9f33a36cb67",
      "candidate_info": {
        "commit_hash": "fc77daa322580961f2f18afb4747e9f33a36cb67",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/fc77daa322580961f2f18afb4747e9f33a36cb67",
        "files": [
          "ospfd/ospf_te.c"
        ],
        "message": "ospfd: Correct Opaque LSA Extended parser\n\nIggy Frankovic discovered another ospfd crash when performing fuzzing of OSPF\nLSA packets. The crash occurs in ospf_te_parse_ext_link() function when\nattemping to read Segment Routing Adjacency SID subTLVs. The original code\ndoesn't check if the size of the Extended Link TLVs and subTLVs have the correct\nlength. In presence of erronous LSA, this will cause a buffer overflow and ospfd\ncrashes.\n\nThis patch introduces new verification of the subTLVs size for Extended Link\nTLVs and subTLVs. Similar check has been also introduced for the Extended\nPrefix TLV.\n\nCo-authored-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Olivier Dugeon <olivier.dugeon@orange.com>\n(cherry picked from commit 5557a289acdaeec8cc63ffc97b5c2abf6dee7b3a)",
        "before_after_code_files": [
          "ospfd/ospf_te.c||ospfd/ospf_te.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ],
          "candidate": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ]
        }
      },
      "candidate_diff": {
        "ospfd/ospf_te.c||ospfd/ospf_te.c": [
          "File: ospfd/ospf_te.c -> ospfd/ospf_te.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2619:  struct ext_tlv_prefix *ext;",
          "2620:  struct ext_subtlv_prefix_sid *pref_sid;",
          "2621:  uint32_t label;",
          "2624:  ext = (struct ext_tlv_prefix *)TLV_HDR_TOP(lsa->data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2622:  uint16_t len, size;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2640:  ote_debug(\"  |- Process Extended Prefix LSA %pI4 for subnet %pFX\",",
          "2641:     &lsa->data->id, &pref);",
          "2644:  ls_pref = subnet->ls_pref;",
          "2645:  pref_sid = (struct ext_subtlv_prefix_sid *)((char *)(ext) + TLV_HDR_SIZE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2648:  len = TLV_BODY_SIZE(&ext->header);",
          "2649:  size = lsa->size - (OSPF_LSA_HEADER_SIZE + TLV_HDR_SIZE);",
          "2650:  if (len != size || len <= 0) {",
          "2651:   ote_debug(\"  |- Wrong TLV size: %u instead of %u\",",
          "2652:      (uint32_t)len, (uint32_t)size);",
          "2653:   return -1;",
          "2654:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2750:  ote_debug(\"  |- Process Extended Link LSA %pI4 for edge %pI4\",",
          "2751:     &lsa->data->id, &edge->attributes->standard.local);",
          "2755:  tlvh = (struct tlv_header *)((char *)(ext) + TLV_HDR_SIZE",
          "2756:          + EXT_TLV_LINK_SIZE);",
          "2757:  for (; sum < len; tlvh = TLV_HDR_NEXT(tlvh)) {",
          "",
          "[Removed Lines]",
          "2754:  len = TLV_BODY_SIZE(&ext->header) - EXT_TLV_LINK_SIZE;",
          "",
          "[Added Lines]",
          "2770:  len = TLV_BODY_SIZE(&ext->header);",
          "2771:  i = lsa->size - (OSPF_LSA_HEADER_SIZE + TLV_HDR_SIZE);",
          "2772:  if (len != i || len <= 0) {",
          "2773:   ote_debug(\"  |- Wrong TLV size: %u instead of %u\",",
          "2774:      (uint32_t)len, (uint32_t)i);",
          "2775:   return -1;",
          "2776:  }",
          "2779:  len -= EXT_TLV_LINK_SIZE;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2762:   switch (ntohs(tlvh->type)) {",
          "2763:   case EXT_SUBTLV_ADJ_SID:",
          "2764:    adj = (struct ext_subtlv_adj_sid *)tlvh;",
          "2765:    label = CHECK_FLAG(adj->flags,",
          "2766:         EXT_SUBTLV_LINK_ADJ_SID_VFLG)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2789:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_ADJ_SID_SIZE)",
          "2790:     break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2788:    break;",
          "2789:   case EXT_SUBTLV_LAN_ADJ_SID:",
          "2790:    ladj = (struct ext_subtlv_lan_adj_sid *)tlvh;",
          "2791:    label = CHECK_FLAG(ladj->flags,",
          "2792:         EXT_SUBTLV_LINK_ADJ_SID_VFLG)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2817:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_LAN_ADJ_SID_SIZE)",
          "2818:     break;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2817:    break;",
          "2818:   case EXT_SUBTLV_RMT_ITF_ADDR:",
          "2819:    rmt = (struct ext_subtlv_rmt_itf_addr *)tlvh;",
          "2820:    if (CHECK_FLAG(atr->flags, LS_ATTR_NEIGH_ADDR)",
          "2821:        && IPV4_ADDR_SAME(&atr->standard.remote,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2848:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_RMT_ITF_ADDR_SIZE)",
          "2849:     break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4e70b09f24b72fbb27ff5eda63393bfd2a72ef37",
      "candidate_info": {
        "commit_hash": "4e70b09f24b72fbb27ff5eda63393bfd2a72ef37",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/4e70b09f24b72fbb27ff5eda63393bfd2a72ef37",
        "files": [
          "ospfd/ospf_te.c"
        ],
        "message": "ospfd: Correct Opaque LSA Extended parser\n\nIggy Frankovic discovered another ospfd crash when performing fuzzing of OSPF\nLSA packets. The crash occurs in ospf_te_parse_ext_link() function when\nattemping to read Segment Routing Adjacency SID subTLVs. The original code\ndoesn't check if the size of the Extended Link TLVs and subTLVs have the correct\nlength. In presence of erronous LSA, this will cause a buffer overflow and ospfd\ncrashes.\n\nThis patch introduces new verification of the subTLVs size for Extended Link\nTLVs and subTLVs. Similar check has been also introduced for the Extended\nPrefix TLV.\n\nCo-authored-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Olivier Dugeon <olivier.dugeon@orange.com>\n(cherry picked from commit 5557a289acdaeec8cc63ffc97b5c2abf6dee7b3a)",
        "before_after_code_files": [
          "ospfd/ospf_te.c||ospfd/ospf_te.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ],
          "candidate": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ]
        }
      },
      "candidate_diff": {
        "ospfd/ospf_te.c||ospfd/ospf_te.c": [
          "File: ospfd/ospf_te.c -> ospfd/ospf_te.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2647:  struct ext_tlv_prefix *ext;",
          "2648:  struct ext_subtlv_prefix_sid *pref_sid;",
          "2649:  uint32_t label;",
          "2652:  ext = (struct ext_tlv_prefix *)TLV_HDR_TOP(lsa->data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2650:  uint16_t len, size;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2668:  ote_debug(\"  |- Process Extended Prefix LSA %pI4 for subnet %pFX\",",
          "2669:     &lsa->data->id, &pref);",
          "2672:  ls_pref = subnet->ls_pref;",
          "2673:  pref_sid = (struct ext_subtlv_prefix_sid *)((char *)(ext) + TLV_HDR_SIZE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2676:  len = TLV_BODY_SIZE(&ext->header);",
          "2677:  size = lsa->size - (OSPF_LSA_HEADER_SIZE + TLV_HDR_SIZE);",
          "2678:  if (len != size || len <= 0) {",
          "2679:   ote_debug(\"  |- Wrong TLV size: %u instead of %u\",",
          "2680:      (uint32_t)len, (uint32_t)size);",
          "2681:   return -1;",
          "2682:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2778:  ote_debug(\"  |- Process Extended Link LSA %pI4 for edge %pI4\",",
          "2779:     &lsa->data->id, &edge->attributes->standard.local);",
          "2783:  tlvh = (struct tlv_header *)((char *)(ext) + TLV_HDR_SIZE",
          "2784:          + EXT_TLV_LINK_SIZE);",
          "2785:  for (; sum < len; tlvh = TLV_HDR_NEXT(tlvh)) {",
          "",
          "[Removed Lines]",
          "2782:  len = TLV_BODY_SIZE(&ext->header) - EXT_TLV_LINK_SIZE;",
          "",
          "[Added Lines]",
          "2798:  len = TLV_BODY_SIZE(&ext->header);",
          "2799:  i = lsa->size - (OSPF_LSA_HEADER_SIZE + TLV_HDR_SIZE);",
          "2800:  if (len != i || len <= 0) {",
          "2801:   ote_debug(\"  |- Wrong TLV size: %u instead of %u\",",
          "2802:      (uint32_t)len, (uint32_t)i);",
          "2803:   return -1;",
          "2804:  }",
          "2807:  len -= EXT_TLV_LINK_SIZE;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2790:   switch (ntohs(tlvh->type)) {",
          "2791:   case EXT_SUBTLV_ADJ_SID:",
          "2792:    adj = (struct ext_subtlv_adj_sid *)tlvh;",
          "2793:    label = CHECK_FLAG(adj->flags,",
          "2794:         EXT_SUBTLV_LINK_ADJ_SID_VFLG)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2817:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_ADJ_SID_SIZE)",
          "2818:     break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2816:    break;",
          "2817:   case EXT_SUBTLV_LAN_ADJ_SID:",
          "2818:    ladj = (struct ext_subtlv_lan_adj_sid *)tlvh;",
          "2819:    label = CHECK_FLAG(ladj->flags,",
          "2820:         EXT_SUBTLV_LINK_ADJ_SID_VFLG)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2845:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_LAN_ADJ_SID_SIZE)",
          "2846:     break;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2845:    break;",
          "2846:   case EXT_SUBTLV_RMT_ITF_ADDR:",
          "2847:    rmt = (struct ext_subtlv_rmt_itf_addr *)tlvh;",
          "2848:    if (CHECK_FLAG(atr->flags, LS_ATTR_NEIGH_ADDR)",
          "2849:        && IPV4_ADDR_SAME(&atr->standard.remote,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2876:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_RMT_ITF_ADDR_SIZE)",
          "2877:     break;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1ffec340fa23540f438576db69d46000310a3f8",
      "candidate_info": {
        "commit_hash": "f1ffec340fa23540f438576db69d46000310a3f8",
        "repo": "FRRouting/frr",
        "commit_url": "https://github.com/FRRouting/frr/commit/f1ffec340fa23540f438576db69d46000310a3f8",
        "files": [
          "ospfd/ospf_te.c"
        ],
        "message": "ospfd: Correct Opaque LSA Extended parser\n\nIggy Frankovic discovered another ospfd crash when performing fuzzing of OSPF\nLSA packets. The crash occurs in ospf_te_parse_ext_link() function when\nattemping to read Segment Routing Adjacency SID subTLVs. The original code\ndoesn't check if the size of the Extended Link TLVs and subTLVs have the correct\nlength. In presence of erronous LSA, this will cause a buffer overflow and ospfd\ncrashes.\n\nThis patch introduces new verification of the subTLVs size for Extended Link\nTLVs and subTLVs. Similar check has been also introduced for the Extended\nPrefix TLV.\n\nCo-authored-by: Iggy Frankovic <iggyfran@amazon.com>\nSigned-off-by: Olivier Dugeon <olivier.dugeon@orange.com>",
        "before_after_code_files": [
          "ospfd/ospf_te.c||ospfd/ospf_te.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ],
          "candidate": [
            "ospfd/ospf_te.c||ospfd/ospf_te.c"
          ]
        }
      },
      "candidate_diff": {
        "ospfd/ospf_te.c||ospfd/ospf_te.c": [
          "File: ospfd/ospf_te.c -> ospfd/ospf_te.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2648:  struct ext_tlv_prefix *ext;",
          "2649:  struct ext_subtlv_prefix_sid *pref_sid;",
          "2650:  uint32_t label;",
          "2653:  ext = (struct ext_tlv_prefix *)TLV_HDR_TOP(lsa->data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2651:  uint16_t len, size;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2669:  ote_debug(\"  |- Process Extended Prefix LSA %pI4 for subnet %pFX\",",
          "2670:     &lsa->data->id, &pref);",
          "2673:  ls_pref = subnet->ls_pref;",
          "2674:  pref_sid = (struct ext_subtlv_prefix_sid *)((char *)(ext) + TLV_HDR_SIZE",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2677:  len = TLV_BODY_SIZE(&ext->header);",
          "2678:  size = lsa->size - (OSPF_LSA_HEADER_SIZE + TLV_HDR_SIZE);",
          "2679:  if (len != size || len <= 0) {",
          "2680:   ote_debug(\"  |- Wrong TLV size: %u instead of %u\",",
          "2681:      (uint32_t)len, (uint32_t)size);",
          "2682:   return -1;",
          "2683:  }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2783:  ote_debug(\"  |- Process Extended Link LSA %pI4 for edge %pI4\",",
          "2784:     &lsa->data->id, &edge->attributes->standard.local);",
          "2788:  tlvh = (struct tlv_header *)((char *)(ext) + TLV_HDR_SIZE",
          "2789:          + EXT_TLV_LINK_SIZE);",
          "2790:  for (; sum < len; tlvh = TLV_HDR_NEXT(tlvh)) {",
          "",
          "[Removed Lines]",
          "2787:  len = TLV_BODY_SIZE(&ext->header) - EXT_TLV_LINK_SIZE;",
          "",
          "[Added Lines]",
          "2803:  len = TLV_BODY_SIZE(&ext->header);",
          "2804:  i = lsa->size - (OSPF_LSA_HEADER_SIZE + TLV_HDR_SIZE);",
          "2805:  if (len != i || len <= 0) {",
          "2806:   ote_debug(\"  |- Wrong TLV size: %u instead of %u\",",
          "2807:      (uint32_t)len, (uint32_t)i);",
          "2808:   return -1;",
          "2809:  }",
          "2812:  len -= EXT_TLV_LINK_SIZE;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2795:   switch (ntohs(tlvh->type)) {",
          "2796:   case EXT_SUBTLV_ADJ_SID:",
          "2797:    adj = (struct ext_subtlv_adj_sid *)tlvh;",
          "2798:    label = CHECK_FLAG(adj->flags,",
          "2799:         EXT_SUBTLV_LINK_ADJ_SID_VFLG)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2822:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_ADJ_SID_SIZE)",
          "2823:     break;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2821:    break;",
          "2822:   case EXT_SUBTLV_LAN_ADJ_SID:",
          "2823:    ladj = (struct ext_subtlv_lan_adj_sid *)tlvh;",
          "2824:    label = CHECK_FLAG(ladj->flags,",
          "2825:         EXT_SUBTLV_LINK_ADJ_SID_VFLG)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2850:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_LAN_ADJ_SID_SIZE)",
          "2851:     break;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2850:    break;",
          "2851:   case EXT_SUBTLV_RMT_ITF_ADDR:",
          "2852:    rmt = (struct ext_subtlv_rmt_itf_addr *)tlvh;",
          "2853:    if (CHECK_FLAG(atr->flags, LS_ATTR_NEIGH_ADDR)",
          "2854:        && IPV4_ADDR_SAME(&atr->standard.remote,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2881:    if (TLV_BODY_SIZE(tlvh) != EXT_SUBTLV_RMT_ITF_ADDR_SIZE)",
          "2882:     break;",
          "",
          "---------------"
        ]
      }
    }
  ]
}