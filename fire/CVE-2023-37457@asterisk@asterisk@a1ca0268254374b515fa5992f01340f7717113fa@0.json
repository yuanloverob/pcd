{
  "cve_id": "CVE-2023-37457",
  "cve_desc": "Asterisk is an open source private branch exchange and telephony toolkit. In Asterisk versions 18.20.0 and prior, 20.5.0 and prior, and 21.0.0; as well as ceritifed-asterisk 18.9-cert5 and prior, the 'update' functionality of the PJSIP_HEADER dialplan function can exceed the available buffer space for storing the new value of a header. By doing so this can overwrite memory or cause a crash. This is not externally exploitable, unless dialplan is explicitly written to update a header based on data from an outside source. If the 'update' functionality is not used the vulnerability does not occur. A patch is available at commit a1ca0268254374b515fa5992f01340f7717113fa.",
  "repo": "asterisk/asterisk",
  "patch_hash": "a1ca0268254374b515fa5992f01340f7717113fa",
  "patch_info": {
    "commit_hash": "a1ca0268254374b515fa5992f01340f7717113fa",
    "repo": "asterisk/asterisk",
    "commit_url": "https://github.com/asterisk/asterisk/commit/a1ca0268254374b515fa5992f01340f7717113fa",
    "files": [
      "res/res_pjsip_header_funcs.c"
    ],
    "message": "res_pjsip_header_funcs: Duplicate new header value, don't copy.\n\nWhen updating an existing header the 'update' code incorrectly\njust copied the new value into the existing buffer. If the\nnew value exceeded the available buffer size memory outside\nof the buffer would be written into, potentially causing\na crash.\n\nThis change makes it so that the 'update' now duplicates\nthe new header value instead of copying it into the existing\nbuffer.",
    "before_after_code_files": [
      "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c"
    ]
  },
  "patch_diff": {
    "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c": [
      "File: res/res_pjsip_header_funcs.c -> res/res_pjsip_header_funcs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "676: static int update_header(void *obj)",
      "677: {",
      "678:  struct header_data *data = obj;",
      "679:  pjsip_hdr *hdr = NULL;",
      "680:  RAII_VAR(struct ast_datastore *, datastore,",
      "681:     ast_sip_session_get_datastore(data->channel->session, data->header_datastore->type),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "679:  pj_pool_t *pool = data->channel->session->inv_session->dlg->pool;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "694:   return -1;",
      "695:  }",
      "699:  return 0;",
      "700: }",
      "",
      "[Removed Lines]",
      "697:  pj_strcpy2(&((pjsip_generic_string_hdr *) hdr)->hvalue, data->header_value);",
      "",
      "[Added Lines]",
      "698:  pj_strdup2(pool, &((pjsip_generic_string_hdr *) hdr)->hvalue, data->header_value);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "22ae979dfc84c8faafb662c09cfe0c2a413e622f",
      "candidate_info": {
        "commit_hash": "22ae979dfc84c8faafb662c09cfe0c2a413e622f",
        "repo": "asterisk/asterisk",
        "commit_url": "https://github.com/asterisk/asterisk/commit/22ae979dfc84c8faafb662c09cfe0c2a413e622f",
        "files": [
          "res/res_pjsip_header_funcs.c"
        ],
        "message": "res_pjsip_header_funcs: Duplicate new header value, don't copy.\n\nWhen updating an existing header the 'update' code incorrectly\njust copied the new value into the existing buffer. If the\nnew value exceeded the available buffer size memory outside\nof the buffer would be written into, potentially causing\na crash.\n\nThis change makes it so that the 'update' now duplicates\nthe new header value instead of copying it into the existing\nbuffer.",
        "before_after_code_files": [
          "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c"
          ],
          "candidate": [
            "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c"
          ]
        }
      },
      "candidate_diff": {
        "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c": [
          "File: res/res_pjsip_header_funcs.c -> res/res_pjsip_header_funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "501: static int update_header(void *obj)",
          "502: {",
          "503:  struct header_data *data = obj;",
          "504:  pjsip_hdr *hdr = NULL;",
          "505:  RAII_VAR(struct ast_datastore *, datastore,",
          "506:     ast_sip_session_get_datastore(data->channel->session, header_datastore.type),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "504:  pj_pool_t *pool = data->channel->session->inv_session->dlg->pool;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "519:   return -1;",
          "520:  }",
          "524:  return 0;",
          "525: }",
          "",
          "[Removed Lines]",
          "522:  pj_strcpy2(&((pjsip_generic_string_hdr *) hdr)->hvalue, data->header_value);",
          "",
          "[Added Lines]",
          "523:  pj_strdup2(pool, &((pjsip_generic_string_hdr *) hdr)->hvalue, data->header_value);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b9594cc08aa2d1741b8fe312329fa99a1afd68be",
      "candidate_info": {
        "commit_hash": "b9594cc08aa2d1741b8fe312329fa99a1afd68be",
        "repo": "asterisk/asterisk",
        "commit_url": "https://github.com/asterisk/asterisk/commit/b9594cc08aa2d1741b8fe312329fa99a1afd68be",
        "files": [
          "res/res_pjsip_header_funcs.c"
        ],
        "message": "res_pjsip_header_funcs: Duplicate new header value, don't copy.\n\nWhen updating an existing header the 'update' code incorrectly\njust copied the new value into the existing buffer. If the\nnew value exceeded the available buffer size memory outside\nof the buffer would be written into, potentially causing\na crash.\n\nThis change makes it so that the 'update' now duplicates\nthe new header value instead of copying it into the existing\nbuffer.",
        "before_after_code_files": [
          "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c"
          ],
          "candidate": [
            "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c"
          ]
        }
      },
      "candidate_diff": {
        "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c": [
          "File: res/res_pjsip_header_funcs.c -> res/res_pjsip_header_funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "676: static int update_header(void *obj)",
          "677: {",
          "678:  struct header_data *data = obj;",
          "679:  pjsip_hdr *hdr = NULL;",
          "680:  RAII_VAR(struct ast_datastore *, datastore,",
          "681:     ast_sip_session_get_datastore(data->channel->session, data->header_datastore->type),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "679:  pj_pool_t *pool = data->channel->session->inv_session->dlg->pool;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "694:   return -1;",
          "695:  }",
          "699:  return 0;",
          "700: }",
          "",
          "[Removed Lines]",
          "697:  pj_strcpy2(&((pjsip_generic_string_hdr *) hdr)->hvalue, data->header_value);",
          "",
          "[Added Lines]",
          "698:  pj_strdup2(pool, &((pjsip_generic_string_hdr *) hdr)->hvalue, data->header_value);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b6122db51da11edf3713cabe266373f7238ee63c",
      "candidate_info": {
        "commit_hash": "b6122db51da11edf3713cabe266373f7238ee63c",
        "repo": "asterisk/asterisk",
        "commit_url": "https://github.com/asterisk/asterisk/commit/b6122db51da11edf3713cabe266373f7238ee63c",
        "files": [
          "res/res_pjsip_header_funcs.c"
        ],
        "message": "res_pjsip_header_funcs: Duplicate new header value, don't copy.\n\nWhen updating an existing header the 'update' code incorrectly\njust copied the new value into the existing buffer. If the\nnew value exceeded the available buffer size memory outside\nof the buffer would be written into, potentially causing\na crash.\n\nThis change makes it so that the 'update' now duplicates\nthe new header value instead of copying it into the existing\nbuffer.",
        "before_after_code_files": [
          "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c"
          ],
          "candidate": [
            "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c"
          ]
        }
      },
      "candidate_diff": {
        "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c": [
          "File: res/res_pjsip_header_funcs.c -> res/res_pjsip_header_funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "676: static int update_header(void *obj)",
          "677: {",
          "678:  struct header_data *data = obj;",
          "679:  pjsip_hdr *hdr = NULL;",
          "680:  RAII_VAR(struct ast_datastore *, datastore,",
          "681:     ast_sip_session_get_datastore(data->channel->session, data->header_datastore->type),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "679:  pj_pool_t *pool = data->channel->session->inv_session->dlg->pool;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "694:   return -1;",
          "695:  }",
          "699:  return 0;",
          "700: }",
          "",
          "[Removed Lines]",
          "697:  pj_strcpy2(&((pjsip_generic_string_hdr *) hdr)->hvalue, data->header_value);",
          "",
          "[Added Lines]",
          "698:  pj_strdup2(pool, &((pjsip_generic_string_hdr *) hdr)->hvalue, data->header_value);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6b4f9ab00507156b85affc1bd60c6660145c706c",
      "candidate_info": {
        "commit_hash": "6b4f9ab00507156b85affc1bd60c6660145c706c",
        "repo": "asterisk/asterisk",
        "commit_url": "https://github.com/asterisk/asterisk/commit/6b4f9ab00507156b85affc1bd60c6660145c706c",
        "files": [
          "res/res_pjsip_header_funcs.c"
        ],
        "message": "res_pjsip_header_funcs: Duplicate new header value, don't copy.\n\nWhen updating an existing header the 'update' code incorrectly\njust copied the new value into the existing buffer. If the\nnew value exceeded the available buffer size memory outside\nof the buffer would be written into, potentially causing\na crash.\n\nThis change makes it so that the 'update' now duplicates\nthe new header value instead of copying it into the existing\nbuffer.",
        "before_after_code_files": [
          "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c"
          ],
          "candidate": [
            "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c"
          ]
        }
      },
      "candidate_diff": {
        "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c": [
          "File: res/res_pjsip_header_funcs.c -> res/res_pjsip_header_funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "501: static int update_header(void *obj)",
          "502: {",
          "503:  struct header_data *data = obj;",
          "504:  pjsip_hdr *hdr = NULL;",
          "505:  RAII_VAR(struct ast_datastore *, datastore,",
          "506:     ast_sip_session_get_datastore(data->channel->session, header_datastore.type),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "504:  pj_pool_t *pool = data->channel->session->inv_session->dlg->pool;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "519:   return -1;",
          "520:  }",
          "524:  return 0;",
          "525: }",
          "",
          "[Removed Lines]",
          "522:  pj_strcpy2(&((pjsip_generic_string_hdr *) hdr)->hvalue, data->header_value);",
          "",
          "[Added Lines]",
          "523:  pj_strdup2(pool, &((pjsip_generic_string_hdr *) hdr)->hvalue, data->header_value);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "510f7798d8564b716566f569185aa3daadd73ca4",
      "candidate_info": {
        "commit_hash": "510f7798d8564b716566f569185aa3daadd73ca4",
        "repo": "asterisk/asterisk",
        "commit_url": "https://github.com/asterisk/asterisk/commit/510f7798d8564b716566f569185aa3daadd73ca4",
        "files": [
          "res/res_pjsip_header_funcs.c"
        ],
        "message": "res_pjsip_header_funcs: Duplicate new header value, don't copy.\n\nWhen updating an existing header the 'update' code incorrectly\njust copied the new value into the existing buffer. If the\nnew value exceeded the available buffer size memory outside\nof the buffer would be written into, potentially causing\na crash.\n\nThis change makes it so that the 'update' now duplicates\nthe new header value instead of copying it into the existing\nbuffer.",
        "before_after_code_files": [
          "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c"
          ],
          "candidate": [
            "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c"
          ]
        }
      },
      "candidate_diff": {
        "res/res_pjsip_header_funcs.c||res/res_pjsip_header_funcs.c": [
          "File: res/res_pjsip_header_funcs.c -> res/res_pjsip_header_funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "676: static int update_header(void *obj)",
          "677: {",
          "678:  struct header_data *data = obj;",
          "679:  pjsip_hdr *hdr = NULL;",
          "680:  RAII_VAR(struct ast_datastore *, datastore,",
          "681:     ast_sip_session_get_datastore(data->channel->session, data->header_datastore->type),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "679:  pj_pool_t *pool = data->channel->session->inv_session->dlg->pool;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "694:   return -1;",
          "695:  }",
          "699:  return 0;",
          "700: }",
          "",
          "[Removed Lines]",
          "697:  pj_strcpy2(&((pjsip_generic_string_hdr *) hdr)->hvalue, data->header_value);",
          "",
          "[Added Lines]",
          "698:  pj_strdup2(pool, &((pjsip_generic_string_hdr *) hdr)->hvalue, data->header_value);",
          "",
          "---------------"
        ]
      }
    }
  ]
}