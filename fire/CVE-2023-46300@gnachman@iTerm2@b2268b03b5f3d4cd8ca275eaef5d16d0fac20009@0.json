{
  "cve_id": "CVE-2023-46300",
  "cve_desc": "iTerm2 before 3.4.20 allow (potentially remote) code execution because of mishandling of certain escape sequences related to tmux integration.",
  "repo": "gnachman/iTerm2",
  "patch_hash": "b2268b03b5f3d4cd8ca275eaef5d16d0fac20009",
  "patch_info": {
    "commit_hash": "b2268b03b5f3d4cd8ca275eaef5d16d0fac20009",
    "repo": "gnachman/iTerm2",
    "commit_url": "https://github.com/gnachman/iTerm2/commit/b2268b03b5f3d4cd8ca275eaef5d16d0fac20009",
    "files": [
      "sources/VT100Terminal.m"
    ],
    "message": "Fixes for method 1.\n\nRemove DECSCPP and DECNLS.\nSanitize title reports to remove risky characters.",
    "before_after_code_files": [
      "sources/VT100Terminal.m||sources/VT100Terminal.m"
    ]
  },
  "patch_diff": {
    "sources/VT100Terminal.m||sources/VT100Terminal.m": [
      "File: sources/VT100Terminal.m -> sources/VT100Terminal.m",
      "--- Hunk 1 ---",
      "[Context before]",
      "2798:         }",
      "2799:         case XTERMCC_REPORT_ICON_TITLE: {",
      "2800:             NSString *s = [NSString stringWithFormat:@\"\\033]L%@\\033\\\\\",",
      "2802:             [_delegate terminalSendReport:[s dataUsingEncoding:NSUTF8StringEncoding]];",
      "2803:             break;",
      "2804:         }",
      "",
      "[Removed Lines]",
      "2801:                            [_delegate terminalIconTitle]];",
      "",
      "[Added Lines]",
      "2801:                            [self reportSafeTitle:[_delegate terminalIconTitle]]];",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2809:             NSString *s = [NSString stringWithFormat:@\"\\033]l%@\\033\\\\\",",
      "2811:             [_delegate terminalSendReport:[s dataUsingEncoding:NSUTF8StringEncoding]];",
      "2812:             break;",
      "2813:         }",
      "",
      "[Removed Lines]",
      "2810:                            [_delegate terminalWindowTitle]];",
      "",
      "[Added Lines]",
      "2810:                            [self reportSafeTitle:[_delegate terminalWindowTitle]]];",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "3460:     return [@(height) stringValue];",
      "3461:  }",
      "3471: - (iTermPromise<NSString *> *)decrqssPayloadPromise:(NSString *)pt {",
      "3472:     if ([pt isEqualToString:@\"m\"]) {",
      "3473:         return [iTermPromise promiseValue:[self decrqssSGR]];",
      "",
      "[Removed Lines]",
      "3463: - (NSString *)decrqssDECSCPP {",
      "3464:     return self.columnMode ? @\"132\" : @\"80\";",
      "3465: }",
      "3467: - (NSString *)decrqssDECNLS {",
      "3468:     return [@([self.delegate terminalSizeInCells].height) stringValue];",
      "3469: }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "3490:     if ([pt isEqualToString:@\"t\"]) {",
      "3491:         return [iTermPromise promiseValue:[self decrqssDECSLPP]];",
      "3492:     }",
      "3500:     return [iTermPromise promiseDefaultError];",
      "3501: }",
      "",
      "[Removed Lines]",
      "3493:     if ([pt isEqualToString:@\"$|\"]) {",
      "3494:         return [iTermPromise promiseValue:[self decrqssDECSCPP]];",
      "3495:     }",
      "3496:     if ([pt isEqualToString:@\"*|\"]) {",
      "3497:         return [iTermPromise promiseValue:[self decrqssDECNLS]];",
      "3498:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "5303:     return [title substringFromIndex:NSMaxRange(newlineRange)];",
      "5304: }",
      "5306: - (NSString *)sanitizedTitle:(NSString *)unsafeTitle {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5295: - (NSString *)reportSafeTitle:(NSString *)unsafeTitle {",
      "5296:     NSCharacterSet *unsafeSet = [NSCharacterSet characterSetWithCharactersInString:@\"|;\\r\\n\\e\"];",
      "5297:     NSString *result = unsafeTitle;",
      "5298:     NSRange range;",
      "5299:     range = [result rangeOfCharacterFromSet:unsafeSet];",
      "5300:     while (range.location != NSNotFound) {",
      "5301:         result = [result stringByReplacingCharactersInRange:range withString:@\" \"];",
      "5302:         range = [result rangeOfCharacterFromSet:unsafeSet];",
      "5303:     }",
      "5304:     return result;",
      "5305: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "94be6e513f97c8580ea6255d8a697d26f0c3a1e4",
      "candidate_info": {
        "commit_hash": "94be6e513f97c8580ea6255d8a697d26f0c3a1e4",
        "repo": "gnachman/iTerm2",
        "commit_url": "https://github.com/gnachman/iTerm2/commit/94be6e513f97c8580ea6255d8a697d26f0c3a1e4",
        "files": [
          "sources/Metal/iTermMetalDriver.m",
          "sources/PTYSession.m",
          "sources/TokenExecutor.swift",
          "sources/VT100ScreenDelegate.h",
          "sources/VT100ScreenMutableState+TerminalDelegate.m",
          "sources/VT100Terminal.m",
          "sources/VT100TerminalDelegate.h"
        ],
        "message": "Avoid a paused side effect when setting window title. It adds several ms of latency and tends to happen just before drawing a prompt, which can lead to an annoying extra draw. Issue 11094",
        "before_after_code_files": [
          "sources/Metal/iTermMetalDriver.m||sources/Metal/iTermMetalDriver.m",
          "sources/PTYSession.m||sources/PTYSession.m",
          "sources/TokenExecutor.swift||sources/TokenExecutor.swift",
          "sources/VT100ScreenDelegate.h||sources/VT100ScreenDelegate.h",
          "sources/VT100ScreenMutableState+TerminalDelegate.m||sources/VT100ScreenMutableState+TerminalDelegate.m",
          "sources/VT100Terminal.m||sources/VT100Terminal.m",
          "sources/VT100TerminalDelegate.h||sources/VT100TerminalDelegate.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "sources/VT100Terminal.m||sources/VT100Terminal.m"
          ],
          "candidate": [
            "sources/VT100Terminal.m||sources/VT100Terminal.m"
          ]
        }
      },
      "candidate_diff": {
        "sources/Metal/iTermMetalDriver.m||sources/Metal/iTermMetalDriver.m": [
          "File: sources/Metal/iTermMetalDriver.m -> sources/Metal/iTermMetalDriver.m",
          "--- Hunk 1 ---",
          "[Context before]",
          "347: - (void)drawInMTKView:(nonnull MTKView *)view {",
          "348:     const NSTimeInterval now = [NSDate timeIntervalSinceReferenceDate];",
          "349:     const NSTimeInterval dt = now - _lastFrameStartTime;",
          "350:     _lastFrameStartTime = now;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "348:     DLog(@\"Draw metal\");",
          "",
          "---------------"
        ],
        "sources/PTYSession.m||sources/PTYSession.m": [
          "File: sources/PTYSession.m -> sources/PTYSession.m",
          "--- Hunk 1 ---",
          "[Context before]",
          "11877:     theName = [theName stringByReplacingOccurrencesOfString:@\"\\\\(\" withString:@\"\\\\\\u200B(\"];",
          "11878:     [self setIconName:theName];",
          "11880: }",
          "11882: - (void)screenSetSubtitle:(NSString *)subtitle {",
          "",
          "[Removed Lines]",
          "11879:     [self enableSessionNameTitleComponentIfPossible];",
          "",
          "[Added Lines]",
          "11879:     __weak __typeof(self) weakSelf = self;",
          "11881:     dispatch_async(dispatch_get_main_queue(), ^{",
          "11882:         DLog(@\"Deferred enableSessionNameTitleComponentIfPossible\");",
          "11883:         [weakSelf enableSessionNameTitleComponentIfPossible];",
          "11884:     });",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13060:     [self screenSendReportData:data];",
          "13061: }",
          "13063: - (void)screenReportCapabilities {",
          "13064:     if (self.isTmuxClient) {",
          "13065:         return;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13070: - (NSString *)reportSafeTitle:(NSString *)unsafeTitle {",
          "13071:     NSCharacterSet *unsafeSet = [NSCharacterSet characterSetWithCharactersInString:@\"|;\\r\\n\\e\"];",
          "13072:     NSString *result = unsafeTitle;",
          "13073:     NSRange range;",
          "13074:     range = [result rangeOfCharacterFromSet:unsafeSet];",
          "13075:     while (range.location != NSNotFound) {",
          "13076:         result = [result stringByReplacingCharactersInRange:range withString:@\" \"];",
          "13077:         range = [result rangeOfCharacterFromSet:unsafeSet];",
          "13078:     }",
          "13079:     return result;",
          "13080: }",
          "13082: - (BOOL)allowTitleReporting {",
          "13083:     return [iTermProfilePreferences boolForKey:KEY_ALLOW_TITLE_REPORTING",
          "13084:                                      inProfile:self.profile];",
          "13085: }",
          "13087: - (BOOL)terminalIsTrusted {",
          "13088:     const BOOL result = ![iTermAdvancedSettingsModel disablePotentiallyInsecureEscapeSequences];",
          "13089:     DLog(@\"terminalIsTrusted returning %@\", @(result));",
          "13090:     return result;",
          "13091: }",
          "13093: - (void)screenReportIconTitle {",
          "13094:     if (self.isTmuxClient) {",
          "13095:         return;",
          "13096:     }",
          "13097:     if (!self.screenAllowTitleSetting || !self.terminalIsTrusted) {",
          "13098:         return;",
          "13099:     }",
          "13100:     NSString *title = [self screenIconTitle] ?: @\"\";",
          "13101:     NSString *s = [NSString stringWithFormat:@\"\\033]L%@\\033\\\\\",",
          "13102:                    [self reportSafeTitle:title]];",
          "13103:     [self screenSendReportData:[s dataUsingEncoding:NSUTF8StringEncoding]];",
          "13104: }",
          "13106: - (void)screenReportWindowTitle {",
          "13107:     if (self.isTmuxClient) {",
          "13108:         return;",
          "13109:     }",
          "13110:     if (!self.screenAllowTitleSetting || !self.terminalIsTrusted) {",
          "13111:         return;",
          "13112:     }",
          "13113:     NSString *title = [self screenIconTitle] ?: @\"\";",
          "13114:     NSString *s = [NSString stringWithFormat:@\"\\033]l%@\\033\\\\\",",
          "13115:                    [self reportSafeTitle:[self screenWindowTitle]]];",
          "13116:     [self screenSendReportData:[s dataUsingEncoding:NSUTF8StringEncoding]];",
          "13117: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "15509: #pragma mark - iTermUpdateCadenceController",
          "15511: - (void)updateCadenceControllerUpdateDisplay:(iTermUpdateCadenceController *)controller {",
          "15512:     [self updateDisplayBecause:nil];",
          "15513: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15568:     DLog(@\"Cadence controller requests display\");",
          "",
          "---------------"
        ],
        "sources/TokenExecutor.swift||sources/TokenExecutor.swift": [
          "File: sources/TokenExecutor.swift -> sources/TokenExecutor.swift",
          "--- Hunk 1 ---",
          "[Context before]",
          "535:     func pause() -> Unpauser {",
          "536:         assertQueue()",
          "537:         pauseCount.mutate { value in",
          "538:             return value + 1",
          "539:         }",
          "540:         return Unpauser(self)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "538:             if value == 0 {",
          "539:                 DLog(\"Pause\")",
          "540:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "813:             return value - 1",
          "814:         }",
          "815:         if newCount == 0 {",
          "816:             schedule()",
          "817:         }",
          "818:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "819:             DLog(\"Unpause\")",
          "",
          "---------------"
        ],
        "sources/VT100ScreenDelegate.h||sources/VT100ScreenDelegate.h": [
          "File: sources/VT100ScreenDelegate.h -> sources/VT100ScreenDelegate.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "429: - (void)screenWillSynchronize;",
          "430: - (void)screenDidSynchronize;",
          "431: - (void)screenOpenURL:(NSURL *)url completion:(void (^ _Nonnull)(void))completion;",
          "433: @end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "432: - (void)screenReportIconTitle;",
          "433: - (void)screenReportWindowTitle;",
          "",
          "---------------"
        ],
        "sources/VT100ScreenMutableState+TerminalDelegate.m||sources/VT100ScreenMutableState+TerminalDelegate.m": [
          "File: sources/VT100ScreenMutableState+TerminalDelegate.m -> sources/VT100ScreenMutableState+TerminalDelegate.m",
          "--- Hunk 1 ---",
          "[Context before]",
          "562: - (void)terminalSetWindowTitle:(NSString *)title {",
          "563:     DLog(@\"begin %@\", title);",
          "566:         DLog(@\"begin side-effect\");",
          "567:         if ([delegate screenAllowTitleSetting]) {",
          "568:             DLog(@\"calling screenSetWindowTitle:%@\", title);",
          "",
          "[Removed Lines]",
          "565:     [self addSideEffect:^(id<VT100ScreenDelegate> delegate) {",
          "",
          "[Added Lines]",
          "568:     [self addDeferredSideEffect:^(id<VT100ScreenDelegate> delegate) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "593: - (void)terminalSetIconTitle:(NSString *)title {",
          "594:     DLog(@\"begin %@\", title);",
          "597:         DLog(@\"begin side-effect\");",
          "598:         if ([delegate screenAllowTitleSetting]) {",
          "599:             [delegate screenSetIconName:title];",
          "600:         }",
          "602:     }];",
          "603: }",
          "605: - (void)terminalSetSubtitle:(NSString *)subtitle {",
          "606:     DLog(@\"begin %@\", subtitle);",
          "609:         DLog(@\"begin side-effect\");",
          "610:         if ([delegate screenAllowTitleSetting]) {",
          "611:             [delegate screenSetSubtitle:subtitle];",
          "612:         }",
          "614:     }];",
          "615: }",
          "",
          "[Removed Lines]",
          "596:     [self addPausedSideEffect:^(id<VT100ScreenDelegate> delegate, iTermTokenExecutorUnpauser *unpauser) {",
          "601:         [unpauser unpause];",
          "608:     [self addPausedSideEffect:^(id<VT100ScreenDelegate> delegate, iTermTokenExecutorUnpauser *unpauser) {",
          "613:         [unpauser unpause];",
          "",
          "[Added Lines]",
          "601:     [self addDeferredSideEffect:^(id<VT100ScreenDelegate> delegate) {",
          "614:     [self addDeferredSideEffect:^(id<VT100ScreenDelegate> delegate) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "672:             }",
          "674:             if (string) {",
          "676:                 [self addSideEffect:^(id<VT100ScreenDelegate>  _Nonnull delegate) {",
          "677:                     DLog(@\"begin side-effect\");",
          "678:                     [delegate screenCopyStringToPasteboard:string];",
          "",
          "[Removed Lines]",
          "675:                 NSLog(@\"string=%@\", string);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "875:     return self.config.theoreticalGridSize.width;",
          "876: }",
          "879:     DLog(@\"begin\");",
          "886: }",
          "889:     DLog(@\"begin\");",
          "896: }",
          "898: - (void)terminalPushCurrentTitleForWindow:(BOOL)isWindow {",
          "",
          "[Removed Lines]",
          "878: - (NSString *)terminalIconTitle {",
          "880:     if (self.allowTitleReporting && [self terminalIsTrusted]) {",
          "881:         return self.config.iconTitle ?: @\"\";",
          "882:     } else {",
          "883:         DLog(@\"not allowed\");",
          "884:         return @\"\";",
          "885:     }",
          "888: - (NSString *)terminalWindowTitle {",
          "890:     if (self.allowTitleReporting && [self terminalIsTrusted]) {",
          "891:         return self.config.windowTitle ?: @\"\";",
          "892:     } else {",
          "893:         DLog(@\"not allowed\");",
          "894:         return @\"\";",
          "895:     }",
          "",
          "[Added Lines]",
          "882: - (void)terminalReportIconTitle {",
          "884:     [self willSendReport];",
          "885:     __weak __typeof(self) weakSelf = self;",
          "886:     [self addSideEffect:^(id<VT100ScreenDelegate>  _Nonnull delegate) {",
          "887:         [delegate screenReportIconTitle];",
          "888:         [weakSelf didSendReport:delegate];",
          "889:     }];",
          "892: - (void)terminalReportWindowTitle {",
          "894:     [self willSendReport];",
          "895:     __weak __typeof(self) weakSelf = self;",
          "896:     [self addSideEffect:^(id<VT100ScreenDelegate>  _Nonnull delegate) {",
          "897:         [delegate screenReportWindowTitle];",
          "898:         [weakSelf didSendReport:delegate];",
          "899:     }];",
          "",
          "---------------"
        ],
        "sources/VT100Terminal.m||sources/VT100Terminal.m": [
          "File: sources/VT100Terminal.m -> sources/VT100Terminal.m",
          "--- Hunk 1 ---",
          "[Context before]",
          "2797:             break;",
          "2798:         }",
          "2799:         case XTERMCC_REPORT_ICON_TITLE: {",
          "2803:             break;",
          "2804:         }",
          "2805:         case XTERMCC_REPORT_WIN_TITLE: {",
          "2812:             break;",
          "2813:         }",
          "2814:         case XTERMCC_PUSH_TITLE: {",
          "",
          "[Removed Lines]",
          "2800:             NSString *s = [NSString stringWithFormat:@\"\\033]L%@\\033\\\\\",",
          "2801:                            [self reportSafeTitle:[_delegate terminalIconTitle]]];",
          "2802:             [_delegate terminalSendReport:[s dataUsingEncoding:NSUTF8StringEncoding]];",
          "2809:             NSString *s = [NSString stringWithFormat:@\"\\033]l%@\\033\\\\\",",
          "2810:                            [self reportSafeTitle:[_delegate terminalWindowTitle]]];",
          "2811:             [_delegate terminalSendReport:[s dataUsingEncoding:NSUTF8StringEncoding]];",
          "",
          "[Added Lines]",
          "2800:             [_delegate terminalReportIconTitle];",
          "2807:             [_delegate terminalReportWindowTitle];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "5290:     return [title substringFromIndex:NSMaxRange(newlineRange)];",
          "5291: }",
          "5307: - (NSString *)sanitizedTitle:(NSString *)unsafeTitle {",
          "",
          "[Removed Lines]",
          "5295: - (NSString *)reportSafeTitle:(NSString *)unsafeTitle {",
          "5296:     NSCharacterSet *unsafeSet = [NSCharacterSet characterSetWithCharactersInString:@\"|;\\r\\n\\e\"];",
          "5297:     NSString *result = unsafeTitle;",
          "5298:     NSRange range;",
          "5299:     range = [result rangeOfCharacterFromSet:unsafeSet];",
          "5300:     while (range.location != NSNotFound) {",
          "5301:         result = [result stringByReplacingCharactersInRange:range withString:@\" \"];",
          "5302:         range = [result rangeOfCharacterFromSet:unsafeSet];",
          "5303:     }",
          "5304:     return result;",
          "5305: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "sources/VT100TerminalDelegate.h||sources/VT100TerminalDelegate.h": [
          "File: sources/VT100TerminalDelegate.h -> sources/VT100TerminalDelegate.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "262: - (int)terminalScreenWidthInCells;",
          "269: - (void)terminalPushCurrentTitleForWindow:(BOOL)isWindow;",
          "",
          "[Removed Lines]",
          "265: - (NSString *)terminalIconTitle;",
          "266: - (NSString *)terminalWindowTitle;",
          "",
          "[Added Lines]",
          "265: - (void)terminalReportIconTitle;",
          "266: - (void)terminalReportWindowTitle;",
          "",
          "---------------"
        ]
      }
    }
  ]
}