{
  "cve_id": "CVE-2022-28072",
  "cve_desc": "A heap buffer overflow in r_read_le32 function in radare25.4.2 and 5.4.0.",
  "repo": "radareorg/radare2",
  "patch_hash": "027cd9b7274988bb1af866539ba6c2fa2ff63e45",
  "patch_info": {
    "commit_hash": "027cd9b7274988bb1af866539ba6c2fa2ff63e45",
    "repo": "radareorg/radare2",
    "commit_url": "https://github.com/radareorg/radare2/commit/027cd9b7274988bb1af866539ba6c2fa2ff63e45",
    "files": [
      "libr/anal/p/anal_hexagon.c"
    ],
    "message": "Fix oobread crash in RAnal.hexagon (tests_64900) ##crash\n\nReported by giantbranch of NSFOCUS TIANJI Lab",
    "before_after_code_files": [
      "libr/anal/p/anal_hexagon.c||libr/anal/p/anal_hexagon.c"
    ]
  },
  "patch_diff": {
    "libr/anal/p/anal_hexagon.c||libr/anal/p/anal_hexagon.c": [
      "File: libr/anal/p/anal_hexagon.c -> libr/anal/p/anal_hexagon.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #include \"hexagon_anal.h\"",
      "12: static int hexagon_v6_op(RAnal *anal, RAnalOp *op, ut64 addr, const ut8 *buf, int len, RAnalOpMask mask) {",
      "14:  ut32 data = 0;",
      "15:  data = r_read_le32 (buf);",
      "16:  int size = hexagon_disasm_instruction (data, &hi, (ut32) addr);",
      "17:  op->size = size;",
      "",
      "[Removed Lines]",
      "13:  HexInsn hi = {0};;",
      "",
      "[Added Lines]",
      "13:  HexInsn hi = {0};",
      "15:  if (len < 4) {",
      "16:   return 0;",
      "17:  }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "49b0cebfdf0db9704e36f8a5533f1df6d3e2ed3a",
      "candidate_info": {
        "commit_hash": "49b0cebfdf0db9704e36f8a5533f1df6d3e2ed3a",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/49b0cebfdf0db9704e36f8a5533f1df6d3e2ed3a",
        "files": [
          "libr/anal/p/anal_vax.c"
        ],
        "message": "Fix oobread in VAX disassembler (tests_64920) ##crash\n\nReported by giantbranch of NSFOCUS TIANJI Lab",
        "before_after_code_files": [
          "libr/anal/p/anal_vax.c||libr/anal/p/anal_vax.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/radareorg/radare2/pull/19342"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libr/anal/p/anal_vax.c||libr/anal/p/anal_vax.c": [
          "File: libr/anal/p/anal_vax.c -> libr/anal/p/anal_vax.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "150:  case 0xfb: // calls",
          "151:   op->type = R_ANAL_OP_TYPE_CALL;",
          "152:   op->size = 7;",
          "154:    int oa = 3;",
          "155:    ut32 delta = buf[oa];",
          "156:    delta |= (ut32)(buf[oa + 1]) << 8;",
          "",
          "[Removed Lines]",
          "153:   {",
          "",
          "[Added Lines]",
          "153:   if (len > 6) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "65448811e5b9582a19cf631e03cfcaa025a92ef5",
      "candidate_info": {
        "commit_hash": "65448811e5b9582a19cf631e03cfcaa025a92ef5",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/65448811e5b9582a19cf631e03cfcaa025a92ef5",
        "files": [
          "libr/core/anal_tp.c"
        ],
        "message": "Fix UAF in aaft (tests_64923) ##crash\n\nReported by giantbranch of NSFOCUS TIANJI Lab",
        "before_after_code_files": [
          "libr/core/anal_tp.c||libr/core/anal_tp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/radareorg/radare2/pull/19342"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "libr/core/anal_tp.c||libr/core/anal_tp.c": [
          "File: libr/core/anal_tp.c -> libr/core/anal_tp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "504:  char prev_type[256] = {0};",
          "505:  const char *prev_dest = NULL;",
          "506:  char *ret_reg = NULL;",
          "510:   return;",
          "511:  }",
          "512:  RRegItem *r = r_reg_get (core->dbg->reg, pc, -1);",
          "513:  if (!r) {",
          "514:   free (buf);",
          "",
          "[Removed Lines]",
          "507:  const char *pc = r_reg_get_name (core->dbg->reg, R_REG_NAME_PC);",
          "508:  if (!pc) {",
          "509:         free (buf);",
          "",
          "[Added Lines]",
          "507:  const char *_pc = r_reg_get_name (core->dbg->reg, R_REG_NAME_PC);",
          "508:  if (!_pc) {",
          "509:   free (buf);",
          "512:  char *pc = strdup (_pc);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "778:  free (buf);",
          "779:  r_cons_break_pop();",
          "780:  anal_emul_restore (core, hc, dt, et);",
          "781: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "782:  free (pc);",
          "",
          "---------------"
        ]
      }
    }
  ]
}