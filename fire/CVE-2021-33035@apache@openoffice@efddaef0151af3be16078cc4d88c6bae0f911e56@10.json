{
  "cve_id": "CVE-2021-33035",
  "cve_desc": "Apache OpenOffice opens dBase/DBF documents and shows the contents as spreadsheets. DBF are database files with data organized in fields. When reading DBF data the size of certain fields is not checked: the data is just copied into local variables. A carefully crafted document could overflow the allocated space, leading to the execution of arbitrary code by altering the contents of the program stack. This issue affects Apache OpenOffice up to and including version 4.1.10",
  "repo": "apache/openoffice",
  "patch_hash": "efddaef0151af3be16078cc4d88c6bae0f911e56",
  "patch_info": {
    "commit_hash": "efddaef0151af3be16078cc4d88c6bae0f911e56",
    "repo": "apache/openoffice",
    "commit_url": "https://github.com/apache/openoffice/commit/efddaef0151af3be16078cc4d88c6bae0f911e56#diff-ea66e734dd358922aba12ad4ba39c96bdc6cbde587d07dbc63d04daa0a30e90f",
    "files": [
      "main/connectivity/source/drivers/dbase/DTable.cxx"
    ],
    "message": "add useful checks",
    "before_after_code_files": [
      "main/connectivity/source/drivers/dbase/DTable.cxx||main/connectivity/source/drivers/dbase/DTable.cxx"
    ]
  },
  "patch_diff": {
    "main/connectivity/source/drivers/dbase/DTable.cxx||main/connectivity/source/drivers/dbase/DTable.cxx": [
      "File: main/connectivity/source/drivers/dbase/DTable.cxx -> main/connectivity/source/drivers/dbase/DTable.cxx",
      "--- Hunk 1 ---",
      "[Context before]",
      "896:         else if ( DataType::TIMESTAMP == nType )",
      "897:         {",
      "898:             sal_Int32 nDate = 0,nTime = 0;",
      "899:    memcpy(&nDate, pData, 4);",
      "900:             memcpy(&nTime, pData+ 4, 4);",
      "901:             if ( !nDate && !nTime )",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "899:             OSL_ENSURE(nLen == 8, \"Invalid length for date field\");",
      "900:             if (nLen != 8) {",
      "901:                 return false;",
      "902:             }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "911:         }",
      "912:         else if ( DataType::INTEGER == nType )",
      "913:         {",
      "914:             sal_Int32 nValue = 0;",
      "915:    memcpy(&nValue, pData, nLen);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "918:             OSL_ENSURE(nLen == 4, \"Invalid length for integer field\");",
      "919:             if (nLen != 4) {",
      "920:                 return false;",
      "921:             }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "918:         else if ( DataType::DOUBLE == nType )",
      "919:         {",
      "920:             double d = 0.0;",
      "921:             if (getBOOL((*aIter)->getPropertyValue(OMetaConnection::getPropMap().getNameByIndex(PROPERTY_ID_ISCURRENCY)))) // Currency wird gesondert behandelt",
      "922:             {",
      "923:                 sal_Int64 nValue = 0;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "929:             OSL_ENSURE(nLen == 8, \"Invalid length for double field\");",
      "930:             if (nLen != 8) {",
      "931:                 return false;",
      "932:             }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "959:    {",
      "960:     case DataType::DATE:",
      "961:     {",
      "962:      if (aStr.Len() != nLen)",
      "963:      {",
      "964:       (_rRow->get())[i]->setNull();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "974:                     OSL_ENSURE(nLen == 8, \"Invalid length for date field\");",
      "975:                     if (nLen != 8) {",
      "976:                         return false;",
      "977:                     }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "978:     break;",
      "979:     case DataType::BIT:",
      "980:     {",
      "981:      sal_Bool b;",
      "982:      switch (* ((const char *)pData))",
      "983:      {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "997:                     OSL_ENSURE(nLen == 1, \"Invalid length for bit field\");",
      "998:                     if (nLen != 1) {",
      "999:                         return false;",
      "1000:                     }",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1873:    {",
      "1874:                 case DataType::TIMESTAMP:",
      "1875:                     {",
      "1876:                         sal_Int32 nJulianDate = 0, nJulianTime = 0;",
      "1877:                         lcl_CalcJulDate(nJulianDate,nJulianTime,rRow.get()[nPos]->getValue());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1896:                         OSL_ENSURE(nLen == 8, \"Invalid length for timestamp field\");",
      "1897:                         if (nLen != 8) {",
      "1898:                             bHadError = true;",
      "1899:                             break;",
      "1900:                         }",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1882:                     break;",
      "1883:     case DataType::DATE:",
      "1884:     {",
      "1885:      ::com::sun::star::util::Date aDate;",
      "1886:      if(rRow.get()[nPos]->getValue().getTypeKind() == DataType::DOUBLE)",
      "1887:       aDate = ::dbtools::DBTypeConversion::toDate(rRow.get()[nPos]->getValue().getDouble());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1910:                     OSL_ENSURE(nLen == 8, \"Invalid length for date field\");",
      "1911:                     if (nLen != 8) {",
      "1912:                         bHadError = true;",
      "1913:                         break;",
      "1914:                     }",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1900:     } break;",
      "1901:                 case DataType::INTEGER:",
      "1902:                     {",
      "1903:                         sal_Int32 nValue = rRow.get()[nPos]->getValue();",
      "1904:                         memcpy(pData,&nValue,nLen);",
      "1905:                     }",
      "1906:                     break;",
      "1907:                 case DataType::DOUBLE:",
      "1908:                     {",
      "1909:                         const double d = rRow.get()[nPos]->getValue();",
      "1910:                         m_pColumns->getByIndex(i) >>= xCol;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1933:                         OSL_ENSURE(nLen == 4, \"Invalid length for integer field\");",
      "1934:                         if (nLen != 4) {",
      "1935:                             bHadError = true;",
      "1936:                             break;",
      "1937:                         }",
      "1944:                         OSL_ENSURE(nLen == 8, \"Invalid length for double field\");",
      "1945:                         if (nLen != 8) {",
      "1946:                             bHadError = true;",
      "1947:                             break;",
      "1948:                         }",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1958:      }",
      "1959:     } break;",
      "1960:     case DataType::BIT:",
      "1962:      break;",
      "1963:                 case DataType::LONGVARBINARY:",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2001:                     OSL_ENSURE(nLen == 1, \"Invalid length for bit field\");",
      "2002:                     if (nLen != 1) {",
      "2003:                         bHadError = true;",
      "2004:                         break;",
      "2005:                     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cf2047b48da09145d9aec329d02ddae268cb5ffb",
      "candidate_info": {
        "commit_hash": "cf2047b48da09145d9aec329d02ddae268cb5ffb",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/cf2047b48da09145d9aec329d02ddae268cb5ffb",
        "files": [
          "main/sw/source/core/layout/paintfrm.cxx"
        ],
        "message": "Code cleanup for removing Writer page shadows",
        "before_after_code_files": [
          "main/sw/source/core/layout/paintfrm.cxx||main/sw/source/core/layout/paintfrm.cxx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/sw/source/core/layout/paintfrm.cxx||main/sw/source/core/layout/paintfrm.cxx": [
          "File: main/sw/source/core/layout/paintfrm.cxx -> main/sw/source/core/layout/paintfrm.cxx",
          "--- Hunk 1 ---",
          "[Context before]",
          "2860:     while ( pPage )",
          "2861:     {",
          "2863:         const bool bRightSidebar = pPage->SidebarPosition() == sw::sidebarwindows::SIDEBAR_RIGHT;",
          "2865:         if ( !pPage->IsEmptyPage() )",
          "",
          "[Removed Lines]",
          "2862:         const bool bPaintRightShadow =  !bBookMode || (pPage == Lower()) || (!bLTR && !pPage->OnRightPage()) || (bLTR && pPage->OnRightPage());",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "66241dbed974f22081b10fd468badafeaba34738",
      "candidate_info": {
        "commit_hash": "66241dbed974f22081b10fd468badafeaba34738",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/66241dbed974f22081b10fd468badafeaba34738",
        "files": [
          "main/vcl/source/window/toolbox.cxx"
        ],
        "message": "Make grip in toolbar more visible\n\n(cherry picked from commit 8c545591f1b0cc92a02675eca44ae8ad466cc90a)",
        "before_after_code_files": [
          "main/vcl/source/window/toolbox.cxx||main/vcl/source/window/toolbox.cxx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/vcl/source/window/toolbox.cxx||main/vcl/source/window/toolbox.cxx": [
          "File: main/vcl/source/window/toolbox.cxx -> main/vcl/source/window/toolbox.cxx",
          "--- Hunk 1 ---",
          "[Context before]",
          "229:     ToolBoxItemBits nBits( pItem->mnBits & 0x300 );",
          "230:     if ( nBits & TIB_TEXTICON ) // item has custom setting",
          "231:     {",
          "233:         if ( nBits == TIB_TEXT_ONLY )",
          "235:         else if ( nBits == TIB_ICON_ONLY )",
          "237:     }",
          "238:     return tmpButtonType;",
          "239: }",
          "",
          "[Removed Lines]",
          "232:         tmpButtonType = BUTTON_SYMBOLTEXT;",
          "234:             tmpButtonType = BUTTON_TEXT;",
          "236:             tmpButtonType = BUTTON_SYMBOL;",
          "",
          "[Added Lines]",
          "232:         tmpButtonType = BUTTON_SYMBOLTEXT;",
          "234:             tmpButtonType = BUTTON_TEXT;",
          "236:             tmpButtonType = BUTTON_SYMBOL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "340:             Rectangle           aCtrlRegion( aPt, pThis->GetOutputSizePixel() );",
          "341:             ControlState        nState = CTRL_STATE_ENABLED;",
          "344:                                             aCtrlRegion, nState, aToolbarValue, rtl::OUString() );",
          "345:         }",
          "",
          "[Removed Lines]",
          "343:             bNativeOk = pThis->DrawNativeControl( CTRL_TOOLBAR, pThis->mbHorz ? PART_THUMB_VERT : PART_THUMB_HORZ,",
          "",
          "[Added Lines]",
          "343:             bNativeOk = pThis->DrawNativeControl( CTRL_TOOLBAR, pThis->mbHorz ? PART_THUMB_VERT : PART_THUMB_HORZ,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "362:                 int x = ImplGetDragWidth( pThis ) / 2;",
          "364:                 pThis->DrawPixel( Point(x, i), rStyleSettings.GetDarkShadowColor() );",
          "367:                 pThis->DrawPixel( Point(x, i+1), rStyleSettings.GetShadowColor() );",
          "373:                 i+=4;",
          "374:             }",
          "375:         }",
          "",
          "[Removed Lines]",
          "365:                 pThis->DrawPixel( Point(x+1, i), rStyleSettings.GetShadowColor() );",
          "368:                 pThis->DrawPixel( Point(x+1, i+1), rStyleSettings.GetFaceColor() );",
          "369:                 pThis->DrawPixel( Point(x+2, i+1), Color(COL_WHITE) );",
          "371:                 pThis->DrawPixel( Point(x+1, i+2), Color(COL_WHITE) );",
          "372:                 pThis->DrawPixel( Point(x+2, i+2), Color(COL_WHITE) );",
          "",
          "[Added Lines]",
          "365:                 pThis->DrawPixel( Point(x+1, i), rStyleSettings.GetDarkShadowColor() );",
          "368:                 pThis->DrawPixel( Point(x+1, i+1), rStyleSettings.GetShadowColor() );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "383:                 int y = ImplGetDragWidth(pThis) / 2;",
          "385:                 pThis->DrawPixel( Point(i, y), rStyleSettings.GetDarkShadowColor() );",
          "388:                 pThis->DrawPixel( Point(i, y+1), rStyleSettings.GetShadowColor() );",
          "394:                 i+=4;",
          "395:             }",
          "396:         }",
          "",
          "[Removed Lines]",
          "386:                 pThis->DrawPixel( Point(i+1, y), rStyleSettings.GetShadowColor() );",
          "389:                 pThis->DrawPixel( Point(i+1, y+1), rStyleSettings.GetFaceColor() );",
          "390:                 pThis->DrawPixel( Point(i+2, y+1), Color(COL_WHITE) );",
          "392:                 pThis->DrawPixel( Point(i+1, y+2), Color(COL_WHITE) );",
          "393:                 pThis->DrawPixel( Point(i+2, y+2), Color(COL_WHITE) );",
          "",
          "[Added Lines]",
          "382:                 pThis->DrawPixel( Point(i+1, y), rStyleSettings.GetDarkShadowColor() );",
          "385:                 pThis->DrawPixel( Point(i+1, y+1), rStyleSettings.GetShadowColor() );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "554:     Rectangle aCtrlRegion( aPt, pThis->GetOutputSizePixel() );",
          "555:     ControlState  nState = CTRL_STATE_ENABLED;",
          "558:                                     aCtrlRegion, nState, ImplControlValue(), rtl::OUString() );",
          "559: }",
          "",
          "[Removed Lines]",
          "557:     return pThis->DrawNativeControl( CTRL_TOOLBAR, pThis->mbHorz ? PART_DRAW_BACKGROUND_HORZ : PART_DRAW_BACKGROUND_VERT,",
          "",
          "[Added Lines]",
          "549:     return pThis->DrawNativeControl( CTRL_TOOLBAR, pThis->mbHorz ? PART_DRAW_BACKGROUND_HORZ : PART_DRAW_BACKGROUND_VERT,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "566:  pThis->mpData->mbIsPaintLocked = true;",
          "571:  pThis->mpData->mbIsPaintLocked = bOldPaintLock;",
          "572: }",
          "",
          "[Removed Lines]",
          "569:  pThis->Invalidate( rRegion, INVALIDATE_UPDATE|INVALIDATE_NOCLIPCHILDREN );",
          "",
          "[Added Lines]",
          "561:  pThis->Invalidate( rRegion, INVALIDATE_UPDATE|INVALIDATE_NOCLIPCHILDREN );",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "580:     else",
          "581:     {",
          "584:             Wallpaper( pThis->GetSettings().GetStyleSettings().GetFaceGradientColor() ) );",
          "585:     }",
          "586: }",
          "",
          "[Removed Lines]",
          "583:      pThis->DrawWallpaper( rRegion.GetBoundRect(),",
          "",
          "[Added Lines]",
          "575:      pThis->DrawWallpaper( rRegion.GetBoundRect(),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "646:         (bHighlight || ! (((Window*) pThis)->GetStyle() & WB_3DLOOK ) ) )",
          "647:     {",
          "648:         if( (((Window*) pThis)->GetStyle() & WB_3DLOOK ) )",
          "",
          "[Removed Lines]",
          "645:     if( !pThis->mpData->mbNativeButtons &&",
          "",
          "[Added Lines]",
          "637:     if( !pThis->mpData->mbNativeButtons &&",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1976:             if( aRect.GetHeight() > mnWinHeight )",
          "1977:                 mnWinHeight = aRect.GetHeight();",
          "1978:         }",
          "1981:     if ( ! mpData->m_aItems.empty() )",
          "1983:         std::vector< ImplToolItem >::iterator it = mpData->m_aItems.begin();",
          "1984:         while ( it != mpData->m_aItems.end() )",
          "1985:         {",
          "",
          "[Removed Lines]",
          "1979:     }",
          "1982:     {",
          "",
          "[Added Lines]",
          "1971:     }",
          "1974:     {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1999:                     bText = sal_False;",
          "2000:                 else",
          "2001:                     bText = sal_True;",
          "2003:                 if ( bImage || bText )",
          "2004:                 {",
          "",
          "[Removed Lines]",
          "2002:                 ButtonType tmpButtonType = determineButtonType( &(*it), meButtonType ); // default to toolbox setting",
          "",
          "[Added Lines]",
          "1994:                 ButtonType tmpButtonType = determineButtonType( &(*it), meButtonType ); // default to toolbox setting",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "3421:         aControlValue.setTristateVal( bChecked ? BUTTONVALUE_ON : BUTTONVALUE_OFF );",
          "3425:                                               rRect, nState, aControlValue, rtl::OUString() );",
          "3426:     }",
          "",
          "[Removed Lines]",
          "3424:         bNativeOk = pThis->DrawNativeControl( CTRL_TOOLBAR, PART_BUTTON,",
          "",
          "[Added Lines]",
          "3416:         bNativeOk = pThis->DrawNativeControl( CTRL_TOOLBAR, PART_BUTTON,",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "3635:     sal_Bool bImage;",
          "3636:     sal_Bool bText;",
          "3638:     pItem->DetermineButtonDrawStyle( tmpButtonType, bImage, bText );",
          "",
          "[Removed Lines]",
          "3637:     ButtonType tmpButtonType = determineButtonType( pItem, meButtonType ); // default to toolbox setting",
          "",
          "[Added Lines]",
          "3629:     ButtonType tmpButtonType = determineButtonType( pItem, meButtonType ); // default to toolbox setting",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "3686:             nImageOffX += (nBtnWidth-aImageSize.Width())/2;",
          "3687:             nImageOffY += (nBtnHeight-aImageSize.Height())/2;",
          "3688:         }",
          "3690:         {",
          "3691:             if( bHasOpenPopup )",
          "3692:                 ImplDrawFloatwinBorder( pItem );",
          "",
          "[Removed Lines]",
          "3689:         if ( bHighlight || (pItem->meState == STATE_CHECK) )",
          "",
          "[Added Lines]",
          "3681:         if ( bHighlight || (pItem->meState == STATE_CHECK) )",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "3963:                 mnCurLine = mnCurLine - delta;",
          "3964:             else",
          "3965:                 mnCurLine = 1;",
          "3967:     }",
          "3968:     else",
          "3969:     {",
          "",
          "[Removed Lines]",
          "3966:         }",
          "",
          "[Added Lines]",
          "3958:         }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "4756: void ToolBox::Resize()",
          "4758:     Size aSize = GetOutputSizePixel();",
          "",
          "[Removed Lines]",
          "4757: {",
          "",
          "[Added Lines]",
          "4749: {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0b1abbba711a4da7532882c05aad541936466960",
      "candidate_info": {
        "commit_hash": "0b1abbba711a4da7532882c05aad541936466960",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/0b1abbba711a4da7532882c05aad541936466960",
        "files": [
          "main/crashrep/source/win32/soreport.cpp"
        ],
        "message": "Cleanup",
        "before_after_code_files": [
          "main/crashrep/source/win32/soreport.cpp||main/crashrep/source/win32/soreport.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/crashrep/source/win32/soreport.cpp||main/crashrep/source/win32/soreport.cpp": [
          "File: main/crashrep/source/win32/soreport.cpp -> main/crashrep/source/win32/soreport.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: #if defined _MSC_VER",
          "48: #pragma warning(pop)",
          "51: #if _RICHEDIT_VER >= 0x0200",
          "52: #define RICHEDIT TEXT(\"riched20.dll\")",
          "",
          "[Removed Lines]",
          "49: #endif",
          "",
          "[Added Lines]",
          "49: #endif",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94: using namespace ::std;",
          "99: FILE *g_fpStackFile = NULL;",
          "100: FILE *g_fpChecksumFile = NULL;",
          "101: DWORD g_dwExceptionCode = 0;",
          "",
          "[Removed Lines]",
          "97: wstring  g_wstrProductKey;",
          "98: string  g_strDefaultLanguage;",
          "",
          "[Added Lines]",
          "97: wstring g_wstrProductKey;",
          "98: string g_strDefaultLanguage;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "157:   if ( GetTempFileName( szTempPath, TEXT(\"CRT\"), 0, szFileName ) )",
          "158:   {",
          "165:     NULL );",
          "167:    if ( IsValidHandle( hFile ) )",
          "",
          "[Removed Lines]",
          "159:    HANDLE hFile =  CreateFile(",
          "160:     szFileName,",
          "161:     GENERIC_READ | GENERIC_WRITE,",
          "162:     0, NULL,",
          "163:     OPEN_EXISTING,",
          "164:     FILE_FLAG_DELETE_ON_CLOSE | FILE_ATTRIBUTE_NORMAL,",
          "",
          "[Added Lines]",
          "159:    HANDLE hFile =  CreateFile(",
          "160:     szFileName,",
          "161:     GENERIC_READ | GENERIC_WRITE,",
          "162:     0, NULL,",
          "163:     OPEN_EXISTING,",
          "164:     FILE_FLAG_DELETE_ON_CLOSE | FILE_ATTRIBUTE_NORMAL,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "208: static FILE *_open_reportfile( LPCTSTR lpExt, LPCTSTR lpMode )",
          "209: {",
          "210:  FILE *fp = NULL;",
          "213:  if ( GetCrashDataPath( szAppDataPath ) )",
          "214:  {",
          "",
          "[Removed Lines]",
          "211:  TCHAR szAppDataPath[MAX_PATH] = _T(\"\");",
          "",
          "[Added Lines]",
          "211:  TCHAR szAppDataPath[MAX_PATH] = _T(\"\");",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "298: {",
          "299:  TCHAR szBuffer[2048];",
          "304:   TEXT(\"HTTPProxyServer\"),",
          "305:   szBuffer,",
          "306:   sizeof(szBuffer) ) )",
          "",
          "[Removed Lines]",
          "301:  if ( ERROR_SUCCESS == RegReadValue(",
          "302:   HKEY_CURRENT_USER,",
          "303:   TEXT(\"SOFTWARE\\\\OpenOffice.org\\\\CrashReport\"),",
          "",
          "[Added Lines]",
          "301:  if ( ERROR_SUCCESS == RegReadValue(",
          "302:   HKEY_CURRENT_USER,",
          "303:   TEXT(\"SOFTWARE\\\\OpenOffice\\\\CrashReport\"),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "309:  DWORD dwProxyPort;",
          "314:   TEXT(\"HTTPProxyPort\"),",
          "315:   &dwProxyPort,",
          "316:   sizeof(dwProxyPort) ) )",
          "",
          "[Removed Lines]",
          "311:  if ( ERROR_SUCCESS == RegReadValue(",
          "312:   HKEY_CURRENT_USER,",
          "313:   TEXT(\"SOFTWARE\\\\OpenOffice.org\\\\CrashReport\"),",
          "",
          "[Added Lines]",
          "311:  if ( ERROR_SUCCESS == RegReadValue(",
          "312:   HKEY_CURRENT_USER,",
          "313:   TEXT(\"SOFTWARE\\\\OpenOffice\\\\CrashReport\"),",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "319:   sProxyPort = szBuffer;",
          "320:  }",
          "325:   TEXT(\"ReturnAddress\"),",
          "326:   szBuffer,",
          "327:   sizeof(szBuffer) ) )",
          "328:   sEmail = szBuffer;",
          "333:   TEXT(\"AllowContact\"),",
          "334:   &fAllowContact,",
          "335:   sizeof(fAllowContact) );",
          "340:   TEXT(\"HTTPConnection\"),",
          "341:   &uInternetConnection,",
          "342:   sizeof(uInternetConnection) );",
          "",
          "[Removed Lines]",
          "322:  if ( ERROR_SUCCESS == RegReadValue(",
          "323:   HKEY_CURRENT_USER,",
          "324:   TEXT(\"SOFTWARE\\\\OpenOffice.org\\\\CrashReport\"),",
          "330:  RegReadValue(",
          "331:   HKEY_CURRENT_USER,",
          "332:   TEXT(\"SOFTWARE\\\\OpenOffice.org\\\\CrashReport\"),",
          "337:  RegReadValue(",
          "338:   HKEY_CURRENT_USER,",
          "339:   TEXT(\"SOFTWARE\\\\OpenOffice.org\\\\CrashReport\"),",
          "",
          "[Added Lines]",
          "322:  if ( ERROR_SUCCESS == RegReadValue(",
          "323:   HKEY_CURRENT_USER,",
          "324:   TEXT(\"SOFTWARE\\\\OpenOffice\\\\CrashReport\"),",
          "330:  RegReadValue(",
          "331:   HKEY_CURRENT_USER,",
          "332:   TEXT(\"SOFTWARE\\\\OpenOffice\\\\CrashReport\"),",
          "337:  RegReadValue(",
          "338:   HKEY_CURRENT_USER,",
          "339:   TEXT(\"SOFTWARE\\\\OpenOffice\\\\CrashReport\"),",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "347: void CrashReportParams::WriteToRegistry()",
          "348: {",
          "354:   sizeof(TCHAR) * (sProxyServer.length() + 1) );",
          "356:  LPTSTR endptr = NULL;",
          "357:  DWORD dwProxyPort = _tcstoul( sProxyPort.c_str(), &endptr, 10 );",
          "364:   sizeof(DWORD) );",
          "371:   sizeof(DWORD) );",
          "379:   sizeof(DWORD) );",
          "386:   sizeof(TCHAR) * (sEmail.length() + 1) );",
          "387: }",
          "",
          "[Removed Lines]",
          "349:  RegWriteValue(",
          "350:   HKEY_CURRENT_USER,",
          "351:   TEXT(\"SOFTWARE\\\\OpenOffice.org\\\\CrashReport\"),",
          "352:   TEXT(\"HTTPProxyServer\"), REG_SZ,",
          "353:   sProxyServer.c_str(),",
          "359:  RegWriteValue(",
          "360:   HKEY_CURRENT_USER,",
          "361:   TEXT(\"SOFTWARE\\\\OpenOffice.org\\\\CrashReport\"),",
          "362:   TEXT(\"HTTPProxyPort\"), REG_DWORD,",
          "363:   &dwProxyPort,",
          "366:  RegWriteValue(",
          "367:   HKEY_CURRENT_USER,",
          "368:   TEXT(\"SOFTWARE\\\\OpenOffice.org\\\\CrashReport\"),",
          "369:   TEXT(\"AllowContact\"), REG_DWORD,",
          "370:   &fAllowContact,",
          "374:  RegWriteValue(",
          "375:   HKEY_CURRENT_USER,",
          "376:   TEXT(\"SOFTWARE\\\\OpenOffice.org\\\\CrashReport\"),",
          "377:   TEXT(\"HTTPConnection\"), REG_DWORD,",
          "378:   &uInternetConnection,",
          "381:  RegWriteValue(",
          "382:   HKEY_CURRENT_USER,",
          "383:   TEXT(\"SOFTWARE\\\\OpenOffice.org\\\\CrashReport\"),",
          "384:   TEXT(\"ReturnAddress\"), REG_SZ,",
          "385:   sEmail.c_str(),",
          "",
          "[Added Lines]",
          "349:  RegWriteValue(",
          "350:   HKEY_CURRENT_USER,",
          "351:   TEXT(\"SOFTWARE\\\\OpenOffice\\\\CrashReport\"),",
          "352:   TEXT(\"HTTPProxyServer\"), REG_SZ,",
          "353:   sProxyServer.c_str(),",
          "359:  RegWriteValue(",
          "360:   HKEY_CURRENT_USER,",
          "361:   TEXT(\"SOFTWARE\\\\OpenOffice\\\\CrashReport\"),",
          "362:   TEXT(\"HTTPProxyPort\"), REG_DWORD,",
          "363:   &dwProxyPort,",
          "366:  RegWriteValue(",
          "367:   HKEY_CURRENT_USER,",
          "368:   TEXT(\"SOFTWARE\\\\OpenOffice\\\\CrashReport\"),",
          "369:   TEXT(\"AllowContact\"), REG_DWORD,",
          "370:   &fAllowContact,",
          "374:  RegWriteValue(",
          "375:   HKEY_CURRENT_USER,",
          "376:   TEXT(\"SOFTWARE\\\\OpenOffice\\\\CrashReport\"),",
          "377:   TEXT(\"HTTPConnection\"), REG_DWORD,",
          "378:   &uInternetConnection,",
          "381:  RegWriteValue(",
          "382:   HKEY_CURRENT_USER,",
          "383:   TEXT(\"SOFTWARE\\\\OpenOffice\\\\CrashReport\"),",
          "384:   TEXT(\"ReturnAddress\"), REG_SZ,",
          "385:   sEmail.c_str(),",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "445:    {",
          "446:     TCHAR aBuffer[256+1];",
          "449:     aBuffer[dwCharacters] = 0;",
          "450:     sComment += aBuffer;",
          "451:    }",
          "453:    fclose( fp );",
          "454:   }",
          "455:  }",
          "",
          "[Removed Lines]",
          "448:     DWORD dwCharacters = MultiByteToWideChar( CP_UTF8, 0, aUTF8Buffer, nBytesRead, aBuffer, elementsof(aBuffer) - 1 );",
          "",
          "[Added Lines]",
          "448:     DWORD dwCharacters = MultiByteToWideChar( CP_UTF8, 0, aUTF8Buffer, nBytesRead, aBuffer, elementsof(aBuffer) - 1 );",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "460: typedef BOOL (WINAPI *MiniDumpWriteDump_PROC)(",
          "",
          "[Removed Lines]",
          "461:     IN HANDLE hProcess,",
          "462:     IN DWORD ProcessId,",
          "463:     IN HANDLE hFile,",
          "464:     IN MINIDUMP_TYPE DumpType,",
          "465:     IN CONST PMINIDUMP_EXCEPTION_INFORMATION ExceptionParam, OPTIONAL",
          "466:     IN CONST PMINIDUMP_USER_STREAM_INFORMATION UserStreamParam, OPTIONAL",
          "467:     IN CONST PMINIDUMP_CALLBACK_INFORMATION CallbackParam OPTIONAL",
          "468:     );",
          "",
          "[Added Lines]",
          "461:  IN HANDLE hProcess,",
          "462:  IN DWORD ProcessId,",
          "463:  IN HANDLE hFile,",
          "464:  IN MINIDUMP_TYPE DumpType,",
          "465:  IN CONST PMINIDUMP_EXCEPTION_INFORMATION ExceptionParam, OPTIONAL",
          "466:  IN CONST PMINIDUMP_USER_STREAM_INFORMATION UserStreamParam, OPTIONAL",
          "467:  IN CONST PMINIDUMP_CALLBACK_INFORMATION CallbackParam OPTIONAL",
          "468:  );",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "563: static string xml_encode( const string &rString )",
          "564: {",
          "565:  string temp = rString;",
          "574:  for( pos = 0; (pos = temp.find( '<', pos )) != string::npos; pos += 4 )",
          "580:  return temp;",
          "581: }",
          "",
          "[Removed Lines]",
          "566:     string::size_type pos = 0;",
          "571:     for( pos = 0; (pos = temp.find( '&', pos )) != string::npos; pos += 4 )",
          "572:         temp.replace( pos, 1, \"&amp;\" );",
          "575:         temp.replace( pos, 1, \"&lt;\" );",
          "577:     for( pos = 0; (pos = temp.find( '>', pos )) != string::npos; pos += 4 )",
          "578:         temp.replace( pos, 1, \"&gt;\" );",
          "",
          "[Added Lines]",
          "566:  string::size_type pos = 0;",
          "571:  for( pos = 0; (pos = temp.find( '&', pos )) != string::npos; pos += 4 )",
          "572:   temp.replace( pos, 1, \"&amp;\" );",
          "575:   temp.replace( pos, 1, \"&lt;\" );",
          "577:  for( pos = 0; (pos = temp.find( '>', pos )) != string::npos; pos += 4 )",
          "578:   temp.replace( pos, 1, \"&gt;\" );",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "626: string GetFileDirectory( const string& rFilePath )",
          "627: {",
          "628:  string aDir = rFilePath;",
          "631:  if ( string::npos != pos )",
          "632:   aDir.erase( pos + 1 );",
          "",
          "[Removed Lines]",
          "629:     size_t pos = aDir.rfind( '\\\\' );",
          "",
          "[Added Lines]",
          "629:  size_t pos = aDir.rfind( '\\\\' );",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "641: string GetFileName( const string& rFilePath )",
          "642: {",
          "643:  string aName = rFilePath;",
          "646:  if ( string::npos != pos )",
          "647:   return aName.substr( pos + 1 );",
          "648:  else",
          "",
          "[Removed Lines]",
          "644:     size_t pos = aName.rfind( '\\\\' );",
          "",
          "[Added Lines]",
          "644:  size_t pos = aName.rfind( '\\\\' );",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "667:    if ( hFile )",
          "668:    {",
          "670:     FILE *fp = _fdopen( fd, \"w+t\" );",
          "671:     CHAR szTitle[1024] = \"\";",
          "672:     CHAR szBuildId[1024] = \"\";",
          "",
          "[Removed Lines]",
          "669:     int fd = _open_osfhandle( (LONG)hFile, _O_TEXT );",
          "",
          "[Added Lines]",
          "669:     int fd = _open_osfhandle( (LONG)hFile, _O_TEXT );",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "676:     WideCharToMultiByte( CP_UTF8, 0, pParams->sTitle.c_str(), -1, szTitle, sizeof(szTitle), NULL, NULL );",
          "677:     WideCharToMultiByte( CP_UTF8, 0, g_szBuildId, -1, szBuildId, sizeof(szBuildId), NULL, NULL );",
          "678:     WideCharToMultiByte( CP_UTF8, 0, pParams->sEmail.c_str(), -1, szEmail, sizeof(szEmail), NULL, NULL );",
          "681:      \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\"",
          "682:      \"<!DOCTYPE errormail:errormail PUBLIC \\\"-//OpenOffice.org//DTD ErrorMail 1.0//EN\\\" \\\"errormail.dtd\\\">\\n\"",
          "683:      \"<errormail:errormail xmlns:errormail=\\\"http://openoffice.org/2002/errormail\\\" usertype=\\\"%s\\\">\\n\"",
          "",
          "[Removed Lines]",
          "680:     fprintf( fp,",
          "",
          "[Added Lines]",
          "680:     fprintf( fp,",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "696:      \"<reportmail:attachment name=\\\"user.dmp\\\" media-type=\\\"application/octet-stream\\\" class=\\\"UserDump\\\"/>\\n\"",
          "697:      \"</reportmail:mail>\\n\"",
          "700:      szBuildId,",
          "701:      _INPATH,",
          "702:      xml_encode(g_strDefaultLanguage).c_str(),",
          "",
          "[Removed Lines]",
          "699:      \"<officeinfo:officeinfo xmlns:officeinfo=\\\"http://openoffice.org/2002/officeinfo\\\" build=\\\"%s\\\" platform=\\\"%s\\\" language=\\\"%s\\\" procpath=\\\"%s\\\" exceptiontype=\\\"0x%08X\\\" product=\\\"%s\\\"/>\\n\",",
          "",
          "[Added Lines]",
          "699:      \"<officeinfo:officeinfo xmlns:officeinfo=\\\"http://openoffice.org/2002/officeinfo\\\" build=\\\"%s\\\" platform=\\\"%s\\\" language=\\\"%s\\\" procpath=\\\"%s\\\" exceptiontype=\\\"0x%08X\\\" product=\\\"%s\\\"/>\\n\",",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "824: }",
          "826: BOOL CALLBACK GrowChildWindows(",
          "829: )",
          "830: {",
          "831:  LONG cx = (SHORT)LOWORD( lParam );",
          "",
          "[Removed Lines]",
          "827:   HWND hwnd,      // handle to child window",
          "828:   LPARAM lParam   // application-defined value",
          "",
          "[Added Lines]",
          "827:  HWND hwnd, // handle to child window",
          "828:  LPARAM lParam // application-defined value",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "837: }",
          "841: {",
          "847: }",
          "849: void ApplySystemFont( HWND hwndDlg )",
          "850: {",
          "858: }",
          "866:  )",
          "867: {",
          "868:  static RECT rcClient;",
          "",
          "[Removed Lines]",
          "840: BOOL CALLBACK EnumChildProc(HWND hwndChild, LPARAM lParam)",
          "842:     HFONT aFont = *((HFONT*) lParam);",
          "843:     HDC hDC = GetDC( hwndChild );",
          "844:     SelectObject( hDC, aFont );",
          "845:     ReleaseDC( hwndChild, hDC );",
          "846:     return TRUE;",
          "851:     NONCLIENTMETRICSA aNonClientMetrics;",
          "852:     aNonClientMetrics.cbSize = sizeof( aNonClientMetrics );",
          "853:     if ( SystemParametersInfoA( SPI_GETNONCLIENTMETRICS, sizeof( aNonClientMetrics ), &aNonClientMetrics, 0 ) )",
          "854:     {",
          "855:         HFONT aSysFont = CreateFontIndirectA( &aNonClientMetrics.lfMessageFont );",
          "856:         EnumChildWindows(hwndDlg, EnumChildProc, (LPARAM) &aSysFont);",
          "857:     }",
          "861: BOOL CALLBACK PreviewDialogProc(",
          "862:  HWND hwndDlg,",
          "863:  UINT uMsg,",
          "864:  WPARAM wParam,",
          "865:  LPARAM lParam",
          "",
          "[Added Lines]",
          "840: BOOL CALLBACK EnumChildProc(HWND hwndChild, LPARAM lParam)",
          "842:  HFONT aFont = *((HFONT*) lParam);",
          "843:  HDC hDC = GetDC( hwndChild );",
          "844:  SelectObject( hDC, aFont );",
          "845:  ReleaseDC( hwndChild, hDC );",
          "846:  return TRUE;",
          "851:  NONCLIENTMETRICSA aNonClientMetrics;",
          "852:  aNonClientMetrics.cbSize = sizeof( aNonClientMetrics );",
          "853:  if ( SystemParametersInfoA( SPI_GETNONCLIENTMETRICS, sizeof( aNonClientMetrics ), &aNonClientMetrics, 0 ) )",
          "854:  {",
          "855:   HFONT aSysFont = CreateFontIndirectA( &aNonClientMetrics.lfMessageFont );",
          "856:   EnumChildWindows(hwndDlg, EnumChildProc, (LPARAM) &aSysFont);",
          "857:  }",
          "861: BOOL CALLBACK PreviewDialogProc(",
          "862:  HWND hwndDlg,",
          "863:  UINT uMsg,",
          "864:  WPARAM wParam,",
          "865:  LPARAM lParam",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1002:  WriteReportFile( pParams );",
          "1006:   MAKEINTRESOURCE(IDD_PREVIEW_FRAME),",
          "1007:   hwndParent,",
          "1008:   PreviewDialogProc,",
          "",
          "[Removed Lines]",
          "1004:  DialogBoxParam(",
          "1005:   hInstance,",
          "",
          "[Added Lines]",
          "1004:  DialogBoxParam(",
          "1005:   hInstance,",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1036:  )",
          "1037: {",
          "1038:  static CrashReportParams *pParams;",
          "",
          "[Removed Lines]",
          "1031: BOOL CALLBACK OptionsDialogProc(",
          "1032:  HWND hwndDlg,",
          "1033:  UINT uMsg,",
          "1034:  WPARAM wParam,",
          "1035:  LPARAM lParam",
          "",
          "[Added Lines]",
          "1031: BOOL CALLBACK OptionsDialogProc(",
          "1032:  HWND hwndDlg,",
          "1033:  UINT uMsg,",
          "1034:  WPARAM wParam,",
          "1035:  LPARAM lParam",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1080:    Button_SetCheck( GetDlgItem(hwndDlg, IDC_RADIO_SYSTEM + pParams->uInternetConnection), BST_CHECKED );",
          "1086:     GetSysColor( COLOR_3DFACE ) );",
          "1087:    LoadAndFormatString( hInstance, IDS_PROXY_DESCRIPTION, szBuffer, elementsof(szBuffer) );",
          "1088:    Edit_SetText( GetDlgItem(hwndDlg, IDC_PROXY_DESCRIPTION), szBuffer );",
          "",
          "[Removed Lines]",
          "1082:    SendMessage(",
          "1083:     GetDlgItem(hwndDlg, IDC_PROXY_DESCRIPTION),",
          "1084:     EM_SETBKGNDCOLOR,",
          "1085:     (WPARAM)FALSE,",
          "",
          "[Added Lines]",
          "1082:    SendMessage(",
          "1083:     GetDlgItem(hwndDlg, IDC_PROXY_DESCRIPTION),",
          "1084:     EM_SETBKGNDCOLOR,",
          "1085:     (WPARAM)FALSE,",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1134: {",
          "1135:  HINSTANCE hInstance = (HINSTANCE)GetWindowLong(hwndParent, GWL_HINSTANCE );",
          "1139:   MAKEINTRESOURCE(IDD_OPTIONS_FRAME),",
          "1140:   hwndParent,",
          "1141:   OptionsDialogProc,",
          "",
          "[Removed Lines]",
          "1137:  if ( IDOK == DialogBoxParam(",
          "1138:   hInstance,",
          "",
          "[Added Lines]",
          "1137:  if ( IDOK == DialogBoxParam(",
          "1138:   hInstance,",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1149: void UpdateReportDialogControls( HWND hwndDlg )",
          "1150: {",
          "1153:   Button_GetCheck(GetDlgItem(hwndDlg, IDC_ALLOW_CONTACT)) & BST_CHECKED ? TRUE : FALSE );",
          "1156:   Button_GetCheck(GetDlgItem(hwndDlg, IDC_ALLOW_CONTACT)) & BST_CHECKED ? TRUE : FALSE );",
          "1157: }",
          "1166:  )",
          "1167: {",
          "1168:  switch ( uMsg )",
          "1169:  {",
          "1170:  case WM_INITDIALOG:",
          "1171:   {",
          "1173:    HINSTANCE hInstance = (HINSTANCE)GetWindowLong(hwndDlg, GWL_HINSTANCE );",
          "1174:    TCHAR  szBuffer[FORMATBUFSIZE];",
          "",
          "[Removed Lines]",
          "1151:  EnableWindow(",
          "1152:   GetDlgItem(hwndDlg, IDC_EDIT_EMAIL),",
          "1154:  EnableWindow(",
          "1155:   GetDlgItem(hwndDlg, IDC_LABEL_EMAIL),",
          "1161: BOOL CALLBACK ReportDialogProc(",
          "1162:  HWND hwndDlg,",
          "1163:  UINT uMsg,",
          "1164:  WPARAM wParam,",
          "1165:  LPARAM",
          "1172:       CrashReportParams *pParams = (CrashReportParams*)GetWindowLong( GetParent(hwndDlg), GWL_USERDATA );",
          "",
          "[Added Lines]",
          "1151:  EnableWindow(",
          "1152:   GetDlgItem(hwndDlg, IDC_EDIT_EMAIL),",
          "1154:  EnableWindow(",
          "1155:   GetDlgItem(hwndDlg, IDC_LABEL_EMAIL),",
          "1161: BOOL CALLBACK ReportDialogProc(",
          "1162:  HWND hwndDlg,",
          "1163:  UINT uMsg,",
          "1164:  WPARAM wParam,",
          "1165:  LPARAM",
          "1172:    CrashReportParams *pParams = (CrashReportParams*)GetWindowLong( GetParent(hwndDlg), GWL_USERDATA );",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1235:    Edit_SetText( GetDlgItem(hwndDlg, IDC_EDIT_TITLE), pParams->sTitle.c_str() );",
          "1236:    Edit_SetText( GetDlgItem(hwndDlg, IDC_EDIT_DESCRIPTION), pParams->sComment.c_str() );",
          "1244:    SetFocus( GetDlgItem(hwndDlg,IDC_EDIT_TITLE) );",
          "1245:   }",
          "1246:   break;",
          "",
          "[Removed Lines]",
          "1239:    SetWindowLong( GetDlgItem(GetParent(hwndDlg),IDFINISH), GWL_STYLE,",
          "1240:                 GetWindowLong( GetDlgItem(GetParent(hwndDlg),IDFINISH), GWL_STYLE) | BS_DEFPUSHBUTTON );",
          "1241:    SetWindowLong( GetDlgItem(GetParent(hwndDlg),IDBACK), GWL_STYLE,",
          "1242:                 GetWindowLong( GetDlgItem(GetParent(hwndDlg),IDBACK), GWL_STYLE) &~ BS_DEFPUSHBUTTON );",
          "",
          "[Added Lines]",
          "1239:    SetWindowLong( GetDlgItem(GetParent(hwndDlg),IDFINISH), GWL_STYLE,",
          "1240:     GetWindowLong( GetDlgItem(GetParent(hwndDlg),IDFINISH), GWL_STYLE) | BS_DEFPUSHBUTTON );",
          "1241:    SetWindowLong( GetDlgItem(GetParent(hwndDlg),IDBACK), GWL_STYLE,",
          "1242:     GetWindowLong( GetDlgItem(GetParent(hwndDlg),IDBACK), GWL_STYLE) &~ BS_DEFPUSHBUTTON );",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1303:    TCHAR szURL[256];",
          "1304:    TCHAR szCaption[256];",
          "1310:     GetSysColor( COLOR_3DFACE ) );",
          "1312:    SendMessage( hwndRichEdit, EM_SETEVENTMASK, 0, ENM_LINK );",
          "",
          "[Removed Lines]",
          "1306:    SendMessage(",
          "1307:     hwndRichEdit,",
          "1308:     EM_SETBKGNDCOLOR,",
          "1309:     (WPARAM)FALSE,",
          "",
          "[Added Lines]",
          "1306:    SendMessage(",
          "1307:     hwndRichEdit,",
          "1308:     EM_SETBKGNDCOLOR,",
          "1309:     (WPARAM)FALSE,",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1393:    TCHAR  szBuffer[FORMATBUFSIZE];",
          "1395:    SetWindowLong( hwndDlg, GWL_USERDATA, (LONG)lParam );",
          "1397:     hInstance,",
          "1398:     MAKEINTRESOURCE(IDD_WELCOME_PAGE),",
          "1399:     hwndDlg,",
          "1400:     WelcomeDialogProc );",
          "1403:     hInstance,",
          "1404:     MAKEINTRESOURCE(IDD_REPORT_PAGE),",
          "1405:     hwndDlg,",
          "",
          "[Removed Lines]",
          "1396:    hwndPages[0] = CreateDialog(",
          "1402:    hwndPages[1] = CreateDialog(",
          "",
          "[Added Lines]",
          "1396:    hwndPages[0] = CreateDialog(",
          "1402:    hwndPages[1] = CreateDialog(",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1411:    chfmt.dwMask = CFM_BOLD;",
          "1412:    chfmt.dwEffects = CFE_BOLD;",
          "1415:     GetDlgItem(hwndDlg, IDC_HEADER),",
          "1416:     EM_SETCHARFORMAT,",
          "1417:     SCF_ALL,",
          "",
          "[Removed Lines]",
          "1414:    SendMessage(",
          "",
          "[Added Lines]",
          "1414:    SendMessage(",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1478:      LoadAndFormatString( GetModuleHandle(NULL), IDS_ERROR_MSG_NOEMAILADDRESS, szMessage, elementsof(szMessage) );",
          "1480:      MessageBox( hwndDlg, szMessage, NULL, MB_ICONERROR | MB_OK );",
          "1482:     }",
          "1483:     else",
          "1484:     {",
          "",
          "[Removed Lines]",
          "1481:      break;  // Don't end the dialog",
          "",
          "[Added Lines]",
          "1481:      break; // Don't end the dialog",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1566: static void normalize_pe_image(sal_uInt8* buffer, size_t nBufferSize)",
          "1567: {",
          "1575:  if (buffer[0] == 'M' && buffer[1] == 'Z')",
          "1576:  {",
          "",
          "[Removed Lines]",
          "1568:  const int OFFSET_PE_OFFSET                  = 0x3c;",
          "1569:  const int OFFSET_COFF_TIMEDATESTAMP         = 4;",
          "1570:  const int PE_SIGNATURE_SIZE                 = 4;",
          "1571:  const int COFFHEADER_SIZE                   = 20;",
          "1572:  const int OFFSET_PE_OPTIONALHEADER_CHECKSUM = 64;",
          "",
          "[Added Lines]",
          "1568:  const int OFFSET_PE_OFFSET     = 0x3c;",
          "1569:  const int OFFSET_COFF_TIMEDATESTAMP   = 4;",
          "1570:  const int PE_SIGNATURE_SIZE     = 4;",
          "1571:  const int COFFHEADER_SIZE     = 20;",
          "1572:  const int OFFSET_PE_OPTIONALHEADER_CHECKSUM = 64;",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1607:  }",
          "1608: }",
          "1611: {",
          "1612:  const int MINIMAL_FILESIZE = 512;",
          "1614:  sal_uInt32 nBytesProcessed = 0;",
          "1616:  FILE *fp = fopen( filename, \"rb\" );",
          "",
          "[Removed Lines]",
          "1610: static sal_uInt32 calc_md5_checksum(  const char *filename, sal_uInt8 *pChecksum, sal_uInt32 nChecksumLen )",
          "",
          "[Added Lines]",
          "1610: static sal_uInt32 calc_md5_checksum( const char *filename, sal_uInt8 *pChecksum, sal_uInt32 nChecksumLen )",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1634:      normalize_pe_image( pBuffer, nBytesRead );",
          "1636:     rtlDigestError error = rtl_digest_MD5 (",
          "1638:      pChecksum, nChecksumLen );",
          "1640:     if ( rtl_Digest_E_None == error )",
          "",
          "[Removed Lines]",
          "1637:      pBuffer,   nBytesRead,",
          "",
          "[Added Lines]",
          "1637:      pBuffer, nBytesRead,",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1671:    while ( rtl_Digest_E_None == error &&",
          "1672:     0 != (nBytesRead = fread( buffer, 1, sizeof(buffer), fp )) )",
          "1673:    {",
          "1675:     nBytesProcessed += nBytesRead;",
          "1676:    }",
          "",
          "[Removed Lines]",
          "1674:     error = rtl_digest_updateMD5( digest, buffer, nBytesRead );",
          "",
          "[Added Lines]",
          "1674:     error = rtl_digest_updateMD5( digest, buffer, nBytesRead );",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1708:    EXCEPTION_POINTERS aExceptionPointers;",
          "1709:    CONTEXT    aContextRecord;",
          "1715:     sizeof(aExceptionPointers),",
          "1716:     NULL );",
          "1722:     sizeof(aContextRecord),",
          "1723:     NULL );",
          "",
          "[Removed Lines]",
          "1711:    ReadProcessMemory(",
          "1712:     hProcess,",
          "1713:     pExceptionPointers,",
          "1714:     &aExceptionPointers,",
          "1718:    ReadProcessMemory(",
          "1719:     hProcess,",
          "1720:     aExceptionPointers.ContextRecord,",
          "1721:     &aContextRecord,",
          "",
          "[Added Lines]",
          "1711:    ReadProcessMemory(",
          "1712:     hProcess,",
          "1713:     pExceptionPointers,",
          "1714:     &aExceptionPointers,",
          "1718:    ReadProcessMemory(",
          "1719:     hProcess,",
          "1720:     aExceptionPointers.ContextRecord,",
          "1721:     &aContextRecord,",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1741:    {",
          "1742:     fSuccess = true;",
          "1745:      hProcess,",
          "1746:      NULL,",
          "1747:      &frame,",
          "",
          "[Removed Lines]",
          "1744:     bSuccess = StackWalk( IMAGE_FILE_MACHINE_I386,",
          "",
          "[Added Lines]",
          "1744:     bSuccess = StackWalk( IMAGE_FILE_MACHINE_I386,",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1798:      else",
          "1799:       fprintf( fout, \"<errormail:StackInfo pos=\\\"%d\\\" ip=\\\"0x%p\\\"/>\\n\",",
          "1800:        frameNum,",
          "1802:        );",
          "1804:      frameNum++;",
          "",
          "[Removed Lines]",
          "1801:        frame.AddrPC.Offset",
          "",
          "[Added Lines]",
          "1801:        frame.AddrPC.Offset",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1829:   hash_map< string, string >::const_iterator iter;",
          "1833:    iter++ )",
          "1834:   {",
          "1835:    sal_uInt8 checksum[RTL_DIGEST_LENGTH_MD5];",
          "1838:     checksum, sizeof(checksum) );",
          "1840:    if ( nBytesProcessed )",
          "1841:    {",
          "1842:     fprintf( fchksum, \"<errormail:Checksum sum=\\\"0x\" );",
          "1843:     for ( int i = 0; i < sizeof(checksum); fprintf( fchksum, \"%02X\", checksum[i++] ) );",
          "1846:      GetFileName( iter->first ).c_str() );",
          "1847:    }",
          "1848:   }",
          "",
          "[Removed Lines]",
          "1831:   for ( iter = rLibraries.begin();",
          "1832:    iter != rLibraries.end();",
          "1836:    sal_uInt32 nBytesProcessed = calc_md5_checksum(",
          "1837:     iter->second.c_str(),",
          "1844:     fprintf( fchksum, \"\\\" bytes=\\\"%d\\\" file=\\\"%s\\\"/>\\n\",",
          "1845:      nBytesProcessed,",
          "",
          "[Added Lines]",
          "1831:   for ( iter = rLibraries.begin();",
          "1832:    iter != rLibraries.end();",
          "1836:    sal_uInt32 nBytesProcessed = calc_md5_checksum(",
          "1837:     iter->second.c_str(),",
          "1844:     fprintf( fchksum, \"\\\" bytes=\\\"%d\\\" file=\\\"%s\\\"/>\\n\",",
          "1845:      nBytesProcessed,",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1865:  {",
          "1866:   _tcscat( szFileName, _T(\"\\\\crashdat.dmp\") );",
          "1873:    FILE_ATTRIBUTE_NORMAL, NULL );",
          "1875:   if ( hFile )",
          "",
          "[Removed Lines]",
          "1868:   HANDLE hFile =  CreateFile(",
          "1869:    szFileName,",
          "1870:    GENERIC_READ,",
          "1871:    0, NULL,",
          "1872:    OPEN_EXISTING,",
          "",
          "[Added Lines]",
          "1868:   HANDLE hFile = CreateFile(",
          "1869:    szFileName,",
          "1870:    GENERIC_READ,",
          "1871:    0, NULL,",
          "1872:    OPEN_EXISTING,",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1924:    _tcscpy( szFileName, szTempPath );",
          "1925:    _tcscat( szFileName, _T(\"\\\\crashdat.dmp\") );",
          "1926:    {",
          "1932:      CREATE_ALWAYS,",
          "1933:      FILE_ATTRIBUTE_NORMAL, NULL );",
          "",
          "[Removed Lines]",
          "1927:     HANDLE hFile =  CreateFile(",
          "1928:      szFileName,",
          "1929:      GENERIC_READ | GENERIC_WRITE,",
          "1930:      0, NULL,",
          "",
          "[Added Lines]",
          "1927:     HANDLE hFile = CreateFile(",
          "1928:      szFileName,",
          "1929:      GENERIC_READ | GENERIC_WRITE,",
          "1930:      0, NULL,",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1943:       EXCEPTION_POINTERS aExceptionPointers;",
          "1944:       EXCEPTION_RECORD aExceptionRecord;",
          "1950:        sizeof(aExceptionPointers),",
          "1951:        NULL );",
          "1954:       ReadProcessMemory(",
          "1958:        sizeof(aExceptionRecord),",
          "1959:        NULL );",
          "",
          "[Removed Lines]",
          "1946:       ReadProcessMemory(",
          "1947:        hProcess,",
          "1948:        pExceptionPointers,",
          "1949:        &aExceptionPointers,",
          "1955:        hProcess,",
          "1956:        aExceptionPointers.ExceptionRecord,",
          "1957:        &aExceptionRecord,",
          "",
          "[Added Lines]",
          "1946:       ReadProcessMemory(",
          "1947:        hProcess,",
          "1948:        pExceptionPointers,",
          "1949:        &aExceptionPointers,",
          "1955:        hProcess,",
          "1956:        aExceptionPointers.ExceptionRecord,",
          "1957:        &aExceptionRecord,",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "2088:    LoadAndFormatString( hInstance, IDS_MSG_PARAM_PROCESSID_DESCRIPTION, szProcessDescription, elementsof(szProcessDescription) );",
          "2089:    LoadAndFormatString( hInstance, IDS_MSG_PARAM_HELP_DESCRIPTION, szHelpDescription, elementsof(szHelpDescription) );",
          "2092:     TEXT(\"\\n%s: crashrep %s\\n\\n\")",
          "2093:     TEXT(\"/?, -h[elp]          %s\\n\\n\")",
          "2094:     TEXT(\"%-20s %s\\n\\n\"),",
          "",
          "[Removed Lines]",
          "2091:    _tprintf(",
          "",
          "[Added Lines]",
          "2091:    _tprintf(",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "2106:     bSuccess = false;",
          "2107:   }",
          "2108:   else if ( 0 == _tcsicmp( argv[argn], _T(\"-excp\") ) ||",
          "2110:   {",
          "2111:    if ( ++argn < argc )",
          "2113:    else",
          "2114:     bSuccess = false;",
          "2115:   }",
          "2118:   {",
          "2119:    if ( ++argn < argc )",
          "2121:    else",
          "2122:     bSuccess = false;",
          "2123:   }",
          "2126:   {",
          "2127:    g_bNoUserInterface = true;",
          "2128:   }",
          "2131:   {",
          "2132:    g_bSendReport = true;",
          "2133:   }",
          "2136:   {",
          "2137:    g_bLoadReport = true;",
          "2138:   }",
          "",
          "[Removed Lines]",
          "2109:          0 == _tcsicmp( argv[argn], _T(\"/excp\") ) )",
          "2116:   else if ( 0 == _tcsicmp( argv[argn], _T(\"-t\") ) ||",
          "2117:          0 == _tcsicmp( argv[argn], _T(\"/t\") ) )",
          "2124:   else if ( 0 == _tcsicmp( argv[argn], _T(\"-noui\") ) ||",
          "2125:          0 == _tcsicmp( argv[argn], _T(\"/noui\") ) )",
          "2129:   else if ( 0 == _tcsicmp( argv[argn], _T(\"-send\") ) ||",
          "2130:          0 == _tcsicmp( argv[argn], _T(\"/send\") ) )",
          "2134:   else if ( 0 == _tcsicmp( argv[argn], _T(\"-load\") ) ||",
          "2135:          0 == _tcsicmp( argv[argn], _T(\"/load\") ) )",
          "",
          "[Added Lines]",
          "2109:       0 == _tcsicmp( argv[argn], _T(\"/excp\") ) )",
          "2116:   else if ( 0 == _tcsicmp( argv[argn], _T(\"-t\") ) ||",
          "2117:       0 == _tcsicmp( argv[argn], _T(\"/t\") ) )",
          "2124:   else if ( 0 == _tcsicmp( argv[argn], _T(\"-noui\") ) ||",
          "2125:       0 == _tcsicmp( argv[argn], _T(\"/noui\") ) )",
          "2129:   else if ( 0 == _tcsicmp( argv[argn], _T(\"-send\") ) ||",
          "2130:       0 == _tcsicmp( argv[argn], _T(\"/send\") ) )",
          "2134:   else if ( 0 == _tcsicmp( argv[argn], _T(\"-load\") ) ||",
          "2135:       0 == _tcsicmp( argv[argn], _T(\"/load\") ) )",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "2186:   if ( GetTempFileName( szTempPath, TEXT(\"CMT\"), 0, szFileName ) )",
          "2187:   {",
          "2190:    if ( hFile )",
          "2191:    {",
          "",
          "[Removed Lines]",
          "2188:    HANDLE hFile =  CreateFile( szFileName, GENERIC_READ | GENERIC_WRITE, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL );",
          "",
          "[Added Lines]",
          "2188:    HANDLE hFile = CreateFile( szFileName, GENERIC_READ | GENERIC_WRITE, 0, NULL, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL );",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "2262: {",
          "2263:  FILE *fp = fopen( pFileName, \"rt\" );",
          "2264:  string retValue;",
          "2266:  if ( fp )",
          "2267:  {",
          "2268:   string line;",
          "2269:   string section;",
          "2271:   while ( read_line( fp, line ) )",
          "2272:   {",
          "2273:    line = trim_string( line );",
          "2278:    if ( iEqualSign != string::npos )",
          "2279:    {",
          "2280:     string keyname = line.substr( 0, iEqualSign );",
          "2281:     keyname = trim_string( keyname );",
          "2283:     string value = line.substr( sal::static_int_cast<string::size_type>(iEqualSign + 1) );",
          "2284:     value = trim_string( value );",
          "",
          "[Removed Lines]",
          "2276:    string::size_type iEqualSign = line.find( '=', 0 );",
          "",
          "[Added Lines]",
          "2276:    string::size_type iEqualSign = line.find( '=', 0 );",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "2325:  _tmakepath( szModuleName, szDrive, szDir, _T(\"bootstrap\"), _T(\".ini\") );",
          "2326:  _tmakepath( szModuleVersionName, szDrive, szDir, _T(\"version\"), _T(\".ini\") );",
          "2336:   )",
          "2337:  {",
          "2338:   TCHAR *pVersion = _tcschr( szBuffer, ' ' );",
          "",
          "[Removed Lines]",
          "2328:  if (",
          "2329:   GetPrivateProfileString(",
          "2330:   TEXT(\"Bootstrap\"),",
          "2331:   TEXT(\"ProductKey\"),",
          "2332:   TEXT(\"OpenOffice.org\"),",
          "2333:   szBuffer,",
          "2334:   elementsof(szBuffer),",
          "2335:   szModuleName )",
          "",
          "[Added Lines]",
          "2328:  if (",
          "2329:   GetPrivateProfileString(",
          "2330:   TEXT(\"Bootstrap\"),",
          "2331:   TEXT(\"ProductKey\"),",
          "2332:   TEXT(\"OpenOffice\"),",
          "2333:   szBuffer,",
          "2334:   elementsof(szBuffer),",
          "2335:   szModuleName )",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "2355:    _tsetenv( TEXT(\"PRODUCTVERSION\"), pVersion );",
          "2356:  }",
          "2363:   szModuleVersionName );",
          "2365:  g_strDefaultLanguage = get_script_string( \"instdb.inf\", \"DefaultLanguage\" );",
          "",
          "[Removed Lines]",
          "2358:  GetPrivateProfileString(",
          "2359:   TEXT(\"Version\"),",
          "2360:   TEXT(\"buildid\"),",
          "2361:   TEXT(\"unknown\"),",
          "2362:   g_szBuildId, elementsof(g_szBuildId),",
          "",
          "[Added Lines]",
          "2358:  GetPrivateProfileString(",
          "2359:   TEXT(\"Version\"),",
          "2360:   TEXT(\"buildid\"),",
          "2361:   TEXT(\"unknown\"),",
          "2362:   g_szBuildId, elementsof(g_szBuildId),",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "2414:     unsigned short uProxyPort = 8080 )",
          "2415: {",
          "2416:  bool success = false;",
          "2418:  struct hostent *hp;",
          "2420:  if ( pszProxyServer )",
          "2421:   hp = gethostbyname( pszProxyServer );",
          "2422:  else",
          "",
          "[Removed Lines]",
          "2409: bool SendHTTPRequest(",
          "2410:     FILE *fp,",
          "2411:     const char *pszServer,",
          "2412:     unsigned short uPort = 80,",
          "2413:     const char *pszProxyServer = NULL,",
          "",
          "[Added Lines]",
          "2409: bool SendHTTPRequest(",
          "2410:     FILE *fp,",
          "2411:     const char *pszServer,",
          "2412:     unsigned short uPort = 80,",
          "2413:     const char *pszProxyServer = NULL,",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "2447:     char buffer[2048];",
          "2449:     if ( pszProxyServer )",
          "2451:      \"POST http://%s:%d/soap/servlet/rpcrouter HTTP/1.0\\r\\n\"",
          "2452:       \"Content-Type: text/xml; charset=\\\"utf-8\\\"\\r\\n\"",
          "2453:       \"Content-Length: %d\\r\\n\"",
          "",
          "[Removed Lines]",
          "2450:      sprintf( buffer,",
          "",
          "[Added Lines]",
          "2450:      sprintf( buffer,",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "2457:       length",
          "2458:       );",
          "2459:     else",
          "2461:       \"POST /soap/servlet/rpcrouter HTTP/1.0\\r\\n\"",
          "2462:       \"Content-Type: text/xml; charset=\\\"utf-8\\\"\\r\\n\"",
          "2463:       \"Content-Length: %d\\r\\n\"",
          "",
          "[Removed Lines]",
          "2460:      sprintf( buffer,",
          "",
          "[Added Lines]",
          "2460:      sprintf( buffer,",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "2517:   \"<SOAP-ENV:Body>\\n\"",
          "2518:   );",
          "2521:  fprintf( fp, \"<body xsi:type=\\\"xsd:string\\\">This is an autogenerated crash report mail.</body>\\n\" );",
          "2522:  fprintf( fp, \"<hash xsi:type=\\\"apache:Map\\\">\\n\" );",
          "2524:  FILE *fpin = fopen( g_szReportFileNameA, \"r\" );",
          "2525:  if ( fpin )",
          "2526:  {",
          "2528:    \"<item>\\n\"",
          "2529:    \"<key xsi:type=\\\"xsd:string\\\">reportmail.xml</key>\\n\"",
          "2530:    \"<value xsi:type=\\\"xsd:string\\\"><![CDATA[\" );",
          "",
          "[Removed Lines]",
          "2520:  fprintf( fp, \"<rds:submitReport>\\n\"  );",
          "2527:   fprintf( fp,",
          "",
          "[Added Lines]",
          "2520:  fprintf( fp, \"<rds:submitReport>\\n\" );",
          "2527:   fprintf( fp,",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "2536:  fpin = fopen( g_szCommentFileNameA, \"r\" );",
          "2537:  if ( fpin )",
          "2538:  {",
          "2540:    \"<item>\\n\"",
          "2541:    \"<key xsi:type=\\\"xsd:string\\\">description.txt</key>\\n\"",
          "2542:    \"<value xsi:type=\\\"xsd:string\\\"><![CDATA[\" );",
          "",
          "[Removed Lines]",
          "2539:   fprintf( fp,",
          "",
          "[Added Lines]",
          "2539:   fprintf( fp,",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "2556:    if ( base64_encode( fpin, fptemp ) )",
          "2557:    {",
          "2558:     fseek( fptemp, 0, SEEK_SET );",
          "2560:      \"<item>\\n\"",
          "2561:      \"<key xsi:type=\\\"xsd:string\\\">user.dmp</key>\\n\"",
          "2562:      \"<value xsi:type=\\\"xsd:string\\\">\" );",
          "",
          "[Removed Lines]",
          "2559:     fprintf( fp,",
          "",
          "[Added Lines]",
          "2559:     fprintf( fp,",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "2568:   fclose( fpin );",
          "2569:  }",
          "2572:   \"</hash>\\n\"",
          "2573:   \"</rds:submitReport>\\n\"",
          "2576:   );",
          "2577: }",
          "",
          "[Removed Lines]",
          "2571:  fprintf( fp,",
          "2574:   \"</SOAP-ENV:Body>\\n\"",
          "2575:   \"</SOAP-ENV:Envelope>\\n\"",
          "",
          "[Added Lines]",
          "2571:  fprintf( fp,",
          "2574:   \"</SOAP-ENV:Body>\\n\"",
          "2575:   \"</SOAP-ENV:Envelope>\\n\"",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "2593: {",
          "2594:  RequestParams *pParams = (RequestParams *)lpArgs;",
          "2598:  PostMessage( pParams->hwndStatus, WM_COMMAND, IDOK, 0 );",
          "2599: }",
          "2608:  )",
          "2609: {",
          "2610:  static RequestParams *pRequest = NULL;",
          "",
          "[Removed Lines]",
          "2596:     pParams->success = SendHTTPRequest( pParams->fpin, pParams->lpServer, pParams->uPort, pParams->lpProxyServer, pParams->uProxyPort );",
          "2603: BOOL CALLBACK SendingStatusDialogProc(",
          "2604:  HWND hwndDlg,",
          "2605:  UINT uMsg,",
          "2606:  WPARAM wParam,",
          "2607:  LPARAM lParam",
          "",
          "[Added Lines]",
          "2596:  pParams->success = SendHTTPRequest( pParams->fpin, pParams->lpServer, pParams->uPort, pParams->lpProxyServer, pParams->uProxyPort );",
          "2603: BOOL CALLBACK SendingStatusDialogProc(",
          "2604:  HWND hwndDlg,",
          "2605:  UINT uMsg,",
          "2606:  WPARAM wParam,",
          "2607:  LPARAM lParam",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "2666:  {",
          "2667:  case 2:",
          "2668:   {",
          "2671:     szProxyServer, sizeof(szProxyServer), NULL, NULL );",
          "2672:    uProxyPort = (unsigned short)_tcstoul( rParams.sProxyPort.c_str(), &endptr, 10 );",
          "2673:   }",
          "",
          "[Removed Lines]",
          "2669:    WideCharToMultiByte(",
          "2670:     CP_ACP, 0, rParams.sProxyServer.c_str(), -1,",
          "",
          "[Added Lines]",
          "2669:    WideCharToMultiByte(",
          "2670:     CP_ACP, 0, rParams.sProxyServer.c_str(), -1,",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "2676:   {",
          "2677:    DWORD dwProxyEnable = 0;",
          "2680:     TEXT(\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\"),",
          "2681:     TEXT(\"ProxyEnable\"),",
          "2682:     &dwProxyEnable,",
          "",
          "[Removed Lines]",
          "2679:    RegReadValue( HKEY_CURRENT_USER,",
          "",
          "[Added Lines]",
          "2679:    RegReadValue( HKEY_CURRENT_USER,",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "2686:    {",
          "2687:     TCHAR tszProxyServers[1024] = TEXT(\"\");",
          "2691:      tszProxyServers,",
          "2692:      sizeof(tszProxyServers) ) )",
          "2693:     {",
          "",
          "[Removed Lines]",
          "2689:     if ( ERROR_SUCCESS == RegReadValue( HKEY_CURRENT_USER,",
          "2690:      TEXT(\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\"),    TEXT(\"ProxyServer\"),",
          "",
          "[Added Lines]",
          "2689:     if ( ERROR_SUCCESS == RegReadValue( HKEY_CURRENT_USER,",
          "2690:      TEXT(\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\"),",
          "2691:      TEXT(\"ProxyServer\"),",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "2748:   if ( hwndParent )",
          "2749:   {",
          "2752:     MAKEINTRESOURCE(IDD_SENDING_STATUS),",
          "2753:     hwndParent,",
          "2754:     SendingStatusDialogProc,",
          "",
          "[Removed Lines]",
          "2750:    int retid = DialogBoxParam(",
          "2751:     GetModuleHandle(NULL),",
          "",
          "[Added Lines]",
          "2751:    int retid = DialogBoxParam(",
          "2752:     GetModuleHandle(NULL),",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "2855:  DWORD    dwProcessId = 0;",
          "2856:  DWORD    dwThreadId = 0;",
          "2861:  wVersionRequested = MAKEWORD(1, 1);",
          "2862:  WSAStartup(wVersionRequested, &wsaData);",
          "",
          "[Removed Lines]",
          "2858:  WSADATA wsaData;",
          "2859:  WORD    wVersionRequested;",
          "",
          "[Added Lines]",
          "2859:  WSADATA wsaData;",
          "2860:  WORD wVersionRequested;",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "2866:  Params.ReadFromRegistry();",
          "2867:  Params.ReadFromEnvironment();",
          "2870:   ParseCommandArgs( &dwProcessId, &pExceptionPointers, &dwThreadId ) )",
          "2871:  {",
          "2872:   bool bGotDumpFile;",
          "",
          "[Removed Lines]",
          "2869:  if ( ReadBootstrapParams( Params ) &&",
          "",
          "[Added Lines]",
          "2870:  if ( ReadBootstrapParams( Params ) &&",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed95e420437b0a5d9ebe14cada0745b037ef647f",
      "candidate_info": {
        "commit_hash": "ed95e420437b0a5d9ebe14cada0745b037ef647f",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/ed95e420437b0a5d9ebe14cada0745b037ef647f",
        "files": [
          "extras/l10n/source/de/localize.sdf"
        ],
        "message": "Corrected string in German SDF",
        "before_after_code_files": [
          "extras/l10n/source/de/localize.sdf||extras/l10n/source/de/localize.sdf"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "extras/l10n/source/de/localize.sdf||extras/l10n/source/de/localize.sdf": [
          "File: extras/l10n/source/de/localize.sdf -> extras/l10n/source/de/localize.sdf",
          "--- Hunk 1 ---",
          "[Context before]",
          "17403: helpcontent2 source\\text\\sdraw\\main0503.xhp 0 help hd_id3154320 14   0 de 3D-Objekte erstellen    20130618 17:22:18",
          "17404: helpcontent2 source\\text\\sdraw\\main0503.xhp 0 help par_id3145251 15   0 de In $[officename] Draw k\u00f6nnen Sie einfache 3D-Objekte wie W\u00fcrfel, Kugeln oder Zylinder erzeugen und sogar die Lichtquelle der Objekte \u00e4ndern.    20130618 17:22:18",
          "17405: helpcontent2 source\\text\\sdraw\\main0503.xhp 0 help hd_id3154491 20   0 de Raster und Fanglinien    20130618 17:22:18",
          "17407: helpcontent2 source\\text\\sdraw\\main0503.xhp 0 help hd_id3155601 16   0 de Verbinden von Objekten zur Anzeige von Beziehungen    20130618 17:22:18",
          "17408: helpcontent2 source\\text\\sdraw\\main0503.xhp 0 help par_id3149124 17   0 de In $[officename] Draw l\u00e4sst sich die Beziehung zwischen verschiedenen Objekten mit speziellen Linien namens Verbindern zeigen. Die Verbinder werden an die Klebepunkte der Zeichenobjekte angef\u00fcgt und l\u00f6sen sich auch dann nicht, wenn die miteinander verbundenen Objekte verschobenwerden. Verbinder sind beim Erstellen von Organigrammen und technischen Zeichnungen n\u00fctzlich.    20130618 17:22:18",
          "17409: helpcontent2 source\\text\\sdraw\\main0503.xhp 0 help hd_id3155764 21   0 de Gr\u00f6\u00dfenanzeige    20130618 17:22:18",
          "",
          "[Removed Lines]",
          "17406: helpcontent2 source\\text\\sdraw\\main0503.xhp 0 help par_id3149379 6   0 de Raster und Fanglinien sind optische Hilfen, die Ihnen die Anordnung von Objekten in Ihrer Zeichnung erleichtern. Sie k\u00c3\u00b6nnen ein Objekt auch an einerRasterlinie, Fanglinie oder am Rand eines anderen Objekts fangen.    20130618 17:22:18",
          "",
          "[Added Lines]",
          "17406: helpcontent2 source\\text\\sdraw\\main0503.xhp 0 help par_id3149379 6   0 de Raster und Fanglinien sind optische Hilfen, die Ihnen die Anordnung von Objekten in Ihrer Zeichnung erleichtern. Sie k\u00f6nnen ein Objekt auch an einer Rasterlinie, Fanglinie oder am Rand eines anderen Objekts fangen.    20130618 17:22:18",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d81da06931dee7ab730e21909d797105f39e7b6a",
      "candidate_info": {
        "commit_hash": "d81da06931dee7ab730e21909d797105f39e7b6a",
        "repo": "apache/openoffice",
        "commit_url": "https://github.com/apache/openoffice/commit/d81da06931dee7ab730e21909d797105f39e7b6a",
        "files": [
          "main/extensions.lst"
        ],
        "message": "Updated English dictionary",
        "before_after_code_files": [
          "main/extensions.lst||main/extensions.lst"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/openoffice/pull/366"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "main/extensions.lst||main/extensions.lst": [
          "File: main/extensions.lst -> main/extensions.lst",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: # English dictionary",
          "41: [ language=en.* || language=de || language=it ]",
          "44: # English (USA, en_US) dictionary",
          "45: [ language==nl || language==ru ]",
          "",
          "[Removed Lines]",
          "42:     a528d52485d191d099463a6f3da34cbb https://sourceforge.net/projects/aoo-extensions/files/17102/77/dict-en-20220501_aoo.oxt/download \"dict-en.oxt\"",
          "",
          "[Added Lines]",
          "42:     5bc42c62469237b623424654d9bc9819 https://sourceforge.net/projects/aoo-extensions/files/17102/78/dict-en-20220601_aoo.oxt/download \"dict-en.oxt\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}