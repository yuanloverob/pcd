{
  "cve_id": "CVE-2022-4398",
  "cve_desc": "Integer Overflow or Wraparound in GitHub repository radareorg/radare2 prior to 5.8.0.",
  "repo": "radareorg/radare2",
  "patch_hash": "b53a1583d05c3a5bfe5fa60da133fe59dfbb02b8",
  "patch_info": {
    "commit_hash": "b53a1583d05c3a5bfe5fa60da133fe59dfbb02b8",
    "repo": "radareorg/radare2",
    "commit_url": "https://github.com/radareorg/radare2/commit/b53a1583d05c3a5bfe5fa60da133fe59dfbb02b8",
    "files": [
      "dist/docker/Dockerfile",
      "libr/core/canal.c"
    ],
    "message": "Fix integer overflow in fuzzed dwarf rendering in graphs ##crash\n\n* Reported by @solid-snail via huntrdev\n* BountyID: c6f8d3ef-5420-4eba-9a5f-aba5e2b5fea2/\n* Reproducer: `intof_mod`",
    "before_after_code_files": [
      "libr/core/canal.c||libr/core/canal.c"
    ]
  },
  "patch_diff": {
    "libr/core/canal.c||libr/core/canal.c": [
      "File: libr/core/canal.c -> libr/core/canal.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1390:     filestr = r_file_slurp_line (file, line, 0);",
      "1391:     if (filestr) {",
      "1392:      int flen = strlen (filestr);",
      "1393:      cmdstr = realloc (cmdstr, idx + flen + 8);",
      "1394:      memcpy (cmdstr + idx, filestr, flen);",
      "1395:      idx += flen;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1393:      if (idx < 0 || ST32_ADD_OVFCHK (idx, flen + 8)) {",
      "1394:       R_LOG_WARN (\"integer overflow detected\");",
      "1395:       break;",
      "1396:      }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c4b180a415cc4cb8d74dc6785f6b53f781ae7757",
      "candidate_info": {
        "commit_hash": "c4b180a415cc4cb8d74dc6785f6b53f781ae7757",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/c4b180a415cc4cb8d74dc6785f6b53f781ae7757",
        "files": [
          "libr/bin/bin.c",
          "libr/core/canal.c"
        ],
        "message": "Minor optimizations in core_anal_graph_label",
        "before_after_code_files": [
          "libr/bin/bin.c||libr/bin/bin.c",
          "libr/core/canal.c||libr/core/canal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libr/core/canal.c||libr/core/canal.c"
          ],
          "candidate": [
            "libr/core/canal.c||libr/core/canal.c"
          ]
        }
      },
      "candidate_diff": {
        "libr/bin/bin.c||libr/bin/bin.c": [
          "File: libr/bin/bin.c -> libr/bin/bin.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: #define R_BIN_LDR_STATIC_PLUGINS 0",
          "21: #endif",
          "27: static int __getoffset(RBin *bin, int type, int idx) {",
          "28:  RBinFile *a = r_bin_cur (bin);",
          "",
          "[Removed Lines]",
          "23: static RBinPlugin *bin_static_plugins[] = { R_BIN_STATIC_PLUGINS, NULL };",
          "24: static RBinXtrPlugin *bin_xtr_static_plugins[] = { R_BIN_XTR_STATIC_PLUGINS, NULL };",
          "25: static RBinLdrPlugin *bin_ldr_static_plugins[] = { R_BIN_LDR_STATIC_PLUGINS, NULL };",
          "",
          "[Added Lines]",
          "23: static const RBinPlugin *bin_static_plugins[] = { R_BIN_STATIC_PLUGINS, NULL };",
          "24: static const RBinXtrPlugin *bin_xtr_static_plugins[] = { R_BIN_XTR_STATIC_PLUGINS, NULL };",
          "25: static const RBinLdrPlugin *bin_ldr_static_plugins[] = { R_BIN_LDR_STATIC_PLUGINS, NULL };",
          "",
          "---------------"
        ],
        "libr/core/canal.c||libr/core/canal.c": [
          "File: libr/core/canal.c -> libr/core/canal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1359: static bool print_arch_hint_cb(ut64 addr, R_NULLABLE const char *arch, void *user) {",
          "1360:  HintNode *node = R_NEW0 (HintNode);",
          "1363:  }",
          "1369: }",
          "1371: static bool print_bits_hint_cb(ut64 addr, int bits, void *user) {",
          "1372:  HintNode *node = R_NEW0 (HintNode);",
          "1375:  }",
          "1381: }",
          "1383: static void print_hint_tree(RBTree tree, int mode) {",
          "",
          "[Removed Lines]",
          "1361:  if (!node) {",
          "1362:   return false;",
          "1364:  node->addr = addr;",
          "1365:  node->type = HINT_NODE_ARCH;",
          "1366:  node->arch = arch;",
          "1367:  r_rbtree_insert (user, &addr, &node->rb, hint_node_cmp, NULL);",
          "1368:  return true;",
          "1373:  if (!node) {",
          "1374:   return false;",
          "1376:  node->addr = addr;",
          "1377:  node->type = HINT_NODE_BITS;",
          "1378:  node->bits = bits;",
          "1379:  r_rbtree_insert (user, &addr, &node->rb, hint_node_cmp, NULL);",
          "1380:  return true;",
          "",
          "[Added Lines]",
          "1361:  if (node) {",
          "1362:   node->addr = addr;",
          "1363:   node->type = HINT_NODE_ARCH;",
          "1364:   node->arch = arch;",
          "1365:   r_rbtree_insert (user, &addr, &node->rb, hint_node_cmp, NULL);",
          "1366:   return true;",
          "1368:  return false;",
          "1373:  if (node) {",
          "1374:   node->addr = addr;",
          "1375:   node->type = HINT_NODE_BITS;",
          "1376:   node->bits = bits;",
          "1377:   r_rbtree_insert (user, &addr, &node->rb, hint_node_cmp, NULL);",
          "1378:   return true;",
          "1380:  return false;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1448: }",
          "1450: static char *core_anal_graph_label(RCore *core, RAnalBlock *bb, int opts) {",
          "1453:  char cmd[1024], file[1024], *cmdstr = NULL, *filestr = NULL, *str = NULL;",
          "1455:  ut64 at;",
          "1457:  if (opts & R_CORE_ANAL_GRAPHLINES) {",
          "1459:    r_bin_addr2line (core->bin, at, file, sizeof (file) - 1, &line, &colu);",
          "1460:    if (line != 0 && line != oline && strcmp (file, \"??\")) {",
          "1461:     filestr = r_file_slurp_line (file, line, 0);",
          "1462:     if (filestr) {",
          "1471:      if (is_json) {",
          "1474:      } else if (is_html) {",
          "1477:      } else {",
          "1480:      }",
          "1481:      free (filestr);",
          "1482:     }",
          "1483:    }",
          "1484:    oline = line;",
          "1485:   }",
          "1486:  } else if (opts & R_CORE_ANAL_STAR) {",
          "1489:  } else if (opts & R_CORE_ANAL_GRAPHBODY) {",
          "1490:   const bool scrColor = r_config_get (core->config, \"scr.color\");",
          "1492:   r_config_set_i (core->config, \"scr.color\", COLOR_MODE_DISABLED);",
          "1493:   r_config_set_b (core->config, \"scr.utf8\", false);",
          "1494:   snprintf (cmd, sizeof (cmd), \"pD %\"PFMT64u\" @ 0x%08\" PFMT64x, bb->size, bb->addr);",
          "1495:   cmdstr = r_core_cmd_str (core, cmd);",
          "1496:   r_config_set_i (core->config, \"scr.color\", scrColor);",
          "1498:  }",
          "1499:  if (cmdstr) {",
          "1500:   str = r_str_escape_dot (cmdstr);",
          "",
          "[Removed Lines]",
          "1451:  int is_html = r_cons_context ()->is_html;",
          "1452:  int is_json = opts & R_CORE_ANAL_JSON;",
          "1454:  int line = 0, oline = 0, colu = 0, idx = 0;",
          "1458:   for (at = bb->addr; at < bb->addr + bb->size; at += 2) {",
          "1463:      int flen = strlen (filestr);",
          "1464:      if (idx < 0 || ST32_ADD_OVFCHK (idx, flen + 8)) {",
          "1465:       R_LOG_WARN (\"integer overflow detected\");",
          "1466:       break;",
          "1467:      }",
          "1468:      cmdstr = realloc (cmdstr, idx + flen + 8);",
          "1469:      memcpy (cmdstr + idx, filestr, flen);",
          "1470:      idx += flen;",
          "1472:       strcpy (cmdstr + idx, \"\\\\n\");",
          "1473:       idx += 2;",
          "1475:       strcpy (cmdstr + idx, \"<br />\");",
          "1476:       idx += 6;",
          "1478:       strcpy (cmdstr + idx, \"\\\\l\");",
          "1479:       idx += 2;",
          "1487:   snprintf (cmd, sizeof (cmd), \"pdb %\"PFMT64u\" @ 0x%08\" PFMT64x, bb->size, bb->addr);",
          "1488:   str = r_core_cmd_str (core, cmd);",
          "1491:   const bool scrUtf8 = r_config_get (core->config, \"scr.utf8\");",
          "1497:   r_config_set_i (core->config, \"scr.utf8\", scrUtf8);",
          "",
          "[Added Lines]",
          "1451:  const bool is_html = r_cons_context ()->is_html;",
          "1452:  const bool is_json = opts & R_CORE_ANAL_JSON;",
          "1454:  int line = 0, oline = 0, colu = 0;",
          "1458:   RStrBuf *sb = r_strbuf_new (\"\");",
          "1459:   const ut64 bb_end = bb->addr + bb->size;",
          "1460:   for (at = bb->addr; at < bb_end; at += 2) {",
          "1465:      r_strbuf_append (sb, filestr);",
          "1467:       r_strbuf_append (sb, \"\\\\n\");",
          "1469:       r_strbuf_append (sb, \"<br />\");",
          "1471:       r_strbuf_append (sb, \"\\\\l\");",
          "1478:   cmdstr = r_strbuf_drain (sb);",
          "1480:   str = r_core_cmd_strf (core, \"pdb %\"PFMT64u\" @ 0x%08\" PFMT64x, bb->size, bb->addr);",
          "1483:   const bool scrUtf8 = r_config_get_b (core->config, \"scr.utf8\");",
          "1489:   r_config_set_b (core->config, \"scr.utf8\", scrUtf8);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2715: }",
          "2717: R_API char *r_core_anal_fcn_name(RCore *core, RAnalFunction *fcn) {",
          "2719:  const char *lang = demangle ? r_config_get (core->config, \"bin.lang\") : NULL;",
          "2721:  char *name = strdup (r_str_get (fcn->name));",
          "2722:  if (demangle) {",
          "2723:   char *tmp = r_bin_demangle (core->bin->cur, lang, name, fcn->addr, keep_lib);",
          "",
          "[Removed Lines]",
          "2718:  bool demangle = r_config_get_i (core->config, \"bin.demangle\");",
          "2720:  bool keep_lib = r_config_get_i (core->config, \"bin.demangle.libs\");",
          "",
          "[Added Lines]",
          "2710:  bool demangle = r_config_get_b (core->config, \"bin.demangle\");",
          "2712:  bool keep_lib = r_config_get_b (core->config, \"bin.demangle.libs\");",
          "",
          "---------------"
        ]
      }
    }
  ]
}