{
  "cve_id": "CVE-2023-25076",
  "cve_desc": "A buffer overflow vulnerability exists in the handling of wildcard backend hosts of SNIProxy 0.6.0-2 and the master branch (commit: 822bb80df9b7b345cc9eba55df74a07b498819ba). A specially crafted HTTP or TLS packet can lead to arbitrary code execution. An attacker could send a malicious packet to trigger this vulnerability.",
  "repo": "dlundquist/sniproxy",
  "patch_hash": "f8d9a433fe22ab2fa15c00179048ab02ae23d583",
  "patch_info": {
    "commit_hash": "f8d9a433fe22ab2fa15c00179048ab02ae23d583",
    "repo": "dlundquist/sniproxy",
    "commit_url": "https://github.com/dlundquist/sniproxy/commit/f8d9a433fe22ab2fa15c00179048ab02ae23d583",
    "files": [
      "ChangeLog",
      "configure.ac",
      "debian/changelog",
      "debian/compat",
      "redhat/sniproxy.spec",
      "setver.sh",
      "src/address.c",
      "tests/Makefile.am",
      "tests/bad_dns_request_test",
      "tests/slow_client_test"
    ],
    "message": "address: fix buffer overflow\n\nUpdate tests to work on Debian 11.",
    "before_after_code_files": [
      "configure.ac||configure.ac",
      "redhat/sniproxy.spec||redhat/sniproxy.spec",
      "setver.sh||setver.sh",
      "src/address.c||src/address.c",
      "tests/Makefile.am||tests/Makefile.am"
    ]
  },
  "patch_diff": {
    "configure.ac||configure.ac": [
      "File: configure.ac -> configure.ac",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: # Process this file with autoconf to produce a configure script.",
      "4: AC_PREREQ([2.60])",
      "6: AC_CONFIG_SRCDIR([src/sniproxy.c])",
      "7: AC_CONFIG_MACRO_DIR([m4])",
      "8: AM_INIT_AUTOMAKE([subdir-objects])",
      "",
      "[Removed Lines]",
      "5: AC_INIT([sniproxy], [0.6.0])",
      "",
      "[Added Lines]",
      "5: AC_INIT([sniproxy], [0.6.1])",
      "",
      "---------------"
    ],
    "redhat/sniproxy.spec||redhat/sniproxy.spec": [
      "File: redhat/sniproxy.spec -> redhat/sniproxy.spec",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: Name: sniproxy",
      "3: Release: 1%{?dist}",
      "4: Summary: Transparent TLS and HTTP layer 4 proxy with SNI support",
      "",
      "[Removed Lines]",
      "2: Version: 0.6.0",
      "",
      "[Added Lines]",
      "2: Version: 0.6.1",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "48: %changelog",
      "50: - PROXY v1 protocol support",
      "51: - SO_REUSEPORT support on Linux 3.9 and later",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "50: - Fix buffer overflow in address module",
      "51: - Fix tests",
      "",
      "---------------"
    ],
    "setver.sh||setver.sh": [
      "File: setver.sh -> setver.sh",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #!/bin/sh",
      "5: SOURCE_DIR=$(dirname $0)",
      "6: GIT_DIR=${SOURCE_DIR}/.git",
      "",
      "[Removed Lines]",
      "3: VERSION=0.6.0",
      "",
      "[Added Lines]",
      "3: VERSION=0.6.1",
      "",
      "---------------"
    ],
    "src/address.c||src/address.c": [
      "File: src/address.c -> src/address.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "148:     if (hostname_or_ip[0] == '[' &&",
      "149:             (port = strchr(hostname_or_ip, ']')) != NULL) {",
      "150:         len = (size_t)(port - hostname_or_ip - 1);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "151:         if (len >= INET6_ADDRSTRLEN)",
      "152:             return NULL;",
      "",
      "---------------"
    ],
    "tests/Makefile.am||tests/Makefile.am": [
      "File: tests/Makefile.am -> tests/Makefile.am",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: AM_CPPFLAGS = -I$(top_srcdir)/src -g $(LIBEV_CFLAGS) $(LIBPCRE_CFLAGS) $(LIBUDNS_CFLAGS)",
      "2: AM_CFLAGS = -fno-strict-aliasing -Wall -Wextra -Wpedantic -Wwrite-strings",
      "4: TESTS = address_test \\",
      "5:         buffer_test \\",
      "6:         cfg_tokenizer_test \\",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4: .NOTPARALLEL:",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "62e621f050f79eb78598b1296a089ef88a19ea91",
      "candidate_info": {
        "commit_hash": "62e621f050f79eb78598b1296a089ef88a19ea91",
        "repo": "dlundquist/sniproxy",
        "commit_url": "https://github.com/dlundquist/sniproxy/commit/62e621f050f79eb78598b1296a089ef88a19ea91",
        "files": [
          "configure.ac",
          "debian/changelog",
          "debian/rules",
          "src/Makefile.am",
          "src/connection.c",
          "src/resolv.c"
        ],
        "message": "cleanup autoconf and use debhelper",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "src/Makefile.am||src/Makefile.am",
          "src/connection.c||src/connection.c",
          "src/resolv.c||src/resolv.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac"
          ],
          "candidate": [
            "configure.ac||configure.ac"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #                                               -*- Autoconf -*-",
          "2: # Process this file with autoconf to produce a configure script.",
          "8: AM_INIT_AUTOMAKE([subdir-objects])",
          "9: AM_SILENT_RULES([yes])",
          "12: # Checks for programs.",
          "15: AM_PROG_CC_C_O",
          "18: # Checks for libraries.",
          "41: AC_ARG_ENABLE([dns],",
          "54: AC_ARG_ENABLE([rfc3339-timestamps],",
          "55:   [AS_HELP_STRING([--enable-rfc3339-timestamps], [Enable RFC3339 timestamps])],",
          "82: AC_CHECK_FUNCS([accept4])",
          "",
          "[Removed Lines]",
          "4: AC_PREREQ([2.60])",
          "5: AC_INIT([sniproxy], [0.6.1])",
          "6: AC_CONFIG_SRCDIR([src/sniproxy.c])",
          "7: AC_CONFIG_MACRO_DIR([m4])",
          "10: AC_GNU_SOURCE",
          "13: AC_PROG_CC_C99",
          "14: # Required by automake < 1.14",
          "19: PKG_CHECK_MODULES([LIBEV], [libev], HAVE_LIBEV=yes; AC_DEFINE(HAVE_LIBEV, 1),",
          "20: [AC_LIB_HAVE_LINKFLAGS(ev,, [#include <ev.h>], [ev_run(0,0);])",
          "21:  if test x$ac_cv_libev = xyes; then",
          "22:   AC_SUBST([LIBEV_LIBS], [$LIBEV])",
          "23:  else",
          "24:   AC_MSG_ERROR([[***",
          "27:  fi",
          "28: ])",
          "30: PKG_CHECK_MODULES([LIBPCRE], [libpcre], HAVE_LIBPCRE=yes; AC_DEFINE(HAVE_LIBPCRE, 1),",
          "31: [AC_LIB_HAVE_LINKFLAGS(pcre,, [#include <pcre.h>], [pcre_exec(0,0,0,0,0,0,0,0);])",
          "32:  if test x$ac_cv_libpcre = xyes; then",
          "33:   AC_SUBST([LIBPCRE_LIBS], [$LIBPCRE])",
          "34:  else",
          "35:   AC_MSG_ERROR([[***",
          "38:  fi",
          "39: ])",
          "42:   [AS_HELP_STRING([--disable-dns], [Disable DNS resolution])],",
          "43:   [dns=\"$withval\"], [dns=yes])",
          "45: AM_CONDITIONAL([DNS_ENABLED], [test \"x$dns\" = \"xyes\"])",
          "47: AS_IF([test \"x$dns\" = \"xyes\"],",
          "48:  [PKG_CHECK_MODULES([LIBUDNS], [libudns], HAVE_LIBUDNS=yes; AC_DEFINE(HAVE_LIBUDNS, 1),",
          "49:   [AC_LIB_HAVE_LINKFLAGS(udns,, [#include <udns.h>], [dns_init(0, 0);])",
          "50:    AS_IF([test x$ac_cv_libudns = xyes], [AC_SUBST([LIBUDNS_LIBS], [$LIBUDNS])])",
          "51:   ])",
          "52: ])",
          "56:   [rfc3339_timestamps=${enableval}], [rfc3339_timestamps=no])",
          "58: AS_IF([test \"x$rfc3339_timestamps\" = \"xyes\"],",
          "59:     [AC_DEFINE([RFC3339_TIMESTAMP], 1, [RFC3339 timestamps enabled])])",
          "61: # Checks for header files.",
          "62: AC_CHECK_HEADERS([arpa/inet.h fcntl.h inttypes.h netdb.h netinet/in.h stddef.h stdint.h stdlib.h string.h strings.h sys/socket.h sys/time.h syslog.h unistd.h],,",
          "63:     AC_MSG_ERROR([required header(s) not found]))",
          "65: # Checks for typedefs, structures, and compiler characteristics.",
          "66: AC_C_INLINE",
          "67: AC_TYPE_PID_T",
          "68: AC_TYPE_UID_T",
          "69: AC_TYPE_SIZE_T",
          "70: AC_TYPE_SSIZE_T",
          "71: AC_TYPE_UINT16_T",
          "72: AC_TYPE_UINT8_T",
          "74: # Checks for library functions.",
          "75: AC_FUNC_FORK",
          "76: AC_FUNC_MALLOC",
          "77: AC_FUNC_REALLOC",
          "78: AC_FUNC_STRTOD",
          "79: AC_CHECK_FUNCS([atexit daemon memset socket strcasecmp strchr strdup strerror strncasecmp strrchr strspn strtoul],,",
          "80:     AC_MSG_ERROR([required functions(s) not found]))",
          "",
          "[Added Lines]",
          "4: AC_PREREQ([2.71])",
          "5: AC_INIT([sniproxy],[0.6.1])",
          "8: AC_USE_SYSTEM_EXTENSIONS",
          "11: AC_PROG_CC",
          "16: AC_CHECK_LIB([ev], [ev_run])",
          "17: AC_CHECK_LIB([pcre], [pcre_exec])",
          "20:   [AS_HELP_STRING([--enable-dns], [Enable DNS resolution])])",
          "22: AM_CONDITIONAL([DNS_ENABLED], [test \"$enable_dns\"])",
          "24: AS_IF([test \"$enable_dns\"],",
          "25:       [AC_CHECK_LIB([udns], [dns_init])])",
          "29:   [AC_DEFINE([RFC3339_TIMESTAMP], 1, [RFC3339 timestamps enabled])])",
          "",
          "---------------"
        ],
        "src/Makefile.am||src/Makefile.am": [
          "File: src/Makefile.am -> src/Makefile.am",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: AM_CFLAGS = -fno-strict-aliasing -Wall -Wextra -Wpedantic -Wwrite-strings",
          "4: sbin_PROGRAMS = sniproxy",
          "",
          "[Removed Lines]",
          "1: AM_CPPFLAGS = $(LIBEV_CFLAGS) $(LIBPCRE_CFLAGS) $(LIBUDNS_CFLAGS)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:                    table.h \\",
          "34:                    tls.c \\",
          "35:                    tls.h",
          "",
          "[Removed Lines]",
          "37: sniproxy_LDADD = $(LIBEV_LIBS) $(LIBPCRE_LIBS) $(LIBUDNS_LIBS)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "src/connection.c||src/connection.c": [
          "File: src/connection.c -> src/connection.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "504:             free((void *)result.address);",
          "506:         abort_connection(con);",
          "507:         return;",
          "508: #else",
          "509:         struct resolv_cb_data *cb_data = malloc(sizeof(struct resolv_cb_data));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "507:         (void)loop;",
          "508:         (void)free_resolv_cb_data;",
          "509:         (void)resolv_cb;",
          "",
          "---------------"
        ],
        "src/resolv.c||src/resolv.c": [
          "File: src/resolv.c -> src/resolv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "48: int",
          "49: resolv_init(struct ev_loop *loop, char **nameservers, char **search_domains,",
          "50:         int mode) {",
          "51:     return 0;",
          "52: }",
          "54: void",
          "55: resolv_shutdown(struct ev_loop *loop) {",
          "56: }",
          "58: struct ResolvQuery *",
          "59: resolv_query(const char *hostname, int mode,",
          "60:         void (*client_cb)(struct Address *, void *),",
          "61:         void (*client_free_cb)(void *), void *client_cb_data) {",
          "62:     return NULL;",
          "63: }",
          "65: void",
          "66: resolv_cancel(struct ResolvQuery *query_handle) {",
          "67: }",
          "69: #else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:     (void)loop;",
          "52:     (void)nameservers;",
          "53:     (void)search_domains;",
          "54:     (void)mode;",
          "61:     (void)loop;",
          "68:     (void)hostname;",
          "69:     (void)mode;",
          "70:     (void)client_cb;",
          "71:     (void)client_free_cb;",
          "72:     (void)client_cb_data;",
          "79:     (void)query_handle;",
          "",
          "---------------"
        ]
      }
    }
  ]
}