{
  "cve_id": "CVE-2017-13005",
  "cve_desc": "The NFS parser in tcpdump before 4.9.2 has a buffer over-read in print-nfs.c:xid_map_enter().",
  "repo": "the-tcpdump-group/tcpdump",
  "patch_hash": "b45a9a167ca6a3ef2752ae9d48d56ac14b001bfd",
  "patch_info": {
    "commit_hash": "b45a9a167ca6a3ef2752ae9d48d56ac14b001bfd",
    "repo": "the-tcpdump-group/tcpdump",
    "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/b45a9a167ca6a3ef2752ae9d48d56ac14b001bfd",
    "files": [
      "print-nfs.c",
      "tests/TESTLIST",
      "tests/hoobr_nfs_xid_map_enter.out",
      "tests/hoobr_nfs_xid_map_enter.pcap"
    ],
    "message": "CVE-2017-13005/NFS: Add two bounds checks before fetching data\n\nThis fixes a buffer over-read discovered by Kamil Frankowicz.\n\nAdd a test using the capture file supplied by the reporter(s).",
    "before_after_code_files": [
      "print-nfs.c||print-nfs.c"
    ]
  },
  "patch_diff": {
    "print-nfs.c||print-nfs.c": [
      "File: print-nfs.c -> print-nfs.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "899:   UNALIGNED_MEMCPY(&xmep->client, &ip6->ip6_src, sizeof(ip6->ip6_src));",
      "900:   UNALIGNED_MEMCPY(&xmep->server, &ip6->ip6_dst, sizeof(ip6->ip6_dst));",
      "901:  }",
      "902:  xmep->proc = EXTRACT_32BITS(&rp->rm_call.cb_proc);",
      "903:  xmep->vers = EXTRACT_32BITS(&rp->rm_call.cb_vers);",
      "904:  return (1);",
      "905: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "902:  if (!ND_TTEST(rp->rm_call.cb_proc))",
      "903:   return (0);",
      "905:  if (!ND_TTEST(rp->rm_call.cb_vers))",
      "906:   return (0);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "9aa08721e762192e32594989a3f8c6a0682bcef8",
      "candidate_info": {
        "commit_hash": "9aa08721e762192e32594989a3f8c6a0682bcef8",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/9aa08721e762192e32594989a3f8c6a0682bcef8",
        "files": [
          "print-nfs.c"
        ],
        "message": "NFS: Check for all relevant RPC call body fields at the beginning.\n\nIf we don't have the procedure number, we'll give up eventually; might\nas well give up before we do any work that'll be thrown away.",
        "before_after_code_files": [
          "print-nfs.c||print-nfs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-nfs.c||print-nfs.c"
          ],
          "candidate": [
            "print-nfs.c||print-nfs.c"
          ]
        }
      },
      "candidate_diff": {
        "print-nfs.c||print-nfs.c": [
          "File: print-nfs.c -> print-nfs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "870:  const struct ip6_hdr *ip6 = NULL;",
          "871:  struct xid_map_entry *xmep;",
          "874:   return (0);",
          "875:  switch (IP_V((const struct ip *)bp)) {",
          "876:  case 4:",
          "",
          "[Removed Lines]",
          "873:  if (!ND_TTEST(rp->rm_call.cb_vers))",
          "",
          "[Added Lines]",
          "873:  if (!ND_TTEST(rp->rm_call.cb_proc))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "899:   UNALIGNED_MEMCPY(&xmep->client, &ip6->ip6_src, sizeof(ip6->ip6_src));",
          "900:   UNALIGNED_MEMCPY(&xmep->server, &ip6->ip6_dst, sizeof(ip6->ip6_dst));",
          "901:  }",
          "904:  xmep->proc = EXTRACT_32BITS(&rp->rm_call.cb_proc);",
          "907:  xmep->vers = EXTRACT_32BITS(&rp->rm_call.cb_vers);",
          "908:  return (1);",
          "909: }",
          "",
          "[Removed Lines]",
          "902:  if (!ND_TTEST(rp->rm_call.cb_proc))",
          "903:   return (0);",
          "905:  if (!ND_TTEST(rp->rm_call.cb_vers))",
          "906:   return (0);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}