{
  "cve_id": "CVE-2023-47625",
  "cve_desc": "PX4 autopilot is a flight control solution for drones. In affected versions a global buffer overflow vulnerability exists in the CrsfParser_TryParseCrsfPacket function in /src/drivers/rc/crsf_rc/CrsfParser.cpp:298 due to the invalid size check. A malicious user may create an RC packet remotely and that packet goes into the device where the _rcs_buf reads. The global buffer overflow vulnerability will be triggered and the drone can behave unexpectedly. This issue has been addressed in version 1.14.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "repo": "PX4/PX4-Autopilot",
  "patch_hash": "d1fcd39a44e6312582c6ab02b0d5ee2599fb55aa",
  "patch_info": {
    "commit_hash": "d1fcd39a44e6312582c6ab02b0d5ee2599fb55aa",
    "repo": "PX4/PX4-Autopilot",
    "commit_url": "https://github.com/PX4/PX4-Autopilot/commit/d1fcd39a44e6312582c6ab02b0d5ee2599fb55aa",
    "files": [
      "src/drivers/rc/crsf_rc/CrsfParser.cpp"
    ],
    "message": "fix crsf_rc: prevent potential buffer overflow for unknown packets\n\nThe length check for unknown packets did not include PACKET_SIZE_TYPE_SIZE\nand CRC_SIZE, and hence working_index could overflow CRSF_MAX_PACKET_LEN,\ntriggering invalid memory access further down in QueueBuffer_PeekBuffer.\n\nAlso the working_segment_size was wrong for unknown packets.\n\nCredits for finding this go to @Pwn9uin.",
    "before_after_code_files": [
      "src/drivers/rc/crsf_rc/CrsfParser.cpp||src/drivers/rc/crsf_rc/CrsfParser.cpp"
    ]
  },
  "patch_diff": {
    "src/drivers/rc/crsf_rc/CrsfParser.cpp||src/drivers/rc/crsf_rc/CrsfParser.cpp": [
      "File: src/drivers/rc/crsf_rc/CrsfParser.cpp -> src/drivers/rc/crsf_rc/CrsfParser.cpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "293:    } else {",
      "299:      parser_statistics->invalid_unknown_packet_sizes++;",
      "300:      parser_state = PARSER_STATE_HEADER;",
      "301:      working_segment_size = HEADER_SIZE;",
      "",
      "[Removed Lines]",
      "296:     working_segment_size = packet_size + PACKET_SIZE_TYPE_SIZE;",
      "298:     if (working_segment_size > CRSF_MAX_PACKET_LEN) {",
      "",
      "[Added Lines]",
      "296:     working_segment_size = packet_size - PACKET_SIZE_TYPE_SIZE;",
      "298:     if (working_index + working_segment_size + CRC_SIZE > CRSF_MAX_PACKET_LEN) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e961b29c56797dec25e2ac5cf2959036c328778d",
      "candidate_info": {
        "commit_hash": "e961b29c56797dec25e2ac5cf2959036c328778d",
        "repo": "PX4/PX4-Autopilot",
        "commit_url": "https://github.com/PX4/PX4-Autopilot/commit/e961b29c56797dec25e2ac5cf2959036c328778d",
        "files": [
          "src/drivers/rc/crsf_rc/CrsfParser.cpp"
        ],
        "message": "fix crsf_rc: prevent potential buffer overflow for unknown packets\n\nThe length check for unknown packets did not include PACKET_SIZE_TYPE_SIZE\nand CRC_SIZE, and hence working_index could overflow CRSF_MAX_PACKET_LEN,\ntriggering invalid memory access further down in QueueBuffer_PeekBuffer.\n\nAlso the working_segment_size was wrong for unknown packets.\n\nCredits for finding this go to @Pwn9uin.",
        "before_after_code_files": [
          "src/drivers/rc/crsf_rc/CrsfParser.cpp||src/drivers/rc/crsf_rc/CrsfParser.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/drivers/rc/crsf_rc/CrsfParser.cpp||src/drivers/rc/crsf_rc/CrsfParser.cpp"
          ],
          "candidate": [
            "src/drivers/rc/crsf_rc/CrsfParser.cpp||src/drivers/rc/crsf_rc/CrsfParser.cpp"
          ]
        }
      },
      "candidate_diff": {
        "src/drivers/rc/crsf_rc/CrsfParser.cpp||src/drivers/rc/crsf_rc/CrsfParser.cpp": [
          "File: src/drivers/rc/crsf_rc/CrsfParser.cpp -> src/drivers/rc/crsf_rc/CrsfParser.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "293:    } else {",
          "299:      parser_statistics->invalid_unknown_packet_sizes++;",
          "300:      parser_state = PARSER_STATE_HEADER;",
          "301:      working_segment_size = HEADER_SIZE;",
          "",
          "[Removed Lines]",
          "296:     working_segment_size = packet_size + PACKET_SIZE_TYPE_SIZE;",
          "298:     if (working_segment_size > CRSF_MAX_PACKET_LEN) {",
          "",
          "[Added Lines]",
          "296:     working_segment_size = packet_size - PACKET_SIZE_TYPE_SIZE;",
          "298:     if (working_index + working_segment_size + CRC_SIZE > CRSF_MAX_PACKET_LEN) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}