{
  "cve_id": "CVE-2024-23836",
  "cve_desc": "Suricata is a network Intrusion Detection System, Intrusion Prevention System and Network Security Monitoring engine. Prior to versions 6.0.16 and 7.0.3, an attacker can craft traffic to cause Suricata to use far more CPU and memory for processing the traffic than needed, which can lead to extreme slow downs and denial of service.  This vulnerability is patched in 6.0.16 or 7.0.3.  Workarounds include disabling the affected protocol app-layer parser in the yaml and reducing the `stream.reassembly.depth` value helps reduce the severity of the issue.",
  "repo": "OISF/suricata",
  "patch_hash": "f9de1cca6182e571f1c02387dca6e695e55608af",
  "patch_info": {
    "commit_hash": "f9de1cca6182e571f1c02387dca6e695e55608af",
    "repo": "OISF/suricata",
    "commit_url": "https://github.com/OISF/suricata/commit/f9de1cca6182e571f1c02387dca6e695e55608af",
    "files": [
      "doc/userguide/configuration/suricata-yaml.rst",
      "src/app-layer-smtp.c",
      "src/app-layer-smtp.h",
      "suricata.yaml.in"
    ],
    "message": "smtp: config limit maximum number of live transactions\n\nTicket: #6477\n(cherry picked from commit 8f73a0ac5588cb5e5c501b3c7a07cb5d35b99d92)",
    "before_after_code_files": [
      "src/app-layer-smtp.c||src/app-layer-smtp.c",
      "src/app-layer-smtp.h||src/app-layer-smtp.h",
      "suricata.yaml.in||suricata.yaml.in"
    ]
  },
  "patch_diff": {
    "src/app-layer-smtp.c||src/app-layer-smtp.c": [
      "File: src/app-layer-smtp.c -> src/app-layer-smtp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "112: #define SMTP_EHLO_EXTENSION_STARTTLS",
      "113: #define SMTP_EHLO_EXTENSION_8BITMIME",
      "115: typedef struct SMTPInput_ {",
      "117:     const uint8_t *buf;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "115: #define SMTP_DEFAULT_MAX_TX 256",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "421:         smtp_config.raw_extraction = 0;",
      "422:     }",
      "424:     SCReturn;",
      "425: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "426:     uint64_t value = SMTP_DEFAULT_MAX_TX;",
      "427:     smtp_config.max_tx = SMTP_DEFAULT_MAX_TX;",
      "428:     const char *str = NULL;",
      "429:     if (ConfGet(\"app-layer.protocols.smtp.max-tx\", &str) == 1) {",
      "430:         if (ParseSizeStringU64(str, &value) < 0) {",
      "431:             SCLogWarning(\"max-tx value cannot be deduced: %s,\"",
      "432:                          \" keeping default\",",
      "433:                     str);",
      "434:         }",
      "435:         smtp_config.max_tx = value;",
      "436:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "436:     SCLogDebug(\"couldn't set event %u\", e);",
      "437: }",
      "440: {",
      "441:     SMTPTransaction *tx = SCCalloc(1, sizeof(*tx));",
      "442:     if (tx == NULL) {",
      "443:         return NULL;",
      "",
      "[Removed Lines]",
      "439: static SMTPTransaction *SMTPTransactionCreate(void)",
      "",
      "[Added Lines]",
      "453: static SMTPTransaction *SMTPTransactionCreate(SMTPState *state)",
      "455:     if (state->tx_cnt > smtp_config.max_tx) {",
      "456:         return NULL;",
      "457:     }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1170:         return 0;",
      "1171:     }",
      "1172:     if (state->curr_tx == NULL || (state->curr_tx->done && !NoNewTx(state, line))) {",
      "1174:         if (tx == NULL)",
      "1175:             return -1;",
      "1176:         state->curr_tx = tx;",
      "",
      "[Removed Lines]",
      "1173:         tx = SMTPTransactionCreate();",
      "",
      "[Added Lines]",
      "1190:         tx = SMTPTransactionCreate(state);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1204:                     SMTPSetEvent(state, SMTP_DECODER_EVENT_UNPARSABLE_CONTENT);",
      "1205:                     FileCloseFile(&tx->files_ts, &smtp_config.sbcfg, NULL, 0, FILE_TRUNCATED);",
      "1207:                     if (tx == NULL)",
      "1208:                         return -1;",
      "1209:                     state->curr_tx = tx;",
      "",
      "[Removed Lines]",
      "1206:                     tx = SMTPTransactionCreate();",
      "",
      "[Added Lines]",
      "1223:                     tx = SMTPTransactionCreate(state);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1222:                     tx->mime_state->state_flag = PARSE_ERROR;",
      "1223:                     SMTPSetEvent(state, SMTP_DECODER_EVENT_UNPARSABLE_CONTENT);",
      "1225:                     if (tx == NULL)",
      "1226:                         return -1;",
      "1227:                     state->curr_tx = tx;",
      "",
      "[Removed Lines]",
      "1224:                     tx = SMTPTransactionCreate();",
      "",
      "[Added Lines]",
      "1241:                     tx = SMTPTransactionCreate(state);",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1935:     smtp_config.content_inspect_window = FILEDATA_CONTENT_INSPECT_WINDOW;",
      "1936:     smtp_config.content_inspect_min_size = FILEDATA_CONTENT_INSPECT_MIN_SIZE;",
      "1938:     smtp_config.sbcfg.buf_size = FILEDATA_CONTENT_INSPECT_WINDOW;",
      "1939: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1955:     smtp_config.max_tx = SMTP_DEFAULT_MAX_TX;",
      "",
      "---------------"
    ],
    "src/app-layer-smtp.h||src/app-layer-smtp.h": [
      "File: src/app-layer-smtp.h -> src/app-layer-smtp.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "101:     uint32_t content_limit;",
      "102:     uint32_t content_inspect_min_size;",
      "103:     uint32_t content_inspect_window;",
      "105:     bool raw_extraction;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "104:     uint64_t max_tx;",
      "",
      "---------------"
    ],
    "suricata.yaml.in||suricata.yaml.in": [
      "File: suricata.yaml.in -> suricata.yaml.in",
      "--- Hunk 1 ---",
      "[Context before]",
      "939:     smtp:",
      "940:       enabled: yes",
      "941:       raw-extraction: no",
      "942:       # Configure SMTP-MIME Decoder",
      "943:       mime:",
      "944:         # Decode MIME messages from SMTP transactions",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "942:       # Maximum number of live SMTP transactions per flow",
      "943:       # max-tx: 256",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2a2120ecf10c5b5713ec2bf59469fe57f7b5b747",
      "candidate_info": {
        "commit_hash": "2a2120ecf10c5b5713ec2bf59469fe57f7b5b747",
        "repo": "OISF/suricata",
        "commit_url": "https://github.com/OISF/suricata/commit/2a2120ecf10c5b5713ec2bf59469fe57f7b5b747",
        "files": [
          "src/app-layer-smtp.c",
          "src/app-layer-smtp.h"
        ],
        "message": "smtp: config limit maximum number of live transactions\n\nUnlike the original commit, this fix just sets a limit but does not\nexpose it as a configurable option.\n\nTicket: #6477\n\n(cherry picked from commit 8f73a0ac5588cb5e5c501b3c7a07cb5d35b99d92)",
        "before_after_code_files": [
          "src/app-layer-smtp.c||src/app-layer-smtp.c",
          "src/app-layer-smtp.h||src/app-layer-smtp.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/app-layer-smtp.c||src/app-layer-smtp.c",
            "src/app-layer-smtp.h||src/app-layer-smtp.h"
          ],
          "candidate": [
            "src/app-layer-smtp.c||src/app-layer-smtp.c",
            "src/app-layer-smtp.h||src/app-layer-smtp.h"
          ]
        }
      },
      "candidate_diff": {
        "src/app-layer-smtp.c||src/app-layer-smtp.c": [
          "File: src/app-layer-smtp.c -> src/app-layer-smtp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "111: #define SMTP_EHLO_EXTENSION_STARTTLS",
          "112: #define SMTP_EHLO_EXTENSION_8BITMIME",
          "114: SCEnumCharMap smtp_decoder_event_table[] = {",
          "115:     { \"INVALID_REPLY\", SMTP_DECODER_EVENT_INVALID_REPLY },",
          "116:     { \"UNABLE_TO_MATCH_REPLY_WITH_REQUEST\", SMTP_DECODER_EVENT_UNABLE_TO_MATCH_REPLY_WITH_REQUEST },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "114: #define SMTP_DEFAULT_MAX_TX 256",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218: };",
          "223: static SMTPString *SMTPStringAlloc(void);",
          "224: static int SMTPPreProcessCommands(SMTPState *state, Flow *f, AppLayerParserState *pstate);",
          "",
          "[Removed Lines]",
          "221: SMTPConfig smtp_config = { 0, { 0, 0, 0, 0, 0 }, 0, 0, 0, 0, STREAMING_BUFFER_CONFIG_INITIALIZER};",
          "",
          "[Added Lines]",
          "223: SMTPConfig smtp_config = { 0, { 0, 0, 0, 0, 0 }, 0, 0, 0, SMTP_DEFAULT_MAX_TX, 0,",
          "224:     STREAMING_BUFFER_CONFIG_INITIALIZER };",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "327:         smtp_config.raw_extraction = 0;",
          "328:     }",
          "330:     SCReturn;",
          "331: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "333:     smtp_config.max_tx = SMTP_DEFAULT_MAX_TX;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "342:     SCLogDebug(\"couldn't set event %u\", e);",
          "343: }",
          "346: {",
          "347:     SMTPTransaction *tx = SCCalloc(1, sizeof(*tx));",
          "348:     if (tx == NULL) {",
          "349:         return NULL;",
          "",
          "[Removed Lines]",
          "345: static SMTPTransaction *SMTPTransactionCreate(void)",
          "",
          "[Added Lines]",
          "350: static SMTPTransaction *SMTPTransactionCreate(SMTPState *state)",
          "352:     if (state->tx_cnt > smtp_config.max_tx) {",
          "353:         return NULL;",
          "354:     }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1081:         return 0;",
          "1082:     }",
          "1083:     if (state->curr_tx == NULL || (state->curr_tx->done && !NoNewTx(state))) {",
          "1085:         if (tx == NULL)",
          "1086:             return -1;",
          "1087:         state->curr_tx = tx;",
          "",
          "[Removed Lines]",
          "1084:         tx = SMTPTransactionCreate();",
          "",
          "[Added Lines]",
          "1092:         tx = SMTPTransactionCreate(state);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1125:                     SMTPSetEvent(state, SMTP_DECODER_EVENT_UNPARSABLE_CONTENT);",
          "1126:                     FileCloseFile(state->files_ts, NULL, 0, FILE_TRUNCATED);",
          "1128:                     if (tx == NULL)",
          "1129:                         return -1;",
          "1130:                     state->curr_tx = tx;",
          "",
          "[Removed Lines]",
          "1127:                     tx = SMTPTransactionCreate();",
          "",
          "[Added Lines]",
          "1135:                     tx = SMTPTransactionCreate(state);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1144:                     tx->mime_state->state_flag = PARSE_ERROR;",
          "1145:                     SMTPSetEvent(state, SMTP_DECODER_EVENT_UNPARSABLE_CONTENT);",
          "1147:                     if (tx == NULL)",
          "1148:                         return -1;",
          "1149:                     state->curr_tx = tx;",
          "",
          "[Removed Lines]",
          "1146:                     tx = SMTPTransactionCreate();",
          "",
          "[Added Lines]",
          "1154:                     tx = SMTPTransactionCreate(state);",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1905:     smtp_config.content_inspect_window = FILEDATA_CONTENT_INSPECT_WINDOW;",
          "1906:     smtp_config.content_inspect_min_size = FILEDATA_CONTENT_INSPECT_MIN_SIZE;",
          "1908:     smtp_config.sbcfg.buf_size = FILEDATA_CONTENT_INSPECT_WINDOW;",
          "1909: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1916:     smtp_config.max_tx = SMTP_DEFAULT_MAX_TX;",
          "",
          "---------------"
        ],
        "src/app-layer-smtp.h||src/app-layer-smtp.h": [
          "File: src/app-layer-smtp.h -> src/app-layer-smtp.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:     uint32_t content_limit;",
          "104:     uint32_t content_inspect_min_size;",
          "105:     uint32_t content_inspect_window;",
          "107:     int raw_extraction;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "106:     uint64_t max_tx;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8f73a0ac5588cb5e5c501b3c7a07cb5d35b99d92",
      "candidate_info": {
        "commit_hash": "8f73a0ac5588cb5e5c501b3c7a07cb5d35b99d92",
        "repo": "OISF/suricata",
        "commit_url": "https://github.com/OISF/suricata/commit/8f73a0ac5588cb5e5c501b3c7a07cb5d35b99d92",
        "files": [
          "doc/userguide/configuration/suricata-yaml.rst",
          "src/app-layer-smtp.c",
          "src/app-layer-smtp.h",
          "suricata.yaml.in"
        ],
        "message": "smtp: config limit maximum number of live transactions\n\nTicket: #6477",
        "before_after_code_files": [
          "src/app-layer-smtp.c||src/app-layer-smtp.c",
          "src/app-layer-smtp.h||src/app-layer-smtp.h",
          "suricata.yaml.in||suricata.yaml.in"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/app-layer-smtp.c||src/app-layer-smtp.c",
            "src/app-layer-smtp.h||src/app-layer-smtp.h",
            "suricata.yaml.in||suricata.yaml.in"
          ],
          "candidate": [
            "src/app-layer-smtp.c||src/app-layer-smtp.c",
            "src/app-layer-smtp.h||src/app-layer-smtp.h",
            "suricata.yaml.in||suricata.yaml.in"
          ]
        }
      },
      "candidate_diff": {
        "src/app-layer-smtp.c||src/app-layer-smtp.c": [
          "File: src/app-layer-smtp.c -> src/app-layer-smtp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "112: #define SMTP_EHLO_EXTENSION_STARTTLS",
          "113: #define SMTP_EHLO_EXTENSION_8BITMIME",
          "115: typedef struct SMTPInput_ {",
          "117:     const uint8_t *buf;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "115: #define SMTP_DEFAULT_MAX_TX 256",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "421:         smtp_config.raw_extraction = 0;",
          "422:     }",
          "424:     SCReturn;",
          "425: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "426:     uint64_t value = SMTP_DEFAULT_MAX_TX;",
          "427:     smtp_config.max_tx = SMTP_DEFAULT_MAX_TX;",
          "428:     const char *str = NULL;",
          "429:     if (ConfGet(\"app-layer.protocols.smtp.max-tx\", &str) == 1) {",
          "430:         if (ParseSizeStringU64(str, &value) < 0) {",
          "431:             SCLogWarning(\"max-tx value cannot be deduced: %s,\"",
          "432:                          \" keeping default\",",
          "433:                     str);",
          "434:         }",
          "435:         smtp_config.max_tx = value;",
          "436:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "436:     SCLogDebug(\"couldn't set event %u\", e);",
          "437: }",
          "440: {",
          "441:     SMTPTransaction *tx = SCCalloc(1, sizeof(*tx));",
          "442:     if (tx == NULL) {",
          "443:         return NULL;",
          "",
          "[Removed Lines]",
          "439: static SMTPTransaction *SMTPTransactionCreate(void)",
          "",
          "[Added Lines]",
          "453: static SMTPTransaction *SMTPTransactionCreate(SMTPState *state)",
          "455:     if (state->tx_cnt > smtp_config.max_tx) {",
          "456:         return NULL;",
          "457:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1170:         return 0;",
          "1171:     }",
          "1172:     if (state->curr_tx == NULL || (state->curr_tx->done && !NoNewTx(state, line))) {",
          "1174:         if (tx == NULL)",
          "1175:             return -1;",
          "1176:         state->curr_tx = tx;",
          "",
          "[Removed Lines]",
          "1173:         tx = SMTPTransactionCreate();",
          "",
          "[Added Lines]",
          "1190:         tx = SMTPTransactionCreate(state);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1204:                     SMTPSetEvent(state, SMTP_DECODER_EVENT_UNPARSABLE_CONTENT);",
          "1205:                     FileCloseFile(&tx->files_ts, &smtp_config.sbcfg, NULL, 0, FILE_TRUNCATED);",
          "1207:                     if (tx == NULL)",
          "1208:                         return -1;",
          "1209:                     state->curr_tx = tx;",
          "",
          "[Removed Lines]",
          "1206:                     tx = SMTPTransactionCreate();",
          "",
          "[Added Lines]",
          "1223:                     tx = SMTPTransactionCreate(state);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1222:                     tx->mime_state->state_flag = PARSE_ERROR;",
          "1223:                     SMTPSetEvent(state, SMTP_DECODER_EVENT_UNPARSABLE_CONTENT);",
          "1225:                     if (tx == NULL)",
          "1226:                         return -1;",
          "1227:                     state->curr_tx = tx;",
          "",
          "[Removed Lines]",
          "1224:                     tx = SMTPTransactionCreate();",
          "",
          "[Added Lines]",
          "1241:                     tx = SMTPTransactionCreate(state);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1932:     smtp_config.content_inspect_window = FILEDATA_CONTENT_INSPECT_WINDOW;",
          "1933:     smtp_config.content_inspect_min_size = FILEDATA_CONTENT_INSPECT_MIN_SIZE;",
          "1935:     smtp_config.sbcfg.buf_size = FILEDATA_CONTENT_INSPECT_WINDOW;",
          "1936: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1952:     smtp_config.max_tx = SMTP_DEFAULT_MAX_TX;",
          "",
          "---------------"
        ],
        "src/app-layer-smtp.h||src/app-layer-smtp.h": [
          "File: src/app-layer-smtp.h -> src/app-layer-smtp.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "101:     uint32_t content_limit;",
          "102:     uint32_t content_inspect_min_size;",
          "103:     uint32_t content_inspect_window;",
          "105:     bool raw_extraction;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "104:     uint64_t max_tx;",
          "",
          "---------------"
        ],
        "suricata.yaml.in||suricata.yaml.in": [
          "File: suricata.yaml.in -> suricata.yaml.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "934:     smtp:",
          "935:       enabled: yes",
          "936:       raw-extraction: no",
          "937:       # Configure SMTP-MIME Decoder",
          "938:       mime:",
          "939:         # Decode MIME messages from SMTP transactions",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "937:       # Maximum number of live SMTP transactions per flow",
          "938:       # max-tx: 256",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cd035d59e3df157b606f4fe67324ea8e437be786",
      "candidate_info": {
        "commit_hash": "cd035d59e3df157b606f4fe67324ea8e437be786",
        "repo": "OISF/suricata",
        "commit_url": "https://github.com/OISF/suricata/commit/cd035d59e3df157b606f4fe67324ea8e437be786",
        "files": [
          "src/app-layer-smtp.c",
          "src/app-layer-smtp.h"
        ],
        "message": "smtp: avoid creating empty transaction\n\nTicket: 6477\n\nSo as to avoid ending up with too many empty transactions.\n\nThis happens when Suricata sees a DATA command in the current\ntransaction but did not have a confirmation response for it.\nThen, if Suricata receives another DATA command, it will\ncreate another new transaction, even if the previous one\nis empty. And so, a malicious client can create many empty\ntransactions by just sending a repeated amount of DATA commands\nwithout having a confirmation code for them.\n\nSuricata cannot use state->current_command == SMTP_COMMAND_DATA\nto prevent this attack and needs to resort to a new boolean\nis_data because the malicious client may send another dummy command\nafter each DATA command.\n\nThis patch leaves only one call to SMTPTransactionCreate\n\n(cherry picked from commit 61f2e4e1e5b34dfd8ae44d1c15253e2da65f6e6a)",
        "before_after_code_files": [
          "src/app-layer-smtp.c||src/app-layer-smtp.c",
          "src/app-layer-smtp.h||src/app-layer-smtp.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/app-layer-smtp.c||src/app-layer-smtp.c",
            "src/app-layer-smtp.h||src/app-layer-smtp.h"
          ],
          "candidate": [
            "src/app-layer-smtp.c||src/app-layer-smtp.c",
            "src/app-layer-smtp.h||src/app-layer-smtp.h"
          ]
        }
      },
      "candidate_diff": {
        "src/app-layer-smtp.c||src/app-layer-smtp.c": [
          "File: src/app-layer-smtp.c -> src/app-layer-smtp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "819: {",
          "820:     DEBUG_VALIDATE_BUG_ON(state->curr_tx == NULL);",
          "821:     if (state->curr_tx)",
          "823: }",
          "",
          "[Removed Lines]",
          "822:         state->curr_tx->done = 1;",
          "",
          "[Added Lines]",
          "822:         state->curr_tx->done = true;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1215:             state->current_command = SMTP_COMMAND_STARTTLS;",
          "1216:         } else if (line->len >= 4 && SCMemcmpLowercase(\"data\", line->buf, 4) == 0) {",
          "1217:             state->current_command = SMTP_COMMAND_DATA;",
          "1230:                 if (FileOpenFileWithId(&tx->files_ts, &smtp_config.sbcfg, state->file_track_id++,",
          "1231:                             (uint8_t *)rawmsgname, strlen(rawmsgname), NULL, 0,",
          "1232:                             FILE_NOMD5 | FILE_NOMAGIC) == 0) {",
          "1233:                     SMTPNewFile(tx, tx->files_ts.tail);",
          "1234:                 }",
          "1235:             } else if (smtp_config.decode_mime) {",
          "1248:                 tx->mime_state = MimeDecInitParser(f, SMTPProcessDataChunk);",
          "1249:                 if (tx->mime_state == NULL) {",
          "1250:                     return MIME_DEC_ERR_MEM;",
          "",
          "[Removed Lines]",
          "1218:             if (smtp_config.raw_extraction) {",
          "1219:                 if (state->tx_cnt > 1 && !state->curr_tx->done) {",
          "1221:                     SMTPSetEvent(state, SMTP_DECODER_EVENT_UNPARSABLE_CONTENT);",
          "1222:                     FileCloseFile(&tx->files_ts, &smtp_config.sbcfg, NULL, 0, FILE_TRUNCATED);",
          "1223:                     tx = SMTPTransactionCreate(state);",
          "1224:                     if (tx == NULL)",
          "1225:                         return -1;",
          "1226:                     state->curr_tx = tx;",
          "1227:                     TAILQ_INSERT_TAIL(&state->tx_list, tx, next);",
          "1228:                     tx->tx_id = state->tx_cnt++;",
          "1229:                 }",
          "1236:                 if (tx->mime_state) {",
          "1239:                     tx->mime_state->state_flag = PARSE_ERROR;",
          "1240:                     SMTPSetEvent(state, SMTP_DECODER_EVENT_UNPARSABLE_CONTENT);",
          "1241:                     tx = SMTPTransactionCreate(state);",
          "1242:                     if (tx == NULL)",
          "1243:                         return -1;",
          "1244:                     state->curr_tx = tx;",
          "1245:                     TAILQ_INSERT_TAIL(&state->tx_list, tx, next);",
          "1246:                     tx->tx_id = state->tx_cnt++;",
          "1247:                 }",
          "",
          "[Added Lines]",
          "1218:             if (state->curr_tx->is_data) {",
          "1221:                 SMTPSetEvent(state, SMTP_DECODER_EVENT_UNPARSABLE_CONTENT);",
          "1222:                 SCReturnInt(0);",
          "1223:             } else if (smtp_config.raw_extraction) {",
          "1230:                 DEBUG_VALIDATE_BUG_ON(tx->mime_state);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1260:                     tx->msg_tail = tx->mime_state->msg;",
          "1261:                 }",
          "1262:             }",
          "1264:             if (state->parser_state & SMTP_PARSER_STATE_PIPELINING_SERVER) {",
          "1265:                 state->parser_state |= SMTP_PARSER_STATE_COMMAND_DATA_MODE;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1246:             state->curr_tx->is_data = true;",
          "",
          "---------------"
        ],
        "src/app-layer-smtp.h||src/app-layer-smtp.h": [
          "File: src/app-layer-smtp.h -> src/app-layer-smtp.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:     AppLayerTxData tx_data;",
          "80:     MimeDecEntity *msg_head;",
          "",
          "[Removed Lines]",
          "78:     int done;",
          "",
          "[Added Lines]",
          "79:     bool done;",
          "83:     bool is_data;",
          "",
          "---------------"
        ]
      }
    }
  ]
}