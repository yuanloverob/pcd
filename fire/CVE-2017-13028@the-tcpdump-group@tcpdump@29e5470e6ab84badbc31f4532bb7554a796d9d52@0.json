{
  "cve_id": "CVE-2017-13028",
  "cve_desc": "The BOOTP parser in tcpdump before 4.9.2 has a buffer over-read in print-bootp.c:bootp_print().",
  "repo": "the-tcpdump-group/tcpdump",
  "patch_hash": "29e5470e6ab84badbc31f4532bb7554a796d9d52",
  "patch_info": {
    "commit_hash": "29e5470e6ab84badbc31f4532bb7554a796d9d52",
    "repo": "the-tcpdump-group/tcpdump",
    "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/29e5470e6ab84badbc31f4532bb7554a796d9d52",
    "files": [
      "print-bootp.c",
      "tests/TESTLIST",
      "tests/bootp_asan.out",
      "tests/bootp_asan.pcap"
    ],
    "message": "CVE-2017-13028/BOOTP: Add a bounds check before fetching data\n\nThis fixes a buffer over-read discovered by Bhargava Shastry,\nSecT/TU Berlin.\n\nAdd a test using the capture file supplied by the reporter(s), modified\nso the capture file won't cause 'tcpdump: pcap_loop: truncated dump file'",
    "before_after_code_files": [
      "print-bootp.c||print-bootp.c"
    ]
  },
  "patch_diff": {
    "print-bootp.c||print-bootp.c": [
      "File: print-bootp.c -> print-bootp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "322:  if (EXTRACT_16BITS(&bp->bp_secs))",
      "323:   ND_PRINT((ndo, \", secs %d\", EXTRACT_16BITS(&bp->bp_secs)));",
      "325:  ND_PRINT((ndo, \", Flags [%s]\",",
      "326:     bittok2str(bootp_flag_values, \"none\", EXTRACT_16BITS(&bp->bp_flags))));",
      "327:  if (ndo->ndo_vflag > 1)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "325:  ND_TCHECK(bp->bp_flags);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6475b3c8f020c859e2ce3ebb2c9559cdd1e2b9d0",
      "candidate_info": {
        "commit_hash": "6475b3c8f020c859e2ce3ebb2c9559cdd1e2b9d0",
        "repo": "the-tcpdump-group/tcpdump",
        "commit_url": "https://github.com/the-tcpdump-group/tcpdump/commit/6475b3c8f020c859e2ce3ebb2c9559cdd1e2b9d0",
        "files": [
          "print-bootp.c"
        ],
        "message": "BOOTP: Use more ND_TCHECK_n() macros",
        "before_after_code_files": [
          "print-bootp.c||print-bootp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "print-bootp.c||print-bootp.c"
          ],
          "candidate": [
            "print-bootp.c||print-bootp.c"
          ]
        }
      },
      "candidate_diff": {
        "print-bootp.c||print-bootp.c": [
          "File: print-bootp.c -> print-bootp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "289:  uint8_t bp_op, bp_htype, bp_hlen;",
          "291:  bp = (const struct bootp *)cp;",
          "293:  bp_op = EXTRACT_U_1(bp->bp_op);",
          "294:  ND_PRINT(\"BOOTP/DHCP, %s\",",
          "295:     tok2str(bootp_op_values, \"unknown (0x%02x)\", bp_op));",
          "298:  bp_htype = EXTRACT_U_1(bp->bp_htype);",
          "299:  bp_hlen = EXTRACT_U_1(bp->bp_hlen);",
          "300:  if (bp_htype == 1 && bp_hlen == 6 && bp_op == BOOTPREQUEST) {",
          "",
          "[Removed Lines]",
          "292:  ND_TCHECK(bp->bp_op);",
          "297:  ND_TCHECK(bp->bp_hlen);",
          "",
          "[Added Lines]",
          "292:  ND_TCHECK_1(bp->bp_op);",
          "297:  ND_TCHECK_1(bp->bp_hlen);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "307:  if (!ndo->ndo_vflag)",
          "308:   return;",
          "313:  if (bp_htype != 1)",
          "",
          "[Removed Lines]",
          "310:  ND_TCHECK(bp->bp_secs);",
          "",
          "[Added Lines]",
          "310:  ND_TCHECK_2(bp->bp_secs);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "325:  if (EXTRACT_BE_U_2(bp->bp_secs))",
          "326:   ND_PRINT(\", secs %d\", EXTRACT_BE_U_2(bp->bp_secs));",
          "329:  ND_PRINT(\", Flags [%s]\",",
          "330:     bittok2str(bootp_flag_values, \"none\", EXTRACT_BE_U_2(bp->bp_flags)));",
          "331:  if (ndo->ndo_vflag > 1)",
          "",
          "[Removed Lines]",
          "328:  ND_TCHECK(bp->bp_flags);",
          "",
          "[Added Lines]",
          "328:  ND_TCHECK_2(bp->bp_flags);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1076:  cmu = (const struct cmu_vend *)bp;",
          "1080:  v_flags = EXTRACT_U_1(cmu->v_flags);",
          "1081:  if ((v_flags & ~(VF_SMASK)) != 0)",
          "1082:   ND_PRINT(\" F:0x%x\", v_flags);",
          "",
          "[Removed Lines]",
          "1079:  ND_TCHECK(cmu->v_flags);",
          "",
          "[Added Lines]",
          "1079:  ND_TCHECK_4(cmu->v_flags);",
          "",
          "---------------"
        ]
      }
    }
  ]
}