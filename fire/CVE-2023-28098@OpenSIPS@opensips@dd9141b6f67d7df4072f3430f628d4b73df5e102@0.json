{
  "cve_id": "CVE-2023-28098",
  "cve_desc": "OpenSIPS is a Session Initiation Protocol (SIP) server implementation. Prior to versions 3.1.7 and 3.2.4, a specially crafted Authorization header causes OpenSIPS to crash or behave in an unexpected way due to a bug in the function `parse_param_name()` . This issue was discovered while performing coverage guided fuzzing of the function parse_msg. The AddressSanitizer identified that the issue occurred in the function `q_memchr()` which is being called by the function `parse_param_name()`. This issue may cause erratic program behaviour or a server crash. It affects configurations containing\nfunctions that make use of the affected code, such as the function `www_authorize()` . Versions 3.1.7 and 3.2.4 contain a fix.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "dd9141b6f67d7df4072f3430f628d4b73df5e102",
  "patch_info": {
    "commit_hash": "dd9141b6f67d7df4072f3430f628d4b73df5e102",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/dd9141b6f67d7df4072f3430f628d4b73df5e102",
    "files": [
      "parser/digest/param_parser.c"
    ],
    "message": "parse_param_name(): Improve param parsing macros\n\nIssue discovered during OpenSIPS Security Audit 2021,\n    by Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-jrqg-vppj-hr2h",
    "before_after_code_files": [
      "parser/digest/param_parser.c||parser/digest/param_parser.c"
    ]
  },
  "patch_diff": {
    "parser/digest/param_parser.c||parser/digest/param_parser.c": [
      "File: parser/digest/param_parser.c -> parser/digest/param_parser.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "72: #define READ(val) \\",
      "73: (*(val + 0) + (*(val + 1) << 8) + (*(val + 2) << 16) + (*(val + 3) << 24))",
      "76: #define name_CASE                      \\",
      "77:         switch(LOWER_DWORD(val)) {     \\",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "75: #define NEED(bytes) do { if (end - p < (bytes)) goto other; } while (0)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "85: #define user_CASE         \\",
      "87:         val = READ(p);    \\",
      "88:         name_CASE;        \\",
      "89:         goto other;",
      "92: #define real_CASE                         \\",
      "94:         if (LOWER_BYTE(*p) == 'm') {      \\",
      "96:                 p++;                      \\",
      "97:   goto end;                 \\",
      "101: #define nonc_CASE                         \\",
      "103:         if (LOWER_BYTE(*p) == 'e') {      \\",
      "105:                 p++;                      \\",
      "106:   goto end;                 \\",
      "110: #define onse_CASE                      \\",
      "",
      "[Removed Lines]",
      "86:         p += 4;           \\",
      "93:         p += 4;                           \\",
      "98:  }",
      "102:         p += 4;                           \\",
      "107:  }",
      "",
      "[Added Lines]",
      "87:         p += 4; NEED(4);  \\",
      "94:         p += 4; NEED(1);                  \\",
      "99:  }                                 \\",
      "100:         goto other;",
      "104:         p += 4; NEED(1);                  \\",
      "109:  }                                 \\",
      "110:         goto other;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "119: #define resp_CASE         \\",
      "121:         val = READ(p);    \\",
      "122:         onse_CASE;        \\",
      "123:         goto other;",
      "126: #define cnon_CASE                                 \\",
      "128:         if (LOWER_BYTE(*p) == 'c') {              \\",
      "129:   p++;                              \\",
      "130:   if (LOWER_BYTE(*p) == 'e') {      \\",
      "",
      "[Removed Lines]",
      "120:         p += 4;           \\",
      "127:         p += 4;                                   \\",
      "",
      "[Added Lines]",
      "123:         p += 4; NEED(4);  \\",
      "130:         p += 4; NEED(2);                          \\",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "139: #define opaq_CASE                                 \\",
      "141:         if (LOWER_BYTE(*p) == 'u') {              \\",
      "142:   p++;                              \\",
      "143:   if (LOWER_BYTE(*p) == 'e') {      \\",
      "",
      "[Removed Lines]",
      "140:         p += 4;                                   \\",
      "",
      "[Added Lines]",
      "143:         p += 4; NEED(2);                          \\",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "165: #define algo_CASE         \\",
      "167:         val = READ(p);    \\",
      "168:         rith_CASE;        \\",
      "169:         goto other",
      "",
      "[Removed Lines]",
      "166:         p += 4;           \\",
      "",
      "[Added Lines]",
      "169:         p += 4; NEED(5);  \\",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cf9791fba79544d6dbd1b7497cefb2cc9723ce0a",
      "candidate_info": {
        "commit_hash": "cf9791fba79544d6dbd1b7497cefb2cc9723ce0a",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/cf9791fba79544d6dbd1b7497cefb2cc9723ce0a",
        "files": [
          "parser/digest/param_parser.c"
        ],
        "message": "parse_param_name(): Improve param parsing macros\n\nIssue discovered during OpenSIPS Security Audit 2021,\n    by Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-jrqg-vppj-hr2h\n(cherry picked from commit dd9141b6f67d7df4072f3430f628d4b73df5e102)",
        "before_after_code_files": [
          "parser/digest/param_parser.c||parser/digest/param_parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "parser/digest/param_parser.c||parser/digest/param_parser.c"
          ],
          "candidate": [
            "parser/digest/param_parser.c||parser/digest/param_parser.c"
          ]
        }
      },
      "candidate_diff": {
        "parser/digest/param_parser.c||parser/digest/param_parser.c": [
          "File: parser/digest/param_parser.c -> parser/digest/param_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: #define READ(val) \\",
          "73: (*(val + 0) + (*(val + 1) << 8) + (*(val + 2) << 16) + (*(val + 3) << 24))",
          "76: #define name_CASE                      \\",
          "77:         switch(LOWER_DWORD(val)) {     \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75: #define NEED(bytes) do { if (end - p < (bytes)) goto other; } while (0)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85: #define user_CASE         \\",
          "87:         val = READ(p);    \\",
          "88:         name_CASE;        \\",
          "89:         goto other;",
          "92: #define real_CASE                         \\",
          "94:         if (LOWER_BYTE(*p) == 'm') {      \\",
          "96:                 p++;                      \\",
          "97:   goto end;                 \\",
          "101: #define nonc_CASE                         \\",
          "103:         if (LOWER_BYTE(*p) == 'e') {      \\",
          "105:                 p++;                      \\",
          "106:   goto end;                 \\",
          "110: #define onse_CASE                      \\",
          "",
          "[Removed Lines]",
          "86:         p += 4;           \\",
          "93:         p += 4;                           \\",
          "98:  }",
          "102:         p += 4;                           \\",
          "107:  }",
          "",
          "[Added Lines]",
          "87:         p += 4; NEED(4);  \\",
          "94:         p += 4; NEED(1);                  \\",
          "99:  }                                 \\",
          "100:         goto other;",
          "104:         p += 4; NEED(1);                  \\",
          "109:  }                                 \\",
          "110:         goto other;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "119: #define resp_CASE         \\",
          "121:         val = READ(p);    \\",
          "122:         onse_CASE;        \\",
          "123:         goto other;",
          "126: #define cnon_CASE                                 \\",
          "128:         if (LOWER_BYTE(*p) == 'c') {              \\",
          "129:   p++;                              \\",
          "130:   if (LOWER_BYTE(*p) == 'e') {      \\",
          "",
          "[Removed Lines]",
          "120:         p += 4;           \\",
          "127:         p += 4;                                   \\",
          "",
          "[Added Lines]",
          "123:         p += 4; NEED(4);  \\",
          "130:         p += 4; NEED(2);                          \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "139: #define opaq_CASE                                 \\",
          "141:         if (LOWER_BYTE(*p) == 'u') {              \\",
          "142:   p++;                              \\",
          "143:   if (LOWER_BYTE(*p) == 'e') {      \\",
          "",
          "[Removed Lines]",
          "140:         p += 4;                                   \\",
          "",
          "[Added Lines]",
          "143:         p += 4; NEED(2);                          \\",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "165: #define algo_CASE         \\",
          "167:         val = READ(p);    \\",
          "168:         rith_CASE;        \\",
          "169:         goto other",
          "",
          "[Removed Lines]",
          "166:         p += 4;           \\",
          "",
          "[Added Lines]",
          "169:         p += 4; NEED(5);  \\",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d794870429426c95639ff8284cb25cf3e15f3606",
      "candidate_info": {
        "commit_hash": "d794870429426c95639ff8284cb25cf3e15f3606",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/d794870429426c95639ff8284cb25cf3e15f3606",
        "files": [
          "parser/digest/param_parser.c"
        ],
        "message": "parse_param_name(): Improve param parsing macros\n\nIssue discovered during OpenSIPS Security Audit 2021,\n    by Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-jrqg-vppj-hr2h\n(cherry picked from commit dd9141b6f67d7df4072f3430f628d4b73df5e102)",
        "before_after_code_files": [
          "parser/digest/param_parser.c||parser/digest/param_parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "parser/digest/param_parser.c||parser/digest/param_parser.c"
          ],
          "candidate": [
            "parser/digest/param_parser.c||parser/digest/param_parser.c"
          ]
        }
      },
      "candidate_diff": {
        "parser/digest/param_parser.c||parser/digest/param_parser.c": [
          "File: parser/digest/param_parser.c -> parser/digest/param_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: #define READ(val) \\",
          "73: (*(val + 0) + (*(val + 1) << 8) + (*(val + 2) << 16) + (*(val + 3) << 24))",
          "76: #define name_CASE                      \\",
          "77:         switch(LOWER_DWORD(val)) {     \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75: #define NEED(bytes) do { if (end - p < (bytes)) goto other; } while (0)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85: #define user_CASE         \\",
          "87:         val = READ(p);    \\",
          "88:         name_CASE;        \\",
          "89:         goto other;",
          "92: #define real_CASE                         \\",
          "94:         if (LOWER_BYTE(*p) == 'm') {      \\",
          "96:                 p++;                      \\",
          "97:   goto end;                 \\",
          "101: #define nonc_CASE                         \\",
          "103:         if (LOWER_BYTE(*p) == 'e') {      \\",
          "105:                 p++;                      \\",
          "106:   goto end;                 \\",
          "110: #define onse_CASE                      \\",
          "",
          "[Removed Lines]",
          "86:         p += 4;           \\",
          "93:         p += 4;                           \\",
          "98:  }",
          "102:         p += 4;                           \\",
          "107:  }",
          "",
          "[Added Lines]",
          "87:         p += 4; NEED(4);  \\",
          "94:         p += 4; NEED(1);                  \\",
          "99:  }                                 \\",
          "100:         goto other;",
          "104:         p += 4; NEED(1);                  \\",
          "109:  }                                 \\",
          "110:         goto other;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "119: #define resp_CASE         \\",
          "121:         val = READ(p);    \\",
          "122:         onse_CASE;        \\",
          "123:         goto other;",
          "126: #define cnon_CASE                                 \\",
          "128:         if (LOWER_BYTE(*p) == 'c') {              \\",
          "129:   p++;                              \\",
          "130:   if (LOWER_BYTE(*p) == 'e') {      \\",
          "",
          "[Removed Lines]",
          "120:         p += 4;           \\",
          "127:         p += 4;                                   \\",
          "",
          "[Added Lines]",
          "123:         p += 4; NEED(4);  \\",
          "130:         p += 4; NEED(2);                          \\",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "139: #define opaq_CASE                                 \\",
          "141:         if (LOWER_BYTE(*p) == 'u') {              \\",
          "142:   p++;                              \\",
          "143:   if (LOWER_BYTE(*p) == 'e') {      \\",
          "",
          "[Removed Lines]",
          "140:         p += 4;                                   \\",
          "",
          "[Added Lines]",
          "143:         p += 4; NEED(2);                          \\",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "165: #define algo_CASE         \\",
          "167:         val = READ(p);    \\",
          "168:         rith_CASE;        \\",
          "169:         goto other",
          "",
          "[Removed Lines]",
          "166:         p += 4;           \\",
          "",
          "[Added Lines]",
          "169:         p += 4; NEED(5);  \\",
          "",
          "---------------"
        ]
      }
    }
  ]
}