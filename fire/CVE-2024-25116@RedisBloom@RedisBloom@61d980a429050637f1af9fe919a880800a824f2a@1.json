{
  "cve_id": "CVE-2024-25116",
  "cve_desc": "RedisBloom adds a set of probabilistic data structures to Redis. Starting in version 2.0.0 and prior to version 2.4.7 and 2.6.10, authenticated users can use the `CF.RESERVE` command to trigger a runtime assertion and termination of the Redis server process. The problem is fixed in RedisBloom 2.4.7 and 2.6.10.",
  "repo": "RedisBloom/RedisBloom",
  "patch_hash": "61d980a429050637f1af9fe919a880800a824f2a",
  "patch_info": {
    "commit_hash": "61d980a429050637f1af9fe919a880800a824f2a",
    "repo": "RedisBloom/RedisBloom",
    "commit_url": "https://github.com/RedisBloom/RedisBloom/commit/61d980a429050637f1af9fe919a880800a824f2a",
    "files": [
      "src/rebloom.c",
      "tests/flow/test_cuckoo.py"
    ],
    "message": "MOD-6343 Fix potential crash for cf.reserve (#724)\n\n* Enforce limits for cf.reserve arguments\n\n* comment\n\n* comment-2",
    "before_after_code_files": [
      "src/rebloom.c||src/rebloom.c",
      "tests/flow/test_cuckoo.py||tests/flow/test_cuckoo.py"
    ]
  },
  "patch_diff": {
    "src/rebloom.c||src/rebloom.c": [
      "File: src/rebloom.c -> src/rebloom.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "24: #define REDISBLOOM_GIT_SHA \"unknown\"",
      "25: #endif",
      "28: #define CF_DEFAULT_BUCKETSIZE 2",
      "29: #define CF_DEFAULT_EXPANSION 1",
      "30: #define BF_DEFAULT_EXPANSION 2",
      "",
      "[Removed Lines]",
      "27: #define CF_MAX_ITERATIONS 20",
      "",
      "[Added Lines]",
      "27: #define CF_DEFAULT_MAX_ITERATIONS 20",
      "30: #define CF_MAX_EXPANSION 32768",
      "31: #define CF_MAX_BUCKET_SIZE 255",
      "32: #define CF_MAX_ITERATIONS 65535",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "107:     return sb;",
      "108: }",
      "112:     if (capacity < bucketSize * 2)",
      "113:         return NULL;",
      "",
      "[Removed Lines]",
      "110: static CuckooFilter *cfCreate(RedisModuleKey *key, size_t capacity, size_t bucketSize,",
      "111:                               size_t maxIterations, size_t expansion) {",
      "",
      "[Added Lines]",
      "113: static CuckooFilter *cfCreate(RedisModuleKey *key, size_t capacity, uint16_t bucketSize,",
      "114:                               uint16_t maxIterations, uint16_t expansion) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "529:         return RedisModule_ReplyWithError(ctx, \"Bad capacity\");",
      "530:     }",
      "533:     int mi_loc = RMUtil_ArgIndex(\"MAXITERATIONS\", argv, argc);",
      "534:     if (mi_loc != -1) {",
      "535:         if (RedisModule_StringToLongLong(argv[mi_loc + 1], &maxIterations) != REDISMODULE_OK) {",
      "536:             return RedisModule_ReplyWithError(ctx, \"Couldn't parse MAXITERATIONS\");",
      "538:             return RedisModule_ReplyWithError(",
      "540:         }",
      "541:     }",
      "",
      "[Removed Lines]",
      "532:     long long maxIterations = CF_MAX_ITERATIONS;",
      "537:         } else if (maxIterations <= 0) {",
      "539:                 ctx, \"MAXITERATIONS parameter needs to be a positive integer\");",
      "",
      "[Added Lines]",
      "535:     long long maxIterations = CF_DEFAULT_MAX_ITERATIONS;",
      "540:         } else if (maxIterations <= 0 || maxIterations > CF_MAX_ITERATIONS) {",
      "542:                 ctx, \"MAXITERATIONS: value must be an integer between 1 and 65535, inclusive.\");",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "545:     if (bs_loc != -1) {",
      "546:         if (RedisModule_StringToLongLong(argv[bs_loc + 1], &bucketSize) != REDISMODULE_OK) {",
      "547:             return RedisModule_ReplyWithError(ctx, \"Couldn't parse BUCKETSIZE\");",
      "549:             return RedisModule_ReplyWithError(",
      "551:         }",
      "552:     }",
      "",
      "[Removed Lines]",
      "548:         } else if (bucketSize <= 0) {",
      "550:                 ctx, \"BUCKETSIZE parameter needs to be a positive integer\");",
      "",
      "[Added Lines]",
      "551:         } else if (bucketSize <= 0 || bucketSize > CF_MAX_BUCKET_SIZE) {",
      "553:                 ctx, \"BUCKETSIZE: value must be an integer between 1 and 255, inclusive.\");",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "556:     if (ex_loc != -1) {",
      "557:         if (RedisModule_StringToLongLong(argv[ex_loc + 1], &expansion) != REDISMODULE_OK) {",
      "558:             return RedisModule_ReplyWithError(ctx, \"Couldn't parse EXPANSION\");",
      "560:             return RedisModule_ReplyWithError(",
      "562:         }",
      "563:     }",
      "",
      "[Removed Lines]",
      "559:         } else if (expansion < 0) {",
      "561:                 ctx, \"EXPANSION parameter needs to be a non-negative integer\");",
      "",
      "[Added Lines]",
      "562:         } else if (expansion < 0 || expansion > CF_MAX_EXPANSION) {",
      "564:                 ctx, \"EXPANSION: value must be an integer between 0 and 32768, inclusive.\");",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "596:     int status = cfGetFilter(key, &cf);",
      "598:     if (status == SB_EMPTY && options->autocreate) {",
      "600:                            CF_DEFAULT_EXPANSION)) == NULL) {",
      "601:             return RedisModule_ReplyWithError(ctx, \"Could not create filter\"); // LCOV_EXCL_LINE",
      "602:         }",
      "",
      "[Removed Lines]",
      "599:         if ((cf = cfCreate(key, options->capacity, CF_DEFAULT_BUCKETSIZE, CF_MAX_ITERATIONS,",
      "",
      "[Added Lines]",
      "602:         if ((cf = cfCreate(key, options->capacity, CF_DEFAULT_BUCKETSIZE, CF_DEFAULT_MAX_ITERATIONS,",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1252:     if (encver < CF_MIN_EXPANSION_VERSION) { // CF_ENCODING_VERSION when added",
      "1253:         cf->numDeletes = 0;                  // Didn't exist earlier. bug fix",
      "1254:         cf->bucketSize = CF_DEFAULT_BUCKETSIZE;",
      "1256:         cf->expansion = CF_DEFAULT_EXPANSION;",
      "1257:     } else {",
      "1258:         cf->numDeletes = RedisModule_LoadUnsigned(io);",
      "",
      "[Removed Lines]",
      "1255:         cf->maxIterations = CF_MAX_ITERATIONS;",
      "",
      "[Added Lines]",
      "1258:         cf->maxIterations = CF_DEFAULT_MAX_ITERATIONS;",
      "",
      "---------------"
    ],
    "tests/flow/test_cuckoo.py||tests/flow/test_cuckoo.py": [
      "File: tests/flow/test_cuckoo.py -> tests/flow/test_cuckoo.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "346:         self.assertRaises(ResponseError, self.cmd, 'CF.LOADCHUNK err iterator') # missing data",
      "347:         self.assertRaises(ResponseError, self.cmd, 'CF.SCANDUMP err')",
      "349: class testCuckooNoCodec():",
      "350:     def __init__(self):",
      "351:         self.env = Env(decodeResponses=False)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "349:     def test_reserve_limits(self):",
      "350:         self.cmd('FLUSHALL')",
      "351:         self.assertRaises(ResponseError, self.cmd, 'CF.RESERVE cf 100 BUCKETSIZE 33554432')",
      "352:         self.assertRaises(ResponseError, self.cmd, 'CF.RESERVE cf 100 MAXITERATIONS 165536')",
      "353:         self.assertRaises(ResponseError, self.cmd, 'CF.RESERVE cf 100 EXPANSION 327695')",
      "354:         self.assertRaises(ResponseError, self.cmd, 'CF.RESERVE CF 67108864 BUCKETSIZE 33554432 MAXITERATIONS 1337 EXPANSION 1337')",
      "356:         self.cmd('CF.RESERVE cf 67108864 BUCKETSIZE 255 MAXITERATIONS 65535 EXPANSION 32768')",
      "357:         info = self.cmd('CF.INFO cf')",
      "358:         self.assertEqual(info[info.index('Bucket size') + 1], 255)",
      "359:         self.assertEqual(info[info.index('Expansion rate') + 1], 32768)",
      "360:         self.assertEqual(info[info.index('Max iterations') + 1], 65535)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e299a0f026f8e0bb328bfdb0021737d0a9e0817d",
      "candidate_info": {
        "commit_hash": "e299a0f026f8e0bb328bfdb0021737d0a9e0817d",
        "repo": "RedisBloom/RedisBloom",
        "commit_url": "https://github.com/RedisBloom/RedisBloom/commit/e299a0f026f8e0bb328bfdb0021737d0a9e0817d",
        "files": [
          "sbin/pack.sh"
        ],
        "message": "Update architecture detection in pack.sh to support arm64 and aarch64",
        "before_after_code_files": [
          "sbin/pack.sh||sbin/pack.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RedisBloom/RedisBloom/pull/859"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "sbin/pack.sh||sbin/pack.sh": [
          "File: sbin/pack.sh -> sbin/pack.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: # RLEC naming conventions",
          "61: [[ $ARCH == arm64v8 ]] && ARCH=aarch64",
          "63: OS=$($READIES/bin/platform --os)",
          "",
          "[Removed Lines]",
          "59: ARCH=$($READIES/bin/platform --arch)",
          "60: [[ $ARCH == x64 ]] && ARCH=x86_64",
          "",
          "[Added Lines]",
          "59: ARCH=$(uname -m)",
          "61: [[ $ARCH == x64 ]]     && ARCH=x86_64",
          "62: [[ $ARCH == arm64 ]]   && ARCH=aarch64",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "36f53902b88d44530169fad7a881098b49ec8ee9",
      "candidate_info": {
        "commit_hash": "36f53902b88d44530169fad7a881098b49ec8ee9",
        "repo": "RedisBloom/RedisBloom",
        "commit_url": "https://github.com/RedisBloom/RedisBloom/commit/36f53902b88d44530169fad7a881098b49ec8ee9",
        "files": [
          "src/version.h"
        ],
        "message": "bump version 2.6.10",
        "before_after_code_files": [
          "src/version.h||src/version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RedisBloom/RedisBloom/pull/859",
          "https://github.com/RedisBloom/RedisBloom/pull/729"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/version.h||src/version.h": [
          "File: src/version.h -> src/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #endif",
          "19: #ifndef REBLOOM_VERSION_PATCH",
          "21: #endif",
          "23: #define REBLOOM_MODULE_VERSION                                                                     \\",
          "",
          "[Removed Lines]",
          "20: #define REBLOOM_VERSION_PATCH 9",
          "",
          "[Added Lines]",
          "20: #define REBLOOM_VERSION_PATCH 10",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a71bb387eda7ceacf0ac4499f0ff238d70f42e6e",
      "candidate_info": {
        "commit_hash": "a71bb387eda7ceacf0ac4499f0ff238d70f42e6e",
        "repo": "RedisBloom/RedisBloom",
        "commit_url": "https://github.com/RedisBloom/RedisBloom/commit/a71bb387eda7ceacf0ac4499f0ff238d70f42e6e",
        "files": [
          "src/version.h"
        ],
        "message": "see MOD-7532, bump version 2.6.14 (#19)",
        "before_after_code_files": [
          "src/version.h||src/version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RedisBloom/RedisBloom/pull/859"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/version.h||src/version.h": [
          "File: src/version.h -> src/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #endif",
          "19: #ifndef REBLOOM_VERSION_PATCH",
          "21: #endif",
          "23: #define REBLOOM_MODULE_VERSION                                                                     \\",
          "",
          "[Removed Lines]",
          "20: #define REBLOOM_VERSION_PATCH 13",
          "",
          "[Added Lines]",
          "20: #define REBLOOM_VERSION_PATCH 14",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f468ce86e96689134de057624b9b467ccf28e306",
      "candidate_info": {
        "commit_hash": "f468ce86e96689134de057624b9b467ccf28e306",
        "repo": "RedisBloom/RedisBloom",
        "commit_url": "https://github.com/RedisBloom/RedisBloom/commit/f468ce86e96689134de057624b9b467ccf28e306",
        "files": [
          "src/version.h"
        ],
        "message": "see MOD-7094, bump version 2.6.13",
        "before_after_code_files": [
          "src/version.h||src/version.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RedisBloom/RedisBloom/pull/859"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/version.h||src/version.h": [
          "File: src/version.h -> src/version.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: #endif",
          "19: #ifndef REBLOOM_VERSION_PATCH",
          "21: #endif",
          "23: #define REBLOOM_MODULE_VERSION                                                                     \\",
          "",
          "[Removed Lines]",
          "20: #define REBLOOM_VERSION_PATCH 12",
          "",
          "[Added Lines]",
          "20: #define REBLOOM_VERSION_PATCH 13",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d2991104bc455727a70d9d55d07302afd30d614",
      "candidate_info": {
        "commit_hash": "2d2991104bc455727a70d9d55d07302afd30d614",
        "repo": "RedisBloom/RedisBloom",
        "commit_url": "https://github.com/RedisBloom/RedisBloom/commit/2d2991104bc455727a70d9d55d07302afd30d614",
        "files": [
          "src/rm_cms.c",
          "tests/flow/test_cms.py"
        ],
        "message": "Fix 753 (#758)\n\nFix crash when cms.merge weights do not match number of keys\n\n- Fixes issue #753.\n- In line 193 there was '&&' instead of '||'.\n- Some streamline of code.",
        "before_after_code_files": [
          "src/rm_cms.c||src/rm_cms.c",
          "tests/flow/test_cms.py||tests/flow/test_cms.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RedisBloom/RedisBloom/pull/859"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/rm_cms.c||src/rm_cms.c": [
          "File: src/rm_cms.c -> src/rm_cms.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "186:     long long numKeys = params->numKeys;",
          "187:     int pos = RMUtil_ArgIndex(\"WEIGHTS\", argv, argc);",
          "188:     if (pos < 0) {",
          "190:             INNER_ERROR(\"CMS: wrong number of keys\");",
          "191:         }",
          "192:     } else {",
          "194:             INNER_ERROR(\"CMS: wrong number of keys/weights\");",
          "195:         }",
          "196:     }",
          "203:     size_t width = params->dest->width;",
          "204:     size_t depth = params->dest->depth;",
          "206:     for (int i = 0; i < numKeys; ++i) {",
          "207:         if (pos == -1) {",
          "208:             params->weights[i] = 1;",
          "210:                    REDISMODULE_OK) {",
          "211:             INNER_ERROR(\"CMS: invalid weight value\");",
          "212:         }",
          "215:             return REDISMODULE_ERR;",
          "216:         }",
          "217:         if (params->cmsArray[i]->width != width || params->cmsArray[i]->depth != depth) {",
          "",
          "[Removed Lines]",
          "189:         if (numKeys != argc - 3) {",
          "193:         if ((pos != 3 + numKeys) && (argc != 4 + numKeys * 2)) {",
          "198:     if (GetCMSKey(ctx, argv[1], &(params->dest), REDISMODULE_READ | REDISMODULE_WRITE) !=",
          "199:         REDISMODULE_OK) {",
          "200:         return REDISMODULE_ERR;",
          "201:     }",
          "209:         } else if (RedisModule_StringToLongLong(argv[3 + numKeys + 1 + i], &(params->weights[i])) !=",
          "213:         if (GetCMSKey(ctx, argv[3 + i], &(params->cmsArray[i]), REDISMODULE_READ) !=",
          "214:             REDISMODULE_OK) {",
          "",
          "[Added Lines]",
          "189:         if (numKeys != argc) {",
          "193:         if ((pos != numKeys) || (argc != 1 + numKeys * 2)) {",
          "204:         } else if (RedisModule_StringToLongLong(argv[numKeys + 1 + i], &(params->weights[i])) !=",
          "208:         if (GetCMSKey(ctx, argv[i], &(params->cmsArray[i]), REDISMODULE_READ) != REDISMODULE_OK) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "229:     }",
          "231:     mergeParams params = {0};",
          "232:     if (RedisModule_StringToLongLong(argv[2], &(params.numKeys)) != REDISMODULE_OK) {",
          "233:         return RedisModule_ReplyWithError(ctx, \"CMS: invalid numkeys\");",
          "234:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "227:     if (GetCMSKey(ctx, argv[1], &(params.dest), REDISMODULE_READ | REDISMODULE_WRITE) !=",
          "228:         REDISMODULE_OK) {",
          "229:         return REDISMODULE_ERR;",
          "230:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "236:     params.cmsArray = CMS_CALLOC(params.numKeys, sizeof(CMSketch *));",
          "237:     params.weights = CMS_CALLOC(params.numKeys, sizeof(long long));",
          "240:         CMS_FREE(params.cmsArray);",
          "241:         CMS_FREE(params.weights);",
          "242:         return REDISMODULE_OK;",
          "",
          "[Removed Lines]",
          "239:     if (parseMergeArgs(ctx, argv, argc, &params) != REDISMODULE_OK) {",
          "",
          "[Added Lines]",
          "239:     if (parseMergeArgs(ctx, argv + 3, argc - 3, &params) != REDISMODULE_OK) {",
          "",
          "---------------"
        ],
        "tests/flow/test_cms.py||tests/flow/test_cms.py": [
          "File: tests/flow/test_cms.py -> tests/flow/test_cms.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:         self.assertRaises(ResponseError, self.cmd, 'cms.merge', 'foo', 3, 'foo', 'weights', 'B')",
          "163:         self.assertRaises(ResponseError, self.cmd, 'cms.merge', 'foo', 'A', 'foo', 'weights', 1)",
          "164:         self.assertRaises(ResponseError, self.cmd, 'cms.merge', 'foo', 3, 'bar', 'baz' 'weights', 1, 'a')",
          "166:     def test_merge_extensive(self):",
          "167:         self.cmd('FLUSHALL')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "165:         self.assertRaises(ResponseError, self.cmd, 'cms.merge', 'foo', 3, 'bar', 'baz' 'weights', 1)",
          "",
          "---------------"
        ]
      }
    }
  ]
}