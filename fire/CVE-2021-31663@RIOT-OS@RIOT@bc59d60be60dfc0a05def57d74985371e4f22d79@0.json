{
  "cve_id": "CVE-2021-31663",
  "cve_desc": "RIOT-OS 2021.01 before commit bc59d60be60dfc0a05def57d74985371e4f22d79 contains a buffer overflow which could allow attackers to obtain sensitive information.",
  "repo": "RIOT-OS/RIOT",
  "patch_hash": "bc59d60be60dfc0a05def57d74985371e4f22d79",
  "patch_info": {
    "commit_hash": "bc59d60be60dfc0a05def57d74985371e4f22d79",
    "repo": "RIOT-OS/RIOT",
    "commit_url": "https://github.com/RIOT-OS/RIOT/commit/bc59d60be60dfc0a05def57d74985371e4f22d79",
    "files": [
      "sys/uri_parser/uri_parser.c",
      "tests/unittests/tests-uri_parser/tests-uri_parser.c"
    ],
    "message": "Merge pull request #15929 from cgundogan/pr/uriparser\n\nuri_parser: fix out-of-bounds and additional enhancements",
    "before_after_code_files": [
      "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c",
      "tests/unittests/tests-uri_parser/tests-uri_parser.c||tests/unittests/tests-uri_parser/tests-uri_parser.c"
    ]
  },
  "patch_diff": {
    "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c": [
      "File: sys/uri_parser/uri_parser.c -> sys/uri_parser/uri_parser.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "75:     if (userinfo_end) {",
      "76:         result->userinfo = uri;",
      "77:         result->userinfo_len = userinfo_end - uri;",
      "81:     }",
      "82: }",
      "",
      "[Removed Lines]",
      "79:         result->host += result->userinfo_len + 1;",
      "80:         result->host_len -= result->userinfo_len + 1;",
      "",
      "[Added Lines]",
      "80:         unsigned offset = result->userinfo_len + 1;",
      "81:         if ((result->host + offset) > authority_end) {",
      "82:             result->host_len = 0;",
      "83:             return;",
      "84:         }",
      "86:         result->host_len -= offset;",
      "87:         result->host += offset;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "126:     _consume_userinfo(result, uri, authority_end);",
      "128:     char *ipv6_end = NULL;",
      "130:     if (result->host[0] == '[') {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "136:     if (result->host_len == 0) {",
      "137:         return authority_end;",
      "138:     }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "159:         return NULL;",
      "160:     }",
      "169:     return authority_end;",
      "170: }",
      "",
      "[Removed Lines]",
      "163:     if ((result->host_len == 0) &&",
      "164:         (result->userinfo || result->port)) {",
      "165:         return NULL;",
      "166:     }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "218:         return -1;",
      "219:     }",
      "221:     if (has_authority) {",
      "222:         uri = _consume_authority(result, uri, uri_end);",
      "223:         if (uri == NULL) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "227:     if (uri >= uri_end) {",
      "229:         return 0;",
      "230:     }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "225:         }",
      "226:     }",
      "230: }",
      "232: bool uri_parser_is_absolute(const char *uri, size_t uri_len)",
      "",
      "[Removed Lines]",
      "229:     return _parse_relative(result, uri, uri_end);",
      "",
      "[Added Lines]",
      "240:     if (uri < uri_end) {",
      "242:         return _parse_relative(result, uri, uri_end);",
      "243:     }",
      "244:     return 0;",
      "",
      "---------------"
    ],
    "tests/unittests/tests-uri_parser/tests-uri_parser.c||tests/unittests/tests-uri_parser/tests-uri_parser.c": [
      "File: tests/unittests/tests-uri_parser/tests-uri_parser.c -> tests/unittests/tests-uri_parser/tests-uri_parser.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "216:         0),",
      "217:     VEC(\"coap://R@////////////////7///v=1\",",
      "218:         true,",
      "219:         \"\",",
      "220:         \"\",",
      "221:         \"\",",
      "222:         \"\",",
      "223:         \"\",",
      "228:     VEC(\"coa[:////[2001:db5ow:5own/Ov=1\",",
      "229:         false,",
      "230:         \"\",",
      "",
      "[Removed Lines]",
      "224:         \"\",",
      "225:         \"\",",
      "226:         \"\",",
      "227:         -1),",
      "",
      "[Added Lines]",
      "219:         \"coap\",",
      "220:         \"R\",",
      "225:         \"////////////////7///v=1\",",
      "227:         0),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "412:         \"\",",
      "413:         \"\",",
      "414:         0),",
      "415: };",
      "417: static char _failure_msg[VEC_MSG_LEN];",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "415:     VEC(\"A://@\",",
      "416:         true,",
      "417:         \"A\",",
      "418:         \"\",",
      "419:         \"\",",
      "420:         \"\",",
      "421:         \"\",",
      "422:         \"\",",
      "423:         \"\",",
      "424:         \"\",",
      "425:         0),",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1040cf98623701501d3cab54718c8e85463ba643",
      "candidate_info": {
        "commit_hash": "1040cf98623701501d3cab54718c8e85463ba643",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/1040cf98623701501d3cab54718c8e85463ba643",
        "files": [
          "sys/uri_parser/uri_parser.c"
        ],
        "message": "uri_parser: allow empty host part even if userinfo and port exist",
        "before_after_code_files": [
          "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/15929"
        ],
        "olp_code_files": {
          "patch": [
            "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c"
          ],
          "candidate": [
            "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c"
          ]
        }
      },
      "candidate_diff": {
        "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c": [
          "File: sys/uri_parser/uri_parser.c -> sys/uri_parser/uri_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:         return NULL;",
          "172:     }",
          "181:     return authority_end;",
          "182: }",
          "",
          "[Removed Lines]",
          "175:     if ((result->host_len == 0) &&",
          "176:         (result->userinfo || result->port)) {",
          "177:         return NULL;",
          "178:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6ef29d9b532dbb6666072ad52684123d5087a14b",
      "candidate_info": {
        "commit_hash": "6ef29d9b532dbb6666072ad52684123d5087a14b",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/6ef29d9b532dbb6666072ad52684123d5087a14b",
        "files": [
          "tests/unittests/tests-uri_parser/tests-uri_parser.c"
        ],
        "message": "tests: uri_parser: new test to check empty host",
        "before_after_code_files": [
          "tests/unittests/tests-uri_parser/tests-uri_parser.c||tests/unittests/tests-uri_parser/tests-uri_parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/15929"
        ],
        "olp_code_files": {
          "patch": [
            "tests/unittests/tests-uri_parser/tests-uri_parser.c||tests/unittests/tests-uri_parser/tests-uri_parser.c"
          ],
          "candidate": [
            "tests/unittests/tests-uri_parser/tests-uri_parser.c||tests/unittests/tests-uri_parser/tests-uri_parser.c"
          ]
        }
      },
      "candidate_diff": {
        "tests/unittests/tests-uri_parser/tests-uri_parser.c||tests/unittests/tests-uri_parser/tests-uri_parser.c": [
          "File: tests/unittests/tests-uri_parser/tests-uri_parser.c -> tests/unittests/tests-uri_parser/tests-uri_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "216:         0),",
          "217:     VEC(\"coap://R@////////////////7///v=1\",",
          "218:         true,",
          "219:         \"\",",
          "220:         \"\",",
          "221:         \"\",",
          "222:         \"\",",
          "223:         \"\",",
          "228:     VEC(\"coa[:////[2001:db5ow:5own/Ov=1\",",
          "229:         false,",
          "230:         \"\",",
          "",
          "[Removed Lines]",
          "224:         \"\",",
          "225:         \"\",",
          "226:         \"\",",
          "227:         -1),",
          "",
          "[Added Lines]",
          "219:         \"coap\",",
          "220:         \"R\",",
          "225:         \"////////////////7///v=1\",",
          "227:         0),",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "412:         \"\",",
          "413:         \"\",",
          "414:         0),",
          "415: };",
          "417: static char _failure_msg[VEC_MSG_LEN];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "415:     VEC(\"A://@\",",
          "416:         true,",
          "417:         \"A\",",
          "418:         \"\",",
          "419:         \"\",",
          "420:         \"\",",
          "421:         \"\",",
          "422:         \"\",",
          "423:         \"\",",
          "424:         \"\",",
          "425:         0),",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e399ef5d761aa02fa3505f03ca604e9b06056b2f",
      "candidate_info": {
        "commit_hash": "e399ef5d761aa02fa3505f03ca604e9b06056b2f",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/e399ef5d761aa02fa3505f03ca604e9b06056b2f",
        "files": [
          "sys/uri_parser/uri_parser.c"
        ],
        "message": "uri_parser: terminate, if nothing to consume after scheme",
        "before_after_code_files": [
          "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/15929"
        ],
        "olp_code_files": {
          "patch": [
            "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c"
          ],
          "candidate": [
            "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c"
          ]
        }
      },
      "candidate_diff": {
        "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c": [
          "File: sys/uri_parser/uri_parser.c -> sys/uri_parser/uri_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "224:         return -1;",
          "225:     }",
          "227:     if (has_authority) {",
          "228:         uri = _consume_authority(result, uri, uri_end);",
          "229:         if (uri == NULL) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "227:     if (uri >= uri_end) {",
          "229:         return 0;",
          "230:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6f13325a52b6eef4e991d84b2462a7f97113c09b",
      "candidate_info": {
        "commit_hash": "6f13325a52b6eef4e991d84b2462a7f97113c09b",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/6f13325a52b6eef4e991d84b2462a7f97113c09b",
        "files": [
          "sys/uri_parser/uri_parser.c"
        ],
        "message": "uri_parser: do not parse path if end-of-uri",
        "before_after_code_files": [
          "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/15929"
        ],
        "olp_code_files": {
          "patch": [
            "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c"
          ],
          "candidate": [
            "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c"
          ]
        }
      },
      "candidate_diff": {
        "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c": [
          "File: sys/uri_parser/uri_parser.c -> sys/uri_parser/uri_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "231:         }",
          "232:     }",
          "236: }",
          "238: bool uri_parser_is_absolute(const char *uri, size_t uri_len)",
          "",
          "[Removed Lines]",
          "235:     return _parse_relative(result, uri, uri_end);",
          "",
          "[Added Lines]",
          "235:     if (uri < uri_end) {",
          "237:         return _parse_relative(result, uri, uri_end);",
          "238:     }",
          "239:     return 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f9b8fadd85308ded4639335683c21c97dcfffe1a",
      "candidate_info": {
        "commit_hash": "f9b8fadd85308ded4639335683c21c97dcfffe1a",
        "repo": "RIOT-OS/RIOT",
        "commit_url": "https://github.com/RIOT-OS/RIOT/commit/f9b8fadd85308ded4639335683c21c97dcfffe1a",
        "files": [
          "sys/uri_parser/uri_parser.c"
        ],
        "message": "uri_parser: check boundaries if host is empty, but userinfo exists",
        "before_after_code_files": [
          "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/RIOT-OS/RIOT/pull/15929"
        ],
        "olp_code_files": {
          "patch": [
            "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c"
          ],
          "candidate": [
            "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c"
          ]
        }
      },
      "candidate_diff": {
        "sys/uri_parser/uri_parser.c||sys/uri_parser/uri_parser.c": [
          "File: sys/uri_parser/uri_parser.c -> sys/uri_parser/uri_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:     if (userinfo_end) {",
          "76:         result->userinfo = uri;",
          "77:         result->userinfo_len = userinfo_end - uri;",
          "81:     }",
          "82: }",
          "",
          "[Removed Lines]",
          "79:         result->host += result->userinfo_len + 1;",
          "80:         result->host_len -= result->userinfo_len + 1;",
          "",
          "[Added Lines]",
          "80:         unsigned offset = result->userinfo_len + 1;",
          "81:         if ((result->host + offset) > authority_end) {",
          "82:             result->host_len = 0;",
          "83:             return;",
          "84:         }",
          "86:         result->host_len -= offset;",
          "87:         result->host += offset;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "126:     _consume_userinfo(result, uri, authority_end);",
          "128:     char *ipv6_end = NULL;",
          "130:     if (result->host[0] == '[') {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136:     if (result->host_len == 0) {",
          "137:         return authority_end;",
          "138:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}