{
  "cve_id": "CVE-2023-34105",
  "cve_desc": "SRS is a real-time video server supporting RTMP, WebRTC, HLS, HTTP-FLV, SRT, MPEG-DASH, and GB28181. Prior to versions 5.0.157, 5.0-b1, and 6.0.48, SRS's `api-server` server is vulnerable to a drive-by command injection. An attacker may send a request to the `/api/v1/snapshots` endpoint containing any commands to be executed as part of the body of the POST request. This issue may lead to Remote Code Execution (RCE). Versions 5.0.157, 5.0-b1, and 6.0.48 contain a fix.",
  "repo": "ossrs/srs",
  "patch_hash": "1d878c2daaf913ad01c6d0bc2f247116c8050338",
  "patch_info": {
    "commit_hash": "1d878c2daaf913ad01c6d0bc2f247116c8050338",
    "repo": "ossrs/srs",
    "commit_url": "https://github.com/ossrs/srs/commit/1d878c2daaf913ad01c6d0bc2f247116c8050338",
    "files": [
      "trunk/doc/CHANGELOG.md",
      "trunk/research/api-server/server.go",
      "trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp"
    ],
    "message": "Fix command injection in api-server for HTTP callback. v5.0.157, v6.0.48",
    "before_after_code_files": [
      "trunk/research/api-server/server.go||trunk/research/api-server/server.go",
      "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
      "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
    ]
  },
  "patch_diff": {
    "trunk/research/api-server/server.go||trunk/research/api-server/server.go": [
      "File: trunk/research/api-server/server.go -> trunk/research/api-server/server.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "400:  normalPicPath := path.Join(outputPicDir, fmt.Sprintf(\"%v\", v.Stream)+\"-%03d.png\")",
      "401:  bestPng := path.Join(outputPicDir, fmt.Sprintf(\"%v-best.png\", v.Stream))",
      "405:  timeoutCtx, _ := context.WithTimeout(v.cancelCtx, v.timeout)",
      "407:  if err = cmd.Run(); err != nil {",
      "408:   log.Println(fmt.Sprintf(\"run snapshot %v cmd failed, err is %v\", v.Tag(), err))",
      "409:   return",
      "",
      "[Removed Lines]",
      "403:  param := fmt.Sprintf(\"%v -i %v -vf fps=1 -vcodec png -f image2 -an -y -vframes %v -y %v\", ffmpegPath, inputUrl, v.vframes, normalPicPath)",
      "404:  log.Println(fmt.Sprintf(\"start snapshot, cmd param=%v\", param))",
      "406:  cmd := exec.CommandContext(timeoutCtx, \"/bin/bash\", \"-c\", param)",
      "",
      "[Added Lines]",
      "403:  params := []string{",
      "404:   \"-i\", inputUrl,",
      "405:   \"-vf\", \"fps=1\",",
      "406:   \"-vcodec\", \"png\",",
      "407:   \"-f\", \"image2\",",
      "408:   \"-an\",",
      "409:   \"-vframes\", strconv.Itoa(v.vframes),",
      "410:   \"-y\", normalPicPath,",
      "411:  }",
      "412:  log.Println(fmt.Sprintf(\"start snapshot, cmd param=%v %v\", ffmpegPath, strings.Join(params, \" \")))",
      "414:  cmd := exec.CommandContext(timeoutCtx, ffmpegPath, params...)",
      "",
      "---------------"
    ],
    "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
      "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       5",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    156",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    157",
      "",
      "---------------"
    ],
    "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
      "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: #define VERSION_MAJOR       6",
      "11: #define VERSION_MINOR       0",
      "14: #endif",
      "",
      "[Removed Lines]",
      "12: #define VERSION_REVISION    47",
      "",
      "[Added Lines]",
      "12: #define VERSION_REVISION    48",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5eb802dacac4e685989446e51d0ed5c594f86258",
      "candidate_info": {
        "commit_hash": "5eb802dacac4e685989446e51d0ed5c594f86258",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/5eb802dacac4e685989446e51d0ed5c594f86258",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_conn.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "Support x509 certification chiain in single pem file. v5.0.211 v6.0.122 (#4033)\n\nFix #3967 There is an API `SSL_use_certificate_chain_file`, which can load the\ncertification chain and also single certificate.\n\n---------\n\nCo-authored-by: winlin <winlinvip@gmail.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_conn.cpp||trunk/src/app/srs_app_conn.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_conn.cpp||trunk/src/app/srs_app_conn.cpp": [
          "File: trunk/src/app/srs_app_conn.cpp -> trunk/src/app/srs_app_conn.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "772:     int r0, r1, size;",
          "776:         return srs_error_new(ERROR_HTTPS_KEY_CRT, \"use cert %s\", crt_file.c_str());",
          "777:     }",
          "",
          "[Removed Lines]",
          "775:     if ((r0 = SSL_use_certificate_file(ssl, crt_file.c_str(), SSL_FILETYPE_PEM)) != 1) {",
          "",
          "[Added Lines]",
          "775:     if ((r0 = SSL_use_certificate_chain_file(ssl, crt_file.c_str())) != 1) {",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    210",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    211",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    121",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    122",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "be7faf6aa301173706cdb4d8c28fcfe76bd32db2",
      "candidate_info": {
        "commit_hash": "be7faf6aa301173706cdb4d8c28fcfe76bd32db2",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/be7faf6aa301173706cdb4d8c28fcfe76bd32db2",
        "files": [
          "trunk/auto/depends.sh",
          "trunk/doc/CHANGELOG.md",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "Fix Permission Issue in depend.sh for OpenSSL Compilation. v5.0.160, v6.0.53 (#3592)\n\n---------\n\nCo-authored-by: john <hondaxiao@tencent.com>",
        "before_after_code_files": [
          "trunk/auto/depends.sh||trunk/auto/depends.sh",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/auto/depends.sh||trunk/auto/depends.sh": [
          "File: trunk/auto/depends.sh -> trunk/auto/depends.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "463:         ${OPENSSL_UNZIP} &&",
          "464:         (",
          "465:             cd ${SRS_OBJS}/${SRS_PLATFORM}/${OPENSSL_CANDIDATE} &&",
          "466:             ${OPENSSL_CONFIG} --prefix=${SRS_DEPENDS_LIBS}/${SRS_PLATFORM}/3rdpatry/openssl $OPENSSL_OPTIONS",
          "467:         ) &&",
          "468:         make -C ${SRS_OBJS}/${SRS_PLATFORM}/${OPENSSL_CANDIDATE} CC=${SRS_TOOL_CC} AR=\"${OPENSSL_AR}\" \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "466:             chmod +x ./config ./Configure &&",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    159",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    160",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    52",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    53",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "37f0faae5a36bc9af2b06c91df52aead73e76add",
      "candidate_info": {
        "commit_hash": "37f0faae5a36bc9af2b06c91df52aead73e76add",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/37f0faae5a36bc9af2b06c91df52aead73e76add",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_rtmp_conn.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/protocol/srs_protocol_rtmp_stack.cpp",
          "trunk/src/protocol/srs_protocol_rtmp_stack.hpp",
          "trunk/src/utest/srs_utest_rtmp.cpp"
        ],
        "message": "RTMP: Do not response publish start message if hooks fail. v5.0.212 v6.0.123 (#4038)\n\nFix #4037 SRS should not send the publish start message\n`onStatus(NetStream.Publish.Start)` if hooks fail, which causes OBS to\nrepeatedly reconnect.\n\nNote that this fix does not send an RTMP error message when publishing\nfails, because neither OBS nor FFmpeg process this specific error\nmessage; they only display a general error.\n\nApart from the order of messages, nothing else has been changed.\nPreviously, we sent the publish start message\n`onStatus(NetStream.Publish.Start)` before the HTTP hook `on_publish`;\nnow, we have modified it to send this message after the HTTP hook.",
        "before_after_code_files": [
          "trunk/src/app/srs_app_rtmp_conn.cpp||trunk/src/app/srs_app_rtmp_conn.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/protocol/srs_protocol_rtmp_stack.cpp||trunk/src/protocol/srs_protocol_rtmp_stack.cpp",
          "trunk/src/protocol/srs_protocol_rtmp_stack.hpp||trunk/src/protocol/srs_protocol_rtmp_stack.hpp",
          "trunk/src/utest/srs_utest_rtmp.cpp||trunk/src/utest/srs_utest_rtmp.cpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_rtmp_conn.cpp||trunk/src/app/srs_app_rtmp_conn.cpp": [
          "File: trunk/src/app/srs_app_rtmp_conn.cpp -> trunk/src/app/srs_app_rtmp_conn.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1002:         ->attr(\"timeout\", srs_fmt(\"%d\", srsu2msi(publish_normal_timeout)))->end();",
          "1003:     SrsAutoFree(ISrsApmSpan, span);",
          "1004: #endif",
          "1006:     int64_t nb_msgs = 0;",
          "1007:     uint64_t nb_frames = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1007:     if ((err = rtmp->start_publishing(info->res->stream_id)) != srs_success) {",
          "1008:         return srs_error_wrap(err, \"start publishing\");",
          "1009:     }",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    211",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    212",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    122",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    123",
          "",
          "---------------"
        ],
        "trunk/src/protocol/srs_protocol_rtmp_stack.cpp||trunk/src/protocol/srs_protocol_rtmp_stack.cpp": [
          "File: trunk/src/protocol/srs_protocol_rtmp_stack.cpp -> trunk/src/protocol/srs_protocol_rtmp_stack.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "2705:         pkt->command_name = RTMP_AMF0_COMMAND_ON_FC_PUBLISH;",
          "2706:         pkt->data->set(StatusCode, SrsAmf0Any::str(StatusCodePublishStart));",
          "2707:         pkt->data->set(StatusDescription, SrsAmf0Any::str(\"Started publishing stream.\"));",
          "2722:         if ((err = protocol->send_and_free_packet(pkt, stream_id)) != srs_success) {",
          "2723:             return srs_error_wrap(err, \"send NetStream.Publish.Start\");",
          "2724:         }",
          "",
          "[Removed Lines]",
          "2709:         if ((err = protocol->send_and_free_packet(pkt, stream_id)) != srs_success) {",
          "2710:             return srs_error_wrap(err, \"send NetStream.Publish.Start\");",
          "2711:         }",
          "2712:     }",
          "2714:     if (true) {",
          "2715:         SrsOnStatusCallPacket* pkt = new SrsOnStatusCallPacket();",
          "2717:         pkt->data->set(StatusLevel, SrsAmf0Any::str(StatusLevelStatus));",
          "2718:         pkt->data->set(StatusCode, SrsAmf0Any::str(StatusCodePublishStart));",
          "2719:         pkt->data->set(StatusDescription, SrsAmf0Any::str(\"Started publishing stream.\"));",
          "2720:         pkt->data->set(StatusClientId, SrsAmf0Any::str(RTMP_SIG_CLIENT_ID));",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2756:         }",
          "2757:     }",
          "2773:     return err;",
          "2774: }",
          "",
          "[Removed Lines]",
          "2760:     if (true) {",
          "2761:         SrsOnStatusCallPacket* pkt = new SrsOnStatusCallPacket();",
          "2763:         pkt->data->set(StatusLevel, SrsAmf0Any::str(StatusLevelStatus));",
          "2764:         pkt->data->set(StatusCode, SrsAmf0Any::str(StatusCodePublishStart));",
          "2765:         pkt->data->set(StatusDescription, SrsAmf0Any::str(\"Started publishing stream.\"));",
          "2766:         pkt->data->set(StatusClientId, SrsAmf0Any::str(RTMP_SIG_CLIENT_ID));",
          "2768:         if ((err = protocol->send_and_free_packet(pkt, stream_id)) != srs_success) {",
          "2769:             return srs_error_wrap(err, \"send NetStream.Publish.Start\");",
          "2770:         }",
          "2771:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2816: srs_error_t SrsRtmpServer::start_flash_publish(int stream_id)",
          "2817: {",
          "2818:     srs_error_t err = srs_success;",
          "2821:     if (true) {",
          "2822:         SrsOnStatusCallPacket* pkt = new SrsOnStatusCallPacket();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2792:     return err;",
          "2793: }",
          "2795: srs_error_t SrsRtmpServer::start_publishing(int stream_id)",
          "2796: {",
          "2797:     srs_error_t err = srs_success;",
          "",
          "---------------"
        ],
        "trunk/src/protocol/srs_protocol_rtmp_stack.hpp||trunk/src/protocol/srs_protocol_rtmp_stack.hpp": [
          "File: trunk/src/protocol/srs_protocol_rtmp_stack.hpp -> trunk/src/protocol/srs_protocol_rtmp_stack.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "749:     virtual srs_error_t start_flash_publish(int stream_id);",
          "750: public:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "753:     virtual srs_error_t start_publishing(int stream_id);",
          "",
          "---------------"
        ],
        "trunk/src/utest/srs_utest_rtmp.cpp||trunk/src/utest/srs_utest_rtmp.cpp": [
          "File: trunk/src/utest/srs_utest_rtmp.cpp -> trunk/src/utest/srs_utest_rtmp.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "1895:             HELPER_ASSERT_SUCCESS(p.expect_message(&msg, &pkt));",
          "1896:             srs_freep(msg);",
          "1897:             srs_freep(pkt);",
          "1900:             HELPER_ASSERT_SUCCESS(p.expect_message(&msg, &pkt));",
          "1901:             srs_freep(msg);",
          "1902:             srs_freep(pkt);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1898:         }",
          "1900:         HELPER_EXPECT_SUCCESS(r.start_publishing(1));",
          "1902:         if (true) {",
          "1903:             tio.in_buffer.append(&io.out_buffer);",
          "1906:             SrsCommonMessage* msg = NULL;",
          "1907:             SrsCallPacket* pkt = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1934:             HELPER_ASSERT_SUCCESS(p.expect_message(&msg, &pkt));",
          "1935:             srs_freep(msg);",
          "1936:             srs_freep(pkt);",
          "1939:             HELPER_ASSERT_SUCCESS(p.expect_message(&msg, &pkt));",
          "1940:             srs_freep(msg);",
          "1941:             srs_freep(pkt);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1945:         }",
          "1947:         HELPER_EXPECT_SUCCESS(r.start_publishing(1));",
          "1949:         if (true) {",
          "1950:             tio.in_buffer.append(&io.out_buffer);",
          "1953:             SrsCommonMessage* msg = NULL;",
          "1954:             SrsCallPacket* pkt = NULL;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2005:         SrsRtmpServer r(&io);",
          "2007:         HELPER_EXPECT_SUCCESS(r.start_flash_publish(1));",
          "2009:         if (true) {",
          "2010:             MockBufferIO tio;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2024:         HELPER_EXPECT_SUCCESS(r.start_publishing(1));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7f997b39ae5f20f88c34cc1098af8a2eee857ac9",
      "candidate_info": {
        "commit_hash": "7f997b39ae5f20f88c34cc1098af8a2eee857ac9",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/7f997b39ae5f20f88c34cc1098af8a2eee857ac9",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/app/srs_app_rtc_sdp.cpp",
          "trunk/src/app/srs_app_rtc_source.cpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp"
        ],
        "message": "WHIP: Add OBS support, ensuring compatibility with a unique SDP. v5.0.158, v6.0.51 (#3581)\n\n1. Ignore SDP GROUP LS.\n2. Support ice in global session info.\n3. Support audio codec \"OPUS\" or \"opus\".\n\n---------\n\nCo-authored-by: Johnny <hellojinqiang@gmail.com>",
        "before_after_code_files": [
          "trunk/src/app/srs_app_rtc_sdp.cpp||trunk/src/app/srs_app_rtc_sdp.cpp",
          "trunk/src/app/srs_app_rtc_source.cpp||trunk/src/app/srs_app_rtc_source.cpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/app/srs_app_rtc_sdp.cpp||trunk/src/app/srs_app_rtc_sdp.cpp": [
          "File: trunk/src/app/srs_app_rtc_sdp.cpp -> trunk/src/app/srs_app_rtc_sdp.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "941: std::string SrsSdp::get_ice_ufrag() const",
          "942: {",
          "944:     for (std::vector<SrsMediaDesc>::const_iterator iter = media_descs_.begin(); iter != media_descs_.end(); ++iter) {",
          "945:         const SrsMediaDesc* desc = &(*iter);",
          "946:         return desc->session_info_.ice_ufrag_;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "944:     if (!session_info_.ice_ufrag_.empty()) {",
          "945:         return session_info_.ice_ufrag_;",
          "946:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "952: std::string SrsSdp::get_ice_pwd() const",
          "953: {",
          "955:     for (std::vector<SrsMediaDesc>::const_iterator iter = media_descs_.begin(); iter != media_descs_.end(); ++iter) {",
          "956:         const SrsMediaDesc* desc = &(*iter);",
          "957:         return desc->session_info_.ice_pwd_;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "960:     if (!session_info_.ice_pwd_.empty()) {",
          "961:         return session_info_.ice_pwd_;",
          "962:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1132:     srs_error_t err = srs_success;",
          "1135:     std::istringstream is(value);",
          "1137:     FETCH(is, group_policy_);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1147:     if (srs_string_starts_with(value, \"LS\")) {",
          "1148:         return err;",
          "1149:     }",
          "",
          "---------------"
        ],
        "trunk/src/app/srs_app_rtc_source.cpp||trunk/src/app/srs_app_rtc_source.cpp": [
          "File: trunk/src/app/srs_app_rtc_source.cpp -> trunk/src/app/srs_app_rtc_source.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "684:         if (! stream_desc_->audio_track_desc_) {",
          "685:             return track_descs;",
          "686:         }",
          "688:             track_descs.push_back(stream_desc_->audio_track_desc_);",
          "689:         }",
          "690:     }",
          "",
          "[Removed Lines]",
          "687:         if (stream_desc_->audio_track_desc_->media_->name_ == media_name) {",
          "",
          "[Added Lines]",
          "688:         string name = stream_desc_->audio_track_desc_->media_->name_;",
          "689:         std::transform(name.begin(), name.end(), name.begin(), static_cast<int(*)(int)>(std::tolower));",
          "690:         if (name == media_name) {",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    157",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    158",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    50",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    51",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b5f50f3bf4cf9b6438680dfd88be836f40fa21db",
      "candidate_info": {
        "commit_hash": "b5f50f3bf4cf9b6438680dfd88be836f40fa21db",
        "repo": "ossrs/srs",
        "commit_url": "https://github.com/ossrs/srs/commit/b5f50f3bf4cf9b6438680dfd88be836f40fa21db",
        "files": [
          "trunk/doc/CHANGELOG.md",
          "trunk/src/core/srs_core_version4.hpp",
          "trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp",
          "trunk/src/protocol/srs_protocol_http_client.cpp",
          "trunk/src/protocol/srs_protocol_http_client.hpp"
        ],
        "message": "API: Fix HTTPS callback issue using SNI in TLS client handshake. v4.0.270, v5.0.168, v6.0.61 (#3695)\n\n---------\n\nCo-authored-by: chundonglinlin <chundonglinlin@163.com>",
        "before_after_code_files": [
          "trunk/src/core/srs_core_version4.hpp||trunk/src/core/srs_core_version4.hpp",
          "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
          "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp",
          "trunk/src/protocol/srs_protocol_http_client.cpp||trunk/src/protocol/srs_protocol_http_client.cpp",
          "trunk/src/protocol/srs_protocol_http_client.hpp||trunk/src/protocol/srs_protocol_http_client.hpp"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ],
          "candidate": [
            "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp",
            "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp"
          ]
        }
      },
      "candidate_diff": {
        "trunk/src/core/srs_core_version4.hpp||trunk/src/core/srs_core_version4.hpp": [
          "File: trunk/src/core/srs_core_version4.hpp -> trunk/src/core/srs_core_version4.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       4",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    269",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    270",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version5.hpp||trunk/src/core/srs_core_version5.hpp": [
          "File: trunk/src/core/srs_core_version5.hpp -> trunk/src/core/srs_core_version5.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       5",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    167",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    168",
          "",
          "---------------"
        ],
        "trunk/src/core/srs_core_version6.hpp||trunk/src/core/srs_core_version6.hpp": [
          "File: trunk/src/core/srs_core_version6.hpp -> trunk/src/core/srs_core_version6.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: #define VERSION_MAJOR       6",
          "11: #define VERSION_MINOR       0",
          "14: #endif",
          "",
          "[Removed Lines]",
          "12: #define VERSION_REVISION    60",
          "",
          "[Added Lines]",
          "12: #define VERSION_REVISION    61",
          "",
          "---------------"
        ],
        "trunk/src/protocol/srs_protocol_http_client.cpp||trunk/src/protocol/srs_protocol_http_client.cpp": [
          "File: trunk/src/protocol/srs_protocol_http_client.cpp -> trunk/src/protocol/srs_protocol_http_client.cpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "57: #pragma GCC diagnostic push",
          "58: #pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"",
          "60: {",
          "61:     srs_error_t err = srs_success;",
          "",
          "[Removed Lines]",
          "59: srs_error_t SrsSslClient::handshake()",
          "",
          "[Added Lines]",
          "59: srs_error_t SrsSslClient::handshake(const std::string& host)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "89:     SSL_set_connect_state(ssl);",
          "90:     SSL_set_mode(ssl, SSL_MODE_ENABLE_PARTIAL_WRITE);",
          "93:     int r0 = SSL_do_handshake(ssl); int r1 = SSL_get_error(ssl, r0); ERR_clear_error();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:     if (!srs_check_ip_addr_valid(host)) {",
          "93:         SSL_set_tlsext_host_name(ssl, host.c_str());",
          "94:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "469:     srs_utime_t starttime = srs_update_system_time();",
          "472:         disconnect();",
          "473:         return srs_error_wrap(err, \"http: ssl connect %s %s:%d to=%dms, rto=%dms\",",
          "474:             schema_.c_str(), host.c_str(), port, srsu2msi(timeout), srsu2msi(recv_timeout));",
          "",
          "[Removed Lines]",
          "471:     if ((err = ssl_transport->handshake()) != srs_success) {",
          "",
          "[Added Lines]",
          "475:     if ((err = ssl_transport->handshake(host)) != srs_success) {",
          "",
          "---------------"
        ],
        "trunk/src/protocol/srs_protocol_http_client.hpp||trunk/src/protocol/srs_protocol_http_client.hpp": [
          "File: trunk/src/protocol/srs_protocol_http_client.hpp -> trunk/src/protocol/srs_protocol_http_client.hpp",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:     SrsSslClient(SrsTcpClient* tcp);",
          "44:     virtual ~SrsSslClient();",
          "45: public:",
          "47: public:",
          "48:     virtual srs_error_t read(void* buf, size_t size, ssize_t* nread);",
          "49:     virtual srs_error_t write(void* buf, size_t size, ssize_t* nwrite);",
          "",
          "[Removed Lines]",
          "46:     virtual srs_error_t handshake();",
          "",
          "[Added Lines]",
          "46:     virtual srs_error_t handshake(const std::string& host);",
          "",
          "---------------"
        ]
      }
    }
  ]
}