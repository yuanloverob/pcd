{
  "cve_id": "CVE-2023-45897",
  "cve_desc": "exfatprogs before 1.2.2 allows out-of-bounds memory access, such as in read_file_dentry_set.",
  "repo": "exfatprogs/exfatprogs",
  "patch_hash": "4abc55e976573991e6a1117bb2b3711e59da07ae",
  "patch_info": {
    "commit_hash": "4abc55e976573991e6a1117bb2b3711e59da07ae",
    "repo": "exfatprogs/exfatprogs",
    "commit_url": "https://github.com/exfatprogs/exfatprogs/commit/4abc55e976573991e6a1117bb2b3711e59da07ae",
    "files": [
      "exfat2img/exfat2img.c"
    ],
    "message": "exfat2img: fix out-of-bounds write in read_file_dentry_set\n\nif SecondaryCount is greater than (2 + the max number\nof File Name entries), writing to memory outside\nthe node->name could happen.\n\nReported-by: Yuezhang Mo <Yuezhang.Mo@sony.com>\nSigned-off-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>",
    "before_after_code_files": [
      "exfat2img/exfat2img.c||exfat2img/exfat2img.c"
    ]
  },
  "patch_diff": {
    "exfat2img/exfat2img.c||exfat2img/exfat2img.c": [
      "File: exfat2img/exfat2img.c -> exfat2img/exfat2img.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "319:  if (!node)",
      "320:   return -ENOMEM;",
      "323:   ret = exfat_de_iter_get(iter, i, &dentry);",
      "324:   if (ret || dentry->type != EXFAT_NAME)",
      "325:    break;",
      "",
      "[Removed Lines]",
      "322:  for (i = 2; i <= file_de->file_num_ext; i++) {",
      "",
      "[Added Lines]",
      "322:  for (i = 2; i <= MIN(file_de->file_num_ext, 1 + MAX_NAME_DENTRIES); i++) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b59a7166b9c9826af76bb3cd6005491f095ede7b",
      "candidate_info": {
        "commit_hash": "b59a7166b9c9826af76bb3cd6005491f095ede7b",
        "repo": "exfatprogs/exfatprogs",
        "commit_url": "https://github.com/exfatprogs/exfatprogs/commit/b59a7166b9c9826af76bb3cd6005491f095ede7b",
        "files": [
          "fsck/fsck.c",
          "include/exfat_dir.h",
          "lib/exfat_dir.c",
          "lib/libexfat.c"
        ],
        "message": "lib: support get the first empty dentry set position\n\nThis commit adds ->in.dentry_count to exfat_lookup_filter.\n\nIf ->in.dentry_count is 0, the function of exfat_lookup_dentry_set()\nhas no change. After calling exfat_lookup_dentry_set(), if the dentry\nset is not found, ->out.dev_offset will be the position of the last\nempty dentry set.\n\nIf ->in.dentry_count is not 0, the function of exfat_lookup_dentry_set()\nwill be changed. After calling exfat_lookup_dentry_set(), if the dentry\nset is not found, ->out.dev_offset will be the position of the first\nempty dentry set with ->in.dentry_count empty dentries.\n\nSigned-off-by: Yuezhang Mo <Yuezhang.Mo@sony.com>\nReviewed-by: Andy Wu <Andy.Wu@sony.com>\nReviewed-by: Aoyama Wataru <wataru.aoyama@sony.com>\nAcked-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>",
        "before_after_code_files": [
          "fsck/fsck.c||fsck/fsck.c",
          "include/exfat_dir.h||include/exfat_dir.h",
          "lib/exfat_dir.c||lib/exfat_dir.c",
          "lib/libexfat.c||lib/libexfat.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/exfatprogs/exfatprogs/pull/239"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fsck/fsck.c||fsck/fsck.c": [
          "File: fsck/fsck.c -> fsck/fsck.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "880: {",
          "881:  struct exfat_lookup_filter filter = {",
          "882:   .in.type = EXFAT_BITMAP,",
          "883:   .in.filter = NULL,",
          "884:   .in.param = NULL,",
          "885:  };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "883:   .in.dentry_count = 0,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "954: {",
          "955:  struct exfat_lookup_filter filter = {",
          "956:   .in.type = EXFAT_UPCASE,",
          "957:   .in.filter = NULL,",
          "958:   .in.param = NULL,",
          "959:  };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "958:   .in.dentry_count = 0,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1314:  struct exfat_dentry_loc loc;",
          "1315:  struct exfat_lookup_filter lf = {",
          "1316:   .in.type = EXFAT_INVAL,",
          "1317:   .in.filter = NULL,",
          "1318:  };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1319:   .in.dentry_count = 0,",
          "",
          "---------------"
        ],
        "include/exfat_dir.h||include/exfat_dir.h": [
          "File: include/exfat_dir.h -> include/exfat_dir.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: struct exfat_lookup_filter {",
          "35:  struct {",
          "36:   uint8_t  type;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "37:   int  dentry_count;",
          "",
          "---------------"
        ],
        "lib/exfat_dir.c||lib/exfat_dir.c": [
          "File: lib/exfat_dir.c -> lib/exfat_dir.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "356:  struct exfat_dentry *dentry = NULL;",
          "357:  off_t free_file_offset = 0, free_dev_offset = 0;",
          "358:  struct exfat_de_iter de_iter;",
          "360:  int retval;",
          "363:  bd = exfat_alloc_buffer(2, exfat->clus_size, exfat->sect_size);",
          "364:  if (!bd)",
          "",
          "[Removed Lines]",
          "359:  int dentry_count;",
          "361:  bool last_is_free = false;",
          "",
          "[Added Lines]",
          "359:  int dentry_count, empty_dentry_count = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "379:    goto out;",
          "380:   }",
          "382:   dentry_count = 1;",
          "383:   if (dentry->type == filter->in.type) {",
          "384:    retval = 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "381:   if (!IS_EXFAT_DELETED(dentry->type)) {",
          "382:    if (filter->in.dentry_count == 0 ||",
          "383:        empty_dentry_count < filter->in.dentry_count)",
          "384:     empty_dentry_count = 0;",
          "385:   }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "407:    } else if (retval < 0) {",
          "408:     goto out;",
          "409:    }",
          "414:     free_file_offset =",
          "415:      exfat_de_iter_file_offset(&de_iter);",
          "416:     free_dev_offset =",
          "417:      exfat_de_iter_device_offset(&de_iter);",
          "419:    }",
          "422:   }",
          "424:   exfat_de_iter_advance(&de_iter, dentry_count);",
          "",
          "[Removed Lines]",
          "410:    last_is_free = false;",
          "411:   } else if ((dentry->type == EXFAT_LAST ||",
          "412:        IS_EXFAT_DELETED(dentry->type))) {",
          "413:    if (!last_is_free) {",
          "418:     last_is_free = true;",
          "420:   } else {",
          "421:    last_is_free = false;",
          "",
          "[Added Lines]",
          "415:   } else if (IS_EXFAT_DELETED(dentry->type)) {",
          "416:    if (empty_dentry_count == 0) {",
          "423:    if (filter->in.dentry_count == 0 ||",
          "424:        empty_dentry_count < filter->in.dentry_count)",
          "425:     empty_dentry_count++;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "430:    exfat_de_iter_file_offset(&de_iter);",
          "431:   filter->out.dev_offset =",
          "432:    exfat_de_iter_device_offset(&de_iter);",
          "434:   filter->out.file_offset = free_file_offset;",
          "435:   filter->out.dev_offset = free_dev_offset;",
          "436:  } else {",
          "",
          "[Removed Lines]",
          "433:  } else if (retval == EOF && last_is_free) {",
          "",
          "[Added Lines]",
          "437:  } else if (retval == EOF && empty_dentry_count) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "495:  filter_out->in.type = EXFAT_FILE;",
          "496:  filter_out->in.filter = filter_lookup_file;",
          "497:  filter_out->in.param = utf16_name;",
          "499:  retval = exfat_lookup_dentry_set(exfat, parent, filter_out);",
          "500:  if (retval < 0)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "502:  filter_out->in.dentry_count = 0;",
          "",
          "---------------"
        ],
        "lib/libexfat.c||lib/libexfat.c": [
          "File: lib/libexfat.c -> lib/libexfat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "412:  __le16 disk_label[VOLUME_LABEL_MAX_LEN];",
          "413:  struct exfat_lookup_filter filter = {",
          "414:   .in.type = EXFAT_VOLUME,",
          "415:   .in.filter = NULL,",
          "416:  };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "415:   .in.dentry_count = 0,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "454:  struct exfat_lookup_filter filter = {",
          "455:   .in.type = EXFAT_VOLUME,",
          "456:   .in.filter = NULL,",
          "457:  };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "457:   .in.dentry_count = 1,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3d22dccfa32e0c280f3c416801eff415a825060b",
      "candidate_info": {
        "commit_hash": "3d22dccfa32e0c280f3c416801eff415a825060b",
        "repo": "exfatprogs/exfatprogs",
        "commit_url": "https://github.com/exfatprogs/exfatprogs/commit/3d22dccfa32e0c280f3c416801eff415a825060b",
        "files": [
          "manpages/mkfs.exfat.8",
          "manpages/tune.exfat.8"
        ],
        "message": "manpages: add usage for volume GUID\n\nThis commit adds option -U to mkfs.exfat manpage and add\noption -U/-u to tune.exfat manpage.\n\nSigned-off-by: Yuezhang Mo <Yuezhang.Mo@sony.com>\nReviewed-by: Andy Wu <Andy.Wu@sony.com>\nReviewed-by: Aoyama Wataru <wataru.aoyama@sony.com>\nAcked-by: Hyunchul Lee <hyc.lee@gmail.com>\nSigned-off-by: Namjae Jeon <linkinjeon@kernel.org>",
        "before_after_code_files": [
          "manpages/mkfs.exfat.8||manpages/mkfs.exfat.8",
          "manpages/tune.exfat.8||manpages/tune.exfat.8"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/exfatprogs/exfatprogs/pull/239"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "manpages/mkfs.exfat.8||manpages/mkfs.exfat.8": [
          "File: manpages/mkfs.exfat.8 -> manpages/mkfs.exfat.8",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: .B \\-L",
          "18: .I volume_label",
          "19: ] [",
          "20: .B \\-\\-pack\\-bitmap",
          "21: ] [",
          "22: .B \\-v",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: .B \\-U",
          "21: .I volume_guid",
          "22: ] [",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95: .BR \\-L \", \" \\-\\-volume\\-label =\\fIlabel\\fR",
          "96: Specifies the volume label to be associated with the exFAT filesystem.",
          "97: .TP",
          "98: .B \\-\\-pack\\-bitmap",
          "99: Attempts to relocate the exFAT allocation bitmap so that it ends at the",
          "100: alignment boundary immediately following the FAT rather than beginning at that",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101: .BR \\-U \", \" \\-\\-volume\\-guid =\\fIguid\\fR",
          "102: Specifies the volume GUID to be associated with the exFAT filesystem.",
          "103: .TP",
          "",
          "---------------"
        ],
        "manpages/tune.exfat.8||manpages/tune.exfat.8": [
          "File: manpages/tune.exfat.8 -> manpages/tune.exfat.8",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: .B \\-L",
          "11: .I set-label",
          "12: ] [",
          "13: .B \\-i",
          "14: .I print-serial",
          "15: ] [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "13: .B \\-u",
          "14: .I print-guid",
          "15: ] [",
          "16: .B \\-U",
          "17: .I set-guid",
          "18: ] [",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33: .BI \\-L \" set-label\"",
          "34: Set the volume label of the filesystem to the provided argument.",
          "35: .TP",
          "36: .BI \\-i \" print-serial\"",
          "37: Print the volume serial of the exFAT filesystem.",
          "38: .TP",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42: .BI \\-u \" print-guid\"",
          "43: Print the volume GUID of the exFAT filesystem.",
          "44: .TP",
          "45: .BI \\-U \" set-guid\"",
          "46: Set the volume GUID of the filesystem to the provided argument.",
          "47: .TP",
          "",
          "---------------"
        ]
      }
    }
  ]
}