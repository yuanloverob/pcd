{
  "cve_id": "CVE-2019-11458",
  "cve_desc": "An issue was discovered in SmtpTransport in CakePHP 3.7.6. An unserialized object with modified internal properties can trigger arbitrary file overwriting upon destruction.",
  "repo": "cakephp/cakephp",
  "patch_hash": "1a74e798309192a9895c9cedabd714ceee345f4e",
  "patch_info": {
    "commit_hash": "1a74e798309192a9895c9cedabd714ceee345f4e",
    "repo": "cakephp/cakephp",
    "commit_url": "https://github.com/cakephp/cakephp/commit/1a74e798309192a9895c9cedabd714ceee345f4e",
    "files": [
      "src/Mailer/Transport/SmtpTransport.php",
      "tests/TestCase/Mailer/Transport/SmtpTransportTest.php"
    ],
    "message": "Fix side-effect in destructor\n\nSmtpTransport had the potential to create a harmful side-effect\nin its destructor should an untrusted value ever be deserialized. This\nsolves that by removing the socket on wakeup.",
    "before_after_code_files": [
      "src/Mailer/Transport/SmtpTransport.php||src/Mailer/Transport/SmtpTransport.php",
      "tests/TestCase/Mailer/Transport/SmtpTransportTest.php||tests/TestCase/Mailer/Transport/SmtpTransportTest.php"
    ]
  },
  "patch_diff": {
    "src/Mailer/Transport/SmtpTransport.php||src/Mailer/Transport/SmtpTransport.php": [
      "File: src/Mailer/Transport/SmtpTransport.php -> src/Mailer/Transport/SmtpTransport.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "78:         }",
      "79:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:     public function __wakeup()",
      "89:     {",
      "90:         $this->_socket = null;",
      "91:     }",
      "",
      "---------------"
    ],
    "tests/TestCase/Mailer/Transport/SmtpTransportTest.php||tests/TestCase/Mailer/Transport/SmtpTransportTest.php": [
      "File: tests/TestCase/Mailer/Transport/SmtpTransportTest.php -> tests/TestCase/Mailer/Transport/SmtpTransportTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "710:         $this->SmtpTransport->send($email);",
      "711:     }",
      "712: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "718:     public function testSerializeCleanupSocket()",
      "719:     {",
      "720:         $this->socket->expects($this->at(0))->method('connect')->will($this->returnValue(true));",
      "721:         $this->socket->expects($this->at(1))->method('read')->will($this->returnValue(\"220 Welcome message\\r\\n\"));",
      "722:         $this->socket->expects($this->at(2))->method('write')->with(\"EHLO localhost\\r\\n\");",
      "723:         $this->socket->expects($this->at(3))->method('read')->will($this->returnValue(\"250 OK\\r\\n\"));",
      "725:         $smtpTransport = new SmtpTestTransport();",
      "726:         $smtpTransport->setSocket($this->socket);",
      "727:         $smtpTransport->connect();",
      "729:         $result = unserialize(serialize($smtpTransport));",
      "730:         $this->assertAttributeEquals(null, '_socket', $result);",
      "731:         $this->assertFalse($result->connected());",
      "732:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1e16656a25e769328f7bd88d911feea688137da6",
      "candidate_info": {
        "commit_hash": "1e16656a25e769328f7bd88d911feea688137da6",
        "repo": "cakephp/cakephp",
        "commit_url": "https://github.com/cakephp/cakephp/commit/1e16656a25e769328f7bd88d911feea688137da6",
        "files": [
          "src/Mailer/Email.php",
          "src/Mailer/Mailer.php",
          "src/Mailer/Message.php",
          "src/Mailer/Transport/SmtpTransport.php",
          "src/Mailer/TransportFactory.php"
        ],
        "message": "Add typehint for Mailer/",
        "before_after_code_files": [
          "src/Mailer/Email.php||src/Mailer/Email.php",
          "src/Mailer/Mailer.php||src/Mailer/Mailer.php",
          "src/Mailer/Message.php||src/Mailer/Message.php",
          "src/Mailer/Transport/SmtpTransport.php||src/Mailer/Transport/SmtpTransport.php",
          "src/Mailer/TransportFactory.php||src/Mailer/TransportFactory.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Mailer/Transport/SmtpTransport.php||src/Mailer/Transport/SmtpTransport.php"
          ],
          "candidate": [
            "src/Mailer/Transport/SmtpTransport.php||src/Mailer/Transport/SmtpTransport.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Mailer/Email.php||src/Mailer/Email.php": [
          "File: src/Mailer/Email.php -> src/Mailer/Email.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:     {",
          "163:         $result = $this->message->$method(...$args);",
          "",
          "[Removed Lines]",
          "161:     public function __call($method, $args)",
          "",
          "[Added Lines]",
          "161:     public function __call(string $method, array $args)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "285:     {",
          "286:         if ($type) {",
          "287:             return $this->message->getBody($type);",
          "",
          "[Removed Lines]",
          "284:     public function message($type = null)",
          "",
          "[Added Lines]",
          "284:     public function message(?string $type = null)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "463:     {",
          "464:         if (empty($this->_profile['log'])) {",
          "465:             return;",
          "",
          "[Removed Lines]",
          "462:     protected function _logDelivery($contents): void",
          "",
          "[Added Lines]",
          "462:     protected function _logDelivery(array $contents): void",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "607:     public function serialize(): string",
          "608:     {",
          "609:         $array = $this->jsonSerialize();",
          "611:             if ($item instanceof SimpleXMLElement) {",
          "612:                 $item = json_decode(json_encode((array)$item), true);",
          "613:             }",
          "",
          "[Removed Lines]",
          "610:         array_walk_recursive($array, function (&$item, $key) {",
          "",
          "[Added Lines]",
          "610:         array_walk_recursive($array, function (&$item, $key): void {",
          "",
          "---------------"
        ],
        "src/Mailer/Mailer.php||src/Mailer/Mailer.php": [
          "File: src/Mailer/Mailer.php -> src/Mailer/Mailer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "208:     {",
          "209:         $result = $this->_email->$method(...$args);",
          "210:         if (strpos($method, 'get') === 0) {",
          "",
          "[Removed Lines]",
          "207:     public function __call($method, $args)",
          "",
          "[Added Lines]",
          "207:     public function __call(string $method, array $args)",
          "",
          "---------------"
        ],
        "src/Mailer/Message.php||src/Mailer/Message.php": [
          "File: src/Mailer/Message.php -> src/Mailer/Message.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1765:             $array[$property] = $this->{$property};",
          "1766:         }",
          "1769:             if (!empty($item['file'])) {",
          "1770:                 $item['data'] = $this->readFile($item['file']);",
          "1771:                 unset($item['file']);",
          "",
          "[Removed Lines]",
          "1768:         array_walk($array['attachments'], function (&$item, $key) {",
          "",
          "[Added Lines]",
          "1768:         array_walk($array['attachments'], function (&$item, $key): void {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1800:     public function serialize(): string",
          "1801:     {",
          "1802:         $array = $this->jsonSerialize();",
          "1804:             if ($item instanceof SimpleXMLElement) {",
          "1805:                 $item = json_decode(json_encode((array)$item), true);",
          "1806:             }",
          "",
          "[Removed Lines]",
          "1803:         array_walk_recursive($array, function (&$item, $key) {",
          "",
          "[Added Lines]",
          "1803:         array_walk_recursive($array, function (&$item, $key): void {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1822:             throw new Exception('Unable to unserialize message.');",
          "1823:         }",
          "1826:     }",
          "1827: }",
          "",
          "[Removed Lines]",
          "1825:         return $this->createFromArray($array);",
          "",
          "[Added Lines]",
          "1825:         $this->createFromArray($array);",
          "",
          "---------------"
        ],
        "src/Mailer/Transport/SmtpTransport.php||src/Mailer/Transport/SmtpTransport.php": [
          "File: src/Mailer/Transport/SmtpTransport.php -> src/Mailer/Transport/SmtpTransport.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:     {",
          "90:         $this->_socket = null;",
          "91:     }",
          "",
          "[Removed Lines]",
          "88:     public function __wakeup()",
          "",
          "[Added Lines]",
          "88:     public function __wakeup(): void",
          "",
          "---------------"
        ],
        "src/Mailer/TransportFactory.php||src/Mailer/TransportFactory.php": [
          "File: src/Mailer/TransportFactory.php -> src/Mailer/TransportFactory.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:     {",
          "70:         static::$_registry = $registry;",
          "71:     }",
          "",
          "[Removed Lines]",
          "68:     public static function setRegistry(TransportRegistry $registry)",
          "",
          "[Added Lines]",
          "68:     public static function setRegistry(TransportRegistry $registry): void",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "81:     {",
          "82:         if (!isset(static::$_config[$name])) {",
          "83:             throw new InvalidArgumentException(",
          "",
          "[Removed Lines]",
          "80:     protected static function _buildTransport($name): void",
          "",
          "[Added Lines]",
          "80:     protected static function _buildTransport(string $name): void",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "104:     {",
          "105:         $registry = static::getRegistry();",
          "",
          "[Removed Lines]",
          "103:     public static function get($name): AbstractTransport",
          "",
          "[Added Lines]",
          "103:     public static function get(string $name): AbstractTransport",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "36e3a5a11c538931ea0897e5deda774aa0df49ee",
      "candidate_info": {
        "commit_hash": "36e3a5a11c538931ea0897e5deda774aa0df49ee",
        "repo": "cakephp/cakephp",
        "commit_url": "https://github.com/cakephp/cakephp/commit/36e3a5a11c538931ea0897e5deda774aa0df49ee",
        "files": [
          "src/Http/Middleware/BodyParserMiddleware.php",
          "src/Routing/RouteBuilder.php",
          "tests/TestCase/Controller/ControllerTest.php",
          "tests/TestCase/Database/QueryTest.php",
          "tests/TestCase/Datasource/ModelAwareTraitTest.php",
          "tests/TestCase/Event/EventDispatcherTraitTest.php",
          "tests/TestCase/Http/ActionDispatcherTest.php",
          "tests/TestCase/Http/Middleware/BodyParserMiddlewareTest.php",
          "tests/TestCase/Mailer/Transport/SmtpTransportTest.php",
          "tests/TestCase/ORM/QueryTest.php",
          "tests/TestCase/ORM/TableTest.php",
          "tests/TestCase/Routing/RouteBuilderTest.php",
          "tests/TestCase/View/Helper/FormHelperTest.php",
          "tests/TestCase/View/ViewTest.php",
          "tests/test_app/TestApp/Stub/Stub.php"
        ],
        "message": "Update tests to not use deprecated PHPUnit features\n\nFix the various deprecation warnings we're getting from PHPUnit about\nmethods that are now deprecated.",
        "before_after_code_files": [
          "src/Http/Middleware/BodyParserMiddleware.php||src/Http/Middleware/BodyParserMiddleware.php",
          "src/Routing/RouteBuilder.php||src/Routing/RouteBuilder.php",
          "tests/TestCase/Controller/ControllerTest.php||tests/TestCase/Controller/ControllerTest.php",
          "tests/TestCase/Database/QueryTest.php||tests/TestCase/Database/QueryTest.php",
          "tests/TestCase/Datasource/ModelAwareTraitTest.php||tests/TestCase/Datasource/ModelAwareTraitTest.php",
          "tests/TestCase/Event/EventDispatcherTraitTest.php||tests/TestCase/Event/EventDispatcherTraitTest.php",
          "tests/TestCase/Http/ActionDispatcherTest.php||tests/TestCase/Http/ActionDispatcherTest.php",
          "tests/TestCase/Http/Middleware/BodyParserMiddlewareTest.php||tests/TestCase/Http/Middleware/BodyParserMiddlewareTest.php",
          "tests/TestCase/Mailer/Transport/SmtpTransportTest.php||tests/TestCase/Mailer/Transport/SmtpTransportTest.php",
          "tests/TestCase/ORM/QueryTest.php||tests/TestCase/ORM/QueryTest.php",
          "tests/TestCase/ORM/TableTest.php||tests/TestCase/ORM/TableTest.php",
          "tests/TestCase/Routing/RouteBuilderTest.php||tests/TestCase/Routing/RouteBuilderTest.php",
          "tests/TestCase/View/Helper/FormHelperTest.php||tests/TestCase/View/Helper/FormHelperTest.php",
          "tests/TestCase/View/ViewTest.php||tests/TestCase/View/ViewTest.php",
          "tests/test_app/TestApp/Stub/Stub.php||tests/test_app/TestApp/Stub/Stub.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/TestCase/Mailer/Transport/SmtpTransportTest.php||tests/TestCase/Mailer/Transport/SmtpTransportTest.php"
          ],
          "candidate": [
            "tests/TestCase/Mailer/Transport/SmtpTransportTest.php||tests/TestCase/Mailer/Transport/SmtpTransportTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Http/Middleware/BodyParserMiddleware.php||src/Http/Middleware/BodyParserMiddleware.php": [
          "File: src/Http/Middleware/BodyParserMiddleware.php -> src/Http/Middleware/BodyParserMiddleware.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:         return $this;",
          "94:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:     public function getMethods(): array",
          "102:     {",
          "103:         return $this->methods;",
          "104:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "123:         return $this;",
          "124:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "141:     public function getParsers(): array",
          "142:     {",
          "143:         return $this->parsers;",
          "144:     }",
          "",
          "---------------"
        ],
        "src/Routing/RouteBuilder.php||src/Routing/RouteBuilder.php": [
          "File: src/Routing/RouteBuilder.php -> src/Routing/RouteBuilder.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1006:         return $this;",
          "1007:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1014:     public function getMiddleware(): array",
          "1015:     {",
          "1016:         return $this->middleware;",
          "1017:     }",
          "",
          "---------------"
        ],
        "tests/TestCase/Controller/ControllerTest.php||tests/TestCase/Controller/ControllerTest.php": [
          "File: tests/TestCase/Controller/ControllerTest.php -> tests/TestCase/Controller/ControllerTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: use Cake\\Controller\\Controller;",
          "20: use Cake\\Core\\Configure;",
          "21: use Cake\\Event\\EventInterface;",
          "22: use Cake\\Http\\Response;",
          "23: use Cake\\Http\\ServerRequest;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: use Cake\\Event\\Event;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "493:         $eventManager = $this->getMockBuilder('Cake\\Event\\EventManagerInterface')->getMock();",
          "494:         $controller = new Controller(null, null, null, $eventManager);",
          "516:         $controller->startupProcess();",
          "517:     }",
          "",
          "[Removed Lines]",
          "496:         $eventManager->expects($this->at(0))->method('dispatch')",
          "497:             ->with(",
          "498:                 $this->logicalAnd(",
          "499:                     $this->isInstanceOf('Cake\\Event\\Event'),",
          "500:                     $this->attributeEqualTo('_name', 'Controller.initialize'),",
          "501:                     $this->attributeEqualTo('_subject', $controller)",
          "502:                 )",
          "503:             )",
          "504:             ->will($this->returnValue($this->getMockBuilder('Cake\\Event\\Event')->disableOriginalConstructor()->getMock()));",
          "506:         $eventManager->expects($this->at(1))->method('dispatch')",
          "507:             ->with(",
          "508:                 $this->logicalAnd(",
          "509:                     $this->isInstanceOf('Cake\\Event\\Event'),",
          "510:                     $this->attributeEqualTo('_name', 'Controller.startup'),",
          "511:                     $this->attributeEqualTo('_subject', $controller)",
          "512:                 )",
          "513:             )",
          "514:             ->will($this->returnValue($this->getMockBuilder('Cake\\Event\\Event')->disableOriginalConstructor()->getMock()));",
          "",
          "[Added Lines]",
          "497:         $eventManager",
          "498:             ->expects($this->at(0))",
          "499:             ->method('dispatch')",
          "500:             ->with($this->callback(function (EventInterface $event) {",
          "501:                 return $event->getName() === 'Controller.initialize';",
          "502:             }))",
          "503:             ->will($this->returnValue(new Event('stub')));",
          "505:         $eventManager",
          "506:             ->expects($this->at(1))",
          "507:             ->method('dispatch')",
          "508:             ->with($this->callback(function (EventInterface $event) {",
          "509:                 return $event->getName() === 'Controller.startup';",
          "510:             }))",
          "511:             ->will($this->returnValue(new Event('stub')));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "526:         $eventManager = $this->getMockBuilder('Cake\\Event\\EventManagerInterface')->getMock();",
          "527:         $controller = new Controller(null, null, null, $eventManager);",
          "539:         $controller->shutdownProcess();",
          "540:     }",
          "",
          "[Removed Lines]",
          "529:         $eventManager->expects($this->once())->method('dispatch')",
          "530:             ->with(",
          "531:                 $this->logicalAnd(",
          "532:                     $this->isInstanceOf('Cake\\Event\\Event'),",
          "533:                     $this->attributeEqualTo('_name', 'Controller.shutdown'),",
          "534:                     $this->attributeEqualTo('_subject', $controller)",
          "535:                 )",
          "536:             )",
          "537:             ->will($this->returnValue($this->getMockBuilder('Cake\\Event\\Event')->disableOriginalConstructor()->getMock()));",
          "",
          "[Added Lines]",
          "526:         $eventManager->expects($this->once())",
          "527:             ->method('dispatch')",
          "528:             ->with($this->callback(function (EventInterface $event) {",
          "529:                 return $event->getName() === 'Controller.shutdown';",
          "530:             }))",
          "531:             ->will($this->returnValue(new Event('stub')));",
          "",
          "---------------"
        ],
        "tests/TestCase/Database/QueryTest.php||tests/TestCase/Database/QueryTest.php": [
          "File: tests/TestCase/Database/QueryTest.php -> tests/TestCase/Database/QueryTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: use Cake\\TestSuite\\TestCase;",
          "29: use DateTimeImmutable;",
          "30: use InvalidArgumentException;",
          "31: use TestApp\\Database\\Type\\BarType;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: use ReflectionProperty;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2321:             ->limit(1)",
          "2322:             ->offset(1)",
          "2323:             ->execute();",
          "2326:         $query->offset(2);",
          "2329:     }",
          "",
          "[Removed Lines]",
          "2324:         $dirty = $this->readAttribute($query, '_dirty');",
          "2325:         $this->assertFalse($dirty);",
          "2327:         $dirty = $this->readAttribute($query, '_dirty');",
          "2328:         $this->assertTrue($dirty);",
          "",
          "[Added Lines]",
          "2326:         $reflect = new ReflectionProperty($query, '_dirty');",
          "2327:         $reflect->setAccessible(true);",
          "2328:         $this->assertFalse($reflect->getvalue($query));",
          "2331:         $this->assertTrue($reflect->getvalue($query));",
          "",
          "---------------"
        ],
        "tests/TestCase/Datasource/ModelAwareTraitTest.php||tests/TestCase/Datasource/ModelAwareTraitTest.php": [
          "File: tests/TestCase/Datasource/ModelAwareTraitTest.php -> tests/TestCase/Datasource/ModelAwareTraitTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:     public function testSetModelClass()",
          "35:     {",
          "36:         $stub = new Stub();",
          "39:         $stub->setProps('StubArticles');",
          "41:     }",
          "",
          "[Removed Lines]",
          "37:         $this->assertAttributeEquals(null, 'modelClass', $stub);",
          "40:         $this->assertAttributeEquals('StubArticles', 'modelClass', $stub);",
          "",
          "[Added Lines]",
          "37:         $this->assertNull($stub->getModelClass());",
          "40:         $this->assertEquals('StubArticles', $stub->getModelClass());",
          "",
          "---------------"
        ],
        "tests/TestCase/Event/EventDispatcherTraitTest.php||tests/TestCase/Event/EventDispatcherTraitTest.php": [
          "File: tests/TestCase/Event/EventDispatcherTraitTest.php -> tests/TestCase/Event/EventDispatcherTraitTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:         $this->subject = $this->getObjectForTrait(EventDispatcherTrait::class);",
          "43:     }",
          "",
          "[Removed Lines]",
          "50:     public function testIsInitiallyEmpty()",
          "51:     {",
          "52:         $this->assertAttributeEmpty('_eventManager', $this->subject);",
          "53:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/TestCase/Http/ActionDispatcherTest.php||tests/TestCase/Http/ActionDispatcherTest.php": [
          "File: tests/TestCase/Http/ActionDispatcherTest.php -> tests/TestCase/Http/ActionDispatcherTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: use Cake\\Http\\ServerRequest;",
          "22: use Cake\\Routing\\Router;",
          "23: use Cake\\TestSuite\\TestCase;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: use ReflectionProperty;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:         $factory = $this->getMockBuilder('Cake\\Http\\ControllerFactory')->getMock();",
          "51:         $dispatcher = new ActionDispatcher($factory);",
          "54:     }",
          "",
          "[Removed Lines]",
          "53:         $this->assertAttributeSame($factory, 'factory', $dispatcher);",
          "",
          "[Added Lines]",
          "54:         $reflect = new ReflectionProperty($dispatcher, 'factory');",
          "55:         $reflect->setAccessible(true);",
          "56:         $this->assertSame($factory, $reflect->getValue($dispatcher));",
          "",
          "---------------"
        ],
        "tests/TestCase/Http/Middleware/BodyParserMiddlewareTest.php||tests/TestCase/Http/Middleware/BodyParserMiddlewareTest.php": [
          "File: tests/TestCase/Http/Middleware/BodyParserMiddlewareTest.php -> tests/TestCase/Http/Middleware/BodyParserMiddlewareTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:     public function testConstructorMethodsOption()",
          "64:     {",
          "65:         $parser = new BodyParserMiddleware(['methods' => ['PUT']]);",
          "67:     }",
          "",
          "[Removed Lines]",
          "66:         $this->assertAttributeEquals(['PUT'], 'methods', $parser);",
          "",
          "[Added Lines]",
          "66:         $this->assertEquals(['PUT'], $parser->getMethods());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74:     public function testConstructorXmlOption()",
          "75:     {",
          "76:         $parser = new BodyParserMiddleware(['json' => false]);",
          "79:         $parser = new BodyParserMiddleware(['json' => false, 'xml' => false]);",
          "82:         $parser = new BodyParserMiddleware(['json' => false, 'xml' => true]);",
          "83:         $expected = [",
          "84:             'application/xml' => [$parser, 'decodeXml'],",
          "85:             'text/xml' => [$parser, 'decodeXml'],",
          "86:         ];",
          "88:     }",
          "",
          "[Removed Lines]",
          "77:         $this->assertAttributeEquals([], 'parsers', $parser, 'Xml off by default');",
          "80:         $this->assertAttributeEquals([], 'parsers', $parser, 'No Xml types set.');",
          "87:         $this->assertAttributeEquals($expected, 'parsers', $parser, 'Xml types are incorrect.');",
          "",
          "[Added Lines]",
          "77:         $this->assertEquals([], $parser->getParsers(), 'Xml off by default');",
          "80:         $this->assertEquals([], $parser->getParsers(), 'No Xml types set.');",
          "87:         $this->assertEquals($expected, $parser->getParsers(), 'Xml types are incorrect.');",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "95:     public function testConstructorJsonOption()",
          "96:     {",
          "97:         $parser = new BodyParserMiddleware(['json' => false]);",
          "100:         $parser = new BodyParserMiddleware([]);",
          "101:         $expected = [",
          "102:             'application/json' => [$parser, 'decodeJson'],",
          "103:             'text/json' => [$parser, 'decodeJson'],",
          "104:         ];",
          "106:     }",
          "",
          "[Removed Lines]",
          "98:         $this->assertAttributeEquals([], 'parsers', $parser, 'No JSON types set.');",
          "105:         $this->assertAttributeEquals($expected, 'parsers', $parser, 'JSON types are incorrect.');",
          "",
          "[Added Lines]",
          "98:         $this->assertEquals([], $parser->getParsers(), 'No JSON types set.');",
          "105:         $this->assertEquals($expected, $parser->getParsers(), 'JSON types are incorrect.');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "114:     {",
          "115:         $parser = new BodyParserMiddleware();",
          "116:         $this->assertSame($parser, $parser->setMethods(['PUT']));",
          "118:     }",
          "",
          "[Removed Lines]",
          "117:         $this->assertAttributeEquals(['PUT'], 'methods', $parser);",
          "",
          "[Added Lines]",
          "117:         $this->assertEquals(['PUT'], $parser->getMethods());",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "139:         $parser->addParser(['application/json'], 'json_decode');",
          "140:         $parser->addParser(['application/json'], 'strpos');",
          "143:     }",
          "",
          "[Removed Lines]",
          "142:         $this->assertAttributeEquals(['application/json' => 'strpos'], 'parsers', $parser);",
          "",
          "[Added Lines]",
          "142:         $this->assertEquals(['application/json' => 'strpos'], $parser->getParsers());",
          "",
          "---------------"
        ],
        "tests/TestCase/Mailer/Transport/SmtpTransportTest.php||tests/TestCase/Mailer/Transport/SmtpTransportTest.php": [
          "File: tests/TestCase/Mailer/Transport/SmtpTransportTest.php -> tests/TestCase/Mailer/Transport/SmtpTransportTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: use Cake\\Mailer\\Message;",
          "20: use Cake\\Network\\Exception\\SocketException;",
          "21: use Cake\\TestSuite\\TestCase;",
          "22: use TestApp\\Mailer\\Transport\\SmtpTestTransport;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: use ReflectionProperty;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "701:         $smtpTransport->connect();",
          "703:         $result = unserialize(serialize($smtpTransport));",
          "705:         $this->assertFalse($result->connected());",
          "706:     }",
          "707: }",
          "",
          "[Removed Lines]",
          "704:         $this->assertAttributeEquals(null, '_socket', $result);",
          "",
          "[Added Lines]",
          "706:         $reflect = new ReflectionProperty($result, '_socket');",
          "707:         $reflect->setAccessible(true);",
          "708:         $this->assertNull($reflect->getValue($result));",
          "",
          "---------------"
        ],
        "tests/TestCase/ORM/QueryTest.php||tests/TestCase/ORM/QueryTest.php": [
          "File: tests/TestCase/ORM/QueryTest.php -> tests/TestCase/ORM/QueryTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: use Cake\\ORM\\Query;",
          "32: use Cake\\ORM\\ResultSet;",
          "33: use Cake\\TestSuite\\TestCase;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: use ReflectionProperty;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2858:         $loader = $query->getEagerLoader();",
          "2859:         $this->assertEquals($copyLoader, $loader, 'should be equal');",
          "2860:         $this->assertNotSame($copyLoader, $loader, 'should be clones');",
          "2861:         $this->assertNotSame(",
          "2864:             'should be clones'",
          "2865:         );",
          "2866:         $this->assertNull($copy->clause('offset'));",
          "",
          "[Removed Lines]",
          "2862:             $this->readAttribute($copyLoader, '_matching'),",
          "2863:             $this->readAttribute($loader, '_matching'),",
          "",
          "[Added Lines]",
          "2863:         $reflect = new ReflectionProperty($loader, '_matching');",
          "2864:         $reflect->setAccessible(true);",
          "2866:             $reflect->getValue($copyLoader),",
          "2867:             $reflect->getValue($loader),",
          "",
          "---------------"
        ],
        "tests/TestCase/ORM/TableTest.php||tests/TestCase/ORM/TableTest.php": [
          "File: tests/TestCase/ORM/TableTest.php -> tests/TestCase/ORM/TableTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "2998:         $mock->expects($this->at(2))",
          "2999:             ->method('dispatch')",
          "3008:         $mock->expects($this->at(3))",
          "3009:             ->method('dispatch')",
          "3018:         $mock->expects($this->at(4))",
          "3019:             ->method('dispatch')",
          "3028:         $table = $this->getTableLocator()->get('users', ['eventManager' => $mock]);",
          "3029:         $entity->isNew(false);",
          "",
          "[Removed Lines]",
          "3000:             ->with($this->logicalAnd(",
          "3001:                 $this->attributeEqualTo('_name', 'Model.beforeDelete'),",
          "3002:                 $this->attributeEqualTo(",
          "3003:                     '_data',",
          "3004:                     ['entity' => $entity, 'options' => $options]",
          "3005:                 )",
          "3006:             ));",
          "3010:             ->with($this->logicalAnd(",
          "3011:                 $this->attributeEqualTo('_name', 'Model.afterDelete'),",
          "3012:                 $this->attributeEqualTo(",
          "3013:                     '_data',",
          "3014:                     ['entity' => $entity, 'options' => $options]",
          "3015:                 )",
          "3016:             ));",
          "3020:             ->with($this->logicalAnd(",
          "3021:                 $this->attributeEqualTo('_name', 'Model.afterDeleteCommit'),",
          "3022:                 $this->attributeEqualTo(",
          "3023:                     '_data',",
          "3024:                     ['entity' => $entity, 'options' => $options]",
          "3025:                 )",
          "3026:             ));",
          "",
          "[Added Lines]",
          "3000:             ->with($this->callback(function (EventInterface $event) use ($entity, $options) {",
          "3001:                 return (",
          "3002:                     $event->getName() === 'Model.beforeDelete' &&",
          "3003:                     $event->getData() == ['entity' => $entity, 'options' => $options]",
          "3004:                 );",
          "3005:             }));",
          "3009:             ->with($this->callback(function (EventInterface $event) use ($entity, $options) {",
          "3010:                 return (",
          "3011:                     $event->getName() === 'Model.afterDelete' &&",
          "3012:                     $event->getData() == ['entity' => $entity, 'options' => $options]",
          "3013:                 );",
          "3014:             }));",
          "3018:             ->with($this->callback(function (EventInterface $event) use ($entity, $options) {",
          "3019:                 return (",
          "3020:                     $event->getName() === 'Model.afterDeleteCommit' &&",
          "3021:                     $event->getData() == ['entity' => $entity, 'options' => $options]",
          "3022:                 );",
          "3023:             }));",
          "",
          "---------------"
        ],
        "tests/TestCase/Routing/RouteBuilderTest.php||tests/TestCase/Routing/RouteBuilderTest.php": [
          "File: tests/TestCase/Routing/RouteBuilderTest.php -> tests/TestCase/Routing/RouteBuilderTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "954:             ['middleware' => ['auth']]",
          "955:         );",
          "956:         $routes->scope('/v1', function (RouteBuilder $routes) {",
          "958:             $this->assertSame('/api/v1', $routes->path());",
          "959:             $this->assertEquals(['prefix' => 'api'], $routes->params());",
          "960:         });",
          "",
          "[Removed Lines]",
          "957:             $this->assertAttributeEquals(['auth'], 'middleware', $routes, 'Should inherit middleware');",
          "",
          "[Added Lines]",
          "957:             $this->assertSame(['auth'], $routes->getMiddleware(), 'Should inherit middleware');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1078:         $routes->applyMiddleware('test');",
          "1079:         $routes->applyMiddleware('test2');",
          "1082:     }",
          "",
          "[Removed Lines]",
          "1081:         $this->assertAttributeEquals(['test', 'test2'], 'middleware', $routes);",
          "",
          "[Added Lines]",
          "1081:         $this->assertSame(['test', 'test2'], $routes->getMiddleware());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1097:         $routes->applyMiddleware('test', 'test2');",
          "1098:         $routes->applyMiddleware('test2', 'test');",
          "1101:     }",
          "",
          "[Removed Lines]",
          "1100:         $this->assertAttributeEquals(['test', 'test2'], 'middleware', $routes);",
          "",
          "[Added Lines]",
          "1100:         $this->assertEquals(['test', 'test2'], $routes->getMiddleware());",
          "",
          "---------------"
        ],
        "tests/TestCase/View/Helper/FormHelperTest.php||tests/TestCase/View/Helper/FormHelperTest.php": [
          "File: tests/TestCase/View/Helper/FormHelperTest.php -> tests/TestCase/View/Helper/FormHelperTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "31: use Cake\\View\\Helper\\FormHelper;",
          "32: use Cake\\View\\View;",
          "33: use Cake\\View\\Widget\\WidgetLocator;",
          "34: use TestApp\\Model\\Entity\\Article;",
          "35: use TestApp\\Model\\Table\\ContactsTable;",
          "36: use TestApp\\Model\\Table\\ValidateUsersTable;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: use ReflectionProperty;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6961:         $this->assertEquals(['title'], $this->Form->fields);",
          "6962:         $this->assertStringContainsString($hash, $result, 'Should contain the correct hash.');",
          "6964:     }",
          "",
          "[Removed Lines]",
          "6963:         $this->assertAttributeEquals('/articles/add', '_lastAction', $this->Form, 'lastAction was should be restored.');",
          "",
          "[Added Lines]",
          "6964:         $reflect = new ReflectionProperty($this->Form, '_lastAction');",
          "6965:         $reflect->setAccessible(true);",
          "6966:         $this->assertEquals('/articles/add', $reflect->getValue($this->Form), 'lastAction was should be restored.');",
          "",
          "---------------"
        ],
        "tests/TestCase/View/ViewTest.php||tests/TestCase/View/ViewTest.php": [
          "File: tests/TestCase/View/ViewTest.php -> tests/TestCase/View/ViewTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "951:         $manager = $this->getMockBuilder('Cake\\Event\\EventManager')->getMock();",
          "952:         $View->setEventManager($manager);",
          "1026:         $View->render('index');",
          "1027:     }",
          "",
          "[Removed Lines]",
          "954:         $manager->expects($this->at(0))->method('dispatch')",
          "955:             ->with(",
          "956:                 $this->logicalAnd(",
          "957:                     $this->isInstanceOf('Cake\\Event\\Event'),",
          "958:                     $this->attributeEqualTo('_name', 'View.beforeRender'),",
          "959:                     $this->attributeEqualTo('_subject', $View)",
          "960:                 )",
          "961:             );",
          "963:         $manager->expects($this->at(1))->method('dispatch')",
          "964:             ->with(",
          "965:                 $this->logicalAnd(",
          "966:                     $this->isInstanceOf('Cake\\Event\\Event'),",
          "967:                     $this->attributeEqualTo('_name', 'View.beforeRenderFile'),",
          "968:                     $this->attributeEqualTo('_subject', $View)",
          "969:                 )",
          "970:             );",
          "972:         $manager->expects($this->at(2))->method('dispatch')",
          "973:             ->with(",
          "974:                 $this->logicalAnd(",
          "975:                     $this->isInstanceOf('Cake\\Event\\Event'),",
          "976:                     $this->attributeEqualTo('_name', 'View.afterRenderFile'),",
          "977:                     $this->attributeEqualTo('_subject', $View)",
          "978:                 )",
          "979:             );",
          "981:         $manager->expects($this->at(3))->method('dispatch')",
          "982:             ->with(",
          "983:                 $this->logicalAnd(",
          "984:                     $this->isInstanceOf('Cake\\Event\\Event'),",
          "985:                     $this->attributeEqualTo('_name', 'View.afterRender'),",
          "986:                     $this->attributeEqualTo('_subject', $View)",
          "987:                 )",
          "988:             );",
          "990:         $manager->expects($this->at(4))->method('dispatch')",
          "991:             ->with(",
          "992:                 $this->logicalAnd(",
          "993:                     $this->isInstanceOf('Cake\\Event\\Event'),",
          "994:                     $this->attributeEqualTo('_name', 'View.beforeLayout'),",
          "995:                     $this->attributeEqualTo('_subject', $View)",
          "996:                 )",
          "997:             );",
          "999:         $manager->expects($this->at(5))->method('dispatch')",
          "1000:             ->with(",
          "1001:                 $this->logicalAnd(",
          "1002:                     $this->isInstanceOf('Cake\\Event\\Event'),",
          "1003:                     $this->attributeEqualTo('_name', 'View.beforeRenderFile'),",
          "1004:                     $this->attributeEqualTo('_subject', $View)",
          "1005:                 )",
          "1006:             );",
          "1008:         $manager->expects($this->at(6))->method('dispatch')",
          "1009:             ->with(",
          "1010:                 $this->logicalAnd(",
          "1011:                     $this->isInstanceOf('Cake\\Event\\Event'),",
          "1012:                     $this->attributeEqualTo('_name', 'View.afterRenderFile'),",
          "1013:                     $this->attributeEqualTo('_subject', $View)",
          "1014:                 )",
          "1015:             );",
          "1017:         $manager->expects($this->at(7))->method('dispatch')",
          "1018:             ->with(",
          "1019:                 $this->logicalAnd(",
          "1020:                     $this->isInstanceOf('Cake\\Event\\Event'),",
          "1021:                     $this->attributeEqualTo('_name', 'View.afterLayout'),",
          "1022:                     $this->attributeEqualTo('_subject', $View)",
          "1023:                 )",
          "1024:             );",
          "",
          "[Added Lines]",
          "954:         $manager->expects($this->at(0))",
          "955:             ->method('dispatch')",
          "956:             ->with($this->callback(function (EventInterface $event) {",
          "957:                 return $event->getName() === 'View.beforeRender';",
          "958:             }));",
          "960:         $manager->expects($this->at(1))",
          "961:             ->method('dispatch')",
          "962:             ->with($this->callback(function (EventInterface $event) {",
          "963:                 return $event->getName() === 'View.beforeRenderFile';",
          "964:             }));",
          "966:         $manager->expects($this->at(2))",
          "967:             ->method('dispatch')",
          "968:             ->with($this->callback(function (EventInterface $event) {",
          "969:                 return $event->getName() === 'View.afterRenderFile';",
          "970:             }));",
          "972:         $manager->expects($this->at(3))",
          "973:             ->method('dispatch')",
          "974:             ->with($this->callback(function (EventInterface $event) {",
          "975:                 return $event->getName() === 'View.afterRender';",
          "976:             }));",
          "978:         $manager->expects($this->at(4))",
          "979:             ->method('dispatch')",
          "980:             ->with($this->callback(function (EventInterface $event) {",
          "981:                 return $event->getName() === 'View.beforeLayout';",
          "982:             }));",
          "984:         $manager->expects($this->at(5))",
          "985:             ->method('dispatch')",
          "986:             ->with($this->callback(function (EventInterface $event) {",
          "987:                 return $event->getName() === 'View.beforeRenderFile';",
          "988:             }));",
          "990:         $manager->expects($this->at(6))",
          "991:             ->method('dispatch')",
          "992:             ->with($this->callback(function (EventInterface $event) {",
          "993:                 return $event->getName() === 'View.afterRenderFile';",
          "994:             }));",
          "996:         $manager->expects($this->at(7))",
          "997:             ->method('dispatch')",
          "998:             ->with($this->callback(function (EventInterface $event) {",
          "999:                 return $event->getName() === 'View.afterLayout';",
          "1000:             }));",
          "",
          "---------------"
        ],
        "tests/test_app/TestApp/Stub/Stub.php||tests/test_app/TestApp/Stub/Stub.php": [
          "File: tests/test_app/TestApp/Stub/Stub.php -> tests/test_app/TestApp/Stub/Stub.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:     {",
          "21:         $this->_setModelClass($name);",
          "22:     }",
          "23: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:     public function getModelClass(): ?string",
          "25:     {",
          "26:         return $this->modelClass;",
          "27:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "81412fbe2cb88a304dbeeece1955bc0aec98edb1",
      "candidate_info": {
        "commit_hash": "81412fbe2cb88a304dbeeece1955bc0aec98edb1",
        "repo": "cakephp/cakephp",
        "commit_url": "https://github.com/cakephp/cakephp/commit/81412fbe2cb88a304dbeeece1955bc0aec98edb1",
        "files": [
          "src/Mailer/Transport/SmtpTransport.php",
          "tests/TestCase/Mailer/Transport/SmtpTransportTest.php"
        ],
        "message": "Fix side-effect in destructor\n\nSmtpTransport had the potential to create a harmful side-effect\nin its destructor should an untrusted value ever be deserialized. This\nsolves that by removing the socket on wakeup.",
        "before_after_code_files": [
          "src/Mailer/Transport/SmtpTransport.php||src/Mailer/Transport/SmtpTransport.php",
          "tests/TestCase/Mailer/Transport/SmtpTransportTest.php||tests/TestCase/Mailer/Transport/SmtpTransportTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/Mailer/Transport/SmtpTransport.php||src/Mailer/Transport/SmtpTransport.php",
            "tests/TestCase/Mailer/Transport/SmtpTransportTest.php||tests/TestCase/Mailer/Transport/SmtpTransportTest.php"
          ],
          "candidate": [
            "src/Mailer/Transport/SmtpTransport.php||src/Mailer/Transport/SmtpTransport.php",
            "tests/TestCase/Mailer/Transport/SmtpTransportTest.php||tests/TestCase/Mailer/Transport/SmtpTransportTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Mailer/Transport/SmtpTransport.php||src/Mailer/Transport/SmtpTransport.php": [
          "File: src/Mailer/Transport/SmtpTransport.php -> src/Mailer/Transport/SmtpTransport.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:         }",
          "79:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:     public function __wakeup()",
          "89:     {",
          "90:         $this->_socket = null;",
          "91:     }",
          "",
          "---------------"
        ],
        "tests/TestCase/Mailer/Transport/SmtpTransportTest.php||tests/TestCase/Mailer/Transport/SmtpTransportTest.php": [
          "File: tests/TestCase/Mailer/Transport/SmtpTransportTest.php -> tests/TestCase/Mailer/Transport/SmtpTransportTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "677:         $this->SmtpTransport->send($email);",
          "678:     }",
          "679: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "685:     public function testSerializeCleanupSocket()",
          "686:     {",
          "687:         $this->socket->expects($this->at(0))->method('connect')->will($this->returnValue(true));",
          "688:         $this->socket->expects($this->at(1))->method('read')->will($this->returnValue(\"220 Welcome message\\r\\n\"));",
          "689:         $this->socket->expects($this->at(2))->method('write')->with(\"EHLO localhost\\r\\n\");",
          "690:         $this->socket->expects($this->at(3))->method('read')->will($this->returnValue(\"250 OK\\r\\n\"));",
          "692:         $smtpTransport = new SmtpTestTransport();",
          "693:         $smtpTransport->setSocket($this->socket);",
          "694:         $smtpTransport->connect();",
          "696:         $result = unserialize(serialize($smtpTransport));",
          "697:         $this->assertAttributeEquals(null, '_socket', $result);",
          "698:         $this->assertFalse($result->connected());",
          "699:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c25b91bf7c72db43c01b47a634fd02112ff9f1cd",
      "candidate_info": {
        "commit_hash": "c25b91bf7c72db43c01b47a634fd02112ff9f1cd",
        "repo": "cakephp/cakephp",
        "commit_url": "https://github.com/cakephp/cakephp/commit/c25b91bf7c72db43c01b47a634fd02112ff9f1cd",
        "files": [
          "src/Mailer/Transport/SmtpTransport.php",
          "tests/TestCase/Mailer/Transport/SmtpTransportTest.php"
        ],
        "message": "Fix side-effect in destructor\n\nSmtpTransport had the potential to create a harmful side-effect\nin its destructor should an untrusted value ever be deserialized. This\nsolves that by removing the socket on wakeup.",
        "before_after_code_files": [
          "src/Mailer/Transport/SmtpTransport.php||src/Mailer/Transport/SmtpTransport.php",
          "tests/TestCase/Mailer/Transport/SmtpTransportTest.php||tests/TestCase/Mailer/Transport/SmtpTransportTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/Mailer/Transport/SmtpTransport.php||src/Mailer/Transport/SmtpTransport.php",
            "tests/TestCase/Mailer/Transport/SmtpTransportTest.php||tests/TestCase/Mailer/Transport/SmtpTransportTest.php"
          ],
          "candidate": [
            "src/Mailer/Transport/SmtpTransport.php||src/Mailer/Transport/SmtpTransport.php",
            "tests/TestCase/Mailer/Transport/SmtpTransportTest.php||tests/TestCase/Mailer/Transport/SmtpTransportTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Mailer/Transport/SmtpTransport.php||src/Mailer/Transport/SmtpTransport.php": [
          "File: src/Mailer/Transport/SmtpTransport.php -> src/Mailer/Transport/SmtpTransport.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:         }",
          "79:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:     public function __wakeup()",
          "89:     {",
          "90:         $this->_socket = null;",
          "91:     }",
          "",
          "---------------"
        ],
        "tests/TestCase/Mailer/Transport/SmtpTransportTest.php||tests/TestCase/Mailer/Transport/SmtpTransportTest.php": [
          "File: tests/TestCase/Mailer/Transport/SmtpTransportTest.php -> tests/TestCase/Mailer/Transport/SmtpTransportTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "710:         $this->SmtpTransport->send($email);",
          "711:     }",
          "712: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "718:     public function testSerializeCleanupSocket()",
          "719:     {",
          "720:         $this->socket->expects($this->at(0))->method('connect')->will($this->returnValue(true));",
          "721:         $this->socket->expects($this->at(1))->method('read')->will($this->returnValue(\"220 Welcome message\\r\\n\"));",
          "722:         $this->socket->expects($this->at(2))->method('write')->with(\"EHLO localhost\\r\\n\");",
          "723:         $this->socket->expects($this->at(3))->method('read')->will($this->returnValue(\"250 OK\\r\\n\"));",
          "725:         $smtpTransport = new SmtpTestTransport();",
          "726:         $smtpTransport->setSocket($this->socket);",
          "727:         $smtpTransport->connect();",
          "729:         $result = unserialize(serialize($smtpTransport));",
          "730:         $this->assertAttributeEquals(null, '_socket', $result);",
          "731:         $this->assertFalse($result->connected());",
          "732:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}