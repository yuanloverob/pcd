{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "698baa104aac1dcafb3e90a61d8e8b0c5202ef7d",
      "candidate_info": {
        "commit_hash": "698baa104aac1dcafb3e90a61d8e8b0c5202ef7d",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/698baa104aac1dcafb3e90a61d8e8b0c5202ef7d",
        "files": [
          "modules/clusterer/sharing_tags.c"
        ],
        "message": "clusterer: advertise tag's active state only in defined cluster\n\nThanks go to Vlad Patrascu for brainstorming this!\n\n(cherry picked from commit d741f1875cb2b01e6deb96ae2235e23e029dc35f)",
        "before_after_code_files": [
          "modules/clusterer/sharing_tags.c||modules/clusterer/sharing_tags.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/clusterer/sharing_tags.c||modules/clusterer/sharing_tags.c": [
          "File: modules/clusterer/sharing_tags.c -> modules/clusterer/sharing_tags.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "673:   if (!tag->send_active_msg)",
          "674:    continue;",
          "677:   for (ni = tag->active_msgs_sent; ni && ni->node_id != node_id;",
          "678:    ni = ni->next) ;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "676:   if (tag->cluster_id != c_id)",
          "677:    continue;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "61e07cb5367942f131ab1e5828ec2747e6bba5ad",
      "candidate_info": {
        "commit_hash": "61e07cb5367942f131ab1e5828ec2747e6bba5ad",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/61e07cb5367942f131ab1e5828ec2747e6bba5ad",
        "files": [
          "modules/perl/perlfunc.c"
        ],
        "message": "perl: Fix PKG memory leak in perl_exec()\n\nThe leak would happen 100% of the time on each perl_exec().\n\n(cherry picked from commit 0742814a7f72d99d0de6624acca7f107059f03bf)",
        "before_after_code_files": [
          "modules/perl/perlfunc.c||modules/perl/perlfunc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/perl/perlfunc.c||modules/perl/perlfunc.c": [
          "File: modules/perl/perlfunc.c -> modules/perl/perlfunc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "173:  PUTBACK;",
          "176:  return retval;",
          "178: error:",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "177:  pkg_free(fnc);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cb6d7fa7ae230e984f52aedb261a16e9a17ef568",
      "candidate_info": {
        "commit_hash": "cb6d7fa7ae230e984f52aedb261a16e9a17ef568",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/cb6d7fa7ae230e984f52aedb261a16e9a17ef568",
        "files": [
          "modules/b2b_logic/b2b_logic.c",
          "modules/b2b_logic/b2b_logic.h",
          "modules/b2b_logic/doc/b2b_logic_admin.xml",
          "modules/b2b_logic/logic.c"
        ],
        "message": "b2b_logic: properly decrease value and pass Max-Forwrads header\n\nThis applies to requests that are effectively \"passed\" from one entity to its\npeer such as initial INVITEs handled with b2b_init_request() or requests\nhandled with b2b_pass_request().\n\nFixes #2471\n\n(cherry picked from commit fa84d8d0e6cf719c0d2c7bd215fa74e5e33e1a2f)",
        "before_after_code_files": [
          "modules/b2b_logic/b2b_logic.c||modules/b2b_logic/b2b_logic.c",
          "modules/b2b_logic/b2b_logic.h||modules/b2b_logic/b2b_logic.h",
          "modules/b2b_logic/logic.c||modules/b2b_logic/logic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_logic/b2b_logic.c||modules/b2b_logic/b2b_logic.c": [
          "File: modules/b2b_logic/b2b_logic.c -> modules/b2b_logic/b2b_logic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "124: static str default_headers[HDR_DEFAULT_LEN]=",
          "125: {",
          "126:    {\"Content-Type\",12},",
          "127:    {\"Supported\", 9},",
          "128:    {\"Allow\", 5},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "126:    {\"Max-Forwards\",12},",
          "",
          "---------------"
        ],
        "modules/b2b_logic/b2b_logic.h||modules/b2b_logic/b2b_logic.h": [
          "File: modules/b2b_logic/b2b_logic.h -> modules/b2b_logic/b2b_logic.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: #define b2b_peer(type) ((type+1)%2)",
          "49: #define HDR_LST_LEN       32",
          "53: #define  B2BL_FLAG_TRANSPARENT_AUTH 0x01",
          "",
          "[Removed Lines]",
          "50: #define HDR_DEFAULT_LEN   8",
          "",
          "[Added Lines]",
          "50: #define HDR_DEFAULT_LEN   9",
          "",
          "---------------"
        ],
        "modules/b2b_logic/logic.c||modules/b2b_logic/logic.c": [
          "File: modules/b2b_logic/logic.c -> modules/b2b_logic/logic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "293:  return 0;",
          "294: }",
          "297: b2bl_entity_id_t* b2bl_create_new_entity(enum b2b_entity_type type, str* entity_id,",
          "298:   str* to_uri, str *proxy, str* from_uri,str*from_dname, str* ssid, str* hdrs,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "296: int b2b_msg_get_maxfwd(struct sip_msg *msg)",
          "297: {",
          "298:  str vals;",
          "299:  unsigned int valn;",
          "301:  if (!msg->maxforwards) {",
          "302:   if (parse_headers(msg, HDR_MAXFORWARDS_F, 0) == -1) {",
          "303:    LM_ERR(\"parsing MAX_FORWARD header failed!\\n\");",
          "304:    return -1;",
          "305:   }",
          "306:   if (!msg->maxforwards) {",
          "307:    LM_DBG(\"max_forwards header not found!\\n\");",
          "308:    return -1;",
          "309:   }",
          "310:  }",
          "312:  trim_len(vals.len, vals.s, msg->maxforwards->body);",
          "313:  if (str2int(&vals, &valn) < 0) {",
          "314:   LM_ERR(\"Failed to parse Max-Forwards value\\n\");",
          "315:   return -1;",
          "316:  }",
          "318:  return valn;",
          "319: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1625:  b2b_req_data_t req_data;",
          "1626:  b2b_rpl_data_t rpl_data;",
          "1627:  int do_unlock = 0;",
          "1629:  if (!tuple) {",
          "1630:   lock_get(&b2bl_htable[cur_route_ctx.hash_index].lock);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1652:  int maxfwd;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1692:   req_data.extra_headers =",
          "1693:    cur_route_ctx.extra_headers->len?cur_route_ctx.extra_headers:NULL;",
          "1694:   req_data.body =cur_route_ctx.body->len?cur_route_ctx.body:NULL;",
          "1695:   b2bl_htable[cur_route_ctx.hash_index].locked_by = process_no;",
          "1696:   if(b2b_api.send_request(&req_data) < 0)",
          "1697:   {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1721:   if ((maxfwd = b2b_msg_get_maxfwd(msg)) > 0)",
          "1722:    req_data.maxfwd = maxfwd;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "2998:  str from_tag_gen= {0, 0};",
          "2999:  str new_body={0, 0};",
          "3000:  struct sip_uri ct_uri;",
          "3002:  if(b2b_msg_get_from(msg, &from_uri, &from_dname)< 0 ||  b2b_msg_get_to(msg, &to_uri, params->flags)< 0)",
          "3003:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3029:  int maxfwd;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "3105:   goto error;",
          "3106:  }",
          "3108:  b2bl_htable[hash_index].locked_by = process_no;",
          "3110:  client_id = b2b_api.client_new(&ci, b2b_client_notify,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3138:  if ((maxfwd = b2b_msg_get_maxfwd(msg)) > 0)",
          "3139:   ci.maxfwd = maxfwd;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "3326:  str *hdrs;",
          "3327:  struct b2bl_new_entity *new_entity;",
          "3328:  struct sip_uri ct_uri;",
          "3330:  if(msg == NULL)",
          "3331:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3362:  int maxfwd;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "3444:  ci.send_sock     = msg->force_send_socket?",
          "3445:   msg->force_send_socket:msg->rcv.bind_address;",
          "3447:  if (new_entity->adv_contact.s) {",
          "3448:   ci.local_contact = new_entity->adv_contact;",
          "3449:  } else {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3482:  if ((maxfwd = b2b_msg_get_maxfwd(msg)) > 0)",
          "3483:   ci.maxfwd = maxfwd;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a3419dce890b9d1b821d95216a47810a263da772",
      "candidate_info": {
        "commit_hash": "a3419dce890b9d1b821d95216a47810a263da772",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/a3419dce890b9d1b821d95216a47810a263da772",
        "files": [
          "modules/dialog/dlg_replication.c"
        ],
        "message": "dialog: don't drop synced dialogs with no sharing tag\n\n(cherry picked from commit 3e98325e8546bcbfefa15644c4835c72da4c7aee)",
        "before_after_code_files": [
          "modules/dialog/dlg_replication.c||modules/dialog/dlg_replication.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/dialog/dlg_replication.c||modules/dialog/dlg_replication.c": [
          "File: modules/dialog/dlg_replication.c -> modules/dialog/dlg_replication.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1801:  if (!dlg->shtag.s || dlg->shtag.len == 0) {",
          "1802:   LM_DBG(\"Sharing tag not set\\n\");",
          "1804:  }",
          "1806:  if ((rc = clusterer_api.shtag_get_sync_status(&dlg->shtag,",
          "",
          "[Removed Lines]",
          "1803:   return SHTAG_SYNC_NOT_REQUIRED;",
          "",
          "[Added Lines]",
          "1803:   return SHTAG_SYNC_REQUIRED;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6aea5c5e2bc992bd4dbb243e3d2b99caf0df9769",
      "candidate_info": {
        "commit_hash": "6aea5c5e2bc992bd4dbb243e3d2b99caf0df9769",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/6aea5c5e2bc992bd4dbb243e3d2b99caf0df9769",
        "files": [
          "modules/proto_hep/hep.c"
        ],
        "message": "proto_hep: Fix log message severity (just a debug log)\n\n(cherry picked from commit 612e7a1feb28a6aa359b24a6237928c0e06a3605)",
        "before_after_code_files": [
          "modules/proto_hep/hep.c||modules/proto_hep/hep.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/proto_hep/hep.c||modules/proto_hep/hep.c": [
          "File: modules/proto_hep/hep.c -> modules/proto_hep/hep.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "647:    lock_release(hid_dyn_lock);",
          "648:  }",
          "651:  return NULL;",
          "652: }",
          "",
          "[Removed Lines]",
          "650:  LM_INFO(\"hep id <%.*s> not found!\\n\", name->len, name->s);",
          "",
          "[Added Lines]",
          "650:  LM_DBG(\"hep id <%.*s> not found\\n\", name->len, name->s);",
          "",
          "---------------"
        ]
      }
    }
  ]
}