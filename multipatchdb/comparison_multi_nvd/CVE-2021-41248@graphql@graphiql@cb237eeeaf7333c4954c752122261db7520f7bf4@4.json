{
  "cve_id": "CVE-2021-41248",
  "cve_desc": "GraphiQL is the reference implementation of this monorepo, GraphQL IDE, an official project under the GraphQL Foundation. All versions of graphiql older than graphiql@1.4.7 are vulnerable to compromised HTTP schema introspection responses or schema prop values with malicious GraphQL type names, exposing a dynamic XSS attack surface that can allow code injection on operation autocomplete. In order for the attack to take place, the user must load a vulnerable schema in graphiql. There are a number of ways that can occur. By default, the schema URL is not attacker-controllable in graphiql or in its suggested implementations or examples, leaving only very complex attack vectors. If a custom implementation of graphiql's fetcher allows the schema URL to be set dynamically, such as a URL query parameter like ?endpoint= in graphql-playground, or a database provided value, then this custom graphiql implementation is vulnerable to phishing attacks, and thus much more readily available, low or no privelege level xss attacks. The URLs could look like any generic looking graphql schema URL. It should be noted that desktop clients such as Altair, Insomnia, Postwoman, do not appear to be impacted by this. This vulnerability does not impact codemirror-graphql, monaco-graphql or other dependents, as it exists in onHasCompletion.ts in graphiql. It does impact all forks of graphiql, and every released version of graphiql.",
  "repo": "graphql/graphiql",
  "patch_hash": "cb237eeeaf7333c4954c752122261db7520f7bf4",
  "patch_info": {
    "commit_hash": "cb237eeeaf7333c4954c752122261db7520f7bf4",
    "repo": "graphql/graphiql",
    "commit_url": "https://github.com/graphql/graphiql/commit/cb237eeeaf7333c4954c752122261db7520f7bf4",
    "files": [
      "README.md",
      "SECURITY.md",
      "docs/security/2021-introspection-schema-xss.md",
      "packages/graphiql/README.md",
      "packages/graphiql/cypress/integration/init.spec.ts",
      "packages/graphiql/cypress/support/commands.ts",
      "packages/graphiql/package.json",
      "packages/graphiql/resources/renderExample.js",
      "packages/graphiql/src/components/DocExplorer.tsx",
      "packages/graphiql/src/components/GraphiQL.tsx",
      "packages/graphiql/src/utility/onHasCompletion.ts",
      "packages/graphiql/test/bad-schema.js",
      "packages/graphiql/test/beforeDevServer.js",
      "packages/graphiql/test/e2e-server.js",
      "yarn.lock"
    ],
    "message": "Merge pull request from GHSA-x4r7-m2q9-69c8\n\nThis change fixes an XSS vulnerability that has been present since the first\ncommit of GraphiQL when used with an untrusted GraphQL server. It applies three\nstrategies to fix via defense-in-depth: HTML escaping a string in a contexts\nthat uses innerHTML; validating incoming schemas with graphql-js validateSchema;\nand updating markdown-it to the latest version.\n\nSee docs/security/2021-introspection-schema-xss.md for more details.\n\nCo-authored-by: Rikki <rikki.schulte@gmail.com>",
    "before_after_code_files": [
      "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
      "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts",
      "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js",
      "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
      "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
      "packages/graphiql/src/utility/onHasCompletion.ts||packages/graphiql/src/utility/onHasCompletion.ts",
      "packages/graphiql/test/bad-schema.js||packages/graphiql/test/bad-schema.js",
      "packages/graphiql/test/beforeDevServer.js||packages/graphiql/test/beforeDevServer.js",
      "packages/graphiql/test/e2e-server.js||packages/graphiql/test/e2e-server.js",
      "yarn.lock||yarn.lock"
    ]
  },
  "patch_diff": {
    "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts": [
      "File: packages/graphiql/cypress/integration/init.spec.ts -> packages/graphiql/cypress/integration/init.spec.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:   it('Executes a GraphQL query over HTTP that has the expected result', () => {",
      "45:     cy.assertQueryResult({ query: testQuery }, mockSuccess);",
      "46:   });",
      "47: });",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "47:   it('Shows the expected error when the schema is invalid', () => {",
      "48:     cy.visit(`/?bad=true`);",
      "49:     cy.assertResult({",
      "50:       errors: [",
      "51:         {",
      "52:           message:",
      "53:             'Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"<img src=x onerror=alert(document.domain)>\" does not.',",
      "54:         },",
      "55:       ],",
      "56:     });",
      "57:   });",
      "",
      "---------------"
    ],
    "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts": [
      "File: packages/graphiql/cypress/support/commands.ts -> packages/graphiql/cypress/support/commands.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "19:   type MockResult =",
      "20:     | { data: any }",
      "21:     | { data: any; hasNext?: boolean }",
      "23:   interface Chainable<Subject = any> {",
      "",
      "[Removed Lines]",
      "22:     | { error: any[] };",
      "",
      "[Added Lines]",
      "22:     | { error: any[] }",
      "23:     | { errors: any[] };",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31:     visitWithOp(op: Op): Chainable<Element>;",
      "32:     clickPrettify(): Chainable<Element>;",
      "33:     assertHasValues(op: Op): Chainable<Element>;",
      "34:     assertQueryResult(",
      "35:       op: Op,",
      "36:       expectedResult: MockResult,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "35:     assertResult(result: MockResult): Chainable<Element>;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "91:     expect(value).to.deep.equal(JSON.stringify(mockSuccess, null, 2));",
      "92:   });",
      "93: });",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "97: Cypress.Commands.add('assertResult', (expectedResult, timeout = 200) => {",
      "98:   cy.wait(timeout);",
      "99:   cy.window().then(w => {",
      "101:     const value = w.g.resultComponent.viewer.getValue();",
      "102:     expect(value).to.deep.equal(JSON.stringify(expectedResult, null, 2));",
      "103:   });",
      "104: });",
      "",
      "---------------"
    ],
    "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js": [
      "File: packages/graphiql/resources/renderExample.js -> packages/graphiql/resources/renderExample.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "91:   history.replaceState(null, null, newSearch);",
      "92: }",
      "",
      "[Removed Lines]",
      "94: const isDev = window.location.hostname.match(/localhost$/);",
      "95: const api = isDev ? '/graphql' : '/.netlify/functions/schema-demo';",
      "",
      "[Added Lines]",
      "94: function getSchemaUrl() {",
      "95:   const isDev = window.location.hostname.match(/localhost$/);",
      "97:   if (isDev) {",
      "99:     if (parameters.bad && parameters.bad === 'true') {",
      "100:       return '/bad/graphql';",
      "101:     } else {",
      "102:       return '/graphql';",
      "103:     }",
      "104:   }",
      "105:   return '/.netlify/functions/schema-demo';",
      "106: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "101: ReactDOM.render(",
      "102:   React.createElement(GraphiQL, {",
      "104:     query: parameters.query,",
      "105:     variables: parameters.variables,",
      "106:     headers: parameters.headers,",
      "",
      "[Removed Lines]",
      "103:     fetcher: GraphiQL.createFetcher({ url: api }),",
      "",
      "[Added Lines]",
      "114:     fetcher: GraphiQL.createFetcher({ url: getSchemaUrl() }),",
      "",
      "---------------"
    ],
    "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx": [
      "File: packages/graphiql/src/components/DocExplorer.tsx -> packages/graphiql/src/components/DocExplorer.tsx",
      "--- Hunk 1 ---",
      "[Context before]",
      "8: import React from 'react';",
      "10: import { FieldType } from './DocExplorer/types';",
      "12: import FieldDoc from './DocExplorer/FieldDoc';",
      "",
      "[Removed Lines]",
      "9: import { GraphQLSchema, isType, GraphQLNamedType } from 'graphql';",
      "",
      "[Added Lines]",
      "9: import { GraphQLSchema, isType, GraphQLNamedType, GraphQLError } from 'graphql';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "30: type DocExplorerProps = {",
      "31:   schema?: GraphQLSchema | null;",
      "32: };",
      "34: type DocExplorerState = {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32:   schemaErrors?: readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "68:   ) {",
      "69:     return (",
      "70:       this.props.schema !== nextProps.schema ||",
      "72:     );",
      "73:   }",
      "75:   render() {",
      "77:     const navStack = this.state.navStack;",
      "78:     const navItem = navStack[navStack.length - 1];",
      "80:     let content;",
      "83:       content = (",
      "84:         <div className=\"spinner-container\">",
      "",
      "[Removed Lines]",
      "71:       this.state.navStack !== nextState.navStack",
      "76:     const { schema } = this.props;",
      "81:     if (schema === undefined) {",
      "",
      "[Added Lines]",
      "72:       this.state.navStack !== nextState.navStack ||",
      "73:       this.props.schemaErrors !== nextProps.schemaErrors",
      "78:     const { schema, schemaErrors } = this.props;",
      "83:     if (schemaErrors) {",
      "84:       content = (",
      "85:         <div className=\"error-container\">{'Error fetching schema'}</div>",
      "86:       );",
      "87:     } else if (schema === undefined) {",
      "",
      "---------------"
    ],
    "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
      "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
      "--- Hunk 1 ---",
      "[Context before]",
      "23:   ValidationRule,",
      "24:   FragmentDefinitionNode,",
      "25:   DocumentNode,",
      "26: } from 'graphql';",
      "27: import copyToClipboard from 'copy-to-clipboard';",
      "28: import { getFragmentDependenciesForAST } from 'graphql-language-service-utils';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26:   GraphQLError,",
      "27:   formatError as formatGraphQLError,",
      "28:   GraphQLFormattedError,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "66: } from '@graphiql/toolkit';",
      "67: import HistoryStore from '../utility/HistoryStore';",
      "69: const DEFAULT_DOC_EXPLORER_WIDTH = 350;",
      "71: const majorVersion = parseInt(React.version.slice(0, 2), 10);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "72: import { validateSchema } from 'graphql';",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "95:   additionalContent?: React.ReactNode;",
      "96: };",
      "98: export type GraphiQLProps = {",
      "99:   fetcher: Fetcher;",
      "100:   schema?: GraphQLSchema;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "103: export type GenericError =",
      "104:   | Error",
      "105:   | string",
      "106:   | readonly Error[]",
      "107:   | readonly string[]",
      "108:   | GraphQLError",
      "109:   | readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "121:   editorTheme?: string;",
      "122:   onToggleHistory?: (historyPaneOpen: boolean) => void;",
      "123:   ResultsTooltip?: typeof Component | FunctionComponent;",
      "124:   readOnly?: boolean;",
      "125:   docExplorerOpen?: boolean;",
      "126:   toolbar?: GraphiQLToolbarConfig;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "140:   dangerouslyAssumeSchemaIsValid?: boolean;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "143:   headerEditorEnabled: boolean;",
      "144:   shouldPersistHeaders: boolean;",
      "145:   historyPaneOpen: boolean;",
      "146:   docExplorerWidth: number;",
      "147:   isWaitingForResponse: boolean;",
      "148:   subscription?: Unsubscribable | null;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "163:   schemaErrors?: readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "152:   maxHistoryLength: number;",
      "153: };",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "173: const stringify = (obj: unknown): string => JSON.stringify(obj, null, 2);",
      "175: const formatSingleError = (error: Error): Error => ({",
      "176:   ...error,",
      "178:   message: error.message,",
      "179:   stack: error.stack,",
      "180: });",
      "182: type InputError = Error | GraphQLError | string;",
      "184: const handleSingleError = (",
      "185:   error: InputError,",
      "186: ): GraphQLFormattedError | Error | string => {",
      "187:   if (error instanceof GraphQLError) {",
      "188:     return formatGraphQLError(error);",
      "189:   }",
      "190:   if (error instanceof Error) {",
      "191:     return formatSingleError(error);",
      "192:   }",
      "193:   return error;",
      "194: };",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "166:     return JSON.stringify(result, null, 2);",
      "167:   }",
      "177:   _editorQueryID = 0;",
      "",
      "[Removed Lines]",
      "169:   static formatError(rawError: Error) {",
      "170:     const result = Array.isArray(rawError)",
      "171:       ? rawError.map(formatSingleError)",
      "172:       : formatSingleError(rawError);",
      "173:     return JSON.stringify(result, null, 2);",
      "174:   }",
      "",
      "[Added Lines]",
      "210:   static formatError = (error: GenericError): string => {",
      "211:     if (Array.isArray(error)) {",
      "212:       return stringify({",
      "213:         errors: error.map((e: InputError) => handleSingleError(e)),",
      "214:       });",
      "215:     }",
      "217:     return stringify({ errors: handleSingleError(error) });",
      "218:   };",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "266:     const headerEditorEnabled = props.headerEditorEnabled ?? false;",
      "267:     const shouldPersistHeaders = props.shouldPersistHeaders ?? false;",
      "270:     this.state = {",
      "272:       query,",
      "273:       variables: variables as string,",
      "274:       headers: headers as string,",
      "275:       operationName,",
      "276:       docExplorerOpen,",
      "278:       editorFlex: Number(this._storage.get('editorFlex')) || 1,",
      "279:       secondaryEditorOpen,",
      "280:       secondaryEditorHeight:",
      "",
      "[Removed Lines]",
      "271:       schema: props.schema,",
      "277:       response: props.response,",
      "",
      "[Added Lines]",
      "313:     let schema = props.schema;",
      "314:     let response = props.response;",
      "315:     let schemaErrors: readonly GraphQLError[] | undefined = undefined;",
      "316:     if (schema && !this.props.dangerouslyAssumeSchemaIsValid) {",
      "317:       const validationErrors = validateSchema(schema);",
      "318:       if (validationErrors && validationErrors.length > 0) {",
      "321:         response = GraphiQL.formatError(validationErrors);",
      "322:         schema = undefined;",
      "323:         schemaErrors = validationErrors;",
      "324:       }",
      "325:     }",
      "329:       schema,",
      "335:       schemaErrors,",
      "336:       response,",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "357:         nextQuery !== this.state.query ||",
      "358:         nextOperationName !== this.state.operationName)",
      "359:     ) {",
      "360:       const updatedQueryAttributes = this._updateQueryFacts(",
      "361:         nextQuery,",
      "362:         nextOperationName,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "419:       if (!this.props.dangerouslyAssumeSchemaIsValid) {",
      "420:         const validationErrors = validateSchema(nextSchema);",
      "421:         if (validationErrors && validationErrors.length > 0) {",
      "422:           this.handleSchemaErrors(validationErrors);",
      "423:           nextSchema = undefined;",
      "424:         }",
      "425:       }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "665:               ref={c => {",
      "666:                 this.docExplorerComponent = c;",
      "667:               }}",
      "668:               schema={this.state.schema}>",
      "669:               <button",
      "670:                 className=\"docExplorerHide\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "735:               schemaErrors={this.state.schemaErrors}",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "871:         }",
      "873:         if (typeof result !== 'string' && 'data' in result) {",
      "877:         } else {",
      "878:           const responseString =",
      "879:             typeof result === 'string' ? result : GraphiQL.formatResult(result);",
      "885:         }",
      "886:       })",
      "887:       .catch(error => {",
      "892:       });",
      "893:   }",
      "895:   private async _fetchQuery(",
      "896:     query: string,",
      "897:     variables: string,",
      "",
      "[Removed Lines]",
      "874:           const schema = buildClientSchema(result.data);",
      "875:           const queryFacts = getOperationFacts(schema, this.state.query);",
      "876:           this.safeSetState({ schema, ...queryFacts });",
      "880:           this.safeSetState({",
      "882:             schema: undefined,",
      "883:             response: responseString,",
      "884:           });",
      "888:         this.safeSetState({",
      "889:           schema: undefined,",
      "890:           response: error ? GraphiQL.formatError(error) : undefined,",
      "891:         });",
      "",
      "[Added Lines]",
      "942:           let schema: GraphQLSchema | undefined = buildClientSchema(",
      "943:             result.data,",
      "944:           );",
      "945:           if (!this.props.dangerouslyAssumeSchemaIsValid) {",
      "946:             const errors = validateSchema(schema);",
      "948:             if (errors && errors.length > 0) {",
      "949:               schema = undefined;",
      "950:               this.handleSchemaErrors(errors);",
      "951:             }",
      "952:           }",
      "953:           if (schema) {",
      "954:             const queryFacts = getOperationFacts(schema, this.state.query);",
      "955:             this.safeSetState({",
      "956:               schema,",
      "957:               ...queryFacts,",
      "958:               schemaErrors: undefined,",
      "959:             });",
      "960:           }",
      "965:           this.handleSchemaErrors([responseString]);",
      "969:         this.handleSchemaErrors([error]);",
      "973:   private handleSchemaErrors(",
      "974:     schemaErrors: readonly GraphQLError[] | readonly string[],",
      "975:   ) {",
      "976:     this.safeSetState({",
      "977:       response: schemaErrors ? GraphiQL.formatError(schemaErrors) : undefined,",
      "978:       schema: undefined,",
      "979:       schemaErrors,",
      "980:     });",
      "981:   }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "908:       jsonVariables =",
      "909:         variables && variables.trim() !== '' ? JSON.parse(variables) : null;",
      "910:     } catch (error) {",
      "912:     }",
      "914:     if (typeof jsonVariables !== 'object') {",
      "",
      "[Removed Lines]",
      "911:       throw new Error(`Variables are invalid JSON: ${error.message}.`);",
      "",
      "[Added Lines]",
      "999:       throw new Error(",
      "1000:         `Variables are invalid JSON: ${(error as Error).message}.`,",
      "1001:       );",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "919:       jsonHeaders =",
      "920:         headers && headers.trim() !== '' ? JSON.parse(headers) : null;",
      "921:     } catch (error) {",
      "923:     }",
      "925:     if (typeof jsonHeaders !== 'object') {",
      "",
      "[Removed Lines]",
      "922:       throw new Error(`Headers are invalid JSON: ${error.message}.`);",
      "",
      "[Added Lines]",
      "1012:       throw new Error(`Headers are invalid JSON: ${(error as Error).message}.`);",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "1008:             } catch (error) {",
      "1009:               this.safeSetState({",
      "1010:                 isWaitingForResponse: false,",
      "1012:                 subscription: null,",
      "1013:               });",
      "1014:             }",
      "",
      "[Removed Lines]",
      "1011:                 response: error ? GraphiQL.formatError(error) : undefined,",
      "",
      "[Added Lines]",
      "1101:                 response: error",
      "1102:                   ? GraphiQL.formatError(error as Error)",
      "1103:                   : undefined,",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "1167:     } catch (error) {",
      "1168:       this.setState({",
      "1169:         isWaitingForResponse: false,",
      "1171:       });",
      "1172:     }",
      "1173:   };",
      "",
      "[Removed Lines]",
      "1170:         response: error.message,",
      "",
      "[Added Lines]",
      "1262:         response: (error as Error).message,",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "1699: }",
      "1700: GraphiQLFooter.displayName = 'GraphiQLFooter';",
      "1709: const defaultQuery = `# Welcome to GraphiQL",
      "1710: #",
      "1711: # GraphiQL is an in-browser tool for writing, validating, and",
      "",
      "[Removed Lines]",
      "1702: const formatSingleError = (error: Error) => ({",
      "1703:   ...error,",
      "1705:   message: error.message,",
      "1706:   stack: error.stack,",
      "1707: });",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "packages/graphiql/src/utility/onHasCompletion.ts||packages/graphiql/src/utility/onHasCompletion.ts": [
      "File: packages/graphiql/src/utility/onHasCompletion.ts -> packages/graphiql/src/utility/onHasCompletion.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "12:   GraphQLType,",
      "13:   GraphQLField,",
      "14: } from 'graphql';",
      "15: import MD from 'markdown-it';",
      "17: const md = new MD();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "15: import escapeHTML from 'escape-html';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "108:   if (type instanceof GraphQLList) {",
      "109:     return `[${renderType(type.ofType)}]`;",
      "110:   }",
      "112: }",
      "",
      "[Removed Lines]",
      "111:   return `<a class=\"typeName\">${type.name}</a>`;",
      "",
      "[Added Lines]",
      "112:   return `<a class=\"typeName\">${escapeHTML(type.name)}</a>`;",
      "",
      "---------------"
    ],
    "packages/graphiql/test/bad-schema.js||packages/graphiql/test/bad-schema.js": [
      "File: packages/graphiql/test/bad-schema.js -> packages/graphiql/test/bad-schema.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: const { buildClientSchema } = require('graphql');",
      "3: module.exports.schema = {",
      "4:   __schema: {",
      "5:     queryType: {",
      "6:       name: 'Query',",
      "7:     },",
      "8:     mutationType: null,",
      "9:     subscriptionType: null,",
      "10:     types: [",
      "11:       {",
      "12:         kind: 'OBJECT',",
      "13:         name: 'Query',",
      "14:         description: null,",
      "15:         fields: [",
      "16:           {",
      "17:             name: 'user',",
      "18:             description: null,",
      "19:             args: [",
      "20:               {",
      "21:                 name: 'id',",
      "22:                 description: null,",
      "23:                 type: {",
      "24:                   kind: 'NON_NULL',",
      "25:                   name: null,",
      "26:                   ofType: {",
      "27:                     kind: 'SCALAR',",
      "28:                     name: 'ID',",
      "29:                     ofType: null,",
      "30:                   },",
      "31:                 },",
      "32:                 defaultValue: null,",
      "33:               },",
      "34:             ],",
      "35:             type: {",
      "36:               kind: 'OBJECT',",
      "37:               name: '<img src=x onerror=alert(document.domain)>',",
      "38:               ofType: null,",
      "39:             },",
      "40:             isDeprecated: false,",
      "41:             deprecationReason: null,",
      "42:           },",
      "43:         ],",
      "44:         inputFields: null,",
      "45:         interfaces: [],",
      "46:         enumValues: null,",
      "47:         possibleTypes: null,",
      "48:       },",
      "49:       {",
      "50:         kind: 'SCALAR',",
      "51:         name: 'ID',",
      "52:         description: '',",
      "53:         fields: null,",
      "54:         inputFields: null,",
      "55:         interfaces: null,",
      "56:         enumValues: null,",
      "57:         possibleTypes: null,",
      "58:       },",
      "59:       {",
      "60:         kind: 'OBJECT',",
      "61:         name: '<img src=x onerror=alert(document.domain)>',",
      "62:         description: null,",
      "63:         fields: [",
      "64:           {",
      "65:             name: 'name',",
      "66:             description: null,",
      "67:             args: [],",
      "68:             type: {",
      "69:               kind: 'NON_NULL',",
      "70:               name: null,",
      "71:               ofType: {",
      "72:                 kind: 'SCALAR',",
      "73:                 name: 'String',",
      "74:                 ofType: null,",
      "75:               },",
      "76:             },",
      "77:             isDeprecated: false,",
      "78:             deprecationReason: null,",
      "79:           },",
      "80:         ],",
      "81:         inputFields: null,",
      "82:         interfaces: [],",
      "83:         enumValues: null,",
      "84:         possibleTypes: null,",
      "85:       },",
      "86:       {",
      "87:         kind: 'SCALAR',",
      "88:         name: 'String',",
      "89:         description: '',",
      "90:         fields: null,",
      "91:         inputFields: null,",
      "92:         interfaces: null,",
      "93:         enumValues: null,",
      "94:         possibleTypes: null,",
      "95:       },",
      "96:     ],",
      "97:     directives: [],",
      "98:   },",
      "99: };",
      "",
      "---------------"
    ],
    "packages/graphiql/test/beforeDevServer.js||packages/graphiql/test/beforeDevServer.js": [
      "File: packages/graphiql/test/beforeDevServer.js -> packages/graphiql/test/beforeDevServer.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const path = require('path');",
      "10: const { graphqlHTTP } = require('express-graphql');",
      "11: const schema = require('./schema');",
      "13: module.exports = function beforeDevServer(app, _server, _compiler) {",
      "15:   app.post('/graphql', graphqlHTTP({ schema }));",
      "17:   app.get(",
      "18:     '/graphql',",
      "19:     graphqlHTTP({",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12: const { schema: badSchema } = require('./bad-schema');",
      "18:   app.post('/bad/graphql', (_req, res, next) => {",
      "19:     res.json({ data: badSchema });",
      "20:     next();",
      "21:   });",
      "",
      "---------------"
    ],
    "packages/graphiql/test/e2e-server.js||packages/graphiql/test/e2e-server.js": [
      "File: packages/graphiql/test/e2e-server.js -> packages/graphiql/test/e2e-server.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: const path = require('path');",
      "11: const { graphqlHTTP } = require('express-graphql');",
      "12: const schema = require('./schema');",
      "14: const app = express();",
      "17: app.post('/graphql', graphqlHTTP({ schema }));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14: const { schema: badSchema } = require('./bad-schema');",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "23:   }),",
      "24: );",
      "26: app.use(express.static(path.resolve(__dirname, '../')));",
      "28: app.listen(process.env.PORT || 0, function () {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26: app.post('/bad/graphql', (_req, res, next) => {",
      "27:   res.json({ data: badSchema });",
      "28:   next();",
      "29: });",
      "",
      "---------------"
    ],
    "yarn.lock||yarn.lock": [
      "File: yarn.lock -> yarn.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "3288:   integrity sha512-6U71C2Wp7r5XtFtQzYrW5iKFT67OixrSxjI4MptCHzdSVlgabczzqLe0ZSgnub/5Kp4hSbpDB1tMytZY9pwxxA==",
      "3290: \"@graphiql/toolkit@file:packages/graphiql-toolkit\":",
      "3292:   dependencies:",
      "3293:     \"@n1ru4l/push-pull-async-iterable-iterator\" \"^3.0.0\"",
      "3294:     graphql-ws \"^4.9.0\"",
      "",
      "[Removed Lines]",
      "3291:   version \"0.3.0\"",
      "",
      "[Added Lines]",
      "3291:   version \"0.3.2\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "4881:   dependencies:",
      "4882:     \"@types/node\" \"*\"",
      "4884: \"@types/eslint-visitor-keys@^1.0.0\":",
      "4885:   version \"1.0.0\"",
      "4886:   resolved \"https://registry.yarnpkg.com/@types/eslint-visitor-keys/-/eslint-visitor-keys-1.0.0.tgz#1ee30d79544ca84d68d4b3cdb0af4f205663dd2d\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4884: \"@types/escape-html@^1.0.1\":",
      "4885:   version \"1.0.1\"",
      "4886:   resolved \"https://registry.yarnpkg.com/@types/escape-html/-/escape-html-1.0.1.tgz#b19b4646915f0ae2c306bf984dc0a59c5cfc97ba\"",
      "4887:   integrity sha512-4mI1FuUUZiuT95fSVqvZxp/ssQK9zsa86S43h9x3zPOSU9BBJ+BfDkXwuaU7BfsD+e7U0/cUUfJFk3iW2M4okA==",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "5021:   dependencies:",
      "5022:     \"@types/linkify-it\" \"*\"",
      "5024: \"@types/mime@^1\":",
      "5025:   version \"1.3.2\"",
      "5026:   resolved \"https://registry.yarnpkg.com/@types/mime/-/mime-1.3.2.tgz#93e25bf9ee75fe0fd80b594bc4feb0e862111b5a\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5029: \"@types/markdown-it@^12.2.3\":",
      "5030:   version \"12.2.3\"",
      "5031:   resolved \"https://registry.yarnpkg.com/@types/markdown-it/-/markdown-it-12.2.3.tgz#0d6f6e5e413f8daaa26522904597be3d6cd93b51\"",
      "5032:   integrity sha512-GKMHFfv3458yYy+v/N8gjufHO6MSZKCOXpZc5GXIWWy8uldwfmPn98vp81gZ5f9SVw8YYBctgfJ22a2d7AOMeQ==",
      "5033:   dependencies:",
      "5034:     \"@types/linkify-it\" \"*\"",
      "5035:     \"@types/mdurl\" \"*\"",
      "5037: \"@types/mdurl@*\":",
      "5038:   version \"1.0.2\"",
      "5039:   resolved \"https://registry.yarnpkg.com/@types/mdurl/-/mdurl-1.0.2.tgz#e2ce9d83a613bacf284c7be7d491945e39e1f8e9\"",
      "5040:   integrity sha512-eC4U9MlIcu2q0KQmXszyn5Akca/0jrQmwDRgpAMJai7qBWq4amIQhZyNau4VYGtCeALvW1/NtjzJJ567aZxfKA==",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "6121:   dependencies:",
      "6122:     sprintf-js \"~1.0.2\"",
      "6124: aria-query@^3.0.0:",
      "6125:   version \"3.0.0\"",
      "6126:   resolved \"https://registry.yarnpkg.com/aria-query/-/aria-query-3.0.0.tgz#65b3fcc1ca1155a8c9ae64d6eee297f15d5133cc\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6142: argparse@^2.0.1:",
      "6143:   version \"2.0.1\"",
      "6144:   resolved \"https://registry.yarnpkg.com/argparse/-/argparse-2.0.1.tgz#246f50f3ca78a3240f6c997e8a9bd1eac49e4b38\"",
      "6145:   integrity sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "9586:   resolved \"https://registry.yarnpkg.com/entities/-/entities-2.0.3.tgz#5c487e5742ab93c15abb5da22759b8590ec03b7f\"",
      "9587:   integrity sha512-MyoZ0jgnLvB2X3Lg5HqpFmn1kybDiIfEQmKzTb5apr51Rb+T3KdmMiqa70T+bhGnyv7bQ6WMj2QMHpGMmlrUYQ==",
      "9589: envinfo@^7.3.1:",
      "9590:   version \"7.8.1\"",
      "9591:   resolved \"https://registry.yarnpkg.com/envinfo/-/envinfo-7.8.1.tgz#06377e3e5f4d379fea7ac592d5ad8927e0c4d475\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "9612: entities@~2.1.0:",
      "9613:   version \"2.1.0\"",
      "9614:   resolved \"https://registry.yarnpkg.com/entities/-/entities-2.1.0.tgz#992d3129cf7df6870b96c57858c249a120f8b8b5\"",
      "9615:   integrity sha512-hCx1oky9PFrJ611mf0ifBLBRW8lUUVRlFolb5gWRfIELabBlbp9xZvrqZLZAs+NxFnbfQoeGd8wDkygjg7U85w==",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "9751:   resolved \"https://registry.yarnpkg.com/escalade/-/escalade-3.1.1.tgz#d8cfdc7000965c5a0174b4a82eaa5c0552742e40\"",
      "9752:   integrity sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
      "9755:   version \"1.0.3\"",
      "9756:   resolved \"https://registry.yarnpkg.com/escape-html/-/escape-html-1.0.3.tgz#0258eae4d3d0c0974de1c169188ef0051d1d1988\"",
      "9757:   integrity sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=",
      "",
      "[Removed Lines]",
      "9754: escape-html@~1.0.3:",
      "",
      "[Added Lines]",
      "9782: escape-html@^1.0.3, escape-html@~1.0.3:",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "11512:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
      "11514: \"graphiql@file:packages/graphiql\":",
      "11516:   dependencies:",
      "11518:     codemirror \"^5.58.2\"",
      "11520:     copy-to-clipboard \"^3.2.0\"",
      "11521:     dset \"^3.1.0\"",
      "11522:     entities \"^2.0.0\"",
      "11526: graphql-config@^3.0.2:",
      "11527:   version \"3.0.3\"",
      "",
      "[Removed Lines]",
      "11515:   version \"1.4.3\"",
      "11517:     \"@graphiql/toolkit\" \"^0.3.0\"",
      "11519:     codemirror-graphql \"^1.0.0\"",
      "11523:     graphql-language-service \"^3.1.5\"",
      "11524:     markdown-it \"^10.0.0\"",
      "",
      "[Added Lines]",
      "11543:   version \"1.4.6\"",
      "11545:     \"@graphiql/toolkit\" \"^0.3.2\"",
      "11547:     codemirror-graphql \"^1.0.3\"",
      "11551:     escape-html \"^1.0.3\"",
      "11552:     graphql-language-service \"^3.1.6\"",
      "11553:     markdown-it \"^12.2.0\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "14280:   dependencies:",
      "14281:     uc.micro \"^1.0.1\"",
      "14283: lint-staged@^10.1.2:",
      "14284:   version \"10.1.3\"",
      "14285:   resolved \"https://registry.yarnpkg.com/lint-staged/-/lint-staged-10.1.3.tgz#da27713d3ac519da305381b4de87d5f866b1d2f1\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14312: linkify-it@^3.0.1:",
      "14313:   version \"3.0.3\"",
      "14314:   resolved \"https://registry.yarnpkg.com/linkify-it/-/linkify-it-3.0.3.tgz#a98baf44ce45a550efb4d49c769d07524cc2fa2e\"",
      "14315:   integrity sha512-ynTsyrFSdE5oZ/O9GEf00kPngmOfVwazR5GKDq6EYfhlpFug3J2zybX56a2PRRpc9P+FuSoGNAwjlbDs9jJBPQ==",
      "14316:   dependencies:",
      "14317:     uc.micro \"^1.0.1\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "14711:     mdurl \"^1.0.1\"",
      "14712:     uc.micro \"^1.0.5\"",
      "14714: markdown-to-jsx@^6.11.4:",
      "14715:   version \"6.11.4\"",
      "14716:   resolved \"https://registry.yarnpkg.com/markdown-to-jsx/-/markdown-to-jsx-6.11.4.tgz#b4528b1ab668aef7fe61c1535c27e837819392c5\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14750: markdown-it@^12.2.0:",
      "14751:   version \"12.2.0\"",
      "14752:   resolved \"https://registry.yarnpkg.com/markdown-it/-/markdown-it-12.2.0.tgz#091f720fd5db206f80de7a8d1f1a7035fd0d38db\"",
      "14753:   integrity sha512-Wjws+uCrVQRqOoJvze4HCqkKl1AsSh95iFAeQDwnyfxM09divCBSXlDR1uTvyUP3Grzpn4Ru8GeCxYPM8vkCQg==",
      "14754:   dependencies:",
      "14755:     argparse \"^2.0.1\"",
      "14756:     entities \"~2.1.0\"",
      "14757:     linkify-it \"^3.0.1\"",
      "14758:     mdurl \"^1.0.1\"",
      "14759:     uc.micro \"^1.0.5\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6ff77349fddfb0eb77816bc98705faf9f4dbd4ca",
      "candidate_info": {
        "commit_hash": "6ff77349fddfb0eb77816bc98705faf9f4dbd4ca",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/6ff77349fddfb0eb77816bc98705faf9f4dbd4ca",
        "files": [
          "examples/cm6-graphql-parcel/package.json",
          "examples/cm6-graphql-parcel/src/index.ts",
          "packages/codemirror-graphql/package.json",
          "packages/codemirror-graphql/src/cm6-legacy/mode.ts",
          "yarn.lock"
        ],
        "message": "fix: move @codemirror packages to peer deps, upgrade to 0.20.0",
        "before_after_code_files": [
          "examples/cm6-graphql-parcel/src/index.ts||examples/cm6-graphql-parcel/src/index.ts",
          "packages/codemirror-graphql/src/cm6-legacy/mode.ts||packages/codemirror-graphql/src/cm6-legacy/mode.ts",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "examples/cm6-graphql-parcel/src/index.ts||examples/cm6-graphql-parcel/src/index.ts": [
          "File: examples/cm6-graphql-parcel/src/index.ts -> examples/cm6-graphql-parcel/src/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { EditorState, EditorView, basicSetup } from '@codemirror/basic-setup';",
          "3: import { graphql } from 'codemirror-graphql/cm6-legacy/mode';",
          "4: import query from './sample-query';",
          "6: const state = EditorState.create({",
          "7:   doc: query,",
          "13: });",
          "15: const view = new EditorView({",
          "",
          "[Removed Lines]",
          "2: import { StreamLanguage } from '@codemirror/stream-parser';",
          "8:   extensions: [",
          "9:     basicSetup,",
          "10:     StreamLanguage.define(graphql),",
          "12:   ],",
          "",
          "[Added Lines]",
          "2: import { StreamLanguage } from '@codemirror/language';",
          "8:   extensions: [basicSetup, StreamLanguage.define(graphql)],",
          "",
          "---------------"
        ],
        "packages/codemirror-graphql/src/cm6-legacy/mode.ts||packages/codemirror-graphql/src/cm6-legacy/mode.ts": [
          "File: packages/codemirror-graphql/src/cm6-legacy/mode.ts -> packages/codemirror-graphql/src/cm6-legacy/mode.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import graphqlModeFactory from '../utils/mode-factory';",
          "",
          "[Removed Lines]",
          "1: import type { StreamParser } from '@codemirror/stream-parser';",
          "",
          "[Added Lines]",
          "1: import type { StreamParser } from '@codemirror/language';",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "3973:     exec-sh \"^0.3.2\"",
          "3974:     minimist \"^1.2.0\"",
          "4038:     style-mod \"^4.0.0\"",
          "4039:     w3c-keyname \"^2.2.4\"",
          "",
          "[Removed Lines]",
          "3976: \"@codemirror/highlight@^0.19.0\":",
          "3977:   version \"0.19.6\"",
          "3978:   resolved \"https://registry.yarnpkg.com/@codemirror/highlight/-/highlight-0.19.6.tgz#7f2e066f83f5649e8e0748a3abe0aaeaf64b8ac2\"",
          "3979:   integrity sha512-+eibu6on9quY8uN3xJ/n3rH+YIDLlpX7YulVmFvqAIz/ukRQ5tWaBmB7fMixHmnmRIRBRZgB8rNtonuMwZSAHQ==",
          "3980:   dependencies:",
          "3981:     \"@codemirror/language\" \"^0.19.0\"",
          "3982:     \"@codemirror/rangeset\" \"^0.19.0\"",
          "3983:     \"@codemirror/state\" \"^0.19.0\"",
          "3984:     \"@codemirror/view\" \"^0.19.0\"",
          "3985:     \"@lezer/common\" \"^0.15.0\"",
          "3986:     style-mod \"^4.0.0\"",
          "3988: \"@codemirror/language@^0.19.0\":",
          "3989:   version \"0.19.5\"",
          "3990:   resolved \"https://registry.yarnpkg.com/@codemirror/language/-/language-0.19.5.tgz#4d816ce3f72974ad443cbf1a18ff4fcd1e56f1d0\"",
          "3991:   integrity sha512-FnIST07vaM99mv1mJaMMLvxiHSDGgP3wdlcEZzmidndWdbxjrYYYnJzVUOEkeZJNGOfrtPRMF62UCyrTjQMR3g==",
          "3992:   dependencies:",
          "3993:     \"@codemirror/state\" \"^0.19.0\"",
          "3994:     \"@codemirror/text\" \"^0.19.0\"",
          "3995:     \"@codemirror/view\" \"^0.19.0\"",
          "3996:     \"@lezer/common\" \"^0.15.5\"",
          "3997:     \"@lezer/lr\" \"^0.15.0\"",
          "3999: \"@codemirror/rangeset@^0.19.0\":",
          "4000:   version \"0.19.2\"",
          "4001:   resolved \"https://registry.yarnpkg.com/@codemirror/rangeset/-/rangeset-0.19.2.tgz#d7a999e4273c00fecef4aba8535a426073cdcddf\"",
          "4002:   integrity sha512-5d+X8LtmeZtfFtKrSx57bIHRUpKv2HD0b74clp4fGA7qJLLfYehF6FGkJJxJb8lKsqAga1gdjjWr0jiypmIxoQ==",
          "4003:   dependencies:",
          "4004:     \"@codemirror/state\" \"^0.19.0\"",
          "4006: \"@codemirror/state@^0.19.0\", \"@codemirror/state@^0.19.3\":",
          "4007:   version \"0.19.6\"",
          "4008:   resolved \"https://registry.yarnpkg.com/@codemirror/state/-/state-0.19.6.tgz#d631f041d39ce41b7891b099fca26cb1fdb9763e\"",
          "4009:   integrity sha512-sqIQZE9VqwQj7D4c2oz9mfLhlT1ElAzGB5lO1lE33BPyrdNy1cJyCIOecT4cn4VeJOFrnjOeu+IftZ3zqdFETw==",
          "4010:   dependencies:",
          "4011:     \"@codemirror/text\" \"^0.19.0\"",
          "4013: \"@codemirror/stream-parser@^0.19.2\":",
          "4014:   version \"0.19.2\"",
          "4015:   resolved \"https://registry.yarnpkg.com/@codemirror/stream-parser/-/stream-parser-0.19.2.tgz#793428e55aa7b9daa64cb733973e5d5e3d9a2306\"",
          "4016:   integrity sha512-hBKRQlyu8GUOrY33xZ6/1kAfNZ8ZUm6cX9a7mPx8zAAqnpz/fpksC/qJRrkg1mPMBwxm+JG4fqAwDGJ3gLVniQ==",
          "4017:   dependencies:",
          "4018:     \"@codemirror/highlight\" \"^0.19.0\"",
          "4019:     \"@codemirror/language\" \"^0.19.0\"",
          "4020:     \"@codemirror/state\" \"^0.19.0\"",
          "4021:     \"@codemirror/text\" \"^0.19.0\"",
          "4022:     \"@lezer/common\" \"^0.15.0\"",
          "4023:     \"@lezer/lr\" \"^0.15.0\"",
          "4025: \"@codemirror/text@^0.19.0\":",
          "4026:   version \"0.19.5\"",
          "4027:   resolved \"https://registry.yarnpkg.com/@codemirror/text/-/text-0.19.5.tgz#75033af2476214e79eae22b81ada618815441c18\"",
          "4028:   integrity sha512-Syu5Xc7tZzeUAM/y4fETkT0zgGr48rDG+w4U38bPwSIUr+L9S/7w2wDE1WGNzjaZPz12F6gb1gxWiSTg9ocLow==",
          "4030: \"@codemirror/view@^0.19.0\":",
          "4031:   version \"0.19.20\"",
          "4032:   resolved \"https://registry.yarnpkg.com/@codemirror/view/-/view-0.19.20.tgz#77969ff93cb097e3d4c9245b32e220efb80131be\"",
          "4033:   integrity sha512-j4cI/Egdhha77pMfKQQWZmpkcF7vhe21LqdZs8hsG09OtvsPVCHUXmfB0u7nMpcX1JR8aZ3ob9g6FMr+OVtjgA==",
          "4034:   dependencies:",
          "4035:     \"@codemirror/rangeset\" \"^0.19.0\"",
          "4036:     \"@codemirror/state\" \"^0.19.3\"",
          "4037:     \"@codemirror/text\" \"^0.19.0\"",
          "",
          "[Added Lines]",
          "3976: \"@codemirror/language@^0.20.0\":",
          "3977:   version \"0.20.0\"",
          "3978:   resolved \"https://registry.yarnpkg.com/@codemirror/language/-/language-0.20.0.tgz#959967901e780c1612934cf5d6df3d7b7e5bf9f0\"",
          "3979:   integrity sha512-lPsF5Y2ZFd5lZ9+7HXTxu57Po3dms3+7q2iAffzrbis2wyJo0lzi/j2312EKStEzwd0pGGpvrUk2dEd333N2jw==",
          "3980:   dependencies:",
          "3981:     \"@codemirror/state\" \"^0.20.0\"",
          "3982:     \"@codemirror/view\" \"^0.20.0\"",
          "3983:     \"@lezer/common\" \"^0.16.0\"",
          "3984:     \"@lezer/highlight\" \"^0.16.0\"",
          "3985:     \"@lezer/lr\" \"^0.16.0\"",
          "3987: \"@codemirror/state@^0.20.0\":",
          "3988:   version \"0.20.0\"",
          "3989:   resolved \"https://registry.yarnpkg.com/@codemirror/state/-/state-0.20.0.tgz#3343d209169813b0152b77361cd78bea01549a73\"",
          "3990:   integrity sha512-R3XrAWCS5Xm9lx+4pDET4EUPEg+8bDfAa5zoOFIhx+VChsfew9Vy33dAjCXS5ES4Q8UecW4WM4UudmUFpZ+86A==",
          "3992: \"@codemirror/view@^0.20.0\":",
          "3993:   version \"0.20.1\"",
          "3994:   resolved \"https://registry.yarnpkg.com/@codemirror/view/-/view-0.20.1.tgz#071f192b2586e3122f1b8b2a9edcd06709a31e9d\"",
          "3995:   integrity sha512-DpTtg/w4LxgYmEYq67LY4k7ZDRJ97ppeQVg0+VsUi7CqHjfedi3zmjiUq9gA9is5DKIpGARDKyHigslpw3cX5w==",
          "3996:   dependencies:",
          "3997:     \"@codemirror/state\" \"^0.20.0\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4915:     \"@jridgewell/resolve-uri\" \"^3.0.3\"",
          "4916:     \"@jridgewell/sourcemap-codec\" \"^1.4.10\"",
          "4927:   dependencies:",
          "4930: \"@manypkg/cli@^0.17.0\":",
          "4931:   version \"0.17.0\"",
          "",
          "[Removed Lines]",
          "4918: \"@lezer/common@^0.15.0\", \"@lezer/common@^0.15.5\":",
          "4919:   version \"0.15.8\"",
          "4920:   resolved \"https://registry.yarnpkg.com/@lezer/common/-/common-0.15.8.tgz#e9d87b5f05c18feb51b7f04d74b124caea32a94b\"",
          "4921:   integrity sha512-zpS/xty48huX4uBidupmWDYCRBYpVtoTiFhzYhd6GsQwU67WsdSImdWzZJDrF/DhcQ462wyrZahHlo2grFB5ig==",
          "4923: \"@lezer/lr@^0.15.0\":",
          "4924:   version \"0.15.4\"",
          "4925:   resolved \"https://registry.yarnpkg.com/@lezer/lr/-/lr-0.15.4.tgz#634670d7224040fddac1370af01211eecd9ac0a0\"",
          "4926:   integrity sha512-vwgG80sihEGJn6wJp6VijXrnzVai/KPva/OzYKaWvIx0IiXKjoMQ8UAwcgpSBwfS4Fbz3IKOX/cCNXU3r1FvpQ==",
          "4928:     \"@lezer/common\" \"^0.15.0\"",
          "",
          "[Added Lines]",
          "4878: \"@lezer/common@^0.16.0\":",
          "4879:   version \"0.16.0\"",
          "4880:   resolved \"https://registry.yarnpkg.com/@lezer/common/-/common-0.16.0.tgz#b6023a0a682b0b7676d0e7f0e0838f71bde39fcd\"",
          "4881:   integrity sha512-H6sPCku+asKWYaNjwfQ1Uvcay9UP1Pdzu4qpy8GtRZ0cKT2AAGnj9MQGiRtY18MDntvhYRJxNGv7FNWOSV/e8A==",
          "4883: \"@lezer/highlight@^0.16.0\":",
          "4884:   version \"0.16.0\"",
          "4885:   resolved \"https://registry.yarnpkg.com/@lezer/highlight/-/highlight-0.16.0.tgz#95f7b7ee3c32c8a0f6ce499c085e8b1f927ffbdc\"",
          "4886:   integrity sha512-iE5f4flHlJ1g1clOStvXNLbORJoiW4Kytso6ubfYzHnaNo/eo5SKhxs4wv/rtvwZQeZrK3we8S9SyA7OGOoRKQ==",
          "4888:     \"@lezer/common\" \"^0.16.0\"",
          "4890: \"@lezer/lr@^0.16.0\":",
          "4891:   version \"0.16.0\"",
          "4892:   resolved \"https://registry.yarnpkg.com/@lezer/lr/-/lr-0.16.0.tgz#6b93014421033e7eada163adb8ff1e73440f7995\"",
          "4893:   integrity sha512-LIybGnsodKxscxiBcx24fX9mazEjJG5I295mdOUb5BGNGk4B9xyMYBUgB6uErIUttHQmfgAzPzfdZVRrcCgaHQ==",
          "4894:   dependencies:",
          "4895:     \"@lezer/common\" \"^0.16.0\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "12537:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
          "12539: \"graphiql@file:packages/graphiql\":",
          "12541:   dependencies:",
          "12542:     \"@graphiql/toolkit\" \"^0.4.3\"",
          "12543:     codemirror \"^5.58.2\"",
          "12545:     copy-to-clipboard \"^3.2.0\"",
          "12546:     entities \"^2.0.0\"",
          "12547:     escape-html \"^1.0.3\"",
          "12549:     markdown-it \"^12.2.0\"",
          "12550:     set-value \"^4.1.0\"",
          "",
          "[Removed Lines]",
          "12540:   version \"1.8.5\"",
          "12544:     codemirror-graphql \"^1.2.16\"",
          "12548:     graphql-language-service \"^5.0.2\"",
          "",
          "[Added Lines]",
          "12507:   version \"1.8.7\"",
          "12511:     codemirror-graphql \"^1.2.17\"",
          "12515:     graphql-language-service \"^5.0.3\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "65a51d04876d56560d3453a09eb93f2e296f462a",
      "candidate_info": {
        "commit_hash": "65a51d04876d56560d3453a09eb93f2e296f462a",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/65a51d04876d56560d3453a09eb93f2e296f462a",
        "files": [
          ".changeset/smart-deers-know.md",
          "examples/monaco-graphql-react-vite/README.md",
          "examples/monaco-graphql-react-vite/index.html",
          "examples/monaco-graphql-react-vite/package.json",
          "examples/monaco-graphql-react-vite/src/App.tsx",
          "examples/monaco-graphql-react-vite/src/app.css",
          "examples/monaco-graphql-react-vite/src/debounce.ts",
          "examples/monaco-graphql-react-vite/src/index.tsx",
          "examples/monaco-graphql-react-vite/tsconfig.json",
          "examples/monaco-graphql-react-vite/vite.config.ts",
          "package.json",
          "packages/monaco-graphql/package.json",
          "packages/monaco-graphql/src/GraphQLWorker.ts",
          "packages/monaco-graphql/src/graphqlMode.ts",
          "packages/monaco-graphql/src/initializeMode.ts",
          "packages/monaco-graphql/src/languageFeatures.ts",
          "packages/monaco-graphql/src/monaco.contribution.ts",
          "yarn.lock"
        ],
        "message": "feat: react + vite monaco demo, improvements (#2116)\n\n- `picomatch-browser` fork no longer uses `path`. these changes to remove node dependencies from `picomatch`, 99% of them are by another contributor, will eventually be merged into the actual `picomatch`\n- no `onLanguage` for `initializeMode` - always instantiate the mode when this is called directly! Fixes some editor creation race condition issues\n- introduce a demo using react + vite and minimal config, no workarounds! This will help us prototype for `@graphiql/react`\n- use `schemaValidation: 'error'` by default. allow user to override `validate` if they want.\n- always re-register providers on schema config changes. seems to fix some issues on lazy instantiation",
        "before_after_code_files": [
          "examples/monaco-graphql-react-vite/index.html||examples/monaco-graphql-react-vite/index.html",
          "examples/monaco-graphql-react-vite/src/App.tsx||examples/monaco-graphql-react-vite/src/App.tsx",
          "examples/monaco-graphql-react-vite/src/app.css||examples/monaco-graphql-react-vite/src/app.css",
          "examples/monaco-graphql-react-vite/src/debounce.ts||examples/monaco-graphql-react-vite/src/debounce.ts",
          "examples/monaco-graphql-react-vite/src/index.tsx||examples/monaco-graphql-react-vite/src/index.tsx",
          "examples/monaco-graphql-react-vite/vite.config.ts||examples/monaco-graphql-react-vite/vite.config.ts",
          "packages/monaco-graphql/src/GraphQLWorker.ts||packages/monaco-graphql/src/GraphQLWorker.ts",
          "packages/monaco-graphql/src/graphqlMode.ts||packages/monaco-graphql/src/graphqlMode.ts",
          "packages/monaco-graphql/src/initializeMode.ts||packages/monaco-graphql/src/initializeMode.ts",
          "packages/monaco-graphql/src/languageFeatures.ts||packages/monaco-graphql/src/languageFeatures.ts",
          "packages/monaco-graphql/src/monaco.contribution.ts||packages/monaco-graphql/src/monaco.contribution.ts",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "examples/monaco-graphql-react-vite/index.html||examples/monaco-graphql-react-vite/index.html": [
          "File: examples/monaco-graphql-react-vite/index.html -> examples/monaco-graphql-react-vite/index.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <!DOCTYPE html>",
          "2: <html lang=\"en\">",
          "3:   <head>",
          "4:     <meta charset=\"UTF-8\" />",
          "5:     <link rel=\"icon\" type=\"image/svg+xml\" href=\"/src/favicon.svg\" />",
          "6:     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />",
          "7:     <link rel=\"stylesheet\" href=\"src/app.css\" />",
          "9:     <title>Monaco Demo</title>",
          "10:   </head>",
          "11:   <body>",
          "12:     <div id=\"root\"></div>",
          "13:     <script type=\"module\" src=\"/src/index.tsx\"></script>",
          "14:   </body>",
          "15: </html>",
          "",
          "---------------"
        ],
        "examples/monaco-graphql-react-vite/src/App.tsx||examples/monaco-graphql-react-vite/src/App.tsx": [
          "File: examples/monaco-graphql-react-vite/src/App.tsx -> examples/monaco-graphql-react-vite/src/App.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import React, { useEffect } from 'react';",
          "2: import { getIntrospectionQuery, IntrospectionQuery } from 'graphql';",
          "3: import { Uri, editor, KeyMod, KeyCode, languages } from 'monaco-editor';",
          "4: import { initializeMode } from 'monaco-graphql/src/initializeMode';",
          "5: import { createGraphiQLFetcher } from '@graphiql/toolkit';",
          "6: import * as JSONC from 'jsonc-parser';",
          "7: import { debounce } from './debounce';",
          "9: const fetcher = createGraphiQLFetcher({",
          "10:   url: 'https://api.spacex.land/graphql/',",
          "11: });",
          "13: const defaultOperations =",
          "14:   localStorage.getItem('operations') ??",
          "15:   `",
          "16: # cmd/ctrl + return/enter will execute the op,",
          "17: # same in variables editor below",
          "18: # also available via context menu & f1 command palette",
          "20: query($limit: Int!) {",
          "21:     payloads(limit: $limit) {",
          "22:         customer",
          "23:     }",
          "24: }",
          "25: `;",
          "27: const defaultVariables =",
          "28:   localStorage.getItem('variables') ??",
          "29:   `",
          "30:  {",
          "34:      $1",
          "35:  }",
          "36: `;",
          "38: const getSchema = async () =>",
          "39:   fetcher({",
          "40:     query: getIntrospectionQuery(),",
          "41:     operationName: 'IntrospectionQuery',",
          "42:   });",
          "44: const getOrCreateModel = (uri: string, value: string) => {",
          "45:   return (",
          "46:     editor.getModel(Uri.file(uri)) ??",
          "47:     editor.createModel(value, uri.split('.').pop(), Uri.file(uri))",
          "48:   );",
          "49: };",
          "51: const execOperation = async function () {",
          "52:   const variables = editor.getModel(Uri.file('variables.json'))!.getValue();",
          "53:   const operations = editor.getModel(Uri.file('operation.graphql'))!.getValue();",
          "54:   const resultsModel = editor.getModel(Uri.file('results.json'));",
          "56:   const result = await fetcher({",
          "57:     query: operations,",
          "58:     variables: JSON.stringify(JSONC.parse(variables)),",
          "59:   });",
          "63:   const data = await result.next();",
          "65:   resultsModel?.setValue(JSON.stringify(data.value, null, 2));",
          "66: };",
          "68: const queryAction = {",
          "69:   id: 'graphql-run',",
          "70:   label: 'Run Operation',",
          "71:   contextMenuOrder: 0,",
          "72:   contextMenuGroupId: 'graphql',",
          "73:   keybindings: [",
          "75:     KeyMod.CtrlCmd | KeyCode.Enter,",
          "76:   ],",
          "77:   run: execOperation,",
          "78: };",
          "80: languages.json.jsonDefaults.setDiagnosticsOptions({",
          "81:   allowComments: true,",
          "82:   trailingCommas: 'ignore',",
          "83: });",
          "85: const createEditor = (",
          "86:   ref: React.MutableRefObject<null>,",
          "87:   options: editor.IStandaloneEditorConstructionOptions,",
          "88: ) => editor.create((ref.current as unknown) as HTMLElement, options);",
          "90: export default function App() {",
          "91:   const opsRef = React.useRef(null);",
          "92:   const varsRef = React.useRef(null);",
          "93:   const resultsRef = React.useRef(null);",
          "94:   const [",
          "95:     queryEditor,",
          "96:     setQueryEditor,",
          "97:   ] = React.useState<editor.IStandaloneCodeEditor | null>(null);",
          "98:   const [",
          "99:     variablesEditor,",
          "100:     setVariablesEditor,",
          "101:   ] = React.useState<editor.IStandaloneCodeEditor | null>(null);",
          "102:   const [",
          "103:     resultsViewer,",
          "104:     setResultsViewer,",
          "105:   ] = React.useState<editor.IStandaloneCodeEditor | null>(null);",
          "106:   const [schema, setSchema] = React.useState<unknown | null>(null);",
          "107:   const [loading, setLoading] = React.useState(false);",
          "112:   useEffect(() => {",
          "113:     const queryModel = getOrCreateModel('operation.graphql', defaultOperations);",
          "114:     const variablesModel = getOrCreateModel('variables.json', defaultVariables);",
          "115:     const resultsModel = getOrCreateModel('results.json', '{}');",
          "117:     queryEditor ??",
          "118:       setQueryEditor(",
          "119:         createEditor(opsRef, {",
          "120:           theme: 'vs-dark',",
          "121:           model: queryModel,",
          "122:           language: 'graphql',",
          "123:         }),",
          "124:       );",
          "125:     variablesEditor ??",
          "126:       setVariablesEditor(",
          "127:         createEditor(varsRef, {",
          "128:           theme: 'vs-dark',",
          "129:           model: variablesModel,",
          "130:         }),",
          "131:       );",
          "132:     resultsViewer ??",
          "133:       setResultsViewer(",
          "134:         createEditor(resultsRef, {",
          "135:           theme: 'vs-dark',",
          "136:           model: resultsModel,",
          "137:           readOnly: true,",
          "138:           smoothScrolling: true,",
          "139:         }),",
          "140:       );",
          "142:     queryModel.onDidChangeContent(",
          "143:       debounce(300, () => {",
          "144:         localStorage.setItem('operations', queryModel.getValue());",
          "145:       }),",
          "146:     );",
          "147:     variablesModel.onDidChangeContent(",
          "148:       debounce(300, () => {",
          "149:         localStorage.setItem('variables', variablesModel.getValue());",
          "150:       }),",
          "151:     );",
          "154:   }, []);",
          "156:   useEffect(() => {",
          "157:     queryEditor?.addAction(queryAction);",
          "158:     variablesEditor?.addAction(queryAction);",
          "159:   }, [variablesEditor]);",
          "163:   useEffect(() => {",
          "164:     if (!schema && !loading) {",
          "165:       setLoading(true);",
          "166:       getSchema()",
          "167:         .then(data => {",
          "168:           if (!('data' in data)) {",
          "169:             throw Error(",
          "170:               'this demo does not support subscriptions or http multipart yet',",
          "171:             );",
          "172:           }",
          "173:           initializeMode({",
          "174:             diagnosticSettings: {",
          "175:               validateVariablesJSON: {",
          "176:                 [Uri.file('operation.graphql').toString()]: [",
          "177:                   Uri.file('variables.json').toString(),",
          "178:                 ],",
          "179:               },",
          "180:               jsonDiagnosticSettings: {",
          "181:                 validate: true,",
          "182:                 schemaValidation: 'error',",
          "184:                 allowComments: true,",
          "185:                 trailingCommas: 'ignore',",
          "186:               },",
          "187:             },",
          "188:             schemas: [",
          "189:               {",
          "190:                 introspectionJSON: (data.data as unknown) as IntrospectionQuery,",
          "191:                 uri: 'myschema.graphql',",
          "192:               },",
          "193:             ],",
          "194:           });",
          "196:           setSchema(data.data);",
          "198:           return;",
          "199:         })",
          "200:         .then(() => setLoading(false));",
          "201:     }",
          "202:   }, [schema, loading]);",
          "203:   return (",
          "204:     <div id=\"wrapper\">",
          "205:       <div id=\"left-pane\" className=\"pane\">",
          "206:         <div ref={opsRef} className=\"editor\" />",
          "207:         <div ref={varsRef} className=\"editor\" />",
          "208:       </div>",
          "209:       <div id=\"right-pane\" className=\"pane\">",
          "210:         <div ref={resultsRef} className=\"editor\" />",
          "211:       </div>",
          "212:     </div>",
          "213:   );",
          "214: }",
          "",
          "---------------"
        ],
        "examples/monaco-graphql-react-vite/src/app.css||examples/monaco-graphql-react-vite/src/app.css": [
          "File: examples/monaco-graphql-react-vite/src/app.css -> examples/monaco-graphql-react-vite/src/app.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: body {",
          "2:   margin: 0;",
          "3:   background-color: #1e1e1e;",
          "4:   height: 100vh;",
          "5: }",
          "7: #wrapper {",
          "8:   display: flex;",
          "9:   flex-direction: row;",
          "10:   height: 97.7vh;",
          "11: }",
          "13: .pane {",
          "14:   height: 100%;",
          "15:   width: 50%;",
          "16:   display: flex;",
          "17:   flex-direction: column;",
          "18:   align-self: stretch;",
          "19: }",
          "21: #left-pane .editor {",
          "22:   height: 50%;",
          "23: }",
          "25: #right-pane .editor {",
          "26:   height: 100%;",
          "27: }",
          "",
          "---------------"
        ],
        "examples/monaco-graphql-react-vite/src/debounce.ts||examples/monaco-graphql-react-vite/src/debounce.ts": [
          "File: examples/monaco-graphql-react-vite/src/debounce.ts -> examples/monaco-graphql-react-vite/src/debounce.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: export function debounce<F extends (...args: any[]) => any>(",
          "2:   duration: number,",
          "3:   fn: F,",
          "4: ) {",
          "5:   let timeout: number | null;",
          "6:   return function (this: any, ...args: Parameters<F>) {",
          "7:     if (timeout) {",
          "8:       window.clearTimeout(timeout);",
          "9:     }",
          "10:     timeout = window.setTimeout(() => {",
          "11:       timeout = null;",
          "12:       fn(args);",
          "13:     }, duration);",
          "14:   };",
          "15: }",
          "",
          "---------------"
        ],
        "examples/monaco-graphql-react-vite/src/index.tsx||examples/monaco-graphql-react-vite/src/index.tsx": [
          "File: examples/monaco-graphql-react-vite/src/index.tsx -> examples/monaco-graphql-react-vite/src/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import React from 'react';",
          "2: import ReactDOM from 'react-dom';",
          "4: import App from './App';",
          "6: ReactDOM.render(",
          "7:   <React.StrictMode>",
          "8:     <App />",
          "9:   </React.StrictMode>,",
          "10:   document.getElementById('root'),",
          "11: );",
          "",
          "---------------"
        ],
        "examples/monaco-graphql-react-vite/vite.config.ts||examples/monaco-graphql-react-vite/vite.config.ts": [
          "File: examples/monaco-graphql-react-vite/vite.config.ts -> examples/monaco-graphql-react-vite/vite.config.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { defineConfig } from 'vite';",
          "2: import react from '@vitejs/plugin-react';",
          "3: import monacoEditorPlugin from 'vite-plugin-monaco-editor';",
          "5: export default defineConfig({",
          "6:   build: {",
          "7:     target: 'esnext',",
          "8:   },",
          "9:   plugins: [",
          "10:     react(),",
          "11:     monacoEditorPlugin({",
          "12:       languageWorkers: ['json', 'editorWorkerService'],",
          "13:       customWorkers: [",
          "14:         {",
          "15:           label: 'graphql',",
          "16:           entry: 'monaco-graphql/dist/graphql.worker',",
          "17:         },",
          "18:       ],",
          "19:     }),",
          "20:   ],",
          "21: });",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/GraphQLWorker.ts||packages/monaco-graphql/src/GraphQLWorker.ts": [
          "File: packages/monaco-graphql/src/GraphQLWorker.ts -> packages/monaco-graphql/src/GraphQLWorker.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:   }",
          "38:   public async doValidation(uri: string) {",
          "42:       return [];",
          "43:     }",
          "49:   }",
          "51:   public async doComplete(",
          "52:     uri: string,",
          "53:     position: Position,",
          "54:   ): Promise<GraphQLWorkerCompletionItem[]> {",
          "59:       return [];",
          "60:     }",
          "68:   }",
          "70:   public async doHover(uri: string, position: Position) {",
          "93:         ),",
          "96:   }",
          "98:   public async doGetVariablesJSONSchema(uri: string): Promise<unknown> {",
          "",
          "[Removed Lines]",
          "39:     const documentModel = this._getTextModel(uri);",
          "40:     const document = documentModel?.getValue();",
          "41:     if (!document) {",
          "44:     const graphqlDiagnostics = this._languageService.getDiagnostics(",
          "45:       uri,",
          "46:       document,",
          "47:     );",
          "48:     return graphqlDiagnostics.map(toMarkerData);",
          "55:     const documentModel = this._getTextModel(uri);",
          "56:     const document = documentModel?.getValue();",
          "57:     if (!document) {",
          "58:       console.log('no document');",
          "61:     const graphQLPosition = toGraphQLPosition(position);",
          "62:     const suggestions = this._languageService.getCompletion(",
          "63:       uri,",
          "64:       document,",
          "65:       graphQLPosition,",
          "66:     );",
          "67:     return suggestions.map(suggestion => toCompletion(suggestion));",
          "71:     const documentModel = this._getTextModel(uri);",
          "72:     const document = documentModel?.getValue();",
          "73:     if (!document) {",
          "74:       return null;",
          "75:     }",
          "76:     const graphQLPosition = toGraphQLPosition(position);",
          "78:     const hover = this._languageService.getHover(",
          "79:       uri,",
          "80:       document,",
          "81:       graphQLPosition,",
          "82:     );",
          "84:     return {",
          "85:       content: hover,",
          "86:       range: toMonacoRange(",
          "87:         getRange(",
          "88:           {",
          "89:             column: graphQLPosition.character,",
          "90:             line: graphQLPosition.line,",
          "91:           },",
          "92:           document,",
          "94:       ),",
          "95:     };",
          "",
          "[Added Lines]",
          "39:     try {",
          "40:       const documentModel = this._getTextModel(uri);",
          "41:       const document = documentModel?.getValue();",
          "42:       if (!document) {",
          "43:         return [];",
          "44:       }",
          "45:       const graphqlDiagnostics = this._languageService.getDiagnostics(",
          "46:         uri,",
          "47:         document,",
          "48:       );",
          "49:       return graphqlDiagnostics.map(toMarkerData);",
          "50:     } catch (err) {",
          "51:       console.error(err);",
          "60:     try {",
          "61:       const documentModel = this._getTextModel(uri);",
          "62:       const document = documentModel?.getValue();",
          "63:       if (!document) {",
          "64:         console.log('no document');",
          "65:         return [];",
          "66:       }",
          "67:       const graphQLPosition = toGraphQLPosition(position);",
          "68:       const suggestions = this._languageService.getCompletion(",
          "69:         uri,",
          "70:         document,",
          "71:         graphQLPosition,",
          "72:       );",
          "73:       return suggestions.map(suggestion => toCompletion(suggestion));",
          "74:     } catch (err) {",
          "75:       console.error(err);",
          "81:     try {",
          "82:       const documentModel = this._getTextModel(uri);",
          "83:       const document = documentModel?.getValue();",
          "84:       if (!document) {",
          "85:         return null;",
          "86:       }",
          "87:       const graphQLPosition = toGraphQLPosition(position);",
          "89:       const hover = this._languageService.getHover(",
          "90:         uri,",
          "91:         document,",
          "92:         graphQLPosition,",
          "93:       );",
          "95:       return {",
          "96:         content: hover,",
          "97:         range: toMonacoRange(",
          "98:           getRange(",
          "99:             {",
          "100:               column: graphQLPosition.character,",
          "101:               line: graphQLPosition.line,",
          "102:             },",
          "103:             document,",
          "104:           ),",
          "106:       };",
          "107:     } catch (err) {",
          "108:       console.error(err);",
          "109:       return null;",
          "110:     }",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/graphqlMode.ts||packages/monaco-graphql/src/graphqlMode.ts": [
          "File: packages/monaco-graphql/src/graphqlMode.ts -> packages/monaco-graphql/src/graphqlMode.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "42:     }",
          "43:   }",
          "46:     const { modeConfiguration } = defaults;",
          "47:     disposeAll(providers);",
          "",
          "[Removed Lines]",
          "45:   function registerAllProviders(): void {",
          "",
          "[Added Lines]",
          "45:   function registerAllProviders(api: MonacoGraphQLAPI): void {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:       );",
          "56:     }",
          "57:     if (modeConfiguration.diagnostics) {",
          "59:     }",
          "60:     if (modeConfiguration.hovers) {",
          "61:       providers.push(",
          "",
          "[Removed Lines]",
          "58:       providers.push(new languageFeatures.DiagnosticsAdapter(defaults, worker));",
          "",
          "[Added Lines]",
          "58:       providers.push(new languageFeatures.DiagnosticsAdapter(api, worker));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "73:     formattingOptions,",
          "74:     diagnosticSettings,",
          "75:     externalFragmentDefinitions,",
          "76:   } = defaults;",
          "78:   defaults.onDidChange(newDefaults => {",
          "79:     if (newDefaults.modeConfiguration !== modeConfiguration) {",
          "80:       modeConfiguration = newDefaults.modeConfiguration;",
          "82:     }",
          "83:     if (newDefaults.formattingOptions !== formattingOptions) {",
          "84:       formattingOptions = newDefaults.formattingOptions;",
          "",
          "[Removed Lines]",
          "81:       registerAllProviders();",
          "",
          "[Added Lines]",
          "76:     schemas,",
          "79:   registerAllProviders(defaults);",
          "84:       registerAllProviders(newDefaults);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "88:       newDefaults.externalFragmentDefinitions !== externalFragmentDefinitions",
          "89:     ) {",
          "90:       externalFragmentDefinitions = newDefaults.externalFragmentDefinitions;",
          "92:     }",
          "93:     if (newDefaults.diagnosticSettings !== diagnosticSettings) {",
          "94:       diagnosticSettings = newDefaults.diagnosticSettings;",
          "96:     }",
          "97:   });",
          "",
          "[Removed Lines]",
          "91:       registerAllProviders();",
          "95:       registerAllProviders();",
          "",
          "[Added Lines]",
          "94:       registerAllProviders(newDefaults);",
          "98:       registerAllProviders(newDefaults);",
          "99:     }",
          "100:     if (newDefaults.schemas !== schemas) {",
          "101:       schemas = newDefaults.schemas;",
          "102:       registerAllProviders(newDefaults);",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/initializeMode.ts||packages/monaco-graphql/src/initializeMode.ts": [
          "File: packages/monaco-graphql/src/initializeMode.ts -> packages/monaco-graphql/src/initializeMode.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:   const api = createMonacoGraphQLAPI(LANGUAGE_ID, config);",
          "34:   return api;",
          "35: }",
          "",
          "[Removed Lines]",
          "28:   (<any>languages)[LANGUAGE_ID] = { api };",
          "30:   languages.onLanguage(LANGUAGE_ID, () => {",
          "31:     getMode().then(mode => mode.setupMode(api));",
          "32:   });",
          "",
          "[Added Lines]",
          "28:   (<any>languages).graphql = { api };",
          "30:   getMode().then(mode => mode.setupMode(api));",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/languageFeatures.ts||packages/monaco-graphql/src/languageFeatures.ts": [
          "File: packages/monaco-graphql/src/languageFeatures.ts -> packages/monaco-graphql/src/languageFeatures.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "148:       };",
          "150:       monaco.languages.json.jsonDefaults.setDiagnosticsOptions({",
          "152:         validate: true,",
          "153:         schemas: [configResult],",
          "154:         enableSchemaRequest: false,",
          "155:       });",
          "",
          "[Removed Lines]",
          "151:         ...this.defaults?.diagnosticSettings?.jsonDiagnosticSettings,",
          "",
          "[Added Lines]",
          "151:         schemaValidation: 'error',",
          "153:         ...this.defaults?.diagnosticSettings?.jsonDiagnosticSettings,",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/monaco.contribution.ts||packages/monaco-graphql/src/monaco.contribution.ts": [
          "File: packages/monaco-graphql/src/monaco.contribution.ts -> packages/monaco-graphql/src/monaco.contribution.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:   diagnosticSettingDefault,",
          "15: } from './api';",
          "17: export * from './typings';",
          "18: import { initializeMode, LANGUAGE_ID } from './initializeMode';",
          "20: export { LANGUAGE_ID };",
          "",
          "[Removed Lines]",
          "24: initializeMode();",
          "",
          "[Added Lines]",
          "17: import { languages } from 'monaco-editor';",
          "25: languages.onLanguage(LANGUAGE_ID, () => {",
          "26:   const api = initializeMode();",
          "28:   (<any>languages).graphql = { api };",
          "29: });",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:     semver \"^6.3.0\"",
          "100:     source-map \"^0.5.0\"",
          "102: \"@babel/core@^7.4.5\":",
          "103:   version \"7.11.6\"",
          "104:   resolved \"https://registry.yarnpkg.com/@babel/core/-/core-7.11.6.tgz#3a9455dc7387ff1bac45770650bc13ba04a15651\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "102: \"@babel/core@^7.16.0\", \"@babel/core@^7.7.2\":",
          "103:   version \"7.16.0\"",
          "104:   resolved \"https://registry.yarnpkg.com/@babel/core/-/core-7.16.0.tgz#c4ff44046f5fe310525cc9eb4ef5147f0c5374d4\"",
          "105:   integrity sha512-mYZEvshBRHGsIAiyH5PzCFTCfbWfoYbO/jcSdXQSUQu1/pW0xDZAUP7KEc32heqWTAfAHhV9j1vH8Sav7l+JNQ==",
          "106:   dependencies:",
          "107:     \"@babel/code-frame\" \"^7.16.0\"",
          "108:     \"@babel/generator\" \"^7.16.0\"",
          "109:     \"@babel/helper-compilation-targets\" \"^7.16.0\"",
          "110:     \"@babel/helper-module-transforms\" \"^7.16.0\"",
          "111:     \"@babel/helpers\" \"^7.16.0\"",
          "112:     \"@babel/parser\" \"^7.16.0\"",
          "113:     \"@babel/template\" \"^7.16.0\"",
          "114:     \"@babel/traverse\" \"^7.16.0\"",
          "115:     \"@babel/types\" \"^7.16.0\"",
          "116:     convert-source-map \"^1.7.0\"",
          "117:     debug \"^4.1.0\"",
          "118:     gensync \"^1.0.0-beta.2\"",
          "119:     json5 \"^2.1.2\"",
          "120:     semver \"^6.3.0\"",
          "121:     source-map \"^0.5.0\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "121:     semver \"^5.4.1\"",
          "122:     source-map \"^0.5.0\"",
          "145: \"@babel/generator@^7.11.5\", \"@babel/generator@^7.13.9\", \"@babel/generator@^7.9.5\":",
          "146:   version \"7.13.9\"",
          "147:   resolved \"https://registry.yarnpkg.com/@babel/generator/-/generator-7.13.9.tgz#3a7aa96f9efb8e2be42d38d80e2ceb4c64d8de39\"",
          "",
          "[Removed Lines]",
          "124: \"@babel/core@^7.7.2\":",
          "125:   version \"7.16.0\"",
          "126:   resolved \"https://registry.yarnpkg.com/@babel/core/-/core-7.16.0.tgz#c4ff44046f5fe310525cc9eb4ef5147f0c5374d4\"",
          "127:   integrity sha512-mYZEvshBRHGsIAiyH5PzCFTCfbWfoYbO/jcSdXQSUQu1/pW0xDZAUP7KEc32heqWTAfAHhV9j1vH8Sav7l+JNQ==",
          "128:   dependencies:",
          "129:     \"@babel/code-frame\" \"^7.16.0\"",
          "130:     \"@babel/generator\" \"^7.16.0\"",
          "131:     \"@babel/helper-compilation-targets\" \"^7.16.0\"",
          "132:     \"@babel/helper-module-transforms\" \"^7.16.0\"",
          "133:     \"@babel/helpers\" \"^7.16.0\"",
          "134:     \"@babel/parser\" \"^7.16.0\"",
          "135:     \"@babel/template\" \"^7.16.0\"",
          "136:     \"@babel/traverse\" \"^7.16.0\"",
          "137:     \"@babel/types\" \"^7.16.0\"",
          "138:     convert-source-map \"^1.7.0\"",
          "139:     debug \"^4.1.0\"",
          "140:     gensync \"^1.0.0-beta.2\"",
          "141:     json5 \"^2.1.2\"",
          "142:     semver \"^6.3.0\"",
          "143:     source-map \"^0.5.0\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "192:   dependencies:",
          "193:     \"@babel/types\" \"^7.15.4\"",
          "195: \"@babel/helper-builder-binary-assignment-operator-visitor@^7.10.4\", \"@babel/helper-builder-binary-assignment-operator-visitor@^7.12.13\":",
          "196:   version \"7.12.13\"",
          "197:   resolved \"https://registry.yarnpkg.com/@babel/helper-builder-binary-assignment-operator-visitor/-/helper-builder-binary-assignment-operator-visitor-7.12.13.tgz#6bc20361c88b0a74d05137a65cac8d3cbf6f61fc\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "195: \"@babel/helper-annotate-as-pure@^7.16.0\":",
          "196:   version \"7.16.0\"",
          "197:   resolved \"https://registry.yarnpkg.com/@babel/helper-annotate-as-pure/-/helper-annotate-as-pure-7.16.0.tgz#9a1f0ebcda53d9a2d00108c4ceace6a5d5f1f08d\"",
          "198:   integrity sha512-ItmYF9vR4zA8cByDocY05o0LGUkp1zhbTQOH1NFyl5xXEqlTJQCEJjieriw+aFpxo16swMxUnUiKS7a/r4vtHg==",
          "199:   dependencies:",
          "200:     \"@babel/types\" \"^7.16.0\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1325:   dependencies:",
          "1326:     \"@babel/helper-plugin-utils\" \"^7.14.5\"",
          "1328: \"@babel/plugin-syntax-logical-assignment-operators@^7.10.4\", \"@babel/plugin-syntax-logical-assignment-operators@^7.8.3\":",
          "1329:   version \"7.10.4\"",
          "1330:   resolved \"https://registry.yarnpkg.com/@babel/plugin-syntax-logical-assignment-operators/-/plugin-syntax-logical-assignment-operators-7.10.4.tgz#ca91ef46303530448b906652bac2e9fe9941f699\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1335: \"@babel/plugin-syntax-jsx@^7.16.0\":",
          "1336:   version \"7.16.0\"",
          "1337:   resolved \"https://registry.yarnpkg.com/@babel/plugin-syntax-jsx/-/plugin-syntax-jsx-7.16.0.tgz#f9624394317365a9a88c82358d3f8471154698f1\"",
          "1338:   integrity sha512-8zv2+xiPHwly31RK4RmnEYY5zziuF3O7W2kIDW+07ewWDh6Oi0dRq8kwvulRkFgt6DB97RlKs5c1y068iPlCUg==",
          "1339:   dependencies:",
          "1340:     \"@babel/helper-plugin-utils\" \"^7.14.5\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "2018:   dependencies:",
          "2019:     \"@babel/plugin-transform-react-jsx\" \"^7.14.5\"",
          "2021: \"@babel/plugin-transform-react-jsx-self@^7.10.4\":",
          "2022:   version \"7.10.4\"",
          "2023:   resolved \"https://registry.yarnpkg.com/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.10.4.tgz#cd301a5fed8988c182ed0b9d55e9bd6db0bd9369\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2035: \"@babel/plugin-transform-react-jsx-development@^7.16.0\":",
          "2036:   version \"7.16.0\"",
          "2037:   resolved \"https://registry.yarnpkg.com/@babel/plugin-transform-react-jsx-development/-/plugin-transform-react-jsx-development-7.16.0.tgz#1cb52874678d23ab11d0d16488d54730807303ef\"",
          "2038:   integrity sha512-qq65iSqBRq0Hr3wq57YG2AmW0H6wgTnIzpffTphrUWUgLCOK+zf1f7G0vuOiXrp7dU1qq+fQBoqZ3wCDAkhFzw==",
          "2039:   dependencies:",
          "2040:     \"@babel/plugin-transform-react-jsx\" \"^7.16.0\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "2026:     \"@babel/helper-plugin-utils\" \"^7.10.4\"",
          "2027:     \"@babel/plugin-syntax-jsx\" \"^7.10.4\"",
          "2029: \"@babel/plugin-transform-react-jsx-source@^7.10.4\":",
          "2030:   version \"7.10.5\"",
          "2031:   resolved \"https://registry.yarnpkg.com/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.10.5.tgz#34f1779117520a779c054f2cdd9680435b9222b4\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2050: \"@babel/plugin-transform-react-jsx-self@^7.16.0\":",
          "2051:   version \"7.16.0\"",
          "2052:   resolved \"https://registry.yarnpkg.com/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.16.0.tgz#09202158abbc716a08330f392bfb98d6b9acfa0c\"",
          "2053:   integrity sha512-97yCFY+2GvniqOThOSjPor8xUoDiQ0STVWAQMl3pjhJoFVe5DuXDLZCRSZxu9clx+oRCbTiXGgKEG/Yoyo6Y+w==",
          "2054:   dependencies:",
          "2055:     \"@babel/helper-plugin-utils\" \"^7.14.5\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "2034:     \"@babel/helper-plugin-utils\" \"^7.10.4\"",
          "2035:     \"@babel/plugin-syntax-jsx\" \"^7.10.4\"",
          "2037: \"@babel/plugin-transform-react-jsx@^7.10.4\":",
          "2038:   version \"7.10.4\"",
          "2039:   resolved \"https://registry.yarnpkg.com/@babel/plugin-transform-react-jsx/-/plugin-transform-react-jsx-7.10.4.tgz#673c9f913948764a4421683b2bef2936968fddf2\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2065: \"@babel/plugin-transform-react-jsx-source@^7.16.0\":",
          "2066:   version \"7.16.0\"",
          "2067:   resolved \"https://registry.yarnpkg.com/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.16.0.tgz#d40c959d7803aae38224594585748693e84c0a22\"",
          "2068:   integrity sha512-8yvbGGrHOeb/oyPc9tzNoe9/lmIjz3HLa9Nc5dMGDyNpGjfFrk8D2KdEq9NRkftZzeoQEW6yPQ29TMZtrLiUUA==",
          "2069:   dependencies:",
          "2070:     \"@babel/helper-plugin-utils\" \"^7.14.5\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2066:     \"@babel/plugin-syntax-jsx\" \"^7.14.5\"",
          "2067:     \"@babel/types\" \"^7.14.9\"",
          "2069: \"@babel/plugin-transform-react-pure-annotations@^7.10.4\":",
          "2070:   version \"7.10.4\"",
          "2071:   resolved \"https://registry.yarnpkg.com/@babel/plugin-transform-react-pure-annotations/-/plugin-transform-react-pure-annotations-7.10.4.tgz#3eefbb73db94afbc075f097523e445354a1c6501\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2104: \"@babel/plugin-transform-react-jsx@^7.16.0\":",
          "2105:   version \"7.16.0\"",
          "2106:   resolved \"https://registry.yarnpkg.com/@babel/plugin-transform-react-jsx/-/plugin-transform-react-jsx-7.16.0.tgz#55b797d4960c3de04e07ad1c0476e2bc6a4889f1\"",
          "2107:   integrity sha512-rqDgIbukZ44pqq7NIRPGPGNklshPkvlmvqjdx3OZcGPk4zGIenYkxDTvl3LsSL8gqcc3ZzGmXPE6hR/u/voNOw==",
          "2108:   dependencies:",
          "2109:     \"@babel/helper-annotate-as-pure\" \"^7.16.0\"",
          "2110:     \"@babel/helper-module-imports\" \"^7.16.0\"",
          "2111:     \"@babel/helper-plugin-utils\" \"^7.14.5\"",
          "2112:     \"@babel/plugin-syntax-jsx\" \"^7.16.0\"",
          "2113:     \"@babel/types\" \"^7.16.0\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "4105:     prop-types \"^15.6.1\"",
          "4106:     react-lifecycles-compat \"^3.0.4\"",
          "4108: \"@samverschueren/stream-to-observable@^0.3.0\":",
          "4109:   version \"0.3.0\"",
          "4110:   resolved \"https://registry.yarnpkg.com/@samverschueren/stream-to-observable/-/stream-to-observable-0.3.0.tgz#ecdf48d532c58ea477acfcab80348424f8d0662f\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4154: \"@rollup/pluginutils@^4.1.1\":",
          "4155:   version \"4.1.1\"",
          "4156:   resolved \"https://registry.yarnpkg.com/@rollup/pluginutils/-/pluginutils-4.1.1.tgz#1d4da86dd4eded15656a57d933fda2b9a08d47ec\"",
          "4157:   integrity sha512-clDjivHqWGXi7u+0d2r2sBi4Ie6VLEAzWMIkvJLnDmxoOhBYOTfzGbOQBA32THHm11/LiJbd01tJUpJsbshSWQ==",
          "4158:   dependencies:",
          "4159:     estree-walker \"^2.0.1\"",
          "4160:     picomatch \"^2.2.2\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "5233:     \"@types/prop-types\" \"*\"",
          "5234:     csstype \"^2.2.0\"",
          "5236: \"@types/semver@^6.0.0\", \"@types/semver@^6.0.1\":",
          "5237:   version \"6.2.2\"",
          "5238:   resolved \"https://registry.yarnpkg.com/@types/semver/-/semver-6.2.2.tgz#5c27df09ca39e3c9beb4fae6b95f4d71426df0a9\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5290: \"@types/react@^17.0.37\":",
          "5291:   version \"17.0.37\"",
          "5292:   resolved \"https://registry.yarnpkg.com/@types/react/-/react-17.0.37.tgz#6884d0aa402605935c397ae689deed115caad959\"",
          "5293:   integrity sha512-2FS1oTqBGcH/s0E+CjrCCR9+JMpsu9b69RTFO+40ua43ZqP5MmQ4iUde/dMjWR909KxZwmOQIFq6AV6NjEG5xg==",
          "5294:   dependencies:",
          "5295:     \"@types/prop-types\" \"*\"",
          "5296:     \"@types/scheduler\" \"*\"",
          "5297:     csstype \"^3.0.2\"",
          "5299: \"@types/scheduler@*\":",
          "5300:   version \"0.16.2\"",
          "5301:   resolved \"https://registry.yarnpkg.com/@types/scheduler/-/scheduler-0.16.2.tgz#1a62f89525723dde24ba1b01b092bf5df8ad4d39\"",
          "5302:   integrity sha512-hppQEBDmlwhFAXKJX2KnWLYu5yMfi91yazPb2l+lbJiwW+wdo1gNeRA+3RgNSO39WYX2euey41KEwnqesU2Jew==",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "5539:     binary-case \"^1.0.0\"",
          "5540:     type-is \"^1.6.16\"",
          "5542: \"@webassemblyjs/ast@1.9.0\":",
          "5543:   version \"1.9.0\"",
          "5544:   resolved \"https://registry.yarnpkg.com/@webassemblyjs/ast/-/ast-1.9.0.tgz#bd850604b4042459a5a41cd7d338cbed695ed964\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5610: \"@vitejs/plugin-react@^1.1.1\":",
          "5611:   version \"1.1.1\"",
          "5612:   resolved \"https://registry.yarnpkg.com/@vitejs/plugin-react/-/plugin-react-1.1.1.tgz#5a242c64fa0a588e5b203938e5bd6d05fa25edf2\"",
          "5613:   integrity sha512-IJSRD4culdwQ6cRK0D1mstV1vdvYSb2HK1JQ1FDo6Hr7j5ppWJEwBC2v/Gy0h/A1lMmi4AnXACY/d10EgbQNEA==",
          "5614:   dependencies:",
          "5615:     \"@babel/core\" \"^7.16.0\"",
          "5616:     \"@babel/plugin-transform-react-jsx\" \"^7.16.0\"",
          "5617:     \"@babel/plugin-transform-react-jsx-development\" \"^7.16.0\"",
          "5618:     \"@babel/plugin-transform-react-jsx-self\" \"^7.16.0\"",
          "5619:     \"@babel/plugin-transform-react-jsx-source\" \"^7.16.0\"",
          "5620:     \"@rollup/pluginutils\" \"^4.1.1\"",
          "5621:     react-refresh \"^0.11.0\"",
          "5622:     resolve \"^1.20.0\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "8461:   resolved \"https://registry.yarnpkg.com/csstype/-/csstype-2.6.10.tgz#e63af50e66d7c266edb6b32909cfd0aabe03928b\"",
          "8462:   integrity sha512-D34BqZU4cIlMCY93rZHbrq9pjTAQJ3U8S8rfBqjwHxkGPThWFjzZDQpgMJY0QViLxth6ZKYiwFBo14RdN44U/w==",
          "8464: csv-generate@^3.3.0:",
          "8465:   version \"3.3.0\"",
          "8466:   resolved \"https://registry.yarnpkg.com/csv-generate/-/csv-generate-3.3.0.tgz#0e25658f1bb9806d94fec7b270896a35c7eedf1a\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8546: csstype@^3.0.2:",
          "8547:   version \"3.0.10\"",
          "8548:   resolved \"https://registry.yarnpkg.com/csstype/-/csstype-3.0.10.tgz#2ad3a7bed70f35b965707c092e5f30b327c290e5\"",
          "8549:   integrity sha512-2u44ZG2OcNUO9HDp/Jl8C07x6pU/eTR3ncV91SiK3dhG9TWvRVsCoJw14Ckx5DgWkzGA3waZWO3d7pgqpUI/XA==",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "9362:   resolved \"https://registry.yarnpkg.com/es6-shim/-/es6-shim-0.35.5.tgz#46f59dc0a84a1c5029e8ff1166ca0a902077a9ab\"",
          "9363:   integrity sha512-E9kK/bjtCQRpN1K28Xh4BlmP8egvZBGJJ+9GtnzOwt7mdqtrjHFuVGr7QJfdjBIKqrlU5duPf3pCBoDrkjVYFg==",
          "9365: escalade@^3.0.2:",
          "9366:   version \"3.0.2\"",
          "9367:   resolved \"https://registry.yarnpkg.com/escalade/-/escalade-3.0.2.tgz#6a580d70edb87880f22b4c91d0d56078df6962c4\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9452: esbuild-android-arm64@0.13.15:",
          "9453:   version \"0.13.15\"",
          "9454:   resolved \"https://registry.yarnpkg.com/esbuild-android-arm64/-/esbuild-android-arm64-0.13.15.tgz#3fc3ff0bab76fe35dd237476b5d2b32bb20a3d44\"",
          "9455:   integrity sha512-m602nft/XXeO8YQPUDVoHfjyRVPdPgjyyXOxZ44MK/agewFFkPa8tUo6lAzSWh5Ui5PB4KR9UIFTSBKh/RrCmg==",
          "9457: esbuild-darwin-64@0.13.15:",
          "9458:   version \"0.13.15\"",
          "9459:   resolved \"https://registry.yarnpkg.com/esbuild-darwin-64/-/esbuild-darwin-64-0.13.15.tgz#8e9169c16baf444eacec60d09b24d11b255a8e72\"",
          "9460:   integrity sha512-ihOQRGs2yyp7t5bArCwnvn2Atr6X4axqPpEdCFPVp7iUj4cVSdisgvEKdNR7yH3JDjW6aQDw40iQFoTqejqxvQ==",
          "9462: esbuild-darwin-arm64@0.13.15:",
          "9463:   version \"0.13.15\"",
          "9464:   resolved \"https://registry.yarnpkg.com/esbuild-darwin-arm64/-/esbuild-darwin-arm64-0.13.15.tgz#1b07f893b632114f805e188ddfca41b2b778229a\"",
          "9465:   integrity sha512-i1FZssTVxUqNlJ6cBTj5YQj4imWy3m49RZRnHhLpefFIh0To05ow9DTrXROTE1urGTQCloFUXTX8QfGJy1P8dQ==",
          "9467: esbuild-freebsd-64@0.13.15:",
          "9468:   version \"0.13.15\"",
          "9469:   resolved \"https://registry.yarnpkg.com/esbuild-freebsd-64/-/esbuild-freebsd-64-0.13.15.tgz#0b8b7eca1690c8ec94c75680c38c07269c1f4a85\"",
          "9470:   integrity sha512-G3dLBXUI6lC6Z09/x+WtXBXbOYQZ0E8TDBqvn7aMaOCzryJs8LyVXKY4CPnHFXZAbSwkCbqiPuSQ1+HhrNk7EA==",
          "9472: esbuild-freebsd-arm64@0.13.15:",
          "9473:   version \"0.13.15\"",
          "9474:   resolved \"https://registry.yarnpkg.com/esbuild-freebsd-arm64/-/esbuild-freebsd-arm64-0.13.15.tgz#2e1a6c696bfdcd20a99578b76350b41db1934e52\"",
          "9475:   integrity sha512-KJx0fzEDf1uhNOZQStV4ujg30WlnwqUASaGSFPhznLM/bbheu9HhqZ6mJJZM32lkyfGJikw0jg7v3S0oAvtvQQ==",
          "9477: esbuild-linux-32@0.13.15:",
          "9478:   version \"0.13.15\"",
          "9479:   resolved \"https://registry.yarnpkg.com/esbuild-linux-32/-/esbuild-linux-32-0.13.15.tgz#6fd39f36fc66dd45b6b5f515728c7bbebc342a69\"",
          "9480:   integrity sha512-ZvTBPk0YWCLMCXiFmD5EUtB30zIPvC5Itxz0mdTu/xZBbbHJftQgLWY49wEPSn2T/TxahYCRDWun5smRa0Tu+g==",
          "9482: esbuild-linux-64@0.13.15:",
          "9483:   version \"0.13.15\"",
          "9484:   resolved \"https://registry.yarnpkg.com/esbuild-linux-64/-/esbuild-linux-64-0.13.15.tgz#9cb8e4bcd7574e67946e4ee5f1f1e12386bb6dd3\"",
          "9485:   integrity sha512-eCKzkNSLywNeQTRBxJRQ0jxRCl2YWdMB3+PkWFo2BBQYC5mISLIVIjThNtn6HUNqua1pnvgP5xX0nHbZbPj5oA==",
          "9487: esbuild-linux-arm64@0.13.15:",
          "9488:   version \"0.13.15\"",
          "9489:   resolved \"https://registry.yarnpkg.com/esbuild-linux-arm64/-/esbuild-linux-arm64-0.13.15.tgz#3891aa3704ec579a1b92d2a586122e5b6a2bfba1\"",
          "9490:   integrity sha512-bYpuUlN6qYU9slzr/ltyLTR9YTBS7qUDymO8SV7kjeNext61OdmqFAzuVZom+OLW1HPHseBfJ/JfdSlx8oTUoA==",
          "9492: esbuild-linux-arm@0.13.15:",
          "9493:   version \"0.13.15\"",
          "9494:   resolved \"https://registry.yarnpkg.com/esbuild-linux-arm/-/esbuild-linux-arm-0.13.15.tgz#8a00e99e6a0c6c9a6b7f334841364d8a2b4aecfe\"",
          "9495:   integrity sha512-wUHttDi/ol0tD8ZgUMDH8Ef7IbDX+/UsWJOXaAyTdkT7Yy9ZBqPg8bgB/Dn3CZ9SBpNieozrPRHm0BGww7W/jA==",
          "9497: esbuild-linux-mips64le@0.13.15:",
          "9498:   version \"0.13.15\"",
          "9499:   resolved \"https://registry.yarnpkg.com/esbuild-linux-mips64le/-/esbuild-linux-mips64le-0.13.15.tgz#36b07cc47c3d21e48db3bb1f4d9ef8f46aead4f7\"",
          "9500:   integrity sha512-KlVjIG828uFPyJkO/8gKwy9RbXhCEUeFsCGOJBepUlpa7G8/SeZgncUEz/tOOUJTcWMTmFMtdd3GElGyAtbSWg==",
          "9502: esbuild-linux-ppc64le@0.13.15:",
          "9503:   version \"0.13.15\"",
          "9504:   resolved \"https://registry.yarnpkg.com/esbuild-linux-ppc64le/-/esbuild-linux-ppc64le-0.13.15.tgz#f7e6bba40b9a11eb9dcae5b01550ea04670edad2\"",
          "9505:   integrity sha512-h6gYF+OsaqEuBjeesTBtUPw0bmiDu7eAeuc2OEH9S6mV9/jPhPdhOWzdeshb0BskRZxPhxPOjqZ+/OqLcxQwEQ==",
          "9507: esbuild-netbsd-64@0.13.15:",
          "9508:   version \"0.13.15\"",
          "9509:   resolved \"https://registry.yarnpkg.com/esbuild-netbsd-64/-/esbuild-netbsd-64-0.13.15.tgz#a2fedc549c2b629d580a732d840712b08d440038\"",
          "9510:   integrity sha512-3+yE9emwoevLMyvu+iR3rsa+Xwhie7ZEHMGDQ6dkqP/ndFzRHkobHUKTe+NCApSqG5ce2z4rFu+NX/UHnxlh3w==",
          "9512: esbuild-openbsd-64@0.13.15:",
          "9513:   version \"0.13.15\"",
          "9514:   resolved \"https://registry.yarnpkg.com/esbuild-openbsd-64/-/esbuild-openbsd-64-0.13.15.tgz#b22c0e5806d3a1fbf0325872037f885306b05cd7\"",
          "9515:   integrity sha512-wTfvtwYJYAFL1fSs8yHIdf5GEE4NkbtbXtjLWjM3Cw8mmQKqsg8kTiqJ9NJQe5NX/5Qlo7Xd9r1yKMMkHllp5g==",
          "9517: esbuild-sunos-64@0.13.15:",
          "9518:   version \"0.13.15\"",
          "9519:   resolved \"https://registry.yarnpkg.com/esbuild-sunos-64/-/esbuild-sunos-64-0.13.15.tgz#d0b6454a88375ee8d3964daeff55c85c91c7cef4\"",
          "9520:   integrity sha512-lbivT9Bx3t1iWWrSnGyBP9ODriEvWDRiweAs69vI+miJoeKwHWOComSRukttbuzjZ8r1q0mQJ8Z7yUsDJ3hKdw==",
          "9522: esbuild-windows-32@0.13.15:",
          "9523:   version \"0.13.15\"",
          "9524:   resolved \"https://registry.yarnpkg.com/esbuild-windows-32/-/esbuild-windows-32-0.13.15.tgz#c96d0b9bbb52f3303322582ef8e4847c5ad375a7\"",
          "9525:   integrity sha512-fDMEf2g3SsJ599MBr50cY5ve5lP1wyVwTe6aLJsM01KtxyKkB4UT+fc5MXQFn3RLrAIAZOG+tHC+yXObpSn7Nw==",
          "9527: esbuild-windows-64@0.13.15:",
          "9528:   version \"0.13.15\"",
          "9529:   resolved \"https://registry.yarnpkg.com/esbuild-windows-64/-/esbuild-windows-64-0.13.15.tgz#1f79cb9b1e1bb02fb25cd414cb90d4ea2892c294\"",
          "9530:   integrity sha512-9aMsPRGDWCd3bGjUIKG/ZOJPKsiztlxl/Q3C1XDswO6eNX/Jtwu4M+jb6YDH9hRSUflQWX0XKAfWzgy5Wk54JQ==",
          "9532: esbuild-windows-arm64@0.13.15:",
          "9533:   version \"0.13.15\"",
          "9534:   resolved \"https://registry.yarnpkg.com/esbuild-windows-arm64/-/esbuild-windows-arm64-0.13.15.tgz#482173070810df22a752c686509c370c3be3b3c3\"",
          "9535:   integrity sha512-zzvyCVVpbwQQATaf3IG8mu1IwGEiDxKkYUdA4FpoCHi1KtPa13jeScYDjlW0Qh+ebWzpKfR2ZwvqAQkSWNcKjA==",
          "9537: esbuild@^0.13.12:",
          "9538:   version \"0.13.15\"",
          "9539:   resolved \"https://registry.yarnpkg.com/esbuild/-/esbuild-0.13.15.tgz#db56a88166ee373f87dbb2d8798ff449e0450cdf\"",
          "9540:   integrity sha512-raCxt02HBKv8RJxE8vkTSCXGIyKHdEdGfUmiYb8wnabnaEmHzyW7DCHb5tEN0xU8ryqg5xw54mcwnYkC4x3AIw==",
          "9541:   optionalDependencies:",
          "9542:     esbuild-android-arm64 \"0.13.15\"",
          "9543:     esbuild-darwin-64 \"0.13.15\"",
          "9544:     esbuild-darwin-arm64 \"0.13.15\"",
          "9545:     esbuild-freebsd-64 \"0.13.15\"",
          "9546:     esbuild-freebsd-arm64 \"0.13.15\"",
          "9547:     esbuild-linux-32 \"0.13.15\"",
          "9548:     esbuild-linux-64 \"0.13.15\"",
          "9549:     esbuild-linux-arm \"0.13.15\"",
          "9550:     esbuild-linux-arm64 \"0.13.15\"",
          "9551:     esbuild-linux-mips64le \"0.13.15\"",
          "9552:     esbuild-linux-ppc64le \"0.13.15\"",
          "9553:     esbuild-netbsd-64 \"0.13.15\"",
          "9554:     esbuild-openbsd-64 \"0.13.15\"",
          "9555:     esbuild-sunos-64 \"0.13.15\"",
          "9556:     esbuild-windows-32 \"0.13.15\"",
          "9557:     esbuild-windows-64 \"0.13.15\"",
          "9558:     esbuild-windows-arm64 \"0.13.15\"",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "9632:   resolved \"https://registry.yarnpkg.com/estraverse/-/estraverse-5.2.0.tgz#307df42547e6cc7324d3cf03c155d5cdb8c53880\"",
          "9633:   integrity sha512-BxbNGGNm0RyRYvUdHpIwv9IWzeM9XClbOxwoATuFdOE7ZE6wHL+HQ5T8hoPM+zHvmKzzsEqhgy0GrQ5X13afiQ==",
          "9635: esutils@^2.0.2:",
          "9636:   version \"2.0.3\"",
          "9637:   resolved \"https://registry.yarnpkg.com/esutils/-/esutils-2.0.3.tgz#74d2eb4de0b8da1293711910d50775b9b710ef64\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9830: estree-walker@^2.0.1:",
          "9831:   version \"2.0.2\"",
          "9832:   resolved \"https://registry.yarnpkg.com/estree-walker/-/estree-walker-2.0.2.tgz#52f010178c2a4c117a7757cfe942adb7d2da4cac\"",
          "9833:   integrity sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "10606:     bindings \"^1.5.0\"",
          "10607:     nan \"^2.12.1\"",
          "10610:   version \"2.3.2\"",
          "10611:   resolved \"https://registry.yarnpkg.com/fsevents/-/fsevents-2.3.2.tgz#8a526f78b8fdf4623b709e0b975c52c24c02fd1a\"",
          "10612:   integrity sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==",
          "",
          "[Removed Lines]",
          "10609: fsevents@^2.1.2, fsevents@^2.3.2, fsevents@~2.3.1:",
          "",
          "[Added Lines]",
          "10809: fsevents@^2.1.2, fsevents@^2.3.2, fsevents@~2.3.1, fsevents@~2.3.2:",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "11047:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
          "11049: \"graphiql@file:packages/graphiql\":",
          "11051:   dependencies:",
          "11052:     \"@graphiql/toolkit\" \"^0.4.2\"",
          "11053:     codemirror \"^5.58.2\"",
          "11055:     copy-to-clipboard \"^3.2.0\"",
          "11056:     dset \"^3.1.0\"",
          "11057:     entities \"^2.0.0\"",
          "11058:     escape-html \"^1.0.3\"",
          "11060:     markdown-it \"^12.2.0\"",
          "11062: graphql-config@^4.1.0:",
          "",
          "[Removed Lines]",
          "11050:   version \"1.5.14\"",
          "11054:     codemirror-graphql \"^1.2.9\"",
          "11059:     graphql-language-service \"^4.1.2\"",
          "",
          "[Added Lines]",
          "11250:   version \"1.5.16\"",
          "11254:     codemirror-graphql \"^1.2.11\"",
          "11259:     graphql-language-service \"^4.1.4\"",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "13741:   dependencies:",
          "13742:     minimist \"^1.2.5\"",
          "13745:   version \"3.0.0\"",
          "13746:   resolved \"https://registry.yarnpkg.com/jsonc-parser/-/jsonc-parser-3.0.0.tgz#abdd785701c7e7eaca8a9ec8cf070ca51a745a22\"",
          "13747:   integrity sha512-fQzRfAbIBnR0IQvftw9FJveWiHp72Fg20giDrHz6TdfB12UH/uue0D3hm57UB5KgAVuniLMCaS8P1IMj9NR7cA==",
          "",
          "[Removed Lines]",
          "13744: jsonc-parser@3.0.0:",
          "",
          "[Added Lines]",
          "13944: jsonc-parser@3.0.0, jsonc-parser@^3.0.0:",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "14836:   resolved \"https://registry.yarnpkg.com/nan/-/nan-2.14.2.tgz#f5376400695168f4cc694ac9393d0c9585eeea19\"",
          "14837:   integrity sha512-M2ufzIiINKCuDfBSAUr1vWQ+vuVcA9kqx8JJUsbQi6yf1uGRyb7HfpdfUr5qLXf3B/t8dPvcjhKMmlfnP47EzQ==",
          "14839: nanomatch@^1.2.9:",
          "14840:   version \"1.2.13\"",
          "14841:   resolved \"https://registry.yarnpkg.com/nanomatch/-/nanomatch-1.2.13.tgz#b87a8aa4fc0de8fe6be88895b38983ff265bd119\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15039: nanoid@^3.1.30:",
          "15040:   version \"3.1.30\"",
          "15041:   resolved \"https://registry.yarnpkg.com/nanoid/-/nanoid-3.1.30.tgz#63f93cc548d2a113dc5dfbc63bfa09e2b9b64362\"",
          "15042:   integrity sha512-zJpuPDwOv8D2zq2WRoMe1HsfZthVewpel9CAvTfc/2mBD1uUT/agc5f7GHGWXlYkFvi1mVxe4IjvP2HNrop7nQ==",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "15636:   resolved \"https://registry.yarnpkg.com/path-browserify/-/path-browserify-0.0.1.tgz#e6c4ddd7ed3aa27c68a20cc4e50e1a4ee83bbc4a\"",
          "15637:   integrity sha512-BapA40NHICOS+USX9SN4tyhq+A2RrN/Ws5F0Z5aMHDp98Fl86lX8Oti8B7uN93L4Ifv4fHOEA+pQw87gmMO/lQ==",
          "15639: path-dirname@^1.0.0:",
          "15640:   version \"1.0.2\"",
          "15641:   resolved \"https://registry.yarnpkg.com/path-dirname/-/path-dirname-1.0.2.tgz#cc33d24d525e099a5388c0336c6e32b9160609e0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15844: path-browserify@^1.0.1:",
          "15845:   version \"1.0.1\"",
          "15846:   resolved \"https://registry.yarnpkg.com/path-browserify/-/path-browserify-1.0.1.tgz#d98454a9c3753d5790860f16f68867b9e46be1fd\"",
          "15847:   integrity sha512-b7uo2UCUOYZcnF/3ID0lulOJi/bafxa1xPe7ZPsammBSpjSWQkjNxlt635YGS2MiR9GjvuXCtz2emr3jbsz98g==",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "15753:   resolved \"https://registry.yarnpkg.com/picocolors/-/picocolors-1.0.0.tgz#cb5bdc74ff3f51892236eaf79d68bc44564ab81c\"",
          "15754:   integrity sha512-1fygroTLlHu66zi26VoTDv8yRgm0Fccecssto+MhsZ0D/DGW2sm8E8AjW7NU5VVTRt5GxbeZ5qBuJr+HyLYkjQ==",
          "15761: picomatch@^2.0.4, picomatch@^2.0.5, picomatch@^2.2.1:",
          "15762:   version \"2.2.2\"",
          "15763:   resolved \"https://registry.yarnpkg.com/picomatch/-/picomatch-2.2.2.tgz#21f333e9b6b8eaff02468f5146ea406d345f4dad\"",
          "15764:   integrity sha512-q0M/9eZHzmr0AulXyPwNfZjtwZ/RBZlbN3K3CErVrk50T2ASYI7Bye0EvekFY3IP1Nt2DHu0re+V2ZHIpMkuWg==",
          "15767:   version \"2.3.0\"",
          "15768:   resolved \"https://registry.yarnpkg.com/picomatch/-/picomatch-2.3.0.tgz#f1f061de8f6a4bf022892e2d128234fb98302972\"",
          "15769:   integrity sha512-lY1Q/PiJGC2zOv/z391WOTD+Z02bCgsFfvxoXXf6h7kv9o+WmsmzYqrAwY63sNgOxE4xEdq0WyUnXfKeBrSvYw==",
          "",
          "[Removed Lines]",
          "15756: picomatch-browser@^2.2.5:",
          "15757:   version \"2.2.5\"",
          "15758:   resolved \"https://registry.yarnpkg.com/picomatch-browser/-/picomatch-browser-2.2.5.tgz#dde032340731d069289e86164e0e143c7249ff78\"",
          "15759:   integrity sha512-Da/xnHhOtbSVhkayCPL9jcQ1nZBAm0Ylu5KAChEIr3xV/3jqQIAHoIqIEbEB9TKmgbLbV3PsRQ8VC6m74YVoEw==",
          "15766: picomatch@^2.2.3:",
          "",
          "[Added Lines]",
          "15966: picomatch-browser@^2.2.6:",
          "15967:   version \"2.2.6\"",
          "15968:   resolved \"https://registry.yarnpkg.com/picomatch-browser/-/picomatch-browser-2.2.6.tgz#e0626204575eb49f019f2f2feac24fc3b53e7a8a\"",
          "15969:   integrity sha512-0ypsOQt9D4e3hziV8O4elD9uN0z/jtUEfxVRtNaAAtXIyUx9m/SzlO020i8YNL2aL/E6blOvvHQcin6HZlFy/w==",
          "15976: picomatch@^2.2.2, picomatch@^2.2.3:",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "16536:     source-map \"^0.6.1\"",
          "16537:     supports-color \"^6.1.0\"",
          "16539: preferred-pm@^3.0.0:",
          "16540:   version \"3.0.3\"",
          "16541:   resolved \"https://registry.yarnpkg.com/preferred-pm/-/preferred-pm-3.0.3.tgz#1b6338000371e3edbce52ef2e4f65eb2e73586d6\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16749: postcss@^8.3.11:",
          "16750:   version \"8.4.4\"",
          "16751:   resolved \"https://registry.yarnpkg.com/postcss/-/postcss-8.4.4.tgz#d53d4ec6a75fd62557a66bb41978bf47ff0c2869\"",
          "16752:   integrity sha512-joU6fBsN6EIer28Lj6GDFoC/5yOZzLCfn0zHAn/MYXI7aPt4m4hK5KC5ovEZXy+lnCjmYIbQWngvju2ddyEr8Q==",
          "16753:   dependencies:",
          "16754:     nanoid \"^3.1.30\"",
          "16755:     picocolors \"^1.0.0\"",
          "16756:     source-map-js \"^1.0.1\"",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "17044:     prop-types \"^15.6.2\"",
          "17045:     scheduler \"^0.19.1\"",
          "17047: react-draggable@^4.0.3:",
          "17048:   version \"4.4.3\"",
          "17049:   resolved \"https://registry.yarnpkg.com/react-draggable/-/react-draggable-4.4.3.tgz#0727f2cae5813e36b0e4962bf11b2f9ef2b406f3\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17266: react-dom@^17.0.2:",
          "17267:   version \"17.0.2\"",
          "17268:   resolved \"https://registry.yarnpkg.com/react-dom/-/react-dom-17.0.2.tgz#ecffb6845e3ad8dbfcdc498f0d0a939736502c23\"",
          "17269:   integrity sha512-s4h96KtLDUQlsENhMn1ar8t2bEa+q/YAtj8pPPdIjPDGBDIVNsrD9aXNWqspUe6AzKCIG0C1HZZLqLV7qpOBGA==",
          "17270:   dependencies:",
          "17271:     loose-envify \"^1.1.0\"",
          "17272:     object-assign \"^4.1.1\"",
          "17273:     scheduler \"^0.20.2\"",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "17150:     typed-styles \"^0.0.7\"",
          "17151:     warning \"^4.0.2\"",
          "17153: react-sizeme@^2.6.7:",
          "17154:   version \"2.6.12\"",
          "17155:   resolved \"https://registry.yarnpkg.com/react-sizeme/-/react-sizeme-2.6.12.tgz#ed207be5476f4a85bf364e92042520499455453e\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17381: react-refresh@^0.11.0:",
          "17382:   version \"0.11.0\"",
          "17383:   resolved \"https://registry.yarnpkg.com/react-refresh/-/react-refresh-0.11.0.tgz#77198b944733f0f1f1a90e791de4541f9f074046\"",
          "17384:   integrity sha512-F27qZr8uUqwhWZboondsPx8tnC3Ct3SxZA3V5WyEvujRyyNv0VYPhoBg1gZ8/MV5tubQp76Trw8lTv9hzRBa+A==",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "17189:     \"@babel/runtime\" \"^7.1.2\"",
          "17190:     prop-types \"^15.6.0\"",
          "17193:   version \"17.0.2\"",
          "17194:   resolved \"https://registry.yarnpkg.com/react/-/react-17.0.2.tgz#d0b5cc516d29eb3eee383f75b62864cfb6800037\"",
          "17195:   integrity sha512-gnhPt75i/dq/z3/6q/0asP78D0u592D5L1pd7M8P+dck6Fu/jJeL6iVVK23fptSUZj8Vjf++7wXA8UNclGQcbA==",
          "",
          "[Removed Lines]",
          "17192: react@17.0.2:",
          "",
          "[Added Lines]",
          "17425: react@17.0.2, react@^17.0.2:",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "17781:     hash-base \"^3.0.0\"",
          "17782:     inherits \"^2.0.1\"",
          "17784: rsvp@^4.8.4:",
          "17785:   version \"4.8.5\"",
          "17786:   resolved \"https://registry.yarnpkg.com/rsvp/-/rsvp-4.8.5.tgz#c8f155311d167f68f21e168df71ec5b083113734\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18017: rollup@^2.59.0:",
          "18018:   version \"2.60.2\"",
          "18019:   resolved \"https://registry.yarnpkg.com/rollup/-/rollup-2.60.2.tgz#3f45ace36a9b10b4297181831ea0719922513463\"",
          "18020:   integrity sha512-1Bgjpq61sPjgoZzuiDSGvbI1tD91giZABgjCQBKM5aYLnzjq52GoDuWVwT/cm/MCxCMPU8gqQvkj8doQ5C8Oqw==",
          "18021:   optionalDependencies:",
          "18022:     fsevents \"~2.3.2\"",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "17915:     loose-envify \"^1.1.0\"",
          "17916:     object-assign \"^4.1.1\"",
          "17918: schema-utils@^0.4.0:",
          "17919:   version \"0.4.7\"",
          "17920:   resolved \"https://registry.yarnpkg.com/schema-utils/-/schema-utils-0.4.7.tgz#ba74f597d2be2ea880131746ee17d0a093c68187\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18158: scheduler@^0.20.2:",
          "18159:   version \"0.20.2\"",
          "18160:   resolved \"https://registry.yarnpkg.com/scheduler/-/scheduler-0.20.2.tgz#4baee39436e34aa93b4874bddcbf0fe8b8b50e91\"",
          "18161:   integrity sha512-2eWfGgAqqWFGqtdMmcL5zCMK1U8KlXv8SQFGglL3CEtd0aDVDWgeF/YoCmvln55m5zSk3J/20hTaSBeSObsQDQ==",
          "18162:   dependencies:",
          "18163:     loose-envify \"^1.1.0\"",
          "18164:     object-assign \"^4.1.1\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "18388:   resolved \"https://registry.yarnpkg.com/source-list-map/-/source-list-map-2.0.1.tgz#3993bd873bfc48479cca9ea3a547835c7c154b34\"",
          "18389:   integrity sha512-qnQ7gVMxGNxsiL4lEuJwe/To8UnK7fAnmbGEEH8RpLouuKbeEm0lhbQVFIrNSuB+G7tVrAlVsZgETT5nljf+Iw==",
          "18391: source-map-resolve@^0.5.0:",
          "18392:   version \"0.5.3\"",
          "18393:   resolved \"https://registry.yarnpkg.com/source-map-resolve/-/source-map-resolve-0.5.3.tgz#190866bece7553e1f8f267a2ee82c606b5509a1a\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18639: source-map-js@^1.0.1:",
          "18640:   version \"1.0.1\"",
          "18641:   resolved \"https://registry.yarnpkg.com/source-map-js/-/source-map-js-1.0.1.tgz#a1741c131e3c77d048252adfa24e23b908670caf\"",
          "18642:   integrity sha512-4+TN2b3tqOCd/kaGRJ/sTYA0tR0mdXx26ipdolxcwtJVqEnqNYvlCAt1q3ypy4QMlYus+Zh34RNtYLoq2oQ4IA==",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "20006:     clone-stats \"^0.0.1\"",
          "20007:     replace-ext \"0.0.1\"",
          "20009: vm-browserify@^1.0.1:",
          "20010:   version \"1.1.2\"",
          "20011:   resolved \"https://registry.yarnpkg.com/vm-browserify/-/vm-browserify-1.1.2.tgz#78641c488b8e6ca91a75f511e7a3b32a86e5dda0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20262: vite-plugin-monaco-editor@^1.0.10:",
          "20263:   version \"1.0.10\"",
          "20264:   resolved \"https://registry.yarnpkg.com/vite-plugin-monaco-editor/-/vite-plugin-monaco-editor-1.0.10.tgz#cd370f68d4121bced6f902c6284649cc8eca4170\"",
          "20265:   integrity sha512-7yTAFIE0SefjCmfnjrvXOl53wkxeSASc/ZIcB5tZeEK3vAmHhveV8y3f90Vp8b+PYdbUipjqf91mbFbSENkpcw==",
          "20267: vite@^2.7.0:",
          "20268:   version \"2.7.0\"",
          "20269:   resolved \"https://registry.yarnpkg.com/vite/-/vite-2.7.0.tgz#d3d753220d10afb055731cd7feaa8e87b2b779b6\"",
          "20270:   integrity sha512-ZM629j9n6f1Gcr2KsfpLhJ0FRkift4SsTLSvExmNpGJYzyi1JyLOFybz85ShqFP5f4oCfJSblWAma9X8lZg/vA==",
          "20271:   dependencies:",
          "20272:     esbuild \"^0.13.12\"",
          "20273:     postcss \"^8.3.11\"",
          "20274:     resolve \"^1.20.0\"",
          "20275:     rollup \"^2.59.0\"",
          "20276:   optionalDependencies:",
          "20277:     fsevents \"~2.3.2\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2c860e10e72d4a969a4cb1910c10c3a38e6f8fcb",
      "candidate_info": {
        "commit_hash": "2c860e10e72d4a969a4cb1910c10c3a38e6f8fcb",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/2c860e10e72d4a969a4cb1910c10c3a38e6f8fcb",
        "files": [
          ".changeset/real-waves-enjoy.md",
          ".changeset/red-zoos-divide.md",
          ".changeset/rude-houses-kiss.md",
          "packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/index.tsx",
          "packages/graphiql/src/utility/__tests__/find.spec.ts",
          "packages/graphiql/src/utility/debounce.ts",
          "packages/graphiql/src/utility/find.ts"
        ],
        "message": "[v2] cleanup `GraphiQL` component (#2632)\n\n* remove deprecated class methods\n\n* remove utilities\n\n* remove ref forwarding\n\n* refactor inner class component to a function component\n\n* merge main component with context consumer component\n\n* remove component statics\n\n* refactor outer component to be a class component\n\n* remove comments\n\n* add changeset\n\n* remove legacy exports",
        "before_after_code_files": [
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/index.tsx||packages/graphiql/src/index.tsx",
          "packages/graphiql/src/utility/__tests__/find.spec.ts||packages/graphiql/src/utility/__tests__/find.spec.ts",
          "packages/graphiql/src/utility/debounce.ts||packages/graphiql/src/utility/debounce.ts",
          "packages/graphiql/src/utility/find.ts||packages/graphiql/src/utility/find.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ],
          "candidate": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "9:   ComponentType,",
          "10:   PropsWithChildren,",
          "11:   ReactNode,",
          "15: } from 'react';",
          "16: import {",
          "17:   GraphQLSchema,",
          "",
          "[Removed Lines]",
          "12:   forwardRef,",
          "13:   ForwardRefExoticComponent,",
          "14:   RefAttributes,",
          "",
          "[Added Lines]",
          "12:   useState,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31:   DocExplorer,",
          "32:   DocsIcon,",
          "33:   EditorContextProvider,",
          "35:   ExecuteButton,",
          "36:   ExecutionContextProvider,",
          "38:   ExplorerContextProvider,",
          "40:   HeaderEditor,",
          "41:   History,",
          "42:   HistoryContextProvider,",
          "44:   HistoryIcon,",
          "45:   KeyboardShortcutIcon,",
          "46:   KeyMap,",
          "",
          "[Removed Lines]",
          "34:   EditorContextType,",
          "37:   ExecutionContextType,",
          "39:   ExplorerContextType,",
          "43:   HistoryContextType,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "52:   ResponseEditor,",
          "53:   ResponseTooltipType,",
          "54:   SchemaContextProvider,",
          "56:   SettingsIcon,",
          "57:   Spinner,",
          "58:   StorageContextProvider,",
          "60:   Tab,",
          "61:   Tabs,",
          "62:   TabsState,",
          "64:   ToolbarButton,",
          "65:   Tooltip,",
          "66:   UnStyledButton,",
          "68:   useCopyQuery,",
          "69:   useDragResize,",
          "70:   useEditorContext,",
          "",
          "[Removed Lines]",
          "55:   SchemaContextType,",
          "59:   StorageContextType,",
          "63:   Theme,",
          "67:   useAutoCompleteLeafs,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "79:   VariableEditor,",
          "80: } from '@graphiql/react';",
          "85: import type { Fetcher, GetDefaultFieldNamesFn } from '@graphiql/toolkit';",
          "87: const majorVersion = parseInt(React.version.slice(0, 2), 10);",
          "",
          "[Removed Lines]",
          "82: import find from '../utility/find';",
          "84: import { formatError, formatResult } from '@graphiql/toolkit';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "446:   if (typeof fetcher !== 'function') {",
          "447:     throw new TypeError('GraphiQL requires a fetcher function.');",
          "",
          "[Removed Lines]",
          "310: export class GraphiQL extends React.Component<GraphiQLProps> {",
          "311:   ref: GraphiQLWithContext | null = null;",
          "313:   constructor(props: GraphiQLProps) {",
          "314:     super(props);",
          "315:   }",
          "317:   render() {",
          "318:     return (",
          "319:       <GraphiQLProviders",
          "320:         {...this.props}",
          "321:         ref={node => {",
          "322:           this.ref = node;",
          "323:         }}",
          "324:       />",
          "325:     );",
          "326:   }",
          "333:   public getQueryEditor() {",
          "334:     console.warn(",
          "335:       'The method `GraphiQL.getQueryEditor` is deprecated and will be removed in the next major version. To set the value of the editor you can use the `query` prop. To react on changes of the editor value you can pass a callback to the `onEditQuery` prop.',",
          "336:     );",
          "337:     return this.ref?.getQueryEditor() || null;",
          "338:   }",
          "345:   public getVariableEditor() {",
          "346:     console.warn(",
          "347:       'The method `GraphiQL.getVariableEditor` is deprecated and will be removed in the next major version. To set the value of the editor you can use the `variables` prop. To react on changes of the editor value you can pass a callback to the `onEditVariables` prop.',",
          "348:     );",
          "349:     return this.ref?.getVariableEditor() || null;",
          "350:   }",
          "357:   public getHeaderEditor() {",
          "358:     console.warn(",
          "359:       'The method `GraphiQL.getHeaderEditor` is deprecated and will be removed in the next major version. To set the value of the editor you can use the `headers` prop. To react on changes of the editor value you can pass a callback to the `onEditHeaders` prop.',",
          "360:     );",
          "361:     return this.ref?.getHeaderEditor() || null;",
          "362:   }",
          "369:   public refresh() {",
          "370:     console.warn(",
          "371:       'The method `GraphiQL.refresh` is deprecated and will be removed in the next major version. Already now, all editors should automatically refresh when their size changes.',",
          "372:     );",
          "373:     this.ref?.refresh();",
          "374:   }",
          "382:   public autoCompleteLeafs() {",
          "383:     console.warn(",
          "384:       'The method `GraphiQL.autoCompleteLeafs` is deprecated and will be removed in the next major version. Please switch to using the `autoCompleteLeafs` function provided by the `EditorContext` from the `@graphiql/react` package.',",
          "385:     );",
          "386:     return this.ref?.autoCompleteLeafs();",
          "387:   }",
          "391:   static formatResult = (result: any): string => {",
          "392:     console.warn(",
          "393:       'The function `GraphiQL.formatResult` is deprecated and will be removed in the next major version. Please switch to using the `formatResult` function provided by the `@graphiql/toolkit` package.',",
          "394:     );",
          "395:     return formatResult(result);",
          "396:   };",
          "398:   static formatError = (error: any): string => {",
          "399:     console.warn(",
          "400:       'The function `GraphiQL.formatError` is deprecated and will be removed in the next major version. Please switch to using the `formatError` function provided by the `@graphiql/toolkit` package.',",
          "401:     );",
          "402:     return formatError(error);",
          "403:   };",
          "406:   static Logo = GraphiQLLogo;",
          "407:   static Toolbar = GraphiQLToolbar;",
          "408:   static Footer = GraphiQLFooter;",
          "409:   static QueryEditor = QueryEditor;",
          "410:   static VariableEditor = VariableEditor;",
          "411:   static HeaderEditor = HeaderEditor;",
          "412:   static ResultViewer = ResponseEditor;",
          "413: }",
          "415: const GraphiQLProviders: ForwardRefExoticComponent<",
          "416:   GraphiQLProps & RefAttributes<GraphiQLWithContext>",
          "417: > = forwardRef<GraphiQLWithContext, GraphiQLProps>(function GraphiQLProviders(",
          "418:   {",
          "419:     dangerouslyAssumeSchemaIsValid,",
          "420:     docExplorerOpen,",
          "421:     externalFragments,",
          "422:     fetcher,",
          "423:     headers,",
          "424:     inputValueDeprecation,",
          "425:     introspectionQueryName,",
          "426:     maxHistoryLength,",
          "427:     onEditOperationName,",
          "428:     onSchemaChange,",
          "429:     onTabChange,",
          "430:     onToggleHistory,",
          "431:     onToggleDocs,",
          "432:     operationName,",
          "433:     query,",
          "434:     response,",
          "435:     storage,",
          "436:     schema,",
          "437:     schemaDescription,",
          "438:     shouldPersistHeaders,",
          "439:     validationRules,",
          "440:     variables,",
          "441:     ...props",
          "442:   },",
          "443:   ref,",
          "444: ) {",
          "",
          "[Added Lines]",
          "298: export function GraphiQL({",
          "299:   dangerouslyAssumeSchemaIsValid,",
          "300:   defaultQuery,",
          "301:   docExplorerOpen,",
          "302:   externalFragments,",
          "303:   fetcher,",
          "304:   headers,",
          "305:   inputValueDeprecation,",
          "306:   introspectionQueryName,",
          "307:   maxHistoryLength,",
          "308:   onEditOperationName,",
          "309:   onSchemaChange,",
          "310:   onTabChange,",
          "311:   onToggleHistory,",
          "312:   onToggleDocs,",
          "313:   operationName,",
          "314:   query,",
          "315:   response,",
          "316:   storage,",
          "317:   schema,",
          "318:   schemaDescription,",
          "319:   shouldPersistHeaders,",
          "320:   validationRules,",
          "321:   variables,",
          "322:   ...props",
          "323: }: GraphiQLProps) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "454:         onToggle={onToggleHistory}",
          "455:       >",
          "456:         <EditorContextProvider",
          "458:           externalFragments={externalFragments}",
          "459:           headers={headers}",
          "460:           onEditOperationName={onEditOperationName}",
          "",
          "[Removed Lines]",
          "457:           defaultQuery={props.defaultQuery}",
          "",
          "[Added Lines]",
          "336:           defaultQuery={defaultQuery}",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "482:                 isVisible={docExplorerOpen}",
          "483:                 onToggleVisibility={onToggleDocs}",
          "484:               >",
          "486:               </ExplorerContextProvider>",
          "487:             </ExecutionContextProvider>",
          "488:           </SchemaContextProvider>",
          "",
          "[Removed Lines]",
          "485:                 <GraphiQLConsumeContexts {...props} ref={ref} />",
          "",
          "[Added Lines]",
          "364:                 <GraphiQLInterface {...props} />",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "490:       </HistoryContextProvider>",
          "491:     </StorageContextProvider>",
          "492:   );",
          "500:   GraphiQLProps,",
          "501:   | 'dangerouslyAssumeSchemaIsValid'",
          "502:   | 'defaultQuery'",
          "",
          "[Removed Lines]",
          "493: }) as any;",
          "499: type GraphiQLWithContextProviderProps = Omit<",
          "",
          "[Added Lines]",
          "372: }",
          "374: GraphiQL.Logo = GraphiQLLogo;",
          "375: GraphiQL.Toolbar = GraphiQLToolbar;",
          "376: GraphiQL.Footer = GraphiQLFooter;",
          "378: export type GraphiQLInterfaceProps = Omit<",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "523:   | 'variables'",
          "524: >;",
          "530:   const editorContext = useEditorContext({ nonNull: true });",
          "531:   const executionContext = useExecutionContext({ nonNull: true });",
          "532:   const explorerContext = useExplorerContext();",
          "",
          "[Removed Lines]",
          "526: const GraphiQLConsumeContexts = forwardRef<",
          "527:   GraphiQLWithContext,",
          "528:   GraphiQLWithContextProviderProps",
          "529: >(function GraphiQLConsumeContexts({ getDefaultFieldNames, ...props }, ref) {",
          "",
          "[Added Lines]",
          "405: export function GraphiQLInterface(props: GraphiQLInterfaceProps) {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "534:   const schemaContext = useSchemaContext({ nonNull: true });",
          "535:   const storageContext = useStorageContext();",
          "538:   const copy = useCopyQuery({ onCopyQuery: props.onCopyQuery });",
          "539:   const merge = useMergeQuery();",
          "540:   const prettify = usePrettifyEditors();",
          "",
          "[Removed Lines]",
          "537:   const autoCompleteLeafs = useAutoCompleteLeafs({ getDefaultFieldNames });",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "582:     storageKey: 'secondaryEditorFlex',",
          "583:   });",
          "698:     );",
          "809:               <UnStyledButton",
          "810:                 type=\"button\"",
          "811:                 onClick={() => {",
          "813:                 }}",
          "815:               >",
          "817:               </UnStyledButton>",
          "818:             </Tooltip>",
          "820:               <UnStyledButton",
          "821:                 type=\"button\"",
          "822:                 onClick={() => {",
          "824:                 }}",
          "826:               >",
          "828:               </UnStyledButton>",
          "829:             </Tooltip>",
          "831:         </div>",
          "851:           </div>",
          "892:                           onClick={() => {",
          "894:                           }}",
          "896:                         >",
          "905:                     <Tooltip label=\"Add tab\">",
          "906:                       <UnStyledButton",
          "907:                         type=\"button\"",
          "908:                         className=\"graphiql-tab-add\"",
          "912:                         aria-label=\"Add tab\"",
          "913:                       >",
          "914:                         <PlusIcon aria-hidden=\"true\" />",
          "915:                       </UnStyledButton>",
          "916:                     </Tooltip>",
          "920:               </div>",
          "939:                       >",
          "954:                         >",
          "963:                           <UnStyledButton",
          "964:                             type=\"button\"",
          "965:                             className={",
          "969:                             }",
          "970:                             onClick={() => {",
          "971:                               if (",
          "974:                               ) {",
          "978:                               }",
          "982:                             }}",
          "983:                           >",
          "985:                           </UnStyledButton>",
          "1016:                               ? 'Show editor tools'",
          "1017:                               : 'Hide editor tools'",
          "1018:                           }",
          "1019:                         >",
          "1052:                     </div>",
          "1071:                         />",
          "1085:                   </div>",
          "1086:                 </div>",
          "1102:                 </div>",
          "1103:               </div>",
          "1104:             </div>",
          "1105:           </div>",
          "1106:         </div>",
          "1120:           </div>",
          "1211:             </div>",
          "1212:           </div>",
          "1233:           </div>",
          "1234:           <div className=\"graphiql-dialog-section\">",
          "1235:             <div>",
          "1237:               <div className=\"graphiql-dialog-section-caption\">",
          "1239:               </div>",
          "1240:             </div>",
          "1241:             <div>",
          "1271:             </div>",
          "1272:           </div>",
          "1335: }",
          "1338: function GraphiQLLogo<TProps>(props: PropsWithChildren<TProps>) {",
          "1339:   return (",
          "1340:     <div className=\"title\">",
          "",
          "[Removed Lines]",
          "585:   return (",
          "586:     <GraphiQLWithContext",
          "587:       {...props}",
          "588:       editorContext={editorContext}",
          "589:       executionContext={executionContext}",
          "590:       explorerContext={explorerContext}",
          "591:       historyContext={historyContext}",
          "592:       schemaContext={schemaContext}",
          "593:       storageContext={storageContext}",
          "594:       autoCompleteLeafs={autoCompleteLeafs}",
          "595:       copy={copy}",
          "596:       merge={merge}",
          "597:       prettify={prettify}",
          "598:       pluginResize={pluginResize}",
          "599:       editorResize={editorResize}",
          "600:       editorToolsResize={editorToolsResize}",
          "601:       theme={theme}",
          "602:       setTheme={setTheme}",
          "603:       ref={ref}",
          "604:     />",
          "605:   );",
          "606: });",
          "608: type GraphiQLWithContextConsumerProps = Omit<",
          "609:   GraphiQLWithContextProviderProps,",
          "610:   'fetcher' | 'getDefaultFieldNames'",
          "611: > & {",
          "612:   editorContext: EditorContextType;",
          "613:   executionContext: ExecutionContextType;",
          "614:   explorerContext: ExplorerContextType | null;",
          "615:   historyContext: HistoryContextType | null;",
          "616:   schemaContext: SchemaContextType;",
          "617:   storageContext: StorageContextType | null;",
          "619:   autoCompleteLeafs(): string | undefined;",
          "620:   copy(): void;",
          "621:   merge(): void;",
          "622:   prettify(): void;",
          "624:   pluginResize: ReturnType<typeof useDragResize>;",
          "625:   editorResize: ReturnType<typeof useDragResize>;",
          "626:   editorToolsResize: ReturnType<typeof useDragResize>;",
          "628:   theme: Theme;",
          "629:   setTheme(theme: Theme): void;",
          "630: };",
          "632: export type GraphiQLState = {",
          "633:   activeSecondaryEditor: 'variable' | 'header';",
          "634:   showShortKeys: boolean;",
          "635:   showSettings: boolean;",
          "636:   clearStorageStatus: 'success' | 'error' | null;",
          "637: };",
          "639: class GraphiQLWithContext extends React.Component<",
          "640:   GraphiQLWithContextConsumerProps,",
          "641:   GraphiQLState",
          "642: > {",
          "643:   constructor(props: GraphiQLWithContextConsumerProps) {",
          "644:     super(props);",
          "647:     this.state = {",
          "648:       activeSecondaryEditor: 'variable',",
          "649:       showShortKeys: false,",
          "650:       showSettings: false,",
          "651:       clearStorageStatus: null,",
          "652:     };",
          "653:   }",
          "655:   render() {",
          "656:     const children = React.Children.toArray(this.props.children);",
          "658:     const logo = find(children, child =>",
          "659:       isChildComponentType(child, GraphiQL.Logo),",
          "660:     ) || <GraphiQL.Logo />;",
          "662:     const toolbar = find(children, child =>",
          "663:       isChildComponentType(child, GraphiQL.Toolbar),",
          "664:     ) || (",
          "665:       <>",
          "666:         <ToolbarButton",
          "667:           onClick={() => {",
          "668:             this.props.prettify();",
          "669:           }}",
          "670:           label=\"Prettify query (Shift-Ctrl-P)\"",
          "671:         >",
          "672:           <PrettifyIcon className=\"graphiql-toolbar-icon\" aria-hidden=\"true\" />",
          "673:         </ToolbarButton>",
          "674:         <ToolbarButton",
          "675:           onClick={() => {",
          "676:             this.props.merge();",
          "677:           }}",
          "678:           label=\"Merge fragments into query (Shift-Ctrl-M)\"",
          "679:         >",
          "680:           <MergeIcon className=\"graphiql-toolbar-icon\" aria-hidden=\"true\" />",
          "681:         </ToolbarButton>",
          "682:         <ToolbarButton",
          "683:           onClick={() => {",
          "684:             this.props.copy();",
          "685:           }}",
          "686:           label=\"Copy query (Shift-Ctrl-C)\"",
          "687:         >",
          "688:           <CopyIcon className=\"graphiql-toolbar-icon\" aria-hidden=\"true\" />",
          "689:         </ToolbarButton>",
          "690:         {this.props.toolbar?.additionalContent",
          "691:           ? this.props.toolbar.additionalContent",
          "692:           : null}",
          "693:       </>",
          "694:     );",
          "696:     const footer = find(children, child =>",
          "697:       isChildComponentType(child, GraphiQL.Footer),",
          "700:     const headerEditorEnabled = this.props.headerEditorEnabled ?? true;",
          "702:     const onClickReference = () => {",
          "703:       if (this.props.pluginResize.hiddenElement === 'first') {",
          "704:         this.props.pluginResize.setHiddenElement(null);",
          "705:       }",
          "706:     };",
          "708:     const modifier =",
          "709:       window.navigator.platform.toLowerCase().indexOf('mac') === 0 ? (",
          "710:         <code className=\"graphiql-key\">Cmd</code>",
          "711:       ) : (",
          "712:         <code className=\"graphiql-key\">Ctrl</code>",
          "713:       );",
          "715:     return (",
          "716:       <div data-testid=\"graphiql-container\" className=\"graphiql-container\">",
          "717:         <div className=\"graphiql-sidebar\">",
          "718:           <div>",
          "719:             {this.props.explorerContext ? (",
          "720:               <Tooltip",
          "721:                 label={",
          "722:                   this.props.explorerContext.isVisible",
          "723:                     ? 'Hide Documentation Explorer'",
          "724:                     : 'Show Documentation Explorer'",
          "725:                 }",
          "726:               >",
          "727:                 <UnStyledButton",
          "728:                   type=\"button\"",
          "729:                   className={",
          "730:                     this.props.explorerContext.isVisible ? 'active' : ''",
          "731:                   }",
          "732:                   onClick={() => {",
          "733:                     if (this.props.explorerContext?.isVisible) {",
          "734:                       this.props.explorerContext?.hide();",
          "735:                       this.props.pluginResize.setHiddenElement('first');",
          "736:                     } else {",
          "737:                       this.props.explorerContext?.show();",
          "738:                       this.props.pluginResize.setHiddenElement(null);",
          "739:                       if (this.props.historyContext?.isVisible) {",
          "740:                         this.props.historyContext.hide();",
          "741:                       }",
          "742:                     }",
          "743:                   }}",
          "744:                   aria-label={",
          "745:                     this.props.explorerContext.isVisible",
          "746:                       ? 'Hide Documentation Explorer'",
          "747:                       : 'Show Documentation Explorer'",
          "748:                   }",
          "749:                 >",
          "750:                   <DocsIcon aria-hidden=\"true\" />",
          "751:                 </UnStyledButton>",
          "752:               </Tooltip>",
          "753:             ) : null}",
          "754:             {this.props.historyContext ? (",
          "755:               <Tooltip",
          "756:                 label={",
          "757:                   this.props.historyContext.isVisible",
          "758:                     ? 'Hide History'",
          "759:                     : 'Show History'",
          "760:                 }",
          "761:               >",
          "762:                 <UnStyledButton",
          "763:                   type=\"button\"",
          "764:                   className={",
          "765:                     this.props.historyContext.isVisible ? 'active' : ''",
          "766:                   }",
          "767:                   onClick={() => {",
          "768:                     if (!this.props.historyContext) {",
          "769:                       return;",
          "770:                     }",
          "771:                     this.props.historyContext.toggle();",
          "772:                     if (this.props.historyContext.isVisible) {",
          "773:                       this.props.pluginResize.setHiddenElement('first');",
          "774:                     } else {",
          "775:                       this.props.pluginResize.setHiddenElement(null);",
          "776:                       if (this.props.explorerContext?.isVisible) {",
          "777:                         this.props.explorerContext.hide();",
          "778:                       }",
          "779:                     }",
          "780:                   }}",
          "781:                   aria-label={",
          "782:                     this.props.historyContext.isVisible",
          "783:                       ? 'Hide History'",
          "784:                       : 'Show History'",
          "785:                   }",
          "786:                 >",
          "787:                   <HistoryIcon aria-hidden=\"true\" />",
          "788:                 </UnStyledButton>",
          "789:               </Tooltip>",
          "790:             ) : null}",
          "791:           </div>",
          "792:           <div>",
          "793:             <Tooltip label=\"Re-fetch GraphQL schema\">",
          "794:               <UnStyledButton",
          "795:                 type=\"button\"",
          "796:                 disabled={this.props.schemaContext.isFetching}",
          "797:                 onClick={() => this.props.schemaContext.introspect()}",
          "798:                 aria-label=\"Re-fetch GraphQL schema\"",
          "799:               >",
          "800:                 <ReloadIcon",
          "801:                   className={",
          "802:                     this.props.schemaContext.isFetching ? 'graphiql-spin' : ''",
          "803:                   }",
          "804:                   aria-hidden=\"true\"",
          "805:                 />",
          "806:               </UnStyledButton>",
          "807:             </Tooltip>",
          "808:             <Tooltip label=\"Open short keys dialog\">",
          "812:                   this.setState({ showShortKeys: true });",
          "814:                 aria-label=\"Open short keys dialog\"",
          "816:                 <KeyboardShortcutIcon aria-hidden=\"true\" />",
          "819:             <Tooltip label=\"Open settings dialog\">",
          "823:                   this.setState({ showSettings: true });",
          "825:                 aria-label=\"Open settings dialog\"",
          "827:                 <SettingsIcon aria-hidden=\"true\" />",
          "830:           </div>",
          "832:         <div className=\"graphiql-main\">",
          "833:           <div",
          "834:             ref={this.props.pluginResize.firstRef}",
          "835:             style={{",
          "838:               minWidth: '200px',",
          "839:             }}",
          "840:           >",
          "841:             <div className=\"graphiql-plugin\">",
          "842:               {this.props.explorerContext?.isVisible ? <DocExplorer /> : null}",
          "843:               {this.props.historyContext?.isVisible ? <History /> : null}",
          "844:             </div>",
          "845:           </div>",
          "846:           <div ref={this.props.pluginResize.dragBarRef}>",
          "847:             {this.props.explorerContext?.isVisible ||",
          "848:             this.props.historyContext?.isVisible ? (",
          "849:               <div className=\"graphiql-horizontal-drag-bar\" />",
          "850:             ) : null}",
          "852:           <div ref={this.props.pluginResize.secondRef}>",
          "853:             <div className=\"graphiql-sessions\">",
          "854:               <div className=\"graphiql-session-header\">",
          "855:                 <Tabs aria-label=\"Select active operation\">",
          "856:                   {this.props.editorContext.tabs.length > 1 ? (",
          "857:                     <>",
          "858:                       {this.props.editorContext.tabs.map((tab, index) => (",
          "859:                         <Tab",
          "860:                           key={tab.id}",
          "861:                           isActive={",
          "862:                             index === this.props.editorContext.activeTabIndex",
          "863:                           }",
          "864:                         >",
          "865:                           <Tab.Button",
          "866:                             aria-controls=\"graphiql-session\"",
          "867:                             id={`graphiql-session-tab-${index}`}",
          "868:                             onClick={() => {",
          "869:                               this.props.executionContext.stop();",
          "870:                               this.props.editorContext.changeTab(index);",
          "871:                             }}",
          "872:                           >",
          "873:                             {tab.title}",
          "874:                           </Tab.Button>",
          "875:                           <Tab.Close",
          "876:                             onClick={() => {",
          "877:                               if (",
          "878:                                 this.props.editorContext.activeTabIndex ===",
          "879:                                 index",
          "880:                               ) {",
          "881:                                 this.props.executionContext.stop();",
          "882:                               }",
          "883:                               this.props.editorContext.closeTab(index);",
          "884:                             }}",
          "885:                           />",
          "886:                         </Tab>",
          "887:                       ))}",
          "888:                       <Tooltip label=\"Add tab\">",
          "889:                         <UnStyledButton",
          "890:                           type=\"button\"",
          "891:                           className=\"graphiql-tab-add\"",
          "893:                             this.props.editorContext.addTab();",
          "895:                           aria-label=\"Add tab\"",
          "897:                           <PlusIcon aria-hidden=\"true\" />",
          "898:                         </UnStyledButton>",
          "899:                       </Tooltip>",
          "900:                     </>",
          "901:                   ) : null}",
          "902:                 </Tabs>",
          "903:                 <div className=\"graphiql-session-header-right\">",
          "904:                   {this.props.editorContext.tabs.length === 1 ? (",
          "909:                         onClick={() => {",
          "910:                           this.props.editorContext.addTab();",
          "911:                         }}",
          "917:                   ) : null}",
          "918:                   <div className=\"graphiql-logo\">{logo}</div>",
          "919:                 </div>",
          "921:               <div",
          "922:                 role=\"tabpanel\"",
          "923:                 id=\"graphiql-session\"",
          "924:                 className=\"graphiql-session\"",
          "925:                 aria-labelledby={`graphiql-session-tab-${this.props.editorContext.activeTabIndex}`}",
          "926:               >",
          "927:                 <div ref={this.props.editorResize.firstRef}>",
          "928:                   <div",
          "929:                     className={`graphiql-editors${",
          "930:                       this.props.editorContext.tabs.length === 1",
          "931:                         ? ' full-height'",
          "932:                         : ''",
          "933:                     }`}",
          "934:                   >",
          "935:                     <div ref={this.props.editorToolsResize.firstRef}>",
          "936:                       <section",
          "937:                         className=\"graphiql-query-editor\"",
          "938:                         aria-label=\"Query Editor\"",
          "940:                         <div className=\"graphiql-query-editor-wrapper\">",
          "941:                           <QueryEditor",
          "942:                             editorTheme={this.props.editorTheme}",
          "943:                             keyMap={this.props.keyMap}",
          "944:                             onClickReference={onClickReference}",
          "945:                             onCopyQuery={this.props.onCopyQuery}",
          "946:                             onEdit={this.props.onEditQuery}",
          "947:                             readOnly={this.props.readOnly}",
          "948:                           />",
          "949:                         </div>",
          "950:                         <div",
          "951:                           className=\"graphiql-toolbar\"",
          "952:                           role=\"toolbar\"",
          "953:                           aria-label=\"Editor Commands\"",
          "955:                           <ExecuteButton />",
          "956:                           {toolbar}",
          "957:                         </div>",
          "958:                       </section>",
          "959:                     </div>",
          "960:                     <div ref={this.props.editorToolsResize.dragBarRef}>",
          "961:                       <div className=\"graphiql-editor-tools\">",
          "962:                         <div className=\"graphiql-editor-tools-tabs\">",
          "966:                               this.state.activeSecondaryEditor === 'variable'",
          "967:                                 ? 'active'",
          "968:                                 : ''",
          "972:                                 this.props.editorToolsResize.hiddenElement ===",
          "973:                                 'second'",
          "975:                                 this.props.editorToolsResize.setHiddenElement(",
          "976:                                   null,",
          "977:                                 );",
          "979:                               this.setState({",
          "980:                                 activeSecondaryEditor: 'variable',",
          "981:                               });",
          "984:                             Variables",
          "986:                           {headerEditorEnabled ? (",
          "987:                             <UnStyledButton",
          "988:                               type=\"button\"",
          "989:                               className={",
          "990:                                 this.state.activeSecondaryEditor === 'header'",
          "991:                                   ? 'active'",
          "992:                                   : ''",
          "993:                               }",
          "994:                               onClick={() => {",
          "995:                                 if (",
          "996:                                   this.props.editorToolsResize.hiddenElement ===",
          "997:                                   'second'",
          "998:                                 ) {",
          "999:                                   this.props.editorToolsResize.setHiddenElement(",
          "1000:                                     null,",
          "1001:                                   );",
          "1002:                                 }",
          "1003:                                 this.setState({",
          "1004:                                   activeSecondaryEditor: 'header',",
          "1005:                                 });",
          "1006:                               }}",
          "1007:                             >",
          "1008:                               Headers",
          "1009:                             </UnStyledButton>",
          "1010:                           ) : null}",
          "1011:                         </div>",
          "1012:                         <Tooltip",
          "1013:                           label={",
          "1014:                             this.props.editorToolsResize.hiddenElement ===",
          "1015:                             'second'",
          "1020:                           <UnStyledButton",
          "1021:                             type=\"button\"",
          "1022:                             onClick={() => {",
          "1023:                               this.props.editorToolsResize.setHiddenElement(",
          "1024:                                 this.props.editorToolsResize.hiddenElement ===",
          "1025:                                   'second'",
          "1026:                                   ? null",
          "1027:                                   : 'second',",
          "1028:                               );",
          "1029:                             }}",
          "1030:                             aria-label={",
          "1031:                               this.props.editorToolsResize.hiddenElement ===",
          "1032:                               'second'",
          "1033:                                 ? 'Show editor tools'",
          "1034:                                 : 'Hide editor tools'",
          "1035:                             }",
          "1036:                           >",
          "1037:                             {this.props.editorToolsResize.hiddenElement ===",
          "1038:                             'second' ? (",
          "1039:                               <ChevronUpIcon",
          "1040:                                 className=\"graphiql-chevron-icon\"",
          "1041:                                 aria-hidden=\"true\"",
          "1042:                               />",
          "1043:                             ) : (",
          "1044:                               <ChevronDownIcon",
          "1045:                                 className=\"graphiql-chevron-icon\"",
          "1046:                                 aria-hidden=\"true\"",
          "1047:                               />",
          "1048:                             )}",
          "1049:                           </UnStyledButton>",
          "1050:                         </Tooltip>",
          "1051:                       </div>",
          "1053:                     <div ref={this.props.editorToolsResize.secondRef}>",
          "1054:                       <section",
          "1055:                         className=\"graphiql-editor-tool\"",
          "1056:                         aria-label={",
          "1057:                           this.state.activeSecondaryEditor === 'variable'",
          "1058:                             ? 'Variables'",
          "1059:                             : 'Headers'",
          "1060:                         }",
          "1061:                       >",
          "1062:                         <VariableEditor",
          "1063:                           editorTheme={this.props.editorTheme}",
          "1064:                           isHidden={",
          "1065:                             this.state.activeSecondaryEditor !== 'variable'",
          "1066:                           }",
          "1067:                           keyMap={this.props.keyMap}",
          "1068:                           onEdit={this.props.onEditVariables}",
          "1069:                           onClickReference={onClickReference}",
          "1070:                           readOnly={this.props.readOnly}",
          "1072:                         {headerEditorEnabled && (",
          "1073:                           <HeaderEditor",
          "1074:                             editorTheme={this.props.editorTheme}",
          "1075:                             isHidden={",
          "1076:                               this.state.activeSecondaryEditor !== 'header'",
          "1077:                             }",
          "1078:                             keyMap={this.props.keyMap}",
          "1079:                             onEdit={this.props.onEditHeaders}",
          "1080:                             readOnly={this.props.readOnly}",
          "1081:                           />",
          "1082:                         )}",
          "1083:                       </section>",
          "1084:                     </div>",
          "1087:                 <div ref={this.props.editorResize.dragBarRef}>",
          "1088:                   <div className=\"graphiql-horizontal-drag-bar\" />",
          "1089:                 </div>",
          "1090:                 <div ref={this.props.editorResize.secondRef}>",
          "1091:                   <div className=\"graphiql-response\">",
          "1092:                     {this.props.executionContext.isFetching ? (",
          "1093:                       <Spinner />",
          "1094:                     ) : null}",
          "1095:                     <ResponseEditor",
          "1096:                       editorTheme={this.props.editorTheme}",
          "1097:                       ResponseTooltip={this.props.ResultsTooltip}",
          "1098:                       keyMap={this.props.keyMap}",
          "1099:                     />",
          "1100:                     {footer}",
          "1101:                   </div>",
          "1107:         <Dialog",
          "1108:           isOpen={this.state.showShortKeys}",
          "1109:           onDismiss={() => {",
          "1110:             this.setState({ showShortKeys: false });",
          "1111:           }}",
          "1112:         >",
          "1113:           <div className=\"graphiql-dialog-header\">",
          "1114:             <div className=\"graphiql-dialog-title\">Short Keys</div>",
          "1115:             <Dialog.Close",
          "1116:               onClick={() => {",
          "1117:                 this.setState({ showShortKeys: false });",
          "1118:               }}",
          "1119:             />",
          "1121:           <div className=\"graphiql-dialog-section\">",
          "1122:             <div>",
          "1123:               <table className=\"graphiql-table\">",
          "1124:                 <thead>",
          "1125:                   <tr>",
          "1126:                     <th>Short key</th>",
          "1127:                     <th>Function</th>",
          "1128:                   </tr>",
          "1129:                 </thead>",
          "1130:                 <tbody>",
          "1131:                   <tr>",
          "1132:                     <td>",
          "1133:                       {modifier}",
          "1134:                       {' + '}",
          "1135:                       <code className=\"graphiql-key\">F</code>",
          "1136:                     </td>",
          "1137:                     <td>Search in editor</td>",
          "1138:                   </tr>",
          "1139:                   <tr>",
          "1140:                     <td>",
          "1141:                       {modifier}",
          "1142:                       {' + '}",
          "1143:                       <code className=\"graphiql-key\">K</code>",
          "1144:                     </td>",
          "1145:                     <td>Search in documentation</td>",
          "1146:                   </tr>",
          "1147:                   <tr>",
          "1148:                     <td>",
          "1149:                       {modifier}",
          "1150:                       {' + '}",
          "1151:                       <code className=\"graphiql-key\">Enter</code>",
          "1152:                     </td>",
          "1153:                     <td>Execute query</td>",
          "1154:                   </tr>",
          "1155:                   <tr>",
          "1156:                     <td>",
          "1157:                       <code className=\"graphiql-key\">Ctrl</code>",
          "1158:                       {' + '}",
          "1159:                       <code className=\"graphiql-key\">Shift</code>",
          "1160:                       {' + '}",
          "1161:                       <code className=\"graphiql-key\">P</code>",
          "1162:                     </td>",
          "1163:                     <td>Prettify editors</td>",
          "1164:                   </tr>",
          "1165:                   <tr>",
          "1166:                     <td>",
          "1167:                       <code className=\"graphiql-key\">Ctrl</code>",
          "1168:                       {' + '}",
          "1169:                       <code className=\"graphiql-key\">Shift</code>",
          "1170:                       {' + '}",
          "1171:                       <code className=\"graphiql-key\">M</code>",
          "1172:                     </td>",
          "1173:                     <td>",
          "1174:                       Merge fragments definitions into operation definition",
          "1175:                     </td>",
          "1176:                   </tr>",
          "1177:                   <tr>",
          "1178:                     <td>",
          "1179:                       <code className=\"graphiql-key\">Ctrl</code>",
          "1180:                       {' + '}",
          "1181:                       <code className=\"graphiql-key\">Shift</code>",
          "1182:                       {' + '}",
          "1183:                       <code className=\"graphiql-key\">C</code>",
          "1184:                     </td>",
          "1185:                     <td>Copy query</td>",
          "1186:                   </tr>",
          "1187:                   <tr>",
          "1188:                     <td>",
          "1189:                       <code className=\"graphiql-key\">Ctrl</code>",
          "1190:                       {' + '}",
          "1191:                       <code className=\"graphiql-key\">Shift</code>",
          "1192:                       {' + '}",
          "1193:                       <code className=\"graphiql-key\">R</code>",
          "1194:                     </td>",
          "1195:                     <td>Re-fetch schema using introspection</td>",
          "1196:                   </tr>",
          "1197:                 </tbody>",
          "1198:               </table>",
          "1199:               <p>",
          "1200:                 The editors use{' '}",
          "1201:                 <a",
          "1202:                   href=\"https://codemirror.net/5/doc/manual.html#keymaps\"",
          "1203:                   target=\"_blank\"",
          "1204:                   rel=\"noopener noreferrer\"",
          "1205:                 >",
          "1206:                   CodeMirror Key Maps",
          "1207:                 </a>{' '}",
          "1208:                 that add more short keys. This instance of Graph<em>i</em>QL",
          "1209:                 uses <code>{this.props.keyMap || 'sublime'}</code>.",
          "1210:               </p>",
          "1213:         </Dialog>",
          "1214:         <Dialog",
          "1215:           isOpen={this.state.showSettings}",
          "1216:           onDismiss={() => {",
          "1217:             this.setState({",
          "1218:               showSettings: false,",
          "1219:               clearStorageStatus: null,",
          "1220:             });",
          "1221:           }}",
          "1222:         >",
          "1223:           <div className=\"graphiql-dialog-header\">",
          "1224:             <div className=\"graphiql-dialog-title\">Settings</div>",
          "1225:             <Dialog.Close",
          "1226:               onClick={() => {",
          "1227:                 this.setState({",
          "1228:                   showSettings: false,",
          "1229:                   clearStorageStatus: null,",
          "1230:                 });",
          "1231:               }}",
          "1232:             />",
          "1236:               <div className=\"graphiql-dialog-section-title\">Theme</div>",
          "1238:                 Adjust how the interface looks like.",
          "1242:               <ButtonGroup>",
          "1243:                 <Button",
          "1244:                   type=\"button\"",
          "1245:                   className={this.props.theme === null ? 'active' : ''}",
          "1246:                   onClick={() => {",
          "1247:                     this.props.setTheme(null);",
          "1248:                   }}",
          "1249:                 >",
          "1250:                   System",
          "1251:                 </Button>",
          "1252:                 <Button",
          "1253:                   type=\"button\"",
          "1254:                   className={this.props.theme === 'light' ? 'active' : ''}",
          "1255:                   onClick={() => {",
          "1256:                     this.props.setTheme('light');",
          "1257:                   }}",
          "1258:                 >",
          "1259:                   Light",
          "1260:                 </Button>",
          "1261:                 <Button",
          "1262:                   type=\"button\"",
          "1263:                   className={this.props.theme === 'dark' ? 'active' : ''}",
          "1264:                   onClick={() => {",
          "1265:                     this.props.setTheme('dark');",
          "1266:                   }}",
          "1267:                 >",
          "1268:                   Dark",
          "1269:                 </Button>",
          "1270:               </ButtonGroup>",
          "1273:           {this.props.storageContext ? (",
          "1274:             <div className=\"graphiql-dialog-section\">",
          "1275:               <div>",
          "1276:                 <div className=\"graphiql-dialog-section-title\">",
          "1277:                   Clear storage",
          "1278:                 </div>",
          "1279:                 <div className=\"graphiql-dialog-section-caption\">",
          "1280:                   Remove all locally stored data and start fresh.",
          "1281:                 </div>",
          "1282:               </div>",
          "1283:               <div>",
          "1284:                 <Button",
          "1285:                   type=\"button\"",
          "1286:                   state={this.state.clearStorageStatus || undefined}",
          "1287:                   disabled={this.state.clearStorageStatus === 'success'}",
          "1288:                   onClick={() => {",
          "1289:                     try {",
          "1290:                       this.props.storageContext?.clear();",
          "1291:                       this.setState({ clearStorageStatus: 'success' });",
          "1292:                     } catch {",
          "1293:                       this.setState({ clearStorageStatus: 'error' });",
          "1294:                     }",
          "1295:                   }}",
          "1296:                 >",
          "1297:                   {this.state.clearStorageStatus === 'success'",
          "1298:                     ? 'Cleared data'",
          "1299:                     : this.state.clearStorageStatus === 'error'",
          "1300:                     ? 'Failed'",
          "1301:                     : 'Clear data'}",
          "1302:                 </Button>",
          "1303:               </div>",
          "1304:             </div>",
          "1305:           ) : null}",
          "1306:         </Dialog>",
          "1307:       </div>",
          "1308:     );",
          "1309:   }",
          "1313:   public getQueryEditor() {",
          "1314:     return this.props.editorContext.queryEditor || null;",
          "1315:   }",
          "1317:   public getVariableEditor() {",
          "1318:     return this.props.editorContext.variableEditor || null;",
          "1319:   }",
          "1321:   public getHeaderEditor() {",
          "1322:     return this.props.editorContext.headerEditor || null;",
          "1323:   }",
          "1325:   public refresh() {",
          "1326:     this.props.editorContext.queryEditor?.refresh();",
          "1327:     this.props.editorContext.variableEditor?.refresh();",
          "1328:     this.props.editorContext.headerEditor?.refresh();",
          "1329:     this.props.editorContext.responseEditor?.refresh();",
          "1330:   }",
          "1332:   public autoCompleteLeafs() {",
          "1333:     return this.props.autoCompleteLeafs();",
          "1334:   }",
          "",
          "[Added Lines]",
          "460:   const [activeSecondaryEditor, setActiveSecondaryEditor] = useState<",
          "461:     'variable' | 'header'",
          "462:   >('variable');",
          "463:   const [showDialog, setShowDialog] = useState<",
          "464:     'settings' | 'short-keys' | null",
          "465:   >(null);",
          "466:   const [clearStorageStatus, setClearStorageStatus] = useState<",
          "467:     'success' | 'error' | null",
          "468:   >(null);",
          "470:   const children = React.Children.toArray(props.children);",
          "472:   const logo = children.find(child =>",
          "473:     isChildComponentType(child, GraphiQL.Logo),",
          "474:   ) || <GraphiQL.Logo />;",
          "476:   const toolbar = children.find(child =>",
          "477:     isChildComponentType(child, GraphiQL.Toolbar),",
          "478:   ) || (",
          "479:     <>",
          "480:       <ToolbarButton",
          "481:         onClick={() => prettify()}",
          "482:         label=\"Prettify query (Shift-Ctrl-P)\"",
          "483:       >",
          "484:         <PrettifyIcon className=\"graphiql-toolbar-icon\" aria-hidden=\"true\" />",
          "485:       </ToolbarButton>",
          "486:       <ToolbarButton",
          "487:         onClick={() => merge()}",
          "488:         label=\"Merge fragments into query (Shift-Ctrl-M)\"",
          "489:       >",
          "490:         <MergeIcon className=\"graphiql-toolbar-icon\" aria-hidden=\"true\" />",
          "491:       </ToolbarButton>",
          "492:       <ToolbarButton onClick={() => copy()} label=\"Copy query (Shift-Ctrl-C)\">",
          "493:         <CopyIcon className=\"graphiql-toolbar-icon\" aria-hidden=\"true\" />",
          "494:       </ToolbarButton>",
          "495:       {props.toolbar?.additionalContent",
          "496:         ? props.toolbar.additionalContent",
          "497:         : null}",
          "498:     </>",
          "499:   );",
          "501:   const footer = children.find(child =>",
          "502:     isChildComponentType(child, GraphiQL.Footer),",
          "503:   );",
          "505:   const headerEditorEnabled = props.headerEditorEnabled ?? true;",
          "507:   const onClickReference = () => {",
          "508:     if (pluginResize.hiddenElement === 'first') {",
          "509:       pluginResize.setHiddenElement(null);",
          "510:     }",
          "511:   };",
          "513:   const modifier =",
          "514:     window.navigator.platform.toLowerCase().indexOf('mac') === 0 ? (",
          "515:       <code className=\"graphiql-key\">Cmd</code>",
          "516:     ) : (",
          "517:       <code className=\"graphiql-key\">Ctrl</code>",
          "520:   return (",
          "521:     <div data-testid=\"graphiql-container\" className=\"graphiql-container\">",
          "522:       <div className=\"graphiql-sidebar\">",
          "523:         <div>",
          "524:           {explorerContext ? (",
          "525:             <Tooltip",
          "526:               label={",
          "527:                 explorerContext.isVisible",
          "528:                   ? 'Hide Documentation Explorer'",
          "529:                   : 'Show Documentation Explorer'",
          "530:               }",
          "531:             >",
          "534:                 className={explorerContext.isVisible ? 'active' : ''}",
          "536:                   if (explorerContext?.isVisible) {",
          "537:                     explorerContext?.hide();",
          "538:                     pluginResize.setHiddenElement('first');",
          "539:                   } else {",
          "540:                     explorerContext?.show();",
          "541:                     pluginResize.setHiddenElement(null);",
          "542:                     if (historyContext?.isVisible) {",
          "543:                       historyContext.hide();",
          "544:                     }",
          "545:                   }",
          "547:                 aria-label={",
          "548:                   explorerContext.isVisible",
          "549:                     ? 'Hide Documentation Explorer'",
          "550:                     : 'Show Documentation Explorer'",
          "551:                 }",
          "553:                 <DocsIcon aria-hidden=\"true\" />",
          "556:           ) : null}",
          "557:           {historyContext ? (",
          "558:             <Tooltip",
          "559:               label={historyContext.isVisible ? 'Hide History' : 'Show History'}",
          "560:             >",
          "563:                 className={historyContext.isVisible ? 'active' : ''}",
          "565:                   if (!historyContext) {",
          "566:                     return;",
          "567:                   }",
          "568:                   historyContext.toggle();",
          "569:                   if (historyContext.isVisible) {",
          "570:                     pluginResize.setHiddenElement('first');",
          "571:                   } else {",
          "572:                     pluginResize.setHiddenElement(null);",
          "573:                     if (explorerContext?.isVisible) {",
          "574:                       explorerContext.hide();",
          "575:                     }",
          "576:                   }",
          "578:                 aria-label={",
          "579:                   historyContext.isVisible ? 'Hide History' : 'Show History'",
          "580:                 }",
          "582:                 <HistoryIcon aria-hidden=\"true\" />",
          "585:           ) : null}",
          "587:         <div>",
          "588:           <Tooltip label=\"Re-fetch GraphQL schema\">",
          "589:             <UnStyledButton",
          "590:               type=\"button\"",
          "591:               disabled={schemaContext.isFetching}",
          "592:               onClick={() => schemaContext.introspect()}",
          "593:               aria-label=\"Re-fetch GraphQL schema\"",
          "594:             >",
          "595:               <ReloadIcon",
          "596:                 className={schemaContext.isFetching ? 'graphiql-spin' : ''}",
          "597:                 aria-hidden=\"true\"",
          "598:               />",
          "599:             </UnStyledButton>",
          "600:           </Tooltip>",
          "601:           <Tooltip label=\"Open short keys dialog\">",
          "602:             <UnStyledButton",
          "603:               type=\"button\"",
          "604:               onClick={() => setShowDialog('short-keys')}",
          "605:               aria-label=\"Open short keys dialog\"",
          "606:             >",
          "607:               <KeyboardShortcutIcon aria-hidden=\"true\" />",
          "608:             </UnStyledButton>",
          "609:           </Tooltip>",
          "610:           <Tooltip label=\"Open settings dialog\">",
          "611:             <UnStyledButton",
          "612:               type=\"button\"",
          "613:               onClick={() => setShowDialog('settings')}",
          "614:               aria-label=\"Open settings dialog\"",
          "615:             >",
          "616:               <SettingsIcon aria-hidden=\"true\" />",
          "617:             </UnStyledButton>",
          "618:           </Tooltip>",
          "619:         </div>",
          "620:       </div>",
          "621:       <div className=\"graphiql-main\">",
          "622:         <div",
          "623:           ref={pluginResize.firstRef}",
          "624:           style={{",
          "627:             minWidth: '200px',",
          "628:           }}",
          "629:         >",
          "630:           <div className=\"graphiql-plugin\">",
          "631:             {explorerContext?.isVisible ? <DocExplorer /> : null}",
          "632:             {historyContext?.isVisible ? <History /> : null}",
          "634:         </div>",
          "635:         <div ref={pluginResize.dragBarRef}>",
          "636:           {explorerContext?.isVisible || historyContext?.isVisible ? (",
          "637:             <div className=\"graphiql-horizontal-drag-bar\" />",
          "638:           ) : null}",
          "639:         </div>",
          "640:         <div ref={pluginResize.secondRef}>",
          "641:           <div className=\"graphiql-sessions\">",
          "642:             <div className=\"graphiql-session-header\">",
          "643:               <Tabs aria-label=\"Select active operation\">",
          "644:                 {editorContext.tabs.length > 1 ? (",
          "645:                   <>",
          "646:                     {editorContext.tabs.map((tab, index) => (",
          "647:                       <Tab",
          "648:                         key={tab.id}",
          "649:                         isActive={index === editorContext.activeTabIndex}",
          "650:                       >",
          "651:                         <Tab.Button",
          "652:                           aria-controls=\"graphiql-session\"",
          "653:                           id={`graphiql-session-tab-${index}`}",
          "655:                             executionContext.stop();",
          "656:                             editorContext.changeTab(index);",
          "659:                           {tab.title}",
          "660:                         </Tab.Button>",
          "661:                         <Tab.Close",
          "662:                           onClick={() => {",
          "663:                             if (editorContext.activeTabIndex === index) {",
          "664:                               executionContext.stop();",
          "665:                             }",
          "666:                             editorContext.closeTab(index);",
          "667:                           }}",
          "668:                         />",
          "669:                       </Tab>",
          "670:                     ))}",
          "675:                         onClick={() => editorContext.addTab()}",
          "681:                   </>",
          "682:                 ) : null}",
          "683:               </Tabs>",
          "684:               <div className=\"graphiql-session-header-right\">",
          "685:                 {editorContext.tabs.length === 1 ? (",
          "686:                   <Tooltip label=\"Add tab\">",
          "687:                     <UnStyledButton",
          "688:                       type=\"button\"",
          "689:                       className=\"graphiql-tab-add\"",
          "690:                       onClick={() => editorContext.addTab()}",
          "691:                       aria-label=\"Add tab\"",
          "692:                     >",
          "693:                       <PlusIcon aria-hidden=\"true\" />",
          "694:                     </UnStyledButton>",
          "695:                   </Tooltip>",
          "696:                 ) : null}",
          "697:                 <div className=\"graphiql-logo\">{logo}</div>",
          "699:             </div>",
          "700:             <div",
          "701:               role=\"tabpanel\"",
          "702:               id=\"graphiql-session\"",
          "703:               className=\"graphiql-session\"",
          "704:               aria-labelledby={`graphiql-session-tab-${editorContext.activeTabIndex}`}",
          "705:             >",
          "706:               <div ref={editorResize.firstRef}>",
          "707:                 <div",
          "708:                   className={`graphiql-editors${",
          "709:                     editorContext.tabs.length === 1 ? ' full-height' : ''",
          "710:                   }`}",
          "711:                 >",
          "712:                   <div ref={editorToolsResize.firstRef}>",
          "713:                     <section",
          "714:                       className=\"graphiql-query-editor\"",
          "715:                       aria-label=\"Query Editor\"",
          "716:                     >",
          "717:                       <div className=\"graphiql-query-editor-wrapper\">",
          "718:                         <QueryEditor",
          "719:                           editorTheme={props.editorTheme}",
          "720:                           keyMap={props.keyMap}",
          "721:                           onClickReference={onClickReference}",
          "722:                           onCopyQuery={props.onCopyQuery}",
          "723:                           onEdit={props.onEditQuery}",
          "724:                           readOnly={props.readOnly}",
          "725:                         />",
          "726:                       </div>",
          "727:                       <div",
          "728:                         className=\"graphiql-toolbar\"",
          "729:                         role=\"toolbar\"",
          "730:                         aria-label=\"Editor Commands\"",
          "732:                         <ExecuteButton />",
          "733:                         {toolbar}",
          "734:                       </div>",
          "735:                     </section>",
          "736:                   </div>",
          "737:                   <div ref={editorToolsResize.dragBarRef}>",
          "738:                     <div className=\"graphiql-editor-tools\">",
          "739:                       <div className=\"graphiql-editor-tools-tabs\">",
          "740:                         <UnStyledButton",
          "741:                           type=\"button\"",
          "742:                           className={",
          "743:                             activeSecondaryEditor === 'variable' ? 'active' : ''",
          "744:                           }",
          "745:                           onClick={() => {",
          "746:                             if (editorToolsResize.hiddenElement === 'second') {",
          "747:                               editorToolsResize.setHiddenElement(null);",
          "748:                             }",
          "749:                             setActiveSecondaryEditor('variable');",
          "750:                           }}",
          "752:                           Variables",
          "753:                         </UnStyledButton>",
          "754:                         {headerEditorEnabled ? (",
          "758:                               activeSecondaryEditor === 'header' ? 'active' : ''",
          "762:                                 editorToolsResize.hiddenElement === 'second'",
          "764:                                 editorToolsResize.setHiddenElement(null);",
          "766:                               setActiveSecondaryEditor('header');",
          "769:                             Headers",
          "771:                         ) : null}",
          "772:                       </div>",
          "773:                       <Tooltip",
          "774:                         label={",
          "775:                           editorToolsResize.hiddenElement === 'second'",
          "776:                             ? 'Show editor tools'",
          "777:                             : 'Hide editor tools'",
          "778:                         }",
          "779:                       >",
          "780:                         <UnStyledButton",
          "781:                           type=\"button\"",
          "782:                           onClick={() => {",
          "783:                             editorToolsResize.setHiddenElement(",
          "784:                               editorToolsResize.hiddenElement === 'second'",
          "785:                                 ? null",
          "786:                                 : 'second',",
          "787:                             );",
          "788:                           }}",
          "789:                           aria-label={",
          "790:                             editorToolsResize.hiddenElement === 'second'",
          "795:                           {editorToolsResize.hiddenElement === 'second' ? (",
          "796:                             <ChevronUpIcon",
          "797:                               className=\"graphiql-chevron-icon\"",
          "798:                               aria-hidden=\"true\"",
          "799:                             />",
          "800:                           ) : (",
          "801:                             <ChevronDownIcon",
          "802:                               className=\"graphiql-chevron-icon\"",
          "803:                               aria-hidden=\"true\"",
          "804:                             />",
          "805:                           )}",
          "806:                         </UnStyledButton>",
          "807:                       </Tooltip>",
          "809:                   </div>",
          "810:                   <div ref={editorToolsResize.secondRef}>",
          "811:                     <section",
          "812:                       className=\"graphiql-editor-tool\"",
          "813:                       aria-label={",
          "814:                         activeSecondaryEditor === 'variable'",
          "815:                           ? 'Variables'",
          "816:                           : 'Headers'",
          "817:                       }",
          "818:                     >",
          "819:                       <VariableEditor",
          "820:                         editorTheme={props.editorTheme}",
          "821:                         isHidden={activeSecondaryEditor !== 'variable'}",
          "822:                         keyMap={props.keyMap}",
          "823:                         onEdit={props.onEditVariables}",
          "824:                         onClickReference={onClickReference}",
          "825:                         readOnly={props.readOnly}",
          "826:                       />",
          "827:                       {headerEditorEnabled && (",
          "828:                         <HeaderEditor",
          "829:                           editorTheme={props.editorTheme}",
          "830:                           isHidden={activeSecondaryEditor !== 'header'}",
          "831:                           keyMap={props.keyMap}",
          "832:                           onEdit={props.onEditHeaders}",
          "833:                           readOnly={props.readOnly}",
          "835:                       )}",
          "836:                     </section>",
          "839:               </div>",
          "840:               <div ref={editorResize.dragBarRef}>",
          "841:                 <div className=\"graphiql-horizontal-drag-bar\" />",
          "842:               </div>",
          "843:               <div ref={editorResize.secondRef}>",
          "844:                 <div className=\"graphiql-response\">",
          "845:                   {executionContext.isFetching ? <Spinner /> : null}",
          "846:                   <ResponseEditor",
          "847:                     editorTheme={props.editorTheme}",
          "848:                     ResponseTooltip={props.ResultsTooltip}",
          "849:                     keyMap={props.keyMap}",
          "850:                   />",
          "851:                   {footer}",
          "857:       </div>",
          "858:       <Dialog",
          "859:         isOpen={showDialog === 'short-keys'}",
          "860:         onDismiss={() => setShowDialog(null)}",
          "861:       >",
          "862:         <div className=\"graphiql-dialog-header\">",
          "863:           <div className=\"graphiql-dialog-title\">Short Keys</div>",
          "864:           <Dialog.Close onClick={() => setShowDialog(null)} />",
          "865:         </div>",
          "866:         <div className=\"graphiql-dialog-section\">",
          "867:           <div>",
          "868:             <table className=\"graphiql-table\">",
          "869:               <thead>",
          "870:                 <tr>",
          "871:                   <th>Short key</th>",
          "872:                   <th>Function</th>",
          "873:                 </tr>",
          "874:               </thead>",
          "875:               <tbody>",
          "876:                 <tr>",
          "877:                   <td>",
          "878:                     {modifier}",
          "879:                     {' + '}",
          "880:                     <code className=\"graphiql-key\">F</code>",
          "881:                   </td>",
          "882:                   <td>Search in editor</td>",
          "883:                 </tr>",
          "884:                 <tr>",
          "885:                   <td>",
          "886:                     {modifier}",
          "887:                     {' + '}",
          "888:                     <code className=\"graphiql-key\">K</code>",
          "889:                   </td>",
          "890:                   <td>Search in documentation</td>",
          "891:                 </tr>",
          "892:                 <tr>",
          "893:                   <td>",
          "894:                     {modifier}",
          "895:                     {' + '}",
          "896:                     <code className=\"graphiql-key\">Enter</code>",
          "897:                   </td>",
          "898:                   <td>Execute query</td>",
          "899:                 </tr>",
          "900:                 <tr>",
          "901:                   <td>",
          "902:                     <code className=\"graphiql-key\">Ctrl</code>",
          "903:                     {' + '}",
          "904:                     <code className=\"graphiql-key\">Shift</code>",
          "905:                     {' + '}",
          "906:                     <code className=\"graphiql-key\">P</code>",
          "907:                   </td>",
          "908:                   <td>Prettify editors</td>",
          "909:                 </tr>",
          "910:                 <tr>",
          "911:                   <td>",
          "912:                     <code className=\"graphiql-key\">Ctrl</code>",
          "913:                     {' + '}",
          "914:                     <code className=\"graphiql-key\">Shift</code>",
          "915:                     {' + '}",
          "916:                     <code className=\"graphiql-key\">M</code>",
          "917:                   </td>",
          "918:                   <td>Merge fragments definitions into operation definition</td>",
          "919:                 </tr>",
          "920:                 <tr>",
          "921:                   <td>",
          "922:                     <code className=\"graphiql-key\">Ctrl</code>",
          "923:                     {' + '}",
          "924:                     <code className=\"graphiql-key\">Shift</code>",
          "925:                     {' + '}",
          "926:                     <code className=\"graphiql-key\">C</code>",
          "927:                   </td>",
          "928:                   <td>Copy query</td>",
          "929:                 </tr>",
          "930:                 <tr>",
          "931:                   <td>",
          "932:                     <code className=\"graphiql-key\">Ctrl</code>",
          "933:                     {' + '}",
          "934:                     <code className=\"graphiql-key\">Shift</code>",
          "935:                     {' + '}",
          "936:                     <code className=\"graphiql-key\">R</code>",
          "937:                   </td>",
          "938:                   <td>Re-fetch schema using introspection</td>",
          "939:                 </tr>",
          "940:               </tbody>",
          "941:             </table>",
          "942:             <p>",
          "943:               The editors use{' '}",
          "944:               <a",
          "945:                 href=\"https://codemirror.net/5/doc/manual.html#keymaps\"",
          "946:                 target=\"_blank\"",
          "947:                 rel=\"noopener noreferrer\"",
          "948:               >",
          "949:                 CodeMirror Key Maps",
          "950:               </a>{' '}",
          "951:               that add more short keys. This instance of Graph<em>i</em>QL uses{' '}",
          "952:               <code>{props.keyMap || 'sublime'}</code>.",
          "953:             </p>",
          "955:         </div>",
          "956:       </Dialog>",
          "957:       <Dialog",
          "958:         isOpen={showDialog === 'settings'}",
          "959:         onDismiss={() => {",
          "960:           setShowDialog(null);",
          "961:           setClearStorageStatus(null);",
          "962:         }}",
          "963:       >",
          "964:         <div className=\"graphiql-dialog-header\">",
          "965:           <div className=\"graphiql-dialog-title\">Settings</div>",
          "966:           <Dialog.Close",
          "967:             onClick={() => {",
          "968:               setShowDialog(null);",
          "969:               setClearStorageStatus(null);",
          "970:             }}",
          "971:           />",
          "972:         </div>",
          "973:         <div className=\"graphiql-dialog-section\">",
          "974:           <div>",
          "975:             <div className=\"graphiql-dialog-section-title\">Theme</div>",
          "976:             <div className=\"graphiql-dialog-section-caption\">",
          "977:               Adjust how the interface looks like.",
          "980:           <div>",
          "981:             <ButtonGroup>",
          "982:               <Button",
          "983:                 type=\"button\"",
          "984:                 className={theme === null ? 'active' : ''}",
          "985:                 onClick={() => setTheme(null)}",
          "986:               >",
          "987:                 System",
          "988:               </Button>",
          "989:               <Button",
          "990:                 type=\"button\"",
          "991:                 className={theme === 'light' ? 'active' : ''}",
          "992:                 onClick={() => setTheme('light')}",
          "993:               >",
          "994:                 Light",
          "995:               </Button>",
          "996:               <Button",
          "997:                 type=\"button\"",
          "998:                 className={theme === 'dark' ? 'active' : ''}",
          "999:                 onClick={() => setTheme('dark')}",
          "1000:               >",
          "1001:                 Dark",
          "1002:               </Button>",
          "1003:             </ButtonGroup>",
          "1005:         </div>",
          "1006:         {storageContext ? (",
          "1009:               <div className=\"graphiql-dialog-section-title\">Clear storage</div>",
          "1011:                 Remove all locally stored data and start fresh.",
          "1015:               <Button",
          "1016:                 type=\"button\"",
          "1017:                 state={clearStorageStatus || undefined}",
          "1018:                 disabled={clearStorageStatus === 'success'}",
          "1019:                 onClick={() => {",
          "1020:                   try {",
          "1021:                     storageContext?.clear();",
          "1022:                     setClearStorageStatus('success');",
          "1023:                   } catch {",
          "1024:                     setClearStorageStatus('error');",
          "1025:                   }",
          "1026:                 }}",
          "1027:               >",
          "1028:                 {clearStorageStatus === 'success'",
          "1029:                   ? 'Cleared data'",
          "1030:                   : clearStorageStatus === 'error'",
          "1031:                   ? 'Failed'",
          "1032:                   : 'Clear data'}",
          "1033:               </Button>",
          "1036:         ) : null}",
          "1037:       </Dialog>",
          "1038:     </div>",
          "1039:   );",
          "",
          "---------------"
        ],
        "packages/graphiql/src/index.tsx||packages/graphiql/src/index.tsx": [
          "File: packages/graphiql/src/index.tsx -> packages/graphiql/src/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: export default GraphiQL;",
          "23: export type {",
          "",
          "[Removed Lines]",
          "8: import React from 'react';",
          "14: import { GraphiQL } from './components/GraphiQL';",
          "15: export { GraphiQL };",
          "21: export type { GraphiQLProps } from './components/GraphiQL';",
          "24:   Fetcher,",
          "25:   FetcherOpts,",
          "26:   FetcherParams,",
          "27:   FetcherResult,",
          "28:   FetcherReturnType,",
          "29:   Observable,",
          "30:   Storage,",
          "31:   SyncFetcherResult,",
          "32: } from '@graphiql/toolkit';",
          "37: import {",
          "38:   onHasCompletion as _onHasCompletion,",
          "39:   QueryEditor as OrigQueryEditor,",
          "40:   VariableEditor as OrigVariableEditor,",
          "41: } from '@graphiql/react';",
          "42: import {",
          "43:   fillLeafs as _fillLeafs,",
          "44:   getSelectedOperationName as _getSelectedOperationName,",
          "45:   mergeAst as _mergeAst,",
          "46: } from '@graphiql/toolkit';",
          "48: export const onHasCompletion: typeof _onHasCompletion =",
          "49:   function onHasCompletion(...args) {",
          "50:     console.warn(",
          "51:       'Importing `onHasCompletion` from `graphiql` is deprecated and will be removed in the next major version. Please switch to importing the `onHasCompletion` function provided by the `@graphiql/react` package.',",
          "52:     );",
          "53:     return _onHasCompletion(...args);",
          "54:   };",
          "56: export const QueryEditor: typeof OrigQueryEditor = function QueryEditor(props) {",
          "57:   console.warn(",
          "58:     'Importing `QueryEditor` from `graphiql` is deprecated and will be removed in the next major version. Please switch to importing the `QueryEditor` component provided by the `@graphiql/react` package.',",
          "59:   );",
          "60:   return <OrigQueryEditor {...props} />;",
          "61: };",
          "63: export const VariableEditor: typeof OrigVariableEditor =",
          "64:   function VariableEditor(props) {",
          "65:     console.warn(",
          "66:       'Importing `VariableEditor` from `graphiql` is deprecated and will be removed in the next major version. Please switch to importing the `VariableEditor` component provided by the `@graphiql/react` package.',",
          "67:     );",
          "68:     return <OrigVariableEditor {...props} />;",
          "69:   };",
          "71: export const fillLeafs: typeof _fillLeafs = function fillLeafs(...args) {",
          "72:   console.warn(",
          "73:     'Importing `fillLeafs` from `graphiql` is deprecated and will be removed in the next major version. Please switch to importing the `fillLeafs` function provided by the `@graphiql/toolkit` package.',",
          "74:   );",
          "75:   return _fillLeafs(...args);",
          "76: };",
          "78: export const getSelectedOperationName: typeof _getSelectedOperationName =",
          "79:   function getSelectedOperationName(...args) {",
          "80:     console.warn(",
          "81:       'Importing `getSelectedOperationName` from `graphiql` is deprecated and will be removed in the next major version. Please switch to importing the `getSelectedOperationName` function provided by the `@graphiql/toolkit` package.',",
          "82:     );",
          "83:     return _getSelectedOperationName(...args);",
          "84:   };",
          "86: export const mergeAst: typeof _mergeAst = function mergeAst(...args) {",
          "87:   console.warn(",
          "88:     'Importing `mergeAst` from `graphiql` is deprecated and will be removed in the next major version. Please switch to importing the `mergeAst` function provided by the `@graphiql/toolkit` package.',",
          "89:   );",
          "90:   return _mergeAst(...args);",
          "91: };",
          "",
          "[Added Lines]",
          "12: import { GraphiQL, GraphiQLInterface } from './components/GraphiQL';",
          "13: export { GraphiQL, GraphiQLInterface };",
          "20:   GraphiQLProps,",
          "21:   GraphiQLInterfaceProps,",
          "22: } from './components/GraphiQL';",
          "",
          "---------------"
        ],
        "packages/graphiql/src/utility/__tests__/find.spec.ts||packages/graphiql/src/utility/__tests__/find.spec.ts": [
          "File: packages/graphiql/src/utility/__tests__/find.spec.ts -> packages/graphiql/src/utility/__tests__/find.spec.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql/src/utility/debounce.ts||packages/graphiql/src/utility/debounce.ts": [
          "File: packages/graphiql/src/utility/debounce.ts -> packages/graphiql/src/utility/debounce.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql/src/utility/find.ts||packages/graphiql/src/utility/find.ts": [
          "File: packages/graphiql/src/utility/find.ts -> packages/graphiql/src/utility/find.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "029ddf82c29754ab8518ae7df66f9b25361a8247",
      "candidate_info": {
        "commit_hash": "029ddf82c29754ab8518ae7df66f9b25361a8247",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/029ddf82c29754ab8518ae7df66f9b25361a8247",
        "files": [
          ".changeset/wicked-roses-remain.md",
          "packages/graphiql-react/package.json",
          "packages/graphiql-react/src/editor/common.ts",
          "packages/graphiql-react/src/editor/completion.ts",
          "packages/graphiql-react/src/editor/context.tsx",
          "packages/graphiql-react/src/editor/header-editor.tsx",
          "packages/graphiql-react/src/editor/hooks.ts",
          "packages/graphiql-react/src/editor/index.ts",
          "packages/graphiql-react/src/index.ts",
          "packages/graphiql-react/vite.config.ts",
          "packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/HeaderEditor.tsx",
          "packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx"
        ],
        "message": "add editor context and `useHeaderEditor` hook to `@graphiql/react` (#2404)\n\n* handle chunks with vite\n\n* add editor context and useHeaderEditor hook\n\n* use --emitDeclarationOnly when running tsc\n\n* fix error message\n\n* rename file\n\n* move back state reducer functions\n\n* add setHeaders\n\n* specify files in package.json\n\n* add changeset\n\n* create reusable hooks for editor functionality\n\n* fix docs build\n\n* fix for loop in useKeyMap\n\n* rename useSyncValue\n\n* loosen check for detecting macOS\n\n* avoid type casting and error on closing tab\n\n* add types package as dev dependency for escape-html",
        "before_after_code_files": [
          "packages/graphiql-react/src/editor/common.ts||packages/graphiql-react/src/editor/common.ts",
          "packages/graphiql-react/src/editor/completion.ts||packages/graphiql-react/src/editor/completion.ts",
          "packages/graphiql-react/src/editor/context.tsx||packages/graphiql-react/src/editor/context.tsx",
          "packages/graphiql-react/src/editor/header-editor.tsx||packages/graphiql-react/src/editor/header-editor.tsx",
          "packages/graphiql-react/src/editor/hooks.ts||packages/graphiql-react/src/editor/hooks.ts",
          "packages/graphiql-react/src/editor/index.ts||packages/graphiql-react/src/editor/index.ts",
          "packages/graphiql-react/src/index.ts||packages/graphiql-react/src/index.ts",
          "packages/graphiql-react/vite.config.ts||packages/graphiql-react/vite.config.ts",
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/HeaderEditor.tsx||packages/graphiql/src/components/HeaderEditor.tsx",
          "packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx||packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ],
          "candidate": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql-react/src/editor/common.ts||packages/graphiql-react/src/editor/common.ts": [
          "File: packages/graphiql-react/src/editor/common.ts -> packages/graphiql-react/src/editor/common.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: let isMacOs = false;",
          "3: if (typeof window === 'object') {",
          "4:   isMacOs = window.navigator.platform.toLowerCase().indexOf('mac') === 0;",
          "5: }",
          "7: export const commonKeys = {",
          "9:   [isMacOs ? 'Cmd-F' : 'Ctrl-F']: 'findPersistent',",
          "10:   'Cmd-G': 'findPersistent',",
          "11:   'Ctrl-G': 'findPersistent',",
          "14:   'Ctrl-Left': 'goSubwordLeft',",
          "15:   'Ctrl-Right': 'goSubwordRight',",
          "16:   'Alt-Left': 'goGroupLeft',",
          "17:   'Alt-Right': 'goGroupRight',",
          "18: };",
          "20: export const commonCodeMirrorAddons = [",
          "21:   import('codemirror/addon/hint/show-hint'),",
          "22:   import('codemirror/addon/edit/matchbrackets'),",
          "23:   import('codemirror/addon/edit/closebrackets'),",
          "24:   import('codemirror/addon/fold/brace-fold'),",
          "25:   import('codemirror/addon/fold/foldgutter'),",
          "26:   import('codemirror/addon/lint/lint'),",
          "27:   import('codemirror/addon/search/searchcursor'),",
          "28:   import('codemirror/addon/search/jump-to-line'),",
          "29:   import('codemirror/addon/dialog/dialog'),",
          "31:   import('codemirror/keymap/sublime'),",
          "32: ];",
          "38: export async function importCodeMirror(",
          "39:   addons: Promise<any>[],",
          "40:   options?: { useCommonAddons?: boolean },",
          "41: ) {",
          "42:   const CodeMirror = await import('codemirror').then(c =>",
          "45:     typeof c === 'function' ? c : c.default,",
          "46:   );",
          "47:   const allAddons =",
          "48:     options?.useCommonAddons === false",
          "49:       ? addons",
          "50:       : commonCodeMirrorAddons.concat(addons);",
          "51:   await Promise.all(allAddons.map(addon => addon));",
          "52:   return CodeMirror;",
          "53: }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/completion.ts||packages/graphiql-react/src/editor/completion.ts": [
          "File: packages/graphiql-react/src/editor/completion.ts -> packages/graphiql-react/src/editor/completion.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import type { Editor, EditorChange } from 'codemirror';",
          "3: import {",
          "4:   GraphQLNonNull,",
          "5:   GraphQLList,",
          "6:   GraphQLType,",
          "7:   GraphQLField,",
          "8: } from 'graphql';",
          "9: import escapeHTML from 'escape-html';",
          "10: import MD from 'markdown-it';",
          "11: import { importCodeMirror } from './common';",
          "13: const md = new MD();",
          "19: export default function onHasCompletion(",
          "20:   _cm: Editor,",
          "21:   data: EditorChange | undefined,",
          "22:   onHintInformationRender: (el: HTMLDivElement) => void,",
          "23: ) {",
          "24:   importCodeMirror([], { useCommonAddons: false }).then(CodeMirror => {",
          "25:     let information: HTMLDivElement | null;",
          "26:     let deprecation: HTMLDivElement | null;",
          "27:     CodeMirror.on(",
          "28:       data,",
          "29:       'select',",
          "31:       (ctx: GraphQLField<{}, {}, {}>, el: HTMLDivElement) => {",
          "34:         if (!information) {",
          "35:           const hintsUl = el.parentNode as Node & ParentNode;",
          "39:           information = document.createElement('div');",
          "40:           information.className = 'CodeMirror-hint-information';",
          "41:           hintsUl.appendChild(information);",
          "44:           deprecation = document.createElement('div');",
          "45:           deprecation.className = 'CodeMirror-hint-deprecation';",
          "46:           hintsUl.appendChild(deprecation);",
          "50:           let onRemoveFn: EventListener | null;",
          "51:           hintsUl.addEventListener(",
          "52:             'DOMNodeRemoved',",
          "53:             (onRemoveFn = (event: Event) => {",
          "54:               if (event.target === hintsUl) {",
          "55:                 hintsUl.removeEventListener('DOMNodeRemoved', onRemoveFn);",
          "56:                 information = null;",
          "57:                 deprecation = null;",
          "58:                 onRemoveFn = null;",
          "59:               }",
          "60:             }),",
          "61:           );",
          "62:         }",
          "65:         const description = ctx.description",
          "66:           ? md.render(ctx.description)",
          "67:           : 'Self descriptive.';",
          "68:         const type = ctx.type",
          "69:           ? '<span class=\"infoType\">' + renderType(ctx.type) + '</span>'",
          "70:           : '';",
          "72:         information.innerHTML =",
          "73:           '<div class=\"content\">' +",
          "74:           (description.slice(0, 3) === '<p>'",
          "75:             ? '<p>' + type + description.slice(3)",
          "76:             : type + description) +",
          "77:           '</div>';",
          "79:         if (ctx && deprecation && ctx.deprecationReason) {",
          "80:           const reason = ctx.deprecationReason",
          "81:             ? md.render(ctx.deprecationReason)",
          "82:             : '';",
          "83:           deprecation.innerHTML =",
          "84:             '<span class=\"deprecation-label\">Deprecated</span>' + reason;",
          "85:           deprecation.style.display = 'block';",
          "86:         } else if (deprecation) {",
          "87:           deprecation.style.display = 'none';",
          "88:         }",
          "91:         if (onHintInformationRender) {",
          "92:           onHintInformationRender(information);",
          "93:         }",
          "94:       },",
          "95:     );",
          "96:   });",
          "97: }",
          "99: function renderType(type: GraphQLType): string {",
          "100:   if (type instanceof GraphQLNonNull) {",
          "101:     return `${renderType(type.ofType)}!`;",
          "102:   }",
          "103:   if (type instanceof GraphQLList) {",
          "104:     return `[${renderType(type.ofType)}]`;",
          "105:   }",
          "106:   return `<a class=\"typeName\">${escapeHTML(type.name)}</a>`;",
          "107: }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/context.tsx||packages/graphiql-react/src/editor/context.tsx": [
          "File: packages/graphiql-react/src/editor/context.tsx -> packages/graphiql-react/src/editor/context.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import type { Editor } from 'codemirror';",
          "2: import { createContext, ReactNode, useState } from 'react';",
          "4: export type EditorContextType = {",
          "5:   headerEditor: Editor | null;",
          "6:   setHeaderEditor(newEditor: Editor): void;",
          "7: };",
          "9: export const EditorContext = createContext<EditorContextType>({",
          "10:   headerEditor: null,",
          "11:   setHeaderEditor() {},",
          "12: });",
          "14: export function EditorContextProvider(props: {",
          "15:   children: ReactNode;",
          "16:   initialValue?: string;",
          "17: }) {",
          "18:   const [editor, setEditor] = useState<Editor | null>(null);",
          "19:   return (",
          "20:     <EditorContext.Provider",
          "21:       value={{ headerEditor: editor, setHeaderEditor: setEditor }}>",
          "22:       {props.children}",
          "23:     </EditorContext.Provider>",
          "24:   );",
          "25: }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/header-editor.tsx||packages/graphiql-react/src/editor/header-editor.tsx": [
          "File: packages/graphiql-react/src/editor/header-editor.tsx -> packages/graphiql-react/src/editor/header-editor.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { useContext, useEffect, useRef } from 'react';",
          "3: import { commonKeys, importCodeMirror } from './common';",
          "4: import { EditorContext } from './context';",
          "5: import {",
          "6:   CompletionCallback,",
          "7:   EditCallback,",
          "8:   EmptyCallback,",
          "9:   useChangeHandler,",
          "10:   useCompletion,",
          "11:   useKeyMap,",
          "12:   useResizeEditor,",
          "13:   useSynchronizeValue,",
          "14: } from './hooks';",
          "16: export type UseHeaderEditorArgs = {",
          "17:   editorTheme?: string;",
          "18:   onEdit?: EditCallback;",
          "19:   onHintInformationRender?: CompletionCallback;",
          "20:   onPrettifyQuery?: EmptyCallback;",
          "21:   onMergeQuery?: EmptyCallback;",
          "22:   onRunQuery?: EmptyCallback;",
          "23:   readOnly?: boolean;",
          "24:   value?: string;",
          "25: };",
          "27: export function useHeaderEditor({",
          "28:   editorTheme = 'graphiql',",
          "29:   onEdit,",
          "30:   onHintInformationRender,",
          "31:   onMergeQuery,",
          "32:   onPrettifyQuery,",
          "33:   onRunQuery,",
          "34:   readOnly = false,",
          "35:   value,",
          "36: }: UseHeaderEditorArgs = {}) {",
          "37:   const context = useContext(EditorContext);",
          "38:   const ref = useRef<HTMLDivElement>(null);",
          "40:   if (!context) {",
          "41:     throw new Error(",
          "42:       'Tried to call the `useHeaderEditor` hook without the necessary context. Make sure that the `EditorContextProvider` from `@graphiql/react` is rendered higher in the tree.',",
          "43:     );",
          "44:   }",
          "46:   const { headerEditor, setHeaderEditor } = context;",
          "48:   useEffect(() => {",
          "49:     importCodeMirror([",
          "51:       import('codemirror/mode/javascript/javascript'),",
          "52:     ]).then(CodeMirror => {",
          "53:       const container = ref.current;",
          "54:       if (!container) {",
          "55:         return;",
          "56:       }",
          "58:       const newEditor = CodeMirror(container, {",
          "59:         lineNumbers: true,",
          "60:         tabSize: 2,",
          "61:         mode: { name: 'javascript', json: true },",
          "62:         theme: editorTheme,",
          "63:         keyMap: 'sublime',",
          "64:         autoCloseBrackets: true,",
          "65:         matchBrackets: true,",
          "66:         showCursorWhenSelecting: true,",
          "67:         readOnly: readOnly ? 'nocursor' : false,",
          "68:         foldGutter: true,",
          "69:         gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter'],",
          "70:         extraKeys: commonKeys,",
          "71:       });",
          "73:       newEditor.addKeyMap({",
          "74:         'Cmd-Space'() {",
          "75:           newEditor.showHint({ completeSingle: false, container });",
          "76:         },",
          "77:         'Ctrl-Space'() {",
          "78:           newEditor.showHint({ completeSingle: false, container });",
          "79:         },",
          "80:         'Alt-Space'() {",
          "81:           newEditor.showHint({ completeSingle: false, container });",
          "82:         },",
          "83:         'Shift-Space'() {",
          "84:           newEditor.showHint({ completeSingle: false, container });",
          "85:         },",
          "86:       });",
          "88:       newEditor.on('keyup', (editorInstance, event) => {",
          "89:         const code = event.keyCode;",
          "90:         if (",
          "91:           (code >= 65 && code <= 90) || // letters",
          "92:           (!event.shiftKey && code >= 48 && code <= 57) || // numbers",
          "93:           (event.shiftKey && code === 189) || // underscore",
          "94:           (event.shiftKey && code === 222) // \"",
          "95:         ) {",
          "96:           editorInstance.execCommand('autocomplete');",
          "97:         }",
          "98:       });",
          "100:       setHeaderEditor(newEditor);",
          "101:     });",
          "102:   }, [editorTheme, readOnly, setHeaderEditor]);",
          "104:   useSynchronizeValue(headerEditor, value);",
          "106:   useChangeHandler(headerEditor, onEdit);",
          "108:   useCompletion(headerEditor, onHintInformationRender);",
          "110:   useKeyMap(headerEditor, ['Cmd-Enter', 'Ctrl-Enter'], onRunQuery);",
          "111:   useKeyMap(headerEditor, ['Shift-Ctrl-P'], onPrettifyQuery);",
          "112:   useKeyMap(headerEditor, ['Shift-Ctrl-M'], onMergeQuery);",
          "114:   useResizeEditor(headerEditor, ref);",
          "116:   return ref;",
          "117: }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/hooks.ts||packages/graphiql-react/src/editor/hooks.ts": [
          "File: packages/graphiql-react/src/editor/hooks.ts -> packages/graphiql-react/src/editor/hooks.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { Editor, EditorChange } from 'codemirror';",
          "2: import { RefObject, useEffect, useRef } from 'react';",
          "4: import onHasCompletion from './completion';",
          "6: export function useSynchronizeValue(",
          "7:   editor: Editor | null,",
          "8:   value: string | undefined,",
          "9: ) {",
          "10:   useEffect(() => {",
          "11:     if (editor && typeof value !== 'undefined') {",
          "12:       if (value !== editor.getValue()) {",
          "13:         editor.setValue(value);",
          "14:       }",
          "15:     }",
          "16:   }, [editor, value]);",
          "17: }",
          "19: export type EditCallback = (value: string) => void;",
          "21: export function useChangeHandler(",
          "22:   editor: Editor | null,",
          "23:   callback: EditCallback | undefined,",
          "24: ) {",
          "25:   useEffect(() => {",
          "26:     if (!editor) {",
          "27:       return;",
          "28:     }",
          "30:     const handleChange = (editorInstance: Editor) => {",
          "31:       const newValue = editorInstance.getValue();",
          "32:       callback?.(newValue);",
          "33:     };",
          "34:     editor.on('change', handleChange);",
          "35:     return () => editor.off('change', handleChange);",
          "36:   }, [editor, callback]);",
          "37: }",
          "39: export type CompletionCallback = (value: HTMLDivElement) => void;",
          "41: export function useCompletion(",
          "42:   editor: Editor | null,",
          "43:   callback: CompletionCallback | undefined,",
          "44: ) {",
          "45:   useEffect(() => {",
          "46:     if (editor && callback) {",
          "47:       const handleCompletion = (instance: Editor, changeObj?: EditorChange) => {",
          "48:         onHasCompletion(instance, changeObj, callback);",
          "49:       };",
          "50:       editor.on(",
          "52:         'hasCompletion',",
          "53:         handleCompletion,",
          "54:       );",
          "55:       return () =>",
          "56:         editor.off(",
          "58:           'hasCompletion',",
          "59:           handleCompletion,",
          "60:         );",
          "61:     }",
          "62:   }, [editor, callback]);",
          "63: }",
          "65: export type EmptyCallback = () => void;",
          "67: export function useKeyMap(",
          "68:   editor: Editor | null,",
          "69:   keys: string[],",
          "70:   callback: EmptyCallback | undefined,",
          "71: ) {",
          "72:   useEffect(() => {",
          "73:     if (!editor) {",
          "74:       return;",
          "75:     }",
          "76:     for (const key of keys) {",
          "77:       editor.removeKeyMap(key);",
          "78:     }",
          "80:     if (callback) {",
          "81:       const keyMap: Record<string, EmptyCallback> = {};",
          "82:       for (const key of keys) {",
          "83:         keyMap[key] = () => callback();",
          "84:       }",
          "85:       editor.addKeyMap(keyMap);",
          "86:     }",
          "87:   }, [editor, keys, callback]);",
          "88: }",
          "90: export function useResizeEditor(",
          "91:   editor: Editor | null,",
          "92:   ref: RefObject<HTMLDivElement>,",
          "93: ) {",
          "94:   const sizeRef = useRef<number>();",
          "95:   useEffect(() => {",
          "96:     if (!ref.current || !editor) {",
          "97:       return;",
          "98:     }",
          "99:     const size = ref.current.clientHeight;",
          "100:     if (size !== sizeRef.current) {",
          "101:       editor.setSize(null, null); // TODO: added the args here. double check no effects. might be version issue",
          "102:     }",
          "103:     sizeRef.current = size;",
          "104:   });",
          "105: }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/index.ts||packages/graphiql-react/src/editor/index.ts": [
          "File: packages/graphiql-react/src/editor/index.ts -> packages/graphiql-react/src/editor/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { EditorContext, EditorContextProvider } from './context';",
          "2: import { useHeaderEditor } from './header-editor';",
          "4: import type { EditorContextType } from './context';",
          "5: import type { UseHeaderEditorArgs } from './header-editor';",
          "7: export { EditorContext, EditorContextProvider, useHeaderEditor };",
          "9: export type { EditorContextType, UseHeaderEditorArgs };",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/index.ts||packages/graphiql-react/src/index.ts": [
          "File: packages/graphiql-react/src/index.ts -> packages/graphiql-react/src/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import {",
          "2:   ExplorerContext,",
          "3:   ExplorerContextProvider,",
          "4:   useExplorerNavStack,",
          "5: } from './explorer';",
          "6: import type {",
          "7:   ExplorerContextType,",
          "8:   ExplorerFieldDef,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import {",
          "2:   EditorContext,",
          "3:   EditorContextProvider,",
          "4:   useHeaderEditor,",
          "5: } from './editor';",
          "12: import type { EditorContextType, UseHeaderEditorArgs } from './editor';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:   ExplorerNavStackItem,",
          "11: } from './explorer';",
          "15: export type {",
          "16:   ExplorerContextType,",
          "17:   ExplorerFieldDef,",
          "18:   ExplorerNavStack,",
          "",
          "[Removed Lines]",
          "13: export { ExplorerContext, ExplorerContextProvider, useExplorerNavStack };",
          "",
          "[Added Lines]",
          "20: export {",
          "22:   EditorContext,",
          "23:   EditorContextProvider,",
          "24:   useHeaderEditor,",
          "26:   ExplorerContext,",
          "27:   ExplorerContextProvider,",
          "28:   useExplorerNavStack,",
          "29: };",
          "33:   EditorContextType,",
          "34:   UseHeaderEditorArgs,",
          "",
          "---------------"
        ],
        "packages/graphiql-react/vite.config.ts||packages/graphiql-react/vite.config.ts": [
          "File: packages/graphiql-react/vite.config.ts -> packages/graphiql-react/vite.config.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:   build: {",
          "7:     lib: {",
          "8:       entry: 'src/index.ts',",
          "10:       formats: ['cjs', 'es'],",
          "11:     },",
          "12:     rollupOptions: {",
          "13:       external: ['react', 'react-dom'],",
          "14:     },",
          "15:   },",
          "16: });",
          "",
          "[Removed Lines]",
          "9:       fileName: 'index',",
          "",
          "[Added Lines]",
          "9:       fileName: 'graphiql-react',",
          "14:       output: {",
          "15:         chunkFileNames: '[name].[format].js',",
          "16:       },",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "36: } from 'graphql-language-service';",
          "37: import { SchemaReference } from 'codemirror-graphql/src/utils/SchemaReference';",
          "42: import { ExecuteButton } from './ExecuteButton';",
          "43: import { ImagePreview } from './ImagePreview';",
          "",
          "[Removed Lines]",
          "39: import { ExplorerContext, ExplorerContextProvider } from '@graphiql/react';",
          "40: import type { ExplorerContextType, ExplorerFieldDef } from '@graphiql/react';",
          "",
          "[Added Lines]",
          "39: import {",
          "40:   EditorContext,",
          "41:   EditorContextProvider,",
          "42:   ExplorerContext,",
          "43:   ExplorerContextProvider,",
          "44: } from '@graphiql/react';",
          "45: import type {",
          "46:   EditorContextType,",
          "47:   ExplorerContextType,",
          "48:   ExplorerFieldDef,",
          "49: } from '@graphiql/react';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "319:   schema?: GraphQLSchema | null;",
          "320:   query?: string;",
          "321:   variables?: string;",
          "323:   operationName?: string;",
          "324:   docExplorerOpen: boolean;",
          "325:   response?: string;",
          "",
          "[Removed Lines]",
          "322:   headers?: string;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "367: export function GraphiQL(props: GraphiQLProps) {",
          "368:   return (",
          "376:   );",
          "377: }",
          "",
          "[Removed Lines]",
          "369:     <ExplorerContextProvider>",
          "370:       <ExplorerContext.Consumer>",
          "371:         {explorerContext => (",
          "372:           <GraphiQLWithContext {...props} explorerContext={explorerContext} />",
          "373:         )}",
          "374:       </ExplorerContext.Consumer>",
          "375:     </ExplorerContextProvider>",
          "",
          "[Added Lines]",
          "377:     <EditorContextProvider>",
          "378:       <ExplorerContextProvider>",
          "379:         <EditorContext.Consumer>",
          "380:           {editorContext => (",
          "381:             <ExplorerContext.Consumer>",
          "382:               {explorerContext => (",
          "383:                 <GraphiQLWithContext",
          "384:                   {...props}",
          "385:                   editorContext={editorContext}",
          "386:                   explorerContext={explorerContext}",
          "387:                 />",
          "388:               )}",
          "389:             </ExplorerContext.Consumer>",
          "390:           )}",
          "391:         </EditorContext.Consumer>",
          "392:       </ExplorerContextProvider>",
          "393:     </EditorContextProvider>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "417: type GraphiQLWithContextProps = GraphiQLProps & {",
          "418:   explorerContext: ExplorerContextType | null;",
          "419: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "436:   editorContext: EditorContextType | null;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "437:   graphiqlContainer: Maybe<HTMLDivElement>;",
          "438:   resultComponent: Maybe<ResultViewer>;",
          "439:   variableEditorComponent: Maybe<VariableEditor>;",
          "441:   _queryHistory: Maybe<QueryHistory>;",
          "442:   _historyStore: Maybe<HistoryStore>;",
          "443:   editorBarComponent: Maybe<HTMLDivElement>;",
          "",
          "[Removed Lines]",
          "440:   headerEditorComponent: Maybe<HeaderEditor>;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "550:     const initialTabHash = idFromTabContents({",
          "551:       query,",
          "554:     });",
          "556:     const initialTab: TabState = {",
          "",
          "[Removed Lines]",
          "552:       variables: variables as string,",
          "553:       headers: headers as string,",
          "",
          "[Added Lines]",
          "570:       variables: variables ?? undefined,",
          "571:       headers: headers ?? undefined,",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "558:       hash: initialTabHash,",
          "559:       title: operationName ?? '<untitled>',",
          "560:       query,",
          "563:       operationName,",
          "564:       response: undefined,",
          "565:     };",
          "",
          "[Removed Lines]",
          "561:       variables: variables as string,",
          "562:       headers: headers as string,",
          "",
          "[Added Lines]",
          "579:       variables: variables ?? undefined,",
          "580:       headers: headers ?? undefined,",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "619:       schema,",
          "620:       query: activeTab?.query,",
          "621:       variables: activeTab?.variables,",
          "623:       operationName: activeTab?.operationName,",
          "624:       response: activeTab?.response ?? response,",
          "625:       docExplorerOpen,",
          "",
          "[Removed Lines]",
          "622:       headers: activeTab?.headers,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "678:     let nextSchema = this.state.schema;",
          "679:     let nextQuery = this.state.query;",
          "680:     let nextVariables = this.state.variables;",
          "682:     let nextOperationName = this.state.operationName;",
          "683:     let nextResponse = this.state.response;",
          "",
          "[Removed Lines]",
          "681:     let nextHeaders = this.state.headers;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "694:     ) {",
          "695:       nextVariables = nextProps.variables;",
          "696:     }",
          "703:     if (nextProps.operationName !== undefined) {",
          "704:       nextOperationName = nextProps.operationName;",
          "705:     }",
          "",
          "[Removed Lines]",
          "697:     if (",
          "698:       nextProps.headers !== undefined &&",
          "699:       this.props.headers !== nextProps.headers",
          "700:     ) {",
          "701:       nextHeaders = nextProps.headers;",
          "702:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "749:         schema: nextSchema,",
          "750:         query: nextQuery,",
          "751:         variables: nextVariables,",
          "753:         operationName: nextOperationName,",
          "754:         response: nextResponse,",
          "755:       },",
          "",
          "[Removed Lines]",
          "752:         headers: nextHeaders,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "768:     this.codeMirrorSizer.updateSizes([",
          "769:       this.queryEditorComponent,",
          "770:       this.variableEditorComponent,",
          "772:       this.resultComponent,",
          "773:     ]);",
          "774:   }",
          "",
          "[Removed Lines]",
          "771:       this.headerEditorComponent,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "799:   private makeHandleOnSelectTab = (index: number) => () => {",
          "800:     this.handleStopQuery();",
          "801:     this.setState(",
          "803:       () => {",
          "804:         this.persistTabsState();",
          "805:         if (this.state.query) {",
          "",
          "[Removed Lines]",
          "802:       state => stateOnSelectTabReducer(index, state),",
          "",
          "[Added Lines]",
          "810:       state => stateOnSelectTabReducer(index, state, this.props),",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "814:       this.handleStopQuery();",
          "815:     }",
          "816:     this.setState(",
          "818:       this.persistTabsState,",
          "819:     );",
          "820:   };",
          "822:   private handleOnAddTab = () => {",
          "824:   };",
          "826:   render() {",
          "",
          "[Removed Lines]",
          "817:       state => stateOnCloseTabReducer(index, state),",
          "823:     this.setState(state => stateOnTabAddReducer(state), this.persistTabsState);",
          "",
          "[Added Lines]",
          "825:       state => stateOnCloseTabReducer(index, state, this.props),",
          "831:     this.setState(",
          "832:       state => stateOnTabAddReducer(state, this.props),",
          "833:       this.persistTabsState,",
          "834:     );",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "1047:                 />",
          "1048:                 {this.state.headerEditorEnabled && (",
          "1049:                   <HeaderEditor",
          "1054:                     onEdit={this.handleEditHeaders}",
          "1055:                     onHintInformationRender={this.handleHintInformationRender}",
          "1056:                     onPrettifyQuery={this.handlePrettifyQuery}",
          "",
          "[Removed Lines]",
          "1050:                     ref={n => {",
          "1051:                       this.headerEditorComponent = n;",
          "1052:                     }}",
          "1053:                     value={this.state.headers}",
          "",
          "[Added Lines]",
          "1061:                     value={this.props.headers}",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1140:   public getHeaderEditor() {",
          "1145:   }",
          "",
          "[Removed Lines]",
          "1141:     if (this.headerEditorComponent) {",
          "1142:       return this.headerEditorComponent.getCodeMirror();",
          "1143:     }",
          "1144:     return null;",
          "",
          "[Added Lines]",
          "1149:     return this.props.editorContext?.headerEditor || null;",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1156:     if (this.variableEditorComponent) {",
          "1157:       this.variableEditorComponent.getCodeMirror().refresh();",
          "1158:     }",
          "1162:     if (this.resultComponent) {",
          "1163:       this.resultComponent.getCodeMirror().refresh();",
          "1164:     }",
          "",
          "[Removed Lines]",
          "1159:     if (this.headerEditorComponent) {",
          "1160:       this.headerEditorComponent.getCodeMirror().refresh();",
          "1161:     }",
          "",
          "[Added Lines]",
          "1164:     this.props.editorContext?.headerEditor?.refresh();",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1219:       shouldPersistHeaders: Boolean(this.props.shouldPersistHeaders),",
          "1220:       documentAST: this.state.documentAST,",
          "1221:     };",
          "1222:     try {",
          "1226:       } else if (this.props.headers) {",
          "1227:         fetcherOpts.headers = JSON.parse(this.props.headers);",
          "",
          "[Removed Lines]",
          "1223:       if (this.state.headers && this.state.headers.trim().length > 2) {",
          "1224:         fetcherOpts.headers = JSON.parse(this.state.headers);",
          "",
          "[Added Lines]",
          "1225:     const headers = getHeaders(this.props);",
          "1227:       if (headers && headers.trim().length > 2) {",
          "1228:         fetcherOpts.headers = JSON.parse(headers);",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1489:     const editedQuery = this.autoCompleteLeafs() || this.state.query || '';",
          "1490:     const variables = this.state.variables;",
          "1492:     const shouldPersistHeaders = this.state.shouldPersistHeaders;",
          "1493:     let operationName = this.state.operationName;",
          "",
          "[Removed Lines]",
          "1491:     const headers = this.state.headers;",
          "",
          "[Added Lines]",
          "1495:     const headers = getHeaders(this.props);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "2306: function stateOnSelectTabReducer(",
          "2307:   index: number,",
          "2308:   state: GraphiQLState,",
          "2309: ): GraphiQLState {",
          "2310:   const oldActiveTabIndex = state.tabs.activeTabIndex;",
          "2311:   const tabs = state.tabs.tabs.map((currentTab, tabIndex) => {",
          "2312:     if (tabIndex !== oldActiveTabIndex) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2313:   props: GraphiQLWithContextProps,",
          "2315:   const headers = getHeaders(props);",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "2318:       query: state.query,",
          "2319:       variables: state.variables,",
          "2320:       operationName: state.operationName,",
          "2322:       response: state.response,",
          "2323:       hash: idFromTabContents({",
          "2324:         query: state.query,",
          "2325:         variables: state.variables,",
          "2327:       }),",
          "2328:     };",
          "2329:   });",
          "2331:   const newActiveTab = state.tabs.tabs[index];",
          "2333:   return {",
          "2334:     ...state,",
          "2335:     query: newActiveTab.query,",
          "2336:     variables: newActiveTab.variables,",
          "2337:     operationName: newActiveTab.operationName,",
          "2339:     response: newActiveTab.response,",
          "2340:     tabs: { ...state.tabs, tabs, activeTabIndex: index },",
          "2341:   };",
          "",
          "[Removed Lines]",
          "2321:       headers: state.headers,",
          "2326:         headers: state.headers,",
          "2338:     headers: newActiveTab.headers,",
          "",
          "[Added Lines]",
          "2328:       headers,",
          "2333:         headers,",
          "2340:   if (typeof newActiveTab.headers !== 'undefined') {",
          "2341:     setHeaders(props, newActiveTab.headers);",
          "2342:   }",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "2344: function stateOnCloseTabReducer(",
          "2345:   index: number,",
          "2346:   state: GraphiQLState,",
          "2347: ): GraphiQLState {",
          "2348:   const newActiveTabIndex =",
          "2349:     state.tabs.activeTabIndex > 0 ? state.tabs.activeTabIndex - 1 : 0;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2357:   props: GraphiQLWithContextProps,",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "2353:     tabs: state.tabs.tabs.filter((_tab, i) => index !== i),",
          "2354:   };",
          "2355:   const activeTab = newTabsState.tabs[newActiveTabIndex];",
          "2356:   return {",
          "2357:     ...state,",
          "2358:     query: activeTab.query,",
          "2359:     variables: activeTab.variables,",
          "2360:     operationName: activeTab.operationName,",
          "2362:     response: activeTab.response,",
          "2363:     tabs: newTabsState,",
          "2364:   };",
          "2365: }",
          "2368:   const oldActiveTabIndex = state.tabs.activeTabIndex;",
          "2370:   const newTab: TabState = {",
          "",
          "[Removed Lines]",
          "2361:     headers: activeTab.headers,",
          "2367: function stateOnTabAddReducer(state: GraphiQLState): GraphiQLState {",
          "",
          "[Added Lines]",
          "2367:   if (typeof activeTab.headers !== 'undefined') {",
          "2368:     setHeaders(props, activeTab.headers);",
          "2369:   }",
          "2380: function stateOnTabAddReducer(",
          "2381:   state: GraphiQLState,",
          "2382:   props: GraphiQLWithContextProps,",
          "2383: ): GraphiQLState {",
          "2384:   const headers = getHeaders(props);",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "2390:     return {",
          "2391:       ...tab,",
          "2393:       variables: state.variables,",
          "2394:       query: state.query,",
          "2395:       operationName: state.operationName,",
          "",
          "[Removed Lines]",
          "2392:       headers: state.headers,",
          "",
          "[Added Lines]",
          "2410:       headers,",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "2397:     };",
          "2398:   });",
          "2400:   return {",
          "2401:     ...state,",
          "2403:     variables: newTab.variables,",
          "2404:     query: newTab.query,",
          "2405:     operationName: newTab.operationName,",
          "",
          "[Removed Lines]",
          "2402:     headers: newTab.headers,",
          "",
          "[Added Lines]",
          "2418:   if (typeof newTab.headers !== 'undefined') {",
          "2419:     setHeaders(props, newTab.headers);",
          "2420:   }",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "2411:     },",
          "2412:   };",
          "2413: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2436: function getHeaders(props: GraphiQLWithContextProps) {",
          "2437:   return props.headers ?? props.editorContext?.headerEditor?.getValue();",
          "2438: }",
          "2440: function setHeaders(props: GraphiQLWithContextProps, value: string) {",
          "2441:   props.editorContext?.headerEditor?.setValue(value);",
          "2442: }",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/HeaderEditor.tsx||packages/graphiql/src/components/HeaderEditor.tsx": [
          "File: packages/graphiql/src/components/HeaderEditor.tsx -> packages/graphiql/src/components/HeaderEditor.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: import React from 'react';",
          "237: }",
          "",
          "[Removed Lines]",
          "7: import type * as CM from 'codemirror';",
          "10: import onHasCompletion from '../utility/onHasCompletion';",
          "11: import commonKeys from '../utility/commonKeys';",
          "12: import { importCodeMirror } from '../utility/importCodeMirror';",
          "14: declare module CodeMirror {",
          "15:   export interface Editor extends CM.Editor {}",
          "16:   export interface ShowHintOptions {",
          "17:     completeSingle: boolean;",
          "18:     hint: any;",
          "19:     container: HTMLElement | null;",
          "20:   }",
          "21: }",
          "23: type HeaderEditorProps = {",
          "24:   value?: string;",
          "25:   onEdit: (value: string) => void;",
          "26:   readOnly?: boolean;",
          "27:   onHintInformationRender: (value: HTMLDivElement) => void;",
          "28:   onPrettifyQuery: (value?: string) => void;",
          "29:   onMergeQuery: (value?: string) => void;",
          "30:   onRunQuery: (value?: string) => void;",
          "31:   editorTheme?: string;",
          "32:   active?: boolean;",
          "33: };",
          "47: export class HeaderEditor extends React.Component<HeaderEditorProps> {",
          "48:   CodeMirror: any;",
          "49:   editor: (CM.Editor & { options: any; showHint: any }) | null = null;",
          "50:   cachedValue: string;",
          "51:   private _node: HTMLElement | null = null;",
          "52:   ignoreChangeEvent: boolean = false;",
          "54:   constructor(props: HeaderEditorProps) {",
          "55:     super(props);",
          "60:     this.cachedValue = props.value || '';",
          "61:   }",
          "63:   componentDidMount() {",
          "64:     this.initializeEditor()",
          "65:       .then(editor => {",
          "66:         editor.on('change', this._onEdit);",
          "67:         editor.on('keyup', this._onKeyUp);",
          "68:         editor.on('hasCompletion', this._onHasCompletion);",
          "69:       })",
          "70:       .catch(console.error);",
          "71:   }",
          "73:   componentDidUpdate(prevProps: HeaderEditorProps) {",
          "74:     if (!this.editor) {",
          "75:       return;",
          "76:     }",
          "81:     this.ignoreChangeEvent = true;",
          "82:     if (",
          "83:       this.props.value !== prevProps.value &&",
          "84:       this.props.value !== this.cachedValue",
          "85:     ) {",
          "86:       const thisValue = this.props.value || '';",
          "87:       this.cachedValue = thisValue;",
          "88:       this.editor.setValue(thisValue);",
          "89:     }",
          "90:     this.ignoreChangeEvent = false;",
          "91:   }",
          "93:   componentWillUnmount() {",
          "94:     if (!this.editor) {",
          "95:       return;",
          "96:     }",
          "97:     this.editor.off('change', this._onEdit);",
          "98:     this.editor.off('keyup', this._onKeyUp);",
          "100:     this.editor.off('hasCompletion', this._onHasCompletion);",
          "101:     this.editor = null;",
          "102:   }",
          "104:   render() {",
          "105:     return (",
          "106:       <div",
          "107:         className=\"codemirrorWrap\"",
          "110:         style={{",
          "111:           position: this.props.active ? 'relative' : 'absolute',",
          "112:           visibility: this.props.active ? 'visible' : 'hidden',",
          "113:         }}",
          "114:         ref={node => {",
          "115:           this._node = node as HTMLDivElement;",
          "116:         }}",
          "117:       />",
          "118:     );",
          "119:   }",
          "122:   addonModules = () => [import('codemirror/mode/javascript/javascript')];",
          "124:   async initializeEditor() {",
          "125:     this.CodeMirror = await importCodeMirror(this.addonModules());",
          "126:     const editor = (this.editor = this.CodeMirror(this._node, {",
          "127:       value: this.props.value || '',",
          "128:       lineNumbers: true,",
          "129:       tabSize: 2,",
          "130:       mode: { name: 'javascript', json: true },",
          "131:       theme: this.props.editorTheme || 'graphiql',",
          "132:       keyMap: 'sublime',",
          "133:       autoCloseBrackets: true,",
          "134:       matchBrackets: true,",
          "135:       showCursorWhenSelecting: true,",
          "136:       readOnly: this.props.readOnly ? 'nocursor' : false,",
          "137:       foldGutter: {",
          "138:         minFoldSize: 4,",
          "139:       },",
          "140:       gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter'],",
          "141:       extraKeys: {",
          "142:         'Cmd-Space': () =>",
          "143:           this.editor!.showHint({",
          "144:             completeSingle: false,",
          "145:             container: this._node,",
          "146:           } as CodeMirror.ShowHintOptions),",
          "147:         'Ctrl-Space': () =>",
          "148:           this.editor!.showHint({",
          "149:             completeSingle: false,",
          "150:             container: this._node,",
          "151:           } as CodeMirror.ShowHintOptions),",
          "152:         'Alt-Space': () =>",
          "153:           this.editor!.showHint({",
          "154:             completeSingle: false,",
          "155:             container: this._node,",
          "156:           } as CodeMirror.ShowHintOptions),",
          "157:         'Shift-Space': () =>",
          "158:           this.editor!.showHint({",
          "159:             completeSingle: false,",
          "160:             container: this._node,",
          "161:           } as CodeMirror.ShowHintOptions),",
          "162:         'Cmd-Enter': () => {",
          "163:           if (this.props.onRunQuery) {",
          "164:             this.props.onRunQuery();",
          "165:           }",
          "166:         },",
          "167:         'Ctrl-Enter': () => {",
          "168:           if (this.props.onRunQuery) {",
          "169:             this.props.onRunQuery();",
          "170:           }",
          "171:         },",
          "172:         'Shift-Ctrl-P': () => {",
          "173:           if (this.props.onPrettifyQuery) {",
          "174:             this.props.onPrettifyQuery();",
          "175:           }",
          "176:         },",
          "178:         'Shift-Ctrl-M': () => {",
          "179:           if (this.props.onMergeQuery) {",
          "180:             this.props.onMergeQuery();",
          "181:           }",
          "182:         },",
          "183:         ...commonKeys,",
          "184:       },",
          "185:     }));",
          "186:     return editor;",
          "187:   }",
          "193:   getCodeMirror() {",
          "194:     return this.editor as CM.Editor;",
          "195:   }",
          "200:   getClientHeight() {",
          "201:     return this._node && this._node.clientHeight;",
          "202:   }",
          "204:   private _onKeyUp = (_cm: CodeMirror.Editor, event: KeyboardEvent) => {",
          "205:     const code = event.keyCode;",
          "206:     if (!this.editor) {",
          "207:       return;",
          "208:     }",
          "209:     if (",
          "210:       (code >= 65 && code <= 90) || // letters",
          "211:       (!event.shiftKey && code >= 48 && code <= 57) || // numbers",
          "212:       (event.shiftKey && code === 189) || // underscore",
          "213:       (event.shiftKey && code === 222) // \"",
          "214:     ) {",
          "215:       this.editor.execCommand('autocomplete');",
          "216:     }",
          "217:   };",
          "219:   private _onEdit = () => {",
          "220:     if (!this.editor) {",
          "221:       return;",
          "222:     }",
          "223:     if (!this.ignoreChangeEvent) {",
          "224:       this.cachedValue = this.editor.getValue();",
          "225:       if (this.props.onEdit) {",
          "226:         this.props.onEdit(this.cachedValue);",
          "227:       }",
          "228:     }",
          "229:   };",
          "231:   private _onHasCompletion = (",
          "232:     instance: CM.Editor,",
          "233:     changeObj?: CM.EditorChange,",
          "234:   ) => {",
          "235:     onHasCompletion(instance, changeObj, this.props.onHintInformationRender);",
          "236:   };",
          "",
          "[Added Lines]",
          "7: import { useHeaderEditor, UseHeaderEditorArgs } from '@graphiql/react';",
          "10: type HeaderEditorProps = UseHeaderEditorArgs & { active?: boolean };",
          "18: export function HeaderEditor({ active, ...hookArgs }: HeaderEditorProps) {",
          "19:   const ref = useHeaderEditor(hookArgs);",
          "20:   return (",
          "21:     <div",
          "22:       className=\"codemirrorWrap\"",
          "25:       style={{",
          "26:         position: active ? 'relative' : 'absolute',",
          "27:         visibility: active ? 'visible' : 'hidden',",
          "28:       }}",
          "29:       ref={ref}",
          "30:     />",
          "31:   );",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx||packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx": [
          "File: packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx -> packages/graphiql/src/components/__tests__/GraphiQL.spec.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "114:   });",
          "116:   it('defaults to the built-in default query', async () => {",
          "118:     await wait();",
          "120:   });",
          "122:   it('accepts a custom default query', async () => {",
          "",
          "[Removed Lines]",
          "117:     const { findByText } = render(<GraphiQL fetcher={noOpFetcher} />);",
          "119:     expect(findByText('# Welcome to GraphiQL')).toBeTruthy();",
          "",
          "[Added Lines]",
          "117:     const { container } = render(<GraphiQL fetcher={noOpFetcher} />);",
          "119:     expect(",
          "120:       container.querySelector('.query-editor .mockCodeMirror').value,",
          "121:     ).toContain('# Welcome to GraphiQL');",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "858907d2106742a65ec52eb017f2e91268cc37bf",
      "candidate_info": {
        "commit_hash": "858907d2106742a65ec52eb017f2e91268cc37bf",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/858907d2106742a65ec52eb017f2e91268cc37bf",
        "files": [
          ".changeset/nervous-squids-flow.md",
          ".github/workflows/canary.yml",
          ".github/workflows/deploy-preview.yml",
          ".github/workflows/deploy.yml",
          ".github/workflows/license-check.yml",
          ".github/workflows/pr-check.yml",
          ".github/workflows/pr-tests.yml",
          ".github/workflows/release.yml",
          ".nvmrc",
          "packages/graphiql/test/schema.js",
          "yarn.lock"
        ],
        "message": "missing changeset, fix e2e, node 16 (#2045)",
        "before_after_code_files": [
          "packages/graphiql/test/schema.js||packages/graphiql/test/schema.js",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql/test/schema.js||packages/graphiql/test/schema.js": [
          "File: packages/graphiql/test/schema.js -> packages/graphiql/test/schema.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "333:       },",
          "334:       async *subscribe(args) {",
          "335:         for (const hi of ['Hi', 'Bonjour', 'Hola', 'Ciao', 'Zdravo']) {",
          "337:             await sleep(args.delay);",
          "338:           }",
          "339:           yield { message: hi };",
          "",
          "[Removed Lines]",
          "336:           if (args.delay) {",
          "",
          "[Added Lines]",
          "336:           if (args && args.delay) {",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "3270:     tslib \"^2\"",
          "3272: \"@graphiql/toolkit@file:packages/graphiql-toolkit\":",
          "3274:   dependencies:",
          "3275:     \"@n1ru4l/push-pull-async-iterable-iterator\" \"^3.1.0\"",
          "3276:     meros \"^1.1.4\"",
          "",
          "[Removed Lines]",
          "3273:   version \"0.4.0\"",
          "",
          "[Added Lines]",
          "3273:   version \"0.4.1\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10992:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
          "10994: \"graphiql@file:packages/graphiql\":",
          "10996:   dependencies:",
          "10998:     codemirror \"^5.58.2\"",
          "11000:     copy-to-clipboard \"^3.2.0\"",
          "11001:     dset \"^3.1.0\"",
          "11002:     entities \"^2.0.0\"",
          "",
          "[Removed Lines]",
          "10995:   version \"1.5.1\"",
          "10997:     \"@graphiql/toolkit\" \"^0.4.0\"",
          "10999:     codemirror-graphql \"^1.1.0\"",
          "",
          "[Added Lines]",
          "10995:   version \"1.5.2\"",
          "10997:     \"@graphiql/toolkit\" \"^0.4.1\"",
          "10999:     codemirror-graphql \"^1.2.0\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}