{
  "cve_id": "CVE-2022-23568",
  "cve_desc": "Tensorflow is an Open Source Machine Learning Framework. The implementation of `AddManySparseToTensorsMap` is vulnerable to an integer overflow which results in a `CHECK`-fail when building new `TensorShape` objects (so, an assert failure based denial of service). We are missing some validation on the shapes of the input tensors as well as directly constructing a large `TensorShape` with user-provided dimensions. The fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.",
  "repo": "tensorflow/tensorflow",
  "patch_hash": "b51b82fe65ebace4475e3c54eb089c18a4403f1c",
  "patch_info": {
    "commit_hash": "b51b82fe65ebace4475e3c54eb089c18a4403f1c",
    "repo": "tensorflow/tensorflow",
    "commit_url": "https://github.com/tensorflow/tensorflow/commit/b51b82fe65ebace4475e3c54eb089c18a4403f1c",
    "files": [
      "tensorflow/core/kernels/sparse_tensors_map_ops.cc"
    ],
    "message": "Add missing validation to `AddManySparseToTensorsMap`.\n\nSparse tensors have a set of requirements for the 3 components and not all of them were checked.\n\nPiperOrigin-RevId: 415358027\nChange-Id: I96cbb672999cd1da772c22fabbd15507e32e12dc",
    "before_after_code_files": [
      "tensorflow/core/kernels/sparse_tensors_map_ops.cc||tensorflow/core/kernels/sparse_tensors_map_ops.cc"
    ]
  },
  "patch_diff": {
    "tensorflow/core/kernels/sparse_tensors_map_ops.cc||tensorflow/core/kernels/sparse_tensors_map_ops.cc": [
      "File: tensorflow/core/kernels/sparse_tensors_map_ops.cc -> tensorflow/core/kernels/sparse_tensors_map_ops.cc",
      "--- Hunk 1 ---",
      "[Context before]",
      "231:                 errors::InvalidArgument(",
      "232:                     \"Input indices should be a matrix but received shape \",",
      "233:                     input_indices->shape().DebugString()));",
      "235:     OP_REQUIRES(context, TensorShapeUtils::IsVector(input_values->shape()),",
      "236:                 errors::InvalidArgument(",
      "237:                     \"Input values should be a vector but received shape \",",
      "238:                     input_values->shape().DebugString()));",
      "240:     OP_REQUIRES(context, TensorShapeUtils::IsVector(input_shape->shape()),",
      "241:                 errors::InvalidArgument(",
      "242:                     \"Input shape should be a vector but received shape \",",
      "243:                     input_shape->shape().DebugString()));",
      "245:     int rank = input_shape->NumElements();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "242:     OP_REQUIRES(",
      "243:         context,",
      "244:         input_values->shape().dim_size(0) == input_indices->shape().dim_size(0),",
      "245:         errors::InvalidArgument(",
      "246:             \"Number of values must match first dimension of indices. \", \"Got \",",
      "247:             input_values->shape().dim_size(0),",
      "248:             \" values, indices shape: \", input_indices->shape().DebugString()));",
      "249:     OP_REQUIRES(",
      "250:         context,",
      "251:         input_shape->shape().dim_size(0) == input_indices->shape().dim_size(1),",
      "252:         errors::InvalidArgument(",
      "253:             \"Number of dimensions must match second dimension of indices. \",",
      "254:             \"Got \", input_shape->shape().dim_size(0),",
      "255:             \" dimensions, indices shape: \",",
      "256:             input_indices->shape().DebugString()));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "84a91ddcb532aab063f931f14e24ccdb3dd27722",
      "candidate_info": {
        "commit_hash": "84a91ddcb532aab063f931f14e24ccdb3dd27722",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/84a91ddcb532aab063f931f14e24ccdb3dd27722",
        "files": [
          "tensorflow/core/kernels/sparse_tensors_map_ops.cc"
        ],
        "message": "Add missing validation to `AddManySparseToTensorsMap`.\n\nSparse tensors have a set of requirements for the 3 components and not all of them were checked.\n\nPiperOrigin-RevId: 415358027\nChange-Id: I96cbb672999cd1da772c22fabbd15507e32e12dc",
        "before_after_code_files": [
          "tensorflow/core/kernels/sparse_tensors_map_ops.cc||tensorflow/core/kernels/sparse_tensors_map_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/sparse_tensors_map_ops.cc||tensorflow/core/kernels/sparse_tensors_map_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/sparse_tensors_map_ops.cc||tensorflow/core/kernels/sparse_tensors_map_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/sparse_tensors_map_ops.cc||tensorflow/core/kernels/sparse_tensors_map_ops.cc": [
          "File: tensorflow/core/kernels/sparse_tensors_map_ops.cc -> tensorflow/core/kernels/sparse_tensors_map_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "231:                 errors::InvalidArgument(",
          "232:                     \"Input indices should be a matrix but received shape \",",
          "233:                     input_indices->shape().DebugString()));",
          "235:     OP_REQUIRES(context, TensorShapeUtils::IsVector(input_values->shape()),",
          "236:                 errors::InvalidArgument(",
          "237:                     \"Input values should be a vector but received shape \",",
          "238:                     input_values->shape().DebugString()));",
          "240:     OP_REQUIRES(context, TensorShapeUtils::IsVector(input_shape->shape()),",
          "241:                 errors::InvalidArgument(",
          "242:                     \"Input shape should be a vector but received shape \",",
          "243:                     input_shape->shape().DebugString()));",
          "245:     int rank = input_shape->NumElements();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "242:     OP_REQUIRES(",
          "243:         context,",
          "244:         input_values->shape().dim_size(0) == input_indices->shape().dim_size(0),",
          "245:         errors::InvalidArgument(",
          "246:             \"Number of values must match first dimension of indices. \", \"Got \",",
          "247:             input_values->shape().dim_size(0),",
          "248:             \" values, indices shape: \", input_indices->shape().DebugString()));",
          "249:     OP_REQUIRES(",
          "250:         context,",
          "251:         input_shape->shape().dim_size(0) == input_indices->shape().dim_size(1),",
          "252:         errors::InvalidArgument(",
          "253:             \"Number of dimensions must match second dimension of indices. \",",
          "254:             \"Got \", input_shape->shape().dim_size(0),",
          "255:             \" dimensions, indices shape: \",",
          "256:             input_indices->shape().DebugString()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7aa19516e1fecf75ba55bd0c1b9ac9871ea449de",
      "candidate_info": {
        "commit_hash": "7aa19516e1fecf75ba55bd0c1b9ac9871ea449de",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/7aa19516e1fecf75ba55bd0c1b9ac9871ea449de",
        "files": [
          "tensorflow/core/kernels/sparse_tensors_map_ops.cc"
        ],
        "message": "Add missing validation to `AddManySparseToTensorsMap`.\n\nSparse tensors have a set of requirements for the 3 components and not all of them were checked.\n\nPiperOrigin-RevId: 415358027\nChange-Id: I96cbb672999cd1da772c22fabbd15507e32e12dc",
        "before_after_code_files": [
          "tensorflow/core/kernels/sparse_tensors_map_ops.cc||tensorflow/core/kernels/sparse_tensors_map_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/sparse_tensors_map_ops.cc||tensorflow/core/kernels/sparse_tensors_map_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/sparse_tensors_map_ops.cc||tensorflow/core/kernels/sparse_tensors_map_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/sparse_tensors_map_ops.cc||tensorflow/core/kernels/sparse_tensors_map_ops.cc": [
          "File: tensorflow/core/kernels/sparse_tensors_map_ops.cc -> tensorflow/core/kernels/sparse_tensors_map_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "234:                 errors::InvalidArgument(",
          "235:                     \"Input indices should be a matrix but received shape \",",
          "236:                     input_indices->shape().DebugString()));",
          "238:     OP_REQUIRES(context, TensorShapeUtils::IsVector(input_values->shape()),",
          "239:                 errors::InvalidArgument(",
          "240:                     \"Input values should be a vector but received shape \",",
          "241:                     input_values->shape().DebugString()));",
          "243:     OP_REQUIRES(context, TensorShapeUtils::IsVector(input_shape->shape()),",
          "244:                 errors::InvalidArgument(",
          "245:                     \"Input shape should be a vector but received shape \",",
          "246:                     input_shape->shape().DebugString()));",
          "248:     int rank = input_shape->NumElements();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "245:     OP_REQUIRES(",
          "246:         context,",
          "247:         input_values->shape().dim_size(0) == input_indices->shape().dim_size(0),",
          "248:         errors::InvalidArgument(",
          "249:             \"Number of values must match first dimension of indices. \", \"Got \",",
          "250:             input_values->shape().dim_size(0),",
          "251:             \" values, indices shape: \", input_indices->shape().DebugString()));",
          "252:     OP_REQUIRES(",
          "253:         context,",
          "254:         input_shape->shape().dim_size(0) == input_indices->shape().dim_size(1),",
          "255:         errors::InvalidArgument(",
          "256:             \"Number of dimensions must match second dimension of indices. \",",
          "257:             \"Got \", input_shape->shape().dim_size(0),",
          "258:             \" dimensions, indices shape: \",",
          "259:             input_indices->shape().DebugString()));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8cfdefd84c26518f30f0dbffd10fbe79ca28548b",
      "candidate_info": {
        "commit_hash": "8cfdefd84c26518f30f0dbffd10fbe79ca28548b",
        "repo": "tensorflow/tensorflow",
        "commit_url": "https://github.com/tensorflow/tensorflow/commit/8cfdefd84c26518f30f0dbffd10fbe79ca28548b",
        "files": [
          "tensorflow/core/kernels/sparse_tensors_map_ops.cc"
        ],
        "message": "Add missing validation to `AddManySparseToTensorsMap`.\n\nSparse tensors have a set of requirements for the 3 components and not all of them were checked.\n\nPiperOrigin-RevId: 415358027\nChange-Id: I96cbb672999cd1da772c22fabbd15507e32e12dc",
        "before_after_code_files": [
          "tensorflow/core/kernels/sparse_tensors_map_ops.cc||tensorflow/core/kernels/sparse_tensors_map_ops.cc"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "tensorflow/core/kernels/sparse_tensors_map_ops.cc||tensorflow/core/kernels/sparse_tensors_map_ops.cc"
          ],
          "candidate": [
            "tensorflow/core/kernels/sparse_tensors_map_ops.cc||tensorflow/core/kernels/sparse_tensors_map_ops.cc"
          ]
        }
      },
      "candidate_diff": {
        "tensorflow/core/kernels/sparse_tensors_map_ops.cc||tensorflow/core/kernels/sparse_tensors_map_ops.cc": [
          "File: tensorflow/core/kernels/sparse_tensors_map_ops.cc -> tensorflow/core/kernels/sparse_tensors_map_ops.cc",
          "--- Hunk 1 ---",
          "[Context before]",
          "231:                 errors::InvalidArgument(",
          "232:                     \"Input indices should be a matrix but received shape \",",
          "233:                     input_indices->shape().DebugString()));",
          "235:     OP_REQUIRES(context, TensorShapeUtils::IsVector(input_values->shape()),",
          "236:                 errors::InvalidArgument(",
          "237:                     \"Input values should be a vector but received shape \",",
          "238:                     input_values->shape().DebugString()));",
          "240:     OP_REQUIRES(context, TensorShapeUtils::IsVector(input_shape->shape()),",
          "241:                 errors::InvalidArgument(",
          "242:                     \"Input shape should be a vector but received shape \",",
          "243:                     input_shape->shape().DebugString()));",
          "245:     int rank = input_shape->NumElements();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "242:     OP_REQUIRES(",
          "243:         context,",
          "244:         input_values->shape().dim_size(0) == input_indices->shape().dim_size(0),",
          "245:         errors::InvalidArgument(",
          "246:             \"Number of values must match first dimension of indices. \", \"Got \",",
          "247:             input_values->shape().dim_size(0),",
          "248:             \" values, indices shape: \", input_indices->shape().DebugString()));",
          "249:     OP_REQUIRES(",
          "250:         context,",
          "251:         input_shape->shape().dim_size(0) == input_indices->shape().dim_size(1),",
          "252:         errors::InvalidArgument(",
          "253:             \"Number of dimensions must match second dimension of indices. \",",
          "254:             \"Got \", input_shape->shape().dim_size(0),",
          "255:             \" dimensions, indices shape: \",",
          "256:             input_indices->shape().DebugString()));",
          "",
          "---------------"
        ]
      }
    }
  ]
}