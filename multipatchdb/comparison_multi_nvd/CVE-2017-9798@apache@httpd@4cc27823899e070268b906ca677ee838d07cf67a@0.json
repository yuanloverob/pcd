{
  "cve_id": "CVE-2017-9798",
  "cve_desc": "Apache httpd allows remote attackers to read secret data from process memory if the Limit directive can be set in a user's .htaccess file, or if httpd.conf has certain misconfigurations, aka Optionsbleed. This affects the Apache HTTP Server through 2.2.34 and 2.4.x through 2.4.27. The attacker sends an unauthenticated OPTIONS HTTP request when attempting to read secret data. This is a use-after-free issue and thus secret data is not always sent, and the specific data depends on many factors including configuration. Exploitation with .htaccess can be blocked with a patch to the ap_limit_section function in server/core.c.",
  "repo": "apache/httpd",
  "patch_hash": "4cc27823899e070268b906ca677ee838d07cf67a",
  "patch_info": {
    "commit_hash": "4cc27823899e070268b906ca677ee838d07cf67a",
    "repo": "apache/httpd",
    "commit_url": "https://github.com/apache/httpd/commit/4cc27823899e070268b906ca677ee838d07cf67a",
    "files": [
      "CHANGES",
      "server/core.c"
    ],
    "message": "core: Disallow Methods' registration at run time (.htaccess), they may be used only if registered at init time (httpd.conf).\n\nCalling ap_method_register() in children processes is not the right scope\nsince it won't be shared for all requests.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/trunk@1807655 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "server/core.c||server/core.c"
    ]
  },
  "patch_diff": {
    "server/core.c||server/core.c": [
      "File: server/core.c -> server/core.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2334:             methnum = ap_method_register(cmd->pool,",
      "2335:                                          apr_pstrdup(cmd->pool, method));",
      "2336:         }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2334:             if (cmd->pool == cmd->temp_pool) {",
      "2336:                 return apr_psprintf(cmd->pool, \"Could not register method '%s' \"",
      "2337:                                    \"for %s from .htaccess configuration\",",
      "2338:                                     method, cmd->cmd->name);",
      "2339:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e465e656be9cf5b69f6d100824d95fcd30c213a1",
      "candidate_info": {
        "commit_hash": "e465e656be9cf5b69f6d100824d95fcd30c213a1",
        "repo": "apache/httpd",
        "commit_url": "https://github.com/apache/httpd/commit/e465e656be9cf5b69f6d100824d95fcd30c213a1",
        "files": [
          "CHANGES",
          "STATUS",
          "server/core.c"
        ],
        "message": "Merge r1807655 from trunk:\n\ncore: Disallow Methods' registration at run time (.htaccess), they may be\nused only if registered at init time (httpd.conf).\n\nCalling ap_method_register() in children processes is not the right scope\nsince it won't be shared for all requests.\n\nReviewed by: ylavic, covener, icing\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/httpd/httpd/branches/2.4.x@1807754 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "server/core.c||server/core.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "server/core.c||server/core.c"
          ],
          "candidate": [
            "server/core.c||server/core.c"
          ]
        }
      },
      "candidate_diff": {
        "server/core.c||server/core.c": [
          "File: server/core.c -> server/core.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2269:             methnum = ap_method_register(cmd->pool,",
          "2270:                                          apr_pstrdup(cmd->pool, method));",
          "2271:         }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2269:             if (cmd->pool == cmd->temp_pool) {",
          "2271:                 return apr_psprintf(cmd->pool, \"Could not register method '%s' \"",
          "2272:                                    \"for %s from .htaccess configuration\",",
          "2273:                                     method, cmd->cmd->name);",
          "2274:             }",
          "",
          "---------------"
        ]
      }
    }
  ]
}