{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2b4b96e90696c1c37b2a7f91e70215918e2dc597",
      "candidate_info": {
        "commit_hash": "2b4b96e90696c1c37b2a7f91e70215918e2dc597",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/2b4b96e90696c1c37b2a7f91e70215918e2dc597",
        "files": [
          "modules/sipmsgops/doc/sipmsgops_admin.xml",
          "modules/sipmsgops/uri.c"
        ],
        "message": "sipmsgops: Fix ruri_del_param() return value on success\n\nThe issue was that set_ruri() actually returns 0/-1, not 1/0 as the\ndeveloper expected.\n\nAlso update docs to reflect the function's return code meaning.\n\n(cherry picked from commit eea215278c479a22434aefd651c95b2ad777ecc1)",
        "before_after_code_files": [
          "modules/sipmsgops/uri.c||modules/sipmsgops/uri.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/sipmsgops/uri.c||modules/sipmsgops/uri.c": [
          "File: modules/sipmsgops/uri.c -> modules/sipmsgops/uri.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "188:    if (end_len)",
          "189:     memcpy(new_uri.s + begin_len, param_tok.s + param_tok.len, end_len);",
          "195:     pkg_free(new_uri.s);",
          "196:     return -1;",
          "197:    }",
          "198:   }",
          "199:  }",
          "",
          "[Removed Lines]",
          "191:    if (set_ruri(_msg, &new_uri) == 1) {",
          "192:     pkg_free(new_uri.s);",
          "193:     return  1;",
          "194:    } else {",
          "",
          "[Added Lines]",
          "191:    if (set_ruri(_msg, &new_uri) < 0) {",
          "193:     LM_ERR(\"failed to set new R-URI\\n\");",
          "197:    pkg_free(new_uri.s);",
          "198:    return 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b93fbafed4cca67d2393f90c25710e7492b737f1",
      "candidate_info": {
        "commit_hash": "b93fbafed4cca67d2393f90c25710e7492b737f1",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/b93fbafed4cca67d2393f90c25710e7492b737f1",
        "files": [
          "modules/clusterer/clusterer.c",
          "modules/clusterer/clusterer.h",
          "modules/clusterer/clusterer_mod.c",
          "modules/clusterer/doc/clusterer_admin.xml"
        ],
        "message": "clusterer: add ability to disable replication packets dispatching\n\nAdd a new \"dispatch_jobs\" modparam which controls whether the processing of\nreplicated packets is dispatched through IPC or not.\nDisabling the dispatching mechanism prevents high CPU loads caused by\nthe \"thundering herd\" problem.\n\nCredits go to Rizwan Syed and Connex Carrier Services for supporting the\ntroubleshooting of this issue.\n\n(cherry picked from commit 0c66936f3d343226930042bc463b467d8a62fde3)",
        "before_after_code_files": [
          "modules/clusterer/clusterer.c||modules/clusterer/clusterer.c",
          "modules/clusterer/clusterer.h||modules/clusterer/clusterer.h",
          "modules/clusterer/clusterer_mod.c||modules/clusterer/clusterer_mod.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/clusterer/clusterer.c||modules/clusterer/clusterer.c": [
          "File: modules/clusterer/clusterer.c -> modules/clusterer/clusterer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "56: extern int seed_fb_interval;",
          "57: extern int sync_timeout;",
          "59: void sync_check_timer(utime_t ticks, void *param)",
          "60: {",
          "61:  cluster_info_t *cl;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59: int dispatch_jobs = 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1354:    lock_stop_read(cl_list_lock);",
          "1355:    packet->src_id = source_id;",
          "1360:    return;",
          "1361:   }",
          "",
          "[Removed Lines]",
          "1357:    if (ipc_dispatch_mod_packet(packet, cap) < 0)",
          "1358:     LM_ERR(\"Failed to dispatch handling of module packet\\n\");",
          "",
          "[Added Lines]",
          "1359:    if (dispatch_jobs) {",
          "1360:     if (ipc_dispatch_mod_packet(packet, cap) < 0)",
          "1361:      LM_ERR(\"Failed to dispatch handling of module packet\\n\");",
          "1362:    } else {",
          "1363:     cap->packet_cb(packet);",
          "1364:    }",
          "",
          "---------------"
        ],
        "modules/clusterer/clusterer.h||modules/clusterer/clusterer.h": [
          "File: modules/clusterer/clusterer.h -> modules/clusterer/clusterer.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "146: extern str cl_internal_cap;",
          "147: extern str cl_extra_cap;",
          "149: void sync_check_timer(utime_t ticks, void *param);",
          "151: void bin_rcv_cl_packets(bin_packet_t *packet, int packet_type,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "149: extern int dispatch_jobs;",
          "",
          "---------------"
        ],
        "modules/clusterer/clusterer_mod.c||modules/clusterer/clusterer_mod.c": [
          "File: modules/clusterer/clusterer_mod.c -> modules/clusterer/clusterer_mod.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "163:  {\"sharing_tag\",   STR_PARAM|USE_FUNC_PARAM,",
          "164:   (void*)&shtag_modparam_func},",
          "165:  {\"sync_packet_size\", INT_PARAM, &sync_packet_size },",
          "166:  {0, 0, 0}",
          "167: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "166:  {\"dispatch_jobs\",  INT_PARAM, &dispatch_jobs  },",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c7a5f41754c03fa20921e86a7ff25d2f0b0abf76",
      "candidate_info": {
        "commit_hash": "c7a5f41754c03fa20921e86a7ff25d2f0b0abf76",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/c7a5f41754c03fa20921e86a7ff25d2f0b0abf76",
        "files": [
          "modules/b2b_entities/dlg.c"
        ],
        "message": "b2b_entities: fix possible shm memory leaks\n\nFix leaking transactions when deleting an entity without sending a final reply.\n\nThanks to David Escartin from Sonoc for reporting.",
        "before_after_code_files": [
          "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c": [
          "File: modules/b2b_entities/dlg.c -> modules/b2b_entities/dlg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1763: void b2b_delete_record(b2b_dlg_t* dlg, b2b_table htable, unsigned int hash_index)",
          "1764: {",
          "1765:  if(dlg->prev == NULL)",
          "1766:  {",
          "1767:   htable[hash_index].first = dlg->next;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1765:  str reply_text = str_init(\"Request Timeout\");",
          "1766:  struct to_body *pto;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1782:  if(dlg->uac_tran)",
          "1783:   tmb.unref_cell(dlg->uac_tran);",
          "1786:   tmb.unref_cell(dlg->uas_tran);",
          "1788:  if(dlg->ack_sdp.s)",
          "1789:   shm_free(dlg->ack_sdp.s);",
          "",
          "[Removed Lines]",
          "1785:  if(dlg->uas_tran)",
          "",
          "[Added Lines]",
          "1788:  if(dlg->uas_tran) {",
          "1791:   pto = get_to(dlg->uas_tran->uas.request);",
          "1792:   if (pto == NULL || pto->error != PARSE_OK) {",
          "1793:    LM_ERR(\"'To' header COULD NOT be parsed\\n\");",
          "1794:   } else {",
          "1795:    if (tmb.t_reply_with_body(dlg->uas_tran, 408, &reply_text, 0, 0,",
          "1796:     &pto->tag_value) < 0)",
          "1797:     LM_ERR(\"Failed to send 408 reply\\n\");",
          "1798:   }",
          "1799:  }",
          "1801:  if (dlg->update_tran) {",
          "1802:   tmb.unref_cell(dlg->update_tran);",
          "1804:   pto = get_to(dlg->update_tran->uas.request);",
          "1805:   if (pto == NULL || pto->error != PARSE_OK) {",
          "1806:    LM_ERR(\"'To' header COULD NOT be parsed\\n\");",
          "1807:   } else {",
          "1808:    if (tmb.t_reply_with_body(dlg->update_tran, 408, &reply_text, 0, 0,",
          "1809:     &pto->tag_value) < 0)",
          "1810:     LM_ERR(\"Failed to send 408 reply\\n\");",
          "1811:   }",
          "1812:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "401c6069c6a3dc61bfe2c95ca949a0f95b710850",
      "candidate_info": {
        "commit_hash": "401c6069c6a3dc61bfe2c95ca949a0f95b710850",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/401c6069c6a3dc61bfe2c95ca949a0f95b710850",
        "files": [
          "modules/mi_script/mi_script.c"
        ],
        "message": "mi_script: fix previous commit\n\nThis is the commit that actually resolves the memory leak\n\nThanks go to @liviuc for reporting this\n\n(cherry picked from commit ad02392053f8fb79f74886ca67f536202e24f1cc)",
        "before_after_code_files": [
          "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c": [
          "File: modules/mi_script/mi_script.c -> modules/mi_script/mi_script.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "559:  } while (ret < 0 && (errno == EINTR || errno == EAGAIN));",
          "560:  if (ret < 0) {",
          "561:   LM_ERR(\"could not notify resume: %s\\n\", strerror(errno));",
          "562:  }",
          "563: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "562:   mi_script_async_job_free(job);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "35b29e618b1175618c61747591dcf87370056102",
      "candidate_info": {
        "commit_hash": "35b29e618b1175618c61747591dcf87370056102",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/35b29e618b1175618c61747591dcf87370056102",
        "files": [
          "modules/tls_wolfssl/wolfssl_conn_ops.c"
        ],
        "message": "tls_wolfssl: fix differing TLS version for write duplicate struct\n\nWhen using a range of supported TLS versions, the WOLFSSL write duplicate\nstructure uses the highest TLS version set for the context instead of the one\nactually negociated for the current session. This may lead to errors for TLS\nwrite or shutdown operations, for ciphers that are not supported in the\nTLS version used by the write dup structure.\n\nFixes #2729",
        "before_after_code_files": [
          "modules/tls_wolfssl/wolfssl_conn_ops.c||modules/tls_wolfssl/wolfssl_conn_ops.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/tls_wolfssl/wolfssl_conn_ops.c||modules/tls_wolfssl/wolfssl_conn_ops.c": [
          "File: modules/tls_wolfssl/wolfssl_conn_ops.c -> modules/tls_wolfssl/wolfssl_conn_ops.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "305: }",
          "307: int _wolfssl_tls_async_connect(struct tcp_connection *con, int fd,",
          "308:  int timeout, trace_dest t_dst)",
          "309: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "307: static inline void _wolfssl_enforce_max_version(struct tcp_connection *c)",
          "308: {",
          "309:  int r_vers, wr_vers;",
          "311:  r_vers = wolfSSL_version(_WOLFSSL_READ_SSL(c->extra_data));",
          "312:  wr_vers = wolfSSL_version(_WOLFSSL_WRITE_SSL(c->extra_data));",
          "313:  if (r_vers == wr_vers)",
          "314:   return;",
          "316:  switch(r_vers) {",
          "317:  case SSL2_VERSION:",
          "318:   LM_BUG(\"SSLv2 should not be supported\\n\");",
          "319:   break;",
          "320:  case SSL3_VERSION:",
          "321:   wolfSSL_set_options(_WOLFSSL_WRITE_SSL(c->extra_data),",
          "322:    WOLFSSL_OP_NO_TLSv1);",
          "323:  case TLS1_VERSION:",
          "324:   wolfSSL_set_options(_WOLFSSL_WRITE_SSL(c->extra_data),",
          "325:    WOLFSSL_OP_NO_TLSv1_1);",
          "326:  case TLS1_1_VERSION:",
          "327:   wolfSSL_set_options(_WOLFSSL_WRITE_SSL(c->extra_data),",
          "328:    WOLFSSL_OP_NO_TLSv1_2);",
          "329:  case TLS1_2_VERSION:",
          "330:   wolfSSL_set_options(_WOLFSSL_WRITE_SSL(c->extra_data),",
          "331:    WOLFSSL_OP_NO_TLSv1_3);",
          "332:  case TLS1_3_VERSION:",
          "333:   break;",
          "334:  }",
          "335: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "358:     return -1;",
          "359:    }",
          "361:    return 1;",
          "362:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "391:    _wolfssl_enforce_max_version(con);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "530:    return -1;",
          "531:   }",
          "533:   LM_DBG(\"new TLS connection from %s:%d using %s\\n\",",
          "534:    ip_addr2a(&c->rcv.src_ip), c->rcv.src_port,",
          "535:    wolfSSL_get_cipher_name(ssl));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "565:   _wolfssl_enforce_max_version(c);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "636:    return -1;",
          "637:   }",
          "639:   LM_DBG(\"new TLS connection to %s:%d using %s\\n\",",
          "640:    ip_addr2a(&c->rcv.src_ip), c->rcv.src_port,",
          "641:    wolfSSL_get_cipher_name(ssl));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "673:   _wolfssl_enforce_max_version(c);",
          "",
          "---------------"
        ]
      }
    }
  ]
}