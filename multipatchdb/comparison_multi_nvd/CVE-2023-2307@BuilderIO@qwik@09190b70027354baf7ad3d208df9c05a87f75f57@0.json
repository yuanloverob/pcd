{
  "cve_id": "CVE-2023-2307",
  "cve_desc": "Cross-Site Request Forgery (CSRF) in GitHub repository builderio/qwik prior to 0.104.0.\n\n",
  "repo": "BuilderIO/qwik",
  "patch_hash": "09190b70027354baf7ad3d208df9c05a87f75f57",
  "patch_info": {
    "commit_hash": "09190b70027354baf7ad3d208df9c05a87f75f57",
    "repo": "BuilderIO/qwik",
    "commit_url": "https://github.com/BuilderIO/qwik/pull/3862/commits/09190b70027354baf7ad3d208df9c05a87f75f57",
    "files": [
      "packages/qwik-city/middleware/node/http.ts",
      "packages/qwik-city/middleware/node/http.unit.ts"
    ],
    "message": "fix: relative protocol urls",
    "before_after_code_files": [
      "packages/qwik-city/middleware/node/http.ts||packages/qwik-city/middleware/node/http.ts",
      "packages/qwik-city/middleware/node/http.unit.ts||packages/qwik-city/middleware/node/http.unit.ts"
    ]
  },
  "patch_diff": {
    "packages/qwik-city/middleware/node/http.ts||packages/qwik-city/middleware/node/http.ts": [
      "File: packages/qwik-city/middleware/node/http.ts -> packages/qwik-city/middleware/node/http.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "21: export function getUrl(req: IncomingMessage) {",
      "22:   const origin = ORIGIN ?? getOrigin(req);",
      "24: }",
      "26: export async function fromNodeHttp(",
      "",
      "[Removed Lines]",
      "23:   return new URL((req as any).originalUrl || req.url || '/', origin);",
      "",
      "[Added Lines]",
      "23:   return normalizeUrl((req as any).originalUrl || req.url || '/', origin);",
      "24: }",
      "26: const DOUBLE_SLASH_REG = /\\/\\/|\\\\\\\\/g;",
      "28: export function normalizeUrl(url: string, base: string) {",
      "33:   return new URL(url.replace(DOUBLE_SLASH_REG, '/'), base);",
      "",
      "---------------"
    ],
    "packages/qwik-city/middleware/node/http.unit.ts||packages/qwik-city/middleware/node/http.unit.ts": [
      "File: packages/qwik-city/middleware/node/http.unit.ts -> packages/qwik-city/middleware/node/http.unit.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: import { test } from 'uvu';",
      "2: import { equal } from 'uvu/assert';",
      "3: import { normalizeUrl } from './http';",
      "5: [",
      "6:   {",
      "7:     url: '/',",
      "8:     base: 'https://qwik.dev',",
      "9:     expect: 'https://qwik.dev/',",
      "10:   },",
      "11:   {",
      "12:     url: '/attacker.com',",
      "13:     base: 'https://qwik.dev',",
      "14:     expect: 'https://qwik.dev/attacker.com',",
      "15:   },",
      "16:   {",
      "17:     url: '//attacker.com',",
      "18:     base: 'https://qwik.dev',",
      "19:     expect: 'https://qwik.dev/attacker.com',",
      "20:   },",
      "21:   {",
      "22:     url: '\\\\\\\\attacker.com',",
      "23:     base: 'https://qwik.dev',",
      "24:     expect: 'https://qwik.dev/attacker.com',",
      "25:   },",
      "26:   {",
      "27:     url: '/some-path//attacker.com',",
      "28:     base: 'https://qwik.dev',",
      "29:     expect: 'https://qwik.dev/some-path/attacker.com',",
      "30:   },",
      "31: ].forEach((t) => {",
      "32:   test(`normalizeUrl(${t.url}, ${t.base})`, () => {",
      "33:     equal(normalizeUrl(t.url, t.base).href, t.expect);",
      "34:   });",
      "35: });",
      "37: test.run();",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f434d335277418f5bd8dd90fae5cb089e1230cb8",
      "candidate_info": {
        "commit_hash": "f434d335277418f5bd8dd90fae5cb089e1230cb8",
        "repo": "BuilderIO/qwik",
        "commit_url": "https://github.com/BuilderIO/qwik/commit/f434d335277418f5bd8dd90fae5cb089e1230cb8",
        "files": [
          "packages/qwik-city/middleware/node/http.ts",
          "packages/qwik-city/middleware/node/http.unit.ts"
        ],
        "message": "fix: relative protocol urls (#3862)",
        "before_after_code_files": [
          "packages/qwik-city/middleware/node/http.ts||packages/qwik-city/middleware/node/http.ts",
          "packages/qwik-city/middleware/node/http.unit.ts||packages/qwik-city/middleware/node/http.unit.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/QwikDev/qwik/pull/3862"
        ],
        "olp_code_files": {
          "patch": [
            "packages/qwik-city/middleware/node/http.ts||packages/qwik-city/middleware/node/http.ts",
            "packages/qwik-city/middleware/node/http.unit.ts||packages/qwik-city/middleware/node/http.unit.ts"
          ],
          "candidate": [
            "packages/qwik-city/middleware/node/http.ts||packages/qwik-city/middleware/node/http.ts",
            "packages/qwik-city/middleware/node/http.unit.ts||packages/qwik-city/middleware/node/http.unit.ts"
          ]
        }
      },
      "candidate_diff": {
        "packages/qwik-city/middleware/node/http.ts||packages/qwik-city/middleware/node/http.ts": [
          "File: packages/qwik-city/middleware/node/http.ts -> packages/qwik-city/middleware/node/http.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: export function getUrl(req: IncomingMessage) {",
          "22:   const origin = ORIGIN ?? getOrigin(req);",
          "24: }",
          "26: export async function fromNodeHttp(",
          "",
          "[Removed Lines]",
          "23:   return new URL((req as any).originalUrl || req.url || '/', origin);",
          "",
          "[Added Lines]",
          "23:   return normalizeUrl((req as any).originalUrl || req.url || '/', origin);",
          "24: }",
          "26: const DOUBLE_SLASH_REG = /\\/\\/|\\\\\\\\/g;",
          "28: export function normalizeUrl(url: string, base: string) {",
          "33:   return new URL(url.replace(DOUBLE_SLASH_REG, '/'), base);",
          "",
          "---------------"
        ],
        "packages/qwik-city/middleware/node/http.unit.ts||packages/qwik-city/middleware/node/http.unit.ts": [
          "File: packages/qwik-city/middleware/node/http.unit.ts -> packages/qwik-city/middleware/node/http.unit.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { test } from 'uvu';",
          "2: import { equal } from 'uvu/assert';",
          "3: import { normalizeUrl } from './http';",
          "5: [",
          "6:   {",
          "7:     url: '/',",
          "8:     base: 'https://qwik.dev',",
          "9:     expect: 'https://qwik.dev/',",
          "10:   },",
          "11:   {",
          "12:     url: '/attacker.com',",
          "13:     base: 'https://qwik.dev',",
          "14:     expect: 'https://qwik.dev/attacker.com',",
          "15:   },",
          "16:   {",
          "17:     url: '//attacker.com',",
          "18:     base: 'https://qwik.dev',",
          "19:     expect: 'https://qwik.dev/attacker.com',",
          "20:   },",
          "21:   {",
          "22:     url: '\\\\\\\\attacker.com',",
          "23:     base: 'https://qwik.dev',",
          "24:     expect: 'https://qwik.dev/attacker.com',",
          "25:   },",
          "26:   {",
          "27:     url: '/some-path//attacker.com',",
          "28:     base: 'https://qwik.dev',",
          "29:     expect: 'https://qwik.dev/some-path/attacker.com',",
          "30:   },",
          "31: ].forEach((t) => {",
          "32:   test(`normalizeUrl(${t.url}, ${t.base})`, () => {",
          "33:     equal(normalizeUrl(t.url, t.base).href, t.expect);",
          "34:   });",
          "35: });",
          "37: test.run();",
          "",
          "---------------"
        ]
      }
    }
  ]
}