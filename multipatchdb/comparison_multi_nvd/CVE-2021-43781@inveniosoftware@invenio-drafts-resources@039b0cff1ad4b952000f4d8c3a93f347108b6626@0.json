{
  "cve_id": "CVE-2021-43781",
  "cve_desc": "Invenio-Drafts-Resources is a submission/deposit module for Invenio, a software framework for research data management. Invenio-Drafts-Resources prior to versions 0.13.7 and 0.14.6 does not properly check permissions when a record is published. The vulnerability is exploitable in a default installation of InvenioRDM. An authenticated a user is able via REST API calls to publish draft records of other users if they know the record identifier and the draft validates (e.g. all require fields filled out). An attacker is not able to modify the data in the record, and thus e.g. *cannot* change a record from restricted to public. The problem is patched in Invenio-Drafts-Resources v0.13.7 and 0.14.6, which is part of InvenioRDM v6.0.1 and InvenioRDM v7.0 respectively.",
  "repo": "inveniosoftware/invenio-drafts-resources",
  "patch_hash": "039b0cff1ad4b952000f4d8c3a93f347108b6626",
  "patch_info": {
    "commit_hash": "039b0cff1ad4b952000f4d8c3a93f347108b6626",
    "repo": "inveniosoftware/invenio-drafts-resources",
    "commit_url": "https://github.com/inveniosoftware/invenio-drafts-resources/commit/039b0cff1ad4b952000f4d8c3a93f347108b6626",
    "files": [
      "invenio_drafts_resources/services/records/service.py"
    ],
    "message": "security: fix missing permission check of publish\n\n* Invenio-Drafts-Resources does not properly check permissions when a\n  record is published. The vulnerability is exploitable in a default\n  installation of InvenioRDM. An authenticated a user is able via REST\n  API calls to publish draft records of other users if they know the\n  record identifier and the draft validates (e.g. all require fields\n  filled out). An attacker is not able to modify the data in the record,\n  and thus e.g. cannot change a record from restricted to public.",
    "before_after_code_files": [
      "invenio_drafts_resources/services/records/service.py||invenio_drafts_resources/services/records/service.py"
    ]
  },
  "patch_diff": {
    "invenio_drafts_resources/services/records/service.py||invenio_drafts_resources/services/records/service.py": [
      "File: invenio_drafts_resources/services/records/service.py -> invenio_drafts_resources/services/records/service.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "267:               into records)",
      "268:             - Create or update associated (published) record with data",
      "269:         \"\"\"",
      "272:         # Get the draft",
      "273:         draft = self.draft_cls.pid.resolve(id_, registered_only=False)",
      "275:         # Validate the draft strictly - since a draft can be saved with errors",
      "276:         # we do a strict validation here to make sure only valid drafts can be",
      "",
      "[Removed Lines]",
      "270:         self.require_permission(identity, \"publish\")",
      "",
      "[Added Lines]",
      "272:         self.require_permission(identity, \"publish\", record=draft)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5351b96fd6ce8130afdb82ed36f822331492f54e",
      "candidate_info": {
        "commit_hash": "5351b96fd6ce8130afdb82ed36f822331492f54e",
        "repo": "inveniosoftware/invenio-drafts-resources",
        "commit_url": "https://github.com/inveniosoftware/invenio-drafts-resources/commit/5351b96fd6ce8130afdb82ed36f822331492f54e",
        "files": [
          "invenio_drafts_resources/services/records/service.py"
        ],
        "message": "security: fix missing permission check of publish\n\n* Invenio-Drafts-Resources does not properly check permissions when a\n  record is published. The vulnerability is exploitable in a default\n  installation of InvenioRDM. An authenticated a user is able via REST\n  API calls to publish draft records of other users if they know the\n  record identifier and the draft validates (e.g. all require fields\n  filled out). An attacker is not able to modify the data in the record,\n  and thus e.g. cannot change a record from restricted to public.",
        "before_after_code_files": [
          "invenio_drafts_resources/services/records/service.py||invenio_drafts_resources/services/records/service.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "invenio_drafts_resources/services/records/service.py||invenio_drafts_resources/services/records/service.py"
          ],
          "candidate": [
            "invenio_drafts_resources/services/records/service.py||invenio_drafts_resources/services/records/service.py"
          ]
        }
      },
      "candidate_diff": {
        "invenio_drafts_resources/services/records/service.py||invenio_drafts_resources/services/records/service.py": [
          "File: invenio_drafts_resources/services/records/service.py -> invenio_drafts_resources/services/records/service.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "263:               into records)",
          "264:             - Create or update associated (published) record with data",
          "265:         \"\"\"",
          "268:         # Get the draft",
          "269:         draft = self.draft_cls.pid.resolve(id_, registered_only=False)",
          "271:         # Validate the draft strictly - since a draft can be saved with errors",
          "272:         # we do a strict validation here to make sure only valid drafts can be",
          "",
          "[Removed Lines]",
          "266:         self.require_permission(identity, \"publish\")",
          "",
          "[Added Lines]",
          "268:         self.require_permission(identity, \"publish\", record=draft)",
          "",
          "---------------"
        ]
      }
    }
  ]
}