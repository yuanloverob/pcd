{
  "cve_id": "CVE-2023-34238",
  "cve_desc": "Gatsby is a free and open source framework based on React. The Gatsby framework prior to versions 4.25.7 and 5.9.1 contain a Local File Inclusion vulnerability in the `__file-code-frame` and `__original-stack-frame` paths, exposed when running the Gatsby develop server (`gatsby develop`). Any file in scope of the development server could potentially be exposed. It should be noted that by default `gatsby develop` is only accessible via the localhost `127.0.0.1`, and one would need to intentionally expose the server to other interfaces to exploit this vulnerability by using server options such as `--host 0.0.0.0`, `-H 0.0.0.0`, or the `GATSBY_HOST=0.0.0.0` environment variable. A patch has been introduced in `gatsby@5.9.1` and `gatsby@4.25.7` which mitigates the issue. Users are advised to upgrade. Users unable to upgrade should avoid exposing their development server to the internet.",
  "repo": "gatsbyjs/gatsby",
  "patch_hash": "ae5a654eb346b2e7a9d341b809b2f82d34c0f17c",
  "patch_info": {
    "commit_hash": "ae5a654eb346b2e7a9d341b809b2f82d34c0f17c",
    "repo": "gatsbyjs/gatsby",
    "commit_url": "https://github.com/gatsbyjs/gatsby/commit/ae5a654eb346b2e7a9d341b809b2f82d34c0f17c",
    "files": [
      "e2e-tests/development-runtime/SHOULD_NOT_SERVE",
      "e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js",
      "packages/gatsby/src/commands/build-html.ts",
      "packages/gatsby/src/utils/start-server.ts",
      "packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts"
    ],
    "message": "fix(gatsby): don't serve codeframes for files outside of compilation (#38059) (#38062)\n\n* test: add test case for overlay handlers\n\n* fix: don't serve codeframes for files outside of compilation\n\n(cherry picked from commit ed5855e511ce00c765525c687f36d1be177c22f2)\n\nCo-authored-by: Michal Piechowiak <misiek.piechowiak@gmail.com>",
    "before_after_code_files": [
      "e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js||e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js",
      "packages/gatsby/src/commands/build-html.ts||packages/gatsby/src/commands/build-html.ts",
      "packages/gatsby/src/utils/start-server.ts||packages/gatsby/src/utils/start-server.ts",
      "packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts||packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts"
    ]
  },
  "patch_diff": {
    "e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js||e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js": [
      "File: e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js -> e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: const cwd = Cypress.config(`projectRoot`)",
      "3: describe(`overlay handlers don't serve unrelated files`, () => {",
      "4:   it(`__file-code-frame`, () => {",
      "5:     cy.request(",
      "6:       `__file-code-frame?filePath=${cwd}/SHOULD_NOT_SERVE&lineNumber=0`",
      "7:     ).should(response => {",
      "8:       expect(response.body.codeFrame).not.to.match(/CYPRESS-MARKER/)",
      "9:     })",
      "10:   })",
      "12:   it(`__original-stack-frame`, () => {",
      "13:     cy.request(",
      "14:       `__original-stack-frame?moduleId=${cwd}/SHOULD_NOT_SERVE&lineNumber=0&skipSourceMap=1`",
      "15:     ).should(response => {",
      "16:       expect(response.body.codeFrame).not.to.match(/CYPRESS-MARKER/)",
      "17:       expect(response.body.sourceContent).not.to.match(/CYPRESS-MARKER/)",
      "18:     })",
      "19:   })",
      "20: })",
      "",
      "---------------"
    ],
    "packages/gatsby/src/commands/build-html.ts||packages/gatsby/src/commands/build-html.ts": [
      "File: packages/gatsby/src/commands/build-html.ts -> packages/gatsby/src/commands/build-html.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "26: import { getPageMode } from \"../utils/page-mode\"",
      "27: import { extractUndefinedGlobal } from \"../utils/extract-undefined-global\"",
      "28: import { modifyPageDataForErrorMessage } from \"../utils/page-data\"",
      "30: type IActivity = any // TODO",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "29: import { setFilesFromDevelopHtmlCompilation } from \"../utils/webpack/utils/is-file-inside-compilations\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "218:     )",
      "219:   }",
      "222:   return {",
      "223:     rendererPath: `${directory}/${ROUTES_DIRECTORY}render-page.js`,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "222:   if (stage === `develop-html`) {",
      "223:     setFilesFromDevelopHtmlCompilation(stats.compilation)",
      "224:   }",
      "",
      "---------------"
    ],
    "packages/gatsby/src/utils/start-server.ts||packages/gatsby/src/utils/start-server.ts": [
      "File: packages/gatsby/src/utils/start-server.ts -> packages/gatsby/src/utils/start-server.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: import webpackHotMiddleware from \"@gatsbyjs/webpack-hot-middleware\"",
      "2: import webpackDevMiddleware from \"webpack-dev-middleware\"",
      "3: import got, { Method } from \"got\"",
      "5: import express from \"express\"",
      "6: import compression from \"compression\"",
      "7: import { createHandler as createGraphqlEndpointHandler } from \"graphql-http/lib/use/express\"",
      "",
      "[Removed Lines]",
      "4: import webpack from \"webpack\"",
      "",
      "[Added Lines]",
      "4: import webpack, { Compilation } from \"webpack\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "50: import { configureTrailingSlash } from \"./express-middlewares\"",
      "51: import type { Express } from \"express\"",
      "52: import { addImageRoutes } from \"gatsby-plugin-utils/polyfill-remote-file\"",
      "54: type ActivityTracker = any // TODO: Replace this with proper type once reporter is typed",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "53: import { isFileInsideCompilations } from \"./webpack/utils/is-file-inside-compilations\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "413:         store.getState().program.directory,",
      "414:         req.query.moduleId as string",
      "415:       )",
      "416:       try {",
      "417:         sourceContent = fs.readFileSync(absolutePath, `utf-8`)",
      "418:       } catch (e) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "418:       const compilation: Compilation =",
      "419:         res.locals?.webpack?.devMiddleware?.stats?.compilation",
      "420:       if (!compilation) {",
      "421:         res.json(emptyResponse)",
      "422:         return",
      "423:       }",
      "425:       if (!isFileInsideCompilations(absolutePath, compilation)) {",
      "426:         res.json(emptyResponse)",
      "427:         return",
      "428:       }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "540:       return",
      "541:     }",
      "545:     const codeFrame = codeFrameColumns(",
      "546:       sourceContent,",
      "",
      "[Removed Lines]",
      "543:     const sourceContent = await fs.readFile(filePath, `utf-8`)",
      "",
      "[Added Lines]",
      "557:     const absolutePath = path.resolve(",
      "558:       store.getState().program.directory,",
      "559:       filePath",
      "560:     )",
      "562:     const compilation: Compilation =",
      "563:       res.locals?.webpack?.devMiddleware?.stats?.compilation",
      "564:     if (!compilation) {",
      "565:       res.json(emptyResponse)",
      "566:       return",
      "567:     }",
      "569:     if (!isFileInsideCompilations(absolutePath, compilation)) {",
      "570:       res.json(emptyResponse)",
      "571:       return",
      "572:     }",
      "574:     const sourceContent = await fs.readFile(absolutePath, `utf-8`)",
      "",
      "---------------"
    ],
    "packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts||packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts": [
      "File: packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts -> packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: import { Compilation, NormalModule } from \"webpack\"",
      "3: const filesInsideDevelopHtmlCompilation = new Set<string>()",
      "5: function removeQueryParams(path: string): string {",
      "6:   return path.split(`?`)[0]",
      "7: }",
      "9: export function setFilesFromDevelopHtmlCompilation(",
      "10:   developHtmlCompilation: Compilation",
      "11: ): void {",
      "12:   filesInsideDevelopHtmlCompilation.clear()",
      "14:   for (const module of developHtmlCompilation.modules) {",
      "15:     if (module instanceof NormalModule && module.resource) {",
      "16:       filesInsideDevelopHtmlCompilation.add(removeQueryParams(module.resource))",
      "17:     }",
      "18:   }",
      "19: }",
      "25: export function isFileInsideCompilations(",
      "26:   absolutePath: string,",
      "27:   developBrowserCompilation: Compilation",
      "28: ): boolean {",
      "29:   if (filesInsideDevelopHtmlCompilation.has(absolutePath)) {",
      "30:     return true",
      "31:   }",
      "33:   for (const module of developBrowserCompilation.modules) {",
      "34:     if (module instanceof NormalModule && module.resource) {",
      "35:       if (absolutePath === removeQueryParams(module.resource)) {",
      "36:         return true",
      "37:       }",
      "38:     }",
      "39:   }",
      "41:   return false",
      "42: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "fc22f4ba3ad7ca5fb3592f38f4f0ca8ae60b4bf7",
      "candidate_info": {
        "commit_hash": "fc22f4ba3ad7ca5fb3592f38f4f0ca8ae60b4bf7",
        "repo": "gatsbyjs/gatsby",
        "commit_url": "https://github.com/gatsbyjs/gatsby/commit/fc22f4ba3ad7ca5fb3592f38f4f0ca8ae60b4bf7",
        "files": [
          "e2e-tests/development-runtime/SHOULD_NOT_SERVE",
          "e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js",
          "packages/gatsby/src/commands/build-html.ts",
          "packages/gatsby/src/utils/start-server.ts",
          "packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts"
        ],
        "message": "fix(gatsby): don't serve codeframes for files outside of compilation (#38059) (#38063)\n\n* test: add test case for overlay handlers\n\n* fix: don't serve codeframes for files outside of compilation\n\n(cherry picked from commit ed5855e511ce00c765525c687f36d1be177c22f2)\n\nCo-authored-by: Michal Piechowiak <misiek.piechowiak@gmail.com>",
        "before_after_code_files": [
          "e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js||e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js",
          "packages/gatsby/src/commands/build-html.ts||packages/gatsby/src/commands/build-html.ts",
          "packages/gatsby/src/utils/start-server.ts||packages/gatsby/src/utils/start-server.ts",
          "packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts||packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "olp_code_files": {
          "patch": [
            "e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js||e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js",
            "packages/gatsby/src/commands/build-html.ts||packages/gatsby/src/commands/build-html.ts",
            "packages/gatsby/src/utils/start-server.ts||packages/gatsby/src/utils/start-server.ts",
            "packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts||packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts"
          ],
          "candidate": [
            "e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js||e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js",
            "packages/gatsby/src/commands/build-html.ts||packages/gatsby/src/commands/build-html.ts",
            "packages/gatsby/src/utils/start-server.ts||packages/gatsby/src/utils/start-server.ts",
            "packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts||packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts"
          ]
        }
      },
      "candidate_diff": {
        "e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js||e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js": [
          "File: e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js -> e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: const cwd = Cypress.config(`projectRoot`)",
          "3: describe(`overlay handlers don't serve unrelated files`, () => {",
          "4:   it(`__file-code-frame`, () => {",
          "5:     cy.request(",
          "6:       `__file-code-frame?filePath=${cwd}/SHOULD_NOT_SERVE&lineNumber=0`",
          "7:     ).should(response => {",
          "8:       expect(response.body.codeFrame).not.to.match(/CYPRESS-MARKER/)",
          "9:     })",
          "10:   })",
          "11: })",
          "",
          "---------------"
        ],
        "packages/gatsby/src/commands/build-html.ts||packages/gatsby/src/commands/build-html.ts": [
          "File: packages/gatsby/src/commands/build-html.ts -> packages/gatsby/src/commands/build-html.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: import { IPageDataWithQueryResult } from \"../utils/page-data\"",
          "22: import type { GatsbyWorkerPool } from \"../utils/worker/pool\"",
          "23: type IActivity = any // TODO",
          "25: const isPreview = process.env.GATSBY_IS_PREVIEW === `true`",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: import { setFilesFromDevelopHtmlCompilation } from \"../utils/webpack/utils/is-file-inside-compilations\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "211:     )",
          "212:   }",
          "215:   return {",
          "216:     rendererPath: `${directory}/${ROUTES_DIRECTORY}render-page.js`,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "216:   if (stage === `develop-html`) {",
          "217:     setFilesFromDevelopHtmlCompilation(stats.compilation)",
          "218:   }",
          "",
          "---------------"
        ],
        "packages/gatsby/src/utils/start-server.ts||packages/gatsby/src/utils/start-server.ts": [
          "File: packages/gatsby/src/utils/start-server.ts -> packages/gatsby/src/utils/start-server.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import webpackHotMiddleware from \"@gatsbyjs/webpack-hot-middleware\"",
          "2: import webpackDevMiddleware from \"webpack-dev-middleware\"",
          "3: import got, { Method } from \"got\"",
          "5: import express from \"express\"",
          "6: import compression from \"compression\"",
          "7: import { graphqlHTTP, OptionsData } from \"express-graphql\"",
          "",
          "[Removed Lines]",
          "4: import webpack from \"webpack\"",
          "",
          "[Added Lines]",
          "4: import webpack, { Compilation } from \"webpack\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55: import { configureTrailingSlash } from \"./express-middlewares\"",
          "56: import type { Express } from \"express\"",
          "57: import { addImageRoutes } from \"gatsby-plugin-utils/polyfill-remote-file\"",
          "59: type ActivityTracker = any // TODO: Replace this with proper type once reporter is typed",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58: import { isFileInsideCompilations } from \"./webpack/utils/is-file-inside-compilations\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "502:       return",
          "503:     }",
          "507:     const codeFrame = codeFrameColumns(",
          "508:       sourceContent,",
          "",
          "[Removed Lines]",
          "505:     const sourceContent = await fs.readFile(filePath, `utf-8`)",
          "",
          "[Added Lines]",
          "506:     const absolutePath = path.resolve(",
          "507:       store.getState().program.directory,",
          "508:       filePath",
          "509:     )",
          "511:     const compilation: Compilation =",
          "512:       res.locals?.webpack?.devMiddleware?.stats?.compilation",
          "513:     if (!compilation) {",
          "514:       res.json(emptyResponse)",
          "515:       return",
          "516:     }",
          "518:     if (!isFileInsideCompilations(absolutePath, compilation)) {",
          "519:       res.json(emptyResponse)",
          "520:       return",
          "521:     }",
          "523:     const sourceContent = await fs.readFile(absolutePath, `utf-8`)",
          "",
          "---------------"
        ],
        "packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts||packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts": [
          "File: packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts -> packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { Compilation, NormalModule } from \"webpack\"",
          "3: const filesInsideDevelopHtmlCompilation = new Set<string>()",
          "5: function removeQueryParams(path: string): string {",
          "6:   return path.split(`?`)[0]",
          "7: }",
          "9: export function setFilesFromDevelopHtmlCompilation(",
          "10:   developHtmlCompilation: Compilation",
          "11: ): void {",
          "12:   filesInsideDevelopHtmlCompilation.clear()",
          "14:   for (const module of developHtmlCompilation.modules) {",
          "15:     if (module instanceof NormalModule && module.resource) {",
          "16:       filesInsideDevelopHtmlCompilation.add(removeQueryParams(module.resource))",
          "17:     }",
          "18:   }",
          "19: }",
          "25: export function isFileInsideCompilations(",
          "26:   absolutePath: string,",
          "27:   developBrowserCompilation: Compilation",
          "28: ): boolean {",
          "29:   if (filesInsideDevelopHtmlCompilation.has(absolutePath)) {",
          "30:     return true",
          "31:   }",
          "33:   for (const module of developBrowserCompilation.modules) {",
          "34:     if (module instanceof NormalModule && module.resource) {",
          "35:       if (absolutePath === removeQueryParams(module.resource)) {",
          "36:         return true",
          "37:       }",
          "38:     }",
          "39:   }",
          "41:   return false",
          "42: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed5855e511ce00c765525c687f36d1be177c22f2",
      "candidate_info": {
        "commit_hash": "ed5855e511ce00c765525c687f36d1be177c22f2",
        "repo": "gatsbyjs/gatsby",
        "commit_url": "https://github.com/gatsbyjs/gatsby/commit/ed5855e511ce00c765525c687f36d1be177c22f2",
        "files": [
          "e2e-tests/development-runtime/SHOULD_NOT_SERVE",
          "e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js",
          "packages/gatsby/src/commands/build-html.ts",
          "packages/gatsby/src/utils/start-server.ts",
          "packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts"
        ],
        "message": "fix(gatsby): don't serve codeframes for files outside of compilation (#38059)\n\n* test: add test case for overlay handlers\n\n* fix: don't serve codeframes for files outside of compilation",
        "before_after_code_files": [
          "e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js||e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js",
          "packages/gatsby/src/commands/build-html.ts||packages/gatsby/src/commands/build-html.ts",
          "packages/gatsby/src/utils/start-server.ts||packages/gatsby/src/utils/start-server.ts",
          "packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts||packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "olp_code_files": {
          "patch": [
            "e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js||e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js",
            "packages/gatsby/src/commands/build-html.ts||packages/gatsby/src/commands/build-html.ts",
            "packages/gatsby/src/utils/start-server.ts||packages/gatsby/src/utils/start-server.ts",
            "packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts||packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts"
          ],
          "candidate": [
            "e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js||e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js",
            "packages/gatsby/src/commands/build-html.ts||packages/gatsby/src/commands/build-html.ts",
            "packages/gatsby/src/utils/start-server.ts||packages/gatsby/src/utils/start-server.ts",
            "packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts||packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts"
          ]
        }
      },
      "candidate_diff": {
        "e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js||e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js": [
          "File: e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js -> e2e-tests/development-runtime/cypress/integration/hot-reloading/error-handling/overlay-endpoints.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: const cwd = Cypress.config(`projectRoot`)",
          "3: describe(`overlay handlers don't serve unrelated files`, () => {",
          "4:   it(`__file-code-frame`, () => {",
          "5:     cy.request(",
          "6:       `__file-code-frame?filePath=${cwd}/SHOULD_NOT_SERVE&lineNumber=0`",
          "7:     ).should(response => {",
          "8:       expect(response.body.codeFrame).not.to.match(/CYPRESS-MARKER/)",
          "9:     })",
          "10:   })",
          "12:   it(`__original-stack-frame`, () => {",
          "13:     cy.request(",
          "14:       `__original-stack-frame?moduleId=${cwd}/SHOULD_NOT_SERVE&lineNumber=0&skipSourceMap=1`",
          "15:     ).should(response => {",
          "16:       expect(response.body.codeFrame).not.to.match(/CYPRESS-MARKER/)",
          "17:       expect(response.body.sourceContent).not.to.match(/CYPRESS-MARKER/)",
          "18:     })",
          "19:   })",
          "20: })",
          "",
          "---------------"
        ],
        "packages/gatsby/src/commands/build-html.ts||packages/gatsby/src/commands/build-html.ts": [
          "File: packages/gatsby/src/commands/build-html.ts -> packages/gatsby/src/commands/build-html.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "26: import { getPageMode } from \"../utils/page-mode\"",
          "27: import { extractUndefinedGlobal } from \"../utils/extract-undefined-global\"",
          "28: import { modifyPageDataForErrorMessage } from \"../utils/page-data\"",
          "30: type IActivity = any // TODO",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: import { setFilesFromDevelopHtmlCompilation } from \"../utils/webpack/utils/is-file-inside-compilations\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "218:     )",
          "219:   }",
          "222:   return {",
          "223:     rendererPath: `${directory}/${ROUTES_DIRECTORY}render-page.js`,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "222:   if (stage === `develop-html`) {",
          "223:     setFilesFromDevelopHtmlCompilation(stats.compilation)",
          "224:   }",
          "",
          "---------------"
        ],
        "packages/gatsby/src/utils/start-server.ts||packages/gatsby/src/utils/start-server.ts": [
          "File: packages/gatsby/src/utils/start-server.ts -> packages/gatsby/src/utils/start-server.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import webpackHotMiddleware from \"@gatsbyjs/webpack-hot-middleware\"",
          "2: import webpackDevMiddleware from \"webpack-dev-middleware\"",
          "3: import got, { Method } from \"got\"",
          "5: import express from \"express\"",
          "6: import compression from \"compression\"",
          "7: import { createHandler as createGraphqlEndpointHandler } from \"graphql-http/lib/use/express\"",
          "",
          "[Removed Lines]",
          "4: import webpack from \"webpack\"",
          "",
          "[Added Lines]",
          "4: import webpack, { Compilation } from \"webpack\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50: import { configureTrailingSlash } from \"./express-middlewares\"",
          "51: import type { Express } from \"express\"",
          "52: import { addImageRoutes } from \"gatsby-plugin-utils/polyfill-remote-file\"",
          "54: type ActivityTracker = any // TODO: Replace this with proper type once reporter is typed",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53: import { isFileInsideCompilations } from \"./webpack/utils/is-file-inside-compilations\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "413:         store.getState().program.directory,",
          "414:         req.query.moduleId as string",
          "415:       )",
          "416:       try {",
          "417:         sourceContent = fs.readFileSync(absolutePath, `utf-8`)",
          "418:       } catch (e) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "418:       const compilation: Compilation =",
          "419:         res.locals?.webpack?.devMiddleware?.stats?.compilation",
          "420:       if (!compilation) {",
          "421:         res.json(emptyResponse)",
          "422:         return",
          "423:       }",
          "425:       if (!isFileInsideCompilations(absolutePath, compilation)) {",
          "426:         res.json(emptyResponse)",
          "427:         return",
          "428:       }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "540:       return",
          "541:     }",
          "545:     const codeFrame = codeFrameColumns(",
          "546:       sourceContent,",
          "",
          "[Removed Lines]",
          "543:     const sourceContent = await fs.readFile(filePath, `utf-8`)",
          "",
          "[Added Lines]",
          "557:     const absolutePath = path.resolve(",
          "558:       store.getState().program.directory,",
          "559:       filePath",
          "560:     )",
          "562:     const compilation: Compilation =",
          "563:       res.locals?.webpack?.devMiddleware?.stats?.compilation",
          "564:     if (!compilation) {",
          "565:       res.json(emptyResponse)",
          "566:       return",
          "567:     }",
          "569:     if (!isFileInsideCompilations(absolutePath, compilation)) {",
          "570:       res.json(emptyResponse)",
          "571:       return",
          "572:     }",
          "574:     const sourceContent = await fs.readFile(absolutePath, `utf-8`)",
          "",
          "---------------"
        ],
        "packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts||packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts": [
          "File: packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts -> packages/gatsby/src/utils/webpack/utils/is-file-inside-compilations.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { Compilation, NormalModule } from \"webpack\"",
          "3: const filesInsideDevelopHtmlCompilation = new Set<string>()",
          "5: function removeQueryParams(path: string): string {",
          "6:   return path.split(`?`)[0]",
          "7: }",
          "9: export function setFilesFromDevelopHtmlCompilation(",
          "10:   developHtmlCompilation: Compilation",
          "11: ): void {",
          "12:   filesInsideDevelopHtmlCompilation.clear()",
          "14:   for (const module of developHtmlCompilation.modules) {",
          "15:     if (module instanceof NormalModule && module.resource) {",
          "16:       filesInsideDevelopHtmlCompilation.add(removeQueryParams(module.resource))",
          "17:     }",
          "18:   }",
          "19: }",
          "25: export function isFileInsideCompilations(",
          "26:   absolutePath: string,",
          "27:   developBrowserCompilation: Compilation",
          "28: ): boolean {",
          "29:   if (filesInsideDevelopHtmlCompilation.has(absolutePath)) {",
          "30:     return true",
          "31:   }",
          "33:   for (const module of developBrowserCompilation.modules) {",
          "34:     if (module instanceof NormalModule && module.resource) {",
          "35:       if (absolutePath === removeQueryParams(module.resource)) {",
          "36:         return true",
          "37:       }",
          "38:     }",
          "39:   }",
          "41:   return false",
          "42: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}