{
  "cve_id": "CVE-2018-1000073",
  "cve_desc": "RubyGems version Ruby 2.2 series: 2.2.9 and earlier, Ruby 2.3 series: 2.3.6 and earlier, Ruby 2.4 series: 2.4.3 and earlier, Ruby 2.5 series: 2.5.0 and earlier, prior to trunk revision 62422 contains a Directory Traversal vulnerability in install_location function of package.rb that can result in path traversal when writing to a symlinked basedir outside of the root. This vulnerability appears to have been fixed in 2.7.6.",
  "repo": "rubygems/rubygems",
  "patch_hash": "1b931fc03b819b9a0214be3eaca844ef534175e2",
  "patch_info": {
    "commit_hash": "1b931fc03b819b9a0214be3eaca844ef534175e2",
    "repo": "rubygems/rubygems",
    "commit_url": "https://github.com/rubygems/rubygems/commit/1b931fc03b819b9a0214be3eaca844ef534175e2",
    "files": [
      "lib/rubygems/package.rb"
    ],
    "message": "Non-working patch for deducing symlinked base-dirs",
    "before_after_code_files": [
      "lib/rubygems/package.rb||lib/rubygems/package.rb"
    ]
  },
  "patch_diff": {
    "lib/rubygems/package.rb||lib/rubygems/package.rb": [
      "File: lib/rubygems/package.rb -> lib/rubygems/package.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "421:     destination_dir = File.expand_path destination_dir",
      "423:     destination = File.join destination_dir, filename",
      "424:     destination = File.expand_path destination",
      "426:     raise Gem::Package::PathError.new(destination, destination_dir) unless",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "424:     destination = File.realpath destination if",
      "425:       File.respond_to? :realpath",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "666ef793cad42eed96f7aee1cdf77865db921099",
      "candidate_info": {
        "commit_hash": "666ef793cad42eed96f7aee1cdf77865db921099",
        "repo": "rubygems/rubygems",
        "commit_url": "https://github.com/rubygems/rubygems/commit/666ef793cad42eed96f7aee1cdf77865db921099",
        "files": [
          "lib/rubygems/package.rb",
          "test/rubygems/test_gem_package.rb"
        ],
        "message": "Implement a safe mkdir for package that verifies were inside the destination dir for all new directories ccreated",
        "before_after_code_files": [
          "lib/rubygems/package.rb||lib/rubygems/package.rb",
          "test/rubygems/test_gem_package.rb||test/rubygems/test_gem_package.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/rubygems/package.rb||lib/rubygems/package.rb"
          ],
          "candidate": [
            "lib/rubygems/package.rb||lib/rubygems/package.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/rubygems/package.rb||lib/rubygems/package.rb": [
          "File: lib/rubygems/package.rb -> lib/rubygems/package.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "378:             File.dirname destination",
          "379:           end",
          "383:         File.open destination, 'wb' do |out|",
          "384:           out.write entry.read",
          "",
          "[Removed Lines]",
          "381:         FileUtils.mkdir_p mkdir, mkdir_options",
          "",
          "[Added Lines]",
          "381:         mkdir_p_safe mkdir, mkdir_options, destination_dir, entry.full_name",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "416:     raise Gem::Package::PathError.new(filename, destination_dir) if",
          "417:       filename.start_with? '/'",
          "421:     destination_dir = File.expand_path destination_dir",
          "423:     destination = File.join destination_dir, filename",
          "426:     destination = File.expand_path destination",
          "428:     raise Gem::Package::PathError.new(destination, destination_dir) unless",
          "",
          "[Removed Lines]",
          "419:     destination_dir = File.realpath destination_dir if",
          "420:       File.respond_to? :realpath",
          "424:     destination = File.realpath destination if",
          "425:       File.respond_to? :realpath",
          "",
          "[Added Lines]",
          "419:     destination_dir = realpath destination_dir",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "432:     destination",
          "433:   end",
          "435:   ##",
          "436:   # Loads a Gem::Specification from the TarEntry +entry+",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "432:   def mkdir_p_safe mkdir, mkdir_options, destination_dir, file_name",
          "433:     destination_dir = realpath File.expand_path(destination_dir)",
          "434:     parts = mkdir.split(File::SEPARATOR)",
          "435:     parts.reduce do |path, basename|",
          "436:       path = realpath path  unless path == \"\"",
          "437:       path = File.expand_path(path + File::SEPARATOR + basename)",
          "438:       lstat = File.lstat path rescue nil",
          "439:       if !lstat || !lstat.directory?",
          "440:         unless path.start_with? destination_dir and (FileUtils.mkdir path, mkdir_options rescue false)",
          "441:           raise Gem::Package::PathError.new(file_name, destination_dir)",
          "442:         end",
          "443:       end",
          "444:       path",
          "445:     end",
          "446:   end",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "622:     raise Gem::Package::FormatError.new(e.message, entry.full_name)",
          "623:   end",
          "625: end",
          "627: require 'rubygems/package/digest_io'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "638:   if File.respond_to? :realpath",
          "639:     def realpath file",
          "640:       File.realpath file",
          "641:     end",
          "642:   else",
          "643:     def realpath file",
          "644:       file",
          "645:     end",
          "646:   end",
          "",
          "---------------"
        ],
        "test/rubygems/test_gem_package.rb||test/rubygems/test_gem_package.rb": [
          "File: test/rubygems/test_gem_package.rb -> test/rubygems/test_gem_package.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "476:      package.extract_tar_gz tgz_io, destination_subdir",
          "477:    end",
          "480:                  \"#{destination_subdir} is not allowed\", e.message)",
          "481:   end",
          "",
          "[Removed Lines]",
          "479:    assert_equal(\"installing into parent path ../outside.txt of \" +",
          "",
          "[Added Lines]",
          "479:    assert_equal(\"installing into parent path lib/link/outside.txt of \" +",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2114a58732aa7a661bfe49fc7c5497d87228a80d",
      "candidate_info": {
        "commit_hash": "2114a58732aa7a661bfe49fc7c5497d87228a80d",
        "repo": "rubygems/rubygems",
        "commit_url": "https://github.com/rubygems/rubygems/commit/2114a58732aa7a661bfe49fc7c5497d87228a80d",
        "files": [
          "lib/rubygems/package.rb"
        ],
        "message": "Use File.realpath directlry.\n\n  Workaround of File.realpath was removed from 84b8e4bd7cc48482989b34338f5092e9cb3e0cb5",
        "before_after_code_files": [
          "lib/rubygems/package.rb||lib/rubygems/package.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/rubygems/package.rb||lib/rubygems/package.rb"
          ],
          "candidate": [
            "lib/rubygems/package.rb||lib/rubygems/package.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/rubygems/package.rb||lib/rubygems/package.rb": [
          "File: lib/rubygems/package.rb -> lib/rubygems/package.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "439:     raise Gem::Package::PathError.new(filename, destination_dir) if",
          "440:       filename.start_with? '/'",
          "448:     raise Gem::Package::PathError.new(destination, destination_dir) unless",
          "449:       destination.start_with? destination_dir + '/'",
          "",
          "[Removed Lines]",
          "442:     destination_dir = realpath destination_dir",
          "443:     destination_dir = File.expand_path destination_dir",
          "445:     destination = File.join destination_dir, filename",
          "446:     destination = File.expand_path destination",
          "",
          "[Added Lines]",
          "442:     destination_dir = File.expand_path(File.realpath(destination_dir))",
          "443:     destination = File.expand_path(File.join(destination_dir, filename))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "461:   end",
          "463:   def mkdir_p_safe mkdir, mkdir_options, destination_dir, file_name",
          "465:     parts = mkdir.split(File::SEPARATOR)",
          "466:     parts.reduce do |path, basename|",
          "468:       path = File.expand_path(path + File::SEPARATOR + basename)",
          "469:       lstat = File.lstat path rescue nil",
          "470:       if !lstat || !lstat.directory?",
          "",
          "[Removed Lines]",
          "464:     destination_dir = realpath File.expand_path(destination_dir)",
          "467:       path = realpath path  unless path == \"\"",
          "",
          "[Added Lines]",
          "461:     destination_dir = File.realpath(File.expand_path(destination_dir))",
          "464:       path = File.realpath(path) unless path == \"\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "665:     raise Gem::Package::FormatError.new(e.message, entry.full_name)",
          "666:   end",
          "672: end",
          "674: require 'rubygems/package/digest_io'",
          "",
          "[Removed Lines]",
          "668:   def realpath file",
          "669:     File.realpath file",
          "670:   end",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}