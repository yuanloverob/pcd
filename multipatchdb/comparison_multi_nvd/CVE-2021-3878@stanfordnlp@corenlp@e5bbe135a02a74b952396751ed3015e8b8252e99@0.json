{
  "cve_id": "CVE-2021-3878",
  "cve_desc": "corenlp is vulnerable to Improper Restriction of XML External Entity Reference",
  "repo": "stanfordnlp/corenlp",
  "patch_hash": "e5bbe135a02a74b952396751ed3015e8b8252e99",
  "patch_info": {
    "commit_hash": "e5bbe135a02a74b952396751ed3015e8b8252e99",
    "repo": "stanfordnlp/corenlp",
    "commit_url": "https://github.com/stanfordnlp/corenlp/commit/e5bbe135a02a74b952396751ed3015e8b8252e99",
    "files": [
      "src/edu/stanford/nlp/ie/machinereading/common/DomReader.java",
      "src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java"
    ],
    "message": "Missed a couple possibly unsafe XMLUtils",
    "before_after_code_files": [
      "src/edu/stanford/nlp/ie/machinereading/common/DomReader.java||src/edu/stanford/nlp/ie/machinereading/common/DomReader.java",
      "src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java||src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java"
    ]
  },
  "patch_diff": {
    "src/edu/stanford/nlp/ie/machinereading/common/DomReader.java||src/edu/stanford/nlp/ie/machinereading/common/DomReader.java": [
      "File: src/edu/stanford/nlp/ie/machinereading/common/DomReader.java -> src/edu/stanford/nlp/ie/machinereading/common/DomReader.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "16: import org.w3c.dom.NodeList;",
      "17: import org.xml.sax.SAXException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "19: import edu.stanford.nlp.util.XMLUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "127:  public static Document readDocument(File f) throws IOException, SAXException, ParserConfigurationException {",
      "128:   Document document = null;",
      "",
      "[Removed Lines]",
      "130:   DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
      "",
      "[Added Lines]",
      "132:   DocumentBuilderFactory factory = XMLUtils.safeDocumentBuilderFactory();",
      "",
      "---------------"
    ],
    "src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java||src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java": [
      "File: src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java -> src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: import edu.stanford.nlp.semgraph.semgrex.ssurgeon.pred.*;",
      "28: import edu.stanford.nlp.semgraph.semgrex.SemgrexPattern;",
      "29: import edu.stanford.nlp.util.Generics;",
      "30: import edu.stanford.nlp.util.logging.Redwood;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "30: import edu.stanford.nlp.util.XMLUtils;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "398:   private static Document createPatternXMLDoc(List<SsurgeonPattern> patterns) {",
      "399:     try {",
      "401:       DocumentBuilder db = dbf.newDocumentBuilder();",
      "402:       Document domDoc = db.newDocument();",
      "403:       Element rootElt = domDoc.createElement(SsurgeonPattern.ELT_LIST_TAG);",
      "",
      "[Removed Lines]",
      "400:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
      "",
      "[Added Lines]",
      "401:       DocumentBuilderFactory dbf = XMLUtils.safeDocumentBuilderFactory();",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "452:   @SuppressWarnings(\"unchecked\")",
      "453:   public List<SsurgeonPattern> readFromFile(File file) throws Exception {",
      "454:     List<SsurgeonPattern> retList = new ArrayList<>();",
      "457:     if (VERBOSE)",
      "458:       System.out.println(\"Reading ssurgeon file=\"+file.getAbsolutePath());",
      "",
      "[Removed Lines]",
      "455:     Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(file);",
      "",
      "[Added Lines]",
      "456:     Document doc = XMLUtils.safeDocumentBuilderFactory().newDocumentBuilder().parse(file);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "99242668888622e652043cefe2de53544a07ebb8",
      "candidate_info": {
        "commit_hash": "99242668888622e652043cefe2de53544a07ebb8",
        "repo": "stanfordnlp/corenlp",
        "commit_url": "https://github.com/stanfordnlp/corenlp/commit/99242668888622e652043cefe2de53544a07ebb8",
        "files": [
          "src/edu/stanford/nlp/ie/machinereading/common/DomReader.java",
          "src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java"
        ],
        "message": "Missed a couple possibly unsafe XMLUtils",
        "before_after_code_files": [
          "src/edu/stanford/nlp/ie/machinereading/common/DomReader.java||src/edu/stanford/nlp/ie/machinereading/common/DomReader.java",
          "src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java||src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/edu/stanford/nlp/ie/machinereading/common/DomReader.java||src/edu/stanford/nlp/ie/machinereading/common/DomReader.java",
            "src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java||src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java"
          ],
          "candidate": [
            "src/edu/stanford/nlp/ie/machinereading/common/DomReader.java||src/edu/stanford/nlp/ie/machinereading/common/DomReader.java",
            "src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java||src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java"
          ]
        }
      },
      "candidate_diff": {
        "src/edu/stanford/nlp/ie/machinereading/common/DomReader.java||src/edu/stanford/nlp/ie/machinereading/common/DomReader.java": [
          "File: src/edu/stanford/nlp/ie/machinereading/common/DomReader.java -> src/edu/stanford/nlp/ie/machinereading/common/DomReader.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: import org.w3c.dom.NodeList;",
          "17: import org.xml.sax.SAXException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: import edu.stanford.nlp.util.XMLUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127:  public static Document readDocument(File f) throws IOException, SAXException, ParserConfigurationException {",
          "128:   Document document = null;",
          "",
          "[Removed Lines]",
          "130:   DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "132:   DocumentBuilderFactory factory = XMLUtils.safeDocumentBuilderFactory();",
          "",
          "---------------"
        ],
        "src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java||src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java": [
          "File: src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java -> src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: import edu.stanford.nlp.semgraph.semgrex.ssurgeon.pred.*;",
          "28: import edu.stanford.nlp.semgraph.semgrex.SemgrexPattern;",
          "29: import edu.stanford.nlp.util.Generics;",
          "30: import edu.stanford.nlp.util.logging.Redwood;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: import edu.stanford.nlp.util.XMLUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "398:   private static Document createPatternXMLDoc(List<SsurgeonPattern> patterns) {",
          "399:     try {",
          "401:       DocumentBuilder db = dbf.newDocumentBuilder();",
          "402:       Document domDoc = db.newDocument();",
          "403:       Element rootElt = domDoc.createElement(SsurgeonPattern.ELT_LIST_TAG);",
          "",
          "[Removed Lines]",
          "400:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "401:       DocumentBuilderFactory dbf = XMLUtils.safeDocumentBuilderFactory();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "452:   @SuppressWarnings(\"unchecked\")",
          "453:   public List<SsurgeonPattern> readFromFile(File file) throws Exception {",
          "454:     List<SsurgeonPattern> retList = new ArrayList<>();",
          "457:     if (VERBOSE)",
          "458:       System.out.println(\"Reading ssurgeon file=\"+file.getAbsolutePath());",
          "",
          "[Removed Lines]",
          "455:     Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(file);",
          "",
          "[Added Lines]",
          "456:     Document doc = XMLUtils.safeDocumentBuilderFactory().newDocumentBuilder().parse(file);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "79774c694377c4cf0edbd2b1d1875e705c3e8ba8",
      "candidate_info": {
        "commit_hash": "79774c694377c4cf0edbd2b1d1875e705c3e8ba8",
        "repo": "stanfordnlp/corenlp",
        "commit_url": "https://github.com/stanfordnlp/corenlp/commit/79774c694377c4cf0edbd2b1d1875e705c3e8ba8",
        "files": [
          "src/edu/stanford/nlp/ie/machinereading/common/DomReader.java",
          "src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java"
        ],
        "message": "Missed a couple possibly unsafe XMLUtils",
        "before_after_code_files": [
          "src/edu/stanford/nlp/ie/machinereading/common/DomReader.java||src/edu/stanford/nlp/ie/machinereading/common/DomReader.java",
          "src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java||src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/edu/stanford/nlp/ie/machinereading/common/DomReader.java||src/edu/stanford/nlp/ie/machinereading/common/DomReader.java",
            "src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java||src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java"
          ],
          "candidate": [
            "src/edu/stanford/nlp/ie/machinereading/common/DomReader.java||src/edu/stanford/nlp/ie/machinereading/common/DomReader.java",
            "src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java||src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java"
          ]
        }
      },
      "candidate_diff": {
        "src/edu/stanford/nlp/ie/machinereading/common/DomReader.java||src/edu/stanford/nlp/ie/machinereading/common/DomReader.java": [
          "File: src/edu/stanford/nlp/ie/machinereading/common/DomReader.java -> src/edu/stanford/nlp/ie/machinereading/common/DomReader.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: import org.w3c.dom.NodeList;",
          "17: import org.xml.sax.SAXException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: import edu.stanford.nlp.util.XMLUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "127:  public static Document readDocument(File f) throws IOException, SAXException, ParserConfigurationException {",
          "128:   Document document = null;",
          "",
          "[Removed Lines]",
          "130:   DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "132:   DocumentBuilderFactory factory = XMLUtils.safeDocumentBuilderFactory();",
          "",
          "---------------"
        ],
        "src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java||src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java": [
          "File: src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java -> src/edu/stanford/nlp/semgraph/semgrex/ssurgeon/Ssurgeon.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: import edu.stanford.nlp.semgraph.semgrex.ssurgeon.pred.*;",
          "28: import edu.stanford.nlp.semgraph.semgrex.SemgrexPattern;",
          "29: import edu.stanford.nlp.util.Generics;",
          "30: import edu.stanford.nlp.util.logging.Redwood;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: import edu.stanford.nlp.util.XMLUtils;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "398:   private static Document createPatternXMLDoc(List<SsurgeonPattern> patterns) {",
          "399:     try {",
          "401:       DocumentBuilder db = dbf.newDocumentBuilder();",
          "402:       Document domDoc = db.newDocument();",
          "403:       Element rootElt = domDoc.createElement(SsurgeonPattern.ELT_LIST_TAG);",
          "",
          "[Removed Lines]",
          "400:       DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();",
          "",
          "[Added Lines]",
          "401:       DocumentBuilderFactory dbf = XMLUtils.safeDocumentBuilderFactory();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "452:   @SuppressWarnings(\"unchecked\")",
          "453:   public List<SsurgeonPattern> readFromFile(File file) throws Exception {",
          "454:     List<SsurgeonPattern> retList = new ArrayList<>();",
          "457:     if (VERBOSE)",
          "458:       System.out.println(\"Reading ssurgeon file=\"+file.getAbsolutePath());",
          "",
          "[Removed Lines]",
          "455:     Document doc = DocumentBuilderFactory.newInstance().newDocumentBuilder().parse(file);",
          "",
          "[Added Lines]",
          "456:     Document doc = XMLUtils.safeDocumentBuilderFactory().newDocumentBuilder().parse(file);",
          "",
          "---------------"
        ]
      }
    }
  ]
}