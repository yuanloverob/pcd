{
  "cve_id": "CVE-2022-0260",
  "cve_desc": "Cross-site Scripting (XSS) - Stored in GitHub repository pimcore/pimcore prior to 10.2.7.",
  "repo": "pimcore/pimcore",
  "patch_hash": "3125d5f0c04cfb5835857ca9416f0bb143130a2f",
  "patch_info": {
    "commit_hash": "3125d5f0c04cfb5835857ca9416f0bb143130a2f",
    "repo": "pimcore/pimcore",
    "commit_url": "https://github.com/pimcore/pimcore/commit/3125d5f0c04cfb5835857ca9416f0bb143130a2f",
    "files": [
      "bundles/AdminBundle/Controller/Admin/TargetingController.php"
    ],
    "message": "[Targeting] Escape/validate names of rules properly",
    "before_after_code_files": [
      "bundles/AdminBundle/Controller/Admin/TargetingController.php||bundles/AdminBundle/Controller/Admin/TargetingController.php"
    ]
  },
  "patch_diff": {
    "bundles/AdminBundle/Controller/Admin/TargetingController.php||bundles/AdminBundle/Controller/Admin/TargetingController.php": [
      "File: bundles/AdminBundle/Controller/Admin/TargetingController.php -> bundles/AdminBundle/Controller/Admin/TargetingController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "37: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "40:     private function correctName(string $name): string",
      "41:     {",
      "42:         return preg_replace('/[#\\?\\*\\:\\\\\\\\<\\>\\|\"%&@=;\\+]/', '-', $name);",
      "43:     }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "55:         foreach ($list->load() as $target) {",
      "56:             $targets[] = [",
      "57:                 'id' => $target->getId(),",
      "59:                 'active' => $target->getActive(),",
      "60:                 'qtip' => 'ID: ' . $target->getId(),",
      "61:             ];",
      "",
      "[Removed Lines]",
      "58:                 'text' => $target->getName(),",
      "",
      "[Added Lines]",
      "63:                 'text' => htmlspecialchars($target->getName()),",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "74:     public function ruleAddAction(Request $request)",
      "75:     {",
      "76:         $target = new Targeting\\Rule();",
      "78:         $target->save();",
      "80:         return $this->adminJson(['success' => true, 'id' => $target->getId()]);",
      "",
      "[Removed Lines]",
      "77:         $target->setName($request->get('name'));",
      "",
      "[Added Lines]",
      "82:         $target->setName($this->correctName($request->get('name')));",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "130:         $target = Targeting\\Rule::getById($request->get('id'));",
      "131:         $target->setValues($data['settings']);",
      "132:         $target->setConditions($data['conditions']);",
      "133:         $target->setActions($data['actions']);",
      "134:         $target->save();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "137:         $target->setName($this->correctName($target->getName()));",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "208:         foreach ($list->load() as $targetGroup) {",
      "209:             $targetGroups[] = [",
      "210:                 'id' => $targetGroup->getId(),",
      "212:                 'active' => $targetGroup->getActive(),",
      "213:                 'qtip' => $targetGroup->getId(),",
      "214:             ];",
      "",
      "[Removed Lines]",
      "211:                 'text' => $targetGroup->getName(),",
      "",
      "[Added Lines]",
      "217:                 'text' => htmlspecialchars($targetGroup->getName()),",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "230:     {",
      "232:         $targetGroup = new TargetGroup();",
      "234:         $targetGroup->save();",
      "236:         $event = new TargetGroupEvent($targetGroup);",
      "",
      "[Removed Lines]",
      "233:         $targetGroup->setName($request->get('name'));",
      "",
      "[Added Lines]",
      "239:         $targetGroup->setName($this->correctName($request->get('name')));",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "301:         $targetGroup = TargetGroup::getById($request->get('id'));",
      "302:         $targetGroup->setValues($data['settings']);",
      "303:         $targetGroup->save();",
      "305:         $event = new TargetGroupEvent($targetGroup);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "309:         $targetGroup->setName($this->correctName($targetGroup->getName()));",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "665976327ad3c2c87efa2a5a64d696032c0a8109",
      "candidate_info": {
        "commit_hash": "665976327ad3c2c87efa2a5a64d696032c0a8109",
        "repo": "pimcore/pimcore",
        "commit_url": "https://github.com/pimcore/pimcore/commit/665976327ad3c2c87efa2a5a64d696032c0a8109",
        "files": [
          "bundles/AdminBundle/Controller/Admin/TargetingController.php"
        ],
        "message": "[Targeting] Escape/validate names of rules properly (#11205)\n\n* [Targeting] Escape/validate names of rules properly\n\n* Update bundles/AdminBundle/Controller/Admin/TargetingController.php\n\nCo-authored-by: Jacob Dreesen <j.dreesen@neusta.de>\n\nCo-authored-by: Jacob Dreesen <j.dreesen@neusta.de>",
        "before_after_code_files": [
          "bundles/AdminBundle/Controller/Admin/TargetingController.php||bundles/AdminBundle/Controller/Admin/TargetingController.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/pimcore/pimcore/pull/11205"
        ],
        "olp_code_files": {
          "patch": [
            "bundles/AdminBundle/Controller/Admin/TargetingController.php||bundles/AdminBundle/Controller/Admin/TargetingController.php"
          ],
          "candidate": [
            "bundles/AdminBundle/Controller/Admin/TargetingController.php||bundles/AdminBundle/Controller/Admin/TargetingController.php"
          ]
        }
      },
      "candidate_diff": {
        "bundles/AdminBundle/Controller/Admin/TargetingController.php||bundles/AdminBundle/Controller/Admin/TargetingController.php": [
          "File: bundles/AdminBundle/Controller/Admin/TargetingController.php -> bundles/AdminBundle/Controller/Admin/TargetingController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "37: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40:     private function correctName(string $name): string",
          "41:     {",
          "42:         return preg_replace('/[#?*:\\\\\\\\<>|\"%&@=;+]/', '-', $name);",
          "43:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:         foreach ($list->load() as $target) {",
          "56:             $targets[] = [",
          "57:                 'id' => $target->getId(),",
          "59:                 'active' => $target->getActive(),",
          "60:                 'qtip' => 'ID: ' . $target->getId(),",
          "61:             ];",
          "",
          "[Removed Lines]",
          "58:                 'text' => $target->getName(),",
          "",
          "[Added Lines]",
          "63:                 'text' => htmlspecialchars($target->getName()),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "74:     public function ruleAddAction(Request $request)",
          "75:     {",
          "76:         $target = new Targeting\\Rule();",
          "78:         $target->save();",
          "80:         return $this->adminJson(['success' => true, 'id' => $target->getId()]);",
          "",
          "[Removed Lines]",
          "77:         $target->setName($request->get('name'));",
          "",
          "[Added Lines]",
          "82:         $target->setName($this->correctName($request->get('name')));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "130:         $target = Targeting\\Rule::getById($request->get('id'));",
          "131:         $target->setValues($data['settings']);",
          "132:         $target->setConditions($data['conditions']);",
          "133:         $target->setActions($data['actions']);",
          "134:         $target->save();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "137:         $target->setName($this->correctName($target->getName()));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "208:         foreach ($list->load() as $targetGroup) {",
          "209:             $targetGroups[] = [",
          "210:                 'id' => $targetGroup->getId(),",
          "212:                 'active' => $targetGroup->getActive(),",
          "213:                 'qtip' => $targetGroup->getId(),",
          "214:             ];",
          "",
          "[Removed Lines]",
          "211:                 'text' => $targetGroup->getName(),",
          "",
          "[Added Lines]",
          "217:                 'text' => htmlspecialchars($targetGroup->getName()),",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "230:     {",
          "232:         $targetGroup = new TargetGroup();",
          "234:         $targetGroup->save();",
          "236:         $event = new TargetGroupEvent($targetGroup);",
          "",
          "[Removed Lines]",
          "233:         $targetGroup->setName($request->get('name'));",
          "",
          "[Added Lines]",
          "239:         $targetGroup->setName($this->correctName($request->get('name')));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "301:         $targetGroup = TargetGroup::getById($request->get('id'));",
          "302:         $targetGroup->setValues($data['settings']);",
          "303:         $targetGroup->save();",
          "305:         $event = new TargetGroupEvent($targetGroup);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "309:         $targetGroup->setName($this->correctName($targetGroup->getName()));",
          "",
          "---------------"
        ]
      }
    }
  ]
}