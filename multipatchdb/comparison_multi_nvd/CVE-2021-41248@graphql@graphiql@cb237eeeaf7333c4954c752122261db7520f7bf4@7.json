{
  "cve_id": "CVE-2021-41248",
  "cve_desc": "GraphiQL is the reference implementation of this monorepo, GraphQL IDE, an official project under the GraphQL Foundation. All versions of graphiql older than graphiql@1.4.7 are vulnerable to compromised HTTP schema introspection responses or schema prop values with malicious GraphQL type names, exposing a dynamic XSS attack surface that can allow code injection on operation autocomplete. In order for the attack to take place, the user must load a vulnerable schema in graphiql. There are a number of ways that can occur. By default, the schema URL is not attacker-controllable in graphiql or in its suggested implementations or examples, leaving only very complex attack vectors. If a custom implementation of graphiql's fetcher allows the schema URL to be set dynamically, such as a URL query parameter like ?endpoint= in graphql-playground, or a database provided value, then this custom graphiql implementation is vulnerable to phishing attacks, and thus much more readily available, low or no privelege level xss attacks. The URLs could look like any generic looking graphql schema URL. It should be noted that desktop clients such as Altair, Insomnia, Postwoman, do not appear to be impacted by this. This vulnerability does not impact codemirror-graphql, monaco-graphql or other dependents, as it exists in onHasCompletion.ts in graphiql. It does impact all forks of graphiql, and every released version of graphiql.",
  "repo": "graphql/graphiql",
  "patch_hash": "cb237eeeaf7333c4954c752122261db7520f7bf4",
  "patch_info": {
    "commit_hash": "cb237eeeaf7333c4954c752122261db7520f7bf4",
    "repo": "graphql/graphiql",
    "commit_url": "https://github.com/graphql/graphiql/commit/cb237eeeaf7333c4954c752122261db7520f7bf4",
    "files": [
      "README.md",
      "SECURITY.md",
      "docs/security/2021-introspection-schema-xss.md",
      "packages/graphiql/README.md",
      "packages/graphiql/cypress/integration/init.spec.ts",
      "packages/graphiql/cypress/support/commands.ts",
      "packages/graphiql/package.json",
      "packages/graphiql/resources/renderExample.js",
      "packages/graphiql/src/components/DocExplorer.tsx",
      "packages/graphiql/src/components/GraphiQL.tsx",
      "packages/graphiql/src/utility/onHasCompletion.ts",
      "packages/graphiql/test/bad-schema.js",
      "packages/graphiql/test/beforeDevServer.js",
      "packages/graphiql/test/e2e-server.js",
      "yarn.lock"
    ],
    "message": "Merge pull request from GHSA-x4r7-m2q9-69c8\n\nThis change fixes an XSS vulnerability that has been present since the first\ncommit of GraphiQL when used with an untrusted GraphQL server. It applies three\nstrategies to fix via defense-in-depth: HTML escaping a string in a contexts\nthat uses innerHTML; validating incoming schemas with graphql-js validateSchema;\nand updating markdown-it to the latest version.\n\nSee docs/security/2021-introspection-schema-xss.md for more details.\n\nCo-authored-by: Rikki <rikki.schulte@gmail.com>",
    "before_after_code_files": [
      "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
      "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts",
      "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js",
      "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
      "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
      "packages/graphiql/src/utility/onHasCompletion.ts||packages/graphiql/src/utility/onHasCompletion.ts",
      "packages/graphiql/test/bad-schema.js||packages/graphiql/test/bad-schema.js",
      "packages/graphiql/test/beforeDevServer.js||packages/graphiql/test/beforeDevServer.js",
      "packages/graphiql/test/e2e-server.js||packages/graphiql/test/e2e-server.js",
      "yarn.lock||yarn.lock"
    ]
  },
  "patch_diff": {
    "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts": [
      "File: packages/graphiql/cypress/integration/init.spec.ts -> packages/graphiql/cypress/integration/init.spec.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:   it('Executes a GraphQL query over HTTP that has the expected result', () => {",
      "45:     cy.assertQueryResult({ query: testQuery }, mockSuccess);",
      "46:   });",
      "47: });",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "47:   it('Shows the expected error when the schema is invalid', () => {",
      "48:     cy.visit(`/?bad=true`);",
      "49:     cy.assertResult({",
      "50:       errors: [",
      "51:         {",
      "52:           message:",
      "53:             'Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"<img src=x onerror=alert(document.domain)>\" does not.',",
      "54:         },",
      "55:       ],",
      "56:     });",
      "57:   });",
      "",
      "---------------"
    ],
    "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts": [
      "File: packages/graphiql/cypress/support/commands.ts -> packages/graphiql/cypress/support/commands.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "19:   type MockResult =",
      "20:     | { data: any }",
      "21:     | { data: any; hasNext?: boolean }",
      "23:   interface Chainable<Subject = any> {",
      "",
      "[Removed Lines]",
      "22:     | { error: any[] };",
      "",
      "[Added Lines]",
      "22:     | { error: any[] }",
      "23:     | { errors: any[] };",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31:     visitWithOp(op: Op): Chainable<Element>;",
      "32:     clickPrettify(): Chainable<Element>;",
      "33:     assertHasValues(op: Op): Chainable<Element>;",
      "34:     assertQueryResult(",
      "35:       op: Op,",
      "36:       expectedResult: MockResult,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "35:     assertResult(result: MockResult): Chainable<Element>;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "91:     expect(value).to.deep.equal(JSON.stringify(mockSuccess, null, 2));",
      "92:   });",
      "93: });",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "97: Cypress.Commands.add('assertResult', (expectedResult, timeout = 200) => {",
      "98:   cy.wait(timeout);",
      "99:   cy.window().then(w => {",
      "101:     const value = w.g.resultComponent.viewer.getValue();",
      "102:     expect(value).to.deep.equal(JSON.stringify(expectedResult, null, 2));",
      "103:   });",
      "104: });",
      "",
      "---------------"
    ],
    "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js": [
      "File: packages/graphiql/resources/renderExample.js -> packages/graphiql/resources/renderExample.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "91:   history.replaceState(null, null, newSearch);",
      "92: }",
      "",
      "[Removed Lines]",
      "94: const isDev = window.location.hostname.match(/localhost$/);",
      "95: const api = isDev ? '/graphql' : '/.netlify/functions/schema-demo';",
      "",
      "[Added Lines]",
      "94: function getSchemaUrl() {",
      "95:   const isDev = window.location.hostname.match(/localhost$/);",
      "97:   if (isDev) {",
      "99:     if (parameters.bad && parameters.bad === 'true') {",
      "100:       return '/bad/graphql';",
      "101:     } else {",
      "102:       return '/graphql';",
      "103:     }",
      "104:   }",
      "105:   return '/.netlify/functions/schema-demo';",
      "106: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "101: ReactDOM.render(",
      "102:   React.createElement(GraphiQL, {",
      "104:     query: parameters.query,",
      "105:     variables: parameters.variables,",
      "106:     headers: parameters.headers,",
      "",
      "[Removed Lines]",
      "103:     fetcher: GraphiQL.createFetcher({ url: api }),",
      "",
      "[Added Lines]",
      "114:     fetcher: GraphiQL.createFetcher({ url: getSchemaUrl() }),",
      "",
      "---------------"
    ],
    "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx": [
      "File: packages/graphiql/src/components/DocExplorer.tsx -> packages/graphiql/src/components/DocExplorer.tsx",
      "--- Hunk 1 ---",
      "[Context before]",
      "8: import React from 'react';",
      "10: import { FieldType } from './DocExplorer/types';",
      "12: import FieldDoc from './DocExplorer/FieldDoc';",
      "",
      "[Removed Lines]",
      "9: import { GraphQLSchema, isType, GraphQLNamedType } from 'graphql';",
      "",
      "[Added Lines]",
      "9: import { GraphQLSchema, isType, GraphQLNamedType, GraphQLError } from 'graphql';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "30: type DocExplorerProps = {",
      "31:   schema?: GraphQLSchema | null;",
      "32: };",
      "34: type DocExplorerState = {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32:   schemaErrors?: readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "68:   ) {",
      "69:     return (",
      "70:       this.props.schema !== nextProps.schema ||",
      "72:     );",
      "73:   }",
      "75:   render() {",
      "77:     const navStack = this.state.navStack;",
      "78:     const navItem = navStack[navStack.length - 1];",
      "80:     let content;",
      "83:       content = (",
      "84:         <div className=\"spinner-container\">",
      "",
      "[Removed Lines]",
      "71:       this.state.navStack !== nextState.navStack",
      "76:     const { schema } = this.props;",
      "81:     if (schema === undefined) {",
      "",
      "[Added Lines]",
      "72:       this.state.navStack !== nextState.navStack ||",
      "73:       this.props.schemaErrors !== nextProps.schemaErrors",
      "78:     const { schema, schemaErrors } = this.props;",
      "83:     if (schemaErrors) {",
      "84:       content = (",
      "85:         <div className=\"error-container\">{'Error fetching schema'}</div>",
      "86:       );",
      "87:     } else if (schema === undefined) {",
      "",
      "---------------"
    ],
    "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
      "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
      "--- Hunk 1 ---",
      "[Context before]",
      "23:   ValidationRule,",
      "24:   FragmentDefinitionNode,",
      "25:   DocumentNode,",
      "26: } from 'graphql';",
      "27: import copyToClipboard from 'copy-to-clipboard';",
      "28: import { getFragmentDependenciesForAST } from 'graphql-language-service-utils';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26:   GraphQLError,",
      "27:   formatError as formatGraphQLError,",
      "28:   GraphQLFormattedError,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "66: } from '@graphiql/toolkit';",
      "67: import HistoryStore from '../utility/HistoryStore';",
      "69: const DEFAULT_DOC_EXPLORER_WIDTH = 350;",
      "71: const majorVersion = parseInt(React.version.slice(0, 2), 10);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "72: import { validateSchema } from 'graphql';",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "95:   additionalContent?: React.ReactNode;",
      "96: };",
      "98: export type GraphiQLProps = {",
      "99:   fetcher: Fetcher;",
      "100:   schema?: GraphQLSchema;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "103: export type GenericError =",
      "104:   | Error",
      "105:   | string",
      "106:   | readonly Error[]",
      "107:   | readonly string[]",
      "108:   | GraphQLError",
      "109:   | readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "121:   editorTheme?: string;",
      "122:   onToggleHistory?: (historyPaneOpen: boolean) => void;",
      "123:   ResultsTooltip?: typeof Component | FunctionComponent;",
      "124:   readOnly?: boolean;",
      "125:   docExplorerOpen?: boolean;",
      "126:   toolbar?: GraphiQLToolbarConfig;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "140:   dangerouslyAssumeSchemaIsValid?: boolean;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "143:   headerEditorEnabled: boolean;",
      "144:   shouldPersistHeaders: boolean;",
      "145:   historyPaneOpen: boolean;",
      "146:   docExplorerWidth: number;",
      "147:   isWaitingForResponse: boolean;",
      "148:   subscription?: Unsubscribable | null;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "163:   schemaErrors?: readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "152:   maxHistoryLength: number;",
      "153: };",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "173: const stringify = (obj: unknown): string => JSON.stringify(obj, null, 2);",
      "175: const formatSingleError = (error: Error): Error => ({",
      "176:   ...error,",
      "178:   message: error.message,",
      "179:   stack: error.stack,",
      "180: });",
      "182: type InputError = Error | GraphQLError | string;",
      "184: const handleSingleError = (",
      "185:   error: InputError,",
      "186: ): GraphQLFormattedError | Error | string => {",
      "187:   if (error instanceof GraphQLError) {",
      "188:     return formatGraphQLError(error);",
      "189:   }",
      "190:   if (error instanceof Error) {",
      "191:     return formatSingleError(error);",
      "192:   }",
      "193:   return error;",
      "194: };",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "166:     return JSON.stringify(result, null, 2);",
      "167:   }",
      "177:   _editorQueryID = 0;",
      "",
      "[Removed Lines]",
      "169:   static formatError(rawError: Error) {",
      "170:     const result = Array.isArray(rawError)",
      "171:       ? rawError.map(formatSingleError)",
      "172:       : formatSingleError(rawError);",
      "173:     return JSON.stringify(result, null, 2);",
      "174:   }",
      "",
      "[Added Lines]",
      "210:   static formatError = (error: GenericError): string => {",
      "211:     if (Array.isArray(error)) {",
      "212:       return stringify({",
      "213:         errors: error.map((e: InputError) => handleSingleError(e)),",
      "214:       });",
      "215:     }",
      "217:     return stringify({ errors: handleSingleError(error) });",
      "218:   };",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "266:     const headerEditorEnabled = props.headerEditorEnabled ?? false;",
      "267:     const shouldPersistHeaders = props.shouldPersistHeaders ?? false;",
      "270:     this.state = {",
      "272:       query,",
      "273:       variables: variables as string,",
      "274:       headers: headers as string,",
      "275:       operationName,",
      "276:       docExplorerOpen,",
      "278:       editorFlex: Number(this._storage.get('editorFlex')) || 1,",
      "279:       secondaryEditorOpen,",
      "280:       secondaryEditorHeight:",
      "",
      "[Removed Lines]",
      "271:       schema: props.schema,",
      "277:       response: props.response,",
      "",
      "[Added Lines]",
      "313:     let schema = props.schema;",
      "314:     let response = props.response;",
      "315:     let schemaErrors: readonly GraphQLError[] | undefined = undefined;",
      "316:     if (schema && !this.props.dangerouslyAssumeSchemaIsValid) {",
      "317:       const validationErrors = validateSchema(schema);",
      "318:       if (validationErrors && validationErrors.length > 0) {",
      "321:         response = GraphiQL.formatError(validationErrors);",
      "322:         schema = undefined;",
      "323:         schemaErrors = validationErrors;",
      "324:       }",
      "325:     }",
      "329:       schema,",
      "335:       schemaErrors,",
      "336:       response,",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "357:         nextQuery !== this.state.query ||",
      "358:         nextOperationName !== this.state.operationName)",
      "359:     ) {",
      "360:       const updatedQueryAttributes = this._updateQueryFacts(",
      "361:         nextQuery,",
      "362:         nextOperationName,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "419:       if (!this.props.dangerouslyAssumeSchemaIsValid) {",
      "420:         const validationErrors = validateSchema(nextSchema);",
      "421:         if (validationErrors && validationErrors.length > 0) {",
      "422:           this.handleSchemaErrors(validationErrors);",
      "423:           nextSchema = undefined;",
      "424:         }",
      "425:       }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "665:               ref={c => {",
      "666:                 this.docExplorerComponent = c;",
      "667:               }}",
      "668:               schema={this.state.schema}>",
      "669:               <button",
      "670:                 className=\"docExplorerHide\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "735:               schemaErrors={this.state.schemaErrors}",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "871:         }",
      "873:         if (typeof result !== 'string' && 'data' in result) {",
      "877:         } else {",
      "878:           const responseString =",
      "879:             typeof result === 'string' ? result : GraphiQL.formatResult(result);",
      "885:         }",
      "886:       })",
      "887:       .catch(error => {",
      "892:       });",
      "893:   }",
      "895:   private async _fetchQuery(",
      "896:     query: string,",
      "897:     variables: string,",
      "",
      "[Removed Lines]",
      "874:           const schema = buildClientSchema(result.data);",
      "875:           const queryFacts = getOperationFacts(schema, this.state.query);",
      "876:           this.safeSetState({ schema, ...queryFacts });",
      "880:           this.safeSetState({",
      "882:             schema: undefined,",
      "883:             response: responseString,",
      "884:           });",
      "888:         this.safeSetState({",
      "889:           schema: undefined,",
      "890:           response: error ? GraphiQL.formatError(error) : undefined,",
      "891:         });",
      "",
      "[Added Lines]",
      "942:           let schema: GraphQLSchema | undefined = buildClientSchema(",
      "943:             result.data,",
      "944:           );",
      "945:           if (!this.props.dangerouslyAssumeSchemaIsValid) {",
      "946:             const errors = validateSchema(schema);",
      "948:             if (errors && errors.length > 0) {",
      "949:               schema = undefined;",
      "950:               this.handleSchemaErrors(errors);",
      "951:             }",
      "952:           }",
      "953:           if (schema) {",
      "954:             const queryFacts = getOperationFacts(schema, this.state.query);",
      "955:             this.safeSetState({",
      "956:               schema,",
      "957:               ...queryFacts,",
      "958:               schemaErrors: undefined,",
      "959:             });",
      "960:           }",
      "965:           this.handleSchemaErrors([responseString]);",
      "969:         this.handleSchemaErrors([error]);",
      "973:   private handleSchemaErrors(",
      "974:     schemaErrors: readonly GraphQLError[] | readonly string[],",
      "975:   ) {",
      "976:     this.safeSetState({",
      "977:       response: schemaErrors ? GraphiQL.formatError(schemaErrors) : undefined,",
      "978:       schema: undefined,",
      "979:       schemaErrors,",
      "980:     });",
      "981:   }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "908:       jsonVariables =",
      "909:         variables && variables.trim() !== '' ? JSON.parse(variables) : null;",
      "910:     } catch (error) {",
      "912:     }",
      "914:     if (typeof jsonVariables !== 'object') {",
      "",
      "[Removed Lines]",
      "911:       throw new Error(`Variables are invalid JSON: ${error.message}.`);",
      "",
      "[Added Lines]",
      "999:       throw new Error(",
      "1000:         `Variables are invalid JSON: ${(error as Error).message}.`,",
      "1001:       );",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "919:       jsonHeaders =",
      "920:         headers && headers.trim() !== '' ? JSON.parse(headers) : null;",
      "921:     } catch (error) {",
      "923:     }",
      "925:     if (typeof jsonHeaders !== 'object') {",
      "",
      "[Removed Lines]",
      "922:       throw new Error(`Headers are invalid JSON: ${error.message}.`);",
      "",
      "[Added Lines]",
      "1012:       throw new Error(`Headers are invalid JSON: ${(error as Error).message}.`);",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "1008:             } catch (error) {",
      "1009:               this.safeSetState({",
      "1010:                 isWaitingForResponse: false,",
      "1012:                 subscription: null,",
      "1013:               });",
      "1014:             }",
      "",
      "[Removed Lines]",
      "1011:                 response: error ? GraphiQL.formatError(error) : undefined,",
      "",
      "[Added Lines]",
      "1101:                 response: error",
      "1102:                   ? GraphiQL.formatError(error as Error)",
      "1103:                   : undefined,",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "1167:     } catch (error) {",
      "1168:       this.setState({",
      "1169:         isWaitingForResponse: false,",
      "1171:       });",
      "1172:     }",
      "1173:   };",
      "",
      "[Removed Lines]",
      "1170:         response: error.message,",
      "",
      "[Added Lines]",
      "1262:         response: (error as Error).message,",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "1699: }",
      "1700: GraphiQLFooter.displayName = 'GraphiQLFooter';",
      "1709: const defaultQuery = `# Welcome to GraphiQL",
      "1710: #",
      "1711: # GraphiQL is an in-browser tool for writing, validating, and",
      "",
      "[Removed Lines]",
      "1702: const formatSingleError = (error: Error) => ({",
      "1703:   ...error,",
      "1705:   message: error.message,",
      "1706:   stack: error.stack,",
      "1707: });",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "packages/graphiql/src/utility/onHasCompletion.ts||packages/graphiql/src/utility/onHasCompletion.ts": [
      "File: packages/graphiql/src/utility/onHasCompletion.ts -> packages/graphiql/src/utility/onHasCompletion.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "12:   GraphQLType,",
      "13:   GraphQLField,",
      "14: } from 'graphql';",
      "15: import MD from 'markdown-it';",
      "17: const md = new MD();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "15: import escapeHTML from 'escape-html';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "108:   if (type instanceof GraphQLList) {",
      "109:     return `[${renderType(type.ofType)}]`;",
      "110:   }",
      "112: }",
      "",
      "[Removed Lines]",
      "111:   return `<a class=\"typeName\">${type.name}</a>`;",
      "",
      "[Added Lines]",
      "112:   return `<a class=\"typeName\">${escapeHTML(type.name)}</a>`;",
      "",
      "---------------"
    ],
    "packages/graphiql/test/bad-schema.js||packages/graphiql/test/bad-schema.js": [
      "File: packages/graphiql/test/bad-schema.js -> packages/graphiql/test/bad-schema.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: const { buildClientSchema } = require('graphql');",
      "3: module.exports.schema = {",
      "4:   __schema: {",
      "5:     queryType: {",
      "6:       name: 'Query',",
      "7:     },",
      "8:     mutationType: null,",
      "9:     subscriptionType: null,",
      "10:     types: [",
      "11:       {",
      "12:         kind: 'OBJECT',",
      "13:         name: 'Query',",
      "14:         description: null,",
      "15:         fields: [",
      "16:           {",
      "17:             name: 'user',",
      "18:             description: null,",
      "19:             args: [",
      "20:               {",
      "21:                 name: 'id',",
      "22:                 description: null,",
      "23:                 type: {",
      "24:                   kind: 'NON_NULL',",
      "25:                   name: null,",
      "26:                   ofType: {",
      "27:                     kind: 'SCALAR',",
      "28:                     name: 'ID',",
      "29:                     ofType: null,",
      "30:                   },",
      "31:                 },",
      "32:                 defaultValue: null,",
      "33:               },",
      "34:             ],",
      "35:             type: {",
      "36:               kind: 'OBJECT',",
      "37:               name: '<img src=x onerror=alert(document.domain)>',",
      "38:               ofType: null,",
      "39:             },",
      "40:             isDeprecated: false,",
      "41:             deprecationReason: null,",
      "42:           },",
      "43:         ],",
      "44:         inputFields: null,",
      "45:         interfaces: [],",
      "46:         enumValues: null,",
      "47:         possibleTypes: null,",
      "48:       },",
      "49:       {",
      "50:         kind: 'SCALAR',",
      "51:         name: 'ID',",
      "52:         description: '',",
      "53:         fields: null,",
      "54:         inputFields: null,",
      "55:         interfaces: null,",
      "56:         enumValues: null,",
      "57:         possibleTypes: null,",
      "58:       },",
      "59:       {",
      "60:         kind: 'OBJECT',",
      "61:         name: '<img src=x onerror=alert(document.domain)>',",
      "62:         description: null,",
      "63:         fields: [",
      "64:           {",
      "65:             name: 'name',",
      "66:             description: null,",
      "67:             args: [],",
      "68:             type: {",
      "69:               kind: 'NON_NULL',",
      "70:               name: null,",
      "71:               ofType: {",
      "72:                 kind: 'SCALAR',",
      "73:                 name: 'String',",
      "74:                 ofType: null,",
      "75:               },",
      "76:             },",
      "77:             isDeprecated: false,",
      "78:             deprecationReason: null,",
      "79:           },",
      "80:         ],",
      "81:         inputFields: null,",
      "82:         interfaces: [],",
      "83:         enumValues: null,",
      "84:         possibleTypes: null,",
      "85:       },",
      "86:       {",
      "87:         kind: 'SCALAR',",
      "88:         name: 'String',",
      "89:         description: '',",
      "90:         fields: null,",
      "91:         inputFields: null,",
      "92:         interfaces: null,",
      "93:         enumValues: null,",
      "94:         possibleTypes: null,",
      "95:       },",
      "96:     ],",
      "97:     directives: [],",
      "98:   },",
      "99: };",
      "",
      "---------------"
    ],
    "packages/graphiql/test/beforeDevServer.js||packages/graphiql/test/beforeDevServer.js": [
      "File: packages/graphiql/test/beforeDevServer.js -> packages/graphiql/test/beforeDevServer.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const path = require('path');",
      "10: const { graphqlHTTP } = require('express-graphql');",
      "11: const schema = require('./schema');",
      "13: module.exports = function beforeDevServer(app, _server, _compiler) {",
      "15:   app.post('/graphql', graphqlHTTP({ schema }));",
      "17:   app.get(",
      "18:     '/graphql',",
      "19:     graphqlHTTP({",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12: const { schema: badSchema } = require('./bad-schema');",
      "18:   app.post('/bad/graphql', (_req, res, next) => {",
      "19:     res.json({ data: badSchema });",
      "20:     next();",
      "21:   });",
      "",
      "---------------"
    ],
    "packages/graphiql/test/e2e-server.js||packages/graphiql/test/e2e-server.js": [
      "File: packages/graphiql/test/e2e-server.js -> packages/graphiql/test/e2e-server.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: const path = require('path');",
      "11: const { graphqlHTTP } = require('express-graphql');",
      "12: const schema = require('./schema');",
      "14: const app = express();",
      "17: app.post('/graphql', graphqlHTTP({ schema }));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14: const { schema: badSchema } = require('./bad-schema');",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "23:   }),",
      "24: );",
      "26: app.use(express.static(path.resolve(__dirname, '../')));",
      "28: app.listen(process.env.PORT || 0, function () {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26: app.post('/bad/graphql', (_req, res, next) => {",
      "27:   res.json({ data: badSchema });",
      "28:   next();",
      "29: });",
      "",
      "---------------"
    ],
    "yarn.lock||yarn.lock": [
      "File: yarn.lock -> yarn.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "3288:   integrity sha512-6U71C2Wp7r5XtFtQzYrW5iKFT67OixrSxjI4MptCHzdSVlgabczzqLe0ZSgnub/5Kp4hSbpDB1tMytZY9pwxxA==",
      "3290: \"@graphiql/toolkit@file:packages/graphiql-toolkit\":",
      "3292:   dependencies:",
      "3293:     \"@n1ru4l/push-pull-async-iterable-iterator\" \"^3.0.0\"",
      "3294:     graphql-ws \"^4.9.0\"",
      "",
      "[Removed Lines]",
      "3291:   version \"0.3.0\"",
      "",
      "[Added Lines]",
      "3291:   version \"0.3.2\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "4881:   dependencies:",
      "4882:     \"@types/node\" \"*\"",
      "4884: \"@types/eslint-visitor-keys@^1.0.0\":",
      "4885:   version \"1.0.0\"",
      "4886:   resolved \"https://registry.yarnpkg.com/@types/eslint-visitor-keys/-/eslint-visitor-keys-1.0.0.tgz#1ee30d79544ca84d68d4b3cdb0af4f205663dd2d\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4884: \"@types/escape-html@^1.0.1\":",
      "4885:   version \"1.0.1\"",
      "4886:   resolved \"https://registry.yarnpkg.com/@types/escape-html/-/escape-html-1.0.1.tgz#b19b4646915f0ae2c306bf984dc0a59c5cfc97ba\"",
      "4887:   integrity sha512-4mI1FuUUZiuT95fSVqvZxp/ssQK9zsa86S43h9x3zPOSU9BBJ+BfDkXwuaU7BfsD+e7U0/cUUfJFk3iW2M4okA==",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "5021:   dependencies:",
      "5022:     \"@types/linkify-it\" \"*\"",
      "5024: \"@types/mime@^1\":",
      "5025:   version \"1.3.2\"",
      "5026:   resolved \"https://registry.yarnpkg.com/@types/mime/-/mime-1.3.2.tgz#93e25bf9ee75fe0fd80b594bc4feb0e862111b5a\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5029: \"@types/markdown-it@^12.2.3\":",
      "5030:   version \"12.2.3\"",
      "5031:   resolved \"https://registry.yarnpkg.com/@types/markdown-it/-/markdown-it-12.2.3.tgz#0d6f6e5e413f8daaa26522904597be3d6cd93b51\"",
      "5032:   integrity sha512-GKMHFfv3458yYy+v/N8gjufHO6MSZKCOXpZc5GXIWWy8uldwfmPn98vp81gZ5f9SVw8YYBctgfJ22a2d7AOMeQ==",
      "5033:   dependencies:",
      "5034:     \"@types/linkify-it\" \"*\"",
      "5035:     \"@types/mdurl\" \"*\"",
      "5037: \"@types/mdurl@*\":",
      "5038:   version \"1.0.2\"",
      "5039:   resolved \"https://registry.yarnpkg.com/@types/mdurl/-/mdurl-1.0.2.tgz#e2ce9d83a613bacf284c7be7d491945e39e1f8e9\"",
      "5040:   integrity sha512-eC4U9MlIcu2q0KQmXszyn5Akca/0jrQmwDRgpAMJai7qBWq4amIQhZyNau4VYGtCeALvW1/NtjzJJ567aZxfKA==",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "6121:   dependencies:",
      "6122:     sprintf-js \"~1.0.2\"",
      "6124: aria-query@^3.0.0:",
      "6125:   version \"3.0.0\"",
      "6126:   resolved \"https://registry.yarnpkg.com/aria-query/-/aria-query-3.0.0.tgz#65b3fcc1ca1155a8c9ae64d6eee297f15d5133cc\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6142: argparse@^2.0.1:",
      "6143:   version \"2.0.1\"",
      "6144:   resolved \"https://registry.yarnpkg.com/argparse/-/argparse-2.0.1.tgz#246f50f3ca78a3240f6c997e8a9bd1eac49e4b38\"",
      "6145:   integrity sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "9586:   resolved \"https://registry.yarnpkg.com/entities/-/entities-2.0.3.tgz#5c487e5742ab93c15abb5da22759b8590ec03b7f\"",
      "9587:   integrity sha512-MyoZ0jgnLvB2X3Lg5HqpFmn1kybDiIfEQmKzTb5apr51Rb+T3KdmMiqa70T+bhGnyv7bQ6WMj2QMHpGMmlrUYQ==",
      "9589: envinfo@^7.3.1:",
      "9590:   version \"7.8.1\"",
      "9591:   resolved \"https://registry.yarnpkg.com/envinfo/-/envinfo-7.8.1.tgz#06377e3e5f4d379fea7ac592d5ad8927e0c4d475\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "9612: entities@~2.1.0:",
      "9613:   version \"2.1.0\"",
      "9614:   resolved \"https://registry.yarnpkg.com/entities/-/entities-2.1.0.tgz#992d3129cf7df6870b96c57858c249a120f8b8b5\"",
      "9615:   integrity sha512-hCx1oky9PFrJ611mf0ifBLBRW8lUUVRlFolb5gWRfIELabBlbp9xZvrqZLZAs+NxFnbfQoeGd8wDkygjg7U85w==",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "9751:   resolved \"https://registry.yarnpkg.com/escalade/-/escalade-3.1.1.tgz#d8cfdc7000965c5a0174b4a82eaa5c0552742e40\"",
      "9752:   integrity sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
      "9755:   version \"1.0.3\"",
      "9756:   resolved \"https://registry.yarnpkg.com/escape-html/-/escape-html-1.0.3.tgz#0258eae4d3d0c0974de1c169188ef0051d1d1988\"",
      "9757:   integrity sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=",
      "",
      "[Removed Lines]",
      "9754: escape-html@~1.0.3:",
      "",
      "[Added Lines]",
      "9782: escape-html@^1.0.3, escape-html@~1.0.3:",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "11512:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
      "11514: \"graphiql@file:packages/graphiql\":",
      "11516:   dependencies:",
      "11518:     codemirror \"^5.58.2\"",
      "11520:     copy-to-clipboard \"^3.2.0\"",
      "11521:     dset \"^3.1.0\"",
      "11522:     entities \"^2.0.0\"",
      "11526: graphql-config@^3.0.2:",
      "11527:   version \"3.0.3\"",
      "",
      "[Removed Lines]",
      "11515:   version \"1.4.3\"",
      "11517:     \"@graphiql/toolkit\" \"^0.3.0\"",
      "11519:     codemirror-graphql \"^1.0.0\"",
      "11523:     graphql-language-service \"^3.1.5\"",
      "11524:     markdown-it \"^10.0.0\"",
      "",
      "[Added Lines]",
      "11543:   version \"1.4.6\"",
      "11545:     \"@graphiql/toolkit\" \"^0.3.2\"",
      "11547:     codemirror-graphql \"^1.0.3\"",
      "11551:     escape-html \"^1.0.3\"",
      "11552:     graphql-language-service \"^3.1.6\"",
      "11553:     markdown-it \"^12.2.0\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "14280:   dependencies:",
      "14281:     uc.micro \"^1.0.1\"",
      "14283: lint-staged@^10.1.2:",
      "14284:   version \"10.1.3\"",
      "14285:   resolved \"https://registry.yarnpkg.com/lint-staged/-/lint-staged-10.1.3.tgz#da27713d3ac519da305381b4de87d5f866b1d2f1\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14312: linkify-it@^3.0.1:",
      "14313:   version \"3.0.3\"",
      "14314:   resolved \"https://registry.yarnpkg.com/linkify-it/-/linkify-it-3.0.3.tgz#a98baf44ce45a550efb4d49c769d07524cc2fa2e\"",
      "14315:   integrity sha512-ynTsyrFSdE5oZ/O9GEf00kPngmOfVwazR5GKDq6EYfhlpFug3J2zybX56a2PRRpc9P+FuSoGNAwjlbDs9jJBPQ==",
      "14316:   dependencies:",
      "14317:     uc.micro \"^1.0.1\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "14711:     mdurl \"^1.0.1\"",
      "14712:     uc.micro \"^1.0.5\"",
      "14714: markdown-to-jsx@^6.11.4:",
      "14715:   version \"6.11.4\"",
      "14716:   resolved \"https://registry.yarnpkg.com/markdown-to-jsx/-/markdown-to-jsx-6.11.4.tgz#b4528b1ab668aef7fe61c1535c27e837819392c5\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14750: markdown-it@^12.2.0:",
      "14751:   version \"12.2.0\"",
      "14752:   resolved \"https://registry.yarnpkg.com/markdown-it/-/markdown-it-12.2.0.tgz#091f720fd5db206f80de7a8d1f1a7035fd0d38db\"",
      "14753:   integrity sha512-Wjws+uCrVQRqOoJvze4HCqkKl1AsSh95iFAeQDwnyfxM09divCBSXlDR1uTvyUP3Grzpn4Ru8GeCxYPM8vkCQg==",
      "14754:   dependencies:",
      "14755:     argparse \"^2.0.1\"",
      "14756:     entities \"~2.1.0\"",
      "14757:     linkify-it \"^3.0.1\"",
      "14758:     mdurl \"^1.0.1\"",
      "14759:     uc.micro \"^1.0.5\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2a40d621cabaa3e1eae679af7c158e47a13f244b",
      "candidate_info": {
        "commit_hash": "2a40d621cabaa3e1eae679af7c158e47a13f244b",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/2a40d621cabaa3e1eae679af7c158e47a13f244b",
        "files": [
          ".changeset/five-pillows-fail.md",
          "custom-words.txt",
          "packages/graphiql-react/package.json",
          "packages/graphiql-react/src/explorer/components/__tests__/test-utils.ts",
          "packages/graphiql-react/src/explorer/components/search.css",
          "packages/graphiql-react/src/explorer/components/search.tsx",
          "packages/graphiql-react/src/explorer/components/type-link.tsx",
          "packages/graphiql-react/src/explorer/components/utils.tsx",
          "packages/graphiql-react/src/explorer/context.tsx",
          "packages/graphiql-react/src/explorer/index.ts",
          "packages/graphiql-react/src/icons/index.tsx",
          "packages/graphiql-react/src/icons/magnifying-glass.svg",
          "packages/graphiql-react/src/index.ts",
          "packages/graphiql/__mocks__/@graphiql/react.tsx",
          "packages/graphiql/cypress/integration/docs.spec.ts",
          "packages/graphiql/src/components/DocExplorer.tsx",
          "packages/graphiql/src/components/DocExplorer/SearchBox.tsx",
          "packages/graphiql/src/components/DocExplorer/SearchResults.tsx",
          "yarn.lock"
        ],
        "message": "add `Search` component to `@graphiql/react` (#2586)",
        "before_after_code_files": [
          "packages/graphiql-react/src/explorer/components/__tests__/test-utils.ts||packages/graphiql-react/src/explorer/components/__tests__/test-utils.ts",
          "packages/graphiql-react/src/explorer/components/search.css||packages/graphiql-react/src/explorer/components/search.css",
          "packages/graphiql-react/src/explorer/components/search.tsx||packages/graphiql-react/src/explorer/components/search.tsx",
          "packages/graphiql-react/src/explorer/components/type-link.tsx||packages/graphiql-react/src/explorer/components/type-link.tsx",
          "packages/graphiql-react/src/explorer/components/utils.tsx||packages/graphiql-react/src/explorer/components/utils.tsx",
          "packages/graphiql-react/src/explorer/context.tsx||packages/graphiql-react/src/explorer/context.tsx",
          "packages/graphiql-react/src/explorer/index.ts||packages/graphiql-react/src/explorer/index.ts",
          "packages/graphiql-react/src/icons/index.tsx||packages/graphiql-react/src/icons/index.tsx",
          "packages/graphiql-react/src/index.ts||packages/graphiql-react/src/index.ts",
          "packages/graphiql/__mocks__/@graphiql/react.tsx||packages/graphiql/__mocks__/@graphiql/react.tsx",
          "packages/graphiql/cypress/integration/docs.spec.ts||packages/graphiql/cypress/integration/docs.spec.ts",
          "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
          "packages/graphiql/src/components/DocExplorer/SearchBox.tsx||packages/graphiql/src/components/DocExplorer/SearchBox.tsx",
          "packages/graphiql/src/components/DocExplorer/SearchResults.tsx||packages/graphiql/src/components/DocExplorer/SearchResults.tsx",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql-react/src/explorer/components/__tests__/test-utils.ts||packages/graphiql-react/src/explorer/components/__tests__/test-utils.ts": [
          "File: packages/graphiql-react/src/explorer/components/__tests__/test-utils.ts -> packages/graphiql-react/src/explorer/components/__tests__/test-utils.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:     push() {},",
          "14:     reset() {},",
          "15:     show() {},",
          "17:   };",
          "18: }",
          "",
          "[Removed Lines]",
          "16:     showSearch() {},",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/explorer/components/search.css||packages/graphiql-react/src/explorer/components/search.css": [
          "File: packages/graphiql-react/src/explorer/components/search.css -> packages/graphiql-react/src/explorer/components/search.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: @import url('@reach/combobox/styles.css');",
          "3: [data-reach-combobox] {",
          "4:   color: var(--color-neutral-60);",
          "6:   &:not([data-state='idle']) {",
          "7:     border-radius: var(--border-radius-4);",
          "8:     box-shadow: var(--box-shadow);",
          "9:     color: var(--color-neutral-100);",
          "11:     & .graphiql-doc-explorer-search-input {",
          "12:       background: var(--color-neutral-0);",
          "13:       border-bottom-left-radius: 0;",
          "14:       border-bottom-right-radius: 0;",
          "15:     }",
          "16:   }",
          "17: }",
          "19: .graphiql-doc-explorer-search-input {",
          "20:   align-items: center;",
          "21:   background-color: var(--color-neutral-7);",
          "22:   border-radius: var(--border-radius-4);",
          "23:   display: flex;",
          "24:   padding: var(--px-8) var(--px-12);",
          "25: }",
          "27: [data-reach-combobox-input] {",
          "28:   border: none;",
          "29:   background-color: transparent;",
          "30:   margin-left: var(--px-4);",
          "31:   width: 100%;",
          "33:   &:focus {",
          "34:     outline: none;",
          "35:   }",
          "36: }",
          "38: [data-reach-combobox-popover] {",
          "39:   border: none;",
          "40:   border-bottom-left-radius: var(--border-radius-4);",
          "41:   border-bottom-right-radius: var(--border-radius-4);",
          "42:   border-top: 1px solid var(--color-neutral-15);",
          "43:   max-height: 400px;",
          "44:   overflow-y: auto;",
          "50:   position: relative;",
          "51: }",
          "53: [data-reach-combobox-list] {",
          "54:   font-size: var(--font-size-body);",
          "55:   padding: var(--px-4);",
          "56: }",
          "58: [data-reach-combobox-option] {",
          "59:   border-radius: var(--border-radius-4);",
          "60:   color: var(--color-neutral-60);",
          "61:   overflow-x: hidden;",
          "62:   padding: var(--px-8) var(--px-12);",
          "63:   text-overflow: ellipsis;",
          "64:   white-space: nowrap;",
          "66:   &[data-highlighted] {",
          "67:     background-color: var(--color-neutral-7);",
          "68:   }",
          "70:   &:hover {",
          "71:     background-color: var(--color-neutral-10);",
          "72:   }",
          "74:   & + & {",
          "75:     margin-top: var(--px-4);",
          "76:   }",
          "77: }",
          "79: .graphiql-doc-explorer-search-type {",
          "80:   color: var(--color-blue);",
          "81: }",
          "83: .graphiql-doc-explorer-search-field {",
          "84:   color: var(--color-orche);",
          "85: }",
          "87: .graphiql-doc-explorer-search-argument {",
          "88:   color: var(--color-purple);",
          "89: }",
          "91: .graphiql-doc-explorer-search-divider {",
          "92:   color: var(--color-neutral-60);",
          "93:   font-size: var(--font-size-hint);",
          "94:   font-weight: var(--font-weight-medium);",
          "95:   margin-top: var(--px-8);",
          "96:   padding: var(--px-8) var(--px-12);",
          "97: }",
          "99: .graphiql-doc-explorer-search-empty {",
          "100:   color: var(--color-neutral-60);",
          "101:   padding: var(--px-8) var(--px-12);",
          "102: }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/explorer/components/search.tsx||packages/graphiql-react/src/explorer/components/search.tsx": [
          "File: packages/graphiql-react/src/explorer/components/search.tsx -> packages/graphiql-react/src/explorer/components/search.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import {",
          "2:   Combobox,",
          "3:   ComboboxInput,",
          "4:   ComboboxPopover,",
          "5:   ComboboxList,",
          "6:   ComboboxOption,",
          "7: } from '@reach/combobox';",
          "8: import {",
          "9:   GraphQLArgument,",
          "10:   GraphQLField,",
          "11:   GraphQLInputField,",
          "12:   GraphQLNamedType,",
          "13:   isInputObjectType,",
          "14:   isInterfaceType,",
          "15:   isObjectType,",
          "16: } from 'graphql';",
          "17: import { useCallback, useEffect, useMemo, useRef, useState } from 'react';",
          "18: import { MagnifyingGlassIcon } from '../../icons';",
          "19: import { useSchemaContext } from '../../schema';",
          "20: import debounce from '../../utility/debounce';",
          "22: import { useExplorerContext } from '../context';",
          "24: import './search.css';",
          "25: import { renderType } from './utils';",
          "27: export function Search() {",
          "28:   const { explorerNavStack, push } = useExplorerContext({",
          "29:     nonNull: true,",
          "30:     caller: Search,",
          "31:   });",
          "33:   const inputRef = useRef<HTMLInputElement>(null);",
          "34:   const popoverRef = useRef<HTMLDivElement>(null);",
          "36:   const getSearchResults = useSearchResults();",
          "37:   const [searchValue, setSearchValue] = useState('');",
          "39:   const [results, setResults] = useState(getSearchResults(searchValue));",
          "40:   const debouncedGetSearchResults = useMemo(",
          "41:     () =>",
          "42:       debounce(200, (search: string) => {",
          "43:         setResults(getSearchResults(search));",
          "44:       }),",
          "45:     [getSearchResults],",
          "46:   );",
          "47:   useEffect(() => {",
          "48:     debouncedGetSearchResults(searchValue);",
          "49:   }, [debouncedGetSearchResults, searchValue]);",
          "51:   useEffect(() => {",
          "52:     function handleKeyDown(event: KeyboardEvent) {",
          "53:       if (event.metaKey && event.keyCode === 75 && inputRef.current) {",
          "54:         inputRef.current.focus();",
          "55:       }",
          "56:     }",
          "57:     window.addEventListener('keydown', handleKeyDown);",
          "58:     return () => window.removeEventListener('keydown', handleKeyDown);",
          "59:   }, []);",
          "61:   const navItem = explorerNavStack[explorerNavStack.length - 1];",
          "63:   const shouldSearchBoxAppear =",
          "64:     explorerNavStack.length === 1 ||",
          "65:     isObjectType(navItem.def) ||",
          "66:     isInterfaceType(navItem.def) ||",
          "67:     isInputObjectType(navItem.def);",
          "69:   return shouldSearchBoxAppear ? (",
          "70:     <Combobox",
          "71:       aria-label={`Search ${navItem.name}...`}",
          "72:       onSelect={value => {",
          "73:         const def = (value as unknown) as TypeMatch | FieldMatch;",
          "74:         push(",
          "75:           'field' in def",
          "76:             ? { name: def.field.name, def: def.field }",
          "77:             : { name: def.type.name, def: def.type },",
          "78:         );",
          "79:       }}>",
          "80:       <div className=\"graphiql-doc-explorer-search-input\">",
          "81:         <MagnifyingGlassIcon />",
          "82:         <ComboboxInput",
          "83:           autocomplete={false}",
          "84:           onChange={event => {",
          "85:             setSearchValue(event.target.value);",
          "86:           }}",
          "87:           onKeyDown={event => {",
          "88:             if (!event.isDefaultPrevented()) {",
          "89:               const container = popoverRef.current;",
          "90:               if (!container) {",
          "91:                 return;",
          "92:               }",
          "94:               window.requestAnimationFrame(() => {",
          "95:                 const element = container.querySelector('[aria-selected=true]');",
          "96:                 if (!(element instanceof HTMLElement)) {",
          "97:                   return;",
          "98:                 }",
          "99:                 const top = element.offsetTop - container.scrollTop;",
          "100:                 const bottom =",
          "101:                   container.scrollTop +",
          "102:                   container.clientHeight -",
          "103:                   (element.offsetTop + element.clientHeight);",
          "104:                 if (bottom < 0) {",
          "105:                   container.scrollTop -= bottom;",
          "106:                 }",
          "107:                 if (top < 0) {",
          "108:                   container.scrollTop += top;",
          "109:                 }",
          "110:               });",
          "111:             }",
          "112:           }}",
          "113:           placeholder=\"&#x2318; K\"",
          "114:           ref={inputRef}",
          "115:           value={searchValue}",
          "116:         />",
          "117:       </div>",
          "118:       <ComboboxPopover portal={false} ref={popoverRef}>",
          "119:         <ComboboxList>",
          "120:           {/**",
          "126:           {results.within.map((result, i) => (",
          "127:             <ComboboxOption key={`within-${i}`} index={i} value={result as any}>",
          "128:               <Field field={result.field} argument={result.argument} />",
          "129:             </ComboboxOption>",
          "130:           ))}",
          "131:           {results.within.length > 0 &&",
          "132:           results.types.length + results.fields.length > 0 ? (",
          "133:             <div className=\"graphiql-doc-explorer-search-divider\">",
          "134:               Other results",
          "135:             </div>",
          "136:           ) : null}",
          "137:           {results.types.map((result, i) => (",
          "138:             <ComboboxOption",
          "139:               key={`type-${i}`}",
          "140:               index={results.within.length + i}",
          "141:               value={result as any}>",
          "142:               <Type type={result.type} />",
          "143:             </ComboboxOption>",
          "144:           ))}",
          "145:           {results.fields.map((result, i) => (",
          "146:             <ComboboxOption",
          "147:               key={`field-${i}`}",
          "148:               index={results.within.length + results.types.length + i}",
          "149:               value={result as any}>",
          "150:               <Type type={result.type} />.",
          "151:               <Field field={result.field} argument={result.argument} />",
          "152:             </ComboboxOption>",
          "153:           ))}",
          "154:           {results.within.length +",
          "155:             results.types.length +",
          "156:             results.fields.length ===",
          "157:           0 ? (",
          "158:             <div className=\"graphiql-doc-explorer-search-empty\">",
          "159:               No results found",
          "160:             </div>",
          "161:           ) : null}",
          "162:         </ComboboxList>",
          "163:       </ComboboxPopover>",
          "164:     </Combobox>",
          "165:   ) : null;",
          "166: }",
          "168: type TypeMatch = { type: GraphQLNamedType };",
          "170: type FieldMatch = {",
          "171:   type: GraphQLNamedType;",
          "172:   field: GraphQLField<unknown, unknown> | GraphQLInputField;",
          "173:   argument?: GraphQLArgument;",
          "174: };",
          "176: export function useSearchResults(caller?: Function) {",
          "177:   const { explorerNavStack } = useExplorerContext({",
          "178:     nonNull: true,",
          "179:     caller: caller || useSearchResults,",
          "180:   });",
          "181:   const { schema } = useSchemaContext({",
          "182:     nonNull: true,",
          "183:     caller: caller || useSearchResults,",
          "184:   });",
          "186:   const navItem = explorerNavStack[explorerNavStack.length - 1];",
          "188:   return useCallback(",
          "189:     (searchValue: string) => {",
          "190:       const matches: {",
          "191:         within: FieldMatch[];",
          "192:         types: TypeMatch[];",
          "193:         fields: FieldMatch[];",
          "194:       } = {",
          "195:         within: [],",
          "196:         types: [],",
          "197:         fields: [],",
          "198:       };",
          "200:       if (!schema) {",
          "201:         return matches;",
          "202:       }",
          "204:       const withinType = navItem.def;",
          "206:       const typeMap = schema.getTypeMap();",
          "207:       let typeNames = Object.keys(typeMap);",
          "210:       if (withinType) {",
          "211:         typeNames = typeNames.filter(n => n !== withinType.name);",
          "212:         typeNames.unshift(withinType.name);",
          "213:       }",
          "215:       for (const typeName of typeNames) {",
          "216:         if (",
          "217:           matches.within.length +",
          "218:             matches.types.length +",
          "219:             matches.fields.length >=",
          "220:           100",
          "221:         ) {",
          "222:           break;",
          "223:         }",
          "225:         const type = typeMap[typeName];",
          "226:         if (withinType !== type && isMatch(typeName, searchValue)) {",
          "227:           matches.types.push({ type });",
          "228:         }",
          "230:         if (",
          "231:           !isObjectType(type) &&",
          "232:           !isInterfaceType(type) &&",
          "233:           !isInputObjectType(type)",
          "234:         ) {",
          "235:           continue;",
          "236:         }",
          "238:         const fields = type.getFields();",
          "239:         for (const fieldName in fields) {",
          "240:           const field = fields[fieldName];",
          "241:           let matchingArgs: GraphQLArgument[] | undefined;",
          "243:           if (!isMatch(fieldName, searchValue)) {",
          "244:             if ('args' in field) {",
          "245:               matchingArgs = field.args.filter(arg =>",
          "246:                 isMatch(arg.name, searchValue),",
          "247:               );",
          "248:               if (matchingArgs.length === 0) {",
          "249:                 continue;",
          "250:               }",
          "251:             } else {",
          "252:               continue;",
          "253:             }",
          "254:           }",
          "256:           matches[withinType === type ? 'within' : 'fields'].push(",
          "257:             ...(matchingArgs",
          "258:               ? matchingArgs.map(argument => ({ type, field, argument }))",
          "259:               : [{ type, field }]),",
          "260:           );",
          "261:         }",
          "262:       }",
          "264:       return matches;",
          "265:     },",
          "266:     [navItem.def, schema],",
          "267:   );",
          "268: }",
          "270: function isMatch(sourceText: string, searchValue: string) {",
          "271:   try {",
          "272:     const escaped = searchValue.replace(/[^_0-9A-Za-z]/g, ch => '\\\\' + ch);",
          "273:     return sourceText.search(new RegExp(escaped, 'i')) !== -1;",
          "274:   } catch (e) {",
          "275:     return sourceText.toLowerCase().indexOf(searchValue.toLowerCase()) !== -1;",
          "276:   }",
          "277: }",
          "279: type TypeProps = { type: GraphQLNamedType };",
          "281: function Type(props: TypeProps) {",
          "282:   return (",
          "283:     <span className=\"graphiql-doc-explorer-search-type\">{props.type.name}</span>",
          "284:   );",
          "285: }",
          "287: type FieldProps = {",
          "288:   field: GraphQLField<unknown, unknown> | GraphQLInputField;",
          "289:   argument?: GraphQLArgument;",
          "290: };",
          "292: function Field(props: FieldProps) {",
          "293:   return (",
          "294:     <>",
          "295:       <span className=\"graphiql-doc-explorer-search-field\">",
          "296:         {props.field.name}",
          "297:       </span>",
          "298:       {props.argument ? (",
          "299:         <>",
          "300:           (",
          "301:           <span className=\"graphiql-doc-explorer-search-argument\">",
          "302:             {props.argument.name}",
          "303:           </span>",
          "304:           :{' '}",
          "305:           {renderType(props.argument.type, namedType => (",
          "306:             <Type type={namedType} />",
          "307:           ))}",
          "308:           )",
          "309:         </>",
          "310:       ) : null}",
          "311:     </>",
          "312:   );",
          "313: }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/explorer/components/type-link.tsx||packages/graphiql-react/src/explorer/components/type-link.tsx": [
          "File: packages/graphiql-react/src/explorer/components/type-link.tsx -> packages/graphiql-react/src/explorer/components/type-link.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import { useExplorerContext } from '../context';",
          "5: import './type-link.css';",
          "",
          "[Removed Lines]",
          "1: import { GraphQLType, isListType, isNonNullType } from 'graphql';",
          "",
          "[Added Lines]",
          "1: import { GraphQLType } from 'graphql';",
          "4: import { renderType } from './utils';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15:     return null;",
          "16:   }",
          "34:     <a",
          "35:       className=\"graphiql-doc-explorer-type-name\"",
          "36:       onClick={event => {",
          "37:         event.preventDefault();",
          "39:       }}",
          "40:       href=\"#\">",
          "42:     </a>",
          "44: }",
          "",
          "[Removed Lines]",
          "18:   const type = props.type;",
          "19:   if (isNonNullType(type)) {",
          "20:     return (",
          "21:       <>",
          "22:         <TypeLink type={type.ofType} />!",
          "23:       </>",
          "24:     );",
          "25:   }",
          "26:   if (isListType(type)) {",
          "27:     return (",
          "28:       <>",
          "29:         [<TypeLink type={type.ofType} />]",
          "30:       </>",
          "31:     );",
          "32:   }",
          "33:   return (",
          "38:         push({ name: type.name, def: type });",
          "41:       {type.name}",
          "43:   );",
          "",
          "[Added Lines]",
          "19:   return renderType(props.type, namedType => (",
          "24:         push({ name: namedType.name, def: namedType });",
          "27:       {namedType.name}",
          "29:   ));",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/explorer/components/utils.tsx||packages/graphiql-react/src/explorer/components/utils.tsx": [
          "File: packages/graphiql-react/src/explorer/components/utils.tsx -> packages/graphiql-react/src/explorer/components/utils.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import {",
          "2:   GraphQLNamedType,",
          "3:   GraphQLType,",
          "4:   isListType,",
          "5:   isNonNullType,",
          "6: } from 'graphql';",
          "8: export function renderType(",
          "9:   type: GraphQLType,",
          "10:   renderNamedType: (namedType: GraphQLNamedType) => JSX.Element,",
          "11: ): JSX.Element {",
          "12:   if (isNonNullType(type)) {",
          "13:     return <>{renderType(type.ofType, renderNamedType)}!</>;",
          "14:   }",
          "15:   if (isListType(type)) {",
          "16:     return <>[{renderType(type.ofType, renderNamedType)}]</>;",
          "17:   }",
          "18:   return renderNamedType(type);",
          "19: }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/explorer/context.tsx||packages/graphiql-react/src/explorer/context.tsx": [
          "File: packages/graphiql-react/src/explorer/context.tsx -> packages/graphiql-react/src/explorer/context.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: export type ExplorerNavStackItem = {",
          "26:   name: string;",
          "27:   title?: string;",
          "29:   def?: GraphQLNamedType | ExplorerFieldDef;",
          "30: };",
          "",
          "[Removed Lines]",
          "28:   search?: string;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48:   pop(): void;",
          "49:   reset(): void;",
          "50:   show(): void;",
          "52: };",
          "54: export const ExplorerContext = createNullableContext<ExplorerContextType>(",
          "",
          "[Removed Lines]",
          "51:   showSearch(search: string): void;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "122:     setIsVisible(true);",
          "123:   }, [onToggleVisibility, storage]);",
          "133:   useEffect(() => {",
          "134:     if (isFetching) {",
          "135:       reset();",
          "",
          "[Removed Lines]",
          "125:   const showSearch = useCallback((search: string) => {",
          "126:     setNavStack(currentState => {",
          "127:       const lastItem = currentState[currentState.length - 1];",
          "128:       const allButLastItem = currentState.slice(0, -1) as ExplorerNavStack;",
          "129:       return [...allButLastItem, { ...lastItem, search }] as ExplorerNavStack;",
          "130:     });",
          "131:   }, []);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "145:       pop,",
          "146:       reset,",
          "147:       show,",
          "149:     }),",
          "151:   );",
          "153:   return (",
          "",
          "[Removed Lines]",
          "148:       showSearch,",
          "150:     [hide, isVisible, navStack, push, pop, reset, show, showSearch],",
          "",
          "[Added Lines]",
          "139:     [hide, isVisible, navStack, push, pop, reset, show],",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/explorer/index.ts||packages/graphiql-react/src/explorer/index.ts": [
          "File: packages/graphiql-react/src/explorer/index.ts -> packages/graphiql-react/src/explorer/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: export { DefaultValue } from './components/default-value';",
          "3: export { Directive } from './components/directive';",
          "4: export { FieldLink } from './components/field-link';",
          "5: export { TypeLink } from './components/type-link';",
          "6: export {",
          "7:   ExplorerContext,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: export { Search } from './components/search';",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/icons/index.tsx||packages/graphiql-react/src/icons/index.tsx": [
          "File: packages/graphiql-react/src/icons/index.tsx -> packages/graphiql-react/src/icons/index.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import _DocsIcon from './docs.svg';",
          "6: import _HistoryIcon from './history.svg';",
          "7: import _KeyboardShortcutIcon from './keyboard-shortcut.svg';",
          "8: import _MergeIcon from './merge.svg';",
          "9: import _PenIcon from './pen.svg';",
          "10: import _PlayIcon from './play.svg';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: import _MagnifyingGlassIcon from './magnifying-glass.svg';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27:   _KeyboardShortcutIcon,",
          "28:   'keyboard shortcut icon',",
          "29: );",
          "30: export const MergeIcon = generateIcon(_MergeIcon, 'merge icon');",
          "31: export const PenIcon = generateIcon(_PenIcon, 'pen icon');",
          "32: export const PlayIcon = generateIcon(_PlayIcon, 'play icon');",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: export const MagnifyingGlassIcon = generateIcon(",
          "32:   _MagnifyingGlassIcon,",
          "33:   'magnifying glass icon',",
          "34: );",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/index.ts||packages/graphiql-react/src/index.ts": [
          "File: packages/graphiql-react/src/index.ts -> packages/graphiql-react/src/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:   ExplorerContext,",
          "30:   ExplorerContextProvider,",
          "31:   FieldLink,",
          "32:   TypeLink,",
          "33:   useExplorerContext,",
          "34: } from './explorer';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32:   Search,",
          "",
          "---------------"
        ],
        "packages/graphiql/__mocks__/@graphiql/react.tsx||packages/graphiql/__mocks__/@graphiql/react.tsx": [
          "File: packages/graphiql/__mocks__/@graphiql/react.tsx -> packages/graphiql/__mocks__/@graphiql/react.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:   PrettifyIcon,",
          "42:   SchemaContext,",
          "43:   SchemaContextProvider,",
          "44:   SettingsIcon,",
          "45:   Spinner,",
          "46:   StopIcon,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:   Search,",
          "",
          "---------------"
        ],
        "packages/graphiql/cypress/integration/docs.spec.ts||packages/graphiql/cypress/integration/docs.spec.ts": [
          "File: packages/graphiql/cypress/integration/docs.spec.ts -> packages/graphiql/cypress/integration/docs.spec.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:   });",
          "25:   it('Searches docs for values', () => {",
          "28:   });",
          "30:   it('Navigates to a docs entry on selecting a search result', () => {",
          "32:     cy.get('.doc-explorer-title').should('have.text', 'TestInput');",
          "33:   });",
          "35:   it('Allows searching fields within a type', () => {",
          "38:   });",
          "40:   it('Shows \"other results\" section', () => {",
          "46:   });",
          "49:     cy.get('.doc-explorer-back').click();",
          "50:     cy.get('.doc-explorer-title').should('have.text', 'Docs');",
          "55:   });",
          "57:   it('Type fields link to their own docs entry', () => {",
          "63:     cy.get('.doc-explorer-title').should('have.text', 'isTest');",
          "64:     cy.get('.graphiql-markdown-description').should(",
          "",
          "[Removed Lines]",
          "26:     cy.get('label.search-box input').type('test');",
          "27:     cy.get('.doc-category-item').should('have.length', 7);",
          "31:     cy.get('.doc-search-items>.doc-category-item').eq(4).children().click();",
          "36:     cy.get('label.search-box input').type('list');",
          "37:     cy.get('.doc-category-item').should('have.length', 8);",
          "41:     cy.get('.doc-category-title').should('have.text', 'other results');",
          "42:     cy.get('.doc-category .graphiql-doc-explorer-field-name').should(",
          "43:       'have.text',",
          "44:       'hasArgs',",
          "45:     );",
          "48:   it('Navigates back to search results when existing', () => {",
          "51:   });",
          "53:   it('Retains the parent search value', () => {",
          "54:     cy.get('label.search-box input').should('have.value', 'test');",
          "58:     cy.get('.doc-search-items>.doc-category-item')",
          "59:       .last()",
          "60:       .find('a:nth-child(2)')",
          "61:       .click();",
          "",
          "[Added Lines]",
          "26:     cy.get('[data-reach-combobox-input]').type('test');",
          "27:     cy.get('[data-reach-combobox-popover]').should('not.have.attr', 'hidden');",
          "28:     cy.get('[data-reach-combobox-option]').should('have.length', 7);",
          "32:     cy.get('[data-reach-combobox-option]').eq(4).children().click();",
          "37:     cy.get('[data-reach-combobox-input]').type('list');",
          "38:     cy.get('[data-reach-combobox-option]').should('have.length', 14);",
          "42:     cy.get(",
          "43:       '[data-reach-combobox-popover] .graphiql-doc-explorer-search-divider',",
          "44:     ).should('have.text', 'Other results');",
          "45:     cy.get('[data-reach-combobox-option]').contains('hasArgs');",
          "48:   it('Navigates back and closes popover', () => {",
          "51:     cy.get('[data-reach-combobox-popover]').should('have.attr', 'hidden');",
          "55:     cy.get('[data-reach-combobox-input]').type('test');",
          "56:     cy.wait(250);",
          "57:     cy.get('[data-reach-combobox-option]').last().click();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66:       'Is this a test schema? Sure it is.\\n',",
          "67:     );",
          "68:   });",
          "79: });",
          "81: describe('GraphQL DocExplorer - deprecated fields', () => {",
          "",
          "[Removed Lines]",
          "70:   it('Allows clearing the search', () => {",
          "71:     cy.visit(`/`);",
          "72:     cy.get('.graphiql-sidebar button').eq(0).click();",
          "73:     cy.get('label.search-box input').type('test');",
          "74:     cy.get('.doc-category-item').should('have.length', 7);",
          "75:     cy.get('.search-box-clear').click();",
          "76:     cy.get('.doc-category-title').should('have.text', 'root types');",
          "77:     cy.get('label.search-box input').should('have.value', '');",
          "78:   });",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx": [
          "File: packages/graphiql/src/components/DocExplorer.tsx -> packages/graphiql/src/components/DocExplorer.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import { GraphQLSchema, isType } from 'graphql';",
          "10: import React, { ReactNode } from 'react';",
          "12: import FieldDoc from './DocExplorer/FieldDoc';",
          "13: import SchemaDoc from './DocExplorer/SchemaDoc';",
          "16: import TypeDoc from './DocExplorer/TypeDoc';",
          "18: type DocExplorerProps = {",
          "",
          "[Removed Lines]",
          "8: import { Spinner, useExplorerContext, useSchemaContext } from '@graphiql/react';",
          "14: import SearchBox from './DocExplorer/SearchBox';",
          "15: import SearchResults from './DocExplorer/SearchResults';",
          "",
          "[Added Lines]",
          "8: import {",
          "9:   Search,",
          "10:   Spinner,",
          "11:   useExplorerContext,",
          "12:   useSchemaContext,",
          "13: } from '@graphiql/react';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:     schema: schemaFromContext,",
          "41:     validationErrors,",
          "42:   } = useSchemaContext({ nonNull: true });",
          "44:     nonNull: true,",
          "45:   });",
          "",
          "[Removed Lines]",
          "43:   const { explorerNavStack, hide, pop, showSearch } = useExplorerContext({",
          "",
          "[Added Lines]",
          "46:   const { explorerNavStack, hide, pop } = useExplorerContext({",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "67:     content = <div className=\"error-container\">No Schema Available</div>;",
          "70:   } else if (explorerNavStack.length === 1) {",
          "71:     content = <SchemaDoc />;",
          "72:   } else if (isType(navItem.def)) {",
          "",
          "[Removed Lines]",
          "68:   } else if (navItem.search) {",
          "69:     content = <SearchResults />;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "75:     content = <FieldDoc />;",
          "76:   }",
          "82:   let prevName;",
          "83:   if (explorerNavStack.length > 1) {",
          "84:     prevName = explorerNavStack[explorerNavStack.length - 2].name;",
          "",
          "[Removed Lines]",
          "78:   const shouldSearchBoxAppear =",
          "79:     explorerNavStack.length === 1 ||",
          "80:     (isType(navItem.def) && 'getFields' in navItem.def);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "114:         </div>",
          "115:       </div>",
          "116:       <div className=\"doc-explorer-contents\">",
          "124:         {content}",
          "125:       </div>",
          "126:     </section>",
          "",
          "[Removed Lines]",
          "117:         {shouldSearchBoxAppear && (",
          "118:           <SearchBox",
          "119:             value={navItem.search}",
          "120:             placeholder={`Search ${navItem.name}...`}",
          "121:             onSearch={showSearch}",
          "122:           />",
          "123:         )}",
          "",
          "[Added Lines]",
          "114:         <Search key={navItem.def?.name || '__schema'} />",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/DocExplorer/SearchBox.tsx||packages/graphiql/src/components/DocExplorer/SearchBox.tsx": [
          "File: packages/graphiql/src/components/DocExplorer/SearchBox.tsx -> packages/graphiql/src/components/DocExplorer/SearchBox.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/DocExplorer/SearchResults.tsx||packages/graphiql/src/components/DocExplorer/SearchResults.tsx": [
          "File: packages/graphiql/src/components/DocExplorer/SearchResults.tsx -> packages/graphiql/src/components/DocExplorer/SearchResults.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "4365:     \"@nodelib/fs.scandir\" \"2.1.4\"",
          "4366:     fastq \"^1.6.0\"",
          "4368: \"@rollup/pluginutils@^4.1.1\":",
          "4369:   version \"4.1.1\"",
          "4370:   resolved \"https://registry.yarnpkg.com/@rollup/pluginutils/-/pluginutils-4.1.1.tgz#1d4da86dd4eded15656a57d933fda2b9a08d47ec\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4368: \"@reach/auto-id@0.17.0\":",
          "4369:   version \"0.17.0\"",
          "4370:   resolved \"https://registry.yarnpkg.com/@reach/auto-id/-/auto-id-0.17.0.tgz#60cce65eb7a0d6de605820727f00dfe2b03b5f17\"",
          "4371:   integrity sha512-ud8iPwF52RVzEmkHq1twuqGuPA+moreumUHdtgvU3sr3/15BNhwp3KyDLrKKSz0LP1r3V4pSdyF9MbYM8BoSjA==",
          "4372:   dependencies:",
          "4373:     \"@reach/utils\" \"0.17.0\"",
          "4374:     tslib \"^2.3.0\"",
          "4376: \"@reach/combobox@^0.17.0\":",
          "4377:   version \"0.17.0\"",
          "4378:   resolved \"https://registry.yarnpkg.com/@reach/combobox/-/combobox-0.17.0.tgz#fb9d71d2d5aff3b339dce0ec5e3b73628a51b009\"",
          "4379:   integrity sha512-2mYvU5agOBCQBMdlM4cri+P1BbNwp05P1OuDyc33xJSNiBG7BMy4+ZSHJ0X4fyle6rHwSgCAOCLOeWV1XUYjoQ==",
          "4380:   dependencies:",
          "4381:     \"@reach/auto-id\" \"0.17.0\"",
          "4382:     \"@reach/descendants\" \"0.17.0\"",
          "4383:     \"@reach/popover\" \"0.17.0\"",
          "4384:     \"@reach/portal\" \"0.17.0\"",
          "4385:     \"@reach/utils\" \"0.17.0\"",
          "4386:     prop-types \"^15.7.2\"",
          "4387:     tiny-warning \"^1.0.3\"",
          "4388:     tslib \"^2.3.0\"",
          "4390: \"@reach/descendants@0.17.0\":",
          "4391:   version \"0.17.0\"",
          "4392:   resolved \"https://registry.yarnpkg.com/@reach/descendants/-/descendants-0.17.0.tgz#3fb087125a67870acd4dee1528449ed546829b67\"",
          "4393:   integrity sha512-c7lUaBfjgcmKFZiAWqhG+VnXDMEhPkI4kAav/82XKZD6NVvFjsQOTH+v3tUkskrAPV44Yuch0mFW/u5Ntifr7Q==",
          "4394:   dependencies:",
          "4395:     \"@reach/utils\" \"0.17.0\"",
          "4396:     tslib \"^2.3.0\"",
          "4398: \"@reach/observe-rect@1.2.0\":",
          "4399:   version \"1.2.0\"",
          "4400:   resolved \"https://registry.yarnpkg.com/@reach/observe-rect/-/observe-rect-1.2.0.tgz#d7a6013b8aafcc64c778a0ccb83355a11204d3b2\"",
          "4401:   integrity sha512-Ba7HmkFgfQxZqqaeIWWkNK0rEhpxVQHIoVyW1YDSkGsGIXzcaW4deC8B0pZrNSSyLTdIk7y+5olKt5+g0GmFIQ==",
          "4403: \"@reach/popover@0.17.0\":",
          "4404:   version \"0.17.0\"",
          "4405:   resolved \"https://registry.yarnpkg.com/@reach/popover/-/popover-0.17.0.tgz#feda6961f37d17b8738d2d52af6bfc5c4584464f\"",
          "4406:   integrity sha512-yYbBF4fMz4Ml4LB3agobZjcZ/oPtPsNv70ZAd7lEC2h7cvhF453pA+zOBGYTPGupKaeBvgAnrMjj7RnxDU5hoQ==",
          "4407:   dependencies:",
          "4408:     \"@reach/portal\" \"0.17.0\"",
          "4409:     \"@reach/rect\" \"0.17.0\"",
          "4410:     \"@reach/utils\" \"0.17.0\"",
          "4411:     tabbable \"^4.0.0\"",
          "4412:     tslib \"^2.3.0\"",
          "4414: \"@reach/portal@0.17.0\":",
          "4415:   version \"0.17.0\"",
          "4416:   resolved \"https://registry.yarnpkg.com/@reach/portal/-/portal-0.17.0.tgz#1dd69ffc8ffc8ba3e26dd127bf1cc4b15f0c6bdc\"",
          "4417:   integrity sha512-+IxsgVycOj+WOeNPL2NdgooUdHPSY285wCtj/iWID6akyr4FgGUK7sMhRM9aGFyrGpx2vzr+eggbUmAVZwOz+A==",
          "4418:   dependencies:",
          "4419:     \"@reach/utils\" \"0.17.0\"",
          "4420:     tiny-warning \"^1.0.3\"",
          "4421:     tslib \"^2.3.0\"",
          "4423: \"@reach/rect@0.17.0\":",
          "4424:   version \"0.17.0\"",
          "4425:   resolved \"https://registry.yarnpkg.com/@reach/rect/-/rect-0.17.0.tgz#804f0cfb211e0beb81632c64d4532ec9d1d73c48\"",
          "4426:   integrity sha512-3YB7KA5cLjbLc20bmPkJ06DIfXSK06Cb5BbD2dHgKXjUkT9WjZaLYIbYCO8dVjwcyO3GCNfOmPxy62VsPmZwYA==",
          "4427:   dependencies:",
          "4428:     \"@reach/observe-rect\" \"1.2.0\"",
          "4429:     \"@reach/utils\" \"0.17.0\"",
          "4430:     prop-types \"^15.7.2\"",
          "4431:     tiny-warning \"^1.0.3\"",
          "4432:     tslib \"^2.3.0\"",
          "4434: \"@reach/utils@0.17.0\":",
          "4435:   version \"0.17.0\"",
          "4436:   resolved \"https://registry.yarnpkg.com/@reach/utils/-/utils-0.17.0.tgz#3d1d2ec56d857f04fe092710d8faee2b2b121303\"",
          "4437:   integrity sha512-M5y8fCBbrWeIsxedgcSw6oDlAMQDkl5uv3VnMVJ7guwpf4E48Xlh1v66z/1BgN/WYe2y8mB/ilFD2nysEfdGeA==",
          "4438:   dependencies:",
          "4439:     tiny-warning \"^1.0.3\"",
          "4440:     tslib \"^2.3.0\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15113:     object-assign \"^4.1.1\"",
          "15114:     react-is \"^16.8.1\"",
          "15117:   version \"15.8.1\"",
          "15118:   resolved \"https://registry.yarnpkg.com/prop-types/-/prop-types-15.8.1.tgz#67d87bf1a694f48435cf332c24af10214a3140b5\"",
          "15119:   integrity sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
          "",
          "[Removed Lines]",
          "15116: prop-types@^15.8.1:",
          "",
          "[Added Lines]",
          "15190: prop-types@^15.7.2, prop-types@^15.8.1:",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "17052:     buffer \"^5.7.0\"",
          "17053:     node-fetch \"^2.6.1\"",
          "17055: tapable@^1.0.0, tapable@^1.1.3:",
          "17056:   version \"1.1.3\"",
          "17057:   resolved \"https://registry.yarnpkg.com/tapable/-/tapable-1.1.3.tgz#a1fccc06b58db61fd7a45da2da44f5f3a3e67ba2\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17129: tabbable@^4.0.0:",
          "17130:   version \"4.0.0\"",
          "17131:   resolved \"https://registry.yarnpkg.com/tabbable/-/tabbable-4.0.0.tgz#5bff1d1135df1482cf0f0206434f15eadbeb9261\"",
          "17132:   integrity sha512-H1XoH1URcBOa/rZZWxLxHCtOdVUEev+9vo5YdYhC9tCY4wnybX+VQrCYuy9ubkg69fCBxCONJOSLGfw0DWMffQ==",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "17181:   resolved \"https://registry.yarnpkg.com/timsort/-/timsort-0.3.0.tgz#405411a8e7e6339fe64db9a234de11dc31e02bd4\"",
          "17182:   integrity sha1-QFQRqOfmM5/mTbmiNN4R3DHgK9Q=",
          "17184: tmp@^0.0.33:",
          "17185:   version \"0.0.33\"",
          "17186:   resolved \"https://registry.yarnpkg.com/tmp/-/tmp-0.0.33.tgz#6d34335889768d21b2bcda0aa277ced3b1bfadf9\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17263: tiny-warning@^1.0.3:",
          "17264:   version \"1.0.3\"",
          "17265:   resolved \"https://registry.yarnpkg.com/tiny-warning/-/tiny-warning-1.0.3.tgz#94a30db453df4c643d0fd566060d60a875d84754\"",
          "17266:   integrity sha512-lBN9zLN/oAf68o3zNXYrdCt1kP8WsiGW8Oo2ka41b2IM5JL/S1CTyX1rW0mb/zSuJun0ZUrDxx4sqvYS2FWzPA==",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "41236709749829ac69ffdc8cd81eb7a96e1695c6",
      "candidate_info": {
        "commit_hash": "41236709749829ac69ffdc8cd81eb7a96e1695c6",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/41236709749829ac69ffdc8cd81eb7a96e1695c6",
        "files": [
          ".changeset/five-pillows-fail.md",
          ".changeset/tender-impalas-provide.md",
          "packages/graphiql-react/package.json",
          "packages/graphiql-react/src/style/root.css",
          "packages/graphiql-react/src/ui/button.css",
          "packages/graphiql-react/src/ui/button.tsx",
          "packages/graphiql-react/src/ui/dialog.css",
          "packages/graphiql-react/src/ui/dialog.tsx",
          "packages/graphiql-react/src/ui/index.ts",
          "packages/graphiql-toolkit/src/storage/base.ts",
          "packages/graphiql/__mocks__/@graphiql/react.tsx",
          "packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/style.css",
          "yarn.lock"
        ],
        "message": "[redesign] add settings dialog (#2595)\n\n* add `Dialog` component to `@graphiql/react`\n\n* add a `clear` method to the `Storage` type\n\n* add success and failure states to `Button` component\n\n* add settings dialog\n\n* make sure to show dialog above editor scrollbars",
        "before_after_code_files": [
          "packages/graphiql-react/src/style/root.css||packages/graphiql-react/src/style/root.css",
          "packages/graphiql-react/src/ui/button.css||packages/graphiql-react/src/ui/button.css",
          "packages/graphiql-react/src/ui/button.tsx||packages/graphiql-react/src/ui/button.tsx",
          "packages/graphiql-react/src/ui/dialog.css||packages/graphiql-react/src/ui/dialog.css",
          "packages/graphiql-react/src/ui/dialog.tsx||packages/graphiql-react/src/ui/dialog.tsx",
          "packages/graphiql-react/src/ui/index.ts||packages/graphiql-react/src/ui/index.ts",
          "packages/graphiql-toolkit/src/storage/base.ts||packages/graphiql-toolkit/src/storage/base.ts",
          "packages/graphiql/__mocks__/@graphiql/react.tsx||packages/graphiql/__mocks__/@graphiql/react.tsx",
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/style.css||packages/graphiql/src/style.css",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql-react/src/style/root.css||packages/graphiql-react/src/style/root.css": [
          "File: packages/graphiql-react/src/style/root.css -> packages/graphiql-react/src/style/root.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: .graphiql-container,",
          "2: .CodeMirror-info,",
          "5:   --color-pink: #d60690;",
          "6:   --color-purple: #6e6acf;",
          "",
          "[Removed Lines]",
          "3: .CodeMirror-lint-tooltip {",
          "",
          "[Added Lines]",
          "3: .CodeMirror-lint-tooltip,",
          "4: reach-portal {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:   --color-orche-background: rgba(211, 127, 0, 0.07);",
          "24:   --color-orche-background-dark: rgba(211, 127, 0, 0.12);",
          "25:   --color-red-background: rgba(248, 91, 48, 0.12);",
          "28:   --font-family: 'Roboto', sans-serif;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:   --color-green-background: rgba(43, 171, 124, 0.12);",
          "28:   --color-neutral-background: rgba(59, 75, 104, 0.1);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "46:   --px-12: 12px;",
          "47:   --px-16: 16px;",
          "48:   --px-20: 20px;",
          "51:   --border-radius-2: 2px;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "52:   --px-24: 24px;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "67: .graphiql-container,",
          "68: .CodeMirror-info,",
          "69: .CodeMirror-lint-tooltip,",
          "70: .graphiql-container:is(button) {",
          "71:   color: var(--color-neutral-100);",
          "72:   font-family: var(--font-family);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74: reach-portal,",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/ui/button.css||packages/graphiql-react/src/ui/button.css": [
          "File: packages/graphiql-react/src/ui/button.css -> packages/graphiql-react/src/ui/button.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:   &:focus {",
          "29:     outline: var(--color-neutral-15) auto 1px;",
          "30:   }",
          "31: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32:   &.graphiql-button-success {",
          "33:     background-color: var(--color-green-background);",
          "34:   }",
          "35:   &.graphiql-button-error {",
          "36:     background-color: var(--color-red-background);",
          "37:   }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/ui/button.tsx||packages/graphiql-react/src/ui/button.tsx": [
          "File: packages/graphiql-react/src/ui/button.tsx -> packages/graphiql-react/src/ui/button.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import './button.css';",
          "3: export function UnStyledButton(props: JSX.IntrinsicElements['button']) {",
          "4:   return (",
          "5:     <button",
          "6:       {...props}",
          "8:     />",
          "9:   );",
          "10: }",
          "13:   return (",
          "14:     <button",
          "15:       {...props}",
          "17:     />",
          "18:   );",
          "19: }",
          "",
          "[Removed Lines]",
          "7:       className={`graphiql-un-styled ${props.className || ''}`.trim()}",
          "12: export function Button(props: JSX.IntrinsicElements['button']) {",
          "16:       className={`graphiql-button ${props.className || ''}`.trim()}",
          "",
          "[Added Lines]",
          "1: import { compose } from '../utility/compose';",
          "9:       className={compose('graphiql-un-styled', props.className)}",
          "14: type ButtonProps = { state?: 'success' | 'error' };",
          "16: export function Button(props: ButtonProps & JSX.IntrinsicElements['button']) {",
          "20:       className={compose(",
          "21:         'graphiql-button',",
          "22:         props.state === 'success'",
          "23:           ? 'graphiql-button-success'",
          "24:           : props.state === 'error'",
          "25:           ? 'graphiql-button-error'",
          "26:           : '',",
          "27:         props.className,",
          "28:       )}",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/ui/dialog.css||packages/graphiql-react/src/ui/dialog.css": [
          "File: packages/graphiql-react/src/ui/dialog.css -> packages/graphiql-react/src/ui/dialog.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: @import url('@reach/dialog/styles.css');",
          "3: [data-reach-dialog-overlay] {",
          "4:   align-items: center;",
          "5:   background-color: var(--color-neutral-background);",
          "6:   display: flex;",
          "7:   justify-content: center;",
          "13:   z-index: 10;",
          "14: }",
          "16: [data-reach-dialog-content] {",
          "17:   background-color: var(--color-neutral-0);",
          "18:   border-radius: var(--border-radius-12);",
          "19:   box-shadow: var(--box-shadow);",
          "20:   margin: 0;",
          "21:   max-height: 80vh;",
          "22:   max-width: 80vw;",
          "23:   overflow: auto;",
          "24:   padding: 0;",
          "25:   width: unset;",
          "26: }",
          "28: .graphiql-dialog-close > svg {",
          "29:   color: var(--color-neutral-60);",
          "30:   display: block;",
          "31:   height: var(--px-12);",
          "32:   padding: var(--px-12);",
          "33:   width: var(--px-12);",
          "34: }",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/ui/dialog.tsx||packages/graphiql-react/src/ui/dialog.tsx": [
          "File: packages/graphiql-react/src/ui/dialog.tsx -> packages/graphiql-react/src/ui/dialog.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { Dialog as ReachDialog } from '@reach/dialog';",
          "2: import { VisuallyHidden } from '@reach/visually-hidden';",
          "3: import { ComponentProps } from 'react';",
          "4: import { CloseIcon } from '../icons';",
          "5: import { compose } from '../utility/compose';",
          "6: import { UnStyledButton } from './button';",
          "8: import './dialog.css';",
          "10: export function Dialog(props: ComponentProps<typeof ReachDialog>) {",
          "11:   return <ReachDialog {...props} />;",
          "12: }",
          "14: function DialogClose(props: JSX.IntrinsicElements['button']) {",
          "15:   return (",
          "16:     <UnStyledButton",
          "17:       {...props}",
          "18:       type=\"button\"",
          "19:       className={compose('graphiql-dialog-close', props.className)}",
          "20:     >",
          "21:       <VisuallyHidden>Close dialog</VisuallyHidden>",
          "22:       <CloseIcon />",
          "23:     </UnStyledButton>",
          "24:   );",
          "25: }",
          "27: Dialog.Close = DialogClose;",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/ui/index.ts||packages/graphiql-react/src/ui/index.ts": [
          "File: packages/graphiql-react/src/ui/index.ts -> packages/graphiql-react/src/ui/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: export * from './button';",
          "2: export * from './dropdown';",
          "3: export * from './markdown';",
          "4: export * from './spinner';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: export * from './dialog';",
          "",
          "---------------"
        ],
        "packages/graphiql-toolkit/src/storage/base.ts||packages/graphiql-toolkit/src/storage/base.ts": [
          "File: packages/graphiql-toolkit/src/storage/base.ts -> packages/graphiql-toolkit/src/storage/base.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:   getItem(key: string): string | null;",
          "3:   removeItem(key: string): void;",
          "4:   setItem(key: string, value: string): void;",
          "5:   length: number;",
          "6: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5:   clear(): void;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:     return { isQuotaError: quotaError, error };",
          "79:   }",
          "80: }",
          "82: const STORAGE_NAMESPACE = 'graphiql';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:   clear() {",
          "83:     if (this.storage) {",
          "84:       this.storage.clear();",
          "85:     }",
          "86:   }",
          "",
          "---------------"
        ],
        "packages/graphiql/__mocks__/@graphiql/react.tsx||packages/graphiql/__mocks__/@graphiql/react.tsx": [
          "File: packages/graphiql/__mocks__/@graphiql/react.tsx -> packages/graphiql/__mocks__/@graphiql/react.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:   DeprecatedEnumValueIcon,",
          "26:   DeprecatedFieldIcon,",
          "27:   DeprecationReason,",
          "28:   Directive,",
          "29:   DirectiveIcon,",
          "30:   DocExplorer,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:   Dialog,",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: } from 'graphql';",
          "24: import {",
          "25:   ChevronDownIcon,",
          "26:   ChevronUpIcon,",
          "27:   CopyIcon,",
          "28:   DocExplorer,",
          "29:   DocsIcon,",
          "30:   EditorContextProvider,",
          "31:   ExecuteButton,",
          "32:   ExecutionContextProvider,",
          "33:   ExecutionContextType,",
          "34:   ExplorerContextProvider,",
          "35:   HeaderEditor,",
          "36:   History,",
          "37:   HistoryContextProvider,",
          "38:   HistoryIcon,",
          "39:   KeyboardShortcutIcon,",
          "40:   MergeIcon,",
          "41:   PlusIcon,",
          "42:   PrettifyIcon,",
          "43:   QueryEditor,",
          "44:   ReloadIcon,",
          "45:   ResponseEditor,",
          "46:   SchemaContextProvider,",
          "47:   SettingsIcon,",
          "48:   Spinner,",
          "49:   StorageContextProvider,",
          "50:   Tab,",
          "51:   Tabs,",
          "52:   ToolbarButton,",
          "53:   UnStyledButton,",
          "54:   useAutoCompleteLeafs,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:   Button,",
          "29:   Dialog,",
          "33:   EditorContextType,",
          "38:   ExplorerContextType,",
          "42:   HistoryContextType,",
          "45:   KeyMap,",
          "52:   ResponseTooltipType,",
          "54:   SchemaContextType,",
          "58:   StorageContextType,",
          "61:   TabsState,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "64:   useStorageContext,",
          "65:   VariableEditor,",
          "66: } from '@graphiql/react';",
          "78: import { ToolbarMenu, ToolbarMenuItem } from './ToolbarMenu';",
          "79: import find from '../utility/find';",
          "",
          "[Removed Lines]",
          "67: import type {",
          "68:   EditorContextType,",
          "69:   ExplorerContextType,",
          "70:   HistoryContextType,",
          "71:   ResponseTooltipType,",
          "72:   SchemaContextType,",
          "73:   StorageContextType,",
          "74:   TabsState,",
          "75:   KeyMap,",
          "76: } from '@graphiql/react';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "636: export type GraphiQLState = {",
          "637:   activeSecondaryEditor: 'variable' | 'header';",
          "638: };",
          "640: class GraphiQLWithContext extends React.Component<",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "638:   showSettings: boolean;",
          "639:   clearStorageStatus: 'success' | 'error' | null;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "645:     super(props);",
          "649:   }",
          "651:   render() {",
          "",
          "[Removed Lines]",
          "648:     this.state = { activeSecondaryEditor: 'variable' };",
          "",
          "[Added Lines]",
          "650:     this.state = {",
          "651:       activeSecondaryEditor: 'variable',",
          "652:       showSettings: false,",
          "653:       clearStorageStatus: null,",
          "654:     };",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "776:             <UnStyledButton type=\"button\">",
          "777:               <KeyboardShortcutIcon />",
          "778:             </UnStyledButton>",
          "780:               <SettingsIcon />",
          "781:             </UnStyledButton>",
          "782:           </div>",
          "",
          "[Removed Lines]",
          "779:             <UnStyledButton type=\"button\">",
          "",
          "[Added Lines]",
          "785:             <UnStyledButton",
          "786:               type=\"button\"",
          "787:               onClick={() => {",
          "788:                 this.setState({ showSettings: true });",
          "789:               }}",
          "790:             >",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1030:             </div>",
          "1031:           </div>",
          "1032:         </div>",
          "1033:       </div>",
          "1034:     );",
          "1035:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1044:         <Dialog",
          "1045:           isOpen={this.state.showSettings}",
          "1046:           onDismiss={() => {",
          "1047:             this.setState({",
          "1048:               showSettings: false,",
          "1049:               clearStorageStatus: null,",
          "1050:             });",
          "1051:           }}",
          "1052:         >",
          "1053:           <div className=\"graphiql-dialog-header\">",
          "1054:             <div className=\"graphiql-dialog-title\">Settings</div>",
          "1055:             <Dialog.Close",
          "1056:               onClick={() => {",
          "1057:                 this.setState({",
          "1058:                   showSettings: false,",
          "1059:                   clearStorageStatus: null,",
          "1060:                 });",
          "1061:               }}",
          "1062:             />",
          "1063:           </div>",
          "1064:           {this.props.storageContext ? (",
          "1065:             <div className=\"graphiql-dialog-section\">",
          "1066:               <div>",
          "1067:                 <div className=\"graphiql-dialog-section-title\">",
          "1068:                   Clear storage",
          "1069:                 </div>",
          "1070:                 <div className=\"graphiql-dialog-section-caption\">",
          "1071:                   Remove all locally stored data and start fresh.",
          "1072:                 </div>",
          "1073:               </div>",
          "1074:               <div>",
          "1075:                 <Button",
          "1076:                   type=\"button\"",
          "1077:                   state={this.state.clearStorageStatus || undefined}",
          "1078:                   disabled={this.state.clearStorageStatus === 'success'}",
          "1079:                   onClick={() => {",
          "1080:                     try {",
          "1081:                       this.props.storageContext?.clear();",
          "1082:                       this.setState({ clearStorageStatus: 'success' });",
          "1083:                     } catch {",
          "1084:                       this.setState({ clearStorageStatus: 'error' });",
          "1085:                     }",
          "1086:                   }}",
          "1087:                 >",
          "1088:                   {this.state.clearStorageStatus === 'success'",
          "1089:                     ? 'Cleared data'",
          "1090:                     : this.state.clearStorageStatus === 'error'",
          "1091:                     ? 'Failed'",
          "1092:                     : 'Clear data'}",
          "1093:                 </Button>",
          "1094:               </div>",
          "1095:             </div>",
          "1096:           ) : null}",
          "1097:         </Dialog>",
          "",
          "---------------"
        ],
        "packages/graphiql/src/style.css||packages/graphiql/src/style.css": [
          "File: packages/graphiql/src/style.css -> packages/graphiql/src/style.css",
          "--- Hunk 1 ---",
          "[Context before]",
          "231:     transform: rotate(360deg);",
          "232:   }",
          "233: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "236: reach-portal .graphiql-dialog-header {",
          "237:   align-items: center;",
          "238:   display: flex;",
          "239:   justify-content: space-between;",
          "240:   padding: var(--px-24);",
          "241: }",
          "244: reach-portal .graphiql-dialog-title {",
          "245:   font-size: var(--font-size-h3);",
          "246:   font-weight: var(--font-weight-medium);",
          "247: }",
          "250: reach-portal .graphiql-dialog-section {",
          "251:   align-items: center;",
          "252:   border-top: 1px solid var(--color-neutral-15);",
          "253:   display: flex;",
          "254:   justify-content: space-between;",
          "255:   padding: var(--px-24);",
          "256: }",
          "257: reach-portal .graphiql-dialog-section > :not(:first-child) {",
          "258:   margin-left: var(--px-24);",
          "259: }",
          "262: reach-portal .graphiql-dialog-section-title {",
          "263:   font-size: var(--font-size-h4);",
          "264:   font-weight: var(--font-weight-medium);",
          "265: }",
          "268: reach-portal .graphiql-dialog-section-caption {",
          "269:   color: var(--color-neutral-60);",
          "270: }",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "3043:     core-js-pure \"^3.0.0\"",
          "3044:     regenerator-runtime \"^0.13.4\"",
          "3046: \"@babel/runtime@^7.10.2\", \"@babel/runtime@^7.10.3\", \"@babel/runtime@^7.8.3\":",
          "3047:   version \"7.11.2\"",
          "3048:   resolved \"https://registry.yarnpkg.com/@babel/runtime/-/runtime-7.11.2.tgz#f549c13c754cc40b87644b9fa9f09a6a95fe0736\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3046: \"@babel/runtime@^7.0.0\", \"@babel/runtime@^7.12.13\":",
          "3047:   version \"7.18.9\"",
          "3048:   resolved \"https://registry.yarnpkg.com/@babel/runtime/-/runtime-7.18.9.tgz#b4fcfce55db3d2e5e080d2490f608a3b9f407f4a\"",
          "3049:   integrity sha512-lkqXDcvlFT5rvEjiu6+QYO+1GXrEHRo2LOtS7E4GtX5ESIZOgepqsZBVIj6Pv+a6zqsya9VCgiK1KAK4BvJDAw==",
          "3050:   dependencies:",
          "3051:     regenerator-runtime \"^0.13.4\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4465:     \"@reach/utils\" \"0.17.0\"",
          "4466:     tslib \"^2.3.0\"",
          "4468: \"@reach/observe-rect@1.2.0\":",
          "4469:   version \"1.2.0\"",
          "4470:   resolved \"https://registry.yarnpkg.com/@reach/observe-rect/-/observe-rect-1.2.0.tgz#d7a6013b8aafcc64c778a0ccb83355a11204d3b2\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4475: \"@reach/dialog@^0.17.0\":",
          "4476:   version \"0.17.0\"",
          "4477:   resolved \"https://registry.yarnpkg.com/@reach/dialog/-/dialog-0.17.0.tgz#81c48dd4405945dfc6b6c3e5e125db2c4324e9e8\"",
          "4478:   integrity sha512-AnfKXugqDTGbeG3c8xDcrQDE4h9b/vnc27Sa118oQSquz52fneUeX9MeFb5ZEiBJK8T5NJpv7QUTBIKnFCAH5A==",
          "4479:   dependencies:",
          "4480:     \"@reach/portal\" \"0.17.0\"",
          "4481:     \"@reach/utils\" \"0.17.0\"",
          "4482:     prop-types \"^15.7.2\"",
          "4483:     react-focus-lock \"^2.5.2\"",
          "4484:     react-remove-scroll \"^2.4.3\"",
          "4485:     tslib \"^2.3.0\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "4509:     tiny-warning \"^1.0.3\"",
          "4510:     tslib \"^2.3.0\"",
          "4512: \"@rollup/pluginutils@^4.1.1\":",
          "4513:   version \"4.1.1\"",
          "4514:   resolved \"https://registry.yarnpkg.com/@rollup/pluginutils/-/pluginutils-4.1.1.tgz#1d4da86dd4eded15656a57d933fda2b9a08d47ec\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4531: \"@reach/visually-hidden@^0.17.0\":",
          "4532:   version \"0.17.0\"",
          "4533:   resolved \"https://registry.yarnpkg.com/@reach/visually-hidden/-/visually-hidden-0.17.0.tgz#033adba10b5ec419649da8d6bd8e46db06d4c3a1\"",
          "4534:   integrity sha512-T6xF3Nv8vVnjVkGU6cm0+kWtvliLqPAo8PcZ+WxkKacZsaHTjaZb4v1PaCcyQHmuTNT/vtTVNOJLG0SjQOIb7g==",
          "4535:   dependencies:",
          "4536:     prop-types \"^15.7.2\"",
          "4537:     tslib \"^2.3.0\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8324:   resolved \"https://registry.yarnpkg.com/detect-newline/-/detect-newline-3.1.0.tgz#576f5dfc63ae1a192ff192d8ad3af6308991b651\"",
          "8325:   integrity sha512-TLz+x/vEXm/Y7P7wn1EJFNLxYpUD4TgMosxY6fAVJUnJMbupHBOncxyWUG9OpTaH9EBD7uFI5LfEgmMOc54DsA==",
          "8327: detect-node@^2.0.4:",
          "8328:   version \"2.0.5\"",
          "8329:   resolved \"https://registry.yarnpkg.com/detect-node/-/detect-node-2.0.5.tgz#9d270aa7eaa5af0b72c4c9d9b814e7f4ce738b79\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8354: detect-node-es@^1.1.0:",
          "8355:   version \"1.1.0\"",
          "8356:   resolved \"https://registry.yarnpkg.com/detect-node-es/-/detect-node-es-1.1.0.tgz#163acdf643330caa0b4cd7c21e7ee7755d6fa493\"",
          "8357:   integrity sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "10132:     inherits \"^2.0.3\"",
          "10133:     readable-stream \"^2.3.6\"",
          "10135: follow-redirects@^1.0.0, follow-redirects@^1.13.2, follow-redirects@^1.14.0:",
          "10136:   version \"1.15.0\"",
          "10137:   resolved \"https://registry.yarnpkg.com/follow-redirects/-/follow-redirects-1.15.0.tgz#06441868281c86d0dda4ad8bdaead2d02dca89d4\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10167: focus-lock@^0.11.2:",
          "10168:   version \"0.11.2\"",
          "10169:   resolved \"https://registry.yarnpkg.com/focus-lock/-/focus-lock-0.11.2.tgz#aeef3caf1cea757797ac8afdebaec8fd9ab243ed\"",
          "10170:   integrity sha512-pZ2bO++NWLHhiKkgP1bEXHhR1/OjVcSvlCJ98aNJDFeb7H5OOQaO+SKOZle6041O9rv2tmbrO4JzClAvDUHf0g==",
          "10171:   dependencies:",
          "10172:     tslib \"^2.0.3\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "10387:     has \"^1.0.3\"",
          "10388:     has-symbols \"^1.0.1\"",
          "10390: get-own-enumerable-property-symbols@^3.0.0:",
          "10391:   version \"3.0.2\"",
          "10392:   resolved \"https://registry.yarnpkg.com/get-own-enumerable-property-symbols/-/get-own-enumerable-property-symbols-3.0.2.tgz#b5fde77f22cbe35f390b4e089922c50bce6ef664\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10429: get-nonce@^1.0.0:",
          "10430:   version \"1.0.1\"",
          "10431:   resolved \"https://registry.yarnpkg.com/get-nonce/-/get-nonce-1.0.1.tgz#fdf3f0278073820d2ce9426c18f07481b1e0cdf3\"",
          "10432:   integrity sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "11408:   resolved \"https://registry.yarnpkg.com/interpret/-/interpret-1.4.0.tgz#665ab8bc4da27a774a40584e812e3e0fa45b1a1e\"",
          "11409:   integrity sha512-agE4QfB2Lkp9uICn7BAqoscw4SZP9kTE2hxiFI3jBPmXJfdqiahTbUuKGsMoN2GtqL9AxhYioAcVvgsb1HvRbA==",
          "11411: ip-regex@^2.1.0:",
          "11412:   version \"2.1.0\"",
          "11413:   resolved \"https://registry.yarnpkg.com/ip-regex/-/ip-regex-2.1.0.tgz#fa78bf5d2e6913c911ce9f819ee5146bb6d844e9\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11455: invariant@^2.2.4:",
          "11456:   version \"2.2.4\"",
          "11457:   resolved \"https://registry.yarnpkg.com/invariant/-/invariant-2.2.4.tgz#610f3c92c9359ce1db616e538008d23ff35158e6\"",
          "11458:   integrity sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==",
          "11459:   dependencies:",
          "11460:     loose-envify \"^1.0.0\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "13002:   resolved \"https://registry.yarnpkg.com/loglevel/-/loglevel-1.7.1.tgz#005fde2f5e6e47068f935ff28573e125ef72f197\"",
          "13003:   integrity sha512-Hesni4s5UkWkwCGJMQGAh71PaLUmKFM60dHvq0zi/vDhhrzuk+4GgNbTXJ12YYQJn6ZKBDNIjYcuQGKudvqrIw==",
          "13006:   version \"1.4.0\"",
          "13007:   resolved \"https://registry.yarnpkg.com/loose-envify/-/loose-envify-1.4.0.tgz#71ee51fa7be4caec1a63839f7e682d8132d30caf\"",
          "13008:   integrity sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
          "",
          "[Removed Lines]",
          "13005: loose-envify@^1.1.0, loose-envify@^1.4.0:",
          "",
          "[Added Lines]",
          "13056: loose-envify@^1.0.0, loose-envify@^1.1.0, loose-envify@^1.4.0:",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "15646:     minimist \"^1.2.0\"",
          "15647:     strip-json-comments \"~2.0.1\"",
          "15649: react-dom@^17.0.2:",
          "15650:   version \"17.0.2\"",
          "15651:   resolved \"https://registry.yarnpkg.com/react-dom/-/react-dom-17.0.2.tgz#ecffb6845e3ad8dbfcdc498f0d0a939736502c23\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15700: react-clientside-effect@^1.2.6:",
          "15701:   version \"1.2.6\"",
          "15702:   resolved \"https://registry.yarnpkg.com/react-clientside-effect/-/react-clientside-effect-1.2.6.tgz#29f9b14e944a376b03fb650eed2a754dd128ea3a\"",
          "15703:   integrity sha512-XGGGRQAKY+q25Lz9a/4EPqom7WRjz3z9R2k4jhVKA/puQFH/5Nt27vFZYql4m4NVNdUvX8PS3O7r/Zzm7cjUlg==",
          "15704:   dependencies:",
          "15705:     \"@babel/runtime\" \"^7.12.13\"",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "15655:     object-assign \"^4.1.1\"",
          "15656:     scheduler \"^0.20.2\"",
          "15658: react-hot-loader@^4.12.20:",
          "15659:   version \"4.12.21\"",
          "15660:   resolved \"https://registry.yarnpkg.com/react-hot-loader/-/react-hot-loader-4.12.21.tgz#332e830801fb33024b5a147d6b13417f491eb975\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15716: react-focus-lock@^2.5.2:",
          "15717:   version \"2.9.1\"",
          "15718:   resolved \"https://registry.yarnpkg.com/react-focus-lock/-/react-focus-lock-2.9.1.tgz#094cfc19b4f334122c73bb0bff65d77a0c92dd16\"",
          "15719:   integrity sha512-pSWOQrUmiKLkffPO6BpMXN7SNKXMsuOakl652IBuALAu1esk+IcpJyM+ALcYzPTTFz1rD0R54aB9A4HuP5t1Wg==",
          "15720:   dependencies:",
          "15721:     \"@babel/runtime\" \"^7.0.0\"",
          "15722:     focus-lock \"^0.11.2\"",
          "15723:     prop-types \"^15.6.2\"",
          "15724:     react-clientside-effect \"^1.2.6\"",
          "15725:     use-callback-ref \"^1.3.0\"",
          "15726:     use-sidecar \"^1.1.2\"",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "15694:   resolved \"https://registry.yarnpkg.com/react-refresh/-/react-refresh-0.13.0.tgz#cbd01a4482a177a5da8d44c9755ebb1f26d5a1c1\"",
          "15695:   integrity sha512-XP8A9BT0CpRBD+NYLLeIhld/RqG9+gktUjW1FkE+Vm7OCinbG1SshcK5tb9ls4kzvjZr9mOQc7HYgBngEyPAXg==",
          "15697: react-test-renderer@^16.13.1:",
          "15698:   version \"16.14.0\"",
          "15699:   resolved \"https://registry.yarnpkg.com/react-test-renderer/-/react-test-renderer-16.14.0.tgz#e98360087348e260c56d4fe2315e970480c228ae\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15767: react-remove-scroll-bar@^2.3.3:",
          "15768:   version \"2.3.3\"",
          "15769:   resolved \"https://registry.yarnpkg.com/react-remove-scroll-bar/-/react-remove-scroll-bar-2.3.3.tgz#e291f71b1bb30f5f67f023765b7435f4b2b2cd94\"",
          "15770:   integrity sha512-i9GMNWwpz8XpUpQ6QlevUtFjHGqnPG4Hxs+wlIJntu/xcsZVEpJcIV71K3ZkqNy2q3GfgvkD7y6t/Sv8ofYSbw==",
          "15771:   dependencies:",
          "15772:     react-style-singleton \"^2.2.1\"",
          "15773:     tslib \"^2.0.0\"",
          "15775: react-remove-scroll@^2.4.3:",
          "15776:   version \"2.5.5\"",
          "15777:   resolved \"https://registry.yarnpkg.com/react-remove-scroll/-/react-remove-scroll-2.5.5.tgz#1e31a1260df08887a8a0e46d09271b52b3a37e77\"",
          "15778:   integrity sha512-ImKhrzJJsyXJfBZ4bzu8Bwpka14c/fQt0k+cyFp/PBhTfyDnU5hjOtM4AG/0AMyy8oKzOTR0lDgJIM7pYXI0kw==",
          "15779:   dependencies:",
          "15780:     react-remove-scroll-bar \"^2.3.3\"",
          "15781:     react-style-singleton \"^2.2.1\"",
          "15782:     tslib \"^2.1.0\"",
          "15783:     use-callback-ref \"^1.3.0\"",
          "15784:     use-sidecar \"^1.1.2\"",
          "15786: react-style-singleton@^2.2.1:",
          "15787:   version \"2.2.1\"",
          "15788:   resolved \"https://registry.yarnpkg.com/react-style-singleton/-/react-style-singleton-2.2.1.tgz#f99e420492b2d8f34d38308ff660b60d0b1205b4\"",
          "15789:   integrity sha512-ZWj0fHEMyWkHzKYUr2Bs/4zU6XLmq9HsgBURm7g5pAVfyn49DgUiNgY2d4lXRlYSiCif9YBGpQleewkcqddc7g==",
          "15790:   dependencies:",
          "15791:     get-nonce \"^1.0.0\"",
          "15792:     invariant \"^2.2.4\"",
          "15793:     tslib \"^2.0.0\"",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "17730:   resolved \"https://registry.yarnpkg.com/tslib/-/tslib-2.4.0.tgz#7cecaa7f073ce680a05847aa77be941098f36dc3\"",
          "17731:   integrity sha512-d6xOpEDfsi2CZVlPQzGeux8XMwLT9hssAsaPYExaQMuYskwb+x1x7J371tWlbBdWHroy99KnVB6qIkUbs5X3UQ==",
          "17733: tslib@^2.0.3:",
          "17734:   version \"2.1.0\"",
          "17735:   resolved \"https://registry.yarnpkg.com/tslib/-/tslib-2.1.0.tgz#da60860f1c2ecaa5703ab7d39bc05b6bf988b97a\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17831: tslib@^2.0.0, tslib@^2.1.0:",
          "17832:   version \"2.4.0\"",
          "17833:   resolved \"https://registry.yarnpkg.com/tslib/-/tslib-2.4.0.tgz#7cecaa7f073ce680a05847aa77be941098f36dc3\"",
          "17834:   integrity sha512-d6xOpEDfsi2CZVlPQzGeux8XMwLT9hssAsaPYExaQMuYskwb+x1x7J371tWlbBdWHroy99KnVB6qIkUbs5X3UQ==",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "18128:     punycode \"1.3.2\"",
          "18129:     querystring \"0.2.0\"",
          "18131: use@^3.1.0:",
          "18132:   version \"3.1.1\"",
          "18133:   resolved \"https://registry.yarnpkg.com/use/-/use-3.1.1.tgz#d50c8cac79a19fbc20f2911f56eb973f4e10070f\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18234: use-callback-ref@^1.3.0:",
          "18235:   version \"1.3.0\"",
          "18236:   resolved \"https://registry.yarnpkg.com/use-callback-ref/-/use-callback-ref-1.3.0.tgz#772199899b9c9a50526fedc4993fc7fa1f7e32d5\"",
          "18237:   integrity sha512-3FT9PRuRdbB9HfXhEq35u4oZkvpJ5kuYbpqhCfmiZyReuRgpnhDlbr2ZEnnuS0RrJAPn6l23xjFg9kpDM+Ms7w==",
          "18238:   dependencies:",
          "18239:     tslib \"^2.0.0\"",
          "18241: use-sidecar@^1.1.2:",
          "18242:   version \"1.1.2\"",
          "18243:   resolved \"https://registry.yarnpkg.com/use-sidecar/-/use-sidecar-1.1.2.tgz#2f43126ba2d7d7e117aa5855e5d8f0276dfe73c2\"",
          "18244:   integrity sha512-epTbsLuzZ7lPClpz2TyryBfztm7m+28DlEv2ZCQ3MDr5ssiwyOwGH/e5F9CkfWjJ1t4clvI58yF822/GUkjjhw==",
          "18245:   dependencies:",
          "18246:     detect-node-es \"^1.1.0\"",
          "18247:     tslib \"^2.0.0\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e6b4261f5d6fc2a1fa7743c2571100c6c83fa435",
      "candidate_info": {
        "commit_hash": "e6b4261f5d6fc2a1fa7743c2571100c6c83fa435",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/e6b4261f5d6fc2a1fa7743c2571100c6c83fa435",
        "files": [
          "packages/graphiql/cypress/integration/tabs.spec.ts",
          "packages/graphiql/cypress/support/commands.ts"
        ],
        "message": "add e2e test suite for tabs (#2446)",
        "before_after_code_files": [
          "packages/graphiql/cypress/integration/tabs.spec.ts||packages/graphiql/cypress/integration/tabs.spec.ts",
          "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts"
          ],
          "candidate": [
            "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql/cypress/integration/tabs.spec.ts||packages/graphiql/cypress/integration/tabs.spec.ts": [
          "File: packages/graphiql/cypress/integration/tabs.spec.ts -> packages/graphiql/cypress/integration/tabs.spec.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: describe('Tabs', () => {",
          "2:   it('Should store editor contents when switching between tabs', () => {",
          "3:     cy.visit('/?query=');",
          "4:     cy.get('#session-tab-0').should('have.text', '<untitled>');",
          "7:     cy.get('.query-editor textarea').type('{id', { force: true }).wait(500);",
          "8:     cy.get('#session-tab-0').should('have.text', '<untitled>');",
          "11:     cy.get('.execute-button').click().wait(500);",
          "14:     cy.get('.tab-add').click();",
          "17:     cy.get('.query-editor textarea')",
          "18:       .type('query Foo {image', { force: true })",
          "19:       .wait(500);",
          "20:     cy.get('#session-tab-1').should('have.text', 'Foo');",
          "23:     cy.get('.variable-editor textarea')",
          "24:       .eq(0)",
          "25:       .type('{\"someVar\":42', { force: true });",
          "28:     cy.contains('Request Headers').click();",
          "29:     cy.get('.variable-editor textarea')",
          "30:       .eq(1)",
          "31:       .type('{\"someHeader\":\"someValue\"', { force: true });",
          "34:     cy.get('.execute-button').click().wait(500);",
          "37:     cy.get('#session-tab-0').click();",
          "40:     cy.get('#session-tab-0').should('have.text', '<untitled>');",
          "41:     cy.get('#session-tab-1').should('have.text', 'Foo');",
          "44:     cy.assertHasValues({",
          "45:       query: '{id}',",
          "46:       variablesString: '',",
          "47:       headersString: '',",
          "48:       response: { data: { id: 'abc123' } },",
          "49:     });",
          "52:     cy.get('#session-tab-1').click();",
          "55:     cy.get('#session-tab-0').should('have.text', '<untitled>');",
          "56:     cy.get('#session-tab-1').should('have.text', 'Foo');",
          "59:     cy.assertHasValues({",
          "60:       query: 'query Foo {image}',",
          "61:       variablesString: '{\"someVar\":42}',",
          "62:       headersString: '{\"someHeader\":\"someValue\"}',",
          "63:       response: { data: { image: '/images/logo.svg' } },",
          "64:     });",
          "67:     cy.get('#session-tab-1 .close').click();",
          "70:     cy.get('#session-tab-0').should('have.text', '<untitled>');",
          "73:     cy.assertHasValues({",
          "74:       query: '{id}',",
          "75:       variablesString: '',",
          "76:       headersString: '',",
          "77:       response: { data: { id: 'abc123' } },",
          "78:     });",
          "79:   });",
          "80: });",
          "",
          "---------------"
        ],
        "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts": [
          "File: packages/graphiql/cypress/support/commands.ts -> packages/graphiql/cypress/support/commands.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:   query: string;",
          "15:   variables?: Record<string, any>;",
          "16:   variablesString?: string;",
          "17: };",
          "18: declare namespace Cypress {",
          "19:   type MockResult =",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17:   headersString?: string;",
          "18:   response?: Record<string, any>;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70: Cypress.Commands.add(",
          "71:   'assertHasValues',",
          "73:     cy.get('.query-editor').should(element => {",
          "75:     });",
          "76:     if (typeof variables !== 'undefined') {",
          "82:     }",
          "83:     if (typeof variablesString !== 'undefined') {",
          "87:         );",
          "88:       });",
          "89:     }",
          "",
          "[Removed Lines]",
          "72:   ({ query, variables, variablesString }: Op) => {",
          "74:       expect(element.get(0).innerText).to.equal(codeWithLineNumbers(query));",
          "77:       cy.get('.variable-editor .codemirrorWrap').should(element => {",
          "78:         expect(element.get(0).innerText).to.equal(",
          "79:           codeWithLineNumbers(JSON.stringify(variables, null, 2)),",
          "80:         );",
          "81:       });",
          "84:       cy.get('.variable-editor .codemirrorWrap').should(element => {",
          "85:         expect(element.get(0).innerText).to.equal(",
          "86:           codeWithLineNumbers(variablesString),",
          "",
          "[Added Lines]",
          "74:   ({ query, variables, variablesString, headersString, response }: Op) => {",
          "76:       expect(normalize(element.get(0).innerText)).to.equal(",
          "77:         codeWithLineNumbers(query),",
          "78:       );",
          "81:       cy.contains('Query Variables').click();",
          "82:       cy.get('.variable-editor .codemirrorWrap')",
          "83:         .eq(0)",
          "84:         .should(element => {",
          "85:           expect(normalize(element.get(0).innerText)).to.equal(",
          "86:             codeWithLineNumbers(JSON.stringify(variables, null, 2)),",
          "87:           );",
          "88:         });",
          "91:       cy.contains('Query Variables').click();",
          "92:       cy.get('.variable-editor .codemirrorWrap')",
          "93:         .eq(0)",
          "94:         .should(element => {",
          "95:           expect(normalize(element.get(0).innerText)).to.equal(",
          "96:             codeWithLineNumbers(variablesString),",
          "97:           );",
          "98:         });",
          "99:     }",
          "100:     if (typeof headersString !== 'undefined') {",
          "101:       cy.contains('Request Headers').click();",
          "102:       cy.get('.variable-editor .codemirrorWrap')",
          "103:         .eq(1)",
          "104:         .should(element => {",
          "105:           expect(normalize(element.get(0).innerText)).to.equal(",
          "106:             codeWithLineNumbers(headersString),",
          "107:           );",
          "108:         });",
          "109:     }",
          "110:     if (typeof response !== 'undefined') {",
          "111:       cy.get('.result-window').should(element => {",
          "112:         expect(normalizeWhitespace(element.get(0).innerText)).to.equal(",
          "113:           JSON.stringify(response, null, 2),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "95:   cy.clickExecuteQuery();",
          "96:   cy.wait(timeout);",
          "97:   cy.get('section#graphiql-result-viewer').should(element => {",
          "101:   });",
          "102: });",
          "",
          "[Removed Lines]",
          "99:     const response = element.get(0).innerText.replace(/[\\u00a0]/g, ' ');",
          "100:     expect(response).to.equal(JSON.stringify(mockSuccess, null, 2));",
          "",
          "[Added Lines]",
          "125:     expect(normalizeWhitespace(element.get(0).innerText)).to.equal(",
          "126:       JSON.stringify(mockSuccess, null, 2),",
          "127:     );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "108:     .join('\\n');",
          "109: }",
          "111: Cypress.Commands.add(",
          "112:   'assertLinterMarkWithMessage',",
          "113:   (text, severity, message) => {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "138: function normalize(str: string) {",
          "139:   return str.replace(/\\u200b/g, '');",
          "140: }",
          "142: function normalizeWhitespace(str: string) {",
          "143:   return str.replace(/\\u00a0/g, ' ');",
          "144: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8be164b1e158d00752d6d3f30630a797d07d08c9",
      "candidate_info": {
        "commit_hash": "8be164b1e158d00752d6d3f30630a797d07d08c9",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/8be164b1e158d00752d6d3f30630a797d07d08c9",
        "files": [
          ".changeset/gold-zebras-agree.md",
          ".changeset/popular-pears-beg.md",
          "packages/graphiql-react/package.json",
          "packages/graphiql-react/src/history.tsx",
          "packages/graphiql-react/src/index.ts",
          "packages/graphiql-react/src/storage.tsx",
          "packages/graphiql-toolkit/src/storage/base.ts",
          "packages/graphiql/__mocks__/@graphiql/react.ts",
          "packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/HistoryQuery.tsx",
          "packages/graphiql/src/components/QueryHistory.tsx",
          "packages/graphiql/src/components/__tests__/QueryHistory.spec.tsx"
        ],
        "message": "add `StorageContext` and `HistoryContext` to `@graphiql/react` (#2413)\n\n* allow creating noop StorageAPI instances\n\n* create StorageContext and HistoryContext in @graphiql/react and move over the logic from graphiql\n\n* avoid re-setting state after initial render\n\n* fix this in method\n\n* fix toggling history\n\n* use up-to-date version for toolkit\n\n* demote version bump to patch",
        "before_after_code_files": [
          "packages/graphiql-react/src/history.tsx||packages/graphiql-react/src/history.tsx",
          "packages/graphiql-react/src/index.ts||packages/graphiql-react/src/index.ts",
          "packages/graphiql-react/src/storage.tsx||packages/graphiql-react/src/storage.tsx",
          "packages/graphiql-toolkit/src/storage/base.ts||packages/graphiql-toolkit/src/storage/base.ts",
          "packages/graphiql/__mocks__/@graphiql/react.ts||packages/graphiql/__mocks__/@graphiql/react.ts",
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/src/components/HistoryQuery.tsx||packages/graphiql/src/components/HistoryQuery.tsx",
          "packages/graphiql/src/components/QueryHistory.tsx||packages/graphiql/src/components/QueryHistory.tsx",
          "packages/graphiql/src/components/__tests__/HistoryQuery.spec.tsx||packages/graphiql/src/components/__tests__/QueryHistory.spec.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ],
          "candidate": [
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql-react/src/history.tsx||packages/graphiql-react/src/history.tsx": [
          "File: packages/graphiql-react/src/history.tsx -> packages/graphiql-react/src/history.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { HistoryStore, QueryStoreItem, StorageAPI } from '@graphiql/toolkit';",
          "2: import {",
          "3:   createContext,",
          "4:   ReactNode,",
          "5:   useCallback,",
          "6:   useContext,",
          "7:   useMemo,",
          "8:   useRef,",
          "9:   useState,",
          "10: } from 'react';",
          "12: import { StorageContext } from './storage';",
          "14: export type HistoryContextType = {",
          "15:   addToHistory(operation: {",
          "16:     query?: string;",
          "17:     variables?: string;",
          "18:     headers?: string;",
          "19:     operationName?: string;",
          "20:   }): void;",
          "21:   editLabel(args: {",
          "22:     query?: string;",
          "23:     variables?: string;",
          "24:     headers?: string;",
          "25:     operationName?: string;",
          "26:     label?: string;",
          "27:     favorite?: boolean;",
          "28:   }): void;",
          "29:   hide(): void;",
          "30:   isVisible: boolean;",
          "31:   items: readonly QueryStoreItem[];",
          "32:   show(): void;",
          "33:   toggle(): void;",
          "34:   toggleFavorite(args: {",
          "35:     query?: string;",
          "36:     variables?: string;",
          "37:     headers?: string;",
          "38:     operationName?: string;",
          "39:     label?: string;",
          "40:     favorite?: boolean;",
          "41:   }): void;",
          "42: };",
          "44: export const HistoryContext = createContext<HistoryContextType | null>(null);",
          "46: type HistoryContextProviderProps = {",
          "47:   children: ReactNode;",
          "48:   maxHistoryLength?: number;",
          "49:   onToggle?(isOpen: boolean): void;",
          "50: };",
          "52: export function HistoryContextProvider(props: HistoryContextProviderProps) {",
          "53:   const storage = useContext(StorageContext);",
          "54:   const historyStore = useRef(",
          "55:     new HistoryStore(",
          "57:       storage || new StorageAPI(null),",
          "58:       props.maxHistoryLength || DEFAULT_HISTORY_LENGTH,",
          "59:     ),",
          "60:   );",
          "61:   const [items, setItems] = useState(historyStore.current?.queries || []);",
          "62:   const [isVisible, setIsVisible] = useState(",
          "63:     storage?.get(STORAGE_KEY) === 'true' || false,",
          "64:   );",
          "66:   const addToHistory: HistoryContextType['addToHistory'] = useCallback(",
          "67:     ({ query, variables, headers, operationName }) => {",
          "68:       historyStore.current?.updateHistory(",
          "69:         query,",
          "70:         variables,",
          "71:         headers,",
          "72:         operationName,",
          "73:       );",
          "74:       setItems(historyStore.current.queries);",
          "75:     },",
          "76:     [],",
          "77:   );",
          "79:   const editLabel: HistoryContextType['editLabel'] = useCallback(",
          "80:     ({ query, variables, headers, operationName, label, favorite }) => {",
          "81:       historyStore.current.editLabel(",
          "82:         query,",
          "83:         variables,",
          "84:         headers,",
          "85:         operationName,",
          "86:         label,",
          "87:         favorite,",
          "88:       );",
          "89:       setItems(historyStore.current.queries);",
          "90:     },",
          "91:     [],",
          "92:   );",
          "94:   const { onToggle } = props;",
          "96:   const hide = useCallback(() => {",
          "97:     onToggle?.(false);",
          "98:     storage?.set(STORAGE_KEY, JSON.stringify(false));",
          "99:     setIsVisible(false);",
          "100:   }, [onToggle, storage]);",
          "102:   const show = useCallback(() => {",
          "103:     onToggle?.(true);",
          "104:     storage?.set(STORAGE_KEY, JSON.stringify(true));",
          "105:     setIsVisible(true);",
          "106:   }, [onToggle, storage]);",
          "108:   const toggle = useCallback(() => {",
          "109:     setIsVisible(current => {",
          "110:       const newValue = !current;",
          "111:       onToggle?.(newValue);",
          "112:       storage?.set(STORAGE_KEY, JSON.stringify(newValue));",
          "113:       return newValue;",
          "114:     });",
          "115:   }, [onToggle, storage]);",
          "117:   const toggleFavorite: HistoryContextType['toggleFavorite'] = useCallback(",
          "118:     ({ query, variables, headers, operationName, label, favorite }) => {",
          "119:       historyStore.current.toggleFavorite(",
          "120:         query,",
          "121:         variables,",
          "122:         headers,",
          "123:         operationName,",
          "124:         label,",
          "125:         favorite,",
          "126:       );",
          "127:       setItems(historyStore.current.queries);",
          "128:     },",
          "129:     [],",
          "130:   );",
          "132:   const value = useMemo<HistoryContextType>(",
          "133:     () => ({",
          "134:       addToHistory,",
          "135:       editLabel,",
          "136:       hide,",
          "137:       isVisible,",
          "138:       items,",
          "139:       show,",
          "140:       toggle,",
          "141:       toggleFavorite,",
          "142:     }),",
          "143:     [",
          "144:       addToHistory,",
          "145:       editLabel,",
          "146:       hide,",
          "147:       isVisible,",
          "148:       items,",
          "149:       show,",
          "150:       toggle,",
          "151:       toggleFavorite,",
          "152:     ],",
          "153:   );",
          "155:   return (",
          "156:     <HistoryContext.Provider value={value}>",
          "157:       {props.children}",
          "158:     </HistoryContext.Provider>",
          "159:   );",
          "160: }",
          "162: const DEFAULT_HISTORY_LENGTH = 20;",
          "163: const STORAGE_KEY = 'historyPaneOpen';",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/index.ts||packages/graphiql-react/src/index.ts": [
          "File: packages/graphiql-react/src/index.ts -> packages/graphiql-react/src/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:   ExplorerContextProvider,",
          "14:   useExplorerNavStack,",
          "15: } from './explorer';",
          "17: import type {",
          "18:   EditorContextType,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "16: import { HistoryContext, HistoryContextProvider } from './history';",
          "17: import { StorageContext, StorageContextProvider } from './storage';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28:   ExplorerNavStack,",
          "29:   ExplorerNavStackItem,",
          "30: } from './explorer';",
          "32: export {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: import type { HistoryContextType } from './history';",
          "34: import type { StorageContextType } from './storage';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "43:   ExplorerContext,",
          "44:   ExplorerContextProvider,",
          "45:   useExplorerNavStack,",
          "46: };",
          "48: export type {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:   HistoryContext,",
          "52:   HistoryContextProvider,",
          "54:   StorageContext,",
          "55:   StorageContextProvider,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "58:   ExplorerFieldDef,",
          "59:   ExplorerNavStack,",
          "60:   ExplorerNavStackItem,",
          "61: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:   HistoryContextType,",
          "74:   StorageContextType,",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/storage.tsx||packages/graphiql-react/src/storage.tsx": [
          "File: packages/graphiql-react/src/storage.tsx -> packages/graphiql-react/src/storage.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { Storage, StorageAPI } from '@graphiql/toolkit';",
          "2: import { createContext, ReactNode, useEffect, useRef, useState } from 'react';",
          "4: export type StorageContextType = StorageAPI;",
          "6: export const StorageContext = createContext<StorageContextType | null>(null);",
          "8: type StorageContextProviderProps = {",
          "9:   children: ReactNode;",
          "10:   storage?: Storage;",
          "11: };",
          "13: export function StorageContextProvider(props: StorageContextProviderProps) {",
          "14:   const isInitialRender = useRef(true);",
          "15:   const [storage, setStorage] = useState(new StorageAPI(props.storage));",
          "17:   useEffect(() => {",
          "18:     if (isInitialRender.current) {",
          "19:       isInitialRender.current = false;",
          "20:     } else {",
          "21:       setStorage(new StorageAPI(props.storage));",
          "22:     }",
          "23:   }, [props.storage]);",
          "25:   return (",
          "26:     <StorageContext.Provider value={storage}>",
          "27:       {props.children}",
          "28:     </StorageContext.Provider>",
          "29:   );",
          "30: }",
          "",
          "---------------"
        ],
        "packages/graphiql-toolkit/src/storage/base.ts||packages/graphiql-toolkit/src/storage/base.ts": [
          "File: packages/graphiql-toolkit/src/storage/base.ts -> packages/graphiql-toolkit/src/storage/base.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: export class StorageAPI {",
          "26:   storage: Storage | null;",
          "31:   }",
          "33:   get(name: string): string | null {",
          "",
          "[Removed Lines]",
          "28:   constructor(storage?: Storage) {",
          "29:     this.storage =",
          "30:       storage || (typeof window !== 'undefined' ? window.localStorage : null);",
          "",
          "[Added Lines]",
          "28:   constructor(storage?: Storage | null) {",
          "29:     if (storage) {",
          "30:       this.storage = storage;",
          "31:     } else if (storage === null) {",
          "33:       this.storage = null;",
          "34:     } else {",
          "36:       this.storage = typeof window !== 'undefined' ? window.localStorage : null;",
          "37:     }",
          "",
          "---------------"
        ],
        "packages/graphiql/__mocks__/@graphiql/react.ts||packages/graphiql/__mocks__/@graphiql/react.ts": [
          "File: packages/graphiql/__mocks__/@graphiql/react.ts -> packages/graphiql/__mocks__/@graphiql/react.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:   EditorContextProvider,",
          "4:   ExplorerContext,",
          "5:   ExplorerContextProvider,",
          "6:   useExplorerNavStack,",
          "7:   useHeaderEditor as _useHeaderEditor,",
          "8:   useQueryEditor as _useQueryEditor,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:   HistoryContext,",
          "7:   HistoryContextProvider,",
          "8:   ImagePreview,",
          "9:   onHasCompletion,",
          "10:   StorageContext,",
          "11:   StorageContextProvider,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15:   ExplorerFieldDef,",
          "16:   ExplorerNavStack,",
          "17:   ExplorerNavStackItem,",
          "18:   UseHeaderEditorArgs,",
          "19:   UseQueryEditorArgs,",
          "20: } from '@graphiql/react';",
          "21: import { useContext, useEffect, useRef, useState } from 'react';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24:   HistoryContextType,",
          "25:   ResponseTooltipType,",
          "26:   StorageContextType,",
          "28:   UseResponseEditorArgs,",
          "30:   UseVariableEditorArgs,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "25:   EditorContextProvider,",
          "26:   ExplorerContext,",
          "27:   ExplorerContextProvider,",
          "28:   useExplorerNavStack,",
          "29: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "39:   HistoryContext,",
          "40:   HistoryContextProvider,",
          "41:   ImagePreview,",
          "42:   onHasCompletion,",
          "43:   StorageContext,",
          "44:   StorageContextProvider,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "34:   ExplorerFieldDef,",
          "35:   ExplorerNavStack,",
          "36:   ExplorerNavStackItem,",
          "37:   UseHeaderEditorArgs,",
          "38:   UseQueryEditorArgs,",
          "39: };",
          "41: function useMockedEditor(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54:   HistoryContextType,",
          "55:   ResponseTooltipType,",
          "56:   StorageContextType,",
          "58:   UseResponseEditorArgs,",
          "60:   UseVariableEditorArgs,",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "39:   EditorContextProvider,",
          "40:   ExplorerContext,",
          "41:   ExplorerContextProvider,",
          "42: } from '@graphiql/react';",
          "43: import type {",
          "44:   EditorContextType,",
          "45:   ExplorerContextType,",
          "46:   ExplorerFieldDef,",
          "47:   ResponseTooltipType,",
          "48: } from '@graphiql/react';",
          "50: import { ExecuteButton } from './ExecuteButton';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:   HistoryContext,",
          "43:   HistoryContextProvider,",
          "44:   StorageContext,",
          "45:   StorageContextProvider,",
          "51:   HistoryContextType,",
          "53:   StorageContextType,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "70:   fetcherReturnToPromise,",
          "71:   formatError,",
          "72:   formatResult,",
          "74:   isAsyncIterable,",
          "75:   isObservable,",
          "76:   isPromise,",
          "78: } from '@graphiql/toolkit';",
          "79: import type {",
          "80:   Fetcher,",
          "",
          "[Removed Lines]",
          "73:   HistoryStore,",
          "77:   StorageAPI,",
          "",
          "[Added Lines]",
          "82:   QueryStoreItem,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "334:   headerEditorActive: boolean;",
          "335:   headerEditorEnabled: boolean;",
          "336:   shouldPersistHeaders: boolean;",
          "338:   schemaErrors?: readonly GraphQLError[];",
          "339:   docExplorerWidth: number;",
          "340:   isWaitingForResponse: boolean;",
          "",
          "[Removed Lines]",
          "337:   historyPaneOpen: boolean;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "342:   variableToType?: VariableToType;",
          "343:   operations?: OperationDefinitionNode[];",
          "344:   documentAST?: DocumentNode;",
          "346:   tabs: TabsState;",
          "347: };",
          "",
          "[Removed Lines]",
          "345:   maxHistoryLength: number;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "371: export function GraphiQL(props: GraphiQLProps) {",
          "372:   return (",
          "390:   );",
          "391: }",
          "",
          "[Removed Lines]",
          "373:     <EditorContextProvider>",
          "374:       <ExplorerContextProvider>",
          "375:         <EditorContext.Consumer>",
          "376:           {editorContext => (",
          "377:             <ExplorerContext.Consumer>",
          "378:               {explorerContext => (",
          "379:                 <GraphiQLWithContext",
          "380:                   {...props}",
          "381:                   editorContext={editorContext}",
          "382:                   explorerContext={explorerContext}",
          "383:                 />",
          "384:               )}",
          "385:             </ExplorerContext.Consumer>",
          "386:           )}",
          "387:         </EditorContext.Consumer>",
          "388:       </ExplorerContextProvider>",
          "389:     </EditorContextProvider>",
          "",
          "[Added Lines]",
          "376:     <StorageContextProvider storage={props.storage}>",
          "377:       <StorageContext.Consumer>",
          "378:         {storageContext => (",
          "379:           <EditorContextProvider>",
          "380:             <HistoryContextProvider",
          "381:               maxHistoryLength={props.maxHistoryLength}",
          "382:               onToggle={props.onToggleHistory}>",
          "383:               <ExplorerContextProvider>",
          "384:                 <EditorContext.Consumer>",
          "385:                   {editorContext => (",
          "386:                     <HistoryContext.Consumer>",
          "387:                       {historyContext => (",
          "388:                         <ExplorerContext.Consumer>",
          "389:                           {explorerContext => (",
          "390:                             <GraphiQLWithContext",
          "391:                               {...props}",
          "392:                               editorContext={editorContext}",
          "393:                               explorerContext={explorerContext}",
          "394:                               historyContext={historyContext}",
          "395:                               storageContext={storageContext}",
          "396:                             />",
          "397:                           )}",
          "398:                         </ExplorerContext.Consumer>",
          "399:                       )}",
          "400:                     </HistoryContext.Consumer>",
          "401:                   )}",
          "402:                 </EditorContext.Consumer>",
          "403:               </ExplorerContextProvider>",
          "404:             </HistoryContextProvider>",
          "405:           </EditorContextProvider>",
          "406:         )}",
          "407:       </StorageContext.Consumer>",
          "408:     </StorageContextProvider>",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "432:   editorContext: EditorContextType | null;",
          "433:   explorerContext: ExplorerContextType | null;",
          "434: };",
          "436: class GraphiQLWithContext extends React.Component<",
          "",
          "[Removed Lines]",
          "431: type GraphiQLWithContextProps = GraphiQLProps & {",
          "",
          "[Added Lines]",
          "450: type GraphiQLWithContextProps = Omit<",
          "451:   GraphiQLProps,",
          "452:   'maxHistoryLength' | 'onToggleHistory' | 'storage'",
          "453: > & {",
          "456:   historyContext: HistoryContextType | null;",
          "457:   storageContext: StorageContextType | null;",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "439: > {",
          "441:   _editorQueryID = 0;",
          "443:   _introspectionQuery: string;",
          "444:   _introspectionQueryName: string;",
          "445:   _introspectionQuerySansSubscriptions: string;",
          "",
          "[Removed Lines]",
          "442:   _storage: StorageAPI;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "451:   graphiqlContainer: Maybe<HTMLDivElement>;",
          "454:   editorBarComponent: Maybe<HTMLDivElement>;",
          "456:   constructor(props: GraphiQLWithContextProps) {",
          "",
          "[Removed Lines]",
          "452:   _queryHistory: Maybe<QueryHistory>;",
          "453:   _historyStore: Maybe<HistoryStore>;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "461:       throw new TypeError('GraphiQL requires a fetcher function.');",
          "462:     }",
          "472:     this.componentIsMounted = false;",
          "475:     const query =",
          "485:     const queryFacts = getOperationFacts(props.schema, query);",
          "487:     const variables =",
          "499:     const operationName =",
          "509:     let docExplorerOpen = props.docExplorerOpen || false;",
          "514:     }",
          "",
          "[Removed Lines]",
          "465:     this._storage = new StorageAPI(props.storage);",
          "467:     const maxHistoryLength = props.maxHistoryLength ?? 20;",
          "469:     this._historyStore = new HistoryStore(this._storage, maxHistoryLength);",
          "476:       props.query !== undefined",
          "477:         ? props.query",
          "478:         : this._storage.get('query')",
          "479:         ? (this._storage.get('query') as string)",
          "480:         : props.defaultQuery !== undefined",
          "481:         ? props.defaultQuery",
          "482:         : defaultQuery;",
          "488:       props.variables !== undefined",
          "489:         ? props.variables",
          "490:         : this._storage.get('variables');",
          "493:     const headers =",
          "494:       props.headers !== undefined",
          "495:         ? props.headers",
          "496:         : this._storage.get('headers');",
          "500:       props.operationName !== undefined",
          "501:         ? props.operationName",
          "502:         : getSelectedOperationName(",
          "503:             undefined,",
          "504:             this._storage.get('operationName') as string,",
          "505:             queryFacts && queryFacts.operations,",
          "506:           );",
          "512:     if (this._storage.get('docExplorerOpen')) {",
          "513:       docExplorerOpen = this._storage.get('docExplorerOpen') === 'true';",
          "",
          "[Added Lines]",
          "490:       props.query ??",
          "491:       this.props.storageContext?.get('query') ??",
          "492:       props.defaultQuery ??",
          "493:       defaultQuery;",
          "499:       props.variables ?? this.props.storageContext?.get('variables');",
          "502:     const headers = props.headers ?? this.props.storageContext?.get('headers');",
          "506:       props.operationName ??",
          "507:       getSelectedOperationName(",
          "508:         undefined,",
          "509:         this.props.storageContext?.get('operationName') ?? undefined,",
          "510:         queryFacts && queryFacts.operations,",
          "511:       );",
          "517:     const docExplorerOpenStorage = this.props.storageContext?.get(",
          "518:       'docExplorerOpen',",
          "519:     );",
          "520:     if (docExplorerOpenStorage) {",
          "521:       docExplorerOpen = docExplorerOpenStorage === 'true';",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "576:     let rawTabState: string | null = null;",
          "578:     if (this.props.tabs) {",
          "580:     }",
          "582:     let tabsState: TabsState;",
          "",
          "[Removed Lines]",
          "579:       rawTabState = this._storage.get('tabState');",
          "",
          "[Added Lines]",
          "587:       rawTabState = this.props.storageContext?.get('tabState') ?? null;",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "631:       response: activeTab?.response ?? response,",
          "632:       docExplorerOpen,",
          "633:       schemaErrors,",
          "635:       secondaryEditorOpen,",
          "636:       secondaryEditorHeight:",
          "638:       variableEditorActive:",
          "640:         props.headerEditorEnabled",
          "642:           : true,",
          "644:       headerEditorEnabled,",
          "645:       shouldPersistHeaders,",
          "647:       docExplorerWidth:",
          "649:         DEFAULT_DOC_EXPLORER_WIDTH,",
          "650:       isWaitingForResponse: false,",
          "651:       subscription: null,",
          "653:       ...queryFacts,",
          "654:     };",
          "655:     if (this.state.query) {",
          "",
          "[Removed Lines]",
          "634:       editorFlex: Number(this._storage.get('editorFlex')) || 1,",
          "637:         Number(this._storage.get('secondaryEditorHeight')) || 200,",
          "639:         this._storage.get('variableEditorActive') === 'true' ||",
          "641:           ? this._storage.get('headerEditorActive') !== 'true'",
          "643:       headerEditorActive: this._storage.get('headerEditorActive') === 'true',",
          "646:       historyPaneOpen: this._storage.get('historyPaneOpen') === 'true' || false,",
          "648:         Number(this._storage.get('docExplorerWidth')) ||",
          "652:       maxHistoryLength,",
          "",
          "[Added Lines]",
          "642:       editorFlex: Number(this.props.storageContext?.get('editorFlex')) || 1,",
          "645:         Number(this.props.storageContext?.get('secondaryEditorHeight')) || 200,",
          "647:         this.props.storageContext?.get('variableEditorActive') === 'true' ||",
          "649:           ? this.props.storageContext?.get('headerEditorActive') !== 'true'",
          "651:       headerEditorActive:",
          "652:         this.props.storageContext?.get('headerEditorActive') === 'true',",
          "656:         Number(this.props.storageContext?.get('docExplorerWidth')) ||",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "733:     ) {",
          "734:       nextSchema = undefined;",
          "735:     }",
          "737:     this.setState(",
          "738:       {",
          "739:         schema: nextSchema,",
          "",
          "[Removed Lines]",
          "736:     this._storage.set('operationName', nextOperationName as string);",
          "",
          "[Added Lines]",
          "743:     if (nextOperationName !== undefined) {",
          "744:       this.props.storageContext?.set('operationName', nextOperationName);",
          "745:     }",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "759:   private persistTabsState = () => {",
          "760:     if (this.props.tabs) {",
          "762:         'tabState',",
          "763:         JSON.stringify(this.state.tabs, (key, value) =>",
          "764:           key === 'response' ||",
          "",
          "[Removed Lines]",
          "761:       this._storage.set(",
          "",
          "[Added Lines]",
          "770:       this.props.storageContext?.set(",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "830:           label=\"Copy\"",
          "831:         />",
          "832:         <ToolbarButton",
          "835:           label=\"History\"",
          "836:         />",
          "837:         {this.props.toolbar?.additionalContent",
          "",
          "[Removed Lines]",
          "833:           onClick={this.handleToggleHistory}",
          "834:           title=\"Show History\"",
          "",
          "[Added Lines]",
          "842:           onClick={() => this.props.historyContext?.toggle()}",
          "843:           title={",
          "844:             this.props.historyContext?.isVisible",
          "845:               ? 'Hide History'",
          "846:               : 'Show History'",
          "847:           }",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "857:       'docExplorerWrap' +",
          "858:       (this.state.docExplorerWidth < 200 ? ' doc-explorer-narrow' : '');",
          "866:     const secondaryEditorOpen = this.state.secondaryEditorOpen;",
          "867:     const secondaryEditorStyle = {",
          "868:       height: secondaryEditorOpen",
          "",
          "[Removed Lines]",
          "860:     const historyPaneStyle = {",
          "861:       display: this.state.historyPaneOpen ? 'block' : 'none',",
          "862:       width: '230px',",
          "863:       zIndex: 7,",
          "864:     };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "878:         }}",
          "879:         data-testid=\"graphiql-container\"",
          "880:         className=\"graphiql-container\">",
          "897:           </div>",
          "898:         )}",
          "899:         <div className=\"editorWrap\">",
          "",
          "[Removed Lines]",
          "881:         {this.state.historyPaneOpen && (",
          "882:           <div className=\"historyPaneWrap\" style={historyPaneStyle}>",
          "883:             <QueryHistory",
          "884:               ref={node => {",
          "885:                 this._queryHistory = node;",
          "886:               }}",
          "887:               onSelectQuery={this.handleSelectHistoryQuery}",
          "888:               storage={this._storage}",
          "889:               maxHistoryLength={this.state.maxHistoryLength}>",
          "890:               <button",
          "891:                 className=\"docExplorerHide\"",
          "892:                 onClick={this.handleToggleHistory}",
          "893:                 aria-label=\"Close History\">",
          "894:                 {'\\u2715'}",
          "895:               </button>",
          "896:             </QueryHistory>",
          "",
          "[Added Lines]",
          "888:         {this.props.historyContext?.isVisible && (",
          "889:           <div",
          "890:             className=\"historyPaneWrap\"",
          "891:             style={{ width: '230px', zIndex: 7 }}>",
          "892:             <QueryHistory onSelect={this.handleSelectHistoryQuery} />",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1417:         this.showDoc(reference.type);",
          "1418:       }",
          "1419:     });",
          "1421:       'docExplorerOpen',",
          "1422:       JSON.stringify(this.state.docExplorerOpen),",
          "1423:     );",
          "",
          "[Removed Lines]",
          "1420:     this._storage.set(",
          "",
          "[Added Lines]",
          "1416:     this.props.storageContext?.set(",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1449:         response: undefined,",
          "1450:         operationName,",
          "1451:       });",
          "1470:       }",
          "1473:       let fullResponse: FetcherResultPayload = { data: {} };",
          "",
          "[Removed Lines]",
          "1452:       this._storage.set('operationName', operationName as string);",
          "1454:       if (this._queryHistory) {",
          "1455:         this._queryHistory.onUpdateHistory(",
          "1456:           editedQuery,",
          "1457:           variables,",
          "1458:           headers,",
          "1459:           operationName,",
          "1460:         );",
          "1461:       } else {",
          "1462:         if (this._historyStore) {",
          "1463:           this._historyStore.updateHistory(",
          "1464:             editedQuery,",
          "1465:             variables,",
          "1466:             headers,",
          "1467:             operationName,",
          "1468:           );",
          "1469:         }",
          "",
          "[Added Lines]",
          "1448:       if (operationName !== undefined) {",
          "1449:         this.props.storageContext?.set('operationName', operationName);",
          "1452:       this.props.historyContext?.addToHistory({",
          "1453:         query: editedQuery,",
          "1454:         variables,",
          "1455:         headers,",
          "1456:         operationName,",
          "1457:       });",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1693:       }),",
          "1694:       this.persistTabsState,",
          "1695:     );",
          "1697:     if (this.props.onEditQuery) {",
          "1698:       return this.props.onEditQuery(value, queryFacts?.documentAST);",
          "1699:     }",
          "",
          "[Removed Lines]",
          "1696:     this._storage.set('query', value);",
          "",
          "[Added Lines]",
          "1683:     this.props.storageContext?.set('query', value);",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1754:       }),",
          "1755:       this.persistTabsState,",
          "1756:     );",
          "1758:     if (this.props.onEditVariables) {",
          "1759:       this.props.onEditVariables(value);",
          "1760:     }",
          "",
          "[Removed Lines]",
          "1757:     debounce(500, () => this._storage.set('variables', value))();",
          "",
          "[Added Lines]",
          "1744:     debounce(500, () => this.props.storageContext?.set('variables', value))();",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1769:       this.persistTabsState,",
          "1770:     );",
          "1771:     this.props.shouldPersistHeaders &&",
          "1773:     if (this.props.onEditHeaders) {",
          "1774:       this.props.onEditHeaders(value);",
          "1775:     }",
          "",
          "[Removed Lines]",
          "1772:       debounce(500, () => this._storage.set('headers', value))();",
          "",
          "[Added Lines]",
          "1759:       debounce(500, () => this.props.storageContext?.set('headers', value))();",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1816:             this.showDoc(type);",
          "1817:           });",
          "1818:           debounce(500, () =>",
          "1820:               'docExplorerOpen',",
          "1821:               JSON.stringify(this.state.docExplorerOpen),",
          "1822:             ),",
          "",
          "[Removed Lines]",
          "1819:             this._storage.set(",
          "",
          "[Added Lines]",
          "1806:             this.props.storageContext?.set(",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1830:     if (typeof this.props.onToggleDocs === 'function') {",
          "1831:       this.props.onToggleDocs(!this.state.docExplorerOpen);",
          "1832:     }",
          "1834:       'docExplorerOpen',",
          "1835:       JSON.stringify(!this.state.docExplorerOpen),",
          "1836:     );",
          "1837:     this.setState({ docExplorerOpen: !this.state.docExplorerOpen });",
          "1838:   };",
          "1857:     if (query) {",
          "1858:       this.handleEditQuery(query);",
          "1859:     }",
          "",
          "[Removed Lines]",
          "1833:     this._storage.set(",
          "1840:   handleToggleHistory = () => {",
          "1841:     if (typeof this.props.onToggleHistory === 'function') {",
          "1842:       this.props.onToggleHistory(!this.state.historyPaneOpen);",
          "1843:     }",
          "1844:     this._storage.set(",
          "1845:       'historyPaneOpen',",
          "1846:       JSON.stringify(!this.state.historyPaneOpen),",
          "1847:     );",
          "1848:     this.setState({ historyPaneOpen: !this.state.historyPaneOpen });",
          "1849:   };",
          "1851:   handleSelectHistoryQuery = (",
          "1852:     query?: string,",
          "1853:     variables?: string,",
          "1854:     headers?: string,",
          "1855:     operationName?: string,",
          "1856:   ) => {",
          "",
          "[Added Lines]",
          "1820:     this.props.storageContext?.set(",
          "1827:   handleSelectHistoryQuery = ({",
          "1828:     query,",
          "1829:     variables,",
          "1830:     headers,",
          "1831:     operationName,",
          "1832:   }: QueryStoreItem) => {",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1887:       const rightSize = editorBar.clientWidth - leftSize;",
          "1888:       this.setState({ editorFlex: leftSize / rightSize });",
          "1889:       debounce(500, () =>",
          "1891:       )();",
          "1892:     };",
          "",
          "[Removed Lines]",
          "1890:         this._storage.set('editorFlex', JSON.stringify(this.state.editorFlex)),",
          "",
          "[Added Lines]",
          "1866:         this.props.storageContext?.set(",
          "1867:           'editorFlex',",
          "1868:           JSON.stringify(this.state.editorFlex),",
          "1869:         ),",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1905:   handleResetResize = () => {",
          "1906:     this.setState({ editorFlex: 1 });",
          "1908:   };",
          "1910:   private _didClickDragBar(event: React.MouseEvent) {",
          "",
          "[Removed Lines]",
          "1907:     this._storage.set('editorFlex', JSON.stringify(this.state.editorFlex));",
          "",
          "[Added Lines]",
          "1886:     this.props.storageContext?.set(",
          "1887:       'editorFlex',",
          "1888:       JSON.stringify(this.state.editorFlex),",
          "1889:     );",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1946:         if (typeof this.props.onToggleDocs === 'function') {",
          "1947:           this.props.onToggleDocs(!this.state.docExplorerOpen);",
          "1948:         }",
          "1950:           'docExplorerOpen',",
          "1951:           JSON.stringify(this.state.docExplorerOpen),",
          "1952:         );",
          "",
          "[Removed Lines]",
          "1949:         this._storage.set(",
          "",
          "[Added Lines]",
          "1931:         this.props.storageContext?.set(",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1957:           docExplorerWidth: Math.min(docsSize, 650),",
          "1958:         });",
          "1959:         debounce(500, () =>",
          "1961:             'docExplorerWidth',",
          "1962:             JSON.stringify(this.state.docExplorerWidth),",
          "1963:           ),",
          "1964:         )();",
          "1965:       }",
          "1967:         'docExplorerOpen',",
          "1968:         JSON.stringify(this.state.docExplorerOpen),",
          "1969:       );",
          "",
          "[Removed Lines]",
          "1960:           this._storage.set(",
          "1966:       this._storage.set(",
          "",
          "[Added Lines]",
          "1942:           this.props.storageContext?.set(",
          "1948:       this.props.storageContext?.set(",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1973:       if (!this.state.docExplorerOpen) {",
          "1974:         this.setState({ docExplorerWidth: hadWidth });",
          "1975:         debounce(500, () =>",
          "1977:             'docExplorerWidth',",
          "1978:             JSON.stringify(this.state.docExplorerWidth),",
          "1979:           ),",
          "",
          "[Removed Lines]",
          "1976:           this._storage.set(",
          "",
          "[Added Lines]",
          "1958:           this.props.storageContext?.set(",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1995:       docExplorerWidth: DEFAULT_DOC_EXPLORER_WIDTH,",
          "1996:     });",
          "1997:     debounce(500, () =>",
          "1999:         'docExplorerWidth',",
          "2000:         JSON.stringify(this.state.docExplorerWidth),",
          "2001:       ),",
          "",
          "[Removed Lines]",
          "1998:       this._storage.set(",
          "",
          "[Added Lines]",
          "1980:       this.props.storageContext?.set(",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "2062:         });",
          "2063:       }",
          "2064:       debounce(500, () =>",
          "2066:           'secondaryEditorHeight',",
          "2067:           JSON.stringify(this.state.secondaryEditorHeight),",
          "2068:         ),",
          "",
          "[Removed Lines]",
          "2065:         this._storage.set(",
          "",
          "[Added Lines]",
          "2047:         this.props.storageContext?.set(",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/HistoryQuery.tsx||packages/graphiql/src/components/HistoryQuery.tsx": [
          "File: packages/graphiql/src/components/HistoryQuery.tsx -> packages/graphiql/src/components/HistoryQuery.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/QueryHistory.tsx||packages/graphiql/src/components/QueryHistory.tsx": [
          "File: packages/graphiql/src/components/QueryHistory.tsx -> packages/graphiql/src/components/QueryHistory.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: type QueryHistoryProps = {",
          "26: };",
          "39:     );",
          "42:   }",
          "88:     );",
          "102:         />",
          "115: }",
          "",
          "[Removed Lines]",
          "8: import { HistoryStore, QueryStoreItem, StorageAPI } from '@graphiql/toolkit';",
          "9: import React, { ReactNode } from 'react';",
          "11: import HistoryQuery, {",
          "12:   HandleEditLabelFn,",
          "13:   HandleSelectQueryFn,",
          "14:   HandleToggleFavoriteFn,",
          "15: } from './HistoryQuery';",
          "18:   onSelectQuery: HandleSelectQueryFn;",
          "19:   storage: StorageAPI;",
          "20:   maxHistoryLength: number;",
          "21:   children?: ReactNode;",
          "22: };",
          "24: type QueryHistoryState = {",
          "25:   queries: Array<QueryStoreItem>;",
          "28: export class QueryHistory extends React.Component<",
          "29:   QueryHistoryProps,",
          "30:   QueryHistoryState",
          "31: > {",
          "32:   historyStore: HistoryStore;",
          "34:   constructor(props: QueryHistoryProps) {",
          "35:     super(props);",
          "36:     this.historyStore = new HistoryStore(",
          "37:       this.props.storage,",
          "38:       this.props.maxHistoryLength,",
          "40:     const queries = this.historyStore.queries;",
          "41:     this.state = { queries };",
          "44:   onUpdateHistory = (",
          "45:     query?: string,",
          "46:     variables?: string,",
          "47:     headers?: string,",
          "48:     operationName?: string,",
          "49:   ) => {",
          "50:     this.historyStore.updateHistory(query, variables, headers, operationName);",
          "51:     this.setState({ queries: this.historyStore.queries });",
          "52:   };",
          "54:   onHandleEditLabel: HandleEditLabelFn = (",
          "55:     query,",
          "56:     variables,",
          "57:     headers,",
          "58:     operationName,",
          "59:     label,",
          "60:     favorite,",
          "61:   ) => {",
          "62:     this.historyStore.editLabel(",
          "63:       query,",
          "64:       variables,",
          "65:       headers,",
          "66:       operationName,",
          "67:       label,",
          "68:       favorite,",
          "69:     );",
          "70:     this.setState({ queries: this.historyStore.queries });",
          "71:   };",
          "73:   onToggleFavorite: HandleToggleFavoriteFn = (",
          "74:     query,",
          "75:     variables,",
          "76:     headers,",
          "77:     operationName,",
          "78:     label,",
          "79:     favorite,",
          "80:   ) => {",
          "81:     this.historyStore.toggleFavorite(",
          "82:       query,",
          "83:       variables,",
          "84:       headers,",
          "85:       operationName,",
          "86:       label,",
          "87:       favorite,",
          "89:     this.setState({ queries: this.historyStore.queries });",
          "90:   };",
          "92:   render() {",
          "93:     const queries = this.state.queries.slice().reverse();",
          "94:     const queryNodes = queries.map((query, i) => {",
          "95:       return (",
          "96:         <HistoryQuery",
          "97:           handleEditLabel={this.onHandleEditLabel}",
          "98:           handleToggleFavorite={this.onToggleFavorite}",
          "99:           key={`${i}:${query.label || query.query}`}",
          "100:           onSelect={this.props.onSelectQuery}",
          "101:           {...query}",
          "103:       );",
          "104:     });",
          "105:     return (",
          "106:       <section aria-label=\"History\">",
          "107:         <div className=\"history-title-bar\">",
          "108:           <div className=\"history-title\">History</div>",
          "109:           <div className=\"doc-explorer-rhs\">{this.props.children}</div>",
          "110:         </div>",
          "111:         <ul className=\"history-contents\">{queryNodes}</ul>",
          "112:       </section>",
          "113:     );",
          "114:   }",
          "",
          "[Added Lines]",
          "8: import { HistoryContext } from '@graphiql/react';",
          "9: import { QueryStoreItem } from '@graphiql/toolkit';",
          "10: import React, { useContext, useEffect, useRef, useState } from 'react';",
          "13:   onSelect(item: QueryStoreItem): void;",
          "16: export function QueryHistory(props: QueryHistoryProps) {",
          "17:   const historyContext = useContext(HistoryContext);",
          "18:   if (!historyContext) {",
          "19:     throw new Error(",
          "20:       'Tried to render the `QueryHistory` component without the necessary context. Make sure that the `HistoryContextProvider` from `@graphiql/react` is rendered higher in the tree.',",
          "24:   return (",
          "25:     <section aria-label=\"History\">",
          "26:       <div className=\"history-title-bar\">",
          "27:         <div className=\"history-title\">History</div>",
          "28:         <div className=\"doc-explorer-rhs\">",
          "29:           <button",
          "30:             className=\"docExplorerHide\"",
          "31:             onClick={() => historyContext.hide()}",
          "32:             aria-label=\"Close History\">",
          "33:             {'\\u2715'}",
          "34:           </button>",
          "35:         </div>",
          "36:       </div>",
          "37:       <ul className=\"history-contents\">",
          "38:         {historyContext.items",
          "39:           .slice()",
          "40:           .reverse()",
          "41:           .map((item, i) => {",
          "42:             return (",
          "43:               <QueryHistoryItem",
          "44:                 key={`${i}:${item.label || item.query}`}",
          "45:                 onSelect={props.onSelect}",
          "46:                 item={item}",
          "47:               />",
          "48:             );",
          "49:           })}",
          "50:       </ul>",
          "51:     </section>",
          "52:   );",
          "53: }",
          "55: type QueryHistoryItemProps = {",
          "56:   onSelect(item: QueryStoreItem): void;",
          "57:   item: QueryStoreItem;",
          "58: };",
          "60: export function QueryHistoryItem(props: QueryHistoryItemProps) {",
          "61:   const historyContext = useContext(HistoryContext);",
          "62:   if (!historyContext) {",
          "63:     throw new Error(",
          "64:       'Tried to render the `QueryHistoryItem` component without the necessary context. Make sure that the `HistoryContextProvider` from `@graphiql/react` is rendered higher in the tree.',",
          "66:   }",
          "68:   const editField = useRef<HTMLInputElement>(null);",
          "69:   const [isEditable, setIsEditable] = useState(false);",
          "71:   useEffect(() => {",
          "72:     if (isEditable && editField.current) {",
          "73:       editField.current.focus();",
          "74:     }",
          "75:   }, [isEditable]);",
          "77:   const displayName =",
          "78:     props.item.label ||",
          "79:     props.item.operationName ||",
          "80:     props.item.query",
          "81:       ?.split('\\n')",
          "82:       .filter(line => line.indexOf('#') !== 0)",
          "83:       .join('');",
          "84:   const starIcon = props.item.favorite ? '\\u2605' : '\\u2606';",
          "85:   return (",
          "86:     <li className={isEditable ? 'editable' : undefined}>",
          "87:       {isEditable ? (",
          "88:         <input",
          "89:           type=\"text\"",
          "90:           defaultValue={props.item.label}",
          "91:           ref={editField}",
          "92:           onBlur={e => {",
          "93:             e.stopPropagation();",
          "94:             setIsEditable(false);",
          "95:             historyContext.editLabel({ ...props.item, label: e.target.value });",
          "96:           }}",
          "97:           onKeyDown={e => {",
          "98:             if (e.keyCode === 13) {",
          "99:               e.stopPropagation();",
          "100:               setIsEditable(false);",
          "101:               historyContext.editLabel({",
          "102:                 ...props.item,",
          "103:                 label: e.currentTarget.value,",
          "104:               });",
          "105:             }",
          "106:           }}",
          "107:           placeholder=\"Type a label\"",
          "109:       ) : (",
          "110:         <button",
          "111:           className=\"history-label\"",
          "112:           onClick={() => props.onSelect(props.item)}>",
          "113:           {displayName}",
          "114:         </button>",
          "115:       )}",
          "116:       <button",
          "117:         onClick={e => {",
          "118:           e.stopPropagation();",
          "119:           setIsEditable(true);",
          "120:         }}",
          "121:         aria-label=\"Edit label\">",
          "122:         {'\\u270e'}",
          "123:       </button>",
          "124:       <button",
          "125:         className={props.item.favorite ? 'favorited' : undefined}",
          "126:         onClick={e => {",
          "127:           e.stopPropagation();",
          "128:           historyContext.toggleFavorite(props.item);",
          "129:         }}",
          "130:         aria-label={props.item.favorite ? 'Remove favorite' : 'Add favorite'}>",
          "131:         {starIcon}",
          "132:       </button>",
          "133:     </li>",
          "134:   );",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/__tests__/HistoryQuery.spec.tsx||packages/graphiql/src/components/__tests__/QueryHistory.spec.tsx": [
          "File: packages/graphiql/src/components/__tests__/HistoryQuery.spec.tsx -> packages/graphiql/src/components/__tests__/QueryHistory.spec.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: import { render, fireEvent } from '@testing-library/react';",
          "11: import {",
          "12:   mockOperationName1,",
          "13:   mockQuery1,",
          "14:   mockVariables1,",
          "15:   mockHeaders1,",
          "16: } from './fixtures';",
          "28: };",
          "30: function getMockProps(",
          "33:   return {",
          "34:     ...baseMockProps,",
          "35:     ...customProps,",
          "36:   };",
          "37: }",
          "40:   it('renders operationName if label is not provided', () => {",
          "42:     const props = getMockProps(otherMockProps);",
          "44:     expect(container.querySelector('button.history-label')!.textContent).toBe(",
          "45:       mockOperationName1,",
          "46:     );",
          "47:   });",
          "49:   it('renders a string version of the query if label or operation name are not provided', () => {",
          "51:     expect(container.querySelector('button.history-label')!.textContent).toBe(",
          "52:       mockQuery1",
          "53:         .split('\\n')",
          "",
          "[Removed Lines]",
          "7: import React from 'react';",
          "10: import HistoryQuery, { HistoryQueryProps } from '../HistoryQuery';",
          "18: const noOp = () => {};",
          "20: const baseMockProps = {",
          "21:   favorite: false,",
          "22:   handleEditLabel: noOp,",
          "23:   handleToggleFavorite: noOp,",
          "24:   onSelect: noOp,",
          "25:   query: mockQuery1,",
          "26:   variables: mockVariables1,",
          "27:   headers: mockHeaders1,",
          "31:   customProps?: Partial<HistoryQueryProps>,",
          "32: ): HistoryQueryProps {",
          "39: describe('HistoryQuery', () => {",
          "41:     const otherMockProps = { operationName: mockOperationName1 };",
          "43:     const { container } = render(<HistoryQuery {...props} />);",
          "50:     const { container } = render(<HistoryQuery {...getMockProps()} />);",
          "",
          "[Added Lines]",
          "7: import React, { ComponentProps } from 'react';",
          "10: import { QueryHistoryItem } from '../QueryHistory';",
          "17: import { HistoryContextProvider } from '@graphiql/react';",
          "19: type QueryHistoryItemProps = ComponentProps<typeof QueryHistoryItem>;",
          "21: function QueryHistoryItemWithContext(props: QueryHistoryItemProps) {",
          "22:   return (",
          "23:     <HistoryContextProvider>",
          "24:       <QueryHistoryItem {...props} />",
          "25:     </HistoryContextProvider>",
          "26:   );",
          "27: }",
          "29: const baseMockProps: QueryHistoryItemProps = {",
          "30:   item: {",
          "31:     query: mockQuery1,",
          "32:     variables: mockVariables1,",
          "33:     headers: mockHeaders1,",
          "34:     favorite: false,",
          "35:   },",
          "36:   onSelect: () => {},",
          "40:   customProps?: Partial<QueryHistoryItemProps>,",
          "41: ): QueryHistoryItemProps {",
          "45:     item: { ...baseMockProps.item, ...customProps?.item },",
          "49: describe('QueryHistoryItem', () => {",
          "51:     const otherMockProps = { item: { operationName: mockOperationName1 } };",
          "53:     const { container } = render(<QueryHistoryItemWithContext {...props} />);",
          "60:     const { container } = render(",
          "61:       <QueryHistoryItemWithContext {...getMockProps()} />,",
          "62:     );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:   it('calls onSelect with the correct arguments when history label button is clicked', () => {",
          "60:     const onSelectSpy = jest.spyOn(baseMockProps, 'onSelect');",
          "64:     const { container } = render(",
          "66:     );",
          "67:     fireEvent.click(container.querySelector('button.history-label')!);",
          "75:   });",
          "77:   it('renders label input if the edit label button is clicked', () => {",
          "79:     fireEvent.click(container.querySelector('[aria-label=\"Edit label\"]')!);",
          "80:     expect(container.querySelectorAll('li.editable').length).toBe(1);",
          "81:     expect(container.querySelectorAll('input').length).toBe(1);",
          "",
          "[Removed Lines]",
          "61:     const otherMockProps = {",
          "62:       operationName: mockOperationName1,",
          "63:     };",
          "65:       <HistoryQuery {...getMockProps(otherMockProps)} />,",
          "68:     expect(onSelectSpy).toHaveBeenCalledWith(",
          "69:       mockQuery1,",
          "70:       mockVariables1,",
          "71:       mockHeaders1,",
          "72:       mockOperationName1,",
          "73:       undefined,",
          "74:     );",
          "78:     const { container } = render(<HistoryQuery {...getMockProps()} />);",
          "",
          "[Added Lines]",
          "73:     const otherMockProps = { item: { operationName: mockOperationName1 } };",
          "74:     const mockProps = getMockProps(otherMockProps);",
          "76:       <QueryHistoryItemWithContext {...mockProps} />,",
          "79:     expect(onSelectSpy).toHaveBeenCalledWith(mockProps.item);",
          "83:     const { container } = render(",
          "84:       <QueryHistoryItemWithContext {...getMockProps()} />,",
          "85:     );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5852ba47c720a2577817aed512bef9a262254f2c",
      "candidate_info": {
        "commit_hash": "5852ba47c720a2577817aed512bef9a262254f2c",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/5852ba47c720a2577817aed512bef9a262254f2c",
        "files": [
          ".changeset/odd-cougars-unite.md",
          "packages/graphql-language-service-server/package.json",
          "yarn.lock"
        ],
        "message": "Update babel parser in the graphql language server (#2176)",
        "before_after_code_files": [
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "758:   resolved \"https://registry.yarnpkg.com/@babel/helper-validator-identifier/-/helper-validator-identifier-7.15.7.tgz#220df993bfe904a4a6b02ab4f3385a5ebf6e2389\"",
          "759:   integrity sha512-K4JvCtQqad9OY2+yTU8w+E82ywk/fe+ELNlt1G8z3bVGlZfn/hOcQQsUhGhW/N+tb3fxK800wLtKOE/aM0m72w==",
          "761: \"@babel/helper-validator-option@^7.12.17\":",
          "762:   version \"7.12.17\"",
          "763:   resolved \"https://registry.yarnpkg.com/@babel/helper-validator-option/-/helper-validator-option-7.12.17.tgz#d1fbf012e1a79b7eebbfdc6d270baaf8d9eb9831\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "761: \"@babel/helper-validator-identifier@^7.16.7\":",
          "762:   version \"7.16.7\"",
          "763:   resolved \"https://registry.yarnpkg.com/@babel/helper-validator-identifier/-/helper-validator-identifier-7.16.7.tgz#e8c602438c4a8195751243da9031d1607d247cad\"",
          "764:   integrity sha512-hsEnFemeiW4D08A5gUAZxLBTXpZ39P+a+DGDsHw1yxqyQ/jzFEnxf5uTEGp+3bzAbNOxU1paTgYS4ECU/IgfDw==",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "869:   resolved \"https://registry.yarnpkg.com/@babel/parser/-/parser-7.16.4.tgz#d5f92f57cf2c74ffe9b37981c0e72fee7311372e\"",
          "870:   integrity sha512-6V0qdPUaiVHH3RtZeLIsc+6pDhbYzHR8ogA8w+f+Wc77DuXto19g2QUwveINoS34Uw+W8/hQDGJCx+i4n7xcng==",
          "872: \"@babel/parser@^7.4.3\":",
          "873:   version \"7.11.5\"",
          "874:   resolved \"https://registry.yarnpkg.com/@babel/parser/-/parser-7.11.5.tgz#c7ff6303df71080ec7a4f5b8c003c58f1cf51037\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "877: \"@babel/parser@^7.17.3\":",
          "878:   version \"7.17.3\"",
          "879:   resolved \"https://registry.yarnpkg.com/@babel/parser/-/parser-7.17.3.tgz#b07702b982990bf6fdc1da5049a23fece4c5c3d0\"",
          "880:   integrity sha512-7yJPvPV+ESz2IUTPbOL+YkIGyCqOyNIzdguKQuJGnH7bg1WTIifuM21YqokFt/THWh1AkCRn9IgoykTRCBVpzA==",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2826:     \"@babel/helper-validator-identifier\" \"^7.15.7\"",
          "2827:     to-fast-properties \"^2.0.0\"",
          "2829: \"@babel/types@^7.4.0\":",
          "2830:   version \"7.11.5\"",
          "2831:   resolved \"https://registry.yarnpkg.com/@babel/types/-/types-7.11.5.tgz#d9de577d01252d77c6800cee039ee64faf75662d\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2839: \"@babel/types@^7.17.0\":",
          "2840:   version \"7.17.0\"",
          "2841:   resolved \"https://registry.yarnpkg.com/@babel/types/-/types-7.17.0.tgz#a826e368bccb6b3d84acd76acad5c0d87342390b\"",
          "2842:   integrity sha512-TmKSNO4D5rzhL5bjWFcVHHLETzfQ/AmbKpKPOSjlP0WoHZ6L911fgoOKY4Alp/emzG4cHJdyN49zpgkbXFEHHw==",
          "2843:   dependencies:",
          "2844:     \"@babel/helper-validator-identifier\" \"^7.16.7\"",
          "2845:     to-fast-properties \"^2.0.0\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "11247:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
          "11249: \"graphiql@file:packages/graphiql\":",
          "11251:   dependencies:",
          "11252:     \"@graphiql/toolkit\" \"^0.4.2\"",
          "11253:     codemirror \"^5.58.2\"",
          "",
          "[Removed Lines]",
          "11250:   version \"1.5.16\"",
          "",
          "[Added Lines]",
          "11268:   version \"1.5.19\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}