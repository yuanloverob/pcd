{
  "cve_id": "CVE-2019-16772",
  "cve_desc": "The serialize-to-js NPM package before version 3.0.1 is vulnerable to Cross-site Scripting (XSS). It does not properly mitigate against unsafe characters in serialized regular expressions. This vulnerability is not affected on Node.js environment since Node.js's implementation of RegExp.prototype.toString() backslash-escapes all forward slashes in regular expressions. If serialized data of regular expression objects are used in an environment other than Node.js, it is affected by this vulnerability.",
  "repo": "commenthol/serialize-to-js",
  "patch_hash": "181d7d583ae5293cd47cc99b14ad13352875f3e3",
  "patch_info": {
    "commit_hash": "181d7d583ae5293cd47cc99b14ad13352875f3e3",
    "repo": "commenthol/serialize-to-js",
    "commit_url": "https://github.com/commenthol/serialize-to-js/commit/181d7d583ae5293cd47cc99b14ad13352875f3e3",
    "files": [
      "lib/index.js",
      "test/fixtures.js"
    ],
    "message": "fix: for ghsa-3fjq-93xj-3f3f",
    "before_after_code_files": [
      "lib/index.js||lib/index.js",
      "test/fixtures.js||test/fixtures.js"
    ]
  },
  "patch_diff": {
    "lib/index.js||lib/index.js": [
      "File: lib/index.js -> lib/index.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "75:     out += !/^\\s*(function|\\([^)]*\\)\\s*=>)/m.test(tmp) ? 'function ' + tmp : tmp",
      "76:   } else if (util.isObject(source)) {",
      "77:     if (util.isRegExp(source)) {",
      "79:     } else if (util.isDate(source)) {",
      "80:       out += 'new Date(\"' + source.toJSON() + '\")'",
      "81:     } else if (util.isError(source)) {",
      "",
      "[Removed Lines]",
      "78:       out += source.toString()",
      "",
      "[Added Lines]",
      "78:       out += 'new RegExp(\"' + source.source + '\", \"' + source.flags + '\")'",
      "",
      "---------------"
    ],
    "test/fixtures.js||test/fixtures.js": [
      "File: test/fixtures.js -> test/fixtures.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "33:   ],",
      "34:   'regex': [",
      "35:     /test(?:it)?/ig,",
      "37:   ],",
      "38:   'object': [",
      "39:     { a: 1, b: 2 },",
      "",
      "[Removed Lines]",
      "36:     '/test(?:it)?/gi'",
      "",
      "[Added Lines]",
      "36:     'new RegExp(\"test(?:it)?\", \"gi\")'",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "138:     new Float64Array([1e12, 2000000, 3.1415, -4.9e2, 5]),",
      "139:     'new Float64Array([1000000000000, 2000000, 3.1415, -490, 5])',",
      "140:     'toString'",
      "141:   ]",
      "142: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "141:   ],",
      "142:   'regexXss': [",
      "143:     /[</script><script>alert('xss')//]/i,",
      "144:     'new RegExp(\"[</script><script>alert(\\'xss\\')//]\", \"i\")'",
      "145:   ],",
      "146:   'regex no flags': [",
      "147:     /abc/,",
      "148:     'new RegExp(\"abc\", \"\")'",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "090b14b3382640071df597530a30c435e857cafd",
      "candidate_info": {
        "commit_hash": "090b14b3382640071df597530a30c435e857cafd",
        "repo": "commenthol/serialize-to-js",
        "commit_url": "https://github.com/commenthol/serialize-to-js/commit/090b14b3382640071df597530a30c435e857cafd",
        "files": [
          "lib/index.js",
          "test/fixtures.js"
        ],
        "message": "Escape unsafe characters in messages of error objects.",
        "before_after_code_files": [
          "lib/index.js||lib/index.js",
          "test/fixtures.js||test/fixtures.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/index.js||lib/index.js",
            "test/fixtures.js||test/fixtures.js"
          ],
          "candidate": [
            "lib/index.js||lib/index.js",
            "test/fixtures.js||test/fixtures.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/index.js||lib/index.js": [
          "File: lib/index.js -> lib/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:     } else if (util.isDate(source)) {",
          "80:       out += 'new Date(\"' + source.toJSON() + '\")'",
          "81:     } else if (util.isError(source)) {",
          "83:     } else if (util.isBuffer(source)) {",
          "",
          "[Removed Lines]",
          "82:       out += 'new Error(' + (source.message ? '\"' + source.message + '\"' : '') + ')'",
          "",
          "[Added Lines]",
          "82:       out += 'new Error(' + (source.message ? serialize(source.message) : '') + ')'",
          "",
          "---------------"
        ],
        "test/fixtures.js||test/fixtures.js": [
          "File: test/fixtures.js -> test/fixtures.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "156:   'regex no flags': [",
          "157:     /abc/,",
          "158:     'new RegExp(\"abc\", \"\")'",
          "159:   ]",
          "160: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:   ],",
          "160:   'error with unsafe message': [",
          "161:     new Error(\"</script><script>alert('xss')\"),",
          "162:     'new Error(\"\\\\u003C\\\\u002Fscript\\\\u003E\\\\u003Cscript\\\\u003Ealert(\\'xss\\')\")'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "54f4e5330a70ea306e7bfe4a5dc97542c8535c76",
      "candidate_info": {
        "commit_hash": "54f4e5330a70ea306e7bfe4a5dc97542c8535c76",
        "repo": "commenthol/serialize-to-js",
        "commit_url": "https://github.com/commenthol/serialize-to-js/commit/54f4e5330a70ea306e7bfe4a5dc97542c8535c76",
        "files": [
          "lib/index.js",
          "test/fixtures.js",
          "test/index.test.js"
        ],
        "message": "Fix serialization of regular expressions.",
        "before_after_code_files": [
          "lib/index.js||lib/index.js",
          "test/fixtures.js||test/fixtures.js",
          "test/index.test.js||test/index.test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/index.js||lib/index.js",
            "test/fixtures.js||test/fixtures.js"
          ],
          "candidate": [
            "lib/index.js||lib/index.js",
            "test/fixtures.js||test/fixtures.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/index.js||lib/index.js": [
          "File: lib/index.js -> lib/index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:     out += !/^\\s*(function|\\([^)]*\\)\\s*=>)/m.test(tmp) ? 'function ' + tmp : tmp",
          "76:   } else if (util.isObject(source)) {",
          "77:     if (util.isRegExp(source)) {",
          "79:     } else if (util.isDate(source)) {",
          "80:       out += 'new Date(\"' + source.toJSON() + '\")'",
          "81:     } else if (util.isError(source)) {",
          "",
          "[Removed Lines]",
          "78:       out += 'new RegExp(\"' + source.source.replace(/<\\/script/ig, '<\\\\/script') + '\", \"' + source.flags + '\")'",
          "",
          "[Added Lines]",
          "78:       out += 'new RegExp(' + serialize(source.source) + ', \"' + source.flags + '\")'",
          "",
          "---------------"
        ],
        "test/fixtures.js||test/fixtures.js": [
          "File: test/fixtures.js -> test/fixtures.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:   'regexXss': [",
          "145:     /[</script><script>alert('xss')//]/i,",
          "146:     isLessV12",
          "149:   ],",
          "150:   'regex no flags': [",
          "151:     /abc/,",
          "",
          "[Removed Lines]",
          "147:       ? 'new RegExp(\"[<\\\\/script><script>alert(\\'xss\\')\\\\/\\\\/]\", \"i\")'",
          "148:       : 'new RegExp(\"[<\\\\/script><script>alert(\\'xss\\')//]\", \"i\")'",
          "",
          "[Added Lines]",
          "147:       ? 'new RegExp(\"[\\\\u003C\\\\\\\\\\\\u002Fscript\\\\u003E\\\\u003Cscript\\\\u003Ealert(\\'xss\\')\\\\\\\\\\\\u002F\\\\\\\\\\\\u002F]\", \"i\")'",
          "148:       : 'new RegExp(\"[\\\\u003C\\\\u002Fscript\\\\u003E\\\\u003Cscript\\\\u003Ealert(\\'xss\\')\\\\u002F\\\\u002F]\", \"i\")'",
          "149:   ],",
          "150:   'regexXss2': [",
          "151:     /[</ script><script>alert('xss')//]/i,",
          "152:     isLessV12",
          "153:       ? 'new RegExp(\"[\\\\u003C\\\\\\\\\\\\u002F script\\\\u003E\\\\u003Cscript\\\\u003Ealert(\\'xss\\')\\\\\\\\\\\\u002F\\\\\\\\\\\\u002F]\", \"i\")'",
          "154:       : 'new RegExp(\"[\\\\u003C\\\\u002F script\\\\u003E\\\\u003Cscript\\\\u003Ealert(\\'xss\\')\\\\u002F\\\\u002F]\", \"i\")'",
          "",
          "---------------"
        ],
        "test/index.test.js||test/index.test.js": [
          "File: test/index.test.js -> test/index.test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "122:     var exp = '{a: {\"3\": \"3\", one: true, \"thr-ee\": undefined, \"4 four\": \"four\\\\n<test></test>\", \"five\\\\\"(5)\": 5}, b: {\"3\": \"3\", one: true, \"thr-ee\": undefined, \"4 four\": \"four\\\\n<test></test>\", \"five\\\\\"(5)\": 5}}'",
          "123:     assert.strictEqual(res, exp)",
          "124:   })",
          "125: })",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "125:   it('correctly serializes regular expressions', function () {",
          "126:     for (var re of [ /\\//, /[</script><script>alert('xss')//]/i, /abc/, /[< /script>]/ ]) {",
          "127:       var re2 = eval(serialize(re)) // eslint-disable-line no-eval",
          "128:       assert.strictEqual(re.source, re2.source)",
          "129:       assert.strictEqual(re.flags, re2.flags)",
          "130:     }",
          "131:   })",
          "",
          "---------------"
        ]
      }
    }
  ]
}