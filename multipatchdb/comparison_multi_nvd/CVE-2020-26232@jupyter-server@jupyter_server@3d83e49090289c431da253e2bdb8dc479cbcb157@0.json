{
  "cve_id": "CVE-2020-26232",
  "cve_desc": "Jupyter Server before version 1.0.6 has an Open redirect vulnerability. A maliciously crafted link to a jupyter server could redirect the browser to a different website. All jupyter servers are technically affected, however, these maliciously crafted links can only be reasonably made for known jupyter server hosts. A link to your jupyter server may appear safe, but ultimately redirect to a spoofed server on the public internet.",
  "repo": "jupyter-server/jupyter_server",
  "patch_hash": "3d83e49090289c431da253e2bdb8dc479cbcb157",
  "patch_info": {
    "commit_hash": "3d83e49090289c431da253e2bdb8dc479cbcb157",
    "repo": "jupyter-server/jupyter_server",
    "commit_url": "https://github.com/jupyter-server/jupyter_server/commit/3d83e49090289c431da253e2bdb8dc479cbcb157",
    "files": [
      "jupyter_server/base/handlers.py",
      "tests/test_paths.py"
    ],
    "message": "Merge pull request from GHSA-grfj-wjv9-4f9v\n\n[1.0.x] Fix GHSA-grfj-wjv9-4f9v",
    "before_after_code_files": [
      "jupyter_server/base/handlers.py||jupyter_server/base/handlers.py",
      "tests/test_paths.py||tests/test_paths.py"
    ]
  },
  "patch_diff": {
    "jupyter_server/base/handlers.py||jupyter_server/base/handlers.py": [
      "File: jupyter_server/base/handlers.py -> jupyter_server/base/handlers.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "776:     \"\"\"",
      "778:     def get(self):",
      "783:     post = put = get",
      "",
      "[Removed Lines]",
      "779:         uri = self.request.path.rstrip(\"/\")",
      "780:         if uri:",
      "781:             self.redirect('?'.join((uri, self.request.query)))",
      "",
      "[Added Lines]",
      "779:         path, *rest = self.request.uri.partition(\"?\")",
      "780:         # trim trailing *and* leading /",
      "781:         # to avoid misinterpreting repeated '//'",
      "782:         path = \"/\" + path.strip(\"/\")",
      "783:         new_uri = \"\".join([path, *rest])",
      "784:         self.redirect(new_uri)",
      "",
      "---------------"
    ],
    "tests/test_paths.py||tests/test_paths.py": [
      "File: tests/test_paths.py -> tests/test_paths.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: import re",
      "3: from jupyter_server.base.handlers import path_regex",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2: import pytest",
      "3: import tornado",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "29:         '/y/x/foo',",
      "30:     ):",
      "31:         assert re.match(path_pat, path) is None",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "35: @pytest.mark.parametrize(",
      "36:     'uri,expected',",
      "37:     [",
      "38:         (\"/notebooks/mynotebook/\", \"/notebooks/mynotebook\"),",
      "39:         (\"////foo///\", \"/foo\"),",
      "40:         (\"//example.com/\", \"/example.com\"),",
      "41:         (\"/has/param/?hasparam=true\", \"/has/param?hasparam=true\"),",
      "42:     ]",
      "43: )",
      "44: async def test_trailing_slash(uri, expected, http_server_client, auth_header, base_url):",
      "45:     # http_server_client raises an exception when follow_redirects=False",
      "46:     with pytest.raises(tornado.httpclient.HTTPClientError) as err:",
      "47:         await http_server_client.fetch(",
      "48:             uri,",
      "49:             headers=auth_header,",
      "50:             request_timeout=20,",
      "51:             follow_redirects=False",
      "52:         )",
      "53:     # Capture the response from the raised exception value.",
      "54:     response = err.value.response",
      "55:     assert response.code == 302",
      "56:     assert \"Location\" in response.headers",
      "57:     assert response.headers[\"Location\"] == expected",
      "58:     assert False",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "37eac444dd08cedbcb3490490c8f3d15b81e1eff",
      "candidate_info": {
        "commit_hash": "37eac444dd08cedbcb3490490c8f3d15b81e1eff",
        "repo": "jupyter-server/jupyter_server",
        "commit_url": "https://github.com/jupyter-server/jupyter_server/commit/37eac444dd08cedbcb3490490c8f3d15b81e1eff",
        "files": [
          "tests/test_paths.py"
        ],
        "message": "fix test bug",
        "before_after_code_files": [
          "tests/test_paths.py||tests/test_paths.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/jupyter-server/jupyter_server/pull/345"
        ],
        "olp_code_files": {
          "patch": [
            "tests/test_paths.py||tests/test_paths.py"
          ],
          "candidate": [
            "tests/test_paths.py||tests/test_paths.py"
          ]
        }
      },
      "candidate_diff": {
        "tests/test_paths.py||tests/test_paths.py": [
          "File: tests/test_paths.py -> tests/test_paths.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:     assert response.code == 302",
          "56:     assert \"Location\" in response.headers",
          "57:     assert response.headers[\"Location\"] == expected",
          "",
          "[Removed Lines]",
          "58:     assert False",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e17091698fb90db938a6a3d875b48271597a6db5",
      "candidate_info": {
        "commit_hash": "e17091698fb90db938a6a3d875b48271597a6db5",
        "repo": "jupyter-server/jupyter_server",
        "commit_url": "https://github.com/jupyter-server/jupyter_server/commit/e17091698fb90db938a6a3d875b48271597a6db5",
        "files": [
          "jupyter_server/_version.py"
        ],
        "message": "bump version to 1.0.6",
        "before_after_code_files": [
          "jupyter_server/_version.py||jupyter_server/_version.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/jupyter-server/jupyter_server/pull/345"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "jupyter_server/_version.py||jupyter_server/_version.py": [
          "File: jupyter_server/_version.py -> jupyter_server/_version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: # Next beta/alpha/rc release: The version number for beta is X.Y.ZbN **without dots**.",
          "13: __version__ = '.'.join(map(str, version_info[:3])) + ''.join(version_info[3:])",
          "",
          "[Removed Lines]",
          "12: version_info = (1, 0, 5, '')",
          "",
          "[Added Lines]",
          "12: version_info = (1, 0, 6, '')",
          "",
          "---------------"
        ]
      }
    }
  ]
}