{
  "cve_id": "CVE-2021-29063",
  "cve_desc": "A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in Mpmath v1.0.0 through v1.2.1 when the mpmathify function is called.",
  "repo": "fredrik-johansson/mpmath",
  "patch_hash": "46d44c3c8f3244017fe1eb102d564eb4ab8ef750",
  "patch_info": {
    "commit_hash": "46d44c3c8f3244017fe1eb102d564eb4ab8ef750",
    "repo": "fredrik-johansson/mpmath",
    "commit_url": "https://github.com/fredrik-johansson/mpmath/commit/46d44c3c8f3244017fe1eb102d564eb4ab8ef750",
    "files": [
      "mpmath/ctx_mp.py",
      "mpmath/tests/test_convert.py"
    ],
    "message": "Merge pull request #570 from vks/fix-redos\n\nFix ReDOS vulnerability",
    "before_after_code_files": [
      "mpmath/ctx_mp.py||mpmath/ctx_mp.py",
      "mpmath/tests/test_convert.py||mpmath/tests/test_convert.py"
    ]
  },
  "patch_diff": {
    "mpmath/ctx_mp.py||mpmath/ctx_mp.py": [
      "File: mpmath/ctx_mp.py -> mpmath/ctx_mp.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "43: new = object.__new__",
      "48: if BACKEND == 'sage':",
      "49:     from sage.libs.mpmath.ext_main import Context as BaseMPContext",
      "",
      "[Removed Lines]",
      "45: get_complex = re.compile(r'^\\(?(?P<re>[\\+\\-]?\\d*\\.?\\d*(e[\\+\\-]?\\d+)?)??'",
      "46:                          r'(?P<im>[\\+\\-]?\\d*\\.?\\d*(e[\\+\\-]?\\d+)?j)?\\)?$')",
      "",
      "[Added Lines]",
      "45: get_complex = re.compile(r'^\\(?(?P<re>[\\+\\-]?\\d*(\\.\\d*)?(e[\\+\\-]?\\d+)?)??'",
      "46:                          r'(?P<im>[\\+\\-]?\\d*(\\.\\d*)?(e[\\+\\-]?\\d+)?j)?\\)?$')",
      "",
      "---------------"
    ],
    "mpmath/tests/test_convert.py||mpmath/tests/test_convert.py": [
      "File: mpmath/tests/test_convert.py -> mpmath/tests/test_convert.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "194:     assert mpmathify('(1.2e-10 - 3.4e5j)') == mpc('1.2e-10', '-3.4e5')",
      "195:     assert mpmathify('1j') == mpc(1j)",
      "197: def test_compatibility():",
      "198:     try:",
      "199:         import numpy as np",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "197: def test_issue548():",
      "198:     try:",
      "199:         # This expression is invalid, but may trigger the ReDOS vulnerability",
      "200:         # in the regular expression for parsing complex numbers.",
      "201:         mpmathify('(' + '1' * 5000 + '!j')",
      "202:     except:",
      "203:         return",
      "204:     # The expression is invalid and should raise an exception.",
      "205:     assert False",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c811b37c65a4372a7ce613111d2a508c204f9833",
      "candidate_info": {
        "commit_hash": "c811b37c65a4372a7ce613111d2a508c204f9833",
        "repo": "fredrik-johansson/mpmath",
        "commit_url": "https://github.com/fredrik-johansson/mpmath/commit/c811b37c65a4372a7ce613111d2a508c204f9833",
        "files": [
          "mpmath/ctx_mp.py",
          "mpmath/tests/test_convert.py"
        ],
        "message": "Fix ReDOS vulnerability\n\nFixes #548, with the workaround suggested by @yetingli.",
        "before_after_code_files": [
          "mpmath/ctx_mp.py||mpmath/ctx_mp.py",
          "mpmath/tests/test_convert.py||mpmath/tests/test_convert.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/mpmath/mpmath/pull/570"
        ],
        "olp_code_files": {
          "patch": [
            "mpmath/ctx_mp.py||mpmath/ctx_mp.py",
            "mpmath/tests/test_convert.py||mpmath/tests/test_convert.py"
          ],
          "candidate": [
            "mpmath/ctx_mp.py||mpmath/ctx_mp.py",
            "mpmath/tests/test_convert.py||mpmath/tests/test_convert.py"
          ]
        }
      },
      "candidate_diff": {
        "mpmath/ctx_mp.py||mpmath/ctx_mp.py": [
          "File: mpmath/ctx_mp.py -> mpmath/ctx_mp.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: new = object.__new__",
          "48: if BACKEND == 'sage':",
          "49:     from sage.libs.mpmath.ext_main import Context as BaseMPContext",
          "",
          "[Removed Lines]",
          "45: get_complex = re.compile(r'^\\(?(?P<re>[\\+\\-]?\\d*\\.?\\d*(e[\\+\\-]?\\d+)?)??'",
          "46:                          r'(?P<im>[\\+\\-]?\\d*\\.?\\d*(e[\\+\\-]?\\d+)?j)?\\)?$')",
          "",
          "[Added Lines]",
          "45: get_complex = re.compile(r'^\\(?(?P<re>[\\+\\-]?\\d*(\\.\\d*)?(e[\\+\\-]?\\d+)?)??'",
          "46:                          r'(?P<im>[\\+\\-]?\\d*(\\.\\d*)?(e[\\+\\-]?\\d+)?j)?\\)?$')",
          "",
          "---------------"
        ],
        "mpmath/tests/test_convert.py||mpmath/tests/test_convert.py": [
          "File: mpmath/tests/test_convert.py -> mpmath/tests/test_convert.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "194:     assert mpmathify('(1.2e-10 - 3.4e5j)') == mpc('1.2e-10', '-3.4e5')",
          "195:     assert mpmathify('1j') == mpc(1j)",
          "197: def test_compatibility():",
          "198:     try:",
          "199:         import numpy as np",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "197: def test_issue548():",
          "198:     try:",
          "199:         # This expression is invalid, but may trigger the ReDOS vulnerability",
          "200:         # in the regular expression.",
          "201:         mpmathify('(' + '1' * 5000 + '!j')",
          "202:     except:",
          "203:         return",
          "204:     # The expression is invalid and should raise an exception.",
          "205:     assert False",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2865c7d12b2a077d420427ad187eca831a48bff4",
      "candidate_info": {
        "commit_hash": "2865c7d12b2a077d420427ad187eca831a48bff4",
        "repo": "fredrik-johansson/mpmath",
        "commit_url": "https://github.com/fredrik-johansson/mpmath/commit/2865c7d12b2a077d420427ad187eca831a48bff4",
        "files": [
          "mpmath/tests/test_convert.py"
        ],
        "message": "Improve comment",
        "before_after_code_files": [
          "mpmath/tests/test_convert.py||mpmath/tests/test_convert.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/mpmath/mpmath/pull/570"
        ],
        "olp_code_files": {
          "patch": [
            "mpmath/tests/test_convert.py||mpmath/tests/test_convert.py"
          ],
          "candidate": [
            "mpmath/tests/test_convert.py||mpmath/tests/test_convert.py"
          ]
        }
      },
      "candidate_diff": {
        "mpmath/tests/test_convert.py||mpmath/tests/test_convert.py": [
          "File: mpmath/tests/test_convert.py -> mpmath/tests/test_convert.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "197: def test_issue548():",
          "198:     try:",
          "199:         # This expression is invalid, but may trigger the ReDOS vulnerability",
          "201:         mpmathify('(' + '1' * 5000 + '!j')",
          "202:     except:",
          "203:         return",
          "",
          "[Removed Lines]",
          "200:         # in the regular expression.",
          "",
          "[Added Lines]",
          "200:         # in the regular expression for parsing complex numbers.",
          "",
          "---------------"
        ]
      }
    }
  ]
}