{
  "cve_id": "CVE-2022-21661",
  "cve_desc": "WordPress is a free and open-source content management system written in PHP and paired with a MariaDB database. Due to improper sanitization in WP_Query, there can be cases where SQL injection is possible through plugins or themes that use it in a certain way. This has been patched in WordPress version 5.8.3. Older affected versions are also fixed via security release, that go back till 3.7.37. We strongly recommend that you keep auto-updates enabled. There are no known workarounds for this vulnerability.",
  "repo": "WordPress/wordpress-develop",
  "patch_hash": "17efac8c8ec64555eff5cf51a3eff81e06317214",
  "patch_info": {
    "commit_hash": "17efac8c8ec64555eff5cf51a3eff81e06317214",
    "repo": "WordPress/wordpress-develop",
    "commit_url": "https://github.com/WordPress/wordpress-develop/commit/17efac8c8ec64555eff5cf51a3eff81e06317214",
    "files": [
      "src/wp-includes/class-wp-tax-query.php"
    ],
    "message": "Query: Improve sanitization within `WP_Tax_Query`.\n\nMerges [52454] to the 5.8 branch.\nProps dd32, xknown, peterwilsoncc, ehtis.\n\ngit-svn-id: https://develop.svn.wordpress.org/branches/5.8@52459 602fd350-edb4-49c9-b593-d223f7449a82",
    "before_after_code_files": [
      "src/wp-includes/class-wp-tax-query.php||src/wp-includes/class-wp-tax-query.php"
    ]
  },
  "patch_diff": {
    "src/wp-includes/class-wp-tax-query.php||src/wp-includes/class-wp-tax-query.php": [
      "File: src/wp-includes/class-wp-tax-query.php -> src/wp-includes/class-wp-tax-query.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "556:    return;",
      "557:   }",
      "561:   if ( is_taxonomy_hierarchical( $query['taxonomy'] ) && $query['include_children'] ) {",
      "562:    $this->transform_query( $query, 'term_id' );",
      "",
      "[Removed Lines]",
      "559:   $query['terms'] = array_unique( (array) $query['terms'] );",
      "",
      "[Added Lines]",
      "559:   if ( 'slug' === $query['field'] || 'name' === $query['field'] ) {",
      "560:    $query['terms'] = array_unique( (array) $query['terms'] );",
      "561:   } else {",
      "562:    $query['terms'] = wp_parse_id_list( $query['terms'] );",
      "563:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "344333c849cd83d2a21948babd9173803801ee42",
      "candidate_info": {
        "commit_hash": "344333c849cd83d2a21948babd9173803801ee42",
        "repo": "WordPress/wordpress-develop",
        "commit_url": "https://github.com/WordPress/wordpress-develop/commit/344333c849cd83d2a21948babd9173803801ee42",
        "files": [
          "src/wp-admin/includes/upgrade.php",
          "src/wp-includes/formatting.php",
          "src/wp-includes/post.php",
          "src/wp-includes/taxonomy.php"
        ],
        "message": "Grouped backports to the 3.8 branch.\n\n- Query: Improve sanitization within `WP_Tax_Query`.\n- Upgrade/Install: Avoid using `unserialize()` unnecessarily.\n- Formatting: Correctly encode ASCII characters in post slugs.\n\nMerges [52454,52456-52457] to the 3.8 branch.\nProps vortfu, dd32, ehtis, zieladam, whyisjake, xknown, peterwilsoncc, desrosj, iandunn.\n\ngit-svn-id: https://develop.svn.wordpress.org/branches/3.8@52485 602fd350-edb4-49c9-b593-d223f7449a82",
        "before_after_code_files": [
          "src/wp-admin/includes/upgrade.php||src/wp-admin/includes/upgrade.php",
          "src/wp-includes/formatting.php||src/wp-includes/formatting.php",
          "src/wp-includes/post.php||src/wp-includes/post.php",
          "src/wp-includes/taxonomy.php||src/wp-includes/taxonomy.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/wp-admin/includes/upgrade.php||src/wp-admin/includes/upgrade.php": [
          "File: src/wp-admin/includes/upgrade.php -> src/wp-admin/includes/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1041:   $start = 0;",
          "1042:   while( $rows = $wpdb->get_results( \"SELECT option_name, option_value FROM $wpdb->options ORDER BY option_id LIMIT $start, 20\" ) ) {",
          "1043:    foreach( $rows as $row ) {",
          "1046:      $value = stripslashes( $value );",
          "1047:     if ( $value !== $row->option_value ) {",
          "1048:      update_option( $row->option_name, $value );",
          "",
          "[Removed Lines]",
          "1044:     $value = $row->option_value;",
          "1045:     if ( !@unserialize( $value ) )",
          "",
          "[Added Lines]",
          "1044:     $value = maybe_unserialize( $row->option_value );",
          "1045:     if ( $value === $row->option_value )",
          "",
          "---------------"
        ],
        "src/wp-includes/formatting.php||src/wp-includes/formatting.php": [
          "File: src/wp-includes/formatting.php -> src/wp-includes/formatting.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "686:  $unicode = '';",
          "687:  $values = array();",
          "688:  $num_octets = 1;",
          "",
          "[Removed Lines]",
          "685: function utf8_uri_encode( $utf8_string, $length = 0 ) {",
          "",
          "[Added Lines]",
          "687: function utf8_uri_encode( $utf8_string, $length = 0, $encode_ascii_characters = false ) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "694:   $value = ord( $utf8_string[ $i ] );",
          "696:   if ( $value < 128 ) {",
          "698:     break;",
          "701:   } else {",
          "702:    if ( count( $values ) == 0 ) $num_octets = ( $value < 224 ) ? 2 : 3;",
          "",
          "[Removed Lines]",
          "697:    if ( $length && ( $unicode_length >= $length ) )",
          "699:    $unicode .= chr($value);",
          "700:    $unicode_length++;",
          "",
          "[Added Lines]",
          "699:    $char                = chr( $value );",
          "700:    $encoded_char        = $encode_ascii_characters ? rawurlencode( $char ) : $char;",
          "701:    $encoded_char_length = strlen( $encoded_char );",
          "702:    if ( $length && ( $unicode_length + $encoded_char_length ) > $length ) {",
          "704:    }",
          "705:    $unicode        .= $encoded_char;",
          "706:    $unicode_length += $encoded_char_length;",
          "",
          "---------------"
        ],
        "src/wp-includes/post.php||src/wp-includes/post.php": [
          "File: src/wp-includes/post.php -> src/wp-includes/post.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3182:   if ( $decoded_slug === $slug )",
          "3183:    $slug = substr( $slug, 0, $length );",
          "3184:   else",
          "3186:  }",
          "3188:  return rtrim( $slug, '-' );",
          "",
          "[Removed Lines]",
          "3185:    $slug = utf8_uri_encode( $decoded_slug, $length );",
          "",
          "[Added Lines]",
          "3185:    $slug = utf8_uri_encode( $decoded_slug, $length, true );",
          "",
          "---------------"
        ],
        "src/wp-includes/taxonomy.php||src/wp-includes/taxonomy.php": [
          "File: src/wp-includes/taxonomy.php -> src/wp-includes/taxonomy.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "812:    return;",
          "813:   }",
          "817:   if ( is_taxonomy_hierarchical( $query['taxonomy'] ) && $query['include_children'] ) {",
          "818:    $this->transform_query( $query, 'term_id' );",
          "",
          "[Removed Lines]",
          "815:   $query['terms'] = array_unique( (array) $query['terms'] );",
          "",
          "[Added Lines]",
          "815:   if ( 'slug' === $query['field'] || 'name' === $query['field'] ) {",
          "816:    $query['terms'] = array_unique( (array) $query['terms'] );",
          "817:   } else {",
          "818:    $query['terms'] = wp_parse_id_list( $query['terms'] );",
          "819:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "05979a4da3d01251c592f1ccd6929ac98c0cda63",
      "candidate_info": {
        "commit_hash": "05979a4da3d01251c592f1ccd6929ac98c0cda63",
        "repo": "WordPress/wordpress-develop",
        "commit_url": "https://github.com/WordPress/wordpress-develop/commit/05979a4da3d01251c592f1ccd6929ac98c0cda63",
        "files": [
          "src/wp-admin/includes/upgrade.php",
          "src/wp-includes/class-wp-meta-query.php",
          "src/wp-includes/class-wp-tax-query.php",
          "src/wp-includes/formatting.php",
          "src/wp-includes/post.php"
        ],
        "message": "Grouped backports to the 5.1 branch.\n\n- Query: Improve sanitization within `WP_Tax_Query`.\n- Query: Improve sanitization within `WP_Meta_Query`.\n- Upgrade/Install: Avoid using `unserialize()` unnecessarily.\n- Formatting: Correctly encode ASCII characters in post slugs.\n\nMerges [52454-52457] to the 5.1 branch.\nProps vortfu, dd32, ehtis, zieladam, whyisjake, xknown, peterwilsoncc, desrosj, iandunn.\n\ngit-svn-id: https://develop.svn.wordpress.org/branches/5.1@52472 602fd350-edb4-49c9-b593-d223f7449a82",
        "before_after_code_files": [
          "src/wp-admin/includes/upgrade.php||src/wp-admin/includes/upgrade.php",
          "src/wp-includes/class-wp-meta-query.php||src/wp-includes/class-wp-meta-query.php",
          "src/wp-includes/class-wp-tax-query.php||src/wp-includes/class-wp-tax-query.php",
          "src/wp-includes/formatting.php||src/wp-includes/formatting.php",
          "src/wp-includes/post.php||src/wp-includes/post.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/wp-includes/class-wp-tax-query.php||src/wp-includes/class-wp-tax-query.php"
          ],
          "candidate": [
            "src/wp-includes/class-wp-tax-query.php||src/wp-includes/class-wp-tax-query.php"
          ]
        }
      },
      "candidate_diff": {
        "src/wp-admin/includes/upgrade.php||src/wp-admin/includes/upgrade.php": [
          "File: src/wp-admin/includes/upgrade.php -> src/wp-admin/includes/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1591:   $start = 0;",
          "1592:   while ( $rows = $wpdb->get_results( \"SELECT option_name, option_value FROM $wpdb->options ORDER BY option_id LIMIT $start, 20\" ) ) {",
          "1593:    foreach ( $rows as $row ) {",
          "1596:      $value = stripslashes( $value );",
          "1597:     }",
          "1598:     if ( $value !== $row->option_value ) {",
          "",
          "[Removed Lines]",
          "1594:     $value = $row->option_value;",
          "1595:     if ( ! @unserialize( $value ) ) {",
          "",
          "[Added Lines]",
          "1594:     $value = maybe_unserialize( $row->option_value );",
          "1595:     if ( $value === $row->option_value ) {",
          "",
          "---------------"
        ],
        "src/wp-includes/class-wp-meta-query.php||src/wp-includes/class-wp-meta-query.php": [
          "File: src/wp-includes/class-wp-meta-query.php -> src/wp-includes/class-wp-meta-query.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "731:    $clause_compare  = strtoupper( $clause['compare'] );",
          "732:    $sibling_compare = strtoupper( $sibling['compare'] );",
          "733:    if ( in_array( $clause_compare, $compatible_compares ) && in_array( $sibling_compare, $compatible_compares ) ) {",
          "735:     break;",
          "736:    }",
          "737:   }",
          "",
          "[Removed Lines]",
          "734:     $alias = $sibling['alias'];",
          "",
          "[Added Lines]",
          "734:     $alias = preg_replace( '/\\W/', '_', $sibling['alias'] );",
          "",
          "---------------"
        ],
        "src/wp-includes/class-wp-tax-query.php||src/wp-includes/class-wp-tax-query.php": [
          "File: src/wp-includes/class-wp-tax-query.php -> src/wp-includes/class-wp-tax-query.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "528:    if ( in_array( strtoupper( $sibling['operator'] ), $compatible_operators ) ) {",
          "530:     break;",
          "531:    }",
          "532:   }",
          "",
          "[Removed Lines]",
          "529:     $alias = $sibling['alias'];",
          "",
          "[Added Lines]",
          "529:     $alias = preg_replace( '/\\W/', '_', $sibling['alias'] );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "555:    return;",
          "556:   }",
          "560:   if ( is_taxonomy_hierarchical( $query['taxonomy'] ) && $query['include_children'] ) {",
          "561:    $this->transform_query( $query, 'term_id' );",
          "",
          "[Removed Lines]",
          "558:   $query['terms'] = array_unique( (array) $query['terms'] );",
          "",
          "[Added Lines]",
          "558:   if ( 'slug' === $query['field'] || 'name' === $query['field'] ) {",
          "559:    $query['terms'] = array_unique( (array) $query['terms'] );",
          "560:   } else {",
          "561:    $query['terms'] = wp_parse_id_list( $query['terms'] );",
          "562:   }",
          "",
          "---------------"
        ],
        "src/wp-includes/formatting.php||src/wp-includes/formatting.php": [
          "File: src/wp-includes/formatting.php -> src/wp-includes/formatting.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1159:  $unicode        = '';",
          "1160:  $values         = array();",
          "1161:  $num_octets     = 1;",
          "",
          "[Removed Lines]",
          "1158: function utf8_uri_encode( $utf8_string, $length = 0 ) {",
          "",
          "[Added Lines]",
          "1160: function utf8_uri_encode( $utf8_string, $length = 0, $encode_ascii_characters = false ) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1170:   $value = ord( $utf8_string[ $i ] );",
          "1172:   if ( $value < 128 ) {",
          "1174:     break;",
          "1175:    }",
          "1178:   } else {",
          "1179:    if ( count( $values ) == 0 ) {",
          "1180:     if ( $value < 224 ) {",
          "",
          "[Removed Lines]",
          "1173:    if ( $length && ( $unicode_length >= $length ) ) {",
          "1176:    $unicode .= chr( $value );",
          "1177:    $unicode_length++;",
          "",
          "[Added Lines]",
          "1175:    $char                = chr( $value );",
          "1176:    $encoded_char        = $encode_ascii_characters ? rawurlencode( $char ) : $char;",
          "1177:    $encoded_char_length = strlen( $encoded_char );",
          "1178:    if ( $length && ( $unicode_length + $encoded_char_length ) > $length ) {",
          "1181:    $unicode        .= $encoded_char;",
          "1182:    $unicode_length += $encoded_char_length;",
          "",
          "---------------"
        ],
        "src/wp-includes/post.php||src/wp-includes/post.php": [
          "File: src/wp-includes/post.php -> src/wp-includes/post.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "4297:   if ( $decoded_slug === $slug ) {",
          "4298:    $slug = substr( $slug, 0, $length );",
          "4299:   } else {",
          "4301:   }",
          "4302:  }",
          "",
          "[Removed Lines]",
          "4300:    $slug = utf8_uri_encode( $decoded_slug, $length );",
          "",
          "[Added Lines]",
          "4300:    $slug = utf8_uri_encode( $decoded_slug, $length, true );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dfab5b8b71df16ce8e9f670b47848664e441b570",
      "candidate_info": {
        "commit_hash": "dfab5b8b71df16ce8e9f670b47848664e441b570",
        "repo": "WordPress/wordpress-develop",
        "commit_url": "https://github.com/WordPress/wordpress-develop/commit/dfab5b8b71df16ce8e9f670b47848664e441b570",
        "files": [
          "src/wp-admin/includes/upgrade.php",
          "src/wp-includes/class-wp-meta-query.php",
          "src/wp-includes/class-wp-tax-query.php",
          "src/wp-includes/formatting.php",
          "src/wp-includes/post.php"
        ],
        "message": "Grouped backports to the 5.2 branch.\n\n- Query: Improve sanitization within `WP_Tax_Query`.\n- Query: Improve sanitization within `WP_Meta_Query`.\n- Upgrade/Install: Avoid using `unserialize()` unnecessarily.\n- Formatting: Correctly encode ASCII characters in post slugs.\n\nMerges [52454-52457] to the 5.2 branch.\nProps vortfu, dd32, ehtis, zieladam, whyisjake, xknown, peterwilsoncc, desrosj, iandunn.\n\ngit-svn-id: https://develop.svn.wordpress.org/branches/5.2@52471 602fd350-edb4-49c9-b593-d223f7449a82",
        "before_after_code_files": [
          "src/wp-admin/includes/upgrade.php||src/wp-admin/includes/upgrade.php",
          "src/wp-includes/class-wp-meta-query.php||src/wp-includes/class-wp-meta-query.php",
          "src/wp-includes/class-wp-tax-query.php||src/wp-includes/class-wp-tax-query.php",
          "src/wp-includes/formatting.php||src/wp-includes/formatting.php",
          "src/wp-includes/post.php||src/wp-includes/post.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/wp-includes/class-wp-tax-query.php||src/wp-includes/class-wp-tax-query.php"
          ],
          "candidate": [
            "src/wp-includes/class-wp-tax-query.php||src/wp-includes/class-wp-tax-query.php"
          ]
        }
      },
      "candidate_diff": {
        "src/wp-admin/includes/upgrade.php||src/wp-admin/includes/upgrade.php": [
          "File: src/wp-admin/includes/upgrade.php -> src/wp-admin/includes/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1591:   $start = 0;",
          "1592:   while ( $rows = $wpdb->get_results( \"SELECT option_name, option_value FROM $wpdb->options ORDER BY option_id LIMIT $start, 20\" ) ) {",
          "1593:    foreach ( $rows as $row ) {",
          "1596:      $value = stripslashes( $value );",
          "1597:     }",
          "1598:     if ( $value !== $row->option_value ) {",
          "",
          "[Removed Lines]",
          "1594:     $value = $row->option_value;",
          "1595:     if ( ! @unserialize( $value ) ) {",
          "",
          "[Added Lines]",
          "1594:     $value = maybe_unserialize( $row->option_value );",
          "1595:     if ( $value === $row->option_value ) {",
          "",
          "---------------"
        ],
        "src/wp-includes/class-wp-meta-query.php||src/wp-includes/class-wp-meta-query.php": [
          "File: src/wp-includes/class-wp-meta-query.php -> src/wp-includes/class-wp-meta-query.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "731:    $clause_compare  = strtoupper( $clause['compare'] );",
          "732:    $sibling_compare = strtoupper( $sibling['compare'] );",
          "733:    if ( in_array( $clause_compare, $compatible_compares ) && in_array( $sibling_compare, $compatible_compares ) ) {",
          "735:     break;",
          "736:    }",
          "737:   }",
          "",
          "[Removed Lines]",
          "734:     $alias = $sibling['alias'];",
          "",
          "[Added Lines]",
          "734:     $alias = preg_replace( '/\\W/', '_', $sibling['alias'] );",
          "",
          "---------------"
        ],
        "src/wp-includes/class-wp-tax-query.php||src/wp-includes/class-wp-tax-query.php": [
          "File: src/wp-includes/class-wp-tax-query.php -> src/wp-includes/class-wp-tax-query.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "528:    if ( in_array( strtoupper( $sibling['operator'] ), $compatible_operators ) ) {",
          "530:     break;",
          "531:    }",
          "532:   }",
          "",
          "[Removed Lines]",
          "529:     $alias = $sibling['alias'];",
          "",
          "[Added Lines]",
          "529:     $alias = preg_replace( '/\\W/', '_', $sibling['alias'] );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "555:    return;",
          "556:   }",
          "560:   if ( is_taxonomy_hierarchical( $query['taxonomy'] ) && $query['include_children'] ) {",
          "561:    $this->transform_query( $query, 'term_id' );",
          "",
          "[Removed Lines]",
          "558:   $query['terms'] = array_unique( (array) $query['terms'] );",
          "",
          "[Added Lines]",
          "558:   if ( 'slug' === $query['field'] || 'name' === $query['field'] ) {",
          "559:    $query['terms'] = array_unique( (array) $query['terms'] );",
          "560:   } else {",
          "561:    $query['terms'] = wp_parse_id_list( $query['terms'] );",
          "562:   }",
          "",
          "---------------"
        ],
        "src/wp-includes/formatting.php||src/wp-includes/formatting.php": [
          "File: src/wp-includes/formatting.php -> src/wp-includes/formatting.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1159:  $unicode        = '';",
          "1160:  $values         = array();",
          "1161:  $num_octets     = 1;",
          "",
          "[Removed Lines]",
          "1158: function utf8_uri_encode( $utf8_string, $length = 0 ) {",
          "",
          "[Added Lines]",
          "1160: function utf8_uri_encode( $utf8_string, $length = 0, $encode_ascii_characters = false ) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1170:   $value = ord( $utf8_string[ $i ] );",
          "1172:   if ( $value < 128 ) {",
          "1174:     break;",
          "1175:    }",
          "1178:   } else {",
          "1179:    if ( count( $values ) == 0 ) {",
          "1180:     if ( $value < 224 ) {",
          "",
          "[Removed Lines]",
          "1173:    if ( $length && ( $unicode_length >= $length ) ) {",
          "1176:    $unicode .= chr( $value );",
          "1177:    $unicode_length++;",
          "",
          "[Added Lines]",
          "1175:    $char                = chr( $value );",
          "1176:    $encoded_char        = $encode_ascii_characters ? rawurlencode( $char ) : $char;",
          "1177:    $encoded_char_length = strlen( $encoded_char );",
          "1178:    if ( $length && ( $unicode_length + $encoded_char_length ) > $length ) {",
          "1181:    $unicode        .= $encoded_char;",
          "1182:    $unicode_length += $encoded_char_length;",
          "",
          "---------------"
        ],
        "src/wp-includes/post.php||src/wp-includes/post.php": [
          "File: src/wp-includes/post.php -> src/wp-includes/post.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "4297:   if ( $decoded_slug === $slug ) {",
          "4298:    $slug = substr( $slug, 0, $length );",
          "4299:   } else {",
          "4301:   }",
          "4302:  }",
          "",
          "[Removed Lines]",
          "4300:    $slug = utf8_uri_encode( $decoded_slug, $length );",
          "",
          "[Added Lines]",
          "4300:    $slug = utf8_uri_encode( $decoded_slug, $length, true );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1c25351c9298f8ce9cf6e7d6eff99dad9502e3f4",
      "candidate_info": {
        "commit_hash": "1c25351c9298f8ce9cf6e7d6eff99dad9502e3f4",
        "repo": "WordPress/wordpress-develop",
        "commit_url": "https://github.com/WordPress/wordpress-develop/commit/1c25351c9298f8ce9cf6e7d6eff99dad9502e3f4",
        "files": [
          "src/wp-admin/includes/upgrade.php",
          "src/wp-includes/formatting.php",
          "src/wp-includes/meta.php",
          "src/wp-includes/post.php",
          "src/wp-includes/taxonomy.php"
        ],
        "message": "Grouped backports to the 4.1 branch.\n\n- Query: Improve sanitization within `WP_Tax_Query`.\n- Query: Improve sanitization within `WP_Meta_Query`.\n- Upgrade/Install: Avoid using `unserialize()` unnecessarily.\n- Formatting: Correctly encode ASCII characters in post slugs.\n\nMerges [52454-52457] to the 4.1 branch.\nProps vortfu, dd32, ehtis, zieladam, whyisjake, xknown, peterwilsoncc, desrosj, iandunn.\n\ngit-svn-id: https://develop.svn.wordpress.org/branches/4.1@52482 602fd350-edb4-49c9-b593-d223f7449a82",
        "before_after_code_files": [
          "src/wp-admin/includes/upgrade.php||src/wp-admin/includes/upgrade.php",
          "src/wp-includes/formatting.php||src/wp-includes/formatting.php",
          "src/wp-includes/meta.php||src/wp-includes/meta.php",
          "src/wp-includes/post.php||src/wp-includes/post.php",
          "src/wp-includes/taxonomy.php||src/wp-includes/taxonomy.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/wp-admin/includes/upgrade.php||src/wp-admin/includes/upgrade.php": [
          "File: src/wp-admin/includes/upgrade.php -> src/wp-admin/includes/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1077:   $start = 0;",
          "1078:   while( $rows = $wpdb->get_results( \"SELECT option_name, option_value FROM $wpdb->options ORDER BY option_id LIMIT $start, 20\" ) ) {",
          "1079:    foreach( $rows as $row ) {",
          "1082:      $value = stripslashes( $value );",
          "1083:     if ( $value !== $row->option_value ) {",
          "1084:      update_option( $row->option_name, $value );",
          "",
          "[Removed Lines]",
          "1080:     $value = $row->option_value;",
          "1081:     if ( !@unserialize( $value ) )",
          "",
          "[Added Lines]",
          "1080:     $value = maybe_unserialize( $row->option_value );",
          "1081:     if ( $value === $row->option_value )",
          "",
          "---------------"
        ],
        "src/wp-includes/formatting.php||src/wp-includes/formatting.php": [
          "File: src/wp-includes/formatting.php -> src/wp-includes/formatting.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "872:  $unicode = '';",
          "873:  $values = array();",
          "874:  $num_octets = 1;",
          "",
          "[Removed Lines]",
          "871: function utf8_uri_encode( $utf8_string, $length = 0 ) {",
          "",
          "[Added Lines]",
          "873: function utf8_uri_encode( $utf8_string, $length = 0, $encode_ascii_characters = false ) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "883:   $value = ord( $utf8_string[ $i ] );",
          "885:   if ( $value < 128 ) {",
          "887:     break;",
          "890:   } else {",
          "891:    if ( count( $values ) == 0 ) $num_octets = ( $value < 224 ) ? 2 : 3;",
          "",
          "[Removed Lines]",
          "886:    if ( $length && ( $unicode_length >= $length ) )",
          "888:    $unicode .= chr($value);",
          "889:    $unicode_length++;",
          "",
          "[Added Lines]",
          "888:    $char                = chr( $value );",
          "889:    $encoded_char        = $encode_ascii_characters ? rawurlencode( $char ) : $char;",
          "890:    $encoded_char_length = strlen( $encoded_char );",
          "891:    if ( $length && ( $unicode_length + $encoded_char_length ) > $length ) {",
          "893:    }",
          "894:    $unicode        .= $encoded_char;",
          "895:    $unicode_length += $encoded_char_length;",
          "",
          "---------------"
        ],
        "src/wp-includes/meta.php||src/wp-includes/meta.php": [
          "File: src/wp-includes/meta.php -> src/wp-includes/meta.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1501:    $clause_compare  = strtoupper( $clause['compare'] );",
          "1502:    $sibling_compare = strtoupper( $sibling['compare'] );",
          "1503:    if ( in_array( $clause_compare, $compatible_compares ) && in_array( $sibling_compare, $compatible_compares ) ) {",
          "1505:     break;",
          "1506:    }",
          "1507:   }",
          "",
          "[Removed Lines]",
          "1504:     $alias = $sibling['alias'];",
          "",
          "[Added Lines]",
          "1504:     $alias = preg_replace( '/\\W/', '_', $sibling['alias'] );",
          "",
          "---------------"
        ],
        "src/wp-includes/post.php||src/wp-includes/post.php": [
          "File: src/wp-includes/post.php -> src/wp-includes/post.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3783:   if ( $decoded_slug === $slug )",
          "3784:    $slug = substr( $slug, 0, $length );",
          "3785:   else",
          "3787:  }",
          "3789:  return rtrim( $slug, '-' );",
          "",
          "[Removed Lines]",
          "3786:    $slug = utf8_uri_encode( $decoded_slug, $length );",
          "",
          "[Added Lines]",
          "3786:    $slug = utf8_uri_encode( $decoded_slug, $length, true );",
          "",
          "---------------"
        ],
        "src/wp-includes/taxonomy.php||src/wp-includes/taxonomy.php": [
          "File: src/wp-includes/taxonomy.php -> src/wp-includes/taxonomy.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1148:    if ( in_array( strtoupper( $sibling['operator'] ), $compatible_operators ) ) {",
          "1150:     break;",
          "1151:    }",
          "1152:   }",
          "",
          "[Removed Lines]",
          "1149:     $alias = $sibling['alias'];",
          "",
          "[Added Lines]",
          "1149:     $alias = preg_replace( '/\\W/', '_', $sibling['alias'] );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1176:    return;",
          "1177:   }",
          "1181:   if ( is_taxonomy_hierarchical( $query['taxonomy'] ) && $query['include_children'] ) {",
          "1182:    $this->transform_query( $query, 'term_id' );",
          "",
          "[Removed Lines]",
          "1179:   $query['terms'] = array_unique( (array) $query['terms'] );",
          "",
          "[Added Lines]",
          "1179:   if ( 'slug' === $query['field'] || 'name' === $query['field'] ) {",
          "1180:    $query['terms'] = array_unique( (array) $query['terms'] );",
          "1181:   } else {",
          "1182:    $query['terms'] = wp_parse_id_list( $query['terms'] );",
          "1183:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4848e81aacc223ac3b58412d3928e7a0d5e96382",
      "candidate_info": {
        "commit_hash": "4848e81aacc223ac3b58412d3928e7a0d5e96382",
        "repo": "WordPress/wordpress-develop",
        "commit_url": "https://github.com/WordPress/wordpress-develop/commit/4848e81aacc223ac3b58412d3928e7a0d5e96382",
        "files": [
          "src/wp-admin/includes/upgrade.php",
          "src/wp-includes/formatting.php",
          "src/wp-includes/post.php",
          "src/wp-includes/taxonomy.php"
        ],
        "message": "Grouped backports to the 3.9 branch.\n\n- Query: Improve sanitization within `WP_Tax_Query`.\n- Upgrade/Install: Avoid using `unserialize()` unnecessarily.\n- Formatting: Correctly encode ASCII characters in post slugs.\n\nMerges [52454,52456-52457] to the 3.9 branch.\nProps vortfu, dd32, ehtis, zieladam, whyisjake, xknown, peterwilsoncc, desrosj, iandunn.\n\ngit-svn-id: https://develop.svn.wordpress.org/branches/3.9@52484 602fd350-edb4-49c9-b593-d223f7449a82",
        "before_after_code_files": [
          "src/wp-admin/includes/upgrade.php||src/wp-admin/includes/upgrade.php",
          "src/wp-includes/formatting.php||src/wp-includes/formatting.php",
          "src/wp-includes/post.php||src/wp-includes/post.php",
          "src/wp-includes/taxonomy.php||src/wp-includes/taxonomy.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/wp-admin/includes/upgrade.php||src/wp-admin/includes/upgrade.php": [
          "File: src/wp-admin/includes/upgrade.php -> src/wp-admin/includes/upgrade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1057:   $start = 0;",
          "1058:   while( $rows = $wpdb->get_results( \"SELECT option_name, option_value FROM $wpdb->options ORDER BY option_id LIMIT $start, 20\" ) ) {",
          "1059:    foreach( $rows as $row ) {",
          "1062:      $value = stripslashes( $value );",
          "1063:     if ( $value !== $row->option_value ) {",
          "1064:      update_option( $row->option_name, $value );",
          "",
          "[Removed Lines]",
          "1060:     $value = $row->option_value;",
          "1061:     if ( !@unserialize( $value ) )",
          "",
          "[Added Lines]",
          "1060:     $value = maybe_unserialize( $row->option_value );",
          "1061:     if ( $value === $row->option_value )",
          "",
          "---------------"
        ],
        "src/wp-includes/formatting.php||src/wp-includes/formatting.php": [
          "File: src/wp-includes/formatting.php -> src/wp-includes/formatting.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "744:  $unicode = '';",
          "745:  $values = array();",
          "746:  $num_octets = 1;",
          "",
          "[Removed Lines]",
          "743: function utf8_uri_encode( $utf8_string, $length = 0 ) {",
          "",
          "[Added Lines]",
          "745: function utf8_uri_encode( $utf8_string, $length = 0, $encode_ascii_characters = false ) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "752:   $value = ord( $utf8_string[ $i ] );",
          "754:   if ( $value < 128 ) {",
          "756:     break;",
          "759:   } else {",
          "760:    if ( count( $values ) == 0 ) $num_octets = ( $value < 224 ) ? 2 : 3;",
          "",
          "[Removed Lines]",
          "755:    if ( $length && ( $unicode_length >= $length ) )",
          "757:    $unicode .= chr($value);",
          "758:    $unicode_length++;",
          "",
          "[Added Lines]",
          "757:    $char                = chr( $value );",
          "758:    $encoded_char        = $encode_ascii_characters ? rawurlencode( $char ) : $char;",
          "759:    $encoded_char_length = strlen( $encoded_char );",
          "760:    if ( $length && ( $unicode_length + $encoded_char_length ) > $length ) {",
          "762:    }",
          "763:    $unicode        .= $encoded_char;",
          "764:    $unicode_length += $encoded_char_length;",
          "",
          "---------------"
        ],
        "src/wp-includes/post.php||src/wp-includes/post.php": [
          "File: src/wp-includes/post.php -> src/wp-includes/post.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3524:   if ( $decoded_slug === $slug )",
          "3525:    $slug = substr( $slug, 0, $length );",
          "3526:   else",
          "3528:  }",
          "3530:  return rtrim( $slug, '-' );",
          "",
          "[Removed Lines]",
          "3527:    $slug = utf8_uri_encode( $decoded_slug, $length );",
          "",
          "[Added Lines]",
          "3527:    $slug = utf8_uri_encode( $decoded_slug, $length, true );",
          "",
          "---------------"
        ],
        "src/wp-includes/taxonomy.php||src/wp-includes/taxonomy.php": [
          "File: src/wp-includes/taxonomy.php -> src/wp-includes/taxonomy.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "818:    return;",
          "819:   }",
          "823:   if ( is_taxonomy_hierarchical( $query['taxonomy'] ) && $query['include_children'] ) {",
          "824:    $this->transform_query( $query, 'term_id' );",
          "",
          "[Removed Lines]",
          "821:   $query['terms'] = array_unique( (array) $query['terms'] );",
          "",
          "[Added Lines]",
          "821:   if ( 'slug' === $query['field'] || 'name' === $query['field'] ) {",
          "822:    $query['terms'] = array_unique( (array) $query['terms'] );",
          "823:   } else {",
          "824:    $query['terms'] = wp_parse_id_list( $query['terms'] );",
          "825:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}