{
  "cve_id": "CVE-2013-7330",
  "cve_desc": "Jenkins before 1.502 allows remote authenticated users to configure an otherwise restricted project via vectors related to post-build actions.",
  "repo": "jenkinsci/jenkins",
  "patch_hash": "36342d71e29e0620f803a7470ce96c61761648d8",
  "patch_info": {
    "commit_hash": "36342d71e29e0620f803a7470ce96c61761648d8",
    "repo": "jenkinsci/jenkins",
    "commit_url": "https://github.com/jenkinsci/jenkins/commit/36342d71e29e0620f803a7470ce96c61761648d8",
    "files": [
      "core/src/main/java/hudson/model/AbstractProject.java",
      "core/src/main/java/hudson/model/Descriptor.java",
      "core/src/main/java/hudson/tasks/BuildTrigger.java",
      "core/src/main/resources/hudson/tasks/Messages.properties",
      "core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly"
    ],
    "message": "[SECURITY-55]\n\nThis patch makes standard post-build action refuse to let you configure a downstream project you cannot currently build.\nThe one from parameterized-trigger will show an error in the configure screen but still lets you save the configuration; needs an analogous patch to that plugin.\nDoes not yet protect against POSTing config.xml with the trigger.\n(cherry picked from commit 757bc8a53956e6fbab267214e6e0896f03c3c262)\n\nConflicts:\n\n\tcore/src/main/java/hudson/model/Descriptor.java",
    "before_after_code_files": [
      "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java",
      "core/src/main/java/hudson/model/Descriptor.java||core/src/main/java/hudson/model/Descriptor.java",
      "core/src/main/java/hudson/tasks/BuildTrigger.java||core/src/main/java/hudson/tasks/BuildTrigger.java",
      "core/src/main/resources/hudson/tasks/Messages.properties||core/src/main/resources/hudson/tasks/Messages.properties",
      "core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly||core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly"
    ]
  },
  "patch_diff": {
    "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java": [
      "File: core/src/main/java/hudson/model/AbstractProject.java -> core/src/main/java/hudson/model/AbstractProject.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1914:         triggers = buildDescribable(req, Trigger.for_(this));",
      "1915:         for (Trigger t : triggers)",
      "1916:             t.start(this,true);",
      "1917:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1918:         for (Publisher _t : Descriptor.newInstancesFromHeteroList(req, json, \"publisher\", Jenkins.getInstance().getExtensionList(BuildTrigger.DescriptorImpl.class))) {",
      "1919:             BuildTrigger t = (BuildTrigger) _t;",
      "1920:             for (AbstractProject downstream : t.getChildProjects(this)) {",
      "1921:                 downstream.checkPermission(BUILD);",
      "1922:             }",
      "1923:         }",
      "",
      "---------------"
    ],
    "core/src/main/java/hudson/model/Descriptor.java||core/src/main/java/hudson/model/Descriptor.java": [
      "File: core/src/main/java/hudson/model/Descriptor.java -> core/src/main/java/hudson/model/Descriptor.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "936:             for (Object o : JSONArray.fromObject(formData)) {",
      "937:                 JSONObject jo = (JSONObject)o;",
      "938:                 String kind = jo.getString(\"kind\");",
      "940:             }",
      "941:         }",
      "",
      "[Removed Lines]",
      "939:                 items.add(find(descriptors,kind).newInstance(req,jo));",
      "",
      "[Added Lines]",
      "939:                 Descriptor<T> d = find(descriptors, kind);",
      "940:                 if (d != null) {",
      "941:                     items.add(d.newInstance(req, jo));",
      "942:                 }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "950:         for (T d : list) {",
      "951:             if(d.getClass().getName().equals(className))",
      "952:                 return d;",
      "",
      "[Removed Lines]",
      "949:     public static <T extends Descriptor> T find(Collection<? extends T> list, String className) {",
      "",
      "[Added Lines]",
      "952:     public static @CheckForNull <T extends Descriptor> T find(Collection<? extends T> list, String className) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "960:         return null;",
      "961:     }",
      "964:         return find(Jenkins.getInstance().getExtensionList(Descriptor.class),className);",
      "965:     }",
      "",
      "[Removed Lines]",
      "963:     public static Descriptor find(String className) {",
      "",
      "[Added Lines]",
      "966:     public static @CheckForNull Descriptor find(String className) {",
      "",
      "---------------"
    ],
    "core/src/main/java/hudson/tasks/BuildTrigger.java||core/src/main/java/hudson/tasks/BuildTrigger.java": [
      "File: core/src/main/java/hudson/tasks/BuildTrigger.java -> core/src/main/java/hudson/tasks/BuildTrigger.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "324:             if(!project.hasPermission(Item.CONFIGURE))      return FormValidation.ok();",
      "",
      "[Removed Lines]",
      "322:         public FormValidation doCheck(@AncestorInPath Item project, @QueryParameter String value ) {",
      "",
      "[Added Lines]",
      "322:         public FormValidation doCheck(@AncestorInPath Item project, @QueryParameter String value, @QueryParameter boolean upstream) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "334:                                 AbstractProject.findNearest(projectName,project.getParent()).getRelativeNameFrom(project)));",
      "335:                     if(!(item instanceof AbstractProject))",
      "336:                         return FormValidation.error(Messages.BuildTrigger_NotBuildable(projectName));",
      "337:                     hasProjects = true;",
      "338:                 }",
      "339:             }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "337:                     if (!upstream && !item.hasPermission(Item.BUILD)) {",
      "338:                         return FormValidation.error(Messages.BuildTrigger_you_have_no_permission_to_build_(projectName));",
      "339:                     }",
      "",
      "---------------"
    ],
    "core/src/main/resources/hudson/tasks/Messages.properties||core/src/main/resources/hudson/tasks/Messages.properties": [
      "File: core/src/main/resources/hudson/tasks/Messages.properties -> core/src/main/resources/hudson/tasks/Messages.properties",
      "--- Hunk 1 ---",
      "[Context before]",
      "47: BuildTrigger.NoProjectSpecified=No project specified",
      "48: BuildTrigger.NotBuildable={0} is not buildable",
      "49: BuildTrigger.Triggering=Triggering a new build of {0}",
      "51: CommandInterpreter.CommandFailed=command execution failed",
      "52: CommandInterpreter.UnableToDelete=Unable to delete script file {0}",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "50: BuildTrigger.you_have_no_permission_to_build_=You have no permission to build {0}",
      "",
      "---------------"
    ],
    "core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly||core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly": [
      "File: core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly -> core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly",
      "--- Hunk 1 ---",
      "[Context before]",
      "38:     <f:entry title=\"${%Project names}\"",
      "39:              description=\"${%Multiple projects can be specified like 'abc, def'}\">",
      "40:       <f:textbox name=\"upstreamProjects\" value=\"${h.getProjectListString(up)}\"",
      "42:         autoCompleteField=\"upstreamProjects\"/>",
      "43:     </f:entry>",
      "44:   </f:optionalBlock>",
      "",
      "[Removed Lines]",
      "41:         checkUrl=\"'descriptorByName/hudson.tasks.BuildTrigger/check?value='+encodeURIComponent(this.value)\"",
      "",
      "[Added Lines]",
      "41:         checkUrl=\"'descriptorByName/hudson.tasks.BuildTrigger/check?upstream=true&amp;value='+encodeURIComponent(this.value)\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "757bc8a53956e6fbab267214e6e0896f03c3c262",
      "candidate_info": {
        "commit_hash": "757bc8a53956e6fbab267214e6e0896f03c3c262",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/757bc8a53956e6fbab267214e6e0896f03c3c262",
        "files": [
          "core/src/main/java/hudson/model/AbstractProject.java",
          "core/src/main/java/hudson/model/Descriptor.java",
          "core/src/main/java/hudson/tasks/BuildTrigger.java",
          "core/src/main/resources/hudson/tasks/Messages.properties",
          "core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly"
        ],
        "message": "[SECURITY-55]\n\nThis patch makes standard post-build action refuse to let you configure a downstream project you cannot currently build.\nThe one from parameterized-trigger will show an error in the configure screen but still lets you save the configuration; needs an analogous patch to that plugin.\nDoes not yet protect against POSTing config.xml with the trigger.",
        "before_after_code_files": [
          "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java",
          "core/src/main/java/hudson/model/Descriptor.java||core/src/main/java/hudson/model/Descriptor.java",
          "core/src/main/java/hudson/tasks/BuildTrigger.java||core/src/main/java/hudson/tasks/BuildTrigger.java",
          "core/src/main/resources/hudson/tasks/Messages.properties||core/src/main/resources/hudson/tasks/Messages.properties",
          "core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly||core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java",
            "core/src/main/java/hudson/model/Descriptor.java||core/src/main/java/hudson/model/Descriptor.java",
            "core/src/main/java/hudson/tasks/BuildTrigger.java||core/src/main/java/hudson/tasks/BuildTrigger.java",
            "core/src/main/resources/hudson/tasks/Messages.properties||core/src/main/resources/hudson/tasks/Messages.properties",
            "core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly||core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly"
          ],
          "candidate": [
            "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java",
            "core/src/main/java/hudson/model/Descriptor.java||core/src/main/java/hudson/model/Descriptor.java",
            "core/src/main/java/hudson/tasks/BuildTrigger.java||core/src/main/java/hudson/tasks/BuildTrigger.java",
            "core/src/main/resources/hudson/tasks/Messages.properties||core/src/main/resources/hudson/tasks/Messages.properties",
            "core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly||core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java": [
          "File: core/src/main/java/hudson/model/AbstractProject.java -> core/src/main/java/hudson/model/AbstractProject.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1794:         triggers = buildDescribable(req, Trigger.for_(this));",
          "1795:         for (Trigger t : triggers)",
          "1796:             t.start(this,true);",
          "1797:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1798:         for (Publisher _t : Descriptor.newInstancesFromHeteroList(req, json, \"publisher\", Jenkins.getInstance().getExtensionList(BuildTrigger.DescriptorImpl.class))) {",
          "1799:             BuildTrigger t = (BuildTrigger) _t;",
          "1800:             for (AbstractProject downstream : t.getChildProjects(this)) {",
          "1801:                 downstream.checkPermission(BUILD);",
          "1802:             }",
          "1803:         }",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/model/Descriptor.java||core/src/main/java/hudson/model/Descriptor.java": [
          "File: core/src/main/java/hudson/model/Descriptor.java -> core/src/main/java/hudson/model/Descriptor.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: import java.lang.reflect.Field;",
          "73: import java.lang.reflect.ParameterizedType;",
          "74: import java.beans.Introspector;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75: import javax.annotation.CheckForNull;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "909:             for (Object o : JSONArray.fromObject(formData)) {",
          "910:                 JSONObject jo = (JSONObject)o;",
          "911:                 String kind = jo.getString(\"kind\");",
          "913:             }",
          "914:         }",
          "",
          "[Removed Lines]",
          "912:                 items.add(find(descriptors,kind).newInstance(req,jo));",
          "",
          "[Added Lines]",
          "913:                 Descriptor<T> d = find(descriptors, kind);",
          "914:                 if (d != null) {",
          "915:                     items.add(d.newInstance(req, jo));",
          "916:                 }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "923:         for (T d : list) {",
          "924:             if(d.getClass().getName().equals(className))",
          "925:                 return d;",
          "",
          "[Removed Lines]",
          "922:     public static <T extends Descriptor> T find(Collection<? extends T> list, String className) {",
          "",
          "[Added Lines]",
          "926:     public static @CheckForNull <T extends Descriptor> T find(Collection<? extends T> list, String className) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "933:         return null;",
          "934:     }",
          "937:         return find(Jenkins.getInstance().getExtensionList(Descriptor.class),className);",
          "938:     }",
          "",
          "[Removed Lines]",
          "936:     public static Descriptor find(String className) {",
          "",
          "[Added Lines]",
          "940:     public static @CheckForNull Descriptor find(String className) {",
          "",
          "---------------"
        ],
        "core/src/main/java/hudson/tasks/BuildTrigger.java||core/src/main/java/hudson/tasks/BuildTrigger.java": [
          "File: core/src/main/java/hudson/tasks/BuildTrigger.java -> core/src/main/java/hudson/tasks/BuildTrigger.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "323:             if(!project.hasPermission(Item.CONFIGURE))      return FormValidation.ok();",
          "",
          "[Removed Lines]",
          "321:         public FormValidation doCheck(@AncestorInPath Item project, @QueryParameter String value ) {",
          "",
          "[Added Lines]",
          "321:         public FormValidation doCheck(@AncestorInPath Item project, @QueryParameter String value, @QueryParameter boolean upstream) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "333:                                 AbstractProject.findNearest(projectName,project.getParent()).getRelativeNameFrom(project)));",
          "334:                     if(!(item instanceof AbstractProject))",
          "335:                         return FormValidation.error(Messages.BuildTrigger_NotBuildable(projectName));",
          "336:                     hasProjects = true;",
          "337:                 }",
          "338:             }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "336:                     if (!upstream && !item.hasPermission(Item.BUILD)) {",
          "337:                         return FormValidation.error(Messages.BuildTrigger_you_have_no_permission_to_build_(projectName));",
          "338:                     }",
          "",
          "---------------"
        ],
        "core/src/main/resources/hudson/tasks/Messages.properties||core/src/main/resources/hudson/tasks/Messages.properties": [
          "File: core/src/main/resources/hudson/tasks/Messages.properties -> core/src/main/resources/hudson/tasks/Messages.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "47: BuildTrigger.NoProjectSpecified=No project specified",
          "48: BuildTrigger.NotBuildable={0} is not buildable",
          "49: BuildTrigger.Triggering=Triggering a new build of {0}",
          "51: CommandInterpreter.CommandFailed=command execution failed",
          "52: CommandInterpreter.UnableToDelete=Unable to delete script file {0}",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50: BuildTrigger.you_have_no_permission_to_build_=You have no permission to build {0}",
          "",
          "---------------"
        ],
        "core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly||core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly": [
          "File: core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly -> core/src/main/resources/lib/hudson/project/config-upstream-pseudo-trigger.jelly",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     <f:entry title=\"${%Projects names}\"",
          "39:              description=\"${%Multiple projects can be specified like 'abc, def'}\">",
          "40:       <f:textbox name=\"upstreamProjects\" value=\"${h.getProjectListString(up)}\"",
          "42:         autoCompleteField=\"upstreamProjects\"/>",
          "43:     </f:entry>",
          "44:   </f:optionalBlock>",
          "",
          "[Removed Lines]",
          "41:         checkUrl=\"'descriptorByName/hudson.tasks.BuildTrigger/check?value='+encodeURIComponent(this.value)\"",
          "",
          "[Added Lines]",
          "41:         checkUrl=\"'descriptorByName/hudson.tasks.BuildTrigger/check?upstream=true&amp;value='+encodeURIComponent(this.value)\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b6b2a367a7976be80a799c6a49fa6c58d778b50e",
      "candidate_info": {
        "commit_hash": "b6b2a367a7976be80a799c6a49fa6c58d778b50e",
        "repo": "jenkinsci/jenkins",
        "commit_url": "https://github.com/jenkinsci/jenkins/commit/b6b2a367a7976be80a799c6a49fa6c58d778b50e",
        "files": [
          "core/src/main/java/hudson/model/AbstractProject.java",
          "test/src/test/java/hudson/tasks/BuildTriggerTest.java"
        ],
        "message": "[FIXED SECURITY-109] SECURITY-55 fix to BuildTrigger configuration failed if downstream project was not visible.",
        "before_after_code_files": [
          "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java",
          "test/src/test/java/hudson/tasks/BuildTriggerTest.java||test/src/test/java/hudson/tasks/BuildTriggerTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java"
          ],
          "candidate": [
            "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java"
          ]
        }
      },
      "candidate_diff": {
        "core/src/main/java/hudson/model/AbstractProject.java||core/src/main/java/hudson/model/AbstractProject.java": [
          "File: core/src/main/java/hudson/model/AbstractProject.java -> core/src/main/java/hudson/model/AbstractProject.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1940:         for (Publisher _t : Descriptor.newInstancesFromHeteroList(req, json, \"publisher\", Jenkins.getInstance().getExtensionList(BuildTrigger.DescriptorImpl.class))) {",
          "1941:             BuildTrigger t = (BuildTrigger) _t;",
          "1943:                 downstream.checkPermission(BUILD);",
          "1944:             }",
          "1945:         }",
          "",
          "[Removed Lines]",
          "1942:             for (AbstractProject downstream : t.getChildProjects(this)) {",
          "",
          "[Added Lines]",
          "1942:             List<AbstractProject> childProjects;",
          "1943:             SecurityContext orig = ACL.impersonate(ACL.SYSTEM);",
          "1944:             try {",
          "1945:                 childProjects = t.getChildProjects(this);",
          "1946:             } finally {",
          "1947:                 SecurityContextHolder.setContext(orig);",
          "1948:             }",
          "1949:             for (AbstractProject downstream : childProjects) {",
          "",
          "---------------"
        ],
        "test/src/test/java/hudson/tasks/BuildTriggerTest.java||test/src/test/java/hudson/tasks/BuildTriggerTest.java": [
          "File: test/src/test/java/hudson/tasks/BuildTriggerTest.java -> test/src/test/java/hudson/tasks/BuildTriggerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: package hudson.tasks;",
          "26: import com.gargoylesoftware.htmlunit.html.HtmlForm;",
          "27: import com.gargoylesoftware.htmlunit.html.HtmlPage;",
          "28: import hudson.maven.MavenModuleSet;",
          "29: import hudson.maven.MavenModuleSetBuild;",
          "30: import hudson.model.FreeStyleBuild;",
          "31: import hudson.model.FreeStyleProject;",
          "32: import hudson.model.Result;",
          "33: import hudson.model.Run;",
          "34: import org.jvnet.hudson.test.ExtractResourceSCM;",
          "35: import org.jvnet.hudson.test.HudsonTestCase;",
          "36: import org.jvnet.hudson.test.MockBuilder;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: import com.gargoylesoftware.htmlunit.FailingHttpStatusCodeException;",
          "29: import com.gargoylesoftware.htmlunit.html.HtmlTextInput;",
          "34: import hudson.model.Item;",
          "37: import hudson.security.AuthorizationMatrixProperty;",
          "38: import hudson.security.LegacySecurityRealm;",
          "39: import hudson.security.Permission;",
          "40: import hudson.security.ProjectMatrixAuthorizationStrategy;",
          "41: import java.util.Collections;",
          "42: import java.util.HashMap;",
          "43: import java.util.Map;",
          "44: import java.util.Set;",
          "45: import jenkins.model.Jenkins;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "131:     public void testMavenTriggerEvenWhenUnstable() throws Exception {",
          "132:         doMavenTriggerTest(true);",
          "133:     }",
          "134: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147:     public void testConfigureDownstreamProjectSecurity() throws Exception {",
          "148:         jenkins.setSecurityRealm(new LegacySecurityRealm());",
          "149:         ProjectMatrixAuthorizationStrategy auth = new ProjectMatrixAuthorizationStrategy();",
          "150:         auth.add(Jenkins.READ, \"alice\");",
          "151:         jenkins.setAuthorizationStrategy(auth);",
          "152:         FreeStyleProject upstream = createFreeStyleProject(\"upstream\");",
          "153:         Map<Permission,Set<String>> perms = new HashMap<Permission,Set<String>>();",
          "154:         perms.put(Item.READ, Collections.singleton(\"alice\"));",
          "155:         perms.put(Item.CONFIGURE, Collections.singleton(\"alice\"));",
          "156:         upstream.addProperty(new AuthorizationMatrixProperty(perms));",
          "157:         FreeStyleProject downstream = createFreeStyleProject(\"downstream\");",
          "159:         downstream.addProperty(new AuthorizationMatrixProperty(Collections.singletonMap(Item.READ, Collections.singleton(\"alice\"))));",
          "161:         WebClient wc = createWebClient();",
          "162:         wc.login(\"alice\");",
          "163:         HtmlPage page = wc.getPage(upstream, \"configure\");",
          "164:         HtmlForm config = page.getFormByName(\"config\");",
          "165:         config.getButtonByCaption(\"Add post-build action\").click(); // lib/hudson/project/config-publishers2.jelly",
          "166:         page.getAnchorByText(\"Build other projects\").click();",
          "167:         HtmlTextInput childProjects = config.getInputByName(\"buildTrigger.childProjects\");",
          "168:         childProjects.setValueAttribute(\"downstream\");",
          "169:         try {",
          "170:             submit(config);",
          "171:             fail();",
          "172:         } catch (FailingHttpStatusCodeException x) {",
          "173:             assertEquals(403, x.getStatusCode());",
          "174:         }",
          "175:         assertEquals(Collections.emptyList(), upstream.getDownstreamProjects());",
          "176:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}