{
  "cve_id": "CVE-2022-0436",
  "cve_desc": "Path Traversal in GitHub repository gruntjs/grunt prior to 1.5.2.",
  "repo": "gruntjs/grunt",
  "patch_hash": "aad3d4521c3098fb255fb2db8f2e1d691a033665",
  "patch_info": {
    "commit_hash": "aad3d4521c3098fb255fb2db8f2e1d691a033665",
    "repo": "gruntjs/grunt",
    "commit_url": "https://github.com/gruntjs/grunt/commit/aad3d4521c3098fb255fb2db8f2e1d691a033665",
    "files": [
      "lib/grunt/file.js",
      "package.json",
      "test/grunt/file_test.js"
    ],
    "message": "Update dependencies, tests...",
    "before_after_code_files": [
      "lib/grunt/file.js||lib/grunt/file.js",
      "test/grunt/file_test.js||test/grunt/file_test.js"
    ]
  },
  "patch_diff": {
    "lib/grunt/file.js||lib/grunt/file.js": [
      "File: lib/grunt/file.js -> lib/grunt/file.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "295: file.copy = function copy(srcpath, destpath, options) {",
      "299:     file.mkdir(destpath);",
      "",
      "[Removed Lines]",
      "296:   if (file.isDir(srcpath)) {",
      "",
      "[Added Lines]",
      "297:   if (file._isSymbolicLink(srcpath)) {",
      "298:     file._copySymbolicLink(srcpath, destpath);",
      "299:   } else if (file.isDir(srcpath)) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "449:   }",
      "450: };",
      "453: file.isPathInCwd = function() {",
      "454:   var filepath = path.join.apply(path, arguments);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "455: file._isSymbolicLink = function() {",
      "456:   var filepath = path.join.apply(path, arguments);",
      "457:   return fs.lstatSync(filepath).isSymbolicLink();",
      "458: };",
      "460: file._copySymbolicLink = function(srcpath, destpath) {",
      "461:   var destdir = path.join(destpath, '..');",
      "462:   var fileBase = path.basename(srcpath);",
      "464:   if (!grunt.file.isPathAbsolute(srcpath)) {",
      "465:     srcpath = path.relative(destdir, srcpath) || '.';",
      "466:   }",
      "467:   file.mkdir(destdir);",
      "468:   var mode = grunt.file.isDir(srcpath) ? 'dir' : 'file';",
      "469:   var destpath = path.join(destpath, fileBase);",
      "470:   return fs.symlinkSync(srcpath, destpath, mode);",
      "471: };",
      "",
      "---------------"
    ],
    "test/grunt/file_test.js||test/grunt/file_test.js": [
      "File: test/grunt/file_test.js -> test/grunt/file_test.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "893:       test.ok(grunt.file.isPathInCwd(path.resolve('deep')), 'subdirectory is in cwd');",
      "894:       test.done();",
      "895:     },",
      "896:   }",
      "897: };",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "896:     'symbolicLinkCopy': function(test) {",
      "897:       test.expect(4);",
      "898:       var srcfile = new Tempdir();",
      "899:       fs.symlinkSync(path.resolve('test/fixtures/octocat.png'), path.join(srcfile.path, 'octocat.png'), 'file');",
      "901:       var destdir = new Tempdir();",
      "902:       grunt.file.copy(path.join(srcfile.path, 'octocat.png'), destdir.path);",
      "903:       test.ok(fs.lstatSync(path.join(srcfile.path, 'octocat.png')).isSymbolicLink());",
      "904:       test.ok(fs.lstatSync(path.join(destdir.path, 'octocat.png')).isSymbolicLink());",
      "907:       var srcdir = new Tempdir();",
      "908:       var destdir = new Tempdir();",
      "909:       var fixtures = path.resolve('test/fixtures');",
      "910:       var symlinkSource = path.join(srcdir.path, path.basename(fixtures));",
      "911:       console.log('symlinkSource', symlinkSource);",
      "912:       fs.symlinkSync(fixtures, symlinkSource, 'dir');",
      "914:       grunt.file.copy(symlinkSource, destdir.path);",
      "915:       test.ok(fs.lstatSync(symlinkSource).isSymbolicLink());",
      "916:       test.ok(fs.lstatSync(path.join(destdir.path, path.basename(fixtures))).isSymbolicLink());",
      "917:       test.done();",
      "918:     },",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2e9161caa25c430fa8423cc14f5b67733c402bcd",
      "candidate_info": {
        "commit_hash": "2e9161caa25c430fa8423cc14f5b67733c402bcd",
        "repo": "gruntjs/grunt",
        "commit_url": "https://github.com/gruntjs/grunt/commit/2e9161caa25c430fa8423cc14f5b67733c402bcd",
        "files": [
          "lib/grunt/file.js"
        ],
        "message": "More updates",
        "before_after_code_files": [
          "lib/grunt/file.js||lib/grunt/file.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/gruntjs/grunt/pull/1740"
        ],
        "olp_code_files": {
          "patch": [
            "lib/grunt/file.js||lib/grunt/file.js"
          ],
          "candidate": [
            "lib/grunt/file.js||lib/grunt/file.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/grunt/file.js||lib/grunt/file.js": [
          "File: lib/grunt/file.js -> lib/grunt/file.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "467:   file.mkdir(destdir);",
          "468:   var mode = grunt.file.isDir(srcpath) ? 'dir' : 'file';",
          "469:   var destpath = path.join(destpath, fileBase);",
          "470:   return fs.symlinkSync(srcpath, destpath, mode);",
          "471: };",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "470:   if (fs.existsSync(destpath)) {",
          "472:     return;",
          "473:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "04b960e27151869312dd7e5686a7d39baa85ed0d",
      "candidate_info": {
        "commit_hash": "04b960e27151869312dd7e5686a7d39baa85ed0d",
        "repo": "gruntjs/grunt",
        "commit_url": "https://github.com/gruntjs/grunt/commit/04b960e27151869312dd7e5686a7d39baa85ed0d",
        "files": [
          "test/grunt/file_test.js"
        ],
        "message": "Remove console log",
        "before_after_code_files": [
          "test/grunt/file_test.js||test/grunt/file_test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/gruntjs/grunt/pull/1740"
        ],
        "olp_code_files": {
          "patch": [
            "test/grunt/file_test.js||test/grunt/file_test.js"
          ],
          "candidate": [
            "test/grunt/file_test.js||test/grunt/file_test.js"
          ]
        }
      },
      "candidate_diff": {
        "test/grunt/file_test.js||test/grunt/file_test.js": [
          "File: test/grunt/file_test.js -> test/grunt/file_test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "908:       var destdir = new Tempdir();",
          "909:       var fixtures = path.resolve('test/fixtures');",
          "910:       var symlinkSource = path.join(srcdir.path, path.basename(fixtures));",
          "912:       fs.symlinkSync(fixtures, symlinkSource, 'dir');",
          "914:       grunt.file.copy(symlinkSource, destdir.path);",
          "",
          "[Removed Lines]",
          "911:       console.log('symlinkSource', symlinkSource);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0652305f1b79dfdc85a9bd0f2e78ca1e9ae795f5",
      "candidate_info": {
        "commit_hash": "0652305f1b79dfdc85a9bd0f2e78ca1e9ae795f5",
        "repo": "gruntjs/grunt",
        "commit_url": "https://github.com/gruntjs/grunt/commit/0652305f1b79dfdc85a9bd0f2e78ca1e9ae795f5",
        "files": [
          "lib/grunt/file.js",
          "test/grunt/file_test.js"
        ],
        "message": "Fix symlink test",
        "before_after_code_files": [
          "lib/grunt/file.js||lib/grunt/file.js",
          "test/grunt/file_test.js||test/grunt/file_test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/grunt/file.js||lib/grunt/file.js",
            "test/grunt/file_test.js||test/grunt/file_test.js"
          ],
          "candidate": [
            "lib/grunt/file.js||lib/grunt/file.js",
            "test/grunt/file_test.js||test/grunt/file_test.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/grunt/file.js||lib/grunt/file.js": [
          "File: lib/grunt/file.js -> lib/grunt/file.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "460: file._copySymbolicLink = function(srcpath, destpath) {",
          "461:   var destdir = path.join(destpath, '..');",
          "464:   if (!grunt.file.isPathAbsolute(srcpath)) {",
          "465:     srcpath = path.relative(destdir, srcpath) || '.';",
          "466:   }",
          "467:   file.mkdir(destdir);",
          "468:   var mode = grunt.file.isDir(srcpath) ? 'dir' : 'file';",
          "470:   if (fs.existsSync(destpath)) {",
          "472:     return;",
          "",
          "[Removed Lines]",
          "462:   var fileBase = path.basename(srcpath);",
          "469:   var destpath = path.join(destpath, fileBase);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "test/grunt/file_test.js||test/grunt/file_test.js": [
          "File: test/grunt/file_test.js -> test/grunt/file_test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "899:       fs.symlinkSync(path.resolve('test/fixtures/octocat.png'), path.join(srcfile.path, 'octocat.png'), 'file');",
          "901:       var destdir = new Tempdir();",
          "903:       test.ok(fs.lstatSync(path.join(srcfile.path, 'octocat.png')).isSymbolicLink());",
          "904:       test.ok(fs.lstatSync(path.join(destdir.path, 'octocat.png')).isSymbolicLink());",
          "",
          "[Removed Lines]",
          "902:       grunt.file.copy(path.join(srcfile.path, 'octocat.png'), destdir.path);",
          "",
          "[Added Lines]",
          "902:       grunt.file.copy(path.join(srcfile.path, 'octocat.png'), path.join(destdir.path, 'octocat.png'));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "908:       var destdir = new Tempdir();",
          "909:       var fixtures = path.resolve('test/fixtures');",
          "910:       var symlinkSource = path.join(srcdir.path, path.basename(fixtures));",
          "911:       fs.symlinkSync(fixtures, symlinkSource, 'dir');",
          "914:       test.ok(fs.lstatSync(symlinkSource).isSymbolicLink());",
          "915:       test.ok(fs.lstatSync(path.join(destdir.path, path.basename(fixtures))).isSymbolicLink());",
          "916:       test.done();",
          "",
          "[Removed Lines]",
          "913:       grunt.file.copy(symlinkSource, destdir.path);",
          "",
          "[Added Lines]",
          "911:       var destSource = path.join(destdir.path, path.basename(fixtures));",
          "914:       grunt.file.copy(symlinkSource, destSource);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "433f91b78df99d83daa6f56a5505ead743627c30",
      "candidate_info": {
        "commit_hash": "433f91b78df99d83daa6f56a5505ead743627c30",
        "repo": "gruntjs/grunt",
        "commit_url": "https://github.com/gruntjs/grunt/commit/433f91b78df99d83daa6f56a5505ead743627c30",
        "files": [
          "lib/grunt/file.js"
        ],
        "message": "Clean up link handling",
        "before_after_code_files": [
          "lib/grunt/file.js||lib/grunt/file.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/grunt/file.js||lib/grunt/file.js"
          ],
          "candidate": [
            "lib/grunt/file.js||lib/grunt/file.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/grunt/file.js||lib/grunt/file.js": [
          "File: lib/grunt/file.js -> lib/grunt/file.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "296: file.copy = function copy(srcpath, destpath, options) {",
          "298:     file._copySymbolicLink(srcpath, destpath);",
          "299:   } else if (file.isDir(srcpath)) {",
          "",
          "[Removed Lines]",
          "297:   if (file._isSymbolicLink(srcpath)) {",
          "",
          "[Added Lines]",
          "297:   if (file.isLink(destpath)) {",
          "299:     fs.unlinkSync(destpath);",
          "300:   }",
          "302:   if (file.isLink(srcpath)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "452:   }",
          "453: };",
          "460: file._copySymbolicLink = function(srcpath, destpath) {",
          "461:   var destdir = path.join(destpath, '..');",
          "",
          "[Removed Lines]",
          "455: file._isSymbolicLink = function() {",
          "456:   var filepath = path.join.apply(path, arguments);",
          "457:   return fs.lstatSync(filepath).isSymbolicLink();",
          "458: };",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}