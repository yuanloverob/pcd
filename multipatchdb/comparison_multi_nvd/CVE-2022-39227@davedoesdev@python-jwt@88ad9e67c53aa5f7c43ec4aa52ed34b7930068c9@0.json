{
  "cve_id": "CVE-2022-39227",
  "cve_desc": "python-jwt is a module for generating and verifying JSON Web Tokens. Versions prior to 3.3.4 are subject to Authentication Bypass by Spoofing, resulting in identity spoofing, session hijacking or authentication bypass. An attacker who obtains a JWT can arbitrarily forge its contents without knowing the secret key. Depending on the application, this may for example enable the attacker to spoof other user's identities, hijack their sessions, or bypass authentication. Users should upgrade to version 3.3.4. There are no known workarounds.",
  "repo": "davedoesdev/python-jwt",
  "patch_hash": "88ad9e67c53aa5f7c43ec4aa52ed34b7930068c9",
  "patch_info": {
    "commit_hash": "88ad9e67c53aa5f7c43ec4aa52ed34b7930068c9",
    "repo": "davedoesdev/python-jwt",
    "commit_url": "https://github.com/davedoesdev/python-jwt/commit/88ad9e67c53aa5f7c43ec4aa52ed34b7930068c9",
    "files": [
      "README.md",
      "coverage/coverage.xml",
      "coverage/html/index.html",
      "coverage/html/status.json",
      "docs/_build/doctrees/environment.pickle",
      "docs/_build/html/.buildinfo",
      "docs/_build/html/_static/documentation_options.js",
      "docs/_build/html/genindex.html",
      "docs/_build/html/index.html",
      "docs/_build/html/py-modindex.html",
      "docs/_build/html/search.html",
      "docs/conf.py",
      "python_jwt/__init__.py",
      "setup.py",
      "test/vulnerability_vows.py"
    ],
    "message": "FIX VULNERABILITY\n\njwcrypto accepts both compact and JSON formats.\nIt was possible to use this to present a token with arbitrary\nclaims with a signature from another valid token.\n\nSee test/vulnerability_vows.py for an example.",
    "before_after_code_files": [
      "coverage/html/index.html||coverage/html/index.html",
      "python_jwt/__init__.py||python_jwt/__init__.py",
      "setup.py||setup.py",
      "test/vulnerability_vows.py||test/vulnerability_vows.py"
    ]
  },
  "patch_diff": {
    "coverage/html/index.html||coverage/html/index.html": [
      "File: coverage/html/index.html -> coverage/html/index.html",
      "--- Hunk 1 ---",
      "[Context before]",
      "47:         </form>",
      "48:         <p class=\"text\">",
      "49:             <a class=\"nav\" href=\"https://coverage.readthedocs.io\">coverage.py v6.4.1</a>,",
      "51:         </p>",
      "52:     </div>",
      "53: </header>",
      "",
      "[Removed Lines]",
      "50:             created at 2022-07-03 08:13 +0100",
      "",
      "[Added Lines]",
      "50:             created at 2022-08-31 20:10 +0100",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "67:         <tbody>",
      "68:             <tr class=\"file\">",
      "69:                 <td class=\"name left\"><a href=\"d_7bfe6de028c7ad70___init___py.html\">python_jwt/__init__.py</a></td>",
      "71:                 <td>0</td>",
      "72:                 <td>0</td>",
      "74:                 <td>0</td>",
      "76:             </tr>",
      "77:         </tbody>",
      "78:         <tfoot>",
      "79:             <tr class=\"total\">",
      "80:                 <td class=\"name left\">Total</td>",
      "82:                 <td>0</td>",
      "83:                 <td>0</td>",
      "85:                 <td>0</td>",
      "87:             </tr>",
      "88:         </tfoot>",
      "89:     </table>",
      "",
      "[Removed Lines]",
      "70:                 <td>88</td>",
      "73:                 <td>58</td>",
      "75:                 <td class=\"right\" data-ratio=\"146 146\">100%</td>",
      "81:                 <td>88</td>",
      "84:                 <td>58</td>",
      "86:                 <td class=\"right\" data-ratio=\"146 146\">100%</td>",
      "",
      "[Added Lines]",
      "70:                 <td>96</td>",
      "73:                 <td>60</td>",
      "75:                 <td class=\"right\" data-ratio=\"156 156\">100%</td>",
      "81:                 <td>96</td>",
      "84:                 <td>60</td>",
      "86:                 <td class=\"right\" data-ratio=\"156 156\">100%</td>",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "95:     <div class=\"content\">",
      "96:         <p>",
      "97:             <a class=\"nav\" href=\"https://coverage.readthedocs.io\">coverage.py v6.4.1</a>,",
      "99:         </p>",
      "100:     </div>",
      "101:     <aside class=\"hidden\">",
      "",
      "[Removed Lines]",
      "98:             created at 2022-07-03 08:13 +0100",
      "",
      "[Added Lines]",
      "98:             created at 2022-08-31 20:10 +0100",
      "",
      "---------------"
    ],
    "python_jwt/__init__.py||python_jwt/__init__.py": [
      "File: python_jwt/__init__.py -> python_jwt/__init__.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: Functions for generating and verifying JSON Web Tokens.",
      "3: \"\"\"",
      "5: from datetime import datetime, timedelta",
      "6: from calendar import timegm",
      "7: from os import urandom",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5: import re",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "99: #pylint: disable=R0912,too-many-locals",
      "101: def verify_jwt(jwt,",
      "102:                pub_key=None,",
      "103:                allowed_algs=None,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "102: _jwt_re = re.compile(r'^[A-Za-z0-9\\-_]+\\.[A-Za-z0-9\\-_]+\\.[A-Za-z0-9\\-_]*$')",
      "103: def _check_jwt_format(jwt):",
      "104:     if not _jwt_re.match(jwt):",
      "105:         raise _JWTError('invalid JWT format')",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "140:     :raises: If the token failed to verify.",
      "141:     \"\"\"",
      "142:     if allowed_algs is None:",
      "143:         allowed_algs = []",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "148:     #pylint: disable=too-many-statements",
      "150:     _check_jwt_format(jwt)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "167:         token = JWS()",
      "168:         token.allowed_algs = allowed_algs",
      "169:         token.deserialize(jwt, pub_key)",
      "170:     elif 'none' not in allowed_algs:",
      "171:         raise _JWTError('no key but none alg not allowed')",
      "175:     utcnow = datetime.utcnow()",
      "176:     now = timegm(utcnow.utctimetuple())",
      "",
      "[Removed Lines]",
      "173:     parsed_claims = json_decode(base64url_decode(claims))",
      "",
      "[Added Lines]",
      "180:         parsed_claims = json_decode(token.payload)",
      "183:     else:",
      "184:         parsed_claims = json_decode(base64url_decode(claims))",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "219:     :rtype: tuple",
      "220:     :returns: ``(header, claims)``",
      "221:     \"\"\"",
      "222:     header, claims, _ = jwt.split('.')",
      "223:     parsed_header = json_decode(base64url_decode(header))",
      "224:     parsed_claims = json_decode(base64url_decode(claims))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "233:     _check_jwt_format(jwt)",
      "",
      "---------------"
    ],
    "setup.py||setup.py": [
      "File: setup.py -> setup.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "7: setup(",
      "8:     name='python_jwt',",
      "10:     description=\"Module for generating and verifying JSON Web Tokens\",",
      "11:     long_description=read('README.md'),",
      "12:     long_description_content_type='text/markdown',",
      "",
      "[Removed Lines]",
      "9:     version='3.3.3',",
      "",
      "[Added Lines]",
      "9:     version='3.3.4',",
      "",
      "---------------"
    ],
    "test/vulnerability_vows.py||test/vulnerability_vows.py": [
      "File: test/vulnerability_vows.py -> test/vulnerability_vows.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: \"\"\" Test claim forgery vulnerability fix \"\"\"",
      "2: from datetime import timedelta",
      "3: from json import loads, dumps",
      "4: from test.common import generated_keys",
      "5: from test import python_jwt as jwt",
      "6: from pyvows import Vows, expect",
      "7: from jwcrypto.common import base64url_decode, base64url_encode",
      "9: @Vows.batch",
      "10: class ForgedClaims(Vows.Context):",
      "11:     \"\"\" Check we get an error when payload is forged using mix of compact and JSON formats \"\"\"",
      "12:     def topic(self):",
      "13:         \"\"\" Generate token \"\"\"",
      "14:         payload = {'sub': 'alice'}",
      "15:         return jwt.generate_jwt(payload, generated_keys['PS256'], 'PS256', timedelta(minutes=60))",
      "17:     class PolyglotToken(Vows.Context):",
      "18:         \"\"\" Make a forged token \"\"\"",
      "19:         def topic(self, topic):",
      "20:             \"\"\" Use mix of JSON and compact format to insert forged claims including long expiration \"\"\"",
      "21:             [header, payload, signature] = topic.split('.')",
      "22:             parsed_payload = loads(base64url_decode(payload))",
      "23:             parsed_payload['sub'] = 'bob'",
      "24:             parsed_payload['exp'] = 2000000000",
      "25:             fake_payload = base64url_encode((dumps(parsed_payload, separators=(',', ':'))))",
      "26:             return '{\"  ' + header + '.' + fake_payload + '.\":\"\",\"protected\":\"' + header + '\", \"payload\":\"' + payload + '\",\"signature\":\"' + signature + '\"}'",
      "28:         class Verify(Vows.Context):",
      "29:             \"\"\" Check the forged token fails to verify \"\"\"",
      "30:             @Vows.capture_error",
      "31:             def topic(self, topic):",
      "32:                 \"\"\" Verify the forged token \"\"\"",
      "33:                 return jwt.verify_jwt(topic, generated_keys['PS256'], ['PS256'])",
      "35:             def token_should_not_verify(self, r):",
      "36:                 \"\"\" Check the token doesn't verify due to mixed format being detected \"\"\"",
      "37:                 expect(r).to_be_an_error()",
      "38:                 expect(str(r)).to_equal('invalid JWT format')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6e29856a8ca3e2d8abe192cbd6ede271af4fa87c",
      "candidate_info": {
        "commit_hash": "6e29856a8ca3e2d8abe192cbd6ede271af4fa87c",
        "repo": "davedoesdev/python-jwt",
        "commit_url": "https://github.com/davedoesdev/python-jwt/commit/6e29856a8ca3e2d8abe192cbd6ede271af4fa87c",
        "files": [
          ".github/workflows/ci.yml",
          ".gitignore",
          "README.md",
          "docs/_build/doctrees/environment.pickle",
          "docs/_build/html/.buildinfo",
          "docs/_build/html/_static/documentation_options.js",
          "docs/_build/html/genindex.html",
          "docs/_build/html/index.html",
          "docs/_build/html/objects.inv",
          "docs/_build/html/py-modindex.html",
          "docs/_build/html/search.html",
          "docs/conf.py",
          "requirements.txt",
          "setup.py"
        ],
        "message": "Update deps, drop Python 2",
        "before_after_code_files": [
          "setup.py||setup.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "setup.py||setup.py"
          ],
          "candidate": [
            "setup.py||setup.py"
          ]
        }
      },
      "candidate_diff": {
        "setup.py||setup.py": [
          "File: setup.py -> setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: setup(",
          "8:     name='python_jwt',",
          "10:     description=\"Module for generating and verifying JSON Web Tokens\",",
          "11:     long_description=read('README.md'),",
          "12:     long_description_content_type='text/markdown',",
          "",
          "[Removed Lines]",
          "9:     version='3.3.5',",
          "",
          "[Added Lines]",
          "9:     version='4.0.0',",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "16:     url='https://github.com/davedoesdev/python-jwt',",
          "17:     license='MIT',",
          "18:     packages=['python_jwt'],",
          "22:     classifiers=[",
          "24:         'Programming Language :: Python :: 3',",
          "25:         'Programming Language :: Python :: Implementation :: CPython',",
          "26:     ],",
          "",
          "[Removed Lines]",
          "19:     install_requires=[\"jwcrypto>=0.4.2,<1.0.0; python_version < '3.0'\",",
          "20:                       \"jwcrypto>=1.0.0; python_version >= '3.0'\"],",
          "21:     python_requires='>=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*',",
          "23:         'Programming Language :: Python :: 2',",
          "",
          "[Added Lines]",
          "19:     install_requires=['jwcrypto>=1.4.2'],",
          "20:     python_requires='>=3.6',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6c5075469847b9e8b6e5336077d989d77a4d2bf1",
      "candidate_info": {
        "commit_hash": "6c5075469847b9e8b6e5336077d989d77a4d2bf1",
        "repo": "davedoesdev/python-jwt",
        "commit_url": "https://github.com/davedoesdev/python-jwt/commit/6c5075469847b9e8b6e5336077d989d77a4d2bf1",
        "files": [
          "README.md",
          "docs/_build/doctrees/environment.pickle",
          "docs/_build/html/.buildinfo",
          "docs/_build/html/_static/documentation_options.js",
          "docs/_build/html/genindex.html",
          "docs/_build/html/index.html",
          "docs/_build/html/py-modindex.html",
          "docs/_build/html/search.html",
          "docs/conf.py",
          "setup.py"
        ],
        "message": "Add CVE",
        "before_after_code_files": [
          "setup.py||setup.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "setup.py||setup.py"
          ],
          "candidate": [
            "setup.py||setup.py"
          ]
        }
      },
      "candidate_diff": {
        "setup.py||setup.py": [
          "File: setup.py -> setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: setup(",
          "8:     name='python_jwt',",
          "10:     description=\"Module for generating and verifying JSON Web Tokens\",",
          "11:     long_description=read('README.md'),",
          "12:     long_description_content_type='text/markdown',",
          "",
          "[Removed Lines]",
          "9:     version='3.3.4',",
          "",
          "[Added Lines]",
          "9:     version='3.3.5',",
          "",
          "---------------"
        ]
      }
    }
  ]
}