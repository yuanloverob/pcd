{
  "cve_id": "CVE-2022-0510",
  "cve_desc": "Cross-site Scripting (XSS) - Reflected in Packagist pimcore/pimcore prior to 10.3.1.",
  "repo": "pimcore/pimcore",
  "patch_hash": "b5a9ad65e5a4dde1916f02019f8686ad835681ce",
  "patch_info": {
    "commit_hash": "b5a9ad65e5a4dde1916f02019f8686ad835681ce",
    "repo": "pimcore/pimcore",
    "commit_url": "https://github.com/pimcore/pimcore/commit/b5a9ad65e5a4dde1916f02019f8686ad835681ce",
    "files": [
      "bundles/AdminBundle/Controller/Admin/DataObject/ClassController.php"
    ],
    "message": "[Admin] DataObject - Escape class definitions group properly",
    "before_after_code_files": [
      "bundles/AdminBundle/Controller/Admin/DataObject/ClassController.php||bundles/AdminBundle/Controller/Admin/DataObject/ClassController.php"
    ]
  },
  "patch_diff": {
    "bundles/AdminBundle/Controller/Admin/DataObject/ClassController.php||bundles/AdminBundle/Controller/Admin/DataObject/ClassController.php": [
      "File: bundles/AdminBundle/Controller/Admin/DataObject/ClassController.php -> bundles/AdminBundle/Controller/Admin/DataObject/ClassController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "861:                 if (!isset($groups[$item->getGroup()])) {",
      "862:                     $groups[$item->getGroup()] = [",
      "863:                         'id' => 'group_' . $item->getKey(),",
      "865:                         'expandable' => true,",
      "866:                         'leaf' => false,",
      "867:                         'allowChildren' => true,",
      "",
      "[Removed Lines]",
      "864:                         'text' => $item->getGroup(),",
      "",
      "[Added Lines]",
      "864:                         'text' => htmlspecialchars($item->getGroup()),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1266:                 if (!isset($groups[$item->getGroup()])) {",
      "1267:                     $groups[$item->getGroup()] = [",
      "1268:                         'id' => 'group_' . $item->getKey(),",
      "1270:                         'expandable' => true,",
      "1271:                         'leaf' => false,",
      "1272:                         'allowChildren' => true,",
      "",
      "[Removed Lines]",
      "1269:                         'text' => $item->getGroup(),",
      "",
      "[Added Lines]",
      "1269:                         'text' => htmlspecialchars($item->getGroup()),",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6ccb5c12fc1be065ebce9c89c4677ee939b88597",
      "candidate_info": {
        "commit_hash": "6ccb5c12fc1be065ebce9c89c4677ee939b88597",
        "repo": "pimcore/pimcore",
        "commit_url": "https://github.com/pimcore/pimcore/commit/6ccb5c12fc1be065ebce9c89c4677ee939b88597",
        "files": [
          "bundles/AdminBundle/Resources/public/js/pimcore/settings/website.js"
        ],
        "message": "[Admin] Website Settings - Escape grid values properly",
        "before_after_code_files": [
          "bundles/AdminBundle/Resources/public/js/pimcore/settings/website.js||bundles/AdminBundle/Resources/public/js/pimcore/settings/website.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/pimcore/pimcore/pull/11387"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "bundles/AdminBundle/Resources/public/js/pimcore/settings/website.js||bundles/AdminBundle/Resources/public/js/pimcore/settings/website.js": [
          "File: bundles/AdminBundle/Resources/public/js/pimcore/settings/website.js -> bundles/AdminBundle/Resources/public/js/pimcore/settings/website.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:                 border:false,",
          "37:                 layout:\"fit\",",
          "38:                 closable:true,",
          "40:             });",
          "42:             var tabPanel = Ext.getCmp(\"pimcore_panel_tabs\");",
          "",
          "[Removed Lines]",
          "39:                 items:[this.getRowEditor()]",
          "",
          "[Added Lines]",
          "39:                 items:[this.getRowEditor()],",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133:                 dataIndex: 'data',",
          "134:                 flex: 300,",
          "135:                 editable: true,",
          "136:                 renderer: this.getCellRenderer.bind(this),",
          "137:             },",
          "138:             {text: t(\"site\"), flex: 100, sortable:true, dataIndex: \"siteId\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136:                 editor: new Ext.form.TextField({}),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "303:             bodyCls: \"pimcore_editable_grid\",",
          "304:             stripeRows:true,",
          "305:             columns : {",
          "307:             },",
          "308:             sm:  Ext.create('Ext.selection.RowModel', {}),",
          "309:             bbar:this.pagingtoolbar,",
          "",
          "[Removed Lines]",
          "306:                 items: typesColumns",
          "",
          "[Added Lines]",
          "307:                 items: typesColumns,",
          "308:                 defaults: {",
          "309:                     renderer: Ext.util.Format.htmlEncode",
          "310:                 },",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "359:     },",
          "361:     getCellEditor: function (record) {",
          "367:         if (type === \"text\") {",
          "369:         } else if (type == \"textarea\") {",
          "371:         } else if (type == \"document\" || type == \"asset\" || type == \"object\") {",
          "372:             property = {",
          "373:                 xtype: 'textfield',",
          "",
          "[Removed Lines]",
          "362:         var data = record.data;",
          "364:         var type = data.type;",
          "365:         var property;",
          "368:             property = Ext.create('Ext.form.TextField');",
          "370:             property = Ext.create('Ext.form.TextArea');",
          "",
          "[Added Lines]",
          "366:         let data = record.data;",
          "368:         let type = data.type;",
          "369:         let property;",
          "372:             property = {",
          "373:                 xtype: 'textfield',",
          "374:                 flex: 1,",
          "375:                 value: data.data",
          "376:             }",
          "378:             property = {",
          "379:                 xtype: \"textarea\",",
          "380:                 flex: 1,",
          "381:                 value: data.data",
          "382:             }",
          "",
          "---------------"
        ]
      }
    }
  ]
}