{
  "cve_id": "CVE-2020-7795",
  "cve_desc": "The package get-npm-package-version before 1.0.7 are vulnerable to Command Injection via main function in index.js.",
  "repo": "hoperyy/get-npm-package-version",
  "patch_hash": "40b1cf31a0607ea66f9e30a0c3af1383b52b2dec",
  "patch_info": {
    "commit_hash": "40b1cf31a0607ea66f9e30a0c3af1383b52b2dec",
    "repo": "hoperyy/get-npm-package-version",
    "commit_url": "https://github.com/hoperyy/get-npm-package-version/commit/40b1cf31a0607ea66f9e30a0c3af1383b52b2dec",
    "files": [
      "index.js"
    ],
    "message": "feat: add defence to Command Injection\n\nadd defence to Command Injection",
    "before_after_code_files": [
      "index.js||index.js"
    ]
  },
  "patch_diff": {
    "index.js||index.js": [
      "File: index.js -> index.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: module.exports = function (packageName, { registry = '', timeout = null } = {}) {",
      "2:     try {",
      "3:         let version;",
      "5:         const config = {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3:         if (/[`$&{}[;|]/g.test(packageName) || /[`$&{}[;|]/g.test(registry)) {",
      "4:             return null",
      "5:         }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2638b282311c6b9ea29c26fff65be7c08f293faf",
      "candidate_info": {
        "commit_hash": "2638b282311c6b9ea29c26fff65be7c08f293faf",
        "repo": "hoperyy/get-npm-package-version",
        "commit_url": "https://github.com/hoperyy/get-npm-package-version/commit/2638b282311c6b9ea29c26fff65be7c08f293faf",
        "files": [
          ".eslintrc.json",
          "index.js",
          "package-lock.json",
          "package.json",
          "test/index.test.js"
        ],
        "message": "style: configure & apply eslint",
        "before_after_code_files": [
          "index.js||index.js",
          "test/index.test.js||test/index.test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:     }",
          "",
          "[Removed Lines]",
          "1: const getNpmPkgVersion = function (packageName, { registry = '', timeout = null } = {}) {",
          "2:     try {",
          "3:         if (/[`$&{}[;|]/g.test(packageName) || /[`$&{}[;|]/g.test(registry)) {",
          "4:             return null",
          "5:         }",
          "6:         let version;",
          "8:         const config = {",
          "9:             stdio: ['pipe', 'pipe', 'ignore']",
          "10:         };",
          "12:         if (timeout) {",
          "13:             config.timeout = timeout;",
          "14:         }",
          "16:         if (registry) {",
          "17:             version = require('child_process').execSync(`npm view ${packageName} version --registry ${registry}`, config);",
          "18:         } else {",
          "19:             version = require('child_process').execSync(`npm view ${packageName} version`, config);",
          "20:         }",
          "22:         if (version) {",
          "23:             return version.toString().trim().replace(/^\\n*|\\n*$/g, '');",
          "24:         } else {",
          "25:             return null;",
          "26:         }",
          "28:     } catch(err) {",
          "29:         return null;",
          "31: }",
          "33: getNpmPkgVersion.getNpmPkgVersion = getNpmPkgVersion // Named export",
          "35: module.exports = getNpmPkgVersion",
          "",
          "[Added Lines]",
          "1: 'use strict';",
          "3: const getNpmPkgVersion = function (packageName, { registry = '', timeout = null } = {}) {",
          "4:   try {",
          "5:     if (/[`$&{}[;|]/g.test(packageName) || /[`$&{}[;|]/g.test(registry)) {",
          "6:       return null;",
          "7:     }",
          "8:     let version;",
          "10:     const config = {",
          "11:       stdio: ['pipe', 'pipe', 'ignore']",
          "12:     };",
          "14:     if (timeout) {",
          "15:       config.timeout = timeout;",
          "16:     }",
          "18:     if (registry) {",
          "19:       version = require('child_process').execSync(`npm view ${packageName} version --registry ${registry}`, config);",
          "20:     } else {",
          "21:       version = require('child_process').execSync(`npm view ${packageName} version`, config);",
          "22:     }",
          "24:     if (version) {",
          "25:       return version.toString().trim().replace(/^\\n*|\\n*$/g, '');",
          "27:     return null;",
          "28:   } catch (err) {",
          "29:     return null;",
          "30:   }",
          "31: };",
          "33: getNpmPkgVersion.getNpmPkgVersion = getNpmPkgVersion; // Named export",
          "35: module.exports = getNpmPkgVersion;",
          "",
          "---------------"
        ],
        "test/index.test.js||test/index.test.js": [
          "File: test/index.test.js -> test/index.test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: const { expect } = require('chai');",
          "5: const getVersion = require('../index');",
          "27: });",
          "",
          "[Removed Lines]",
          "1: const path = require('path');",
          "2: const fs = require('fs');",
          "7: describe('test webpack and webpackxxx', () => {",
          "8:     it('test webpack', () => {",
          "9:         const version = getVersion('webpack');",
          "10:         expect(version).to.be.not.equal(null);",
          "11:     }).timeout(10 * 1000);",
          "13:     it('test webpackxxx(not exists)', () => {",
          "14:         const version = getVersion('webpackxxx', {",
          "15:             timeout: 100",
          "16:         });",
          "17:         expect(version).to.be.equal(null);",
          "18:     }).timeout(10 * 1000);",
          "21:     it('test defence Command Injection Attack', () => {",
          "22:         const version = getVersion('get-npm-package-version; echo hehe; npm view get-npm-package-version', {",
          "23:             timeout: 100",
          "24:         });",
          "25:         expect(version).to.be.equal(null);",
          "26:     }).timeout(10 * 1000);",
          "29: describe('export', () => {",
          "30:     it('named getNpmPkgVersion export refers to default', () => {",
          "31:         expect(getVersion).to.be.eq(getVersion.getNpmPkgVersion);",
          "32:     });",
          "33: })",
          "",
          "[Added Lines]",
          "1: 'use strict';",
          "6: describe('test webpack and webpackxxx', function () {",
          "7:   it('test webpack', function () {",
          "8:     const version = getVersion('webpack');",
          "9:     expect(version).to.be.not.equal(null);",
          "10:   }).timeout(10 * 1000);",
          "12:   it('test webpackxxx(not exists)', function () {",
          "13:     const version = getVersion('webpackxxx', {",
          "14:       timeout: 100",
          "15:     });",
          "16:     expect(version).to.be.equal(null);",
          "17:   }).timeout(10 * 1000);",
          "20:   it('test defence Command Injection Attack', function () {",
          "21:     const version = getVersion('get-npm-package-version; echo hehe; npm view get-npm-package-version', {",
          "22:       timeout: 100",
          "23:     });",
          "24:     expect(version).to.be.equal(null);",
          "25:   }).timeout(10 * 1000);",
          "28: describe('export', function () {",
          "29:   it('named getNpmPkgVersion export refers to default', function () {",
          "30:     expect(getVersion).to.be.eq(getVersion.getNpmPkgVersion);",
          "31:   });",
          "32: });",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f929bdcba82b0b5233ecff6f92bfea98c1a0de43",
      "candidate_info": {
        "commit_hash": "f929bdcba82b0b5233ecff6f92bfea98c1a0de43",
        "repo": "hoperyy/get-npm-package-version",
        "commit_url": "https://github.com/hoperyy/get-npm-package-version/commit/f929bdcba82b0b5233ecff6f92bfea98c1a0de43",
        "files": [
          ".npmignore",
          "index.js",
          "test/index.test.js"
        ],
        "message": "feat: expose getNpmPkgVersion as named export",
        "before_after_code_files": [
          "index.js||index.js",
          "test/index.test.js||test/index.test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "index.js||index.js"
          ],
          "candidate": [
            "index.js||index.js"
          ]
        }
      },
      "candidate_diff": {
        "index.js||index.js": [
          "File: index.js -> index.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "2:     try {",
          "3:         if (/[`$&{}[;|]/g.test(packageName) || /[`$&{}[;|]/g.test(registry)) {",
          "4:             return null",
          "",
          "[Removed Lines]",
          "1: module.exports = function (packageName, { registry = '', timeout = null } = {}) {",
          "",
          "[Added Lines]",
          "1: const getNpmPkgVersion = function (packageName, { registry = '', timeout = null } = {}) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:         return null;",
          "30:     }",
          "31: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "33: getNpmPkgVersion.getNpmPkgVersion = getNpmPkgVersion // Named export",
          "35: module.exports = getNpmPkgVersion",
          "",
          "---------------"
        ],
        "test/index.test.js||test/index.test.js": [
          "File: test/index.test.js -> test/index.test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:         expect(version).to.be.equal(null);",
          "26:     }).timeout(10 * 1000);",
          "27: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29: describe('export', () => {",
          "30:     it('named getNpmPkgVersion export refers to default', () => {",
          "31:         expect(getVersion).to.be.eq(getVersion.getNpmPkgVersion);",
          "32:     });",
          "33: })",
          "",
          "---------------"
        ]
      }
    }
  ]
}