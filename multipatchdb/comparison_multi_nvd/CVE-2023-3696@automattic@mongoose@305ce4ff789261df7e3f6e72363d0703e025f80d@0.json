{
  "cve_id": "CVE-2023-3696",
  "cve_desc": "Prototype Pollution in GitHub repository automattic/mongoose prior to 7.3.4.",
  "repo": "automattic/mongoose",
  "patch_hash": "305ce4ff789261df7e3f6e72363d0703e025f80d",
  "patch_info": {
    "commit_hash": "305ce4ff789261df7e3f6e72363d0703e025f80d",
    "repo": "automattic/mongoose",
    "commit_url": "https://github.com/automattic/mongoose/commit/305ce4ff789261df7e3f6e72363d0703e025f80d",
    "files": [
      "lib/document.js",
      "test/document.test.js"
    ],
    "message": "fix: avoid prototype pollution on init",
    "before_after_code_files": [
      "lib/document.js||lib/document.js",
      "test/document.test.js||test/document.test.js"
    ]
  },
  "patch_diff": {
    "lib/document.js||lib/document.js": [
      "File: lib/document.js -> lib/document.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "741:   function _init(index) {",
      "742:     i = keys[index];",
      "743:     path = prefix + i;",
      "744:     schemaType = docSchema.path(path);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "744:     if (i === '__proto__' || i === 'constructor') {",
      "745:       return;",
      "746:     }",
      "",
      "---------------"
    ],
    "test/document.test.js||test/document.test.js": [
      "File: test/document.test.js -> test/document.test.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "12278:     assert.equal(fromDb.obj.subArr.length, 1);",
      "12279:     assert.equal(fromDb.obj.subArr[0].str, 'subArr.test1');",
      "12280:   });",
      "12281: });",
      "12283: describe('Check if instance function that is supplied in schema option is availabe', function() {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12282:   it('avoids prototype pollution on init', async function() {",
      "12283:     const Example = db.model('Example', new Schema({ hello: String }));",
      "12285:     const example = await new Example({ hello: 'world!' }).save();",
      "12286:     await Example.findByIdAndUpdate(example._id, {",
      "12287:       $rename: {",
      "12288:         hello: '__proto__.polluted'",
      "12289:       }",
      "12290:     });",
      "12293:     await Example.find();",
      "12295:     const test = {};",
      "12296:     assert.strictEqual(test.polluted, undefined);",
      "12297:     assert.strictEqual(Object.prototype.polluted, undefined);",
      "12298:   });",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f1efabf350522257364aa5c2cb36e441cf08f1a2",
      "candidate_info": {
        "commit_hash": "f1efabf350522257364aa5c2cb36e441cf08f1a2",
        "repo": "automattic/mongoose",
        "commit_url": "https://github.com/automattic/mongoose/commit/f1efabf350522257364aa5c2cb36e441cf08f1a2",
        "files": [
          "lib/document.js",
          "test/document.test.js"
        ],
        "message": "fix: avoid prototype pollution on init",
        "before_after_code_files": [
          "lib/document.js||lib/document.js",
          "test/document.test.js||test/document.test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/document.js||lib/document.js",
            "test/document.test.js||test/document.test.js"
          ],
          "candidate": [
            "lib/document.js||lib/document.js",
            "test/document.test.js||test/document.test.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/document.js||lib/document.js": [
          "File: lib/document.js -> lib/document.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "690:   function _init(index) {",
          "691:     i = keys[index];",
          "692:     path = prefix + i;",
          "693:     schema = self.$__schema.path(path);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "693:     if (i === '__proto__' || i === 'constructor') {",
          "694:       return;",
          "695:     }",
          "",
          "---------------"
        ],
        "test/document.test.js||test/document.test.js": [
          "File: test/document.test.js -> test/document.test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "10528:       assert.ok(!band.embeddedMembers[0].member.name);",
          "10529:     });",
          "10530:   });",
          "10531: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "10532:   it('avoids prototype pollution on init', function() {",
          "10533:     const Example = db.model('Example', new Schema({ hello: String }));",
          "10535:     return co(function*() {",
          "10536:       const example = yield new Example({ hello: 'world!' }).save();",
          "10537:       yield Example.findByIdAndUpdate(example._id, {",
          "10538:         $rename: {",
          "10539:           hello: '__proto__.polluted'",
          "10540:         }",
          "10541:       });",
          "10544:       yield Example.find();",
          "10546:       const test = {};",
          "10547:       assert.strictEqual(test.polluted, undefined);",
          "10548:       assert.strictEqual(Object.prototype.polluted, undefined);",
          "10549:     });",
          "10550:   });",
          "",
          "---------------"
        ]
      }
    }
  ]
}