{
  "cve_id": "CVE-2013-2506",
  "cve_desc": "app/models/spree/user.rb in spree_auth_devise in Spree 1.1.x before 1.1.6, 1.2.x, and 1.3.x does not perform mass assignment safely when updating a user, which allows remote authenticated users to assign arbitrary roles to themselves.",
  "repo": "spree/spree_auth_devise",
  "patch_hash": "038d74771d3b5c13d13b738b73dfda1033a99f65",
  "patch_info": {
    "commit_hash": "038d74771d3b5c13d13b738b73dfda1033a99f65",
    "repo": "spree/spree_auth_devise",
    "commit_url": "https://github.com/spree/spree_auth_devise/commit/038d74771d3b5c13d13b738b73dfda1033a99f65",
    "files": [
      "app/controllers/spree/admin/users_controller.rb",
      "app/models/spree/user.rb",
      "spec/controllers/spree/users_controller_spec.rb"
    ],
    "message": "Remove Mass Assignment of Role IDs",
    "before_after_code_files": [
      "app/controllers/spree/admin/users_controller.rb||app/controllers/spree/admin/users_controller.rb",
      "app/models/spree/user.rb||app/models/spree/user.rb",
      "spec/controllers/spree/users_controller_spec.rb||spec/controllers/spree/users_controller_spec.rb"
    ]
  },
  "patch_diff": {
    "app/controllers/spree/admin/users_controller.rb||app/controllers/spree/admin/users_controller.rb": [
      "File: app/controllers/spree/admin/users_controller.rb -> app/controllers/spree/admin/users_controller.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "16:         end",
      "17:       end",
      "19:       def generate_api_key",
      "20:         if @user.generate_spree_api_key!",
      "21:           flash.notice = t('key_generated', :scope => 'spree.api')",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17:       end",
      "19:       def create",
      "20:         if params[:user]",
      "21:           roles = params[:user].delete(\"spree_role_ids\")",
      "22:         end",
      "24:         @user = Spree::User.new(params[:user])",
      "25:         if @user.save",
      "27:           if roles",
      "28:             @user.spree_roles = roles.reject(&:blank?).collect{|r| Spree::Role.find(r)}",
      "29:           end",
      "31:           flash.now[:notice] = t(:created_successfully)",
      "32:           render :edit",
      "33:         else",
      "34:           render :new",
      "35:         end",
      "36:       end",
      "38:       def update",
      "39:         if params[:user]",
      "40:           roles = params[:user].delete(\"spree_role_ids\")",
      "41:         end",
      "43:         if @user.update_attributes(params[:user])",
      "44:           if roles",
      "45:             @user.spree_roles = roles.reject(&:blank?).collect{|r| Spree::Role.find(r)}",
      "46:           end",
      "48:           if params[:user][:password].present?",
      "49:             # this logic needed b/c devise wants to log us out after password changes",
      "50:             user = Spree::User.reset_password_by_token(params[:user])",
      "51:             sign_in(@user, :event => :authentication, :bypass => !Spree::Auth::Config[:signout_after_password_change])",
      "52:           end",
      "53:           flash.now[:notice] = t(:account_updated)",
      "54:           render :edit",
      "55:         else",
      "56:           render :edit",
      "57:         end",
      "",
      "---------------"
    ],
    "app/models/spree/user.rb||app/models/spree/user.rb": [
      "File: app/models/spree/user.rb -> app/models/spree/user.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "14:     before_destroy :check_completed_orders",
      "16:     # Setup accessible (or protected) attributes for your model",
      "19:     users_table_name = User.table_name",
      "20:     roles_table_name = Role.table_name",
      "",
      "[Removed Lines]",
      "17:     attr_accessible :email, :password, :password_confirmation, :remember_me, :persistence_token, :login, :spree_role_ids",
      "",
      "[Added Lines]",
      "17:     attr_accessible :email, :password, :password_confirmation, :remember_me, :persistence_token, :login",
      "",
      "---------------"
    ],
    "spec/controllers/spree/users_controller_spec.rb||spec/controllers/spree/users_controller_spec.rb": [
      "File: spec/controllers/spree/users_controller_spec.rb -> spec/controllers/spree/users_controller_spec.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: describe Spree::UsersController do",
      "4:   let(:admin_user) { create(:user) }",
      "5:   let(:user) { create(:user) }",
      "7:   before do",
      "8:     controller.stub(:spree_current_user => user)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6:   let(:role) { create(:role) }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "23:         response.should redirect_to(spree.account_url(:only_path => true))",
      "24:       end",
      "25:     end",
      "26:   end",
      "27: end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28:     it 'should not update roles' do",
      "29:       expect { spree_put :update, { :user => { :spree_role_ids => [role.id] } }}.to raise_exception(ActiveModel::MassAssignmentSecurity::Error)",
      "30:     end",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c4106e080d4afafe0bb46625f45669ac38466ad8",
      "candidate_info": {
        "commit_hash": "c4106e080d4afafe0bb46625f45669ac38466ad8",
        "repo": "spree/spree_auth_devise",
        "commit_url": "https://github.com/spree/spree_auth_devise/commit/c4106e080d4afafe0bb46625f45669ac38466ad8",
        "files": [
          "app/controllers/spree/admin/users_controller.rb",
          "app/models/spree/user.rb",
          "spec/controllers/spree/users_controller_spec.rb"
        ],
        "message": "Remove Mass Assignment of Role IDs",
        "before_after_code_files": [
          "app/controllers/spree/admin/users_controller.rb||app/controllers/spree/admin/users_controller.rb",
          "app/models/spree/user.rb||app/models/spree/user.rb",
          "spec/controllers/spree/users_controller_spec.rb||spec/controllers/spree/users_controller_spec.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "app/controllers/spree/admin/users_controller.rb||app/controllers/spree/admin/users_controller.rb",
            "app/models/spree/user.rb||app/models/spree/user.rb",
            "spec/controllers/spree/users_controller_spec.rb||spec/controllers/spree/users_controller_spec.rb"
          ],
          "candidate": [
            "app/controllers/spree/admin/users_controller.rb||app/controllers/spree/admin/users_controller.rb",
            "app/models/spree/user.rb||app/models/spree/user.rb",
            "spec/controllers/spree/users_controller_spec.rb||spec/controllers/spree/users_controller_spec.rb"
          ]
        }
      },
      "candidate_diff": {
        "app/controllers/spree/admin/users_controller.rb||app/controllers/spree/admin/users_controller.rb": [
          "File: app/controllers/spree/admin/users_controller.rb -> app/controllers/spree/admin/users_controller.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:         redirect_to edit_admin_user_path(@user)",
          "28:       end",
          "31:       protected",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:       def create",
          "31:         if params[:user]",
          "32:           roles = params[:user].delete(\"spree_role_ids\")",
          "33:         end",
          "35:         @user = Spree::User.new(params[:user])",
          "36:         if @user.save",
          "38:           if roles",
          "39:             @user.spree_roles = roles.reject(&:blank?).collect{|r| Spree::Role.find(r)}",
          "40:           end",
          "42:           flash.now[:notice] = t(:created_successfully)",
          "43:           render :edit",
          "44:         else",
          "45:           render :new",
          "46:         end",
          "47:       end",
          "49:       def update",
          "50:         if params[:user]",
          "51:           roles = params[:user].delete(\"spree_role_ids\")",
          "52:         end",
          "54:         if @user.update_attributes(params[:user])",
          "55:           if roles",
          "56:             @user.spree_roles = roles.reject(&:blank?).collect{|r| Spree::Role.find(r)}",
          "57:           end",
          "59:           if params[:user][:password].present?",
          "60:             # this logic needed b/c devise wants to log us out after password changes",
          "61:             user = Spree::User.reset_password_by_token(params[:user])",
          "62:             sign_in(@user, :event => :authentication, :bypass => !Spree::Auth::Config[:signout_after_password_change])",
          "63:           end",
          "64:           flash.now[:notice] = t(:account_updated)",
          "65:           render :edit",
          "66:         else",
          "67:           render :edit",
          "68:         end",
          "69:       end",
          "",
          "---------------"
        ],
        "app/models/spree/user.rb||app/models/spree/user.rb": [
          "File: app/models/spree/user.rb -> app/models/spree/user.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:     before_destroy :check_completed_orders",
          "16:     # Setup accessible (or protected) attributes for your model",
          "19:     users_table_name = User.table_name",
          "20:     roles_table_name = Role.table_name",
          "",
          "[Removed Lines]",
          "17:     attr_accessible :email, :password, :password_confirmation, :remember_me, :persistence_token, :login, :spree_role_ids",
          "",
          "[Added Lines]",
          "17:     attr_accessible :email, :password, :password_confirmation, :remember_me, :persistence_token, :login",
          "",
          "---------------"
        ],
        "spec/controllers/spree/users_controller_spec.rb||spec/controllers/spree/users_controller_spec.rb": [
          "File: spec/controllers/spree/users_controller_spec.rb -> spec/controllers/spree/users_controller_spec.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: describe Spree::UsersController do",
          "4:   let(:admin_user) { create(:user) }",
          "5:   let(:user) { create(:user) }",
          "7:   before do",
          "8:     controller.stub(:spree_current_user => user)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:   let(:role) { create(:role) }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22:         assigns[:user].email.should == 'mynew@email-address.com'",
          "23:         response.should redirect_to(spree.account_url(:only_path => true))",
          "24:       end",
          "25:     end",
          "26:   end",
          "27: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:       it 'should not update roles' do",
          "28:         expect {spree_put :update, { :user => { :spree_role_ids => [role.id] } }}.to raise_exception(ActiveModel::MassAssignmentSecurity::Error)",
          "29:       end",
          "",
          "---------------"
        ]
      }
    }
  ]
}