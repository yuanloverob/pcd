{
  "cve_id": "CVE-2022-23598",
  "cve_desc": "laminas-form is a package for validating and displaying simple and complex forms. When rendering validation error messages via the `formElementErrors()` view helper shipped with laminas-form, many messages will contain the submitted value. However, in laminas-form prior to version 3.1.1, the value was not being escaped for HTML contexts, which could potentially lead to a reflected cross-site scripting attack. Versions 3.1.1 and above contain a patch to mitigate the vulnerability. A workaround is available. One may manually place code at the top of a view script where one calls the `formElementErrors()` view helper. More information about this workaround is available on the GitHub Security Advisory.",
  "repo": "laminas/laminas-form",
  "patch_hash": "43005a3ec4c2292d4f825273768d9b884acbca37",
  "patch_info": {
    "commit_hash": "43005a3ec4c2292d4f825273768d9b884acbca37",
    "repo": "laminas/laminas-form",
    "commit_url": "https://github.com/laminas/laminas-form/commit/43005a3ec4c2292d4f825273768d9b884acbca37",
    "files": [
      "composer.json",
      "src/View/Helper/FormElementErrors.php",
      "test/View/Helper/FormElementErrorsTest.php"
    ],
    "message": "Merge pull request from GHSA-jq4p-mq33-w375\n\nHtml escape validation error messages",
    "before_after_code_files": [
      "src/View/Helper/FormElementErrors.php||src/View/Helper/FormElementErrors.php",
      "test/View/Helper/FormElementErrorsTest.php||test/View/Helper/FormElementErrorsTest.php"
    ]
  },
  "patch_diff": {
    "src/View/Helper/FormElementErrors.php||src/View/Helper/FormElementErrors.php": [
      "File: src/View/Helper/FormElementErrors.php -> src/View/Helper/FormElementErrors.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: use function array_merge;",
      "11: use function array_walk_recursive;",
      "12: use function implode;",
      "13: use function sprintf;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12: use function count;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77:             $attributes = ' ' . $attributes;",
      "78:         }",
      "81:         $markup  = sprintf($this->getMessageOpenFormat(), $attributes);",
      "82:         $markup .= implode($this->getMessageSeparatorString(), $messages);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "81:         $count   = count($messages);",
      "82:         $escaper = $this->getEscapeHtmlHelper();",
      "83:         for ($i = 0; $i < $count; $i += 1) {",
      "84:             $messages[$i] = $escaper($messages[$i]);",
      "85:         }",
      "",
      "---------------"
    ],
    "test/View/Helper/FormElementErrorsTest.php||test/View/Helper/FormElementErrorsTest.php": [
      "File: test/View/Helper/FormElementErrorsTest.php -> test/View/Helper/FormElementErrorsTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "222:         $helper = $this->helper;",
      "223:         $this->assertEquals($helper(), $helper);",
      "224:     }",
      "225: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "226:     public function testHtmlEscapingOfMessages(): void",
      "227:     {",
      "228:         $messages = [",
      "229:             [",
      "230:                 '<span>First validator message</span>',",
      "231:                 '<span>Second validator first message</span>',",
      "232:                 '<span>Second validator second message</span>',",
      "233:             ],",
      "234:         ];",
      "235:         $element  = new Element('foo');",
      "236:         $element->setMessages($messages);",
      "238:         $markup = $this->helper->render($element);",
      "240:         $this->assertStringNotContainsString('<span>', $markup);",
      "241:         $this->assertStringNotContainsString('</span>', $markup);",
      "242:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d9131a2311a0bae92f8a1242c1c97326d2447251",
      "candidate_info": {
        "commit_hash": "d9131a2311a0bae92f8a1242c1c97326d2447251",
        "repo": "laminas/laminas-form",
        "commit_url": "https://github.com/laminas/laminas-form/commit/d9131a2311a0bae92f8a1242c1c97326d2447251",
        "files": [
          "test/View/Helper/FormElementErrorsTest.php"
        ],
        "message": "qa: no need to ignore CS around assertions\n\nOther methods do, but only because the lines are long.\n\nSigned-off-by: Matthew Weier O'Phinney <matthew@weierophinney.net>",
        "before_after_code_files": [
          "test/View/Helper/FormElementErrorsTest.php||test/View/Helper/FormElementErrorsTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/laminas/laminas-form/pull/161"
        ],
        "olp_code_files": {
          "patch": [
            "test/View/Helper/FormElementErrorsTest.php||test/View/Helper/FormElementErrorsTest.php"
          ],
          "candidate": [
            "test/View/Helper/FormElementErrorsTest.php||test/View/Helper/FormElementErrorsTest.php"
          ]
        }
      },
      "candidate_diff": {
        "test/View/Helper/FormElementErrorsTest.php||test/View/Helper/FormElementErrorsTest.php": [
          "File: test/View/Helper/FormElementErrorsTest.php -> test/View/Helper/FormElementErrorsTest.php"
        ]
      }
    },
    {
      "candidate_hash": "e0287613ff794973c56cecde4d033e84597a77f2",
      "candidate_info": {
        "commit_hash": "e0287613ff794973c56cecde4d033e84597a77f2",
        "repo": "laminas/laminas-form",
        "commit_url": "https://github.com/laminas/laminas-form/commit/e0287613ff794973c56cecde4d033e84597a77f2",
        "files": [
          "src/View/Helper/FormElementErrors.php"
        ],
        "message": "qa: optimize loop operation when escaping messages\n\n- memoize count\n- memoize escaper\n\nSigned-off-by: Matthew Weier O'Phinney <matthew@weierophinney.net>",
        "before_after_code_files": [
          "src/View/Helper/FormElementErrors.php||src/View/Helper/FormElementErrors.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/laminas/laminas-form/pull/161"
        ],
        "olp_code_files": {
          "patch": [
            "src/View/Helper/FormElementErrors.php||src/View/Helper/FormElementErrors.php"
          ],
          "candidate": [
            "src/View/Helper/FormElementErrors.php||src/View/Helper/FormElementErrors.php"
          ]
        }
      },
      "candidate_diff": {
        "src/View/Helper/FormElementErrors.php||src/View/Helper/FormElementErrors.php": [
          "File: src/View/Helper/FormElementErrors.php -> src/View/Helper/FormElementErrors.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "78:             $attributes = ' ' . $attributes;",
          "79:         }",
          "83:         }",
          "",
          "[Removed Lines]",
          "81:         for ($i = 0; $i < count($messages); $i++) {",
          "82:             $messages[$i] = $this->getEscapeHtmlHelper()($messages[$i]);",
          "",
          "[Added Lines]",
          "81:         $count   = count($messages);",
          "82:         $escaper = $this->getEscapeHtmlHelper();",
          "83:         for ($i = 0; $i < $count; $i += 1) {",
          "84:             $messages[$i] = $escaper($messages[$i]);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "84962153f13b8231afe1db96a2ab73eb9914e1a3",
      "candidate_info": {
        "commit_hash": "84962153f13b8231afe1db96a2ab73eb9914e1a3",
        "repo": "laminas/laminas-form",
        "commit_url": "https://github.com/laminas/laminas-form/commit/84962153f13b8231afe1db96a2ab73eb9914e1a3",
        "files": [
          "composer.json",
          "src/View/Helper/FormElementErrors.php",
          "test/View/Helper/FormElementErrorsTest.php"
        ],
        "message": "Backport GHSA-jq4p-mq33-w375 to v2\n\nSigned-off-by: Filippo Tessarotto <zoeslam@gmail.com>",
        "before_after_code_files": [
          "src/View/Helper/FormElementErrors.php||src/View/Helper/FormElementErrors.php",
          "test/View/Helper/FormElementErrorsTest.php||test/View/Helper/FormElementErrorsTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/View/Helper/FormElementErrors.php||src/View/Helper/FormElementErrors.php",
            "test/View/Helper/FormElementErrorsTest.php||test/View/Helper/FormElementErrorsTest.php"
          ],
          "candidate": [
            "src/View/Helper/FormElementErrors.php||src/View/Helper/FormElementErrors.php",
            "test/View/Helper/FormElementErrorsTest.php||test/View/Helper/FormElementErrorsTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/View/Helper/FormElementErrors.php||src/View/Helper/FormElementErrors.php": [
          "File: src/View/Helper/FormElementErrors.php -> src/View/Helper/FormElementErrors.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: use function array_merge;",
          "10: use function array_walk_recursive;",
          "11: use function get_class;",
          "12: use function gettype;",
          "13: use function implode;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: use function count;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:             $attributes = ' ' . $attributes;",
          "97:         }",
          "100:         $markup  = sprintf($this->getMessageOpenFormat(), $attributes);",
          "101:         $markup .= implode($this->getMessageSeparatorString(), $messages);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:         $count   = count($messages);",
          "101:         $escaper = $this->getEscapeHtmlHelper();",
          "102:         for ($i = 0; $i < $count; $i += 1) {",
          "103:             $messages[$i] = $escaper($messages[$i]);",
          "104:         }",
          "",
          "---------------"
        ],
        "test/View/Helper/FormElementErrorsTest.php||test/View/Helper/FormElementErrorsTest.php": [
          "File: test/View/Helper/FormElementErrorsTest.php -> test/View/Helper/FormElementErrorsTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "219:         $helper = $this->helper;",
          "220:         $this->assertEquals($helper(), $helper);",
          "221:     }",
          "222: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "223:     public function testHtmlEscapingOfMessages(): void",
          "224:     {",
          "225:         $messages = [",
          "226:             [",
          "227:                 '<span>First validator message</span>',",
          "228:                 '<span>Second validator first message</span>',",
          "229:                 '<span>Second validator second message</span>',",
          "230:             ],",
          "231:         ];",
          "232:         $element  = new Element('foo');",
          "233:         $element->setMessages($messages);",
          "235:         $markup = $this->helper->render($element);",
          "237:         $this->assertStringNotContainsString('<span>', $markup);",
          "238:         $this->assertStringNotContainsString('</span>', $markup);",
          "239:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "72261b20fc36bf4cd695c872760245c21156fc7d",
      "candidate_info": {
        "commit_hash": "72261b20fc36bf4cd695c872760245c21156fc7d",
        "repo": "laminas/laminas-form",
        "commit_url": "https://github.com/laminas/laminas-form/commit/72261b20fc36bf4cd695c872760245c21156fc7d",
        "files": [
          "composer.json",
          "src/View/Helper/FormElementErrors.php",
          "test/View/Helper/FormElementErrorsTest.php"
        ],
        "message": "Backport GHSA-jq4p-mq33-w375 to v3.0\n\nSigned-off-by: Filippo Tessarotto <zoeslam@gmail.com>",
        "before_after_code_files": [
          "src/View/Helper/FormElementErrors.php||src/View/Helper/FormElementErrors.php",
          "test/View/Helper/FormElementErrorsTest.php||test/View/Helper/FormElementErrorsTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/View/Helper/FormElementErrors.php||src/View/Helper/FormElementErrors.php",
            "test/View/Helper/FormElementErrorsTest.php||test/View/Helper/FormElementErrorsTest.php"
          ],
          "candidate": [
            "src/View/Helper/FormElementErrors.php||src/View/Helper/FormElementErrors.php",
            "test/View/Helper/FormElementErrorsTest.php||test/View/Helper/FormElementErrorsTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/View/Helper/FormElementErrors.php||src/View/Helper/FormElementErrors.php": [
          "File: src/View/Helper/FormElementErrors.php -> src/View/Helper/FormElementErrors.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: use function array_merge;",
          "11: use function array_walk_recursive;",
          "12: use function implode;",
          "13: use function sprintf;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: use function count;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:             $attributes = ' ' . $attributes;",
          "78:         }",
          "81:         $markup  = sprintf($this->getMessageOpenFormat(), $attributes);",
          "82:         $markup .= implode($this->getMessageSeparatorString(), $messages);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:         $count   = count($messages);",
          "82:         $escaper = $this->getEscapeHtmlHelper();",
          "83:         for ($i = 0; $i < $count; $i += 1) {",
          "84:             $messages[$i] = $escaper($messages[$i]);",
          "85:         }",
          "",
          "---------------"
        ],
        "test/View/Helper/FormElementErrorsTest.php||test/View/Helper/FormElementErrorsTest.php": [
          "File: test/View/Helper/FormElementErrorsTest.php -> test/View/Helper/FormElementErrorsTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "222:         $helper = $this->helper;",
          "223:         $this->assertEquals($helper(), $helper);",
          "224:     }",
          "225: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "226:     public function testHtmlEscapingOfMessages(): void",
          "227:     {",
          "228:         $messages = [",
          "229:             [",
          "230:                 '<span>First validator message</span>',",
          "231:                 '<span>Second validator first message</span>',",
          "232:                 '<span>Second validator second message</span>',",
          "233:             ],",
          "234:         ];",
          "235:         $element  = new Element('foo');",
          "236:         $element->setMessages($messages);",
          "238:         $markup = $this->helper->render($element);",
          "240:         $this->assertStringNotContainsString('<span>', $markup);",
          "241:         $this->assertStringNotContainsString('</span>', $markup);",
          "242:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}