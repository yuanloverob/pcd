{
  "cve_id": "CVE-2023-37271",
  "cve_desc": "RestrictedPython is a tool that helps to define a subset of the Python language which allows users to provide a program input into a trusted environment. RestrictedPython does not check access to stack frames and their attributes. Stack frames are accessible within at least generators and generator expressions, which are allowed inside RestrictedPython. Prior to versions 6.1 and 5.3, an attacker with access to a RestrictedPython environment can write code that gets the current stack frame in a generator and then walk the stack all the way beyond the RestrictedPython invocation boundary, thus breaking out of the restricted sandbox and potentially allowing arbitrary code execution in the Python interpreter. All RestrictedPython deployments that allow untrusted users to write Python code in the RestrictedPython environment are at risk. In terms of Zope and Plone, this would mean deployments where the administrator allows untrusted users to create and/or edit objects of type `Script (Python)`, `DTML Method`, `DTML Document` or `Zope Page Template`. This is a non-default configuration and likely to be extremely rare. The problem has been fixed in versions 6.1 and 5.3.",
  "repo": "zopefoundation/RestrictedPython",
  "patch_hash": "c8eca66ae49081f0016d2e1f094c3d72095ef531",
  "patch_info": {
    "commit_hash": "c8eca66ae49081f0016d2e1f094c3d72095ef531",
    "repo": "zopefoundation/RestrictedPython",
    "commit_url": "https://github.com/zopefoundation/RestrictedPython/commit/c8eca66ae49081f0016d2e1f094c3d72095ef531",
    "files": [
      "CHANGES.rst",
      "docs/contributing/index.rst",
      "src/RestrictedPython/transformer.py",
      "tests/transformer/test_inspect.py"
    ],
    "message": "Merge pull request from GHSA-wqc8-x2pr-7jqh\n\n* move the commented fix into this branch\n\n* more verbose infos, and linting\n\n* 3 tests for generators\n\n* - add change log entry\n\n---------\n\nCo-authored-by: Jens Vagelpohl <jens@plyp.com>",
    "before_after_code_files": [
      "src/RestrictedPython/transformer.py||src/RestrictedPython/transformer.py",
      "tests/transformer/test_inspect.py||tests/transformer/test_inspect.py"
    ]
  },
  "patch_diff": {
    "src/RestrictedPython/transformer.py||src/RestrictedPython/transformer.py": [
      "File: src/RestrictedPython/transformer.py -> src/RestrictedPython/transformer.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "63:     'breakpoint',",
      "64: ])",
      "67: # When new ast nodes are generated they have no 'lineno', 'end_lineno',",
      "68: # 'col_offset' and 'end_col_offset'. This function copies these fields from the",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "66: # inspect attributes. See also",
      "67: # https://docs.python.org/3/library/inspect.html",
      "68: INSPECT_ATTRIBUTES = frozenset([",
      "69:     # traceback",
      "70:     \"tb_frame\",",
      "71:     \"tb_next\",",
      "72:     # code",
      "73:     \"co_code\",",
      "74:     # frame",
      "75:     \"f_back\",",
      "76:     \"f_builtins\",",
      "77:     \"f_code\",",
      "78:     \"f_globals\",",
      "79:     \"f_locals\",",
      "80:     \"f_trace\",",
      "81:     # generator",
      "82:     \"gi_frame\",",
      "83:     \"gi_code\",",
      "84:     \"gi_yieldfrom\",",
      "85:     # coroutine",
      "86:     \"cr_await\",",
      "87:     \"cr_frame\",",
      "88:     \"cr_code\",",
      "89:     \"cr_origin\",",
      "90: ])",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "844:                 '\"{name}\" is an invalid attribute name because it ends '",
      "845:                 'with \"__roles__\".'.format(name=node.attr))",
      "847:         if isinstance(node.ctx, ast.Load):",
      "848:             node = self.node_contents_visit(node)",
      "849:             new_node = ast.Call(",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "873:         if node.attr in INSPECT_ATTRIBUTES:",
      "874:             self.error(",
      "875:                 node,",
      "876:                 f'\"{node.attr}\" is a restricted name,'",
      "877:                 ' that is forbidden to access in RestrictedPython.',",
      "878:             )",
      "",
      "---------------"
    ],
    "tests/transformer/test_inspect.py||tests/transformer/test_inspect.py": [
      "File: tests/transformer/test_inspect.py -> tests/transformer/test_inspect.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: from RestrictedPython import compile_restricted_exec",
      "4: def test_get_inspect_frame_on_generator():",
      "5:     source_code = \"\"\"",
      "6: generator = (statement.gi_frame for _ in (1,))",
      "7: generator_element = [elem for elem in generator][0]",
      "9: \"\"\"",
      "10:     result = compile_restricted_exec(source_code)",
      "11:     assert result.errors == (",
      "12:         'Line 2: \"gi_frame\" is a restricted name, '",
      "13:         'that is forbidden to access in RestrictedPython.',",
      "14:     )",
      "17: def test_get_inspect_frame_back_on_generator():",
      "18:     source_code = \"\"\"",
      "19: generator = (statement.gi_frame.f_back.f_back for _ in (1,))",
      "20: generator_element = [elem for elem in generator][0]",
      "22: \"\"\"",
      "23:     result = compile_restricted_exec(source_code)",
      "24:     assert result.errors == (",
      "25:         'Line 2: \"f_back\" is a restricted name, '",
      "26:         'that is forbidden to access in RestrictedPython.',",
      "27:         'Line 2: \"f_back\" is a restricted name, '",
      "28:         'that is forbidden to access in RestrictedPython.',",
      "29:         'Line 2: \"gi_frame\" is a restricted name, '",
      "30:         'that is forbidden to access in RestrictedPython.',",
      "31:     )",
      "34: def test_call_inspect_frame_on_generator():",
      "35:     source_code = \"\"\"",
      "36: generator = None",
      "37: frame = None",
      "39: def test():",
      "40:     global generator, frame",
      "41:     frame = g.gi_frame.f_back.f_back",
      "42:     yield frame",
      "44: generator = test()",
      "45: generator.send(None)",
      "46: os = frame.f_builtins.get('__import__')('os')",
      "48: result = os.listdir('/')",
      "49: \"\"\"",
      "50:     result = compile_restricted_exec(source_code)",
      "51:     assert result.errors == (",
      "52:         'Line 7: \"f_back\" is a restricted name, '",
      "53:         'that is forbidden to access in RestrictedPython.',",
      "54:         'Line 7: \"f_back\" is a restricted name, '",
      "55:         'that is forbidden to access in RestrictedPython.',",
      "56:         'Line 7: \"gi_frame\" is a restricted name, '",
      "57:         'that is forbidden to access in RestrictedPython.',",
      "58:         'Line 12: \"f_builtins\" is a restricted name, '",
      "59:         'that is forbidden to access in RestrictedPython.',",
      "60:     )",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5aca797389988df996cc0c878a62ca2424de4ba1",
      "candidate_info": {
        "commit_hash": "5aca797389988df996cc0c878a62ca2424de4ba1",
        "repo": "zopefoundation/RestrictedPython",
        "commit_url": "https://github.com/zopefoundation/RestrictedPython/commit/5aca797389988df996cc0c878a62ca2424de4ba1",
        "files": [
          "CHANGES.rst",
          "src/RestrictedPython/transformer.py"
        ],
        "message": "Improve the inspect PR. (#256)\n\nAs the PR is already merged here a PR to improve it a bit further.",
        "before_after_code_files": [
          "src/RestrictedPython/transformer.py||src/RestrictedPython/transformer.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/RestrictedPython/transformer.py||src/RestrictedPython/transformer.py"
          ],
          "candidate": [
            "src/RestrictedPython/transformer.py||src/RestrictedPython/transformer.py"
          ]
        }
      },
      "candidate_diff": {
        "src/RestrictedPython/transformer.py||src/RestrictedPython/transformer.py": [
          "File: src/RestrictedPython/transformer.py -> src/RestrictedPython/transformer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:     'breakpoint',",
          "64: ])",
          "68: INSPECT_ATTRIBUTES = frozenset([",
          "70:     \"tb_frame\",",
          "71:     \"tb_next\",",
          "75:     \"f_back\",",
          "76:     \"f_builtins\",",
          "77:     \"f_code\",",
          "78:     \"f_globals\",",
          "79:     \"f_locals\",",
          "80:     \"f_trace\",",
          "82:     \"gi_frame\",",
          "83:     \"gi_code\",",
          "84:     \"gi_yieldfrom\",",
          "86:     \"cr_await\",",
          "87:     \"cr_frame\",",
          "88:     \"cr_code\",",
          "89:     \"cr_origin\",",
          "90: ])",
          "",
          "[Removed Lines]",
          "66: # inspect attributes. See also",
          "67: # https://docs.python.org/3/library/inspect.html",
          "69:     # traceback",
          "72:     # code",
          "73:     \"co_code\",",
          "74:     # frame",
          "81:     # generator",
          "85:     # coroutine",
          "",
          "[Added Lines]",
          "66: # Attributes documented in the `inspect` module, but defined on the listed",
          "67: # objects. See also https://docs.python.org/3/library/inspect.html",
          "69:     # on traceback objects:",
          "71:     # \"tb_lasti\",  # int",
          "72:     # \"tb_lineno\",  # int",
          "74:     # on frame objects:",
          "79:     # \"f_lasti\",  # int",
          "80:     # \"f_lineno\",  # int",
          "83:     # on code objects:",
          "84:     # \"co_argcount\",  # int",
          "85:     \"co_code\",",
          "86:     # \"co_cellvars\",  # tuple of str",
          "87:     # \"co_consts\",   # tuple of str",
          "88:     # \"co_filename\",  # str",
          "89:     # \"co_firstlineno\",  # int",
          "90:     # \"co_flags\",  # int",
          "91:     # \"co_lnotab\",  # mapping between ints and indices",
          "92:     # \"co_freevars\",  # tuple of strings",
          "93:     # \"co_posonlyargcount\",  # int",
          "94:     # \"co_kwonlyargcount\",  # int",
          "95:     # \"co_name\",  # str",
          "96:     # \"co_qualname\",  # str",
          "97:     # \"co_names\",  # str",
          "98:     # \"co_nlocals\",  # int",
          "99:     # \"co_stacksize\",  # int",
          "100:     # \"co_varnames\",  # tuple of str",
          "101:     # on generator objects:",
          "103:     # \"gi_running\",  # bool",
          "106:     # on coroutine objects:",
          "109:     # \"cr_running\",  # bool",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d8c5aa72c5d0ec8eceab635d93d6bc8321116002",
      "candidate_info": {
        "commit_hash": "d8c5aa72c5d0ec8eceab635d93d6bc8321116002",
        "repo": "zopefoundation/RestrictedPython",
        "commit_url": "https://github.com/zopefoundation/RestrictedPython/commit/d8c5aa72c5d0ec8eceab635d93d6bc8321116002",
        "files": [
          "CHANGES.rst",
          "src/RestrictedPython/transformer.py",
          "tests/transformer/test_inspect.py"
        ],
        "message": "Merge pull request from GHSA-wqc8-x2pr-7jqh\n\n* move the commented fix into this branch\n\n* more verbose infos, and linting\n\n* 3 tests for generators\n\n* - add change log entry\n\n---------\n\nCo-authored-by: Jens Vagelpohl <jens@plyp.com>",
        "before_after_code_files": [
          "src/RestrictedPython/transformer.py||src/RestrictedPython/transformer.py",
          "tests/transformer/test_inspect.py||tests/transformer/test_inspect.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/RestrictedPython/transformer.py||src/RestrictedPython/transformer.py",
            "tests/transformer/test_inspect.py||tests/transformer/test_inspect.py"
          ],
          "candidate": [
            "src/RestrictedPython/transformer.py||src/RestrictedPython/transformer.py",
            "tests/transformer/test_inspect.py||tests/transformer/test_inspect.py"
          ]
        }
      },
      "candidate_diff": {
        "src/RestrictedPython/transformer.py||src/RestrictedPython/transformer.py": [
          "File: src/RestrictedPython/transformer.py -> src/RestrictedPython/transformer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:     'breakpoint',",
          "78: ])",
          "81: # When new ast nodes are generated they have no 'lineno' and 'col_offset'.",
          "82: # This function copies these two fields from the incoming node",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80: # inspect attributes. See also",
          "81: # https://docs.python.org/3/library/inspect.html",
          "82: INSPECT_ATTRIBUTES = frozenset([",
          "83:     # traceback",
          "84:     \"tb_frame\",",
          "85:     \"tb_next\",",
          "86:     # code",
          "87:     \"co_code\",",
          "88:     # frame",
          "89:     \"f_back\",",
          "90:     \"f_builtins\",",
          "91:     \"f_code\",",
          "92:     \"f_globals\",",
          "93:     \"f_locals\",",
          "94:     \"f_trace\",",
          "95:     # generator",
          "96:     \"gi_frame\",",
          "97:     \"gi_code\",",
          "98:     \"gi_yieldfrom\",",
          "99:     # coroutine",
          "100:     \"cr_await\",",
          "101:     \"cr_frame\",",
          "102:     \"cr_code\",",
          "103:     \"cr_origin\",",
          "104: ])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "923:                 '\"{name}\" is an invalid attribute name because it ends '",
          "924:                 'with \"__roles__\".'.format(name=node.attr))",
          "926:         if isinstance(node.ctx, ast.Load):",
          "927:             node = self.node_contents_visit(node)",
          "928:             new_node = ast.Call(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "952:         if node.attr in INSPECT_ATTRIBUTES:",
          "953:             self.error(",
          "954:                 node,",
          "955:                 f'\"{node.attr}\" is a restricted name,'",
          "956:                 ' that is forbidden to access in RestrictedPython.',",
          "957:             )",
          "",
          "---------------"
        ],
        "tests/transformer/test_inspect.py||tests/transformer/test_inspect.py": [
          "File: tests/transformer/test_inspect.py -> tests/transformer/test_inspect.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from RestrictedPython import compile_restricted_exec",
          "4: def test_get_inspect_frame_on_generator():",
          "5:     source_code = \"\"\"",
          "6: generator = (statement.gi_frame for _ in (1,))",
          "7: generator_element = [elem for elem in generator][0]",
          "9: \"\"\"",
          "10:     result = compile_restricted_exec(source_code)",
          "11:     assert result.errors == (",
          "12:         'Line 2: \"gi_frame\" is a restricted name, '",
          "13:         'that is forbidden to access in RestrictedPython.',",
          "14:     )",
          "17: def test_get_inspect_frame_back_on_generator():",
          "18:     source_code = \"\"\"",
          "19: generator = (statement.gi_frame.f_back.f_back for _ in (1,))",
          "20: generator_element = [elem for elem in generator][0]",
          "22: \"\"\"",
          "23:     result = compile_restricted_exec(source_code)",
          "24:     assert result.errors == (",
          "25:         'Line 2: \"f_back\" is a restricted name, '",
          "26:         'that is forbidden to access in RestrictedPython.',",
          "27:         'Line 2: \"f_back\" is a restricted name, '",
          "28:         'that is forbidden to access in RestrictedPython.',",
          "29:         'Line 2: \"gi_frame\" is a restricted name, '",
          "30:         'that is forbidden to access in RestrictedPython.',",
          "31:     )",
          "34: def test_call_inspect_frame_on_generator():",
          "35:     source_code = \"\"\"",
          "36: generator = None",
          "37: frame = None",
          "39: def test():",
          "40:     global generator, frame",
          "41:     frame = g.gi_frame.f_back.f_back",
          "42:     yield frame",
          "44: generator = test()",
          "45: generator.send(None)",
          "46: os = frame.f_builtins.get('__import__')('os')",
          "48: result = os.listdir('/')",
          "49: \"\"\"",
          "50:     result = compile_restricted_exec(source_code)",
          "51:     assert result.errors == (",
          "52:         'Line 7: \"f_back\" is a restricted name, '",
          "53:         'that is forbidden to access in RestrictedPython.',",
          "54:         'Line 7: \"f_back\" is a restricted name, '",
          "55:         'that is forbidden to access in RestrictedPython.',",
          "56:         'Line 7: \"gi_frame\" is a restricted name, '",
          "57:         'that is forbidden to access in RestrictedPython.',",
          "58:         'Line 12: \"f_builtins\" is a restricted name, '",
          "59:         'that is forbidden to access in RestrictedPython.',",
          "60:     )",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bf956a4bdd5fd1a8a4ca5fceee561cea50b05645",
      "candidate_info": {
        "commit_hash": "bf956a4bdd5fd1a8a4ca5fceee561cea50b05645",
        "repo": "zopefoundation/RestrictedPython",
        "commit_url": "https://github.com/zopefoundation/RestrictedPython/commit/bf956a4bdd5fd1a8a4ca5fceee561cea50b05645",
        "files": [
          "CHANGES.rst",
          "docs/contributing/index.rst",
          "src/RestrictedPython/transformer.py",
          "tests/transformer/test_inspect.py"
        ],
        "message": "Merge pull request from GHSA-wqc8-x2pr-7jqh\n\n* move the commented fix into this branch\n\n* more verbose infos, and linting\n\n* 3 tests for generators\n\n* - add change log entry\n\n---------\n\nCo-authored-by: Jens Vagelpohl <jens@plyp.com>",
        "before_after_code_files": [
          "src/RestrictedPython/transformer.py||src/RestrictedPython/transformer.py",
          "tests/transformer/test_inspect.py||tests/transformer/test_inspect.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/RestrictedPython/transformer.py||src/RestrictedPython/transformer.py",
            "tests/transformer/test_inspect.py||tests/transformer/test_inspect.py"
          ],
          "candidate": [
            "src/RestrictedPython/transformer.py||src/RestrictedPython/transformer.py",
            "tests/transformer/test_inspect.py||tests/transformer/test_inspect.py"
          ]
        }
      },
      "candidate_diff": {
        "src/RestrictedPython/transformer.py||src/RestrictedPython/transformer.py": [
          "File: src/RestrictedPython/transformer.py -> src/RestrictedPython/transformer.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:     'breakpoint',",
          "64: ])",
          "67: # When new ast nodes are generated they have no 'lineno', 'end_lineno',",
          "68: # 'col_offset' and 'end_col_offset'. This function copies these fields from the",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66: # inspect attributes. See also",
          "67: # https://docs.python.org/3/library/inspect.html",
          "68: INSPECT_ATTRIBUTES = frozenset([",
          "69:     # traceback",
          "70:     \"tb_frame\",",
          "71:     \"tb_next\",",
          "72:     # code",
          "73:     \"co_code\",",
          "74:     # frame",
          "75:     \"f_back\",",
          "76:     \"f_builtins\",",
          "77:     \"f_code\",",
          "78:     \"f_globals\",",
          "79:     \"f_locals\",",
          "80:     \"f_trace\",",
          "81:     # generator",
          "82:     \"gi_frame\",",
          "83:     \"gi_code\",",
          "84:     \"gi_yieldfrom\",",
          "85:     # coroutine",
          "86:     \"cr_await\",",
          "87:     \"cr_frame\",",
          "88:     \"cr_code\",",
          "89:     \"cr_origin\",",
          "90: ])",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "844:                 '\"{name}\" is an invalid attribute name because it ends '",
          "845:                 'with \"__roles__\".'.format(name=node.attr))",
          "847:         if isinstance(node.ctx, ast.Load):",
          "848:             node = self.node_contents_visit(node)",
          "849:             new_node = ast.Call(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "873:         if node.attr in INSPECT_ATTRIBUTES:",
          "874:             self.error(",
          "875:                 node,",
          "876:                 f'\"{node.attr}\" is a restricted name,'",
          "877:                 ' that is forbidden to access in RestrictedPython.',",
          "878:             )",
          "",
          "---------------"
        ],
        "tests/transformer/test_inspect.py||tests/transformer/test_inspect.py": [
          "File: tests/transformer/test_inspect.py -> tests/transformer/test_inspect.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: from RestrictedPython import compile_restricted_exec",
          "4: def test_get_inspect_frame_on_generator():",
          "5:     source_code = \"\"\"",
          "6: generator = (statement.gi_frame for _ in (1,))",
          "7: generator_element = [elem for elem in generator][0]",
          "9: \"\"\"",
          "10:     result = compile_restricted_exec(source_code)",
          "11:     assert result.errors == (",
          "12:         'Line 2: \"gi_frame\" is a restricted name, '",
          "13:         'that is forbidden to access in RestrictedPython.',",
          "14:     )",
          "17: def test_get_inspect_frame_back_on_generator():",
          "18:     source_code = \"\"\"",
          "19: generator = (statement.gi_frame.f_back.f_back for _ in (1,))",
          "20: generator_element = [elem for elem in generator][0]",
          "22: \"\"\"",
          "23:     result = compile_restricted_exec(source_code)",
          "24:     assert result.errors == (",
          "25:         'Line 2: \"f_back\" is a restricted name, '",
          "26:         'that is forbidden to access in RestrictedPython.',",
          "27:         'Line 2: \"f_back\" is a restricted name, '",
          "28:         'that is forbidden to access in RestrictedPython.',",
          "29:         'Line 2: \"gi_frame\" is a restricted name, '",
          "30:         'that is forbidden to access in RestrictedPython.',",
          "31:     )",
          "34: def test_call_inspect_frame_on_generator():",
          "35:     source_code = \"\"\"",
          "36: generator = None",
          "37: frame = None",
          "39: def test():",
          "40:     global generator, frame",
          "41:     frame = g.gi_frame.f_back.f_back",
          "42:     yield frame",
          "44: generator = test()",
          "45: generator.send(None)",
          "46: os = frame.f_builtins.get('__import__')('os')",
          "48: result = os.listdir('/')",
          "49: \"\"\"",
          "50:     result = compile_restricted_exec(source_code)",
          "51:     assert result.errors == (",
          "52:         'Line 7: \"f_back\" is a restricted name, '",
          "53:         'that is forbidden to access in RestrictedPython.',",
          "54:         'Line 7: \"f_back\" is a restricted name, '",
          "55:         'that is forbidden to access in RestrictedPython.',",
          "56:         'Line 7: \"gi_frame\" is a restricted name, '",
          "57:         'that is forbidden to access in RestrictedPython.',",
          "58:         'Line 12: \"f_builtins\" is a restricted name, '",
          "59:         'that is forbidden to access in RestrictedPython.',",
          "60:     )",
          "",
          "---------------"
        ]
      }
    }
  ]
}