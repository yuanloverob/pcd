{
  "cve_id": "CVE-2023-28856",
  "cve_desc": "Redis is an open source, in-memory database that persists on disk. Authenticated users can use the `HINCRBYFLOAT` command to create an invalid hash field that will crash Redis on access in affected versions. This issue has been addressed in in versions 7.0.11, 6.2.12, and 6.0.19. Users are advised to upgrade. There are no known workarounds for this issue.",
  "repo": "redis/redis",
  "patch_hash": "bc7fe41e5857a0854d524e2a63a028e9394d2a5c",
  "patch_info": {
    "commit_hash": "bc7fe41e5857a0854d524e2a63a028e9394d2a5c",
    "repo": "redis/redis",
    "commit_url": "https://github.com/redis/redis/commit/bc7fe41e5857a0854d524e2a63a028e9394d2a5c",
    "files": [
      "src/t_hash.c",
      "tests/unit/type/hash.tcl"
    ],
    "message": "fix hincrbyfloat not to create a key if the new value is invalid (#11149)\n\nCheck the validity of the value before performing the create operation,\nprevents new data from being generated even if the request fails to execute.\n\nCo-authored-by: Oran Agra <oran@redislabs.com>\nCo-authored-by: chendianqiang <chendianqiang@meituan.com>\nCo-authored-by: Binbin <binloveplay1314@qq.com>",
    "before_after_code_files": [
      "src/t_hash.c||src/t_hash.c",
      "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl"
    ]
  },
  "patch_diff": {
    "src/t_hash.c||src/t_hash.c": [
      "File: src/t_hash.c -> src/t_hash.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "666:     unsigned int vlen;",
      "668:     if (getLongDoubleFromObjectOrReply(c,c->argv[3],&incr,NULL) != C_OK) return;",
      "669:     if ((o = hashTypeLookupWriteOrCreate(c,c->argv[1])) == NULL) return;",
      "670:     if (hashTypeGetValue(o,c->argv[2]->ptr,&vstr,&vlen,&ll) == C_OK) {",
      "671:         if (vstr) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "669:     if (isnan(incr) || isinf(incr)) {",
      "670:         addReplyError(c,\"value is NaN or Infinity\");",
      "671:         return;",
      "672:     }",
      "",
      "---------------"
    ],
    "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl": [
      "File: tests/unit/type/hash.tcl -> tests/unit/type/hash.tcl",
      "--- Hunk 1 ---",
      "[Context before]",
      "819:         set _ $k",
      "820:     } {ZIP_INT_8B 127 ZIP_INT_16B 32767 ZIP_INT_32B 2147483647 ZIP_INT_64B 9223372036854775808 ZIP_INT_IMM_MIN 0 ZIP_INT_IMM_MAX 12}",
      "822: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "822:     test {HINCRBYFLOAT does not allow NaN or Infinity} {",
      "823:         assert_error \"*value is NaN or Infinity*\" {r hincrbyfloat hfoo field +inf}",
      "824:         assert_equal 0 [r exists hfoo]",
      "825:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e030e351fd7ae8c1b0254982a4f12a4bd15ac66b",
      "candidate_info": {
        "commit_hash": "e030e351fd7ae8c1b0254982a4f12a4bd15ac66b",
        "repo": "redis/redis",
        "commit_url": "https://github.com/redis/redis/commit/e030e351fd7ae8c1b0254982a4f12a4bd15ac66b",
        "files": [
          "src/t_hash.c",
          "tests/unit/type/hash.tcl"
        ],
        "message": "fix hincrbyfloat not to create a key if the new value is invalid (#11149)\n\nCheck the validity of the value before performing the create operation,\nprevents new data from being generated even if the request fails to execute.\n\nCo-authored-by: Oran Agra <oran@redislabs.com>\nCo-authored-by: chendianqiang <chendianqiang@meituan.com>\nCo-authored-by: Binbin <binloveplay1314@qq.com>\n(cherry picked from commit bc7fe41e5857a0854d524e2a63a028e9394d2a5c)\n(cherry picked from commit 606a385935363ea46c0df4f40f8a949d85f7a20a)",
        "before_after_code_files": [
          "src/t_hash.c||src/t_hash.c",
          "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/t_hash.c||src/t_hash.c",
            "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl"
          ],
          "candidate": [
            "src/t_hash.c||src/t_hash.c",
            "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl"
          ]
        }
      },
      "candidate_diff": {
        "src/t_hash.c||src/t_hash.c": [
          "File: src/t_hash.c -> src/t_hash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "729:     unsigned int vlen;",
          "731:     if (getLongDoubleFromObjectOrReply(c,c->argv[3],&incr,NULL) != C_OK) return;",
          "732:     if ((o = hashTypeLookupWriteOrCreate(c,c->argv[1])) == NULL) return;",
          "733:     if (hashTypeGetValue(o,c->argv[2]->ptr,&vstr,&vlen,&ll) == C_OK) {",
          "734:         if (vstr) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "732:     if (isnan(incr) || isinf(incr)) {",
          "733:         addReplyError(c,\"value is NaN or Infinity\");",
          "734:         return;",
          "735:     }",
          "",
          "---------------"
        ],
        "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl": [
          "File: tests/unit/type/hash.tcl -> tests/unit/type/hash.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "801:         set _ $k",
          "802:     } {ZIP_INT_8B 127 ZIP_INT_16B 32767 ZIP_INT_32B 2147483647 ZIP_INT_64B 9223372036854775808 ZIP_INT_IMM_MIN 0 ZIP_INT_IMM_MAX 12}",
          "804: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "804:     test {HINCRBYFLOAT does not allow NaN or Infinity} {",
          "805:         assert_error \"*value is NaN or Infinity*\" {r hincrbyfloat hfoo field +inf}",
          "806:         assert_equal 0 [r exists hfoo]",
          "807:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c924ac3fdf8fe544891dc66c88018e259ee4be87",
      "candidate_info": {
        "commit_hash": "c924ac3fdf8fe544891dc66c88018e259ee4be87",
        "repo": "redis/redis",
        "commit_url": "https://github.com/redis/redis/commit/c924ac3fdf8fe544891dc66c88018e259ee4be87",
        "files": [
          "src/t_hash.c",
          "tests/unit/type/hash.tcl"
        ],
        "message": "fix hincrbyfloat not to create a key if the new value is invalid (#11149)\n\nCheck the validity of the value before performing the create operation,\nprevents new data from being generated even if the request fails to execute.\n\nCo-authored-by: Oran Agra <oran@redislabs.com>\nCo-authored-by: chendianqiang <chendianqiang@meituan.com>\nCo-authored-by: Binbin <binloveplay1314@qq.com>\n(cherry picked from commit bc7fe41e5857a0854d524e2a63a028e9394d2a5c)\n(cherry picked from commit 606a385935363ea46c0df4f40f8a949d85f7a20a)\n(cherry picked from commit 7df23a5f51488ce002411c9d24b38520ad67b764)",
        "before_after_code_files": [
          "src/t_hash.c||src/t_hash.c",
          "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/t_hash.c||src/t_hash.c",
            "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl"
          ],
          "candidate": [
            "src/t_hash.c||src/t_hash.c",
            "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl"
          ]
        }
      },
      "candidate_diff": {
        "src/t_hash.c||src/t_hash.c": [
          "File: src/t_hash.c -> src/t_hash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "605:     unsigned int vlen;",
          "607:     if (getLongDoubleFromObjectOrReply(c,c->argv[3],&incr,NULL) != C_OK) return;",
          "608:     if ((o = hashTypeLookupWriteOrCreate(c,c->argv[1])) == NULL) return;",
          "609:     if (hashTypeGetValue(o,c->argv[2]->ptr,&vstr,&vlen,&ll) == C_OK) {",
          "610:         if (vstr) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "608:     if (isnan(incr) || isinf(incr)) {",
          "609:         addReplyError(c,\"value is NaN or Infinity\");",
          "610:         return;",
          "611:     }",
          "",
          "---------------"
        ],
        "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl": [
          "File: tests/unit/type/hash.tcl -> tests/unit/type/hash.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "540:             assert {[r hincrbyfloat myhash float -0.1] eq {1.9}}",
          "541:         }",
          "542:     }",
          "543: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "544:     test {HINCRBYFLOAT does not allow NaN or Infinity} {",
          "545:         assert_error \"*value is NaN or Infinity*\" {r hincrbyfloat hfoo field +inf}",
          "546:         assert_equal 0 [r exists hfoo]",
          "547:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1c1bd618c95e26a8ff5c12e70cbf0117233ef073",
      "candidate_info": {
        "commit_hash": "1c1bd618c95e26a8ff5c12e70cbf0117233ef073",
        "repo": "redis/redis",
        "commit_url": "https://github.com/redis/redis/commit/1c1bd618c95e26a8ff5c12e70cbf0117233ef073",
        "files": [
          "src/t_hash.c",
          "tests/unit/type/hash.tcl"
        ],
        "message": "fix hincrbyfloat not to create a key if the new value is invalid (#11149)\n\nCheck the validity of the value before performing the create operation,\nprevents new data from being generated even if the request fails to execute.\n\nCo-authored-by: Oran Agra <oran@redislabs.com>\nCo-authored-by: chendianqiang <chendianqiang@meituan.com>\nCo-authored-by: Binbin <binloveplay1314@qq.com>\n(cherry picked from commit bc7fe41e5857a0854d524e2a63a028e9394d2a5c)",
        "before_after_code_files": [
          "src/t_hash.c||src/t_hash.c",
          "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/t_hash.c||src/t_hash.c",
            "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl"
          ],
          "candidate": [
            "src/t_hash.c||src/t_hash.c",
            "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl"
          ]
        }
      },
      "candidate_diff": {
        "src/t_hash.c||src/t_hash.c": [
          "File: src/t_hash.c -> src/t_hash.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "670:     unsigned int vlen;",
          "672:     if (getLongDoubleFromObjectOrReply(c,c->argv[3],&incr,NULL) != C_OK) return;",
          "673:     if ((o = hashTypeLookupWriteOrCreate(c,c->argv[1])) == NULL) return;",
          "674:     if (hashTypeGetValue(o,c->argv[2]->ptr,&vstr,&vlen,&ll) == C_OK) {",
          "675:         if (vstr) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "673:     if (isnan(incr) || isinf(incr)) {",
          "674:         addReplyError(c,\"value is NaN or Infinity\");",
          "675:         return;",
          "676:     }",
          "",
          "---------------"
        ],
        "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl": [
          "File: tests/unit/type/hash.tcl -> tests/unit/type/hash.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "826:         set _ $k",
          "827:     } {ZIP_INT_8B 127 ZIP_INT_16B 32767 ZIP_INT_32B 2147483647 ZIP_INT_64B 9223372036854775808 ZIP_INT_IMM_MIN 0 ZIP_INT_IMM_MAX 12}",
          "829: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "829:     test {HINCRBYFLOAT does not allow NaN or Infinity} {",
          "830:         assert_error \"*value is NaN or Infinity*\" {r hincrbyfloat hfoo field +inf}",
          "831:         assert_equal 0 [r exists hfoo]",
          "832:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c3b7bde91499c2fa6105ff336286dbedbfd42790",
      "candidate_info": {
        "commit_hash": "c3b7bde91499c2fa6105ff336286dbedbfd42790",
        "repo": "redis/redis",
        "commit_url": "https://github.com/redis/redis/commit/c3b7bde91499c2fa6105ff336286dbedbfd42790",
        "files": [
          "tests/unit/type/hash.tcl"
        ],
        "message": "fix false valgrind error on new hash test (#11200)\n\nNew test fails on valgrind because strtold(\"+inf\") with valgrind returns a non-inf result\nsame thing is done in incr.tcl.",
        "before_after_code_files": [
          "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl"
          ],
          "candidate": [
            "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl"
          ]
        }
      },
      "candidate_diff": {
        "tests/unit/type/hash.tcl||tests/unit/type/hash.tcl": [
          "File: tests/unit/type/hash.tcl -> tests/unit/type/hash.tcl",
          "--- Hunk 1 ---",
          "[Context before]",
          "819:         set _ $k",
          "820:     } {ZIP_INT_8B 127 ZIP_INT_16B 32767 ZIP_INT_32B 2147483647 ZIP_INT_64B 9223372036854775808 ZIP_INT_IMM_MIN 0 ZIP_INT_IMM_MAX 12}",
          "825:     }",
          "826: }",
          "",
          "[Removed Lines]",
          "822:     test {HINCRBYFLOAT does not allow NaN or Infinity} {",
          "823:         assert_error \"*value is NaN or Infinity*\" {r hincrbyfloat hfoo field +inf}",
          "824:         assert_equal 0 [r exists hfoo]",
          "",
          "[Added Lines]",
          "822:     # On some platforms strtold(\"+inf\") with valgrind returns a non-inf result",
          "823:     if {!$::valgrind} {",
          "824:         test {HINCRBYFLOAT does not allow NaN or Infinity} {",
          "825:             assert_error \"*value is NaN or Infinity*\" {r hincrbyfloat hfoo field +inf}",
          "826:             assert_equal 0 [r exists hfoo]",
          "827:         }",
          "",
          "---------------"
        ]
      }
    }
  ]
}