{
  "cve_id": "CVE-2024-29887",
  "cve_desc": "Serverpod is an app and web server, built for the Flutter and Dart ecosystem. This bug bypassed the validation of TSL certificates on all none web HTTP clients in the `serverpod_client` package. Making them susceptible to a man in the middle attack against encrypted traffic between the client device and the server. An attacker would need to be able to intercept the traffic and highjack the connection to the server for this vulnerability to be used. Upgrading to version `1.2.6` resolves this issue.\n\n",
  "repo": "serverpod/serverpod",
  "patch_hash": "d55bf8d12967fc7955a875cb3e0f9693bd6d2c71",
  "patch_info": {
    "commit_hash": "d55bf8d12967fc7955a875cb3e0f9693bd6d2c71",
    "repo": "serverpod/serverpod",
    "commit_url": "https://github.com/serverpod/serverpod/commit/d55bf8d12967fc7955a875cb3e0f9693bd6d2c71",
    "files": [
      "packages/serverpod_client/lib/src/serverpod_client_io.dart",
      "tests/serverpod_test_server/test_e2e/tsl_client_test.dart"
    ],
    "message": "fix: Remove faulty certificate check. (#2041)",
    "before_after_code_files": [
      "packages/serverpod_client/lib/src/serverpod_client_io.dart||packages/serverpod_client/lib/src/serverpod_client_io.dart",
      "tests/serverpod_test_server/test_e2e/tsl_client_test.dart||tests/serverpod_test_server/test_e2e/tsl_client_test.dart"
    ]
  },
  "patch_diff": {
    "packages/serverpod_client/lib/src/serverpod_client_io.dart||packages/serverpod_client/lib/src/serverpod_client_io.dart": [
      "File: packages/serverpod_client/lib/src/serverpod_client_io.dart -> packages/serverpod_client/lib/src/serverpod_client_io.dart",
      "--- Hunk 1 ---",
      "[Context before]",
      "36:     _httpClient = HttpClient(context: securityContext);",
      "37:     _httpClient.connectionTimeout = connectionTimeout;",
      "53:   }",
      "55:   Future<void> _initialize() async {",
      "",
      "[Removed Lines]",
      "40:     _httpClient.badCertificateCallback =",
      "41:         ((X509Certificate cert, String host, int port) {",
      "51:       return true;",
      "52:     });",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "tests/serverpod_test_server/test_e2e/tsl_client_test.dart||tests/serverpod_test_server/test_e2e/tsl_client_test.dart": [
      "File: tests/serverpod_test_server/test_e2e/tsl_client_test.dart -> tests/serverpod_test_server/test_e2e/tsl_client_test.dart",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: import 'dart:io';",
      "3: import 'package:serverpod_service_client/serverpod_service_client.dart';",
      "4: import 'package:test/test.dart';",
      "6: void main() {",
      "7:   test(",
      "8:       'Given valid certificates when a call to the health endpoint of a service with a valid certificate then the requests completes successfully.',",
      "9:       () async {",
      "10:     var client = Client('https://api.serverpod.app/');",
      "12:     expectLater(",
      "13:       client.callServerEndpoint<void>('', '', {}),",
      "14:       completes,",
      "15:     );",
      "16:   });",
      "18:   test(",
      "19:       'Given no valid certificates when a call to the health endpoint of a service then the requests is rejected with a handshake exception.',",
      "20:       () async {",
      "21:     var client = Client(",
      "22:       'https://api.serverpod.app/',",
      "23:       securityContext: SecurityContext(withTrustedRoots: false),",
      "24:     );",
      "26:     expectLater(",
      "27:       client.callServerEndpoint<void>('', '', {}),",
      "28:       throwsA(isA<HandshakeException>()),",
      "29:     );",
      "30:   });",
      "31: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "71bb0a8ee366097c2c8edf0839d850ae187099f9",
      "candidate_info": {
        "commit_hash": "71bb0a8ee366097c2c8edf0839d850ae187099f9",
        "repo": "serverpod/serverpod",
        "commit_url": "https://github.com/serverpod/serverpod/commit/71bb0a8ee366097c2c8edf0839d850ae187099f9",
        "files": [
          "packages/serverpod_client/lib/src/serverpod_client_io.dart",
          "tests/serverpod_test_server/test_e2e/tsl_client_test.dart"
        ],
        "message": "fix: Remove faulty certificate check. (#2042)",
        "before_after_code_files": [
          "packages/serverpod_client/lib/src/serverpod_client_io.dart||packages/serverpod_client/lib/src/serverpod_client_io.dart",
          "tests/serverpod_test_server/test_e2e/tsl_client_test.dart||tests/serverpod_test_server/test_e2e/tsl_client_test.dart"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "packages/serverpod_client/lib/src/serverpod_client_io.dart||packages/serverpod_client/lib/src/serverpod_client_io.dart",
            "tests/serverpod_test_server/test_e2e/tsl_client_test.dart||tests/serverpod_test_server/test_e2e/tsl_client_test.dart"
          ],
          "candidate": [
            "packages/serverpod_client/lib/src/serverpod_client_io.dart||packages/serverpod_client/lib/src/serverpod_client_io.dart",
            "tests/serverpod_test_server/test_e2e/tsl_client_test.dart||tests/serverpod_test_server/test_e2e/tsl_client_test.dart"
          ]
        }
      },
      "candidate_diff": {
        "packages/serverpod_client/lib/src/serverpod_client_io.dart||packages/serverpod_client/lib/src/serverpod_client_io.dart": [
          "File: packages/serverpod_client/lib/src/serverpod_client_io.dart -> packages/serverpod_client/lib/src/serverpod_client_io.dart",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:     _httpClient = HttpClient(context: securityContext);",
          "35:     _httpClient.connectionTimeout = connectionTimeout;",
          "51:   }",
          "53:   Future<void> _initialize() async {",
          "",
          "[Removed Lines]",
          "38:     _httpClient.badCertificateCallback =",
          "39:         ((X509Certificate cert, String host, int port) {",
          "49:       return true;",
          "50:     });",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "tests/serverpod_test_server/test_e2e/tsl_client_test.dart||tests/serverpod_test_server/test_e2e/tsl_client_test.dart": [
          "File: tests/serverpod_test_server/test_e2e/tsl_client_test.dart -> tests/serverpod_test_server/test_e2e/tsl_client_test.dart",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import 'dart:io';",
          "3: import 'package:serverpod_service_client/serverpod_service_client.dart';",
          "4: import 'package:test/test.dart';",
          "6: void main() {",
          "7:   test(",
          "8:       'Given valid certificates when a call to the health endpoint of a service with a valid certificate then the requests completes successfully.',",
          "9:       () async {",
          "10:     var client = Client('https://api.serverpod.app/');",
          "12:     expectLater(",
          "13:       client.callServerEndpoint<void>('', '', {}),",
          "14:       completes,",
          "15:     );",
          "16:   });",
          "18:   test(",
          "19:       'Given no valid certificates when a call to the health endpoint of a service then the requests is rejected with a handshake exception.',",
          "20:       () async {",
          "21:     var client = Client(",
          "22:       'https://api.serverpod.app/',",
          "23:       securityContext: SecurityContext(withTrustedRoots: false),",
          "24:     );",
          "26:     expectLater(",
          "27:       client.callServerEndpoint<void>('', '', {}),",
          "28:       throwsA(isA<HandshakeException>()),",
          "29:     );",
          "30:   });",
          "31: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}