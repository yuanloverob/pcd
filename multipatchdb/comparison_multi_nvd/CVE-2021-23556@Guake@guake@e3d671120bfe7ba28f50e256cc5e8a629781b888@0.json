{
  "cve_id": "CVE-2021-23556",
  "cve_desc": "The package guake before 3.8.5 are vulnerable to Exposed Dangerous Method or Function due to the exposure of execute_command and execute_command_by_uuid methods via the d-bus interface, which makes it possible for a malicious user to run an arbitrary command via the d-bus method. **Note:** Exploitation requires the user to have installed another malicious program that will be able to send dbus signals or run terminal commands.",
  "repo": "Guake/guake",
  "patch_hash": "e3d671120bfe7ba28f50e256cc5e8a629781b888",
  "patch_info": {
    "commit_hash": "e3d671120bfe7ba28f50e256cc5e8a629781b888",
    "repo": "Guake/guake",
    "commit_url": "https://github.com/Guake/guake/pull/2017/commits/e3d671120bfe7ba28f50e256cc5e8a629781b888",
    "files": [
      "guake/dbusiface.py",
      "guake/guake_app.py",
      "releasenotes/notes/dbus_execution_security-fb7016c6bc40be5f.yaml"
    ],
    "message": "Fix arbitrary execution via dbus security flaw\n\nHighlighted in #1796. Also removed comments that won't be true or relevant with this change. These changes orphan the execute_command_by_uuid() method, but the method can probably still be used elsewhere.",
    "before_after_code_files": [
      "guake/dbusiface.py||guake/dbusiface.py",
      "guake/guake_app.py||guake/guake_app.py"
    ]
  },
  "patch_diff": {
    "guake/dbusiface.py||guake/dbusiface.py": [
      "File: guake/dbusiface.py -> guake/dbusiface.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "153:         self.guake.reset_terminal_custom_colors(current_terminal=True)",
      "154:         self.guake.set_colors_from_settings_on_page(current_terminal_only=True)",
      "160:     @dbus.service.method(DBUS_NAME, in_signature=\"i\", out_signature=\"s\")",
      "161:     def get_tab_name(self, tab_index=0):",
      "162:         return self.guake.get_notebook().get_tab_text_index(tab_index)",
      "",
      "[Removed Lines]",
      "156:     @dbus.service.method(DBUS_NAME, in_signature=\"s\")",
      "157:     def execute_command(self, command):",
      "158:         self.guake.execute_command(command)",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "193:     def get_selected_uuidtab(self):",
      "194:         return self.guake.get_selected_uuidtab()",
      "200:     @dbus.service.method(DBUS_NAME)",
      "201:     def v_split_current_terminal(self):",
      "202:         self.guake.get_notebook().get_current_terminal().get_parent().split_v()",
      "",
      "[Removed Lines]",
      "196:     @dbus.service.method(DBUS_NAME, in_signature=\"ss\")",
      "197:     def execute_command_by_uuid(self, tab_uuid, command):",
      "198:         self.guake.execute_command_by_uuid(tab_uuid, command)",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "204:     @dbus.service.method(DBUS_NAME)",
      "205:     def h_split_current_terminal(self):",
      "206:         self.guake.get_notebook().get_current_terminal().get_parent().split_h()",
      "",
      "[Removed Lines]",
      "208:     @dbus.service.method(DBUS_NAME, in_signature=\"s\")",
      "209:     def execute_command_current_termbox(self, command):",
      "210:         self.guake.get_notebook().get_current_terminal().execute_command(command)",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "guake/guake_app.py||guake/guake_app.py": [
      "File: guake/guake_app.py -> guake/guake_app.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "457:             self.set_colors_from_settings()",
      "459:     def execute_command(self, command, tab=None):",
      "461:         \"\"\"Execute the `command' in the `tab'. If tab is None, the",
      "462:         command will be executed in the currently selected",
      "463:         tab. Command should end with '\\n', otherwise it will be",
      "464:         appended to the string.",
      "465:         \"\"\"",
      "468:         if not self.get_notebook().has_page():",
      "469:             self.add_tab()",
      "",
      "[Removed Lines]",
      "460:         # TODO DBUS_ONLY",
      "466:         # TODO CONTEXTMENU this has to be rewriten and only serves the",
      "467:         # dbus interface, maybe this should be moved to dbusinterface.py",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "475:         terminal.feed_child(command)",
      "477:     def execute_command_by_uuid(self, tab_uuid, command):",
      "479:         \"\"\"Execute the `command' in the tab whose terminal has the `tab_uuid' uuid\"\"\"",
      "480:         if command[-1] != \"\\n\":",
      "481:             command += \"\\n\"",
      "",
      "[Removed Lines]",
      "478:         # TODO DBUS_ONLY",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b769b3a5fd71a107c58679d217cccc971b4196b4",
      "candidate_info": {
        "commit_hash": "b769b3a5fd71a107c58679d217cccc971b4196b4",
        "repo": "Guake/guake",
        "commit_url": "https://github.com/Guake/guake/commit/b769b3a5fd71a107c58679d217cccc971b4196b4",
        "files": [
          "guake/dbusiface.py",
          "guake/guake_app.py",
          "releasenotes/notes/dbus_execution_security-fb7016c6bc40be5f.yaml"
        ],
        "message": "Fix arbitrary execution via dbus security flaw\n\nHighlighted in #1796. Also removed comments that won't be true or relevant with this change. These changes orphan the execute_command_by_uuid() method, but the method can probably still be used elsewhere.",
        "before_after_code_files": [
          "guake/dbusiface.py||guake/dbusiface.py",
          "guake/guake_app.py||guake/guake_app.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "guake/dbusiface.py||guake/dbusiface.py",
            "guake/guake_app.py||guake/guake_app.py"
          ],
          "candidate": [
            "guake/dbusiface.py||guake/dbusiface.py",
            "guake/guake_app.py||guake/guake_app.py"
          ]
        }
      },
      "candidate_diff": {
        "guake/dbusiface.py||guake/dbusiface.py": [
          "File: guake/dbusiface.py -> guake/dbusiface.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "153:         self.guake.reset_terminal_custom_colors(current_terminal=True)",
          "154:         self.guake.set_colors_from_settings_on_page(current_terminal_only=True)",
          "160:     @dbus.service.method(DBUS_NAME, in_signature=\"i\", out_signature=\"s\")",
          "161:     def get_tab_name(self, tab_index=0):",
          "162:         return self.guake.get_notebook().get_tab_text_index(tab_index)",
          "",
          "[Removed Lines]",
          "156:     @dbus.service.method(DBUS_NAME, in_signature=\"s\")",
          "157:     def execute_command(self, command):",
          "158:         self.guake.execute_command(command)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "193:     def get_selected_uuidtab(self):",
          "194:         return self.guake.get_selected_uuidtab()",
          "200:     @dbus.service.method(DBUS_NAME)",
          "201:     def v_split_current_terminal(self):",
          "202:         self.guake.get_notebook().get_current_terminal().get_parent().split_v()",
          "",
          "[Removed Lines]",
          "196:     @dbus.service.method(DBUS_NAME, in_signature=\"ss\")",
          "197:     def execute_command_by_uuid(self, tab_uuid, command):",
          "198:         self.guake.execute_command_by_uuid(tab_uuid, command)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "204:     @dbus.service.method(DBUS_NAME)",
          "205:     def h_split_current_terminal(self):",
          "206:         self.guake.get_notebook().get_current_terminal().get_parent().split_h()",
          "",
          "[Removed Lines]",
          "208:     @dbus.service.method(DBUS_NAME, in_signature=\"s\")",
          "209:     def execute_command_current_termbox(self, command):",
          "210:         self.guake.get_notebook().get_current_terminal().execute_command(command)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "guake/guake_app.py||guake/guake_app.py": [
          "File: guake/guake_app.py -> guake/guake_app.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "457:             self.set_colors_from_settings()",
          "459:     def execute_command(self, command, tab=None):",
          "461:         \"\"\"Execute the `command' in the `tab'. If tab is None, the",
          "462:         command will be executed in the currently selected",
          "463:         tab. Command should end with '\\n', otherwise it will be",
          "464:         appended to the string.",
          "465:         \"\"\"",
          "468:         if not self.get_notebook().has_page():",
          "469:             self.add_tab()",
          "",
          "[Removed Lines]",
          "460:         # TODO DBUS_ONLY",
          "466:         # TODO CONTEXTMENU this has to be rewriten and only serves the",
          "467:         # dbus interface, maybe this should be moved to dbusinterface.py",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "475:         terminal.feed_child(command)",
          "477:     def execute_command_by_uuid(self, tab_uuid, command):",
          "479:         \"\"\"Execute the `command' in the tab whose terminal has the `tab_uuid' uuid\"\"\"",
          "480:         if command[-1] != \"\\n\":",
          "481:             command += \"\\n\"",
          "",
          "[Removed Lines]",
          "478:         # TODO DBUS_ONLY",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}