{
  "cve_id": "CVE-2023-51661",
  "cve_desc": "Wasmer is a WebAssembly runtime that enables containers to run anywhere: from Desktop to the Cloud, Edge and even the browser. Wasm programs can access the filesystem outside of the sandbox. Service providers running untrusted Wasm code on Wasmer can unexpectedly expose the host filesystem. This vulnerability has been patched in version 4.2.4.",
  "repo": "wasmerio/wasmer",
  "patch_hash": "4d63febf9d8b257b0531963b85df48d45d0dbf3c",
  "patch_info": {
    "commit_hash": "4d63febf9d8b257b0531963b85df48d45d0dbf3c",
    "repo": "wasmerio/wasmer",
    "commit_url": "https://github.com/wasmerio/wasmer/commit/4d63febf9d8b257b0531963b85df48d45d0dbf3c",
    "files": [
      "CHANGELOG.md",
      "Cargo.lock",
      "Cargo.toml",
      "lib/api/Cargo.toml",
      "lib/api/macro-wasmer-universal-test/Cargo.toml",
      "lib/c-api/Cargo.toml",
      "lib/c-api/examples/wasmer-capi-examples-runner/Cargo.toml",
      "lib/c-api/tests/wasmer-c-api-test-runner/Cargo.toml",
      "lib/cache/Cargo.toml",
      "lib/cli-compiler/Cargo.toml",
      "lib/cli/Cargo.toml",
      "lib/compiler-cranelift/Cargo.toml",
      "lib/compiler-llvm/Cargo.toml",
      "lib/compiler-singlepass/Cargo.toml",
      "lib/compiler/Cargo.toml",
      "lib/emscripten/Cargo.toml",
      "lib/middlewares/Cargo.toml",
      "lib/object/Cargo.toml",
      "lib/registry/Cargo.toml",
      "lib/sys-utils/Cargo.toml",
      "lib/virtual-fs/Cargo.toml",
      "lib/vm/Cargo.toml",
      "lib/wai-bindgen-wasmer/Cargo.toml",
      "lib/wasi-experimental-io-devices/Cargo.toml",
      "lib/wasi-types/Cargo.toml",
      "lib/wasi-web/Cargo.lock",
      "lib/wasi-web/Cargo.toml",
      "lib/wasix/Cargo.toml",
      "scripts/update-version.py",
      "scripts/windows-installer/wasmer.iss",
      "tests/integration/cli/Cargo.toml",
      "tests/integration/ios/Cargo.toml",
      "tests/lib/wast/Cargo.toml",
      "tests/wasi-wast/Cargo.toml"
    ],
    "message": "Release 4.2.4 (#4337)",
    "before_after_code_files": [
      "Cargo.lock||Cargo.lock",
      "lib/wasi-web/Cargo.lock||lib/wasi-web/Cargo.lock",
      "scripts/update-version.py||scripts/update-version.py",
      "scripts/windows-installer/wasmer.iss||scripts/windows-installer/wasmer.iss"
    ]
  },
  "patch_diff": {
    "Cargo.lock||Cargo.lock": [
      "File: Cargo.lock -> Cargo.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "2526: [[package]]",
      "2527: name = \"macro-wasmer-universal-test\"",
      "2529: dependencies = [",
      "2530:  \"proc-macro2\",",
      "2531:  \"proc-quote\",",
      "",
      "[Removed Lines]",
      "2528: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "2528: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "5140: [[package]]",
      "5141: name = \"virtual-fs\"",
      "5143: dependencies = [",
      "5144:  \"anyhow\",",
      "5145:  \"async-trait\",",
      "",
      "[Removed Lines]",
      "5142: version = \"0.9.0\"",
      "",
      "[Added Lines]",
      "5142: version = \"0.10.0\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "5327: [[package]]",
      "5328: name = \"wai-bindgen-wasmer\"",
      "5330: dependencies = [",
      "5331:  \"anyhow\",",
      "5332:  \"async-trait\",",
      "",
      "[Removed Lines]",
      "5329: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "5329: version = \"0.17.0\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "5406: [[package]]",
      "5407: name = \"wasi-test-generator\"",
      "5409: dependencies = [",
      "5410:  \"glob\",",
      "5411:  \"gumdrop\",",
      "",
      "[Removed Lines]",
      "5408: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5408: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "5597: [[package]]",
      "5598: name = \"wasmer\"",
      "5600: dependencies = [",
      "5601:  \"anyhow\",",
      "5602:  \"bytes\",",
      "",
      "[Removed Lines]",
      "5599: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5599: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "5672: [[package]]",
      "5673: name = \"wasmer-c-api\"",
      "5675: dependencies = [",
      "5676:  \"cbindgen\",",
      "5677:  \"cfg-if\",",
      "",
      "[Removed Lines]",
      "5674: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5674: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "5701: [[package]]",
      "5702: name = \"wasmer-c-api-test-runner\"",
      "5704: dependencies = [",
      "5705:  \"cc\",",
      "5706:  \"regex\",",
      "",
      "[Removed Lines]",
      "5703: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5703: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "5711: [[package]]",
      "5712: name = \"wasmer-cache\"",
      "5714: dependencies = [",
      "5715:  \"blake3\",",
      "5716:  \"criterion\",",
      "",
      "[Removed Lines]",
      "5713: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5713: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "5725: [[package]]",
      "5726: name = \"wasmer-capi-examples-runner\"",
      "5728: dependencies = [",
      "5729:  \"cc\",",
      "5730:  \"regex\",",
      "",
      "[Removed Lines]",
      "5727: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5727: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "5735: [[package]]",
      "5736: name = \"wasmer-cli\"",
      "5738: dependencies = [",
      "5739:  \"anyhow\",",
      "5740:  \"assert_cmd 2.0.12\",",
      "",
      "[Removed Lines]",
      "5737: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5737: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "5798:  \"wasmer-edge-cli\",",
      "5799:  \"wasmer-emscripten\",",
      "5800:  \"wasmer-object\",",
      "5802:  \"wasmer-toml 0.9.2\",",
      "5803:  \"wasmer-types\",",
      "5804:  \"wasmer-vm\",",
      "",
      "[Removed Lines]",
      "5801:  \"wasmer-registry 5.9.0\",",
      "",
      "[Added Lines]",
      "5801:  \"wasmer-registry 5.10.0\",",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "5811: [[package]]",
      "5812: name = \"wasmer-compiler\"",
      "5814: dependencies = [",
      "5815:  \"backtrace\",",
      "5816:  \"bytes\",",
      "",
      "[Removed Lines]",
      "5813: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5813: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "5840: [[package]]",
      "5841: name = \"wasmer-compiler-cli\"",
      "5843: dependencies = [",
      "5844:  \"anyhow\",",
      "5845:  \"bytesize\",",
      "",
      "[Removed Lines]",
      "5842: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5842: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "5861: [[package]]",
      "5862: name = \"wasmer-compiler-cranelift\"",
      "5864: dependencies = [",
      "5865:  \"cranelift-codegen\",",
      "5866:  \"cranelift-entity\",",
      "",
      "[Removed Lines]",
      "5863: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5863: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "5880: [[package]]",
      "5881: name = \"wasmer-compiler-llvm\"",
      "5883: dependencies = [",
      "5884:  \"byteorder\",",
      "5885:  \"cc\",",
      "",
      "[Removed Lines]",
      "5882: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5882: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "5902: [[package]]",
      "5903: name = \"wasmer-compiler-singlepass\"",
      "5905: dependencies = [",
      "5906:  \"byteorder\",",
      "5907:  \"dynasm\",",
      "",
      "[Removed Lines]",
      "5904: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5904: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "5921: [[package]]",
      "5922: name = \"wasmer-derive\"",
      "5924: dependencies = [",
      "5925:  \"compiletest_rs\",",
      "5926:  \"proc-macro-error\",",
      "",
      "[Removed Lines]",
      "5923: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5923: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "5965:  \"virtual-mio 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",",
      "5966:  \"virtual-net 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",",
      "5967:  \"wasmer-api\",",
      "5969:  \"wasmer-toml 0.9.2\",",
      "5970:  \"webc\",",
      "5971: ]",
      "5973: [[package]]",
      "5974: name = \"wasmer-emscripten\"",
      "5976: dependencies = [",
      "5977:  \"byteorder\",",
      "5978:  \"getrandom\",",
      "",
      "[Removed Lines]",
      "5968:  \"wasmer-registry 5.9.0 (registry+https://github.com/rust-lang/crates.io-index)\",",
      "5975: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "5968:  \"wasmer-registry 5.9.0\",",
      "5975: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "6015: [[package]]",
      "6016: name = \"wasmer-integration-tests-cli\"",
      "6018: dependencies = [",
      "6019:  \"anyhow\",",
      "6020:  \"assert_cmd 2.0.12\",",
      "",
      "[Removed Lines]",
      "6017: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "6017: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "6038:  \"target-lexicon 0.12.12\",",
      "6039:  \"tempfile\",",
      "6040:  \"tokio\",",
      "6042: ]",
      "6044: [[package]]",
      "6045: name = \"wasmer-integration-tests-ios\"",
      "6048: [[package]]",
      "6049: name = \"wasmer-middlewares\"",
      "6051: dependencies = [",
      "6052:  \"wasmer\",",
      "6053:  \"wasmer-types\",",
      "",
      "[Removed Lines]",
      "6041:  \"wasmer-registry 5.9.0\",",
      "6046: version = \"4.2.3\"",
      "6050: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "6041:  \"wasmer-registry 5.10.0\",",
      "6046: version = \"4.2.4\"",
      "6050: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "6057: [[package]]",
      "6058: name = \"wasmer-object\"",
      "6060: dependencies = [",
      "6061:  \"object 0.28.4\",",
      "6062:  \"thiserror\",",
      "",
      "[Removed Lines]",
      "6059: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "6059: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "6066: [[package]]",
      "6067: name = \"wasmer-registry\"",
      "6068: version = \"5.9.0\"",
      "6069: dependencies = [",
      "6070:  \"anyhow\",",
      "6072:  \"console\",",
      "6074:  \"dirs\",",
      "6075:  \"filetime\",",
      "6076:  \"flate2\",",
      "",
      "[Removed Lines]",
      "6071:  \"clap\",",
      "6073:  \"dialoguer 0.11.0\",",
      "",
      "[Added Lines]",
      "6069: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
      "6070: checksum = \"0bb2ecfb16d793bfe1e2b98af07e6f344bd00ba0efea8e1b24737701d823a3ee\"",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "6083:  \"log\",",
      "6084:  \"lzma-rs\",",
      "6085:  \"minisign\",",
      "6087:  \"regex\",",
      "6088:  \"reqwest\",",
      "6089:  \"rpassword\",",
      "",
      "[Removed Lines]",
      "6086:  \"pretty_assertions\",",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "6098:  \"tldextract\",",
      "6099:  \"tokio\",",
      "6100:  \"toml 0.5.11\",",
      "6102:  \"url\",",
      "6104:  \"wasmer-wasm-interface 4.2.3\",",
      "6105:  \"wasmparser 0.51.4\",",
      "6106:  \"whoami\",",
      "",
      "[Removed Lines]",
      "6101:  \"tracing\",",
      "6103:  \"wasmer-toml 0.9.2\",",
      "",
      "[Added Lines]",
      "6101:  \"wasmer-toml 0.8.1\",",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "6109: [[package]]",
      "6110: name = \"wasmer-registry\"",
      "6114: dependencies = [",
      "6115:  \"anyhow\",",
      "6116:  \"console\",",
      "6117:  \"dirs\",",
      "6118:  \"filetime\",",
      "6119:  \"flate2\",",
      "",
      "[Removed Lines]",
      "6111: version = \"5.9.0\"",
      "6112: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
      "6113: checksum = \"0bb2ecfb16d793bfe1e2b98af07e6f344bd00ba0efea8e1b24737701d823a3ee\"",
      "",
      "[Added Lines]",
      "6109: version = \"5.10.0\"",
      "6112:  \"clap\",",
      "6114:  \"dialoguer 0.11.0\",",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "6126:  \"log\",",
      "6127:  \"lzma-rs\",",
      "6128:  \"minisign\",",
      "6129:  \"regex\",",
      "6130:  \"reqwest\",",
      "6131:  \"rpassword\",",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6127:  \"pretty_assertions\",",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "6140:  \"tldextract\",",
      "6141:  \"tokio\",",
      "6142:  \"toml 0.5.11\",",
      "6143:  \"url\",",
      "6146:  \"wasmparser 0.51.4\",",
      "6147:  \"whoami\",",
      "6148: ]",
      "6150: [[package]]",
      "6151: name = \"wasmer-sys-utils\"",
      "6153: dependencies = [",
      "6154:  \"libc\",",
      "6155:  \"region\",",
      "",
      "[Removed Lines]",
      "6144:  \"wasmer-toml 0.8.1\",",
      "6145:  \"wasmer-wasm-interface 4.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",",
      "6152: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "6142:  \"tracing\",",
      "6144:  \"wasmer-toml 0.9.2\",",
      "6145:  \"wasmer-wasm-interface 4.2.4\",",
      "6152: version = \"0.17.0\"",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "6200: [[package]]",
      "6201: name = \"wasmer-types\"",
      "6203: dependencies = [",
      "6204:  \"bytecheck\",",
      "6205:  \"enum-iterator\",",
      "",
      "[Removed Lines]",
      "6202: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "6202: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "6217: [[package]]",
      "6218: name = \"wasmer-vm\"",
      "6220: dependencies = [",
      "6221:  \"backtrace\",",
      "6222:  \"cc\",",
      "",
      "[Removed Lines]",
      "6219: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "6219: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "6245: [[package]]",
      "6246: name = \"wasmer-wasix\"",
      "6248: dependencies = [",
      "6249:  \"anyhow\",",
      "6250:  \"async-trait\",",
      "",
      "[Removed Lines]",
      "6247: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "6247: version = \"0.17.0\"",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "6315: [[package]]",
      "6316: name = \"wasmer-wasix-experimental-io-devices\"",
      "6318: dependencies = [",
      "6319:  \"minifb\",",
      "6320:  \"nix 0.25.1\",",
      "",
      "[Removed Lines]",
      "6317: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "6317: version = \"0.17.0\"",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "6330: [[package]]",
      "6331: name = \"wasmer-wasix-types\"",
      "6333: dependencies = [",
      "6334:  \"anyhow\",",
      "6335:  \"bitflags 1.3.2\",",
      "",
      "[Removed Lines]",
      "6332: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "6332: version = \"0.17.0\"",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "6353: [[package]]",
      "6354: name = \"wasmer-wasm-interface\"",
      "6355: version = \"4.2.3\"",
      "6356: dependencies = [",
      "6358:  \"either\",",
      "6359:  \"nom 5.1.3\",",
      "6360:  \"serde\",",
      "6361:  \"wasmparser 0.51.4\",",
      "6363: ]",
      "6365: [[package]]",
      "6366: name = \"wasmer-wasm-interface\"",
      "6370: dependencies = [",
      "6371:  \"either\",",
      "6372:  \"nom 5.1.3\",",
      "6373:  \"serde\",",
      "6374:  \"wasmparser 0.51.4\",",
      "6375: ]",
      "6377: [[package]]",
      "6378: name = \"wasmer-wast\"",
      "6380: dependencies = [",
      "6381:  \"anyhow\",",
      "6382:  \"futures\",",
      "",
      "[Removed Lines]",
      "6357:  \"bincode\",",
      "6362:  \"wat\",",
      "6367: version = \"4.2.3\"",
      "6368: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
      "6369: checksum = \"70759b128088ce07ab6f31b97d83ceb8642285c650677fc84f554d68dc534ac4\"",
      "6379: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "6356: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
      "6357: checksum = \"70759b128088ce07ab6f31b97d83ceb8642285c650677fc84f554d68dc534ac4\"",
      "6367: version = \"4.2.4\"",
      "6369:  \"bincode\",",
      "6374:  \"wat\",",
      "6379: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "6393: [[package]]",
      "6394: name = \"wasmer-workspace\"",
      "6396: dependencies = [",
      "6397:  \"anyhow\",",
      "6398:  \"build-deps\",",
      "",
      "[Removed Lines]",
      "6395: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "6395: version = \"4.2.4\"",
      "",
      "---------------"
    ],
    "lib/wasi-web/Cargo.lock||lib/wasi-web/Cargo.lock": [
      "File: lib/wasi-web/Cargo.lock -> lib/wasi-web/Cargo.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "2159: [[package]]",
      "2160: name = \"virtual-fs\"",
      "2162: dependencies = [",
      "2163:  \"anyhow\",",
      "2164:  \"async-trait\",",
      "",
      "[Removed Lines]",
      "2161: version = \"0.9.0\"",
      "",
      "[Added Lines]",
      "2161: version = \"0.10.0\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "2279: [[package]]",
      "2280: name = \"wai-bindgen-wasmer\"",
      "2282: dependencies = [",
      "2283:  \"anyhow\",",
      "2284:  \"bitflags 1.3.2\",",
      "",
      "[Removed Lines]",
      "2281: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "2281: version = \"0.17.0\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "2441: [[package]]",
      "2442: name = \"wasmer\"",
      "2444: dependencies = [",
      "2445:  \"bytes\",",
      "2446:  \"cfg-if\",",
      "",
      "[Removed Lines]",
      "2443: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "2443: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "2468: [[package]]",
      "2469: name = \"wasmer-compiler\"",
      "2471: dependencies = [",
      "2472:  \"backtrace\",",
      "2473:  \"bytes\",",
      "",
      "[Removed Lines]",
      "2470: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "2470: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "2492: [[package]]",
      "2493: name = \"wasmer-derive\"",
      "2495: dependencies = [",
      "2496:  \"proc-macro-error\",",
      "2497:  \"proc-macro2\",",
      "",
      "[Removed Lines]",
      "2494: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "2494: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "2520: [[package]]",
      "2521: name = \"wasmer-types\"",
      "2523: dependencies = [",
      "2524:  \"bytecheck\",",
      "2525:  \"enum-iterator\",",
      "",
      "[Removed Lines]",
      "2522: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "2522: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "2535: [[package]]",
      "2536: name = \"wasmer-vm\"",
      "2538: dependencies = [",
      "2539:  \"backtrace\",",
      "2540:  \"cc\",",
      "",
      "[Removed Lines]",
      "2537: version = \"4.2.3\"",
      "",
      "[Added Lines]",
      "2537: version = \"4.2.4\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2561: [[package]]",
      "2562: name = \"wasmer-wasix\"",
      "2564: dependencies = [",
      "2565:  \"anyhow\",",
      "2566:  \"async-trait\",",
      "",
      "[Removed Lines]",
      "2563: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "2563: version = \"0.17.0\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2618: [[package]]",
      "2619: name = \"wasmer-wasix-types\"",
      "2621: dependencies = [",
      "2622:  \"anyhow\",",
      "2623:  \"bitflags 1.3.2\",",
      "",
      "[Removed Lines]",
      "2620: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "2620: version = \"0.17.0\"",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2640: [[package]]",
      "2641: name = \"wasmer-web\"",
      "2643: dependencies = [",
      "2644:  \"anyhow\",",
      "2645:  \"async-trait\",",
      "",
      "[Removed Lines]",
      "2642: version = \"0.16.0\"",
      "",
      "[Added Lines]",
      "2642: version = \"0.17.0\"",
      "",
      "---------------"
    ],
    "scripts/update-version.py||scripts/update-version.py": [
      "File: scripts/update-version.py -> scripts/update-version.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #!/usr/bin/python",
      "6: import os",
      "7: import re",
      "",
      "[Removed Lines]",
      "3: PREVIOUS_VERSION='4.2.2'",
      "4: NEXT_VERSION='4.2.3'",
      "",
      "[Added Lines]",
      "3: PREVIOUS_VERSION='4.2.3'",
      "4: NEXT_VERSION='4.2.4'",
      "",
      "---------------"
    ],
    "scripts/windows-installer/wasmer.iss||scripts/windows-installer/wasmer.iss": [
      "File: scripts/windows-installer/wasmer.iss -> scripts/windows-installer/wasmer.iss",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: [Setup]",
      "2: AppName=Wasmer",
      "4: DefaultDirName={pf}\\Wasmer",
      "5: DefaultGroupName=Wasmer",
      "6: Compression=lzma2",
      "",
      "[Removed Lines]",
      "3: AppVersion=4.2.3",
      "",
      "[Added Lines]",
      "3: AppVersion=4.2.4",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "589ea17f69f00fdbf2da2a50b941e2c5818b3ac2",
      "candidate_info": {
        "commit_hash": "589ea17f69f00fdbf2da2a50b941e2c5818b3ac2",
        "repo": "wasmerio/wasmer",
        "commit_url": "https://github.com/wasmerio/wasmer/commit/589ea17f69f00fdbf2da2a50b941e2c5818b3ac2",
        "files": [
          "Cargo.toml",
          "lib/api/Cargo.toml",
          "lib/api/macro-wasmer-universal-test/Cargo.toml",
          "lib/c-api/Cargo.toml",
          "lib/c-api/examples/wasmer-capi-examples-runner/Cargo.toml",
          "lib/c-api/tests/wasmer-c-api-test-runner/Cargo.toml",
          "lib/cache/Cargo.toml",
          "lib/cli-compiler/Cargo.toml",
          "lib/cli/Cargo.toml",
          "lib/compiler-cranelift/Cargo.toml",
          "lib/compiler-llvm/Cargo.toml",
          "lib/compiler-singlepass/Cargo.toml",
          "lib/compiler/Cargo.toml",
          "lib/emscripten/Cargo.toml",
          "lib/journal/Cargo.toml",
          "lib/middlewares/Cargo.toml",
          "lib/object/Cargo.toml",
          "lib/registry/Cargo.toml",
          "lib/sys-utils/Cargo.toml",
          "lib/vm/Cargo.toml",
          "lib/wai-bindgen-wasmer/Cargo.toml",
          "lib/wasi-types/Cargo.toml",
          "lib/wasix/Cargo.toml",
          "scripts/update-version.py",
          "scripts/windows-installer/wasmer.iss",
          "tests/integration/cli/Cargo.toml",
          "tests/integration/ios/Cargo.toml",
          "tests/lib/wast/Cargo.toml",
          "tests/wasi-wast/Cargo.toml",
          "tests/wasmer-argus/Cargo.toml"
        ],
        "message": "Release 4.3.4",
        "before_after_code_files": [
          "scripts/update-version.py||scripts/update-version.py",
          "scripts/windows-installer/wasmer.iss||scripts/windows-installer/wasmer.iss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "scripts/update-version.py||scripts/update-version.py",
            "scripts/windows-installer/wasmer.iss||scripts/windows-installer/wasmer.iss"
          ],
          "candidate": [
            "scripts/update-version.py||scripts/update-version.py",
            "scripts/windows-installer/wasmer.iss||scripts/windows-installer/wasmer.iss"
          ]
        }
      },
      "candidate_diff": {
        "scripts/update-version.py||scripts/update-version.py": [
          "File: scripts/update-version.py -> scripts/update-version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/usr/bin/python",
          "6: import os",
          "7: import re",
          "",
          "[Removed Lines]",
          "3: PREVIOUS_VERSION='4.3.2'",
          "4: NEXT_VERSION='4.3.3'",
          "",
          "[Added Lines]",
          "3: PREVIOUS_VERSION='4.3.3'",
          "4: NEXT_VERSION='4.3.4'",
          "",
          "---------------"
        ],
        "scripts/windows-installer/wasmer.iss||scripts/windows-installer/wasmer.iss": [
          "File: scripts/windows-installer/wasmer.iss -> scripts/windows-installer/wasmer.iss",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: [Setup]",
          "2: AppName=Wasmer",
          "4: DefaultDirName={pf}\\Wasmer",
          "5: DefaultGroupName=Wasmer",
          "6: Compression=lzma2",
          "",
          "[Removed Lines]",
          "3: AppVersion=4.3.3",
          "",
          "[Added Lines]",
          "3: AppVersion=4.3.4",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f7a8abc37de1deab6d884c174dcacd5f62300093",
      "candidate_info": {
        "commit_hash": "f7a8abc37de1deab6d884c174dcacd5f62300093",
        "repo": "wasmerio/wasmer",
        "commit_url": "https://github.com/wasmerio/wasmer/commit/f7a8abc37de1deab6d884c174dcacd5f62300093",
        "files": [
          "Cargo.toml",
          "lib/api/Cargo.toml",
          "lib/api/macro-wasmer-universal-test/Cargo.toml",
          "lib/c-api/Cargo.toml",
          "lib/c-api/examples/wasmer-capi-examples-runner/Cargo.toml",
          "lib/c-api/tests/wasmer-c-api-test-runner/Cargo.toml",
          "lib/cache/Cargo.toml",
          "lib/cli-compiler/Cargo.toml",
          "lib/cli/Cargo.toml",
          "lib/compiler-cranelift/Cargo.toml",
          "lib/compiler-llvm/Cargo.toml",
          "lib/compiler-singlepass/Cargo.toml",
          "lib/compiler/Cargo.toml",
          "lib/emscripten/Cargo.toml",
          "lib/journal/Cargo.toml",
          "lib/middlewares/Cargo.toml",
          "lib/object/Cargo.toml",
          "lib/registry/Cargo.toml",
          "lib/sys-utils/Cargo.toml",
          "lib/vm/Cargo.toml",
          "lib/wai-bindgen-wasmer/Cargo.toml",
          "lib/wasi-types/Cargo.toml",
          "lib/wasix/Cargo.toml",
          "scripts/update-version.py",
          "scripts/windows-installer/wasmer.iss",
          "tests/integration/cli/Cargo.toml",
          "tests/integration/ios/Cargo.toml",
          "tests/lib/wast/Cargo.toml",
          "tests/wasi-wast/Cargo.toml",
          "tests/wasmer-argus/Cargo.toml"
        ],
        "message": "Release 4.3.3",
        "before_after_code_files": [
          "scripts/update-version.py||scripts/update-version.py",
          "scripts/windows-installer/wasmer.iss||scripts/windows-installer/wasmer.iss"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "scripts/update-version.py||scripts/update-version.py",
            "scripts/windows-installer/wasmer.iss||scripts/windows-installer/wasmer.iss"
          ],
          "candidate": [
            "scripts/update-version.py||scripts/update-version.py",
            "scripts/windows-installer/wasmer.iss||scripts/windows-installer/wasmer.iss"
          ]
        }
      },
      "candidate_diff": {
        "scripts/update-version.py||scripts/update-version.py": [
          "File: scripts/update-version.py -> scripts/update-version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/usr/bin/python",
          "6: import os",
          "7: import re",
          "",
          "[Removed Lines]",
          "3: PREVIOUS_VERSION='4.3.1'",
          "4: NEXT_VERSION='4.3.2'",
          "",
          "[Added Lines]",
          "3: PREVIOUS_VERSION='4.3.2'",
          "4: NEXT_VERSION='4.3.3'",
          "",
          "---------------"
        ],
        "scripts/windows-installer/wasmer.iss||scripts/windows-installer/wasmer.iss": [
          "File: scripts/windows-installer/wasmer.iss -> scripts/windows-installer/wasmer.iss",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: [Setup]",
          "2: AppName=Wasmer",
          "4: DefaultDirName={pf}\\Wasmer",
          "5: DefaultGroupName=Wasmer",
          "6: Compression=lzma2",
          "",
          "[Removed Lines]",
          "3: AppVersion=4.3.2",
          "",
          "[Added Lines]",
          "3: AppVersion=4.3.3",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3b31d4dcb66cb1d66f786610c1311ac2fb72c526",
      "candidate_info": {
        "commit_hash": "3b31d4dcb66cb1d66f786610c1311ac2fb72c526",
        "repo": "wasmerio/wasmer",
        "commit_url": "https://github.com/wasmerio/wasmer/commit/3b31d4dcb66cb1d66f786610c1311ac2fb72c526",
        "files": [
          "Cargo.lock",
          "Cargo.toml",
          "lib/c-api/Cargo.toml",
          "lib/cli/Cargo.toml",
          "lib/sys-utils/Cargo.toml",
          "tests/lib/wast/Cargo.toml"
        ],
        "message": "deps: Lift wasmer-wasix to be a workspace dependency",
        "before_after_code_files": [
          "Cargo.lock||Cargo.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Cargo.lock||Cargo.lock"
          ],
          "candidate": [
            "Cargo.lock||Cargo.lock"
          ]
        }
      },
      "candidate_diff": {
        "Cargo.lock||Cargo.lock": [
          "File: Cargo.lock -> Cargo.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "6853: [[package]]",
          "6854: name = \"wasmer-wasix\"",
          "6856: dependencies = [",
          "6857:  \"anyhow\",",
          "6858:  \"async-trait\",",
          "",
          "[Removed Lines]",
          "6855: version = \"0.18.4\"",
          "",
          "[Added Lines]",
          "6855: version = \"0.19.0\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cfc80c82b6179e12e3229426bface3f026beb41a",
      "candidate_info": {
        "commit_hash": "cfc80c82b6179e12e3229426bface3f026beb41a",
        "repo": "wasmerio/wasmer",
        "commit_url": "https://github.com/wasmerio/wasmer/commit/cfc80c82b6179e12e3229426bface3f026beb41a",
        "files": [
          "Cargo.lock",
          "Cargo.toml",
          "lib/backend-api/Cargo.toml",
          "lib/c-api/Cargo.toml",
          "lib/cli/Cargo.toml",
          "lib/journal/Cargo.toml",
          "lib/registry/Cargo.toml",
          "lib/sys-utils/Cargo.toml",
          "lib/wai-bindgen-wasmer/Cargo.toml",
          "lib/wasi-types/Cargo.toml",
          "lib/wasix/Cargo.toml",
          "tests/lib/wast/Cargo.toml"
        ],
        "message": "Update 0.x package versions",
        "before_after_code_files": [
          "Cargo.lock||Cargo.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Cargo.lock||Cargo.lock"
          ],
          "candidate": [
            "Cargo.lock||Cargo.lock"
          ]
        }
      },
      "candidate_diff": {
        "Cargo.lock||Cargo.lock": [
          "File: Cargo.lock -> Cargo.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "5790: [[package]]",
          "5791: name = \"wai-bindgen-wasmer\"",
          "5793: dependencies = [",
          "5794:  \"anyhow\",",
          "5795:  \"async-trait\",",
          "",
          "[Removed Lines]",
          "5792: version = \"0.18.1\"",
          "",
          "[Added Lines]",
          "5792: version = \"0.18.2\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "6093: [[package]]",
          "6094: name = \"wasmer-api\"",
          "6096: dependencies = [",
          "6097:  \"anyhow\",",
          "6098:  \"base64 0.13.1\",",
          "",
          "[Removed Lines]",
          "6095: version = \"0.0.23\"",
          "",
          "[Added Lines]",
          "6095: version = \"0.0.24\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6525: [[package]]",
          "6526: name = \"wasmer-registry\"",
          "6528: dependencies = [",
          "6529:  \"anyhow\",",
          "6530:  \"clap\",",
          "",
          "[Removed Lines]",
          "6527: version = \"5.10.2\"",
          "",
          "[Added Lines]",
          "6527: version = \"5.10.3\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "6571: [[package]]",
          "6572: name = \"wasmer-sys-utils\"",
          "6574: dependencies = [",
          "6575:  \"libc\",",
          "6576:  \"region\",",
          "",
          "[Removed Lines]",
          "6573: version = \"0.18.1\"",
          "",
          "[Added Lines]",
          "6573: version = \"0.18.2\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "6648: [[package]]",
          "6649: name = \"wasmer-wasix\"",
          "6651: dependencies = [",
          "6652:  \"anyhow\",",
          "6653:  \"async-trait\",",
          "",
          "[Removed Lines]",
          "6650: version = \"0.18.1\"",
          "",
          "[Added Lines]",
          "6650: version = \"0.18.2\"",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "6727: [[package]]",
          "6728: name = \"wasmer-wasix-types\"",
          "6730: dependencies = [",
          "6731:  \"anyhow\",",
          "6732:  \"bitflags 1.3.2\",",
          "",
          "[Removed Lines]",
          "6729: version = \"0.18.1\"",
          "",
          "[Added Lines]",
          "6729: version = \"0.18.2\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0f2f558fa9acb8455cba80e53a26a707990e426c",
      "candidate_info": {
        "commit_hash": "0f2f558fa9acb8455cba80e53a26a707990e426c",
        "repo": "wasmerio/wasmer",
        "commit_url": "https://github.com/wasmerio/wasmer/commit/0f2f558fa9acb8455cba80e53a26a707990e426c",
        "files": [
          "Cargo.lock",
          "Cargo.toml",
          "lib/backend-api/schema.graphql",
          "lib/backend-api/src/query.rs",
          "lib/backend-api/src/types.rs",
          "lib/cli/Cargo.toml",
          "lib/cli/src/commands/app/create.rs",
          "lib/cli/src/commands/app/deploy.rs",
          "lib/cli/src/commands/login.rs",
          "lib/cli/src/commands/mod.rs",
          "lib/cli/src/commands/package/build.rs",
          "lib/cli/src/commands/package/common/macros.rs",
          "lib/cli/src/commands/package/common/mod.rs",
          "lib/cli/src/commands/package/common/wait.rs",
          "lib/cli/src/commands/package/mod.rs",
          "lib/cli/src/commands/package/publish.rs",
          "lib/cli/src/commands/package/push.rs",
          "lib/cli/src/commands/package/tag.rs",
          "lib/cli/src/commands/publish.rs",
          "lib/cli/src/opts.rs",
          "lib/registry/src/graphql/subscriptions.rs",
          "lib/registry/src/subscriptions.rs",
          "lib/wasix/src/bin_factory/binary_package.rs"
        ],
        "message": "[skip ci] new publish flow",
        "before_after_code_files": [
          "Cargo.lock||Cargo.lock",
          "lib/backend-api/schema.graphql||lib/backend-api/schema.graphql",
          "lib/backend-api/src/query.rs||lib/backend-api/src/query.rs",
          "lib/backend-api/src/types.rs||lib/backend-api/src/types.rs",
          "lib/cli/src/commands/app/create.rs||lib/cli/src/commands/app/create.rs",
          "lib/cli/src/commands/app/deploy.rs||lib/cli/src/commands/app/deploy.rs",
          "lib/cli/src/commands/login.rs||lib/cli/src/commands/login.rs",
          "lib/cli/src/commands/mod.rs||lib/cli/src/commands/mod.rs",
          "lib/cli/src/commands/package/build.rs||lib/cli/src/commands/package/build.rs",
          "lib/cli/src/commands/package/common/macros.rs||lib/cli/src/commands/package/common/macros.rs",
          "lib/cli/src/commands/package/common/mod.rs||lib/cli/src/commands/package/common/mod.rs",
          "lib/cli/src/commands/package/common/wait.rs||lib/cli/src/commands/package/common/wait.rs",
          "lib/cli/src/commands/package/mod.rs||lib/cli/src/commands/package/mod.rs",
          "lib/cli/src/commands/package/publish.rs||lib/cli/src/commands/package/publish.rs",
          "lib/cli/src/commands/package/push.rs||lib/cli/src/commands/package/push.rs",
          "lib/cli/src/commands/package/tag.rs||lib/cli/src/commands/package/tag.rs",
          "lib/cli/src/commands/publish.rs||lib/cli/src/commands/publish.rs",
          "lib/cli/src/opts.rs||lib/cli/src/opts.rs",
          "lib/registry/src/graphql/subscriptions.rs||lib/registry/src/graphql/subscriptions.rs",
          "lib/registry/src/subscriptions.rs||lib/registry/src/subscriptions.rs",
          "lib/wasix/src/bin_factory/binary_package.rs||lib/wasix/src/bin_factory/binary_package.rs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "Cargo.lock||Cargo.lock"
          ],
          "candidate": [
            "Cargo.lock||Cargo.lock"
          ]
        }
      },
      "candidate_diff": {
        "Cargo.lock||Cargo.lock": [
          "File: Cargo.lock -> Cargo.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: [[package]]",
          "59: name = \"allocator-api2\"",
          "61: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "64: [[package]]",
          "65: name = \"android-tzdata\"",
          "",
          "[Removed Lines]",
          "60: version = \"0.2.16\"",
          "62: checksum = \"0942ffc6dcaadf03badf6e6a2d0228460359d5e34b57ccdc720b7382dfbd5ec5\"",
          "",
          "[Added Lines]",
          "60: version = \"0.2.18\"",
          "62: checksum = \"5c6cb57a04249c6480766f7f7cef5467412af1490f8d1e243141daddada3264f\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "85: [[package]]",
          "86: name = \"anstream\"",
          "88: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "90: dependencies = [",
          "91:  \"anstyle\",",
          "92:  \"anstyle-parse\",",
          "93:  \"anstyle-query\",",
          "94:  \"anstyle-wincon\",",
          "95:  \"colorchoice\",",
          "96:  \"utf8parse\",",
          "97: ]",
          "99: [[package]]",
          "100: name = \"anstyle\"",
          "102: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "105: [[package]]",
          "106: name = \"anstyle-parse\"",
          "108: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "110: dependencies = [",
          "111:  \"utf8parse\",",
          "112: ]",
          "114: [[package]]",
          "115: name = \"anstyle-query\"",
          "117: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "119: dependencies = [",
          "120:  \"windows-sys 0.52.0\",",
          "121: ]",
          "123: [[package]]",
          "124: name = \"anstyle-wincon\"",
          "126: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "128: dependencies = [",
          "129:  \"anstyle\",",
          "130:  \"windows-sys 0.52.0\",",
          "",
          "[Removed Lines]",
          "87: version = \"0.6.13\"",
          "89: checksum = \"d96bd03f33fe50a863e394ee9718a706f988b9079b20c3784fb726e7678b62fb\"",
          "101: version = \"1.0.6\"",
          "103: checksum = \"8901269c6307e8d93993578286ac0edf7f195079ffff5ebdeea6a59ffb7e36bc\"",
          "107: version = \"0.2.3\"",
          "109: checksum = \"c75ac65da39e5fe5ab759307499ddad880d724eed2f6ce5b5e8a26f4f387928c\"",
          "116: version = \"1.0.2\"",
          "118: checksum = \"e28923312444cdd728e4738b3f9c9cac739500909bb3d3c94b43551b16517648\"",
          "125: version = \"3.0.2\"",
          "127: checksum = \"1cd54b81ec8d6180e24654d0b371ad22fc3dd083b6ff8ba325b72e00c87660a7\"",
          "",
          "[Added Lines]",
          "87: version = \"0.6.14\"",
          "89: checksum = \"418c75fa768af9c03be99d17643f93f79bbba589895012a80e3452a19ddda15b\"",
          "96:  \"is_terminal_polyfill\",",
          "102: version = \"1.0.7\"",
          "104: checksum = \"038dfcf04a5feb68e9c60b21c9625a54c2c0616e79b72b0fd87075a056ae1d1b\"",
          "108: version = \"0.2.4\"",
          "110: checksum = \"c03a11a9034d92058ceb6ee011ce58af4a9bf61491aa7e1e59ecd24bd40d22d4\"",
          "117: version = \"1.0.3\"",
          "119: checksum = \"a64c907d4e79225ac72e2a354c9ce84d50ebb4586dee56c82b3ee73004f537f5\"",
          "126: version = \"3.0.3\"",
          "128: checksum = \"61a38449feb7068f52bb06c12759005cf459ee52bb4adc1d5a7c4322d716fb19\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "139: [[package]]",
          "140: name = \"anyhow\"",
          "142: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "145: [[package]]",
          "146: name = \"arbitrary\"",
          "",
          "[Removed Lines]",
          "141: version = \"1.0.81\"",
          "143: checksum = \"0952808a6c2afd1aa8947271f3a60f1a6763c7b912d210184c5149b5cf147247\"",
          "",
          "[Added Lines]",
          "142: version = \"1.0.83\"",
          "144: checksum = \"25bdb32cbbdce2b519a9cd7df3a678443100e265d5e25ca763b7572a5104f5f3\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "207: [[package]]",
          "208: name = \"async-compression\"",
          "210: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "212: dependencies = [",
          "213:  \"flate2\",",
          "214:  \"futures-core\",",
          "",
          "[Removed Lines]",
          "209: version = \"0.4.7\"",
          "211: checksum = \"86a9249d1447a85f95810c620abea82e001fe58a31713fcce614caf52499f905\"",
          "",
          "[Added Lines]",
          "210: version = \"0.4.9\"",
          "212: checksum = \"4e9eabd7a98fe442131a17c316bd9349c43695e49e730c3c8e12cfb5f4da2693\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "220: [[package]]",
          "221: name = \"async-trait\"",
          "223: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "225: dependencies = [",
          "226:  \"proc-macro2\",",
          "227:  \"quote\",",
          "229: ]",
          "231: [[package]]",
          "",
          "[Removed Lines]",
          "222: version = \"0.1.79\"",
          "224: checksum = \"a507401cad91ec6a857ed5513a2073c82a9b9048762b885bb98655b306964681\"",
          "228:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "223: version = \"0.1.80\"",
          "225: checksum = \"c6fa2087f2753a7da8cc1c0dbfcf89579dd57458e36769de5ac750b4671737ca\"",
          "229:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "253: [[package]]",
          "254: name = \"autocfg\"",
          "256: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "259: [[package]]",
          "260: name = \"backtrace\"",
          "",
          "[Removed Lines]",
          "255: version = \"1.2.0\"",
          "257: checksum = \"f1fdabc7756949593fe60f30ec81974b613357de856987752631dea1e3394c80\"",
          "",
          "[Added Lines]",
          "256: version = \"1.3.0\"",
          "258: checksum = \"0c4b4d0bd25bd0b74681c0ad21497610ce1b7c91b1022cd21c80c6fbdd9476b0\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "283: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "284: checksum = \"9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567\"",
          "286: [[package]]",
          "287: name = \"bincode\"",
          "288: version = \"1.3.3\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "287: [[package]]",
          "288: name = \"base64\"",
          "289: version = \"0.22.1\"",
          "290: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "291: checksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"",
          "293: [[package]]",
          "294: name = \"beef\"",
          "295: version = \"0.5.2\"",
          "296: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "297: checksum = \"3a8241f3ebb85c056b509d4327ad0358fbbba6ffb340bf388f26350aeda225b1\"",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "378: [[package]]",
          "379: name = \"bumpalo\"",
          "381: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "384: [[package]]",
          "385: name = \"bytecheck\"",
          "",
          "[Removed Lines]",
          "380: version = \"3.15.4\"",
          "382: checksum = \"7ff69b9dd49fd426c69a0db9fc04dd934cdb6645ff000864d98f7e2af8830eaa\"",
          "",
          "[Added Lines]",
          "393: version = \"3.16.0\"",
          "395: checksum = \"79296716171880943b8470b5f8d03aa55eb2e645a4874bdbb28adb49162e012c\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "463: dependencies = [",
          "464:  \"camino\",",
          "465:  \"cargo-platform\",",
          "467:  \"serde\",",
          "468:  \"serde_json\",",
          "469:  \"thiserror\",",
          "",
          "[Removed Lines]",
          "466:  \"semver 1.0.22\",",
          "",
          "[Added Lines]",
          "479:  \"semver 1.0.23\",",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "496: [[package]]",
          "497: name = \"cc\"",
          "499: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "501: dependencies = [",
          "502:  \"jobserver\",",
          "503:  \"libc\",",
          "504: ]",
          "506: [[package]]",
          "",
          "[Removed Lines]",
          "498: version = \"1.0.90\"",
          "500: checksum = \"8cd6604a82acf3039f1144f54b8eb34e91ffba622051189e71b781822d5ee1f5\"",
          "",
          "[Added Lines]",
          "511: version = \"1.0.97\"",
          "513: checksum = \"099a5357d84c4c61eb35fc8eafa9a79a902c2f76911e5747ced4e032edd8d9b4\"",
          "517:  \"once_cell\",",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "515: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "516: checksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"",
          "518: [[package]]",
          "519: name = \"chrono\"",
          "521: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "523: dependencies = [",
          "524:  \"android-tzdata\",",
          "525:  \"iana-time-zone\",",
          "526:  \"js-sys\",",
          "527:  \"num-traits\",",
          "528:  \"wasm-bindgen\",",
          "530: ]",
          "532: [[package]]",
          "",
          "[Removed Lines]",
          "520: version = \"0.4.37\"",
          "522: checksum = \"8a0d04d43504c61aa6c7531f1871dd0d418d91130162063b789da00fd7057a5e\"",
          "529:  \"windows-targets 0.52.4\",",
          "",
          "[Added Lines]",
          "532: [[package]]",
          "533: name = \"cfg_aliases\"",
          "534: version = \"0.1.1\"",
          "535: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "536: checksum = \"fd16c4719339c4530435d38e511904438d07cce7950afa3718a84ac36c10e89e\"",
          "540: version = \"0.4.38\"",
          "542: checksum = \"a21f936df1771bf62b77f047b726c4625ff2e8aa607c01ec06e5a05bd8463401\"",
          "549:  \"windows-targets 0.52.5\",",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "553: checksum = \"57663b653d948a338bfb3eeba9bb2fd5fcfaecb9e199e87e1eda4d9e8b240fd9\"",
          "554: dependencies = [",
          "555:  \"ciborium-io\",",
          "557: ]",
          "559: [[package]]",
          "",
          "[Removed Lines]",
          "556:  \"half 2.4.0\",",
          "",
          "[Added Lines]",
          "576:  \"half 2.4.1\",",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "597:  \"heck 0.4.1\",",
          "598:  \"proc-macro2\",",
          "599:  \"quote\",",
          "601: ]",
          "603: [[package]]",
          "",
          "[Removed Lines]",
          "600:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "620:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "618: [[package]]",
          "619: name = \"colorchoice\"",
          "621: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "624: [[package]]",
          "625: name = \"colored\"",
          "",
          "[Removed Lines]",
          "620: version = \"1.0.0\"",
          "622: checksum = \"acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7\"",
          "",
          "[Added Lines]",
          "640: version = \"1.0.1\"",
          "642: checksum = \"0b6a852b24ab71dffc585bcb46eaf7959d175cb865a7152e35b348d1b2960422\"",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "658: [[package]]",
          "659: name = \"comfy-table\"",
          "661: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "663: dependencies = [",
          "664:  \"crossterm\",",
          "665:  \"strum\",",
          "",
          "[Removed Lines]",
          "660: version = \"7.1.0\"",
          "662: checksum = \"7c64043d6c7b7a4c58e39e7efccfdea7b93d885a795d0c054a69dbbf4dd52686\"",
          "",
          "[Added Lines]",
          "680: version = \"7.1.1\"",
          "682: checksum = \"b34115915337defe99b2aff5c2ce6771e5fbc4079f4b506301f5cf394c8452f7\"",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "1031:  \"bitflags 2.5.0\",",
          "1032:  \"crossterm_winapi\",",
          "1033:  \"libc\",",
          "1035:  \"winapi 0.3.9\",",
          "1036: ]",
          "",
          "[Removed Lines]",
          "1034:  \"parking_lot 0.12.1\",",
          "",
          "[Added Lines]",
          "1054:  \"parking_lot 0.12.2\",",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "1088: [[package]]",
          "1089: name = \"cynic-codegen\"",
          "1091: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "1093: dependencies = [",
          "1094:  \"counter\",",
          "1095:  \"darling 0.20.8\",",
          "1097:  \"once_cell\",",
          "1098:  \"ouroboros\",",
          "1099:  \"proc-macro2\",",
          "1100:  \"quote\",",
          "1101:  \"strsim\",",
          "1103:  \"thiserror\",",
          "1104: ]",
          "1106: [[package]]",
          "1107: name = \"cynic-proc-macros\"",
          "1109: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "1111: dependencies = [",
          "1112:  \"cynic-codegen\",",
          "1113:  \"darling 0.20.8\",",
          "1114:  \"quote\",",
          "1116: ]",
          "1118: [[package]]",
          "",
          "[Removed Lines]",
          "1090: version = \"3.5.1\"",
          "1092: checksum = \"9ac40efa3e97024222fa95d4c85ce093e2337ed5cdf7279374777132b419f50c\"",
          "1096:  \"graphql-parser\",",
          "1102:  \"syn 2.0.58\",",
          "1108: version = \"3.5.1\"",
          "1110: checksum = \"ff4890059f47b6864d53231fd7d336893fc4a28bc1fff62c3ad4966a82994b84\"",
          "1115:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "1110: version = \"3.7.0\"",
          "1112: checksum = \"ac766f4d59eff577638395a36be631a098ab764f839f96b3dce814d738bd9efa\"",
          "1115:  \"cynic-parser\",",
          "1122:  \"syn 2.0.61\",",
          "1126: [[package]]",
          "1127: name = \"cynic-parser\"",
          "1128: version = \"0.2.6\"",
          "1129: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "1130: checksum = \"411ab40d3f72ca1442d50a60e572838e5a2f0719b93a77a29647117ffdf67687\"",
          "1131: dependencies = [",
          "1132:  \"indexmap 2.2.6\",",
          "1133:  \"lalrpop-util\",",
          "1134:  \"logos\",",
          "1135: ]",
          "1139: version = \"3.7.0\"",
          "1141: checksum = \"1a0c8aa1aa2e669424cfdd4a0cfbaaf5c07620bfa7f6ecee6cbc71c13f75ceae\"",
          "1146:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "1160:  \"proc-macro2\",",
          "1161:  \"quote\",",
          "1162:  \"strsim\",",
          "1164: ]",
          "1166: [[package]]",
          "",
          "[Removed Lines]",
          "1163:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "1194:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "1182: dependencies = [",
          "1183:  \"darling_core 0.20.8\",",
          "1184:  \"quote\",",
          "1186: ]",
          "1188: [[package]]",
          "",
          "[Removed Lines]",
          "1185:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "1216:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "1192: checksum = \"978747c1d849a7d2ee5e8adc0159961c48fb7e5db2f06af6723b80123bb53856\"",
          "1193: dependencies = [",
          "1194:  \"cfg-if 1.0.0\",",
          "1197:  \"once_cell\",",
          "1199: ]",
          "1201: [[package]]",
          "1202: name = \"data-encoding\"",
          "1204: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "1207: [[package]]",
          "1208: name = \"deranged\"",
          "",
          "[Removed Lines]",
          "1195:  \"hashbrown 0.14.3\",",
          "1196:  \"lock_api 0.4.11\",",
          "1198:  \"parking_lot_core 0.9.9\",",
          "1203: version = \"2.5.0\"",
          "1205: checksum = \"7e962a19be5cfc3f3bf6dd8f61eb50107f356ad6270fbb3ed41476571db78be5\"",
          "",
          "[Added Lines]",
          "1226:  \"hashbrown 0.14.5\",",
          "1227:  \"lock_api 0.4.12\",",
          "1229:  \"parking_lot_core 0.9.10\",",
          "1234: version = \"2.6.0\"",
          "1236: checksum = \"e8566979429cf69b49a5c740c60791108e86440e8be149bbea4fe54d2c32d6e2\"",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "1233: dependencies = [",
          "1234:  \"proc-macro2\",",
          "1235:  \"quote\",",
          "1237: ]",
          "1239: [[package]]",
          "",
          "[Removed Lines]",
          "1236:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "1267:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "1419:  \"anyhow\",",
          "1420:  \"bytesize\",",
          "1421:  \"once_cell\",",
          "1423:  \"rand_chacha\",",
          "1424:  \"rand_core\",",
          "1425:  \"schemars\",",
          "",
          "[Removed Lines]",
          "1422:  \"parking_lot 0.12.1\",",
          "",
          "[Added Lines]",
          "1453:  \"parking_lot 0.12.2\",",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "1428:  \"serde_path_to_error\",",
          "1429:  \"serde_yaml 0.8.26\",",
          "1430:  \"sparx\",",
          "1432:  \"url\",",
          "1433:  \"uuid\",",
          "1434:  \"wcgi-host\",",
          "",
          "[Removed Lines]",
          "1431:  \"time 0.3.34\",",
          "",
          "[Added Lines]",
          "1462:  \"time 0.3.36\",",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "1443:  \"anyhow\",",
          "1444:  \"bytesize\",",
          "1445:  \"once_cell\",",
          "1447:  \"rand_chacha\",",
          "1448:  \"rand_core\",",
          "1449:  \"schemars\",",
          "",
          "[Removed Lines]",
          "1446:  \"parking_lot 0.12.1\",",
          "",
          "[Added Lines]",
          "1477:  \"parking_lot 0.12.2\",",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "1452:  \"serde_path_to_error\",",
          "1453:  \"serde_yaml 0.8.26\",",
          "1454:  \"sparx\",",
          "1456:  \"url\",",
          "1457:  \"uuid\",",
          "1458:  \"wcgi-host\",",
          "",
          "[Removed Lines]",
          "1455:  \"time 0.3.34\",",
          "",
          "[Added Lines]",
          "1486:  \"time 0.3.36\",",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "1485: [[package]]",
          "1486: name = \"either\"",
          "1488: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "1491: [[package]]",
          "1492: name = \"encode_unicode\"",
          "",
          "[Removed Lines]",
          "1487: version = \"1.10.0\"",
          "1489: checksum = \"11157ac094ffbdde99aa67b23417ebdd801842852b500e395a45a9c0aac03e4a\"",
          "",
          "[Added Lines]",
          "1518: version = \"1.11.0\"",
          "1520: checksum = \"a47c1c47d2f5964e29c61246e81db715514cd532db6b5116a25ea3c03d6780a2\"",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "1497: [[package]]",
          "1498: name = \"encoding_rs\"",
          "1500: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "1502: dependencies = [",
          "1503:  \"cfg-if 1.0.0\",",
          "1504: ]",
          "",
          "[Removed Lines]",
          "1499: version = \"0.8.33\"",
          "1501: checksum = \"7268b386296a025e474d5140678f75d6de9493ae55a5d709eeb9dd08149945e1\"",
          "",
          "[Added Lines]",
          "1530: version = \"0.8.34\"",
          "1532: checksum = \"b45de904aa0b010bce2ab45264d0631681847fa7b6f2eaa7dab7619943bc4f59\"",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "1533:  \"num-traits\",",
          "1534:  \"proc-macro2\",",
          "1535:  \"quote\",",
          "1537: ]",
          "1539: [[package]]",
          "",
          "[Removed Lines]",
          "1536:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "1567:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "1554:  \"darling 0.20.8\",",
          "1555:  \"proc-macro2\",",
          "1556:  \"quote\",",
          "1558: ]",
          "1560: [[package]]",
          "",
          "[Removed Lines]",
          "1557:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "1588:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "1597: [[package]]",
          "1598: name = \"fastrand\"",
          "1600: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "1603: [[package]]",
          "1604: name = \"fern\"",
          "",
          "[Removed Lines]",
          "1599: version = \"2.0.2\"",
          "1601: checksum = \"658bd65b1cf4c852a3cc96f18a8ce7b5640f6b703f905c7d74532294c2a63984\"",
          "",
          "[Added Lines]",
          "1630: version = \"2.1.0\"",
          "1632: checksum = \"9fc0510504f03c51ada170672ac806f1f105a88aa97a5281117e1ddc3368e51a\"",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1641: [[package]]",
          "1642: name = \"flate2\"",
          "1644: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "1646: dependencies = [",
          "1647:  \"crc32fast\",",
          "1648:  \"miniz_oxide\",",
          "",
          "[Removed Lines]",
          "1643: version = \"1.0.28\"",
          "1645: checksum = \"46303f565772937ffe1d394a4fac6f411c6013172fadde9dcdb1e147a086940e\"",
          "",
          "[Added Lines]",
          "1674: version = \"1.0.30\"",
          "1676: checksum = \"5f54427cfd1c7829e2a139fcefea601bf088ebca651d2bf53ebc600eac295dae\"",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1790: dependencies = [",
          "1791:  \"proc-macro2\",",
          "1792:  \"quote\",",
          "1794: ]",
          "1796: [[package]]",
          "",
          "[Removed Lines]",
          "1793:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "1824:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1854: [[package]]",
          "1855: name = \"getrandom\"",
          "1857: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "1859: dependencies = [",
          "1860:  \"cfg-if 1.0.0\",",
          "1861:  \"js-sys\",",
          "",
          "[Removed Lines]",
          "1856: version = \"0.2.12\"",
          "1858: checksum = \"190092ea657667030ac6a35e305e62fc4dd69fd98ac98631e5d3a2b1575a12b5\"",
          "",
          "[Added Lines]",
          "1887: version = \"0.2.15\"",
          "1889: checksum = \"c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7\"",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1872: dependencies = [",
          "1873:  \"proc-macro2\",",
          "1874:  \"quote\",",
          "1876: ]",
          "1878: [[package]]",
          "",
          "[Removed Lines]",
          "1875:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "1906:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "2034: [[package]]",
          "2035: name = \"half\"",
          "2037: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "2039: dependencies = [",
          "2040:  \"cfg-if 1.0.0\",",
          "2041:  \"crunchy\",",
          "",
          "[Removed Lines]",
          "2036: version = \"2.4.0\"",
          "2038: checksum = \"b5eceaaeec696539ddaf7b333340f1af35a5aa87ae3e4f3ead0532f72affab2e\"",
          "",
          "[Added Lines]",
          "2067: version = \"2.4.1\"",
          "2069: checksum = \"6dd08c532ae367adf81c312a4580bc67f1d0fe8bc9c460520283f4c0ff277888\"",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "2091: [[package]]",
          "2092: name = \"hashbrown\"",
          "2094: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "2096: dependencies = [",
          "2097:  \"ahash 0.8.11\",",
          "2098:  \"allocator-api2\",",
          "",
          "[Removed Lines]",
          "2093: version = \"0.14.3\"",
          "2095: checksum = \"290f1a1d9242c78d09ce40a5e87e7554ee637af1351968159f4952f028f75604\"",
          "",
          "[Added Lines]",
          "2124: version = \"0.14.5\"",
          "2126: checksum = \"e5274423e17b7c9fc20b6e7e208532f9b19825d82dfd615708b70edd83df41f1\"",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "2104: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "2105: checksum = \"e8094feaf31ff591f651a2664fb9cfd92bba7a60ce3197265e9482ebe753c8f7\"",
          "2106: dependencies = [",
          "2108: ]",
          "2110: [[package]]",
          "",
          "[Removed Lines]",
          "2107:  \"hashbrown 0.14.3\",",
          "",
          "[Added Lines]",
          "2138:  \"hashbrown 0.14.5\",",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "2229:  \"httpdate\",",
          "2230:  \"itoa\",",
          "2231:  \"pin-project-lite\",",
          "2233:  \"tokio 1.37.0\",",
          "2234:  \"tower-service\",",
          "2235:  \"tracing\",",
          "",
          "[Removed Lines]",
          "2232:  \"socket2 0.5.6\",",
          "",
          "[Added Lines]",
          "2263:  \"socket2 0.5.7\",",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "2245:  \"futures-util\",",
          "2246:  \"http\",",
          "2247:  \"hyper\",",
          "2249:  \"tokio 1.37.0\",",
          "2250:  \"tokio-rustls\",",
          "2251: ]",
          "",
          "[Removed Lines]",
          "2248:  \"rustls 0.21.11\",",
          "",
          "[Added Lines]",
          "2279:  \"rustls 0.21.12\",",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "2366: checksum = \"168fb715dda47215e360912c096649d23d58bf392ac62f73919e831745e40f26\"",
          "2367: dependencies = [",
          "2368:  \"equivalent\",",
          "2370:  \"serde\",",
          "2371: ]",
          "",
          "[Removed Lines]",
          "2369:  \"hashbrown 0.14.3\",",
          "",
          "[Added Lines]",
          "2400:  \"hashbrown 0.14.5\",",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "2394:  \"libc\",",
          "2395:  \"llvm-sys\",",
          "2396:  \"once_cell\",",
          "2398: ]",
          "2400: [[package]]",
          "",
          "[Removed Lines]",
          "2397:  \"parking_lot 0.12.1\",",
          "",
          "[Added Lines]",
          "2428:  \"parking_lot 0.12.2\",",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "2519:  \"windows-sys 0.52.0\",",
          "2520: ]",
          "2522: [[package]]",
          "2523: name = \"itertools\"",
          "2524: version = \"0.10.5\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2553: [[package]]",
          "2554: name = \"is_terminal_polyfill\"",
          "2555: version = \"1.70.0\"",
          "2556: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "2557: checksum = \"f8478577c03552c21db0e2724ffb8986a5ce7af88107e6be5d2ee6e158c12800\"",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "2546: [[package]]",
          "2547: name = \"jobserver\"",
          "2549: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "2551: dependencies = [",
          "2552:  \"libc\",",
          "2553: ]",
          "",
          "[Removed Lines]",
          "2548: version = \"0.1.28\"",
          "2550: checksum = \"ab46a6e9526ddef3ae7f787c06f0f2600639ba80ea3eade3d8e670a2230f51d6\"",
          "",
          "[Added Lines]",
          "2585: version = \"0.1.31\"",
          "2587: checksum = \"d2b099aaa34a9751c5bf0878add70444e1ed2dd73f347be99003d4577277de6e\"",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "2571:  \"winapi-build\",",
          "2572: ]",
          "2574: [[package]]",
          "2575: name = \"lazy_static\"",
          "2576: version = \"1.4.0\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2611: [[package]]",
          "2612: name = \"lalrpop-util\"",
          "2613: version = \"0.20.2\"",
          "2614: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "2615: checksum = \"507460a910eb7b32ee961886ff48539633b788a36b65692b95f225b844c82553\"",
          "2616: dependencies = [",
          "2617:  \"regex-automata 0.4.6\",",
          "2618: ]",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "2608: [[package]]",
          "2609: name = \"libc\"",
          "2611: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "2614: [[package]]",
          "2615: name = \"libfuzzer-sys\"",
          "",
          "[Removed Lines]",
          "2610: version = \"0.2.153\"",
          "2612: checksum = \"9c198f91728a82281a64e1f4f9eeb25d82cb32a5de251c6bd1b5154d63a8e7bd\"",
          "",
          "[Added Lines]",
          "2656: version = \"0.2.154\"",
          "2658: checksum = \"ae743338b92ff9146ce83992f766a31066a91a8c84a45e0e9f21e7cf6de6d346\"",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "2680:  \"lazy_static\",",
          "2681:  \"libc\",",
          "2682:  \"regex\",",
          "2684: ]",
          "2686: [[package]]",
          "",
          "[Removed Lines]",
          "2683:  \"semver 1.0.22\",",
          "",
          "[Added Lines]",
          "2729:  \"semver 1.0.23\",",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "2695: [[package]]",
          "2696: name = \"lock_api\"",
          "2698: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "2700: dependencies = [",
          "2701:  \"autocfg\",",
          "2702:  \"scopeguard\",",
          "",
          "[Removed Lines]",
          "2697: version = \"0.4.11\"",
          "2699: checksum = \"3c168f8615b12bc01f9c17e2eb0cc07dcae1940121185446edc3744920e8ef45\"",
          "",
          "[Added Lines]",
          "2743: version = \"0.4.12\"",
          "2745: checksum = \"07af8b9cdd281b7915f413fa73f29ebd5d55d0d3f0155584dade1ff18cea1b17\"",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "2717: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "2718: checksum = \"90ed8c1e510134f979dbc4f070f87d4313098b704861a105fe34231c70a3901c\"",
          "2720: [[package]]",
          "2721: name = \"lz4_flex\"",
          "2722: version = \"0.11.3\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2766: [[package]]",
          "2767: name = \"logos\"",
          "2768: version = \"0.13.0\"",
          "2769: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "2770: checksum = \"c000ca4d908ff18ac99b93a062cb8958d331c3220719c52e77cb19cc6ac5d2c1\"",
          "2771: dependencies = [",
          "2772:  \"logos-derive\",",
          "2773: ]",
          "2775: [[package]]",
          "2776: name = \"logos-codegen\"",
          "2777: version = \"0.13.0\"",
          "2778: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "2779: checksum = \"dc487311295e0002e452025d6b580b77bb17286de87b57138f3b5db711cded68\"",
          "2780: dependencies = [",
          "2781:  \"beef\",",
          "2782:  \"fnv\",",
          "2783:  \"proc-macro2\",",
          "2784:  \"quote\",",
          "2785:  \"regex-syntax 0.6.29\",",
          "2786:  \"syn 2.0.61\",",
          "2787: ]",
          "2789: [[package]]",
          "2790: name = \"logos-derive\"",
          "2791: version = \"0.13.0\"",
          "2792: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "2793: checksum = \"dbfc0d229f1f42d790440136d941afd806bc9e949e2bcb8faa813b0f00d1267e\"",
          "2794: dependencies = [",
          "2795:  \"logos-codegen\",",
          "2796: ]",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "2739: [[package]]",
          "2740: name = \"mac_address\"",
          "2742: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "2744: dependencies = [",
          "2746:  \"winapi 0.3.9\",",
          "2747: ]",
          "",
          "[Removed Lines]",
          "2741: version = \"1.1.5\"",
          "2743: checksum = \"4863ee94f19ed315bf3bc00299338d857d4b5bc856af375cc97d237382ad3856\"",
          "2745:  \"nix 0.23.2\",",
          "",
          "[Added Lines]",
          "2819: version = \"1.1.6\"",
          "2821: checksum = \"5aa12182b93606fff55b70a5cfe6130eaf7407c2ea4f2c2bcc8b113b67c9928f\"",
          "2823:  \"nix 0.28.0\",",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "2840:  \"autocfg\",",
          "2841: ]",
          "2852: [[package]]",
          "2853: name = \"memoffset\"",
          "2854: version = \"0.7.1\"",
          "",
          "[Removed Lines]",
          "2843: [[package]]",
          "2844: name = \"memoffset\"",
          "2845: version = \"0.6.5\"",
          "2846: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "2847: checksum = \"5aa361d4faea93603064a027415f07bd8e1d5c88c9fbf68bf56a285428fd79ce\"",
          "2848: dependencies = [",
          "2849:  \"autocfg\",",
          "2850: ]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "3004: [[package]]",
          "3005: name = \"nix\"",
          "3007: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3009: dependencies = [",
          "3010:  \"bitflags 1.3.2\",",
          "3012:  \"cfg-if 1.0.0\",",
          "3013:  \"libc\",",
          "3015: ]",
          "3017: [[package]]",
          "3018: name = \"nix\"",
          "3020: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3022: dependencies = [",
          "3024:  \"cfg-if 1.0.0\",",
          "3025:  \"libc\",",
          "3028: ]",
          "3030: [[package]]",
          "",
          "[Removed Lines]",
          "3006: version = \"0.23.2\"",
          "3008: checksum = \"8f3790c00a0150112de0f4cd161e3d7fc4b2d8a5542ffc35f099a2562aecb35c\"",
          "3011:  \"cc\",",
          "3014:  \"memoffset 0.6.5\",",
          "3019: version = \"0.26.4\"",
          "3021: checksum = \"598beaf3cc6fdd9a5dfb1630c2800c7acd31df7aaf0f565796fba2b53ca1af1b\"",
          "3023:  \"bitflags 1.3.2\",",
          "3026:  \"memoffset 0.7.1\",",
          "3027:  \"pin-utils\",",
          "",
          "[Added Lines]",
          "3075: version = \"0.26.4\"",
          "3077: checksum = \"598beaf3cc6fdd9a5dfb1630c2800c7acd31df7aaf0f565796fba2b53ca1af1b\"",
          "3082:  \"memoffset 0.7.1\",",
          "3083:  \"pin-utils\",",
          "3088: version = \"0.28.0\"",
          "3090: checksum = \"ab2156c4fce2f8df6c499cc1c763e4394b7482525bf2a9701c9d79d215f519e4\"",
          "3092:  \"bitflags 2.5.0\",",
          "3094:  \"cfg_aliases\",",
          "3096:  \"memoffset 0.9.1\",",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "3066: [[package]]",
          "3067: name = \"num-bigint\"",
          "3069: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3071: dependencies = [",
          "3073:  \"num-integer\",",
          "3074:  \"num-traits\",",
          "3075: ]",
          "",
          "[Removed Lines]",
          "3068: version = \"0.4.4\"",
          "3070: checksum = \"608e7659b5c3d7cba262d894801b9ec9d00de989e8a82bd4bef91d08da45cdc0\"",
          "3072:  \"autocfg\",",
          "",
          "[Added Lines]",
          "3137: version = \"0.4.5\"",
          "3139: checksum = \"c165a9ab64cf766f73521c0dd2cfdff64f488b8f0b3e621face3462d3db536d7\"",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "3092: [[package]]",
          "3093: name = \"num-traits\"",
          "3095: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3097: dependencies = [",
          "3098:  \"autocfg\",",
          "3099: ]",
          "",
          "[Removed Lines]",
          "3094: version = \"0.2.18\"",
          "3096: checksum = \"da0df0e5185db44f69b44f26786fe401b6c293d1907744beaa7fa62b2e5a517a\"",
          "",
          "[Added Lines]",
          "3162: version = \"0.2.19\"",
          "3164: checksum = \"071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841\"",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "3223: dependencies = [",
          "3224:  \"proc-macro2\",",
          "3225:  \"quote\",",
          "3227: ]",
          "3229: [[package]]",
          "",
          "[Removed Lines]",
          "3226:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "3294:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "3266:  \"proc-macro2\",",
          "3267:  \"proc-macro2-diagnostics\",",
          "3268:  \"quote\",",
          "3270: ]",
          "3272: [[package]]",
          "",
          "[Removed Lines]",
          "3269:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "3337:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "3289: [[package]]",
          "3290: name = \"parking_lot\"",
          "3292: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3294: dependencies = [",
          "3297: ]",
          "3299: [[package]]",
          "",
          "[Removed Lines]",
          "3291: version = \"0.12.1\"",
          "3293: checksum = \"3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f\"",
          "3295:  \"lock_api 0.4.11\",",
          "3296:  \"parking_lot_core 0.9.9\",",
          "",
          "[Added Lines]",
          "3359: version = \"0.12.2\"",
          "3361: checksum = \"7e4af0ca4f6caed20e900d564c242b8e5d4903fdacf31d3daf527b66fe6f42fb\"",
          "3363:  \"lock_api 0.4.12\",",
          "3364:  \"parking_lot_core 0.9.10\",",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "3314: [[package]]",
          "3315: name = \"parking_lot_core\"",
          "3317: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3319: dependencies = [",
          "3320:  \"cfg-if 1.0.0\",",
          "3321:  \"libc\",",
          "3323:  \"smallvec 1.13.2\",",
          "3325: ]",
          "3327: [[package]]",
          "3328: name = \"paste\"",
          "3330: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3333: [[package]]",
          "3334: name = \"path-clean\"",
          "",
          "[Removed Lines]",
          "3316: version = \"0.9.9\"",
          "3318: checksum = \"4c42a9226546d68acdd9c0a280d17ce19bfe27a46bf68784e4066115788d008e\"",
          "3322:  \"redox_syscall 0.4.1\",",
          "3324:  \"windows-targets 0.48.5\",",
          "3329: version = \"1.0.14\"",
          "3331: checksum = \"de3145af08024dea9fa9914f381a17b8fc6034dfb00f3a84013f7ff43f29ed4c\"",
          "",
          "[Added Lines]",
          "3384: version = \"0.9.10\"",
          "3386: checksum = \"1e401f977ab385c9e4e3ab30627d6f26d00e2c73eef317493c4ec6d468726cf8\"",
          "3390:  \"redox_syscall 0.5.1\",",
          "3392:  \"windows-targets 0.52.5\",",
          "3397: version = \"1.0.15\"",
          "3399: checksum = \"57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a\"",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "3361: [[package]]",
          "3362: name = \"pest\"",
          "3364: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3366: dependencies = [",
          "3367:  \"memchr\",",
          "3368:  \"thiserror\",",
          "",
          "[Removed Lines]",
          "3363: version = \"2.7.9\"",
          "3365: checksum = \"311fb059dee1a7b802f036316d790138c613a4e8b180c822e3925a662e9f0c95\"",
          "",
          "[Added Lines]",
          "3431: version = \"2.7.10\"",
          "3433: checksum = \"560131c633294438da9f7c4b08189194b20946c8274c6b9e38881a7874dc8ee8\"",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "3372: [[package]]",
          "3373: name = \"pest_derive\"",
          "3375: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3377: dependencies = [",
          "3378:  \"pest\",",
          "3379:  \"pest_generator\",",
          "",
          "[Removed Lines]",
          "3374: version = \"2.7.9\"",
          "3376: checksum = \"f73541b156d32197eecda1a4014d7f868fd2bcb3c550d5386087cfba442bf69c\"",
          "",
          "[Added Lines]",
          "3442: version = \"2.7.10\"",
          "3444: checksum = \"26293c9193fbca7b1a3bf9b79dc1e388e927e6cacaa78b4a3ab705a1d3d41459\"",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "3382: [[package]]",
          "3383: name = \"pest_generator\"",
          "3385: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3387: dependencies = [",
          "3388:  \"pest\",",
          "3389:  \"pest_meta\",",
          "3390:  \"proc-macro2\",",
          "3391:  \"quote\",",
          "3393: ]",
          "3395: [[package]]",
          "3396: name = \"pest_meta\"",
          "3398: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3400: dependencies = [",
          "3401:  \"once_cell\",",
          "3402:  \"pest\",",
          "",
          "[Removed Lines]",
          "3384: version = \"2.7.9\"",
          "3386: checksum = \"c35eeed0a3fab112f75165fdc026b3913f4183133f19b49be773ac9ea966e8bd\"",
          "3392:  \"syn 2.0.58\",",
          "3397: version = \"2.7.9\"",
          "3399: checksum = \"2adbf29bb9776f28caece835398781ab24435585fe0d4dc1374a61db5accedca\"",
          "",
          "[Added Lines]",
          "3452: version = \"2.7.10\"",
          "3454: checksum = \"3ec22af7d3fb470a85dd2ca96b7c577a1eb4ef6f1683a9fe9a8c16e136c04687\"",
          "3460:  \"syn 2.0.61\",",
          "3465: version = \"2.7.10\"",
          "3467: checksum = \"d7a240022f37c361ec1878d646fc5b7d7c4d28d5946e1a80ad5a7a4f4ca0bdcd\"",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "3430: dependencies = [",
          "3431:  \"proc-macro2\",",
          "3432:  \"quote\",",
          "3434: ]",
          "3436: [[package]]",
          "",
          "[Removed Lines]",
          "3433:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "3501:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "3566: [[package]]",
          "3567: name = \"proc-macro2\"",
          "3569: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3571: dependencies = [",
          "3572:  \"unicode-ident\",",
          "3573: ]",
          "",
          "[Removed Lines]",
          "3568: version = \"1.0.79\"",
          "3570: checksum = \"e835ff2298f5721608eb1a980ecaee1aef2c132bf95ecc026a11b7bf3c01c02e\"",
          "",
          "[Added Lines]",
          "3636: version = \"1.0.82\"",
          "3638: checksum = \"8ad3d49ab951a01fbaafe34f2ec74122942fe18a3f9814c3268f1bb72042131b\"",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "3580: dependencies = [",
          "3581:  \"proc-macro2\",",
          "3582:  \"quote\",",
          "3584:  \"version_check\",",
          "3585:  \"yansi 1.0.1\",",
          "3586: ]",
          "",
          "[Removed Lines]",
          "3583:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "3651:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "3649: [[package]]",
          "3650: name = \"quote\"",
          "3652: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3654: dependencies = [",
          "3655:  \"proc-macro2\",",
          "3656: ]",
          "",
          "[Removed Lines]",
          "3651: version = \"1.0.35\"",
          "3653: checksum = \"291ec9ab5efd934aaf503a6466c5d5251535d108ee747472c3977cc5acc868ef\"",
          "",
          "[Added Lines]",
          "3719: version = \"1.0.36\"",
          "3721: checksum = \"0fa76aaf39101c457836aec0ce2316dbdc3ab723cdda1c6bd4e6ad4208acaca7\"",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "3726:  \"bitflags 1.3.2\",",
          "3727: ]",
          "3729: [[package]]",
          "3730: name = \"redox_users\"",
          "3731: version = \"0.4.5\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3797: [[package]]",
          "3798: name = \"redox_syscall\"",
          "3799: version = \"0.5.1\"",
          "3800: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3801: checksum = \"469052894dcb553421e483e4209ee581a45100d31b4018de03e5a7ad86374a7e\"",
          "3802: dependencies = [",
          "3803:  \"bitflags 2.5.0\",",
          "3804: ]",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "3740: [[package]]",
          "3741: name = \"ref-cast\"",
          "3743: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3745: dependencies = [",
          "3746:  \"ref-cast-impl\",",
          "3747: ]",
          "3749: [[package]]",
          "3750: name = \"ref-cast-impl\"",
          "3752: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3754: dependencies = [",
          "3755:  \"proc-macro2\",",
          "3756:  \"quote\",",
          "3758: ]",
          "3760: [[package]]",
          "",
          "[Removed Lines]",
          "3742: version = \"1.0.22\"",
          "3744: checksum = \"c4846d4c50d1721b1a3bef8af76924eef20d5e723647333798c1b519b3a9473f\"",
          "3751: version = \"1.0.22\"",
          "3753: checksum = \"5fddb4f8d99b0a2ebafc65a87a69a7b9875e4b1ae1f00db265d300ef7f28bccc\"",
          "3757:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "3819: version = \"1.0.23\"",
          "3821: checksum = \"ccf0a6f84d5f1d581da8b41b47ec8600871962f2a528115b542b362d4b744931\"",
          "3828: version = \"1.0.23\"",
          "3830: checksum = \"bcc303e793d3734489387d205e9b186fac9c6cfacedd98cbb2e8a5943595f3e6\"",
          "3834:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "3867:  \"once_cell\",",
          "3868:  \"percent-encoding\",",
          "3869:  \"pin-project-lite\",",
          "3871:  \"rustls-pemfile\",",
          "3872:  \"serde\",",
          "3873:  \"serde_json\",",
          "",
          "[Removed Lines]",
          "3870:  \"rustls 0.21.11\",",
          "",
          "[Added Lines]",
          "3947:  \"rustls 0.21.12\",",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "3937: [[package]]",
          "3938: name = \"rmp\"",
          "3940: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "3942: dependencies = [",
          "3943:  \"byteorder\",",
          "3944:  \"num-traits\",",
          "",
          "[Removed Lines]",
          "3939: version = \"0.8.12\"",
          "3941: checksum = \"7f9860a6cc38ed1da53456442089b4dfa35e7cedaa326df63017af88385e6b20\"",
          "",
          "[Added Lines]",
          "4016: version = \"0.8.14\"",
          "4018: checksum = \"228ed7c16fa39782c3b3468e974aec2795e9089153cd08ee2e9aefb3613334c4\"",
          "",
          "---------------",
          "--- Hunk 69 ---",
          "[Context before]",
          "4021: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4022: checksum = \"bfa0f585226d2e68097d4f95d113b15b83a82e819ab25717ec0590d9584ef366\"",
          "4023: dependencies = [",
          "4025: ]",
          "4027: [[package]]",
          "",
          "[Removed Lines]",
          "4024:  \"semver 1.0.22\",",
          "",
          "[Added Lines]",
          "4101:  \"semver 1.0.23\",",
          "",
          "---------------",
          "--- Hunk 70 ---",
          "[Context before]",
          "4039: [[package]]",
          "4040: name = \"rustix\"",
          "4042: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4044: dependencies = [",
          "4045:  \"bitflags 2.5.0\",",
          "4046:  \"errno\",",
          "",
          "[Removed Lines]",
          "4041: version = \"0.38.32\"",
          "4043: checksum = \"65e04861e65f21776e67888bfbea442b3642beaa0138fdb1dd7a84a52dffdb89\"",
          "",
          "[Added Lines]",
          "4118: version = \"0.38.34\"",
          "4120: checksum = \"70dc5ec042f7a43c4a73241207cecc9873a06d45debb38b329f8541d85c2730f\"",
          "",
          "---------------",
          "--- Hunk 71 ---",
          "[Context before]",
          "4052: [[package]]",
          "4053: name = \"rustls\"",
          "4055: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4057: dependencies = [",
          "4058:  \"log 0.4.21\",",
          "4059:  \"ring\",",
          "",
          "[Removed Lines]",
          "4054: version = \"0.21.11\"",
          "4056: checksum = \"7fecbfb7b1444f477b345853b1fce097a2c6fb637b2bfb87e6bc5db0f043fae4\"",
          "",
          "[Added Lines]",
          "4131: version = \"0.21.12\"",
          "4133: checksum = \"3f56a14d1f48b391359b22f731fd4bd7e43c97f3c50eee276f3aa09c94784d3e\"",
          "",
          "---------------",
          "--- Hunk 72 ---",
          "[Context before]",
          "4070:  \"log 0.4.21\",",
          "4071:  \"ring\",",
          "4072:  \"rustls-pki-types\",",
          "4074:  \"subtle\",",
          "4075:  \"zeroize\",",
          "4076: ]",
          "",
          "[Removed Lines]",
          "4073:  \"rustls-webpki 0.102.2\",",
          "",
          "[Added Lines]",
          "4150:  \"rustls-webpki 0.102.3\",",
          "",
          "---------------",
          "--- Hunk 73 ---",
          "[Context before]",
          "4099: [[package]]",
          "4100: name = \"rustls-pki-types\"",
          "4102: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4105: [[package]]",
          "4106: name = \"rustls-webpki\"",
          "",
          "[Removed Lines]",
          "4101: version = \"1.4.1\"",
          "4103: checksum = \"ecd36cc4259e3e4514335c4a138c6b43171a8d61d8f5c9348f9fc7529416f247\"",
          "",
          "[Added Lines]",
          "4178: version = \"1.6.0\"",
          "4180: checksum = \"51f344d206c5e1b010eec27349b815a4805f70a778895959d70b74b9b529b30a\"",
          "",
          "---------------",
          "--- Hunk 74 ---",
          "[Context before]",
          "4115: [[package]]",
          "4116: name = \"rustls-webpki\"",
          "4118: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4120: dependencies = [",
          "4121:  \"ring\",",
          "4122:  \"rustls-pki-types\",",
          "",
          "[Removed Lines]",
          "4117: version = \"0.102.2\"",
          "4119: checksum = \"faaa0a62740bedb9b2ef5afa303da42764c012f743917351dc9a237ea1663610\"",
          "",
          "[Added Lines]",
          "4194: version = \"0.102.3\"",
          "4196: checksum = \"f3bce581c0dd41bce533ce695a1437fa16a7ab5ac3ccfa99fe1a620a7885eabf\"",
          "",
          "---------------",
          "--- Hunk 75 ---",
          "[Context before]",
          "4126: [[package]]",
          "4127: name = \"rustversion\"",
          "4129: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4132: [[package]]",
          "4133: name = \"rusty_jsc\"",
          "",
          "[Removed Lines]",
          "4128: version = \"1.0.14\"",
          "4130: checksum = \"7ffc183a10b4478d04cbbbfc96d0873219d962dd5accaff2ffbd4ceb7df837f4\"",
          "",
          "[Added Lines]",
          "4205: version = \"1.0.16\"",
          "4207: checksum = \"092474d1a01ea8278f69e6a358998405fae5b8b963ddaeb2b0b04a128bf1dfb0\"",
          "",
          "---------------",
          "--- Hunk 76 ---",
          "[Context before]",
          "4186: [[package]]",
          "4187: name = \"ryu\"",
          "4189: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4192: [[package]]",
          "4193: name = \"salsa20\"",
          "",
          "[Removed Lines]",
          "4188: version = \"1.0.17\"",
          "4190: checksum = \"e86697c916019a8588c99b5fac3cead74ec0b4b819707a682fd4d23fa0ce1ba1\"",
          "",
          "[Added Lines]",
          "4265: version = \"1.0.18\"",
          "4267: checksum = \"f3cb5ba0dc43242ce17de99c180e96db90b235b8a9fdc9543c96d2209116bd9f\"",
          "",
          "---------------",
          "--- Hunk 77 ---",
          "[Context before]",
          "4219: [[package]]",
          "4220: name = \"schemars\"",
          "4222: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4224: dependencies = [",
          "4225:  \"dyn-clone\",",
          "4226:  \"schemars_derive\",",
          "",
          "[Removed Lines]",
          "4221: version = \"0.8.16\"",
          "4223: checksum = \"45a28f4c49489add4ce10783f7911893516f15afe45d015608d41faca6bc4d29\"",
          "",
          "[Added Lines]",
          "4298: version = \"0.8.19\"",
          "4300: checksum = \"fc6e7ed6919cb46507fb01ff1654309219f62b4d603822501b0b80d42f6f21ef\"",
          "",
          "---------------",
          "--- Hunk 78 ---",
          "[Context before]",
          "4233: [[package]]",
          "4234: name = \"schemars_derive\"",
          "4236: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4238: dependencies = [",
          "4239:  \"proc-macro2\",",
          "4240:  \"quote\",",
          "4241:  \"serde_derive_internals\",",
          "4243: ]",
          "4245: [[package]]",
          "",
          "[Removed Lines]",
          "4235: version = \"0.8.16\"",
          "4237: checksum = \"c767fd6fa65d9ccf9cf026122c1b555f2ef9a4f0cea69da4d7dbc3e258d30967\"",
          "4242:  \"syn 1.0.109\",",
          "",
          "[Added Lines]",
          "4312: version = \"0.8.19\"",
          "4314: checksum = \"185f2b7aa7e02d418e453790dde16890256bbd2bcd04b7dc5348811052b53f49\"",
          "4319:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 79 ---",
          "[Context before]",
          "4290: [[package]]",
          "4291: name = \"security-framework\"",
          "4293: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4295: dependencies = [",
          "4297:  \"core-foundation\",",
          "4298:  \"core-foundation-sys\",",
          "4299:  \"libc\",",
          "",
          "[Removed Lines]",
          "4292: version = \"2.10.0\"",
          "4294: checksum = \"770452e37cad93e0a50d5abc3990d2bc351c36d0328f86cefec2f2fb206eaef6\"",
          "4296:  \"bitflags 1.3.2\",",
          "",
          "[Added Lines]",
          "4369: version = \"2.11.0\"",
          "4371: checksum = \"c627723fd09706bacdb5cf41499e95098555af3c3c29d014dc3c458ef6be11c0\"",
          "4373:  \"bitflags 2.5.0\",",
          "",
          "---------------",
          "--- Hunk 80 ---",
          "[Context before]",
          "4303: [[package]]",
          "4304: name = \"security-framework-sys\"",
          "4306: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4308: dependencies = [",
          "4309:  \"core-foundation-sys\",",
          "4310:  \"libc\",",
          "",
          "[Removed Lines]",
          "4305: version = \"2.10.0\"",
          "4307: checksum = \"41f3cc463c0ef97e11c3461a9d3787412d30e8e7eb907c79180c4a57bf7c04ef\"",
          "",
          "[Added Lines]",
          "4382: version = \"2.11.0\"",
          "4384: checksum = \"317936bbbd05227752583946b9e66d7ce3b489f84e11a94a510b4437fef407d7\"",
          "",
          "---------------",
          "--- Hunk 81 ---",
          "[Context before]",
          "4313: [[package]]",
          "4314: name = \"self_cell\"",
          "4316: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4319: [[package]]",
          "4320: name = \"semver\"",
          "",
          "[Removed Lines]",
          "4315: version = \"1.0.3\"",
          "4317: checksum = \"58bf37232d3bb9a2c4e641ca2a11d83b5062066f88df7fed36c28772046d65ba\"",
          "",
          "[Added Lines]",
          "4392: version = \"1.0.4\"",
          "4394: checksum = \"d369a96f978623eb3dc28807c4852d6cc617fed53da5d3c400feff1ef34a714a\"",
          "",
          "---------------",
          "--- Hunk 82 ---",
          "[Context before]",
          "4337: [[package]]",
          "4338: name = \"semver\"",
          "4340: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4342: dependencies = [",
          "4343:  \"serde\",",
          "4344: ]",
          "",
          "[Removed Lines]",
          "4339: version = \"1.0.22\"",
          "4341: checksum = \"92d43fe69e652f3df9bdc2b85b2854a0825b86e4fb76bc44d945137d053639ca\"",
          "",
          "[Added Lines]",
          "4416: version = \"1.0.23\"",
          "4418: checksum = \"61697e0a1c7e512e84a621326239844a24d8207b4669b41bc18b32ea5cbf988b\"",
          "",
          "---------------",
          "--- Hunk 83 ---",
          "[Context before]",
          "4361: [[package]]",
          "4362: name = \"serde\"",
          "4364: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4366: dependencies = [",
          "4367:  \"serde_derive\",",
          "4368: ]",
          "",
          "[Removed Lines]",
          "4363: version = \"1.0.197\"",
          "4365: checksum = \"3fb1c873e1b9b056a4dc4c0c198b24c3ffa059243875552b2bd0933b1aee4ce2\"",
          "",
          "[Added Lines]",
          "4440: version = \"1.0.200\"",
          "4442: checksum = \"ddc6f9cc94d67c0e21aaf7eda3a010fd3af78ebf6e096aa6e2e13c79749cce4f\"",
          "",
          "---------------",
          "--- Hunk 84 ---",
          "[Context before]",
          "4400: [[package]]",
          "4401: name = \"serde_derive\"",
          "4403: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4405: dependencies = [",
          "4406:  \"proc-macro2\",",
          "4407:  \"quote\",",
          "4409: ]",
          "4411: [[package]]",
          "4412: name = \"serde_derive_internals\"",
          "4414: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4416: dependencies = [",
          "4417:  \"proc-macro2\",",
          "4418:  \"quote\",",
          "4420: ]",
          "4422: [[package]]",
          "",
          "[Removed Lines]",
          "4402: version = \"1.0.197\"",
          "4404: checksum = \"7eb0b34b42edc17f6b7cac84a52a1c5f0e1bb2227e997ca9011ea3dd34e8610b\"",
          "4408:  \"syn 2.0.58\",",
          "4413: version = \"0.26.0\"",
          "4415: checksum = \"85bf8229e7920a9f636479437026331ce11aa132b4dde37d121944a44d6e5f3c\"",
          "4419:  \"syn 1.0.109\",",
          "",
          "[Added Lines]",
          "4479: version = \"1.0.200\"",
          "4481: checksum = \"856f046b9400cee3c8c94ed572ecdb752444c24528c035cd35882aad6f492bcb\"",
          "4485:  \"syn 2.0.61\",",
          "4490: version = \"0.29.0\"",
          "4492: checksum = \"330f01ce65a3a5fe59a60c82f3c9a024b573b8a6e875bd233fe5f934e71d54e3\"",
          "4496:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 85 ---",
          "[Context before]",
          "4496:  \"futures 0.3.30\",",
          "4497:  \"lazy_static\",",
          "4498:  \"log 0.4.21\",",
          "4500:  \"serial_test_derive\",",
          "4501: ]",
          "",
          "[Removed Lines]",
          "4499:  \"parking_lot 0.12.1\",",
          "",
          "[Added Lines]",
          "4576:  \"parking_lot 0.12.2\",",
          "",
          "---------------",
          "--- Hunk 86 ---",
          "[Context before]",
          "4508: dependencies = [",
          "4509:  \"proc-macro2\",",
          "4510:  \"quote\",",
          "4512: ]",
          "4514: [[package]]",
          "",
          "[Removed Lines]",
          "4511:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "4588:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 87 ---",
          "[Context before]",
          "4561: [[package]]",
          "4562: name = \"signal-hook-registry\"",
          "4564: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4566: dependencies = [",
          "4567:  \"libc\",",
          "4568: ]",
          "",
          "[Removed Lines]",
          "4563: version = \"1.4.1\"",
          "4565: checksum = \"d8229b473baa5980ac72ef434c4415e70c4b5e71b423043adb4ba059f89c99a1\"",
          "",
          "[Added Lines]",
          "4640: version = \"1.4.2\"",
          "4642: checksum = \"a9e9e0b4211b72e7b8b6e85c807d36c212bdb33ea8587f7569562a84df5465b1\"",
          "",
          "---------------",
          "--- Hunk 88 ---",
          "[Context before]",
          "4633: [[package]]",
          "4634: name = \"socket2\"",
          "4636: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4638: dependencies = [",
          "4639:  \"libc\",",
          "4640:  \"windows-sys 0.52.0\",",
          "",
          "[Removed Lines]",
          "4635: version = \"0.5.6\"",
          "4637: checksum = \"05ffd9c0a93b7543e062e759284fcf5f5e3b098501104bfbdde4d404db792871\"",
          "",
          "[Added Lines]",
          "4712: version = \"0.5.7\"",
          "4714: checksum = \"ce305eb0b4296696835b71df73eb912e0f1ffd2556a501fcede6e0c50349191c\"",
          "",
          "---------------",
          "--- Hunk 89 ---",
          "[Context before]",
          "4655: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4656: checksum = \"6980e8d7511241f8acf4aebddbb1ff938df5eebe98691418c4468d0b72a96a67\"",
          "4657: dependencies = [",
          "4659: ]",
          "4661: [[package]]",
          "",
          "[Removed Lines]",
          "4658:  \"lock_api 0.4.11\",",
          "",
          "[Added Lines]",
          "4735:  \"lock_api 0.4.12\",",
          "",
          "---------------",
          "--- Hunk 90 ---",
          "[Context before]",
          "4679: [[package]]",
          "4680: name = \"strum\"",
          "4682: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4685: [[package]]",
          "4686: name = \"strum_macros\"",
          "4688: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4690: dependencies = [",
          "4691:  \"heck 0.4.1\",",
          "4692:  \"proc-macro2\",",
          "4693:  \"quote\",",
          "4694:  \"rustversion\",",
          "4696: ]",
          "4698: [[package]]",
          "",
          "[Removed Lines]",
          "4681: version = \"0.25.0\"",
          "4683: checksum = \"290d54ea6f91c969195bdbcd7442c8c2a2ba87da8bf60a7ee86a235d4bc1e125\"",
          "4687: version = \"0.25.3\"",
          "4689: checksum = \"23dc1fa9ac9c169a78ba62f0b841814b7abae11bdd047b9c58f893439e309ea0\"",
          "4695:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "4758: version = \"0.26.2\"",
          "4760: checksum = \"5d8cec3501a5194c432b2b7976db6b7d10ec95c253208b45f83f7136aa985e29\"",
          "4764: version = \"0.26.2\"",
          "4766: checksum = \"c6cf59daf282c0a494ba14fd21610a0325f9f90ec9d1231dea26bcb1d696c946\"",
          "4772:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 91 ---",
          "[Context before]",
          "4715: [[package]]",
          "4716: name = \"syn\"",
          "4718: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4720: dependencies = [",
          "4721:  \"proc-macro2\",",
          "4722:  \"quote\",",
          "",
          "[Removed Lines]",
          "4717: version = \"2.0.58\"",
          "4719: checksum = \"44cfb93f38070beee36b3fef7d4f5a16f27751d94b187b666a5cc5e9b0d30687\"",
          "",
          "[Added Lines]",
          "4794: version = \"2.0.61\"",
          "4796: checksum = \"c993ed8ccba56ae856363b1845da7266a7cb78e1d146c8a32d54b45a8b831fc9\"",
          "",
          "---------------",
          "--- Hunk 92 ---",
          "[Context before]",
          "4847: [[package]]",
          "4848: name = \"test-log\"",
          "4850: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4852: dependencies = [",
          "4853:  \"test-log-macros\",",
          "4854:  \"tracing-subscriber\",",
          "",
          "[Removed Lines]",
          "4849: version = \"0.2.15\"",
          "4851: checksum = \"7b319995299c65d522680decf80f2c108d85b861d81dfe340a10d16cee29d9e6\"",
          "",
          "[Added Lines]",
          "4926: version = \"0.2.16\"",
          "4928: checksum = \"3dffced63c2b5c7be278154d76b479f9f9920ed34e7574201407f0b14e2bbb93\"",
          "",
          "---------------",
          "--- Hunk 93 ---",
          "[Context before]",
          "4857: [[package]]",
          "4858: name = \"test-log-macros\"",
          "4860: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4862: dependencies = [",
          "4863:  \"proc-macro2\",",
          "4864:  \"quote\",",
          "4866: ]",
          "4868: [[package]]",
          "",
          "[Removed Lines]",
          "4859: version = \"0.2.15\"",
          "4861: checksum = \"c8f546451eaa38373f549093fe9fd05e7d2bade739e2ddf834b9968621d60107\"",
          "4865:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "4936: version = \"0.2.16\"",
          "4938: checksum = \"5999e24eaa32083191ba4e425deb75cdf25efefabe5aaccb7446dd0d4122a3f5\"",
          "4942:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 94 ---",
          "[Context before]",
          "4881: [[package]]",
          "4882: name = \"thiserror\"",
          "4884: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4886: dependencies = [",
          "4887:  \"thiserror-impl\",",
          "4888: ]",
          "4890: [[package]]",
          "4891: name = \"thiserror-impl\"",
          "4893: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4895: dependencies = [",
          "4896:  \"proc-macro2\",",
          "4897:  \"quote\",",
          "4899: ]",
          "4901: [[package]]",
          "",
          "[Removed Lines]",
          "4883: version = \"1.0.58\"",
          "4885: checksum = \"03468839009160513471e86a034bb2c5c0e4baae3b43f79ffc55c4a5427b3297\"",
          "4892: version = \"1.0.58\"",
          "4894: checksum = \"c61f3ba182994efc43764a46c018c347bc492c79f024e705f46567b418f6d4f7\"",
          "4898:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "4960: version = \"1.0.60\"",
          "4962: checksum = \"579e9083ca58dd9dcf91a9923bb9054071b9ebbd800b342194c9feb0ee89fc18\"",
          "4969: version = \"1.0.60\"",
          "4971: checksum = \"e2470041c06ec3ac1ab38d0356a6119054dedaea53e12fbefc0de730a1c08524\"",
          "4975:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 95 ---",
          "[Context before]",
          "4928: [[package]]",
          "4929: name = \"time\"",
          "4931: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4933: dependencies = [",
          "4934:  \"deranged\",",
          "4935:  \"itoa\",",
          "",
          "[Removed Lines]",
          "4930: version = \"0.3.34\"",
          "4932: checksum = \"c8248b6521bb14bc45b4067159b9b6ad792e2d6d754d6c41fb50e29fefe38749\"",
          "",
          "[Added Lines]",
          "5007: version = \"0.3.36\"",
          "5009: checksum = \"5dfd88e563464686c916c7e46e623e520ddc6d79fa6641390f2e3fa86e83e885\"",
          "",
          "---------------",
          "--- Hunk 96 ---",
          "[Context before]",
          "4949: [[package]]",
          "4950: name = \"time-macros\"",
          "4952: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "4954: dependencies = [",
          "4955:  \"num-conv\",",
          "4956:  \"time-core\",",
          "",
          "[Removed Lines]",
          "4951: version = \"0.2.17\"",
          "4953: checksum = \"7ba3a3ef41e6672a2f0f001392bb5dcd3ff0a9992d618ca761a11c3121547774\"",
          "",
          "[Added Lines]",
          "5028: version = \"0.2.18\"",
          "5030: checksum = \"3f252a68540fde3a3877aeea552b832b40ab9a69e318efd078774a01ddee1ccf\"",
          "",
          "---------------",
          "--- Hunk 97 ---",
          "[Context before]",
          "5032:  \"num_cpus\",",
          "5033:  \"pin-project-lite\",",
          "5034:  \"signal-hook-registry\",",
          "5036:  \"tokio-macros\",",
          "5037:  \"windows-sys 0.48.0\",",
          "5038: ]",
          "",
          "[Removed Lines]",
          "5035:  \"socket2 0.5.6\",",
          "",
          "[Added Lines]",
          "5112:  \"socket2 0.5.7\",",
          "",
          "---------------",
          "--- Hunk 98 ---",
          "[Context before]",
          "5117: dependencies = [",
          "5118:  \"proc-macro2\",",
          "5119:  \"quote\",",
          "5121: ]",
          "5123: [[package]]",
          "",
          "[Removed Lines]",
          "5120:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "5197:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 99 ---",
          "[Context before]",
          "5155: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "5156: checksum = \"c28327cf380ac148141087fbfb9de9d7bd4e84ab5d2c28fbc911d753de8a7081\"",
          "5157: dependencies = [",
          "5159:  \"tokio 1.37.0\",",
          "5160: ]",
          "",
          "[Removed Lines]",
          "5158:  \"rustls 0.21.11\",",
          "",
          "[Added Lines]",
          "5235:  \"rustls 0.21.12\",",
          "",
          "---------------",
          "--- Hunk 100 ---",
          "[Context before]",
          "5262: dependencies = [",
          "5263:  \"futures-util\",",
          "5264:  \"log 0.4.21\",",
          "5266:  \"rustls-native-certs\",",
          "5267:  \"tokio 1.37.0\",",
          "5268:  \"tokio-rustls\",",
          "",
          "[Removed Lines]",
          "5265:  \"rustls 0.21.11\",",
          "",
          "[Added Lines]",
          "5342:  \"rustls 0.21.12\",",
          "",
          "---------------",
          "--- Hunk 101 ---",
          "[Context before]",
          "5306: [[package]]",
          "5307: name = \"tokio-util\"",
          "5309: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "5311: dependencies = [",
          "5312:  \"bytes 1.6.0\",",
          "5313:  \"futures-core\",",
          "5314:  \"futures-sink\",",
          "5315:  \"pin-project-lite\",",
          "5316:  \"tokio 1.37.0\",",
          "5318: ]",
          "5320: [[package]]",
          "",
          "[Removed Lines]",
          "5308: version = \"0.7.10\"",
          "5310: checksum = \"5419f34732d9eb6ee4c3578b7989078579b7f039cbbb9ca2c4da015749371e15\"",
          "5317:  \"tracing\",",
          "",
          "[Added Lines]",
          "5385: version = \"0.7.11\"",
          "5387: checksum = \"9cf6b47b3771c49ac75ad09a6162f53ad4b8088b76ac60e8ec1455b31a189fe1\"",
          "",
          "---------------",
          "--- Hunk 102 ---",
          "[Context before]",
          "5348:  \"serde\",",
          "5349:  \"serde_spanned\",",
          "5350:  \"toml_datetime\",",
          "5352: ]",
          "5354: [[package]]",
          "",
          "[Removed Lines]",
          "5351:  \"toml_edit 0.22.9\",",
          "",
          "[Added Lines]",
          "5427:  \"toml_edit 0.22.12\",",
          "",
          "---------------",
          "--- Hunk 103 ---",
          "[Context before]",
          "5376: [[package]]",
          "5377: name = \"toml_edit\"",
          "5379: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "5381: dependencies = [",
          "5382:  \"indexmap 2.2.6\",",
          "5383:  \"serde\",",
          "5384:  \"serde_spanned\",",
          "5385:  \"toml_datetime\",",
          "5387: ]",
          "5389: [[package]]",
          "",
          "[Removed Lines]",
          "5378: version = \"0.22.9\"",
          "5380: checksum = \"8e40bb779c5187258fd7aad0eb68cb8706a0a81fa712fbea808ab43c4b8374c4\"",
          "5386:  \"winnow 0.6.5\",",
          "",
          "[Added Lines]",
          "5454: version = \"0.22.12\"",
          "5456: checksum = \"d3328d4f68a705b2a4498da1d580585d39a6510f98318a2cec3018a7ec61ddef\"",
          "5462:  \"winnow 0.6.8\",",
          "",
          "---------------",
          "--- Hunk 104 ---",
          "[Context before]",
          "5454: dependencies = [",
          "5455:  \"proc-macro2\",",
          "5456:  \"quote\",",
          "5458: ]",
          "5460: [[package]]",
          "",
          "[Removed Lines]",
          "5457:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "5533:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 105 ---",
          "[Context before]",
          "5552: [[package]]",
          "5553: name = \"trybuild\"",
          "5555: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "5557: dependencies = [",
          "5558:  \"glob\",",
          "5560:  \"serde\",",
          "5561:  \"serde_derive\",",
          "5562:  \"serde_json\",",
          "",
          "[Removed Lines]",
          "5554: version = \"1.0.91\"",
          "5556: checksum = \"8ad7eb6319ebadebca3dacf1f85a93bc54b73dd81b9036795f73de7ddfe27d5a\"",
          "5559:  \"once_cell\",",
          "",
          "[Added Lines]",
          "5630: version = \"1.0.94\"",
          "5632: checksum = \"bfe21c256d6fba8499cf9d9b1c24971bec43a369d81c52e024adc7670cf112df\"",
          "",
          "---------------",
          "--- Hunk 106 ---",
          "[Context before]",
          "5590:  \"httparse\",",
          "5591:  \"log 0.4.21\",",
          "5592:  \"rand\",",
          "5594:  \"sha1\",",
          "5595:  \"thiserror\",",
          "5596:  \"url\",",
          "",
          "[Removed Lines]",
          "5593:  \"rustls 0.21.11\",",
          "",
          "[Added Lines]",
          "5668:  \"rustls 0.21.12\",",
          "",
          "---------------",
          "--- Hunk 107 ---",
          "[Context before]",
          "5603: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "5604: checksum = \"97fee6b57c6a41524a810daee9286c02d7752c4253064d0b05472833a438f675\"",
          "5605: dependencies = [",
          "5607:  \"static_assertions\",",
          "5608: ]",
          "",
          "[Removed Lines]",
          "5606:  \"cfg-if 0.1.10\",",
          "",
          "[Added Lines]",
          "5681:  \"cfg-if 1.0.0\",",
          "",
          "---------------",
          "--- Hunk 108 ---",
          "[Context before]",
          "5682: [[package]]",
          "5683: name = \"unicode-width\"",
          "5685: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "5688: [[package]]",
          "5689: name = \"unicode-xid\"",
          "",
          "[Removed Lines]",
          "5684: version = \"0.1.11\"",
          "5686: checksum = \"e51733f11c9c4f72aa0c160008246859e340b00807569a0da0e7a1079b27ba85\"",
          "",
          "[Added Lines]",
          "5759: version = \"0.1.12\"",
          "5761: checksum = \"68f5e5f3158ecfd4b8ff6fe086db7c8467a2dfdac97fe420f2b7c4aa97af66d6\"",
          "",
          "---------------",
          "--- Hunk 109 ---",
          "[Context before]",
          "5721: [[package]]",
          "5722: name = \"ureq\"",
          "5724: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "5726: dependencies = [",
          "5728:  \"flate2\",",
          "5729:  \"log 0.4.21\",",
          "5730:  \"once_cell\",",
          "5731:  \"rustls 0.22.4\",",
          "5732:  \"rustls-pki-types\",",
          "5734:  \"url\",",
          "5735:  \"webpki-roots 0.26.1\",",
          "5736: ]",
          "",
          "[Removed Lines]",
          "5723: version = \"2.9.6\"",
          "5725: checksum = \"11f214ce18d8b2cbe84ed3aa6486ed3f5b285cf8d8fbdbce9f3f767a724adc35\"",
          "5727:  \"base64 0.21.7\",",
          "5733:  \"rustls-webpki 0.102.2\",",
          "",
          "[Added Lines]",
          "5798: version = \"2.9.7\"",
          "5800: checksum = \"d11a831e3c0b56e438a28308e7c810799e3c118417f342d30ecec080105395cd\"",
          "5802:  \"base64 0.22.1\",",
          "5808:  \"rustls-webpki 0.102.3\",",
          "",
          "---------------",
          "--- Hunk 110 ---",
          "[Context before]",
          "6064:  \"once_cell\",",
          "6065:  \"proc-macro2\",",
          "6066:  \"quote\",",
          "6068:  \"wasm-bindgen-shared\",",
          "6069: ]",
          "",
          "[Removed Lines]",
          "6067:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "6142:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 111 ---",
          "[Context before]",
          "6098: dependencies = [",
          "6099:  \"proc-macro2\",",
          "6100:  \"quote\",",
          "6102:  \"wasm-bindgen-backend\",",
          "6103:  \"wasm-bindgen-shared\",",
          "6104: ]",
          "",
          "[Removed Lines]",
          "6101:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "6176:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 112 ---",
          "[Context before]",
          "6131: dependencies = [",
          "6132:  \"proc-macro2\",",
          "6133:  \"quote\",",
          "6135: ]",
          "6137: [[package]]",
          "",
          "[Removed Lines]",
          "6134:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "6209:  \"syn 2.0.61\",",
          "",
          "---------------",
          "--- Hunk 113 ---",
          "[Context before]",
          "6264:  \"serde\",",
          "6265:  \"serde_json\",",
          "6266:  \"serde_path_to_error\",",
          "6268:  \"tokio 1.37.0\",",
          "6269:  \"tracing\",",
          "6270:  \"url\",",
          "",
          "[Removed Lines]",
          "6267:  \"time 0.3.34\",",
          "",
          "[Added Lines]",
          "6342:  \"time 0.3.36\",",
          "",
          "---------------",
          "--- Hunk 114 ---",
          "[Context before]",
          "6411:  \"indicatif\",",
          "6412:  \"interfaces\",",
          "6413:  \"is-terminal\",",
          "6414:  \"libc\",",
          "6415:  \"log 0.4.21\",",
          "6416:  \"mac_address\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6489:  \"lazy_static\",",
          "",
          "---------------",
          "--- Hunk 115 ---",
          "[Context before]",
          "6419:  \"object 0.32.2\",",
          "6420:  \"once_cell\",",
          "6421:  \"opener\",",
          "6423:  \"pathdiff\",",
          "6424:  \"predicates 3.1.0\",",
          "6425:  \"pretty_assertions\",",
          "6426:  \"regex\",",
          "6427:  \"reqwest\",",
          "6428:  \"rkyv\",",
          "6430:  \"serde\",",
          "6431:  \"serde_json\",",
          "6432:  \"serde_yaml 0.9.34+deprecated\",",
          "",
          "[Removed Lines]",
          "6422:  \"parking_lot 0.12.1\",",
          "6429:  \"semver 1.0.22\",",
          "",
          "[Added Lines]",
          "6498:  \"parking_lot 0.12.2\",",
          "6505:  \"semver 1.0.23\",",
          "",
          "---------------",
          "--- Hunk 116 ---",
          "[Context before]",
          "6437:  \"tempfile\",",
          "6438:  \"thiserror\",",
          "6439:  \"time 0.1.45\",",
          "6441:  \"tldextract\",",
          "6442:  \"tokio 1.37.0\",",
          "6443:  \"tokio-tungstenite\",",
          "",
          "[Removed Lines]",
          "6440:  \"time 0.3.34\",",
          "",
          "[Added Lines]",
          "6516:  \"time 0.3.36\",",
          "",
          "---------------",
          "--- Hunk 117 ---",
          "[Context before]",
          "6553:  \"rayon\",",
          "6554:  \"regex\",",
          "6555:  \"rustc_version 0.4.0\",",
          "6557:  \"smallvec 1.13.2\",",
          "6558:  \"target-lexicon 0.12.14\",",
          "6559:  \"wasmer-compiler\",",
          "",
          "[Removed Lines]",
          "6556:  \"semver 1.0.22\",",
          "",
          "[Added Lines]",
          "6632:  \"semver 1.0.23\",",
          "",
          "---------------",
          "--- Hunk 118 ---",
          "[Context before]",
          "6591:  \"indexmap 2.2.6\",",
          "6592:  \"pretty_assertions\",",
          "6593:  \"schemars\",",
          "6595:  \"serde\",",
          "6596:  \"serde_cbor\",",
          "6597:  \"serde_json\",",
          "",
          "[Removed Lines]",
          "6594:  \"semver 1.0.22\",",
          "",
          "[Added Lines]",
          "6670:  \"semver 1.0.23\",",
          "",
          "---------------",
          "--- Hunk 119 ---",
          "[Context before]",
          "6605: [[package]]",
          "6606: name = \"wasmer-config\"",
          "6608: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "6610: dependencies = [",
          "6611:  \"anyhow\",",
          "6612:  \"bytesize\",",
          "6613:  \"derive_builder\",",
          "6614:  \"hex\",",
          "6616:  \"schemars\",",
          "6618:  \"serde\",",
          "6619:  \"serde_cbor\",",
          "6620:  \"serde_json\",",
          "",
          "[Removed Lines]",
          "6607: version = \"0.1.0\"",
          "6609: checksum = \"0b405c9856adaf65ee91eeeeaac6fcc6b127188648c60ae4e89de63f506c74e6\"",
          "6615:  \"indexmap 1.9.3\",",
          "6617:  \"semver 1.0.22\",",
          "",
          "[Added Lines]",
          "6683: version = \"0.1.1\"",
          "6685: checksum = \"7439f813ad16b3fc8cbf2be3b54192e2c4b0a4c213d1fb3d7cf82da249c39aea\"",
          "6691:  \"indexmap 2.2.6\",",
          "6693:  \"semver 1.0.23\",",
          "",
          "---------------",
          "--- Hunk 120 ---",
          "[Context before]",
          "6645:  \"lazy_static\",",
          "6646:  \"libc\",",
          "6647:  \"log 0.4.21\",",
          "6649:  \"wasmer\",",
          "6650:  \"wasmer-types\",",
          "6651: ]",
          "",
          "[Removed Lines]",
          "6648:  \"time 0.3.34\",",
          "",
          "[Added Lines]",
          "6724:  \"time 0.3.36\",",
          "",
          "---------------",
          "--- Hunk 121 ---",
          "[Context before]",
          "6784:  \"reqwest\",",
          "6785:  \"rpassword\",",
          "6786:  \"rusqlite\",",
          "6788:  \"serde\",",
          "6789:  \"serde_json\",",
          "6790:  \"tar\",",
          "6791:  \"tempfile\",",
          "6792:  \"thiserror\",",
          "6794:  \"tldextract\",",
          "6795:  \"tokio 1.37.0\",",
          "6796:  \"tokio-tungstenite\",",
          "",
          "[Removed Lines]",
          "6787:  \"semver 1.0.22\",",
          "6793:  \"time 0.3.34\",",
          "",
          "[Added Lines]",
          "6863:  \"semver 1.0.23\",",
          "6869:  \"time 0.3.36\",",
          "",
          "---------------",
          "--- Hunk 122 ---",
          "[Context before]",
          "6900:  \"reqwest\",",
          "6901:  \"rkyv\",",
          "6902:  \"rusty_pool\",",
          "6904:  \"serde\",",
          "6905:  \"serde_cbor\",",
          "6906:  \"serde_derive\",",
          "",
          "[Removed Lines]",
          "6903:  \"semver 1.0.22\",",
          "",
          "[Added Lines]",
          "6979:  \"semver 1.0.23\",",
          "",
          "---------------",
          "--- Hunk 123 ---",
          "[Context before]",
          "6956:  \"num_enum\",",
          "6957:  \"pretty_assertions\",",
          "6958:  \"serde\",",
          "6960:  \"tracing\",",
          "6961:  \"wai-bindgen-gen-core\",",
          "6962:  \"wai-bindgen-gen-rust\",",
          "",
          "[Removed Lines]",
          "6959:  \"time 0.3.34\",",
          "",
          "[Added Lines]",
          "7035:  \"time 0.3.36\",",
          "",
          "---------------",
          "--- Hunk 124 ---",
          "[Context before]",
          "7054: dependencies = [",
          "7055:  \"bitflags 2.5.0\",",
          "7056:  \"indexmap 2.2.6\",",
          "7058: ]",
          "7060: [[package]]",
          "",
          "[Removed Lines]",
          "7057:  \"semver 1.0.22\",",
          "",
          "[Added Lines]",
          "7133:  \"semver 1.0.23\",",
          "",
          "---------------",
          "--- Hunk 125 ---",
          "[Context before]",
          "7146: [[package]]",
          "7147: name = \"webc\"",
          "7149: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "7151: dependencies = [",
          "7152:  \"anyhow\",",
          "7153:  \"base64 0.21.7\",",
          "",
          "[Removed Lines]",
          "7148: version = \"6.0.0-alpha3\"",
          "7150: checksum = \"c544aa307af3ad0326ae962a1715400c6c456e91e45bb2c2d860fdccc128be3c\"",
          "",
          "[Added Lines]",
          "7224: version = \"6.0.0-alpha6\"",
          "7226: checksum = \"f90e7ef808f844f15d1680a7cea4a0c5082ccaae0dc09621855a655f71989eb1\"",
          "",
          "---------------",
          "--- Hunk 126 ---",
          "[Context before]",
          "7160:  \"indexmap 1.9.3\",",
          "7161:  \"leb128\",",
          "7162:  \"lexical-sort\",",
          "7163:  \"once_cell\",",
          "7164:  \"path-clean\",",
          "7165:  \"rand\",",
          "7167:  \"serde\",",
          "7168:  \"serde_cbor\",",
          "7169:  \"serde_json\",",
          "",
          "[Removed Lines]",
          "7166:  \"semver 1.0.22\",",
          "",
          "[Added Lines]",
          "7239:  \"libc\",",
          "7243:  \"semver 1.0.23\",",
          "",
          "---------------",
          "--- Hunk 127 ---",
          "[Context before]",
          "7174:  \"thiserror\",",
          "7175:  \"toml 0.7.8\",",
          "7176:  \"url\",",
          "7178: ]",
          "7180: [[package]]",
          "",
          "[Removed Lines]",
          "7177:  \"wasmer-config 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",",
          "",
          "[Added Lines]",
          "7254:  \"wasmer-config 0.1.1\",",
          "",
          "---------------",
          "--- Hunk 128 ---",
          "[Context before]",
          "7240: [[package]]",
          "7241: name = \"winapi-util\"",
          "7243: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "7245: dependencies = [",
          "7247: ]",
          "7249: [[package]]",
          "",
          "[Removed Lines]",
          "7242: version = \"0.1.6\"",
          "7244: checksum = \"f29e6f9198ba0d26b4c9f07dbe6f9ed633e1f3d5b8b414090084349e46a52596\"",
          "7246:  \"winapi 0.3.9\",",
          "",
          "[Added Lines]",
          "7319: version = \"0.1.8\"",
          "7321: checksum = \"4d4cc384e1e73b93bafa6fb4f1df8c41695c8a91cf9c4c64358067d15a7b6c6b\"",
          "7323:  \"windows-sys 0.52.0\",",
          "",
          "---------------",
          "--- Hunk 129 ---",
          "[Context before]",
          "7258: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "7259: checksum = \"33ab640c8d7e35bf8ba19b884ba838ceb4fba93a4e8c65a9059d08afcfc683d9\"",
          "7260: dependencies = [",
          "7262: ]",
          "7264: [[package]]",
          "",
          "[Removed Lines]",
          "7261:  \"windows-targets 0.52.4\",",
          "",
          "[Added Lines]",
          "7338:  \"windows-targets 0.52.5\",",
          "",
          "---------------",
          "--- Hunk 130 ---",
          "[Context before]",
          "7289: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "7290: checksum = \"282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d\"",
          "7291: dependencies = [",
          "7293: ]",
          "7295: [[package]]",
          "",
          "[Removed Lines]",
          "7292:  \"windows-targets 0.52.4\",",
          "",
          "[Added Lines]",
          "7369:  \"windows-targets 0.52.5\",",
          "",
          "---------------",
          "--- Hunk 131 ---",
          "[Context before]",
          "7310: [[package]]",
          "7311: name = \"windows-targets\"",
          "7313: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "7315: dependencies = [",
          "7323: ]",
          "7325: [[package]]",
          "",
          "[Removed Lines]",
          "7312: version = \"0.52.4\"",
          "7314: checksum = \"7dd37b7e5ab9018759f893a1952c9420d060016fc19a472b4bb20d1bdd694d1b\"",
          "7316:  \"windows_aarch64_gnullvm 0.52.4\",",
          "7317:  \"windows_aarch64_msvc 0.52.4\",",
          "7318:  \"windows_i686_gnu 0.52.4\",",
          "7319:  \"windows_i686_msvc 0.52.4\",",
          "7320:  \"windows_x86_64_gnu 0.52.4\",",
          "7321:  \"windows_x86_64_gnullvm 0.52.4\",",
          "7322:  \"windows_x86_64_msvc 0.52.4\",",
          "",
          "[Added Lines]",
          "7389: version = \"0.52.5\"",
          "7391: checksum = \"6f0713a46559409d202e70e28227288446bf7841d3211583a4b53e3f6d96e7eb\"",
          "7393:  \"windows_aarch64_gnullvm 0.52.5\",",
          "7394:  \"windows_aarch64_msvc 0.52.5\",",
          "7395:  \"windows_i686_gnu 0.52.5\",",
          "7396:  \"windows_i686_gnullvm\",",
          "7397:  \"windows_i686_msvc 0.52.5\",",
          "7398:  \"windows_x86_64_gnu 0.52.5\",",
          "7399:  \"windows_x86_64_gnullvm 0.52.5\",",
          "7400:  \"windows_x86_64_msvc 0.52.5\",",
          "",
          "---------------",
          "--- Hunk 132 ---",
          "[Context before]",
          "7331: [[package]]",
          "7332: name = \"windows_aarch64_gnullvm\"",
          "7334: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "7337: [[package]]",
          "7338: name = \"windows_aarch64_msvc\"",
          "",
          "[Removed Lines]",
          "7333: version = \"0.52.4\"",
          "7335: checksum = \"bcf46cf4c365c6f2d1cc93ce535f2c8b244591df96ceee75d8e83deb70a9cac9\"",
          "",
          "[Added Lines]",
          "7411: version = \"0.52.5\"",
          "7413: checksum = \"7088eed71e8b8dda258ecc8bac5fb1153c5cffaf2578fc8ff5d61e23578d3263\"",
          "",
          "---------------",
          "--- Hunk 133 ---",
          "[Context before]",
          "7349: [[package]]",
          "7350: name = \"windows_aarch64_msvc\"",
          "7352: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "7355: [[package]]",
          "7356: name = \"windows_i686_gnu\"",
          "",
          "[Removed Lines]",
          "7351: version = \"0.52.4\"",
          "7353: checksum = \"da9f259dd3bcf6990b55bffd094c4f7235817ba4ceebde8e6d11cd0c5633b675\"",
          "",
          "[Added Lines]",
          "7429: version = \"0.52.5\"",
          "7431: checksum = \"9985fd1504e250c615ca5f281c3f7a6da76213ebd5ccc9561496568a2752afb6\"",
          "",
          "---------------",
          "--- Hunk 134 ---",
          "[Context before]",
          "7367: [[package]]",
          "7368: name = \"windows_i686_gnu\"",
          "7370: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "7373: [[package]]",
          "7374: name = \"windows_i686_msvc\"",
          "",
          "[Removed Lines]",
          "7369: version = \"0.52.4\"",
          "7371: checksum = \"b474d8268f99e0995f25b9f095bc7434632601028cf86590aea5c8a5cb7801d3\"",
          "",
          "[Added Lines]",
          "7447: version = \"0.52.5\"",
          "7449: checksum = \"88ba073cf16d5372720ec942a8ccbf61626074c6d4dd2e745299726ce8b89670\"",
          "7451: [[package]]",
          "7452: name = \"windows_i686_gnullvm\"",
          "7453: version = \"0.52.5\"",
          "7454: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "7455: checksum = \"87f4261229030a858f36b459e748ae97545d6f1ec60e5e0d6a3d32e0dc232ee9\"",
          "",
          "---------------",
          "--- Hunk 135 ---",
          "[Context before]",
          "7385: [[package]]",
          "7386: name = \"windows_i686_msvc\"",
          "7388: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "7391: [[package]]",
          "7392: name = \"windows_x86_64_gnu\"",
          "",
          "[Removed Lines]",
          "7387: version = \"0.52.4\"",
          "7389: checksum = \"1515e9a29e5bed743cb4415a9ecf5dfca648ce85ee42e15873c3cd8610ff8e02\"",
          "",
          "[Added Lines]",
          "7471: version = \"0.52.5\"",
          "7473: checksum = \"db3c2bf3d13d5b658be73463284eaf12830ac9a26a90c717b7f771dfe97487bf\"",
          "",
          "---------------",
          "--- Hunk 136 ---",
          "[Context before]",
          "7403: [[package]]",
          "7404: name = \"windows_x86_64_gnu\"",
          "7406: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "7409: [[package]]",
          "7410: name = \"windows_x86_64_gnullvm\"",
          "",
          "[Removed Lines]",
          "7405: version = \"0.52.4\"",
          "7407: checksum = \"5eee091590e89cc02ad514ffe3ead9eb6b660aedca2183455434b93546371a03\"",
          "",
          "[Added Lines]",
          "7489: version = \"0.52.5\"",
          "7491: checksum = \"4e4246f76bdeff09eb48875a0fd3e2af6aada79d409d33011886d3e1581517d9\"",
          "",
          "---------------",
          "--- Hunk 137 ---",
          "[Context before]",
          "7415: [[package]]",
          "7416: name = \"windows_x86_64_gnullvm\"",
          "7418: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "7421: [[package]]",
          "7422: name = \"windows_x86_64_msvc\"",
          "",
          "[Removed Lines]",
          "7417: version = \"0.52.4\"",
          "7419: checksum = \"77ca79f2451b49fa9e2af39f0747fe999fcda4f5e241b2898624dca97a1f2177\"",
          "",
          "[Added Lines]",
          "7501: version = \"0.52.5\"",
          "7503: checksum = \"852298e482cd67c356ddd9570386e2862b5673c85bd5f88df9ab6802b334c596\"",
          "",
          "---------------",
          "--- Hunk 138 ---",
          "[Context before]",
          "7433: [[package]]",
          "7434: name = \"windows_x86_64_msvc\"",
          "7436: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "7439: [[package]]",
          "7440: name = \"winnow\"",
          "",
          "[Removed Lines]",
          "7435: version = \"0.52.4\"",
          "7437: checksum = \"32b752e52a2da0ddfbdbcc6fceadfeede4c939ed16d13e648833a61dfb611ed8\"",
          "",
          "[Added Lines]",
          "7519: version = \"0.52.5\"",
          "7521: checksum = \"bec47e5bfd1bff0eeaf6d8b485cc1074891a197ab4225d504cb7a1ab88b02bf0\"",
          "",
          "---------------",
          "--- Hunk 139 ---",
          "[Context before]",
          "7448: [[package]]",
          "7449: name = \"winnow\"",
          "7451: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "7453: dependencies = [",
          "7454:  \"memchr\",",
          "7455: ]",
          "",
          "[Removed Lines]",
          "7450: version = \"0.6.5\"",
          "7452: checksum = \"dffa400e67ed5a4dd237983829e66475f0a4a26938c4b04c21baede6262215b8\"",
          "",
          "[Added Lines]",
          "7534: version = \"0.6.8\"",
          "7536: checksum = \"c3c52e9c97a68071b23e836c9380edae937f17b9c4667bd021973efc689f618d\"",
          "",
          "---------------",
          "--- Hunk 140 ---",
          "[Context before]",
          "7524: [[package]]",
          "7525: name = \"zerocopy\"",
          "7527: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "7529: dependencies = [",
          "7530:  \"zerocopy-derive\",",
          "7531: ]",
          "7533: [[package]]",
          "7534: name = \"zerocopy-derive\"",
          "7536: source = \"registry+https://github.com/rust-lang/crates.io-index\"",
          "7538: dependencies = [",
          "7539:  \"proc-macro2\",",
          "7540:  \"quote\",",
          "7542: ]",
          "7544: [[package]]",
          "",
          "[Removed Lines]",
          "7526: version = \"0.7.32\"",
          "7528: checksum = \"74d4d3961e53fa4c9a25a8637fc2bfaf2595b3d3ae34875568a5cf64787716be\"",
          "7535: version = \"0.7.32\"",
          "7537: checksum = \"9ce1b18ccd8e73a9321186f97e46f9f04b778851177567b1975109d26a08d2a6\"",
          "7541:  \"syn 2.0.58\",",
          "",
          "[Added Lines]",
          "7610: version = \"0.7.34\"",
          "7612: checksum = \"ae87e3fcd617500e5d106f0380cf7b77f3c6092aae37191433159dda23cfb087\"",
          "7619: version = \"0.7.34\"",
          "7621: checksum = \"15e934569e47891f7d9411f1a451d947a60e000ab3bd24fbb970f000387d1b3b\"",
          "7625:  \"syn 2.0.61\",",
          "",
          "---------------"
        ],
        "lib/backend-api/schema.graphql||lib/backend-api/schema.graphql": [
          "File: lib/backend-api/schema.graphql -> lib/backend-api/schema.graphql",
          "--- Hunk 1 ---",
          "[Context before]",
          "361:   \"\"\"List of app templates for this package\"\"\"",
          "362:   appTemplates(offset: Int, before: String, after: String, first: Int, last: Int): AppTemplateConnection!",
          "363:   packagewebcSet(offset: Int, before: String, after: String, first: Int, last: Int): PackageWebcConnection!",
          "365:   collectionSet: [Collection!]!",
          "366:   categories(offset: Int, before: String, after: String, first: Int, last: Int): CategoryConnection!",
          "367:   keywords(offset: Int, before: String, after: String, first: Int, last: Int): PackageKeywordConnection!",
          "",
          "[Removed Lines]",
          "364:   versions: [PackageVersion]!",
          "",
          "[Added Lines]",
          "364:   versions: [PackageVersion]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "504: type WebcImage implements Node {",
          "505:   \"\"\"The ID of the object\"\"\"",
          "506:   id: ID!",
          "509:   \"\"\"\"\"\"",
          "510:   fileSize: BigInt!",
          "",
          "[Removed Lines]",
          "507:   version: RegistryWebcImageVersionChoices!",
          "",
          "[Added Lines]",
          "507:   version: WebcVersion",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "518:   webcUrl: String!",
          "519: }",
          "523:   V2",
          "526:   V3",
          "527: }",
          "",
          "[Removed Lines]",
          "521: enum RegistryWebcImageVersionChoices {",
          "522:   \"\"\"v2\"\"\"",
          "525:   \"\"\"v3\"\"\"",
          "",
          "[Added Lines]",
          "521: enum WebcVersion {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "645:     last: Int",
          "646:   ): LogConnection!",
          "647:   usageMetrics(forRange: MetricRange!, variant: MetricType!): [UsageMetric]!",
          "649:   aggregateMetrics: AggregateMetrics!",
          "650:   volumes: [AppVersionVolume]",
          "651:   favicon: URL",
          "",
          "[Removed Lines]",
          "648:   sourcePackageVersion: PackageVersion!",
          "",
          "[Added Lines]",
          "645:   sourcePackageVersion: PackageVersion",
          "646:   sourcePackageRelease: PackageWebc",
          "647:   sourcePackage: Package!",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "806:   RUNTIME",
          "807: }",
          "809: type AppVersionVolume {",
          "810:   name: String!",
          "811:   mountPaths: [AppVersionVolumeMountPath]!",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "808: type PackageWebc implements Node & PackageReleaseInterface & PackageInstance {",
          "809:   \"\"\"The ID of the object\"\"\"",
          "810:   id: ID!",
          "811:   createdAt: DateTime!",
          "812:   updatedAt: DateTime!",
          "813:   package: Package!",
          "814:   webc: WebcImage",
          "815:   piritaManifest: JSONString",
          "816:   piritaOffsets: JSONString",
          "817:   piritaVolumes: JSONString",
          "818:   isArchived: Boolean!",
          "819:   clientName: String",
          "820:   publishedBy: User!",
          "821:   webcV3: WebcImage",
          "822:   tag: String!",
          "823:   webcUrl: String!",
          "824: }",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1052:   webcVersion: WebcVersion",
          "1053: }",
          "1060: type PackageVersionFilesystem {",
          "1061:   wasm: String!",
          "1062:   host: String!",
          "",
          "[Removed Lines]",
          "1055: enum WebcVersion {",
          "1056:   V2",
          "1057:   V3",
          "1058: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1235:   cursor: String!",
          "1236: }",
          "1256: type Collection {",
          "1257:   slug: String!",
          "1258:   displayName: String!",
          "",
          "[Removed Lines]",
          "1238: type PackageWebc implements Node & PackageReleaseInterface & PackageInstance {",
          "1239:   \"\"\"The ID of the object\"\"\"",
          "1240:   id: ID!",
          "1241:   createdAt: DateTime!",
          "1242:   updatedAt: DateTime!",
          "1243:   package: Package!",
          "1244:   webc: WebcImage",
          "1245:   piritaManifest: JSONString",
          "1246:   piritaOffsets: JSONString",
          "1247:   piritaVolumes: JSONString",
          "1248:   isArchived: Boolean!",
          "1249:   clientName: String",
          "1250:   publishedBy: User!",
          "1251:   webcV3: WebcImage",
          "1252:   tag: String!",
          "1253:   webcUrl: String!",
          "1254: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "2834:   mfa2EmailGetToken(input: MFAGenerateEmailOTPInput!): MFAEmailGenerationResponse",
          "2835:   publishPublicKey(input: PublishPublicKeyInput!): PublishPublicKeyPayload",
          "2836:   publishPackage(input: PublishPackageInput!): PublishPackagePayload",
          "2837:   updatePackage(input: UpdatePackageInput!): UpdatePackagePayload",
          "2838:   likePackage(input: LikePackageInput!): LikePackagePayload",
          "2839:   unlikePackage(input: UnlikePackageInput!): UnlikePackagePayload",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2831:   pushPackageRelease(input: PushPackageReleaseInput!): PushPackageReleasePayload",
          "2832:   tagPackageRelease(input: TagPackageReleaseInput!): TagPackageReleasePayload",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "3586:   webcv3",
          "3587: }",
          "3589: type UpdatePackagePayload {",
          "3590:   package: Package!",
          "3591:   clientMutationId: String",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3585: type PushPackageReleasePayload {",
          "3586:   success: Boolean!",
          "3587:   packageWebc: PackageWebc",
          "3588:   clientMutationId: String",
          "3589: }",
          "3591: input PushPackageReleaseInput {",
          "3592:   namespace: String!",
          "3593:   signedUrl: String!",
          "3594:   name: String",
          "3596:   \"\"\"Whether the package is private\"\"\"",
          "3597:   private: Boolean = false",
          "3598:   clientMutationId: String",
          "3599: }",
          "3601: type TagPackageReleasePayload {",
          "3602:   success: Boolean!",
          "3603:   packageVersion: PackageVersion",
          "3604:   clientMutationId: String",
          "3605: }",
          "3607: input TagPackageReleaseInput {",
          "3608:   packageReleaseId: ID!",
          "3609:   name: String!",
          "3610:   version: String!",
          "3611:   manifest: String!",
          "3612:   namespace: String",
          "3613:   description: String",
          "3614:   license: String",
          "3615:   licenseFile: String",
          "3616:   readme: String",
          "3617:   repository: String",
          "3618:   homepage: String",
          "3619:   signature: InputSignature",
          "3621:   \"\"\"The package icon\"\"\"",
          "3622:   icon: String",
          "3623:   private: Boolean = false",
          "3624:   clientMutationId: String",
          "3625: }",
          "",
          "---------------"
        ],
        "lib/backend-api/src/query.rs||lib/backend-api/src/query.rs": [
          "File: lib/backend-api/src/query.rs -> lib/backend-api/src/query.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "13:     types::{",
          "14:         self, CreateNamespaceVars, DeployApp, DeployAppConnection, DeployAppVersion,",
          "15:         DeployAppVersionConnection, DnsDomain, GetCurrentUserWithAppsVars, GetDeployAppAndVersion,",
          "18:     },",
          "19:     GraphQLApiFailure, WasmerClient,",
          "20: };",
          "",
          "[Removed Lines]",
          "16:         GetDeployAppVersionsVars, GetNamespaceAppsVars, Log, LogStream, PackageVersionConnection,",
          "17:         PublishDeployAppVars, UpsertDomainFromZoneFileVars,",
          "",
          "[Added Lines]",
          "16:         GetDeployAppVersionsVars, GetNamespaceAppsVars, GetSignedUrlForPackageUploadVariables, Log,",
          "17:         LogStream, PackageVersionConnection, PublishDeployAppVars, PushPackageReleasePayload,",
          "18:         SignedUrl, TagPackageReleasePayload, UpsertDomainFromZoneFileVars,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:     webc::compat::Container::from_bytes(data).context(\"failed to parse webc package\")",
          "55: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59: pub async fn get_signed_url_for_package_upload(",
          "60:     client: &WasmerClient,",
          "61:     expires_after_seconds: Option<i32>,",
          "62:     filename: Option<&str>,",
          "63:     name: Option<&str>,",
          "64:     version: Option<&str>,",
          "65: ) -> Result<Option<SignedUrl>, anyhow::Error> {",
          "66:     client",
          "67:         .run_graphql(types::GetSignedUrlForPackageUpload::build(",
          "68:             GetSignedUrlForPackageUploadVariables {",
          "69:                 expires_after_seconds,",
          "70:                 filename,",
          "71:                 name,",
          "72:                 version,",
          "73:             },",
          "74:         ))",
          "75:         .await",
          "76:         .map(|r| r.get_signed_url_for_package_upload)",
          "77: }",
          "79: pub async fn push_package_release(",
          "80:     client: &WasmerClient,",
          "81:     name: Option<&str>,",
          "82:     namespace: &str,",
          "83:     signed_url: &str,",
          "84:     private: Option<bool>,",
          "85: ) -> Result<Option<PushPackageReleasePayload>, anyhow::Error> {",
          "86:     client",
          "87:         .run_graphql_strict(types::PushPackageRelease::build(",
          "88:             types::PushPackageReleaseVariables {",
          "89:                 name,",
          "90:                 namespace,",
          "91:                 private,",
          "92:                 signed_url,",
          "93:             },",
          "94:         ))",
          "95:         .await",
          "96:         .map(|r| r.push_package_release)",
          "97: }",
          "99: #[allow(clippy::too_many_arguments)]",
          "100: pub async fn tag_package_release(",
          "101:     client: &WasmerClient,",
          "102:     description: Option<&str>,",
          "103:     homepage: Option<&str>,",
          "104:     license: Option<&str>,",
          "105:     license_file: Option<&str>,",
          "106:     manifest: &str,",
          "107:     name: &str,",
          "108:     namespace: Option<&str>,",
          "109:     package_release_id: &cynic::Id,",
          "110:     private: Option<bool>,",
          "111:     readme: Option<&str>,",
          "112:     repository: Option<&str>,",
          "113:     version: &str,",
          "114: ) -> Result<Option<TagPackageReleasePayload>, anyhow::Error> {",
          "115:     client",
          "116:         .run_graphql_strict(types::TagPackageRelease::build(",
          "117:             types::TagPackageReleaseVariables {",
          "118:                 description,",
          "119:                 homepage,",
          "120:                 license,",
          "121:                 license_file,",
          "122:                 manifest,",
          "123:                 name,",
          "124:                 namespace,",
          "125:                 package_release_id,",
          "126:                 private,",
          "127:                 readme,",
          "128:                 repository,",
          "129:                 version,",
          "130:             },",
          "131:         ))",
          "132:         .await",
          "133:         .map(|r| r.tag_package_release)",
          "134: }",
          "",
          "---------------"
        ],
        "lib/backend-api/src/types.rs||lib/backend-api/src/types.rs": [
          "File: lib/backend-api/src/types.rs -> lib/backend-api/src/types.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:         V3,",
          "84:     }",
          "101:     #[derive(cynic::QueryFragment, Debug, Clone, Serialize)]",
          "102:     pub struct WebcImage {",
          "103:         pub created_at: DateTime,",
          "",
          "[Removed Lines]",
          "86:     #[derive(cynic::Enum, Clone, Copy, Debug)]",
          "87:     pub enum RegistryWebcImageVersionChoices {",
          "88:         V2,",
          "89:         V3,",
          "90:     }",
          "92:     impl From<RegistryWebcImageVersionChoices> for WebcVersion {",
          "93:         fn from(v: RegistryWebcImageVersionChoices) -> Self {",
          "94:             match v {",
          "95:                 RegistryWebcImageVersionChoices::V2 => WebcVersion::V2,",
          "96:                 RegistryWebcImageVersionChoices::V3 => WebcVersion::V3,",
          "97:             }",
          "98:         }",
          "99:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "106:         pub webc_sha256: String,",
          "107:         pub file_size: BigInt,",
          "108:         pub manifest: JSONString,",
          "110:     }",
          "112:     #[derive(cynic::QueryFragment, Debug, Clone, Serialize)]",
          "",
          "[Removed Lines]",
          "109:         pub version: RegistryWebcImageVersionChoices,",
          "",
          "[Added Lines]",
          "94:         pub version: Option<WebcVersion>,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "184:         Oldest,",
          "185:     }",
          "187:     #[derive(cynic::QueryVariables, Debug, Clone, Default)]",
          "188:     pub struct AllPackageVersionsVars {",
          "189:         pub offset: Option<i32>,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "172:     #[derive(cynic::QueryVariables, Debug)]",
          "173:     pub struct PushPackageReleaseVariables<'a> {",
          "174:         pub name: Option<&'a str>,",
          "175:         pub namespace: &'a str,",
          "176:         pub private: Option<bool>,",
          "177:         pub signed_url: &'a str,",
          "178:     }",
          "180:     #[derive(cynic::QueryFragment, Debug)]",
          "181:     #[cynic(graphql_type = \"Mutation\", variables = \"PushPackageReleaseVariables\")]",
          "182:     pub struct PushPackageRelease {",
          "183:         #[arguments(input: { name: $name, namespace: $namespace, private: $private, signedUrl: $signed_url })]",
          "184:         pub push_package_release: Option<PushPackageReleasePayload>,",
          "185:     }",
          "187:     #[derive(cynic::QueryFragment, Debug)]",
          "188:     pub struct PushPackageReleasePayload {",
          "189:         pub package_webc: Option<PackageWebc>,",
          "190:         pub success: bool,",
          "191:     }",
          "193:     #[derive(cynic::QueryVariables, Debug)]",
          "194:     pub struct TagPackageReleaseVariables<'a> {",
          "195:         pub description: Option<&'a str>,",
          "196:         pub homepage: Option<&'a str>,",
          "197:         pub license: Option<&'a str>,",
          "198:         pub license_file: Option<&'a str>,",
          "199:         pub manifest: &'a str,",
          "200:         pub name: &'a str,",
          "201:         pub namespace: Option<&'a str>,",
          "202:         pub package_release_id: &'a cynic::Id,",
          "203:         pub private: Option<bool>,",
          "204:         pub readme: Option<&'a str>,",
          "205:         pub repository: Option<&'a str>,",
          "206:         pub version: &'a str,",
          "207:     }",
          "209:     #[derive(cynic::QueryFragment, Debug)]",
          "210:     #[cynic(graphql_type = \"Mutation\", variables = \"TagPackageReleaseVariables\")]",
          "211:     pub struct TagPackageRelease {",
          "212:         #[arguments(input: { description: $description, homepage: $homepage, license: $license, licenseFile: $license_file, manifest: $manifest, name: $name, namespace: $namespace, packageReleaseId: $package_release_id, private: $private, readme: $readme, repository: $repository, version: $version })]",
          "213:         pub tag_package_release: Option<TagPackageReleasePayload>,",
          "214:     }",
          "216:     #[derive(cynic::QueryFragment, Debug)]",
          "217:     pub struct TagPackageReleasePayload {",
          "218:         pub success: bool,",
          "219:     }",
          "221:     #[derive(cynic::InputObject, Debug)]",
          "222:     pub struct InputSignature<'a> {",
          "223:         pub public_key_key_id: &'a str,",
          "224:         pub data: &'a str,",
          "225:     }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "253:         }",
          "254:     }",
          "256:     #[derive(cynic::QueryFragment, Debug)]",
          "257:     pub struct PackageWebcConnection {",
          "258:         pub page_info: PageInfo,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "296:     #[derive(cynic::QueryVariables, Debug)]",
          "297:     pub struct GetSignedUrlForPackageUploadVariables<'a> {",
          "298:         pub expires_after_seconds: Option<i32>,",
          "299:         pub filename: Option<&'a str>,",
          "300:         pub name: Option<&'a str>,",
          "301:         pub version: Option<&'a str>,",
          "302:     }",
          "304:     #[derive(cynic::QueryFragment, Debug)]",
          "305:     #[cynic(",
          "306:         graphql_type = \"Query\",",
          "307:         variables = \"GetSignedUrlForPackageUploadVariables\"",
          "308:     )]",
          "309:     pub struct GetSignedUrlForPackageUpload {",
          "310:         #[arguments(name: $name, version: $version, filename: $filename, expiresAfterSeconds: $expires_after_seconds)]",
          "311:         pub get_signed_url_for_package_upload: Option<SignedUrl>,",
          "312:     }",
          "314:     #[derive(cynic::QueryFragment, Debug)]",
          "315:     pub struct SignedUrl {",
          "316:         pub url: String,",
          "317:     }",
          "",
          "---------------"
        ],
        "lib/cli/src/commands/app/create.rs||lib/cli/src/commands/app/create.rs": [
          "File: lib/cli/src/commands/app/create.rs -> lib/cli/src/commands/app/create.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: use crate::{",
          "4:     commands::AsyncCliCommand,",
          "6:     utils::{",
          "7:         load_package_manifest,",
          "8:         package_wizard::{CreateMode, PackageType, PackageWizard},",
          "",
          "[Removed Lines]",
          "5:     opts::{ApiOpts, ItemFormatOpts},",
          "",
          "[Added Lines]",
          "5:     opts::{ApiOpts, ItemFormatOpts, WasmerEnv},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:     #[allow(missing_docs)]",
          "84:     pub api: ApiOpts,",
          "86:     #[clap(flatten)]",
          "87:     #[allow(missing_docs)]",
          "88:     pub fmt: ItemFormatOpts,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:     #[clap(flatten)]",
          "87:     pub env: WasmerEnv,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "364:         {",
          "365:             let cmd_deploy = CmdAppDeploy {",
          "366:                 api: self.api.clone(),",
          "367:                 fmt: ItemFormatOpts {",
          "368:                     format: self.fmt.format,",
          "369:                 },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "370:                 env: self.env.clone(),",
          "",
          "---------------"
        ],
        "lib/cli/src/commands/app/deploy.rs||lib/cli/src/commands/app/deploy.rs": [
          "File: lib/cli/src/commands/app/deploy.rs -> lib/cli/src/commands/app/deploy.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: use super::AsyncCliCommand;",
          "2: use crate::{",
          "5:     utils::load_package_manifest,",
          "6: };",
          "7: use anyhow::Context;",
          "",
          "[Removed Lines]",
          "3:     commands::{app::create::CmdAppCreate, Publish},",
          "4:     opts::{ApiOpts, ItemFormatOpts},",
          "",
          "[Added Lines]",
          "3:     commands::{app::create::CmdAppCreate, package::publish::PackagePublish, PublishWait},",
          "4:     opts::{ApiOpts, ItemFormatOpts, WasmerEnv},",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18:     app::AppConfigV1,",
          "19:     package::{PackageIdent, PackageSource},",
          "20: };",
          "24: #[derive(clap::Parser, Debug)]",
          "",
          "[Removed Lines]",
          "21: use wasmer_registry::wasmer_env::{WasmerEnv, WASMER_DIR};",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "26:     #[clap(flatten)]",
          "27:     pub api: ApiOpts,",
          "29:     #[clap(flatten)]",
          "30:     pub fmt: ItemFormatOpts,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:     #[clap(flatten)]",
          "29:     pub env: WasmerEnv,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "96:             ),",
          "97:         };",
          "112:             dry_run: false,",
          "113:             quiet: false,",
          "114:             package_name: None,",
          "116:             no_validate: false,",
          "120:             timeout: humantime::Duration::from_str(\"2m\").unwrap(),",
          "121:             package_namespace: match manifest.package {",
          "122:                 Some(_) => None,",
          "",
          "[Removed Lines]",
          "99:         let env = WasmerEnv::new(",
          "100:             if let Ok(dir) = std::env::var(\"WASMER_DIR\") {",
          "101:                 PathBuf::from(dir)",
          "102:             } else {",
          "103:                 WASMER_DIR.clone()",
          "104:             },",
          "105:             self.api.registry.clone().map(|u| u.to_string().into()),",
          "106:             self.api.token.clone(),",
          "107:             None,",
          "108:         );",
          "110:         let publish_cmd = Publish {",
          "111:             env,",
          "115:             version: None,",
          "117:             package_path: Some(manifest_dir_path.to_str().unwrap().to_string()),",
          "118:             wait: !self.no_wait,",
          "119:             wait_all: !self.no_wait,",
          "",
          "[Added Lines]",
          "101:         let publish_cmd = PackagePublish {",
          "102:             env: self.env.clone(),",
          "106:             package_version: None,",
          "108:             package_path: manifest_dir_path.clone(),",
          "109:             wait: match self.no_wait {",
          "110:                 true => PublishWait::None,",
          "111:                 false => PublishWait::Container,",
          "112:             },",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "124:             },",
          "125:             non_interactive: self.non_interactive,",
          "126:             bump: self.bump,",
          "127:         };",
          "133:     }",
          "135:     async fn get_owner(",
          "",
          "[Removed Lines]",
          "129:         match publish_cmd.run_async().await? {",
          "130:             Some(id) => Ok(id),",
          "131:             None => anyhow::bail!(\"Error while publishing package. Stopping.\"),",
          "132:         }",
          "",
          "[Added Lines]",
          "120:             api: self.api.clone(),",
          "123:         publish_cmd.run_async().await",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "188:             app_name: None,",
          "189:             no_wait: self.no_wait,",
          "190:             api: self.api.clone(),",
          "191:             fmt: ItemFormatOpts {",
          "192:                 format: self.fmt.format,",
          "193:             },",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "182:             env: self.env.clone(),",
          "",
          "---------------"
        ],
        "lib/cli/src/commands/login.rs||lib/cli/src/commands/login.rs": [
          "File: lib/cli/src/commands/login.rs -> lib/cli/src/commands/login.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:     pub token: Option<String>,",
          "107:     #[clap(long, env = \"WASMER_CACHE_DIR\")]",
          "109: }",
          "111: impl Login {",
          "",
          "[Removed Lines]",
          "108:     cache_dir: Option<PathBuf>,",
          "",
          "[Added Lines]",
          "108:     pub cache_dir: Option<PathBuf>,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "225:         Ok((listener, server_url))",
          "226:     }",
          "231:         let env = self.wasmer_env();",
          "232:         let registry = env.registry_endpoint()?;",
          "",
          "[Removed Lines]",
          "229:     #[tokio::main]",
          "230:     pub async fn execute(&self) -> Result<(), anyhow::Error> {",
          "",
          "[Added Lines]",
          "228:     pub async fn run_async(&self) -> Result<(), anyhow::Error> {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "324:         };",
          "325:         Ok(())",
          "326:     }",
          "327: }",
          "329: async fn preflight(req: Request<Body>) -> Result<Response<Body>, anyhow::Error> {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "327:     #[tokio::main]",
          "328:     pub async fn execute(&self) -> Result<(), anyhow::Error> {",
          "329:         self.run_async().await",
          "330:     }",
          "",
          "---------------"
        ],
        "lib/cli/src/commands/mod.rs||lib/cli/src/commands/mod.rs": [
          "File: lib/cli/src/commands/mod.rs -> lib/cli/src/commands/mod.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: mod login;",
          "24: pub(crate) mod namespace;",
          "25: mod package;",
          "27: mod run;",
          "28: mod self_update;",
          "29: pub mod ssh;",
          "",
          "[Removed Lines]",
          "26: mod publish;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "134:             Some(Cmd::Package(cmd)) => match cmd {",
          "135:                 Package::Download(cmd) => cmd.execute(),",
          "136:                 Package::Build(cmd) => cmd.execute().map(|_| ()),",
          "137:             },",
          "138:             Some(Cmd::Container(cmd)) => match cmd {",
          "139:                 crate::commands::Container::Unpack(cmd) => cmd.execute(),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136:                 Package::Tag(cmd) => cmd.run(),",
          "137:                 Package::Push(cmd) => cmd.run(),",
          "138:                 Package::Publish(cmd) => cmd.run().map(|_| ()),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "215:     Login(Login),",
          "218:     #[clap(name = \"publish\")]",
          "222:     Cache(Cache),",
          "",
          "[Removed Lines]",
          "219:     Publish(Publish),",
          "",
          "[Added Lines]",
          "221:     Publish(crate::commands::package::publish::PackagePublish),",
          "",
          "---------------"
        ],
        "lib/cli/src/commands/package/build.rs||lib/cli/src/commands/package/build.rs": [
          "File: lib/cli/src/commands/package/build.rs -> lib/cli/src/commands/package/build.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: use dialoguer::console::{style, Emoji};",
          "5: use indicatif::ProgressBar;",
          "6: use wasmer_config::package::PackageHash;",
          "8: use crate::utils::load_package_manifest;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: use webc::wasmer_package::Package;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:         }",
          "45:     }",
          "48:         let manifest_path = self.manifest_path()?;",
          "49:         let Some((_, manifest)) = load_package_manifest(&manifest_path)? else {",
          "50:             anyhow::bail!(",
          "",
          "[Removed Lines]",
          "47:     pub(crate) fn execute(&self) -> Result<PackageHash, anyhow::Error> {",
          "",
          "[Added Lines]",
          "48:     pub(crate) fn execute(&self) -> Result<Package, anyhow::Error> {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53:             )",
          "54:         };",
          "55:         let pkg = webc::wasmer_package::Package::from_manifest(manifest_path)?;",
          "57:         let name = if let Some(manifest_pkg) = manifest.package {",
          "58:             if let Some(name) = manifest_pkg.name {",
          "59:                 if let Some(version) = manifest_pkg.version {",
          "",
          "[Removed Lines]",
          "56:         let pkg_hash = PackageHash::from_sha256_bytes(pkg.webc_hash());",
          "",
          "[Added Lines]",
          "57:         let pkg_hash = PackageHash::from_sha256_bytes(pkg.webc_hash().ok_or(anyhow::anyhow!(",
          "58:             \"No webc hash was provided while trying to build\"",
          "59:         ))?);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "86:         if self.check {",
          "88:         }",
          "90:         pb.println(format!(",
          "",
          "[Removed Lines]",
          "87:             return Ok(pkg_hash);",
          "",
          "[Added Lines]",
          "90:             return Ok(pkg);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "133:             out_path.display()",
          "134:         ));",
          "137:     }",
          "139:     fn manifest_path(&self) -> Result<PathBuf, anyhow::Error> {",
          "",
          "[Removed Lines]",
          "136:         Ok(pkg_hash)",
          "",
          "[Added Lines]",
          "139:         Ok(pkg)",
          "",
          "---------------"
        ],
        "lib/cli/src/commands/package/common/macros.rs||lib/cli/src/commands/package/common/macros.rs": [
          "File: lib/cli/src/commands/package/common/macros.rs -> lib/cli/src/commands/package/common/macros.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: macro_rules! make_pb {",
          "2:     ($self:ident, $msg:expr) => {{",
          "3:         let pb = indicatif::ProgressBar::new_spinner();",
          "4:         if $self.quiet {",
          "5:             pb.set_draw_target(indicatif::ProgressDrawTarget::hidden());",
          "6:         }",
          "8:         pb.enable_steady_tick(std::time::Duration::from_millis(500));",
          "9:         pb.set_style(",
          "10:             indicatif::ProgressStyle::with_template(\"{spinner:.magenta} {msg}\")",
          "11:                 .unwrap()",
          "12:                 .tick_strings(&[\"\u2736\", \"\u2738\", \"\u2739\", \"\u273a\", \"\u2739\", \"\u2737\"]),",
          "13:         );",
          "15:         pb.set_message($msg);",
          "16:         pb",
          "17:     }};",
          "19:     ($self:ident, $msg:expr, $($spinner:expr),+) => {{",
          "20:         let pb = indicatif::ProgressBar::new_spinner();",
          "21:         if $self.quiet {",
          "22:             pb.set_draw_target(indicatif::ProgressDrawTarget::hidden());",
          "23:         }",
          "25:         pb.enable_steady_tick(std::time::Duration::from_millis(500));",
          "26:         pb.set_style(",
          "27:             indicatif::ProgressStyle::with_template(\"{spinner:.magenta} {msg}\")",
          "28:                 .unwrap()",
          "29:                 .tick_strings(&[$($spinner),+]),",
          "30:         );",
          "32:         pb.set_message($msg);",
          "33:         pb",
          "34:     }};",
          "35: }",
          "37: macro_rules! pb_ok {",
          "38:     ($pb:expr, $msg: expr) => {",
          "39:         $pb.set_style(",
          "40:             indicatif::ProgressStyle::with_template(&format!(\"{} {{msg}}\", \"\u2714\".green().bold()))",
          "41:                 .unwrap(),",
          "42:         );",
          "43:         $pb.finish_with_message(format!(\"{}\", $msg.bold()));",
          "44:     };",
          "45: }",
          "47: macro_rules! pb_err {",
          "48:     ($pb:expr, $msg: expr) => {",
          "49:         $pb.set_style(",
          "50:             indicatif::ProgressStyle::with_template(&format!(\"{} {{msg}}\", \"\u2718\".red().bold()))",
          "51:                 .unwrap(),",
          "52:         );",
          "53:         $pb.finish_with_message(format!(\"{}\", $msg.bold()));",
          "54:     };",
          "55: }",
          "57: macro_rules! bin_name {",
          "58:     () => {",
          "59:         match std::env::args().nth(0) {",
          "60:             Some(n) => n,",
          "61:             None => String::from(\"wasmer\"),",
          "62:         }",
          "63:     };",
          "64: }",
          "66: macro_rules! cli_line {",
          "67:     () => {",
          "68:         std::env::args()",
          "69:             .filter(|s| !s.starts_with(\"-\"))",
          "70:             .collect::<Vec<String>>()",
          "71:             .join(\" \")",
          "72:     };",
          "73: }",
          "75: pub(crate) use bin_name;",
          "76: pub(crate) use cli_line;",
          "77: pub(crate) use make_pb;",
          "78: pub(crate) use pb_err;",
          "79: pub(crate) use pb_ok;",
          "",
          "---------------"
        ],
        "lib/cli/src/commands/package/common/mod.rs||lib/cli/src/commands/package/common/mod.rs": [
          "File: lib/cli/src/commands/package/common/mod.rs -> lib/cli/src/commands/package/common/mod.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: use crate::{",
          "2:     commands::Login,",
          "3:     opts::{ApiOpts, WasmerEnv},",
          "4:     utils::load_package_manifest,",
          "5: };",
          "6: use colored::Colorize;",
          "7: use dialoguer::Confirm;",
          "8: use semver::VersionReq;",
          "9: use std::{collections::BTreeMap, path::PathBuf, str::FromStr};",
          "10: use wasmer_api::WasmerClient;",
          "11: use wasmer_config::package::{Manifest, NamedPackageIdent, PackageHash, PackageIdent};",
          "12: use webc::wasmer_package::Package;",
          "14: pub mod macros;",
          "15: pub mod wait;",
          "19: #[derive(Debug, Clone, PartialEq, Eq)]",
          "20: pub(super) enum PackageSpecifier {",
          "21:     Hash {",
          "22:         namespace: String,",
          "23:         hash: PackageHash,",
          "24:     },",
          "25:     Named {",
          "26:         namespace: String,",
          "27:         name: String,",
          "28:         tag: Tag,",
          "29:     },",
          "30: }",
          "32: #[derive(Debug, Clone, PartialEq, Eq)]",
          "33: pub(super) enum Tag {",
          "34:     Version(semver::Version), // <-- This is the reason..",
          "35:     Hash(PackageHash),",
          "36: }",
          "38: impl Into<PackageIdent> for PackageSpecifier {",
          "39:     fn into(self) -> PackageIdent {",
          "40:         match self {",
          "41:             PackageSpecifier::Hash { hash, .. } => PackageIdent::Hash(hash),",
          "42:             PackageSpecifier::Named {",
          "43:                 namespace,",
          "44:                 name,",
          "45:                 tag,",
          "46:             } => match tag {",
          "47:                 Tag::Version(v) => PackageIdent::Named(NamedPackageIdent {",
          "48:                     registry: None,",
          "49:                     namespace: Some(namespace),",
          "50:                     name,",
          "51:                     tag: Some(wasmer_config::package::Tag::VersionReq(",
          "52:                         VersionReq::parse(&v.to_string()).unwrap(),",
          "53:                     )),",
          "54:                 }),",
          "55:                 Tag::Hash(h) => PackageIdent::Named(NamedPackageIdent {",
          "56:                     registry: None,",
          "57:                     namespace: Some(namespace),",
          "58:                     name,",
          "59:                     tag: Some(wasmer_config::package::Tag::Named(h.to_string())),",
          "60:                 }),",
          "61:             },",
          "62:         }",
          "63:     }",
          "64: }",
          "66: pub(super) fn into_specifier(",
          "67:     manifest: &Manifest,",
          "68:     hash: &PackageHash,",
          "69:     namespace: String,",
          "70: ) -> anyhow::Result<PackageSpecifier> {",
          "71:     Ok(match &manifest.package {",
          "72:         None => PackageSpecifier::Hash {",
          "73:             namespace,",
          "74:             hash: hash.clone(),",
          "75:         },",
          "76:         Some(n) => match &n.name {",
          "77:             Some(name) => {",
          "78:                 let named = NamedPackageIdent::from_str(&name)?;",
          "79:                 match &n.version {",
          "80:                     Some(v) => PackageSpecifier::Named {",
          "81:                         namespace,",
          "82:                         name: named.name.clone(),",
          "83:                         tag: Tag::Version(v.clone()),",
          "84:                     },",
          "85:                     None => PackageSpecifier::Named {",
          "86:                         namespace,",
          "87:                         name: named.name.clone(),",
          "88:                         tag: Tag::Hash(hash.clone()),",
          "89:                     },",
          "90:                 }",
          "91:             }",
          "92:             None => PackageSpecifier::Hash {",
          "93:                 namespace,",
          "94:                 hash: hash.clone(),",
          "95:             },",
          "96:         },",
          "97:     })",
          "98: }",
          "100: pub(super) fn on_error(e: anyhow::Error) -> anyhow::Error {",
          "101:     #[cfg(feature = \"telemetry\")]",
          "102:     sentry::integrations::anyhow::capture_anyhow(&e);",
          "104:     e",
          "105: }",
          "112: pub(super) fn invalidate_graphql_query_cache(cache_dir: &PathBuf) -> Result<(), anyhow::Error> {",
          "113:     let cache_dir = cache_dir.join(\"queries\");",
          "114:     std::fs::remove_dir_all(cache_dir)?;",
          "116:     Ok(())",
          "117: }",
          "120: pub(super) async fn upload(",
          "121:     client: &WasmerClient,",
          "122:     hash: &PackageHash,",
          "123:     timeout: humantime::Duration,",
          "124:     package: &Package,",
          "125: ) -> anyhow::Result<String> {",
          "126:     let hash_str = hash.to_string();",
          "128:     let url = {",
          "129:         let default_timeout_secs = Some(60 * 30);",
          "130:         let q = wasmer_api::query::get_signed_url_for_package_upload(",
          "131:             &client,",
          "132:             default_timeout_secs,",
          "133:             Some(&hash_str),",
          "134:             None,",
          "135:             None,",
          "136:         );",
          "138:         match q.await? {",
          "139:             Some(u) => u.url,",
          "140:             None => anyhow::bail!(",
          "141:                 \"The backend did not provide a valid signed URL to upload the package\"",
          "142:             ),",
          "143:         }",
          "144:     };",
          "146:     tracing::info!(\"signed url is: {url}\");",
          "148:     let client = reqwest::Client::builder()",
          "149:         .default_headers(reqwest::header::HeaderMap::default())",
          "150:         .timeout(timeout.into())",
          "151:         .build()",
          "152:         .unwrap();",
          "154:     let res = client",
          "155:         .post(&url)",
          "156:         .header(reqwest::header::CONTENT_LENGTH, \"0\")",
          "157:         .header(reqwest::header::CONTENT_TYPE, \"application/octet-stream\")",
          "158:         .header(\"x-goog-resumable\", \"start\");",
          "160:     let result = res.send().await?;",
          "162:     if result.status() != reqwest::StatusCode::from_u16(201).unwrap() {",
          "163:         return Err(anyhow::anyhow!(",
          "164:             \"Uploading package failed: got HTTP {:?} when uploading\",",
          "165:             result.status()",
          "166:         ));",
          "167:     }",
          "169:     let headers = result",
          "170:         .headers()",
          "171:         .into_iter()",
          "172:         .filter_map(|(k, v)| {",
          "173:             let k = k.to_string();",
          "174:             let v = v.to_str().ok()?.to_string();",
          "175:             Some((k.to_lowercase(), v))",
          "176:         })",
          "177:         .collect::<BTreeMap<_, _>>();",
          "179:     let session_uri = headers",
          "180:         .get(\"location\")",
          "181:         .ok_or_else(|| {",
          "182:             anyhow::anyhow!(\"The upload server did not provide the upload URL correctly\")",
          "183:         })?",
          "184:         .clone();",
          "186:     tracing::info!(\"session uri is: {session_uri}\");",
          "194:     let bytes = package.serialize()?;",
          "196:     let total_bytes = bytes.len();",
          "197:     let chunk_size = 1_048_576; // 1MB - 315s / 100MB",
          "198:     let mut chunks = bytes.chunks(chunk_size);",
          "199:     let mut total_bytes_sent = 0;",
          "201:     let client = reqwest::Client::builder().build().unwrap();",
          "203:     while let Some(chunk) = chunks.next() {",
          "206:         let n = chunk.len();",
          "208:         let start = total_bytes_sent;",
          "209:         let end = start + chunk.len().saturating_sub(1);",
          "210:         let content_range = format!(\"bytes {start}-{end}/{total_bytes}\");",
          "212:         let res = client",
          "213:             .put(&session_uri)",
          "214:             .header(reqwest::header::CONTENT_TYPE, \"application/octet-stream\")",
          "215:             .header(reqwest::header::CONTENT_LENGTH, format!(\"{}\", chunk.len()))",
          "216:             .header(\"Content-Range\".to_string(), content_range)",
          "217:             .body(chunk.to_vec());",
          "219:         res.send()",
          "220:             .await",
          "221:             .map(|response| response.error_for_status())",
          "222:             .map_err(|e| {",
          "223:                 anyhow::anyhow!(\"cannot send request to {session_uri} (chunk {start}..{end}): {e}\",)",
          "224:             })??;",
          "226:         total_bytes_sent += n;",
          "227:     }",
          "229:     Ok(url)",
          "230: }",
          "236: pub(super) fn get_manifest(path: &PathBuf) -> anyhow::Result<(PathBuf, Manifest)> {",
          "237:     load_package_manifest(&path).and_then(|j| {",
          "238:         j.ok_or_else(|| anyhow::anyhow!(\"No valid manifest found in path '{}'\", path.display()))",
          "239:     })",
          "240: }",
          "242: pub(super) async fn login_user(",
          "243:     api: &ApiOpts,",
          "244:     env: &WasmerEnv,",
          "245:     interactive: bool,",
          "246:     msg: &str,",
          "247: ) -> anyhow::Result<WasmerClient> {",
          "248:     if let Ok(client) = api.client() {",
          "249:         return Ok(client);",
          "250:     }",
          "252:     let theme = dialoguer::theme::ColorfulTheme::default();",
          "254:     if api.token.is_none() {",
          "255:         if interactive {",
          "256:             eprintln!(",
          "257:                 \"{}: You need to be logged in to {msg}.\",",
          "258:                 \"WARN\".yellow().bold()",
          "259:             );",
          "261:             if Confirm::with_theme(&theme)",
          "262:                 .with_prompt(\"Do you want to login now?\")",
          "263:                 .interact()?",
          "264:             {",
          "265:                 Login {",
          "266:                     no_browser: false,",
          "267:                     wasmer_dir: env.wasmer_dir.clone(),",
          "268:                     registry: api",
          "269:                         .registry",
          "270:                         .clone()",
          "271:                         .map(|l| wasmer_registry::wasmer_env::Registry::from(l.to_string())),",
          "272:                     token: api.token.clone(),",
          "273:                     cache_dir: Some(env.cache_dir.clone()),",
          "274:                 }",
          "275:                 .run_async()",
          "276:                 .await?;",
          "278:             } else {",
          "279:                 anyhow::bail!(\"Stopping the push flow as the user is not logged in.\")",
          "280:             }",
          "281:         } else {",
          "282:             let bin_name = self::macros::bin_name!();",
          "283:             eprintln!(\"You are not logged in. Use the `--token` flag or log in (use `{bin_name} login`) to {msg}.\");",
          "284:             anyhow::bail!(\"Stopping execution as the user is not logged in.\")",
          "285:         }",
          "286:     }",
          "288:     api.client()",
          "289: }",
          "",
          "---------------"
        ],
        "lib/cli/src/commands/package/common/wait.rs||lib/cli/src/commands/package/common/wait.rs": [
          "File: lib/cli/src/commands/package/common/wait.rs -> lib/cli/src/commands/package/common/wait.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: use super::macros::*;",
          "2: use colored::Colorize;",
          "3: use futures_util::StreamExt;",
          "4: use indicatif::ProgressBar;",
          "5: use wasmer_api::WasmerClient;",
          "8: #[derive(Debug, Clone, Copy, PartialEq, Eq, clap::ValueEnum)]",
          "9: pub enum PublishWait {",
          "10:     None,",
          "11:     Container,",
          "12:     NativeExecutables,",
          "13:     Bindings,",
          "14:     All,",
          "15: }",
          "17: #[derive(Debug, Clone, Copy, PartialEq, Eq)]",
          "18: pub struct WaitPackageState {",
          "19:     pub container: bool,",
          "20:     pub native_executables: bool,",
          "21:     pub bindings: bool,",
          "22: }",
          "24: impl WaitPackageState {",
          "25:     pub fn is_any(self) -> bool {",
          "26:         self.container || self.native_executables || self.bindings",
          "27:     }",
          "29:     pub fn new_none() -> Self {",
          "30:         Self {",
          "31:             container: false,",
          "32:             native_executables: false,",
          "33:             bindings: false,",
          "34:         }",
          "35:     }",
          "37:     pub fn new_all() -> Self {",
          "38:         Self {",
          "39:             container: true,",
          "40:             native_executables: true,",
          "41:             bindings: true,",
          "42:         }",
          "43:     }",
          "45:     pub fn new_container() -> Self {",
          "46:         Self {",
          "47:             container: true,",
          "48:             native_executables: false,",
          "49:             bindings: false,",
          "50:         }",
          "51:     }",
          "53:     pub fn new_exe() -> Self {",
          "54:         Self {",
          "55:             container: true,",
          "56:             native_executables: true,",
          "57:             bindings: false,",
          "58:         }",
          "59:     }",
          "61:     pub fn new_bindings() -> Self {",
          "62:         Self {",
          "63:             container: true,",
          "64:             native_executables: false,",
          "65:             bindings: true,",
          "66:         }",
          "67:     }",
          "68: }",
          "70: impl From<PublishWait> for WaitPackageState {",
          "71:     fn from(value: PublishWait) -> Self {",
          "72:         match value {",
          "73:             PublishWait::None => Self::new_none(),",
          "74:             PublishWait::Container => Self::new_container(),",
          "75:             PublishWait::NativeExecutables => Self::new_exe(),",
          "76:             PublishWait::Bindings => Self::new_bindings(),",
          "77:             PublishWait::All => Self::new_all(),",
          "78:         }",
          "79:     }",
          "80: }",
          "82: pub async fn wait_package(",
          "83:     client: &WasmerClient,",
          "84:     to_wait: PublishWait,",
          "85:     package_version_id: wasmer_api::types::Id,",
          "86:     pb: &ProgressBar,",
          "87:     timeout: humantime::Duration,",
          "88: ) -> anyhow::Result<()> {",
          "89:     if let PublishWait::None = to_wait {",
          "90:         return Ok(());",
          "91:     }",
          "93:     pb.set_message(\"Waiting for package to become available...\");",
          "94:     let registry_url = client.graphql_endpoint().to_string();",
          "95:     let login_token = client.auth_token().unwrap_or_default().to_string();",
          "96:     let package_version_id = package_version_id.into_inner();",
          "98:     let (mut stream, _) = wasmer_registry::subscriptions::subscribe_package_version_ready(",
          "99:         &registry_url,",
          "100:         &login_token,",
          "101:         &package_version_id,",
          "102:     )",
          "103:     .await?;",
          "105:     let mut state: WaitPackageState = to_wait.into();",
          "107:     let deadline: std::time::Instant =",
          "108:         std::time::Instant::now() + std::time::Duration::from_secs(timeout.as_secs());",
          "110:     loop {",
          "111:         if !state.is_any() {",
          "112:             break;",
          "113:         }",
          "115:         if std::time::Instant::now() > deadline {",
          "116:             return Err(anyhow::anyhow!(",
          "117:                 \"Timed out waiting for package version to become ready\"",
          "118:             ));",
          "119:         }",
          "121:         let data = match tokio::time::timeout_at(deadline.into(), stream.next()).await {",
          "122:             Err(_) => {",
          "123:                 return Err(anyhow::anyhow!(",
          "124:                     \"Timed out waiting for package version to become ready\"",
          "125:                 ));",
          "126:             }",
          "127:             Ok(None) => {",
          "128:                 break;",
          "129:             }",
          "130:             Ok(Some(data)) => data,",
          "131:         };",
          "133:         if let Some(data) = data.unwrap().data {",
          "134:             match data.package_version_ready.state {",
          "135:                 wasmer_registry::subscriptions::PackageVersionState::WEBC_GENERATED => {",
          "136:                     state.container = false",
          "137:                 }",
          "138:                 wasmer_registry::subscriptions::PackageVersionState::BINDINGS_GENERATED => {",
          "139:                     state.bindings = false",
          "140:                 }",
          "141:                 wasmer_registry::subscriptions::PackageVersionState::NATIVE_EXES_GENERATED => {",
          "142:                     state.native_executables = true",
          "143:                 }",
          "144:                 wasmer_registry::subscriptions::PackageVersionState::Other(_) => {}",
          "145:             }",
          "146:         }",
          "147:     }",
          "149:     pb_ok!(pb, \"Package is available!\");",
          "150:     Ok(())",
          "151: }",
          "",
          "---------------"
        ],
        "lib/cli/src/commands/package/mod.rs||lib/cli/src/commands/package/mod.rs": [
          "File: lib/cli/src/commands/package/mod.rs -> lib/cli/src/commands/package/mod.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: mod build;",
          "2: mod download;",
          "4: pub use build::PackageBuild;",
          "8: #[derive(clap::Subcommand, Debug)]",
          "",
          "[Removed Lines]",
          "5: pub use download::PackageDownload;",
          "",
          "[Added Lines]",
          "2: mod common;",
          "4: pub mod publish;",
          "5: mod push;",
          "6: mod tag;",
          "9: pub use common::wait::PublishWait;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11: #[allow(missing_docs)]",
          "12: pub enum Package {",
          "14:     Build(build::PackageBuild),",
          "15: }",
          "",
          "[Removed Lines]",
          "13:     Download(PackageDownload),",
          "",
          "[Added Lines]",
          "17:     Download(download::PackageDownload),",
          "19:     Tag(tag::PackageTag),",
          "20:     Push(push::PackagePush),",
          "21:     Publish(publish::PackagePublish),",
          "",
          "---------------"
        ],
        "lib/cli/src/commands/package/publish.rs||lib/cli/src/commands/package/publish.rs": [
          "File: lib/cli/src/commands/package/publish.rs -> lib/cli/src/commands/package/publish.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: use crate::{",
          "2:     commands::{",
          "3:         package::{",
          "4:             common::{macros::*, wait::*, *},",
          "5:             push::PackagePush,",
          "6:             tag::PackageTag,",
          "7:         },",
          "8:         AsyncCliCommand,",
          "9:     },",
          "10:     opts::{ApiOpts, WasmerEnv},",
          "11: };",
          "12: use colored::Colorize;",
          "13: use is_terminal::IsTerminal;",
          "14: use std::path::PathBuf;",
          "15: use wasmer_config::package::PackageIdent;",
          "18: #[derive(Debug, clap::Parser)]",
          "19: pub struct PackagePublish {",
          "20:     #[clap(flatten)]",
          "21:     pub api: ApiOpts,",
          "23:     #[clap(flatten)]",
          "24:     pub env: WasmerEnv,",
          "27:     #[clap(long, name = \"dry-run\")]",
          "28:     pub dry_run: bool,",
          "31:     #[clap(long)]",
          "32:     pub quiet: bool,",
          "35:     #[clap(long = \"namespace\")]",
          "36:     pub package_namespace: Option<String>,",
          "39:     #[clap(long = \"name\")]",
          "40:     pub package_name: Option<String>,",
          "43:     #[clap(long = \"version\")]",
          "44:     pub package_version: Option<semver::Version>,",
          "47:     #[clap(long)]",
          "48:     pub no_validate: bool,",
          "53:     #[clap(name = \"path\", default_value = \".\")]",
          "54:     pub package_path: PathBuf,",
          "57:     #[clap(",
          "58:             long,",
          "59:             require_equals = true,",
          "60:             num_args = 0..=1,",
          "61:             default_value_t = PublishWait::None,",
          "62:             default_missing_value = \"container\",",
          "63:             value_enum",
          "64:         )]",
          "65:     pub wait: PublishWait,",
          "71:     #[clap(long, default_value = \"5m\")]",
          "72:     pub timeout: humantime::Duration,",
          "75:     #[clap(long, conflicts_with = \"version\")]",
          "76:     pub bump: bool,",
          "79:     #[clap(long, default_value_t = !std::io::stdin().is_terminal())]",
          "80:     pub non_interactive: bool,",
          "81: }",
          "83: #[async_trait::async_trait]",
          "84: impl AsyncCliCommand for PackagePublish {",
          "85:     type Output = PackageIdent;",
          "87:     async fn run_async(self) -> Result<Self::Output, anyhow::Error> {",
          "88:         tracing::info!(\"Checking if user is logged in\");",
          "89:         let client = login_user(",
          "90:             &self.api,",
          "91:             &self.env,",
          "92:             !self.non_interactive,",
          "93:             \"publish a package\",",
          "94:         )",
          "95:         .await?;",
          "97:         tracing::info!(\"Loading manifest\");",
          "98:         let (manifest_path, manifest) = get_manifest(&self.package_path)?;",
          "99:         tracing::info!(\"Got manifest at path {}\", manifest_path.display());",
          "101:         let (package_namespace, package_hash) = {",
          "102:             let push_cmd = PackagePush {",
          "103:                 api: self.api.clone(),",
          "104:                 env: self.env.clone(),",
          "105:                 dry_run: self.dry_run,",
          "106:                 quiet: self.quiet,",
          "107:                 package_namespace: self.package_namespace.clone(),",
          "108:                 timeout: self.timeout.clone(),",
          "109:                 bump: self.bump.clone(),",
          "110:                 non_interactive: self.non_interactive.clone(),",
          "111:                 wait: self.wait.clone(),",
          "112:                 package_path: self.package_path.clone(),",
          "113:             };",
          "115:             push_cmd.push(&client, &manifest, &manifest_path).await?",
          "116:         };",
          "118:         let ident = PackageTag {",
          "119:             api: self.api.clone(),",
          "120:             env: self.env.clone(),",
          "121:             dry_run: self.dry_run.clone(),",
          "122:             quiet: self.quiet,",
          "123:             package_namespace: Some(package_namespace),",
          "124:             package_name: self.package_name.clone(),",
          "125:             package_version: self.package_version.clone(),",
          "126:             timeout: self.timeout.clone(),",
          "127:             bump: self.bump.clone(),",
          "128:             non_interactive: self.non_interactive.clone(),",
          "129:             package_path: self.package_path.clone(),",
          "130:         }",
          "131:         .tag(&client, &manifest, package_hash)",
          "132:         .await?;",
          "134:         tracing::info!(\"Proceeding to invalidate query cache..\");",
          "136:         if let Err(e) = invalidate_graphql_query_cache(&self.env.cache_dir) {",
          "137:             tracing::warn!(",
          "138:                 error = &*e,",
          "139:                 \"Unable to invalidate the cache used for package version queries\",",
          "140:             );",
          "141:         }",
          "143:         if !self.quiet && !self.non_interactive {",
          "144:             eprintln!(",
          "145:                 \"{} You can now run your package with {}\",",
          "146:                 \"\ud81a\udd54\".green().bold(),",
          "147:                 format!(\"`{} run {ident}`\", bin_name!()).bold()",
          "148:             );",
          "149:         }",
          "150:         Ok(ident)",
          "151:     }",
          "152: }",
          "",
          "---------------"
        ],
        "lib/cli/src/commands/package/push.rs||lib/cli/src/commands/package/push.rs": [
          "File: lib/cli/src/commands/package/push.rs -> lib/cli/src/commands/package/push.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: use super::common::{macros::*, wait::*, *};",
          "2: use crate::{",
          "3:     commands::{AsyncCliCommand, PackageBuild},",
          "4:     opts::{ApiOpts, WasmerEnv},",
          "5: };",
          "6: use colored::Colorize;",
          "7: use is_terminal::IsTerminal;",
          "8: use std::path::PathBuf;",
          "9: use wasmer_api::WasmerClient;",
          "10: use wasmer_config::package::{Manifest, PackageHash};",
          "11: use webc::wasmer_package::Package;",
          "17: #[derive(Debug, clap::Parser)]",
          "18: pub struct PackagePush {",
          "19:     #[clap(flatten)]",
          "20:     pub api: ApiOpts,",
          "22:     #[clap(flatten)]",
          "23:     pub env: WasmerEnv,",
          "26:     #[clap(long, name = \"dry-run\")]",
          "27:     pub dry_run: bool,",
          "30:     #[clap(long)]",
          "31:     pub quiet: bool,",
          "34:     #[clap(long = \"namespace\")]",
          "35:     pub package_namespace: Option<String>,",
          "41:     #[clap(long, default_value = \"5m\")]",
          "42:     pub timeout: humantime::Duration,",
          "45:     #[clap(long, conflicts_with = \"version\")]",
          "46:     pub bump: bool,",
          "49:     #[clap(long, default_value_t = !std::io::stdin().is_terminal())]",
          "50:     pub non_interactive: bool,",
          "53:     #[clap(",
          "54:             long,",
          "55:             require_equals = true,",
          "56:             num_args = 0..=1,",
          "57:             default_value_t = PublishWait::None,",
          "58:             default_missing_value = \"container\",",
          "59:             value_enum",
          "60:         )]",
          "61:     pub wait: PublishWait,",
          "66:     #[clap(name = \"path\", default_value = \".\")]",
          "67:     pub package_path: PathBuf,",
          "68: }",
          "70: impl PackagePush {",
          "71:     async fn get_namespace(",
          "72:         &self,",
          "73:         client: &WasmerClient,",
          "74:         manifest: &Manifest,",
          "75:     ) -> anyhow::Result<String> {",
          "76:         if let Some(owner) = &self.package_namespace {",
          "77:             return Ok(owner.clone());",
          "78:         }",
          "80:         if let Some(pkg) = &manifest.package {",
          "81:             if let Some(ns) = &pkg.name {",
          "82:                 if let Some(first) = ns.split(\"/\").next() {",
          "83:                     return Ok(first.to_string());",
          "84:                 }",
          "85:             }",
          "86:         }",
          "88:         if self.non_interactive {",
          "90:             anyhow::bail!(\"No package namespace specified: use --namespace XXX\");",
          "91:         }",
          "93:         let user = wasmer_api::query::current_user_with_namespaces(&client, None).await?;",
          "94:         let owner = crate::utils::prompts::prompt_for_namespace(",
          "95:             \"Who should own this package?\",",
          "96:             None,",
          "97:             Some(&user),",
          "98:         )?;",
          "100:         Ok(owner.clone())",
          "101:     }",
          "103:     fn get_privacy(&self, manifest: &Manifest) -> bool {",
          "104:         match &manifest.package {",
          "105:             Some(pkg) => pkg.private,",
          "106:             None => true,",
          "107:         }",
          "108:     }",
          "110:     async fn should_push(&self, client: &WasmerClient, hash: &PackageHash) -> anyhow::Result<bool> {",
          "111:         let res = wasmer_api::query::get_package_release(client, &hash.to_string()).await;",
          "112:         tracing::info!(\"{:?}\", res);",
          "113:         res.map(|p| !p.is_some())",
          "114:     }",
          "116:     async fn do_push(",
          "117:         &self,",
          "118:         client: &WasmerClient,",
          "119:         namespace: &str,",
          "120:         package: &Package,",
          "121:         package_hash: &PackageHash,",
          "122:         private: bool,",
          "123:     ) -> anyhow::Result<()> {",
          "124:         let pb = make_pb!(self, \"Uploading the package to the registry..\");",
          "126:         let signed_url = upload(client, package_hash, self.timeout.clone(), package).await?;",
          "128:         let id = match wasmer_api::query::push_package_release(",
          "129:             client,",
          "130:             None,",
          "131:             namespace,",
          "132:             &signed_url,",
          "133:             Some(private),",
          "134:         )",
          "135:         .await?",
          "136:         {",
          "137:             Some(r) => {",
          "138:                 if r.success {",
          "139:                     pb_ok!(pb, \"Succesfully pushed the package to the registry!\");",
          "140:                     r.package_webc.unwrap().id",
          "141:                 } else {",
          "142:                     anyhow::bail!(\"An unidentified error occurred while publishing the package. (response had success: false)\")",
          "143:                 }",
          "144:             }",
          "145:             None => anyhow::bail!(\"An unidentified error occurred while publishing the package.\"), // <- This is extremely bad..",
          "146:         };",
          "148:         wait_package(client, self.wait, id, &pb, self.timeout.clone()).await?;",
          "149:         Ok(())",
          "150:     }",
          "152:     pub async fn push(",
          "153:         &self,",
          "154:         client: &WasmerClient,",
          "155:         manifest: &Manifest,",
          "156:         manifest_path: &PathBuf,",
          "157:     ) -> anyhow::Result<(String, PackageHash)> {",
          "158:         tracing::info!(\"Building package\");",
          "159:         let pb = make_pb!(",
          "160:             self,",
          "161:             \"Creating the package locally...\",",
          "162:             \".\",",
          "163:             \"o\",",
          "164:             \"O\",",
          "165:             \"\u00b0\",",
          "166:             \"O\",",
          "167:             \"o\",",
          "168:             \".\"",
          "169:         );",
          "170:         let package = PackageBuild::check(manifest_path.clone()).execute()?;",
          "171:         pb_ok!(pb, \"Correctly built package locally\");",
          "173:         let hash_bytes = package",
          "174:             .webc_hash()",
          "175:             .ok_or(anyhow::anyhow!(\"No webc hash was provided\"))?;",
          "176:         let hash = PackageHash::from_sha256_bytes(hash_bytes.clone());",
          "177:         tracing::info!(\"Package has hash: {hash}\",);",
          "179:         let namespace = self.get_namespace(client, &manifest).await?;",
          "181:         let private = self.get_privacy(&manifest);",
          "182:         tracing::info!(\"If published, package privacy is {private}\");",
          "184:         let pb = make_pb!(self, \"Checking if package is already in the registry..\");",
          "185:         if self.should_push(&client, &hash).await.map_err(on_error)? {",
          "186:             if !self.dry_run {",
          "187:                 tracing::info!(\"Package should be published\");",
          "188:                 pb_ok!(pb, \"Package not in the registry yet!\");",
          "190:                 self.do_push(&client, &namespace, &package, &hash, private)",
          "191:                     .await",
          "192:                     .map_err(on_error)?;",
          "193:             } else {",
          "194:                 tracing::info!(\"Package should be published, but dry-run is set\");",
          "195:                 pb_ok!(pb, \"Skipping push as dry-run is set\");",
          "196:             }",
          "197:         } else {",
          "198:             tracing::info!(\"Package should not be published\");",
          "199:             pb_ok!(pb, \"Package was already in the registry, no push needed\");",
          "200:         }",
          "202:         Ok((namespace, hash))",
          "203:     }",
          "204: }",
          "206: #[async_trait::async_trait]",
          "207: impl AsyncCliCommand for PackagePush {",
          "208:     type Output = ();",
          "210:     async fn run_async(self) -> Result<Self::Output, anyhow::Error> {",
          "211:         tracing::info!(\"Checking if user is logged in\");",
          "212:         let client = login_user(",
          "213:             &self.api,",
          "214:             &self.env,",
          "215:             !self.non_interactive,",
          "216:             \"push a package\",",
          "217:         )",
          "218:         .await?;",
          "220:         tracing::info!(\"Loading manifest\");",
          "221:         let (manifest_path, manifest) = get_manifest(&self.package_path)?;",
          "222:         tracing::info!(\"Got manifest at path {}\", manifest_path.display());",
          "224:         self.push(&client, &manifest, &manifest_path).await?;",
          "225:         Ok(())",
          "226:     }",
          "227: }",
          "",
          "---------------"
        ],
        "lib/cli/src/commands/package/tag.rs||lib/cli/src/commands/package/tag.rs": [
          "File: lib/cli/src/commands/package/tag.rs -> lib/cli/src/commands/package/tag.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: use super::common::PackageSpecifier;",
          "2: use crate::{",
          "3:     commands::{",
          "4:         package::common::{macros::*, *},",
          "5:         AsyncCliCommand, PackageBuild,",
          "6:     },",
          "7:     opts::{ApiOpts, WasmerEnv},",
          "8: };",
          "9: use colored::Colorize;",
          "10: use dialoguer::{theme::ColorfulTheme, Confirm};",
          "11: use is_terminal::IsTerminal;",
          "12: use std::path::PathBuf;",
          "13: use wasmer_api::WasmerClient;",
          "14: use wasmer_config::package::{Manifest, PackageHash, PackageIdent};",
          "17: #[derive(Debug, clap::Parser)]",
          "18: pub struct PackageTag {",
          "19:     #[clap(flatten)]",
          "20:     pub api: ApiOpts,",
          "22:     #[clap(flatten)]",
          "23:     pub env: WasmerEnv,",
          "26:     #[clap(long, name = \"dry-run\")]",
          "27:     pub dry_run: bool,",
          "30:     #[clap(long)]",
          "31:     pub quiet: bool,",
          "34:     #[clap(long = \"namespace\")]",
          "35:     pub package_namespace: Option<String>,",
          "38:     #[clap(long = \"name\")]",
          "39:     pub package_name: Option<String>,",
          "42:     #[clap(long = \"version\")]",
          "43:     pub package_version: Option<semver::Version>,",
          "49:     #[clap(long, default_value = \"5m\")]",
          "50:     pub timeout: humantime::Duration,",
          "53:     #[clap(long, conflicts_with = \"version\")]",
          "54:     pub bump: bool,",
          "57:     #[clap(long, default_value_t = !std::io::stdin().is_terminal())]",
          "58:     pub non_interactive: bool,",
          "63:     #[clap(name = \"path\", default_value = \".\")]",
          "64:     pub package_path: PathBuf,",
          "65: }",
          "67: impl PackageTag {",
          "68:     async fn get_namespace(",
          "69:         &self,",
          "70:         client: &WasmerClient,",
          "71:         manifest: &Manifest,",
          "72:     ) -> anyhow::Result<String> {",
          "73:         if let Some(owner) = &self.package_namespace {",
          "74:             return Ok(owner.clone());",
          "75:         }",
          "77:         if let Some(pkg) = &manifest.package {",
          "78:             if let Some(ns) = &pkg.name {",
          "79:                 if let Some(first) = ns.split(\"/\").next() {",
          "80:                     return Ok(first.to_string());",
          "81:                 }",
          "82:             }",
          "83:         }",
          "85:         if self.non_interactive {",
          "87:             anyhow::bail!(\"No package namespace specified: use --namespace XXX\");",
          "88:         }",
          "90:         let user = wasmer_api::query::current_user_with_namespaces(&client, None).await?;",
          "91:         let owner = crate::utils::prompts::prompt_for_namespace(",
          "92:             \"Who should own this package?\",",
          "93:             None,",
          "94:             Some(&user),",
          "95:         )?;",
          "97:         Ok(owner.clone())",
          "98:     }",
          "100:     async fn synthesize_tagger(",
          "101:         &self,",
          "102:         client: &WasmerClient,",
          "103:         ident: &PackageSpecifier,",
          "104:     ) -> anyhow::Result<PackageSpecifier> {",
          "105:         let mut new_ident = ident.clone();",
          "107:         if let Some(user_version) = &self.package_version {",
          "108:             match &mut new_ident {",
          "109:                 PackageSpecifier::Hash { .. } => {",
          "110:                     match (&self.package_name, &self.package_namespace) {",
          "111:                         (Some(name), Some(namespace)) => {",
          "112:                             new_ident = PackageSpecifier::Named {",
          "113:                                 namespace: namespace.clone(),",
          "114:                                 name: name.clone(),",
          "115:                                 tag: Tag::Version(user_version.clone()),",
          "116:                             }",
          "117:                         }",
          "118:                         _ => anyhow::bail!(",
          "119:                             \"The flag `--version` was specified, but no namespace and name were given.\"",
          "120:                         ),",
          "121:                     }",
          "122:                 }",
          "123:                 PackageSpecifier::Named { tag, .. } => *tag = Tag::Version(user_version.clone()),",
          "124:             }",
          "125:         } else if let Some(user_namespace) = &self.package_namespace {",
          "126:             match &mut new_ident {",
          "127:                 PackageSpecifier::Hash { hash, namespace } => match &self.package_name {",
          "128:                     Some(name) => {",
          "129:                         new_ident = PackageSpecifier::Named {",
          "130:                             namespace: user_namespace.clone(),",
          "131:                             name: name.clone(),",
          "132:                             tag: Tag::Hash(hash.clone()),",
          "133:                         }",
          "134:                     }",
          "135:                     _ => *namespace = user_namespace.clone(),",
          "136:                 },",
          "137:                 PackageSpecifier::Named { namespace, .. } => *namespace = user_namespace.clone(),",
          "138:             }",
          "139:         } else if let Some(user_name) = &self.package_name {",
          "140:             match &mut new_ident {",
          "141:                 PackageSpecifier::Hash { .. } => {",
          "142:                     anyhow::bail!(\"The flag `--name` was specified, but no namespace was given.\")",
          "143:                 }",
          "144:                 PackageSpecifier::Named { name, .. } => *name = user_name.clone(),",
          "145:             }",
          "146:         }",
          "150:         if let PackageSpecifier::Named {",
          "151:             name,",
          "152:             namespace,",
          "153:             tag: Tag::Version(user_version),",
          "154:         } = &mut new_ident",
          "155:         {",
          "156:             let full_pkg_name = format!(\"{namespace}/{name}\");",
          "157:             let pb = make_pb!(",
          "158:                 self,",
          "159:                 format!(\"Checking if a version of {full_pkg_name} already exists..\")",
          "160:             );",
          "162:             if let Some(registry_version) = wasmer_api::query::get_package_version(",
          "163:                 client,",
          "164:                 full_pkg_name.clone(),",
          "165:                 String::from(\"latest\"),",
          "166:             )",
          "167:             .await?",
          "168:             .map(|p| p.version)",
          "169:             {",
          "170:                 let registry_version = semver::Version::parse(&registry_version)?;",
          "171:                 pb_ok!(",
          "172:                     pb,",
          "173:                     format!(\"Found version {registry_version} of package {full_pkg_name}\")",
          "174:                 );",
          "175:                 if user_version.clone() < registry_version {",
          "176:                     if self.bump {",
          "177:                         user_version.patch += 1;",
          "178:                     } else if !self.non_interactive {",
          "179:                         eprintln!(\"The registry has a newer version of the package.\");",
          "180:                         let theme = ColorfulTheme::default();",
          "181:                         let mut new_version = user_version.clone();",
          "182:                         new_version.patch += 1;",
          "183:                         if Confirm::with_theme(&theme).with_prompt(format!(\"Do you want to bump the package's version ({user_version} -> {new_version})?\")).interact()? {",
          "184:                             user_version.patch += 1;",
          "185:                        }",
          "186:                     }",
          "187:                 }",
          "188:             } else {",
          "189:                 pb_ok!(pb, format!(\"No version of {full_pkg_name} in registry!\"));",
          "190:             }",
          "191:         }",
          "193:         Ok(new_ident)",
          "194:     }",
          "196:     async fn do_tag(",
          "197:         &self,",
          "198:         client: &WasmerClient,",
          "199:         ident: &PackageSpecifier,",
          "200:         manifest: &Manifest,",
          "201:         package_release_id: &wasmer_api::types::Id,",
          "202:     ) -> anyhow::Result<PackageSpecifier> {",
          "203:         tracing::info!(",
          "204:             \"Tagging package with registry id {:?} and specifier {:?}\",",
          "205:             package_release_id,",
          "206:             ident",
          "207:         );",
          "209:         let tagger = self.synthesize_tagger(client, ident).await?;",
          "211:         let pb = make_pb!(self, \"Tagging package...\");",
          "213:         if let PackageSpecifier::Hash { .. } = &tagger {",
          "214:             pb_ok!(pb, \"Package is unnamed, no need to tag it\");",
          "215:             return Ok(tagger);",
          "216:         }",
          "218:         let PackageSpecifier::Named {",
          "219:             namespace,",
          "220:             name,",
          "221:             tag,",
          "222:         } = tagger.clone()",
          "223:         else {",
          "224:             unreachable!()",
          "225:         };",
          "227:         if self.dry_run {",
          "228:             tracing::info!(\"No tagging to do here, dry-run is set\");",
          "229:             pb_ok!(pb, \"Skipping tag (dry-run)\");",
          "230:             return Ok(tagger);",
          "231:         }",
          "233:         let maybe_description = manifest",
          "234:             .package",
          "235:             .as_ref()",
          "236:             .and_then(|p| p.description.clone());",
          "237:         let maybe_homepage = manifest.package.as_ref().and_then(|p| p.homepage.clone());",
          "238:         let maybe_license = manifest.package.as_ref().and_then(|p| p.license.clone());",
          "239:         let maybe_license_file = manifest",
          "240:             .package",
          "241:             .as_ref()",
          "242:             .and_then(|p| p.license_file.clone())",
          "243:             .map(|f| f.to_string_lossy().to_string());",
          "244:         let maybe_readme = manifest",
          "245:             .package",
          "246:             .as_ref()",
          "247:             .and_then(|p| p.readme.clone())",
          "248:             .map(|f| f.to_string_lossy().to_string());",
          "249:         let maybe_repository = manifest.package.as_ref().and_then(|p| p.repository.clone());",
          "250:         let (version, full_name) = (",
          "251:             match &tag {",
          "252:                 Tag::Version(v) => v.to_string(),",
          "253:                 Tag::Hash(h) => h.to_string(),",
          "254:             },",
          "255:             format!(\"{namespace}/{name}\"),",
          "256:         );",
          "258:         let private = if let Some(pkg) = &manifest.package {",
          "259:             Some(pkg.private)",
          "260:         } else {",
          "261:             Some(false)",
          "262:         };",
          "264:         let manifest_raw = toml::to_string(&manifest)?;",
          "266:         let r = wasmer_api::query::tag_package_release(",
          "267:             client,",
          "268:             maybe_description.as_deref(),",
          "269:             maybe_homepage.as_deref(),",
          "270:             maybe_license.as_deref(),",
          "271:             maybe_license_file.as_deref(),",
          "272:             &manifest_raw,",
          "273:             &full_name,",
          "274:             None,",
          "275:             package_release_id,",
          "276:             private,",
          "277:             maybe_readme.as_deref(),",
          "278:             maybe_repository.as_deref(),",
          "279:             &version,",
          "280:         );",
          "282:         match r.await? {",
          "283:             Some(r) => {",
          "284:                 if r.success {",
          "285:                     pb_ok!(pb, \"Successfully tagged package\");",
          "286:                     Ok(tagger)",
          "287:                 } else {",
          "288:                     pb_err!(pb, \"Could not tag package!\");",
          "289:                     anyhow::bail!(\"An unknown error occurred and the tagging failed.\")",
          "290:                 }",
          "291:             }",
          "292:             None => {",
          "293:                 pb_err!(pb, \"Could not tag package!\");",
          "294:                 anyhow::bail!(\"The registry returned an empty response.\")",
          "295:             }",
          "296:         }",
          "297:     }",
          "299:     async fn get_package_id(",
          "300:         &self,",
          "301:         client: &WasmerClient,",
          "302:         hash: &PackageHash,",
          "303:     ) -> anyhow::Result<wasmer_api::types::Id> {",
          "304:         let pb = make_pb!(self, \"Checking if the package exists..\");",
          "306:         tracing::debug!(\"Searching for package with hash: {hash}\");",
          "308:         let pkg = match wasmer_api::query::get_package_release(client, &hash.to_string()).await? {",
          "309:             Some(p) => p,",
          "310:             None => {",
          "311:                 pb_err!(pb, \"The package is not in the registry!\");",
          "312:                 if !self.quiet {",
          "313:                     eprintln!(\"\\n\\nThe package with the required hash does not exist in the selected registry.\");",
          "314:                     let bin_name = bin_name!();",
          "315:                     let cli = cli_line!();",
          "317:                     if cli.contains(\"publish\") && self.dry_run {",
          "318:                         eprintln!(",
          "319:                             \"{}: you are running `{cli}` with `--dry-run` set.\\n\",",
          "320:                             \"HINT\".bold()",
          "321:                         );",
          "322:                     } else {",
          "323:                         eprintln!(",
          "324:                             \"To first push the package to the registry, run `{}`.\",",
          "325:                             format!(\"{bin_name} package push\").bold()",
          "326:                         );",
          "327:                         eprintln!(",
          "328:                             \"{}: you can also use `{}` to push {} tag your package.\\n\",",
          "329:                             \"NOTE\".bold(),",
          "330:                             format!(\"{bin_name} package publish\").bold(),",
          "331:                             \"and\".italic()",
          "332:                         );",
          "333:                     }",
          "334:                 }",
          "335:                 anyhow::bail!(\"Can't tag, no matching package found in the registry.\")",
          "336:             }",
          "337:         };",
          "339:         pb_ok!(pb, \"Found package in the registry!\");",
          "341:         Ok(pkg.id)",
          "342:     }",
          "344:     pub async fn tag(",
          "345:         &self,",
          "346:         client: &WasmerClient,",
          "347:         manifest: &Manifest,",
          "348:         hash: PackageHash,",
          "349:     ) -> anyhow::Result<PackageIdent> {",
          "350:         let namespace = self.get_namespace(client, &manifest).await?;",
          "352:         let ident = into_specifier(&manifest, &hash, namespace)?;",
          "353:         tracing::info!(\"PackageIdent extracted from manifest is {:?}\", ident);",
          "355:         let package_id = self.get_package_id(&client, &hash).await?;",
          "356:         tracing::info!(",
          "357:             \"The package identifier returned from the registry is {:?}\",",
          "358:             package_id",
          "359:         );",
          "361:         let ident = self",
          "362:             .do_tag(&client, &ident, &manifest, &package_id)",
          "363:             .await",
          "364:             .map_err(on_error)?;",
          "366:         Ok(ident.into())",
          "367:     }",
          "368: }",
          "370: #[async_trait::async_trait]",
          "371: impl AsyncCliCommand for PackageTag {",
          "372:     type Output = ();",
          "374:     async fn run_async(self) -> Result<Self::Output, anyhow::Error> {",
          "375:         tracing::info!(\"Checking if user is logged in\");",
          "376:         let client =",
          "377:             login_user(&self.api, &self.env, !self.non_interactive, \"tag a package\").await?;",
          "379:         tracing::info!(\"Loading manifest\");",
          "380:         let (manifest_path, manifest) = get_manifest(&self.package_path)?;",
          "381:         tracing::info!(\"Got manifest at path {}\", manifest_path.display());",
          "383:         tracing::info!(\"Building package\");",
          "384:         let pb = make_pb!(",
          "385:             self,",
          "386:             \"Creating the package locally...\",",
          "387:             \".\",",
          "388:             \"o\",",
          "389:             \"O\",",
          "390:             \"\u00b0\",",
          "391:             \"O\",",
          "392:             \"o\",",
          "393:             \".\"",
          "394:         );",
          "395:         let package = PackageBuild::check(manifest_path.clone()).execute()?;",
          "396:         pb_ok!(pb, \"Correctly built package locally\");",
          "398:         let hash_bytes = package",
          "399:             .webc_hash()",
          "400:             .ok_or(anyhow::anyhow!(\"No webc hash was provided\"))?;",
          "401:         let hash = PackageHash::from_sha256_bytes(hash_bytes);",
          "402:         tracing::info!(\"Package has hash: {hash}\",);",
          "404:         self.tag(&client, &manifest, hash).await?;",
          "405:         Ok(())",
          "406:     }",
          "407: }",
          "",
          "---------------"
        ],
        "lib/cli/src/commands/publish.rs||lib/cli/src/commands/publish.rs": [
          "File: lib/cli/src/commands/publish.rs -> lib/cli/src/commands/publish.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "lib/cli/src/opts.rs||lib/cli/src/opts.rs": [
          "File: lib/cli/src/opts.rs -> lib/cli/src/opts.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: use anyhow::Context;",
          "2: use wasmer_api::WasmerClient;",
          "3: use wasmer_registry::WasmerConfig;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: use std::path::PathBuf;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:     pub registry: Option<url::Url>,",
          "11: }",
          "13: struct Login {",
          "14:     url: url::Url,",
          "15:     token: Option<String>,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: lazy_static::lazy_static! {",
          "17:     pub static ref WASMER_DIR: PathBuf = match WasmerConfig::get_wasmer_dir() {",
          "18:         Ok(path) => path,",
          "19:         Err(e) => {",
          "20:             if let Some(install_prefix) = option_env!(\"WASMER_INSTALL_PREFIX\") {",
          "21:                 return PathBuf::from(install_prefix);",
          "22:             }",
          "24:             panic!(\"Unable to determine the wasmer dir: {e}\");",
          "25:         }",
          "26:     };",
          "29:     pub static ref WASMER_CACHE_DIR: PathBuf = WASMER_DIR.join(\"cache\");",
          "30: }",
          "36: #[derive(Debug, Clone, PartialEq, clap::Parser)]",
          "37: pub struct WasmerEnv {",
          "39:     #[clap(long, env = \"WASMER_DIR\", default_value = WASMER_DIR.as_os_str())]",
          "40:     pub wasmer_dir: PathBuf,",
          "42:     #[clap(long, env = \"WASMER_CACHE_DIR\", default_value = WASMER_CACHE_DIR.as_os_str())]",
          "43:     pub cache_dir: PathBuf,",
          "44: }",
          "",
          "---------------"
        ],
        "lib/registry/src/graphql/subscriptions.rs||lib/registry/src/graphql/subscriptions.rs": [
          "File: lib/registry/src/graphql/subscriptions.rs -> lib/registry/src/graphql/subscriptions.rs"
        ],
        "lib/registry/src/subscriptions.rs||lib/registry/src/subscriptions.rs": [
          "File: lib/registry/src/subscriptions.rs -> lib/registry/src/subscriptions.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:     tungstenite::{client::IntoClientRequest, http::HeaderValue, Message},",
          "19: };",
          "21: async fn subscribe_graphql<Q: GraphQLQuery + Send + Sync + Unpin + 'static>(",
          "22:     registry_url: &str,",
          "23:     login_token: &str,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: pub use crate::graphql::subscriptions::package_version_ready::PackageVersionState;",
          "",
          "---------------"
        ],
        "lib/wasix/src/bin_factory/binary_package.rs||lib/wasix/src/bin_factory/binary_package.rs": [
          "File: lib/wasix/src/bin_factory/binary_package.rs -> lib/wasix/src/bin_factory/binary_package.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "84:         let source = rt.source();",
          "86:         let manifest = container.manifest();",
          "91:         let root = PackageInfo::from_manifest(id, manifest, container.version())?;",
          "92:         let root_id = root.id.clone();",
          "",
          "[Removed Lines]",
          "87:         let id = PackageInfo::package_id_from_manifest(manifest)?.unwrap_or_else(|| {",
          "88:             PackageId::Hash(PackageHash::from_sha256_bytes(container.webc_hash()))",
          "89:         });",
          "",
          "[Added Lines]",
          "87:         let id = match PackageInfo::package_id_from_manifest(manifest)? {",
          "88:             Some(id) => id,",
          "89:             None => PackageId::Hash(PackageHash::from_sha256_bytes(",
          "90:                 container",
          "91:                     .webc_hash()",
          "92:                     .ok_or(anyhow::anyhow!(\"No webc hash was provided\"))?,",
          "93:             )),",
          "94:         };",
          "",
          "---------------"
        ]
      }
    }
  ]
}