{
  "cve_id": "CVE-2021-3623",
  "cve_desc": "A flaw was found in libtpms. The flaw can be triggered by specially-crafted TPM 2 command packets containing illegal values and may lead to an out-of-bounds access when the volatile state of the TPM 2 is marshalled/written or unmarshalled/read. The highest threat from this vulnerability is to system availability.",
  "repo": "stefanberger/libtpms",
  "patch_hash": "2e6173c273ca14adb11386db4e47622552b1c00e",
  "patch_info": {
    "commit_hash": "2e6173c273ca14adb11386db4e47622552b1c00e",
    "repo": "stefanberger/libtpms",
    "commit_url": "https://github.com/stefanberger/libtpms/commit/2e6173c",
    "files": [
      "src/tpm2/Unmarshal.c"
    ],
    "message": "tpm2: Restore original value if unmarsalled value was illegal\n\nRestore the original value of the memory location where data from\na stream was unmarshalled and the unmarshalled value was found to\nbe illegal. The goal is to not keep illegal values in memory.\n\nSigned-off-by: Stefan Berger <stefanb@linux.ibm.com>",
    "before_after_code_files": [
      "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
    ]
  },
  "patch_diff": {
    "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c": [
      "File: src/tpm2/Unmarshal.c -> src/tpm2/Unmarshal.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "165: TPM_GENERATED_Unmarshal(TPM_GENERATED *target, BYTE **buffer, INT32 *size)",
      "166: {",
      "167:     TPM_RC rc = TPM_RC_SUCCESS;",
      "169:     if (rc == TPM_RC_SUCCESS) {",
      "170:  rc = UINT32_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "168:     TPM_GENERATED orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "198: TPM_ECC_CURVE_Unmarshal(TPM_ECC_CURVE *target, BYTE **buffer, INT32 *size)",
      "199: {",
      "200:     TPM_RC rc = TPM_RC_SUCCESS;",
      "202:     if (rc == TPM_RC_SUCCESS) {",
      "203:  rc = UINT16_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "203:     TPM_ECC_CURVE orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "241: TPM_CLOCK_ADJUST_Unmarshal(TPM_CLOCK_ADJUST *target, BYTE **buffer, INT32 *size)",
      "242: {",
      "243:     TPM_RC rc = TPM_RC_SUCCESS;",
      "245:     if (rc == TPM_RC_SUCCESS) {",
      "246:  rc = INT8_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "248:     TPM_CLOCK_ADJUST orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "268: TPM_EO_Unmarshal(TPM_EO *target, BYTE **buffer, INT32 *size)",
      "269: {",
      "270:     TPM_RC rc = TPM_RC_SUCCESS;",
      "272:     if (rc == TPM_RC_SUCCESS) {",
      "273:  rc = UINT16_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "277:     TPM_EO orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "300: TPM_ST_Unmarshal(TPM_ST *target, BYTE **buffer, INT32 *size)",
      "301: {",
      "302:     TPM_RC rc = TPM_RC_SUCCESS;",
      "304:     if (rc == TPM_RC_SUCCESS) {",
      "305:  rc = UINT16_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "311:     TPM_ST orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "336: TPM_SU_Unmarshal(TPM_SU *target, BYTE **buffer, INT32 *size)",
      "337: {",
      "338:     TPM_RC rc = TPM_RC_SUCCESS;",
      "340:     if (rc == TPM_RC_SUCCESS) {",
      "341:  rc = UINT16_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "349:     TPM_SU orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "358: TPM_SE_Unmarshal(TPM_SE *target, BYTE **buffer, INT32 *size)",
      "359: {",
      "360:     TPM_RC rc = TPM_RC_SUCCESS;",
      "362:     if (rc == TPM_RC_SUCCESS) {",
      "363:  rc = UINT8_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "373:     TPM_SE orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "381: TPM_CAP_Unmarshal(TPM_CAP *target, BYTE **buffer, INT32 *size)",
      "382: {",
      "383:     TPM_RC rc = TPM_RC_SUCCESS;",
      "385:     if (rc == TPM_RC_SUCCESS) {",
      "386:  rc = UINT32_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "398:     TPM_CAP orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "452: TPMA_ALGORITHM_Unmarshal(TPMA_ALGORITHM *target, BYTE **buffer, INT32 *size)",
      "453: {",
      "454:     TPM_RC rc = TPM_RC_SUCCESS;",
      "456:     if (rc == TPM_RC_SUCCESS) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "471:     TPMA_ALGORITHM orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "470: TPMA_OBJECT_Unmarshal(TPMA_OBJECT *target, BYTE **buffer, INT32 *size)",
      "471: {",
      "472:     TPM_RC rc = TPM_RC_SUCCESS;",
      "474:     if (rc == TPM_RC_SUCCESS) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "491:     TPMA_OBJECT orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "488: TPMA_SESSION_Unmarshal(TPMA_SESSION *target, BYTE **buffer, INT32 *size)",
      "489: {",
      "490:     TPM_RC rc = TPM_RC_SUCCESS;",
      "492:     if (rc == TPM_RC_SUCCESS) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "511:     TPMA_SESSION orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "519: TPMA_CC_Unmarshal(TPMA_CC *target, BYTE **buffer, INT32 *size)",
      "520: {",
      "521:     TPM_RC rc = TPM_RC_SUCCESS;",
      "523:     if (rc == TPM_RC_SUCCESS) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "544:     TPMA_CC orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "537: TPMI_YES_NO_Unmarshal(TPMI_YES_NO *target, BYTE **buffer, INT32 *size)",
      "538: {",
      "539:     TPM_RC rc = TPM_RC_SUCCESS;",
      "541:     if (rc == TPM_RC_SUCCESS) {",
      "542:  rc = UINT8_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "564:     TPMI_YES_NO orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "559: TPMI_DH_OBJECT_Unmarshal(TPMI_DH_OBJECT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "560: {",
      "561:     TPM_RC rc = TPM_RC_SUCCESS;",
      "563:     if (rc == TPM_RC_SUCCESS) {",
      "564:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "588:     TPMI_DH_OBJECT orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "582: TPMI_DH_PARENT_Unmarshal(TPMI_DH_PARENT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "583: {",
      "584:     TPM_RC rc = TPM_RC_SUCCESS;",
      "586:     if (rc == TPM_RC_SUCCESS) {",
      "587:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "613:     TPMI_DH_PARENT orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "611: TPMI_DH_PERSISTENT_Unmarshal(TPMI_DH_PERSISTENT *target, BYTE **buffer, INT32 *size)",
      "612: {",
      "613:     TPM_RC rc = TPM_RC_SUCCESS;",
      "615:     if (rc == TPM_RC_SUCCESS) {",
      "616:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "644:     TPMI_DH_PERSISTENT orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "630: TPMI_DH_ENTITY_Unmarshal(TPMI_DH_ENTITY *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "631: {",
      "632:     TPM_RC rc = TPM_RC_SUCCESS;",
      "634:     if (rc == TPM_RC_SUCCESS) {",
      "635:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "665:     TPMI_DH_ENTITY orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "667: TPMI_DH_PCR_Unmarshal(TPMI_DH_PCR *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "668: {",
      "669:     TPM_RC rc = TPM_RC_SUCCESS;",
      "671:     if (rc == TPM_RC_SUCCESS) {",
      "672:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "704:     TPMI_DH_PCR orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "688: TPMI_SH_AUTH_SESSION_Unmarshal(TPMI_SH_AUTH_SESSION *target, BYTE **buffer, INT32 *size, BOOL allowPwd)",
      "689: {",
      "690:     TPM_RC rc = TPM_RC_SUCCESS;",
      "692:     if (rc == TPM_RC_SUCCESS) {",
      "693:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "727:     TPMI_SH_AUTH_SESSION orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "711: TPMI_SH_HMAC_Unmarshal(TPMI_SH_HMAC *target, BYTE **buffer, INT32 *size)",
      "712: {",
      "713:     TPM_RC rc = TPM_RC_SUCCESS;",
      "715:     if (rc == TPM_RC_SUCCESS) {",
      "716:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "752:     TPMI_SH_HMAC orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 21 ---",
      "[Context before]",
      "730: TPMI_SH_POLICY_Unmarshal(TPMI_SH_POLICY *target, BYTE **buffer, INT32 *size)",
      "731: {",
      "732:     TPM_RC rc = TPM_RC_SUCCESS;",
      "734:     if (rc == TPM_RC_SUCCESS) {",
      "735:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "773:     TPMI_SH_POLICY orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 22 ---",
      "[Context before]",
      "749: TPMI_DH_CONTEXT_Unmarshal(TPMI_DH_CONTEXT *target, BYTE **buffer, INT32 *size)",
      "750: {",
      "751:     TPM_RC rc = TPM_RC_SUCCESS;",
      "753:     if (rc == TPM_RC_SUCCESS) {",
      "754:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "794:     TPMI_DH_CONTEXT orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 23 ---",
      "[Context before]",
      "772: TPMI_DH_SAVED_Unmarshal(TPMI_DH_SAVED *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "773: {",
      "774:     TPM_RC rc = TPM_RC_SUCCESS;",
      "775:     allowNull = allowNull;",
      "777:     if (rc == TPM_RC_SUCCESS) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "819:     TPMI_DH_SAVED orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 24 ---",
      "[Context before]",
      "800: TPMI_RH_HIERARCHY_Unmarshal(TPMI_RH_HIERARCHY *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "801: {",
      "802:     TPM_RC rc = TPM_RC_SUCCESS;",
      "804:     if (rc == TPM_RC_SUCCESS) {",
      "805:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "849:     TPMI_RH_HIERARCHY orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 25 ---",
      "[Context before]",
      "827: TPMI_RH_ENABLES_Unmarshal(TPMI_RH_ENABLES *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "828: {",
      "829:     TPM_RC rc = TPM_RC_SUCCESS;",
      "831:     if (rc == TPM_RC_SUCCESS) {",
      "832:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "878:     TPMI_RH_ENABLES orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 26 ---",
      "[Context before]",
      "855: TPMI_RH_HIERARCHY_AUTH_Unmarshal(TPMI_RH_HIERARCHY_AUTH *target, BYTE **buffer, INT32 *size)",
      "856: {",
      "857:     TPM_RC rc = TPM_RC_SUCCESS;",
      "859:     if (rc == TPM_RC_SUCCESS) {",
      "860:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "908:     TPMI_RH_HIERARCHY_AUTH orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 27 ---",
      "[Context before]",
      "879: TPMI_RH_HIERARCHY_POLICY_Unmarshal(TPMI_RH_HIERARCHY_POLICY *target, BYTE **buffer, INT32 *size)",
      "880: {",
      "881:     TPM_RC rc = TPM_RC_SUCCESS;",
      "883:     if (rc == TPM_RC_SUCCESS) {",
      "884:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "934:     TPMI_RH_HIERARCHY_POLICY orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 28 ---",
      "[Context before]",
      "908: TPMI_RH_PLATFORM_Unmarshal(TPMI_RH_PLATFORM *target, BYTE **buffer, INT32 *size)",
      "909: {",
      "910:     TPM_RC rc = TPM_RC_SUCCESS;",
      "912:     if (rc == TPM_RC_SUCCESS) {",
      "913:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "965:     TPMI_RH_PLATFORM orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 29 ---",
      "[Context before]",
      "929: TPMI_RH_ENDORSEMENT_Unmarshal(TPMI_RH_ENDORSEMENT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "930: {",
      "931:     TPM_RC rc = TPM_RC_SUCCESS;",
      "933:     if (rc == TPM_RC_SUCCESS) {",
      "934:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "988:     TPMI_RH_ENDORSEMENT orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 30 ---",
      "[Context before]",
      "954: TPMI_RH_PROVISION_Unmarshal(TPMI_RH_PROVISION *target, BYTE **buffer, INT32 *size)",
      "955: {",
      "956:     TPM_RC rc = TPM_RC_SUCCESS;",
      "958:     if (rc == TPM_RC_SUCCESS) {",
      "959:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1015:     TPMI_RH_PROVISION orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 31 ---",
      "[Context before]",
      "976: TPMI_RH_CLEAR_Unmarshal(TPMI_RH_CLEAR *target, BYTE **buffer, INT32 *size)",
      "977: {",
      "978:     TPM_RC rc = TPM_RC_SUCCESS;",
      "980:     if (rc == TPM_RC_SUCCESS) {",
      "981:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1039:     TPMI_RH_CLEAR orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 32 ---",
      "[Context before]",
      "998: TPMI_RH_NV_AUTH_Unmarshal(TPMI_RH_NV_AUTH *target, BYTE **buffer, INT32 *size)",
      "999: {",
      "1000:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1002:     if (rc == TPM_RC_SUCCESS) {",
      "1003:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1063:     TPMI_RH_NV_AUTH orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 33 ---",
      "[Context before]",
      "1025: TPMI_RH_LOCKOUT_Unmarshal(TPMI_RH_LOCKOUT *target, BYTE **buffer, INT32 *size)",
      "1026: {",
      "1027:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1029:     if (rc == TPM_RC_SUCCESS) {",
      "1030:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1092:     TPMI_RH_LOCKOUT orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 34 ---",
      "[Context before]",
      "1046: TPMI_RH_NV_INDEX_Unmarshal(TPMI_RH_NV_INDEX *target, BYTE **buffer, INT32 *size)",
      "1047: {",
      "1048:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1050:     if (rc == TPM_RC_SUCCESS) {",
      "1051:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1115:     TPMI_RH_NV_INDEX orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 35 ---",
      "[Context before]",
      "1065: TPMI_RH_AC_Unmarshal(TPMI_RH_AC *target, BYTE **buffer, INT32 *size)",
      "1066: {",
      "1067:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1069:     if (rc == TPM_RC_SUCCESS) {",
      "1070:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1136:     TPMI_RH_AC orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 36 ---",
      "[Context before]",
      "1084: TPMI_RH_ACT_Unmarshal( TPMI_RH_ACT *target, BYTE **buffer, INT32 *size)",
      "1085: {",
      "1086:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1088:     if (rc == TPM_RC_SUCCESS) {",
      "1089:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1157:     TPMI_RH_ACT orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 37 ---",
      "[Context before]",
      "1103: TPMI_ALG_HASH_Unmarshal(TPMI_ALG_HASH *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "1104: {",
      "1105:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1107:     if (rc == TPM_RC_SUCCESS) {",
      "1108:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1178:     TPMI_ALG_HASH orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 38 ---",
      "[Context before]",
      "1142: TPMI_ALG_SYM_Unmarshal(TPMI_ALG_SYM *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "1143: {",
      "1144:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1146:     if (rc == TPM_RC_SUCCESS) {",
      "1147:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1219:     TPMI_ALG_SYM orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 39 ---",
      "[Context before]",
      "1181: TPMI_ALG_SYM_OBJECT_Unmarshal(TPMI_ALG_SYM_OBJECT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "1182: {",
      "1183:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1185:     if (rc == TPM_RC_SUCCESS) {",
      "1186:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1260:     TPMI_ALG_SYM_OBJECT orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 40 ---",
      "[Context before]",
      "1217: TPMI_ALG_SYM_MODE_Unmarshal(TPMI_ALG_SYM_MODE *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "1218: {",
      "1219:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1221:     if (rc == TPM_RC_SUCCESS) {",
      "1222:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1298:     TPMI_ALG_SYM_MODE orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 41 ---",
      "[Context before]",
      "1259: TPMI_ALG_KDF_Unmarshal(TPMI_ALG_KDF *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "1260: {",
      "1261:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1263:     if (rc == TPM_RC_SUCCESS) {",
      "1264:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1342:     TPMI_ALG_KDF orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 42 ---",
      "[Context before]",
      "1295: TPMI_ALG_SIG_SCHEME_Unmarshal(TPMI_ALG_SIG_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "1296: {",
      "1297:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1299:     if (rc == TPM_RC_SUCCESS) {",
      "1300:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1380:     TPMI_ALG_SIG_SCHEME orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 43 ---",
      "[Context before]",
      "1340: TPMI_ECC_KEY_EXCHANGE_Unmarshal(TPMI_ECC_KEY_EXCHANGE *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "1341: {",
      "1342:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1344:     if (rc == TPM_RC_SUCCESS) {",
      "1345:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1427:     TPMI_ECC_KEY_EXCHANGE orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 44 ---",
      "[Context before]",
      "1374: TPMI_ST_COMMAND_TAG_Unmarshal(TPMI_ST_COMMAND_TAG *target, BYTE **buffer, INT32 *size)",
      "1375: {",
      "1376:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1378:     if (rc == TPM_RC_SUCCESS) {",
      "1379:  rc = TPM_ST_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1463:     TPMI_ST_COMMAND_TAG orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 45 ---",
      "[Context before]",
      "1396: TPMI_ALG_MAC_SCHEME_Unmarshal(TPMI_ALG_MAC_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "1397: {",
      "1398:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1400:     if (rc == TPM_RC_SUCCESS) {",
      "1401:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1487:     TPMI_ALG_MAC_SCHEME orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 46 ---",
      "[Context before]",
      "1438: TPMI_ALG_CIPHER_MODE_Unmarshal(TPMI_ALG_CIPHER_MODE*target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "1439: {",
      "1440:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1442:     if (rc == TPM_RC_SUCCESS) {",
      "1443:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1531:     TPMI_ALG_CIPHER_MODE orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 47 ---",
      "[Context before]",
      "1702: TPMT_TK_CREATION_Unmarshal(TPMT_TK_CREATION *target, BYTE **buffer, INT32 *size)",
      "1703: {",
      "1704:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1706:     if (rc == TPM_RC_SUCCESS) {",
      "1707:  rc = TPM_ST_Unmarshal(&target->tag, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1797:     TPM_ST orig_tag = target->tag; // libtpms added",
      "",
      "---------------",
      "--- Hunk 48 ---",
      "[Context before]",
      "1709:     if (rc == TPM_RC_SUCCESS) {",
      "1710:  if (target->tag != TPM_ST_CREATION) {",
      "1711:      rc = TPM_RC_TAG;",
      "1712:  }",
      "1713:     }",
      "1714:     if (rc == TPM_RC_SUCCESS) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1805:      target->tag = orig_tag; // libtpms added",
      "",
      "---------------",
      "--- Hunk 49 ---",
      "[Context before]",
      "1726: TPMT_TK_VERIFIED_Unmarshal(TPMT_TK_VERIFIED *target, BYTE **buffer, INT32 *size)",
      "1727: {",
      "1728:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1730:     if (rc == TPM_RC_SUCCESS) {",
      "1731:  rc = TPM_ST_Unmarshal(&target->tag, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1823:     TPM_ST orig_tag = target->tag; // libtpms added",
      "",
      "---------------",
      "--- Hunk 50 ---",
      "[Context before]",
      "1733:     if (rc == TPM_RC_SUCCESS) {",
      "1734:  if (target->tag != TPM_ST_VERIFIED) {",
      "1735:      rc = TPM_RC_TAG;",
      "1736:  }",
      "1737:     }",
      "1738:     if (rc == TPM_RC_SUCCESS) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1831:      target->tag = orig_tag; // libtpms added",
      "",
      "---------------",
      "--- Hunk 51 ---",
      "[Context before]",
      "1750: TPMT_TK_AUTH_Unmarshal(TPMT_TK_AUTH *target, BYTE **buffer, INT32 *size)",
      "1751: {",
      "1752:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1754:     if (rc == TPM_RC_SUCCESS) {",
      "1755:  rc = TPM_ST_Unmarshal(&target->tag, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1849:     TPM_ST orig_tag = target->tag; // libtpms added",
      "",
      "---------------",
      "--- Hunk 52 ---",
      "[Context before]",
      "1758:  if ((target->tag != TPM_ST_AUTH_SIGNED) &&",
      "1759:      (target->tag != TPM_ST_AUTH_SECRET)) {",
      "1760:      rc = TPM_RC_TAG;",
      "1761:  }",
      "1762:     }",
      "1763:     if (rc == TPM_RC_SUCCESS) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1858:      target->tag = orig_tag; // libtpms added",
      "",
      "---------------",
      "--- Hunk 53 ---",
      "[Context before]",
      "1775: TPMT_TK_HASHCHECK_Unmarshal(TPMT_TK_HASHCHECK *target, BYTE **buffer, INT32 *size)",
      "1776: {",
      "1777:     TPM_RC rc = TPM_RC_SUCCESS;",
      "1779:     if (rc == TPM_RC_SUCCESS) {",
      "1780:  rc = TPM_ST_Unmarshal(&target->tag, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1876:     TPM_ST orig_tag = target->tag; // libtpms added",
      "",
      "---------------",
      "--- Hunk 54 ---",
      "[Context before]",
      "1782:     if (rc == TPM_RC_SUCCESS) {",
      "1783:  if (target->tag != TPM_ST_HASHCHECK) {",
      "1784:      rc = TPM_RC_TAG;",
      "1785:  }",
      "1786:     }",
      "1787:     if (rc == TPM_RC_SUCCESS) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1884:      target->tag = orig_tag; // libtpms added",
      "",
      "---------------",
      "--- Hunk 55 ---",
      "[Context before]",
      "2386: TPMI_ST_ATTEST_Unmarshal(TPMI_ST_ATTEST *target, BYTE **buffer, INT32 *size)",
      "2387: {",
      "2388:     TPM_RC rc = TPM_RC_SUCCESS;",
      "2390:     if (rc == TPM_RC_SUCCESS) {",
      "2391:  rc = TPM_ST_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2489:     TPMI_ST_ATTEST orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 56 ---",
      "[Context before]",
      "2496: TPMI_AES_KEY_BITS_Unmarshal(TPMI_AES_KEY_BITS *target, BYTE **buffer, INT32 *size)",
      "2497: {",
      "2498:     TPM_RC rc = TPM_RC_SUCCESS;",
      "2500:     if (rc == TPM_RC_SUCCESS) {",
      "2501:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2601:     TPMI_AES_KEY_BITS orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 57 ---",
      "[Context before]",
      "2518: TPMI_CAMELLIA_KEY_BITS_Unmarshal(TPMI_CAMELLIA_KEY_BITS *target, BYTE **buffer, INT32 *size)",
      "2519: {",
      "2520:     TPM_RC rc = TPM_RC_SUCCESS;",
      "2522:     if (rc == TPM_RC_SUCCESS) {",
      "2523:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2625:     TPMI_CAMELLIA_KEY_BITS orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 58 ---",
      "[Context before]",
      "2539: TPMI_SM4_KEY_BITS_Unmarshal(TPMI_SM4_KEY_BITS *target, BYTE **buffer, INT32 *size)",
      "2540: {",
      "2541:     TPM_RC rc = TPM_RC_SUCCESS;",
      "2543:     if (rc == TPM_RC_SUCCESS) {",
      "2544:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2648:     TPMI_SM4_KEY_BITS orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 59 ---",
      "[Context before]",
      "2560: TPMI_TDES_KEY_BITS_Unmarshal(TPMI_SM4_KEY_BITS *target, BYTE **buffer, INT32 *size)",
      "2561: {",
      "2562:     TPM_RC rc = TPM_RC_SUCCESS;",
      "2564:     if (rc == TPM_RC_SUCCESS) {",
      "2565:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2671:     TPMI_SM4_KEY_BITS orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 60 ---",
      "[Context before]",
      "2843: TPMI_ALG_KEYEDHASH_SCHEME_Unmarshal(TPMI_ALG_KEYEDHASH_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "2844: {",
      "2845:     TPM_RC rc = TPM_RC_SUCCESS;",
      "2847:     if (rc == TPM_RC_SUCCESS) {",
      "2848:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2956:     TPMI_ALG_KEYEDHASH_SCHEME orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 61 ---",
      "[Context before]",
      "3246: TPMI_ALG_ASYM_SCHEME_Unmarshal(TPMI_ALG_ASYM_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "3247: {",
      "3248:     TPM_RC rc = TPM_RC_SUCCESS;",
      "3250:     if (rc == TPM_RC_SUCCESS) {",
      "3251:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3361:     TPMI_ALG_ASYM_SCHEME orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 62 ---",
      "[Context before]",
      "3367: TPMI_ALG_RSA_SCHEME_Unmarshal(TPMI_ALG_RSA_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "3368: {",
      "3369:     TPM_RC rc = TPM_RC_SUCCESS;",
      "3371:     if (rc == TPM_RC_SUCCESS) {",
      "3372:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3484:     TPMI_ALG_RSA_SCHEME orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 63 ---",
      "[Context before]",
      "3419: TPMI_ALG_RSA_DECRYPT_Unmarshal(TPMI_ALG_RSA_DECRYPT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "3420: {",
      "3421:     TPM_RC rc = TPM_RC_SUCCESS;",
      "3423:     if (rc == TPM_RC_SUCCESS) {",
      "3424:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3538:     TPMI_ALG_RSA_DECRYPT orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 64 ---",
      "[Context before]",
      "3478: TPMI_RSA_KEY_BITS_Unmarshal(TPMI_RSA_KEY_BITS *target, BYTE **buffer, INT32 *size)",
      "3479: {",
      "3480:     TPM_RC rc = TPM_RC_SUCCESS;",
      "3482:     if (rc == TPM_RC_SUCCESS) {",
      "3483:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3599:     TPMI_RSA_KEY_BITS orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 65 ---",
      "[Context before]",
      "3574: TPMI_ALG_ECC_SCHEME_Unmarshal(TPMI_ALG_ECC_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
      "3575: {",
      "3576:     TPM_RC rc = TPM_RC_SUCCESS;",
      "3578:     if (rc == TPM_RC_SUCCESS) {",
      "3579:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3697:     TPMI_ALG_ECC_SCHEME orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 66 ---",
      "[Context before]",
      "3616: TPMI_ECC_CURVE_Unmarshal(TPMI_ECC_CURVE *target, BYTE **buffer, INT32 *size)",
      "3617: {",
      "3618:     TPM_RC rc = TPM_RC_SUCCESS;",
      "3620:     if (rc == TPM_RC_SUCCESS) {",
      "3621:  rc = TPM_ECC_CURVE_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3741:     TPMI_ECC_CURVE orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 67 ---",
      "[Context before]",
      "3866: TPMI_ALG_PUBLIC_Unmarshal(TPMI_ALG_PUBLIC *target, BYTE **buffer, INT32 *size)",
      "3867: {",
      "3868:     TPM_RC rc = TPM_RC_SUCCESS;",
      "3870:     if (rc == TPM_RC_SUCCESS) {",
      "3871:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3993:     TPMI_ALG_PUBLIC orig_target = *target; // libtpms added",
      "",
      "---------------",
      "--- Hunk 68 ---",
      "[Context before]",
      "4221: TPMA_NV_Unmarshal(TPMA_NV *target, BYTE **buffer, INT32 *size)",
      "4222: {",
      "4223:     TPM_RC rc = TPM_RC_SUCCESS;",
      "4225:     if (rc == TPM_RC_SUCCESS) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4350:     TPMA_NV orig_target = *target; // libtpms added",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a116d366871e2657243209930cc3bda68f9dd938",
      "candidate_info": {
        "commit_hash": "a116d366871e2657243209930cc3bda68f9dd938",
        "repo": "stefanberger/libtpms",
        "commit_url": "https://github.com/stefanberger/libtpms/commit/a116d366871e2657243209930cc3bda68f9dd938",
        "files": [
          "src/tpm2/Unmarshal.c"
        ],
        "message": "tpm2: Restore original value if unmarshalled value was illegal\n\nRestore the original value of the memory location where data from\na stream was unmarshalled and the unmarshalled value was found to\nbe illegal. The goal is to not keep illegal values in memory.\n\nSigned-off-by: Stefan Berger <stefanb@linux.ibm.com>",
        "before_after_code_files": [
          "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
          ],
          "candidate": [
            "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
          ]
        }
      },
      "candidate_diff": {
        "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c": [
          "File: src/tpm2/Unmarshal.c -> src/tpm2/Unmarshal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "165: TPM_GENERATED_Unmarshal(TPM_GENERATED *target, BYTE **buffer, INT32 *size)",
          "166: {",
          "167:     TPM_RC rc = TPM_RC_SUCCESS;",
          "169:     if (rc == TPM_RC_SUCCESS) {",
          "170:  rc = UINT32_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168:     TPM_GENERATED orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "197: TPM_ECC_CURVE_Unmarshal(TPM_ECC_CURVE *target, BYTE **buffer, INT32 *size)",
          "198: {",
          "199:     TPM_RC rc = TPM_RC_SUCCESS;",
          "201:     if (rc == TPM_RC_SUCCESS) {",
          "202:  rc = UINT16_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "202:     TPM_ECC_CURVE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "240: TPM_CLOCK_ADJUST_Unmarshal(TPM_CLOCK_ADJUST *target, BYTE **buffer, INT32 *size)",
          "241: {",
          "242:     TPM_RC rc = TPM_RC_SUCCESS;",
          "244:     if (rc == TPM_RC_SUCCESS) {",
          "245:  rc = INT8_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "247:     TPM_CLOCK_ADJUST orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "267: TPM_EO_Unmarshal(TPM_EO *target, BYTE **buffer, INT32 *size)",
          "268: {",
          "269:     TPM_RC rc = TPM_RC_SUCCESS;",
          "271:     if (rc == TPM_RC_SUCCESS) {",
          "272:  rc = UINT16_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "276:     TPM_EO orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "299: TPM_ST_Unmarshal(TPM_ST *target, BYTE **buffer, INT32 *size)",
          "300: {",
          "301:     TPM_RC rc = TPM_RC_SUCCESS;",
          "303:     if (rc == TPM_RC_SUCCESS) {",
          "304:  rc = UINT16_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "310:     TPM_ST orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "335: TPM_SU_Unmarshal(TPM_SU *target, BYTE **buffer, INT32 *size)",
          "336: {",
          "337:     TPM_RC rc = TPM_RC_SUCCESS;",
          "339:     if (rc == TPM_RC_SUCCESS) {",
          "340:  rc = UINT16_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "348:     TPM_SU orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "357: TPM_SE_Unmarshal(TPM_SE *target, BYTE **buffer, INT32 *size)",
          "358: {",
          "359:     TPM_RC rc = TPM_RC_SUCCESS;",
          "361:     if (rc == TPM_RC_SUCCESS) {",
          "362:  rc = UINT8_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "372:     TPM_SE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "380: TPM_CAP_Unmarshal(TPM_CAP *target, BYTE **buffer, INT32 *size)",
          "381: {",
          "382:     TPM_RC rc = TPM_RC_SUCCESS;",
          "384:     if (rc == TPM_RC_SUCCESS) {",
          "385:  rc = UINT32_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "397:     TPM_CAP orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "450: TPMA_ALGORITHM_Unmarshal(TPMA_ALGORITHM *target, BYTE **buffer, INT32 *size)",
          "451: {",
          "452:     TPM_RC rc = TPM_RC_SUCCESS;",
          "454:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "469:     TPMA_ALGORITHM orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "468: TPMA_OBJECT_Unmarshal(TPMA_OBJECT *target, BYTE **buffer, INT32 *size)",
          "469: {",
          "470:     TPM_RC rc = TPM_RC_SUCCESS;",
          "472:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "489:     TPMA_OBJECT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "486: TPMA_SESSION_Unmarshal(TPMA_SESSION *target, BYTE **buffer, INT32 *size)",
          "487: {",
          "488:     TPM_RC rc = TPM_RC_SUCCESS;",
          "490:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "509:     TPMA_SESSION orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "517: TPMA_CC_Unmarshal(TPMA_CC *target, BYTE **buffer, INT32 *size)",
          "518: {",
          "519:     TPM_RC rc = TPM_RC_SUCCESS;",
          "521:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "542:     TPMA_CC orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "535: TPMI_YES_NO_Unmarshal(TPMI_YES_NO *target, BYTE **buffer, INT32 *size)",
          "536: {",
          "537:     TPM_RC rc = TPM_RC_SUCCESS;",
          "539:     if (rc == TPM_RC_SUCCESS) {",
          "540:  rc = UINT8_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "562:     TPMI_YES_NO orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "557: TPMI_DH_OBJECT_Unmarshal(TPMI_DH_OBJECT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "558: {",
          "559:     TPM_RC rc = TPM_RC_SUCCESS;",
          "561:     if (rc == TPM_RC_SUCCESS) {",
          "562:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "586:     TPMI_DH_OBJECT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "580: TPMI_DH_PARENT_Unmarshal(TPMI_DH_PARENT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "581: {",
          "582:     TPM_RC rc = TPM_RC_SUCCESS;",
          "584:     if (rc == TPM_RC_SUCCESS) {",
          "585:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "611:     TPMI_DH_PARENT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "609: TPMI_DH_PERSISTENT_Unmarshal(TPMI_DH_PERSISTENT *target, BYTE **buffer, INT32 *size)",
          "610: {",
          "611:     TPM_RC rc = TPM_RC_SUCCESS;",
          "613:     if (rc == TPM_RC_SUCCESS) {",
          "614:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "642:     TPMI_DH_PERSISTENT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "628: TPMI_DH_ENTITY_Unmarshal(TPMI_DH_ENTITY *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "629: {",
          "630:     TPM_RC rc = TPM_RC_SUCCESS;",
          "632:     if (rc == TPM_RC_SUCCESS) {",
          "633:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "663:     TPMI_DH_ENTITY orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "665: TPMI_DH_PCR_Unmarshal(TPMI_DH_PCR *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "666: {",
          "667:     TPM_RC rc = TPM_RC_SUCCESS;",
          "669:     if (rc == TPM_RC_SUCCESS) {",
          "670:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "702:     TPMI_DH_PCR orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "686: TPMI_SH_AUTH_SESSION_Unmarshal(TPMI_SH_AUTH_SESSION *target, BYTE **buffer, INT32 *size, BOOL allowPwd)",
          "687: {",
          "688:     TPM_RC rc = TPM_RC_SUCCESS;",
          "690:     if (rc == TPM_RC_SUCCESS) {",
          "691:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "725:     TPMI_SH_AUTH_SESSION orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "709: TPMI_SH_HMAC_Unmarshal(TPMI_SH_HMAC *target, BYTE **buffer, INT32 *size)",
          "710: {",
          "711:     TPM_RC rc = TPM_RC_SUCCESS;",
          "713:     if (rc == TPM_RC_SUCCESS) {",
          "714:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "750:     TPMI_SH_HMAC orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "728: TPMI_SH_POLICY_Unmarshal(TPMI_SH_POLICY *target, BYTE **buffer, INT32 *size)",
          "729: {",
          "730:     TPM_RC rc = TPM_RC_SUCCESS;",
          "732:     if (rc == TPM_RC_SUCCESS) {",
          "733:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "771:     TPMI_SH_POLICY orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "747: TPMI_DH_CONTEXT_Unmarshal(TPMI_DH_CONTEXT *target, BYTE **buffer, INT32 *size)",
          "748: {",
          "749:     TPM_RC rc = TPM_RC_SUCCESS;",
          "751:     if (rc == TPM_RC_SUCCESS) {",
          "752:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "792:     TPMI_DH_CONTEXT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "770: TPMI_DH_SAVED_Unmarshal(TPMI_DH_SAVED *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "771: {",
          "772:     TPM_RC rc = TPM_RC_SUCCESS;",
          "773:     allowNull = allowNull;",
          "775:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "817:     TPMI_DH_SAVED orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "798: TPMI_RH_HIERARCHY_Unmarshal(TPMI_RH_HIERARCHY *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "799: {",
          "800:     TPM_RC rc = TPM_RC_SUCCESS;",
          "802:     if (rc == TPM_RC_SUCCESS) {",
          "803:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "847:     TPMI_RH_HIERARCHY orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "825: TPMI_RH_ENABLES_Unmarshal(TPMI_RH_ENABLES *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "826: {",
          "827:     TPM_RC rc = TPM_RC_SUCCESS;",
          "829:     if (rc == TPM_RC_SUCCESS) {",
          "830:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "876:     TPMI_RH_ENABLES orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "853: TPMI_RH_HIERARCHY_AUTH_Unmarshal(TPMI_RH_HIERARCHY_AUTH *target, BYTE **buffer, INT32 *size)",
          "854: {",
          "855:     TPM_RC rc = TPM_RC_SUCCESS;",
          "857:     if (rc == TPM_RC_SUCCESS) {",
          "858:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "906:     TPMI_RH_HIERARCHY_AUTH orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "877: TPMI_RH_PLATFORM_Unmarshal(TPMI_RH_PLATFORM *target, BYTE **buffer, INT32 *size)",
          "878: {",
          "879:     TPM_RC rc = TPM_RC_SUCCESS;",
          "881:     if (rc == TPM_RC_SUCCESS) {",
          "882:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "932:     TPMI_RH_PLATFORM orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "898: TPMI_RH_ENDORSEMENT_Unmarshal(TPMI_RH_ENDORSEMENT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "899: {",
          "900:     TPM_RC rc = TPM_RC_SUCCESS;",
          "902:     if (rc == TPM_RC_SUCCESS) {",
          "903:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "955:     TPMI_RH_ENDORSEMENT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "923: TPMI_RH_PROVISION_Unmarshal(TPMI_RH_PROVISION *target, BYTE **buffer, INT32 *size)",
          "924: {",
          "925:     TPM_RC rc = TPM_RC_SUCCESS;",
          "927:     if (rc == TPM_RC_SUCCESS) {",
          "928:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "982:     TPMI_RH_PROVISION orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "945: TPMI_RH_CLEAR_Unmarshal(TPMI_RH_CLEAR *target, BYTE **buffer, INT32 *size)",
          "946: {",
          "947:     TPM_RC rc = TPM_RC_SUCCESS;",
          "949:     if (rc == TPM_RC_SUCCESS) {",
          "950:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1006:     TPMI_RH_CLEAR orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "967: TPMI_RH_NV_AUTH_Unmarshal(TPMI_RH_NV_AUTH *target, BYTE **buffer, INT32 *size)",
          "968: {",
          "969:     TPM_RC rc = TPM_RC_SUCCESS;",
          "971:     if (rc == TPM_RC_SUCCESS) {",
          "972:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1030:     TPMI_RH_NV_AUTH orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "994: TPMI_RH_LOCKOUT_Unmarshal(TPMI_RH_LOCKOUT *target, BYTE **buffer, INT32 *size)",
          "995: {",
          "996:     TPM_RC rc = TPM_RC_SUCCESS;",
          "998:     if (rc == TPM_RC_SUCCESS) {",
          "999:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1059:     TPMI_RH_LOCKOUT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1015: TPMI_RH_NV_INDEX_Unmarshal(TPMI_RH_NV_INDEX *target, BYTE **buffer, INT32 *size)",
          "1016: {",
          "1017:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1019:     if (rc == TPM_RC_SUCCESS) {",
          "1020:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1082:     TPMI_RH_NV_INDEX orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1034: TPMI_ALG_HASH_Unmarshal(TPMI_ALG_HASH *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1035: {",
          "1036:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1038:     if (rc == TPM_RC_SUCCESS) {",
          "1039:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1103:     TPMI_ALG_HASH orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1073: TPMI_ALG_SYM_Unmarshal(TPMI_ALG_SYM *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1074: {",
          "1075:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1077:     if (rc == TPM_RC_SUCCESS) {",
          "1078:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1144:     TPMI_ALG_SYM orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1112: TPMI_ALG_SYM_OBJECT_Unmarshal(TPMI_ALG_SYM_OBJECT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1113: {",
          "1114:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1116:     if (rc == TPM_RC_SUCCESS) {",
          "1117:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1185:     TPMI_ALG_SYM_OBJECT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1148: TPMI_ALG_SYM_MODE_Unmarshal(TPMI_ALG_SYM_MODE *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1149: {",
          "1150:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1152:     if (rc == TPM_RC_SUCCESS) {",
          "1153:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1223:     TPMI_ALG_SYM_MODE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1190: TPMI_ALG_KDF_Unmarshal(TPMI_ALG_KDF *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1191: {",
          "1192:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1194:     if (rc == TPM_RC_SUCCESS) {",
          "1195:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1267:     TPMI_ALG_KDF orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1226: TPMI_ALG_SIG_SCHEME_Unmarshal(TPMI_ALG_SIG_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1227: {",
          "1228:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1230:     if (rc == TPM_RC_SUCCESS) {",
          "1231:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1305:     TPMI_ALG_SIG_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1271: TPMI_ECC_KEY_EXCHANGE_Unmarshal(TPMI_ECC_KEY_EXCHANGE *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1272: {",
          "1273:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1275:     if (rc == TPM_RC_SUCCESS) {",
          "1276:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1352:     TPMI_ECC_KEY_EXCHANGE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1305: TPMI_ST_COMMAND_TAG_Unmarshal(TPMI_ST_COMMAND_TAG *target, BYTE **buffer, INT32 *size)",
          "1306: {",
          "1307:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1309:     if (rc == TPM_RC_SUCCESS) {",
          "1310:  rc = TPM_ST_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1388:     TPMI_ST_COMMAND_TAG orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1327: TPMI_ALG_MAC_SCHEME_Unmarshal(TPMI_ALG_MAC_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1328: {",
          "1329:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1331:     if (rc == TPM_RC_SUCCESS) {",
          "1332:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1412:     TPMI_ALG_MAC_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "1369: TPMI_ALG_CIPHER_MODE_Unmarshal(TPMI_ALG_CIPHER_MODE*target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1370: {",
          "1371:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1373:     if (rc == TPM_RC_SUCCESS) {",
          "1374:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1456:     TPMI_ALG_CIPHER_MODE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "1633: TPMT_TK_CREATION_Unmarshal(TPMT_TK_CREATION *target, BYTE **buffer, INT32 *size)",
          "1634: {",
          "1635:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1637:     if (rc == TPM_RC_SUCCESS) {",
          "1638:  rc = TPM_ST_Unmarshal(&target->tag, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1722:     TPM_ST orig_tag = target->tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "1640:     if (rc == TPM_RC_SUCCESS) {",
          "1641:  if (target->tag != TPM_ST_CREATION) {",
          "1642:      rc = TPM_RC_TAG;",
          "1643:  }",
          "1644:     }",
          "1645:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1730:      target->tag = orig_tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "1657: TPMT_TK_VERIFIED_Unmarshal(TPMT_TK_VERIFIED *target, BYTE **buffer, INT32 *size)",
          "1658: {",
          "1659:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1661:     if (rc == TPM_RC_SUCCESS) {",
          "1662:  rc = TPM_ST_Unmarshal(&target->tag, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1748:     TPM_ST orig_tag = target->tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "1664:     if (rc == TPM_RC_SUCCESS) {",
          "1665:  if (target->tag != TPM_ST_VERIFIED) {",
          "1666:      rc = TPM_RC_TAG;",
          "1667:  }",
          "1668:     }",
          "1669:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1756:      target->tag = orig_tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "1681: TPMT_TK_AUTH_Unmarshal(TPMT_TK_AUTH *target, BYTE **buffer, INT32 *size)",
          "1682: {",
          "1683:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1685:     if (rc == TPM_RC_SUCCESS) {",
          "1686:  rc = TPM_ST_Unmarshal(&target->tag, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1774:     TPM_ST orig_tag = target->tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "1689:  if ((target->tag != TPM_ST_AUTH_SIGNED) &&",
          "1690:      (target->tag != TPM_ST_AUTH_SECRET)) {",
          "1691:      rc = TPM_RC_TAG;",
          "1692:  }",
          "1693:     }",
          "1694:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1783:      target->tag = orig_tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "1706: TPMT_TK_HASHCHECK_Unmarshal(TPMT_TK_HASHCHECK *target, BYTE **buffer, INT32 *size)",
          "1707: {",
          "1708:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1710:     if (rc == TPM_RC_SUCCESS) {",
          "1711:  rc = TPM_ST_Unmarshal(&target->tag, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1801:     TPM_ST orig_tag = target->tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "1713:     if (rc == TPM_RC_SUCCESS) {",
          "1714:  if (target->tag != TPM_ST_HASHCHECK) {",
          "1715:      rc = TPM_RC_TAG;",
          "1716:  }",
          "1717:     }",
          "1718:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1809:      target->tag = orig_tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "2303: TPMI_ST_ATTEST_Unmarshal(TPMI_ST_ATTEST *target, BYTE **buffer, INT32 *size)",
          "2304: {",
          "2305:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2307:     if (rc == TPM_RC_SUCCESS) {",
          "2308:  rc = TPM_ST_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2400:     TPMI_ST_ATTEST orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "2413: TPMI_AES_KEY_BITS_Unmarshal(TPMI_AES_KEY_BITS *target, BYTE **buffer, INT32 *size)",
          "2414: {",
          "2415:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2417:     if (rc == TPM_RC_SUCCESS) {",
          "2418:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2512:     TPMI_AES_KEY_BITS orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "2435: TPMI_CAMELLIA_KEY_BITS_Unmarshal(TPMI_CAMELLIA_KEY_BITS *target, BYTE **buffer, INT32 *size)",
          "2436: {",
          "2437:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2439:     if (rc == TPM_RC_SUCCESS) {",
          "2440:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2536:     TPMI_CAMELLIA_KEY_BITS orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "2456: TPMI_SM4_KEY_BITS_Unmarshal(TPMI_SM4_KEY_BITS *target, BYTE **buffer, INT32 *size)",
          "2457: {",
          "2458:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2460:     if (rc == TPM_RC_SUCCESS) {",
          "2461:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2559:     TPMI_SM4_KEY_BITS orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "2477: TPMI_TDES_KEY_BITS_Unmarshal(TPMI_SM4_KEY_BITS *target, BYTE **buffer, INT32 *size)",
          "2478: {",
          "2479:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2481:     if (rc == TPM_RC_SUCCESS) {",
          "2482:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2582:     TPMI_SM4_KEY_BITS orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "2760: TPMI_ALG_KEYEDHASH_SCHEME_Unmarshal(TPMI_ALG_KEYEDHASH_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "2761: {",
          "2762:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2764:     if (rc == TPM_RC_SUCCESS) {",
          "2765:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2867:     TPMI_ALG_KEYEDHASH_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "3163: TPMI_ALG_ASYM_SCHEME_Unmarshal(TPMI_ALG_ASYM_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "3164: {",
          "3165:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3167:     if (rc == TPM_RC_SUCCESS) {",
          "3168:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3272:     TPMI_ALG_ASYM_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "3284: TPMI_ALG_RSA_SCHEME_Unmarshal(TPMI_ALG_RSA_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "3285: {",
          "3286:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3288:     if (rc == TPM_RC_SUCCESS) {",
          "3289:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3395:     TPMI_ALG_RSA_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "3336: TPMI_ALG_RSA_DECRYPT_Unmarshal(TPMI_ALG_RSA_DECRYPT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "3337: {",
          "3338:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3340:     if (rc == TPM_RC_SUCCESS) {",
          "3341:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3449:     TPMI_ALG_RSA_DECRYPT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "3395: TPMI_RSA_KEY_BITS_Unmarshal(TPMI_RSA_KEY_BITS *target, BYTE **buffer, INT32 *size)",
          "3396: {",
          "3397:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3399:     if (rc == TPM_RC_SUCCESS) {",
          "3400:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3510:     TPMI_RSA_KEY_BITS orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "3490: TPMI_ALG_ECC_SCHEME_Unmarshal(TPMI_ALG_ECC_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "3491: {",
          "3492:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3494:     if (rc == TPM_RC_SUCCESS) {",
          "3495:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3607:     TPMI_ALG_ECC_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "3532: TPMI_ECC_CURVE_Unmarshal(TPMI_ECC_CURVE *target, BYTE **buffer, INT32 *size)",
          "3533: {",
          "3534:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3536:     if (rc == TPM_RC_SUCCESS) {",
          "3537:  rc = TPM_ECC_CURVE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3651:     TPMI_ECC_CURVE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "3782: TPMI_ALG_PUBLIC_Unmarshal(TPMI_ALG_PUBLIC *target, BYTE **buffer, INT32 *size)",
          "3783: {",
          "3784:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3786:     if (rc == TPM_RC_SUCCESS) {",
          "3787:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3903:     TPMI_ALG_PUBLIC orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "4137: TPMA_NV_Unmarshal(TPMA_NV *target, BYTE **buffer, INT32 *size)",
          "4138: {",
          "4139:     TPM_RC rc = TPM_RC_SUCCESS;",
          "4141:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4260:     TPMA_NV orig_target = *target; // libtpms added",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5cc98a62dc6f204dcf5b87c2ee83ac742a6a319b",
      "candidate_info": {
        "commit_hash": "5cc98a62dc6f204dcf5b87c2ee83ac742a6a319b",
        "repo": "stefanberger/libtpms",
        "commit_url": "https://github.com/stefanberger/libtpms/commit/5cc98a62dc6f204dcf5b87c2ee83ac742a6a319b",
        "files": [
          "src/tpm2/Unmarshal.c"
        ],
        "message": "tpm2: Restore original value if unmarshalled value was illegal\n\nRestore the original value of the memory location where data from\na stream was unmarshalled and the unmarshalled value was found to\nbe illegal. The goal is to not keep illegal values in memory.\n\nSigned-off-by: Stefan Berger <stefanb@linux.ibm.com>",
        "before_after_code_files": [
          "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
          ],
          "candidate": [
            "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
          ]
        }
      },
      "candidate_diff": {
        "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c": [
          "File: src/tpm2/Unmarshal.c -> src/tpm2/Unmarshal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "165: TPM_GENERATED_Unmarshal(TPM_GENERATED *target, BYTE **buffer, INT32 *size)",
          "166: {",
          "167:     TPM_RC rc = TPM_RC_SUCCESS;",
          "169:     if (rc == TPM_RC_SUCCESS) {",
          "170:  rc = UINT32_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168:     TPM_GENERATED orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "198: TPM_ECC_CURVE_Unmarshal(TPM_ECC_CURVE *target, BYTE **buffer, INT32 *size)",
          "199: {",
          "200:     TPM_RC rc = TPM_RC_SUCCESS;",
          "202:     if (rc == TPM_RC_SUCCESS) {",
          "203:  rc = UINT16_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "203:     TPM_ECC_CURVE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "241: TPM_CLOCK_ADJUST_Unmarshal(TPM_CLOCK_ADJUST *target, BYTE **buffer, INT32 *size)",
          "242: {",
          "243:     TPM_RC rc = TPM_RC_SUCCESS;",
          "245:     if (rc == TPM_RC_SUCCESS) {",
          "246:  rc = INT8_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "248:     TPM_CLOCK_ADJUST orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "268: TPM_EO_Unmarshal(TPM_EO *target, BYTE **buffer, INT32 *size)",
          "269: {",
          "270:     TPM_RC rc = TPM_RC_SUCCESS;",
          "272:     if (rc == TPM_RC_SUCCESS) {",
          "273:  rc = UINT16_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "277:     TPM_EO orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "300: TPM_ST_Unmarshal(TPM_ST *target, BYTE **buffer, INT32 *size)",
          "301: {",
          "302:     TPM_RC rc = TPM_RC_SUCCESS;",
          "304:     if (rc == TPM_RC_SUCCESS) {",
          "305:  rc = UINT16_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "311:     TPM_ST orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "336: TPM_SU_Unmarshal(TPM_SU *target, BYTE **buffer, INT32 *size)",
          "337: {",
          "338:     TPM_RC rc = TPM_RC_SUCCESS;",
          "340:     if (rc == TPM_RC_SUCCESS) {",
          "341:  rc = UINT16_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "349:     TPM_SU orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "358: TPM_SE_Unmarshal(TPM_SE *target, BYTE **buffer, INT32 *size)",
          "359: {",
          "360:     TPM_RC rc = TPM_RC_SUCCESS;",
          "362:     if (rc == TPM_RC_SUCCESS) {",
          "363:  rc = UINT8_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "373:     TPM_SE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "381: TPM_CAP_Unmarshal(TPM_CAP *target, BYTE **buffer, INT32 *size)",
          "382: {",
          "383:     TPM_RC rc = TPM_RC_SUCCESS;",
          "385:     if (rc == TPM_RC_SUCCESS) {",
          "386:  rc = UINT32_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "398:     TPM_CAP orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "452: TPMA_ALGORITHM_Unmarshal(TPMA_ALGORITHM *target, BYTE **buffer, INT32 *size)",
          "453: {",
          "454:     TPM_RC rc = TPM_RC_SUCCESS;",
          "456:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "471:     TPMA_ALGORITHM orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "470: TPMA_OBJECT_Unmarshal(TPMA_OBJECT *target, BYTE **buffer, INT32 *size)",
          "471: {",
          "472:     TPM_RC rc = TPM_RC_SUCCESS;",
          "474:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "491:     TPMA_OBJECT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "488: TPMA_SESSION_Unmarshal(TPMA_SESSION *target, BYTE **buffer, INT32 *size)",
          "489: {",
          "490:     TPM_RC rc = TPM_RC_SUCCESS;",
          "492:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "511:     TPMA_SESSION orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "519: TPMA_CC_Unmarshal(TPMA_CC *target, BYTE **buffer, INT32 *size)",
          "520: {",
          "521:     TPM_RC rc = TPM_RC_SUCCESS;",
          "523:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "544:     TPMA_CC orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "537: TPMI_YES_NO_Unmarshal(TPMI_YES_NO *target, BYTE **buffer, INT32 *size)",
          "538: {",
          "539:     TPM_RC rc = TPM_RC_SUCCESS;",
          "541:     if (rc == TPM_RC_SUCCESS) {",
          "542:  rc = UINT8_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "564:     TPMI_YES_NO orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "559: TPMI_DH_OBJECT_Unmarshal(TPMI_DH_OBJECT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "560: {",
          "561:     TPM_RC rc = TPM_RC_SUCCESS;",
          "563:     if (rc == TPM_RC_SUCCESS) {",
          "564:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "588:     TPMI_DH_OBJECT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "582: TPMI_DH_PARENT_Unmarshal(TPMI_DH_PARENT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "583: {",
          "584:     TPM_RC rc = TPM_RC_SUCCESS;",
          "586:     if (rc == TPM_RC_SUCCESS) {",
          "587:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "613:     TPMI_DH_PARENT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "611: TPMI_DH_PERSISTENT_Unmarshal(TPMI_DH_PERSISTENT *target, BYTE **buffer, INT32 *size)",
          "612: {",
          "613:     TPM_RC rc = TPM_RC_SUCCESS;",
          "615:     if (rc == TPM_RC_SUCCESS) {",
          "616:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "644:     TPMI_DH_PERSISTENT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "630: TPMI_DH_ENTITY_Unmarshal(TPMI_DH_ENTITY *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "631: {",
          "632:     TPM_RC rc = TPM_RC_SUCCESS;",
          "634:     if (rc == TPM_RC_SUCCESS) {",
          "635:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "665:     TPMI_DH_ENTITY orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "667: TPMI_DH_PCR_Unmarshal(TPMI_DH_PCR *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "668: {",
          "669:     TPM_RC rc = TPM_RC_SUCCESS;",
          "671:     if (rc == TPM_RC_SUCCESS) {",
          "672:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "704:     TPMI_DH_PCR orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "688: TPMI_SH_AUTH_SESSION_Unmarshal(TPMI_SH_AUTH_SESSION *target, BYTE **buffer, INT32 *size, BOOL allowPwd)",
          "689: {",
          "690:     TPM_RC rc = TPM_RC_SUCCESS;",
          "692:     if (rc == TPM_RC_SUCCESS) {",
          "693:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "727:     TPMI_SH_AUTH_SESSION orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "711: TPMI_SH_HMAC_Unmarshal(TPMI_SH_HMAC *target, BYTE **buffer, INT32 *size)",
          "712: {",
          "713:     TPM_RC rc = TPM_RC_SUCCESS;",
          "715:     if (rc == TPM_RC_SUCCESS) {",
          "716:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "752:     TPMI_SH_HMAC orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "730: TPMI_SH_POLICY_Unmarshal(TPMI_SH_POLICY *target, BYTE **buffer, INT32 *size)",
          "731: {",
          "732:     TPM_RC rc = TPM_RC_SUCCESS;",
          "734:     if (rc == TPM_RC_SUCCESS) {",
          "735:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "773:     TPMI_SH_POLICY orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "749: TPMI_DH_CONTEXT_Unmarshal(TPMI_DH_CONTEXT *target, BYTE **buffer, INT32 *size)",
          "750: {",
          "751:     TPM_RC rc = TPM_RC_SUCCESS;",
          "753:     if (rc == TPM_RC_SUCCESS) {",
          "754:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "794:     TPMI_DH_CONTEXT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "772: TPMI_DH_SAVED_Unmarshal(TPMI_DH_SAVED *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "773: {",
          "774:     TPM_RC rc = TPM_RC_SUCCESS;",
          "775:     allowNull = allowNull;",
          "777:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "819:     TPMI_DH_SAVED orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "800: TPMI_RH_HIERARCHY_Unmarshal(TPMI_RH_HIERARCHY *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "801: {",
          "802:     TPM_RC rc = TPM_RC_SUCCESS;",
          "804:     if (rc == TPM_RC_SUCCESS) {",
          "805:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "849:     TPMI_RH_HIERARCHY orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "827: TPMI_RH_ENABLES_Unmarshal(TPMI_RH_ENABLES *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "828: {",
          "829:     TPM_RC rc = TPM_RC_SUCCESS;",
          "831:     if (rc == TPM_RC_SUCCESS) {",
          "832:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "878:     TPMI_RH_ENABLES orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "855: TPMI_RH_HIERARCHY_AUTH_Unmarshal(TPMI_RH_HIERARCHY_AUTH *target, BYTE **buffer, INT32 *size)",
          "856: {",
          "857:     TPM_RC rc = TPM_RC_SUCCESS;",
          "859:     if (rc == TPM_RC_SUCCESS) {",
          "860:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "908:     TPMI_RH_HIERARCHY_AUTH orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "879: TPMI_RH_HIERARCHY_POLICY_Unmarshal(TPMI_RH_HIERARCHY_POLICY *target, BYTE **buffer, INT32 *size)",
          "880: {",
          "881:     TPM_RC rc = TPM_RC_SUCCESS;",
          "883:     if (rc == TPM_RC_SUCCESS) {",
          "884:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "934:     TPMI_RH_HIERARCHY_POLICY orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "908: TPMI_RH_PLATFORM_Unmarshal(TPMI_RH_PLATFORM *target, BYTE **buffer, INT32 *size)",
          "909: {",
          "910:     TPM_RC rc = TPM_RC_SUCCESS;",
          "912:     if (rc == TPM_RC_SUCCESS) {",
          "913:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "965:     TPMI_RH_PLATFORM orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "929: TPMI_RH_ENDORSEMENT_Unmarshal(TPMI_RH_ENDORSEMENT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "930: {",
          "931:     TPM_RC rc = TPM_RC_SUCCESS;",
          "933:     if (rc == TPM_RC_SUCCESS) {",
          "934:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "988:     TPMI_RH_ENDORSEMENT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "954: TPMI_RH_PROVISION_Unmarshal(TPMI_RH_PROVISION *target, BYTE **buffer, INT32 *size)",
          "955: {",
          "956:     TPM_RC rc = TPM_RC_SUCCESS;",
          "958:     if (rc == TPM_RC_SUCCESS) {",
          "959:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1015:     TPMI_RH_PROVISION orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "976: TPMI_RH_CLEAR_Unmarshal(TPMI_RH_CLEAR *target, BYTE **buffer, INT32 *size)",
          "977: {",
          "978:     TPM_RC rc = TPM_RC_SUCCESS;",
          "980:     if (rc == TPM_RC_SUCCESS) {",
          "981:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1039:     TPMI_RH_CLEAR orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "998: TPMI_RH_NV_AUTH_Unmarshal(TPMI_RH_NV_AUTH *target, BYTE **buffer, INT32 *size)",
          "999: {",
          "1000:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1002:     if (rc == TPM_RC_SUCCESS) {",
          "1003:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1063:     TPMI_RH_NV_AUTH orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1025: TPMI_RH_LOCKOUT_Unmarshal(TPMI_RH_LOCKOUT *target, BYTE **buffer, INT32 *size)",
          "1026: {",
          "1027:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1029:     if (rc == TPM_RC_SUCCESS) {",
          "1030:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1092:     TPMI_RH_LOCKOUT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1046: TPMI_RH_NV_INDEX_Unmarshal(TPMI_RH_NV_INDEX *target, BYTE **buffer, INT32 *size)",
          "1047: {",
          "1048:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1050:     if (rc == TPM_RC_SUCCESS) {",
          "1051:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1115:     TPMI_RH_NV_INDEX orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1065: TPMI_RH_AC_Unmarshal(TPMI_RH_AC *target, BYTE **buffer, INT32 *size)",
          "1066: {",
          "1067:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1069:     if (rc == TPM_RC_SUCCESS) {",
          "1070:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1136:     TPMI_RH_AC orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1084: TPMI_RH_ACT_Unmarshal( TPMI_RH_ACT *target, BYTE **buffer, INT32 *size)",
          "1085: {",
          "1086:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1088:     if (rc == TPM_RC_SUCCESS) {",
          "1089:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1157:     TPMI_RH_ACT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1103: TPMI_ALG_HASH_Unmarshal(TPMI_ALG_HASH *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1104: {",
          "1105:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1107:     if (rc == TPM_RC_SUCCESS) {",
          "1108:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1178:     TPMI_ALG_HASH orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1142: TPMI_ALG_SYM_Unmarshal(TPMI_ALG_SYM *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1143: {",
          "1144:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1146:     if (rc == TPM_RC_SUCCESS) {",
          "1147:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1219:     TPMI_ALG_SYM orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1181: TPMI_ALG_SYM_OBJECT_Unmarshal(TPMI_ALG_SYM_OBJECT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1182: {",
          "1183:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1185:     if (rc == TPM_RC_SUCCESS) {",
          "1186:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1260:     TPMI_ALG_SYM_OBJECT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1217: TPMI_ALG_SYM_MODE_Unmarshal(TPMI_ALG_SYM_MODE *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1218: {",
          "1219:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1221:     if (rc == TPM_RC_SUCCESS) {",
          "1222:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1298:     TPMI_ALG_SYM_MODE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1259: TPMI_ALG_KDF_Unmarshal(TPMI_ALG_KDF *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1260: {",
          "1261:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1263:     if (rc == TPM_RC_SUCCESS) {",
          "1264:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1342:     TPMI_ALG_KDF orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1295: TPMI_ALG_SIG_SCHEME_Unmarshal(TPMI_ALG_SIG_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1296: {",
          "1297:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1299:     if (rc == TPM_RC_SUCCESS) {",
          "1300:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1380:     TPMI_ALG_SIG_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "1340: TPMI_ECC_KEY_EXCHANGE_Unmarshal(TPMI_ECC_KEY_EXCHANGE *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1341: {",
          "1342:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1344:     if (rc == TPM_RC_SUCCESS) {",
          "1345:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1427:     TPMI_ECC_KEY_EXCHANGE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "1374: TPMI_ST_COMMAND_TAG_Unmarshal(TPMI_ST_COMMAND_TAG *target, BYTE **buffer, INT32 *size)",
          "1375: {",
          "1376:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1378:     if (rc == TPM_RC_SUCCESS) {",
          "1379:  rc = TPM_ST_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1463:     TPMI_ST_COMMAND_TAG orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "1396: TPMI_ALG_MAC_SCHEME_Unmarshal(TPMI_ALG_MAC_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1397: {",
          "1398:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1400:     if (rc == TPM_RC_SUCCESS) {",
          "1401:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1487:     TPMI_ALG_MAC_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "1438: TPMI_ALG_CIPHER_MODE_Unmarshal(TPMI_ALG_CIPHER_MODE*target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1439: {",
          "1440:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1442:     if (rc == TPM_RC_SUCCESS) {",
          "1443:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1531:     TPMI_ALG_CIPHER_MODE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "1702: TPMT_TK_CREATION_Unmarshal(TPMT_TK_CREATION *target, BYTE **buffer, INT32 *size)",
          "1703: {",
          "1704:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1706:     if (rc == TPM_RC_SUCCESS) {",
          "1707:  rc = TPM_ST_Unmarshal(&target->tag, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1797:     TPM_ST orig_tag = target->tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "1709:     if (rc == TPM_RC_SUCCESS) {",
          "1710:  if (target->tag != TPM_ST_CREATION) {",
          "1711:      rc = TPM_RC_TAG;",
          "1712:  }",
          "1713:     }",
          "1714:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1805:      target->tag = orig_tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "1726: TPMT_TK_VERIFIED_Unmarshal(TPMT_TK_VERIFIED *target, BYTE **buffer, INT32 *size)",
          "1727: {",
          "1728:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1730:     if (rc == TPM_RC_SUCCESS) {",
          "1731:  rc = TPM_ST_Unmarshal(&target->tag, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1823:     TPM_ST orig_tag = target->tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "1733:     if (rc == TPM_RC_SUCCESS) {",
          "1734:  if (target->tag != TPM_ST_VERIFIED) {",
          "1735:      rc = TPM_RC_TAG;",
          "1736:  }",
          "1737:     }",
          "1738:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1831:      target->tag = orig_tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "1750: TPMT_TK_AUTH_Unmarshal(TPMT_TK_AUTH *target, BYTE **buffer, INT32 *size)",
          "1751: {",
          "1752:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1754:     if (rc == TPM_RC_SUCCESS) {",
          "1755:  rc = TPM_ST_Unmarshal(&target->tag, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1849:     TPM_ST orig_tag = target->tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "1758:  if ((target->tag != TPM_ST_AUTH_SIGNED) &&",
          "1759:      (target->tag != TPM_ST_AUTH_SECRET)) {",
          "1760:      rc = TPM_RC_TAG;",
          "1761:  }",
          "1762:     }",
          "1763:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1858:      target->tag = orig_tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "1775: TPMT_TK_HASHCHECK_Unmarshal(TPMT_TK_HASHCHECK *target, BYTE **buffer, INT32 *size)",
          "1776: {",
          "1777:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1779:     if (rc == TPM_RC_SUCCESS) {",
          "1780:  rc = TPM_ST_Unmarshal(&target->tag, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1876:     TPM_ST orig_tag = target->tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "1782:     if (rc == TPM_RC_SUCCESS) {",
          "1783:  if (target->tag != TPM_ST_HASHCHECK) {",
          "1784:      rc = TPM_RC_TAG;",
          "1785:  }",
          "1786:     }",
          "1787:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1884:      target->tag = orig_tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "2380: TPMI_ST_ATTEST_Unmarshal(TPMI_ST_ATTEST *target, BYTE **buffer, INT32 *size)",
          "2381: {",
          "2382:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2384:     if (rc == TPM_RC_SUCCESS) {",
          "2385:  rc = TPM_ST_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2483:     TPMI_ST_ATTEST orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "2490: TPMI_AES_KEY_BITS_Unmarshal(TPMI_AES_KEY_BITS *target, BYTE **buffer, INT32 *size)",
          "2491: {",
          "2492:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2494:     if (rc == TPM_RC_SUCCESS) {",
          "2495:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2595:     TPMI_AES_KEY_BITS orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "2512: TPMI_CAMELLIA_KEY_BITS_Unmarshal(TPMI_CAMELLIA_KEY_BITS *target, BYTE **buffer, INT32 *size)",
          "2513: {",
          "2514:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2516:     if (rc == TPM_RC_SUCCESS) {",
          "2517:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2619:     TPMI_CAMELLIA_KEY_BITS orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "2533: TPMI_SM4_KEY_BITS_Unmarshal(TPMI_SM4_KEY_BITS *target, BYTE **buffer, INT32 *size)",
          "2534: {",
          "2535:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2537:     if (rc == TPM_RC_SUCCESS) {",
          "2538:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2642:     TPMI_SM4_KEY_BITS orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "2554: TPMI_TDES_KEY_BITS_Unmarshal(TPMI_SM4_KEY_BITS *target, BYTE **buffer, INT32 *size)",
          "2555: {",
          "2556:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2558:     if (rc == TPM_RC_SUCCESS) {",
          "2559:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2665:     TPMI_SM4_KEY_BITS orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "2837: TPMI_ALG_KEYEDHASH_SCHEME_Unmarshal(TPMI_ALG_KEYEDHASH_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "2838: {",
          "2839:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2841:     if (rc == TPM_RC_SUCCESS) {",
          "2842:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2950:     TPMI_ALG_KEYEDHASH_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "3240: TPMI_ALG_ASYM_SCHEME_Unmarshal(TPMI_ALG_ASYM_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "3241: {",
          "3242:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3244:     if (rc == TPM_RC_SUCCESS) {",
          "3245:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3355:     TPMI_ALG_ASYM_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "3361: TPMI_ALG_RSA_SCHEME_Unmarshal(TPMI_ALG_RSA_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "3362: {",
          "3363:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3365:     if (rc == TPM_RC_SUCCESS) {",
          "3366:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3478:     TPMI_ALG_RSA_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "3413: TPMI_ALG_RSA_DECRYPT_Unmarshal(TPMI_ALG_RSA_DECRYPT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "3414: {",
          "3415:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3417:     if (rc == TPM_RC_SUCCESS) {",
          "3418:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3532:     TPMI_ALG_RSA_DECRYPT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "3472: TPMI_RSA_KEY_BITS_Unmarshal(TPMI_RSA_KEY_BITS *target, BYTE **buffer, INT32 *size)",
          "3473: {",
          "3474:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3476:     if (rc == TPM_RC_SUCCESS) {",
          "3477:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3593:     TPMI_RSA_KEY_BITS orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "3568: TPMI_ALG_ECC_SCHEME_Unmarshal(TPMI_ALG_ECC_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "3569: {",
          "3570:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3572:     if (rc == TPM_RC_SUCCESS) {",
          "3573:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3691:     TPMI_ALG_ECC_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 66 ---",
          "[Context before]",
          "3610: TPMI_ECC_CURVE_Unmarshal(TPMI_ECC_CURVE *target, BYTE **buffer, INT32 *size)",
          "3611: {",
          "3612:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3614:     if (rc == TPM_RC_SUCCESS) {",
          "3615:  rc = TPM_ECC_CURVE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3735:     TPMI_ECC_CURVE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 67 ---",
          "[Context before]",
          "3860: TPMI_ALG_PUBLIC_Unmarshal(TPMI_ALG_PUBLIC *target, BYTE **buffer, INT32 *size)",
          "3861: {",
          "3862:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3864:     if (rc == TPM_RC_SUCCESS) {",
          "3865:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3987:     TPMI_ALG_PUBLIC orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 68 ---",
          "[Context before]",
          "4215: TPMA_NV_Unmarshal(TPMA_NV *target, BYTE **buffer, INT32 *size)",
          "4216: {",
          "4217:     TPM_RC rc = TPM_RC_SUCCESS;",
          "4219:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4344:     TPMA_NV orig_target = *target; // libtpms added",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6b4b35e7e1067c18e1613b00a9335a4810e24d4a",
      "candidate_info": {
        "commit_hash": "6b4b35e7e1067c18e1613b00a9335a4810e24d4a",
        "repo": "stefanberger/libtpms",
        "commit_url": "https://github.com/stefanberger/libtpms/commit/6b4b35e7e1067c18e1613b00a9335a4810e24d4a",
        "files": [
          "src/tpm2/Unmarshal.c"
        ],
        "message": "tpm2: Restore original value if unmarshalled value was illegal\n\nRestore the original value of the memory location where data from\na stream was unmarshalled and the unmarshalled value was found to\nbe illegal. The goal is to not keep illegal values in memory.\n\nSigned-off-by: Stefan Berger <stefanb@linux.ibm.com>",
        "before_after_code_files": [
          "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
          ],
          "candidate": [
            "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
          ]
        }
      },
      "candidate_diff": {
        "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c": [
          "File: src/tpm2/Unmarshal.c -> src/tpm2/Unmarshal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "172: TPM_GENERATED_Unmarshal(TPM_GENERATED *target, BYTE **buffer, INT32 *size)",
          "173: {",
          "174:     TPM_RC rc = TPM_RC_SUCCESS;",
          "176:     if (rc == TPM_RC_SUCCESS) {",
          "177:  rc = UINT32_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "175:     TPM_GENERATED orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "204: TPM_ECC_CURVE_Unmarshal(TPM_ECC_CURVE *target, BYTE **buffer, INT32 *size)",
          "205: {",
          "206:     TPM_RC rc = TPM_RC_SUCCESS;",
          "208:     if (rc == TPM_RC_SUCCESS) {",
          "209:  rc = UINT16_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "209:     TPM_ECC_CURVE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "260: TPM_CLOCK_ADJUST_Unmarshal(TPM_CLOCK_ADJUST *target, BYTE **buffer, INT32 *size)",
          "261: {",
          "262:     TPM_RC rc = TPM_RC_SUCCESS;",
          "264:     if (rc == TPM_RC_SUCCESS) {",
          "265:  rc = INT8_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "267:     TPM_CLOCK_ADJUST orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "287: TPM_EO_Unmarshal(TPM_EO *target, BYTE **buffer, INT32 *size)",
          "288: {",
          "289:     TPM_RC rc = TPM_RC_SUCCESS;",
          "291:     if (rc == TPM_RC_SUCCESS) {",
          "292:  rc = UINT16_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "296:     TPM_EO orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "319: TPM_ST_Unmarshal(TPM_ST *target, BYTE **buffer, INT32 *size)",
          "320: {",
          "321:     TPM_RC rc = TPM_RC_SUCCESS;",
          "323:     if (rc == TPM_RC_SUCCESS) {",
          "324:  rc = UINT16_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "330:     TPM_ST orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "355: TPM_SU_Unmarshal(TPM_SU *target, BYTE **buffer, INT32 *size)",
          "356: {",
          "357:     TPM_RC rc = TPM_RC_SUCCESS;",
          "359:     if (rc == TPM_RC_SUCCESS) {",
          "360:  rc = UINT16_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "368:     TPM_SU orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "377: TPM_SE_Unmarshal(TPM_SE *target, BYTE **buffer, INT32 *size)",
          "378: {",
          "379:     TPM_RC rc = TPM_RC_SUCCESS;",
          "381:     if (rc == TPM_RC_SUCCESS) {",
          "382:  rc = UINT8_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "392:     TPM_SE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "400: TPM_CAP_Unmarshal(TPM_CAP *target, BYTE **buffer, INT32 *size)",
          "401: {",
          "402:     TPM_RC rc = TPM_RC_SUCCESS;",
          "404:     if (rc == TPM_RC_SUCCESS) {",
          "405:  rc = UINT32_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "417:     TPM_CAP orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "470: TPMA_ALGORITHM_Unmarshal(TPMA_ALGORITHM *target, BYTE **buffer, INT32 *size)",
          "471: {",
          "472:     TPM_RC rc = TPM_RC_SUCCESS;",
          "474:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "489:     TPMA_ALGORITHM orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "488: TPMA_OBJECT_Unmarshal(TPMA_OBJECT *target, BYTE **buffer, INT32 *size)",
          "489: {",
          "490:     TPM_RC rc = TPM_RC_SUCCESS;",
          "492:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "509:     TPMA_OBJECT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "506: TPMA_SESSION_Unmarshal(TPMA_SESSION *target, BYTE **buffer, INT32 *size)",
          "507: {",
          "508:     TPM_RC rc = TPM_RC_SUCCESS;",
          "510:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "529:     TPMA_SESSION orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "537: TPMA_CC_Unmarshal(TPMA_CC *target, BYTE **buffer, INT32 *size)",
          "538: {",
          "539:     TPM_RC rc = TPM_RC_SUCCESS;",
          "541:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "562:     TPMA_CC orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "555: TPMI_YES_NO_Unmarshal(TPMI_YES_NO *target, BYTE **buffer, INT32 *size)",
          "556: {",
          "557:     TPM_RC rc = TPM_RC_SUCCESS;",
          "559:     if (rc == TPM_RC_SUCCESS) {",
          "560:  rc = UINT8_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "582:     TPMI_YES_NO orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "577: TPMI_DH_OBJECT_Unmarshal(TPMI_DH_OBJECT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "578: {",
          "579:     TPM_RC rc = TPM_RC_SUCCESS;",
          "581:     if (rc == TPM_RC_SUCCESS) {",
          "582:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "606:     TPMI_DH_OBJECT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "600: TPMI_DH_PARENT_Unmarshal(TPMI_DH_PARENT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "601: {",
          "602:     TPM_RC rc = TPM_RC_SUCCESS;",
          "604:     if (rc == TPM_RC_SUCCESS) {",
          "605:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "631:     TPMI_DH_PARENT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "629: TPMI_DH_PERSISTENT_Unmarshal(TPMI_DH_PERSISTENT *target, BYTE **buffer, INT32 *size)",
          "630: {",
          "631:     TPM_RC rc = TPM_RC_SUCCESS;",
          "633:     if (rc == TPM_RC_SUCCESS) {",
          "634:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "662:     TPMI_DH_PERSISTENT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "648: TPMI_DH_ENTITY_Unmarshal(TPMI_DH_ENTITY *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "649: {",
          "650:     TPM_RC rc = TPM_RC_SUCCESS;",
          "652:     if (rc == TPM_RC_SUCCESS) {",
          "653:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "683:     TPMI_DH_ENTITY orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "685: TPMI_DH_PCR_Unmarshal(TPMI_DH_PCR *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "686: {",
          "687:     TPM_RC rc = TPM_RC_SUCCESS;",
          "689:     if (rc == TPM_RC_SUCCESS) {",
          "690:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "722:     TPMI_DH_PCR orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "706: TPMI_SH_AUTH_SESSION_Unmarshal(TPMI_SH_AUTH_SESSION *target, BYTE **buffer, INT32 *size, BOOL allowPwd)",
          "707: {",
          "708:     TPM_RC rc = TPM_RC_SUCCESS;",
          "710:     if (rc == TPM_RC_SUCCESS) {",
          "711:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "745:     TPMI_SH_AUTH_SESSION orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "729: TPMI_SH_HMAC_Unmarshal(TPMI_SH_HMAC *target, BYTE **buffer, INT32 *size)",
          "730: {",
          "731:     TPM_RC rc = TPM_RC_SUCCESS;",
          "733:     if (rc == TPM_RC_SUCCESS) {",
          "734:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "770:     TPMI_SH_HMAC orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "748: TPMI_SH_POLICY_Unmarshal(TPMI_SH_POLICY *target, BYTE **buffer, INT32 *size)",
          "749: {",
          "750:     TPM_RC rc = TPM_RC_SUCCESS;",
          "752:     if (rc == TPM_RC_SUCCESS) {",
          "753:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "791:     TPMI_SH_POLICY orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "767: TPMI_DH_CONTEXT_Unmarshal(TPMI_DH_CONTEXT *target, BYTE **buffer, INT32 *size)",
          "768: {",
          "769:     TPM_RC rc = TPM_RC_SUCCESS;",
          "771:     if (rc == TPM_RC_SUCCESS) {",
          "772:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "812:     TPMI_DH_CONTEXT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "790: TPMI_DH_SAVED_Unmarshal(TPMI_DH_SAVED *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "791: {",
          "792:     TPM_RC rc = TPM_RC_SUCCESS;",
          "793:     allowNull = allowNull;",
          "795:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "837:     TPMI_DH_SAVED orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "818: TPMI_RH_HIERARCHY_Unmarshal(TPMI_RH_HIERARCHY *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "819: {",
          "820:     TPM_RC rc = TPM_RC_SUCCESS;",
          "822:     if (rc == TPM_RC_SUCCESS) {",
          "823:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "867:     TPMI_RH_HIERARCHY orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "845: TPMI_RH_ENABLES_Unmarshal(TPMI_RH_ENABLES *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "846: {",
          "847:     TPM_RC rc = TPM_RC_SUCCESS;",
          "849:     if (rc == TPM_RC_SUCCESS) {",
          "850:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "896:     TPMI_RH_ENABLES orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "873: TPMI_RH_HIERARCHY_AUTH_Unmarshal(TPMI_RH_HIERARCHY_AUTH *target, BYTE **buffer, INT32 *size)",
          "874: {",
          "875:     TPM_RC rc = TPM_RC_SUCCESS;",
          "877:     if (rc == TPM_RC_SUCCESS) {",
          "878:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "926:     TPMI_RH_HIERARCHY_AUTH orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "897: TPMI_RH_PLATFORM_Unmarshal(TPMI_RH_PLATFORM *target, BYTE **buffer, INT32 *size)",
          "898: {",
          "899:     TPM_RC rc = TPM_RC_SUCCESS;",
          "901:     if (rc == TPM_RC_SUCCESS) {",
          "902:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "952:     TPMI_RH_PLATFORM orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "918: TPMI_RH_ENDORSEMENT_Unmarshal(TPMI_RH_ENDORSEMENT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "919: {",
          "920:     TPM_RC rc = TPM_RC_SUCCESS;",
          "922:     if (rc == TPM_RC_SUCCESS) {",
          "923:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "975:     TPMI_RH_ENDORSEMENT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "943: TPMI_RH_PROVISION_Unmarshal(TPMI_RH_PROVISION *target, BYTE **buffer, INT32 *size)",
          "944: {",
          "945:     TPM_RC rc = TPM_RC_SUCCESS;",
          "947:     if (rc == TPM_RC_SUCCESS) {",
          "948:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1002:     TPMI_RH_PROVISION orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "965: TPMI_RH_CLEAR_Unmarshal(TPMI_RH_CLEAR *target, BYTE **buffer, INT32 *size)",
          "966: {",
          "967:     TPM_RC rc = TPM_RC_SUCCESS;",
          "969:     if (rc == TPM_RC_SUCCESS) {",
          "970:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1026:     TPMI_RH_CLEAR orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "987: TPMI_RH_NV_AUTH_Unmarshal(TPMI_RH_NV_AUTH *target, BYTE **buffer, INT32 *size)",
          "988: {",
          "989:     TPM_RC rc = TPM_RC_SUCCESS;",
          "991:     if (rc == TPM_RC_SUCCESS) {",
          "992:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1050:     TPMI_RH_NV_AUTH orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1014: TPMI_RH_LOCKOUT_Unmarshal(TPMI_RH_LOCKOUT *target, BYTE **buffer, INT32 *size)",
          "1015: {",
          "1016:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1018:     if (rc == TPM_RC_SUCCESS) {",
          "1019:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1079:     TPMI_RH_LOCKOUT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1035: TPMI_RH_NV_INDEX_Unmarshal(TPMI_RH_NV_INDEX *target, BYTE **buffer, INT32 *size)",
          "1036: {",
          "1037:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1039:     if (rc == TPM_RC_SUCCESS) {",
          "1040:  rc = TPM_HANDLE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1102:     TPMI_RH_NV_INDEX orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1054: TPMI_ALG_HASH_Unmarshal(TPMI_ALG_HASH *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1055: {",
          "1056:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1058:     if (rc == TPM_RC_SUCCESS) {",
          "1059:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1123:     TPMI_ALG_HASH orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1093: TPMI_ALG_SYM_Unmarshal(TPMI_ALG_SYM *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1094: {",
          "1095:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1097:     if (rc == TPM_RC_SUCCESS) {",
          "1098:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1164:     TPMI_ALG_SYM orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1132: TPMI_ALG_SYM_OBJECT_Unmarshal(TPMI_ALG_SYM_OBJECT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1133: {",
          "1134:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1136:     if (rc == TPM_RC_SUCCESS) {",
          "1137:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1205:     TPMI_ALG_SYM_OBJECT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1168: TPMI_ALG_SYM_MODE_Unmarshal(TPMI_ALG_SYM_MODE *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1169: {",
          "1170:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1172:     if (rc == TPM_RC_SUCCESS) {",
          "1173:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1243:     TPMI_ALG_SYM_MODE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1210: TPMI_ALG_KDF_Unmarshal(TPMI_ALG_KDF *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1211: {",
          "1212:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1214:     if (rc == TPM_RC_SUCCESS) {",
          "1215:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1287:     TPMI_ALG_KDF orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1246: TPMI_ALG_SIG_SCHEME_Unmarshal(TPMI_ALG_SIG_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1247: {",
          "1248:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1250:     if (rc == TPM_RC_SUCCESS) {",
          "1251:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1325:     TPMI_ALG_SIG_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1291: TPMI_ECC_KEY_EXCHANGE_Unmarshal(TPMI_ECC_KEY_EXCHANGE *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1292: {",
          "1293:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1295:     if (rc == TPM_RC_SUCCESS) {",
          "1296:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1372:     TPMI_ECC_KEY_EXCHANGE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1325: TPMI_ST_COMMAND_TAG_Unmarshal(TPMI_ST_COMMAND_TAG *target, BYTE **buffer, INT32 *size)",
          "1326: {",
          "1327:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1329:     if (rc == TPM_RC_SUCCESS) {",
          "1330:  rc = TPM_ST_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1408:     TPMI_ST_COMMAND_TAG orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1347: TPMI_ALG_MAC_SCHEME_Unmarshal(TPMI_ALG_MAC_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1348: {",
          "1349:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1351:     if (rc == TPM_RC_SUCCESS) {",
          "1352:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1432:     TPMI_ALG_MAC_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "1389: TPMI_ALG_CIPHER_MODE_Unmarshal(TPMI_ALG_CIPHER_MODE*target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "1390: {",
          "1391:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1393:     if (rc == TPM_RC_SUCCESS) {",
          "1394:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1476:     TPMI_ALG_CIPHER_MODE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "1666: TPMT_TK_CREATION_Unmarshal(TPMT_TK_CREATION *target, BYTE **buffer, INT32 *size)",
          "1667: {",
          "1668:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1670:     if (rc == TPM_RC_SUCCESS) {",
          "1671:  rc = TPM_ST_Unmarshal(&target->tag, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1755:     TPM_ST orig_tag = target->tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "1673:     if (rc == TPM_RC_SUCCESS) {",
          "1674:  if (target->tag != TPM_ST_CREATION) {",
          "1675:      rc = TPM_RC_TAG;",
          "1676:  }",
          "1677:     }",
          "1678:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1763:      target->tag = orig_tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 46 ---",
          "[Context before]",
          "1690: TPMT_TK_VERIFIED_Unmarshal(TPMT_TK_VERIFIED *target, BYTE **buffer, INT32 *size)",
          "1691: {",
          "1692:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1694:     if (rc == TPM_RC_SUCCESS) {",
          "1695:  rc = TPM_ST_Unmarshal(&target->tag, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1781:     TPM_ST orig_tag = target->tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 47 ---",
          "[Context before]",
          "1697:     if (rc == TPM_RC_SUCCESS) {",
          "1698:  if (target->tag != TPM_ST_VERIFIED) {",
          "1699:      rc = TPM_RC_TAG;",
          "1700:  }",
          "1701:     }",
          "1702:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1789:      target->tag = orig_tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 48 ---",
          "[Context before]",
          "1714: TPMT_TK_AUTH_Unmarshal(TPMT_TK_AUTH *target, BYTE **buffer, INT32 *size)",
          "1715: {",
          "1716:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1718:     if (rc == TPM_RC_SUCCESS) {",
          "1719:  rc = TPM_ST_Unmarshal(&target->tag, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1807:     TPM_ST orig_tag = target->tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 49 ---",
          "[Context before]",
          "1722:  if ((target->tag != TPM_ST_AUTH_SIGNED) &&",
          "1723:      (target->tag != TPM_ST_AUTH_SECRET)) {",
          "1724:      rc = TPM_RC_TAG;",
          "1725:  }",
          "1726:     }",
          "1727:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1816:      target->tag = orig_tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 50 ---",
          "[Context before]",
          "1739: TPMT_TK_HASHCHECK_Unmarshal(TPMT_TK_HASHCHECK *target, BYTE **buffer, INT32 *size)",
          "1740: {",
          "1741:     TPM_RC rc = TPM_RC_SUCCESS;",
          "1743:     if (rc == TPM_RC_SUCCESS) {",
          "1744:  rc = TPM_ST_Unmarshal(&target->tag, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1834:     TPM_ST orig_tag = target->tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 51 ---",
          "[Context before]",
          "1746:     if (rc == TPM_RC_SUCCESS) {",
          "1747:  if (target->tag != TPM_ST_HASHCHECK) {",
          "1748:      rc = TPM_RC_TAG;",
          "1749:  }",
          "1750:     }",
          "1751:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1842:      target->tag = orig_tag; // libtpms added",
          "",
          "---------------",
          "--- Hunk 52 ---",
          "[Context before]",
          "2335: TPMI_ST_ATTEST_Unmarshal(TPMI_ST_ATTEST *target, BYTE **buffer, INT32 *size)",
          "2336: {",
          "2337:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2339:     if (rc == TPM_RC_SUCCESS) {",
          "2340:  rc = TPM_ST_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2432:     TPMI_ST_ATTEST orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 53 ---",
          "[Context before]",
          "2462: TPMI_AES_KEY_BITS_Unmarshal(TPMI_AES_KEY_BITS *target, BYTE **buffer, INT32 *size)",
          "2463: {",
          "2464:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2466:     if (rc == TPM_RC_SUCCESS) {",
          "2467:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2561:     TPMI_AES_KEY_BITS orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 54 ---",
          "[Context before]",
          "2484: TPMI_CAMELLIA_KEY_BITS_Unmarshal(TPMI_CAMELLIA_KEY_BITS *target, BYTE **buffer, INT32 *size)",
          "2485: {",
          "2486:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2488:     if (rc == TPM_RC_SUCCESS) {",
          "2489:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2585:     TPMI_CAMELLIA_KEY_BITS orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 55 ---",
          "[Context before]",
          "2505: TPMI_SM4_KEY_BITS_Unmarshal(TPMI_SM4_KEY_BITS *target, BYTE **buffer, INT32 *size)",
          "2506: {",
          "2507:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2509:     if (rc == TPM_RC_SUCCESS) {",
          "2510:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2608:     TPMI_SM4_KEY_BITS orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 56 ---",
          "[Context before]",
          "2526: TPMI_TDES_KEY_BITS_Unmarshal(TPMI_SM4_KEY_BITS *target, BYTE **buffer, INT32 *size)",
          "2527: {",
          "2528:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2530:     if (rc == TPM_RC_SUCCESS) {",
          "2531:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2631:     TPMI_SM4_KEY_BITS orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 57 ---",
          "[Context before]",
          "2822: TPMI_ALG_KEYEDHASH_SCHEME_Unmarshal(TPMI_ALG_KEYEDHASH_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "2823: {",
          "2824:     TPM_RC rc = TPM_RC_SUCCESS;",
          "2826:     if (rc == TPM_RC_SUCCESS) {",
          "2827:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2929:     TPMI_ALG_KEYEDHASH_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 58 ---",
          "[Context before]",
          "3225: TPMI_ALG_ASYM_SCHEME_Unmarshal(TPMI_ALG_ASYM_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "3226: {",
          "3227:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3229:     if (rc == TPM_RC_SUCCESS) {",
          "3230:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3334:     TPMI_ALG_ASYM_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 59 ---",
          "[Context before]",
          "3364: TPMI_ALG_RSA_SCHEME_Unmarshal(TPMI_ALG_RSA_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "3365: {",
          "3366:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3368:     if (rc == TPM_RC_SUCCESS) {",
          "3369:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3475:     TPMI_ALG_RSA_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 60 ---",
          "[Context before]",
          "3416: TPMI_ALG_RSA_DECRYPT_Unmarshal(TPMI_ALG_RSA_DECRYPT *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "3417: {",
          "3418:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3420:     if (rc == TPM_RC_SUCCESS) {",
          "3421:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3529:     TPMI_ALG_RSA_DECRYPT orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 61 ---",
          "[Context before]",
          "3475: TPMI_RSA_KEY_BITS_Unmarshal(TPMI_RSA_KEY_BITS *target, BYTE **buffer, INT32 *size)",
          "3476: {",
          "3477:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3479:     if (rc == TPM_RC_SUCCESS) {",
          "3480:  rc = TPM_KEY_BITS_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3590:     TPMI_RSA_KEY_BITS orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 62 ---",
          "[Context before]",
          "3570: TPMI_ALG_ECC_SCHEME_Unmarshal(TPMI_ALG_ECC_SCHEME *target, BYTE **buffer, INT32 *size, BOOL allowNull)",
          "3571: {",
          "3572:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3574:     if (rc == TPM_RC_SUCCESS) {",
          "3575:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3687:     TPMI_ALG_ECC_SCHEME orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 63 ---",
          "[Context before]",
          "3612: TPMI_ECC_CURVE_Unmarshal(TPMI_ECC_CURVE *target, BYTE **buffer, INT32 *size)",
          "3613: {",
          "3614:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3616:     if (rc == TPM_RC_SUCCESS) {",
          "3617:  rc = TPM_ECC_CURVE_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3731:     TPMI_ECC_CURVE orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 64 ---",
          "[Context before]",
          "3905: TPMI_ALG_PUBLIC_Unmarshal(TPMI_ALG_PUBLIC *target, BYTE **buffer, INT32 *size)",
          "3906: {",
          "3907:     TPM_RC rc = TPM_RC_SUCCESS;",
          "3909:     if (rc == TPM_RC_SUCCESS) {",
          "3910:  rc = TPM_ALG_ID_Unmarshal(target, buffer, size);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4026:     TPMI_ALG_PUBLIC orig_target = *target; // libtpms added",
          "",
          "---------------",
          "--- Hunk 65 ---",
          "[Context before]",
          "4293: TPMA_NV_Unmarshal(TPMA_NV *target, BYTE **buffer, INT32 *size)",
          "4294: {",
          "4295:     TPM_RC rc = TPM_RC_SUCCESS;",
          "4297:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4416:     TPMA_NV orig_target = *target; // libtpms added",
          "",
          "---------------"
        ]
      }
    }
  ]
}