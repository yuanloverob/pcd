{
  "cve_id": "CVE-2016-7538",
  "cve_desc": "coders/psd.c in ImageMagick allows remote attackers to cause a denial of service (out-of-bounds write) via a crafted file.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "82e2049862a8b8a999e160734ad64fb6cc3b145f",
  "patch_info": {
    "commit_hash": "82e2049862a8b8a999e160734ad64fb6cc3b145f",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/82e2049862a8b8a999e160734ad64fb6cc3b145f",
    "files": [
      "coders/psd.c"
    ],
    "message": "https://github.com/ImageMagick/ImageMagick/issues/148",
    "before_after_code_files": [
      "coders/psd.c||coders/psd.c"
    ]
  },
  "patch_diff": {
    "coders/psd.c||coders/psd.c": [
      "File: coders/psd.c -> coders/psd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "2568:     q=(unsigned char *) p;",
      "2572:     p=PushShortPixel(MSBEndian,p,&id);",
      "2573:     p=PushShortPixel(MSBEndian,p,&short_sans);",
      "2574:     p=PushLongPixel(MSBEndian,p,&count);",
      "",
      "[Removed Lines]",
      "2569:     if (LocaleNCompare((const char *) p,\"8BIM\",4) != 0)",
      "2570:       break;",
      "2571:     p=PushLongPixel(MSBEndian,p,&long_sans);",
      "",
      "[Added Lines]",
      "2569:     if (LocaleNCompare((const char *) p,\"8BIM\",4) != 0)",
      "2570:       break;",
      "2571:     p=PushLongPixel(MSBEndian,p,&long_sans);",
      "2572:     p=PushShortPixel(MSBEndian,p,&id);",
      "2573:     p=PushShortPixel(MSBEndian,p,&short_sans);",
      "2574:     p=PushLongPixel(MSBEndian,p,&count);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4812e816a9c3da93003aaea1d0b1db9ccf8ce40d",
      "candidate_info": {
        "commit_hash": "4812e816a9c3da93003aaea1d0b1db9ccf8ce40d",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/4812e816a9c3da93003aaea1d0b1db9ccf8ce40d",
        "files": [
          "coders/psd.c"
        ],
        "message": "Fixed length check.",
        "before_after_code_files": [
          "coders/psd.c||coders/psd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/psd.c||coders/psd.c"
          ],
          "candidate": [
            "coders/psd.c||coders/psd.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/psd.c||coders/psd.c": [
          "File: coders/psd.c -> coders/psd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2568:     q=(unsigned char *) p;",
          "2570:       break;",
          "2574:     p=PushLongPixel(MSBEndian,p,&count);",
          "2575:     if (id == 0x0000040f)",
          "2576:       {",
          "",
          "[Removed Lines]",
          "2569:     if (LocaleNCompare((const char *) p,\"8BIM\",4) != 0)",
          "2571:     p=PushLongPixel(MSBEndian,p,&long_sans);",
          "2572:     p=PushShortPixel(MSBEndian,p,&id);",
          "2573:     p=PushShortPixel(MSBEndian,p,&short_sans);",
          "",
          "[Added Lines]",
          "2569:     if (LocaleNCompare((const char *) p,\"8BIM\",4) != 0)",
          "2570:       break;",
          "2571:     p=PushLongPixel(MSBEndian,p,&long_sans);",
          "2572:     p=PushShortPixel(MSBEndian,p,&id);",
          "2573:     p=PushShortPixel(MSBEndian,p,&short_sans);",
          "2575:     if (id == 0x0000040f)",
          "2576:       {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "338f0889100c635cc8e2281e66b2d2e34d3b37e8",
      "candidate_info": {
        "commit_hash": "338f0889100c635cc8e2281e66b2d2e34d3b37e8",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/338f0889100c635cc8e2281e66b2d2e34d3b37e8",
        "files": [
          "MagickCore/cache.c",
          "MagickCore/image.c",
          "MagickCore/string.c",
          "coders/bmp.c",
          "coders/histogram.c",
          "coders/json.c",
          "coders/meta.c",
          "coders/ps2.c",
          "coders/ps3.c",
          "coders/psd.c"
        ],
        "message": "Ensure source compiles with pedantic C++ compiler",
        "before_after_code_files": [
          "MagickCore/cache.c||MagickCore/cache.c",
          "MagickCore/image.c||MagickCore/image.c",
          "MagickCore/string.c||MagickCore/string.c",
          "coders/bmp.c||coders/bmp.c",
          "coders/histogram.c||coders/histogram.c",
          "coders/json.c||coders/json.c",
          "coders/meta.c||coders/meta.c",
          "coders/ps2.c||coders/ps2.c",
          "coders/ps3.c||coders/ps3.c",
          "coders/psd.c||coders/psd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/psd.c||coders/psd.c"
          ],
          "candidate": [
            "coders/psd.c||coders/psd.c"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/cache.c||MagickCore/cache.c": [
          "File: MagickCore/cache.c -> MagickCore/cache.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "881:   return(status == -1 ? MagickFalse : MagickTrue);",
          "882: }",
          "885: {",
          "886:   switch (cache_info->type)",
          "887:   {",
          "",
          "[Removed Lines]",
          "884: static inline void RelinquishPixelCachePixels(CacheInfo *cache_info)",
          "",
          "[Added Lines]",
          "884: static inline void RelinquishPixelCachePixels(CacheInfo *cache_info)",
          "885: {",
          "",
          "---------------"
        ],
        "MagickCore/image.c||MagickCore/image.c": [
          "File: MagickCore/image.c -> MagickCore/image.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3209:       {",
          "3210:         case WritePixelMask: image->write_mask=MagickFalse; break;",
          "3211:         default: image->read_mask=MagickFalse; break;",
          "3214:     }",
          "3215:   switch (type)",
          "3216:   {",
          "",
          "[Removed Lines]",
          "3212:       }",
          "3213:       return(SyncImagePixelCache(image,exception));",
          "",
          "[Added Lines]",
          "3212:       }",
          "3213:       return(SyncImagePixelCache(image,exception));",
          "",
          "---------------"
        ],
        "MagickCore/string.c||MagickCore/string.c": [
          "File: MagickCore/string.c -> MagickCore/string.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "752: %    o source: the source string.",
          "753: %",
          "754: %    o length: the length of the destination string.",
          "757: MagickExport size_t CopyMagickString(char *destination,const char *source,",
          "758:   const size_t length)",
          "759: {",
          "",
          "[Removed Lines]",
          "755: %",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "coders/bmp.c||coders/bmp.c": [
          "File: coders/bmp.c -> coders/bmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1682:           int",
          "1683:             extra_size;",
          "1687:           if ((image->rendering_intent != UndefinedIntent) ||",
          "1688:               (profile != (StringInfo *) NULL))",
          "1689:             {",
          "",
          "[Removed Lines]",
          "1685:           bmp_info.size=108;",
          "1686:           extra_size=68;",
          "",
          "[Added Lines]",
          "1685:           bmp_info.size=108;",
          "1686:           extra_size=68;",
          "",
          "---------------"
        ],
        "coders/histogram.c||coders/histogram.c": [
          "File: coders/histogram.c -> coders/histogram.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "375:     MagickPathExtent);",
          "376:   write_info=CloneImageInfo(image_info);",
          "379:   if ((*write_info->magick == '\\0') ||",
          "380:       (LocaleCompare(write_info->magick,\"HISTOGRAM\") == 0))",
          "382:       \"miff:%s\",write_info->filename);",
          "383:   histogram_image->blob=DetachBlob(histogram_image->blob);",
          "384:   histogram_image->blob=CloneBlobInfo(image->blob);",
          "",
          "[Removed Lines]",
          "378:   (void) SetImageInfo(write_info,1,exception);",
          "381:     (void) FormatLocaleString(histogram_image->filename,MagickPathExtent,",
          "",
          "[Added Lines]",
          "378:   (void) SetImageInfo(write_info,1,exception);",
          "381:     (void) FormatLocaleString(histogram_image->filename,MagickPathExtent,",
          "",
          "---------------"
        ],
        "coders/json.c||coders/json.c": [
          "File: coders/json.c -> coders/json.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "653:           channel_phash[channel].phash[k][j]);",
          "654:         if (k < (ssize_t) (channel_phash[0].number_colorspaces-1))",
          "655:           n+=FormatLocaleFile(file,\", \");",
          "657:       n+=FormatLocaleFile(file,\"]\");",
          "658:       if (j < (MaximumNumberOfPerceptualHashes-1))",
          "659:         n+=FormatLocaleFile(file,\",\\n\");",
          "",
          "[Removed Lines]",
          "656:       }",
          "",
          "[Added Lines]",
          "656:       }",
          "",
          "---------------"
        ],
        "coders/meta.c||coders/meta.c": [
          "File: coders/meta.c -> coders/meta.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "407:                   size_t",
          "408:                     codes_length;",
          "413:                   codes_length=convertHTMLcodes(s, strlen(s));",
          "",
          "[Removed Lines]",
          "410:                   char",
          "",
          "[Added Lines]",
          "410:                   char",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "710:                   size_t",
          "711:                     codes_length;",
          "716:                   codes_length=convertHTMLcodes(s, strlen(s));",
          "",
          "[Removed Lines]",
          "713:                   char",
          "",
          "[Added Lines]",
          "713:                   char",
          "",
          "---------------"
        ],
        "coders/ps2.c||coders/ps2.c": [
          "File: coders/ps2.c -> coders/ps2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "298:       \"      /Height rows\",",
          "299:       \"      /BitsPerComponent bits\",",
          "300:       \"      /Decode [0 1]\",",
          "302:       \"      compression 0 gt\",",
          "303:       \"      { /DataSource pixel_stream %s }\",",
          "304:       \"      {\",",
          "",
          "[Removed Lines]",
          "301:       \"      /ImageMatrix [columns 0 0 rows neg 0 rows]\",",
          "",
          "[Added Lines]",
          "301:       \"      /ImageMatrix [columns 0 0 rows neg 0 rows]\",",
          "",
          "---------------"
        ],
        "coders/ps3.c||coders/ps3.c": [
          "File: coders/ps3.c -> coders/ps3.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "487:     Only lossless compressions for the mask.",
          "491:     case NoCompression:",
          "492:     default:",
          "493:     {",
          "494:       (void) FormatLocaleString(buffer,MagickPathExtent,",
          "495:         \"currentfile %.20g %.20g \"PS3_NoCompression\" ByteStreamDecodeFilter\\n\",",
          "496:         (double) image->columns,(double) image->rows);",
          "499:     case FaxCompression:",
          "500:     case Group4Compression:",
          "501:     {",
          "502:       (void) FormatLocaleString(buffer,MagickPathExtent,",
          "503:         \"currentfile %.20g %.20g \"PS3_FaxCompression\" ByteStreamDecodeFilter\\n\",",
          "506:     }",
          "507:     case LZWCompression:",
          "508:     {",
          "509:       (void) FormatLocaleString(buffer,MagickPathExtent,",
          "510:         \"currentfile %.20g %.20g \"PS3_LZWCompression\" ByteStreamDecodeFilter\\n\",",
          "513:     }",
          "514:     case RLECompression:",
          "515:     {",
          "516:       (void) FormatLocaleString(buffer,MagickPathExtent,",
          "517:         \"currentfile %.20g %.20g \"PS3_RLECompression\" ByteStreamDecodeFilter\\n\",",
          "520:     }",
          "521:     case ZipCompression:",
          "522:     {",
          "",
          "[Removed Lines]",
          "489:   switch (compression)",
          "490:   {",
          "497:       break;",
          "498:     }",
          "504:         (double) image->columns,(double) image->rows);",
          "505:       break;",
          "511:         (double) image->columns,(double) image->rows);",
          "512:       break;",
          "518:         (double) image->columns,(double) image->rows);",
          "519:       break;",
          "",
          "[Added Lines]",
          "489:   switch (compression)",
          "490:   {",
          "491:     case NoCompression:",
          "498:       break;",
          "499:     }",
          "500:     case FaxCompression:",
          "506:         image->rows);",
          "507:       break;",
          "508:     }",
          "514:         image->rows);",
          "515:       break;",
          "516:     }",
          "522:         image->rows);",
          "523:       break;",
          "524:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "623: {",
          "624:   static const char",
          "628:       \"{\",",
          "629:       \"  /z exch def\",",
          "631:       \"  /c exch def\",",
          "632:       \"  z \"PS3_NoCompression\" eq { /ASCII85Decode filter } if\",",
          "633:       \"  z \"PS3_FaxCompression\" eq\",",
          "634:       \"  {\",",
          "635:       \"    <<\",",
          "640:       \"    /CCITTFaxDecode filter\",",
          "641:       \"  } if\",",
          "642:       \"  z \"PS3_JPEGCompression\" eq { /DCTDecode filter } if\",",
          "643:       \"  z \"PS3_LZWCompression\" eq { /LZWDecode filter } if\",",
          "645:       \"  z \"PS3_ZipCompression\" eq { /FlateDecode filter } if\",",
          "646:       \"} bind def\",",
          "647:       \"\",",
          "",
          "[Removed Lines]",
          "626:     {",
          "627:       \"/ByteStreamDecodeFilter\",",
          "630:       \"  /r exch def\",",
          "636:       \"      /K \"CCITTParam,",
          "637:       \"      /Columns c\",",
          "638:       \"      /Rows r\",",
          "639:       \"    >>\",",
          "644:       \"  z \"PS3_RLECompression\" eq { /RunLengthDecode filter } if\",",
          "",
          "[Added Lines]",
          "631:     {",
          "632:       \"/ByteStreamDecodeFilter\",",
          "635:       \"  /r exch def\",",
          "641:       \"      /K \" CCITTParam,",
          "642:       \"      /Columns c\",",
          "643:       \"      /Rows r\",",
          "644:       \"    >>\",",
          "649:       \"  z \" PS3_RLECompression \" eq { /RunLengthDecode filter } if\",",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "666:       \"    <<\",",
          "667:       \"      /ImageType 1\",",
          "668:       \"      /Width columns\",",
          "670:       \"      /BitsPerComponent 8\",",
          "671:       \"      /DataSource pixel_stream\",",
          "672:       \"      /MultipleDataSources false\",",
          "",
          "[Removed Lines]",
          "669:       \"      /Height rows\",",
          "",
          "[Added Lines]",
          "674:       \"      /Height rows\",",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "699:       \"      /BitsPerComponent bits\",",
          "700:       \"      /Decode [0 1]\",",
          "701:       \"      /ImageMatrix [columns 0 0 rows neg 0 rows]\",",
          "703:       \"    >>\",",
          "704:       \"  }\",",
          "705:       \"  {\",",
          "",
          "[Removed Lines]",
          "702:       \"      /DataSource pixel_stream\",",
          "",
          "[Added Lines]",
          "707:       \"      /DataSource pixel_stream\",",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "719:       \"      /ImageMatrix [columns 0 0 rows neg 0 rows]\",",
          "720:       \"      /DataSource pixel_stream\",",
          "721:       \"    >>\",",
          "723:       \"  ifelse\",",
          "724:       \"} bind def\",",
          "725:       \"\",",
          "",
          "[Removed Lines]",
          "722:       \"  }\",",
          "",
          "[Added Lines]",
          "727:       \"  }\",",
          "",
          "---------------"
        ],
        "coders/psd.c||coders/psd.c": [
          "File: coders/psd.c -> coders/psd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2525:   if (next_image->depth > 8)",
          "2526:     next_image->depth=16;",
          "2527:   monochrome=IsImageMonochrome(image) && (image->depth == 1) ?",
          "2529:   quantum_info=AcquireQuantumInfo(image_info,image);",
          "2530:   if (quantum_info == (QuantumInfo *) NULL)",
          "2531:     return(0);",
          "",
          "[Removed Lines]",
          "2528:     MagickTrue : MagickFalse;",
          "",
          "[Added Lines]",
          "2528:     MagickTrue : MagickFalse;",
          "2529:   quantum_info=AcquireQuantumInfo(image_info,image);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "2614:   compact_pixels=(unsigned char *) AcquireQuantumMemory((9*",
          "2615:     image->columns)+1,packet_size*sizeof(*compact_pixels));",
          "2616:   if (compact_pixels == (unsigned char *) NULL)",
          "2618:       (void) ThrowMagickException(exception,GetMagickModule(),",
          "2619:         ResourceLimitError,\"MemoryAllocationFailed\",\"`%s'\",",
          "2620:         image->filename);",
          "",
          "[Removed Lines]",
          "2617:     {",
          "",
          "[Added Lines]",
          "2618:     {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2879:       break;",
          "2880:     p=PushLongPixel(MSBEndian,p,&long_sans);",
          "2881:     p=PushShortPixel(MSBEndian,p,&id);",
          "2883:     p=PushLongPixel(MSBEndian,p,&count);",
          "2884:     if (id == 0x0000040f)",
          "2885:       {",
          "",
          "[Removed Lines]",
          "2882:     p=PushShortPixel(MSBEndian,p,&short_sans);",
          "",
          "[Added Lines]",
          "2883:     p=PushShortPixel(MSBEndian,p,&short_sans);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "3385:     Write the total size",
          "3387:   size_offset+=WritePSDSize(&psd_info,image,size+",
          "3388:     (psd_info.version == 1 ? 8 : 16),size_offset);",
          "3389:   if ((size/2) != ((size+1)/2))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3388:   size_offset+=WritePSDSize(&psd_info,image,size+",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9c4777c310806a6bd8cbeae0b7c4e118c528e330",
      "candidate_info": {
        "commit_hash": "9c4777c310806a6bd8cbeae0b7c4e118c528e330",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/9c4777c310806a6bd8cbeae0b7c4e118c528e330",
        "files": [
          "coders/psd.c"
        ],
        "message": "Fixed removing the ICC profile from the 8BIM profile.",
        "before_after_code_files": [
          "coders/psd.c||coders/psd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/psd.c||coders/psd.c"
          ],
          "candidate": [
            "coders/psd.c||coders/psd.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/psd.c||coders/psd.c": [
          "File: coders/psd.c -> coders/psd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2586:       break;",
          "2587:     p=PushLongPixel(MSBEndian,p,&long_sans);",
          "2588:     p=PushShortPixel(MSBEndian,p,&id);",
          "2590:     p=PushLongPixel(MSBEndian,p,&count);",
          "2592:       {",
          "2593:         ssize_t",
          "2594:           quantum;",
          "",
          "[Removed Lines]",
          "2589:     p=PushShortPixel(MSBEndian,p,&short_sans);",
          "2591:     if (id == 0x0000040f)",
          "",
          "[Added Lines]",
          "2589:     p=PushShortPixel(MSBEndian,p,&short_sans);",
          "2591:     if (id == 0x0000040f)",
          "2592:       {",
          "",
          "---------------"
        ]
      }
    }
  ]
}