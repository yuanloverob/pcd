{
  "cve_id": "CVE-2018-8754",
  "cve_desc": "The libevt_record_values_read_event() function in libevt_record_values.c in libevt before 2018-03-17 does not properly check for out-of-bounds values of user SID data size, strings size, or data size. NOTE: the vendor has disputed this as described in libyal/libevt issue 5 on GitHub",
  "repo": "libyal/libevt",
  "patch_hash": "9d2cc3ca0a1612a6b271abcacffc2e3eea42925e",
  "patch_info": {
    "commit_hash": "9d2cc3ca0a1612a6b271abcacffc2e3eea42925e",
    "repo": "libyal/libevt",
    "commit_url": "https://github.com/libyal/libevt/commit/9d2cc3ca0a1612a6b271abcacffc2e3eea42925e",
    "files": [
      "configure.ac",
      "libevt.nuspec",
      "libevt/libevt_libfvalue.h",
      "libevt/libevt_record_values.c",
      "m4/libcdata.m4",
      "m4/libcsplit.m4",
      "m4/libfdata.m4",
      "runtests.sh"
    ],
    "message": "Applied updates and addition boundary checks for corrupted data",
    "before_after_code_files": [
      "configure.ac||configure.ac",
      "libevt.nuspec||libevt.nuspec",
      "libevt/libevt_libfvalue.h||libevt/libevt_libfvalue.h",
      "libevt/libevt_record_values.c||libevt/libevt_record_values.c",
      "m4/libcdata.m4||m4/libcdata.m4",
      "m4/libcsplit.m4||m4/libcsplit.m4",
      "m4/libfdata.m4||m4/libfdata.m4",
      "runtests.sh||runtests.sh"
    ]
  },
  "patch_diff": {
    "configure.ac||configure.ac": [
      "File: configure.ac -> configure.ac",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: AC_INIT(",
      "4:  [libevt],",
      "6:  [joachim.metz@gmail.com])",
      "8: AC_CONFIG_SRCDIR(",
      "",
      "[Removed Lines]",
      "5:  [20180125],",
      "",
      "[Added Lines]",
      "5:  [20180317],",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "48: dnl Check if wide character type should be enabled",
      "49: AX_COMMON_CHECK_ENABLE_WIDE_CHARACTER_TYPE",
      "51: dnl Check for type definitions",
      "52: AX_TYPES_CHECK_LOCAL",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "51: dnl Check if verbose output should be enabled",
      "52: AX_COMMON_CHECK_ENABLE_VERBOSE_OUTPUT",
      "54: dnl Check if debug output should be enabled",
      "55: AX_COMMON_CHECK_ENABLE_DEBUG_OUTPUT",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "146: dnl Check if evttools required headers and functions are available",
      "147: AX_EVTTOOLS_CHECK_LOCAL",
      "155: dnl Check if tests required headers and functions are available",
      "156: AX_TESTS_CHECK_LOCAL",
      "",
      "[Removed Lines]",
      "149: dnl Check if libevt should be build with verbose output",
      "150: AX_COMMON_CHECK_ENABLE_VERBOSE_OUTPUT",
      "152: dnl Check if libevt should be build with debug output",
      "153: AX_COMMON_CHECK_ENABLE_DEBUG_OUTPUT",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "libevt.nuspec||libevt.nuspec": [
      "File: libevt.nuspec -> libevt.nuspec",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: <package >",
      "3:   <metadata>",
      "4:     <id>libevt</id>",
      "6:     <authors>Joachim Metz</authors>",
      "7:     <owners>joachimmetz</owners>",
      "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
      "",
      "[Removed Lines]",
      "5:     <version>20180125</version>",
      "",
      "[Added Lines]",
      "5:     <version>20180317</version>",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
      "11:     <title>libevt</title>",
      "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
      "14:     <copyright>Copyright (C) 2011-2018</copyright>",
      "15:     <tags>native</tags>",
      "16:   </metadata>",
      "",
      "[Removed Lines]",
      "13:     <releaseNotes>Release of libevt 20180125</releaseNotes>",
      "",
      "[Added Lines]",
      "13:     <releaseNotes>Release of libevt 20180317</releaseNotes>",
      "",
      "---------------"
    ],
    "libevt/libevt_libfvalue.h||libevt/libevt_libfvalue.h": [
      "File: libevt/libevt_libfvalue.h -> libevt/libevt_libfvalue.h",
      "--- Hunk 1 ---",
      "[Context before]",
      "29: #if defined( HAVE_LOCAL_LIBFVALUE )",
      "31: #include <libfvalue_codepage.h>",
      "32: #include <libfvalue_definitions.h>",
      "33: #include <libfvalue_floating_point.h>",
      "34: #include <libfvalue_integer.h>",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32: #include <libfvalue_data_handle.h>",
      "",
      "---------------"
    ],
    "libevt/libevt_record_values.c||libevt/libevt_record_values.c": [
      "File: libevt/libevt_record_values.c -> libevt/libevt_record_values.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1157:  }",
      "1158:  if( user_sid_size != 0 )",
      "1159:  {",
      "1160:   if( libfvalue_value_type_initialize(",
      "1161:        &( record_values->user_security_identifier ),",
      "1162:        LIBFVALUE_VALUE_TYPE_NT_SECURITY_IDENTIFIER,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1160:   if( user_sid_size > ( ( record_data_size - 4 ) - user_sid_offset ) )",
      "1161:   {",
      "1162:    libcerror_error_set(",
      "1163:     error,",
      "1164:     LIBCERROR_ERROR_DOMAIN_RUNTIME,",
      "1165:     LIBCERROR_RUNTIME_ERROR_VALUE_OUT_OF_BOUNDS,",
      "1166:     \"%s: user SID data size value out of bounds.\",",
      "1167:     function );",
      "1169:    goto on_error;",
      "1170:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1218:  }",
      "1219:  if( strings_size != 0 )",
      "1220:  {",
      "1221: #if defined( HAVE_DEBUG_OUTPUT )",
      "1222:   if( libcnotify_verbose != 0 )",
      "1223:   {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1232:   if( strings_size > ( ( record_data_size - 4 ) - strings_offset ) )",
      "1233:   {",
      "1234:    libcerror_error_set(",
      "1235:     error,",
      "1236:     LIBCERROR_ERROR_DOMAIN_RUNTIME,",
      "1237:     LIBCERROR_RUNTIME_ERROR_VALUE_OUT_OF_BOUNDS,",
      "1238:     \"%s: strings size value out of bounds.\",",
      "1239:     function );",
      "1241:    goto on_error;",
      "1242:   }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1285:  }",
      "1286:  if( data_size != 0 )",
      "1287:  {",
      "1288: #if defined( HAVE_DEBUG_OUTPUT )",
      "1289:   if( libcnotify_verbose != 0 )",
      "1290:   {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1310:   if( data_size > ( ( record_data_size - 4 ) - record_data_offset ) )",
      "1311:   {",
      "1312:    libcerror_error_set(",
      "1313:     error,",
      "1314:     LIBCERROR_ERROR_DOMAIN_RUNTIME,",
      "1315:     LIBCERROR_RUNTIME_ERROR_VALUE_OUT_OF_BOUNDS,",
      "1316:     \"%s: data size value out of bounds.\",",
      "1317:     function );",
      "1319:    goto on_error;",
      "1320:   }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1292:     \"%s: data:\\n\",",
      "1293:     function );",
      "1294:    libcnotify_print_data(",
      "1296:     (size_t) data_size,",
      "1297:     LIBCNOTIFY_PRINT_DATA_FLAG_GROUP_DATA );",
      "1298:   }",
      "",
      "[Removed Lines]",
      "1295:     &( record_data[ data_offset ] ),",
      "",
      "[Added Lines]",
      "1328:     &( record_data[ record_data_offset ] ),",
      "",
      "---------------"
    ],
    "m4/libcdata.m4||m4/libcdata.m4": [
      "File: m4/libcdata.m4 -> m4/libcdata.m4",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: dnl Checks for libcdata or required headers and functions",
      "2: dnl",
      "5: dnl Function to detect if libcdata is available",
      "6: dnl ac_libcdata_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
      "",
      "[Removed Lines]",
      "3: dnl Version: 20170904",
      "",
      "[Added Lines]",
      "3: dnl Version: 20180316",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "123:           [ac_cv_libcdata_dummy=yes],",
      "124:           [ac_cv_libcdata=no])",
      "126:         dnl List functions",
      "127:         AC_CHECK_LIB(",
      "128:           cdata,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "126:         dnl Balanced tree functions",
      "127:         AC_CHECK_LIB(",
      "128:           cdata,",
      "129:           libfdata_btree_initialize,",
      "130:           [ac_cv_libcdata_dummy=yes],",
      "131:           [ac_cv_libcdata=no])",
      "132:         AC_CHECK_LIB(",
      "133:           cdata,",
      "134:           libcdata_btree_free,",
      "135:           [ac_cv_libcdata_dummy=yes],",
      "136:           [ac_cv_libcdata=no])",
      "137:         AC_CHECK_LIB(",
      "138:           cdata,",
      "139:           libcdata_btree_get_number_of_values,",
      "140:           [ac_cv_libcdata_dummy=yes],",
      "141:           [ac_cv_libcdata=no])",
      "142:         AC_CHECK_LIB(",
      "143:           cdata,",
      "144:           libcdata_btree_get_value_by_index,",
      "145:           [ac_cv_libcdata_dummy=yes],",
      "146:           [ac_cv_libcdata=no])",
      "147:         AC_CHECK_LIB(",
      "148:           cdata,",
      "149:           libcdata_btree_get_value_by_value,",
      "150:           [ac_cv_libcdata_dummy=yes],",
      "151:           [ac_cv_libcdata=no])",
      "152:         AC_CHECK_LIB(",
      "153:           cdata,",
      "154:           libcdata_btree_insert_value,",
      "155:           [ac_cv_libcdata_dummy=yes],",
      "156:           [ac_cv_libcdata=no])",
      "157:         AC_CHECK_LIB(",
      "158:           cdata,",
      "159:           libcdata_btree_replace_value,",
      "160:           [ac_cv_libcdata_dummy=yes],",
      "161:           [ac_cv_libcdata=no])",
      "162:         AC_CHECK_LIB(",
      "163:           cdata,",
      "164:           libcdata_btree_remove_value,",
      "165:           [ac_cv_libcdata_dummy=yes],",
      "166:           [ac_cv_libcdata=no])",
      "",
      "---------------"
    ],
    "m4/libcsplit.m4||m4/libcsplit.m4": [
      "File: m4/libcsplit.m4 -> m4/libcsplit.m4",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: dnl Checks for libcsplit or required headers and functions",
      "2: dnl",
      "5: dnl Function to detect if libcsplit is available",
      "6: dnl ac_libcsplit_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
      "",
      "[Removed Lines]",
      "3: dnl Version: 20170903",
      "",
      "[Added Lines]",
      "3: dnl Version: 20180217",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "111:         AS_IF(",
      "112:           [test \"x$ac_cv_enable_wide_character_type\" != xno],",
      "113:           [AC_CHECK_LIB(",
      "115:             libcsplit_wide_string_split,",
      "116:             [ac_cv_libcsplit_dummy=yes],",
      "117:             [ac_cv_libcsplit=no])",
      "",
      "[Removed Lines]",
      "114:           csplit,",
      "",
      "[Added Lines]",
      "114:             csplit,",
      "",
      "---------------"
    ],
    "m4/libfdata.m4||m4/libfdata.m4": [
      "File: m4/libfdata.m4 -> m4/libfdata.m4",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: dnl Functions for libfdata",
      "2: dnl",
      "5: dnl Function to detect if libfdata is available",
      "6: dnl ac_libfdata_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
      "",
      "[Removed Lines]",
      "3: dnl Version: 20170905",
      "",
      "[Added Lines]",
      "3: dnl Version: 20180316",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "49:           [ac_cv_libfdata=no])",
      "51:         dnl Area functions",
      "54:         dnl Balanced tree functions",
      "55:         dnl TODO: add functions",
      "",
      "[Removed Lines]",
      "52:         dnl TODO: add functions",
      "",
      "[Added Lines]",
      "52:         AC_CHECK_LIB(",
      "53:           fdata,",
      "54:           libfdata_area_initialize,",
      "55:           [ac_cv_libfdata_dummy=yes],",
      "56:           [ac_cv_libfdata=no])",
      "57:         AC_CHECK_LIB(",
      "58:           fdata,",
      "59:           libfdata_area_free,",
      "60:           [ac_cv_libfdata_dummy=yes],",
      "61:           [ac_cv_libfdata=no])",
      "62:         AC_CHECK_LIB(",
      "63:           fdata,",
      "64:           libfdata_area_clone,",
      "65:           [ac_cv_libfdata_dummy=yes],",
      "66:           [ac_cv_libfdata=no])",
      "67:         AC_CHECK_LIB(",
      "68:           fdata,",
      "69:           libfdata_area_empty,",
      "70:           [ac_cv_libfdata_dummy=yes],",
      "71:           [ac_cv_libfdata=no])",
      "72:         AC_CHECK_LIB(",
      "73:           fdata,",
      "74:           libfdata_area_resize,",
      "75:           [ac_cv_libfdata_dummy=yes],",
      "76:           [ac_cv_libfdata=no])",
      "77:         AC_CHECK_LIB(",
      "78:           fdata,",
      "79:           libfdata_area_get_number_of_segments,",
      "80:           [ac_cv_libfdata_dummy=yes],",
      "81:           [ac_cv_libfdata=no])",
      "82:         AC_CHECK_LIB(",
      "83:           fdata,",
      "84:           libfdata_area_get_segment_by_index,",
      "85:           [ac_cv_libfdata_dummy=yes],",
      "86:           [ac_cv_libfdata=no])",
      "87:         AC_CHECK_LIB(",
      "88:           fdata,",
      "89:           libfdata_area_set_segment_by_index,",
      "90:           [ac_cv_libfdata_dummy=yes],",
      "91:           [ac_cv_libfdata=no])",
      "92:         AC_CHECK_LIB(",
      "93:           fdata,",
      "94:           libfdata_area_prepend_segment,",
      "95:           [ac_cv_libfdata_dummy=yes],",
      "96:           [ac_cv_libfdata=no])",
      "97:         AC_CHECK_LIB(",
      "98:           fdata,",
      "99:           libfdata_area_append_segment,",
      "100:           [ac_cv_libfdata_dummy=yes],",
      "101:           [ac_cv_libfdata=no])",
      "102:         AC_CHECK_LIB(",
      "103:           fdata,",
      "104:           libfdata_area_get_element_data_size,",
      "105:           [ac_cv_libfdata_dummy=yes],",
      "106:           [ac_cv_libfdata=no])",
      "107:         AC_CHECK_LIB(",
      "108:           fdata,",
      "109:           libfdata_area_get_element_value_at_offset,",
      "110:           [ac_cv_libfdata_dummy=yes],",
      "111:           [ac_cv_libfdata=no])",
      "112:         AC_CHECK_LIB(",
      "113:           fdata,",
      "114:           libfdata_area_set_element_value_at_offset,",
      "115:           [ac_cv_libfdata_dummy=yes],",
      "116:           [ac_cv_libfdata=no])",
      "117:         AC_CHECK_LIB(",
      "118:           fdata,",
      "119:           libfdata_area_get_size,",
      "120:           [ac_cv_libfdata_dummy=yes],",
      "121:           [ac_cv_libfdata=no])",
      "",
      "---------------"
    ],
    "runtests.sh||runtests.sh": [
      "File: runtests.sh -> runtests.sh",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: #!/bin/bash",
      "2: # Script that runs the tests",
      "3: #",
      "6: EXIT_SUCCESS=0;",
      "7: EXIT_FAILURE=1;",
      "",
      "[Removed Lines]",
      "4: # Version: 20171210",
      "",
      "[Added Lines]",
      "4: # Version: 20180214",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "202: HAVE_ENABLE_WIDE_CHARACTER_TYPE=$?;",
      "204: echo \"${CONFIGURE_HELP}\" | grep -- '--with-zlib' > /dev/null;",
      "206: HAVE_WITH_ZLIB=$?;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "204: echo \"${CONFIGURE_HELP}\" | grep -- '--enable-verbose-output' > /dev/null;",
      "206: HAVE_ENABLE_VERBOSE_OUTPUT=$?;",
      "208: echo \"${CONFIGURE_HELP}\" | grep -- '--enable-debug-output' > /dev/null;",
      "210: HAVE_ENABLE_DEBUG_OUTPUT=$?;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "230:  exit ${EXIT_FAILURE};",
      "231: fi",
      "233: if test ${HAVE_WITH_ZLIB} -eq 0;",
      "234: then",
      "235:  # Test \"./configure && make && make check\" with fallback zlib implementation.",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "241: if test ${HAVE_ENABLE_VERBOSE_OUTPUT} -eq 0 && test ${HAVE_ENABLE_DEBUG_OUTPUT} -eq 0;",
      "242: then",
      "243:  # Test \"./configure && make && make check\" with verbose and debug output.",
      "245:  run_configure_make_check \"--enable-verbose-output --enable-debug-output\";",
      "246:  RESULT=$?;",
      "248:  if test ${RESULT} -ne ${EXIT_SUCCESS};",
      "249:  then",
      "250:   exit ${EXIT_FAILURE};",
      "251:  fi",
      "252: fi",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "573324d1a23a75e04b631cc2def3933f08ed236c",
      "candidate_info": {
        "commit_hash": "573324d1a23a75e04b631cc2def3933f08ed236c",
        "repo": "libyal/libevt",
        "commit_url": "https://github.com/libyal/libevt/commit/573324d1a23a75e04b631cc2def3933f08ed236c",
        "files": [
          ".travis.yml",
          "common/types.h.in",
          "configure.ac",
          "evttools/evttools_libcerror.h",
          "evttools/evttools_libclocale.h",
          "evttools/evttools_libcnotify.h",
          "evttools/evttools_libcpath.h",
          "evttools/evttools_libevt.h",
          "evttools/evttools_libfcache.h",
          "libevt.nuspec",
          "libevt/libevt_extern.h",
          "libevt/libevt_libcdata.h",
          "libevt/libevt_libcerror.h",
          "libevt/libevt_libclocale.h",
          "libevt/libevt_libcnotify.h",
          "libevt/libevt_libfcache.h",
          "m4/libcpath.m4",
          "m4/libfvalue.m4",
          "pyevt/pyevt.c",
          "pyevt/pyevt_libcerror.h",
          "pyevt/pyevt_libclocale.h",
          "tests/evt_test_libcerror.h",
          "tests/evt_test_libclocale.h",
          "tests/evt_test_libcnotify.h",
          "tests/evt_test_libevt.h"
        ],
        "message": "Applied updates",
        "before_after_code_files": [
          "common/types.h.in||common/types.h.in",
          "configure.ac||configure.ac",
          "evttools/evttools_libcerror.h||evttools/evttools_libcerror.h",
          "evttools/evttools_libclocale.h||evttools/evttools_libclocale.h",
          "evttools/evttools_libcnotify.h||evttools/evttools_libcnotify.h",
          "evttools/evttools_libcpath.h||evttools/evttools_libcpath.h",
          "evttools/evttools_libevt.h||evttools/evttools_libevt.h",
          "evttools/evttools_libfcache.h||evttools/evttools_libfcache.h",
          "libevt.nuspec||libevt.nuspec",
          "libevt/libevt_extern.h||libevt/libevt_extern.h",
          "libevt/libevt_libcdata.h||libevt/libevt_libcdata.h",
          "libevt/libevt_libcerror.h||libevt/libevt_libcerror.h",
          "libevt/libevt_libclocale.h||libevt/libevt_libclocale.h",
          "libevt/libevt_libcnotify.h||libevt/libevt_libcnotify.h",
          "libevt/libevt_libfcache.h||libevt/libevt_libfcache.h",
          "m4/libcpath.m4||m4/libcpath.m4",
          "m4/libfvalue.m4||m4/libfvalue.m4",
          "pyevt/pyevt.c||pyevt/pyevt.c",
          "pyevt/pyevt_libcerror.h||pyevt/pyevt_libcerror.h",
          "pyevt/pyevt_libclocale.h||pyevt/pyevt_libclocale.h",
          "tests/evt_test_libcerror.h||tests/evt_test_libcerror.h",
          "tests/evt_test_libclocale.h||tests/evt_test_libclocale.h",
          "tests/evt_test_libcnotify.h||tests/evt_test_libcnotify.h",
          "tests/evt_test_libevt.h||tests/evt_test_libevt.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec"
          ]
        }
      },
      "candidate_diff": {
        "common/types.h.in||common/types.h.in": [
          "File: common/types.h.in -> common/types.h.in",
          "--- Hunk 1 ---",
          "[Context before]",
          "77: #define PRId32 \"d\"",
          "79: #endif",
          "82: #if !defined( PRId64 )",
          "83: #if defined( WINAPI )",
          "",
          "[Removed Lines]",
          "80: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90: #define PRId64 \"lld\"",
          "92: #endif",
          "95: #if !defined( PRIi8 )",
          "96: #define PRIi8 \"i\"",
          "",
          "[Removed Lines]",
          "93: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "108: #define PRIi32 \"i\"",
          "110: #endif",
          "113: #if !defined( PRIi64 )",
          "114: #if defined( WINAPI )",
          "",
          "[Removed Lines]",
          "111: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "121: #define PRIi64 \"lli\"",
          "123: #endif",
          "126: #if !defined( PRIu8 )",
          "127: #define PRIu8 \"u\"",
          "",
          "[Removed Lines]",
          "124: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "139: #define PRIu32 \"u\"",
          "141: #endif",
          "144: #if !defined( PRIu64 )",
          "145: #if defined( WINAPI )",
          "",
          "[Removed Lines]",
          "142: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "152: #define PRIu64 \"llu\"",
          "154: #endif",
          "155: #endif",
          "157: #if !defined( PRIx8 )",
          "158: #define PRIx8 \"x\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "157: #if !defined( PRIo8 )",
          "158: #define PRIo8 \"o\"",
          "159: #endif",
          "161: #if !defined( PRIo16 )",
          "162: #define PRIo16 \"o\"",
          "163: #endif",
          "165: #if !defined( PRIo32 )",
          "166: #if defined( WINAPI )",
          "167: #define PRIo32 \"I32o\"",
          "169: #else",
          "170: #define PRIo32 \"o\"",
          "172: #endif",
          "175: #if !defined( PRIo64 )",
          "176: #if defined( WINAPI )",
          "177: #define PRIo64 \"I64o\"",
          "179: #elif __WORDSIZE == 64",
          "180: #define PRIo64 \"lo\"",
          "182: #else",
          "183: #define PRIo64 \"llo\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "170: #define PRIx32 \"x\"",
          "172: #endif",
          "175: #if !defined( PRIx64 )",
          "176: #if defined( WINAPI )",
          "",
          "[Removed Lines]",
          "173: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "183: #define PRIx64 \"llx\"",
          "185: #endif",
          "190: #if defined( HAVE_PRINTF_JD )",
          "191: #define PRIjd \"jd\"",
          "",
          "[Removed Lines]",
          "186: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "205: #define PRIju PRIu32",
          "206: #define PRIjx PRIx32",
          "212: #if defined( HAVE_PRINTF_ZD )",
          "213: #define PRIzd \"zd\"",
          "",
          "[Removed Lines]",
          "208: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "233: #define PRIzu PRIu32",
          "234: #define PRIzx PRIx32",
          "",
          "[Removed Lines]",
          "236: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "282: #else",
          "283: #define INT64_MAX (0x7fffffffffffffffULL)",
          "284: #endif",
          "",
          "[Removed Lines]",
          "285: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "292: #else",
          "293: #define UINT64_MAX (0xffffffffffffffffULL)",
          "294: #endif",
          "",
          "[Removed Lines]",
          "295: #endif",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "316: #define SSIZE_MAX INT64_MAX",
          "317: #else",
          "318: #define SSIZE_MAX INT32_MAX",
          "321: #else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "350: #endif",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "324: #define SSIZE_MAX INT64_MAX",
          "325: #else",
          "326: #define SSIZE_MAX INT32_MAX",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "358: #endif",
          "",
          "---------------"
        ],
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_INIT(",
          "4:  [libevt],",
          "6:  [joachim.metz@gmail.com])",
          "8: AC_CONFIG_SRCDIR(",
          "",
          "[Removed Lines]",
          "5:  [20180410],",
          "",
          "[Added Lines]",
          "5:  [20180718],",
          "",
          "---------------"
        ],
        "evttools/evttools_libcerror.h||evttools/evttools_libcerror.h": [
          "File: evttools/evttools_libcerror.h -> evttools/evttools_libcerror.h"
        ],
        "evttools/evttools_libclocale.h||evttools/evttools_libclocale.h": [
          "File: evttools/evttools_libclocale.h -> evttools/evttools_libclocale.h"
        ],
        "evttools/evttools_libcnotify.h||evttools/evttools_libcnotify.h": [
          "File: evttools/evttools_libcnotify.h -> evttools/evttools_libcnotify.h"
        ],
        "evttools/evttools_libcpath.h||evttools/evttools_libcpath.h": [
          "File: evttools/evttools_libcpath.h -> evttools/evttools_libcpath.h"
        ],
        "evttools/evttools_libevt.h||evttools/evttools_libevt.h": [
          "File: evttools/evttools_libevt.h -> evttools/evttools_libevt.h"
        ],
        "evttools/evttools_libfcache.h||evttools/evttools_libfcache.h": [
          "File: evttools/evttools_libfcache.h -> evttools/evttools_libfcache.h"
        ],
        "libevt.nuspec||libevt.nuspec": [
          "File: libevt.nuspec -> libevt.nuspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: <package >",
          "3:   <metadata>",
          "4:     <id>libevt</id>",
          "6:     <authors>Joachim Metz</authors>",
          "7:     <owners>joachimmetz</owners>",
          "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
          "",
          "[Removed Lines]",
          "5:     <version>20180410</version>",
          "",
          "[Added Lines]",
          "5:     <version>20180718</version>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
          "11:     <title>libevt</title>",
          "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
          "14:     <copyright>Copyright (C) 2011-2018</copyright>",
          "15:     <tags>native</tags>",
          "16:   </metadata>",
          "",
          "[Removed Lines]",
          "13:     <releaseNotes>Release of libevt 20180410</releaseNotes>",
          "",
          "[Added Lines]",
          "13:     <releaseNotes>Release of libevt 20180718</releaseNotes>",
          "",
          "---------------"
        ],
        "libevt/libevt_extern.h||libevt/libevt_extern.h": [
          "File: libevt/libevt_extern.h -> libevt/libevt_extern.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: #include <libevt/extern.h>",
          "40: #else",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "40: #define LIBEVT_EXTERN_VARIABLE LIBEVT_EXTERN",
          "44: #define LIBEVT_EXTERN_VARIABLE extern",
          "",
          "---------------"
        ],
        "libevt/libevt_libcdata.h||libevt/libevt_libcdata.h": [
          "File: libevt/libevt_libcdata.h -> libevt/libevt_libcdata.h"
        ],
        "libevt/libevt_libcerror.h||libevt/libevt_libcerror.h": [
          "File: libevt/libevt_libcerror.h -> libevt/libevt_libcerror.h"
        ],
        "libevt/libevt_libclocale.h||libevt/libevt_libclocale.h": [
          "File: libevt/libevt_libclocale.h -> libevt/libevt_libclocale.h"
        ],
        "libevt/libevt_libcnotify.h||libevt/libevt_libcnotify.h": [
          "File: libevt/libevt_libcnotify.h -> libevt/libevt_libcnotify.h"
        ],
        "libevt/libevt_libfcache.h||libevt/libevt_libfcache.h": [
          "File: libevt/libevt_libfcache.h -> libevt/libevt_libfcache.h"
        ],
        "m4/libcpath.m4||m4/libcpath.m4": [
          "File: m4/libcpath.m4 -> m4/libcpath.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libcpath or required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libcpath is available",
          "6: dnl ac_libcpath_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20180407",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180716",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:       [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "25:       [PKG_CHECK_MODULES(",
          "26:         [libcpath],",
          "28:         [ac_cv_libcpath=yes],",
          "29:         [ac_cv_libcpath=check])",
          "30:       ])",
          "",
          "[Removed Lines]",
          "27:         [libcpath >= 20120701],",
          "",
          "[Added Lines]",
          "27:         [libcpath >= 20180716],",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "91:           [ac_cv_libcpath=no])",
          "92:         AC_CHECK_LIB(",
          "93:           cpath,",
          "95:           [ac_cv_libcpath_dummy=yes],",
          "96:           [ac_cv_libcpath=no])",
          "97:         AC_CHECK_LIB(",
          "98:           cpath,",
          "100:           [ac_cv_libcpath_dummy=yes],",
          "101:           [ac_cv_libcpath=no])",
          "102:         AC_CHECK_LIB(",
          "103:           cpath,",
          "105:           [ac_cv_libcpath_dummy=yes],",
          "106:           [ac_cv_libcpath=no])",
          "107:         AC_CHECK_LIB(",
          "108:           cpath,",
          "110:           [ac_cv_libcpath_dummy=yes],",
          "111:           [ac_cv_libcpath=no])",
          "",
          "[Removed Lines]",
          "94:           libcpath_path_join,",
          "99:           libcpath_path_make_directory,",
          "104:           libcpath_path_sanitize,",
          "109:           libcpath_path_sanitize_filename,",
          "",
          "[Added Lines]",
          "94:           libcpath_path_get_sanitized_filename,",
          "99:           libcpath_path_get_sanitized_path,",
          "104:           libcpath_path_join,",
          "109:           libcpath_path_make_directory,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "129:             [ac_cv_libcpath=no])",
          "130:           AC_CHECK_LIB(",
          "131:             cpath,",
          "133:             [ac_cv_libcpath_dummy=yes],",
          "134:             [ac_cv_libcpath=no])",
          "135:           AC_CHECK_LIB(",
          "136:             cpath,",
          "138:             [ac_cv_libcpath_dummy=yes],",
          "139:             [ac_cv_libcpath=no])",
          "140:           AC_CHECK_LIB(",
          "141:             cpath,",
          "143:             [ac_cv_libcpath_dummy=yes],",
          "144:             [ac_cv_libcpath=no])",
          "145:           AC_CHECK_LIB(",
          "146:             cpath,",
          "148:             [ac_cv_libcpath_dummy=yes],",
          "149:             [ac_cv_libcpath=no])",
          "150:           ])",
          "",
          "[Removed Lines]",
          "132:             libcpath_path_join_wide,",
          "137:             libcpath_path_make_directory_wide,",
          "142:             libcpath_path_sanitize_wide,",
          "147:             libcpath_path_sanitize_filename_wide,",
          "",
          "[Added Lines]",
          "132:             libcpath_path_get_sanitized_filename_wide,",
          "137:             libcpath_path_get_sanitized_path_wide,",
          "142:             libcpath_path_join_wide,",
          "147:             libcpath_path_make_directory_wide,",
          "",
          "---------------"
        ],
        "m4/libfvalue.m4||m4/libfvalue.m4": [
          "File: m4/libfvalue.m4 -> m4/libfvalue.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Functions for libfvalue",
          "2: dnl",
          "5: dnl Function to detect if libfvalue available",
          "6: dnl ac_libfvalue_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20170908",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180410",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "587:       ])",
          "588:     ])",
          "590:   AS_IF(",
          "591:     [test \"x$ac_cv_libfvalue\" = xyes],",
          "592:     [AC_DEFINE(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "590:   dnl Check for debug functions",
          "591:   AS_IF(",
          "592:     [test \"x$ac_cv_libfvalue\" = xyes && test \"x$ac_cv_enable_debug_output\" != xno],",
          "593:     [AC_CHECK_LIB(",
          "594:       fvalue,",
          "595:       libfvalue_value_print,",
          "596:       [ac_cv_libfvalue_dummy=yes],",
          "597:       [ac_cv_libfvalue=no])",
          "598:     ])",
          "",
          "---------------"
        ],
        "pyevt/pyevt.c||pyevt/pyevt.c": [
          "File: pyevt/pyevt.c -> pyevt/pyevt.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "550:   goto on_error;",
          "551:  }",
          "552:  Py_IncRef(",
          "555:  PyModule_AddObject(",
          "556:   module,",
          "",
          "[Removed Lines]",
          "553:   (PyObject * ) &pyevt_event_types_type_object );",
          "",
          "[Added Lines]",
          "553:   (PyObject *) &pyevt_event_types_type_object );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "567:   goto on_error;",
          "568:  }",
          "569:  Py_IncRef(",
          "572:  PyModule_AddObject(",
          "573:   module,",
          "",
          "[Removed Lines]",
          "570:   (PyObject * ) &pyevt_file_type_object );",
          "",
          "[Added Lines]",
          "570:   (PyObject *) &pyevt_file_type_object );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "584:   goto on_error;",
          "585:  }",
          "586:  Py_IncRef(",
          "589:  PyModule_AddObject(",
          "590:   module,",
          "",
          "[Removed Lines]",
          "587:   (PyObject * ) &pyevt_file_flags_type_object );",
          "",
          "[Added Lines]",
          "587:   (PyObject *) &pyevt_file_flags_type_object );",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "601:   goto on_error;",
          "602:  }",
          "603:  Py_IncRef(",
          "606:  PyModule_AddObject(",
          "607:   module,",
          "",
          "[Removed Lines]",
          "604:   (PyObject * ) &pyevt_record_type_object );",
          "",
          "[Added Lines]",
          "604:   (PyObject *) &pyevt_record_type_object );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "618:   goto on_error;",
          "619:  }",
          "620:  Py_IncRef(",
          "623:  PyModule_AddObject(",
          "624:   module,",
          "",
          "[Removed Lines]",
          "621:   (PyObject * ) &pyevt_records_type_object );",
          "",
          "[Added Lines]",
          "621:   (PyObject *) &pyevt_records_type_object );",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "635:   goto on_error;",
          "636:  }",
          "637:  Py_IncRef(",
          "640:  PyModule_AddObject(",
          "641:   module,",
          "",
          "[Removed Lines]",
          "638:   (PyObject * ) &pyevt_strings_type_object );",
          "",
          "[Added Lines]",
          "638:   (PyObject *) &pyevt_strings_type_object );",
          "",
          "---------------"
        ],
        "pyevt/pyevt_libcerror.h||pyevt/pyevt_libcerror.h": [
          "File: pyevt/pyevt_libcerror.h -> pyevt/pyevt_libcerror.h"
        ],
        "pyevt/pyevt_libclocale.h||pyevt/pyevt_libclocale.h": [
          "File: pyevt/pyevt_libclocale.h -> pyevt/pyevt_libclocale.h"
        ],
        "tests/evt_test_libcerror.h||tests/evt_test_libcerror.h": [
          "File: tests/evt_test_libcerror.h -> tests/evt_test_libcerror.h"
        ],
        "tests/evt_test_libclocale.h||tests/evt_test_libclocale.h": [
          "File: tests/evt_test_libclocale.h -> tests/evt_test_libclocale.h"
        ],
        "tests/evt_test_libcnotify.h||tests/evt_test_libcnotify.h": [
          "File: tests/evt_test_libcnotify.h -> tests/evt_test_libcnotify.h"
        ],
        "tests/evt_test_libevt.h||tests/evt_test_libevt.h": [
          "File: tests/evt_test_libevt.h -> tests/evt_test_libevt.h"
        ]
      }
    },
    {
      "candidate_hash": "b5792592a9f35c48af7aef74ed6a3ce39f32c5d8",
      "candidate_info": {
        "commit_hash": "b5792592a9f35c48af7aef74ed6a3ce39f32c5d8",
        "repo": "libyal/libevt",
        "commit_url": "https://github.com/libyal/libevt/commit/b5792592a9f35c48af7aef74ed6a3ce39f32c5d8",
        "files": [
          "configure.ac",
          "dpkg/control",
          "libevt.nuspec",
          "tests/test_evtexport.sh",
          "tests/test_evtinfo.ps1",
          "tests/test_evtinfo.sh",
          "tests/test_library.ps1",
          "tests/test_library.sh",
          "tests/test_python_module.sh"
        ],
        "message": "Applied updates",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "libevt.nuspec||libevt.nuspec",
          "tests/test_evtexport.sh||tests/test_evtexport.sh",
          "tests/test_evtinfo.ps1||tests/test_evtinfo.ps1",
          "tests/test_evtinfo.sh||tests/test_evtinfo.sh",
          "tests/test_library.ps1||tests/test_library.ps1",
          "tests/test_library.sh||tests/test_library.sh",
          "tests/test_python_module.sh||tests/test_python_module.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_INIT(",
          "4:  [libevt],",
          "6:  [joachim.metz@gmail.com])",
          "8: AC_CONFIG_SRCDIR(",
          "",
          "[Removed Lines]",
          "5:  [20181216],",
          "",
          "[Added Lines]",
          "5:  [20181227],",
          "",
          "---------------"
        ],
        "libevt.nuspec||libevt.nuspec": [
          "File: libevt.nuspec -> libevt.nuspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: <package >",
          "3:   <metadata>",
          "4:     <id>libevt</id>",
          "6:     <authors>Joachim Metz</authors>",
          "7:     <owners>joachimmetz</owners>",
          "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
          "",
          "[Removed Lines]",
          "5:     <version>20181216</version>",
          "",
          "[Added Lines]",
          "5:     <version>20181227</version>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
          "11:     <title>libevt</title>",
          "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
          "14:     <copyright>Copyright (C) 2011-2018</copyright>",
          "15:     <tags>native</tags>",
          "16:   </metadata>",
          "",
          "[Removed Lines]",
          "13:     <releaseNotes>Release of libevt 20181216</releaseNotes>",
          "",
          "[Added Lines]",
          "13:     <releaseNotes>Release of libevt 20181227</releaseNotes>",
          "",
          "---------------"
        ],
        "tests/test_evtexport.sh||tests/test_evtexport.sh": [
          "File: tests/test_evtexport.sh -> tests/test_evtexport.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Export tool testing script",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "",
          "[Removed Lines]",
          "4: # Version: 20181111",
          "",
          "[Added Lines]",
          "4: # Version: 20181221",
          "",
          "---------------"
        ],
        "tests/test_evtinfo.ps1||tests/test_evtinfo.ps1": [
          "File: tests/test_evtinfo.ps1 -> tests/test_evtinfo.ps1",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Info tool testing script",
          "2: #",
          "5: $ExitSuccess = 0",
          "6: $ExitFailure = 1",
          "",
          "[Removed Lines]",
          "3: # Version: 20180805",
          "",
          "[Added Lines]",
          "3: # Version: 20181221",
          "",
          "---------------"
        ],
        "tests/test_evtinfo.sh||tests/test_evtinfo.sh": [
          "File: tests/test_evtinfo.sh -> tests/test_evtinfo.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Info tool testing script",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "",
          "[Removed Lines]",
          "4: # Version: 20181111",
          "",
          "[Added Lines]",
          "4: # Version: 20181221",
          "",
          "---------------"
        ],
        "tests/test_library.ps1||tests/test_library.ps1": [
          "File: tests/test_library.ps1 -> tests/test_library.ps1",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Tests C library functions and types.",
          "2: #",
          "5: $ExitSuccess = 0",
          "6: $ExitFailure = 1",
          "",
          "[Removed Lines]",
          "3: # Version: 20180805",
          "",
          "[Added Lines]",
          "3: # Version: 20181221",
          "",
          "---------------"
        ],
        "tests/test_library.sh||tests/test_library.sh": [
          "File: tests/test_library.sh -> tests/test_library.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Tests C library functions and types.",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "",
          "[Removed Lines]",
          "4: # Version: 20180907",
          "",
          "[Added Lines]",
          "4: # Version: 20181221",
          "",
          "---------------"
        ],
        "tests/test_python_module.sh||tests/test_python_module.sh": [
          "File: tests/test_python_module.sh -> tests/test_python_module.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Tests Python module functions and types.",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "",
          "[Removed Lines]",
          "4: # Version: 20180728",
          "",
          "[Added Lines]",
          "4: # Version: 20181221",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b31963feb24addd41c081ded30c728c85f795625",
      "candidate_info": {
        "commit_hash": "b31963feb24addd41c081ded30c728c85f795625",
        "repo": "libyal/libevt",
        "commit_url": "https://github.com/libyal/libevt/commit/b31963feb24addd41c081ded30c728c85f795625",
        "files": [
          ".travis.yml",
          "configure.ac",
          "libevt.nuspec",
          "m4/libcdata.m4",
          "m4/libregf.m4",
          "pyevt/pyevt_records.c",
          "pyevt/pyevt_strings.c"
        ],
        "message": "Removed call to init from new in pyevt sequence objects",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "libevt.nuspec||libevt.nuspec",
          "m4/libcdata.m4||m4/libcdata.m4",
          "m4/libregf.m4||m4/libregf.m4",
          "pyevt/pyevt_records.c||pyevt/pyevt_records.c",
          "pyevt/pyevt_strings.c||pyevt/pyevt_strings.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "m4/libcdata.m4||m4/libcdata.m4"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "m4/libcdata.m4||m4/libcdata.m4"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_INIT(",
          "4:  [libevt],",
          "6:  [joachim.metz@gmail.com])",
          "8: AC_CONFIG_SRCDIR(",
          "",
          "[Removed Lines]",
          "5:  [20181129],",
          "",
          "[Added Lines]",
          "5:  [20181216],",
          "",
          "---------------"
        ],
        "libevt.nuspec||libevt.nuspec": [
          "File: libevt.nuspec -> libevt.nuspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: <package >",
          "3:   <metadata>",
          "4:     <id>libevt</id>",
          "6:     <authors>Joachim Metz</authors>",
          "7:     <owners>joachimmetz</owners>",
          "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
          "",
          "[Removed Lines]",
          "5:     <version>20181126</version>",
          "",
          "[Added Lines]",
          "5:     <version>20181216</version>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
          "11:     <title>libevt</title>",
          "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
          "14:     <copyright>Copyright (C) 2011-2018</copyright>",
          "15:     <tags>native</tags>",
          "16:   </metadata>",
          "",
          "[Removed Lines]",
          "13:     <releaseNotes>Release of libevt 20181126</releaseNotes>",
          "",
          "[Added Lines]",
          "13:     <releaseNotes>Release of libevt 20181216</releaseNotes>",
          "",
          "---------------"
        ],
        "m4/libcdata.m4||m4/libcdata.m4": [
          "File: m4/libcdata.m4 -> m4/libcdata.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libcdata required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libcdata is available",
          "6: dnl ac_libcdata_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20181117",
          "",
          "[Added Lines]",
          "3: dnl Version: 20181216",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:         [test \"x$cross_compiling\" != \"xyes\" && test \"x$PKGCONFIG\" != \"x\"],",
          "26:         [PKG_CHECK_MODULES(",
          "27:           [libcdata],",
          "29:           [ac_cv_libcdata=yes],",
          "30:           [ac_cv_libcdata=check])",
          "31:         ])",
          "",
          "[Removed Lines]",
          "28:           [libcdata >= 20160108],",
          "",
          "[Added Lines]",
          "28:           [libcdata >= 20181216],",
          "",
          "---------------"
        ],
        "m4/libregf.m4||m4/libregf.m4": [
          "File: m4/libregf.m4 -> m4/libregf.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libregf required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libregf is available",
          "6: dnl ac_libregf_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20181117",
          "",
          "[Added Lines]",
          "3: dnl Version: 20181126",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "96:   AS_IF(",
          "97:     [test \"x$ac_cv_func_towupper\" != xyes],",
          "98:     [AC_MSG_FAILURE(",
          "100:       [1])",
          "101:    ])",
          "",
          "[Removed Lines]",
          "99:       [Missing functions: towupper],",
          "",
          "[Added Lines]",
          "99:       [Missing function: towupper],",
          "",
          "---------------"
        ],
        "pyevt/pyevt_records.c||pyevt/pyevt_records.c": [
          "File: pyevt/pyevt_records.c -> pyevt/pyevt_records.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "197:   goto on_error;",
          "198:  }",
          "209:  sequence_object->parent_object     = parent_object;",
          "210:  sequence_object->get_item_by_index = get_item_by_index;",
          "211:  sequence_object->number_of_items   = number_of_items;",
          "213:  Py_IncRef(",
          "",
          "[Removed Lines]",
          "199:  if( pyevt_records_init(",
          "200:       sequence_object ) != 0 )",
          "201:  {",
          "202:   PyErr_Format(",
          "203:    PyExc_MemoryError,",
          "204:    \"%s: unable to initialize sequence object.\",",
          "205:    function );",
          "207:   goto on_error;",
          "208:  }",
          "",
          "[Added Lines]",
          "201:  sequence_object->current_index     = 0;",
          "",
          "---------------"
        ],
        "pyevt/pyevt_strings.c||pyevt/pyevt_strings.c": [
          "File: pyevt/pyevt_strings.c -> pyevt/pyevt_strings.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "196:   goto on_error;",
          "197:  }",
          "208:  sequence_object->parent_object     = parent_object;",
          "209:  sequence_object->get_item_by_index = get_item_by_index;",
          "210:  sequence_object->number_of_items   = number_of_items;",
          "212:  Py_IncRef(",
          "",
          "[Removed Lines]",
          "198:  if( pyevt_strings_init(",
          "199:       sequence_object ) != 0 )",
          "200:  {",
          "201:   PyErr_Format(",
          "202:    PyExc_MemoryError,",
          "203:    \"%s: unable to initialize sequence object.\",",
          "204:    function );",
          "206:   goto on_error;",
          "207:  }",
          "",
          "[Added Lines]",
          "200:  sequence_object->current_index     = 0;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "47d58f7217b88d99257e6f4d71be2370c1a1cdef",
      "candidate_info": {
        "commit_hash": "47d58f7217b88d99257e6f4d71be2370c1a1cdef",
        "repo": "libyal/libevt",
        "commit_url": "https://github.com/libyal/libevt/commit/47d58f7217b88d99257e6f4d71be2370c1a1cdef",
        "files": [
          "configure.ac",
          "libevt.nuspec",
          "runtests.sh"
        ],
        "message": "Applied updates",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "libevt.nuspec||libevt.nuspec",
          "runtests.sh||runtests.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "runtests.sh||runtests.sh"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "runtests.sh||runtests.sh"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_INIT(",
          "4:  [libevt],",
          "6:  [joachim.metz@gmail.com])",
          "8: AC_CONFIG_SRCDIR(",
          "",
          "[Removed Lines]",
          "5:  [20181227],",
          "",
          "[Added Lines]",
          "5:  [20181228],",
          "",
          "---------------"
        ],
        "libevt.nuspec||libevt.nuspec": [
          "File: libevt.nuspec -> libevt.nuspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: <package >",
          "3:   <metadata>",
          "4:     <id>libevt</id>",
          "6:     <authors>Joachim Metz</authors>",
          "7:     <owners>joachimmetz</owners>",
          "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
          "",
          "[Removed Lines]",
          "5:     <version>20181227</version>",
          "",
          "[Added Lines]",
          "5:     <version>20181228</version>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
          "11:     <title>libevt</title>",
          "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
          "14:     <copyright>Copyright (C) 2011-2018</copyright>",
          "15:     <tags>native</tags>",
          "16:   </metadata>",
          "",
          "[Removed Lines]",
          "13:     <releaseNotes>Release of libevt 20181227</releaseNotes>",
          "",
          "[Added Lines]",
          "13:     <releaseNotes>Release of libevt 20181228</releaseNotes>",
          "",
          "---------------"
        ],
        "runtests.sh||runtests.sh": [
          "File: runtests.sh -> runtests.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/bin/bash",
          "2: # Script that runs the tests",
          "3: #",
          "6: EXIT_SUCCESS=0;",
          "7: EXIT_FAILURE=1;",
          "",
          "[Removed Lines]",
          "4: # Version: 20180905",
          "",
          "[Added Lines]",
          "4: # Version: 20181228",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "84:   return ${EXIT_SUCCESS};",
          "85:  fi",
          "86:  # Using libasan is platform dependent.",
          "88:  then",
          "89:   return ${EXIT_SUCCESS};",
          "90:  fi",
          "",
          "[Removed Lines]",
          "87:  if test ${LIBASAN} != \"/lib64/libasan.so.4\";",
          "",
          "[Added Lines]",
          "87:  if test ${LIBASAN} != \"/lib64/libasan.so.4\" && test ${LIBASAN} != \"/lib64/libasan.so.5\";",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a7e151a18326bb8b9348ef2c4c893672a18fd0a9",
      "candidate_info": {
        "commit_hash": "a7e151a18326bb8b9348ef2c4c893672a18fd0a9",
        "repo": "libyal/libevt",
        "commit_url": "https://github.com/libyal/libevt/commit/a7e151a18326bb8b9348ef2c4c893672a18fd0a9",
        "files": [
          "configure.ac",
          "libevt.nuspec",
          "m4/libbfio.m4",
          "m4/libcdirectory.m4",
          "m4/libcfile.m4",
          "m4/libclocale.m4",
          "m4/libcpath.m4",
          "m4/libcsplit.m4",
          "m4/libfwevt.m4",
          "setup.py"
        ],
        "message": "Applied updates",
        "before_after_code_files": [
          "configure.ac||configure.ac",
          "libevt.nuspec||libevt.nuspec",
          "m4/libbfio.m4||m4/libbfio.m4",
          "m4/libcdirectory.m4||m4/libcdirectory.m4",
          "m4/libcfile.m4||m4/libcfile.m4",
          "m4/libclocale.m4||m4/libclocale.m4",
          "m4/libcpath.m4||m4/libcpath.m4",
          "m4/libcsplit.m4||m4/libcsplit.m4",
          "m4/libfwevt.m4||m4/libfwevt.m4",
          "setup.py||setup.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "m4/libcsplit.m4||m4/libcsplit.m4"
          ],
          "candidate": [
            "configure.ac||configure.ac",
            "libevt.nuspec||libevt.nuspec",
            "m4/libcsplit.m4||m4/libcsplit.m4"
          ]
        }
      },
      "candidate_diff": {
        "configure.ac||configure.ac": [
          "File: configure.ac -> configure.ac",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: AC_INIT(",
          "4:  [libevt],",
          "6:  [joachim.metz@gmail.com])",
          "8: AC_CONFIG_SRCDIR(",
          "",
          "[Removed Lines]",
          "5:  [20180401],",
          "",
          "[Added Lines]",
          "5:  [20180410],",
          "",
          "---------------"
        ],
        "libevt.nuspec||libevt.nuspec": [
          "File: libevt.nuspec -> libevt.nuspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: <package >",
          "3:   <metadata>",
          "4:     <id>libevt</id>",
          "6:     <authors>Joachim Metz</authors>",
          "7:     <owners>joachimmetz</owners>",
          "8:     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>",
          "",
          "[Removed Lines]",
          "5:     <version>20180401</version>",
          "",
          "[Added Lines]",
          "5:     <version>20180410</version>",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "10:     <requireLicenseAcceptance>false</requireLicenseAcceptance>",
          "11:     <title>libevt</title>",
          "12:     <description>Library to access the Windows Event Log (EVT) format</description>",
          "14:     <copyright>Copyright (C) 2011-2018</copyright>",
          "15:     <tags>native</tags>",
          "16:   </metadata>",
          "",
          "[Removed Lines]",
          "13:     <releaseNotes>Release of libevt 20180401</releaseNotes>",
          "",
          "[Added Lines]",
          "13:     <releaseNotes>Release of libevt 20180410</releaseNotes>",
          "",
          "---------------"
        ],
        "m4/libbfio.m4||m4/libbfio.m4": [
          "File: m4/libbfio.m4 -> m4/libbfio.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libbfio or required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libbfio is available",
          "6: AC_DEFUN([AX_LIBBFIO_CHECK_LIB],",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20170912",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180407",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:            [[#include <libbfio/features.h>]],",
          "40:            [[#if !defined( LIBBFIO_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBBFIO_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "41: #error LIBBFIO_HAVE_WIDE_CHARACTER_TYPE not defined",
          "43:          [ac_cv_header_libbfio_features_h_have_wide_character_type=yes],",
          "44:          [ac_cv_header_libbfio_features_h_have_wide_character_type=no])",
          "45:        AC_LANG_POP(C)],",
          "",
          "[Removed Lines]",
          "42: ##endif]] )],",
          "",
          "[Added Lines]",
          "42: #endif]] )],",
          "",
          "---------------"
        ],
        "m4/libcdirectory.m4||m4/libcdirectory.m4": [
          "File: m4/libcdirectory.m4 -> m4/libcdirectory.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libcdirectory or required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libcdirectory is available",
          "6: dnl ac_libcdirectory_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20170904",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180407",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:            [[#include <libcdirectory/features.h>]],",
          "41:            [[#if !defined( LIBCDIRECTORY_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBCDIRECTORY_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "42: #error LIBCDIRECTORY_HAVE_WIDE_CHARACTER_TYPE not defined",
          "44:          [ac_cv_header_libcdirectory_features_h_have_wide_character_type=yes],",
          "45:          [ac_cv_header_libcdirectory_features_h_have_wide_character_type=no])",
          "46:        AC_LANG_POP(C)],",
          "",
          "[Removed Lines]",
          "43: ##endif]] )],",
          "",
          "[Added Lines]",
          "43: #endif]] )],",
          "",
          "---------------"
        ],
        "m4/libcfile.m4||m4/libcfile.m4": [
          "File: m4/libcfile.m4 -> m4/libcfile.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libcfile or required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libcfile is available",
          "6: dnl ac_libcfile_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20170904",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180407",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:            [[#include <libcfile/features.h>]],",
          "41:            [[#if !defined( LIBCFILE_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBCFILE_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "42: #error LIBCFILE_HAVE_WIDE_CHARACTER_TYPE not defined",
          "44:          [ac_cv_header_libcfile_features_h_have_wide_character_type=yes],",
          "45:          [ac_cv_header_libcfile_features_h_have_wide_character_type=no])",
          "46:        AC_LANG_POP(C)],",
          "",
          "[Removed Lines]",
          "43: ##endif]] )],",
          "",
          "[Added Lines]",
          "43: #endif]] )],",
          "",
          "---------------"
        ],
        "m4/libclocale.m4||m4/libclocale.m4": [
          "File: m4/libclocale.m4 -> m4/libclocale.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libclocale or required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libclocale is available",
          "6: dnl ac_libclocale_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20170904",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180407",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:            [[#include <libclocale/features.h>]],",
          "41:            [[#if !defined( LIBCLOCALE_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBCLOCALE_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "42: #error LIBCLOCALE_HAVE_WIDE_CHARACTER_TYPE not defined",
          "44:          [ac_cv_header_libclocale_features_h_have_wide_character_type=yes],",
          "45:          [ac_cv_header_libclocale_features_h_have_wide_character_type=no])",
          "46:        AC_LANG_POP(C)],",
          "",
          "[Removed Lines]",
          "43: ##endif]] )],",
          "",
          "[Added Lines]",
          "43: #endif]] )],",
          "",
          "---------------"
        ],
        "m4/libcpath.m4||m4/libcpath.m4": [
          "File: m4/libcpath.m4 -> m4/libcpath.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libcpath or required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libcpath is available",
          "6: dnl ac_libcpath_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20170904",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180407",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:            [[#include <libcpath/features.h>]],",
          "41:            [[#if !defined( LIBCPATH_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBCPATH_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "42: #error LIBCPATH_HAVE_WIDE_CHARACTER_TYPE not defined",
          "44:          [ac_cv_header_libcpath_features_h_have_wide_character_type=yes],",
          "45:          [ac_cv_header_libcpath_features_h_have_wide_character_type=no])",
          "46:        AC_LANG_POP(C)],",
          "",
          "[Removed Lines]",
          "43: ##endif]] )],",
          "",
          "[Added Lines]",
          "43: #endif]] )],",
          "",
          "---------------"
        ],
        "m4/libcsplit.m4||m4/libcsplit.m4": [
          "File: m4/libcsplit.m4 -> m4/libcsplit.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Checks for libcsplit or required headers and functions",
          "2: dnl",
          "5: dnl Function to detect if libcsplit is available",
          "6: dnl ac_libcsplit_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20180217",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180407",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:            [[#include <libcsplit/features.h>]],",
          "41:            [[#if !defined( LIBCSPLIT_HAVE_WIDE_CHARACTER_TYPE ) || ( LIBCSPLIT_HAVE_WIDE_CHARACTER_TYPE != 1 )",
          "42: #error LIBCSPLIT_HAVE_WIDE_CHARACTER_TYPE not defined",
          "44:          [ac_cv_header_libcsplit_features_h_have_wide_character_type=yes],",
          "45:          [ac_cv_header_libcsplit_features_h_have_wide_character_type=no])",
          "46:        AC_LANG_POP(C)],",
          "",
          "[Removed Lines]",
          "43: ##endif]] )],",
          "",
          "[Added Lines]",
          "43: #endif]] )],",
          "",
          "---------------"
        ],
        "m4/libfwevt.m4||m4/libfwevt.m4": [
          "File: m4/libfwevt.m4 -> m4/libfwevt.m4",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: dnl Functions for libfwevt",
          "2: dnl",
          "5: dnl Function to detect if libfwevt is available",
          "6: dnl ac_libfwevt_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments",
          "",
          "[Removed Lines]",
          "3: dnl Version: 20170908",
          "",
          "[Added Lines]",
          "3: dnl Version: 20180404",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "478:           [ac_cv_libfwevt_dummy=yes],",
          "479:           [ac_cv_libfwevt=no])",
          "490:         dnl XML tag functions",
          "492:         AC_CHECK_LIB(",
          "493:           fwevt,",
          "494:           libfwevt_xml_tag_get_utf8_name_size,",
          "",
          "[Removed Lines]",
          "481:         AS_IF(",
          "482:           [test \"x$ac_cv_enable_debug_output\" != xno ],",
          "483:           [AC_CHECK_LIB(",
          "484:             fwevt,",
          "485:             libfwevt_xml_document_debug_print,",
          "486:             [ac_cv_libfwevt_dummy=yes],",
          "487:             [ac_cv_libfwevt=no])",
          "488:         ])",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "583:       ])",
          "584:     ])",
          "586:   AS_IF(",
          "587:     [test \"x$ac_cv_libfwevt\" = xyes],",
          "588:     [AC_DEFINE(",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "560:   dnl Check for debug functions",
          "561:   AS_IF(",
          "562:     [test \"x$ac_cv_libfwevt\" = xyes && test \"x$ac_cv_enable_debug_output\" != xno],",
          "563:     [AC_CHECK_LIB(",
          "564:       fwevt,",
          "565:       libfwevt_xml_document_debug_print,",
          "566:       [ac_cv_libfwevt_dummy=yes],",
          "567:       [ac_cv_libfwevt=no])",
          "568:     ])",
          "",
          "---------------"
        ],
        "setup.py||setup.py": [
          "File: setup.py -> setup.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: #!/usr/bin/env python",
          "2: #",
          "3: # Script to build and install Python-bindings.",
          "6: from __future__ import print_function",
          "7: import glob",
          "8: import platform",
          "9: import os",
          "10: import shlex",
          "11: import shutil",
          "12: import subprocess",
          "13: import sys",
          "15: from distutils import sysconfig",
          "16: from distutils.ccompiler import new_compiler",
          "17: from distutils.command.build_ext import build_ext",
          "",
          "[Removed Lines]",
          "4: # Version: 20180317",
          "",
          "[Added Lines]",
          "4: # Version: 20180408",
          "8: import gzip",
          "15: import tarfile",
          "17: from distutils import dist",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "160:     sdist_package_file = os.path.join(\"dist\", sdist_package_file)",
          "161:     os.rename(source_package_file, sdist_package_file)",
          "163:     # Inform distutils what files were created.",
          "164:     dist_files = getattr(self.distribution, \"dist_files\", [])",
          "165:     dist_files.append((\"sdist\", \"\", sdist_package_file))",
          "171: class ProjectInformation(object):",
          "172:   \"\"\"Project information.\"\"\"",
          "",
          "[Removed Lines]",
          "167:     # Make sure PKG-INFO is generated.",
          "168:     sdist.run(self)",
          "",
          "[Added Lines]",
          "166:     # Create and add the PKG-INFO file to the source package.",
          "167:     with gzip.open(sdist_package_file, 'rb') as input_file:",
          "168:       with open(sdist_package_file[:-3], 'wb') as output_file:",
          "169:         shutil.copyfileobj(input_file, output_file)",
          "170:     os.remove(sdist_package_file)",
          "172:     self.distribution.metadata.write_pkg_info(\".\")",
          "173:     pkg_info_path = \"{0:s}-{1:s}/PKG-INFO\".format(",
          "174:         source_package_prefix, source_package_suffix[:-7])",
          "175:     with tarfile.open(sdist_package_file[:-3], \"a:\") as tar_file:",
          "176:       tar_file.add(\"PKG-INFO\", arcname=pkg_info_path)",
          "177:     os.remove(\"PKG-INFO\")",
          "179:     with open(sdist_package_file[:-3], 'rb') as input_file:",
          "180:       with gzip.open(sdist_package_file, 'wb') as output_file:",
          "181:         shutil.copyfileobj(input_file, output_file)",
          "182:     os.remove(sdist_package_file[:-3])",
          "",
          "---------------"
        ]
      }
    }
  ]
}