{
  "cve_id": "CVE-2023-48217",
  "cve_desc": "Statamic is a flat-first, Laravel + Git powered CMS designed for building websites. In affected versions certain additional PHP files crafted to look like images may be uploaded regardless of mime type validation rules. This affects front-end forms using the \"Forms\" feature, and asset upload fields in the control panel. Malicious users could leverage this vulnerability to upload and execute code. This issue has been patched in versions 3.4.14 and 4.34.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.",
  "repo": "statamic/cms",
  "patch_hash": "4c6fe041e2203a8033e5949ce4a5d9d6c0ad2411",
  "patch_info": {
    "commit_hash": "4c6fe041e2203a8033e5949ce4a5d9d6c0ad2411",
    "repo": "statamic/cms",
    "commit_url": "https://github.com/statamic/cms/commit/4c6fe041e2203a8033e5949ce4a5d9d6c0ad2411",
    "files": [
      "src/Http/Controllers/CP/Assets/AssetsController.php",
      "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php",
      "src/Http/Controllers/FormController.php"
    ],
    "message": "[4.x] More php file validation (#8991)",
    "before_after_code_files": [
      "src/Http/Controllers/CP/Assets/AssetsController.php||src/Http/Controllers/CP/Assets/AssetsController.php",
      "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php||src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php",
      "src/Http/Controllers/FormController.php||src/Http/Controllers/FormController.php"
    ]
  },
  "patch_diff": {
    "src/Http/Controllers/CP/Assets/AssetsController.php||src/Http/Controllers/CP/Assets/AssetsController.php": [
      "File: src/Http/Controllers/CP/Assets/AssetsController.php -> src/Http/Controllers/CP/Assets/AssetsController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "69:             'container' => 'required',",
      "70:             'folder' => 'required',",
      "71:             'file' => ['file', function ($attribute, $value, $fail) {",
      "73:                     $fail(__('validation.uploaded'));",
      "74:                 }",
      "75:             }],",
      "",
      "[Removed Lines]",
      "72:                 if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'phtml'])) {",
      "",
      "[Added Lines]",
      "72:                 if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'php7', 'php8', 'phtml', 'phar'])) {",
      "",
      "---------------"
    ],
    "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php||src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php": [
      "File: src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php -> src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "12:     {",
      "13:         $request->validate([",
      "14:             'file' => ['file', function ($attribute, $value, $fail) {",
      "16:                     $fail(__('validation.uploaded'));",
      "17:                 }",
      "18:             }],",
      "",
      "[Removed Lines]",
      "15:                 if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'phtml'])) {",
      "",
      "[Added Lines]",
      "15:                 if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'php7', 'php8', 'phtml', 'phar'])) {",
      "",
      "---------------"
    ],
    "src/Http/Controllers/FormController.php||src/Http/Controllers/FormController.php": [
      "File: src/Http/Controllers/FormController.php -> src/Http/Controllers/FormController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "178:             })",
      "179:             ->mapWithKeys(function ($field) {",
      "180:                 return [$field->handle().'.*' => ['file', function ($attribute, $value, $fail) {",
      "182:                         $fail(__('validation.uploaded'));",
      "183:                     }",
      "184:                 }]];",
      "",
      "[Removed Lines]",
      "181:                     if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'phtml'])) {",
      "",
      "[Added Lines]",
      "181:                     if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'php7', 'php8', 'phtml', 'phar'])) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "97abe8bba16ee380e4bce1b79e74883abfb5976f",
      "candidate_info": {
        "commit_hash": "97abe8bba16ee380e4bce1b79e74883abfb5976f",
        "repo": "statamic/cms",
        "commit_url": "https://github.com/statamic/cms/commit/97abe8bba16ee380e4bce1b79e74883abfb5976f",
        "files": [
          "config/assets.php",
          "src/Http/Controllers/CP/Assets/AssetsController.php",
          "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php",
          "src/Http/Controllers/FormController.php",
          "src/Validation/AllowedFile.php"
        ],
        "message": "[4.x] Only allow uploading certain file extensions (#9037)",
        "before_after_code_files": [
          "config/assets.php||config/assets.php",
          "src/Http/Controllers/CP/Assets/AssetsController.php||src/Http/Controllers/CP/Assets/AssetsController.php",
          "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php||src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php",
          "src/Http/Controllers/FormController.php||src/Http/Controllers/FormController.php",
          "src/Validation/AllowedFile.php||src/Validation/AllowedFile.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Http/Controllers/CP/Assets/AssetsController.php||src/Http/Controllers/CP/Assets/AssetsController.php",
            "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php||src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php",
            "src/Http/Controllers/FormController.php||src/Http/Controllers/FormController.php"
          ],
          "candidate": [
            "src/Http/Controllers/CP/Assets/AssetsController.php||src/Http/Controllers/CP/Assets/AssetsController.php",
            "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php||src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php",
            "src/Http/Controllers/FormController.php||src/Http/Controllers/FormController.php"
          ]
        }
      },
      "candidate_diff": {
        "config/assets.php||config/assets.php": [
          "File: config/assets.php -> config/assets.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "199:     'lowercase' => true,",
          "201: ];",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "202:     |--------------------------------------------------------------------------",
          "203:     | Additional Uploadable Extensions",
          "204:     |--------------------------------------------------------------------------",
          "205:     |",
          "206:     | Statamic will only allow uploads of certain approved file extensions.",
          "207:     | If you need to allow more file extensions, you may add them here.",
          "208:     |",
          "211:     'additional_uploadable_extensions' => [],",
          "",
          "---------------"
        ],
        "src/Http/Controllers/CP/Assets/AssetsController.php||src/Http/Controllers/CP/Assets/AssetsController.php": [
          "File: src/Http/Controllers/CP/Assets/AssetsController.php -> src/Http/Controllers/CP/Assets/AssetsController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "11: use Statamic\\Facades\\User;",
          "12: use Statamic\\Http\\Controllers\\CP\\CpController;",
          "13: use Statamic\\Http\\Resources\\CP\\Assets\\Asset as AssetResource;",
          "15: class AssetsController extends CpController",
          "16: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "14: use Statamic\\Validation\\AllowedFile;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:         $request->validate([",
          "69:             'container' => 'required',",
          "70:             'folder' => 'required',",
          "76:         ]);",
          "78:         $container = AssetContainer::find($request->container);",
          "",
          "[Removed Lines]",
          "71:             'file' => ['file', function ($attribute, $value, $fail) {",
          "72:                 if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'php7', 'php8', 'phtml', 'phar'])) {",
          "73:                     $fail(__('validation.uploaded'));",
          "74:                 }",
          "75:             }],",
          "",
          "[Added Lines]",
          "72:             'file' => ['file', new AllowedFile],",
          "",
          "---------------"
        ],
        "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php||src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php": [
          "File: src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php -> src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: use Illuminate\\Http\\Request;",
          "6: use Statamic\\Assets\\FileUploader as Uploader;",
          "7: use Statamic\\Http\\Controllers\\CP\\CpController;",
          "9: class FilesFieldtypeController extends CpController",
          "10: {",
          "11:     public function upload(Request $request)",
          "12:     {",
          "13:         $request->validate([",
          "19:         ]);",
          "21:         $file = $request->file('file');",
          "",
          "[Removed Lines]",
          "14:             'file' => ['file', function ($attribute, $value, $fail) {",
          "15:                 if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'php7', 'php8', 'phtml', 'phar'])) {",
          "16:                     $fail(__('validation.uploaded'));",
          "17:                 }",
          "18:             }],",
          "",
          "[Added Lines]",
          "8: use Statamic\\Validation\\AllowedFile;",
          "15:             'file' => ['file', new AllowedFile],",
          "",
          "---------------"
        ],
        "src/Http/Controllers/FormController.php||src/Http/Controllers/FormController.php": [
          "File: src/Http/Controllers/FormController.php -> src/Http/Controllers/FormController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: use Statamic\\Forms\\SendEmails;",
          "20: use Statamic\\Support\\Arr;",
          "21: use Statamic\\Support\\Str;",
          "23: class FormController extends Controller",
          "24: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: use Statamic\\Validation\\AllowedFile;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "177:                 return $field->fieldtype()->handle() === 'assets';",
          "178:             })",
          "179:             ->mapWithKeys(function ($field) {",
          "185:             })",
          "186:             ->all();",
          "",
          "[Removed Lines]",
          "180:                 return [$field->handle().'.*' => ['file', function ($attribute, $value, $fail) {",
          "181:                     if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'php7', 'php8', 'phtml', 'phar'])) {",
          "182:                         $fail(__('validation.uploaded'));",
          "183:                     }",
          "184:                 }]];",
          "",
          "[Added Lines]",
          "181:                 return [$field->handle().'.*' => ['file', new AllowedFile]];",
          "",
          "---------------"
        ],
        "src/Validation/AllowedFile.php||src/Validation/AllowedFile.php": [
          "File: src/Validation/AllowedFile.php -> src/Validation/AllowedFile.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: namespace Statamic\\Validation;",
          "5: use Illuminate\\Contracts\\Validation\\InvokableRule;",
          "6: use Illuminate\\Http\\UploadedFile;",
          "8: class AllowedFile implements InvokableRule",
          "9: {",
          "10:     private array $extensions = [",
          "11:         '7z',",
          "12:         'aiff',",
          "13:         'asc',",
          "14:         'asf',",
          "15:         'avi',",
          "16:         'avif',",
          "17:         'bmp',",
          "18:         'cap',",
          "19:         'cin',",
          "20:         'csv',",
          "21:         'dfxp',",
          "22:         'doc',",
          "23:         'docx',",
          "24:         'dotm',",
          "25:         'dotx',",
          "26:         'fla',",
          "27:         'flv',",
          "28:         'gif',",
          "29:         'gz',",
          "30:         'gzip',",
          "31:         'heic',",
          "32:         'heif',",
          "33:         'hevc',",
          "34:         'itt',",
          "35:         'jp2',",
          "36:         'jpeg',",
          "37:         'jpg',",
          "38:         'jpx',",
          "39:         'js',",
          "40:         'json',",
          "41:         'lrc',",
          "42:         'm2t',",
          "43:         'm4a',",
          "44:         'm4v',",
          "45:         'mcc',",
          "46:         'md',",
          "47:         'mid',",
          "48:         'mov',",
          "49:         'mp3',",
          "50:         'mp4',",
          "51:         'mpc',",
          "52:         'mpeg',",
          "53:         'mpg',",
          "54:         'mpsub',",
          "55:         'ods',",
          "56:         'odt',",
          "57:         'ogg',",
          "58:         'ogv',",
          "59:         'pdf',",
          "60:         'png',",
          "61:         'potx',",
          "62:         'pps',",
          "63:         'ppsm',",
          "64:         'ppsx',",
          "65:         'ppt',",
          "66:         'pptm',",
          "67:         'pptx',",
          "68:         'ppz',",
          "69:         'pxd',",
          "70:         'qt',",
          "71:         'ram',",
          "72:         'rar',",
          "73:         'rm',",
          "74:         'rmi',",
          "75:         'rmvb',",
          "76:         'rt',",
          "77:         'rtf',",
          "78:         'sami',",
          "79:         'sbv',",
          "80:         'scc',",
          "81:         'sdc',",
          "82:         'sitd',",
          "83:         'smi',",
          "84:         'srt',",
          "85:         'stl',",
          "86:         'sub',",
          "87:         'svg',",
          "88:         'swf',",
          "89:         'sxc',",
          "90:         'sxw',",
          "91:         'tar',",
          "92:         'tds',",
          "93:         'tgz',",
          "94:         'tif',",
          "95:         'tiff',",
          "96:         'ttml',",
          "97:         'txt',",
          "98:         'vob',",
          "99:         'vsd',",
          "100:         'vtt',",
          "101:         'wav',",
          "102:         'webm',",
          "103:         'webp',",
          "104:         'wma',",
          "105:         'wmv',",
          "106:         'xls',",
          "107:         'xlsx',",
          "108:         'zip',",
          "109:     ];",
          "111:     public function __invoke($attribute, $value, $fail): void",
          "112:     {",
          "113:         if (! $this->isAllowed($value)) {",
          "114:             $fail(__('validation.uploaded'));",
          "115:         }",
          "116:     }",
          "118:     private function isAllowed(UploadedFile $file): bool",
          "119:     {",
          "120:         $extensions = array_merge($this->extensions, config('statamic.assets.additional_uploadable_extensions', []));",
          "122:         return in_array(trim(strtolower($file->getClientOriginalExtension())), $extensions);",
          "123:     }",
          "124: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8ebbe61fdfe2a4e8b94a496d5d318cc72741078e",
      "candidate_info": {
        "commit_hash": "8ebbe61fdfe2a4e8b94a496d5d318cc72741078e",
        "repo": "statamic/cms",
        "commit_url": "https://github.com/statamic/cms/commit/8ebbe61fdfe2a4e8b94a496d5d318cc72741078e",
        "files": [
          "resources/js/components/assets/Uploader.vue",
          "resources/js/components/fieldtypes/FilesFieldtype.vue",
          "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php",
          "src/Rules/AllowedFile.php"
        ],
        "message": "[5.x] Add `allowed_extensions` option to Files fieldtype (#10998)",
        "before_after_code_files": [
          "resources/js/components/assets/Uploader.vue||resources/js/components/assets/Uploader.vue",
          "resources/js/components/fieldtypes/FilesFieldtype.vue||resources/js/components/fieldtypes/FilesFieldtype.vue",
          "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php||src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php",
          "src/Rules/AllowedFile.php||src/Rules/AllowedFile.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php||src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php"
          ],
          "candidate": [
            "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php||src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php"
          ]
        }
      },
      "candidate_diff": {
        "resources/js/components/assets/Uploader.vue||resources/js/components/assets/Uploader.vue": [
          "File: resources/js/components/assets/Uploader.vue -> resources/js/components/assets/Uploader.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:         },",
          "33:         container: String,",
          "34:         path: String,",
          "36:     },",
          "",
          "[Removed Lines]",
          "35:         url: { type: String, default: () => cp_url('assets') }",
          "",
          "[Added Lines]",
          "35:         url: { type: String, default: () => cp_url('assets') },",
          "36:         extraData: {",
          "37:             type: Object,",
          "38:             default: () => ({})",
          "39:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:     },",
          "60:     mounted() {",
          "61:         this.$refs.nativeFileField.addEventListener('change', this.addNativeFileFieldSelections);",
          "62:     },",
          "",
          "[Removed Lines]",
          "47:     computed: {",
          "49:         extraData() {",
          "50:             return {",
          "51:                 container: this.container,",
          "52:                 folder: this.path,",
          "53:                 _token: Statamic.$config.get('csrfToken')",
          "54:             };",
          "55:         }",
          "57:     },",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "165:             form.append('file', file);",
          "169:             }",
          "171:             for (let key in data) {",
          "",
          "[Removed Lines]",
          "167:             for (let key in this.extraData) {",
          "168:                 form.append(key, this.extraData[key]);",
          "",
          "[Added Lines]",
          "158:             let parameters = {",
          "159:                 ...this.extraData,",
          "160:                 container: this.container,",
          "161:                 folder: this.path,",
          "162:                 _token: Statamic.$config.get('csrfToken')",
          "163:             }",
          "165:             for (let key in parameters) {",
          "166:                 form.append(key, parameters[key]);",
          "",
          "---------------"
        ],
        "resources/js/components/fieldtypes/FilesFieldtype.vue||resources/js/components/fieldtypes/FilesFieldtype.vue": [
          "File: resources/js/components/fieldtypes/FilesFieldtype.vue -> resources/js/components/fieldtypes/FilesFieldtype.vue",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:         <uploader",
          "6:             ref=\"uploader\"",
          "7:             :url=\"meta.uploadUrl\"",
          "8:             :container=\"config.container\"",
          "9:             @updated=\"uploadsUpdated\"",
          "10:             @upload-complete=\"uploadComplete\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8:             :extra-data=\"{ config: configParameter }\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "87:         }",
          "88:     },",
          "90:     methods: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:     computed: {",
          "92:         configParameter() {",
          "93:             return utf8btoa(JSON.stringify(this.config));",
          "94:         },",
          "95:     },",
          "",
          "---------------"
        ],
        "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php||src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php": [
          "File: src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php -> src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace Statamic\\Http\\Controllers\\CP\\Fieldtypes;",
          "5: use Illuminate\\Http\\Request;",
          "6: use Statamic\\Assets\\FileUploader as Uploader;",
          "7: use Statamic\\Http\\Controllers\\CP\\CpController;",
          "8: use Statamic\\Rules\\AllowedFile;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: use Facades\\Statamic\\Fields\\FieldtypeRepository as Fieldtype;",
          "8: use Statamic\\Fields\\Field;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11: {",
          "12:     public function upload(Request $request)",
          "13:     {",
          "14:         $request->validate([",
          "16:         ]);",
          "18:         $file = $request->file('file');",
          "",
          "[Removed Lines]",
          "15:             'file' => ['file', new AllowedFile],",
          "",
          "[Added Lines]",
          "16:         $fieldtype = $request->config ? $this->fieldtype($request) : null;",
          "19:             'file' => ['file', new AllowedFile($fieldtype?->config('allowed_extensions'))],",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "22:         return ['data' => ['id' => $path]];",
          "23:     }",
          "24: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:     protected function fieldtype($request)",
          "30:     {",
          "31:         $config = $this->getConfig($request);",
          "33:         return Fieldtype::find($config['type'])->setField(",
          "34:             new Field('file', $config)",
          "35:         );",
          "36:     }",
          "38:     private function getConfig($request)",
          "39:     {",
          "41:         $json = base64_decode($request->config);",
          "45:         $utf8 = mb_convert_encoding($json, 'UTF-8', mb_list_encodings());",
          "50:         $json = empty($utf8) ? $json : $utf8;",
          "52:         return json_decode($json, true);",
          "53:     }",
          "",
          "---------------"
        ],
        "src/Rules/AllowedFile.php||src/Rules/AllowedFile.php": [
          "File: src/Rules/AllowedFile.php -> src/Rules/AllowedFile.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "109:         'zip',",
          "110:     ];",
          "112:     public function validate(string $attribute, mixed $value, Closure $fail): void",
          "113:     {",
          "114:         if (! $this->isAllowedExtension($value)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "112:     public function __construct(public ?array $allowedExtensions = null)",
          "113:     {",
          "114:     }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "119:     private function isAllowedExtension(UploadedFile $file): bool",
          "120:     {",
          "123:         return in_array(trim(strtolower($file->getClientOriginalExtension())), $extensions);",
          "124:     }",
          "",
          "[Removed Lines]",
          "121:         $extensions = array_merge(static::EXTENSIONS, config('statamic.assets.additional_uploadable_extensions', []));",
          "",
          "[Added Lines]",
          "125:         $extensions = $this->allowedExtensions ?? array_merge(static::EXTENSIONS, config('statamic.assets.additional_uploadable_extensions', []));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "da28afde818d605179fbb63b96eabafabad876b6",
      "candidate_info": {
        "commit_hash": "da28afde818d605179fbb63b96eabafabad876b6",
        "repo": "statamic/cms",
        "commit_url": "https://github.com/statamic/cms/commit/da28afde818d605179fbb63b96eabafabad876b6",
        "files": [
          "src/Http/Controllers/CP/Assets/AssetsController.php",
          "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php",
          "src/Http/Controllers/FormController.php"
        ],
        "message": "[3.4] More php file validation (#8992)",
        "before_after_code_files": [
          "src/Http/Controllers/CP/Assets/AssetsController.php||src/Http/Controllers/CP/Assets/AssetsController.php",
          "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php||src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php",
          "src/Http/Controllers/FormController.php||src/Http/Controllers/FormController.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/Http/Controllers/CP/Assets/AssetsController.php||src/Http/Controllers/CP/Assets/AssetsController.php",
            "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php||src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php",
            "src/Http/Controllers/FormController.php||src/Http/Controllers/FormController.php"
          ],
          "candidate": [
            "src/Http/Controllers/CP/Assets/AssetsController.php||src/Http/Controllers/CP/Assets/AssetsController.php",
            "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php||src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php",
            "src/Http/Controllers/FormController.php||src/Http/Controllers/FormController.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Http/Controllers/CP/Assets/AssetsController.php||src/Http/Controllers/CP/Assets/AssetsController.php": [
          "File: src/Http/Controllers/CP/Assets/AssetsController.php -> src/Http/Controllers/CP/Assets/AssetsController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:             'container' => 'required',",
          "70:             'folder' => 'required',",
          "71:             'file' => ['file', function ($attribute, $value, $fail) {",
          "73:                     $fail(__('validation.uploaded'));",
          "74:                 }",
          "75:             }],",
          "",
          "[Removed Lines]",
          "72:                 if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'phtml'])) {",
          "",
          "[Added Lines]",
          "72:                 if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'php7', 'php8', 'phtml', 'phar'])) {",
          "",
          "---------------"
        ],
        "src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php||src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php": [
          "File: src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php -> src/Http/Controllers/CP/Fieldtypes/FilesFieldtypeController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:     {",
          "13:         $request->validate([",
          "14:             'file' => ['file', function ($attribute, $value, $fail) {",
          "16:                     $fail(__('validation.uploaded'));",
          "17:                 }",
          "18:             }],",
          "",
          "[Removed Lines]",
          "15:                 if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'phtml'])) {",
          "",
          "[Added Lines]",
          "15:                 if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'php7', 'php8', 'phtml', 'phar'])) {",
          "",
          "---------------"
        ],
        "src/Http/Controllers/FormController.php||src/Http/Controllers/FormController.php": [
          "File: src/Http/Controllers/FormController.php -> src/Http/Controllers/FormController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:             })",
          "166:             ->mapWithKeys(function ($field) {",
          "167:                 return [$field->handle().'.*' => ['file', function ($attribute, $value, $fail) {",
          "169:                         $fail(__('validation.uploaded'));",
          "170:                     }",
          "171:                 }]];",
          "",
          "[Removed Lines]",
          "168:                     if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'phtml'])) {",
          "",
          "[Added Lines]",
          "168:                     if (in_array(trim(strtolower($value->getClientOriginalExtension())), ['php', 'php3', 'php4', 'php5', 'php7', 'php8', 'phtml', 'phar'])) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}