{
  "cve_id": "CVE-2023-47109",
  "cve_desc": "PrestaShop blockreassurance adds an information block aimed at offering helpful information to reassure customers that the store is trustworthy. When adding a block in blockreassurance module, a BO user can modify the http request and give the path of any file in the project instead of an image. When deleting the block from the BO, the file will be deleted. It is possible to make the website completely unavailable by removing index.php for example. This issue has been patched in version 5.1.4.\n",
  "repo": "PrestaShop/blockreassurance",
  "patch_hash": "eec00da564db4c1804b0a0d1e3d9f7ec4e27d823",
  "patch_info": {
    "commit_hash": "eec00da564db4c1804b0a0d1e3d9f7ec4e27d823",
    "repo": "PrestaShop/blockreassurance",
    "commit_url": "https://github.com/PrestaShop/blockreassurance/commit/eec00da564db4c1804b0a0d1e3d9f7ec4e27d823",
    "files": [
      "blockreassurance.php",
      "controllers/admin/AdminBlockListingController.php"
    ],
    "message": "Merge pull request #619 from matthieu-rolland/add-security-fixes",
    "before_after_code_files": [
      "blockreassurance.php||blockreassurance.php",
      "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php"
    ]
  },
  "patch_diff": {
    "blockreassurance.php||blockreassurance.php": [
      "File: blockreassurance.php -> blockreassurance.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "41:     const POSITION_BELOW_HEADER = 1;",
      "42:     const POSITION_ABOVE_HEADER = 2;",
      "45:     public $name;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "44:     const PSR_HOOK_HEADER = 'PSR_HOOK_HEADER';",
      "45:     const PSR_HOOK_FOOTER = 'PSR_HOOK_FOOTER';",
      "46:     const PSR_HOOK_PRODUCT = 'PSR_HOOK_PRODUCT';",
      "47:     const PSR_HOOK_CHECKOUT = 'PSR_HOOK_CHECKOUT';",
      "",
      "---------------"
    ],
    "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php": [
      "File: controllers/admin/AdminBlockListingController.php -> controllers/admin/AdminBlockListingController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "70:             $result = true;",
      "72:             if (!empty($blockPSR['custom_icon'])) {",
      "74:                 if (file_exists($filePath)) {",
      "75:                     $result = unlink($filePath);",
      "76:                 }",
      "",
      "[Removed Lines]",
      "73:                 $filePath = _PS_ROOT_DIR_ . $blockPSR['custom_icon'];",
      "",
      "[Added Lines]",
      "73:                 $filePath = _PS_ROOT_DIR_ . $this->module->img_path_perso . '/' . basename($blockPSR['custom_icon']);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "100:         $value = Tools::getValue('value');",
      "101:         $result = false;",
      "109:             $result = Configuration::updateValue($hook, $value);",
      "110:         }",
      "",
      "[Removed Lines]",
      "103:         if (!empty($hook) && in_array($value, [",
      "104:                 blockreassurance::POSITION_NONE,",
      "105:                 blockreassurance::POSITION_BELOW_HEADER,",
      "106:                 blockreassurance::POSITION_ABOVE_HEADER,",
      "107:             ])",
      "108:         ) {",
      "",
      "[Added Lines]",
      "103:         if ($this->isAuthorizedHookConfigurationKey($hook) && $this->isAuthorizedPositionValue($value)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "148:         $type_link = (int) Tools::getValue('typelink');",
      "149:         $id_cms = Tools::getValue('id_cms');",
      "150:         $psr_languages = (array) json_decode(Tools::getValue('lang_values'));",
      "152:         $blockPsr = new ReassuranceActivity($id_block);",
      "153:         if (!$id_block) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "146:         $authExtensions = ['gif', 'jpg', 'jpeg', 'jpe', 'png', 'svg'];",
      "147:         $authMimeType = ['image/gif', 'image/jpg', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png', 'image/svg', 'image/svg+xml'];",
      "149:         if (!empty($picto) && !in_array(pathinfo($picto, PATHINFO_EXTENSION), $authExtensions)) {",
      "150:             $errors[] = Context::getContext()->getTranslator()->trans('Image format not recognized, allowed formats are: .gif, .jpg, .png', [], 'Admin.Notifications.Error');",
      "152:             return $this->ajaxRenderJson(empty($errors) ? 'success' : 'error');",
      "153:         }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "173:             $filename = $customImage['name'];",
      "178:             if (version_compare(_PS_VERSION_, '1.7.7.0', '>=')) {",
      "180:                 $validUpload = ImageManager::validateUpload(",
      "",
      "[Removed Lines]",
      "176:             $authExtensions = ['gif', 'jpg', 'jpeg', 'jpe', 'png', 'svg'];",
      "177:             $authMimeType = ['image/gif', 'image/jpg', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png', 'image/svg', 'image/svg+xml'];",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "250:         $this->ajaxRenderJson($result ? 'success' : 'error');",
      "251:     }",
      "252: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "259:     private function isAuthorizedHookConfigurationKey($hook)",
      "260:     {",
      "261:         return",
      "262:             !empty($hook) &&",
      "263:             in_array($hook, [",
      "264:                 blockreassurance::PSR_HOOK_HEADER,",
      "265:                 blockreassurance::PSR_HOOK_FOOTER,",
      "266:                 blockreassurance::PSR_HOOK_PRODUCT,",
      "267:                 blockreassurance::PSR_HOOK_CHECKOUT,",
      "268:             ], true)",
      "269:         ;",
      "270:     }",
      "277:     private function isAuthorizedPositionValue($value)",
      "278:     {",
      "279:         return in_array((int) $value, [",
      "280:             blockreassurance::POSITION_NONE,",
      "281:             blockreassurance::POSITION_BELOW_HEADER,",
      "282:             blockreassurance::POSITION_ABOVE_HEADER,",
      "283:         ], true);",
      "284:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6327811e6782c837440749aa6b55941d68e1c0bd",
      "candidate_info": {
        "commit_hash": "6327811e6782c837440749aa6b55941d68e1c0bd",
        "repo": "PrestaShop/blockreassurance",
        "commit_url": "https://github.com/PrestaShop/blockreassurance/commit/6327811e6782c837440749aa6b55941d68e1c0bd",
        "files": [
          "controllers/admin/AdminBlockListingController.php"
        ],
        "message": "remove images only from dedicated folder and forbid non image extensions in image path",
        "before_after_code_files": [
          "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/PrestaShop/blockreassurance/pull/619"
        ],
        "olp_code_files": {
          "patch": [
            "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php"
          ],
          "candidate": [
            "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php"
          ]
        }
      },
      "candidate_diff": {
        "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php": [
          "File: controllers/admin/AdminBlockListingController.php -> controllers/admin/AdminBlockListingController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:             $result = true;",
          "72:             if (!empty($blockPSR['custom_icon'])) {",
          "74:                 if (file_exists($filePath)) {",
          "75:                     $result = unlink($filePath);",
          "76:                 }",
          "",
          "[Removed Lines]",
          "73:                 $filePath = _PS_ROOT_DIR_ . $blockPSR['custom_icon'];",
          "",
          "[Added Lines]",
          "73:                 $filePath = _PS_ROOT_DIR_ . $this->module->img_path_perso . '/' . basename($blockPSR['custom_icon']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "143:         $type_link = (int) Tools::getValue('typelink');",
          "144:         $id_cms = Tools::getValue('id_cms');",
          "145:         $psr_languages = (array) json_decode(Tools::getValue('lang_values'));",
          "147:         $blockPsr = new ReassuranceActivity($id_block);",
          "148:         if (!$id_block) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "146:         $authExtensions = ['gif', 'jpg', 'jpeg', 'jpe', 'png', 'svg'];",
          "147:         $authMimeType = ['image/gif', 'image/jpg', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png', 'image/svg', 'image/svg+xml'];",
          "149:         if (!empty($picto) && !in_array(pathinfo($picto, PATHINFO_EXTENSION), $authExtensions)) {",
          "150:             $errors[] = Context::getContext()->getTranslator()->trans('Image format not recognized, allowed formats are: .gif, .jpg, .png', [], 'Admin.Notifications.Error');",
          "152:             return $this->ajaxRenderJson(empty($errors) ? 'success' : 'error');",
          "153:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "168:             $filename = $customImage['name'];",
          "173:             if (version_compare(_PS_VERSION_, '1.7.7.0', '>=')) {",
          "175:                 $validUpload = ImageManager::validateUpload(",
          "",
          "[Removed Lines]",
          "171:             $authExtensions = ['gif', 'jpg', 'jpeg', 'jpe', 'png', 'svg'];",
          "172:             $authMimeType = ['image/gif', 'image/jpg', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png', 'image/svg', 'image/svg+xml'];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "246:     }",
          "252:     private function isAuthorizedHookConfigurationKey($hook)",
          "253:     {",
          "255:             !empty($hook) &&",
          "256:             in_array($hook, [",
          "257:                 blockreassurance::PSR_HOOK_HEADER,",
          "",
          "[Removed Lines]",
          "254:         return (",
          "",
          "[Added Lines]",
          "261:         return",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "259:                 blockreassurance::PSR_HOOK_PRODUCT,",
          "260:                 blockreassurance::PSR_HOOK_CHECKOUT,",
          "261:             ], true)",
          "263:     }",
          "269:     private function isAuthorizedPositionValue($value)",
          "",
          "[Removed Lines]",
          "262:         );",
          "",
          "[Added Lines]",
          "269:         ;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0a74bf1ebb907eef39e235a3a6dca0c28ed3ad23",
      "candidate_info": {
        "commit_hash": "0a74bf1ebb907eef39e235a3a6dca0c28ed3ad23",
        "repo": "PrestaShop/blockreassurance",
        "commit_url": "https://github.com/PrestaShop/blockreassurance/commit/0a74bf1ebb907eef39e235a3a6dca0c28ed3ad23",
        "files": [
          "blockreassurance.php",
          "controllers/admin/AdminBlockListingController.php"
        ],
        "message": "check configuration keys and values before applying update",
        "before_after_code_files": [
          "blockreassurance.php||blockreassurance.php",
          "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/PrestaShop/blockreassurance/pull/619"
        ],
        "olp_code_files": {
          "patch": [
            "blockreassurance.php||blockreassurance.php",
            "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php"
          ],
          "candidate": [
            "blockreassurance.php||blockreassurance.php",
            "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php"
          ]
        }
      },
      "candidate_diff": {
        "blockreassurance.php||blockreassurance.php": [
          "File: blockreassurance.php -> blockreassurance.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:     const POSITION_BELOW_HEADER = 1;",
          "42:     const POSITION_ABOVE_HEADER = 2;",
          "45:     public $name;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:     const PSR_HOOK_HEADER = 'PSR_HOOK_HEADER';",
          "45:     const PSR_HOOK_FOOTER = 'PSR_HOOK_FOOTER';",
          "46:     const PSR_HOOK_PRODUCT = 'PSR_HOOK_PRODUCT';",
          "47:     const PSR_HOOK_CHECKOUT = 'PSR_HOOK_CHECKOUT';",
          "",
          "---------------"
        ],
        "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php": [
          "File: controllers/admin/AdminBlockListingController.php -> controllers/admin/AdminBlockListingController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:         $value = Tools::getValue('value');",
          "101:         $result = false;",
          "109:             $result = Configuration::updateValue($hook, $value);",
          "110:         }",
          "",
          "[Removed Lines]",
          "103:         if (!empty($hook) && in_array($value, [",
          "104:                 blockreassurance::POSITION_NONE,",
          "105:                 blockreassurance::POSITION_BELOW_HEADER,",
          "106:                 blockreassurance::POSITION_ABOVE_HEADER,",
          "107:             ])",
          "108:         ) {",
          "",
          "[Added Lines]",
          "103:         if ($this->isAuthorizedHookConfigurationKey($hook) && $this->isAuthorizedPositionValue($value)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "250:         $this->ajaxRenderJson($result ? 'success' : 'error');",
          "251:     }",
          "252: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "252:     private function isAuthorizedHookConfigurationKey($hook)",
          "253:     {",
          "254:         return (",
          "255:             !empty($hook) &&",
          "256:             in_array($hook, [",
          "257:                 blockreassurance::PSR_HOOK_HEADER,",
          "258:                 blockreassurance::PSR_HOOK_FOOTER,",
          "259:                 blockreassurance::PSR_HOOK_PRODUCT,",
          "260:                 blockreassurance::PSR_HOOK_CHECKOUT,",
          "261:             ], true)",
          "262:         );",
          "263:     }",
          "269:     private function isAuthorizedPositionValue($value)",
          "270:     {",
          "271:         return in_array((int) $value, [",
          "272:             blockreassurance::POSITION_NONE,",
          "273:             blockreassurance::POSITION_BELOW_HEADER,",
          "274:             blockreassurance::POSITION_ABOVE_HEADER,",
          "275:         ], true);",
          "276:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "21ad47519b018d237b70f5cf169dcf141b2e9db3",
      "candidate_info": {
        "commit_hash": "21ad47519b018d237b70f5cf169dcf141b2e9db3",
        "repo": "PrestaShop/blockreassurance",
        "commit_url": "https://github.com/PrestaShop/blockreassurance/commit/21ad47519b018d237b70f5cf169dcf141b2e9db3",
        "files": [
          "blockreassurance.php",
          "controllers/admin/AdminBlockListingController.php"
        ],
        "message": "check configuration keys and values before applying update",
        "before_after_code_files": [
          "blockreassurance.php||blockreassurance.php",
          "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "blockreassurance.php||blockreassurance.php",
            "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php"
          ],
          "candidate": [
            "blockreassurance.php||blockreassurance.php",
            "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php"
          ]
        }
      },
      "candidate_diff": {
        "blockreassurance.php||blockreassurance.php": [
          "File: blockreassurance.php -> blockreassurance.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "41:     const POSITION_BELOW_HEADER = 1;",
          "42:     const POSITION_ABOVE_HEADER = 2;",
          "45:     public $name;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "44:     const PSR_HOOK_HEADER = 'PSR_HOOK_HEADER';",
          "45:     const PSR_HOOK_FOOTER = 'PSR_HOOK_FOOTER';",
          "46:     const PSR_HOOK_PRODUCT = 'PSR_HOOK_PRODUCT';",
          "47:     const PSR_HOOK_CHECKOUT = 'PSR_HOOK_CHECKOUT';",
          "",
          "---------------"
        ],
        "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php": [
          "File: controllers/admin/AdminBlockListingController.php -> controllers/admin/AdminBlockListingController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:         $value = Tools::getValue('value');",
          "101:         $result = false;",
          "109:             $result = Configuration::updateValue($hook, $value);",
          "110:         }",
          "",
          "[Removed Lines]",
          "103:         if (!empty($hook) && in_array($value, [",
          "104:                 blockreassurance::POSITION_NONE,",
          "105:                 blockreassurance::POSITION_BELOW_HEADER,",
          "106:                 blockreassurance::POSITION_ABOVE_HEADER,",
          "107:             ])",
          "108:         ) {",
          "",
          "[Added Lines]",
          "103:         if ($this->isAuthorizedHookConfigurationKey($hook) && $this->isAuthorizedPositionValue($value)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "256:         $this->ajaxRenderJson($result ? 'success' : 'error');",
          "257:     }",
          "258: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "259:     private function isAuthorizedHookConfigurationKey($hook)",
          "260:     {",
          "261:         return",
          "262:             !empty($hook) &&",
          "263:             in_array($hook, [",
          "264:                 blockreassurance::PSR_HOOK_HEADER,",
          "265:                 blockreassurance::PSR_HOOK_FOOTER,",
          "266:                 blockreassurance::PSR_HOOK_PRODUCT,",
          "267:                 blockreassurance::PSR_HOOK_CHECKOUT,",
          "268:             ], true)",
          "269:         ;",
          "270:     }",
          "277:     private function isAuthorizedPositionValue($value)",
          "278:     {",
          "279:         return in_array((int) $value, [",
          "280:             blockreassurance::POSITION_NONE,",
          "281:             blockreassurance::POSITION_BELOW_HEADER,",
          "282:             blockreassurance::POSITION_ABOVE_HEADER,",
          "283:         ], true);",
          "284:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c593281c1ebb144e63ad3a7f822043ab19542442",
      "candidate_info": {
        "commit_hash": "c593281c1ebb144e63ad3a7f822043ab19542442",
        "repo": "PrestaShop/blockreassurance",
        "commit_url": "https://github.com/PrestaShop/blockreassurance/commit/c593281c1ebb144e63ad3a7f822043ab19542442",
        "files": [
          "controllers/admin/AdminBlockListingController.php"
        ],
        "message": "remove images only from dedicated folder and forbid non image extensions in image path",
        "before_after_code_files": [
          "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php"
          ],
          "candidate": [
            "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php"
          ]
        }
      },
      "candidate_diff": {
        "controllers/admin/AdminBlockListingController.php||controllers/admin/AdminBlockListingController.php": [
          "File: controllers/admin/AdminBlockListingController.php -> controllers/admin/AdminBlockListingController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:             $result = true;",
          "72:             if (!empty($blockPSR['custom_icon'])) {",
          "74:                 if (file_exists($filePath)) {",
          "75:                     $result = unlink($filePath);",
          "76:                 }",
          "",
          "[Removed Lines]",
          "73:                 $filePath = _PS_ROOT_DIR_ . $blockPSR['custom_icon'];",
          "",
          "[Added Lines]",
          "73:                 $filePath = _PS_ROOT_DIR_ . $this->module->img_path_perso . '/' . basename($blockPSR['custom_icon']);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "148:         $type_link = (int) Tools::getValue('typelink');",
          "149:         $id_cms = Tools::getValue('id_cms');",
          "150:         $psr_languages = (array) json_decode(Tools::getValue('lang_values'));",
          "152:         $blockPsr = new ReassuranceActivity($id_block);",
          "153:         if (!$id_block) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "151:         $authExtensions = ['gif', 'jpg', 'jpeg', 'jpe', 'png', 'svg'];",
          "152:         $authMimeType = ['image/gif', 'image/jpg', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png', 'image/svg', 'image/svg+xml'];",
          "154:         if (!empty($picto) && !in_array(pathinfo($picto, PATHINFO_EXTENSION), $authExtensions)) {",
          "155:             $errors[] = Context::getContext()->getTranslator()->trans('Image format not recognized, allowed formats are: .gif, .jpg, .png', [], 'Admin.Notifications.Error');",
          "157:             return $this->ajaxRenderJson(empty($errors) ? 'success' : 'error');",
          "158:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "173:             $filename = $customImage['name'];",
          "178:             if (version_compare(_PS_VERSION_, '1.7.7.0', '>=')) {",
          "180:                 $validUpload = ImageManager::validateUpload(",
          "",
          "[Removed Lines]",
          "176:             $authExtensions = ['gif', 'jpg', 'jpeg', 'jpe', 'png', 'svg'];",
          "177:             $authMimeType = ['image/gif', 'image/jpg', 'image/jpeg', 'image/pjpeg', 'image/png', 'image/x-png', 'image/svg', 'image/svg+xml'];",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}