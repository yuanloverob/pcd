{
  "cve_id": "CVE-2022-27651",
  "cve_desc": "A flaw was found in buildah where containers were incorrectly started with non-empty default permissions. A bug was found in Moby (Docker Engine) where containers were incorrectly started with non-empty inheritable Linux process capabilities, enabling an attacker with access to programs with inheritable file capabilities to elevate those capabilities to the permitted set when execve(2) runs. This has the potential to impact confidentiality and integrity.",
  "repo": "containers/buildah",
  "patch_hash": "e7e55c988c05dd74005184ceb64f097a0cfe645b",
  "patch_info": {
    "commit_hash": "e7e55c988c05dd74005184ceb64f097a0cfe645b",
    "repo": "containers/buildah",
    "commit_url": "https://github.com/containers/buildah/commit/e7e55c988c05dd74005184ceb64f097a0cfe645b",
    "files": [
      "chroot/run.go",
      "run_linux.go"
    ],
    "message": "do not set the inheritable capabilities\n\nThe kernel never sets the inheritable capabilities for a process, they\nare only set by userspace.  Emulate the same behavior.\n\nCloses: CVE-2022-27651\n\nSigned-off-by: Giuseppe Scrivano <gscrivan@redhat.com>",
    "before_after_code_files": [
      "chroot/run.go||chroot/run.go",
      "run_linux.go||run_linux.go"
    ]
  },
  "patch_diff": {
    "chroot/run.go||chroot/run.go": [
      "File: chroot/run.go -> chroot/run.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "897:  capMap := map[capability.CapType][]string{",
      "898:   capability.BOUNDING:    spec.Process.Capabilities.Bounding,",
      "899:   capability.EFFECTIVE:   spec.Process.Capabilities.Effective,",
      "901:   capability.PERMITTED:   spec.Process.Capabilities.Permitted,",
      "902:   capability.AMBIENT:     spec.Process.Capabilities.Ambient,",
      "903:  }",
      "",
      "[Removed Lines]",
      "900:   capability.INHERITABLE: spec.Process.Capabilities.Inheritable,",
      "",
      "[Added Lines]",
      "900:   capability.INHERITABLE: []string{},",
      "",
      "---------------"
    ],
    "run_linux.go||run_linux.go": [
      "File: run_linux.go -> run_linux.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "1964:   if err := g.AddProcessCapabilityEffective(cap); err != nil {",
      "1965:    return errors.Wrapf(err, \"error adding %q to the effective capability set\", cap)",
      "1966:   }",
      "1970:   if err := g.AddProcessCapabilityPermitted(cap); err != nil {",
      "1971:    return errors.Wrapf(err, \"error adding %q to the permitted capability set\", cap)",
      "1972:   }",
      "",
      "[Removed Lines]",
      "1967:   if err := g.AddProcessCapabilityInheritable(cap); err != nil {",
      "1968:    return errors.Wrapf(err, \"error adding %q to the inheritable capability set\", cap)",
      "1969:   }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1985:   if err := g.DropProcessCapabilityEffective(cap); err != nil {",
      "1986:    return errors.Wrapf(err, \"error removing %q from the effective capability set\", cap)",
      "1987:   }",
      "1991:   if err := g.DropProcessCapabilityPermitted(cap); err != nil {",
      "1992:    return errors.Wrapf(err, \"error removing %q from the permitted capability set\", cap)",
      "1993:   }",
      "",
      "[Removed Lines]",
      "1988:   if err := g.DropProcessCapabilityInheritable(cap); err != nil {",
      "1989:    return errors.Wrapf(err, \"error removing %q from the inheritable capability set\", cap)",
      "1990:   }",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "44062a0e8dd517caf6a4b2daaaed47b3f6d2ce4e",
      "candidate_info": {
        "commit_hash": "44062a0e8dd517caf6a4b2daaaed47b3f6d2ce4e",
        "repo": "containers/buildah",
        "commit_url": "https://github.com/containers/buildah/commit/44062a0e8dd517caf6a4b2daaaed47b3f6d2ce4e",
        "files": [
          "chroot/run.go",
          "run_linux.go"
        ],
        "message": "do not set the inheritable capabilities\n\nThe kernel never sets the inheritable capabilities for a process, they\nare only set by userspace.  Emulate the same behavior.\n\nCloses: CVE-2022-27651\n\nSigned-off-by: Giuseppe Scrivano <gscrivan@redhat.com>",
        "before_after_code_files": [
          "chroot/run.go||chroot/run.go",
          "run_linux.go||run_linux.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "chroot/run.go||chroot/run.go",
            "run_linux.go||run_linux.go"
          ],
          "candidate": [
            "chroot/run.go||chroot/run.go",
            "run_linux.go||run_linux.go"
          ]
        }
      },
      "candidate_diff": {
        "chroot/run.go||chroot/run.go": [
          "File: chroot/run.go -> chroot/run.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "894:  capMap := map[capability.CapType][]string{",
          "895:   capability.BOUNDING:    spec.Process.Capabilities.Bounding,",
          "896:   capability.EFFECTIVE:   spec.Process.Capabilities.Effective,",
          "898:   capability.PERMITTED:   spec.Process.Capabilities.Permitted,",
          "899:   capability.AMBIENT:     spec.Process.Capabilities.Ambient,",
          "900:  }",
          "",
          "[Removed Lines]",
          "897:   capability.INHERITABLE: spec.Process.Capabilities.Inheritable,",
          "",
          "[Added Lines]",
          "897:   capability.INHERITABLE: []string{},",
          "",
          "---------------"
        ],
        "run_linux.go||run_linux.go": [
          "File: run_linux.go -> run_linux.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1935:   if err := g.AddProcessCapabilityEffective(cap); err != nil {",
          "1936:    return errors.Wrapf(err, \"error adding %q to the effective capability set\", cap)",
          "1937:   }",
          "1941:   if err := g.AddProcessCapabilityPermitted(cap); err != nil {",
          "1942:    return errors.Wrapf(err, \"error adding %q to the permitted capability set\", cap)",
          "1943:   }",
          "",
          "[Removed Lines]",
          "1938:   if err := g.AddProcessCapabilityInheritable(cap); err != nil {",
          "1939:    return errors.Wrapf(err, \"error adding %q to the inheritable capability set\", cap)",
          "1940:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1956:   if err := g.DropProcessCapabilityEffective(cap); err != nil {",
          "1957:    return errors.Wrapf(err, \"error removing %q from the effective capability set\", cap)",
          "1958:   }",
          "1962:   if err := g.DropProcessCapabilityPermitted(cap); err != nil {",
          "1963:    return errors.Wrapf(err, \"error removing %q from the permitted capability set\", cap)",
          "1964:   }",
          "",
          "[Removed Lines]",
          "1959:   if err := g.DropProcessCapabilityInheritable(cap); err != nil {",
          "1960:    return errors.Wrapf(err, \"error removing %q from the inheritable capability set\", cap)",
          "1961:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "4aca8fd340ec22a2f6957a52dad6d212bf5c7faf",
      "candidate_info": {
        "commit_hash": "4aca8fd340ec22a2f6957a52dad6d212bf5c7faf",
        "repo": "containers/buildah",
        "commit_url": "https://github.com/containers/buildah/commit/4aca8fd340ec22a2f6957a52dad6d212bf5c7faf",
        "files": [
          "chroot/run.go",
          "run_linux.go"
        ],
        "message": "do not set the inheritable capabilities\n\nThe kernel never sets the inheritable capabilities for a process, they\nare only set by userspace.  Emulate the same behavior.\n\nCloses: CVE-2022-27651\n\nSigned-off-by: Giuseppe Scrivano <gscrivan@redhat.com>",
        "before_after_code_files": [
          "chroot/run.go||chroot/run.go",
          "run_linux.go||run_linux.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "chroot/run.go||chroot/run.go",
            "run_linux.go||run_linux.go"
          ],
          "candidate": [
            "chroot/run.go||chroot/run.go",
            "run_linux.go||run_linux.go"
          ]
        }
      },
      "candidate_diff": {
        "chroot/run.go||chroot/run.go": [
          "File: chroot/run.go -> chroot/run.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "899:  capMap := map[capability.CapType][]string{",
          "900:   capability.BOUNDING:    spec.Process.Capabilities.Bounding,",
          "901:   capability.EFFECTIVE:   spec.Process.Capabilities.Effective,",
          "903:   capability.PERMITTED:   spec.Process.Capabilities.Permitted,",
          "904:   capability.AMBIENT:     spec.Process.Capabilities.Ambient,",
          "905:  }",
          "",
          "[Removed Lines]",
          "902:   capability.INHERITABLE: spec.Process.Capabilities.Inheritable,",
          "",
          "[Added Lines]",
          "902:   capability.INHERITABLE: {},",
          "",
          "---------------"
        ],
        "run_linux.go||run_linux.go": [
          "File: run_linux.go -> run_linux.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1861:   if err := g.AddProcessCapabilityEffective(cap); err != nil {",
          "1862:    return errors.Wrapf(err, \"error adding %q to the effective capability set\", cap)",
          "1863:   }",
          "1867:   if err := g.AddProcessCapabilityPermitted(cap); err != nil {",
          "1868:    return errors.Wrapf(err, \"error adding %q to the permitted capability set\", cap)",
          "1869:   }",
          "",
          "[Removed Lines]",
          "1864:   if err := g.AddProcessCapabilityInheritable(cap); err != nil {",
          "1865:    return errors.Wrapf(err, \"error adding %q to the inheritable capability set\", cap)",
          "1866:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1882:   if err := g.DropProcessCapabilityEffective(cap); err != nil {",
          "1883:    return errors.Wrapf(err, \"error removing %q from the effective capability set\", cap)",
          "1884:   }",
          "1888:   if err := g.DropProcessCapabilityPermitted(cap); err != nil {",
          "1889:    return errors.Wrapf(err, \"error removing %q from the permitted capability set\", cap)",
          "1890:   }",
          "",
          "[Removed Lines]",
          "1885:   if err := g.DropProcessCapabilityInheritable(cap); err != nil {",
          "1886:    return errors.Wrapf(err, \"error removing %q from the inheritable capability set\", cap)",
          "1887:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a5cf9c9d9f1e1b9882833a8082110427be5615cd",
      "candidate_info": {
        "commit_hash": "a5cf9c9d9f1e1b9882833a8082110427be5615cd",
        "repo": "containers/buildah",
        "commit_url": "https://github.com/containers/buildah/commit/a5cf9c9d9f1e1b9882833a8082110427be5615cd",
        "files": [
          "chroot/run.go",
          "run_linux.go"
        ],
        "message": "do not set the inheritable capabilities\n\nThe kernel never sets the inheritable capabilities for a process, they\nare only set by userspace.  Emulate the same behavior.\n\nCloses: CVE-2022-27651\n\nSigned-off-by: Giuseppe Scrivano <gscrivan@redhat.com>",
        "before_after_code_files": [
          "chroot/run.go||chroot/run.go",
          "run_linux.go||run_linux.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "chroot/run.go||chroot/run.go",
            "run_linux.go||run_linux.go"
          ],
          "candidate": [
            "chroot/run.go||chroot/run.go",
            "run_linux.go||run_linux.go"
          ]
        }
      },
      "candidate_diff": {
        "chroot/run.go||chroot/run.go": [
          "File: chroot/run.go -> chroot/run.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "894:  capMap := map[capability.CapType][]string{",
          "895:   capability.BOUNDING:    spec.Process.Capabilities.Bounding,",
          "896:   capability.EFFECTIVE:   spec.Process.Capabilities.Effective,",
          "898:   capability.PERMITTED:   spec.Process.Capabilities.Permitted,",
          "899:   capability.AMBIENT:     spec.Process.Capabilities.Ambient,",
          "900:  }",
          "",
          "[Removed Lines]",
          "897:   capability.INHERITABLE: spec.Process.Capabilities.Inheritable,",
          "",
          "[Added Lines]",
          "897:   capability.INHERITABLE: {},",
          "",
          "---------------"
        ],
        "run_linux.go||run_linux.go": [
          "File: run_linux.go -> run_linux.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1877:   if err := g.AddProcessCapabilityEffective(cap); err != nil {",
          "1878:    return errors.Wrapf(err, \"error adding %q to the effective capability set\", cap)",
          "1879:   }",
          "1883:   if err := g.AddProcessCapabilityPermitted(cap); err != nil {",
          "1884:    return errors.Wrapf(err, \"error adding %q to the permitted capability set\", cap)",
          "1885:   }",
          "",
          "[Removed Lines]",
          "1880:   if err := g.AddProcessCapabilityInheritable(cap); err != nil {",
          "1881:    return errors.Wrapf(err, \"error adding %q to the inheritable capability set\", cap)",
          "1882:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1898:   if err := g.DropProcessCapabilityEffective(cap); err != nil {",
          "1899:    return errors.Wrapf(err, \"error removing %q from the effective capability set\", cap)",
          "1900:   }",
          "1904:   if err := g.DropProcessCapabilityPermitted(cap); err != nil {",
          "1905:    return errors.Wrapf(err, \"error removing %q from the permitted capability set\", cap)",
          "1906:   }",
          "",
          "[Removed Lines]",
          "1901:   if err := g.DropProcessCapabilityInheritable(cap); err != nil {",
          "1902:    return errors.Wrapf(err, \"error removing %q from the inheritable capability set\", cap)",
          "1903:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ba898532de3c27b2589ba9f61ea3e1722916dfb1",
      "candidate_info": {
        "commit_hash": "ba898532de3c27b2589ba9f61ea3e1722916dfb1",
        "repo": "containers/buildah",
        "commit_url": "https://github.com/containers/buildah/commit/ba898532de3c27b2589ba9f61ea3e1722916dfb1",
        "files": [
          "chroot/run.go",
          "run_linux.go"
        ],
        "message": "do not set the inheritable capabilities\n\nThe kernel never sets the inheritable capabilities for a process, they\nare only set by userspace.  Emulate the same behavior.\n\nCloses: CVE-2022-27651\n\nSigned-off-by: Giuseppe Scrivano <gscrivan@redhat.com>",
        "before_after_code_files": [
          "chroot/run.go||chroot/run.go",
          "run_linux.go||run_linux.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "chroot/run.go||chroot/run.go",
            "run_linux.go||run_linux.go"
          ],
          "candidate": [
            "chroot/run.go||chroot/run.go",
            "run_linux.go||run_linux.go"
          ]
        }
      },
      "candidate_diff": {
        "chroot/run.go||chroot/run.go": [
          "File: chroot/run.go -> chroot/run.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "897:  capMap := map[capability.CapType][]string{",
          "898:   capability.BOUNDING:    spec.Process.Capabilities.Bounding,",
          "899:   capability.EFFECTIVE:   spec.Process.Capabilities.Effective,",
          "901:   capability.PERMITTED:   spec.Process.Capabilities.Permitted,",
          "902:   capability.AMBIENT:     spec.Process.Capabilities.Ambient,",
          "903:  }",
          "",
          "[Removed Lines]",
          "900:   capability.INHERITABLE: spec.Process.Capabilities.Inheritable,",
          "",
          "[Added Lines]",
          "900:   capability.INHERITABLE: []string{},",
          "",
          "---------------"
        ],
        "run_linux.go||run_linux.go": [
          "File: run_linux.go -> run_linux.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1964:   if err := g.AddProcessCapabilityEffective(cap); err != nil {",
          "1965:    return errors.Wrapf(err, \"error adding %q to the effective capability set\", cap)",
          "1966:   }",
          "1970:   if err := g.AddProcessCapabilityPermitted(cap); err != nil {",
          "1971:    return errors.Wrapf(err, \"error adding %q to the permitted capability set\", cap)",
          "1972:   }",
          "",
          "[Removed Lines]",
          "1967:   if err := g.AddProcessCapabilityInheritable(cap); err != nil {",
          "1968:    return errors.Wrapf(err, \"error adding %q to the inheritable capability set\", cap)",
          "1969:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1985:   if err := g.DropProcessCapabilityEffective(cap); err != nil {",
          "1986:    return errors.Wrapf(err, \"error removing %q from the effective capability set\", cap)",
          "1987:   }",
          "1991:   if err := g.DropProcessCapabilityPermitted(cap); err != nil {",
          "1992:    return errors.Wrapf(err, \"error removing %q from the permitted capability set\", cap)",
          "1993:   }",
          "",
          "[Removed Lines]",
          "1988:   if err := g.DropProcessCapabilityInheritable(cap); err != nil {",
          "1989:    return errors.Wrapf(err, \"error removing %q from the inheritable capability set\", cap)",
          "1990:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "393c0cb2387fc2a9188ee1a6a90eb2c061152621",
      "candidate_info": {
        "commit_hash": "393c0cb2387fc2a9188ee1a6a90eb2c061152621",
        "repo": "containers/buildah",
        "commit_url": "https://github.com/containers/buildah/commit/393c0cb2387fc2a9188ee1a6a90eb2c061152621",
        "files": [
          "chroot/run.go",
          "run_linux.go"
        ],
        "message": "do not set the inheritable capabilities\n\nThe kernel never sets the inheritable capabilities for a process, they\nare only set by userspace.  Emulate the same behavior.\n\nCloses: CVE-2022-27651\n\nSigned-off-by: Giuseppe Scrivano <gscrivan@redhat.com>",
        "before_after_code_files": [
          "chroot/run.go||chroot/run.go",
          "run_linux.go||run_linux.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "chroot/run.go||chroot/run.go",
            "run_linux.go||run_linux.go"
          ],
          "candidate": [
            "chroot/run.go||chroot/run.go",
            "run_linux.go||run_linux.go"
          ]
        }
      },
      "candidate_diff": {
        "chroot/run.go||chroot/run.go": [
          "File: chroot/run.go -> chroot/run.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "893:  capMap := map[capability.CapType][]string{",
          "894:   capability.BOUNDING:    spec.Process.Capabilities.Bounding,",
          "895:   capability.EFFECTIVE:   spec.Process.Capabilities.Effective,",
          "897:   capability.PERMITTED:   spec.Process.Capabilities.Permitted,",
          "898:   capability.AMBIENT:     spec.Process.Capabilities.Ambient,",
          "899:  }",
          "",
          "[Removed Lines]",
          "896:   capability.INHERITABLE: spec.Process.Capabilities.Inheritable,",
          "",
          "[Added Lines]",
          "896:   capability.INHERITABLE: {},",
          "",
          "---------------"
        ],
        "run_linux.go||run_linux.go": [
          "File: run_linux.go -> run_linux.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1808:   if err := g.AddProcessCapabilityEffective(cap); err != nil {",
          "1809:    return errors.Wrapf(err, \"error adding %q to the effective capability set\", cap)",
          "1810:   }",
          "1814:   if err := g.AddProcessCapabilityPermitted(cap); err != nil {",
          "1815:    return errors.Wrapf(err, \"error adding %q to the permitted capability set\", cap)",
          "1816:   }",
          "",
          "[Removed Lines]",
          "1811:   if err := g.AddProcessCapabilityInheritable(cap); err != nil {",
          "1812:    return errors.Wrapf(err, \"error adding %q to the inheritable capability set\", cap)",
          "1813:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1829:   if err := g.DropProcessCapabilityEffective(cap); err != nil {",
          "1830:    return errors.Wrapf(err, \"error removing %q from the effective capability set\", cap)",
          "1831:   }",
          "1835:   if err := g.DropProcessCapabilityPermitted(cap); err != nil {",
          "1836:    return errors.Wrapf(err, \"error removing %q from the permitted capability set\", cap)",
          "1837:   }",
          "",
          "[Removed Lines]",
          "1832:   if err := g.DropProcessCapabilityInheritable(cap); err != nil {",
          "1833:    return errors.Wrapf(err, \"error removing %q from the inheritable capability set\", cap)",
          "1834:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}