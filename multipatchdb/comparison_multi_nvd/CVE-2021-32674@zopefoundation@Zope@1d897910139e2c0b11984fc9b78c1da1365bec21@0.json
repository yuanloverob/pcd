{
  "cve_id": "CVE-2021-32674",
  "cve_desc": "Zope is an open-source web application server. This advisory extends the previous advisory at https://github.com/zopefoundation/Zope/security/advisories/GHSA-5pr9-v234-jw36 with additional cases of TAL expression traversal vulnerabilities. Most Python modules are not available for using in TAL expressions that you can add through-the-web, for example in Zope Page Templates. This restriction avoids file system access, for example via the 'os' module. But some of the untrusted modules are available indirectly through Python modules that are available for direct use. By default, you need to have the Manager role to add or edit Zope Page Templates through the web. Only sites that allow untrusted users to add/edit Zope Page Templates through the web are at risk. The problem has been fixed in Zope 5.2.1 and 4.6.1. The workaround is the same as for https://github.com/zopefoundation/Zope/security/advisories/GHSA-5pr9-v234-jw36: A site administrator can restrict adding/editing Zope Page Templates through the web using the standard Zope user/role permission mechanisms. Untrusted users should not be assigned the Zope Manager role and adding/editing Zope Page Templates through the web should be restricted to trusted users only.",
  "repo": "zopefoundation/Zope",
  "patch_hash": "1d897910139e2c0b11984fc9b78c1da1365bec21",
  "patch_info": {
    "commit_hash": "1d897910139e2c0b11984fc9b78c1da1365bec21",
    "repo": "zopefoundation/Zope",
    "commit_url": "https://github.com/zopefoundation/Zope/commit/1d897910139e2c0b11984fc9b78c1da1365bec21",
    "files": [
      "CHANGES.rst",
      "src/OFS/zpt/main.zpt",
      "src/Products/PageTemplates/Expressions.py",
      "src/Products/PageTemplates/expression.py",
      "src/Products/PageTemplates/tests/testExpressions.py",
      "src/Products/PageTemplates/tests/testHTMLTests.py"
    ],
    "message": "Merge pull request from GHSA-rpcg-f9q6-2mq6\n\n* - Prevent traversal through authorized Python modules in TAL expressions\n\n* - try a more generic solution that doesn't use special casing\n\n* - add suggestions from Maurits\n\n* - integrate remaining suggestions from Maurits",
    "before_after_code_files": [
      "src/OFS/zpt/main.zpt||src/OFS/zpt/main.zpt",
      "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py",
      "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py",
      "src/Products/PageTemplates/tests/testExpressions.py||src/Products/PageTemplates/tests/testExpressions.py",
      "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py"
    ]
  },
  "patch_diff": {
    "src/OFS/zpt/main.zpt||src/OFS/zpt/main.zpt": [
      "File: src/OFS/zpt/main.zpt -> src/OFS/zpt/main.zpt",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: <main class=\"container-fluid\">",
      "6:   <form id=\"objectItems\" name=\"objectItems\" method=\"post\"",
      "7:         tal:define=\"has_order_support python:getattr(here.aq_explicit, 'has_order_support', 0);",
      "9:                     default_sort python: 'position' if has_order_support else 'id';",
      "10:                     skey python:request.get('skey',default_sort);",
      "11:                     rkey python:request.get('rkey','asc');",
      "",
      "[Removed Lines]",
      "8:                     sm modules/AccessControl/SecurityManagement/getSecurityManager;",
      "",
      "[Added Lines]",
      "8:                     sm modules/AccessControl/getSecurityManager;",
      "",
      "---------------"
    ],
    "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py": [
      "File: src/Products/PageTemplates/Expressions.py -> src/Products/PageTemplates/Expressions.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "22: import OFS.interfaces",
      "23: from AccessControl import safe_builtins",
      "24: from Acquisition import aq_base",
      "25: from MultiMapping import MultiMapping",
      "26: from zExceptions import NotFound",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "24: from AccessControl.SecurityManagement import getSecurityManager",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "70:     necessary (bobo-awareness).",
      "71:     \"\"\"",
      "72:     request = getattr(econtext, 'request', None)",
      "73:     path_items = list(path_items)",
      "74:     path_items.reverse()",
      "76:     while path_items:",
      "77:         name = path_items.pop()",
      "86:         if OFS.interfaces.ITraversable.providedBy(object):",
      "87:             object = object.restrictedTraverse(name)",
      "88:         else:",
      "91:     return object",
      "",
      "[Removed Lines]",
      "79:         if name == '_':",
      "80:             warnings.warn('Traversing to the name `_` is deprecated '",
      "81:                           'and will be removed in Zope 6.',",
      "82:                           DeprecationWarning)",
      "83:         elif name.startswith('_'):",
      "84:             raise NotFound(name)",
      "89:             object = traversePathElement(object, name, path_items,",
      "90:                                          request=request)",
      "",
      "[Added Lines]",
      "74:     validate = getSecurityManager().validate",
      "84:             found = traversePathElement(object, name, path_items,",
      "85:                                         request=request)",
      "87:             # Special backwards compatibility exception for the name ``_``,",
      "88:             # which was often used for translation message factories.",
      "89:             # Allow and continue traversal.",
      "90:             if name == '_':",
      "91:                 warnings.warn('Traversing to the name `_` is deprecated '",
      "92:                               'and will be removed in Zope 6.',",
      "93:                               DeprecationWarning)",
      "94:                 object = found",
      "95:                 continue",
      "97:             # All other names starting with ``_`` are disallowed.",
      "98:             # This emulates what restrictedTraverse does.",
      "99:             if name.startswith('_'):",
      "100:                 raise NotFound(name)",
      "102:             # traversePathElement doesn't apply any Zope security policy,",
      "103:             # so we validate access explicitly here.",
      "104:             try:",
      "105:                 validate(object, object, name, found)",
      "106:                 object = found",
      "107:             except Unauthorized:",
      "108:                 # Convert Unauthorized to prevent information disclosures",
      "109:                 raise NotFound(name)",
      "",
      "---------------"
    ],
    "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py": [
      "File: src/Products/PageTemplates/expression.py -> src/Products/PageTemplates/expression.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: from chameleon.tales import NotExpr",
      "11: from chameleon.tales import StringExpr",
      "13: from AccessControl.ZopeGuards import guarded_apply",
      "14: from AccessControl.ZopeGuards import guarded_getattr",
      "15: from AccessControl.ZopeGuards import guarded_getitem",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "13: from AccessControl.SecurityManagement import getSecurityManager",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "57:     def traverse(cls, base, request, path_items):",
      "58:         \"\"\"See ``zope.app.pagetemplate.engine``.\"\"\"",
      "60:         path_items = list(path_items)",
      "61:         path_items.reverse()",
      "63:         while path_items:",
      "64:             name = path_items.pop()",
      "73:             if ITraversable.providedBy(base):",
      "74:                 base = getattr(base, cls.traverse_method)(name)",
      "75:             else:",
      "79:         return base",
      "",
      "[Removed Lines]",
      "66:             if name == '_':",
      "67:                 warnings.warn('Traversing to the name `_` is deprecated '",
      "68:                               'and will be removed in Zope 6.',",
      "69:                               DeprecationWarning)",
      "70:             elif name.startswith('_'):",
      "71:                 raise NotFound(name)",
      "76:                 base = traversePathElement(base, name, path_items,",
      "77:                                            request=request)",
      "",
      "[Added Lines]",
      "61:         validate = getSecurityManager().validate",
      "71:                 found = traversePathElement(base, name, path_items,",
      "72:                                             request=request)",
      "74:                 # If traverse_method is something other than",
      "75:                 # ``restrictedTraverse`` then traversal is assumed to be",
      "76:                 # unrestricted. This emulates ``unrestrictedTraverse``",
      "77:                 if cls.traverse_method != 'restrictedTraverse':",
      "78:                     base = found",
      "79:                     continue",
      "81:                 # Special backwards compatibility exception for the name ``_``,",
      "82:                 # which was often used for translation message factories.",
      "83:                 # Allow and continue traversal.",
      "84:                 if name == '_':",
      "85:                     warnings.warn('Traversing to the name `_` is deprecated '",
      "86:                                   'and will be removed in Zope 6.',",
      "87:                                   DeprecationWarning)",
      "88:                     base = found",
      "89:                     continue",
      "91:                 # All other names starting with ``_`` are disallowed.",
      "92:                 # This emulates what restrictedTraverse does.",
      "93:                 if name.startswith('_'):",
      "94:                     raise NotFound(name)",
      "96:                 # traversePathElement doesn't apply any Zope security policy,",
      "97:                 # so we validate access explicitly here.",
      "98:                 try:",
      "99:                     validate(base, base, name, found)",
      "100:                     base = found",
      "101:                 except Unauthorized:",
      "102:                     # Convert Unauthorized to prevent information disclosures",
      "103:                     raise NotFound(name)",
      "",
      "---------------"
    ],
    "src/Products/PageTemplates/tests/testExpressions.py||src/Products/PageTemplates/tests/testExpressions.py": [
      "File: src/Products/PageTemplates/tests/testExpressions.py -> src/Products/PageTemplates/tests/testExpressions.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "4: from AccessControl import safe_builtins",
      "5: from zExceptions import NotFound",
      "6: from zope.component.testing import PlacelessSetup",
      "9: class EngineTestsBase(PlacelessSetup):",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "7: from zope.location.interfaces import LocationError",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "233:         with self.assertRaises(NotFound):",
      "234:             ec.evaluate(\"context/__class__\")",
      "237:             ec.evaluate(\"nocall: random/_itertools/repeat\")",
      "240:             ec.evaluate(\"random/_itertools/repeat/foobar\")",
      "",
      "[Removed Lines]",
      "236:         with self.assertRaises(NotFound):",
      "239:         with self.assertRaises(NotFound):",
      "",
      "[Added Lines]",
      "237:         with self.assertRaises((NotFound, LocationError)):",
      "240:         with self.assertRaises((NotFound, LocationError)):",
      "",
      "---------------"
    ],
    "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py": [
      "File: src/Products/PageTemplates/tests/testHTMLTests.py -> src/Products/PageTemplates/tests/testHTMLTests.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "26:     DefaultUnicodeEncodingConflictResolver",
      "27: from Products.PageTemplates.unicodeconflictresolver import \\",
      "28:     PreferredCharsetResolver",
      "29: from zExceptions import NotFound",
      "30: from zope.component import provideUtility",
      "31: from zope.traversing.adapters import DefaultTraversable",
      "33: from .util import useChameleonEngine",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "29: from Products.PageTemplates.ZopePageTemplate import ZopePageTemplate",
      "32: from zope.location.interfaces import LocationError",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "37:     pass",
      "40: class Folder(util.Base):",
      "41:     pass",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "42: class AqZopePageTemplate(Implicit, ZopePageTemplate):",
      "43:     pass",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "74:         self.folder = f = Folder()",
      "75:         f.laf = AqPageTemplate()",
      "76:         f.t = AqPageTemplate()",
      "77:         self.policy = UnitTestSecurityPolicy()",
      "78:         self.oldPolicy = SecurityManager.setSecurityPolicy(self.policy)",
      "79:         noSecurityManager()  # Use the new policy.",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "83:         f.z = AqZopePageTemplate('testing')",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "226:             t()",
      "228:         t.write('<p tal:define=\"p nocall: random/_itertools/repeat\"/>')",
      "230:             t()",
      "232:         t.write('<p tal:content=\"random/_itertools/repeat/foobar\"/>')",
      "233:         with self.assertRaises(NotFound):",
      "234:             t()",
      "",
      "[Removed Lines]",
      "229:         with self.assertRaises(NotFound):",
      "",
      "[Added Lines]",
      "236:         with self.assertRaises((NotFound, LocationError)):",
      "240:         with self.assertRaises((NotFound, LocationError)):",
      "241:             t()",
      "243:     def test_module_traversal(self):",
      "244:         t = self.folder.z",
      "246:         # Need to reset to the standard security policy so AccessControl",
      "247:         # checks are actually performed. The test setup initializes",
      "248:         # a policy that circumvents those checks.",
      "249:         SecurityManager.setSecurityPolicy(self.oldPolicy)",
      "250:         noSecurityManager()",
      "252:         # The getSecurityManager function is explicitly allowed",
      "253:         content = ('<p tal:define=\"a nocall:%s\"'",
      "254:                    '   tal:content=\"python: a().getUser().getUserName()\"/>')",
      "255:         t.write(content % 'modules/AccessControl/getSecurityManager')",
      "256:         self.assertEqual(t(), '<p>Anonymous User</p>')",
      "258:         # Anything else should be unreachable and raise NotFound:",
      "259:         # Direct access through AccessControl",
      "260:         t.write('<p tal:define=\"a nocall:modules/AccessControl/users\"/>')",
      "261:         with self.assertRaises(NotFound):",
      "262:             t()",
      "264:         # Indirect access through an intermediary variable",
      "265:         content = ('<p tal:define=\"mod nocall:modules/AccessControl;'",
      "266:                    '               must_fail nocall:mod/users\"/>')",
      "267:         t.write(content)",
      "268:         with self.assertRaises(NotFound):",
      "269:             t()",
      "271:         # Indirect access through an intermediary variable and a dictionary",
      "272:         content = ('<p tal:define=\"mod nocall:modules/AccessControl;'",
      "273:                    '               a_dict python: {\\'unsafe\\': mod};'",
      "274:                    '               must_fail nocall: a_dict/unsafe/users\"/>')",
      "275:         t.write(content)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8af277ee3c1856b6b85a144555bff55c2a5688ff",
      "candidate_info": {
        "commit_hash": "8af277ee3c1856b6b85a144555bff55c2a5688ff",
        "repo": "zopefoundation/Zope",
        "commit_url": "https://github.com/zopefoundation/Zope/commit/8af277ee3c1856b6b85a144555bff55c2a5688ff",
        "files": [
          "CHANGES.rst",
          "src/OFS/zpt/main.zpt",
          "src/Products/PageTemplates/Expressions.py",
          "src/Products/PageTemplates/expression.py",
          "src/Products/PageTemplates/tests/testHTMLTests.py"
        ],
        "message": "- Prevent unauthorized traversal through Python modules in TAL expressions",
        "before_after_code_files": [
          "src/OFS/zpt/main.zpt||src/OFS/zpt/main.zpt",
          "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py",
          "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py",
          "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/OFS/zpt/main.zpt||src/OFS/zpt/main.zpt",
            "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py",
            "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py",
            "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py"
          ],
          "candidate": [
            "src/OFS/zpt/main.zpt||src/OFS/zpt/main.zpt",
            "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py",
            "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py",
            "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py"
          ]
        }
      },
      "candidate_diff": {
        "src/OFS/zpt/main.zpt||src/OFS/zpt/main.zpt": [
          "File: src/OFS/zpt/main.zpt -> src/OFS/zpt/main.zpt",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: <main class=\"container-fluid\">",
          "6:   <form id=\"objectItems\" name=\"objectItems\" method=\"post\"",
          "7:         tal:define=\"has_order_support python:getattr(here.aq_explicit, 'has_order_support', 0);",
          "9:                     default_sort python: 'position' if has_order_support else 'id';",
          "10:                     skey python:request.get('skey',default_sort);",
          "11:                     rkey python:request.get('rkey','asc');",
          "",
          "[Removed Lines]",
          "8:                     sm modules/AccessControl/SecurityManagement/getSecurityManager;",
          "",
          "[Added Lines]",
          "8:                     sm modules/AccessControl/getSecurityManager;",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py": [
          "File: src/Products/PageTemplates/Expressions.py -> src/Products/PageTemplates/Expressions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: \"\"\"",
          "19: import logging",
          "20: import warnings",
          "22: from six import binary_type",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import types",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25: import OFS.interfaces",
          "26: from AccessControl import safe_builtins",
          "27: from Acquisition import aq_base",
          "28: from MultiMapping import MultiMapping",
          "29: from zExceptions import NotFound",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28: from AccessControl.ZopeGuards import guarded_import",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "89:         if OFS.interfaces.ITraversable.providedBy(object):",
          "90:             object = object.restrictedTraverse(name)",
          "91:         else:",
          "92:             object = traversePathElement(object, name, path_items,",
          "93:                                          request=request)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "93:         elif isinstance(object, types.ModuleType):",
          "94:             try:",
          "95:                 # guarded_import will do all necessary security checking",
          "96:                 # but will not return the imported item itself.",
          "97:                 guarded_import(object.__name__, fromlist=[name])",
          "98:                 object = getattr(object, name)",
          "99:             except Unauthorized:",
          "100:                 # Convert Unauthorized to prevent information disclosures",
          "101:                 raise NotFound(name)",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py": [
          "File: src/Products/PageTemplates/expression.py -> src/Products/PageTemplates/expression.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import warnings",
          "4: from ast import NodeTransformer",
          "5: from ast import parse",
          "7: from chameleon.astutil import Static",
          "8: from chameleon.astutil import Symbol",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: from types import ModuleType",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "14: from AccessControl.ZopeGuards import guarded_apply",
          "15: from AccessControl.ZopeGuards import guarded_getattr",
          "16: from AccessControl.ZopeGuards import guarded_getitem",
          "17: from AccessControl.ZopeGuards import guarded_iter",
          "18: from AccessControl.ZopeGuards import protected_inplacevar",
          "19: from OFS.interfaces import ITraversable",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "18: from AccessControl.ZopeGuards import guarded_import",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "74:             if ITraversable.providedBy(base):",
          "75:                 base = getattr(base, cls.traverse_method)(name)",
          "76:             else:",
          "77:                 base = traversePathElement(base, name, path_items,",
          "78:                                            request=request)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78:             elif isinstance(base, ModuleType):",
          "79:                 try:",
          "80:                     # guarded_import will do all necessary security checking",
          "81:                     # but will not return the imported item itself.",
          "82:                     guarded_import(base.__name__, fromlist=[name])",
          "83:                     base = getattr(base, name)",
          "84:                 except Unauthorized:",
          "85:                     # Convert Unauthorized to prevent information disclosures",
          "86:                     raise NotFound(name)",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py": [
          "File: src/Products/PageTemplates/tests/testHTMLTests.py -> src/Products/PageTemplates/tests/testHTMLTests.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "233:         t.write('<p tal:content=\"random/_itertools/repeat/foobar\"/>')",
          "234:         with self.assertRaises(NotFound):",
          "235:             t()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "237:     def test_module_traversal(self):",
          "238:         t = self.folder.t",
          "240:         # Need to reset to the standard security policy so AccessControl",
          "241:         # checks are actually performed. The test setup initializes",
          "242:         # a policy that circumvents those checks.",
          "243:         SecurityManager.setSecurityPolicy(self.oldPolicy)",
          "244:         noSecurityManager()",
          "246:         # The getSecurityManager function is explicitly allowed",
          "247:         content = ('<p tal:define=\"a nocall:%s\"'",
          "248:                    '   tal:content=\"python: a().getUser().getUserName()\"/>')",
          "249:         t.write(content % 'modules/AccessControl/getSecurityManager')",
          "250:         self.assertEqual(t(), '<p>Anonymous User</p>')",
          "252:         # Anything else should be unreachable and raise NotFound:",
          "253:         # Direct access through AccessControl",
          "254:         t.write('<p tal:define=\"a nocall:modules/AccessControl/users\"/>')",
          "255:         with self.assertRaises(NotFound):",
          "256:             t()",
          "258:         # Indirect access through an intermediary variable",
          "259:         content = ('<p tal:define=\"mod nocall:modules/AccessControl;'",
          "260:                    '               must_fail nocall:mod/users\"/>')",
          "261:         t.write(content)",
          "262:         with self.assertRaises(NotFound):",
          "263:             t()",
          "265:         # Indirect access through an intermediary variable and a dictionary",
          "266:         content = ('<p tal:define=\"mod nocall:modules/AccessControl;'",
          "267:                    '               a_dict python: {\\'unsafe\\': mod};'",
          "268:                    '               must_fail nocall: a_dict/unsafe/users\"/>')",
          "269:         t.write(content)",
          "270:         with self.assertRaises(NotFound):",
          "271:             t()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2c21e0aff59fa7c6ea75dcee9322c74eeba6e948",
      "candidate_info": {
        "commit_hash": "2c21e0aff59fa7c6ea75dcee9322c74eeba6e948",
        "repo": "zopefoundation/Zope",
        "commit_url": "https://github.com/zopefoundation/Zope/commit/2c21e0aff59fa7c6ea75dcee9322c74eeba6e948",
        "files": [
          "CHANGES.rst",
          "src/Products/PageTemplates/Expressions.py",
          "src/Products/PageTemplates/expression.py",
          "src/Products/PageTemplates/tests/testExpressions.py",
          "src/Products/PageTemplates/tests/testHTMLTests.py"
        ],
        "message": "- Backport stricter traversal checks from Zope 5 (#983)",
        "before_after_code_files": [
          "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py",
          "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py",
          "src/Products/PageTemplates/tests/testExpressions.py||src/Products/PageTemplates/tests/testExpressions.py",
          "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py",
            "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py",
            "src/Products/PageTemplates/tests/testExpressions.py||src/Products/PageTemplates/tests/testExpressions.py",
            "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py"
          ],
          "candidate": [
            "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py",
            "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py",
            "src/Products/PageTemplates/tests/testExpressions.py||src/Products/PageTemplates/tests/testExpressions.py",
            "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py"
          ]
        }
      },
      "candidate_diff": {
        "src/Products/PageTemplates/Expressions.py||src/Products/PageTemplates/Expressions.py": [
          "File: src/Products/PageTemplates/Expressions.py -> src/Products/PageTemplates/Expressions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: \"\"\"",
          "19: import logging",
          "21: import warnings",
          "23: from six import binary_type",
          "",
          "[Removed Lines]",
          "20: import types",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26: import OFS.interfaces",
          "27: from AccessControl import safe_builtins",
          "29: from Acquisition import aq_base",
          "30: from MultiMapping import MultiMapping",
          "31: from zExceptions import NotFound",
          "",
          "[Removed Lines]",
          "28: from AccessControl.ZopeGuards import guarded_import",
          "",
          "[Added Lines]",
          "27: from AccessControl.SecurityManagement import getSecurityManager",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "75:     necessary (bobo-awareness).",
          "76:     \"\"\"",
          "77:     request = getattr(econtext, 'request', None)",
          "78:     path_items = list(path_items)",
          "79:     path_items.reverse()",
          "81:     while path_items:",
          "82:         name = path_items.pop()",
          "91:         if OFS.interfaces.ITraversable.providedBy(object):",
          "92:             object = object.restrictedTraverse(name)",
          "94:             try:",
          "99:             except Unauthorized:",
          "100:                 # Convert Unauthorized to prevent information disclosures",
          "101:                 raise NotFound(name)",
          "105:     return object",
          "",
          "[Removed Lines]",
          "84:         if name == '_':",
          "85:             warnings.warn('Traversing to the name `_` is deprecated '",
          "86:                           'and will be removed in Zope 6.',",
          "87:                           DeprecationWarning)",
          "88:         elif name.startswith('_'):",
          "89:             raise NotFound(name)",
          "93:         elif isinstance(object, types.ModuleType):",
          "95:                 # guarded_import will do all necessary security checking",
          "96:                 # but will not return the imported item itself.",
          "97:                 guarded_import(object.__name__, fromlist=[name])",
          "98:                 object = getattr(object, name)",
          "102:         else:",
          "103:             object = traversePathElement(object, name, path_items,",
          "104:                                          request=request)",
          "",
          "[Added Lines]",
          "77:     validate = getSecurityManager().validate",
          "86:         else:",
          "87:             found = traversePathElement(object, name, path_items,",
          "88:                                         request=request)",
          "90:             # Special backwards compatibility exception for the name ``_``,",
          "91:             # which was often used for translation message factories.",
          "92:             # Allow and continue traversal.",
          "93:             if name == '_':",
          "94:                 warnings.warn('Traversing to the name `_` is deprecated '",
          "95:                               'and will be removed in Zope 6.',",
          "96:                               DeprecationWarning)",
          "97:                 object = found",
          "98:                 continue",
          "100:             # All other names starting with ``_`` are disallowed.",
          "101:             # This emulates what restrictedTraverse does.",
          "102:             if name.startswith('_'):",
          "103:                 raise NotFound(name)",
          "105:             # traversePathElement doesn't apply any Zope security policy,",
          "106:             # so we validate access explicitly here.",
          "108:                 validate(object, object, name, found)",
          "109:                 object = found",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/expression.py||src/Products/PageTemplates/expression.py": [
          "File: src/Products/PageTemplates/expression.py -> src/Products/PageTemplates/expression.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: import warnings",
          "4: from ast import NodeTransformer",
          "5: from ast import parse",
          "8: from chameleon.astutil import Static",
          "9: from chameleon.astutil import Symbol",
          "",
          "[Removed Lines]",
          "6: from types import ModuleType",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "12: from chameleon.tales import StringExpr",
          "13: from six import class_types",
          "15: from AccessControl.ZopeGuards import guarded_apply",
          "16: from AccessControl.ZopeGuards import guarded_getattr",
          "17: from AccessControl.ZopeGuards import guarded_getitem",
          "19: from AccessControl.ZopeGuards import guarded_iter",
          "20: from AccessControl.ZopeGuards import protected_inplacevar",
          "21: from OFS.interfaces import ITraversable",
          "",
          "[Removed Lines]",
          "18: from AccessControl.ZopeGuards import guarded_import",
          "",
          "[Added Lines]",
          "14: from AccessControl.SecurityManagement import getSecurityManager",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "60:     def traverse(cls, base, request, path_items):",
          "61:         \"\"\"See ``zope.app.pagetemplate.engine``.\"\"\"",
          "63:         path_items = list(path_items)",
          "64:         path_items.reverse()",
          "66:         while path_items:",
          "67:             name = path_items.pop()",
          "76:             if ITraversable.providedBy(base):",
          "77:                 base = getattr(base, cls.traverse_method)(name)",
          "79:                 try:",
          "84:                 except Unauthorized:",
          "85:                     # Convert Unauthorized to prevent information disclosures",
          "86:                     raise NotFound(name)",
          "91:         return base",
          "",
          "[Removed Lines]",
          "69:             if name == '_':",
          "70:                 warnings.warn('Traversing to the name `_` is deprecated '",
          "71:                               'and will be removed in Zope 6.',",
          "72:                               DeprecationWarning)",
          "73:             elif name.startswith('_'):",
          "74:                 raise NotFound(name)",
          "78:             elif isinstance(base, ModuleType):",
          "80:                     # guarded_import will do all necessary security checking",
          "81:                     # but will not return the imported item itself.",
          "82:                     guarded_import(base.__name__, fromlist=[name])",
          "83:                     base = getattr(base, name)",
          "87:             else:",
          "88:                 base = traversePathElement(base, name, path_items,",
          "89:                                            request=request)",
          "",
          "[Added Lines]",
          "62:         validate = getSecurityManager().validate",
          "71:             else:",
          "72:                 found = traversePathElement(base, name, path_items,",
          "73:                                             request=request)",
          "75:                 # If traverse_method is something other than",
          "76:                 # ``restrictedTraverse`` then traversal is assumed to be",
          "77:                 # unrestricted. This emulates ``unrestrictedTraverse``",
          "78:                 if cls.traverse_method != 'restrictedTraverse':",
          "79:                     base = found",
          "80:                     continue",
          "82:                 # Special backwards compatibility exception for the name ``_``,",
          "83:                 # which was often used for translation message factories.",
          "84:                 # Allow and continue traversal.",
          "85:                 if name == '_':",
          "86:                     warnings.warn('Traversing to the name `_` is deprecated '",
          "87:                                   'and will be removed in Zope 6.',",
          "88:                                   DeprecationWarning)",
          "89:                     base = found",
          "90:                     continue",
          "92:                 # All other names starting with ``_`` are disallowed.",
          "93:                 # This emulates what restrictedTraverse does.",
          "94:                 if name.startswith('_'):",
          "95:                     raise NotFound(name)",
          "97:                 # traversePathElement doesn't apply any Zope security policy,",
          "98:                 # so we validate access explicitly here.",
          "100:                     validate(base, base, name, found)",
          "101:                     base = found",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/tests/testExpressions.py||src/Products/PageTemplates/tests/testExpressions.py": [
          "File: src/Products/PageTemplates/tests/testExpressions.py -> src/Products/PageTemplates/tests/testExpressions.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: from AccessControl import safe_builtins",
          "9: from zExceptions import NotFound",
          "10: from zope.component.testing import PlacelessSetup",
          "13: class EngineTestsBase(PlacelessSetup):",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: from zope.location.interfaces import LocationError",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "237:         with self.assertRaises(NotFound):",
          "238:             ec.evaluate(\"context/__class__\")",
          "241:             ec.evaluate(\"nocall: random/_itertools/repeat\")",
          "244:             ec.evaluate(\"random/_itertools/repeat/foobar\")",
          "",
          "[Removed Lines]",
          "240:         with self.assertRaises(NotFound):",
          "243:         with self.assertRaises(NotFound):",
          "",
          "[Added Lines]",
          "241:         with self.assertRaises((NotFound, LocationError)):",
          "244:         with self.assertRaises((NotFound, LocationError)):",
          "",
          "---------------"
        ],
        "src/Products/PageTemplates/tests/testHTMLTests.py||src/Products/PageTemplates/tests/testHTMLTests.py": [
          "File: src/Products/PageTemplates/tests/testHTMLTests.py -> src/Products/PageTemplates/tests/testHTMLTests.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     DefaultUnicodeEncodingConflictResolver",
          "28: from Products.PageTemplates.unicodeconflictresolver import \\",
          "29:     PreferredCharsetResolver",
          "30: from zExceptions import NotFound",
          "31: from zope.component import provideUtility",
          "32: from zope.traversing.adapters import DefaultTraversable",
          "34: from .util import useChameleonEngine",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: from Products.PageTemplates.ZopePageTemplate import ZopePageTemplate",
          "33: from zope.location.interfaces import LocationError",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38:     pass",
          "41: class Folder(util.Base):",
          "42:     pass",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43: class AqZopePageTemplate(Implicit, ZopePageTemplate):",
          "44:     pass",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "75:         self.folder = f = Folder()",
          "76:         f.laf = AqPageTemplate()",
          "77:         f.t = AqPageTemplate()",
          "78:         self.policy = UnitTestSecurityPolicy()",
          "79:         self.oldPolicy = SecurityManager.setSecurityPolicy(self.policy)",
          "80:         noSecurityManager()  # Use the new policy.",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84:         f.z = AqZopePageTemplate('testing')",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "227:             t()",
          "229:         t.write('<p tal:define=\"p nocall: random/_itertools/repeat\"/>')",
          "231:             t()",
          "233:         t.write('<p tal:content=\"random/_itertools/repeat/foobar\"/>')",
          "235:             t()",
          "237:     def test_module_traversal(self):",
          "240:         # Need to reset to the standard security policy so AccessControl",
          "241:         # checks are actually performed. The test setup initializes",
          "",
          "[Removed Lines]",
          "230:         with self.assertRaises(NotFound):",
          "234:         with self.assertRaises(NotFound):",
          "238:         t = self.folder.t",
          "",
          "[Added Lines]",
          "237:         with self.assertRaises((NotFound, LocationError)):",
          "241:         with self.assertRaises((NotFound, LocationError)):",
          "245:         t = self.folder.z",
          "",
          "---------------"
        ]
      }
    }
  ]
}