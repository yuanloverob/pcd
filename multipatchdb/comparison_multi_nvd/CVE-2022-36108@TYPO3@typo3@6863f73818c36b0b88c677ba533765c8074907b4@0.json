{
  "cve_id": "CVE-2022-36108",
  "cve_desc": "TYPO3 is an open source PHP based web content management system released under the GNU GPL. It has been discovered that the `f:asset.css` view helper is vulnerable to cross-site scripting when user input is passed as variables to the CSS. Update to TYPO3 version 10.4.32 or 11.5.16 that fix the problem. There are no known workarounds for this issue.",
  "repo": "TYPO3/typo3",
  "patch_hash": "6863f73818c36b0b88c677ba533765c8074907b4",
  "patch_info": {
    "commit_hash": "6863f73818c36b0b88c677ba533765c8074907b4",
    "repo": "TYPO3/typo3",
    "commit_url": "https://github.com/TYPO3/typo3/commit/6863f73818c36b0b88c677ba533765c8074907b4",
    "files": [
      "typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php",
      "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php"
    ],
    "message": "[SECURITY] Encode child node variables in f:asset.css view helper\n\nVariables in child nodes like `<f:asset.css>{value}</f:asset.css>`\nwere not encoded and allow cross-site scripting. In case values shall\nbe taken as is, corresponding `f:format.raw` instruction has to be used.\n\nResolves: #97900\nReleases: main, 11.5, 10.4\nChange-Id: Id843a41c42bbe1f74cdc4efbc117b24d20026b97\nSecurity-Bulletin: TYPO3-CORE-SA-2022-010\nSecurity-References: CVE-2022-36108\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/75719\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
    "before_after_code_files": [
      "typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php||typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php",
      "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php||typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php"
    ]
  },
  "patch_diff": {
    "typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php||typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php": [
      "File: typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php -> typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "56:     protected AssetCollector $assetCollector;",
      "",
      "[Removed Lines]",
      "54:     protected $escapeChildren = false;",
      "",
      "[Added Lines]",
      "54:     protected $escapeChildren = true;",
      "",
      "---------------"
    ],
    "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php||typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php": [
      "File: typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php -> typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: namespace TYPO3\\CMS\\Fluid\\Tests\\Functional\\ViewHelpers\\Asset;",
      "20: use TYPO3\\CMS\\Core\\Page\\AssetCollector;",
      "21: use TYPO3\\CMS\\Fluid\\ViewHelpers\\Asset\\CssViewHelper;",
      "22: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "21: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
      "22: use TYPO3\\CMS\\Fluid\\View\\StandaloneView;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "79:         self::assertSame($collectedJavaScripts['test']['source'], 'my.css');",
      "80:         self::assertSame($collectedJavaScripts['test']['attributes'], ['disabled' => 'disabled']);",
      "81:     }",
      "82: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "85:     public static function childNodeRenderingIsCorrectDataProvider(): array",
      "86:     {",
      "87:         return [",
      "89:             'variable with double quotes is encoded' => [",
      "90:                 '</style>/* \" ', // variable value",
      "91:                 'body { color: #{color}; }', // inner template source",
      "92:                 'body { color: #&lt;/style&gt;/* &quot; ; }', // expectation",
      "93:             ],",
      "94:             'variable with double quotes is encoded in single quotes' => [",
      "95:                 '</style>/* \" ', // variable value",
      "96:                 'body { color: \\'#{color}\\'; }', // inner template source",
      "97:                 'body { color: \\'#&lt;/style&gt;/* &quot; \\'; }', // expectation",
      "98:             ],",
      "99:             'variable with double quotes is encoded in double quotes' => [",
      "100:                 '</style>/* \" ', // variable value",
      "101:                 'body { color: \"#{color}\"; }', // inner template source",
      "102:                 'body { color: \"#&lt;/style&gt;/* &quot; \"; }', // expectation",
      "103:             ],",
      "105:             'variable with single quotes is encoded' => [",
      "106:                 '</style>/* \\' ', // variable value",
      "107:                 'body { color: #{color}; }', // inner template source",
      "108:                 'body { color: #&lt;/style&gt;/* &#039; ; }', // expectation",
      "109:             ],",
      "110:             'variable with single quotes is encoded in single quotes' => [",
      "111:                 '</style>/* \\' ', // variable value",
      "112:                 'body { color: \\'#{color}\\'; }', // inner template source",
      "113:                 'body { color: \\'#&lt;/style&gt;/* &#039; \\'; }', // expectation",
      "114:             ],",
      "115:             'variable with single quotes is encoded in double quotes' => [",
      "116:                 '</style>/* \\' ', // variable value",
      "117:                 'body { color: \"#{color}\"; }', // inner template source",
      "118:                 'body { color: \"#&lt;/style&gt;/* &#039; \"; }', // expectation",
      "119:             ],",
      "121:             'raw instruction is passed' => [",
      "122:                 '</style>/* \" ',",
      "123:                 'body { color: #{color -> f:format.raw()}; }',",
      "124:                 'body { color: #</style>/* \" ; }',",
      "125:             ],",
      "126:             'raw instruction is passed in sigle quotes' => [",
      "127:                 '</style>/* \" ',",
      "128:                 'body { color: \\'#{color -> f:format.raw()}\\'; }',",
      "129:                 'body { color: \\'#</style>/* \" \\'; }',",
      "130:             ],",
      "131:             'raw instruction is passed in double quotes' => [",
      "132:                 '</style>/* \" ',",
      "133:                 'body { color: \"#{color -> f:format.raw()}\"; }',",
      "134:                 'body { color: \"#</style>/* \" \"; }',",
      "135:             ],",
      "136:         ];",
      "137:     }",
      "143:     public function childNodeRenderingIsCorrect(string $value, string $source, string $expectation): void",
      "144:     {",
      "145:         $assetCollector = new AssetCollector();",
      "146:         GeneralUtility::setSingletonInstance(AssetCollector::class, $assetCollector);",
      "148:         $view = new StandaloneView();",
      "149:         $view->setTemplateSource(sprintf('<f:asset.css identifier=\"test\">%s</f:asset.css>', $source));",
      "150:         $view->assign('color', $value);",
      "151:         $view->render();",
      "152:         GeneralUtility::removeSingletonInstance(AssetCollector::class, $assetCollector);",
      "154:         self::assertSame($expectation, $assetCollector->getInlineStyleSheets()['test']['source']);",
      "155:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "73fd3a6c9d623356d5d82fe4674099e655ebcc04",
      "candidate_info": {
        "commit_hash": "73fd3a6c9d623356d5d82fe4674099e655ebcc04",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/73fd3a6c9d623356d5d82fe4674099e655ebcc04",
        "files": [
          "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php",
          "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/ScriptViewHelperTest.php"
        ],
        "message": "[TASK] Streamline AssetCollector ViewHelper tests\n\nJust like other ViewHelper tests, the AssetCollector ViewHelper tests\nnow utilize the RenderingContext and TemplateView to render a real Fluid\nsnippet. The AssetCollector Singleton can now also be retrieved from\nthe DI container.\n\nResolves: #100290\nReleases: main\nChange-Id: I22841b46061d9f1510bc2967545fe8773b1b2ac3\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/78245\nTested-by: Stefan B\u00fcrk <stefan@buerk.tech>\nTested-by: core-ci <typo3@b13.com>\nReviewed-by: Benni Mack <benni@typo3.org>\nReviewed-by: Stefan B\u00fcrk <stefan@buerk.tech>\nTested-by: Benni Mack <benni@typo3.org>",
        "before_after_code_files": [
          "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php||typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php",
          "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/ScriptViewHelperTest.php||typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/ScriptViewHelperTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php||typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php"
          ],
          "candidate": [
            "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php||typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php||typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php": [
          "File: typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php -> typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: namespace TYPO3\\CMS\\Fluid\\Tests\\Functional\\ViewHelpers\\Asset;",
          "20: use TYPO3\\CMS\\Core\\Page\\AssetCollector;",
          "24: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "26: class CssViewHelperTest extends FunctionalTestCase",
          "27: {",
          "",
          "[Removed Lines]",
          "21: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "22: use TYPO3\\CMS\\Fluid\\View\\StandaloneView;",
          "23: use TYPO3\\CMS\\Fluid\\ViewHelpers\\Asset\\CssViewHelper;",
          "",
          "[Added Lines]",
          "21: use TYPO3\\CMS\\Fluid\\Core\\Rendering\\RenderingContextFactory;",
          "23: use TYPO3Fluid\\Fluid\\View\\TemplateView;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "45:     public function sourceStringIsNotHtmlEncodedBeforePassedToAssetCollector(string $href): void",
          "46:     {",
          "59:     }",
          "",
          "[Removed Lines]",
          "47:         $assetCollector = new AssetCollector();",
          "48:         $viewHelper = new CssViewHelper();",
          "49:         $viewHelper->injectAssetCollector($assetCollector);",
          "50:         $viewHelper->setArguments([",
          "51:             'identifier' => 'test',",
          "52:             'href' => $href,",
          "53:             'priority' => false,",
          "54:         ]);",
          "55:         $viewHelper->initializeArgumentsAndRender();",
          "56:         $collectedJavaScripts = $assetCollector->getStyleSheets();",
          "57:         self::assertSame($collectedJavaScripts['test']['source'], $href);",
          "58:         self::assertSame($collectedJavaScripts['test']['attributes'], []);",
          "",
          "[Added Lines]",
          "46:         $context = $this->get(RenderingContextFactory::class)->create();",
          "47:         $context->getTemplatePaths()->setTemplateSource('<f:asset.css identifier=\"test\" href=\"' . $href . '\" priority=\"0\"/>');",
          "49:         (new TemplateView($context))->render();",
          "51:         $collectedStyleSheets = $this->get(AssetCollector::class)->getStyleSheets();",
          "52:         self::assertSame($href, $collectedStyleSheets['test']['source']);",
          "53:         self::assertSame([], $collectedStyleSheets['test']['attributes']);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "64:     public function booleanAttributesAreProperlyConverted(): void",
          "65:     {",
          "79:     }",
          "81:     public static function childNodeRenderingIsCorrectDataProvider(): array",
          "",
          "[Removed Lines]",
          "66:         $assetCollector = new AssetCollector();",
          "67:         $viewHelper = new CssViewHelper();",
          "68:         $viewHelper->injectAssetCollector($assetCollector);",
          "69:         $viewHelper->setArguments([",
          "70:             'identifier' => 'test',",
          "71:             'href' => 'my.css',",
          "72:             'disabled' => true,",
          "73:             'priority' => false,",
          "74:         ]);",
          "75:         $viewHelper->initializeArgumentsAndRender();",
          "76:         $collectedJavaScripts = $assetCollector->getStyleSheets();",
          "77:         self::assertSame($collectedJavaScripts['test']['source'], 'my.css');",
          "78:         self::assertSame($collectedJavaScripts['test']['attributes'], ['disabled' => 'disabled']);",
          "",
          "[Added Lines]",
          "61:         $context = $this->get(RenderingContextFactory::class)->create();",
          "62:         $context->getTemplatePaths()->setTemplateSource('<f:asset.css identifier=\"test\" href=\"my.css\" disabled=\"1\" priority=\"0\"/>');",
          "64:         (new TemplateView($context))->render();",
          "66:         $collectedStyleSheets = $this->get(AssetCollector::class)->getStyleSheets();",
          "67:         self::assertSame('my.css', $collectedStyleSheets['test']['source']);",
          "68:         self::assertSame(['disabled' => 'disabled'], $collectedStyleSheets['test']['attributes']);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "139:     public function childNodeRenderingIsCorrect(string $value, string $source, string $expectation): void",
          "140:     {",
          "151:     }",
          "152: }",
          "",
          "[Removed Lines]",
          "141:         $assetCollector = new AssetCollector();",
          "142:         GeneralUtility::setSingletonInstance(AssetCollector::class, $assetCollector);",
          "144:         $view = new StandaloneView();",
          "145:         $view->setTemplateSource(sprintf('<f:asset.css identifier=\"test\">%s</f:asset.css>', $source));",
          "146:         $view->assign('color', $value);",
          "147:         $view->render();",
          "148:         GeneralUtility::removeSingletonInstance(AssetCollector::class, $assetCollector);",
          "150:         self::assertSame($expectation, $assetCollector->getInlineStyleSheets()['test']['source']);",
          "",
          "[Added Lines]",
          "131:         $context = $this->get(RenderingContextFactory::class)->create();",
          "132:         $context->getTemplatePaths()->setTemplateSource('<f:asset.css identifier=\"test\">' . $source . '</f:asset.css>');",
          "133:         $context->getVariableProvider()->add('color', $value);",
          "135:         (new TemplateView($context))->render();",
          "137:         $collectedInlineStyleSheets = $this->get(AssetCollector::class)->getInlineStyleSheets();",
          "138:         self::assertSame($expectation, $collectedInlineStyleSheets['test']['source']);",
          "",
          "---------------"
        ],
        "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/ScriptViewHelperTest.php||typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/ScriptViewHelperTest.php": [
          "File: typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/ScriptViewHelperTest.php -> typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/ScriptViewHelperTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: namespace TYPO3\\CMS\\Fluid\\Tests\\Functional\\ViewHelpers\\Asset;",
          "20: use TYPO3\\CMS\\Core\\Page\\AssetCollector;",
          "22: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "24: class ScriptViewHelperTest extends FunctionalTestCase",
          "",
          "[Removed Lines]",
          "21: use TYPO3\\CMS\\Fluid\\ViewHelpers\\Asset\\ScriptViewHelper;",
          "",
          "[Added Lines]",
          "21: use TYPO3\\CMS\\Fluid\\Core\\Rendering\\RenderingContextFactory;",
          "22: use TYPO3\\CMS\\Fluid\\View\\TemplateView;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:     public function sourceStringIsNotHtmlEncodedBeforePassedToAssetCollector(string $src): void",
          "44:     {",
          "57:     }",
          "",
          "[Removed Lines]",
          "45:         $viewHelper = new ScriptViewHelper();",
          "46:         $assetCollector = new AssetCollector();",
          "47:         $viewHelper->injectAssetCollector($assetCollector);",
          "48:         $viewHelper->setArguments([",
          "49:             'identifier' => 'test',",
          "50:             'src' => $src,",
          "51:             'priority' => false,",
          "52:         ]);",
          "53:         $viewHelper->initializeArgumentsAndRender();",
          "54:         $collectedJavaScripts = $assetCollector->getJavaScripts();",
          "55:         self::assertSame($collectedJavaScripts['test']['source'], $src);",
          "56:         self::assertSame($collectedJavaScripts['test']['attributes'], []);",
          "",
          "[Added Lines]",
          "46:         $context = $this->get(RenderingContextFactory::class)->create();",
          "47:         $context->getTemplatePaths()->setTemplateSource('<f:asset.script identifier=\"test\" src=\"' . $src . '\" priority=\"0\"/>');",
          "49:         (new TemplateView($context))->render();",
          "51:         $collectedJavaScripts = $this->get(AssetCollector::class)->getJavaScripts();",
          "52:         self::assertSame($src, $collectedJavaScripts['test']['source']);",
          "53:         self::assertSame([], $collectedJavaScripts['test']['attributes']);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "62:     public function booleanAttributesAreProperlyConverted(): void",
          "63:     {",
          "77:         self::assertSame($collectedJavaScripts['test']['source'], 'my.js');",
          "78:         self::assertSame($collectedJavaScripts['test']['attributes'], ['async' => 'async', 'defer' => 'defer', 'nomodule' => 'nomodule']);",
          "79:     }",
          "",
          "[Removed Lines]",
          "64:         $viewHelper = new ScriptViewHelper();",
          "65:         $assetCollector = new AssetCollector();",
          "66:         $viewHelper->injectAssetCollector($assetCollector);",
          "67:         $viewHelper->setArguments([",
          "68:             'identifier' => 'test',",
          "69:             'src' => 'my.js',",
          "70:             'async' => true,",
          "71:             'defer' => true,",
          "72:             'nomodule' => true,",
          "73:             'priority' => false,",
          "74:         ]);",
          "75:         $viewHelper->initializeArgumentsAndRender();",
          "76:         $collectedJavaScripts = $assetCollector->getJavaScripts();",
          "",
          "[Added Lines]",
          "61:         $context = $this->get(RenderingContextFactory::class)->create();",
          "62:         $context->getTemplatePaths()->setTemplateSource('<f:asset.script identifier=\"test\" src=\"my.js\" async=\"1\" defer=\"1\" nomodule=\"1\" priority=\"0\"/>');",
          "64:         (new TemplateView($context))->render();",
          "66:         $collectedJavaScripts = $this->get(AssetCollector::class)->getJavaScripts();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ffb89e079266edea4f77a61331cef32b472c1ce1",
      "candidate_info": {
        "commit_hash": "ffb89e079266edea4f77a61331cef32b472c1ce1",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/ffb89e079266edea4f77a61331cef32b472c1ce1",
        "files": [
          "typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php",
          "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php"
        ],
        "message": "[SECURITY] Encode child node variables in f:asset.css view helper\n\nVariables in child nodes like `<f:asset.css>{value}</f:asset.css>`\nwere not encoded and allow cross-site scripting. In case values shall\nbe taken as is, corresponding `f:format.raw` instruction has to be used.\n\nResolves: #97900\nReleases: main, 11.5, 10.4\nChange-Id: Id843a41c42bbe1f74cdc4efbc117b24d20026b97\nSecurity-Bulletin: TYPO3-CORE-SA-2022-010\nSecurity-References: CVE-2022-36108\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/75707\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
        "before_after_code_files": [
          "typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php||typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php",
          "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php||typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php||typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php",
            "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php||typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php"
          ],
          "candidate": [
            "typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php||typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php",
            "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php||typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php||typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php": [
          "File: typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php -> typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "54:     protected $escapeChildren = false;",
          "",
          "[Added Lines]",
          "54:     protected $escapeChildren = true;",
          "",
          "---------------"
        ],
        "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php||typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php": [
          "File: typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php -> typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: namespace TYPO3\\CMS\\Fluid\\Tests\\Functional\\ViewHelpers\\Asset;",
          "20: use TYPO3\\CMS\\Core\\Page\\AssetCollector;",
          "21: use TYPO3\\CMS\\Fluid\\ViewHelpers\\Asset\\CssViewHelper;",
          "22: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "22: use TYPO3\\CMS\\Fluid\\View\\StandaloneView;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:         self::assertSame($collectedJavaScripts['test']['source'], 'my.css');",
          "83:         self::assertSame($collectedJavaScripts['test']['attributes'], ['disabled' => 'disabled']);",
          "84:     }",
          "85: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:     public static function childNodeRenderingIsCorrectDataProvider(): array",
          "89:     {",
          "90:         return [",
          "92:             'variable with double quotes is encoded' => [",
          "93:                 '</style>/* \" ', // variable value",
          "94:                 'body { color: #{color}; }', // inner template source",
          "95:                 'body { color: #&lt;/style&gt;/* &quot; ; }', // expectation",
          "96:             ],",
          "97:             'variable with double quotes is encoded in single quotes' => [",
          "98:                 '</style>/* \" ', // variable value",
          "99:                 'body { color: \\'#{color}\\'; }', // inner template source",
          "100:                 'body { color: \\'#&lt;/style&gt;/* &quot; \\'; }', // expectation",
          "101:             ],",
          "102:             'variable with double quotes is encoded in double quotes' => [",
          "103:                 '</style>/* \" ', // variable value",
          "104:                 'body { color: \"#{color}\"; }', // inner template source",
          "105:                 'body { color: \"#&lt;/style&gt;/* &quot; \"; }', // expectation",
          "106:             ],",
          "108:             'variable with single quotes is encoded' => [",
          "109:                 '</style>/* \\' ', // variable value",
          "110:                 'body { color: #{color}; }', // inner template source",
          "111:                 'body { color: #&lt;/style&gt;/* &#039; ; }', // expectation",
          "112:             ],",
          "113:             'variable with single quotes is encoded in single quotes' => [",
          "114:                 '</style>/* \\' ', // variable value",
          "115:                 'body { color: \\'#{color}\\'; }', // inner template source",
          "116:                 'body { color: \\'#&lt;/style&gt;/* &#039; \\'; }', // expectation",
          "117:             ],",
          "118:             'variable with single quotes is encoded in double quotes' => [",
          "119:                 '</style>/* \\' ', // variable value",
          "120:                 'body { color: \"#{color}\"; }', // inner template source",
          "121:                 'body { color: \"#&lt;/style&gt;/* &#039; \"; }', // expectation",
          "122:             ],",
          "124:             'raw instruction is passed' => [",
          "125:                 '</style>/* \" ',",
          "126:                 'body { color: #{color -> f:format.raw()}; }',",
          "127:                 'body { color: #</style>/* \" ; }',",
          "128:             ],",
          "129:             'raw instruction is passed in sigle quotes' => [",
          "130:                 '</style>/* \" ',",
          "131:                 'body { color: \\'#{color -> f:format.raw()}\\'; }',",
          "132:                 'body { color: \\'#</style>/* \" \\'; }',",
          "133:             ],",
          "134:             'raw instruction is passed in double quotes' => [",
          "135:                 '</style>/* \" ',",
          "136:                 'body { color: \"#{color -> f:format.raw()}\"; }',",
          "137:                 'body { color: \"#</style>/* \" \"; }',",
          "138:             ],",
          "139:         ];",
          "140:     }",
          "146:     public function childNodeRenderingIsCorrect(string $value, string $source, string $expectation): void",
          "147:     {",
          "148:         $assetCollector = new AssetCollector();",
          "149:         GeneralUtility::setSingletonInstance(AssetCollector::class, $assetCollector);",
          "151:         $view = new StandaloneView();",
          "152:         $view->setTemplateSource(sprintf('<f:asset.css identifier=\"test\">%s</f:asset.css>', $source));",
          "153:         $view->assign('color', $value);",
          "154:         $view->render();",
          "155:         GeneralUtility::removeSingletonInstance(AssetCollector::class, $assetCollector);",
          "157:         self::assertSame($expectation, $assetCollector->getInlineStyleSheets()['test']['source']);",
          "158:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c62e16fac031c270d9759c7261e504c7e25405df",
      "candidate_info": {
        "commit_hash": "c62e16fac031c270d9759c7261e504c7e25405df",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/c62e16fac031c270d9759c7261e504c7e25405df",
        "files": [
          "typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php",
          "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php"
        ],
        "message": "[SECURITY] Encode child node variables in f:asset.css view helper\n\nVariables in child nodes like `<f:asset.css>{value}</f:asset.css>`\nwere not encoded and allow cross-site scripting. In case values shall\nbe taken as is, corresponding `f:format.raw` instruction has to be used.\n\nResolves: #97900\nReleases: main, 11.5, 10.4\nChange-Id: Id843a41c42bbe1f74cdc4efbc117b24d20026b97\nSecurity-Bulletin: TYPO3-CORE-SA-2022-010\nSecurity-References: CVE-2022-36108\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/75713\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
        "before_after_code_files": [
          "typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php||typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php",
          "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php||typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php||typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php",
            "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php||typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php"
          ],
          "candidate": [
            "typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php||typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php",
            "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php||typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php||typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php": [
          "File: typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php -> typo3/sysext/fluid/Classes/ViewHelpers/Asset/CssViewHelper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "54:     protected $escapeChildren = false;",
          "",
          "[Added Lines]",
          "54:     protected $escapeChildren = true;",
          "",
          "---------------"
        ],
        "typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php||typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php": [
          "File: typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php -> typo3/sysext/fluid/Tests/Functional/ViewHelpers/Asset/CssViewHelperTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: namespace TYPO3\\CMS\\Fluid\\Tests\\Functional\\ViewHelpers\\Asset;",
          "20: use TYPO3\\CMS\\Core\\Page\\AssetCollector;",
          "21: use TYPO3\\CMS\\Fluid\\ViewHelpers\\Asset\\CssViewHelper;",
          "22: use TYPO3\\TestingFramework\\Core\\Functional\\FunctionalTestCase;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "22: use TYPO3\\CMS\\Fluid\\View\\StandaloneView;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:         self::assertSame($collectedJavaScripts['test']['source'], 'my.css');",
          "83:         self::assertSame($collectedJavaScripts['test']['attributes'], ['disabled' => 'disabled']);",
          "84:     }",
          "85: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:     public static function childNodeRenderingIsCorrectDataProvider(): array",
          "89:     {",
          "90:         return [",
          "92:             'variable with double quotes is encoded' => [",
          "93:                 '</style>/* \" ', // variable value",
          "94:                 'body { color: #{color}; }', // inner template source",
          "95:                 'body { color: #&lt;/style&gt;/* &quot; ; }', // expectation",
          "96:             ],",
          "97:             'variable with double quotes is encoded in single quotes' => [",
          "98:                 '</style>/* \" ', // variable value",
          "99:                 'body { color: \\'#{color}\\'; }', // inner template source",
          "100:                 'body { color: \\'#&lt;/style&gt;/* &quot; \\'; }', // expectation",
          "101:             ],",
          "102:             'variable with double quotes is encoded in double quotes' => [",
          "103:                 '</style>/* \" ', // variable value",
          "104:                 'body { color: \"#{color}\"; }', // inner template source",
          "105:                 'body { color: \"#&lt;/style&gt;/* &quot; \"; }', // expectation",
          "106:             ],",
          "108:             'variable with single quotes is encoded' => [",
          "109:                 '</style>/* \\' ', // variable value",
          "110:                 'body { color: #{color}; }', // inner template source",
          "111:                 'body { color: #&lt;/style&gt;/* &#039; ; }', // expectation",
          "112:             ],",
          "113:             'variable with single quotes is encoded in single quotes' => [",
          "114:                 '</style>/* \\' ', // variable value",
          "115:                 'body { color: \\'#{color}\\'; }', // inner template source",
          "116:                 'body { color: \\'#&lt;/style&gt;/* &#039; \\'; }', // expectation",
          "117:             ],",
          "118:             'variable with single quotes is encoded in double quotes' => [",
          "119:                 '</style>/* \\' ', // variable value",
          "120:                 'body { color: \"#{color}\"; }', // inner template source",
          "121:                 'body { color: \"#&lt;/style&gt;/* &#039; \"; }', // expectation",
          "122:             ],",
          "124:             'raw instruction is passed' => [",
          "125:                 '</style>/* \" ',",
          "126:                 'body { color: #{color -> f:format.raw()}; }',",
          "127:                 'body { color: #</style>/* \" ; }',",
          "128:             ],",
          "129:             'raw instruction is passed in sigle quotes' => [",
          "130:                 '</style>/* \" ',",
          "131:                 'body { color: \\'#{color -> f:format.raw()}\\'; }',",
          "132:                 'body { color: \\'#</style>/* \" \\'; }',",
          "133:             ],",
          "134:             'raw instruction is passed in double quotes' => [",
          "135:                 '</style>/* \" ',",
          "136:                 'body { color: \"#{color -> f:format.raw()}\"; }',",
          "137:                 'body { color: \"#</style>/* \" \"; }',",
          "138:             ],",
          "139:         ];",
          "140:     }",
          "146:     public function childNodeRenderingIsCorrect(string $value, string $source, string $expectation): void",
          "147:     {",
          "148:         $assetCollector = new AssetCollector();",
          "149:         GeneralUtility::setSingletonInstance(AssetCollector::class, $assetCollector);",
          "151:         $view = new StandaloneView();",
          "152:         $view->setTemplateSource(sprintf('<f:asset.css identifier=\"test\">%s</f:asset.css>', $source));",
          "153:         $view->assign('color', $value);",
          "154:         $view->render();",
          "155:         GeneralUtility::removeSingletonInstance(AssetCollector::class, $assetCollector);",
          "157:         self::assertSame($expectation, $assetCollector->getInlineStyleSheets()['test']['source']);",
          "158:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}