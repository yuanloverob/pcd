{
  "cve_id": "CVE-2020-27589",
  "cve_desc": "Synopsys hub-rest-api-python (aka blackduck on PyPI) version 0.0.25 - 0.0.52 does not validate SSL certificates in certain cases.",
  "repo": "blackducksoftware/hub-rest-api-python",
  "patch_hash": "273b27d0de1004389dd8cf43c40b1197c787e7cd",
  "patch_info": {
    "commit_hash": "273b27d0de1004389dd8cf43c40b1197c787e7cd",
    "repo": "blackducksoftware/hub-rest-api-python",
    "commit_url": "https://github.com/blackducksoftware/hub-rest-api-python/commit/273b27d0de1004389dd8cf43c40b1197c787e7cd",
    "files": [
      "blackduck/HubRestApi.py",
      "blackduck/__version__.py"
    ],
    "message": "fixed use of hard-coded values for the verify parameter being supplied to the requests module calls",
    "before_after_code_files": [
      "blackduck/HubRestApi.py||blackduck/HubRestApi.py",
      "blackduck/__version__.py||blackduck/__version__.py"
    ]
  },
  "patch_diff": {
    "blackduck/HubRestApi.py||blackduck/HubRestApi.py": [
      "File: blackduck/HubRestApi.py -> blackduck/HubRestApi.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "1307:         if filename.endswith('.json') or filename.endswith('.jsonld'):",
      "1308:             headers['Content-Type'] = 'application/ld+json'",
      "1309:             with open(filename,\"r\") as f:",
      "1311:         elif filename.endswith('.bdio'):",
      "1312:             headers['Content-Type'] = 'application/vnd.blackducksoftware.bdio+zip'",
      "1313:             with open(filename,\"rb\") as f:",
      "1315:         else:",
      "1316:             raise Exception(\"Unkown file type\")",
      "1317:         return response",
      "",
      "[Removed Lines]",
      "1310:                 response = requests.post(url, headers=headers, data=f, verify=False)",
      "1314:                 response = requests.post(url, headers=headers, data=f, verify=False)",
      "",
      "[Added Lines]",
      "1310:                 response = requests.post(url, headers=headers, data=f, verify=not self.config['insecure'])",
      "1314:                 response = requests.post(url, headers=headers, data=f, verify=not self.config['insecure'])",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1338:                     if not os.path.exists(project_name):",
      "1339:                         os.mkdir(project_name)",
      "1340:                     pathname = os.path.join(project_name, filename)",
      "1342:                 with open(pathname, \"wb\") as f:",
      "1343:                     for data in responce.iter_content():",
      "1344:                         f.write(data)",
      "",
      "[Removed Lines]",
      "1341:                 responce = requests.get(url, headers=self.get_headers(), stream=True, verify=False)",
      "",
      "[Added Lines]",
      "1341:                 responce = requests.get(url, headers=self.get_headers(), stream=True, verify=not self.config['insecure'])",
      "",
      "---------------"
    ],
    "blackduck/__version__.py||blackduck/__version__.py": [
      "File: blackduck/__version__.py -> blackduck/__version__.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: __version__ = '.'.join(map(str, VERSION))",
      "",
      "[Removed Lines]",
      "1: VERSION = (0, 0, 52)",
      "",
      "[Added Lines]",
      "1: VERSION = (0, 0, 53)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4cf221bb1b3c0155a807eb53fa722012877014ea",
      "candidate_info": {
        "commit_hash": "4cf221bb1b3c0155a807eb53fa722012877014ea",
        "repo": "blackducksoftware/hub-rest-api-python",
        "commit_url": "https://github.com/blackducksoftware/hub-rest-api-python/commit/4cf221bb1b3c0155a807eb53fa722012877014ea",
        "files": [
          "blackduck/HubRestApi.py",
          "blackduck/__version__.py",
          "examples/generate_notices_report_for_project_version.py"
        ],
        "message": "adding support for invoking the option to include (or exclude) additional copyright information from the Black Duck KB",
        "before_after_code_files": [
          "blackduck/HubRestApi.py||blackduck/HubRestApi.py",
          "blackduck/__version__.py||blackduck/__version__.py",
          "examples/generate_notices_report_for_project_version.py||examples/generate_notices_report_for_project_version.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "blackduck/HubRestApi.py||blackduck/HubRestApi.py",
            "blackduck/__version__.py||blackduck/__version__.py"
          ],
          "candidate": [
            "blackduck/HubRestApi.py||blackduck/HubRestApi.py",
            "blackduck/__version__.py||blackduck/__version__.py"
          ]
        }
      },
      "candidate_diff": {
        "blackduck/HubRestApi.py||blackduck/HubRestApi.py": [
          "File: blackduck/HubRestApi.py -> blackduck/HubRestApi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "560:         return self.execute_post(version_reports_url, post_data)",
          "562:     valid_notices_formats = [\"TEXT\", \"JSON\"]",
          "564:         assert format in HubInstance.valid_notices_formats, \"Format must be one of {}\".format(HubInstance.valid_notices_formats)",
          "566:         post_data = {",
          "569:             'reportType': 'VERSION_LICENSE',",
          "570:             'reportFormat': format",
          "571:         }",
          "572:         notices_report_url = self.get_link(version, 'licenseReports')",
          "573:         return self.execute_post(notices_report_url, post_data)",
          "",
          "[Removed Lines]",
          "563:     def create_version_notices_report(self, version, format=\"TEXT\"):",
          "567:             'categories': [\"COPYRIGHT_TEXT\"],",
          "568:             'versionId': version['_meta']['href'].split(\"/\")[-1],",
          "",
          "[Added Lines]",
          "563:     def create_version_notices_report(self, version, format=\"TEXT\", include_copyright_info=True):",
          "567:             'versionId': object_id(version),",
          "571:         if include_copyright_info:",
          "572:             post_data.update({'categories': [\"COPYRIGHT_TEXT\"] })",
          "",
          "---------------"
        ],
        "blackduck/__version__.py||blackduck/__version__.py": [
          "File: blackduck/__version__.py -> blackduck/__version__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: __version__ = '.'.join(map(str, VERSION))",
          "",
          "[Removed Lines]",
          "1: VERSION = (0, 0, 53)",
          "",
          "[Added Lines]",
          "1: VERSION = (0, 0, 54)",
          "",
          "---------------"
        ],
        "examples/generate_notices_report_for_project_version.py||examples/generate_notices_report_for_project_version.py": [
          "File: examples/generate_notices_report_for_project_version.py -> examples/generate_notices_report_for_project_version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: parser.add_argument('-f', \"--file_name_base\", default=\"notices_report\", help=\"Base file name to write the report data into. If the report format is TEXT a .zip file will be created, otherwise a .json file\")",
          "25: parser.add_argument('-r', '--report_format', default='TEXT', choices=[\"JSON\", \"TEXT\"], help=\"Report format - choices are TEXT or HTML\")",
          "27: args = parser.parse_args()",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: parser.add_argument('-c', '--include_copyright_info', action='store_true', help=\"Set this option to have additional copyright information from the Black Duck KB included in the notices file report.\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "66: if project:",
          "67:  version = hub.get_version_by_name(project, args.version_name)",
          "71:  if response.status_code == 201:",
          "72:   logging.info(\"Successfully created notices report in {} format for project {} and version {}\".format(",
          "",
          "[Removed Lines]",
          "69:  response = hub.create_version_notices_report(version, args.report_format)",
          "",
          "[Added Lines]",
          "70:  response = hub.create_version_notices_report(version, args.report_format, include_copyright_info=args.include_copyright_info)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d4196beb0c70345daa6fed60f27e83210d14e288",
      "candidate_info": {
        "commit_hash": "d4196beb0c70345daa6fed60f27e83210d14e288",
        "repo": "blackducksoftware/hub-rest-api-python",
        "commit_url": "https://github.com/blackducksoftware/hub-rest-api-python/commit/d4196beb0c70345daa6fed60f27e83210d14e288",
        "files": [
          "blackduck/HubRestApi.py",
          "blackduck/Projects.py",
          "blackduck/Reporting.py",
          "blackduck/__version__.py",
          "requirements.txt",
          "test/test_results/v1.0.0-unit-tests.html"
        ],
        "message": "adding unit test results; fixing some bugs found during regression testing",
        "before_after_code_files": [
          "blackduck/HubRestApi.py||blackduck/HubRestApi.py",
          "blackduck/Projects.py||blackduck/Projects.py",
          "blackduck/Reporting.py||blackduck/Reporting.py",
          "blackduck/__version__.py||blackduck/__version__.py",
          "test/test_results/v1.0.0-unit-tests.html||test/test_results/v1.0.0-unit-tests.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "blackduck/HubRestApi.py||blackduck/HubRestApi.py",
            "blackduck/__version__.py||blackduck/__version__.py"
          ],
          "candidate": [
            "blackduck/HubRestApi.py||blackduck/HubRestApi.py",
            "blackduck/__version__.py||blackduck/__version__.py"
          ]
        }
      },
      "candidate_diff": {
        "blackduck/HubRestApi.py||blackduck/HubRestApi.py": [
          "File: blackduck/HubRestApi.py -> blackduck/HubRestApi.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "61:     '''",
          "62:     classdocs",
          "63:     '''",
          "64:     VERSION_DISTRIBUTION=[\"EXTERNAL\", \"SAAS\", \"INTERNAL\", \"OPENSOURCE\"]",
          "65:     VERSION_PHASES = [\"PLANNING\", \"DEVELOPMENT\", \"PRERELEASE\", \"RELEASED\", \"DEPRECATED\", \"ARCHIVED\"]",
          "66:     PROJECT_VERSION_SETTINGS = ['nickname', 'releaseComments', 'versionName', 'phase', 'distribution', 'releasedOn']",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "65:     # TODO: For now leaving these here (even though they are copied to Clients.py and Projects.py)",
          "66:     #       because code in examples and presumably consumers of the library may be referencing these",
          "67:     #",
          "",
          "---------------"
        ],
        "blackduck/Projects.py||blackduck/Projects.py": [
          "File: blackduck/Projects.py -> blackduck/Projects.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: logger = logging.getLogger(__name__)",
          "9: def _get_projects_url(self):",
          "10:     return self.get_urlbase() + \"/api/projects\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9: VERSION_DISTRIBUTION=[\"EXTERNAL\", \"SAAS\", \"INTERNAL\", \"OPENSOURCE\"]",
          "10: VERSION_PHASES = [\"PLANNING\", \"DEVELOPMENT\", \"PRERELEASE\", \"RELEASED\", \"DEPRECATED\", \"ARCHIVED\"]",
          "11: PROJECT_VERSION_SETTINGS = ['nickname', 'releaseComments', 'versionName', 'phase', 'distribution', 'releasedOn']",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:     url = self.get_link(project_obj, \"versions\")",
          "49:     version_phase = parameters.get(\"phase\", \"PLANNING\")",
          "51:         raise InvalidVersionPhase(\"The phase given {} is not in the list of valid phases ({})\".format(",
          "54:     post_data = {",
          "55:         \"versionUrl\": url,",
          "",
          "[Removed Lines]",
          "50:     if version_phase not in HubInstance.VERSION_PHASES:",
          "52:             version_phase, HubInstance.VERSION_PHASES))",
          "",
          "[Added Lines]",
          "54:     if version_phase not in VERSION_PHASES:",
          "56:             version_phase, VERSION_PHASES))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "169:     if version:",
          "170:         for k,v in new_settings.items():",
          "172:                 logger.debug(\"updating setting {} in version {} with value {}\".format(",
          "173:                     k, version['versionName'], v))",
          "174:                 version[k] = v",
          "175:             else:",
          "176:                 logger.warn(\"Setting {} is not in the list of project version settings ({})\".format(",
          "179:         url = version['_meta']['href']",
          "",
          "[Removed Lines]",
          "171:             if k in HubInstance.PROJECT_VERSION_SETTINGS:",
          "177:                     k, HubInstance.PROJECT_VERSION_SETTINGS))",
          "",
          "[Added Lines]",
          "175:             if k in PROJECT_VERSION_SETTINGS:",
          "181:                     k, PROJECT_VERSION_SETTINGS))",
          "",
          "---------------"
        ],
        "blackduck/Reporting.py||blackduck/Reporting.py": [
          "File: blackduck/Reporting.py -> blackduck/Reporting.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: valid_categories = ['VERSION','CODE_LOCATIONS','COMPONENTS','SECURITY','FILES', 'ATTACHMENTS', 'CRYPTO_ALGORITHMS', 'PROJECT_VERSION_CUSTOM_FIELDS', 'BOM_COMPONENT_CUSTOM_FIELDS', 'LICENSE_TERM_FULFILLMENT']",
          "10: valid_report_formats = [\"CSV\", \"JSON\"]",
          "11: def create_version_reports(self, version, report_list, format=\"CSV\"):",
          "16:     post_data = {",
          "17:         'categories': report_list,",
          "",
          "[Removed Lines]",
          "12:     assert all(list(map(lambda k: k in HubInstance.valid_categories, report_list))), \"One or more selected report categories in {} are not valid ({})\".format(",
          "13:         report_list, HubInstance.valid_categories)",
          "14:     assert format in HubInstance.valid_report_formats, \"Format must be one of {}\".format(HubInstance.valid_report_formats)",
          "",
          "[Added Lines]",
          "12:     assert all(list(map(lambda k: k in valid_categories, report_list))), \"One or more selected report categories in {} are not valid ({})\".format(",
          "13:         report_list, valid_categories)",
          "14:     assert format in valid_report_formats, \"Format must be one of {}\".format(valid_report_formats)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25: valid_notices_formats = [\"TEXT\", \"JSON\"]",
          "26: def create_version_notices_report(self, version, format=\"TEXT\", include_copyright_info=True):",
          "29:     post_data = {",
          "30:         'versionId': object_id(version),",
          "",
          "[Removed Lines]",
          "27:     assert format in HubInstance.valid_notices_formats, \"Format must be one of {}\".format(HubInstance.valid_notices_formats)",
          "",
          "[Added Lines]",
          "27:     assert format in valid_notices_formats, \"Format must be one of {}\".format(valid_notices_formats)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "67: ##",
          "68: valid_vuln_status_report_formats = [\"CSV\", \"JSON\"]",
          "69: def create_vuln_status_report(self, format=\"CSV\"):",
          "72:     post_data = {",
          "73:         \"reportFormat\": format,",
          "",
          "[Removed Lines]",
          "70:     assert format in HubInstance.valid_vuln_status_report_formats, \"Format must be one of {}\".format(HubInstance.valid_vuln_status_report_formats)",
          "",
          "[Added Lines]",
          "70:     assert format in valid_vuln_status_report_formats, \"Format must be one of {}\".format(valid_vuln_status_report_formats)",
          "",
          "---------------"
        ],
        "blackduck/__version__.py||blackduck/__version__.py": [
          "File: blackduck/__version__.py -> blackduck/__version__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: __version__ = '.'.join(map(str, VERSION))",
          "",
          "[Removed Lines]",
          "1: VERSION = (0, 0, 56)",
          "",
          "[Added Lines]",
          "1: VERSION = (1, 0, 0)",
          "",
          "---------------"
        ],
        "test/test_results/v1.0.0-unit-tests.html||test/test_results/v1.0.0-unit-tests.html": [
          "File: test/test_results/v1.0.0-unit-tests.html -> test/test_results/v1.0.0-unit-tests.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <!DOCTYPE html>",
          "2: <html>",
          "3:   <head>",
          "4:     <meta charset=\"utf-8\"/>",
          "5:     <title>Test Report</title>",
          "6:     <style>body {",
          "7:   font-family: Helvetica, Arial, sans-serif;",
          "8:   font-size: 12px;",
          "10:   min-width: 800px;",
          "11:   color: #999;",
          "12: }",
          "14: h1 {",
          "15:   font-size: 24px;",
          "16:   color: black;",
          "17: }",
          "19: h2 {",
          "20:   font-size: 16px;",
          "21:   color: black;",
          "22: }",
          "24: p {",
          "25:   color: black;",
          "26: }",
          "28: a {",
          "29:   color: #999;",
          "30: }",
          "32: table {",
          "33:   border-collapse: collapse;",
          "34: }",
          "39: #environment td {",
          "40:   padding: 5px;",
          "41:   border: 1px solid #E6E6E6;",
          "42: }",
          "43: #environment tr:nth-child(odd) {",
          "44:   background-color: #f6f6f6;",
          "45: }",
          "50: span.passed,",
          "51: .passed .col-result {",
          "52:   color: green;",
          "53: }",
          "55: span.skipped,",
          "56: span.xfailed,",
          "57: span.rerun,",
          "58: .skipped .col-result,",
          "59: .xfailed .col-result,",
          "60: .rerun .col-result {",
          "61:   color: orange;",
          "62: }",
          "64: span.error,",
          "65: span.failed,",
          "66: span.xpassed,",
          "67: .error .col-result,",
          "68: .failed .col-result,",
          "69: .xpassed .col-result {",
          "70:   color: red;",
          "71: }",
          "84: #results-table {",
          "85:   border: 1px solid #e6e6e6;",
          "86:   color: #999;",
          "87:   font-size: 12px;",
          "88:   width: 100%;",
          "89: }",
          "90: #results-table th,",
          "91: #results-table td {",
          "92:   padding: 5px;",
          "93:   border: 1px solid #E6E6E6;",
          "94:   text-align: left;",
          "95: }",
          "96: #results-table th {",
          "97:   font-weight: bold;",
          "98: }",
          "103: .log {",
          "104:   background-color: #e6e6e6;",
          "105:   border: 1px solid #e6e6e6;",
          "106:   color: black;",
          "107:   display: block;",
          "108:   font-family: \"Courier New\", Courier, monospace;",
          "109:   height: 230px;",
          "110:   overflow-y: scroll;",
          "111:   padding: 5px;",
          "112:   white-space: pre-wrap;",
          "113: }",
          "114: .log:only-child {",
          "115:   height: inherit;",
          "116: }",
          "118: div.image {",
          "119:   border: 1px solid #e6e6e6;",
          "120:   float: right;",
          "121:   height: 240px;",
          "122:   margin-left: 5px;",
          "123:   overflow: hidden;",
          "124:   width: 320px;",
          "125: }",
          "126: div.image img {",
          "127:   width: 320px;",
          "128: }",
          "130: div.video {",
          "131:   border: 1px solid #e6e6e6;",
          "132:   float: right;",
          "133:   height: 240px;",
          "134:   margin-left: 5px;",
          "135:   overflow: hidden;",
          "136:   width: 320px;",
          "137: }",
          "138: div.video video {",
          "139:   overflow: hidden;",
          "140:   width: 320px;",
          "141:   height: 240px;",
          "142: }",
          "144: .collapsed {",
          "145:   display: none;",
          "146: }",
          "148: .expander::after {",
          "149:   content: \" (show details)\";",
          "150:   color: #BBB;",
          "151:   font-style: italic;",
          "152:   cursor: pointer;",
          "153: }",
          "155: .collapser::after {",
          "156:   content: \" (hide details)\";",
          "157:   color: #BBB;",
          "158:   font-style: italic;",
          "159:   cursor: pointer;",
          "160: }",
          "165: .sortable {",
          "166:   cursor: pointer;",
          "167: }",
          "169: .sort-icon {",
          "170:   font-size: 0px;",
          "171:   float: left;",
          "172:   margin-right: 5px;",
          "173:   margin-top: 5px;",
          "175:   width: 0;",
          "176:   height: 0;",
          "177:   border-left: 8px solid transparent;",
          "178:   border-right: 8px solid transparent;",
          "179: }",
          "180: .inactive .sort-icon {",
          "182:   border-top: 8px solid #E6E6E6;",
          "183: }",
          "184: .asc.active .sort-icon {",
          "186:   border-bottom: 8px solid #999;",
          "187: }",
          "188: .desc.active .sort-icon {",
          "190:   border-top: 8px solid #999;",
          "191: }",
          "192: </style></head>",
          "193:   <body onLoad=\"init()\">",
          "194:     <script>/* This Source Code Form is subject to the terms of the Mozilla Public",
          "199: function toArray(iter) {",
          "200:     if (iter === null) {",
          "201:         return null;",
          "202:     }",
          "203:     return Array.prototype.slice.call(iter);",
          "204: }",
          "206: function find(selector, elem) { // eslint-disable-line no-redeclare",
          "207:     if (!elem) {",
          "208:         elem = document;",
          "209:     }",
          "210:     return elem.querySelector(selector);",
          "211: }",
          "213: function findAll(selector, elem) {",
          "214:     if (!elem) {",
          "215:         elem = document;",
          "216:     }",
          "217:     return toArray(elem.querySelectorAll(selector));",
          "218: }",
          "220: function sortColumn(elem) {",
          "221:     toggleSortStates(elem);",
          "222:     const colIndex = toArray(elem.parentNode.childNodes).indexOf(elem);",
          "223:     let key;",
          "224:     if (elem.classList.contains('result')) {",
          "225:         key = keyResult;",
          "226:     } else if (elem.classList.contains('links')) {",
          "227:         key = keyLink;",
          "228:     } else {",
          "229:         key = keyAlpha;",
          "230:     }",
          "231:     sortTable(elem, key(colIndex));",
          "232: }",
          "234: function showAllExtras() { // eslint-disable-line no-unused-vars",
          "235:     findAll('.col-result').forEach(showExtras);",
          "236: }",
          "238: function hideAllExtras() { // eslint-disable-line no-unused-vars",
          "239:     findAll('.col-result').forEach(hideExtras);",
          "240: }",
          "242: function showExtras(colresultElem) {",
          "243:     const extras = colresultElem.parentNode.nextElementSibling;",
          "244:     const expandcollapse = colresultElem.firstElementChild;",
          "245:     extras.classList.remove('collapsed');",
          "246:     expandcollapse.classList.remove('expander');",
          "247:     expandcollapse.classList.add('collapser');",
          "248: }",
          "250: function hideExtras(colresultElem) {",
          "251:     const extras = colresultElem.parentNode.nextElementSibling;",
          "252:     const expandcollapse = colresultElem.firstElementChild;",
          "253:     extras.classList.add('collapsed');",
          "254:     expandcollapse.classList.remove('collapser');",
          "255:     expandcollapse.classList.add('expander');",
          "256: }",
          "258: function showFilters() {",
          "259:     const filterItems = document.getElementsByClassName('filter');",
          "260:     for (let i = 0; i < filterItems.length; i++)",
          "261:         filterItems[i].hidden = false;",
          "262: }",
          "264: function addCollapse() {",
          "266:     const resulttable = find('table#results-table');",
          "267:     const showhideall = document.createElement('p');",
          "268:     showhideall.innerHTML = '<a href=\"javascript:showAllExtras()\">Show all details</a> / ' +",
          "269:                             '<a href=\"javascript:hideAllExtras()\">Hide all details</a>';",
          "270:     resulttable.parentElement.insertBefore(showhideall, resulttable);",
          "273:     findAll('.col-result').forEach(function(elem) {",
          "274:         const collapsed = getQueryParameter('collapsed') || 'Passed';",
          "275:         const extras = elem.parentNode.nextElementSibling;",
          "276:         const expandcollapse = document.createElement('span');",
          "277:         if (extras.classList.contains('collapsed')) {",
          "278:             expandcollapse.classList.add('expander');",
          "279:         } else if (collapsed.includes(elem.innerHTML)) {",
          "280:             extras.classList.add('collapsed');",
          "281:             expandcollapse.classList.add('expander');",
          "282:         } else {",
          "283:             expandcollapse.classList.add('collapser');",
          "284:         }",
          "285:         elem.appendChild(expandcollapse);",
          "287:         elem.addEventListener('click', function(event) {",
          "288:             if (event.currentTarget.parentNode.nextElementSibling.classList.contains('collapsed')) {",
          "289:                 showExtras(event.currentTarget);",
          "290:             } else {",
          "291:                 hideExtras(event.currentTarget);",
          "292:             }",
          "293:         });",
          "294:     });",
          "295: }",
          "297: function getQueryParameter(name) {",
          "298:     const match = RegExp('[?&]' + name + '=([^&]*)').exec(window.location.search);",
          "299:     return match && decodeURIComponent(match[1].replace(/\\+/g, ' '));",
          "300: }",
          "302: function init () { // eslint-disable-line no-unused-vars",
          "303:     resetSortHeaders();",
          "305:     addCollapse();",
          "307:     showFilters();",
          "309:     sortColumn(find('.initial-sort'));",
          "311:     findAll('.sortable').forEach(function(elem) {",
          "312:         elem.addEventListener('click',",
          "313:             function() {",
          "314:                 sortColumn(elem);",
          "315:             }, false);",
          "316:     });",
          "317: }",
          "319: function sortTable(clicked, keyFunc) {",
          "320:     const rows = findAll('.results-table-row');",
          "321:     const reversed = !clicked.classList.contains('asc');",
          "322:     const sortedRows = sort(rows, keyFunc, reversed);",
          "326:     const thead = document.getElementById('results-table-head');",
          "327:     document.getElementById('results-table').remove();",
          "328:     const parent = document.createElement('table');",
          "329:     parent.id = 'results-table';",
          "330:     parent.appendChild(thead);",
          "331:     sortedRows.forEach(function(elem) {",
          "332:         parent.appendChild(elem);",
          "333:     });",
          "334:     document.getElementsByTagName('BODY')[0].appendChild(parent);",
          "335: }",
          "337: function sort(items, keyFunc, reversed) {",
          "338:     const sortArray = items.map(function(item, i) {",
          "339:         return [keyFunc(item), i];",
          "340:     });",
          "342:     sortArray.sort(function(a, b) {",
          "343:         const keyA = a[0];",
          "344:         const keyB = b[0];",
          "346:         if (keyA == keyB) return 0;",
          "348:         if (reversed) {",
          "349:             return keyA < keyB ? 1 : -1;",
          "350:         } else {",
          "351:             return keyA > keyB ? 1 : -1;",
          "352:         }",
          "353:     });",
          "355:     return sortArray.map(function(item) {",
          "356:         const index = item[1];",
          "357:         return items[index];",
          "358:     });",
          "359: }",
          "361: function keyAlpha(colIndex) {",
          "362:     return function(elem) {",
          "363:         return elem.childNodes[1].childNodes[colIndex].firstChild.data.toLowerCase();",
          "364:     };",
          "365: }",
          "367: function keyLink(colIndex) {",
          "368:     return function(elem) {",
          "369:         const dataCell = elem.childNodes[1].childNodes[colIndex].firstChild;",
          "370:         return dataCell == null ? '' : dataCell.innerText.toLowerCase();",
          "371:     };",
          "372: }",
          "374: function keyResult(colIndex) {",
          "375:     return function(elem) {",
          "376:         const strings = ['Error', 'Failed', 'Rerun', 'XFailed', 'XPassed',",
          "377:             'Skipped', 'Passed'];",
          "378:         return strings.indexOf(elem.childNodes[1].childNodes[colIndex].firstChild.data);",
          "379:     };",
          "380: }",
          "382: function resetSortHeaders() {",
          "383:     findAll('.sort-icon').forEach(function(elem) {",
          "384:         elem.parentNode.removeChild(elem);",
          "385:     });",
          "386:     findAll('.sortable').forEach(function(elem) {",
          "387:         const icon = document.createElement('div');",
          "388:         icon.className = 'sort-icon';",
          "389:         icon.textContent = 'vvv';",
          "390:         elem.insertBefore(icon, elem.firstChild);",
          "391:         elem.classList.remove('desc', 'active');",
          "392:         elem.classList.add('asc', 'inactive');",
          "393:     });",
          "394: }",
          "396: function toggleSortStates(elem) {",
          "398:     if (elem.classList.contains('active')) {",
          "399:         elem.classList.toggle('asc');",
          "400:         elem.classList.toggle('desc');",
          "401:     }",
          "404:     if (elem.classList.contains('inactive')) {",
          "405:         resetSortHeaders();",
          "406:         elem.classList.remove('inactive');",
          "407:         elem.classList.add('active');",
          "408:     }",
          "409: }",
          "411: function isAllRowsHidden(value) {",
          "412:     return value.hidden == false;",
          "413: }",
          "415: function filterTable(elem) { // eslint-disable-line no-unused-vars",
          "416:     const outcomeAtt = 'data-test-result';",
          "417:     const outcome = elem.getAttribute(outcomeAtt);",
          "418:     const classOutcome = outcome + ' results-table-row';",
          "419:     const outcomeRows = document.getElementsByClassName(classOutcome);",
          "421:     for(let i = 0; i < outcomeRows.length; i++){",
          "422:         outcomeRows[i].hidden = !elem.checked;",
          "423:     }",
          "425:     const rows = findAll('.results-table-row').filter(isAllRowsHidden);",
          "426:     const allRowsHidden = rows.length == 0 ? true : false;",
          "427:     const notFoundMessage = document.getElementById('not-found-message');",
          "428:     notFoundMessage.hidden = !allRowsHidden;",
          "429: }",
          "430: </script>",
          "431:     <h1>v1.0.0-unit-tests.html</h1>",
          "432:     <p>Report generated on 27-Mar-2021 at 09:53:29 by <a href=\"https://pypi.python.org/pypi/pytest-html\">pytest-html</a> v3.1.1</p>",
          "433:     <h2>Environment</h2>",
          "434:     <table id=\"environment\">",
          "435:       <tr>",
          "436:         <td>JAVA_HOME</td>",
          "437:         <td>/Library/Java/JavaVirtualMachines/jdk-11.0.8.jdk/Contents/Home</td></tr>",
          "438:       <tr>",
          "439:         <td>Packages</td>",
          "440:         <td>{\"pluggy\": \"0.13.1\", \"py\": \"1.10.0\", \"pytest\": \"6.2.2\"}</td></tr>",
          "441:       <tr>",
          "442:         <td>Platform</td>",
          "443:         <td>macOS-10.15.7-x86_64-i386-64bit</td></tr>",
          "444:       <tr>",
          "445:         <td>Plugins</td>",
          "446:         <td>{\"datadir\": \"1.3.1\", \"html\": \"3.1.1\", \"metadata\": \"1.11.0\", \"requests-mock\": \"1.8.0\"}</td></tr>",
          "447:       <tr>",
          "448:         <td>Python</td>",
          "449:         <td>3.9.1</td></tr></table>",
          "450:     <h2>Summary</h2>",
          "451:     <p>42 tests ran in 0.46 seconds. </p>",
          "452:     <p class=\"filter\" hidden=\"true\">(Un)check the boxes to filter the results.</p><input checked=\"true\" class=\"filter\" data-test-result=\"passed\" hidden=\"true\" name=\"filter_checkbox\" onChange=\"filterTable(this)\" type=\"checkbox\"/><span class=\"passed\">42 passed</span>, <input checked=\"true\" class=\"filter\" data-test-result=\"skipped\" disabled=\"true\" hidden=\"true\" name=\"filter_checkbox\" onChange=\"filterTable(this)\" type=\"checkbox\"/><span class=\"skipped\">0 skipped</span>, <input checked=\"true\" class=\"filter\" data-test-result=\"failed\" disabled=\"true\" hidden=\"true\" name=\"filter_checkbox\" onChange=\"filterTable(this)\" type=\"checkbox\"/><span class=\"failed\">0 failed</span>, <input checked=\"true\" class=\"filter\" data-test-result=\"error\" disabled=\"true\" hidden=\"true\" name=\"filter_checkbox\" onChange=\"filterTable(this)\" type=\"checkbox\"/><span class=\"error\">0 errors</span>, <input checked=\"true\" class=\"filter\" data-test-result=\"xfailed\" disabled=\"true\" hidden=\"true\" name=\"filter_checkbox\" onChange=\"filterTable(this)\" type=\"checkbox\"/><span class=\"xfailed\">0 expected failures</span>, <input checked=\"true\" class=\"filter\" data-test-result=\"xpassed\" disabled=\"true\" hidden=\"true\" name=\"filter_checkbox\" onChange=\"filterTable(this)\" type=\"checkbox\"/><span class=\"xpassed\">0 unexpected passes</span>",
          "453:     <h2>Results</h2>",
          "454:     <table id=\"results-table\">",
          "455:       <thead id=\"results-table-head\">",
          "456:         <tr>",
          "457:           <th class=\"sortable result initial-sort\" col=\"result\">Result</th>",
          "458:           <th class=\"sortable\" col=\"name\">Test</th>",
          "459:           <th class=\"sortable\" col=\"duration\">Duration</th>",
          "460:           <th class=\"sortable links\" col=\"links\">Links</th></tr>",
          "461:         <tr hidden=\"true\" id=\"not-found-message\">",
          "462:           <th colspan=\"4\">No results found. Try to check the filters</th></tr></thead>",
          "463:       <tbody class=\"passed results-table-row\">",
          "464:         <tr>",
          "465:           <td class=\"col-result\">Passed</td>",
          "466:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_major_version</td>",
          "467:           <td class=\"col-duration\">0.01</td>",
          "468:           <td class=\"col-links\"></td></tr>",
          "469:         <tr>",
          "470:           <td class=\"extra\" colspan=\"4\">",
          "471:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "472:       <tbody class=\"passed results-table-row\">",
          "473:         <tr>",
          "474:           <td class=\"col-result\">Passed</td>",
          "475:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_headers</td>",
          "476:           <td class=\"col-duration\">0.00</td>",
          "477:           <td class=\"col-links\"></td></tr>",
          "478:         <tr>",
          "479:           <td class=\"extra\" colspan=\"4\">",
          "480:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "481:       <tbody class=\"passed results-table-row\">",
          "482:         <tr>",
          "483:           <td class=\"col-result\">Passed</td>",
          "484:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_policy_url</td>",
          "485:           <td class=\"col-duration\">0.00</td>",
          "486:           <td class=\"col-links\"></td></tr>",
          "487:         <tr>",
          "488:           <td class=\"extra\" colspan=\"4\">",
          "489:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "490:       <tbody class=\"passed results-table-row\">",
          "491:         <tr>",
          "492:           <td class=\"col-result\">Passed</td>",
          "493:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_parameter_string</td>",
          "494:           <td class=\"col-duration\">0.00</td>",
          "495:           <td class=\"col-links\"></td></tr>",
          "496:         <tr>",
          "497:           <td class=\"extra\" colspan=\"4\">",
          "498:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "499:       <tbody class=\"passed results-table-row\">",
          "500:         <tr>",
          "501:           <td class=\"col-result\">Passed</td>",
          "502:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_hub_instance_username_password_for_auth</td>",
          "503:           <td class=\"col-duration\">0.00</td>",
          "504:           <td class=\"col-links\"></td></tr>",
          "505:         <tr>",
          "506:           <td class=\"extra\" colspan=\"4\">",
          "507:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "508:       <tbody class=\"passed results-table-row\">",
          "509:         <tr>",
          "510:           <td class=\"col-result\">Passed</td>",
          "511:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_hub_instance_api_token_for_auth</td>",
          "512:           <td class=\"col-duration\">0.00</td>",
          "513:           <td class=\"col-links\"></td></tr>",
          "514:         <tr>",
          "515:           <td class=\"extra\" colspan=\"4\">",
          "516:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "517:       <tbody class=\"passed results-table-row\">",
          "518:         <tr>",
          "519:           <td class=\"col-result\">Passed</td>",
          "520:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_hub_instance_with_write_config</td>",
          "521:           <td class=\"col-duration\">0.01</td>",
          "522:           <td class=\"col-links\"></td></tr>",
          "523:         <tr>",
          "524:           <td class=\"extra\" colspan=\"4\">",
          "525:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "526:       <tbody class=\"passed results-table-row\">",
          "527:         <tr>",
          "528:           <td class=\"col-result\">Passed</td>",
          "529:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_hub_instance_with_write_config_false</td>",
          "530:           <td class=\"col-duration\">0.00</td>",
          "531:           <td class=\"col-links\"></td></tr>",
          "532:         <tr>",
          "533:           <td class=\"extra\" colspan=\"4\">",
          "534:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "535:       <tbody class=\"passed results-table-row\">",
          "536:         <tr>",
          "537:           <td class=\"col-result\">Passed</td>",
          "538:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_policy_by_id</td>",
          "539:           <td class=\"col-duration\">0.01</td>",
          "540:           <td class=\"col-links\"></td></tr>",
          "541:         <tr>",
          "542:           <td class=\"extra\" colspan=\"4\">",
          "543:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "544:       <tbody class=\"passed results-table-row\">",
          "545:         <tr>",
          "546:           <td class=\"col-result\">Passed</td>",
          "547:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_policy_by_url</td>",
          "548:           <td class=\"col-duration\">0.01</td>",
          "549:           <td class=\"col-links\"></td></tr>",
          "550:         <tr>",
          "551:           <td class=\"extra\" colspan=\"4\">",
          "552:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "553:       <tbody class=\"passed results-table-row\">",
          "554:         <tr>",
          "555:           <td class=\"col-result\">Passed</td>",
          "556:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_update_policy_by_id</td>",
          "557:           <td class=\"col-duration\">0.01</td>",
          "558:           <td class=\"col-links\"></td></tr>",
          "559:         <tr>",
          "560:           <td class=\"extra\" colspan=\"4\">",
          "561:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "562:       <tbody class=\"passed results-table-row\">",
          "563:         <tr>",
          "564:           <td class=\"col-result\">Passed</td>",
          "565:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_update_policy_by_url</td>",
          "566:           <td class=\"col-duration\">0.01</td>",
          "567:           <td class=\"col-links\"></td></tr>",
          "568:         <tr>",
          "569:           <td class=\"extra\" colspan=\"4\">",
          "570:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "571:       <tbody class=\"passed results-table-row\">",
          "572:         <tr>",
          "573:           <td class=\"col-result\">Passed</td>",
          "574:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_create_policy</td>",
          "575:           <td class=\"col-duration\">0.02</td>",
          "576:           <td class=\"col-links\"></td></tr>",
          "577:         <tr>",
          "578:           <td class=\"extra\" colspan=\"4\">",
          "579:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "580:       <tbody class=\"passed results-table-row\">",
          "581:         <tr>",
          "582:           <td class=\"col-result\">Passed</td>",
          "583:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_delete_policy_by_id</td>",
          "584:           <td class=\"col-duration\">0.01</td>",
          "585:           <td class=\"col-links\"></td></tr>",
          "586:         <tr>",
          "587:           <td class=\"extra\" colspan=\"4\">",
          "588:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "589:       <tbody class=\"passed results-table-row\">",
          "590:         <tr>",
          "591:           <td class=\"col-result\">Passed</td>",
          "592:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_delete_policy_by_url</td>",
          "593:           <td class=\"col-duration\">0.01</td>",
          "594:           <td class=\"col-links\"></td></tr>",
          "595:         <tr>",
          "596:           <td class=\"extra\" colspan=\"4\">",
          "597:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "598:       <tbody class=\"passed results-table-row\">",
          "599:         <tr>",
          "600:           <td class=\"col-result\">Passed</td>",
          "601:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_vulnerability</td>",
          "602:           <td class=\"col-duration\">0.01</td>",
          "603:           <td class=\"col-links\"></td></tr>",
          "604:         <tr>",
          "605:           <td class=\"extra\" colspan=\"4\">",
          "606:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "607:       <tbody class=\"passed results-table-row\">",
          "608:         <tr>",
          "609:           <td class=\"col-result\">Passed</td>",
          "610:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_projects_with_limit</td>",
          "611:           <td class=\"col-duration\">0.01</td>",
          "612:           <td class=\"col-links\"></td></tr>",
          "613:         <tr>",
          "614:           <td class=\"extra\" colspan=\"4\">",
          "615:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "616:       <tbody class=\"passed results-table-row\">",
          "617:         <tr>",
          "618:           <td class=\"col-result\">Passed</td>",
          "619:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_projects_with_name_query</td>",
          "620:           <td class=\"col-duration\">0.01</td>",
          "621:           <td class=\"col-links\"></td></tr>",
          "622:         <tr>",
          "623:           <td class=\"extra\" colspan=\"4\">",
          "624:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "625:       <tbody class=\"passed results-table-row\">",
          "626:         <tr>",
          "627:           <td class=\"col-result\">Passed</td>",
          "628:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_project_versions</td>",
          "629:           <td class=\"col-duration\">0.01</td>",
          "630:           <td class=\"col-links\"></td></tr>",
          "631:         <tr>",
          "632:           <td class=\"extra\" colspan=\"4\">",
          "633:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "634:       <tbody class=\"passed results-table-row\">",
          "635:         <tr>",
          "636:           <td class=\"col-result\">Passed</td>",
          "637:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_project_versions_with_parameters</td>",
          "638:           <td class=\"col-duration\">0.01</td>",
          "639:           <td class=\"col-links\"></td></tr>",
          "640:         <tr>",
          "641:           <td class=\"extra\" colspan=\"4\">",
          "642:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "643:       <tbody class=\"passed results-table-row\">",
          "644:         <tr>",
          "645:           <td class=\"col-result\">Passed</td>",
          "646:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_delete_project_version_by_name</td>",
          "647:           <td class=\"col-duration\">0.00</td>",
          "648:           <td class=\"col-links\"></td></tr>",
          "649:         <tr>",
          "650:           <td class=\"extra\" colspan=\"4\">",
          "651:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "652:       <tbody class=\"passed results-table-row\">",
          "653:         <tr>",
          "654:           <td class=\"col-result\">Passed</td>",
          "655:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_users</td>",
          "656:           <td class=\"col-duration\">0.01</td>",
          "657:           <td class=\"col-links\"></td></tr>",
          "658:         <tr>",
          "659:           <td class=\"extra\" colspan=\"4\">",
          "660:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "661:       <tbody class=\"passed results-table-row\">",
          "662:         <tr>",
          "663:           <td class=\"col-result\">Passed</td>",
          "664:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_create_user</td>",
          "665:           <td class=\"col-duration\">0.00</td>",
          "666:           <td class=\"col-links\"></td></tr>",
          "667:         <tr>",
          "668:           <td class=\"extra\" colspan=\"4\">",
          "669:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "670:       <tbody class=\"passed results-table-row\">",
          "671:         <tr>",
          "672:           <td class=\"col-result\">Passed</td>",
          "673:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_user_by_id</td>",
          "674:           <td class=\"col-duration\">0.00</td>",
          "675:           <td class=\"col-links\"></td></tr>",
          "676:         <tr>",
          "677:           <td class=\"extra\" colspan=\"4\">",
          "678:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "679:       <tbody class=\"passed results-table-row\">",
          "680:         <tr>",
          "681:           <td class=\"col-result\">Passed</td>",
          "682:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_user_by_url</td>",
          "683:           <td class=\"col-duration\">0.00</td>",
          "684:           <td class=\"col-links\"></td></tr>",
          "685:         <tr>",
          "686:           <td class=\"extra\" colspan=\"4\">",
          "687:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "688:       <tbody class=\"passed results-table-row\">",
          "689:         <tr>",
          "690:           <td class=\"col-result\">Passed</td>",
          "691:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_update_user_by_id</td>",
          "692:           <td class=\"col-duration\">0.00</td>",
          "693:           <td class=\"col-links\"></td></tr>",
          "694:         <tr>",
          "695:           <td class=\"extra\" colspan=\"4\">",
          "696:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "697:       <tbody class=\"passed results-table-row\">",
          "698:         <tr>",
          "699:           <td class=\"col-result\">Passed</td>",
          "700:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_update_user_by_url</td>",
          "701:           <td class=\"col-duration\">0.00</td>",
          "702:           <td class=\"col-links\"></td></tr>",
          "703:         <tr>",
          "704:           <td class=\"extra\" colspan=\"4\">",
          "705:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "706:       <tbody class=\"passed results-table-row\">",
          "707:         <tr>",
          "708:           <td class=\"col-result\">Passed</td>",
          "709:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_delete_user_by_id</td>",
          "710:           <td class=\"col-duration\">0.00</td>",
          "711:           <td class=\"col-links\"></td></tr>",
          "712:         <tr>",
          "713:           <td class=\"extra\" colspan=\"4\">",
          "714:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "715:       <tbody class=\"passed results-table-row\">",
          "716:         <tr>",
          "717:           <td class=\"col-result\">Passed</td>",
          "718:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_delete_user_by_url</td>",
          "719:           <td class=\"col-duration\">0.00</td>",
          "720:           <td class=\"col-links\"></td></tr>",
          "721:         <tr>",
          "722:           <td class=\"extra\" colspan=\"4\">",
          "723:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "724:       <tbody class=\"passed results-table-row\">",
          "725:         <tr>",
          "726:           <td class=\"col-result\">Passed</td>",
          "727:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_project_by_name</td>",
          "728:           <td class=\"col-duration\">0.01</td>",
          "729:           <td class=\"col-links\"></td></tr>",
          "730:         <tr>",
          "731:           <td class=\"extra\" colspan=\"4\">",
          "732:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "733:       <tbody class=\"passed results-table-row\">",
          "734:         <tr>",
          "735:           <td class=\"col-result\">Passed</td>",
          "736:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_version_by_name</td>",
          "737:           <td class=\"col-duration\">0.01</td>",
          "738:           <td class=\"col-links\"></td></tr>",
          "739:         <tr>",
          "740:           <td class=\"extra\" colspan=\"4\">",
          "741:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "742:       <tbody class=\"passed results-table-row\">",
          "743:         <tr>",
          "744:           <td class=\"col-result\">Passed</td>",
          "745:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_create_version_reports</td>",
          "746:           <td class=\"col-duration\">0.00</td>",
          "747:           <td class=\"col-links\"></td></tr>",
          "748:         <tr>",
          "749:           <td class=\"extra\" colspan=\"4\">",
          "750:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "751:       <tbody class=\"passed results-table-row\">",
          "752:         <tr>",
          "753:           <td class=\"col-result\">Passed</td>",
          "754:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_create_version_notices_report</td>",
          "755:           <td class=\"col-duration\">0.00</td>",
          "756:           <td class=\"col-links\"></td></tr>",
          "757:         <tr>",
          "758:           <td class=\"extra\" colspan=\"4\">",
          "759:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "760:       <tbody class=\"passed results-table-row\">",
          "761:         <tr>",
          "762:           <td class=\"col-result\">Passed</td>",
          "763:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_user_has_role</td>",
          "764:           <td class=\"col-duration\">0.01</td>",
          "765:           <td class=\"col-links\"></td></tr>",
          "766:         <tr>",
          "767:           <td class=\"extra\" colspan=\"4\">",
          "768:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "769:       <tbody class=\"passed results-table-row\">",
          "770:         <tr>",
          "771:           <td class=\"col-result\">Passed</td>",
          "772:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_link</td>",
          "773:           <td class=\"col-duration\">0.00</td>",
          "774:           <td class=\"col-links\"></td></tr>",
          "775:         <tr>",
          "776:           <td class=\"extra\" colspan=\"4\">",
          "777:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "778:       <tbody class=\"passed results-table-row\">",
          "779:         <tr>",
          "780:           <td class=\"col-result\">Passed</td>",
          "781:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_link_returns_None_for_invalid_bd_rest_object</td>",
          "782:           <td class=\"col-duration\">0.00</td>",
          "783:           <td class=\"col-links\"></td></tr>",
          "784:         <tr>",
          "785:           <td class=\"extra\" colspan=\"4\">",
          "786:             <div class=\"log\"> -------------------------------Captured log call-------------------------------- <br/>WARNING  blackduck.Core:Core.py:112 This does not appear to be a BD REST object. It should have [&#x27;_meta&#x27;][&#x27;links&#x27;]<br/></div></td></tr></tbody>",
          "787:       <tbody class=\"passed results-table-row\">",
          "788:         <tr>",
          "789:           <td class=\"col-result\">Passed</td>",
          "790:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_validated_json_with_a_dictionary</td>",
          "791:           <td class=\"col-duration\">0.00</td>",
          "792:           <td class=\"col-links\"></td></tr>",
          "793:         <tr>",
          "794:           <td class=\"extra\" colspan=\"4\">",
          "795:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "796:       <tbody class=\"passed results-table-row\">",
          "797:         <tr>",
          "798:           <td class=\"col-result\">Passed</td>",
          "799:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_validated_json_with_a_list</td>",
          "800:           <td class=\"col-duration\">0.00</td>",
          "801:           <td class=\"col-links\"></td></tr>",
          "802:         <tr>",
          "803:           <td class=\"extra\" colspan=\"4\">",
          "804:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "805:       <tbody class=\"passed results-table-row\">",
          "806:         <tr>",
          "807:           <td class=\"col-result\">Passed</td>",
          "808:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_validated_json_with_a_json_str</td>",
          "809:           <td class=\"col-duration\">0.00</td>",
          "810:           <td class=\"col-links\"></td></tr>",
          "811:         <tr>",
          "812:           <td class=\"extra\" colspan=\"4\">",
          "813:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "814:       <tbody class=\"passed results-table-row\">",
          "815:         <tr>",
          "816:           <td class=\"col-result\">Passed</td>",
          "817:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_validated_json_fails_with_invalid_json_str</td>",
          "818:           <td class=\"col-duration\">0.00</td>",
          "819:           <td class=\"col-links\"></td></tr>",
          "820:         <tr>",
          "821:           <td class=\"extra\" colspan=\"4\">",
          "822:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "823:       <tbody class=\"passed results-table-row\">",
          "824:         <tr>",
          "825:           <td class=\"col-result\">Passed</td>",
          "826:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_codelocations_all</td>",
          "827:           <td class=\"col-duration\">0.01</td>",
          "828:           <td class=\"col-links\"></td></tr>",
          "829:         <tr>",
          "830:           <td class=\"extra\" colspan=\"4\">",
          "831:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody>",
          "832:       <tbody class=\"passed results-table-row\">",
          "833:         <tr>",
          "834:           <td class=\"col-result\">Passed</td>",
          "835:           <td class=\"col-name\">test/test_hub_rest_api_python.py::test_get_codelocations_unmapped</td>",
          "836:           <td class=\"col-duration\">0.01</td>",
          "837:           <td class=\"col-links\"></td></tr>",
          "838:         <tr>",
          "839:           <td class=\"extra\" colspan=\"4\">",
          "840:             <div class=\"empty log\">No log output captured.</div></td></tr></tbody></table></body></html>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "74e4f76409b882102a378311e1bb4d2487b7207f",
      "candidate_info": {
        "commit_hash": "74e4f76409b882102a378311e1bb4d2487b7207f",
        "repo": "blackducksoftware/hub-rest-api-python",
        "commit_url": "https://github.com/blackducksoftware/hub-rest-api-python/commit/74e4f76409b882102a378311e1bb4d2487b7207f",
        "files": [
          "blackduck/__version__.py"
        ],
        "message": "Update version",
        "before_after_code_files": [
          "blackduck/__version__.py||blackduck/__version__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "blackduck/__version__.py||blackduck/__version__.py"
          ],
          "candidate": [
            "blackduck/__version__.py||blackduck/__version__.py"
          ]
        }
      },
      "candidate_diff": {
        "blackduck/__version__.py||blackduck/__version__.py": [
          "File: blackduck/__version__.py -> blackduck/__version__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: __version__ = '.'.join(map(str, VERSION))",
          "",
          "[Removed Lines]",
          "1: VERSION = (1, 0, 0)",
          "",
          "[Added Lines]",
          "1: VERSION = (1, 0, 2)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "42e2e81b6be1017ed4d5719b5aace264293b75d8",
      "candidate_info": {
        "commit_hash": "42e2e81b6be1017ed4d5719b5aace264293b75d8",
        "repo": "blackducksoftware/hub-rest-api-python",
        "commit_url": "https://github.com/blackducksoftware/hub-rest-api-python/commit/42e2e81b6be1017ed4d5719b5aace264293b75d8",
        "files": [
          "blackduck/__version__.py"
        ],
        "message": "publishing new version with some fixes",
        "before_after_code_files": [
          "blackduck/__version__.py||blackduck/__version__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "blackduck/__version__.py||blackduck/__version__.py"
          ],
          "candidate": [
            "blackduck/__version__.py||blackduck/__version__.py"
          ]
        }
      },
      "candidate_diff": {
        "blackduck/__version__.py||blackduck/__version__.py": [
          "File: blackduck/__version__.py -> blackduck/__version__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: __version__ = '.'.join(map(str, VERSION))",
          "",
          "[Removed Lines]",
          "1: VERSION = (0, 0, 51)",
          "",
          "[Added Lines]",
          "1: VERSION = (0, 0, 52)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "eeb5e3009944b5216ffa4d663069417c65000d89",
      "candidate_info": {
        "commit_hash": "eeb5e3009944b5216ffa4d663069417c65000d89",
        "repo": "blackducksoftware/hub-rest-api-python",
        "commit_url": "https://github.com/blackducksoftware/hub-rest-api-python/commit/eeb5e3009944b5216ffa4d663069417c65000d89",
        "files": [
          "blackduck/ExtendedClient.py",
          "blackduck/__version__.py",
          "examples/client/get_project.py",
          "examples/client/get_project_version.py"
        ],
        "message": "proposal to extend the Client interface to include common convenience methods for retrieving REST objects",
        "before_after_code_files": [
          "blackduck/ExtendedClient.py||blackduck/ExtendedClient.py",
          "blackduck/__version__.py||blackduck/__version__.py",
          "examples/client/get_project.py||examples/client/get_project.py",
          "examples/client/get_project_version.py||examples/client/get_project_version.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "blackduck/__version__.py||blackduck/__version__.py"
          ],
          "candidate": [
            "blackduck/__version__.py||blackduck/__version__.py"
          ]
        }
      },
      "candidate_diff": {
        "blackduck/ExtendedClient.py||blackduck/ExtendedClient.py": [
          "File: blackduck/ExtendedClient.py -> blackduck/ExtendedClient.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import logging",
          "2: from .Client import Client",
          "3: from .Exceptions import ProjectNotFound",
          "5: logger = logging.getLogger(__name__)",
          "7: class Client(Client):",
          "8:     def get_project_by_name(self, project_name):",
          "9:         \"\"\"GET a project object by its name.",
          "11:         Args:",
          "12:             project_name (str): of project",
          "14:         Returns:",
          "15:             json/dict: requested object or None",
          "17:         Raises:",
          "18:             requests.exceptions.HTTPError: from response.raise_for_status()",
          "19:             json.JSONDecodeError: if response.text is not json",
          "20:         \"\"\"",
          "21:         params = {",
          "22:             'q': [f\"name:{project_name}\"]",
          "23:         }",
          "24:         filtered_projects = [p for p in self.get_items(\"/api/projects\", params=params) if p.get('name') == project_name]",
          "25:         assert len(filtered_projects) in [0,1], f\"We either found the project or we didn't, but we should never find this many ({len(filtered_projects)})\"",
          "27:         project_obj = filtered_projects[0] if filtered_projects else None",
          "28:         return project_obj",
          "30:     def get_project_version_by_name(self, project_name, version_name):",
          "31:         \"\"\"GET a project-version object by its name.",
          "33:         Args:",
          "34:             project_name (str): of project",
          "35:             version_name (str): of version",
          "37:         Returns:",
          "38:             json/dict tuple: requested project and version objects or None, None",
          "40:         Raises:",
          "41:             requests.exceptions.HTTPError: from response.raise_for_status()",
          "42:             json.JSONDecodeError: if response.text is not json",
          "43:         \"\"\"",
          "44:         project_obj = self.get_project_by_name(project_name)",
          "46:         if not project_obj:",
          "47:             logger.warning(f\"Did not find project {project_name} on server at {self.base_url}\")",
          "48:             return None, None",
          "50:         params = {",
          "51:             'q': [f\"name:{version_name}\"]",
          "52:         }",
          "54:         filtered_versions = [v for v in self.get_resource(\"versions\", project_obj, params=params) if v.get('versionName') == version_name]",
          "55:         assert len(filtered_versions) in [0,1], f\"We either found the version or we didn't, but we should never find this many ({len(filtered_versions)})\"",
          "57:         version_obj = filtered_versions[0] if filtered_versions else None",
          "58:         return project_obj, version_obj",
          "",
          "---------------"
        ],
        "blackduck/__version__.py||blackduck/__version__.py": [
          "File: blackduck/__version__.py -> blackduck/__version__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: __version__ = '.'.join(map(str, VERSION))",
          "",
          "[Removed Lines]",
          "1: VERSION = (1, 0, 4)",
          "",
          "[Added Lines]",
          "1: VERSION = (1, 1, 0)",
          "",
          "---------------"
        ],
        "examples/client/get_project.py||examples/client/get_project.py": [
          "File: examples/client/get_project.py -> examples/client/get_project.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/usr/bin/env python",
          "3: '''",
          "4: Copyright (C) 2021 Synopsys, Inc.",
          "5: http://www.blackducksoftware.com/",
          "7: Licensed to the Apache Software Foundation (ASF) under one",
          "8: or more contributor license agreements. See the NOTICE file",
          "9: distributed with this work for additional information",
          "10: regarding copyright ownership. The ASF licenses this file",
          "11: to you under the Apache License, Version 2.0 (the",
          "12: \"License\"); you may not use this file except in compliance",
          "13: with the License. You may obtain a copy of the License at",
          "15: http://www.apache.org/licenses/LICENSE-2.0",
          "17: Unless required by applicable law or agreed to in writing,",
          "18: software distributed under the License is distributed on an",
          "19: \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
          "20: KIND, either express or implied. See the License for the",
          "21: specific language governing permissions and limitations",
          "22: under the License.",
          "24: '''",
          "25: import argparse",
          "26: import json",
          "27: import logging",
          "28: import sys",
          "30: from blackduck import Client",
          "32: parser = argparse.ArgumentParser(\"Get a project\")",
          "33: parser.add_argument(\"--base-url\", required=True, help=\"Hub server URL e.g. https://your.blackduck.url\")",
          "34: parser.add_argument(\"--token-file\", dest='token_file', required=True, help=\"containing access token\")",
          "35: parser.add_argument(\"--no-verify\", dest='verify', action='store_false', help=\"disable TLS certificate verification\")",
          "36: parser.add_argument(\"project_name\")",
          "37: args = parser.parse_args()",
          "40: logging.basicConfig(format='%(asctime)s:%(levelname)s:%(message)s', stream=sys.stderr, level=logging.DEBUG)",
          "41: logging.getLogger(\"requests\").setLevel(logging.WARNING)",
          "42: logging.getLogger(\"urllib3\").setLevel(logging.WARNING)",
          "43: logging.getLogger(\"blackduck\").setLevel(logging.WARNING)",
          "45: with open(args.token_file, 'r') as tf:",
          "46:     access_token = tf.readline().strip()",
          "48: bd = Client(",
          "49:     base_url=args.base_url,",
          "50:     token=access_token,",
          "51:     verify=args.verify",
          "52: )",
          "54: project = bd.get_project_by_name(args.project_name)",
          "55: output_s = json.dumps(project) if project else f\"Project {args.project_name} was not found on the server at {args.base_url}\"",
          "56: print(output_s)",
          "",
          "---------------"
        ],
        "examples/client/get_project_version.py||examples/client/get_project_version.py": [
          "File: examples/client/get_project_version.py -> examples/client/get_project_version.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: #!/usr/bin/env python",
          "3: '''",
          "4: Copyright (C) 2021 Synopsys, Inc.",
          "5: http://www.blackducksoftware.com/",
          "7: Licensed to the Apache Software Foundation (ASF) under one",
          "8: or more contributor license agreements. See the NOTICE file",
          "9: distributed with this work for additional information",
          "10: regarding copyright ownership. The ASF licenses this file",
          "11: to you under the Apache License, Version 2.0 (the",
          "12: \"License\"); you may not use this file except in compliance",
          "13: with the License. You may obtain a copy of the License at",
          "15: http://www.apache.org/licenses/LICENSE-2.0",
          "17: Unless required by applicable law or agreed to in writing,",
          "18: software distributed under the License is distributed on an",
          "19: \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY",
          "20: KIND, either express or implied. See the License for the",
          "21: specific language governing permissions and limitations",
          "22: under the License.",
          "24: '''",
          "25: import argparse",
          "26: import json",
          "27: import logging",
          "28: import sys",
          "30: from blackduck import Client",
          "32: parser = argparse.ArgumentParser(\"Get a project version\")",
          "33: parser.add_argument(\"--base-url\", required=True, help=\"Hub server URL e.g. https://your.blackduck.url\")",
          "34: parser.add_argument(\"--token-file\", dest='token_file', required=True, help=\"containing access token\")",
          "35: parser.add_argument(\"--no-verify\", dest='verify', action='store_false', help=\"disable TLS certificate verification\")",
          "36: parser.add_argument(\"project_name\")",
          "37: parser.add_argument(\"version_name\")",
          "38: args = parser.parse_args()",
          "41: logging.basicConfig(format='%(asctime)s:%(levelname)s:%(message)s', stream=sys.stderr, level=logging.DEBUG)",
          "42: logging.getLogger(\"requests\").setLevel(logging.WARNING)",
          "43: logging.getLogger(\"urllib3\").setLevel(logging.WARNING)",
          "44: logging.getLogger(\"blackduck\").setLevel(logging.WARNING)",
          "46: with open(args.token_file, 'r') as tf:",
          "47:     access_token = tf.readline().strip()",
          "49: bd = Client(",
          "50:     base_url=args.base_url,",
          "51:     token=access_token,",
          "52:     verify=args.verify",
          "53: )",
          "55: project, version = bd.get_project_version_by_name(args.project_name, args.version_name)",
          "56: output_s = json.dumps(version) if version else f\"Version {args.version_name} was not found on the server at {args.base_url}\"",
          "57: print(output_s)",
          "",
          "---------------"
        ]
      }
    }
  ]
}