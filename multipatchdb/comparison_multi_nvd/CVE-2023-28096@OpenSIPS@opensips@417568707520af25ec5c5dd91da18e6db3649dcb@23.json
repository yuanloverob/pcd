{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6266d0cd66d4d1115a855e170e9c64a373bb1f0a",
      "candidate_info": {
        "commit_hash": "6266d0cd66d4d1115a855e170e9c64a373bb1f0a",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/6266d0cd66d4d1115a855e170e9c64a373bb1f0a",
        "files": [
          "modules/b2b_entities/dlg.c"
        ],
        "message": "b2b_entities: fix shm memory leak\n\nFor the write back db mode, the entity storage data was only freed after\ninserting/updating the entity in the database. This would lead to memory\nleaks if the entity was deleted before the DB timer task had a chance\nto be run.\n\nThanks go to Norm Brandinger from Five9 for reporting!\n\n(cherry picked from commit aee014beb78be050bd2272ee0080a6f8063d9ec0)",
        "before_after_code_files": [
          "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c": [
          "File: modules/b2b_entities/dlg.c -> modules/b2b_entities/dlg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1292:     aux = dlg->next;",
          "1293:     if(dlg->tag[CALLEE_LEG].s)",
          "1294:      shm_free(dlg->tag[CALLEE_LEG].s);",
          "1295:     if(dlg->ack_sdp.s)",
          "1296:      shm_free(dlg->ack_sdp.s);",
          "1297:     shm_free(dlg);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1295:     if (b2be_db_mode == WRITE_BACK && dlg->storage.s)",
          "1296:      shm_free(dlg->storage.s);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1784:  b2b_delete_legs(&dlg->legs);",
          "1786:  if(dlg->uac_tran)",
          "1787:   tmb.unref_cell(dlg->uac_tran);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1788:  if (b2be_db_mode == WRITE_BACK && dlg->storage.s)",
          "1789:   shm_free(dlg->storage.s);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e0325625ca9e8dceb79225455527af62a2e8e298",
      "candidate_info": {
        "commit_hash": "e0325625ca9e8dceb79225455527af62a2e8e298",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/e0325625ca9e8dceb79225455527af62a2e8e298",
        "files": [
          "db/schema/dr_carriers.xml",
          "modules/auth/doc/auth_admin.xml",
          "modules/cachedb_local/doc/cachedb_local_admin.xml",
          "modules/cfgutils/doc/cfgutils_admin.xml",
          "modules/dispatcher/doc/dispatcher_admin.xml",
          "modules/drouting/doc/drouting_admin.xml",
          "modules/fraud_detection/doc/fraud_detection_admin.xml",
          "modules/mid_registrar/doc/mid_registrar_admin.xml",
          "modules/permissions/doc/permissions_admin.xml",
          "modules/prometheus/doc/prometheus_admin.xml",
          "modules/rtpengine/doc/rtpengine_admin.xml",
          "modules/rtpproxy/doc/rtpproxy_admin.xml",
          "modules/sipmsgops/doc/sipmsgops_admin.xml",
          "modules/stir_shaken/stir_shaken.c",
          "modules/usrloc/doc/usrloc_admin.xml"
        ],
        "message": "Fix various doc typos; Improve wording\n\n(cherry picked from commit dd7b3da0397fe5ccc9978ec9138a6d4395c3f941)\n(cherry picked from commit 7cdbc996ee61eae1ed9757c9bb401c67d96b48fd)",
        "before_after_code_files": [
          "modules/stir_shaken/stir_shaken.c||modules/stir_shaken/stir_shaken.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/stir_shaken/stir_shaken.c||modules/stir_shaken/stir_shaken.c": [
          "File: modules/stir_shaken/stir_shaken.c -> modules/stir_shaken/stir_shaken.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "205:  if (ca_list || ca_dir) {",
          "206:   if (X509_STORE_load_locations(store, ca_list, ca_dir) != 1) {",
          "208:    return -1;",
          "209:   }",
          "210:   if (X509_STORE_set_default_paths(store) != 1) {",
          "",
          "[Removed Lines]",
          "207:    LM_ERR(\"Failed to load trustefd CAs\\n\");",
          "",
          "[Added Lines]",
          "207:    LM_ERR(\"Failed to load trusted CAs\\n\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "731c8ddcaf65f5b8468e692d6ec7709be2f33f41",
      "candidate_info": {
        "commit_hash": "731c8ddcaf65f5b8468e692d6ec7709be2f33f41",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/731c8ddcaf65f5b8468e692d6ec7709be2f33f41",
        "files": [
          "modules/clusterer/clusterer.c",
          "modules/clusterer/topology.c"
        ],
        "message": "clusterer: fix possible deadlocks when discovering a new node\n\nUse only standard RW locking operations for the global list lock instead of\nthe \"switchable\" mechanism (aquiring the lock for writing when necessary).\n\n(cherry picked from commit e0e9e2f943ca5bd35f653f6e55a89000e8b262e6)",
        "before_after_code_files": [
          "modules/clusterer/clusterer.c||modules/clusterer/clusterer.c",
          "modules/clusterer/topology.c||modules/clusterer/topology.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/clusterer/clusterer.c||modules/clusterer/clusterer.c": [
          "File: modules/clusterer/clusterer.c -> modules/clusterer/clusterer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "931: static void handle_remove_node(bin_packet_t *packet, cluster_info_t *cl)",
          "932: {",
          "933:  int target_node;",
          "935:  node_info_t *node;",
          "936:  int ev_actions_cl = 1;",
          "",
          "[Removed Lines]",
          "934:  int lock_old_flag;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "968:   return;",
          "969:  }",
          "972:  remove_node(cl, node);",
          "974: }",
          "976: void bin_rcv_cl_extra_packets(bin_packet_t *packet, int packet_type,",
          "",
          "[Removed Lines]",
          "971:  lock_switch_write(cl_list_lock, lock_old_flag);",
          "973:  lock_switch_read(cl_list_lock, lock_old_flag);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "997:  }",
          "999:  if (!db_mode && packet_type == CLUSTERER_REMOVE_NODE)",
          "1001:  else",
          "1002:   lock_start_read(cl_list_lock);",
          "",
          "[Removed Lines]",
          "1000:   lock_start_sw_read(cl_list_lock);",
          "",
          "[Added Lines]",
          "997:   lock_start_write(cl_list_lock);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1093: exit:",
          "1094:  if (!db_mode && packet_type == CLUSTERER_REMOVE_NODE)",
          "1096:  else",
          "1097:   lock_stop_read(cl_list_lock);",
          "1098: }",
          "",
          "[Removed Lines]",
          "1095:   lock_stop_sw_read(cl_list_lock);",
          "",
          "[Added Lines]",
          "1092:   lock_stop_write(cl_list_lock);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1125:  if (!db_mode && (packet_type == CLUSTERER_NODE_DESCRIPTION ||",
          "1126:   packet_type == CLUSTERER_FULL_TOP_UPDATE))",
          "1128:  else",
          "1129:   lock_start_read(cl_list_lock);",
          "",
          "[Removed Lines]",
          "1127:   lock_start_sw_read(cl_list_lock);",
          "",
          "[Added Lines]",
          "1124:   lock_start_write(cl_list_lock);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1172: exit:",
          "1173:  if (!db_mode && (packet_type == CLUSTERER_NODE_DESCRIPTION ||",
          "1174:   packet_type == CLUSTERER_FULL_TOP_UPDATE))",
          "1176:  else",
          "1177:   lock_stop_read(cl_list_lock);",
          "1178: }",
          "",
          "[Removed Lines]",
          "1175:   lock_stop_sw_read(cl_list_lock);",
          "",
          "[Added Lines]",
          "1172:   lock_stop_write(cl_list_lock);",
          "",
          "---------------"
        ],
        "modules/clusterer/topology.c||modules/clusterer/topology.c": [
          "File: modules/clusterer/topology.c -> modules/clusterer/topology.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "682:         int src_node_id, str *str_vals, int *int_vals)",
          "683: {",
          "684:  node_info_t *new_node = NULL;",
          "687:  str_vals[STR_VALS_FLAGS_COL].s = 0;",
          "688:  str_vals[STR_VALS_DESCRIPTION_COL].s = 0;",
          "",
          "[Removed Lines]",
          "685:  int lock_old_flag;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "691:  int_vals[INT_VALS_NODE_ID_COL] = src_node_id;",
          "696:  if (add_node_info(&new_node, &cl, int_vals, str_vals) != 0) {",
          "697:   LM_ERR(\"Unable to add node info to backing list\\n\");",
          "699:   return NULL;",
          "700:  }",
          "704:  return new_node;",
          "705: }",
          "",
          "[Removed Lines]",
          "694:  lock_switch_write(cl_list_lock, lock_old_flag);",
          "698:   lock_switch_read(cl_list_lock, lock_old_flag);",
          "702:  lock_switch_read(cl_list_lock, lock_old_flag);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6da77f423fc93f4c6e5d6aba405cc793ec74d14a",
      "candidate_info": {
        "commit_hash": "6da77f423fc93f4c6e5d6aba405cc793ec74d14a",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/6da77f423fc93f4c6e5d6aba405cc793ec74d14a",
        "files": [
          "lib/reg/lookup.c"
        ],
        "message": "Merge pull request #2914 from MayamaTakeshi/reg_lookup_log_correction\n\nCorrected 'getting contacts' log\n\n(cherry picked from commit 9be68bf34f8d1d54708a6a3de8f689e1e91288fc)",
        "before_after_code_files": [
          "lib/reg/lookup.c||lib/reg/lookup.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/reg/lookup.c||lib/reg/lookup.c": [
          "File: lib/reg/lookup.c -> lib/reg/lookup.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "179:   aor_uri = &branch_uris[idx];",
          "180:   LM_DBG(\"getting contacts from aor [%.*s] \"",
          "183:   if (extract_aor(aor_uri, &aor, NULL, &call_id, reg_use_domain) < 0) {",
          "184:    LM_ERR(\"failed to extract address of record for branch uri\\n\");",
          "",
          "[Removed Lines]",
          "181:          \"in branch %d\\n\", aor.len, aor.s, idx);",
          "",
          "[Added Lines]",
          "181:          \"in branch %d\\n\", aor_uri->len, aor_uri->s, idx);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "edc90fb544d7f2fba5862352ef1a17f4a3838034",
      "candidate_info": {
        "commit_hash": "edc90fb544d7f2fba5862352ef1a17f4a3838034",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/edc90fb544d7f2fba5862352ef1a17f4a3838034",
        "files": [
          "modules/dialog/dialog.c",
          "modules/dialog/dlg_replication.c",
          "modules/dialog/dlg_replication.h"
        ],
        "message": "dialog: fix incorrectly discarded dialogs after sync\n\nSyncing while the donor node is also sending live replication packets\nmay lead to incorrectly discarding some of the newly received dialogs.\nThere were two ways in which new dialogs were actually mistaken as old,\n\"local\" dialogs from before syncing:\n* overwriting the dialog flags when handling a replicated update;\n* not marking live replicated dialogs received during sync as \"new\" dialogs.\n\n(cherry picked from commit 46e9a53ead0574272609038dc9dbfb92f9087fe4)",
        "before_after_code_files": [
          "modules/dialog/dialog.c||modules/dialog/dialog.c",
          "modules/dialog/dlg_replication.c||modules/dialog/dlg_replication.c",
          "modules/dialog/dlg_replication.h||modules/dialog/dlg_replication.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/dialog/dialog.c||modules/dialog/dialog.c": [
          "File: modules/dialog/dialog.c -> modules/dialog/dialog.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "830:   return -1;",
          "831:  }",
          "838:   return -1;",
          "839:  }",
          "870:  if ( register_timer( \"dlg-timer\", dlg_timer_routine, NULL, 1,",
          "871:  TIMER_FLAG_DELAY_ON_DELAY)<0 ) {",
          "",
          "[Removed Lines]",
          "835:  if (dialog_repl_cluster < 0) {",
          "836:   LM_ERR(\"Invalid dialog_replication_cluster, must be 0 or \"",
          "837:    \"a positive cluster id\\n\");",
          "840:  if (profile_repl_cluster < 0) {",
          "841:   LM_ERR(\"Invalid profile_repl_cluster, must be 0 or \"",
          "842:    \"a positive cluster id\\n\");",
          "843:   return -1;",
          "844:  }",
          "846:  if ((dialog_repl_cluster || profile_repl_cluster) &&",
          "847:   (load_clusterer_api(&clusterer_api) < 0)) {",
          "848:   LM_DBG(\"failed to load clusterer API - is clusterer module loaded?\\n\");",
          "849:   return -1;",
          "850:  }",
          "852:  if (profile_repl_cluster && clusterer_api.register_capability(",
          "853:   &prof_repl_cap, receive_prof_repl, NULL, profile_repl_cluster, 0,",
          "854:   NODE_CMP_ANY) < 0) {",
          "855:   LM_ERR(\"Cannot register clusterer callback for profile replication!\\n\");",
          "856:   return -1;",
          "857:  }",
          "859:  if (dialog_repl_cluster) {",
          "860:   if (clusterer_api.register_capability(&dlg_repl_cap, receive_dlg_repl,",
          "861:     rcv_cluster_event, dialog_repl_cluster, 1, NODE_CMP_ANY) < 0) {",
          "862:    LM_ERR(\"Cannot register clusterer callback for dialog replication!\\n\");",
          "863:    return -1;",
          "864:   }",
          "866:   if (clusterer_api.request_sync(&dlg_repl_cap, dialog_repl_cluster, 0) < 0)",
          "867:    LM_ERR(\"Sync request failed\\n\");",
          "868:  }",
          "",
          "[Added Lines]",
          "833:  if (dlg_init_clustering() < 0) {",
          "834:   LM_ERR(\"Failed to initialize clustering\\n\");",
          "",
          "---------------"
        ],
        "modules/dialog/dlg_replication.c||modules/dialog/dlg_replication.c": [
          "File: modules/dialog/dlg_replication.c -> modules/dialog/dlg_replication.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "46: str shtag_dlg_val = str_init(\"dlgX_shtag\");",
          "48: static int get_shtag_sync_status(struct dlg_cell *dlg);",
          "50: static struct socket_info * fetch_socket_info(str *addr)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: char *dlg_sync_in_progress;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "120:  return 0;",
          "121: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "125: int dlg_init_clustering(void)",
          "126: {",
          "129:  if (dialog_repl_cluster < 0) {",
          "130:   LM_ERR(\"Invalid dialog_replication_cluster, must be 0 or \"",
          "131:    \"a positive cluster id\\n\");",
          "132:   return -1;",
          "133:  }",
          "134:  if (profile_repl_cluster < 0) {",
          "135:   LM_ERR(\"Invalid profile_repl_cluster, must be 0 or \"",
          "136:    \"a positive cluster id\\n\");",
          "137:   return -1;",
          "138:  }",
          "140:  if ((dialog_repl_cluster || profile_repl_cluster) &&",
          "141:   (load_clusterer_api(&clusterer_api) < 0)) {",
          "142:   LM_DBG(\"failed to load clusterer API - is clusterer module loaded?\\n\");",
          "143:   return -1;",
          "144:  }",
          "146:  if (profile_repl_cluster && clusterer_api.register_capability(",
          "147:   &prof_repl_cap, receive_prof_repl, NULL, profile_repl_cluster, 0,",
          "148:   NODE_CMP_ANY) < 0) {",
          "149:   LM_ERR(\"Cannot register clusterer callback for profile replication!\\n\");",
          "150:   return -1;",
          "151:  }",
          "153:  if (dialog_repl_cluster) {",
          "154:   if (clusterer_api.register_capability(&dlg_repl_cap, receive_dlg_repl,",
          "155:     rcv_cluster_event, dialog_repl_cluster, 1, NODE_CMP_ANY) < 0) {",
          "156:    LM_ERR(\"Cannot register clusterer callback for dialog replication!\\n\");",
          "157:    return -1;",
          "158:   }",
          "160:   dlg_sync_in_progress = shm_malloc(sizeof *dlg_sync_in_progress);",
          "161:   if (*dlg_sync_in_progress) {",
          "162:    LM_ERR(\"no more shm memory!\\n\");",
          "163:    return -1;",
          "164:   }",
          "167:   if (clusterer_api.request_sync(&dlg_repl_cap, dialog_repl_cluster, 0) < 0)",
          "168:    LM_ERR(\"Sync request failed\\n\");",
          "170:  }",
          "172:  return 0;",
          "173: }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "178:    dlg->flags &= ~DLG_FLAG_FROM_DB;",
          "180:     dlg->flags |= DLG_FLAG_SYNCED;",
          "181:    dlg_unlock(d_table, d_entry);",
          "182:    return 0;",
          "183:   }",
          "",
          "[Removed Lines]",
          "179:    if (from_sync)",
          "",
          "[Added Lines]",
          "231:    if (from_sync || *dlg_sync_in_progress)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "328:    return 0;",
          "329:   }",
          "330:  }",
          "332:  if (dlg_db_mode == DB_MODE_DELAYED) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "383:  } else if (*dlg_sync_in_progress) {",
          "386:   dlg->flags |= DLG_FLAG_SYNCED;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "389:  int timeout, h_entry;",
          "390:  str st;",
          "391:  struct dlg_entry *d_entry;",
          "393:  unsigned int h_id;",
          "394:  short pkg_ver = get_bin_pkg_version(packet);",
          "",
          "[Removed Lines]",
          "392:  int rcv_flags, save_new_flag;",
          "",
          "[Added Lines]",
          "449:  int rcv_flags, save_new_flag, save_sync_flag;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "492:  save_new_flag = dlg->flags & DLG_FLAG_NEW;",
          "493:  dlg->flags = rcv_flags;",
          "496:  bin_pop_int(packet, &timeout);",
          "497:  bin_skip_int(packet, 2);",
          "",
          "[Removed Lines]",
          "494:  dlg->flags |= ((save_new_flag ? DLG_FLAG_NEW : 0) | DLG_FLAG_CHANGED);",
          "",
          "[Added Lines]",
          "550:  save_sync_flag = dlg->flags & DLG_FLAG_SYNCED;",
          "552:  dlg->flags |= ((save_new_flag ? DLG_FLAG_NEW : 0) |",
          "553:   (save_sync_flag ? DLG_FLAG_SYNCED : 0) | DLG_FLAG_CHANGED);",
          "",
          "---------------"
        ],
        "modules/dialog/dlg_replication.h||modules/dialog/dlg_replication.h": [
          "File: modules/dialog/dlg_replication.h -> modules/dialog/dlg_replication.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "51: extern int cluster_auto_sync;",
          "53: void replicate_dialog_created(struct dlg_cell *dlg);",
          "54: void replicate_dialog_updated(struct dlg_cell *dlg);",
          "55: void replicate_dialog_deleted(struct dlg_cell *dlg);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53: int dlg_init_clustering(void);",
          "",
          "---------------"
        ]
      }
    }
  ]
}