{
  "cve_id": "CVE-2016-1927",
  "cve_desc": "The suggestPassword function in js/functions.js in phpMyAdmin 4.0.x before 4.0.10.13, 4.4.x before 4.4.15.3, and 4.5.x before 4.5.4 relies on the Math.random JavaScript function, which makes it easier for remote attackers to guess passwords via a brute-force approach.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "8dedcc1a175eb07debd4fe116407c43694c60b22",
  "patch_info": {
    "commit_hash": "8dedcc1a175eb07debd4fe116407c43694c60b22",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/8dedcc1a175eb07debd4fe116407c43694c60b22",
    "files": [
      "js/functions.js"
    ],
    "message": "Use secure RNG if available\n\nRecent browsers come with better RNG, so let's use it for generating\npassword instead of Math.random if available.\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
    "before_after_code_files": [
      "js/functions.js||js/functions.js"
    ]
  },
  "patch_diff": {
    "js/functions.js||js/functions.js": [
      "File: js/functions.js -> js/functions.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "322:     var pwchars = \"abcdefhjmnpqrstuvwxyz23456789ABCDEFGHJKLMNPQRSTUVWYXZ\";",
      "323:     var passwordlength = 16;    // do we want that to be dynamic?  no, keep it simple :)",
      "324:     var passwd = passwd_form.generated_pw;",
      "325:     passwd.value = '';",
      "327:     for (var i = 0; i < passwordlength; i++) {",
      "329:     }",
      "330:     passwd_form.text_pma_pw.value = passwd.value;",
      "331:     passwd_form.text_pma_pw2.value = passwd.value;",
      "332:     return true;",
      "",
      "[Removed Lines]",
      "328:         passwd.value += pwchars.charAt(Math.floor(Math.random() * pwchars.length));",
      "",
      "[Added Lines]",
      "325:     var randomWords = new Int32Array(passwordlength);",
      "330:     if (window.crypto && window.crypto.getRandomValues) {",
      "331:         window.crypto.getRandomValues(randomWords);",
      "332:     }",
      "334:     else if (window.msCrypto && window.msCrypto.getRandomValues) {",
      "335:         window.msCrypto.getRandomValues(randomWords);",
      "336:     } else {",
      "338:         for (var i = 0; i < passwordlength; i++) {",
      "339:             randomWords[i] = Math.floor(Math.random() * pwchars.length);",
      "340:         }",
      "341:     }",
      "344:         passwd.value += pwchars.charAt(Math.abs(randomWords[i]) % pwchars.length);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8b6737735be5787d0b98c6cdfe2c7e3131b1bc95",
      "candidate_info": {
        "commit_hash": "8b6737735be5787d0b98c6cdfe2c7e3131b1bc95",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/8b6737735be5787d0b98c6cdfe2c7e3131b1bc95",
        "files": [
          "js/functions.js"
        ],
        "message": "Use secure RNG if available\n\nRecent browsers come with better RNG, so let's use it for generating\npassword instead of Math.random if available.\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
        "before_after_code_files": [
          "js/functions.js||js/functions.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "js/functions.js||js/functions.js"
          ],
          "candidate": [
            "js/functions.js||js/functions.js"
          ]
        }
      },
      "candidate_diff": {
        "js/functions.js||js/functions.js": [
          "File: js/functions.js -> js/functions.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "218:     var pwchars = \"abcdefhjmnpqrstuvwxyz23456789ABCDEFGHJKLMNPQRSTUVWYXZ\";",
          "219:     var passwordlength = 16;    // do we want that to be dynamic?  no, keep it simple :)",
          "220:     var passwd = passwd_form.generated_pw;",
          "221:     passwd.value = '';",
          "223:     for (var i = 0; i < passwordlength; i++) {",
          "225:     }",
          "226:     passwd_form.text_pma_pw.value = passwd.value;",
          "227:     passwd_form.text_pma_pw2.value = passwd.value;",
          "228:     return true;",
          "",
          "[Removed Lines]",
          "224:         passwd.value += pwchars.charAt(Math.floor(Math.random() * pwchars.length));",
          "",
          "[Added Lines]",
          "221:     var randomWords = new Int32Array(passwordlength);",
          "226:     if (window.crypto && window.crypto.getRandomValues) {",
          "227:         window.crypto.getRandomValues(randomWords);",
          "228:     }",
          "230:     else if (window.msCrypto && window.msCrypto.getRandomValues) {",
          "231:         window.msCrypto.getRandomValues(randomWords);",
          "232:     } else {",
          "234:         for (var i = 0; i < passwordlength; i++) {",
          "235:             randomWords[i] = Math.floor(Math.random() * pwchars.length);",
          "236:         }",
          "237:     }",
          "240:         passwd.value += pwchars.charAt(Math.abs(randomWords[i]) % pwchars.length);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6a96e67487f2faecb4de4204fee9b96b94020720",
      "candidate_info": {
        "commit_hash": "6a96e67487f2faecb4de4204fee9b96b94020720",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/6a96e67487f2faecb4de4204fee9b96b94020720",
        "files": [
          "js/functions.js"
        ],
        "message": "Use secure RNG if available\n\nRecent browsers come with better RNG, so let's use it for generating\npassword instead of Math.random if available.\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
        "before_after_code_files": [
          "js/functions.js||js/functions.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "js/functions.js||js/functions.js"
          ],
          "candidate": [
            "js/functions.js||js/functions.js"
          ]
        }
      },
      "candidate_diff": {
        "js/functions.js||js/functions.js": [
          "File: js/functions.js -> js/functions.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:     var pwchars = \"abcdefhjmnpqrstuvwxyz23456789ABCDEFGHJKLMNPQRSTUVWYXZ\";",
          "81:     var passwordlength = 16;    // do we want that to be dynamic?  no, keep it simple :)",
          "82:     var passwd = passwd_form.generated_pw;",
          "83:     passwd.value = '';",
          "87:     }",
          "88:     passwd_form.text_pma_pw.value = passwd.value;",
          "89:     passwd_form.text_pma_pw2.value = passwd.value;",
          "90:     return true;",
          "",
          "[Removed Lines]",
          "85:     for (var i = 0; i < passwordlength; i++ ) {",
          "86:         passwd.value += pwchars.charAt( Math.floor( Math.random() * pwchars.length ) );",
          "",
          "[Added Lines]",
          "83:     var randomWords = new Int32Array(passwordlength);",
          "88:     if (window.crypto && window.crypto.getRandomValues) {",
          "89:         window.crypto.getRandomValues(randomWords);",
          "90:     }",
          "92:     else if (window.msCrypto && window.msCrypto.getRandomValues) {",
          "93:         window.msCrypto.getRandomValues(randomWords);",
          "94:     } else {",
          "96:         for (var i = 0; i < passwordlength; i++) {",
          "97:             randomWords[i] = Math.floor(Math.random() * pwchars.length);",
          "98:         }",
          "99:     }",
          "101:     for (var i = 0; i < passwordlength; i++) {",
          "102:         passwd.value += pwchars.charAt(Math.abs(randomWords[i]) % pwchars.length);",
          "",
          "---------------"
        ]
      }
    }
  ]
}