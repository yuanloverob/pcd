{
  "cve_id": "CVE-2021-3623",
  "cve_desc": "A flaw was found in libtpms. The flaw can be triggered by specially-crafted TPM 2 command packets containing illegal values and may lead to an out-of-bounds access when the volatile state of the TPM 2 is marshalled/written or unmarshalled/read. The highest threat from this vulnerability is to system availability.",
  "repo": "stefanberger/libtpms",
  "patch_hash": "2f30d620d3c053f20d38b54bf76ac0907821d263",
  "patch_info": {
    "commit_hash": "2f30d620d3c053f20d38b54bf76ac0907821d263",
    "repo": "stefanberger/libtpms",
    "commit_url": "https://github.com/stefanberger/libtpms/commit/2f30d62",
    "files": [
      "src/tpm2/NVMarshal.c",
      "src/tpm2/Unmarshal.c"
    ],
    "message": "tpm2: Reset TPM2B buffer sizes after test fails for valid buffer size\n\nReset the buffer size indicator in a TPM2B type of buffer after it failed\nthe test for the maximum buffer size it allows. This prevents having bad\nbuffer sizes in memory that can come to haunt us when writing the volatile\nstate for example.\n\nSigned-off-by: Stefan Berger <stefanb@linux.ibm.com>",
    "before_after_code_files": [
      "src/tpm2/NVMarshal.c||src/tpm2/NVMarshal.c",
      "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
    ]
  },
  "patch_diff": {
    "src/tpm2/NVMarshal.c||src/tpm2/NVMarshal.c": [
      "File: src/tpm2/NVMarshal.c -> src/tpm2/NVMarshal.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1528:                                 \"allocated %zu\\n\",",
      "1529:                                 (size_t)data->size, (size_t)data->allocated);",
      "1530:             rc = TPM_RC_SIZE;",
      "1531:         }",
      "1532:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1531:             data->size = 0;",
      "",
      "---------------"
    ],
    "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c": [
      "File: src/tpm2/Unmarshal.c -> src/tpm2/Unmarshal.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "136:     if (rc == TPM_RC_SUCCESS) {",
      "137:  if (target->size > targetSize) {",
      "138:      rc = TPM_RC_SIZE;",
      "139:  }",
      "140:     }",
      "141:     if (rc == TPM_RC_SUCCESS) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "139:      target->size = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1686:  if ((target->sizeofSelect < PCR_SELECT_MIN) ||",
      "1687:      (target->sizeofSelect > PCR_SELECT_MAX)) {",
      "1688:      rc = TPM_RC_VALUE;",
      "1689:  }",
      "1690:     }",
      "1691:     if (rc == TPM_RC_SUCCESS) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1690:      target->sizeofSelect = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1862:     if (rc == TPM_RC_SUCCESS) {",
      "1863:  if (target->count > MAX_CAP_CC) {",
      "1864:      rc = TPM_RC_SIZE;",
      "1865:  }",
      "1866:     }",
      "1867:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1867:      target->count = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1902:     if (rc == TPM_RC_SUCCESS) {",
      "1903:  if (target->count > MAX_CAP_CC) {",
      "1904:      rc = TPM_RC_SIZE;",
      "1905:  }",
      "1906:     }",
      "1907:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1908:      target->count = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1925:     if (rc == TPM_RC_SUCCESS) {",
      "1926:  if (target->count > MAX_ALG_LIST_SIZE) {",
      "1927:      rc = TPM_RC_SIZE;",
      "1928:  }",
      "1929:     }",
      "1930:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1932:      target->count = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1948:     if (rc == TPM_RC_SUCCESS) {",
      "1949:  if (target->count > MAX_CAP_HANDLES) {",
      "1950:      rc = TPM_RC_SIZE;",
      "1951:  }",
      "1952:     }",
      "1953:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1956:      target->count = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1977:  if (target->count < 2) {",
      "1978:      rc = TPM_RC_SIZE;",
      "1979:  }",
      "1980:     }",
      "1981:     if (rc == TPM_RC_SUCCESS) {",
      "1982:  if (target->count > 8) {",
      "1983:      rc = TPM_RC_SIZE;",
      "1984:  }",
      "1985:     }",
      "1986:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1985:      target->count = 0; // libtpms added",
      "1991:      target->count = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "2003:     if (rc == TPM_RC_SUCCESS) {",
      "2004:  if (target->count > HASH_COUNT) {",
      "2005:      rc = TPM_RC_SIZE;",
      "2006:  }",
      "2007:     }",
      "2008:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2014:      target->count = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "2025:     if (rc == TPM_RC_SUCCESS) {",
      "2026:  if (target->count > HASH_COUNT) {",
      "2027:      rc = TPM_RC_SIZE;",
      "2028:  }",
      "2029:     }",
      "2030:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2037:      target->count = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "2050:     if (rc == TPM_RC_SUCCESS) {",
      "2051:  if (target->count > MAX_CAP_ALGS) {",
      "2052:      rc = TPM_RC_SIZE;",
      "2053:  }",
      "2054:     }",
      "2055:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2063:      target->count = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "2072:     if (rc == TPM_RC_SUCCESS) {",
      "2073:  if (target->count > MAX_TPM_PROPERTIES) {",
      "2074:      rc = TPM_RC_SIZE;",
      "2075:  }",
      "2076:     }",
      "2077:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2086:      target->count = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "2094:     if (rc == TPM_RC_SUCCESS) {",
      "2095:  if (target->count > MAX_PCR_PROPERTIES) {",
      "2096:      rc = TPM_RC_SIZE;",
      "2097:  }",
      "2098:     }",
      "2099:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2109:      target->count = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "2116:     if (rc == TPM_RC_SUCCESS) {",
      "2117:  if (target->count > MAX_ECC_CURVES) {",
      "2118:      rc = TPM_RC_SIZE;",
      "2119:  }",
      "2120:     }",
      "2121:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2132:      target->count = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "2138:     if (rc == TPM_RC_SUCCESS) {",
      "2139:  if (target->count > MAX_TAGGED_POLICIES) {",
      "2140:      rc = TPM_RC_SIZE;",
      "2141:  }",
      "2142:     }",
      "2143:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2155:      target->count = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "2787:     if (rc == TPM_RC_SUCCESS) {",
      "2788:  if (target->size != startSize - *size) {",
      "2789:      rc = TPM_RC_SIZE;",
      "2790:  }",
      "2791:     }",
      "2792:     return rc;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "2805:      target->size = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "3546:     if (rc == TPM_RC_SUCCESS) {",
      "3547:  if (target->size != startSize - *size) {",
      "3548:      rc = TPM_RC_SIZE;",
      "3549:  }",
      "3550:     }",
      "3551:     return rc;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3565:      target->size = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 17 ---",
      "[Context before]",
      "4069:     if (rc == TPM_RC_SUCCESS) {",
      "4070:  if (target->size != startSize - *size) {",
      "4071:      rc = TPM_RC_SIZE;",
      "4072:  }",
      "4073:     }",
      "4074:     return rc;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4089:      target->size = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 18 ---",
      "[Context before]",
      "4164:  if (rc == TPM_RC_SUCCESS) {",
      "4165:      if (target->size != startSize - *size) {",
      "4166:   rc = TPM_RC_SIZE;",
      "4167:      }",
      "4168:  }",
      "4169:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4185:   target->size = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 19 ---",
      "[Context before]",
      "4239:     if (rc == TPM_RC_SUCCESS) {",
      "4240:  if (target->dataSize > MAX_NV_INDEX_SIZE) {",
      "4241:      rc = TPM_RC_SIZE;",
      "4242:  }",
      "4243:     }",
      "4244:     return rc;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4261:      target->dataSize = 0; // libtpms added",
      "",
      "---------------",
      "--- Hunk 20 ---",
      "[Context before]",
      "4269:     if (rc == TPM_RC_SUCCESS) {",
      "4270:  if (target->size != startSize - *size) {",
      "4271:      rc = TPM_RC_SIZE;",
      "4272:  }",
      "4273:     }",
      "4274:     return rc;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4292:      target->size = 0; // libtpms added",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f16250b35aff6995e540143a9858c9cf0d1f9573",
      "candidate_info": {
        "commit_hash": "f16250b35aff6995e540143a9858c9cf0d1f9573",
        "repo": "stefanberger/libtpms",
        "commit_url": "https://github.com/stefanberger/libtpms/commit/f16250b35aff6995e540143a9858c9cf0d1f9573",
        "files": [
          "src/tpm2/NVMarshal.c",
          "src/tpm2/Unmarshal.c"
        ],
        "message": "tpm2: Reset TPM2B buffer sizes after test fails for valid buffer size\n\nReset the buffer size indicator in a TPM2B type of buffer after it failed\nthe test for the maximum buffer size it allows. This prevents having bad\nbuffer sizes in memory that can come to haunt us when writing the volatile\nstate for example.\n\nSigned-off-by: Stefan Berger <stefanb@linux.ibm.com>",
        "before_after_code_files": [
          "src/tpm2/NVMarshal.c||src/tpm2/NVMarshal.c",
          "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/tpm2/NVMarshal.c||src/tpm2/NVMarshal.c",
            "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
          ],
          "candidate": [
            "src/tpm2/NVMarshal.c||src/tpm2/NVMarshal.c",
            "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
          ]
        }
      },
      "candidate_diff": {
        "src/tpm2/NVMarshal.c||src/tpm2/NVMarshal.c": [
          "File: src/tpm2/NVMarshal.c -> src/tpm2/NVMarshal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1503:                                 \"allocated %zu\\n\",",
          "1504:                                 (size_t)data->size, (size_t)data->allocated);",
          "1505:             rc = TPM_RC_SIZE;",
          "1506:         }",
          "1507:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1506:             data->size = 0;",
          "",
          "---------------"
        ],
        "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c": [
          "File: src/tpm2/Unmarshal.c -> src/tpm2/Unmarshal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "136:     if (rc == TPM_RC_SUCCESS) {",
          "137:  if (target->size > targetSize) {",
          "138:      rc = TPM_RC_SIZE;",
          "139:  }",
          "140:     }",
          "141:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:      target->size = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1686:  if ((target->sizeofSelect < PCR_SELECT_MIN) ||",
          "1687:      (target->sizeofSelect > PCR_SELECT_MAX)) {",
          "1688:      rc = TPM_RC_VALUE;",
          "1689:  }",
          "1690:     }",
          "1691:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1690:      target->sizeofSelect = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1859:     if (rc == TPM_RC_SUCCESS) {",
          "1860:  if (target->count > MAX_CAP_CC) {",
          "1861:      rc = TPM_RC_SIZE;",
          "1862:  }",
          "1863:     }",
          "1864:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1864:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1897:     if (rc == TPM_RC_SUCCESS) {",
          "1898:  if (target->count > MAX_CAP_CC) {",
          "1899:      rc = TPM_RC_SIZE;",
          "1900:  }",
          "1901:     }",
          "1902:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1903:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1920:     if (rc == TPM_RC_SUCCESS) {",
          "1921:  if (target->count > MAX_ALG_LIST_SIZE) {",
          "1922:      rc = TPM_RC_SIZE;",
          "1923:  }",
          "1924:     }",
          "1925:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1927:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1942:     if (rc == TPM_RC_SUCCESS) {",
          "1943:  if (target->count > MAX_CAP_HANDLES) {",
          "1944:      rc = TPM_RC_SIZE;",
          "1945:  }",
          "1946:     }",
          "1947:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1950:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1971:  if (target->count < 2) {",
          "1972:      rc = TPM_RC_SIZE;",
          "1973:  }",
          "1974:     }",
          "1975:     if (rc == TPM_RC_SUCCESS) {",
          "1976:  if (target->count > 8) {",
          "1977:      rc = TPM_RC_SIZE;",
          "1978:  }",
          "1979:     }",
          "1980:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1979:      target->count = 0; // libtpms added",
          "1985:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1997:     if (rc == TPM_RC_SUCCESS) {",
          "1998:  if (target->count > HASH_COUNT) {",
          "1999:      rc = TPM_RC_SIZE;",
          "2000:  }",
          "2001:     }",
          "2002:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2008:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "2019:     if (rc == TPM_RC_SUCCESS) {",
          "2020:  if (target->count > HASH_COUNT) {",
          "2021:      rc = TPM_RC_SIZE;",
          "2022:  }",
          "2023:     }",
          "2024:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2031:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "2044:     if (rc == TPM_RC_SUCCESS) {",
          "2045:  if (target->count > MAX_CAP_ALGS) {",
          "2046:      rc = TPM_RC_SIZE;",
          "2047:  }",
          "2048:     }",
          "2049:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2057:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2066:     if (rc == TPM_RC_SUCCESS) {",
          "2067:  if (target->count > MAX_TPM_PROPERTIES) {",
          "2068:      rc = TPM_RC_SIZE;",
          "2069:  }",
          "2070:     }",
          "2071:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2080:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2088:     if (rc == TPM_RC_SUCCESS) {",
          "2089:  if (target->count > MAX_PCR_PROPERTIES) {",
          "2090:      rc = TPM_RC_SIZE;",
          "2091:  }",
          "2092:     }",
          "2093:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2103:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2110:     if (rc == TPM_RC_SUCCESS) {",
          "2111:  if (target->count > MAX_ECC_CURVES) {",
          "2112:      rc = TPM_RC_SIZE;",
          "2113:  }",
          "2114:     }",
          "2115:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2126:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2132:     if (rc == TPM_RC_SUCCESS) {",
          "2133:  if (target->count > MAX_TAGGED_POLICIES) {",
          "2134:      rc = TPM_RC_SIZE;",
          "2135:  }",
          "2136:     }",
          "2137:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2149:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2781:     if (rc == TPM_RC_SUCCESS) {",
          "2782:  if (target->size != startSize - *size) {",
          "2783:      rc = TPM_RC_SIZE;",
          "2784:  }",
          "2785:     }",
          "2786:     return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2799:      target->size = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "3540:     if (rc == TPM_RC_SUCCESS) {",
          "3541:  if (target->size != startSize - *size) {",
          "3542:      rc = TPM_RC_SIZE;",
          "3543:  }",
          "3544:     }",
          "3545:     return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3559:      target->size = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4063:     if (rc == TPM_RC_SUCCESS) {",
          "4064:  if (target->size != startSize - *size) {",
          "4065:      rc = TPM_RC_SIZE;",
          "4066:  }",
          "4067:     }",
          "4068:     return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4083:      target->size = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "4158:  if (rc == TPM_RC_SUCCESS) {",
          "4159:      if (target->size != startSize - *size) {",
          "4160:   rc = TPM_RC_SIZE;",
          "4161:      }",
          "4162:  }",
          "4163:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4179:   target->size = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "4233:     if (rc == TPM_RC_SUCCESS) {",
          "4234:  if (target->dataSize > MAX_NV_INDEX_SIZE) {",
          "4235:      rc = TPM_RC_SIZE;",
          "4236:  }",
          "4237:     }",
          "4238:     return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4255:      target->dataSize = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "4263:     if (rc == TPM_RC_SUCCESS) {",
          "4264:  if (target->size != startSize - *size) {",
          "4265:      rc = TPM_RC_SIZE;",
          "4266:  }",
          "4267:     }",
          "4268:     return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4286:      target->size = 0; // libtpms added",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ad2209b98ac63dfb615064c4c5221928a2ecd54b",
      "candidate_info": {
        "commit_hash": "ad2209b98ac63dfb615064c4c5221928a2ecd54b",
        "repo": "stefanberger/libtpms",
        "commit_url": "https://github.com/stefanberger/libtpms/commit/ad2209b98ac63dfb615064c4c5221928a2ecd54b",
        "files": [
          "src/tpm2/NVMarshal.c",
          "src/tpm2/Unmarshal.c"
        ],
        "message": "tpm2: Reset TPM2B buffer sizes after test fails for valid buffer size\n\nReset the buffer size indicator in a TPM2B type of buffer after it failed\nthe test for the maximum buffer size it allows. This prevents having bad\nbuffer sizes in memory that can come to haunt us when writing the volatile\nstate for example.\n\nSigned-off-by: Stefan Berger <stefanb@linux.ibm.com>",
        "before_after_code_files": [
          "src/tpm2/NVMarshal.c||src/tpm2/NVMarshal.c",
          "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/tpm2/NVMarshal.c||src/tpm2/NVMarshal.c",
            "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
          ],
          "candidate": [
            "src/tpm2/NVMarshal.c||src/tpm2/NVMarshal.c",
            "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
          ]
        }
      },
      "candidate_diff": {
        "src/tpm2/NVMarshal.c||src/tpm2/NVMarshal.c": [
          "File: src/tpm2/NVMarshal.c -> src/tpm2/NVMarshal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1435:                                 \"allocated %zu\\n\",",
          "1436:                                 (size_t)data->size, (size_t)data->allocated);",
          "1437:             rc = TPM_RC_SIZE;",
          "1438:         }",
          "1439:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1438:             data->size = 0;",
          "",
          "---------------"
        ],
        "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c": [
          "File: src/tpm2/Unmarshal.c -> src/tpm2/Unmarshal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "144:     if (rc == TPM_RC_SUCCESS) {",
          "145:  if (target->size > targetSize) {",
          "146:      rc = TPM_RC_SIZE;",
          "147:  }",
          "148:     }",
          "149:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "147:      target->size = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1650:  if ((target->sizeofSelect < PCR_SELECT_MIN) ||",
          "1651:      (target->sizeofSelect > PCR_SELECT_MAX)) {",
          "1652:      rc = TPM_RC_VALUE;",
          "1653:  }",
          "1654:     }",
          "1655:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1654:      target->sizeofSelect = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1820:     if (rc == TPM_RC_SUCCESS) {",
          "1821:  if (target->count > MAX_CAP_CC) {",
          "1822:      rc = TPM_RC_SIZE;",
          "1823:  }",
          "1824:     }",
          "1825:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1825:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1857:     if (rc == TPM_RC_SUCCESS) {",
          "1858:  if (target->count > MAX_CAP_CC) {",
          "1859:      rc = TPM_RC_SIZE;",
          "1860:  }",
          "1861:     }",
          "1862:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1863:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1879:     if (rc == TPM_RC_SUCCESS) {",
          "1880:  if (target->count > MAX_ALG_LIST_SIZE) {",
          "1881:      rc = TPM_RC_SIZE;",
          "1882:  }",
          "1883:     }",
          "1884:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1886:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1901:     if (rc == TPM_RC_SUCCESS) {",
          "1902:  if (target->count > MAX_CAP_HANDLES) {",
          "1903:      rc = TPM_RC_SIZE;",
          "1904:  }",
          "1905:     }",
          "1906:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1909:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1929:  if (target->count < 2) {",
          "1930:      rc = TPM_RC_SIZE;",
          "1931:  }",
          "1932:     }",
          "1933:     if (rc == TPM_RC_SUCCESS) {",
          "1934:  if (target->count > 8) {",
          "1935:      rc = TPM_RC_SIZE;",
          "1936:  }",
          "1937:     }",
          "1938:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1937:      target->count = 0; // libtpms added",
          "1943:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1955:     if (rc == TPM_RC_SUCCESS) {",
          "1956:  if (target->count > HASH_COUNT) {",
          "1957:      rc = TPM_RC_SIZE;",
          "1958:  }",
          "1959:     }",
          "1960:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1966:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1977:     if (rc == TPM_RC_SUCCESS) {",
          "1978:  if (target->count > HASH_COUNT) {",
          "1979:      rc = TPM_RC_SIZE;",
          "1980:  }",
          "1981:     }",
          "1982:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1989:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1999:     if (rc == TPM_RC_SUCCESS) {",
          "2000:  if (target->count > MAX_CAP_ALGS) {",
          "2001:      rc = TPM_RC_SIZE;",
          "2002:  }",
          "2003:     }",
          "2004:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2012:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "2021:     if (rc == TPM_RC_SUCCESS) {",
          "2022:  if (target->count > MAX_TPM_PROPERTIES) {",
          "2023:      rc = TPM_RC_SIZE;",
          "2024:  }",
          "2025:     }",
          "2026:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2035:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2043:     if (rc == TPM_RC_SUCCESS) {",
          "2044:  if (target->count > MAX_PCR_PROPERTIES) {",
          "2045:      rc = TPM_RC_SIZE;",
          "2046:  }",
          "2047:     }",
          "2048:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2058:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2065:     if (rc == TPM_RC_SUCCESS) {",
          "2066:  if (target->count > MAX_ECC_CURVES) {",
          "2067:      rc = TPM_RC_SIZE;",
          "2068:  }",
          "2069:     }",
          "2070:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2081:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2087:     if (rc == TPM_RC_SUCCESS) {",
          "2088:  if (target->count > MAX_TAGGED_POLICIES) {",
          "2089:      rc = TPM_RC_SIZE;",
          "2090:  }",
          "2091:     }",
          "2092:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2104:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2766:     if (rc == TPM_RC_SUCCESS) {",
          "2767:  if (target->size != startSize - *size) {",
          "2768:      rc = TPM_RC_SIZE;",
          "2769:  }",
          "2770:     }",
          "2771:     return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2784:      target->size = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "3542:     if (rc == TPM_RC_SUCCESS) {",
          "3543:  if (target->size != startSize - *size) {",
          "3544:      rc = TPM_RC_SIZE;",
          "3545:  }",
          "3546:     }",
          "3547:     return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3561:      target->size = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "4126:     if (rc == TPM_RC_SUCCESS) {",
          "4127:  if (target->size != startSize - *size) {",
          "4128:      rc = TPM_RC_SIZE;",
          "4129:  }",
          "4130:     }",
          "4131:     return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4146:      target->size = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "4236:  if (rc == TPM_RC_SUCCESS) {",
          "4237:      if (target->size != startSize - *size) {",
          "4238:   rc = TPM_RC_SIZE;",
          "4239:      }",
          "4240:  }",
          "4241:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4257:   target->size = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "4311:     if (rc == TPM_RC_SUCCESS) {",
          "4312:  if (target->dataSize > MAX_NV_INDEX_SIZE) {",
          "4313:      rc = TPM_RC_SIZE;",
          "4314:  }",
          "4315:     }",
          "4316:     return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4333:      target->dataSize = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "4341:     if (rc == TPM_RC_SUCCESS) {",
          "4342:  if (target->size != startSize - *size) {",
          "4343:      rc = TPM_RC_SIZE;",
          "4344:  }",
          "4345:     }",
          "4346:     return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4364:      target->size = 0; // libtpms added",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "52a82f3eb6d61833c22294cb6377b8cad14e8c83",
      "candidate_info": {
        "commit_hash": "52a82f3eb6d61833c22294cb6377b8cad14e8c83",
        "repo": "stefanberger/libtpms",
        "commit_url": "https://github.com/stefanberger/libtpms/commit/52a82f3eb6d61833c22294cb6377b8cad14e8c83",
        "files": [
          "src/tpm2/NVMarshal.c",
          "src/tpm2/Unmarshal.c"
        ],
        "message": "tpm2: Reset TPM2B buffer sizes after test fails for valid buffer size\n\nReset the buffer size indicator in a TPM2B type of buffer after it failed\nthe test for the maximum buffer size it allows. This prevents having bad\nbuffer sizes in memory that can come to haunt us when writing the volatile\nstate for example.\n\nSigned-off-by: Stefan Berger <stefanb@linux.ibm.com>",
        "before_after_code_files": [
          "src/tpm2/NVMarshal.c||src/tpm2/NVMarshal.c",
          "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/tpm2/NVMarshal.c||src/tpm2/NVMarshal.c",
            "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
          ],
          "candidate": [
            "src/tpm2/NVMarshal.c||src/tpm2/NVMarshal.c",
            "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c"
          ]
        }
      },
      "candidate_diff": {
        "src/tpm2/NVMarshal.c||src/tpm2/NVMarshal.c": [
          "File: src/tpm2/NVMarshal.c -> src/tpm2/NVMarshal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1440:                                 \"allocated %zu\\n\",",
          "1441:                                 (size_t)data->size, (size_t)data->allocated);",
          "1442:             rc = TPM_RC_SIZE;",
          "1443:         }",
          "1444:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1443:             data->size = 0;",
          "",
          "---------------"
        ],
        "src/tpm2/Unmarshal.c||src/tpm2/Unmarshal.c": [
          "File: src/tpm2/Unmarshal.c -> src/tpm2/Unmarshal.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "137:     if (rc == TPM_RC_SUCCESS) {",
          "138:  if (target->size > targetSize) {",
          "139:      rc = TPM_RC_SIZE;",
          "140:  }",
          "141:     }",
          "142:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "140:      target->size = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1617:  if ((target->sizeofSelect < PCR_SELECT_MIN) ||",
          "1618:      (target->sizeofSelect > PCR_SELECT_MAX)) {",
          "1619:      rc = TPM_RC_VALUE;",
          "1620:  }",
          "1621:     }",
          "1622:     if (rc == TPM_RC_SUCCESS) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1621:      target->sizeofSelect = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1787:     if (rc == TPM_RC_SUCCESS) {",
          "1788:  if (target->count > MAX_CAP_CC) {",
          "1789:      rc = TPM_RC_SIZE;",
          "1790:  }",
          "1791:     }",
          "1792:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1792:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "1824:     if (rc == TPM_RC_SUCCESS) {",
          "1825:  if (target->count > MAX_CAP_CC) {",
          "1826:      rc = TPM_RC_SIZE;",
          "1827:  }",
          "1828:     }",
          "1829:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1830:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1846:     if (rc == TPM_RC_SUCCESS) {",
          "1847:  if (target->count > MAX_ALG_LIST_SIZE) {",
          "1848:      rc = TPM_RC_SIZE;",
          "1849:  }",
          "1850:     }",
          "1851:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1853:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1868:     if (rc == TPM_RC_SUCCESS) {",
          "1869:  if (target->count > MAX_CAP_HANDLES) {",
          "1870:      rc = TPM_RC_SIZE;",
          "1871:  }",
          "1872:     }",
          "1873:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1876:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1896:  if (target->count < 2) {",
          "1897:      rc = TPM_RC_SIZE;",
          "1898:  }",
          "1899:     }",
          "1900:     if (rc == TPM_RC_SUCCESS) {",
          "1901:  if (target->count > 8) {",
          "1902:      rc = TPM_RC_SIZE;",
          "1903:  }",
          "1904:     }",
          "1905:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1904:      target->count = 0; // libtpms added",
          "1910:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1922:     if (rc == TPM_RC_SUCCESS) {",
          "1923:  if (target->count > HASH_COUNT) {",
          "1924:      rc = TPM_RC_SIZE;",
          "1925:  }",
          "1926:     }",
          "1927:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1933:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1944:     if (rc == TPM_RC_SUCCESS) {",
          "1945:  if (target->count > HASH_COUNT) {",
          "1946:      rc = TPM_RC_SIZE;",
          "1947:  }",
          "1948:     }",
          "1949:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1956:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1967:     if (rc == TPM_RC_SUCCESS) {",
          "1968:  if (target->count > MAX_CAP_ALGS) {",
          "1969:      rc = TPM_RC_SIZE;",
          "1970:  }",
          "1971:     }",
          "1972:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1980:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1989:     if (rc == TPM_RC_SUCCESS) {",
          "1990:  if (target->count > MAX_TPM_PROPERTIES) {",
          "1991:      rc = TPM_RC_SIZE;",
          "1992:  }",
          "1993:     }",
          "1994:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2003:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "2011:     if (rc == TPM_RC_SUCCESS) {",
          "2012:  if (target->count > MAX_PCR_PROPERTIES) {",
          "2013:      rc = TPM_RC_SIZE;",
          "2014:  }",
          "2015:     }",
          "2016:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2026:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "2033:     if (rc == TPM_RC_SUCCESS) {",
          "2034:  if (target->count > MAX_ECC_CURVES) {",
          "2035:      rc = TPM_RC_SIZE;",
          "2036:  }",
          "2037:     }",
          "2038:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2049:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "2055:     if (rc == TPM_RC_SUCCESS) {",
          "2056:  if (target->count > MAX_TAGGED_POLICIES) {",
          "2057:      rc = TPM_RC_SIZE;",
          "2058:  }",
          "2059:     }",
          "2060:     for (i = 0 ; (rc == TPM_RC_SUCCESS) && (i < target->count) ; i++) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2072:      target->count = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "2704:     if (rc == TPM_RC_SUCCESS) {",
          "2705:  if (target->size != startSize - *size) {",
          "2706:      rc = TPM_RC_SIZE;",
          "2707:  }",
          "2708:     }",
          "2709:     return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2722:      target->size = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "3462:     if (rc == TPM_RC_SUCCESS) {",
          "3463:  if (target->size != startSize - *size) {",
          "3464:      rc = TPM_RC_SIZE;",
          "3465:  }",
          "3466:     }",
          "3467:     return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3481:      target->size = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "3985:     if (rc == TPM_RC_SUCCESS) {",
          "3986:  if (target->size != startSize - *size) {",
          "3987:      rc = TPM_RC_SIZE;",
          "3988:  }",
          "3989:     }",
          "3990:     return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4005:      target->size = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "4080:  if (rc == TPM_RC_SUCCESS) {",
          "4081:      if (target->size != startSize - *size) {",
          "4082:   rc = TPM_RC_SIZE;",
          "4083:      }",
          "4084:  }",
          "4085:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4101:   target->size = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "4155:     if (rc == TPM_RC_SUCCESS) {",
          "4156:  if (target->dataSize > MAX_NV_INDEX_SIZE) {",
          "4157:      rc = TPM_RC_SIZE;",
          "4158:  }",
          "4159:     }",
          "4160:     return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4177:      target->dataSize = 0; // libtpms added",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "4185:     if (rc == TPM_RC_SUCCESS) {",
          "4186:  if (target->size != startSize - *size) {",
          "4187:      rc = TPM_RC_SIZE;",
          "4188:  }",
          "4189:     }",
          "4190:     return rc;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4208:      target->size = 0; // libtpms added",
          "",
          "---------------"
        ]
      }
    }
  ]
}