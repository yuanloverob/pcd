{
  "cve_id": "CVE-2023-29204",
  "cve_desc": "XWiki Commons are technical libraries common to several other top level XWiki projects. It is possible to bypass the existing security measures put in place to avoid open redirect by using a redirect such as `//mydomain.com` (i.e. omitting the `http:`). It was also possible to bypass it when using URL such as `http:/mydomain.com`. The problem has been patched on XWiki 13.10.10, 14.4.4 and 14.8RC1.\n",
  "repo": "xwiki/xwiki-platform",
  "patch_hash": "e4f7f68e93cb08c25632c126356d218abf192d1e",
  "patch_info": {
    "commit_hash": "e4f7f68e93cb08c25632c126356d218abf192d1e",
    "repo": "xwiki/xwiki-platform",
    "commit_url": "https://github.com/xwiki/xwiki-platform/commit/e4f7f68e93cb08c25632c126356d218abf192d1e",
    "files": [
      "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
      "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java"
    ],
    "message": "XWIKI-19994: False positive redirect checking",
    "before_after_code_files": [
      "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java||xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
      "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java||xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java"
    ]
  },
  "patch_diff": {
    "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java||xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java": [
      "File: xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java -> xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "38: public class XWikiServletResponse implements XWikiResponse",
      "39: {",
      "40:     private static final Logger LOGGER = LoggerFactory.getLogger(XWikiServletResponse.class);",
      "43:     private HttpServletResponse response;",
      "",
      "[Removed Lines]",
      "41:     private static final Pattern ABSOLUTE_URL_PATTERN = Pattern.compile(\"[a-z0-9]+://.*\");",
      "",
      "[Added Lines]",
      "41:     private static final Pattern ABSOLUTE_URL_PATTERN = Pattern.compile(\"[a-z0-9]+:/[/]?.*\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "71:             return;",
      "72:         }",
      "75:         if (ABSOLUTE_URL_PATTERN.matcher(redirect).matches()) {",
      "76:             if (!getURLSecurityManager().isDomainTrusted(new URL(redirect))) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "74:         if (StringUtils.startsWith(redirect, \"//\")) {",
      "75:             LOGGER.warn(\"Possible phishing attack, attempting to redirect to [{}]. If this request is legitimate, \"",
      "76:                 + \"use an actual absolute URL and pay attention to configure properly url.trustedDomains in \"",
      "77:                 + \"xwiki.properties\", redirect);",
      "78:             return;",
      "79:         }",
      "",
      "---------------"
    ],
    "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java||xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java": [
      "File: xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java -> xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20: package com.xpn.xwiki.web;",
      "22: import java.io.IOException;",
      "23: import java.net.URL;",
      "25: import javax.servlet.http.HttpServletResponse;",
      "27: import org.apache.ecs.wml.U;",
      "28: import org.junit.jupiter.api.BeforeEach;",
      "29: import org.junit.jupiter.api.Test;",
      "30: import org.xwiki.component.manager.ComponentManager;",
      "31: import org.xwiki.test.annotation.BeforeComponent;",
      "32: import org.xwiki.test.junit5.mockito.ComponentTest;",
      "33: import org.xwiki.test.junit5.mockito.InjectMockComponents;",
      "34: import org.xwiki.test.junit5.mockito.MockComponent;",
      "35: import org.xwiki.test.mockito.MockitoComponentManager;",
      "36: import org.xwiki.url.URLSecurityManager;",
      "38: import static org.junit.jupiter.api.Assertions.*;",
      "39: import static org.mockito.ArgumentMatchers.any;",
      "40: import static org.mockito.Mockito.mock;",
      "41: import static org.mockito.Mockito.never;",
      "42: import static org.mockito.Mockito.verify;",
      "43: import static org.mockito.Mockito.when;",
      "50: @ComponentTest",
      "51: class XWikiServletResponseTest",
      "52: {",
      "53:     @MockComponent",
      "54:     private URLSecurityManager urlSecurityManager;",
      "56:     private XWikiServletResponse servletResponse;",
      "57:     private HttpServletResponse httpServletResponse;",
      "59:     @BeforeComponent",
      "60:     void beforeComponent(MockitoComponentManager mockitoComponentManager) throws Exception",
      "61:     {",
      "62:         mockitoComponentManager.registerComponent(ComponentManager.class, \"context\", mockitoComponentManager);",
      "63:         Utils.setComponentManager(mockitoComponentManager);",
      "64:     }",
      "66:     @BeforeEach",
      "67:     void setup()",
      "68:     {",
      "69:         this.httpServletResponse = mock(HttpServletResponse.class);",
      "70:         this.servletResponse = new XWikiServletResponse(this.httpServletResponse);",
      "71:     }",
      "73:     @Test",
      "74:     void sendRedirect() throws IOException",
      "75:     {",
      "76:         this.servletResponse.sendRedirect(\"\");",
      "77:         verify(this.httpServletResponse, never()).sendRedirect(any());",
      "79:         this.servletResponse.sendRedirect(\"/xwiki/\\n/something/\");",
      "80:         verify(this.httpServletResponse, never()).sendRedirect(any());",
      "82:         this.servletResponse.sendRedirect(\"//xwiki.org/xwiki/something/\");",
      "83:         verify(this.httpServletResponse, never()).sendRedirect(any());",
      "85:         String redirect = \"http://xwiki.org/xwiki/something/\";",
      "86:         URL redirectUrl = new URL(redirect);",
      "87:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(false);",
      "88:         this.servletResponse.sendRedirect(redirect);",
      "89:         verify(this.httpServletResponse, never()).sendRedirect(any());",
      "90:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
      "92:         redirect = \"http:/xwiki.com/xwiki/something/\";",
      "93:         redirectUrl = new URL(redirect);",
      "94:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(false);",
      "95:         this.servletResponse.sendRedirect(redirect);",
      "96:         verify(this.httpServletResponse, never()).sendRedirect(any());",
      "97:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
      "99:         redirect = \"https://floo\";",
      "100:         redirectUrl = new URL(redirect);",
      "101:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(false);",
      "102:         this.servletResponse.sendRedirect(redirect);",
      "103:         verify(this.httpServletResponse, never()).sendRedirect(any());",
      "104:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
      "106:         redirect = \"ftp://xwiki.org/xwiki/something/\";",
      "107:         redirectUrl = new URL(redirect);",
      "108:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(false);",
      "109:         this.servletResponse.sendRedirect(redirect);",
      "110:         verify(this.httpServletResponse, never()).sendRedirect(any());",
      "111:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
      "113:         this.servletResponse.sendRedirect(\"/xwiki/something/\");",
      "114:         verify(this.httpServletResponse).sendRedirect(\"/xwiki/something/\");",
      "116:         redirect = \"http://xwiki.org/foo/\";",
      "117:         redirectUrl = new URL(redirect);",
      "118:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(true);",
      "119:         this.servletResponse.sendRedirect(redirect);",
      "120:         verify(this.httpServletResponse).sendRedirect(redirect);",
      "121:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
      "122:     }",
      "123: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0da8000c394c527ffed1291edb1e9784ddfc0b99",
      "candidate_info": {
        "commit_hash": "0da8000c394c527ffed1291edb1e9784ddfc0b99",
        "repo": "xwiki/xwiki-platform",
        "commit_url": "https://github.com/xwiki/xwiki-platform/commit/0da8000c394c527ffed1291edb1e9784ddfc0b99",
        "files": [
          "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
          "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/resources/META-INF/components.txt",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java",
          "xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm"
        ],
        "message": "Revert \"XWIKI-20549: Provide a new script service API to check trustfulness of an URI (#2047)\"\n\nThis reverts commit c554099a3c1737c3d0cc0dd8ddc9598ffac5a564.",
        "before_after_code_files": [
          "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java||xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
          "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java||xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java",
          "xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm||xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java||xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
            "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java||xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java"
          ],
          "candidate": [
            "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java||xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
            "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java||xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java"
          ]
        }
      },
      "candidate_diff": {
        "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java||xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java": [
          "File: xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java -> xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.io.IOException;",
          "23: import java.io.PrintWriter;",
          "26: import java.net.URL;",
          "27: import java.util.Collection;",
          "28: import java.util.Locale;",
          "",
          "[Removed Lines]",
          "24: import java.net.URI;",
          "25: import java.net.URISyntaxException;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33: import javax.servlet.http.HttpServletResponse;",
          "35: import org.apache.commons.lang3.StringUtils;",
          "37: import org.slf4j.Logger;",
          "38: import org.slf4j.LoggerFactory;",
          "39: import org.xwiki.url.URLSecurityManager;",
          "",
          "[Removed Lines]",
          "36: import org.apache.commons.lang3.exception.ExceptionUtils;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "65:     @Override",
          "66:     public void sendRedirect(String redirect) throws IOException",
          "67:     {",
          "85:             }",
          "86:         }",
          "87:     }",
          "89:     private URLSecurityManager getURLSecurityManager()",
          "",
          "[Removed Lines]",
          "68:         if (!StringUtils.isBlank(redirect)) {",
          "69:             try {",
          "70:                 URI uri = new URI(redirect);",
          "71:                 if (!getURLSecurityManager().isURITrusted(uri)) {",
          "72:                     LOGGER.warn(",
          "73:                         \"Possible phishing attack, attempting to redirect to [{}], this request has been blocked. \"",
          "74:                             + \"If the request was legitimate, please check the URL security configuration. You \"",
          "75:                             + \"might need to add the domain related to this request in the list of trusted domains in \"",
          "76:                             + \"the configuration: it can be configured in xwiki.properties in url.trustedDomains.\",",
          "77:                         redirect);",
          "78:                 } else {",
          "79:                     this.response.sendRedirect(redirect);",
          "80:                 }",
          "81:             } catch (URISyntaxException e) {",
          "82:                 LOGGER.error(\"Error while transforming redirect to [{}] to proper URI: [{}]\", redirect,",
          "83:                     ExceptionUtils.getRootCauseMessage(e));",
          "84:                 LOGGER.debug(\"Full stack trace:\", e);",
          "",
          "[Added Lines]",
          "65:         if (StringUtils.isBlank(redirect)) {",
          "67:             return;",
          "68:         }",
          "69:         if (StringUtils.containsAny(redirect, '\\r', '\\n')) {",
          "70:             LOGGER.warn(\"Possible HTTP Response Splitting attack, attempting to redirect to [{}]\", redirect);",
          "71:             return;",
          "72:         }",
          "74:         if (StringUtils.startsWith(redirect, \"//\")) {",
          "75:             LOGGER.warn(\"Possible phishing attack, attempting to redirect to [{}]. If this request is legitimate, \"",
          "76:                 + \"use an actual absolute URL and pay attention to configure properly url.trustedDomains in \"",
          "77:                 + \"xwiki.properties\", redirect);",
          "78:             return;",
          "79:         }",
          "82:         if (ABSOLUTE_URL_PATTERN.matcher(redirect).matches()) {",
          "83:             if (!getURLSecurityManager().isDomainTrusted(new URL(redirect))) {",
          "84:                 LOGGER.warn(",
          "85:                     \"Possible phishing attack, attempting to redirect to [{}], this request has been blocked. \"",
          "86:                         + \"If the request was legitimate, add the domain related to this request in the list \"",
          "87:                         + \"of trusted domains in the configuration: it can be configured in xwiki.properties in \"",
          "88:                         + \"url.trustedDomains.\", redirect);",
          "89:                 return;",
          "92:         this.response.sendRedirect(redirect);",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java||xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java": [
          "File: xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java -> xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package com.xpn.xwiki.web;",
          "22: import java.io.IOException;",
          "25: import java.net.URL;",
          "27: import javax.servlet.http.HttpServletResponse;",
          "29: import org.junit.jupiter.api.BeforeEach;",
          "30: import org.junit.jupiter.api.Test;",
          "32: import org.xwiki.component.manager.ComponentManager;",
          "34: import org.xwiki.test.annotation.BeforeComponent;",
          "36: import org.xwiki.test.junit5.mockito.ComponentTest;",
          "37: import org.xwiki.test.junit5.mockito.MockComponent;",
          "38: import org.xwiki.test.mockito.MockitoComponentManager;",
          "39: import org.xwiki.url.URLSecurityManager;",
          "42: import static org.mockito.ArgumentMatchers.any;",
          "43: import static org.mockito.Mockito.mock;",
          "44: import static org.mockito.Mockito.never;",
          "",
          "[Removed Lines]",
          "23: import java.net.URI;",
          "24: import java.net.URISyntaxException;",
          "31: import org.junit.jupiter.api.extension.RegisterExtension;",
          "33: import org.xwiki.test.LogLevel;",
          "35: import org.xwiki.test.junit5.LogCaptureExtension;",
          "41: import static org.junit.jupiter.api.Assertions.assertEquals;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:     private XWikiServletResponse servletResponse;",
          "60:     private HttpServletResponse httpServletResponse;",
          "65:     @BeforeComponent",
          "66:     void beforeComponent(MockitoComponentManager mockitoComponentManager) throws Exception",
          "67:     {",
          "",
          "[Removed Lines]",
          "62:     @RegisterExtension",
          "63:     LogCaptureExtension logCapture = new LogCaptureExtension(LogLevel.WARN);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "77:     }",
          "79:     @Test",
          "81:     {",
          "82:         this.servletResponse.sendRedirect(\"\");",
          "83:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "85:         this.servletResponse.sendRedirect(\"/xwiki/\\n/something/\");",
          "86:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "93:         this.servletResponse.sendRedirect(\"//xwiki.org/xwiki/something/\");",
          "94:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "106:     }",
          "107: }",
          "",
          "[Removed Lines]",
          "80:     void sendRedirect() throws IOException, URISyntaxException",
          "87:         assertEquals(1, this.logCapture.size());",
          "88:         assertEquals(\"Error while transforming redirect to [/xwiki/\\n\"",
          "89:             + \"/something/] to proper URI: [URISyntaxException: Illegal character in path at index 7: /xwiki/\\n\"",
          "90:             + \"/something/]\", this.logCapture.getMessage(0));",
          "95:         assertEquals(2, this.logCapture.size());",
          "96:         assertEquals(\"Possible phishing attack, attempting to redirect to [//xwiki.org/xwiki/something/], this request\"",
          "97:                 + \" has been blocked. If the request was legitimate, please check the URL security configuration. \"",
          "98:                 + \"You might need to add the domain related to this request in the list of trusted domains in the \"",
          "99:                 + \"configuration: it can be configured in xwiki.properties in url.trustedDomains.\",",
          "100:             this.logCapture.getMessage(1));",
          "102:         URI expectedURI = new URI(\"//xwiki.org/xwiki/something/\");",
          "103:         when(this.urlSecurityManager.isURITrusted(expectedURI)).thenReturn(true);",
          "104:         this.servletResponse.sendRedirect(\"//xwiki.org/xwiki/something/\");",
          "105:         verify(this.httpServletResponse).sendRedirect(\"//xwiki.org/xwiki/something/\");",
          "",
          "[Added Lines]",
          "71:     void sendRedirect() throws IOException",
          "82:         String redirect = \"http://xwiki.org/xwiki/something/\";",
          "83:         URL redirectUrl = new URL(redirect);",
          "84:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(false);",
          "85:         this.servletResponse.sendRedirect(redirect);",
          "86:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "87:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
          "89:         redirect = \"http:/xwiki.com/xwiki/something/\";",
          "90:         redirectUrl = new URL(redirect);",
          "91:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(false);",
          "92:         this.servletResponse.sendRedirect(redirect);",
          "93:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "94:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
          "96:         redirect = \"https://floo\";",
          "97:         redirectUrl = new URL(redirect);",
          "98:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(false);",
          "99:         this.servletResponse.sendRedirect(redirect);",
          "100:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "101:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
          "103:         redirect = \"ftp://xwiki.org/xwiki/something/\";",
          "104:         redirectUrl = new URL(redirect);",
          "105:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(false);",
          "106:         this.servletResponse.sendRedirect(redirect);",
          "107:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "108:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
          "110:         this.servletResponse.sendRedirect(\"/xwiki/something/\");",
          "111:         verify(this.httpServletResponse).sendRedirect(\"/xwiki/something/\");",
          "113:         redirect = \"http://xwiki.org/foo/\";",
          "114:         redirectUrl = new URL(redirect);",
          "115:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(true);",
          "116:         this.servletResponse.sendRedirect(redirect);",
          "117:         verify(this.httpServletResponse).sendRedirect(redirect);",
          "118:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:     {",
          "78:         return true;",
          "79:     }",
          "95: }",
          "",
          "[Removed Lines]",
          "90:     @Unstable",
          "91:     default List<String> getTrustedSchemes()",
          "92:     {",
          "93:         return List.of(\"http\", \"https\", \"ftp\");",
          "94:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package org.xwiki.url;",
          "23: import java.net.URL;",
          "25: import org.xwiki.component.annotation.Role;",
          "",
          "[Removed Lines]",
          "22: import java.net.URI;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:     boolean isDomainTrusted(URL urlToCheck);",
          "79: }",
          "",
          "[Removed Lines]",
          "74:     @Unstable",
          "75:     default boolean isURITrusted(URI uri)",
          "76:     {",
          "77:         return false;",
          "78:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:     {",
          "76:         return this.configuration.get().getProperty(PREFIX + \"trustedDomainsEnabled\", true);",
          "77:     }",
          "84: }",
          "",
          "[Removed Lines]",
          "79:     @Override",
          "80:     public List<String> getTrustedSchemes()",
          "81:     {",
          "82:         return this.configuration.get().getProperty(PREFIX + \"trustedSchemes\", List.of(\"http\", \"https\", \"ftp\"));",
          "83:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package org.xwiki.url.internal;",
          "22: import java.net.MalformedURLException;",
          "25: import java.net.URL;",
          "26: import java.util.HashSet;",
          "27: import java.util.Set;",
          "",
          "[Removed Lines]",
          "23: import java.net.URI;",
          "24: import java.net.URISyntaxException;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:     private void computeTrustedDomains()",
          "79:     {",
          "80:         this.trustedDomains = new HashSet<>(this.urlConfiguration.getTrustedDomains());",
          "82:         try {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "78:         Set<String> domains;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "150:     {",
          "151:         this.trustedDomains = null;",
          "152:     }",
          "198: }",
          "",
          "[Removed Lines]",
          "154:     @Override",
          "155:     public boolean isURITrusted(URI uri)",
          "156:     {",
          "157:         boolean result = true;",
          "163:         if (uri.isOpaque()) {",
          "164:             result = false;",
          "165:         } else if (uri.getAuthority() != null) {",
          "169:             try {",
          "173:                 if (!uri.isAbsolute()) {",
          "174:                     URI uriWithScheme = new URI(\"https\",",
          "175:                         uri.getRawAuthority(),",
          "176:                         uri.getRawPath(),",
          "177:                         uri.getRawQuery(),",
          "178:                         uri.getRawFragment());",
          "179:                     result = this.isDomainTrusted(uriWithScheme.toURL());",
          "180:                 } else if (this.urlConfiguration.getTrustedSchemes().contains(uri.getScheme().toLowerCase())) {",
          "181:                     result = this.isDomainTrusted(uri.toURL());",
          "182:                 } else {",
          "183:                     result = false;",
          "184:                 }",
          "185:             } catch (MalformedURLException e) {",
          "186:                 logger.error(\"Error while transforming URI [{}] to URL: [{}]\", uri,",
          "187:                     ExceptionUtils.getRootCauseMessage(e));",
          "188:                 this.logger.debug(\"Full error stack trace of the URL resolution: \", e);",
          "189:                 result = false;",
          "190:             } catch (URISyntaxException e) {",
          "191:                 logger.error(\"Error while transforming URI [{}] to absolute URI with http scheme: [{}]\", uri,",
          "192:                     ExceptionUtils.getRootCauseMessage(e));",
          "193:                 this.logger.debug(\"Full error stack trace of the URI resolution: \", e);",
          "194:             }",
          "195:         }",
          "196:         return result;",
          "197:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package org.xwiki.url.internal;",
          "23: import java.net.MalformedURLException;",
          "26: import java.net.URL;",
          "27: import java.util.Arrays;",
          "28: import java.util.Collections;",
          "31: import javax.inject.Provider;",
          "32: import javax.servlet.http.HttpServletRequest;",
          "",
          "[Removed Lines]",
          "22: import java.io.IOException;",
          "24: import java.net.URI;",
          "25: import java.net.URISyntaxException;",
          "29: import java.util.List;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52: import static org.hamcrest.MatcherAssert.assertThat;",
          "53: import static org.junit.jupiter.api.Assertions.assertEquals;",
          "57: import static org.mockito.Mockito.mock;",
          "61: import static org.mockito.Mockito.when;",
          "",
          "[Removed Lines]",
          "54: import static org.junit.jupiter.api.Assertions.assertFalse;",
          "55: import static org.junit.jupiter.api.Assertions.assertTrue;",
          "56: import static org.mockito.ArgumentMatchers.any;",
          "58: import static org.mockito.Mockito.never;",
          "59: import static org.mockito.Mockito.times;",
          "60: import static org.mockito.Mockito.verify;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "222:                 + \"it's considered as trusted since the check has been bypassed.\",",
          "223:             logCapture.getMessage(0));",
          "224:     }",
          "319: }",
          "",
          "[Removed Lines]",
          "226:     @Test",
          "227:     void isURITrustedWithEmptyTrustedDomainConfig() throws URISyntaxException",
          "228:     {",
          "229:         URI uri = new URI(\"\");",
          "230:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "232:         uri = new URI(\"//xwiki.org/xwiki/something/\");",
          "233:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "235:         uri = new URI(\"/xwiki/somepage\");",
          "236:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "238:         uri = new URI(\"http://xwiki.org/xwiki/something/\");",
          "239:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "241:         uri = new URI(\"http:xwiki.org/xwiki/something/\");",
          "242:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "244:         uri = new URI(\"ftp://xwiki.org/xwiki/something/\");",
          "245:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "247:         uri = new URI(\"mailto:foo@xwiki.org\");",
          "248:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "250:         uri = new URI(\"market://launch?id=somePackageName\");",
          "251:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "253:         verify(this.urlConfiguration, times(3)).getTrustedSchemes();",
          "256:         when(this.urlConfiguration.getTrustedSchemes()).thenReturn(List.of(\"http\", \"ftp\", \"mailto\", \"market\"));",
          "258:         uri = new URI(\"http://xwiki.org/xwiki/something/\");",
          "259:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "261:         uri = new URI(\"http:xwiki.org/xwiki/something/\");",
          "262:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "264:         uri = new URI(\"ftp://xwiki.org/xwiki/something/\");",
          "265:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "267:         uri = new URI(\"mailto:foo@xwiki.org\");",
          "268:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "270:         uri = new URI(\"market://launch?id=somePackageName\");",
          "271:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "272:         assertEquals(1, this.logCapture.size());",
          "273:         assertEquals(\"Error while transforming URI [market://launch?id=somePackageName] to URL: \"",
          "274:             + \"[MalformedURLException: unknown protocol: market]\", this.logCapture.getMessage(0));",
          "275:     }",
          "277:     @Test",
          "278:     void isURITrustedWithTrustedDomainConfig() throws URISyntaxException",
          "279:     {",
          "280:         when(urlConfiguration.getTrustedDomains()).thenReturn(Collections.singletonList(",
          "281:             \"xwiki.org\"",
          "282:         ));",
          "283:         when(this.urlConfiguration.getTrustedSchemes()).thenReturn(List.of(\"http\", \"ftp\", \"sftp\"));",
          "284:         URI uri = new URI(\"\");",
          "285:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "287:         uri = new URI(\"http://xwiki.org/xwiki/something/\");",
          "288:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "290:         uri = new URI(\"ftp://xwiki.org/xwiki/something/\");",
          "291:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "293:         uri = new URI(\"//xwiki.org/xwiki/something/\");",
          "294:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "296:         uri = new URI(\"http:xwiki.org/xwiki/something/\");",
          "297:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "299:         uri = new URI(\"http://floo\");",
          "300:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "303:         uri = new URI(\"https://xwiki.org/something\");",
          "304:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "306:         uri = new URI(\"/xwiki/something/\");",
          "307:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "309:         uri = new URI(\"mailto:foo@xwiki.org\");",
          "310:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "312:         uri = new URI(\"sftp://xwiki.org/something\");",
          "313:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "315:         assertEquals(1, this.logCapture.size());",
          "316:         assertEquals(\"Error while transforming URI [sftp://xwiki.org/something] to URL: \"",
          "317:             + \"[MalformedURLException: unknown protocol: sftp]\", this.logCapture.getMessage(0));",
          "318:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm||xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm": [
          "File: xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm -> xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm",
          "--- Hunk 1 ---",
          "[Context before]",
          "911: #-# By default this property is set to true:",
          "912: # url.trustedDomainsEnabled=true",
          "925: #-------------------------------------------------------------------------------------",
          "926: # Attachment",
          "927: #-------------------------------------------------------------------------------------",
          "",
          "[Removed Lines]",
          "914: #-# [Since 15.0RC1]",
          "915: #-# [Since 14.10.4]",
          "916: #-# Define the list of schemes that are allowed for trusted URIs. Those schemes are checked whenever an absolute URI",
          "917: #-# needs to be checked (e.g. before performing a redirect). Any URI whose scheme doesn't belong to that list will not",
          "918: #-# be considered trustful, even if the domain of the URI is trusted.",
          "919: #-# Also note that even if a protocol is added here to be trusted, it might need a custom protocol handler. By default,",
          "920: #-# only http,https,ftp and file protocols are handled.",
          "921: #-#",
          "922: #-# The default is:",
          "923: # url.trustedSchemes=http,https,ftp",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cf9dada5ab34522d221b3b1f371ea4b035aa1d86",
      "candidate_info": {
        "commit_hash": "cf9dada5ab34522d221b3b1f371ea4b035aa1d86",
        "repo": "xwiki/xwiki-platform",
        "commit_url": "https://github.com/xwiki/xwiki-platform/commit/cf9dada5ab34522d221b3b1f371ea4b035aa1d86",
        "files": [
          "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
          "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/resources/META-INF/components.txt",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java",
          "xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm"
        ],
        "message": "XWIKI-20549: Provide a new script service API to check trustfulness of an URI (#2054)\n\nThis reverts commits\n  * d56fd930a6adeba9b1d870d05bcdaed7891d6aaf\n  * 1ea01e4c93a627992a3049e1425e1f422b4449af\n  * f1393f94f78ecec06adf3dfda156d27125e7ac79\n\n  * re-apply changes previously done\n  * Add missing quoting during URI parsing to avoid parse errors.\n  * Provide new API to obtain a safe URI based on a string\n  * Fix since and doc\n\nCo-authored-by: Michael Hamann <michael.hamann@xwiki.com>\n(cherry picked from commit 03d34e75ffb0f64625b33abb40d0bb29a742fd3c)",
        "before_after_code_files": [
          "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java||xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
          "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java||xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java",
          "xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm||xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java||xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
            "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java||xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java"
          ],
          "candidate": [
            "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java||xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
            "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java||xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java"
          ]
        }
      },
      "candidate_diff": {
        "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java||xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java": [
          "File: xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java -> xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.io.IOException;",
          "23: import java.io.PrintWriter;",
          "25: import java.util.Collection;",
          "26: import java.util.Locale;",
          "29: import javax.servlet.ServletOutputStream;",
          "30: import javax.servlet.http.Cookie;",
          "",
          "[Removed Lines]",
          "24: import java.net.URL;",
          "27: import java.util.regex.Pattern;",
          "",
          "[Added Lines]",
          "24: import java.net.URI;",
          "25: import java.net.URISyntaxException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38: public class XWikiServletResponse implements XWikiResponse",
          "39: {",
          "40:     private static final Logger LOGGER = LoggerFactory.getLogger(XWikiServletResponse.class);",
          "43:     private HttpServletResponse response;",
          "",
          "[Removed Lines]",
          "41:     private static final Pattern ABSOLUTE_URL_PATTERN = Pattern.compile(\"[a-z0-9]+:/[/]?.*\");",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "62:     @Override",
          "63:     public void sendRedirect(String redirect) throws IOException",
          "64:     {",
          "84:                 LOGGER.warn(",
          "85:                     \"Possible phishing attack, attempting to redirect to [{}], this request has been blocked. \"",
          "90:             }",
          "91:         }",
          "93:     }",
          "95:     private URLSecurityManager getURLSecurityManager()",
          "",
          "[Removed Lines]",
          "65:         if (StringUtils.isBlank(redirect)) {",
          "67:             return;",
          "68:         }",
          "69:         if (StringUtils.containsAny(redirect, '\\r', '\\n')) {",
          "70:             LOGGER.warn(\"Possible HTTP Response Splitting attack, attempting to redirect to [{}]\", redirect);",
          "71:             return;",
          "72:         }",
          "74:         if (StringUtils.startsWith(redirect, \"//\")) {",
          "75:             LOGGER.warn(\"Possible phishing attack, attempting to redirect to [{}]. If this request is legitimate, \"",
          "76:                 + \"use an actual absolute URL and pay attention to configure properly url.trustedDomains in \"",
          "77:                 + \"xwiki.properties\", redirect);",
          "78:             return;",
          "79:         }",
          "82:         if (ABSOLUTE_URL_PATTERN.matcher(redirect).matches()) {",
          "83:             if (!getURLSecurityManager().isDomainTrusted(new URL(redirect))) {",
          "86:                         + \"If the request was legitimate, add the domain related to this request in the list \"",
          "87:                         + \"of trusted domains in the configuration: it can be configured in xwiki.properties in \"",
          "88:                         + \"url.trustedDomains.\", redirect);",
          "89:                 return;",
          "92:         this.response.sendRedirect(redirect);",
          "",
          "[Added Lines]",
          "64:         if (!StringUtils.isBlank(redirect)) {",
          "65:             URI uri;",
          "66:             try {",
          "67:                 uri = getURLSecurityManager().parseToSafeURI(redirect);",
          "68:                 this.response.sendRedirect(uri.toString());",
          "69:             } catch (URISyntaxException | SecurityException e) {",
          "72:                         + \"If the request was legitimate, please check the URL security configuration. You \"",
          "73:                         + \"might need to add the domain related to this request in the list of trusted domains in \"",
          "74:                         + \"the configuration: it can be configured in xwiki.properties in url.trustedDomains.\",",
          "75:                     redirect);",
          "76:                 LOGGER.debug(\"Original error preventing the redirect: \", e);",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java||xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java": [
          "File: xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java -> xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package com.xpn.xwiki.web;",
          "22: import java.io.IOException;",
          "25: import javax.servlet.http.HttpServletResponse;",
          "27: import org.junit.jupiter.api.BeforeEach;",
          "28: import org.junit.jupiter.api.Test;",
          "29: import org.xwiki.component.manager.ComponentManager;",
          "30: import org.xwiki.test.annotation.BeforeComponent;",
          "31: import org.xwiki.test.junit5.mockito.ComponentTest;",
          "32: import org.xwiki.test.junit5.mockito.MockComponent;",
          "33: import org.xwiki.test.mockito.MockitoComponentManager;",
          "34: import org.xwiki.url.URLSecurityManager;",
          "36: import static org.mockito.ArgumentMatchers.any;",
          "37: import static org.mockito.Mockito.mock;",
          "38: import static org.mockito.Mockito.never;",
          "",
          "[Removed Lines]",
          "23: import java.net.URL;",
          "",
          "[Added Lines]",
          "23: import java.net.URI;",
          "24: import java.net.URISyntaxException;",
          "30: import org.junit.jupiter.api.extension.RegisterExtension;",
          "32: import org.xwiki.test.LogLevel;",
          "34: import org.xwiki.test.junit5.LogCaptureExtension;",
          "40: import static org.junit.jupiter.api.Assertions.assertEquals;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:     private XWikiServletResponse servletResponse;",
          "54:     private HttpServletResponse httpServletResponse;",
          "56:     @BeforeComponent",
          "57:     void beforeComponent(MockitoComponentManager mockitoComponentManager) throws Exception",
          "58:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "61:     @RegisterExtension",
          "62:     LogCaptureExtension logCapture = new LogCaptureExtension(LogLevel.WARN);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "68:     }",
          "70:     @Test",
          "72:     {",
          "73:         this.servletResponse.sendRedirect(\"\");",
          "74:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "119:     }",
          "",
          "[Removed Lines]",
          "71:     void sendRedirect() throws IOException",
          "76:         this.servletResponse.sendRedirect(\"/xwiki/\\n/something/\");",
          "77:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "79:         this.servletResponse.sendRedirect(\"//xwiki.org/xwiki/something/\");",
          "80:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "82:         String redirect = \"http://xwiki.org/xwiki/something/\";",
          "83:         URL redirectUrl = new URL(redirect);",
          "84:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(false);",
          "85:         this.servletResponse.sendRedirect(redirect);",
          "86:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "87:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
          "89:         redirect = \"http:/xwiki.com/xwiki/something/\";",
          "90:         redirectUrl = new URL(redirect);",
          "91:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(false);",
          "92:         this.servletResponse.sendRedirect(redirect);",
          "93:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "94:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
          "96:         redirect = \"https://floo\";",
          "97:         redirectUrl = new URL(redirect);",
          "98:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(false);",
          "99:         this.servletResponse.sendRedirect(redirect);",
          "100:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "101:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
          "103:         redirect = \"ftp://xwiki.org/xwiki/something/\";",
          "104:         redirectUrl = new URL(redirect);",
          "105:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(false);",
          "106:         this.servletResponse.sendRedirect(redirect);",
          "107:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "108:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
          "110:         this.servletResponse.sendRedirect(\"/xwiki/something/\");",
          "111:         verify(this.httpServletResponse).sendRedirect(\"/xwiki/something/\");",
          "113:         redirect = \"http://xwiki.org/foo/\";",
          "114:         redirectUrl = new URL(redirect);",
          "115:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(true);",
          "116:         this.servletResponse.sendRedirect(redirect);",
          "117:         verify(this.httpServletResponse).sendRedirect(redirect);",
          "118:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
          "120: }",
          "",
          "[Added Lines]",
          "79:     void sendRedirect() throws IOException, URISyntaxException",
          "84:         String location = \"//xwiki.org/xwiki/something/\";",
          "85:         URI expectedURI = new URI(\"//xwiki.org/xwiki/something/\");",
          "86:         when(this.urlSecurityManager.parseToSafeURI(location)).thenReturn(expectedURI);",
          "87:         this.servletResponse.sendRedirect(location);",
          "88:         verify(this.httpServletResponse).sendRedirect(location);",
          "90:         when(this.urlSecurityManager.parseToSafeURI(location)).thenThrow(new SecurityException(\"Unsafe location\"));",
          "91:         this.servletResponse.sendRedirect(location);",
          "92:         assertEquals(1, this.logCapture.size());",
          "93:         assertEquals(\"Possible phishing attack, attempting to redirect to [//xwiki.org/xwiki/something/], this request\"",
          "94:                 + \" has been blocked. If the request was legitimate, please check the URL security configuration. \"",
          "95:                 + \"You might need to add the domain related to this request in the list of trusted domains in the \"",
          "96:                 + \"configuration: it can be configured in xwiki.properties in url.trustedDomains.\",",
          "97:             this.logCapture.getMessage(0));",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:     {",
          "78:         return true;",
          "79:     }",
          "80: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "90:     @Unstable",
          "91:     default List<String> getTrustedSchemes()",
          "92:     {",
          "93:         return List.of(\"http\", \"https\", \"ftp\");",
          "94:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package org.xwiki.url;",
          "22: import java.net.URL;",
          "24: import org.xwiki.component.annotation.Role;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: import java.net.URI;",
          "23: import java.net.URISyntaxException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "55:     boolean isDomainTrusted(URL urlToCheck);",
          "56: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "75:     @Unstable",
          "76:     default boolean isURITrusted(URI uri)",
          "77:     {",
          "78:         return false;",
          "79:     }",
          "94:     @Unstable",
          "95:     default URI parseToSafeURI(String serializedURI) throws URISyntaxException, SecurityException",
          "96:     {",
          "97:         throw new SecurityException(\"Cannot guarantee safeness of \" + serializedURI);",
          "98:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: package org.xwiki.url.script;",
          "22: import java.net.URI;",
          "23: import java.net.URISyntaxException;",
          "25: import javax.inject.Inject;",
          "26: import javax.inject.Named;",
          "27: import javax.inject.Singleton;",
          "29: import org.xwiki.component.annotation.Component;",
          "30: import org.xwiki.script.service.ScriptService;",
          "31: import org.xwiki.stability.Unstable;",
          "32: import org.xwiki.url.URLSecurityManager;",
          "41: @Component",
          "42: @Named(\"security.url\")",
          "43: @Singleton",
          "44: @Unstable",
          "45: public class URLSecurityScriptService implements ScriptService",
          "46: {",
          "47:     @Inject",
          "48:     private URLSecurityManager urlSecurityManager;",
          "62:     public URI parseToSafeURI(String uriRepresentation) throws URISyntaxException, SecurityException",
          "63:     {",
          "64:         return this.urlSecurityManager.parseToSafeURI(uriRepresentation);",
          "65:     }",
          "66: }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: package org.xwiki.url.script;",
          "22: import java.net.URI;",
          "23: import java.net.URISyntaxException;",
          "25: import org.junit.jupiter.api.Test;",
          "26: import org.xwiki.test.junit5.mockito.ComponentTest;",
          "27: import org.xwiki.test.junit5.mockito.InjectMockComponents;",
          "28: import org.xwiki.test.junit5.mockito.MockComponent;",
          "29: import org.xwiki.url.URLSecurityManager;",
          "31: import static org.junit.jupiter.api.Assertions.assertEquals;",
          "32: import static org.mockito.Mockito.when;",
          "41: @ComponentTest",
          "42: class URLSecurityScriptServiceTest",
          "43: {",
          "44:     @InjectMockComponents",
          "45:     private URLSecurityScriptService scriptService;",
          "47:     @MockComponent",
          "48:     private URLSecurityManager urlSecurityManager;",
          "50:     @Test",
          "51:     void isURITrusted() throws URISyntaxException",
          "52:     {",
          "53:         String location = \"//xwiki.org/xwiki/something/\";",
          "54:         URI expectedURI = new URI(location);",
          "55:         when(this.urlSecurityManager.parseToSafeURI(location)).thenReturn(expectedURI);",
          "56:         assertEquals(expectedURI, this.scriptService.parseToSafeURI(location));",
          "57:     }",
          "58: }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:     {",
          "76:         return this.configuration.get().getProperty(PREFIX + \"trustedDomainsEnabled\", true);",
          "77:     }",
          "78: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:     @Override",
          "80:     public List<String> getTrustedSchemes()",
          "81:     {",
          "82:         return this.configuration.get().getProperty(PREFIX + \"trustedSchemes\", List.of(\"http\", \"https\", \"ftp\"));",
          "83:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package org.xwiki.url.internal;",
          "22: import java.net.MalformedURLException;",
          "23: import java.net.URL;",
          "24: import java.util.HashSet;",
          "25: import java.util.Set;",
          "27: import javax.inject.Inject;",
          "28: import javax.inject.Provider;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: import java.net.URI;",
          "24: import java.net.URISyntaxException;",
          "28: import java.util.regex.Matcher;",
          "29: import java.util.regex.Pattern;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56: {",
          "57:     private static final char DOT = '.';",
          "59:     @Inject",
          "60:     private URLConfiguration urlConfiguration;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64:     private static final Pattern URI_PATTERN =",
          "65:         Pattern.compile(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");",
          "67:     private static final String ERROR_TRANSFORMING_URI_LOG =",
          "68:         \"Error while transforming redirect to [{}] to proper URI: [{}]\";",
          "70:     private static final String FULL_STACK_TRACE = \"Full stack trace:\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "76:     private void computeTrustedDomains()",
          "77:     {",
          "79:         this.trustedDomains = new HashSet<>(this.urlConfiguration.getTrustedDomains());",
          "81:         try {",
          "",
          "[Removed Lines]",
          "78:         Set<String> domains;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "149:     {",
          "150:         this.trustedDomains = null;",
          "151:     }",
          "152: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "165:     @Override",
          "166:     public boolean isURITrusted(URI uri)",
          "167:     {",
          "168:         boolean result = true;",
          "176:         if (uri.isOpaque() || (uri.getAuthority() == null && uri.isAbsolute())) {",
          "177:             result = false;",
          "178:         } else if (uri.getAuthority() != null) {",
          "182:             try {",
          "186:                 if (!uri.isAbsolute()) {",
          "187:                     URI uriWithScheme = new URI(\"https\",",
          "188:                         uri.getRawAuthority(),",
          "189:                         uri.getRawPath(),",
          "190:                         uri.getRawQuery(),",
          "191:                         uri.getRawFragment());",
          "192:                     result = this.isDomainTrusted(uriWithScheme.toURL());",
          "193:                 } else if (this.urlConfiguration.getTrustedSchemes().contains(uri.getScheme().toLowerCase())) {",
          "194:                     result = this.isDomainTrusted(uri.toURL());",
          "195:                 } else {",
          "196:                     result = false;",
          "197:                 }",
          "198:             } catch (MalformedURLException e) {",
          "199:                 logger.error(\"Error while transforming URI [{}] to URL: [{}]\", uri,",
          "200:                     ExceptionUtils.getRootCauseMessage(e));",
          "201:                 this.logger.debug(\"Full error stack trace of the URL resolution: \", e);",
          "202:                 result = false;",
          "203:             } catch (URISyntaxException e) {",
          "204:                 logger.error(\"Error while transforming URI [{}] to absolute URI with http scheme: [{}]\", uri,",
          "205:                     ExceptionUtils.getRootCauseMessage(e));",
          "206:                 this.logger.debug(\"Full error stack trace of the URI resolution: \", e);",
          "207:             }",
          "208:         }",
          "209:         return result;",
          "210:     }",
          "212:     @Override",
          "213:     public URI parseToSafeURI(String serializedURI) throws URISyntaxException, SecurityException",
          "214:     {",
          "215:         URI uri;",
          "216:         try {",
          "217:             uri = new URI(serializedURI);",
          "218:         } catch (URISyntaxException e) {",
          "222:             Matcher matcher = URI_PATTERN.matcher(serializedURI);",
          "223:             if (matcher.matches()) {",
          "224:                 String scheme = matcher.group(2);",
          "225:                 String authority = matcher.group(4);",
          "226:                 String path = matcher.group(5);",
          "227:                 String query = matcher.group(7);",
          "228:                 String fragment = matcher.group(9);",
          "229:                 uri = new URI(scheme, authority, path, query, fragment);",
          "230:             } else {",
          "231:                 throw e;",
          "232:             }",
          "233:         }",
          "234:         if (this.isURITrusted(uri)) {",
          "235:             return uri;",
          "236:         } else {",
          "237:             throw new SecurityException(String.format(\"The given URI [%s] is not safe on this server.\",",
          "238:                 uri));",
          "239:         }",
          "240:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package org.xwiki.url.internal;",
          "22: import java.net.MalformedURLException;",
          "23: import java.net.URL;",
          "24: import java.util.Arrays;",
          "25: import java.util.Collections;",
          "27: import javax.inject.Provider;",
          "28: import javax.servlet.http.HttpServletRequest;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: import java.net.URI;",
          "24: import java.net.URISyntaxException;",
          "28: import java.util.List;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: import static org.hamcrest.MatcherAssert.assertThat;",
          "49: import static org.junit.jupiter.api.Assertions.assertEquals;",
          "50: import static org.mockito.Mockito.mock;",
          "51: import static org.mockito.Mockito.when;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "53: import static org.junit.jupiter.api.Assertions.assertFalse;",
          "54: import static org.junit.jupiter.api.Assertions.assertThrows;",
          "55: import static org.junit.jupiter.api.Assertions.assertTrue;",
          "57: import static org.mockito.Mockito.times;",
          "58: import static org.mockito.Mockito.verify;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "212:                 + \"it's considered as trusted since the check has been bypassed.\",",
          "213:             logCapture.getMessage(0));",
          "214:     }",
          "215: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "224:     @Test",
          "225:     void isURITrusted() throws URISyntaxException",
          "226:     {",
          "227:         URI uri = new URI(\"\");",
          "228:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "230:         uri = new URI(\"//xwiki.org/xwiki/something/\");",
          "231:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "233:         uri = new URI(\"/xwiki/somepage\");",
          "234:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "236:         uri = new URI(\"http://xwiki.org/xwiki/something/\");",
          "237:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "239:         uri = new URI(\"http:xwiki.org/xwiki/something/\");",
          "240:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "242:         uri = new URI(\"ftp://xwiki.org/xwiki/something/\");",
          "243:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "245:         uri = new URI(\"mailto:foo@xwiki.org\");",
          "246:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "248:         uri = new URI(\"market://launch?id=somePackageName\");",
          "249:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "251:         verify(this.urlConfiguration, times(3)).getTrustedSchemes();",
          "254:         when(this.urlConfiguration.getTrustedSchemes()).thenReturn(List.of(\"http\", \"ftp\", \"mailto\", \"market\"));",
          "256:         uri = new URI(\"http://xwiki.org/xwiki/something/\");",
          "257:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "259:         uri = new URI(\"http:xwiki.org/xwiki/something/\");",
          "260:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "263:         uri = new URI(\"http:///xwiki.org/xwiki/something/\");",
          "264:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "266:         uri = new URI(\"ftp://xwiki.org/xwiki/something/\");",
          "267:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "269:         uri = new URI(\"mailto:foo@xwiki.org\");",
          "270:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "272:         uri = new URI(\"market://launch?id=somePackageName\");",
          "273:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "274:         assertEquals(1, this.logCapture.size());",
          "275:         assertEquals(\"Error while transforming URI [market://launch?id=somePackageName] to URL: \"",
          "276:             + \"[MalformedURLException: unknown protocol: market]\", this.logCapture.getMessage(0));",
          "279:         this.urlSecurityManager.invalidateCache();",
          "280:         when(urlConfiguration.getTrustedDomains()).thenReturn(Collections.singletonList(",
          "281:             \"xwiki.org\"",
          "282:         ));",
          "283:         when(this.urlConfiguration.getTrustedSchemes()).thenReturn(List.of(\"http\", \"ftp\", \"sftp\"));",
          "284:         uri = new URI(\"\");",
          "285:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "287:         uri = new URI(\"http://xwiki.org/xwiki/something/\");",
          "288:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "290:         uri = new URI(\"ftp://xwiki.org/xwiki/something/\");",
          "291:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "293:         uri = new URI(\"//xwiki.org/xwiki/something/\");",
          "294:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "296:         uri = new URI(\"http:xwiki.org/xwiki/something/\");",
          "297:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "300:         uri = new URI(\"http:///xwiki.org/xwiki/something/\");",
          "301:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "303:         uri = new URI(\"http://floo\");",
          "304:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "307:         uri = new URI(\"https://xwiki.org/something\");",
          "308:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "310:         uri = new URI(\"/xwiki/something/\");",
          "311:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "313:         uri = new URI(\"mailto:foo@xwiki.org\");",
          "314:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "316:         uri = new URI(\"sftp://xwiki.org/something\");",
          "317:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "319:         assertEquals(2, this.logCapture.size());",
          "320:         assertEquals(\"Error while transforming URI [sftp://xwiki.org/something] to URL: \"",
          "321:             + \"[MalformedURLException: unknown protocol: sftp]\", this.logCapture.getMessage(1));",
          "322:     }",
          "324:     private void assertParseToSafeThrowSecurity(String location, String expectedExceptionLocation)",
          "325:     {",
          "326:         SecurityException securityException =",
          "327:             assertThrows(SecurityException.class, () -> this.urlSecurityManager.parseToSafeURI(location));",
          "328:         assertEquals(String.format(\"The given URI [%s] is not safe on this server.\", expectedExceptionLocation),",
          "329:             securityException.getMessage());",
          "330:     }",
          "332:     @Test",
          "333:     void parseToSafeURI() throws URISyntaxException",
          "334:     {",
          "335:         String location = \"\";",
          "336:         URI uri = this.urlSecurityManager.parseToSafeURI(location);",
          "337:         assertEquals(location, uri.toString());",
          "339:         location = \"//xwiki.org/xwiki/something/\";",
          "340:         assertParseToSafeThrowSecurity(location, location);",
          "342:         location = \"/xwiki/somepage\";",
          "343:         uri = this.urlSecurityManager.parseToSafeURI(location);",
          "344:         assertEquals(location, uri.toString());",
          "346:         location = \"http://xwiki.org/xwiki/something/\";",
          "347:         assertParseToSafeThrowSecurity(location, location);",
          "349:         location = \"http:xwiki.org/xwiki/something/\";",
          "350:         assertParseToSafeThrowSecurity(location, location);",
          "352:         location = \"ftp://xwiki.org/xwiki/something/\";",
          "353:         assertParseToSafeThrowSecurity(location, location);",
          "355:         location = \"mailto:foo@xwiki.org\";",
          "356:         assertParseToSafeThrowSecurity(location, location);",
          "358:         location = \"market://launch?id=somePackageName\";",
          "359:         assertParseToSafeThrowSecurity(location, location);",
          "361:         verify(this.urlConfiguration, times(3)).getTrustedSchemes();",
          "364:         when(this.urlConfiguration.getTrustedSchemes()).thenReturn(List.of(\"http\", \"ftp\", \"mailto\", \"market\"));",
          "366:         location = \"http:xwiki.org/xwiki/something/\";",
          "367:         assertParseToSafeThrowSecurity(location, location);",
          "369:         location = \"http:xwiki.org/xwiki/something/\";",
          "370:         assertParseToSafeThrowSecurity(location, location);",
          "373:         location = \"http:///xwiki.org/xwiki/something/\";",
          "374:         assertParseToSafeThrowSecurity(location, location);",
          "376:         location = \"ftp://xwiki.org/xwiki/something/\";",
          "377:         assertParseToSafeThrowSecurity(location, location);",
          "379:         location = \"mailto:foo@xwiki.org\";",
          "380:         assertParseToSafeThrowSecurity(location, location);",
          "382:         location = \"market://launch?id=somePackageName\";",
          "383:         assertParseToSafeThrowSecurity(location, location);",
          "384:         assertEquals(1, this.logCapture.size());",
          "385:         assertEquals(\"Error while transforming URI [market://launch?id=somePackageName] to URL: \"",
          "386:             + \"[MalformedURLException: unknown protocol: market]\", this.logCapture.getMessage(0));",
          "389:         this.urlSecurityManager.invalidateCache();",
          "390:         when(urlConfiguration.getTrustedDomains()).thenReturn(Collections.singletonList(",
          "391:             \"xwiki.org\"",
          "392:         ));",
          "393:         when(this.urlConfiguration.getTrustedSchemes()).thenReturn(List.of(\"http\", \"ftp\", \"sftp\"));",
          "395:         location = \"\";",
          "396:         uri = this.urlSecurityManager.parseToSafeURI(location);",
          "397:         assertEquals(location, uri.toString());",
          "399:         location = \"http://xwiki.org/xwiki/something/\";",
          "400:         uri = this.urlSecurityManager.parseToSafeURI(location);",
          "401:         assertEquals(location, uri.toString());",
          "403:         location = \"ftp://xwiki.org/xwiki/something/\";",
          "404:         uri = this.urlSecurityManager.parseToSafeURI(location);",
          "405:         assertEquals(location, uri.toString());",
          "407:         location = \"//xwiki.org/xwiki/something/\";",
          "408:         uri = this.urlSecurityManager.parseToSafeURI(location);",
          "409:         assertEquals(location, uri.toString());",
          "411:         location = \"http:xwiki.org/xwiki/something/\";",
          "412:         assertParseToSafeThrowSecurity(location, location);",
          "415:         location = \"http:///xwiki.org/xwiki/something/\";",
          "416:         assertParseToSafeThrowSecurity(location, location);",
          "418:         location = \"http://floo\";",
          "419:         assertParseToSafeThrowSecurity(location, location);",
          "422:         location = \"https://xwiki.org/xwiki/something/\";",
          "423:         assertParseToSafeThrowSecurity(location, location);",
          "425:         location = \"/xwiki/something/\";",
          "426:         uri = this.urlSecurityManager.parseToSafeURI(location);",
          "427:         assertEquals(location, uri.toString());",
          "429:         location = \"mailto:foo@xwiki.org\";",
          "430:         assertParseToSafeThrowSecurity(location, location);",
          "432:         location = \"sftp://xwiki.org/xwiki/something/\";",
          "433:         assertParseToSafeThrowSecurity(location, location);",
          "435:         assertEquals(2, this.logCapture.size());",
          "436:         assertEquals(\"Error while transforming URI [sftp://xwiki.org/xwiki/something/] to URL: \"",
          "437:             + \"[MalformedURLException: unknown protocol: sftp]\", this.logCapture.getMessage(1));",
          "440:         location = \"http://extensions.xwiki.org/xwiki/bin/view/Main/WebHome#|t=recommendedextensions&p=1&l=15&s=doc\"",
          "441:             + \".creationDate&d=desc&name=replication\";",
          "442:         uri = this.urlSecurityManager.parseToSafeURI(location);",
          "443:         assertEquals(\"http://extensions.xwiki.org/xwiki/bin/view/Main/WebHome#%7Ct=recommendedextensions&p=1&l=15&s\"",
          "444:             + \"=doc.creationDate&d=desc&name=replication\", uri.toString());",
          "446:         location = \"http://xwiki.org\\\\@anotherserver.com\";",
          "447:         assertParseToSafeThrowSecurity(location, \"http://xwiki.org%5C@anotherserver.com\");",
          "450:         this.urlSecurityManager.invalidateCache();",
          "451:         when(urlConfiguration.getTrustedDomains()).thenReturn(Collections.singletonList(",
          "452:             \"anotherserver.com\"",
          "453:         ));",
          "454:         uri = this.urlSecurityManager.parseToSafeURI(location);",
          "455:         assertEquals(\"http://xwiki.org%5C@anotherserver.com\", uri.toString());",
          "457:         location = \"/xwiki/\\n/something/\";",
          "458:         uri = this.urlSecurityManager.parseToSafeURI(location);",
          "459:         assertEquals(\"/xwiki/%0A/something/\", uri.toString());",
          "461:         location = \"/Space Test/?parameter=with space#fragment space\";",
          "462:         uri = this.urlSecurityManager.parseToSafeURI(location);",
          "463:         assertEquals(\"/Space%20Test/?parameter=with%20space#fragment%20space\", uri.toString());",
          "465:         location = \"foo://www.x wiki.org/\";",
          "466:         assertParseToSafeThrowSecurity(location, \"foo://www.x%20wiki.org/\");",
          "467:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm||xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm": [
          "File: xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm -> xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm",
          "--- Hunk 1 ---",
          "[Context before]",
          "911: #-# By default this property is set to true:",
          "912: # url.trustedDomainsEnabled=true",
          "914: #-------------------------------------------------------------------------------------",
          "915: # Attachment",
          "916: #-------------------------------------------------------------------------------------",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "914: #-# [Since 15.0]",
          "915: #-# [Since 14.10.4]",
          "916: #-# Define the list of schemes that are allowed for trusted URIs. Those schemes are checked whenever an absolute URI",
          "917: #-# needs to be checked (e.g. before performing a redirect). Any URI whose scheme doesn't belong to that list will not",
          "918: #-# be considered trustful, even if the domain of the URI is trusted.",
          "919: #-# Also note that even if a protocol is added here to be trusted, it might need a custom protocol handler. By default,",
          "920: #-# only http,https,ftp and file protocols are handled.",
          "921: #-#",
          "922: #-# The default is:",
          "923: # url.trustedSchemes=http,https,ftp",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "5b1c3e6abd3e14451289322e96b193f4dfea6857",
      "candidate_info": {
        "commit_hash": "5b1c3e6abd3e14451289322e96b193f4dfea6857",
        "repo": "xwiki/xwiki-platform",
        "commit_url": "https://github.com/xwiki/xwiki-platform/commit/5b1c3e6abd3e14451289322e96b193f4dfea6857",
        "files": [
          "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
          "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/resources/META-INF/components.txt",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java",
          "xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm"
        ],
        "message": "XWIKI-20549: Provide a new script service API to check trustfulness of an URI (#2047)\n\n  * Define a new API in URLSecurityManager to check trustfulness of an\n    URI\n  * Use that API in XWikiServletResponse#redirect\n  * Define a new script service API to perform same check in scripts\n  * Add new configurations to be able to define the URI schemes\n    supported for trusted URIs\n  * Improve a bit documentation and add some more unit tests\n  * Move the new script service to a dedicated URLSecurityScriptService\n  * Simplify some code by removing unnecessary property\n  * Add test to the new script service method",
        "before_after_code_files": [
          "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java||xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
          "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java||xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java",
          "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java",
          "xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm||xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java||xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
            "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java||xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java"
          ],
          "candidate": [
            "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java||xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
            "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java||xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java"
          ]
        }
      },
      "candidate_diff": {
        "xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java||xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java": [
          "File: xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java -> xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiServletResponse.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.io.IOException;",
          "23: import java.io.PrintWriter;",
          "24: import java.net.URL;",
          "25: import java.util.Collection;",
          "26: import java.util.Locale;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "24: import java.net.URI;",
          "25: import java.net.URISyntaxException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31: import javax.servlet.http.HttpServletResponse;",
          "33: import org.apache.commons.lang3.StringUtils;",
          "34: import org.slf4j.Logger;",
          "35: import org.slf4j.LoggerFactory;",
          "36: import org.xwiki.url.URLSecurityManager;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: import org.apache.commons.lang3.exception.ExceptionUtils;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "62:     @Override",
          "63:     public void sendRedirect(String redirect) throws IOException",
          "64:     {",
          "90:             }",
          "91:         }",
          "93:     }",
          "95:     private URLSecurityManager getURLSecurityManager()",
          "",
          "[Removed Lines]",
          "65:         if (StringUtils.isBlank(redirect)) {",
          "67:             return;",
          "68:         }",
          "69:         if (StringUtils.containsAny(redirect, '\\r', '\\n')) {",
          "70:             LOGGER.warn(\"Possible HTTP Response Splitting attack, attempting to redirect to [{}]\", redirect);",
          "71:             return;",
          "72:         }",
          "74:         if (StringUtils.startsWith(redirect, \"//\")) {",
          "75:             LOGGER.warn(\"Possible phishing attack, attempting to redirect to [{}]. If this request is legitimate, \"",
          "76:                 + \"use an actual absolute URL and pay attention to configure properly url.trustedDomains in \"",
          "77:                 + \"xwiki.properties\", redirect);",
          "78:             return;",
          "79:         }",
          "82:         if (ABSOLUTE_URL_PATTERN.matcher(redirect).matches()) {",
          "83:             if (!getURLSecurityManager().isDomainTrusted(new URL(redirect))) {",
          "84:                 LOGGER.warn(",
          "85:                     \"Possible phishing attack, attempting to redirect to [{}], this request has been blocked. \"",
          "86:                         + \"If the request was legitimate, add the domain related to this request in the list \"",
          "87:                         + \"of trusted domains in the configuration: it can be configured in xwiki.properties in \"",
          "88:                         + \"url.trustedDomains.\", redirect);",
          "89:                 return;",
          "92:         this.response.sendRedirect(redirect);",
          "",
          "[Added Lines]",
          "68:         if (!StringUtils.isBlank(redirect)) {",
          "69:             try {",
          "70:                 URI uri = new URI(redirect);",
          "71:                 if (!getURLSecurityManager().isURITrusted(uri)) {",
          "72:                     LOGGER.warn(",
          "73:                         \"Possible phishing attack, attempting to redirect to [{}], this request has been blocked. \"",
          "74:                             + \"If the request was legitimate, please check the URL security configuration. You \"",
          "75:                             + \"might need to add the domain related to this request in the list of trusted domains in \"",
          "76:                             + \"the configuration: it can be configured in xwiki.properties in url.trustedDomains.\",",
          "77:                         redirect);",
          "78:                 } else {",
          "79:                     this.response.sendRedirect(redirect);",
          "80:                 }",
          "81:             } catch (URISyntaxException e) {",
          "82:                 LOGGER.error(\"Error while transforming redirect to [{}] to proper URI: [{}]\", redirect,",
          "83:                     ExceptionUtils.getRootCauseMessage(e));",
          "84:                 LOGGER.debug(\"Full stack trace:\", e);",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java||xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java": [
          "File: xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java -> xwiki-platform-core/xwiki-platform-oldcore/src/test/java/com/xpn/xwiki/web/XWikiServletResponseTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package com.xpn.xwiki.web;",
          "22: import java.io.IOException;",
          "23: import java.net.URL;",
          "25: import javax.servlet.http.HttpServletResponse;",
          "27: import org.junit.jupiter.api.BeforeEach;",
          "28: import org.junit.jupiter.api.Test;",
          "29: import org.xwiki.component.manager.ComponentManager;",
          "30: import org.xwiki.test.annotation.BeforeComponent;",
          "31: import org.xwiki.test.junit5.mockito.ComponentTest;",
          "32: import org.xwiki.test.junit5.mockito.MockComponent;",
          "33: import org.xwiki.test.mockito.MockitoComponentManager;",
          "34: import org.xwiki.url.URLSecurityManager;",
          "36: import static org.mockito.ArgumentMatchers.any;",
          "37: import static org.mockito.Mockito.mock;",
          "38: import static org.mockito.Mockito.never;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: import java.net.URI;",
          "24: import java.net.URISyntaxException;",
          "31: import org.junit.jupiter.api.extension.RegisterExtension;",
          "33: import org.xwiki.test.LogLevel;",
          "35: import org.xwiki.test.junit5.LogCaptureExtension;",
          "41: import static org.junit.jupiter.api.Assertions.assertEquals;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:     private XWikiServletResponse servletResponse;",
          "54:     private HttpServletResponse httpServletResponse;",
          "56:     @BeforeComponent",
          "57:     void beforeComponent(MockitoComponentManager mockitoComponentManager) throws Exception",
          "58:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62:     @RegisterExtension",
          "63:     LogCaptureExtension logCapture = new LogCaptureExtension(LogLevel.WARN);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "68:     }",
          "70:     @Test",
          "72:     {",
          "73:         this.servletResponse.sendRedirect(\"\");",
          "74:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "76:         this.servletResponse.sendRedirect(\"/xwiki/\\n/something/\");",
          "77:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "107:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "119:     }",
          "120: }",
          "",
          "[Removed Lines]",
          "71:     void sendRedirect() throws IOException",
          "79:         this.servletResponse.sendRedirect(\"//xwiki.org/xwiki/something/\");",
          "80:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "82:         String redirect = \"http://xwiki.org/xwiki/something/\";",
          "83:         URL redirectUrl = new URL(redirect);",
          "84:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(false);",
          "85:         this.servletResponse.sendRedirect(redirect);",
          "86:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "87:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
          "89:         redirect = \"http:/xwiki.com/xwiki/something/\";",
          "90:         redirectUrl = new URL(redirect);",
          "91:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(false);",
          "92:         this.servletResponse.sendRedirect(redirect);",
          "93:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "94:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
          "96:         redirect = \"https://floo\";",
          "97:         redirectUrl = new URL(redirect);",
          "98:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(false);",
          "99:         this.servletResponse.sendRedirect(redirect);",
          "100:         verify(this.httpServletResponse, never()).sendRedirect(any());",
          "101:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
          "103:         redirect = \"ftp://xwiki.org/xwiki/something/\";",
          "104:         redirectUrl = new URL(redirect);",
          "105:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(false);",
          "106:         this.servletResponse.sendRedirect(redirect);",
          "108:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
          "110:         this.servletResponse.sendRedirect(\"/xwiki/something/\");",
          "111:         verify(this.httpServletResponse).sendRedirect(\"/xwiki/something/\");",
          "113:         redirect = \"http://xwiki.org/foo/\";",
          "114:         redirectUrl = new URL(redirect);",
          "115:         when(this.urlSecurityManager.isDomainTrusted(redirectUrl)).thenReturn(true);",
          "116:         this.servletResponse.sendRedirect(redirect);",
          "117:         verify(this.httpServletResponse).sendRedirect(redirect);",
          "118:         verify(this.urlSecurityManager).isDomainTrusted(redirectUrl);",
          "",
          "[Added Lines]",
          "80:     void sendRedirect() throws IOException, URISyntaxException",
          "87:         assertEquals(1, this.logCapture.size());",
          "88:         assertEquals(\"Error while transforming redirect to [/xwiki/\\n\"",
          "89:             + \"/something/] to proper URI: [URISyntaxException: Illegal character in path at index 7: /xwiki/\\n\"",
          "90:             + \"/something/]\", this.logCapture.getMessage(0));",
          "93:         this.servletResponse.sendRedirect(\"//xwiki.org/xwiki/something/\");",
          "95:         assertEquals(2, this.logCapture.size());",
          "96:         assertEquals(\"Possible phishing attack, attempting to redirect to [//xwiki.org/xwiki/something/], this request\"",
          "97:                 + \" has been blocked. If the request was legitimate, please check the URL security configuration. \"",
          "98:                 + \"You might need to add the domain related to this request in the list of trusted domains in the \"",
          "99:                 + \"configuration: it can be configured in xwiki.properties in url.trustedDomains.\",",
          "100:             this.logCapture.getMessage(1));",
          "102:         URI expectedURI = new URI(\"//xwiki.org/xwiki/something/\");",
          "103:         when(this.urlSecurityManager.isURITrusted(expectedURI)).thenReturn(true);",
          "104:         this.servletResponse.sendRedirect(\"//xwiki.org/xwiki/something/\");",
          "105:         verify(this.httpServletResponse).sendRedirect(\"//xwiki.org/xwiki/something/\");",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import java.util.List;",
          "25: import org.xwiki.component.annotation.Role;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: import org.xwiki.stability.Unstable;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "74:     {",
          "75:         return true;",
          "76:     }",
          "77: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:     @Unstable",
          "89:     default List<String> getTrustedSchemes()",
          "90:     {",
          "91:         return List.of(\"http\", \"https\", \"ftp\");",
          "92:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/URLSecurityManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package org.xwiki.url;",
          "22: import java.net.URL;",
          "24: import org.xwiki.component.annotation.Role;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: import java.net.URI;",
          "26: import org.xwiki.stability.Unstable;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:     boolean isDomainTrusted(URL urlToCheck);",
          "54: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "73:     @Unstable",
          "74:     default boolean isURITrusted(URI uri)",
          "75:     {",
          "76:         return false;",
          "77:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/main/java/org/xwiki/url/script/URLSecurityScriptService.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: package org.xwiki.url.script;",
          "22: import java.net.URI;",
          "23: import java.net.URISyntaxException;",
          "25: import javax.inject.Inject;",
          "26: import javax.inject.Named;",
          "27: import javax.inject.Singleton;",
          "29: import org.apache.commons.lang3.exception.ExceptionUtils;",
          "30: import org.slf4j.Logger;",
          "31: import org.xwiki.component.annotation.Component;",
          "32: import org.xwiki.script.service.ScriptService;",
          "33: import org.xwiki.stability.Unstable;",
          "34: import org.xwiki.url.URLSecurityManager;",
          "43: @Component",
          "44: @Named(\"security.url\")",
          "45: @Singleton",
          "46: @Unstable",
          "47: public class URLSecurityScriptService implements ScriptService",
          "48: {",
          "49:     @Inject",
          "50:     private URLSecurityManager urlSecurityManager;",
          "52:     @Inject",
          "53:     private Logger logger;",
          "64:     public boolean isURITrusted(String uriRepresentation)",
          "65:     {",
          "66:         boolean result;",
          "67:         try {",
          "68:             URI uri = new URI(uriRepresentation);",
          "69:             result = this.urlSecurityManager.isURITrusted(uri);",
          "70:         } catch (URISyntaxException e) {",
          "71:             this.logger.warn(\"Trying to check if [{}] is a trusted URI returned false because URI parsing failed: \"",
          "72:                 + \"[{}]\", uriRepresentation, ExceptionUtils.getRootCauseMessage(e));",
          "73:             result = false;",
          "74:         }",
          "75:         return result;",
          "76:     }",
          "77: }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-api/src/test/java/org/xwiki/url/script/URLSecurityScriptServiceTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: package org.xwiki.url.script;",
          "22: import java.net.URI;",
          "23: import java.net.URISyntaxException;",
          "25: import org.junit.jupiter.api.Test;",
          "26: import org.junit.jupiter.api.extension.RegisterExtension;",
          "27: import org.xwiki.test.LogLevel;",
          "28: import org.xwiki.test.junit5.LogCaptureExtension;",
          "29: import org.xwiki.test.junit5.mockito.ComponentTest;",
          "30: import org.xwiki.test.junit5.mockito.InjectMockComponents;",
          "31: import org.xwiki.test.junit5.mockito.MockComponent;",
          "32: import org.xwiki.url.URLSecurityManager;",
          "34: import static org.junit.jupiter.api.Assertions.assertEquals;",
          "35: import static org.junit.jupiter.api.Assertions.assertFalse;",
          "36: import static org.junit.jupiter.api.Assertions.assertTrue;",
          "37: import static org.mockito.ArgumentMatchers.any;",
          "38: import static org.mockito.Mockito.times;",
          "39: import static org.mockito.Mockito.verify;",
          "40: import static org.mockito.Mockito.when;",
          "49: @ComponentTest",
          "50: class URLSecurityScriptServiceTest",
          "51: {",
          "52:     @InjectMockComponents",
          "53:     private URLSecurityScriptService scriptService;",
          "55:     @MockComponent",
          "56:     private URLSecurityManager urlSecurityManager;",
          "58:     @RegisterExtension",
          "59:     LogCaptureExtension logCapture = new LogCaptureExtension(LogLevel.WARN);",
          "61:     @Test",
          "62:     void isURITrusted() throws URISyntaxException",
          "63:     {",
          "64:         assertFalse(this.scriptService.isURITrusted(\"\"));",
          "65:         when(this.urlSecurityManager.isURITrusted(new URI(\"\"))).thenReturn(true);",
          "66:         assertTrue(this.scriptService.isURITrusted(\"\"));",
          "68:         assertFalse(this.scriptService.isURITrusted(\"/xwiki/\\n/something/\"));",
          "69:         assertEquals(1, this.logCapture.size());",
          "70:         assertEquals(\"Trying to check if [/xwiki/\\n\"",
          "71:             + \"/something/] is a trusted URI returned false because URI parsing failed: [URISyntaxException: \"",
          "72:             + \"Illegal character in path at index 7: /xwiki/\\n\"",
          "73:             + \"/something/]\", this.logCapture.getMessage(0));",
          "74:         verify(this.urlSecurityManager, times(2)).isURITrusted(any());",
          "76:         assertFalse(this.scriptService.isURITrusted(\"//xwiki.org/xwiki/something/\"));",
          "78:         URI expectedURI = new URI(\"//xwiki.org/xwiki/something/\");",
          "79:         when(this.urlSecurityManager.isURITrusted(expectedURI)).thenReturn(true);",
          "80:         assertTrue(this.scriptService.isURITrusted(\"//xwiki.org/xwiki/something/\"));",
          "81:     }",
          "82: }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "75:     {",
          "76:         return this.configuration.get().getProperty(PREFIX + \"trustedDomainsEnabled\", true);",
          "77:     }",
          "78: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:     @Override",
          "80:     public List<String> getTrustedSchemes()",
          "81:     {",
          "82:         return this.configuration.get().getProperty(PREFIX + \"trustedSchemes\", List.of(\"http\", \"https\", \"ftp\"));",
          "83:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/main/java/org/xwiki/url/internal/DefaultURLSecurityManager.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package org.xwiki.url.internal;",
          "22: import java.net.MalformedURLException;",
          "23: import java.net.URL;",
          "24: import java.util.HashSet;",
          "25: import java.util.Set;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "23: import java.net.URI;",
          "24: import java.net.URISyntaxException;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "76:     private void computeTrustedDomains()",
          "77:     {",
          "79:         this.trustedDomains = new HashSet<>(this.urlConfiguration.getTrustedDomains());",
          "81:         try {",
          "",
          "[Removed Lines]",
          "78:         Set<String> domains;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "149:     {",
          "150:         this.trustedDomains = null;",
          "151:     }",
          "152: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "154:     @Override",
          "155:     public boolean isURITrusted(URI uri)",
          "156:     {",
          "157:         boolean result = true;",
          "163:         if (uri.isOpaque()) {",
          "164:             result = false;",
          "165:         } else if (uri.getAuthority() != null) {",
          "169:             try {",
          "173:                 if (!uri.isAbsolute()) {",
          "174:                     URI uriWithScheme = new URI(\"https\",",
          "175:                         uri.getRawAuthority(),",
          "176:                         uri.getRawPath(),",
          "177:                         uri.getRawQuery(),",
          "178:                         uri.getRawFragment());",
          "179:                     result = this.isDomainTrusted(uriWithScheme.toURL());",
          "180:                 } else if (this.urlConfiguration.getTrustedSchemes().contains(uri.getScheme().toLowerCase())) {",
          "181:                     result = this.isDomainTrusted(uri.toURL());",
          "182:                 } else {",
          "183:                     result = false;",
          "184:                 }",
          "185:             } catch (MalformedURLException e) {",
          "186:                 logger.error(\"Error while transforming URI [{}] to URL: [{}]\", uri,",
          "187:                     ExceptionUtils.getRootCauseMessage(e));",
          "188:                 this.logger.debug(\"Full error stack trace of the URL resolution: \", e);",
          "189:                 result = false;",
          "190:             } catch (URISyntaxException e) {",
          "191:                 logger.error(\"Error while transforming URI [{}] to absolute URI with http scheme: [{}]\", uri,",
          "192:                     ExceptionUtils.getRootCauseMessage(e));",
          "193:                 this.logger.debug(\"Full error stack trace of the URI resolution: \", e);",
          "194:             }",
          "195:         }",
          "196:         return result;",
          "197:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java||xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java": [
          "File: xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java -> xwiki-platform-core/xwiki-platform-url/xwiki-platform-url-default/src/test/java/org/xwiki/url/internal/DefaultURLSecurityManagerTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package org.xwiki.url.internal;",
          "22: import java.net.MalformedURLException;",
          "23: import java.net.URL;",
          "24: import java.util.Arrays;",
          "25: import java.util.Collections;",
          "27: import javax.inject.Provider;",
          "28: import javax.servlet.http.HttpServletRequest;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: import java.io.IOException;",
          "24: import java.net.URI;",
          "25: import java.net.URISyntaxException;",
          "29: import java.util.List;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "48: import static org.hamcrest.MatcherAssert.assertThat;",
          "49: import static org.junit.jupiter.api.Assertions.assertEquals;",
          "50: import static org.mockito.Mockito.mock;",
          "51: import static org.mockito.Mockito.when;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "54: import static org.junit.jupiter.api.Assertions.assertFalse;",
          "55: import static org.junit.jupiter.api.Assertions.assertTrue;",
          "56: import static org.mockito.ArgumentMatchers.any;",
          "58: import static org.mockito.Mockito.never;",
          "59: import static org.mockito.Mockito.times;",
          "60: import static org.mockito.Mockito.verify;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "212:                 + \"it's considered as trusted since the check has been bypassed.\",",
          "213:             logCapture.getMessage(0));",
          "214:     }",
          "215: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "226:     @Test",
          "227:     void isURITrustedWithEmptyTrustedDomainConfig() throws URISyntaxException",
          "228:     {",
          "229:         URI uri = new URI(\"\");",
          "230:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "232:         uri = new URI(\"//xwiki.org/xwiki/something/\");",
          "233:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "235:         uri = new URI(\"/xwiki/somepage\");",
          "236:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "238:         uri = new URI(\"http://xwiki.org/xwiki/something/\");",
          "239:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "241:         uri = new URI(\"http:xwiki.org/xwiki/something/\");",
          "242:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "244:         uri = new URI(\"ftp://xwiki.org/xwiki/something/\");",
          "245:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "247:         uri = new URI(\"mailto:foo@xwiki.org\");",
          "248:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "250:         uri = new URI(\"market://launch?id=somePackageName\");",
          "251:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "253:         verify(this.urlConfiguration, times(3)).getTrustedSchemes();",
          "256:         when(this.urlConfiguration.getTrustedSchemes()).thenReturn(List.of(\"http\", \"ftp\", \"mailto\", \"market\"));",
          "258:         uri = new URI(\"http://xwiki.org/xwiki/something/\");",
          "259:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "261:         uri = new URI(\"http:xwiki.org/xwiki/something/\");",
          "262:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "264:         uri = new URI(\"ftp://xwiki.org/xwiki/something/\");",
          "265:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "267:         uri = new URI(\"mailto:foo@xwiki.org\");",
          "268:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "270:         uri = new URI(\"market://launch?id=somePackageName\");",
          "271:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "272:         assertEquals(1, this.logCapture.size());",
          "273:         assertEquals(\"Error while transforming URI [market://launch?id=somePackageName] to URL: \"",
          "274:             + \"[MalformedURLException: unknown protocol: market]\", this.logCapture.getMessage(0));",
          "275:     }",
          "277:     @Test",
          "278:     void isURITrustedWithTrustedDomainConfig() throws URISyntaxException",
          "279:     {",
          "280:         when(urlConfiguration.getTrustedDomains()).thenReturn(Collections.singletonList(",
          "281:             \"xwiki.org\"",
          "282:         ));",
          "283:         when(this.urlConfiguration.getTrustedSchemes()).thenReturn(List.of(\"http\", \"ftp\", \"sftp\"));",
          "284:         URI uri = new URI(\"\");",
          "285:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "287:         uri = new URI(\"http://xwiki.org/xwiki/something/\");",
          "288:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "290:         uri = new URI(\"ftp://xwiki.org/xwiki/something/\");",
          "291:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "293:         uri = new URI(\"//xwiki.org/xwiki/something/\");",
          "294:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "296:         uri = new URI(\"http:xwiki.org/xwiki/something/\");",
          "297:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "299:         uri = new URI(\"http://floo\");",
          "300:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "303:         uri = new URI(\"https://xwiki.org/something\");",
          "304:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "306:         uri = new URI(\"/xwiki/something/\");",
          "307:         assertTrue(this.urlSecurityManager.isURITrusted(uri));",
          "309:         uri = new URI(\"mailto:foo@xwiki.org\");",
          "310:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "312:         uri = new URI(\"sftp://xwiki.org/something\");",
          "313:         assertFalse(this.urlSecurityManager.isURITrusted(uri));",
          "315:         assertEquals(1, this.logCapture.size());",
          "316:         assertEquals(\"Error while transforming URI [sftp://xwiki.org/something] to URL: \"",
          "317:             + \"[MalformedURLException: unknown protocol: sftp]\", this.logCapture.getMessage(0));",
          "318:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm||xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm": [
          "File: xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm -> xwiki-platform-tools/xwiki-platform-tool-configuration-resources/src/main/resources/xwiki.properties.vm",
          "--- Hunk 1 ---",
          "[Context before]",
          "914: #-# By default this property is set to true:",
          "915: # url.trustedDomainsEnabled=true",
          "917: #-------------------------------------------------------------------------------------",
          "918: # Attachment",
          "919: #-------------------------------------------------------------------------------------",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "917: #-# [Since 15.0RC1]",
          "918: #-# [Since 14.10.4]",
          "919: #-# Define the list of schemes that are allowed for trusted URIs. Those schemes are checked whenever an absolute URI",
          "920: #-# needs to be checked (e.g. before performing a redirect). Any URI whose scheme doesn't belong to that list will not",
          "921: #-# be considered trustful, even if the domain of the URI is trusted.",
          "922: #-# Also note that even if a protocol is added here to be trusted, it might need a custom protocol handler. By default,",
          "923: #-# only http,https,ftp and file protocols are handled.",
          "924: #-#",
          "925: #-# The default is:",
          "926: # url.trustedSchemes=http,https,ftp",
          "",
          "---------------"
        ]
      }
    }
  ]
}