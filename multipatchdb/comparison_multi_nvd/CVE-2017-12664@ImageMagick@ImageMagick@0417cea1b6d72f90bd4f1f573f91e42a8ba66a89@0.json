{
  "cve_id": "CVE-2017-12664",
  "cve_desc": "ImageMagick 7.0.6-2 has a memory leak vulnerability in WritePALMImage in coders/palm.c.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "0417cea1b6d72f90bd4f1f573f91e42a8ba66a89",
  "patch_info": {
    "commit_hash": "0417cea1b6d72f90bd4f1f573f91e42a8ba66a89",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/0417cea1b6d72f90bd4f1f573f91e42a8ba66a89",
    "files": [
      "MagickCore/quantize.c",
      "coders/palm.c"
    ],
    "message": "https://github.com/ImageMagick/ImageMagick/issues/574",
    "before_after_code_files": [
      "MagickCore/quantize.c||MagickCore/quantize.c",
      "coders/palm.c||coders/palm.c"
    ]
  },
  "patch_diff": {
    "MagickCore/quantize.c||MagickCore/quantize.c": [
      "File: MagickCore/quantize.c -> MagickCore/quantize.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "3329:   ExceptionInfo *exception)",
      "3330: {",
      "3331:   CacheView",
      "3334:   MagickBooleanType",
      "3335:     status;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3334:   MagickBooleanType",
      "3335:     status;",
      "",
      "---------------"
    ],
    "coders/palm.c||coders/palm.c": [
      "File: coders/palm.c -> coders/palm.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "408:         return(image);",
      "409:       }",
      "410:     status=SetImageExtent(image,image->columns,image->rows,exception);",
      "412:       return(DestroyImageList(image));",
      "413:     one_row=(unsigned char *) AcquireQuantumMemory(MagickMax(bytes_per_row,",
      "417:     lastrow=(unsigned char *) NULL;",
      "418:     if (compressionType == PALM_COMPRESSION_SCANLINE)",
      "419:       {",
      "",
      "[Removed Lines]",
      "411:     if (status == MagickFalse)",
      "414:       2*image->columns),sizeof(*one_row));",
      "415:     if (one_row == (unsigned char *) NULL)",
      "416:       ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
      "",
      "[Added Lines]",
      "411:     if (status == MagickFalse)",
      "414:       2*image->columns),sizeof(*one_row));",
      "415:     if (one_row == (unsigned char *) NULL)",
      "416:       ThrowReaderException(ResourceLimitError,\"MemoryAllocationFailed\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "464:                 count=(ssize_t) ReadBlobByte(image);",
      "465:                 if (count < 0)",
      "466:                   break;",
      "468:                 for (bit=0; bit < byte; bit++)",
      "469:                 {",
      "471:                     one_row[i+bit]=(unsigned char) ReadBlobByte(image);",
      "472:                   else",
      "473:                     one_row[i+bit]=lastrow[i+bit];",
      "",
      "[Removed Lines]",
      "467:                 byte=(size_t) MagickMin((ssize_t) bytes_per_row-i,8);",
      "470:                   if ((y == 0) || (count & (one << (7 - bit))))",
      "",
      "[Added Lines]",
      "467:                 byte=(size_t) MagickMin((ssize_t) bytes_per_row-i,8);",
      "470:                   if ((y == 0) || (count & (one << (7 - bit))))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "480:       q=QueueAuthenticPixels(image,0,y,image->columns,1,exception);",
      "481:       if (q == (Quantum *) NULL)",
      "482:         break;",
      "484:         {",
      "485:           if (image->columns > (2*bytes_per_row))",
      "486:             {",
      "",
      "[Removed Lines]",
      "483:       if (bits_per_pixel == 16)",
      "",
      "[Added Lines]",
      "483:       if (bits_per_pixel == 16)",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "506:       else",
      "507:         {",
      "508:           bit=8-bits_per_pixel;",
      "510:           {",
      "511:             if ((size_t) (ptr-one_row) >= bytes_per_row)",
      "512:               {",
      "",
      "[Removed Lines]",
      "509:           for (x=0; x < (ssize_t) image->columns; x++)",
      "",
      "[Added Lines]",
      "509:           for (x=0; x < (ssize_t) image->columns; x++)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "543:         ssize_t index=ConstrainColormapIndex(image,(ssize_t) (mask-",
      "544:           transparentIndex),exception);",
      "545:         if (bits_per_pixel != 16)",
      "547:         (void) TransparentPaintImage(image,&transpix,(Quantum) TransparentAlpha,",
      "548:           MagickFalse,exception);",
      "549:       }",
      "",
      "[Removed Lines]",
      "546:           transpix=image->colormap[index];",
      "",
      "[Added Lines]",
      "546:           transpix=image->colormap[index];",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "861:             for (x=0; x < (ssize_t) image->columns; x++)",
      "862:             {",
      "863:               SetPixelIndex(image,(Quantum) FindColor(&image->colormap[(ssize_t)",
      "865:               q+=GetPixelChannels(image);",
      "869:         }",
      "870:       }",
      "871:     if (flags & PALM_IS_COMPRESSED_FLAG)",
      "873:     lastrow=(unsigned char *) NULL;",
      "874:     if (image_info->compression == FaxCompression)",
      "875:       lastrow=(unsigned char *) AcquireQuantumMemory(bytes_per_row,",
      "",
      "[Removed Lines]",
      "864:                 GetPixelIndex(image,q)]),q);",
      "866:             }",
      "867:           }",
      "868:           affinity_image=DestroyImage(affinity_image);",
      "",
      "[Added Lines]",
      "864:                 GetPixelIndex(image,q)]),q);",
      "866:             }",
      "867:           }",
      "868:           affinity_image=DestroyImage(affinity_image);",
      "869:         }",
      "870:       }",
      "871:     if (flags & PALM_IS_COMPRESSED_FLAG)",
      "873:     last_row=(unsigned char *) NULL;",
      "874:     if (image_info->compression == FaxCompression)",
      "878:         if (last_row == (unsigned char *) NULL)",
      "879:           {",
      "880:             quantize_info=DestroyQuantizeInfo(quantize_info);",
      "881:             ThrowWriterException(ResourceLimitError,\"MemoryAllocationFailed\");",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "949:       else",
      "950:         if (image_info->compression == FaxCompression)",
      "951:           {",
      "953:               tmpbuf[8],",
      "",
      "[Removed Lines]",
      "952:             char",
      "",
      "[Added Lines]",
      "961:             char",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "958:               tptr = tmpbuf;",
      "959:               for (bit=0, byte=0; bit < (unsigned char) MagickMin(8,(ssize_t) bytes_per_row-x); bit++)",
      "960:               {",
      "962:                   {",
      "963:                     byte |= (1 << (7 - bit));",
      "",
      "[Removed Lines]",
      "961:                 if ((y == 0) || (lastrow[x + bit] != one_row[x + bit]))",
      "",
      "[Added Lines]",
      "970:                 if ((y == 0) || (last_row[x + bit] != one_row[x + bit]))",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "974:       }",
      "975:     if (flags & PALM_HAS_TRANSPARENCY_FLAG)",
      "976:       {",
      "981:       }",
      "982:     if (bits_per_pixel == 16)",
      "",
      "[Removed Lines]",
      "977:         offset=SeekBlob(image,currentOffset+6,SEEK_SET);",
      "978:         (void) WriteBlobMSBShort(image,flags);",
      "979:         offset=SeekBlob(image,currentOffset+12,SEEK_SET);",
      "",
      "[Added Lines]",
      "986:         offset=SeekBlob(image,currentOffset+6,SEEK_SET);",
      "987:         (void) WriteBlobMSBShort(image,flags);",
      "988:         offset=SeekBlob(image,currentOffset+12,SEEK_SET);",
      "990:       }",
      "991:     if (bits_per_pixel == 16)",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "986:         (void) WriteBlobByte(image,(unsigned char) ((31*transpix.red)/QuantumRange));",
      "987:         (void) WriteBlobByte(image,(unsigned char) ((63*transpix.green)/QuantumRange));",
      "988:         (void) WriteBlobByte(image,(unsigned char) ((31*transpix.blue)/QuantumRange));",
      "991:       {",
      "992:         offset=SeekBlob(image,currentOffset+offset,SEEK_SET);",
      "993:         (void) WriteBlobMSBShort(image,(unsigned short) (GetBlobSize(image)-",
      "",
      "[Removed Lines]",
      "989:       }",
      "",
      "[Added Lines]",
      "1001:       }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7b604a554dfb6630fe32e739334fa57341dc6123",
      "candidate_info": {
        "commit_hash": "7b604a554dfb6630fe32e739334fa57341dc6123",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/7b604a554dfb6630fe32e739334fa57341dc6123",
        "files": [
          "MagickCore/quantize.c"
        ],
        "message": "Fix another leak related to #574.",
        "before_after_code_files": [
          "MagickCore/quantize.c||MagickCore/quantize.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_issue": 1,
        "olp_code_files": {
          "patch": [
            "MagickCore/quantize.c||MagickCore/quantize.c"
          ],
          "candidate": [
            "MagickCore/quantize.c||MagickCore/quantize.c"
          ]
        }
      },
      "candidate_diff": {
        "MagickCore/quantize.c||MagickCore/quantize.c": [
          "File: MagickCore/quantize.c -> MagickCore/quantize.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3396:           intensity=ScaleQuantumToMap(GetPixelRed(image,q));",
          "3397:           if (colormap_index[intensity] < 0)",
          "3400:               #pragma omp critical (MagickCore_SetGrayscaleImage)",
          "3401: #endif",
          "3402:               if (colormap_index[intensity] < 0)",
          "",
          "[Removed Lines]",
          "3398:             {",
          "3399: #if defined(MAGICKCORE_OPENMP_SUPPORT)",
          "",
          "[Added Lines]",
          "3398:             {",
          "3399: #if defined(MAGICKCORE_OPENMP_SUPPORT)",
          "3400:               #pragma omp critical (MagickCore_SetGrayscaleImage)",
          "3401: #endif",
          "3402:               if (colormap_index[intensity] < 0)",
          "",
          "---------------"
        ]
      }
    }
  ]
}