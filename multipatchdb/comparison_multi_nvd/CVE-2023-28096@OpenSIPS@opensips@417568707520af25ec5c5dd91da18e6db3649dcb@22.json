{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "99275f6de898ca6a095c968c56e4db9ac6e05866",
      "candidate_info": {
        "commit_hash": "99275f6de898ca6a095c968c56e4db9ac6e05866",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/99275f6de898ca6a095c968c56e4db9ac6e05866",
        "files": [
          "modules/b2b_entities/b2be_clustering.c",
          "modules/cachedb_local/cachedb_local.c",
          "modules/clusterer/api.h",
          "modules/clusterer/sync.c",
          "modules/clusterer/sync.h",
          "modules/dialog/dialog.c",
          "modules/dialog/dlg_replication.c",
          "modules/dispatcher/ds_clustering.c",
          "modules/drouting/dr_clustering.c",
          "modules/load_balancer/lb_clustering.c",
          "modules/presence/clustering.c",
          "modules/usrloc/ul_cluster.c",
          "modules/usrloc/ul_mi.c"
        ],
        "message": "clusterer: issue sync request under lock\n\n(cherry picked from commit bf178b04ffec9fa22d75fc5266286f93721eec5d)",
        "before_after_code_files": [
          "modules/b2b_entities/b2be_clustering.c||modules/b2b_entities/b2be_clustering.c",
          "modules/cachedb_local/cachedb_local.c||modules/cachedb_local/cachedb_local.c",
          "modules/clusterer/api.h||modules/clusterer/api.h",
          "modules/clusterer/sync.c||modules/clusterer/sync.c",
          "modules/clusterer/sync.h||modules/clusterer/sync.h",
          "modules/dialog/dialog.c||modules/dialog/dialog.c",
          "modules/dialog/dlg_replication.c||modules/dialog/dlg_replication.c",
          "modules/dispatcher/ds_clustering.c||modules/dispatcher/ds_clustering.c",
          "modules/drouting/dr_clustering.c||modules/drouting/dr_clustering.c",
          "modules/load_balancer/lb_clustering.c||modules/load_balancer/lb_clustering.c",
          "modules/presence/clustering.c||modules/presence/clustering.c",
          "modules/usrloc/ul_cluster.c||modules/usrloc/ul_cluster.c",
          "modules/usrloc/ul_mi.c||modules/usrloc/ul_mi.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_entities/b2be_clustering.c||modules/b2b_entities/b2be_clustering.c": [
          "File: modules/b2b_entities/b2be_clustering.c -> modules/b2b_entities/b2be_clustering.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:   return -1;",
          "69:  }",
          "72:   LM_ERR(\"Sync request failed\\n\");",
          "74:  return 0;",
          "",
          "[Removed Lines]",
          "71:  if (cl_api.request_sync(&entities_repl_cap, b2be_cluster) < 0)",
          "",
          "[Added Lines]",
          "71:  if (cl_api.request_sync(&entities_repl_cap, b2be_cluster, 0) < 0)",
          "",
          "---------------"
        ],
        "modules/cachedb_local/cachedb_local.c||modules/cachedb_local/cachedb_local.c": [
          "File: modules/cachedb_local/cachedb_local.c -> modules/cachedb_local/cachedb_local.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "466:   }",
          "468:   if (rr_persist == RRP_SYNC_FROM_CLUSTER &&",
          "470:    LM_ERR(\"cachedb sync request failed\\n\");",
          "472:  }",
          "",
          "[Removed Lines]",
          "469:       clusterer_api.request_sync(&cache_repl_cap, cluster_id) < 0)",
          "",
          "[Added Lines]",
          "469:       clusterer_api.request_sync(&cache_repl_cap, cluster_id, 0) < 0)",
          "",
          "---------------"
        ],
        "modules/clusterer/api.h||modules/clusterer/api.h": [
          "File: modules/clusterer/api.h -> modules/clusterer/api.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "186: typedef int (*request_sync_f)(str * capability, int cluster_id);",
          "",
          "[Added Lines]",
          "186: typedef int (*request_sync_f)(str * capability, int cluster_id, int from_cb);",
          "",
          "---------------"
        ],
        "modules/clusterer/sync.c||modules/clusterer/sync.c": [
          "File: modules/clusterer/sync.c -> modules/clusterer/sync.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:  return 0;",
          "89: }",
          "92: {",
          "93:  cluster_info_t *cluster;",
          "94:  struct local_cap *lcap;",
          "95:  int source_id;",
          "97:  LM_DBG(\"requesting %.*s sync in cluster %d\\n\",",
          "98:         capability->len, capability->s, cluster_id);",
          "100:  cluster = get_cluster_by_id(cluster_id);",
          "101:  if (!cluster) {",
          "102:   LM_ERR(\"Unknown cluster [%d]\\n\", cluster_id);",
          "104:  }",
          "106:  for (lcap = cluster->capabilities; lcap; lcap = lcap->next)",
          "",
          "[Removed Lines]",
          "91: int cl_request_sync(str *capability, int cluster_id)",
          "103:   return -1;",
          "",
          "[Added Lines]",
          "91: int cl_request_sync(str *capability, int cluster_id, int from_cb)",
          "96:  int rc = -1;",
          "101:  if (!from_cb)",
          "102:   lock_start_read(cl_list_lock);",
          "107:   goto end;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:  if (!lcap) {",
          "110:   LM_ERR(\"Request sync for unknown capability: %.*s\\n\",",
          "111:    capability->len, capability->s);",
          "113:  }",
          "115:  lock_get(cluster->lock);",
          "116:  if (lcap->flags & CAP_SYNC_PENDING) {",
          "117:   lock_release(cluster->lock);",
          "118:   LM_DBG(\"Sync request already pending\\n\");",
          "120:  }",
          "121:  if (lcap->flags & CAP_SYNC_IN_PROGRESS) {",
          "122:   lock_release(cluster->lock);",
          "123:   LM_DBG(\"Sync already in progress\\n\");",
          "125:  }",
          "127:  if (!(lcap->flags & CAP_STATE_ENABLED)) {",
          "128:   lock_release(cluster->lock);",
          "129:   LM_DBG(\"Capability disabled, skip send sync request\\n\");",
          "131:  }",
          "",
          "[Removed Lines]",
          "112:   return -1;",
          "119:   return 0;",
          "124:   return 1;",
          "130:   return 0;",
          "",
          "[Added Lines]",
          "116:   goto end;",
          "123:   rc = 0;",
          "124:   goto end;",
          "129:   rc = 1;",
          "130:   goto end;",
          "136:   rc = 0;",
          "137:   goto end;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "163:   }",
          "164:  }",
          "167: }",
          "169: bin_packet_t *cl_sync_chunk_start(str *capability, int cluster_id, int dst_id,",
          "",
          "[Removed Lines]",
          "166:  return 0;",
          "",
          "[Added Lines]",
          "173:  rc = 0;",
          "174: end:",
          "175:  if (!from_cb)",
          "176:   lock_stop_read(cl_list_lock);",
          "177:  return rc;",
          "",
          "---------------"
        ],
        "modules/clusterer/sync.h||modules/clusterer/sync.h": [
          "File: modules/clusterer/sync.h -> modules/clusterer/sync.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:  int node_id;",
          "34: };",
          "37: bin_packet_t *cl_sync_chunk_start(str *capability, int cluster_id, int dst_id,",
          "38:                                   short data_version);",
          "39: int cl_sync_chunk_iter(bin_packet_t *packet);",
          "",
          "[Removed Lines]",
          "36: int cl_request_sync(str *capability, int cluster_id);",
          "",
          "[Added Lines]",
          "36: int cl_request_sync(str *capability, int cluster_id, int from_cb);",
          "",
          "---------------"
        ],
        "modules/dialog/dialog.c||modules/dialog/dialog.c": [
          "File: modules/dialog/dialog.c -> modules/dialog/dialog.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "863:    return -1;",
          "864:   }",
          "867:    LM_ERR(\"Sync request failed\\n\");",
          "868:  }",
          "",
          "[Removed Lines]",
          "866:   if (clusterer_api.request_sync(&dlg_repl_cap, dialog_repl_cluster) < 0)",
          "",
          "[Added Lines]",
          "866:   if (clusterer_api.request_sync(&dlg_repl_cap, dialog_repl_cluster, 0) < 0)",
          "",
          "---------------"
        ],
        "modules/dialog/dlg_replication.c||modules/dialog/dlg_replication.c": [
          "File: modules/dialog/dlg_replication.c -> modules/dialog/dlg_replication.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1177:     LM_DBG(\"Requesting sync for dialogs marked with backup \"",
          "1178:      \"sharing tags\\n\");",
          "1179:     rc = clusterer_api.request_sync(&dlg_repl_cap,",
          "1181:     if (rc < 0)",
          "1182:      LM_ERR(\"Failed to send sync request\");",
          "1183:     else if (rc == 1)",
          "",
          "[Removed Lines]",
          "1180:      dialog_repl_cluster);",
          "",
          "[Added Lines]",
          "1180:      dialog_repl_cluster, 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1678:   }",
          "1679:  }",
          "1683:  if (rc < 0)",
          "1684:   return init_mi_error(400, MI_SSTR(\"Failed to send sync request\"));",
          "",
          "[Removed Lines]",
          "1681:  rc = clusterer_api.request_sync(&dlg_repl_cap, dialog_repl_cluster);",
          "",
          "[Added Lines]",
          "1681:  rc = clusterer_api.request_sync(&dlg_repl_cap, dialog_repl_cluster, 0);",
          "",
          "---------------"
        ],
        "modules/dispatcher/ds_clustering.c||modules/dispatcher/ds_clustering.c": [
          "File: modules/dispatcher/ds_clustering.c -> modules/dispatcher/ds_clustering.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "205: }",
          "207: int ds_cluster_sync(void) {",
          "209:   LM_ERR(\"Sync request failed\\n\");",
          "210:   return -1;",
          "211:  }",
          "",
          "[Removed Lines]",
          "208:  if (c_api.request_sync(&status_repl_cap, ds_cluster_id) < 0) {",
          "",
          "[Added Lines]",
          "208:  if (c_api.request_sync(&status_repl_cap, ds_cluster_id, 0) < 0) {",
          "",
          "---------------"
        ],
        "modules/drouting/dr_clustering.c||modules/drouting/dr_clustering.c": [
          "File: modules/drouting/dr_clustering.c -> modules/drouting/dr_clustering.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "342:  if (!dr_cluster_id)",
          "343:   return 0;",
          "346:   LM_ERR(\"Sync request failed\\n\");",
          "347:   return -1;",
          "348:  }",
          "",
          "[Removed Lines]",
          "345:  if (c_api.request_sync(&status_repl_cap, dr_cluster_id) < 0) {",
          "",
          "[Added Lines]",
          "345:  if (c_api.request_sync(&status_repl_cap, dr_cluster_id, 0) < 0) {",
          "",
          "---------------"
        ],
        "modules/load_balancer/lb_clustering.c||modules/load_balancer/lb_clustering.c": [
          "File: modules/load_balancer/lb_clustering.c -> modules/load_balancer/lb_clustering.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "165: }",
          "167: int lb_cluster_sync(void) {",
          "169:   LM_ERR(\"Sync request failed\\n\");",
          "170:   return -1;",
          "171:  }",
          "",
          "[Removed Lines]",
          "168:  if (c_api.request_sync(&status_repl_cap, lb_cluster_id) < 0) {",
          "",
          "[Added Lines]",
          "168:  if (c_api.request_sync(&status_repl_cap, lb_cluster_id, 0) < 0) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "203:   lb_cluster_shtag.len = 0;",
          "204:  }",
          "207:   LM_ERR(\"Sync request failed\\n\");",
          "208:   return -1;",
          "209:  }",
          "",
          "[Removed Lines]",
          "206:  if (c_api.request_sync(&status_repl_cap, lb_cluster_id) < 0) {",
          "",
          "[Added Lines]",
          "206:  if (c_api.request_sync(&status_repl_cap, lb_cluster_id, 0) < 0) {",
          "",
          "---------------"
        ],
        "modules/presence/clustering.c||modules/presence/clustering.c": [
          "File: modules/presence/clustering.c -> modules/presence/clustering.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:  }",
          "99:  if (cluster_federation == FEDERATION_FULL_SHARING &&",
          "101:   LM_ERR(\"Sync request failed\\n\");",
          "103:  return 0;",
          "",
          "[Removed Lines]",
          "100:   c_api.request_sync(&presence_capability, pres_cluster_id) < 0)",
          "",
          "[Added Lines]",
          "100:   c_api.request_sync(&presence_capability, pres_cluster_id, 0) < 0)",
          "",
          "---------------"
        ],
        "modules/usrloc/ul_cluster.c||modules/usrloc/ul_cluster.c": [
          "File: modules/usrloc/ul_cluster.c -> modules/usrloc/ul_cluster.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:  }",
          "61:  if (rr_persist == RRP_SYNC_FROM_CLUSTER &&",
          "63:   LM_ERR(\"Sync request failed\\n\");",
          "65:  return 0;",
          "",
          "[Removed Lines]",
          "62:      clusterer_api.request_sync(&contact_repl_cap, location_cluster) < 0)",
          "",
          "[Added Lines]",
          "62:      clusterer_api.request_sync(&contact_repl_cap, location_cluster, 0) < 0)",
          "",
          "---------------"
        ],
        "modules/usrloc/ul_mi.c||modules/usrloc/ul_mi.c": [
          "File: modules/usrloc/ul_mi.c -> modules/usrloc/ul_mi.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "751:  if (!location_cluster)",
          "752:   return init_mi_error(400, MI_SSTR(\"Clustering not enabled\"));",
          "755:   return init_mi_error(400, MI_SSTR(\"Failed to send sync request\"));",
          "756:  else",
          "757:   return init_mi_result_ok();",
          "",
          "[Removed Lines]",
          "754:  if (clusterer_api.request_sync(&contact_repl_cap, location_cluster) < 0)",
          "",
          "[Added Lines]",
          "754:  if (clusterer_api.request_sync(&contact_repl_cap, location_cluster, 0) < 0)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b549476248c9e418cd14733dc53e922d7667f0b3",
      "candidate_info": {
        "commit_hash": "b549476248c9e418cd14733dc53e922d7667f0b3",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/b549476248c9e418cd14733dc53e922d7667f0b3",
        "files": [
          "parser/parse_uri.c",
          "parser/test/test_parser.c"
        ],
        "message": "parse_uri: Fix some UB corner-cases (reported by OSS-Fuzz)\n\n* possible bitwise left shift with a negative value (UB)\n* possible integer overflow, due to multiplication (UB)\n\nFixes OSS-Fuzz#48273\n\n(cherry picked from commit cf95355290c64e2693f88d17e3830405f97962d9)\n(cherry picked from commit 7cc624275e6a98322a235062327f2469725dfbb2)",
        "before_after_code_files": [
          "parser/parse_uri.c||parser/parse_uri.c",
          "parser/test/test_parser.c||parser/test/test_parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "parser/parse_uri.c||parser/parse_uri.c": [
          "File: parser/parse_uri.c -> parser/parse_uri.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "369:  int i;",
          "370: #endif",
          "373:  case ch: \\",
          "377: #define still_at_user  \\",
          "378:       if (found_user==0){ \\",
          "",
          "[Removed Lines]",
          "372: #define case_port( ch, var) \\",
          "374:     (var)=(var)*10+ch-'0'; \\",
          "375:     break",
          "",
          "[Added Lines]",
          "372: #define case_port( ch, var, ovf_check1, ovf_check2) \\",
          "374:    if (ovf_check1) \\",
          "375:     (var)=(var)*10+ch-'0'; \\",
          "376:    if (ovf_check2 && (var) > USHRT_MAX) \\",
          "377:     goto error_bad_port; \\",
          "378:    break",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "658:  if (len<5) goto error_too_short;",
          "660:  scheme|=0x20202020;",
          "661:  if (scheme==SIP_SCH){",
          "662:   uri->type=SIP_URI_T;",
          "",
          "[Removed Lines]",
          "659:  scheme=buf[0]+(buf[1]<<8)+(buf[2]<<16)+(buf[3]<<24);",
          "",
          "[Added Lines]",
          "662:  scheme=(unsigned char)buf[0]+((unsigned char)buf[1]<<8)+",
          "663:    ((unsigned char)buf[2]<<16)+((unsigned char)buf[3]<<24);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "776:       s=p+1;",
          "777:       break;",
          "788:      case '[':",
          "789:      case ']':",
          "790:      case ':':",
          "",
          "[Removed Lines]",
          "778:      case_port('0', port_no);",
          "779:      case_port('1', port_no);",
          "780:      case_port('2', port_no);",
          "781:      case_port('3', port_no);",
          "782:      case_port('4', port_no);",
          "783:      case_port('5', port_no);",
          "784:      case_port('6', port_no);",
          "785:      case_port('7', port_no);",
          "786:      case_port('8', port_no);",
          "787:      case_port('9', port_no);",
          "",
          "[Added Lines]",
          "782:      case_port('0', port_no, port_no < INT_MAX / 10, 0);",
          "783:      case_port('1', port_no, port_no < INT_MAX / 10, 0);",
          "784:      case_port('2', port_no, port_no < INT_MAX / 10, 0);",
          "785:      case_port('3', port_no, port_no < INT_MAX / 10, 0);",
          "786:      case_port('4', port_no, port_no < INT_MAX / 10, 0);",
          "787:      case_port('5', port_no, port_no < INT_MAX / 10, 0);",
          "788:      case_port('6', port_no, port_no < INT_MAX / 10, 0);",
          "789:      case_port('7', port_no, port_no < INT_MAX / 10, 0);",
          "790:      case_port('8', port_no, port_no < INT_MAX / 10, 0);",
          "791:      case_port('9', port_no, port_no < INT_MAX / 10, 0);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "870:       state=URI_HEADERS;",
          "871:       s=p+1;",
          "872:       break;",
          "883:      case '&':",
          "884:      case '@':",
          "885:      case ':':",
          "",
          "[Removed Lines]",
          "873:      case_port('0', port_no);",
          "874:      case_port('1', port_no);",
          "875:      case_port('2', port_no);",
          "876:      case_port('3', port_no);",
          "877:      case_port('4', port_no);",
          "878:      case_port('5', port_no);",
          "879:      case_port('6', port_no);",
          "880:      case_port('7', port_no);",
          "881:      case_port('8', port_no);",
          "882:      case_port('9', port_no);",
          "",
          "[Added Lines]",
          "877:      case_port('0', port_no, 1, 1);",
          "878:      case_port('1', port_no, 1, 1);",
          "879:      case_port('2', port_no, 1, 1);",
          "880:      case_port('3', port_no, 1, 1);",
          "881:      case_port('4', port_no, 1, 1);",
          "882:      case_port('5', port_no, 1, 1);",
          "883:      case_port('6', port_no, 1, 1);",
          "884:      case_port('7', port_no, 1, 1);",
          "885:      case_port('8', port_no, 1, 1);",
          "886:      case_port('9', port_no, 1, 1);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "1350:   case URI_PASSWORD:",
          "1352:    if (found_user) goto error_bad_port;",
          "1353:    uri->port.s=s;",
          "1354:    uri->port.len=p-s;",
          "1355:    uri->port_no=port_no;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1357:    if (port_no > USHRT_MAX) goto error_bad_port;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1609:    len, ZSW(buf), len);",
          "1610:  goto error_exit;",
          "1611: error_bad_port:",
          "1613:    \" state %d) parsed: <%.*s>(%d) /<%.*s> (%d)\\n\",",
          "1615:    len, ZSW(buf), len);",
          "",
          "[Removed Lines]",
          "1612:  LM_ERR(\"bad port in uri (error at char %c in\"",
          "",
          "[Added Lines]",
          "1617:  LM_ERR(\"bad port in uri (error at char '%c' in\"",
          "",
          "---------------"
        ],
        "parser/test/test_parser.c||parser/test/test_parser.c": [
          "File: parser/test/test_parser.c -> parser/test/test_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:  ok(!u.user.s, \"puri-0.5\");",
          "48:  ok(u.user.len == 0, \"puri-0.6\");",
          "50:  in = *_str(\"sip:alice@atlanta.org;user=phone\");",
          "51:  ok(parse_uri(in.s, in.len, &u) == 0, \"puri-1\");",
          "52:  ok(str_match(&u.user_param, const_str(\"user=phone\")), \"puri-2\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "51:  ok(!parse_uri(STR_L(\"sip:localhost@atlanta.org:0\"), &u), \"puri-0.7\");",
          "52:  ok(!parse_uri(STR_L(\"sip:localhost@atlanta.org:65535\"), &u), \"puri-0.8\");",
          "53:  ok(parse_uri(STR_L(\"sip:localhost@atlanta.org:65536\"), &u), \"puri-0.9\");",
          "54:  ok(parse_uri(STR_L(\"sip:localhost@atlanta.org:55555555555555555555\"), &u), \"puri-0.10\");",
          "55:  ok(!parse_uri(STR_L(\"sip:localhost:0@atlanta.org\"), &u), \"puri-0.11\");",
          "56:  ok(!parse_uri(STR_L(\"sip:localhost:65535@atlanta.org\"), &u), \"puri-0.12\");",
          "57:  ok(!parse_uri(STR_L(\"sip:localhost:65536@atlanta.org\"), &u), \"puri-0.13\");",
          "58:  ok(!parse_uri(STR_L(\"sip:localhost:5555555555555@atlanta.org\"), &u), \"puri-0.14\");",
          "59:  ok(!parse_uri(STR_L(\"sip:localhost:0\"), &u), \"puri-0.15\");",
          "60:  ok(!parse_uri(STR_L(\"sip:localhost:65535\"), &u), \"puri-0.16\");",
          "61:  ok(parse_uri(STR_L(\"sip:localhost:65536\"), &u), \"puri-0.17\");",
          "62:  ok(parse_uri(STR_L(\"sip:localhost:55555555555\"), &u), \"puri-0.18\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "204092b4110ba76f2b99f05bf31c5d278fc76730",
      "candidate_info": {
        "commit_hash": "204092b4110ba76f2b99f05bf31c5d278fc76730",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/204092b4110ba76f2b99f05bf31c5d278fc76730",
        "files": [
          "parser/msg_parser.c",
          "parser/test/test_parser.c"
        ],
        "message": "parse_msg(): Fix heap buffer overflow edge-case (OSS-Fuzz)\n\nThis patch fixes a SIP message parsing error log which could lead to an\nunsafe printing of a non-NULL terminated string.  Fortunately, the\nOpenSIPS PKG memory allocator minimizes the severity of this overflow,\nthanks to its pre-allocated, large chunk of heap memory.\n\nSeverity: Low\nFixes OSS-Fuzz#52204\n\n(cherry picked from commit 2a6f8c67aa15ebf507cc9ff2bd881d771858fed7)",
        "before_after_code_files": [
          "parser/msg_parser.c||parser/msg_parser.c",
          "parser/test/test_parser.c||parser/test/test_parser.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "parser/msg_parser.c||parser/msg_parser.c": [
          "File: parser/msg_parser.c -> parser/msg_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "239:     if (match){",
          "240:      match++;",
          "241:     }else {",
          "243:      tmp=end;",
          "244:      goto error_bad_hdr;",
          "245:     }",
          "",
          "[Removed Lines]",
          "242:      LM_ERR(\"bad body for <%s>(%d)\\n\", hdr->name.s, hdr->type);",
          "",
          "[Added Lines]",
          "242:      LM_ERR(\"bad body for <%.*s>(%d)\\n\",",
          "243:               hdr->name.len, hdr->name.s, hdr->type);",
          "",
          "---------------"
        ],
        "parser/test/test_parser.c||parser/test/test_parser.c": [
          "File: parser/test/test_parser.c -> parser/test/test_parser.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "152:   \"e \\xff\\xff\\xff\\xff     \\xff\\n\\xff\\xff  \",",
          "153:   -1,",
          "158:   \"d  \\x02\\x80\\0\\nt\\0:G;150=\\\"a8\",",
          "159:   -1,",
          "160:  },",
          "162:  {\"\\0\", 0},",
          "",
          "[Removed Lines]",
          "154:  },",
          "156:  {",
          "",
          "[Added Lines]",
          "154:  }, {",
          "158:  }, {",
          "160:   \"m  r\\nu:c \\x1b\\r   : ]\",",
          "161:   -1,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "173:   msg.buf = (char *)tset[i].tmsg;",
          "174:   msg.len = strlen(msg.buf);",
          "177:  }",
          "178: }",
          "",
          "[Removed Lines]",
          "176:   ok(parse_msg(msg.buf, msg.len, &msg) == tset[i].tres, \"parse-msg-0\");",
          "",
          "[Added Lines]",
          "178:   ok(parse_msg(msg.buf, msg.len, &msg) == tset[i].tres, \"parse-msg-t%d\", i);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ed7a33a28ff52103e35d33a32e081c1d92c2a893",
      "candidate_info": {
        "commit_hash": "ed7a33a28ff52103e35d33a32e081c1d92c2a893",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/ed7a33a28ff52103e35d33a32e081c1d92c2a893",
        "files": [
          "modules/aaa_diameter/aaa_impl.c",
          "modules/aaa_diameter/aaa_impl.h"
        ],
        "message": "aaa_diameter: Avoid all pthread_cond race conditions\n\nThe recommended usage of the wait/signal pthread_cond_t functions\nincludes using a \"counter\" variable in order to keep track of any\n\"signal\" events happening before the actual \"wait\".\n\nMany thanks to Ryan Caicse (@ryancaicse) for reporting this bug and the\nexcellent fix suggestion!\n\nFixes #2789\n\n(cherry picked from commit 5422799e77662db58d23cbd38bc92875091f177a)",
        "before_after_code_files": [
          "modules/aaa_diameter/aaa_impl.c||modules/aaa_diameter/aaa_impl.c",
          "modules/aaa_diameter/aaa_impl.h||modules/aaa_diameter/aaa_impl.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/aaa_diameter/aaa_impl.c||modules/aaa_diameter/aaa_impl.c": [
          "File: modules/aaa_diameter/aaa_impl.c -> modules/aaa_diameter/aaa_impl.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "194:  pthread_mutex_lock(&rpl_cond->mutex);",
          "196:  pthread_mutex_unlock(&rpl_cond->mutex);",
          "198: out:",
          "",
          "[Removed Lines]",
          "195:  pthread_cond_signal(&rpl_cond->cond);",
          "",
          "[Added Lines]",
          "195:  if (rpl_cond->count == 0)",
          "196:   pthread_cond_signal(&rpl_cond->cond);",
          "197:  rpl_cond->count += 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1240:   LM_DBG(\"awaiting auth reply...\\n\");",
          "1242:   pthread_mutex_lock(&my_reply_cond->mutex);",
          "1244:   pthread_mutex_unlock(&my_reply_cond->mutex);",
          "1246:   LM_DBG(\"reply received, Result-Code: %d (%s)\\n\", my_reply_cond->rc,",
          "",
          "[Removed Lines]",
          "1243:   pthread_cond_wait(&my_reply_cond->cond, &my_reply_cond->mutex);",
          "",
          "[Added Lines]",
          "1245:   while (my_reply_cond->count == 0)",
          "1246:    pthread_cond_wait(&my_reply_cond->cond, &my_reply_cond->mutex);",
          "1247:   my_reply_cond->count -= 1;",
          "",
          "---------------"
        ],
        "modules/aaa_diameter/aaa_impl.h||modules/aaa_diameter/aaa_impl.h": [
          "File: modules/aaa_diameter/aaa_impl.h -> modules/aaa_diameter/aaa_impl.h"
        ]
      }
    },
    {
      "candidate_hash": "c5888125f77978c718c9da72fc67e7f44b9f39c0",
      "candidate_info": {
        "commit_hash": "c5888125f77978c718c9da72fc67e7f44b9f39c0",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/c5888125f77978c718c9da72fc67e7f44b9f39c0",
        "files": [
          "modules/dialog/dlg_replication.c"
        ],
        "message": "dialog: fix typo in commit edc90fb\n\n(cherry picked from commit 3cebaf73059932183392761a040969efb887bcea)",
        "before_after_code_files": [
          "modules/dialog/dlg_replication.c||modules/dialog/dlg_replication.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/dialog/dlg_replication.c||modules/dialog/dlg_replication.c": [
          "File: modules/dialog/dlg_replication.c -> modules/dialog/dlg_replication.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "158:   }",
          "160:   dlg_sync_in_progress = shm_malloc(sizeof *dlg_sync_in_progress);",
          "162:    LM_ERR(\"no more shm memory!\\n\");",
          "163:    return -1;",
          "164:   }",
          "",
          "[Removed Lines]",
          "161:   if (*dlg_sync_in_progress) {",
          "",
          "[Added Lines]",
          "161:   if (!dlg_sync_in_progress) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}