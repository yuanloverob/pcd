{
  "cve_id": "CVE-2024-28107",
  "cve_desc": "phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases.  A SQL injection vulnerability has been discovered in the `insertentry` & `saveentry` when modifying records due to improper escaping of the email address. This allows any authenticated user with the rights to add/edit FAQ news to exploit this vulnerability to exfiltrate data, take over accounts and in some cases, even achieve RCE. This vulnerability is fixed in 3.2.6.",
  "repo": "thorsten/phpMyFAQ",
  "patch_hash": "d0fae62a72615d809e6710861c1a7f67ac893007",
  "patch_info": {
    "commit_hash": "d0fae62a72615d809e6710861c1a7f67ac893007",
    "repo": "thorsten/phpMyFAQ",
    "commit_url": "https://github.com/thorsten/phpMyFAQ/commit/d0fae62a72615d809e6710861c1a7f67ac893007",
    "files": [
      "phpmyfaq/src/phpMyFAQ/Faq.php"
    ],
    "message": "fix: added missing escapting of value",
    "before_after_code_files": [
      "phpmyfaq/src/phpMyFAQ/Faq.php||phpmyfaq/src/phpMyFAQ/Faq.php"
    ]
  },
  "patch_diff": {
    "phpmyfaq/src/phpMyFAQ/Faq.php||phpmyfaq/src/phpMyFAQ/Faq.php": [
      "File: phpmyfaq/src/phpMyFAQ/Faq.php -> phpmyfaq/src/phpMyFAQ/Faq.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "925:             $this->config->getDb()->escape($faq->getQuestion()),",
      "926:             $this->config->getDb()->escape($faq->getAnswer()),",
      "927:             $this->config->getDb()->escape($faq->getAuthor()),",
      "929:             $faq->isComment() ? 'y' : 'n',",
      "930:             $faq->getUpdatedDate()->format('YmdHis'),",
      "931:             '00000000000000',",
      "932:             '99991231235959',",
      "933:             date('Y-m-d H:i:s'),",
      "935:         );",
      "937:         $this->config->getDb()->query($query);",
      "",
      "[Removed Lines]",
      "928:             $faq->getEmail(),",
      "934:             $faq->getNotes()",
      "",
      "[Added Lines]",
      "928:             $this->config->getDb()->escape($faq->getEmail()),",
      "934:             $this->config->getDb()->escape($faq->getNotes())",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "994:             $this->config->getDb()->escape($faq->getQuestion()),",
      "995:             $this->config->getDb()->escape($faq->getAnswer()),",
      "996:             $this->config->getDb()->escape($faq->getAuthor()),",
      "998:             $faq->isComment() ? 'y' : 'n',",
      "999:             $faq->getUpdatedDate()->format('YmdHis'),",
      "1000:             $faq->getValidFrom()->format('YmdHis'),",
      "1001:             $faq->getValidTo()->format('YmdHis'),",
      "1003:             $faq->getId(),",
      "1004:             $faq->getLanguage()",
      "1005:         );",
      "",
      "[Removed Lines]",
      "997:             $faq->getEmail(),",
      "1002:             $faq->getNotes(),",
      "",
      "[Added Lines]",
      "997:             $this->config->getDb()->escape($faq->getEmail()),",
      "1002:             $this->config->getDb()->escape($faq->getNotes()),",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5913feb3709fa318c32524e7edb8f4e7265c47d0",
      "candidate_info": {
        "commit_hash": "5913feb3709fa318c32524e7edb8f4e7265c47d0",
        "repo": "thorsten/phpMyFAQ",
        "commit_url": "https://github.com/thorsten/phpMyFAQ/commit/5913feb3709fa318c32524e7edb8f4e7265c47d0",
        "files": [
          "phpmyfaq/admin/record.edit.php",
          "phpmyfaq/admin/record.save.php",
          "phpmyfaq/config/database.postgres.php",
          "phpmyfaq/src/phpMyFAQ/Entity/FaqEntity.php",
          "phpmyfaq/src/phpMyFAQ/Faq.php"
        ],
        "message": "fix: corrected update date handling, closes #3106",
        "before_after_code_files": [
          "phpmyfaq/admin/record.edit.php||phpmyfaq/admin/record.edit.php",
          "phpmyfaq/admin/record.save.php||phpmyfaq/admin/record.save.php",
          "phpmyfaq/config/database.postgres.php||phpmyfaq/config/database.postgres.php",
          "phpmyfaq/src/phpMyFAQ/Entity/FaqEntity.php||phpmyfaq/src/phpMyFAQ/Entity/FaqEntity.php",
          "phpmyfaq/src/phpMyFAQ/Faq.php||phpmyfaq/src/phpMyFAQ/Faq.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "phpmyfaq/src/phpMyFAQ/Faq.php||phpmyfaq/src/phpMyFAQ/Faq.php"
          ],
          "candidate": [
            "phpmyfaq/src/phpMyFAQ/Faq.php||phpmyfaq/src/phpMyFAQ/Faq.php"
          ]
        }
      },
      "candidate_diff": {
        "phpmyfaq/admin/record.edit.php||phpmyfaq/admin/record.edit.php": [
          "File: phpmyfaq/admin/record.edit.php -> phpmyfaq/admin/record.edit.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "720:                             <div class=\"form-group\">",
          "721:                                 <div class=\"form-check\">",
          "722:                                     <input type=\"radio\" id=\"updateDate\" checked name=\"recordDateHandling\"",
          "724:                                            onchange=\"setRecordDate(this.id);\">",
          "725:                                     <label class=\"form-check-label\" for=\"updateDate\">",
          "726:                                         <?= Translation::get('msgUpdateFaqDate') ?>",
          "",
          "[Removed Lines]",
          "723:                                            class=\"form-check-input\"",
          "",
          "[Added Lines]",
          "723:                                            class=\"form-check-input\" value=\"updateDate\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "728:                                 </div>",
          "729:                                 <div class=\"form-check\">",
          "730:                                     <input type=\"radio\" id=\"keepDate\" name=\"recordDateHandling\" class=\"form-check-input\"",
          "732:                                     <label class=\"form-check-label\" for=\"keepDate\">",
          "733:                                         <?= Translation::get('msgKeepFaqDate') ?>",
          "734:                                     </label>",
          "735:                                 </div>",
          "736:                                 <div class=\"form-check\">",
          "737:                                     <input type=\"radio\" id=\"manualDate\" name=\"recordDateHandling\"",
          "739:                                            onchange=\"setRecordDate(this.id);\">",
          "740:                                     <label class=\"form-check-label\" for=\"manualDate\">",
          "741:                                         <?= Translation::get('msgEditFaqDat') ?>",
          "",
          "[Removed Lines]",
          "731:                                            onchange=\"setRecordDate(this.id);\">",
          "738:                                            class=\"form-check-input\"",
          "",
          "[Added Lines]",
          "731:                                            onchange=\"setRecordDate(this.id);\" value=\"keepDate\">",
          "738:                                            class=\"form-check-input\" value=\"manualDate\"",
          "",
          "---------------"
        ],
        "phpmyfaq/admin/record.save.php||phpmyfaq/admin/record.save.php": [
          "File: phpmyfaq/admin/record.save.php -> phpmyfaq/admin/record.save.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "88:     $changed = Filter::filterInput(INPUT_POST, 'changed', FILTER_SANITIZE_SPECIAL_CHARS);",
          "89:     $date = Filter::filterInput(INPUT_POST, 'date', FILTER_SANITIZE_SPECIAL_CHARS);",
          "90:     $notes = Filter::filterInput(INPUT_POST, 'notes', FILTER_SANITIZE_SPECIAL_CHARS);",
          "93:     $faqPermission = new FaqPermission($faqConfig);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "91:     $recordDateHandling = Filter::filterInput(INPUT_POST, 'recordDateHandling', FILTER_SANITIZE_SPECIAL_CHARS);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "137:             ->setAuthor($author)",
          "138:             ->setEmail($email)",
          "139:             ->setComment(!is_null($comment))",
          "141:             ->setNotes(Filter::removeAttributes($notes));",
          "144:         $changelog = new Changelog($faqConfig);",
          "145:         $changelog->add($recordId, $user->getUserId(), (string) $changed, $recordLang, $revisionId);",
          "",
          "[Removed Lines]",
          "140:             ->setCreatedDate(new DateTime())",
          "",
          "[Added Lines]",
          "143:         switch ($recordDateHandling) {",
          "144:             case 'updateDate':",
          "145:                 $faqData->setUpdatedDate(new DateTime());",
          "146:                 break;",
          "147:             case 'manualDate':",
          "148:                 $faqData->setUpdatedDate(new DateTime($date));",
          "149:                 break;",
          "150:             case 'keepDate':",
          "151:                 break;",
          "152:         }",
          "",
          "---------------"
        ],
        "phpmyfaq/config/database.postgres.php||phpmyfaq/config/database.postgres.php": [
          "File: phpmyfaq/config/database.postgres.php -> phpmyfaq/config/database.postgres.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "2: $DB['server'] = 'postgres';",
          "3: $DB['port'] = '5432';",
          "4: $DB['user'] = 'phpmyfaq';",
          "5: $DB['password'] = 'phpmyfaq';",
          "6: $DB['db'] = 'phpmyfaq';",
          "7: $DB['prefix'] = '';",
          "8: $DB['type'] = 'pgsql';",
          "",
          "---------------"
        ],
        "phpmyfaq/src/phpMyFAQ/Entity/FaqEntity.php||phpmyfaq/src/phpMyFAQ/Entity/FaqEntity.php": [
          "File: phpmyfaq/src/phpMyFAQ/Entity/FaqEntity.php -> phpmyfaq/src/phpMyFAQ/Entity/FaqEntity.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "247:         return $this;",
          "248:     }",
          "251:     {",
          "257:     }",
          "259:     public function setUpdatedDate(DateTime $updatedDate): FaqEntity",
          "",
          "[Removed Lines]",
          "250:     public function getUpdatedDate(): DateTime",
          "252:         if ($this->updatedDate instanceof DateTime) {",
          "253:             return $this->updatedDate;",
          "254:         } else {",
          "255:             return $this->updatedDate = new DateTime();",
          "256:         }",
          "",
          "[Added Lines]",
          "250:     public function getUpdatedDate(): ?DateTime",
          "252:         return $this->updatedDate ?? null;",
          "",
          "---------------"
        ],
        "phpmyfaq/src/phpMyFAQ/Faq.php||phpmyfaq/src/phpMyFAQ/Faq.php": [
          "File: phpmyfaq/src/phpMyFAQ/Faq.php -> phpmyfaq/src/phpMyFAQ/Faq.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "966:     public function update(FaqEntity $faq): bool",
          "967:     {",
          "968:         $query = sprintf(",
          "989:             Database::getTablePrefix(),",
          "990:             $faq->getRevisionId(),",
          "991:             $faq->isActive() ? 'yes' : 'no',",
          "",
          "[Removed Lines]",
          "969:             \"UPDATE",
          "970:                 %sfaqdata",
          "971:             SET",
          "972:                 revision_id = %d,",
          "973:                 active = '%s',",
          "974:                 sticky = %d,",
          "975:                 keywords = '%s',",
          "976:                 thema = '%s',",
          "977:                 content = '%s',",
          "978:                 author = '%s',",
          "979:                 email = '%s',",
          "980:                 comment = '%s',",
          "981:                 updated = '%s',",
          "982:                 date_start = '%s',",
          "983:                 date_end = '%s',",
          "984:                 notes = '%s'",
          "985:             WHERE",
          "986:                 id = %d",
          "987:             AND",
          "988:                 lang = '%s'\",",
          "",
          "[Added Lines]",
          "969:             \"UPDATE %sfaqdata SET",
          "970:             revision_id = %d,",
          "971:             active = '%s',",
          "972:             sticky = %d,",
          "973:             keywords = '%s',",
          "974:             thema = '%s',",
          "975:             content = '%s',",
          "976:             author = '%s',",
          "977:             email = '%s',",
          "978:             comment = '%s',",
          "979:             date_start = '%s',",
          "980:             date_end = '%s',",
          "981:             notes = '%s'\",",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "996:             $this->config->getDb()->escape($faq->getAuthor()),",
          "997:             $this->config->getDb()->escape($faq->getEmail()),",
          "998:             $faq->isComment() ? 'y' : 'n',",
          "1000:             $faq->getValidFrom()->format('YmdHis'),",
          "1001:             $faq->getValidTo()->format('YmdHis'),",
          "1003:             $faq->getId(),",
          "1005:         );",
          "1007:         return (bool) $this->config->getDb()->query($query);",
          "",
          "[Removed Lines]",
          "999:             $faq->getUpdatedDate()->format('YmdHis'),",
          "1002:             $this->config->getDb()->escape($faq->getNotes()),",
          "1004:             $faq->getLanguage()",
          "",
          "[Added Lines]",
          "994:             $this->config->getDb()->escape($faq->getNotes())",
          "995:         );",
          "998:         if ($faq->getUpdatedDate() !== null) {",
          "999:             $query .= sprintf(\", updated = '%s'\", $faq->getUpdatedDate()->format('YmdHis'));",
          "1000:         }",
          "1002:         $query .= sprintf(",
          "1003:             \" WHERE id = %d AND lang = '%s'\",",
          "1005:             $this->config->getDb()->escape($faq->getLanguage())",
          "",
          "---------------"
        ]
      }
    }
  ]
}