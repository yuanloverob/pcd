{
  "cve_id": "CVE-2019-10910",
  "cve_desc": "In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, when service ids allow user input, this could allow for SQL Injection and remote code execution. This is related to symfony/dependency-injection.",
  "repo": "symfony/symfony",
  "patch_hash": "d2fb5893923292a1da7985f0b56960b5bb10737b",
  "patch_info": {
    "commit_hash": "d2fb5893923292a1da7985f0b56960b5bb10737b",
    "repo": "symfony/symfony",
    "commit_url": "https://github.com/symfony/symfony/commit/d2fb5893923292a1da7985f0b56960b5bb10737b",
    "files": [
      "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
      "src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
      "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
      "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
      "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php"
    ],
    "message": "[DI] Check service IDs are valid",
    "before_after_code_files": [
      "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
      "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
      "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
      "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
      "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
      "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php"
    ]
  },
  "patch_diff": {
    "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php": [
      "File: src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php -> src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "58:         $instantiation = 'return';",
      "60:         if ($definition->isShared()) {",
      "62:         }",
      "64:         if (null === $factoryCode) {",
      "",
      "[Removed Lines]",
      "61:             $instantiation .= sprintf(' $this->%s[\\'%s\\'] =', \\method_exists(ContainerBuilder::class, 'addClassResource') || ($definition->isPublic() && !$definition->isPrivate()) ? 'services' : 'privates', $id);",
      "",
      "[Added Lines]",
      "61:             $instantiation .= sprintf(' $this->%s[%s] =', \\method_exists(ContainerBuilder::class, 'addClassResource') || ($definition->isPublic() && !$definition->isPrivate()) ? 'services' : 'privates', var_export($id, true));",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php": [
      "File: src/Symfony/Component/DependencyInjection/ContainerBuilder.php -> src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "868:     {",
      "869:         $alias = $this->normalizeId($alias);",
      "871:         if (\\is_string($id)) {",
      "872:             $id = new Alias($this->normalizeId($id));",
      "873:         } elseif (!$id instanceof Alias) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "871:         if ('' === $alias || '\\\\' === substr($alias, -1) || \\strlen($alias) !== strcspn($alias, \"\\0\\r\\n'\")) {",
      "872:             throw new InvalidArgumentException(sprintf('Invalid alias id: \"%s\"', $alias));",
      "873:         }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1022:         $id = $this->normalizeId($id);",
      "1024:         unset($this->aliasDefinitions[$id], $this->removedIds[$id]);",
      "1026:         return $this->definitions[$id] = $definition;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1028:         if ('' === $id || '\\\\' === substr($id, -1) || \\strlen($id) !== strcspn($id, \"\\0\\r\\n'\")) {",
      "1029:             throw new InvalidArgumentException(sprintf('Invalid service id: \"%s\"', $id));",
      "1030:         }",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php": [
      "File: src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "483:         $instantiation = '';",
      "485:         if (!$isProxyCandidate && $definition->isShared()) {",
      "487:         } elseif (!$isSimpleInstance) {",
      "488:             $instantiation = '$instance';",
      "489:         }",
      "",
      "[Removed Lines]",
      "486:             $instantiation = \"\\$this->services['$id'] = \".($isSimpleInstance ? '' : '$instance');",
      "",
      "[Added Lines]",
      "486:             $instantiation = sprintf('$this->services[%s] = %s', $this->doExport($id), $isSimpleInstance ? '' : '$instance');",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "683:     protected function {$methodName}($lazyInitialization)",
      "684:     {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "682: EOF;",
      "683:             $code = str_replace('*/', ' ', $code).<<<EOF",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "694:         if ($this->getProxyDumper()->isProxyCandidate($definition)) {",
      "695:             $factoryCode = $asFile ? \"\\$this->load('%s.php', false)\" : '$this->%s(false)';",
      "697:         }",
      "699:         if ($definition->isDeprecated()) {",
      "",
      "[Removed Lines]",
      "696:             $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName));",
      "",
      "[Added Lines]",
      "699:             $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName, $this->doExport($id)));",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "768:         $code .= sprintf(<<<'EOTXT'",
      "772:         }",
      "774: EOTXT",
      "775:             ,",
      "776:             'services',",
      "778:         );",
      "780:         return $code;",
      "",
      "[Removed Lines]",
      "770:         if (isset($this->%s['%s'])) {",
      "771:             return $this->%1$s['%2$s'];",
      "777:             $id",
      "",
      "[Added Lines]",
      "773:         if (isset($this->%s[%s])) {",
      "774:             return $this->%1$s[%2$s];",
      "780:             $this->doExport($id)",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1530:             if (!$this->container->hasDefinition($service)) {",
      "1531:                 return 'false';",
      "1532:             }",
      "1534:         }",
      "1535:         foreach (ContainerBuilder::getServiceConditionals($value) as $service) {",
      "1536:             if ($this->container->hasDefinition($service) && !$this->container->getDefinition($service)->isPublic()) {",
      "1537:                 continue;",
      "1538:             }",
      "1541:         }",
      "1543:         if (!$conditions) {",
      "",
      "[Removed Lines]",
      "1533:             $conditions[] = sprintf(\"isset(\\$this->services['%s'])\", $service);",
      "1540:             $conditions[] = sprintf(\"\\$this->has('%s')\", $service);",
      "",
      "[Added Lines]",
      "1536:             $conditions[] = sprintf('isset($this->services[%s])', $this->doExport($service));",
      "1543:             $conditions[] = sprintf('$this->has(%s)', $this->doExport($service));",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1777:     private function dumpParameter($name)",
      "1778:     {",
      "1779:         if ($this->container->isCompiled() && $this->container->hasParameter($name)) {",
      "1780:             $value = $this->container->getParameter($name);",
      "1781:             $dumpedValue = $this->dumpValue($value, false);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1782:         $name = (string) $name;",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1785:             }",
      "1787:             if (!preg_match(\"/\\\\\\$this->(?:getEnv\\('(?:\\w++:)*+\\w++'\\)|targetDirs\\[\\d++\\])/\", $dumpedValue)) {",
      "1789:             }",
      "1790:         }",
      "1793:     }",
      "",
      "[Removed Lines]",
      "1788:                 return sprintf(\"\\$this->parameters['%s']\", $name);",
      "1792:         return sprintf(\"\\$this->getParameter('%s')\", $name);",
      "",
      "[Added Lines]",
      "1793:                 return sprintf('$this->parameters[%s]', $this->doExport($name));",
      "1797:         return sprintf('$this->getParameter(%s)', $this->doExport($name));",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1814:         if ($this->container->hasDefinition($id) && $definition = $this->container->getDefinition($id)) {",
      "1815:             if ($definition->isSynthetic()) {",
      "1817:             } elseif (null !== $reference && ContainerInterface::IGNORE_ON_UNINITIALIZED_REFERENCE === $reference->getInvalidBehavior()) {",
      "1818:                 $code = 'null';",
      "1819:                 if (!$definition->isShared()) {",
      "",
      "[Removed Lines]",
      "1816:                 $code = sprintf('$this->get(\\'%s\\'%s)', $id, null !== $reference ? ', '.$reference->getInvalidBehavior() : '');",
      "",
      "[Added Lines]",
      "1821:                 $code = sprintf('$this->get(%s%s)', $this->doExport($id), null !== $reference ? ', '.$reference->getInvalidBehavior() : '');",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "1822:             } elseif ($this->isTrivialInstance($definition)) {",
      "1823:                 $code = substr($this->addNewInstance($definition, '', '', $id), 8, -2);",
      "1824:                 if ($definition->isShared()) {",
      "1826:                 }",
      "1827:                 $code = \"($code)\";",
      "1828:             } elseif ($this->asFiles && $definition->isShared() && !$this->isHotPath($definition)) {",
      "",
      "[Removed Lines]",
      "1825:                     $code = sprintf('$this->services[\\'%s\\'] = %s', $id, $code);",
      "",
      "[Added Lines]",
      "1830:                     $code = sprintf('$this->services[%s] = %s', $this->doExport($id), $code);",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "1833:         } elseif (null !== $reference && ContainerInterface::IGNORE_ON_UNINITIALIZED_REFERENCE === $reference->getInvalidBehavior()) {",
      "1834:             return 'null';",
      "1835:         } elseif (null !== $reference && ContainerInterface::EXCEPTION_ON_INVALID_REFERENCE !== $reference->getInvalidBehavior()) {",
      "1837:         } else {",
      "1839:         }",
      "1844:     }",
      "",
      "[Removed Lines]",
      "1836:             $code = sprintf('$this->get(\\'%s\\', /* ContainerInterface::NULL_ON_INVALID_REFERENCE */ %d)', $id, ContainerInterface::NULL_ON_INVALID_REFERENCE);",
      "1838:             $code = sprintf('$this->get(\\'%s\\')', $id);",
      "1843:         return \"\\${(\\$_ = isset(\\$this->services['$id']) ? \\$this->services['$id'] : $code) && false ?: '_'}\";",
      "",
      "[Added Lines]",
      "1841:             $code = sprintf('$this->get(%s, /* ContainerInterface::NULL_ON_INVALID_REFERENCE */ %d)', $this->doExport($id), ContainerInterface::NULL_ON_INVALID_REFERENCE);",
      "1843:             $code = sprintf('$this->get(%s)', $this->doExport($id));",
      "1848:         return sprintf(\"\\${(\\$_ = isset(\\$this->services[%s]) ? \\$this->services[%1\\$s] : %s) && false ?: '_'}\", $this->doExport($id), $code);",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php -> src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "195:         $this->assertNotSame($builder->get('bar'), $builder->get('bar'));",
      "196:     }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "202:     public function testBadAliasId($id)",
      "203:     {",
      "204:         $builder = new ContainerBuilder();",
      "205:         $builder->setAlias($id, 'foo');",
      "206:     }",
      "212:     public function testBadDefinitionId($id)",
      "213:     {",
      "214:         $builder = new ContainerBuilder();",
      "215:         $builder->setDefinition($id, new Definition('Foo'));",
      "216:     }",
      "218:     public function provideBadId()",
      "219:     {",
      "220:         return [",
      "221:             [''],",
      "222:             [\"\\0\"],",
      "223:             [\"\\r\"],",
      "224:             [\"\\n\"],",
      "225:             [\"'\"],",
      "226:             ['ab\\\\'],",
      "227:         ];",
      "228:     }",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php -> src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "234:     {",
      "235:         $class = 'Symfony_DI_PhpDumper_Test_Unsupported_Characters';",
      "236:         $container = new ContainerBuilder();",
      "237:         $container->register('bar$', 'FooClass')->setPublic(true);",
      "238:         $container->register('bar$!', 'FooClass')->setPublic(true);",
      "239:         $container->compile();",
      "240:         $dumper = new PhpDumper($container);",
      "243:         $this->assertTrue(method_exists($class, 'getBarService'));",
      "244:         $this->assertTrue(method_exists($class, 'getBar2Service'));",
      "245:     }",
      "",
      "[Removed Lines]",
      "241:         eval('?>'.$dumper->dump(['class' => $class]));",
      "",
      "[Added Lines]",
      "237:         $container->setParameter(\"'\", 'oh-no');",
      "238:         $container->register(\"foo*/oh-no\", 'FooClass')->setPublic(true);",
      "244:         $this->assertStringEqualsFile(self::$fixturesPath.'/php/services_unsupported_characters.php', $dumper->dump(['class' => $class]));",
      "246:         require_once self::$fixturesPath.'/php/services_unsupported_characters.php';",
      "248:         $this->assertTrue(method_exists($class, 'getFooOhNoService'));",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "67:     protected function getFooService()",
      "68:     {",
      "70:     }",
      "",
      "[Removed Lines]",
      "69:         return $this->services['Bar\\Foo'] = new \\Bar\\Foo();",
      "",
      "[Added Lines]",
      "69:         return $this->services['Bar\\\\Foo'] = new \\Bar\\Foo();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "77:     protected function getFoo2Service()",
      "78:     {",
      "80:     }",
      "81: }",
      "",
      "[Removed Lines]",
      "79:         return $this->services['Foo\\Foo'] = new \\Foo\\Foo();",
      "",
      "[Added Lines]",
      "79:         return $this->services['Foo\\\\Foo'] = new \\Foo\\Foo();",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "89:     protected function getBusService()",
      "90:     {",
      "96:         return $instance;",
      "97:     }",
      "",
      "[Removed Lines]",
      "91:         $this->services['App\\Bus'] = $instance = new \\App\\Bus(${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'});",
      "93:         $instance->handler1 = ${($_ = isset($this->services['App\\Handler1']) ? $this->services['App\\Handler1'] : $this->getHandler1Service()) && false ?: '_'};",
      "94:         $instance->handler2 = ${($_ = isset($this->services['App\\Handler2']) ? $this->services['App\\Handler2'] : $this->getHandler2Service()) && false ?: '_'};",
      "",
      "[Added Lines]",
      "91:         $this->services['App\\\\Bus'] = $instance = new \\App\\Bus(${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'});",
      "93:         $instance->handler1 = ${($_ = isset($this->services['App\\\\Handler1']) ? $this->services['App\\\\Handler1'] : $this->getHandler1Service()) && false ?: '_'};",
      "94:         $instance->handler2 = ${($_ = isset($this->services['App\\\\Handler2']) ? $this->services['App\\\\Handler2'] : $this->getHandler2Service()) && false ?: '_'};",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "104:     protected function getDbService()",
      "105:     {",
      "110:         return $instance;",
      "111:     }",
      "",
      "[Removed Lines]",
      "106:         $this->services['App\\Db'] = $instance = new \\App\\Db();",
      "108:         $instance->schema = ${($_ = isset($this->services['App\\Schema']) ? $this->services['App\\Schema'] : $this->getSchemaService()) && false ?: '_'};",
      "",
      "[Added Lines]",
      "106:         $this->services['App\\\\Db'] = $instance = new \\App\\Db();",
      "108:         $instance->schema = ${($_ = isset($this->services['App\\\\Schema']) ? $this->services['App\\\\Schema'] : $this->getSchemaService()) && false ?: '_'};",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "118:     protected function getHandler1Service()",
      "119:     {",
      "124:         }",
      "127:     }",
      "",
      "[Removed Lines]",
      "120:         $a = ${($_ = isset($this->services['App\\Processor']) ? $this->services['App\\Processor'] : $this->getProcessorService()) && false ?: '_'};",
      "122:         if (isset($this->services['App\\Handler1'])) {",
      "123:             return $this->services['App\\Handler1'];",
      "126:         return $this->services['App\\Handler1'] = new \\App\\Handler1(${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'}, ${($_ = isset($this->services['App\\Schema']) ? $this->services['App\\Schema'] : $this->getSchemaService()) && false ?: '_'}, $a);",
      "",
      "[Added Lines]",
      "120:         $a = ${($_ = isset($this->services['App\\\\Processor']) ? $this->services['App\\\\Processor'] : $this->getProcessorService()) && false ?: '_'};",
      "122:         if (isset($this->services['App\\\\Handler1'])) {",
      "123:             return $this->services['App\\\\Handler1'];",
      "126:         return $this->services['App\\\\Handler1'] = new \\App\\Handler1(${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'}, ${($_ = isset($this->services['App\\\\Schema']) ? $this->services['App\\\\Schema'] : $this->getSchemaService()) && false ?: '_'}, $a);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "134:     protected function getHandler2Service()",
      "135:     {",
      "140:         }",
      "143:     }",
      "",
      "[Removed Lines]",
      "136:         $a = ${($_ = isset($this->services['App\\Processor']) ? $this->services['App\\Processor'] : $this->getProcessorService()) && false ?: '_'};",
      "138:         if (isset($this->services['App\\Handler2'])) {",
      "139:             return $this->services['App\\Handler2'];",
      "142:         return $this->services['App\\Handler2'] = new \\App\\Handler2(${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'}, ${($_ = isset($this->services['App\\Schema']) ? $this->services['App\\Schema'] : $this->getSchemaService()) && false ?: '_'}, $a);",
      "",
      "[Added Lines]",
      "136:         $a = ${($_ = isset($this->services['App\\\\Processor']) ? $this->services['App\\\\Processor'] : $this->getProcessorService()) && false ?: '_'};",
      "138:         if (isset($this->services['App\\\\Handler2'])) {",
      "139:             return $this->services['App\\\\Handler2'];",
      "142:         return $this->services['App\\\\Handler2'] = new \\App\\Handler2(${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'}, ${($_ = isset($this->services['App\\\\Schema']) ? $this->services['App\\\\Schema'] : $this->getSchemaService()) && false ?: '_'}, $a);",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "150:     protected function getProcessorService()",
      "151:     {",
      "156:         }",
      "159:     }",
      "",
      "[Removed Lines]",
      "152:         $a = ${($_ = isset($this->services['App\\Registry']) ? $this->services['App\\Registry'] : $this->getRegistryService()) && false ?: '_'};",
      "154:         if (isset($this->services['App\\Processor'])) {",
      "155:             return $this->services['App\\Processor'];",
      "158:         return $this->services['App\\Processor'] = new \\App\\Processor($a, ${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'});",
      "",
      "[Added Lines]",
      "152:         $a = ${($_ = isset($this->services['App\\\\Registry']) ? $this->services['App\\\\Registry'] : $this->getRegistryService()) && false ?: '_'};",
      "154:         if (isset($this->services['App\\\\Processor'])) {",
      "155:             return $this->services['App\\\\Processor'];",
      "158:         return $this->services['App\\\\Processor'] = new \\App\\Processor($a, ${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'});",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "166:     protected function getRegistryService()",
      "167:     {",
      "172:         return $instance;",
      "173:     }",
      "",
      "[Removed Lines]",
      "168:         $this->services['App\\Registry'] = $instance = new \\App\\Registry();",
      "170:         $instance->processor = [0 => ${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'}, 1 => ${($_ = isset($this->services['App\\Bus']) ? $this->services['App\\Bus'] : $this->getBusService()) && false ?: '_'}];",
      "",
      "[Added Lines]",
      "168:         $this->services['App\\\\Registry'] = $instance = new \\App\\Registry();",
      "170:         $instance->processor = [0 => ${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'}, 1 => ${($_ = isset($this->services['App\\\\Bus']) ? $this->services['App\\\\Bus'] : $this->getBusService()) && false ?: '_'}];",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "180:     protected function getSchemaService()",
      "181:     {",
      "186:         }",
      "189:     }",
      "190: }",
      "",
      "[Removed Lines]",
      "182:         $a = ${($_ = isset($this->services['App\\Db']) ? $this->services['App\\Db'] : $this->getDbService()) && false ?: '_'};",
      "184:         if (isset($this->services['App\\Schema'])) {",
      "185:             return $this->services['App\\Schema'];",
      "188:         return $this->services['App\\Schema'] = new \\App\\Schema($a);",
      "",
      "[Added Lines]",
      "182:         $a = ${($_ = isset($this->services['App\\\\Db']) ? $this->services['App\\\\Db'] : $this->getDbService()) && false ?: '_'};",
      "184:         if (isset($this->services['App\\\\Schema'])) {",
      "185:             return $this->services['App\\\\Schema'];",
      "188:         return $this->services['App\\\\Schema'] = new \\App\\Schema($a);",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "88:     protected function getParentNotExistsService()",
      "89:     {",
      "91:     }",
      "",
      "[Removed Lines]",
      "90:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\ParentNotExists'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\ParentNotExists();",
      "",
      "[Added Lines]",
      "90:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\ParentNotExists'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\ParentNotExists();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "98:     protected function getC1Service()",
      "99:     {",
      "101:     }",
      "",
      "[Removed Lines]",
      "100:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C1'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C1();",
      "",
      "[Added Lines]",
      "100:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C1'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C1();",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "110:         include_once $this->targetDirs[1].'/includes/HotPath/C2.php';",
      "111:         include_once $this->targetDirs[1].'/includes/HotPath/C3.php';",
      "114:     }",
      "",
      "[Removed Lines]",
      "113:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C2'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C2(${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3())) && false ?: '_'});",
      "",
      "[Added Lines]",
      "113:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C2'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C2(${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C3']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C3'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C3'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3())) && false ?: '_'});",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "122:     {",
      "123:         include_once $this->targetDirs[1].'/includes/HotPath/C3.php';",
      "126:     }",
      "128:     public function getParameter($name)",
      "",
      "[Removed Lines]",
      "125:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3();",
      "",
      "[Added Lines]",
      "125:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C3'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3();",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "69:         $b = new \\App\\Baz($a);",
      "70:         $b->bar = $a;",
      "74:         $a->foo = $instance;",
      "",
      "[Removed Lines]",
      "72:         $this->services['App\\Foo'] = $instance = new \\App\\Foo($b);",
      "",
      "[Added Lines]",
      "72:         $this->services['App\\\\Foo'] = $instance = new \\App\\Foo($b);",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "68:     protected function getRot13EnvVarProcessorService()",
      "69:     {",
      "71:     }",
      "",
      "[Removed Lines]",
      "70:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor();",
      "",
      "[Added Lines]",
      "70:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Dumper\\\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "78:     protected function getContainer_EnvVarProcessorsLocatorService()",
      "79:     {",
      "80:         return $this->services['container.env_var_processors_locator'] = new \\Symfony\\Component\\DependencyInjection\\ServiceLocator(['rot13' => function () {",
      "82:         }]);",
      "83:     }",
      "",
      "[Removed Lines]",
      "81:             return ${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor())) && false ?: '_'};",
      "",
      "[Added Lines]",
      "81:             return ${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Dumper\\\\Rot13EnvVarProcessor']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Dumper\\\\Rot13EnvVarProcessor'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Dumper\\\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor())) && false ?: '_'};",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "74:     protected function getTestServiceSubscriberService()",
      "75:     {",
      "77:     }",
      "",
      "[Removed Lines]",
      "76:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber();",
      "",
      "[Added Lines]",
      "76:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber();",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "84:     protected function getFooServiceService()",
      "85:     {",
      "86:         return $this->services['foo_service'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber((new \\Symfony\\Component\\DependencyInjection\\ServiceLocator(['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition' => function () {",
      "88:         }, 'Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber' => function () {",
      "90:         }, 'bar' => function () {",
      "92:         }, 'baz' => function () {",
      "94:         }]))->withContext('foo_service', $this));",
      "95:     }",
      "",
      "[Removed Lines]",
      "87:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v = null) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition())) && false ?: '_'});",
      "89:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber $v) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber())) && false ?: '_'});",
      "91:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber())) && false ?: '_'});",
      "93:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v = null) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition']) ? $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] : ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition())) && false ?: '_'});",
      "",
      "[Added Lines]",
      "87:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v = null) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition())) && false ?: '_'});",
      "89:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber $v) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber())) && false ?: '_'});",
      "91:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber())) && false ?: '_'});",
      "93:             $f = function (\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition $v = null) { return $v; }; return $f(${($_ = isset($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition']) ? $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] : ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition())) && false ?: '_'});",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "102:     protected function getCustomDefinitionService()",
      "103:     {",
      "105:     }",
      "106: }",
      "",
      "[Removed Lines]",
      "104:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition();",
      "",
      "[Added Lines]",
      "104:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition();",
      "",
      "---------------"
    ],
    "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php": [
      "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: <?php",
      "3: use Symfony\\Component\\DependencyInjection\\Argument\\RewindableGenerator;",
      "4: use Symfony\\Component\\DependencyInjection\\ContainerInterface;",
      "5: use Symfony\\Component\\DependencyInjection\\Container;",
      "6: use Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException;",
      "7: use Symfony\\Component\\DependencyInjection\\Exception\\LogicException;",
      "8: use Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException;",
      "9: use Symfony\\Component\\DependencyInjection\\ParameterBag\\FrozenParameterBag;",
      "17: class Symfony_DI_PhpDumper_Test_Unsupported_Characters extends Container",
      "18: {",
      "19:     private $parameters;",
      "20:     private $targetDirs = [];",
      "22:     public function __construct()",
      "23:     {",
      "24:         $this->parameters = $this->getDefaultParameters();",
      "26:         $this->services = [];",
      "27:         $this->methodMap = [",
      "28:             'bar$' => 'getBarService',",
      "29:             'bar$!' => 'getBar2Service',",
      "30:             'foo*/oh-no' => 'getFooohnoService',",
      "31:         ];",
      "33:         $this->aliases = [];",
      "34:     }",
      "36:     public function getRemovedIds()",
      "37:     {",
      "38:         return [",
      "39:             'Psr\\\\Container\\\\ContainerInterface' => true,",
      "40:             'Symfony\\\\Component\\\\DependencyInjection\\\\ContainerInterface' => true,",
      "41:         ];",
      "42:     }",
      "44:     public function compile()",
      "45:     {",
      "46:         throw new LogicException('You cannot compile a dumped container that was already compiled.');",
      "47:     }",
      "49:     public function isCompiled()",
      "50:     {",
      "51:         return true;",
      "52:     }",
      "54:     public function isFrozen()",
      "55:     {",
      "56:         @trigger_error(sprintf('The %s() method is deprecated since Symfony 3.3 and will be removed in 4.0. Use the isCompiled() method instead.', __METHOD__), E_USER_DEPRECATED);",
      "58:         return true;",
      "59:     }",
      "66:     protected function getBarService()",
      "67:     {",
      "68:         return $this->services['bar$'] = new \\FooClass();",
      "69:     }",
      "76:     protected function getBar2Service()",
      "77:     {",
      "78:         return $this->services['bar$!'] = new \\FooClass();",
      "79:     }",
      "86:     protected function getFooohnoService()",
      "87:     {",
      "88:         return $this->services['foo*/oh-no'] = new \\FooClass();",
      "89:     }",
      "91:     public function getParameter($name)",
      "92:     {",
      "93:         $name = (string) $name;",
      "94:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
      "95:             $name = $this->normalizeParameterName($name);",
      "97:             if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
      "98:                 throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
      "99:             }",
      "100:         }",
      "101:         if (isset($this->loadedDynamicParameters[$name])) {",
      "102:             return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);",
      "103:         }",
      "105:         return $this->parameters[$name];",
      "106:     }",
      "108:     public function hasParameter($name)",
      "109:     {",
      "110:         $name = (string) $name;",
      "111:         $name = $this->normalizeParameterName($name);",
      "113:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
      "114:     }",
      "116:     public function setParameter($name, $value)",
      "117:     {",
      "118:         throw new LogicException('Impossible to call set() on a frozen ParameterBag.');",
      "119:     }",
      "121:     public function getParameterBag()",
      "122:     {",
      "123:         if (null === $this->parameterBag) {",
      "124:             $parameters = $this->parameters;",
      "125:             foreach ($this->loadedDynamicParameters as $name => $loaded) {",
      "126:                 $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);",
      "127:             }",
      "128:             $this->parameterBag = new FrozenParameterBag($parameters);",
      "129:         }",
      "131:         return $this->parameterBag;",
      "132:     }",
      "134:     private $loadedDynamicParameters = [];",
      "135:     private $dynamicParameters = [];",
      "146:     private function getDynamicParameter($name)",
      "147:     {",
      "148:         throw new InvalidArgumentException(sprintf('The dynamic parameter \"%s\" must be defined.', $name));",
      "149:     }",
      "151:     private $normalizedParameterNames = [];",
      "153:     private function normalizeParameterName($name)",
      "154:     {",
      "155:         if (isset($this->normalizedParameterNames[$normalizedName = strtolower($name)]) || isset($this->parameters[$normalizedName]) || array_key_exists($normalizedName, $this->parameters)) {",
      "156:             $normalizedName = isset($this->normalizedParameterNames[$normalizedName]) ? $this->normalizedParameterNames[$normalizedName] : $normalizedName;",
      "157:             if ((string) $name !== $normalizedName) {",
      "158:                 @trigger_error(sprintf('Parameter names will be made case sensitive in Symfony 4.0. Using \"%s\" instead of \"%s\" is deprecated since Symfony 3.4.', $name, $normalizedName), E_USER_DEPRECATED);",
      "159:             }",
      "160:         } else {",
      "161:             $normalizedName = $this->normalizedParameterNames[$normalizedName] = (string) $name;",
      "162:         }",
      "164:         return $normalizedName;",
      "165:     }",
      "172:     protected function getDefaultParameters()",
      "173:     {",
      "174:         return [",
      "175:             '\\'' => 'oh-no',",
      "176:         ];",
      "177:     }",
      "178: }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "817992833640d8518f4eba673a792dab634059e9",
      "candidate_info": {
        "commit_hash": "817992833640d8518f4eba673a792dab634059e9",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/817992833640d8518f4eba673a792dab634059e9",
        "files": [
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php"
        ],
        "message": "[DI] fix dumping errored definitions",
        "before_after_code_files": [
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php"
          ],
          "candidate": [
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php": [
          "File: src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "794: EOF;",
          "795:         }",
          "812:         if ($asFile) {",
          "813:             $code = implode(\"\\n\", array_map(function ($line) { return $line ? substr($line, 8) : $line; }, explode(\"\\n\", $code)));",
          "",
          "[Removed Lines]",
          "797:         $this->serviceCalls = [];",
          "798:         $this->inlinedDefinitions = $this->getDefinitionsFromArguments([$definition], null, $this->serviceCalls);",
          "800:         if ($definition->isDeprecated()) {",
          "801:             $code .= sprintf(\"        @trigger_error(%s, E_USER_DEPRECATED);\\n\\n\", $this->export($definition->getDeprecationMessage($id)));",
          "802:         }",
          "804:         if ($this->getProxyDumper()->isProxyCandidate($definition)) {",
          "805:             $factoryCode = $asFile ? ($definition->isShared() ? \"\\$this->load('%s.php', false)\" : '$this->factories[%2$s](false)') : '$this->%s(false)';",
          "806:             $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName, $this->doExport($id)));",
          "807:         }",
          "809:         $code .= $this->addServiceInclude($id, $definition);",
          "810:         $code .= $this->addInlineService($id, $definition);",
          "",
          "[Added Lines]",
          "797:         if ($definition->hasErrors() && $e = $definition->getErrors()) {",
          "798:             $this->addThrow = true;",
          "800:             $code .= sprintf(\"        \\$this->throw(%s);\\n\", $this->export(reset($e)));",
          "801:         } else {",
          "802:             $this->serviceCalls = [];",
          "803:             $this->inlinedDefinitions = $this->getDefinitionsFromArguments([$definition], null, $this->serviceCalls);",
          "805:             if ($definition->isDeprecated()) {",
          "806:                 $code .= sprintf(\"        @trigger_error(%s, E_USER_DEPRECATED);\\n\\n\", $this->export($definition->getDeprecationMessage($id)));",
          "807:             }",
          "809:             if ($this->getProxyDumper()->isProxyCandidate($definition)) {",
          "810:                 $factoryCode = $asFile ? ($definition->isShared() ? \"\\$this->load('%s.php', false)\" : '$this->factories[%2$s](false)') : '$this->%s(false)';",
          "811:                 $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName, $this->doExport($id)));",
          "812:             }",
          "814:             $code .= $this->addServiceInclude($id, $definition);",
          "815:             $code .= $this->addInlineService($id, $definition);",
          "816:         }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_service_locator_argument.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "121:     protected function getFoo4Service()",
          "122:     {",
          "124:     }",
          "125: }",
          "",
          "[Removed Lines]",
          "123:         return $this->privates['foo4'] = new \\stdClass();",
          "",
          "[Added Lines]",
          "123:         $this->throw('BOOM');",
          "124:     }",
          "126:     protected function throw($message)",
          "127:     {",
          "128:         throw new RuntimeException($message);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6c6f76f217ca200149ae1630799a43ce2bc27545",
      "candidate_info": {
        "commit_hash": "6c6f76f217ca200149ae1630799a43ce2bc27545",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/6c6f76f217ca200149ae1630799a43ce2bc27545",
        "files": [
          "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "src/Symfony/Component/Form/FormInterface.php"
        ],
        "message": "fixed CS",
        "before_after_code_files": [
          "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "src/Symfony/Component/Form/FormInterface.php||src/Symfony/Component/Form/FormInterface.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php"
          ],
          "candidate": [
            "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php -> src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "235:         $class = 'Symfony_DI_PhpDumper_Test_Unsupported_Characters';",
          "236:         $container = new ContainerBuilder();",
          "237:         $container->setParameter(\"'\", 'oh-no');",
          "239:         $container->register('bar$', 'FooClass')->setPublic(true);",
          "240:         $container->register('bar$!', 'FooClass')->setPublic(true);",
          "241:         $container->compile();",
          "",
          "[Removed Lines]",
          "238:         $container->register(\"foo*/oh-no\", 'FooClass')->setPublic(true);",
          "",
          "[Added Lines]",
          "238:         $container->register('foo*/oh-no', 'FooClass')->setPublic(true);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/Form/FormInterface.php||src/Symfony/Component/Form/FormInterface.php": [
          "File: src/Symfony/Component/Form/FormInterface.php -> src/Symfony/Component/Form/FormInterface.php"
        ]
      }
    },
    {
      "candidate_hash": "4c80c3444854ef384df94deb4acbcef4b5e5243b",
      "candidate_info": {
        "commit_hash": "4c80c3444854ef384df94deb4acbcef4b5e5243b",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/4c80c3444854ef384df94deb4acbcef4b5e5243b",
        "files": [
          "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
          "src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php"
        ],
        "message": "security #cve-2019-10910 [DI] Check service IDs are valid (nicolas-grekas)\n\nThis PR was merged into the 4.1 branch.\n\nDiscussion\n----------\n\n[DI] Check service IDs are valid\n\nBased on #87\n\nCommits\n-------\n\nc86d27181a [DI] Check service IDs are valid",
        "before_after_code_files": [
          "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
          "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
          "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
            "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
            "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php"
          ],
          "candidate": [
            "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
            "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
            "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
            "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php": [
          "File: src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php -> src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:         $instantiation = 'return';",
          "56:         if ($definition->isShared()) {",
          "58:         }",
          "60:         if (null === $factoryCode) {",
          "",
          "[Removed Lines]",
          "57:             $instantiation .= sprintf(' $this->%s[\\'%s\\'] =', \\method_exists(ContainerBuilder::class, 'addClassResource') || ($definition->isPublic() && !$definition->isPrivate()) ? 'services' : 'privates', $id);",
          "",
          "[Added Lines]",
          "57:             $instantiation .= sprintf(' $this->%s[%s] =', \\method_exists(ContainerBuilder::class, 'addClassResource') || ($definition->isPublic() && !$definition->isPrivate()) ? 'services' : 'privates', var_export($id, true));",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php": [
          "File: src/Symfony/Component/DependencyInjection/ContainerBuilder.php -> src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "824:     {",
          "825:         $alias = (string) $alias;",
          "827:         if (\\is_string($id)) {",
          "828:             $id = new Alias($id);",
          "829:         } elseif (!$id instanceof Alias) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "827:         if ('' === $alias || '\\\\' === $alias[-1] || \\strlen($alias) !== strcspn($alias, \"\\0\\r\\n'\")) {",
          "828:             throw new InvalidArgumentException(sprintf('Invalid alias id: \"%s\"', $alias));",
          "829:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "978:         $id = (string) $id;",
          "980:         unset($this->aliasDefinitions[$id], $this->removedIds[$id]);",
          "982:         return $this->definitions[$id] = $definition;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "984:         if ('' === $id || '\\\\' === $id[-1] || \\strlen($id) !== strcspn($id, \"\\0\\r\\n'\")) {",
          "985:             throw new InvalidArgumentException(sprintf('Invalid service id: \"%s\"', $id));",
          "986:         }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php": [
          "File: src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "476:         $instantiation = '';",
          "478:         if (!$isProxyCandidate && $definition->isShared()) {",
          "480:         } elseif (!$isSimpleInstance) {",
          "481:             $instantiation = '$instance';",
          "482:         }",
          "",
          "[Removed Lines]",
          "479:             $instantiation = sprintf('$this->%s[\\'%s\\'] = %s', $this->container->getDefinition($id)->isPublic() ? 'services' : 'privates', $id, $isSimpleInstance ? '' : '$instance');",
          "",
          "[Added Lines]",
          "479:             $instantiation = sprintf('$this->%s[%s] = %s', $this->container->getDefinition($id)->isPublic() ? 'services' : 'privates', $this->doExport($id), $isSimpleInstance ? '' : '$instance');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "643:     protected function {$methodName}($lazyInitialization)",
          "644:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "642: EOF;",
          "643:             $code = str_replace('*/', ' ', $code).<<<EOF",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "660:         if ($this->getProxyDumper()->isProxyCandidate($definition)) {",
          "661:             $factoryCode = $asFile ? \"\\$this->load('%s.php', false)\" : '$this->%s(false)';",
          "663:         }",
          "665:         if ($definition->isDeprecated()) {",
          "",
          "[Removed Lines]",
          "662:             $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName));",
          "",
          "[Added Lines]",
          "665:             $code .= $this->getProxyDumper()->getProxyFactoryCode($definition, $id, sprintf($factoryCode, $methodName, $this->doExport($id)));",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "734:         $code .= sprintf(<<<'EOTXT'",
          "738:         }",
          "740: EOTXT",
          "741:             ,",
          "742:             $this->container->getDefinition($id)->isPublic() ? 'services' : 'privates',",
          "744:         );",
          "746:         return $code;",
          "",
          "[Removed Lines]",
          "736:         if (isset($this->%s['%s'])) {",
          "737:             return $this->%1$s['%2$s'];",
          "743:             $id",
          "",
          "[Added Lines]",
          "739:         if (isset($this->%s[%s])) {",
          "740:             return $this->%1$s[%2$s];",
          "746:             $this->doExport($id)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "830:                         $code = [\"\\n\", $code];",
          "831:                     }",
          "832:                     $code[1] = implode(\"\\n\", array_map(function ($line) { return $line ? '    '.$line : $line; }, explode(\"\\n\", $code[1])));",
          "834:                     $code[1] = sprintf(\"%s = function () {\\n%s};\\n\\nreturn %1\\$s();\\n\", $factory, $code[1]);",
          "835:                     $code = $code[0].$code[1];",
          "836:                 }",
          "",
          "[Removed Lines]",
          "833:                     $factory = sprintf('$this->factories%s[\\'%s\\']', $definition->isPublic() ? '' : \"['service_container']\", $id);",
          "",
          "[Added Lines]",
          "836:                     $factory = sprintf('$this->factories%s[%s]', $definition->isPublic() ? '' : \"['service_container']\", $this->doExport($id));",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1341:             if (!$this->container->hasDefinition($service)) {",
          "1342:                 return 'false';",
          "1343:             }",
          "1345:         }",
          "1346:         foreach (ContainerBuilder::getServiceConditionals($value) as $service) {",
          "1347:             if ($this->container->hasDefinition($service) && !$this->container->getDefinition($service)->isPublic()) {",
          "1348:                 continue;",
          "1349:             }",
          "1352:         }",
          "1354:         if (!$conditions) {",
          "",
          "[Removed Lines]",
          "1344:             $conditions[] = sprintf(\"isset(\\$this->%s['%s'])\", $this->container->getDefinition($service)->isPublic() ? 'services' : 'privates', $service);",
          "1351:             $conditions[] = sprintf(\"\\$this->has('%s')\", $service);",
          "",
          "[Added Lines]",
          "1347:             $conditions[] = sprintf(\"isset(\\$this->%s[%s])\", $this->container->getDefinition($service)->isPublic() ? 'services' : 'privates', $this->doExport($service));",
          "1354:             $conditions[] = sprintf(\"\\$this->has(%s)\", $this->doExport($service));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1579:             }",
          "1581:             if (!preg_match(\"/\\\\\\$this->(?:getEnv\\('(?:\\w++:)*+\\w++'\\)|targetDirs\\[\\d++\\])/\", $dumpedValue)) {",
          "1583:             }",
          "1584:         }",
          "1587:     }",
          "1589:     private function getServiceCall(string $id, Reference $reference = null): string",
          "",
          "[Removed Lines]",
          "1582:                 return sprintf(\"\\$this->parameters['%s']\", $name);",
          "1586:         return sprintf(\"\\$this->getParameter('%s')\", $name);",
          "",
          "[Added Lines]",
          "1585:                 return sprintf('$this->parameters[%s]', $this->doExport($name));",
          "1589:         return sprintf('$this->getParameter(%s)', $this->doExport($name));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1599:         if ($this->container->hasDefinition($id) && $definition = $this->container->getDefinition($id)) {",
          "1600:             if ($definition->isSynthetic()) {",
          "1602:             } elseif (null !== $reference && ContainerInterface::IGNORE_ON_UNINITIALIZED_REFERENCE === $reference->getInvalidBehavior()) {",
          "1603:                 $code = 'null';",
          "1604:                 if (!$definition->isShared()) {",
          "",
          "[Removed Lines]",
          "1601:                 $code = sprintf('$this->get(\\'%s\\'%s)', $id, null !== $reference ? ', '.$reference->getInvalidBehavior() : '');",
          "",
          "[Added Lines]",
          "1604:                 $code = sprintf('$this->get(%s%s)', $this->doExport($id), null !== $reference ? ', '.$reference->getInvalidBehavior() : '');",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1607:             } elseif ($this->isTrivialInstance($definition)) {",
          "1608:                 $code = substr($this->addNewInstance($definition, '', '', $id), 8, -2);",
          "1609:                 if ($definition->isShared()) {",
          "1611:                 }",
          "1612:                 $code = \"($code)\";",
          "1613:             } elseif ($this->asFiles && !$this->isHotPath($definition)) {",
          "1614:                 $code = sprintf(\"\\$this->load('%s.php')\", $this->generateMethodName($id));",
          "1615:                 if (!$definition->isShared()) {",
          "1617:                     $code = sprintf('(isset(%s) ? %1$s() : %s)', $factory, $code);",
          "1618:                 }",
          "1619:             } else {",
          "1620:                 $code = sprintf('$this->%s()', $this->generateMethodName($id));",
          "1621:             }",
          "1622:             if ($definition->isShared()) {",
          "1624:             }",
          "1626:             return $code;",
          "",
          "[Removed Lines]",
          "1610:                     $code = sprintf('$this->%s[\\'%s\\'] = %s', $definition->isPublic() ? 'services' : 'privates', $id, $code);",
          "1616:                     $factory = sprintf('$this->factories%s[\\'%s\\']', $definition->isPublic() ? '' : \"['service_container']\", $id);",
          "1623:                 $code = sprintf('($this->%s[\\'%s\\'] ?? %s)', $definition->isPublic() ? 'services' : 'privates', $id, $code);",
          "",
          "[Added Lines]",
          "1613:                     $code = sprintf('$this->%s[%s] = %s', $definition->isPublic() ? 'services' : 'privates', $this->doExport($id), $code);",
          "1619:                     $factory = sprintf('$this->factories%s[%s]', $definition->isPublic() ? '' : \"['service_container']\", $this->doExport($id));",
          "1626:                 $code = sprintf('($this->%s[%s] ?? %s)', $definition->isPublic() ? 'services' : 'privates', $this->doExport($id), $code);",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1629:             return 'null';",
          "1630:         }",
          "1631:         if (null !== $reference && ContainerInterface::EXCEPTION_ON_INVALID_REFERENCE < $reference->getInvalidBehavior()) {",
          "1633:         } else {",
          "1635:         }",
          "1638:     }",
          "",
          "[Removed Lines]",
          "1632:             $code = sprintf('$this->get(\\'%s\\', /* ContainerInterface::NULL_ON_INVALID_REFERENCE */ %d)', $id, ContainerInterface::NULL_ON_INVALID_REFERENCE);",
          "1634:             $code = sprintf('$this->get(\\'%s\\')', $id);",
          "1637:         return sprintf('($this->services[\\'%s\\'] ?? %s)', $id, $code);",
          "",
          "[Added Lines]",
          "1635:             $code = sprintf('$this->get(%s, /* ContainerInterface::NULL_ON_INVALID_REFERENCE */ %d)', $this->doExport($id), ContainerInterface::NULL_ON_INVALID_REFERENCE);",
          "1637:             $code = sprintf('$this->get(%s)', $this->doExport($id));",
          "1640:         return sprintf('($this->services[%s] ?? %s)', $this->doExport($id), $code);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php -> src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "195:         $this->assertNotSame($builder->get('bar'), $builder->get('bar'));",
          "196:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "202:     public function testBadAliasId($id)",
          "203:     {",
          "204:         $builder = new ContainerBuilder();",
          "205:         $builder->setAlias($id, 'foo');",
          "206:     }",
          "212:     public function testBadDefinitionId($id)",
          "213:     {",
          "214:         $builder = new ContainerBuilder();",
          "215:         $builder->setDefinition($id, new Definition('Foo'));",
          "216:     }",
          "218:     public function provideBadId()",
          "219:     {",
          "220:         return [",
          "221:             [''],",
          "222:             [\"\\0\"],",
          "223:             [\"\\r\"],",
          "224:             [\"\\n\"],",
          "225:             [\"'\"],",
          "226:             ['ab\\\\'],",
          "227:         ];",
          "228:     }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php||src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php -> src/Symfony/Component/DependencyInjection/Tests/Dumper/PhpDumperTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "236:     {",
          "237:         $class = 'Symfony_DI_PhpDumper_Test_Unsupported_Characters';",
          "238:         $container = new ContainerBuilder();",
          "239:         $container->register('bar$', 'FooClass')->setPublic(true);",
          "240:         $container->register('bar$!', 'FooClass')->setPublic(true);",
          "241:         $container->compile();",
          "242:         $dumper = new PhpDumper($container);",
          "245:         $this->assertTrue(method_exists($class, 'getBarService'));",
          "246:         $this->assertTrue(method_exists($class, 'getBar2Service'));",
          "247:     }",
          "",
          "[Removed Lines]",
          "243:         eval('?>'.$dumper->dump(['class' => $class]));",
          "",
          "[Added Lines]",
          "239:         $container->setParameter(\"'\", 'oh-no');",
          "240:         $container->register(\"foo*/oh-no\", 'FooClass')->setPublic(true);",
          "246:         $this->assertStringEqualsFile(self::$fixturesPath.'/php/services_unsupported_characters.php', $dumper->dump(['class' => $class]));",
          "248:         require_once self::$fixturesPath.'/php/services_unsupported_characters.php';",
          "250:         $this->assertTrue(method_exists($class, 'getFooOhNoService'));",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services33.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:     protected function getFooService()",
          "68:     {",
          "70:     }",
          "",
          "[Removed Lines]",
          "69:         return $this->services['Bar\\Foo'] = new \\Bar\\Foo();",
          "",
          "[Added Lines]",
          "69:         return $this->services['Bar\\\\Foo'] = new \\Bar\\Foo();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "77:     protected function getFoo2Service()",
          "78:     {",
          "80:     }",
          "81: }",
          "",
          "[Removed Lines]",
          "79:         return $this->services['Foo\\Foo'] = new \\Foo\\Foo();",
          "",
          "[Added Lines]",
          "79:         return $this->services['Foo\\\\Foo'] = new \\Foo\\Foo();",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_adawson.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "72:     protected function getBusService()",
          "73:     {",
          "79:         $c = new \\App\\Registry();",
          "80:         $c->processor = [0 => $a, 1 => $instance];",
          "",
          "[Removed Lines]",
          "74:         $a = ($this->services['App\\Db'] ?? $this->getDbService());",
          "76:         $this->services['App\\Bus'] = $instance = new \\App\\Bus($a);",
          "78:         $b = ($this->privates['App\\Schema'] ?? $this->getSchemaService());",
          "",
          "[Added Lines]",
          "74:         $a = ($this->services['App\\\\Db'] ?? $this->getDbService());",
          "76:         $this->services['App\\\\Bus'] = $instance = new \\App\\Bus($a);",
          "78:         $b = ($this->privates['App\\\\Schema'] ?? $this->getSchemaService());",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "95:     protected function getDbService()",
          "96:     {",
          "101:         return $instance;",
          "102:     }",
          "",
          "[Removed Lines]",
          "97:         $this->services['App\\Db'] = $instance = new \\App\\Db();",
          "99:         $instance->schema = ($this->privates['App\\Schema'] ?? $this->getSchemaService());",
          "",
          "[Added Lines]",
          "97:         $this->services['App\\\\Db'] = $instance = new \\App\\Db();",
          "99:         $instance->schema = ($this->privates['App\\\\Schema'] ?? $this->getSchemaService());",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "109:     protected function getSchemaService()",
          "110:     {",
          "115:         }",
          "118:     }",
          "119: }",
          "",
          "[Removed Lines]",
          "111:         $a = ($this->services['App\\Db'] ?? $this->getDbService());",
          "113:         if (isset($this->privates['App\\Schema'])) {",
          "114:             return $this->privates['App\\Schema'];",
          "117:         return $this->privates['App\\Schema'] = new \\App\\Schema($a);",
          "",
          "[Added Lines]",
          "111:         $a = ($this->services['App\\\\Db'] ?? $this->getDbService());",
          "113:         if (isset($this->privates['App\\\\Schema'])) {",
          "114:             return $this->privates['App\\\\Schema'];",
          "117:         return $this->privates['App\\\\Schema'] = new \\App\\Schema($a);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_requires.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "82:     protected function getParentNotExistsService()",
          "83:     {",
          "85:     }",
          "",
          "[Removed Lines]",
          "84:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\ParentNotExists'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\ParentNotExists();",
          "",
          "[Added Lines]",
          "84:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\ParentNotExists'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\ParentNotExists();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "92:     protected function getC1Service()",
          "93:     {",
          "95:     }",
          "",
          "[Removed Lines]",
          "94:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C1'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C1();",
          "",
          "[Added Lines]",
          "94:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C1'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C1();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "104:         include_once $this->targetDirs[1].'/includes/HotPath/C2.php';",
          "105:         include_once $this->targetDirs[1].'/includes/HotPath/C3.php';",
          "108:     }",
          "110:     public function getParameter($name)",
          "",
          "[Removed Lines]",
          "107:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C2'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C2(new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3());",
          "",
          "[Added Lines]",
          "107:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\includes\\\\HotPath\\\\C2'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C2(new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\includes\\HotPath\\C3());",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_inline_self_ref.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:         $b = new \\App\\Baz($a);",
          "71:         $b->bar = $a;",
          "75:         $a->foo = $instance;",
          "",
          "[Removed Lines]",
          "73:         $this->services['App\\Foo'] = $instance = new \\App\\Foo($b);",
          "",
          "[Added Lines]",
          "73:         $this->services['App\\\\Foo'] = $instance = new \\App\\Foo($b);",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_rot13_env.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "69:     protected function getRot13EnvVarProcessorService()",
          "70:     {",
          "72:     }",
          "",
          "[Removed Lines]",
          "71:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor();",
          "",
          "[Added Lines]",
          "71:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Dumper\\\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "79:     protected function getContainer_EnvVarProcessorsLocatorService()",
          "80:     {",
          "81:         return $this->services['container.env_var_processors_locator'] = new \\Symfony\\Component\\DependencyInjection\\ServiceLocator(['rot13' => function () {",
          "83:         }]);",
          "84:     }",
          "",
          "[Removed Lines]",
          "82:             return ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor'] ?? ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor()));",
          "",
          "[Added Lines]",
          "82:             return ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Dumper\\\\Rot13EnvVarProcessor'] ?? ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Dumper\\\\Rot13EnvVarProcessor'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Dumper\\Rot13EnvVarProcessor()));",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_subscriber.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:     protected function getTestServiceSubscriberService()",
          "71:     {",
          "73:     }",
          "",
          "[Removed Lines]",
          "72:         return $this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber();",
          "",
          "[Added Lines]",
          "72:         return $this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber();",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "80:     protected function getFooServiceService()",
          "81:     {",
          "82:         return $this->services['foo_service'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber((new \\Symfony\\Component\\DependencyInjection\\ServiceLocator(['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition' => function (): ?\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition {",
          "84:         }, 'Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber' => function (): \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber {",
          "86:         }, 'bar' => function (): \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition {",
          "88:         }, 'baz' => function (): ?\\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition {",
          "90:         }]))->withContext('foo_service', $this));",
          "91:     }",
          "92: }",
          "",
          "[Removed Lines]",
          "83:             return ($this->privates['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] ?? ($this->privates['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition()));",
          "85:             return ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] ?? ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber()));",
          "87:             return ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] ?? ($this->services['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber()));",
          "89:             return ($this->privates['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] ?? ($this->privates['Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition()));",
          "",
          "[Added Lines]",
          "83:             return ($this->privates['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] ?? ($this->privates['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition()));",
          "85:             return ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] ?? ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber()));",
          "87:             return ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] ?? ($this->services['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\TestServiceSubscriber'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\TestServiceSubscriber()));",
          "89:             return ($this->privates['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] ?? ($this->privates['Symfony\\\\Component\\\\DependencyInjection\\\\Tests\\\\Fixtures\\\\CustomDefinition'] = new \\Symfony\\Component\\DependencyInjection\\Tests\\Fixtures\\CustomDefinition()));",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php||src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php -> src/Symfony/Component/DependencyInjection/Tests/Fixtures/php/services_unsupported_characters.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: use Symfony\\Component\\DependencyInjection\\Argument\\RewindableGenerator;",
          "4: use Symfony\\Component\\DependencyInjection\\ContainerInterface;",
          "5: use Symfony\\Component\\DependencyInjection\\Container;",
          "6: use Symfony\\Component\\DependencyInjection\\Exception\\InvalidArgumentException;",
          "7: use Symfony\\Component\\DependencyInjection\\Exception\\LogicException;",
          "8: use Symfony\\Component\\DependencyInjection\\Exception\\RuntimeException;",
          "9: use Symfony\\Component\\DependencyInjection\\ParameterBag\\FrozenParameterBag;",
          "17: class Symfony_DI_PhpDumper_Test_Unsupported_Characters extends Container",
          "18: {",
          "19:     private $parameters;",
          "20:     private $targetDirs = [];",
          "25:     protected $privates = [];",
          "27:     public function __construct()",
          "28:     {",
          "29:         $this->parameters = $this->getDefaultParameters();",
          "31:         $this->services = $this->privates = [];",
          "32:         $this->methodMap = [",
          "33:             'bar$' => 'getBarService',",
          "34:             'bar$!' => 'getBar2Service',",
          "35:             'foo*/oh-no' => 'getFooohnoService',",
          "36:         ];",
          "38:         $this->aliases = [];",
          "39:     }",
          "41:     public function reset()",
          "42:     {",
          "43:         $this->privates = [];",
          "44:         parent::reset();",
          "45:     }",
          "47:     public function compile()",
          "48:     {",
          "49:         throw new LogicException('You cannot compile a dumped container that was already compiled.');",
          "50:     }",
          "52:     public function isCompiled()",
          "53:     {",
          "54:         return true;",
          "55:     }",
          "57:     public function getRemovedIds()",
          "58:     {",
          "59:         return [",
          "60:             'Psr\\\\Container\\\\ContainerInterface' => true,",
          "61:             'Symfony\\\\Component\\\\DependencyInjection\\\\ContainerInterface' => true,",
          "62:         ];",
          "63:     }",
          "70:     protected function getBarService()",
          "71:     {",
          "72:         return $this->services['bar$'] = new \\FooClass();",
          "73:     }",
          "80:     protected function getBar2Service()",
          "81:     {",
          "82:         return $this->services['bar$!'] = new \\FooClass();",
          "83:     }",
          "90:     protected function getFooohnoService()",
          "91:     {",
          "92:         return $this->services['foo*/oh-no'] = new \\FooClass();",
          "93:     }",
          "95:     public function getParameter($name)",
          "96:     {",
          "97:         $name = (string) $name;",
          "99:         if (!(isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters))) {",
          "100:             throw new InvalidArgumentException(sprintf('The parameter \"%s\" must be defined.', $name));",
          "101:         }",
          "102:         if (isset($this->loadedDynamicParameters[$name])) {",
          "103:             return $this->loadedDynamicParameters[$name] ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);",
          "104:         }",
          "106:         return $this->parameters[$name];",
          "107:     }",
          "109:     public function hasParameter($name)",
          "110:     {",
          "111:         $name = (string) $name;",
          "113:         return isset($this->parameters[$name]) || isset($this->loadedDynamicParameters[$name]) || array_key_exists($name, $this->parameters);",
          "114:     }",
          "116:     public function setParameter($name, $value)",
          "117:     {",
          "118:         throw new LogicException('Impossible to call set() on a frozen ParameterBag.');",
          "119:     }",
          "121:     public function getParameterBag()",
          "122:     {",
          "123:         if (null === $this->parameterBag) {",
          "124:             $parameters = $this->parameters;",
          "125:             foreach ($this->loadedDynamicParameters as $name => $loaded) {",
          "126:                 $parameters[$name] = $loaded ? $this->dynamicParameters[$name] : $this->getDynamicParameter($name);",
          "127:             }",
          "128:             $this->parameterBag = new FrozenParameterBag($parameters);",
          "129:         }",
          "131:         return $this->parameterBag;",
          "132:     }",
          "134:     private $loadedDynamicParameters = [];",
          "135:     private $dynamicParameters = [];",
          "146:     private function getDynamicParameter($name)",
          "147:     {",
          "148:         throw new InvalidArgumentException(sprintf('The dynamic parameter \"%s\" must be defined.', $name));",
          "149:     }",
          "156:     protected function getDefaultParameters()",
          "157:     {",
          "158:         return [",
          "159:             '\\'' => 'oh-no',",
          "160:         ];",
          "161:     }",
          "162: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3876c75f858d5d82e2c309698d21af2f1d721afb",
      "candidate_info": {
        "commit_hash": "3876c75f858d5d82e2c309698d21af2f1d721afb",
        "repo": "symfony/symfony",
        "commit_url": "https://github.com/symfony/symfony/commit/3876c75f858d5d82e2c309698d21af2f1d721afb",
        "files": [
          "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
          "src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php"
        ],
        "message": "security #cve-2019-10910 [DI] Check service IDs are valid (nicolas-grekas)\n\nThis PR was merged into the 2.8 branch.\n\nDiscussion\n----------\n\n[DI] Check service IDs are valid\n\nBased on #87\n\nCommits\n-------\n\n7fdfeefdfb [DI] Check service IDs are valid",
        "before_after_code_files": [
          "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
          "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
          "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
            "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php"
          ],
          "candidate": [
            "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
            "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
            "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
            "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php||src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php": [
          "File: src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php -> src/Symfony/Bridge/ProxyManager/LazyProxy/PhpDumper/ProxyDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "53:     public function getProxyFactoryCode(Definition $definition, $id)",
          "54:     {",
          "55:         $instantiation = 'return';",
          "57:         if ($definition->isShared()) {",
          "60:             if (\\defined('Symfony\\Component\\DependencyInjection\\ContainerInterface::SCOPE_CONTAINER') && ContainerInterface::SCOPE_CONTAINER !== $scope = $definition->getScope(false)) {",
          "62:             }",
          "63:         }",
          "65:         $methodName = 'get'.Container::camelize($id).'Service';",
          "66:         $proxyClass = $this->getProxyClassName($definition);",
          "",
          "[Removed Lines]",
          "58:             $instantiation .= \" \\$this->services['$id'] =\";",
          "61:                 $instantiation .= \" \\$this->scopedServices['$scope']['$id'] =\";",
          "",
          "[Added Lines]",
          "56:         $scope = '';",
          "59:             $instantiation .= ' $this->services[%s] =';",
          "62:                 $instantiation .= ' $this->scopedServices[%s][%1$s] =';",
          "66:         $instantiation = sprintf($instantiation, var_export($id, true), var_export($scope, true));",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/ContainerBuilder.php||src/Symfony/Component/DependencyInjection/ContainerBuilder.php": [
          "File: src/Symfony/Component/DependencyInjection/ContainerBuilder.php -> src/Symfony/Component/DependencyInjection/ContainerBuilder.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "641:     {",
          "642:         $alias = strtolower($alias);",
          "644:         if (\\is_string($id)) {",
          "645:             $id = new Alias($id);",
          "646:         } elseif (!$id instanceof Alias) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "644:         if ('' === $alias || '\\\\' === substr($alias, -1) || \\strlen($alias) !== strcspn($alias, \"\\0\\r\\n'\")) {",
          "645:             throw new InvalidArgumentException(sprintf('Invalid alias id: \"%s\"', $alias));",
          "646:         }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "776:         $id = strtolower($id);",
          "778:         unset($this->aliasDefinitions[$id]);",
          "780:         return $this->definitions[$id] = $definition;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "782:         if ('' === $id || '\\\\' === substr($id, -1) || \\strlen($id) !== strcspn($id, \"\\0\\r\\n'\")) {",
          "783:             throw new InvalidArgumentException(sprintf('Invalid service id: \"%s\"', $id));",
          "784:         }",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php||src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php": [
          "File: src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php -> src/Symfony/Component/DependencyInjection/Dumper/PhpDumper.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "379:         $instantiation = '';",
          "381:         if (!$isProxyCandidate && $definition->isShared() && ContainerInterface::SCOPE_CONTAINER === $definition->getScope(false)) {",
          "383:         } elseif (!$isProxyCandidate && $definition->isShared() && ContainerInterface::SCOPE_PROTOTYPE !== $scope = $definition->getScope(false)) {",
          "385:         } elseif (!$simple) {",
          "386:             $instantiation = '$instance';",
          "387:         }",
          "",
          "[Removed Lines]",
          "382:             $instantiation = \"\\$this->services['$id'] = \".($simple ? '' : '$instance');",
          "384:             $instantiation = \"\\$this->services['$id'] = \\$this->scopedServices['$scope']['$id'] = \".($simple ? '' : '$instance');",
          "",
          "[Added Lines]",
          "382:             $instantiation = sprintf('$this->services[%s] = %s', var_export($id, true), $simple ? '' : '$instance');",
          "384:             $instantiation = sprintf('$this->services[%s] = $this->scopedServices[%s][%1$s] = %s', var_export($id, true), var_export($scope, true), $simple ? '' : '$instance');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "613:     {$visibility} function get{$this->camelize($id)}Service($lazyInitialization)",
          "614:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "612: EOF;",
          "613:             $code = str_replace('*/', ' ', $code).<<<EOF",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "620:         if (!\\in_array($scope, array(ContainerInterface::SCOPE_CONTAINER, ContainerInterface::SCOPE_PROTOTYPE))) {",
          "621:             $code .= <<<EOF",
          "622:         if (!isset(\\$this->scopedServices['$scope'])) {",
          "624:         }",
          "",
          "[Removed Lines]",
          "623:             throw new InactiveScopeException('$id', '$scope');",
          "",
          "[Added Lines]",
          "626:             throw new InactiveScopeException({$this->export($id)}, '$scope');",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "628:         }",
          "630:         if ($definition->isSynthetic()) {",
          "632:         } else {",
          "633:             if ($definition->isDeprecated()) {",
          "634:                 $code .= sprintf(\"        @trigger_error(%s, E_USER_DEPRECATED);\\n\\n\", var_export($definition->getDeprecationMessage($id), true));",
          "",
          "[Removed Lines]",
          "631:             $code .= sprintf(\"        throw new RuntimeException('You have requested a synthetic service (\\\"%s\\\"). The DIC does not know how to construct this service.');\\n    }\\n\", $id);",
          "",
          "[Added Lines]",
          "634:             $code .= sprintf(\"        throw new RuntimeException(%s);\\n    }\\n\", var_export(\"You have requested a synthetic service (\\\"$id\\\"). The DIC does not know how to construct this service.\", true));",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "706:                             $arguments[] = $this->dumpValue($value);",
          "707:                         }",
          "711:                         $code .= <<<EOF",
          "713:             $call",
          "714:         }",
          "",
          "[Removed Lines]",
          "709:                         $call = $this->wrapServiceConditionals($call[1], sprintf(\"\\$this->get('%s')->%s(%s);\", $definitionId, $call[0], implode(', ', $arguments)));",
          "712:         if (\\$this->initialized('$definitionId')) {",
          "",
          "[Added Lines]",
          "712:                         $definitionId = var_export($definitionId, true);",
          "713:                         $call = $this->wrapServiceConditionals($call[1], sprintf('$this->get(%s)->%s(%s);', $definitionId, $call[0], implode(', ', $arguments)));",
          "716:         if (\\$this->initialized($definitionId)) {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "1143:         $conditions = array();",
          "1144:         foreach ($services as $service) {",
          "1146:         }",
          "",
          "[Removed Lines]",
          "1145:             $conditions[] = sprintf(\"\\$this->has('%s')\", $service);",
          "",
          "[Added Lines]",
          "1149:             $conditions[] = sprintf('$this->has(%s)', var_export($service, true));",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "1420:     public function dumpParameter($name)",
          "1421:     {",
          "1422:         if ($this->container->isFrozen() && $this->container->hasParameter($name)) {",
          "1423:             return $this->dumpValue($this->container->getParameter($name), false);",
          "1424:         }",
          "1427:     }",
          "",
          "[Removed Lines]",
          "1426:         return sprintf(\"\\$this->getParameter('%s')\", strtolower($name));",
          "",
          "[Added Lines]",
          "1426:         $name = (string) $name;",
          "1432:         return sprintf('$this->getParameter(%s)', var_export($name, true));",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1458:         }",
          "1460:         if (null !== $reference && ContainerInterface::EXCEPTION_ON_INVALID_REFERENCE !== $reference->getInvalidBehavior()) {",
          "1462:         }",
          "1465:     }",
          "",
          "[Removed Lines]",
          "1461:             return sprintf('$this->get(\\'%s\\', ContainerInterface::NULL_ON_INVALID_REFERENCE)', $id);",
          "1464:         return sprintf('$this->get(\\'%s\\')', $id);",
          "",
          "[Added Lines]",
          "1467:             return sprintf('$this->get(%s, ContainerInterface::NULL_ON_INVALID_REFERENCE)', var_export($id, true));",
          "1470:         return sprintf('$this->get(%s)', var_export($id, true));",
          "",
          "---------------"
        ],
        "src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php||src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php": [
          "File: src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php -> src/Symfony/Component/DependencyInjection/Tests/ContainerBuilderTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:         $this->assertNotSame($builder->get('bar'), $builder->get('bar'));",
          "132:     }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "138:     public function testBadAliasId($id)",
          "139:     {",
          "140:         $builder = new ContainerBuilder();",
          "141:         $builder->setAlias($id, 'foo');",
          "142:     }",
          "148:     public function testBadDefinitionId($id)",
          "149:     {",
          "150:         $builder = new ContainerBuilder();",
          "151:         $builder->setDefinition($id, new Definition('Foo'));",
          "152:     }",
          "154:     public function provideBadId()",
          "155:     {",
          "156:         return [",
          "157:             [''],",
          "158:             [\"\\0\"],",
          "159:             [\"\\r\"],",
          "160:             [\"\\n\"],",
          "161:             [\"'\"],",
          "162:             ['ab\\\\'],",
          "163:         ];",
          "164:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}