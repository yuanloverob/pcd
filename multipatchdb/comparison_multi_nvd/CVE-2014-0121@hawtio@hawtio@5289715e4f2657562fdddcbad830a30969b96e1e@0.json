{
  "cve_id": "CVE-2014-0121",
  "cve_desc": "The admin terminal in Hawt.io does not require authentication, which allows remote attackers to execute arbitrary commands via the k parameter.",
  "repo": "hawtio/hawtio",
  "patch_hash": "5289715e4f2657562fdddcbad830a30969b96e1e",
  "patch_info": {
    "commit_hash": "5289715e4f2657562fdddcbad830a30969b96e1e",
    "repo": "hawtio/hawtio",
    "commit_url": "https://github.com/hawtio/hawtio/commit/5289715e4f2657562fdddcbad830a30969b96e1e",
    "files": [
      "hawtio-karaf-terminal/pom.xml",
      "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/KarafTerminalContextListener.java",
      "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java",
      "hawtio-karaf-terminal/src/main/webapp/WEB-INF/web.xml",
      "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
      "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js",
      "hawtio-system/src/main/java/io/hawt/web/AuthenticationFilter.java"
    ],
    "message": "Ensure we secure hawtio-karaf-terminal's /term context",
    "before_after_code_files": [
      "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/KarafTerminalContextListener.java||hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/KarafTerminalContextListener.java",
      "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java||hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java",
      "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
      "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js",
      "hawtio-system/src/main/java/io/hawt/web/AuthenticationFilter.java||hawtio-system/src/main/java/io/hawt/web/AuthenticationFilter.java"
    ]
  },
  "patch_diff": {
    "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/KarafTerminalContextListener.java||hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/KarafTerminalContextListener.java": [
      "File: hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/KarafTerminalContextListener.java -> hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/KarafTerminalContextListener.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: package io.hawt.web.plugin.karaf.terminal;",
      "3: import io.hawt.system.ConfigManager;",
      "5: import javax.servlet.ServletContextEvent;",
      "6: import javax.servlet.ServletContextListener;",
      "11: public class KarafTerminalContextListener implements ServletContextListener {",
      "13:   private ConfigManager configManager = new ConfigManager();",
      "15:   @Override",
      "16:   public void contextInitialized(ServletContextEvent sce) {",
      "17:     try {",
      "18:       configManager.init();",
      "19:     } catch (Exception e) {",
      "20:       throw createServletException(e);",
      "21:     }",
      "22:     sce.getServletContext().setAttribute(\"ConfigManager\", configManager);",
      "23:   }",
      "25:   @Override",
      "26:   public void contextDestroyed(ServletContextEvent sce) {",
      "27:     try {",
      "28:       configManager.destroy();",
      "29:     } catch (Exception e) {",
      "30:       throw createServletException(e);",
      "31:     }",
      "33:   }",
      "34:   protected RuntimeException createServletException(Exception e) {",
      "35:     return new RuntimeException(e);",
      "36:   }",
      "38: }",
      "",
      "---------------"
    ],
    "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java||hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java": [
      "File: hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java -> hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package io.hawt.web.plugin.karaf.terminal;",
      "3: import org.apache.felix.service.command.CommandProcessor;",
      "4: import org.apache.felix.service.command.CommandSession;",
      "5: import org.apache.felix.service.threadio.ThreadIO;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3: import io.hawt.system.Helpers;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "7: import org.slf4j.Logger;",
      "8: import org.slf4j.LoggerFactory;",
      "10: import javax.servlet.ServletException;",
      "11: import javax.servlet.http.HttpServlet;",
      "12: import javax.servlet.http.HttpServletRequest;",
      "13: import javax.servlet.http.HttpServletResponse;",
      "14: import java.io.*;",
      "15: import java.lang.reflect.Constructor;",
      "16: import java.util.zip.GZIPOutputStream;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "11: import javax.security.auth.Subject;",
      "16: import javax.servlet.http.HttpSession;",
      "19: import java.security.AccessControlContext;",
      "20: import java.security.AccessController;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "39:     @Override",
      "40:     protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",
      "41:         String encoding = request.getHeader(\"Accept-Encoding\");",
      "42:         boolean supportsGzip = (encoding != null && encoding.toLowerCase().indexOf(\"gzip\") > -1);",
      "44:         if (st == null || st.isClosed()) {",
      "45:             st = new SessionTerminal(getCommandProcessor(), getThreadIO());",
      "47:         }",
      "48:         String str = request.getParameter(\"k\");",
      "49:         String f = request.getParameter(\"f\");",
      "",
      "[Removed Lines]",
      "43:         SessionTerminal st = (SessionTerminal) request.getSession(true).getAttribute(\"terminal\");",
      "46:             request.getSession().setAttribute(\"terminal\", st);",
      "",
      "[Added Lines]",
      "47:         HttpSession session = request.getSession(false);",
      "48:         if (session == null) {",
      "49:           AccessControlContext acc = AccessController.getContext();",
      "50:           Subject subject = Subject.getSubject(acc);",
      "51:           if (subject == null) {",
      "52:             Helpers.doForbidden(response);",
      "53:             return;",
      "54:           }",
      "55:           session = request.getSession(true);",
      "56:           session.setAttribute(\"subject\", subject);",
      "57:         } else {",
      "58:           Subject subject = (Subject) session.getAttribute(\"subject\");",
      "59:           if (subject == null) {",
      "60:             session.invalidate();",
      "61:             Helpers.doForbidden(response);",
      "62:             return;",
      "63:           }",
      "64:         }",
      "68:         SessionTerminal st = (SessionTerminal) session.getAttribute(\"terminal\");",
      "71:             session.setAttribute(\"terminal\", st);",
      "",
      "---------------"
    ],
    "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js": [
      "File: hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js -> hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "7: gogo = { };",
      "11:    var query0 = \"w=\" + width + \"&h=\" + height;",
      "12:    var query1 = query0 + \"&k=\";",
      "",
      "[Removed Lines]",
      "9: gogo.Terminal_ctor = function(div, width, height) {",
      "",
      "[Added Lines]",
      "9: gogo.Terminal_ctor = function(div, width, height, authHeader) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "47:                force = 0;",
      "48:            }",
      "49:            r.open(\"POST\", \"hawtio-karaf-terminal/term\", true);",
      "50:            r.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');",
      "51:            r.onreadystatechange = function () {",
      "52:                if (r.readyState == 4) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "50:            r.setRequestHeader('Authorization', authHeader);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "224: }",
      "228: }",
      "",
      "[Removed Lines]",
      "226: gogo.Terminal = function(div, width, height) {",
      "227:    return new this.Terminal_ctor(div, width, height);",
      "",
      "[Added Lines]",
      "227: gogo.Terminal = function(div, width, height, authHeader) {",
      "228:    return new this.Terminal_ctor(div, width, height, authHeader);",
      "",
      "---------------"
    ],
    "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js": [
      "File: hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js -> hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "11:         when('/gogo', {",
      "12:             templateUrl: 'hawtio-karaf-terminal/app/html/gogo.html'",
      "13:           });",
      "15:       return {",
      "16:         restrict: 'A',",
      "17:         link: function(scope, element, attrs) {",
      "",
      "[Removed Lines]",
      "14:     }).directive('gogoTerminal', function(log) {",
      "",
      "[Added Lines]",
      "14:     }).directive('gogoTerminal', function(log, userDetails) {",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "50:             'min-height': cssHeight",
      "51:           });",
      "55:           scope.$on(\"$destroy\", function(e) {",
      "56:             document.onkeypress = null;",
      "",
      "[Removed Lines]",
      "53:           gogo.Terminal(element.get(0), width, height);",
      "",
      "[Added Lines]",
      "53:           var authHeader = Core.getBasicAuthHeader(userDetails.username, userDetails.password);",
      "55:           gogo.Terminal(element.get(0), width, height, authHeader);",
      "",
      "---------------"
    ],
    "hawtio-system/src/main/java/io/hawt/web/AuthenticationFilter.java||hawtio-system/src/main/java/io/hawt/web/AuthenticationFilter.java": [
      "File: hawtio-system/src/main/java/io/hawt/web/AuthenticationFilter.java -> hawtio-system/src/main/java/io/hawt/web/AuthenticationFilter.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "105:             }",
      "106:         }",
      "112:         if (doAuthenticate) {",
      "113:             LOG.debug(\"Doing authentication and authorization for path {}\", path);",
      "",
      "[Removed Lines]",
      "108:         boolean doAuthenticate = path.startsWith(\"/auth\") ||",
      "109:                 path.startsWith(\"/jolokia\") ||",
      "110:                 path.startsWith(\"/upload\");",
      "",
      "[Added Lines]",
      "108:         boolean doAuthenticate = true;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "129:                     break;",
      "130:             }",
      "131:         } else {",
      "133:             chain.doFilter(request, response);",
      "134:         }",
      "135:     }",
      "",
      "[Removed Lines]",
      "132:             LOG.debug(\"No authentication needed for path {}\", path);",
      "",
      "[Added Lines]",
      "130:             LOG.warn(\"No authentication needed for path {}\", path);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b4e23e002639c274a2f687ada980118512f06113",
      "candidate_info": {
        "commit_hash": "b4e23e002639c274a2f687ada980118512f06113",
        "repo": "hawtio/hawtio",
        "commit_url": "https://github.com/hawtio/hawtio/commit/b4e23e002639c274a2f687ada980118512f06113",
        "files": [
          "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java",
          "hawtio-karaf-terminal/src/main/webapp/WEB-INF/web.xml",
          "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
          "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js",
          "hawtio-system/src/main/java/io/hawt/web/LoginServlet.java",
          "hawtio-system/src/main/java/io/hawt/web/LoginTokenServlet.java"
        ],
        "message": "Add a LoginTokenServlet that plugins can use to fetch a token, and let's use it in hawtio-karaf-terminal.  Also handle cases where the terminal scope gets created a couple times.",
        "before_after_code_files": [
          "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java||hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java",
          "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
          "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js",
          "hawtio-system/src/main/java/io/hawt/web/LoginServlet.java||hawtio-system/src/main/java/io/hawt/web/LoginServlet.java",
          "hawtio-system/src/main/java/io/hawt/web/LoginTokenServlet.java||hawtio-system/src/main/java/io/hawt/web/LoginTokenServlet.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java||hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java",
            "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
            "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js"
          ],
          "candidate": [
            "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java||hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java",
            "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
            "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js"
          ]
        }
      },
      "candidate_diff": {
        "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java||hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java": [
          "File: hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java -> hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package io.hawt.web.plugin.karaf.terminal;",
          "3: import io.hawt.system.Helpers;",
          "4: import org.apache.felix.service.command.CommandProcessor;",
          "5: import org.apache.felix.service.command.CommandSession;",
          "6: import org.apache.felix.service.threadio.ThreadIO;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4: import io.hawt.web.LoginTokenServlet;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "8: import org.slf4j.Logger;",
          "9: import org.slf4j.LoggerFactory;",
          "12: import javax.servlet.ServletException;",
          "13: import javax.servlet.http.HttpServlet;",
          "14: import javax.servlet.http.HttpServletRequest;",
          "",
          "[Removed Lines]",
          "11: import javax.security.auth.Subject;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "16: import javax.servlet.http.HttpSession;",
          "17: import java.io.*;",
          "18: import java.lang.reflect.Constructor;",
          "21: import java.util.zip.GZIPOutputStream;",
          "",
          "[Removed Lines]",
          "19: import java.security.AccessControlContext;",
          "20: import java.security.AccessController;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "45:     protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {",
          "47:         HttpSession session = request.getSession(false);",
          "52:             Helpers.doForbidden(response);",
          "53:             return;",
          "61:             Helpers.doForbidden(response);",
          "62:             return;",
          "64:         }",
          "66:         String encoding = request.getHeader(\"Accept-Encoding\");",
          "",
          "[Removed Lines]",
          "48:         if (session == null) {",
          "49:           AccessControlContext acc = AccessController.getContext();",
          "50:           Subject subject = Subject.getSubject(acc);",
          "51:           if (subject == null) {",
          "54:           }",
          "55:           session = request.getSession(true);",
          "56:           session.setAttribute(\"subject\", subject);",
          "57:         } else {",
          "58:           Subject subject = (Subject) session.getAttribute(\"subject\");",
          "59:           if (subject == null) {",
          "60:             session.invalidate();",
          "63:           }",
          "",
          "[Added Lines]",
          "46:         String token = request.getHeader(LoginTokenServlet.LOGIN_TOKEN);",
          "48:         if (token == null || session == null) {",
          "51:         }",
          "53:         String sessionToken = (String) session.getAttribute(LoginTokenServlet.LOGIN_TOKEN);",
          "54:         if (!token.equals(sessionToken)) {",
          "",
          "---------------"
        ],
        "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js": [
          "File: hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js -> hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: gogo = { };",
          "11:    var query0 = \"w=\" + width + \"&h=\" + height;",
          "12:    var query1 = query0 + \"&k=\";",
          "",
          "[Removed Lines]",
          "9: gogo.Terminal_ctor = function(div, width, height, authHeader) {",
          "",
          "[Added Lines]",
          "9: gogo.Terminal_ctor = function(div, width, height, token) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "47:                force = 0;",
          "48:            }",
          "49:            r.open(\"POST\", \"hawtio-karaf-terminal/term\", true);",
          "51:            r.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');",
          "52:            r.onreadystatechange = function () {",
          "53:                if (r.readyState == 4) {",
          "",
          "[Removed Lines]",
          "50:            r.setRequestHeader('Authorization', authHeader);",
          "",
          "[Added Lines]",
          "50:            r.setRequestHeader('LoginToken', token);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "225: }",
          "229: }",
          "",
          "[Removed Lines]",
          "227: gogo.Terminal = function(div, width, height, authHeader) {",
          "228:    return new this.Terminal_ctor(div, width, height, authHeader);",
          "",
          "[Added Lines]",
          "227: gogo.Terminal = function(div, width, height, token) {",
          "228:    return new this.Terminal_ctor(div, width, height, token);",
          "",
          "---------------"
        ],
        "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js": [
          "File: hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js -> hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:         restrict: 'A',",
          "17:         link: function(scope, element, attrs) {",
          "19:           var width = 120;",
          "20:           var height = 39;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19:           scope.$on(\"$destroy\", function(e) {",
          "20:             scope.destroyed = true;",
          "21:             document.onkeypress = null;",
          "22:             document.onkeydown = null;",
          "23:             if (!('term' in scope)) {",
          "24:               return;",
          "25:             }",
          "26:             var url = \"hawtio-karaf-terminal/auth/logout/\";",
          "27:             delete scope.term;",
          "28:             $.ajax(url, {",
          "29:               type: \"POST\",",
          "30:               success: function (response) {",
          "31:                 log.debug(\"logged out of terminal\");",
          "32:                 Core.$apply(scope);",
          "33:               },",
          "34:               error: function (xhr, textStatus, error) {",
          "35:                 log.info(\"Failed to log out of terminal: \", error);",
          "36:               },",
          "37:               beforeSend: function (xhr) {",
          "38:                 xhr.setRequestHeader('Authorization', authHeader);",
          "39:               }",
          "40:             })",
          "41:           });",
          "43:           if (scope.destroyed) {",
          "44:             return;",
          "45:           }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "53:           var authHeader = Core.getBasicAuthHeader(userDetails.username, userDetails.password);",
          "60:           });",
          "62:         }",
          "",
          "[Removed Lines]",
          "55:           gogo.Terminal(element.get(0), width, height, authHeader);",
          "57:           scope.$on(\"$destroy\", function(e) {",
          "58:             document.onkeypress = null;",
          "59:             document.onkeydown = null;",
          "",
          "[Added Lines]",
          "83:           var url = \"hawtio-karaf-terminal/auth/login/\";",
          "85:           $.ajax(url, {",
          "86:             type: \"POST\",",
          "87:             success: function (response) {",
          "88:               if (scope.destroyed) {",
          "89:                 log.debug(\"Scope's been destroyed since we made our request, let's not create a terminal instance\");",
          "90:                 return;",
          "91:               }",
          "92:               log.debug(\"got back response: \", response);",
          "93:               if ('term' in scope) {",
          "94:                 log.debug(\"Previous terminal created, let's clean it up\");",
          "95:                 document.onkeypress = null;",
          "96:                 document.onkeydown = null;",
          "97:                 delete scope.term;",
          "98:               }",
          "99:               scope.term = gogo.Terminal(element.get(0), width, height, response['token']);",
          "100:               Core.$apply(scope);",
          "102:             },",
          "103:             error: function (xhr, textStatus, error) {",
          "104:               log.warn(\"Failed to log into terminal: \", error);",
          "105:             },",
          "106:             beforeSend: function (xhr) {",
          "107:               xhr.setRequestHeader('Authorization', authHeader);",
          "108:             }",
          "",
          "---------------"
        ],
        "hawtio-system/src/main/java/io/hawt/web/LoginServlet.java||hawtio-system/src/main/java/io/hawt/web/LoginServlet.java": [
          "File: hawtio-system/src/main/java/io/hawt/web/LoginServlet.java -> hawtio-system/src/main/java/io/hawt/web/LoginServlet.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package io.hawt.web;",
          "14: import javax.security.auth.Subject;",
          "15: import javax.servlet.ServletConfig;",
          "16: import javax.servlet.ServletException;",
          "",
          "[Removed Lines]",
          "3: import java.io.IOException;",
          "4: import java.io.PrintWriter;",
          "5: import java.security.AccessControlContext;",
          "6: import java.security.AccessController;",
          "7: import java.security.Principal;",
          "8: import java.util.ArrayList;",
          "9: import java.util.GregorianCalendar;",
          "10: import java.util.HashMap;",
          "11: import java.util.List;",
          "12: import java.util.Map;",
          "13: import java.util.Set;",
          "",
          "[Added Lines]",
          "3: import io.hawt.system.ConfigManager;",
          "4: import io.hawt.system.Helpers;",
          "5: import org.jolokia.converter.Converters;",
          "6: import org.jolokia.converter.json.JsonConvertOptions;",
          "7: import org.slf4j.Logger;",
          "8: import org.slf4j.LoggerFactory;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18: import javax.servlet.http.HttpServletRequest;",
          "19: import javax.servlet.http.HttpServletResponse;",
          "20: import javax.servlet.http.HttpSession;",
          "",
          "[Removed Lines]",
          "22: import io.hawt.system.ConfigManager;",
          "23: import io.hawt.system.Helpers;",
          "24: import org.jolokia.converter.Converters;",
          "25: import org.jolokia.converter.json.JsonConvertOptions;",
          "26: import org.slf4j.Logger;",
          "27: import org.slf4j.LoggerFactory;",
          "",
          "[Added Lines]",
          "17: import java.io.IOException;",
          "18: import java.io.PrintWriter;",
          "19: import java.security.AccessControlContext;",
          "20: import java.security.AccessController;",
          "21: import java.security.Principal;",
          "22: import java.util.*;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "34:     private static final long serialVersionUID = 1L;",
          "35:     private static final transient Logger LOG = LoggerFactory.getLogger(LoginServlet.class);",
          "40:     private Integer timeout;",
          "42:     @Override",
          "",
          "[Removed Lines]",
          "37:     Converters converters = new Converters();",
          "38:     JsonConvertOptions options = JsonConvertOptions.DEFAULT;",
          "39:     ConfigManager config;",
          "",
          "[Added Lines]",
          "32:     protected Converters converters = new Converters();",
          "33:     protected JsonConvertOptions options = JsonConvertOptions.DEFAULT;",
          "34:     protected ConfigManager config;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "74:                 LOG.warn(\"No security subject stored in existing session, invalidating\");",
          "75:                 session.invalidate();",
          "76:                 Helpers.doForbidden(resp);",
          "77:             }",
          "79:             return;",
          "80:         }",
          "",
          "[Removed Lines]",
          "78:             returnPrincipals(subject, out);",
          "",
          "[Added Lines]",
          "72:                 return;",
          "74:             sendResponse(session, subject, out);",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "112:             LOG.debug(\"Http session timeout for user {} is {} sec.\", username, session.getMaxInactiveInterval());",
          "113:         }",
          "116:     }",
          "120:         Map<String, Object> answer = new HashMap<String, Object>();",
          "",
          "[Removed Lines]",
          "115:         returnPrincipals(subject, out);",
          "118:     private void returnPrincipals(Subject subject, PrintWriter out) {",
          "",
          "[Added Lines]",
          "111:         sendResponse(session, subject, out);",
          "114:     protected void sendResponse(HttpSession session, Subject subject, PrintWriter out) {",
          "",
          "---------------"
        ],
        "hawtio-system/src/main/java/io/hawt/web/LoginTokenServlet.java||hawtio-system/src/main/java/io/hawt/web/LoginTokenServlet.java": [
          "File: hawtio-system/src/main/java/io/hawt/web/LoginTokenServlet.java -> hawtio-system/src/main/java/io/hawt/web/LoginTokenServlet.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package io.hawt.web;",
          "3: import org.apache.commons.codec.binary.Base64;",
          "5: import javax.security.auth.Subject;",
          "6: import javax.servlet.http.HttpSession;",
          "7: import java.io.PrintWriter;",
          "8: import java.security.SecureRandom;",
          "9: import java.util.HashMap;",
          "10: import java.util.Map;",
          "16: public class LoginTokenServlet extends LoginServlet {",
          "18:     private static final long serialVersionUID = 1L;",
          "20:     public static final String LOGIN_TOKEN = \"LoginToken\";",
          "22:     @Override",
          "23:     protected void sendResponse(HttpSession session, Subject subject, PrintWriter out) {",
          "25:         String token = (String) session.getAttribute(LOGIN_TOKEN);",
          "27:         if ( token == null) {",
          "28:             byte[] seed = (subject.toString() + new Long(System.currentTimeMillis()).toString()).getBytes();",
          "29:             SecureRandom random = new SecureRandom(seed);",
          "30:             byte[] tokenBytes = new byte[128];",
          "31:             random.nextBytes(tokenBytes);",
          "32:             token = Base64.encodeBase64String(tokenBytes);",
          "33:             session.setAttribute(LOGIN_TOKEN, token);",
          "34:         }",
          "36:         Map<String, String> answer = new HashMap<String, String>();",
          "37:         answer.put(\"token\", token);",
          "39:         ServletHelpers.writeObject(converters, options, out, answer);",
          "40:     }",
          "42: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "35844f404bb04e7ad9c2f2c95e9e74b8b653fb43",
      "candidate_info": {
        "commit_hash": "35844f404bb04e7ad9c2f2c95e9e74b8b653fb43",
        "repo": "hawtio/hawtio",
        "commit_url": "https://github.com/hawtio/hawtio/commit/35844f404bb04e7ad9c2f2c95e9e74b8b653fb43",
        "files": [
          "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java"
        ],
        "message": "#1568: Attempt to fix terminal blank screen on first click sometimes.",
        "before_after_code_files": [
          "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java||hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java||hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java"
          ],
          "candidate": [
            "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java||hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java"
          ]
        }
      },
      "candidate_diff": {
        "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java||hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java": [
          "File: hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java -> hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:         }",
          "61:         String sessionToken = (String) session.getAttribute(LoginTokenServlet.LOGIN_TOKEN);",
          "63:             session.invalidate();",
          "64:             Helpers.doForbidden(response);",
          "65:             return;",
          "",
          "[Removed Lines]",
          "62:         if (!token.equals(sessionToken)) {",
          "",
          "[Added Lines]",
          "62:         if (sessionToken == null || !token.equals(sessionToken)) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:         String encoding = request.getHeader(\"Accept-Encoding\");",
          "69:         boolean supportsGzip = (encoding != null && encoding.toLowerCase().contains(\"gzip\"));",
          "71:         if (st == null || st.isClosed()) {",
          "72:             st = new SessionTerminal(getCommandProcessor(), getThreadIO());",
          "74:             session = request.getSession(true);",
          "75:             session.setAttribute(\"terminal\", st);",
          "76:         }",
          "77:         String str = request.getParameter(\"k\");",
          "78:         String f = request.getParameter(\"f\");",
          "79:         String dump = st.handle(str, f != null && f.length() > 0);",
          "",
          "[Removed Lines]",
          "70:         SessionTerminal st = (SessionTerminal) session.getAttribute(\"terminal\");",
          "",
          "[Added Lines]",
          "70:         SessionTerminal st = null;",
          "71:         try {",
          "72:             st = (SessionTerminal) session.getAttribute(\"terminal\");",
          "73:         } catch (Exception e) {",
          "75:         }",
          "80:             session.setAttribute(LoginTokenServlet.LOGIN_TOKEN, token);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2a4b71f04d949c5c376c1be42f2798f593b153d8",
      "candidate_info": {
        "commit_hash": "2a4b71f04d949c5c376c1be42f2798f593b153d8",
        "repo": "hawtio/hawtio",
        "commit_url": "https://github.com/hawtio/hawtio/commit/2a4b71f04d949c5c376c1be42f2798f593b153d8",
        "files": [
          "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java",
          "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
          "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js"
        ],
        "message": "[BZ#1112869] Make terminal 400 lines height by default (and scrollable too!)",
        "before_after_code_files": [
          "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java||hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java",
          "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
          "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java||hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java",
            "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
            "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js"
          ],
          "candidate": [
            "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java||hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java",
            "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
            "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js"
          ]
        }
      },
      "candidate_diff": {
        "hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java||hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java": [
          "File: hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java -> hawtio-karaf-terminal/src/main/java/io/hawt/web/plugin/karaf/terminal/TerminalServlet.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: public class TerminalServlet extends HttpServlet {",
          "26:     public static final int TERM_WIDTH = 120;",
          "28:     private final static Logger LOG = LoggerFactory.getLogger(TerminalServlet.class);",
          "",
          "[Removed Lines]",
          "27:     public static final int TERM_HEIGHT = 39;",
          "",
          "[Added Lines]",
          "27:     public static final int TERM_HEIGHT = 400;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "129:                 session.put(\"APPLICATION\", System.getProperty(\"karaf.name\", \"root\"));",
          "130:                 session.put(\"USER\", \"karaf\");",
          "131:                 session.put(\"COLUMNS\", Integer.toString(TERM_WIDTH));",
          "133:             } catch (IOException e) {",
          "134:                 LOG.info(\"Exception attaching to console\", e);",
          "135:                 throw e;",
          "",
          "[Removed Lines]",
          "132:                 session.put(\"LINES\", Integer.toString(TERM_HEIGHT));",
          "",
          "[Added Lines]",
          "132:                 session.put(\"LINES\", Integer.toString(/*TERM_HEIGHT*/39));",
          "",
          "---------------"
        ],
        "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js": [
          "File: hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js -> hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: gogo = { };",
          "12:    var query1 = query0 + \"&k=\";",
          "13:    var buf = \"\";",
          "14:    var timeout;",
          "",
          "[Removed Lines]",
          "9: gogo.Terminal_ctor = function(div, width, height, token) {",
          "11:    var query0 = \"w=\" + width + \"&h=\" + height;",
          "",
          "[Added Lines]",
          "9: gogo.Terminal_ctor = function(div, width, height, cssWidth, cssHeight, scrollWidth, charHeight, token) {",
          "11:    var query0 = \"w=\" + width + \"&h=\" + (height*20);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "18:    var rmax = 1;",
          "19:    var force = 1;",
          "21:    var dstat = document.createElement('pre');",
          "22:    var sled = document.createElement('span');",
          "23:    var sdebug = document.createElement('span');",
          "24:    var dterm = document.createElement('div');",
          "26:    function debug(s) {",
          "27:        sdebug.innerHTML = s;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21:   var lineHeight = charHeight;",
          "23:   var lastScrollPosition = -1;",
          "29:    dterm.style.width = (cssWidth - scrollWidth) + \"px\";",
          "31:   var scrollableDiv;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "55:                        window.clearTimeout(error_timeout);",
          "56:                        if (r.responseText.length > 0) {",
          "57:                            dterm.innerHTML = r.responseText;",
          "58:                            rmax = 100;",
          "59:                        } else {",
          "60:                            rmax *= 2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66:                            var lines = r.responseText.slice(0, r.responseText.lastIndexOf(\"f15 b12\"));",
          "67:                            var lineCount = lines.split(\"\\n\").length;",
          "68:                            var newScrollTop = lineHeight*(lineCount - height);",
          "69:                            if (lastScrollPosition != newScrollTop) {",
          "70:                              lastScrollPosition = scrollableDiv.scrollTop = newScrollTop;",
          "71:                            }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "68:                        debug(\"Connection error status:\" + r.status);",
          "69:                    }",
          "70:                }",
          "72:            error_timeout = window.setTimeout(error, 5000);",
          "73:            r.send(query);",
          "74:        }",
          "",
          "[Removed Lines]",
          "71:            }",
          "",
          "[Added Lines]",
          "85:            };",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "212:        dstat.appendChild(sdebug);",
          "213:        dstat.className = 'stat';",
          "214:        div.appendChild(dstat);",
          "218:        document.onkeypress = keypress;",
          "219:        document.onkeydown = keydown;",
          "220:        timeout = window.setTimeout(update, 100);",
          "",
          "[Removed Lines]",
          "215:        var d = document.createElement('div');",
          "216:        d.appendChild(dterm);",
          "217:        div.appendChild(d);",
          "",
          "[Added Lines]",
          "229:        scrollableDiv = document.createElement('div');",
          "230:        scrollableDiv.style.overflowY = \"scroll\";",
          "231:        scrollableDiv.style.maxHeight = cssHeight + \"px\";",
          "233:        scrollableDiv.appendChild(dterm);",
          "234:        div.appendChild(scrollableDiv);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "225: };",
          "229: };",
          "",
          "[Removed Lines]",
          "227: gogo.Terminal = function(div, width, height, token) {",
          "228:    return new this.Terminal_ctor(div, width, height, token);",
          "",
          "[Added Lines]",
          "244: gogo.Terminal = function(div, width, height, cssWidth, cssHeight, scrollWidth, charHeight, token) {",
          "245:    return new this.Terminal_ctor(div, width, height, cssWidth, cssHeight, scrollWidth, charHeight, token);",
          "",
          "---------------"
        ],
        "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js": [
          "File: hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js -> hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "66:           div.remove();",
          "71:           var cssHeight = (height * charHeight) + charHeight + 2;",
          "",
          "[Removed Lines]",
          "69:           var cssWidth = width * charWidth + 20;",
          "",
          "[Added Lines]",
          "68:           div = $('<div><div style=\"height: 300px\">AAA</div></div>').css({",
          "69:             position: 'absolute',",
          "70:             left: -1000,",
          "71:             top: -1000,",
          "72:             display: 'block',",
          "73:             padding: 0,",
          "74:             margin: 0,",
          "75:             'font-family': 'monospace',",
          "76:             'overflow-y': 'scroll',",
          "77:             'max-height': '100px'",
          "78:           }).appendTo($('body'));",
          "80:           var scrollWidth = div.width() - $(\"div\", div).width();",
          "82:           div.remove();",
          "85:           var cssWidth = width * charWidth + 20 + scrollWidth + 10;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:             width: cssWidth,",
          "79:             height: cssHeight,",
          "80:             'min-width': cssWidth,",
          "82:           });",
          "84:           var authHeader = Core.getBasicAuthHeader(userDetails.username, userDetails.password);",
          "",
          "[Removed Lines]",
          "81:             'min-height': cssHeight",
          "",
          "[Added Lines]",
          "97:             'min-height': cssHeight,",
          "98:             'margin-bottom': '3em'",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "99:                 document.onkeydown = null;",
          "100:                 delete scope.term;",
          "101:               }",
          "103:               Core.$apply(scope);",
          "105:             },",
          "",
          "[Removed Lines]",
          "102:               scope.term = gogo.Terminal(element.get(0), width, height, response['token']);",
          "",
          "[Added Lines]",
          "119:               scope.term = gogo.Terminal(element.get(0), width, height, cssWidth, cssHeight, scrollWidth, charHeight, response['token']);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "370390dfadba87b3222d391b5b02f43f52b8ef95",
      "candidate_info": {
        "commit_hash": "370390dfadba87b3222d391b5b02f43f52b8ef95",
        "repo": "hawtio/hawtio",
        "commit_url": "https://github.com/hawtio/hawtio/commit/370390dfadba87b3222d391b5b02f43f52b8ef95",
        "files": [
          "hawtio-karaf-terminal/pom.xml",
          "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
          "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js",
          "hawtio-web/src/main/webapp/app/threads/html/index.html"
        ],
        "message": "Move hawtio-karaf-terminal to a different top level context, hopefully addresses ENTESB-1336",
        "before_after_code_files": [
          "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
          "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js",
          "hawtio-web/src/main/webapp/app/threads/html/index.html||hawtio-web/src/main/webapp/app/threads/html/index.html"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
            "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js"
          ],
          "candidate": [
            "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
            "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js"
          ]
        }
      },
      "candidate_diff": {
        "hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js": [
          "File: hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js -> hawtio-karaf-terminal/src/main/webapp/app/js/gogo.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:                query = query + \"&f=1\";",
          "47:                force = 0;",
          "48:            }",
          "50:            r.setRequestHeader('LoginToken', token);",
          "51:            r.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');",
          "52:            r.onreadystatechange = function () {",
          "",
          "[Removed Lines]",
          "49:            r.open(\"POST\", \"hawtio-karaf-terminal/term\", true);",
          "",
          "[Added Lines]",
          "49:            r.open(\"POST\", \"/hawtio-karaf-terminal/term\", true);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "223:    init();",
          "227: gogo.Terminal = function(div, width, height, token) {",
          "228:    return new this.Terminal_ctor(div, width, height, token);",
          "",
          "[Removed Lines]",
          "225: }",
          "229: }",
          "",
          "[Added Lines]",
          "225: };",
          "229: };",
          "",
          "---------------"
        ],
        "hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js||hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js": [
          "File: hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js -> hawtio-karaf-terminal/src/main/webapp/app/js/gogoPlugin.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:   var pluginName = \"gogo\";",
          "6:   var simplePlugin = angular.module(pluginName, ['hawtioCore'])",
          "7:     .factory('log', function() {",
          "8:       return Logger.get(\"Gogo\");",
          "9:     }).config(function($routeProvider) {",
          "10:       $routeProvider.",
          "11:         when('/gogo', {",
          "13:           });",
          "14:     }).directive('gogoTerminal', function(log, userDetails) {",
          "15:       return {",
          "",
          "[Removed Lines]",
          "2: var Gogo = (function() {",
          "12:             templateUrl: 'hawtio-karaf-terminal/app/html/gogo.html'",
          "",
          "[Added Lines]",
          "2: var Gogo = (function(Gogo) {",
          "6:   Gogo.context = \"/hawtio-karaf-terminal\";",
          "7:   Gogo.templateUrl = Gogo.context + \"/app/html/\";",
          "15:             templateUrl: Gogo.templateUrl + 'gogo.html'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:             if (!('term' in scope)) {",
          "24:               return;",
          "25:             }",
          "27:             delete scope.term;",
          "28:             $.ajax(url, {",
          "29:               type: \"POST\",",
          "",
          "[Removed Lines]",
          "26:             var url = \"hawtio-karaf-terminal/auth/logout/\";",
          "",
          "[Added Lines]",
          "29:             var url = Gogo.context + \"/auth/logout/\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "81:           var authHeader = Core.getBasicAuthHeader(userDetails.username, userDetails.password);",
          "85:           $.ajax(url, {",
          "86:             type: \"POST\",",
          "",
          "[Removed Lines]",
          "83:           var url = \"hawtio-karaf-terminal/auth/login/\";",
          "",
          "[Added Lines]",
          "86:           var url = Gogo.context + \"/auth/login/\";",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "117:       viewRegistry[pluginName] = layoutFull;",
          "122:       workspace.topLevelTabs.push({",
          "",
          "[Removed Lines]",
          "119:       helpRegistry.addUserDoc('Terminal', 'hawtio-karaf-terminal/app/doc/help.md');",
          "",
          "[Added Lines]",
          "122:       helpRegistry.addUserDoc('Terminal', Gogo.context + '/app/doc/help.md');",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "134:       link.attr({",
          "135:         rel: 'stylesheet',",
          "136:         type: 'text/css',",
          "138:       });",
          "140:     });",
          "",
          "[Removed Lines]",
          "137:         href: 'hawtio-karaf-terminal/css/gogo.css'",
          "",
          "[Added Lines]",
          "140:         href: Gogo.context + '/css/gogo.css'",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "154:     }",
          "155:   };",
          "",
          "[Removed Lines]",
          "158: })();",
          "",
          "[Added Lines]",
          "160:   return Gogo;",
          "161: })(Gogo || {});",
          "",
          "---------------"
        ],
        "hawtio-web/src/main/webapp/app/threads/html/index.html||hawtio-web/src/main/webapp/app/threads/html/index.html": [
          "File: hawtio-web/src/main/webapp/app/threads/html/index.html -> hawtio-web/src/main/webapp/app/threads/html/index.html",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:               ng-class=\"selectedFilterClass('NONE')\">",
          "30:             <span class=\"clickable no-fade total\">Total:</span> {{unfilteredThreads.length}}",
          "31:           </li>",
          "33:               ng-click=\"filterOn(state)\"",
          "34:               title=\"Filter by {{state}}\"",
          "35:               ng-class=\"selectedFilterClass(state)\">",
          "",
          "[Removed Lines]",
          "32:           <li ng-repeat=\"(state, total) in totals\"",
          "",
          "[Added Lines]",
          "32:           <li ng-repeat=\"(state, total) in totals track by $index\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}