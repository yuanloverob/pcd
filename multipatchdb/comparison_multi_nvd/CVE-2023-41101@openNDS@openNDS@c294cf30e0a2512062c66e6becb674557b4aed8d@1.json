{
  "cve_id": "CVE-2023-41101",
  "cve_desc": "An issue was discovered in the captive portal in OpenNDS before version 10.1.3. get_query in http_microhttpd.c does not validate the length of the query string of GET requests. This leads to a stack-based buffer overflow in versions 9.x and earlier, and to a heap-based buffer overflow in versions 10.x and later. Attackers may exploit the issue to crash OpenNDS (Denial-of-Service condition) or to inject and execute arbitrary bytecode (Remote Code Execution). Affected OpenNDS before version 10.1.3 fixed in OpenWrt master and OpenWrt 23.05 on 23. November by updating OpenNDS to version 10.2.0.",
  "repo": "openNDS/openNDS",
  "patch_hash": "c294cf30e0a2512062c66e6becb674557b4aed8d",
  "patch_info": {
    "commit_hash": "c294cf30e0a2512062c66e6becb674557b4aed8d",
    "repo": "openNDS/openNDS",
    "commit_url": "https://github.com/openNDS/openNDS/commit/c294cf30e0a2512062c66e6becb674557b4aed8d",
    "files": [
      "src/http_microhttpd.c"
    ],
    "message": "Fix - Buffer overflow causing segfault - CVE-2023-41101\n\nSigned-off-by: Rob White <rob@blue-wave.net>",
    "before_after_code_files": [
      "src/http_microhttpd.c||src/http_microhttpd.c"
    ]
  },
  "patch_diff": {
    "src/http_microhttpd.c||src/http_microhttpd.c": [
      "File: src/http_microhttpd.c -> src/http_microhttpd.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "977:  int ret;",
      "978:  struct MHD_Response *response;",
      "1043:  }",
      "1044: }",
      "",
      "[Removed Lines]",
      "980:  preauthpath = safe_calloc(SMALL_BUF);",
      "981:  safe_asprintf(&preauthpath, \"/%s/\", config->preauthdir);",
      "983:  if (strcmp(preauthpath, config->fas_path) == 0) {",
      "984:   free (preauthpath);",
      "986:   user_agent = safe_calloc(USER_AGENT);",
      "987:   enc_user_agent = safe_calloc(ENC_USER_AGENT);",
      "989:   MHD_get_connection_values(connection, MHD_HEADER_KIND, get_user_agent_callback, &user_agent);",
      "991:   if (user_agent == NULL) {",
      "992:    return send_error(connection, 403);",
      "993:   }",
      "995:   uh_urlencode(enc_user_agent, ENC_USER_AGENT, user_agent, strlen(user_agent));",
      "996:   debug(LOG_DEBUG, \"PreAuth: Encoded User Agent is [ %s ]\", enc_user_agent);",
      "998:   enc_query = safe_calloc(ENC_QUERYSTR);",
      "999:   uh_urlencode(enc_query, ENC_QUERYSTR, query, strlen(query));",
      "1000:   debug(LOG_DEBUG, \"PreAuth: Encoded query: %s\", enc_query);",
      "1002:   msg = safe_calloc(HTMLMAXSIZE);",
      "1004:   if (!msg) {",
      "1005:    ret = send_error(connection, 503);",
      "1006:    free(msg);",
      "1007:    free(enc_user_agent);",
      "1008:    free(enc_query);",
      "1009:    return ret;",
      "1010:   }",
      "1012:   cmd = safe_calloc(QUERYMAXLEN);",
      "1013:   safe_asprintf(&cmd, \"%s '%s' '%s' '%d' '%s'\", config->preauth, enc_query, enc_user_agent, config->login_option_enabled, config->themespec_path);",
      "1014:   rc = execute_ret_url_encoded(msg, HTMLMAXSIZE - 1, cmd);",
      "1015:   free(cmd);",
      "1017:   if (rc != 0) {",
      "1018:    debug(LOG_WARNING, \"Preauth script - failed to execute: %s, Query[%s]\", config->preauth, query);",
      "1019:    free(msg);",
      "1020:    free(enc_user_agent);",
      "1021:    free(enc_query);",
      "1023:    return send_error(connection, 511);",
      "1024:   }",
      "1027:   response = MHD_create_response_from_buffer(strlen(msg), (char *)msg, MHD_RESPMEM_MUST_FREE);",
      "1029:   if (!response) {",
      "1030:    return send_error(connection, 503);",
      "1031:   }",
      "1033:   MHD_add_response_header(response, \"Content-Type\", \"text/html; charset=utf-8\");",
      "1034:   ret = MHD_queue_response(connection, MHD_HTTP_OK, response);",
      "1035:   MHD_destroy_response(response);",
      "1037:   free(enc_user_agent);",
      "1038:   free(enc_query);",
      "1039:   return ret;",
      "1040:  } else {",
      "1041:   free (preauthpath);",
      "1042:   return send_error(connection, 404);",
      "",
      "[Added Lines]",
      "982:  if ( strlen(query) < 1 ) {",
      "984:   return send_error(connection, 511);",
      "985:  } else {",
      "986:   preauthpath = safe_calloc(SMALL_BUF);",
      "987:   safe_asprintf(&preauthpath, \"/%s/\", config->preauthdir);",
      "989:   if (strcmp(preauthpath, config->fas_path) == 0) {",
      "990:    free (preauthpath);",
      "992:    user_agent = safe_calloc(USER_AGENT);",
      "993:    debug(LOG_DEBUG, \"PreAuth: User Agent ptr is [ %d ]\", &user_agent);",
      "994:    enc_user_agent = safe_calloc(ENC_USER_AGENT);",
      "996:    MHD_get_connection_values(connection, MHD_HEADER_KIND, get_user_agent_callback, &user_agent);",
      "997:    debug(LOG_DEBUG, \"PreAuth: MHD User Agent ptr is [ %d ]\", &user_agent);",
      "999:    if (user_agent == NULL) {",
      "1000:     return send_error(connection, 403);",
      "1001:    }",
      "1003:    uh_urlencode(enc_user_agent, ENC_USER_AGENT, user_agent, strlen(user_agent));",
      "1004:    debug(LOG_DEBUG, \"PreAuth: Encoded User Agent is [ %s ]\", enc_user_agent);",
      "1006:    enc_query = safe_calloc(ENC_QUERYSTR);",
      "1007:    uh_urlencode(enc_query, ENC_QUERYSTR, query, strlen(query));",
      "1008:    debug(LOG_DEBUG, \"PreAuth: Encoded query: %s\", enc_query);",
      "1010:    msg = safe_calloc(HTMLMAXSIZE);",
      "1012:    if (!msg) {",
      "1013:     ret = send_error(connection, 503);",
      "1014:     free(msg);",
      "1015:     free(enc_user_agent);",
      "1016:     free(enc_query);",
      "1017:     return ret;",
      "1018:    }",
      "1020:    cmd = safe_calloc(QUERYMAXLEN);",
      "1021:    safe_asprintf(&cmd, \"%s '%s' '%s' '%d' '%s'\", config->preauth, enc_query, enc_user_agent, config->login_option_enabled, config->themespec_path);",
      "1022:    rc = execute_ret_url_encoded(msg, HTMLMAXSIZE - 1, cmd);",
      "1023:    free(cmd);",
      "1025:    if (rc != 0) {",
      "1026:     debug(LOG_WARNING, \"Preauth script - failed to execute: %s, Query[%s]\", config->preauth, query);",
      "1027:     free(msg);",
      "1028:     free(enc_user_agent);",
      "1029:     free(enc_query);",
      "1031:     return send_error(connection, 511);",
      "1032:    }",
      "1035:    response = MHD_create_response_from_buffer(strlen(msg), (char *)msg, MHD_RESPMEM_MUST_FREE);",
      "1037:    if (!response) {",
      "1038:     return send_error(connection, 503);",
      "1039:    }",
      "1041:    MHD_add_response_header(response, \"Content-Type\", \"text/html; charset=utf-8\");",
      "1042:    ret = MHD_queue_response(connection, MHD_HTTP_OK, response);",
      "1043:    MHD_destroy_response(response);",
      "1045:    free(enc_user_agent);",
      "1046:    free(enc_query);",
      "1047:    return ret;",
      "1048:   } else {",
      "1049:    free (preauthpath);",
      "1050:    return send_error(connection, 404);",
      "1051:   }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1740:  char *query_str;",
      "1741:  struct collect_query collect_query;",
      "1742:  int i;",
      "1744:  int length = 0;",
      "1746:  debug(LOG_DEBUG, \" Getting query, separator is [%s].\", separator);",
      "",
      "[Removed Lines]",
      "1743:  int j;",
      "",
      "[Added Lines]",
      "1753:  int j = 4;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "1768:   if (i > 0) // q=foo&o=bar the '&' need also some space",
      "1769:    length++;",
      "1770:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1781:   debug(LOG_DEBUG, \" cumulative element length is [%d]\", length);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1788:   debug(LOG_DEBUG, \" element [%d] is [%s]\", i, elements[i]);",
      "1797:    }",
      "1802:    strncat(query_str, *query, QUERYMAXLEN - strlen(query_str));",
      "1803:   } else {",
      "1805:   }",
      "1807:   free(elements[i]);",
      "",
      "[Removed Lines]",
      "1790:   strncpy(*query + j, elements[i], length - j);",
      "1791:   if (i == 0) {",
      "1793:    strcpy(query_str, \"?\");",
      "1794:   } else {",
      "1795:    if (QUERYMAXLEN - strlen(query_str) > length - j + 1) {",
      "1796:     strncat(query_str, separator, QUERYMAXLEN - strlen(query_str));",
      "1798:   }",
      "1801:   if (QUERYMAXLEN - strlen(query_str) > length - j) {",
      "1804:    debug(LOG_WARNING, \" Query string exceeds the maximum of %d bytes so has been truncated.\", QUERYMAXLEN/2);",
      "",
      "[Added Lines]",
      "1802:   if (length + j < QUERYMAXLEN) {",
      "1804:    strncpy(*query + j, elements[i], length - j);",
      "1806:    if (i == 0) {",
      "1808:     strcpy(query_str, \"?\");",
      "1809:    } else {",
      "1810:     if (QUERYMAXLEN - strlen(query_str) > length - j + 1) {",
      "1811:      strncat(query_str, separator, QUERYMAXLEN - strlen(query_str));",
      "1812:     }",
      "1817:    debug(LOG_WARNING, \" Query string is too long, invalid or corrupt so is ignored.\");",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2a8f4f7f8014f2582efff0331094ac07f5f2216b",
      "candidate_info": {
        "commit_hash": "2a8f4f7f8014f2582efff0331094ac07f5f2216b",
        "repo": "openNDS/openNDS",
        "commit_url": "https://github.com/openNDS/openNDS/commit/2a8f4f7f8014f2582efff0331094ac07f5f2216b",
        "files": [
          "src/main.c"
        ],
        "message": "Fix - memory leak after starting authmon daemon\n\nSigned-off-by: Rob White <rob@blue-wave.net>",
        "before_after_code_files": [
          "src/main.c||src/main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/openNDS/openNDS/pull/507"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/main.c||src/main.c": [
          "File: src/main.c -> src/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "775:    debug(LOG_DEBUG, \"authmon startup command is: %s\\n\", fasssl);",
          "777:    system(fasssl);",
          "780:    safe_asprintf(&fasssl,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "778:    free(fasssl);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ca2fc9f3f80e2ba5f121e82e2750162f95a4c3d8",
      "candidate_info": {
        "commit_hash": "ca2fc9f3f80e2ba5f121e82e2750162f95a4c3d8",
        "repo": "openNDS/openNDS",
        "commit_url": "https://github.com/openNDS/openNDS/commit/ca2fc9f3f80e2ba5f121e82e2750162f95a4c3d8",
        "files": [
          "community/themespec/theme_voucher/theme_voucher.sh"
        ],
        "message": "Fix - Community themespec: voucher - css and logo image\n\nSigned-off-by: Rob White <rob@blue-wave.net>",
        "before_after_code_files": [
          "community/themespec/theme_voucher/theme_voucher.sh||community/themespec/theme_voucher/theme_voucher.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/openNDS/openNDS/pull/507"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "community/themespec/theme_voucher/theme_voucher.sh||community/themespec/theme_voucher/theme_voucher.sh": [
          "File: community/themespec/theme_voucher/theme_voucher.sh -> community/themespec/theme_voucher/theme_voucher.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: header() {",
          "21: # Define a common header html for every page served",
          "22:  echo \"<!DOCTYPE html>",
          "23:   <html>",
          "24:   <head>",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22:  gatewayurl=$(printf \"${gatewayurl//%/\\\\x}\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:   <hr>",
          "45:   <div style=\\\"font-size:0.5em;\\\">",
          "46:    <br>",
          "48:    &copy; Portal: BlueWave Projects and Services 2015 - $year<br>",
          "49:    <br>",
          "50:    Portal Version: $version",
          "",
          "[Removed Lines]",
          "47:    <img style=\\\"height:60px; width:60px; float:left;\\\" src=\\\"$imagepath\\\" alt=\\\"Splash Page: For access to the Internet.\\\">",
          "",
          "[Added Lines]",
          "48:    <img style=\\\"height:60px; width:60px; float:left;\\\" src=\\\"$gatewayurl\"\"$imagepath\\\" alt=\\\"Splash Page: For access to the Internet.\\\">",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2cb0c1be73a92db79d058aa181c260d6509b8e1e",
      "candidate_info": {
        "commit_hash": "2cb0c1be73a92db79d058aa181c260d6509b8e1e",
        "repo": "openNDS/openNDS",
        "commit_url": "https://github.com/openNDS/openNDS/commit/2cb0c1be73a92db79d058aa181c260d6509b8e1e",
        "files": [
          "src/http_microhttpd.c"
        ],
        "message": "Fix - memory leak in encode_and_redirect_to_splashpage\n\nSigned-off-by: Rob White <rob@blue-wave.net>",
        "before_after_code_files": [
          "src/http_microhttpd.c||src/http_microhttpd.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/openNDS/openNDS/pull/507"
        ],
        "olp_code_files": {
          "patch": [
            "src/http_microhttpd.c||src/http_microhttpd.c"
          ],
          "candidate": [
            "src/http_microhttpd.c||src/http_microhttpd.c"
          ]
        }
      },
      "candidate_diff": {
        "src/http_microhttpd.c||src/http_microhttpd.c": [
          "File: src/http_microhttpd.c -> src/http_microhttpd.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1297:   if (config->fas_secure_enabled == 0) {",
          "1299:     config->fas_url, config->gw_address, config->authdir, querystr);",
          "1300:   } else if (config->fas_secure_enabled >= 1) {",
          "1302:      config->fas_url, querystr);",
          "1303:   } else {",
          "1305:     config->fas_url, querystr);",
          "1306:   }",
          "1307:  }",
          "",
          "[Removed Lines]",
          "1298:    safe_asprintf(&splashpageurl, \"%s?authaction=http://%s/%s/%s\",",
          "1301:     safe_asprintf(&splashpageurl, \"%s%s\",",
          "1304:    safe_asprintf(&splashpageurl, \"%s?%s\",",
          "",
          "[Added Lines]",
          "1298:    safe_snprintf(splashpageurl, QUERYMAXLEN, \"%s?authaction=http://%s/%s/%s\",",
          "1301:     safe_snprintf(splashpageurl, QUERYMAXLEN, \"%s%s\",",
          "1304:    safe_snprintf(splashpageurl, QUERYMAXLEN, \"%s?%s\",",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f4e41f82632dd35e2595152e18ce4e057f3ee9f9",
      "candidate_info": {
        "commit_hash": "f4e41f82632dd35e2595152e18ce4e057f3ee9f9",
        "repo": "openNDS/openNDS",
        "commit_url": "https://github.com/openNDS/openNDS/commit/f4e41f82632dd35e2595152e18ce4e057f3ee9f9",
        "files": [
          "src/main.c"
        ],
        "message": "Fix - missing free for mark_auth\n\nSigned-off-by: Rob White <rob@blue-wave.net>",
        "before_after_code_files": [
          "src/main.c||src/main.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/openNDS/openNDS/pull/507"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/main.c||src/main.c": [
          "File: src/main.c -> src/main.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "315:  debug(LOG_DEBUG, \"Authentication mark: %s\", config->authentication_mark);",
          "316:  free(msg);",
          "317:  free(lib_cmd);",
          "321:  safe_asprintf(&dnscmd, \"/usr/lib/opennds/dnsconfig.sh \\\"revert\\\"\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "318:  free(mark_auth);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f2bf47e53714ab17d3752f5f43209c129c9dc733",
      "candidate_info": {
        "commit_hash": "f2bf47e53714ab17d3752f5f43209c129c9dc733",
        "repo": "openNDS/openNDS",
        "commit_url": "https://github.com/openNDS/openNDS/commit/f2bf47e53714ab17d3752f5f43209c129c9dc733",
        "files": [
          "forward_authentication_service/PreAuth/theme_click-to-continue-basic.sh",
          "forward_authentication_service/PreAuth/theme_click-to-continue-custom-placeholders.sh",
          "forward_authentication_service/PreAuth/theme_user-email-login-basic.sh",
          "forward_authentication_service/PreAuth/theme_user-email-login-custom-placeholders.sh"
        ],
        "message": "Fix - ThemeSpec: path to logo in page footer\n\nSigned-off-by: Rob White <rob@blue-wave.net>",
        "before_after_code_files": [
          "forward_authentication_service/PreAuth/theme_click-to-continue-basic.sh||forward_authentication_service/PreAuth/theme_click-to-continue-basic.sh",
          "forward_authentication_service/PreAuth/theme_click-to-continue-custom-placeholders.sh||forward_authentication_service/PreAuth/theme_click-to-continue-custom-placeholders.sh",
          "forward_authentication_service/PreAuth/theme_user-email-login-basic.sh||forward_authentication_service/PreAuth/theme_user-email-login-basic.sh",
          "forward_authentication_service/PreAuth/theme_user-email-login-custom-placeholders.sh||forward_authentication_service/PreAuth/theme_user-email-login-custom-placeholders.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/openNDS/openNDS/pull/507"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "forward_authentication_service/PreAuth/theme_click-to-continue-basic.sh||forward_authentication_service/PreAuth/theme_click-to-continue-basic.sh": [
          "File: forward_authentication_service/PreAuth/theme_click-to-continue-basic.sh -> forward_authentication_service/PreAuth/theme_click-to-continue-basic.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:   <hr>",
          "48:   <div style=\\\"font-size:0.5em;\\\">",
          "49:    <br>",
          "51:    &copy; Portal: BlueWave Projects and Services 2015 - $year<br>",
          "52:    <br>",
          "53:    Portal Version: $version",
          "",
          "[Removed Lines]",
          "50:    <img style=\\\"height:60px; width:60px; float:left;\\\" src=\\\"$gatewayurl/$imagepath\\\" alt=\\\"Splash Page: For access to the Internet.\\\">",
          "",
          "[Added Lines]",
          "50:    <img style=\\\"height:60px; width:60px; float:left;\\\" src=\\\"$gatewayurl\"\"$imagepath\\\" alt=\\\"Splash Page: For access to the Internet.\\\">",
          "",
          "---------------"
        ],
        "forward_authentication_service/PreAuth/theme_click-to-continue-custom-placeholders.sh||forward_authentication_service/PreAuth/theme_click-to-continue-custom-placeholders.sh": [
          "File: forward_authentication_service/PreAuth/theme_click-to-continue-custom-placeholders.sh -> forward_authentication_service/PreAuth/theme_click-to-continue-custom-placeholders.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "67:   <hr>",
          "68:   <div style=\\\"font-size:0.5em;\\\">",
          "69:    <br>",
          "71:    &copy; Portal: BlueWave Projects and Services 2015 - $year<br>",
          "72:    <br>",
          "73:    Portal Version: $version",
          "",
          "[Removed Lines]",
          "70:    <img style=\\\"height:60px; width:60px; float:left;\\\" src=\\\"$gatewayurl/$imagepath\\\" alt=\\\"Splash Page: For access to the Internet.\\\">",
          "",
          "[Added Lines]",
          "70:    <img style=\\\"height:60px; width:60px; float:left;\\\" src=\\\"$gatewayurl\"\"$imagepath\\\" alt=\\\"Splash Page: For access to the Internet.\\\">",
          "",
          "---------------"
        ],
        "forward_authentication_service/PreAuth/theme_user-email-login-basic.sh||forward_authentication_service/PreAuth/theme_user-email-login-basic.sh": [
          "File: forward_authentication_service/PreAuth/theme_user-email-login-basic.sh -> forward_authentication_service/PreAuth/theme_user-email-login-basic.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:   <hr>",
          "48:   <div style=\\\"font-size:0.5em;\\\">",
          "49:    <br>",
          "51:    &copy; Portal: BlueWave Projects and Services 2015 - $year<br>",
          "52:    <br>",
          "53:    Portal Version: $version",
          "",
          "[Removed Lines]",
          "50:    <img style=\\\"height:60px; width:60px; float:left;\\\" src=\\\"$gatewayurl/$imagepath\\\" alt=\\\"Splash Page: For access to the Internet.\\\">",
          "",
          "[Added Lines]",
          "50:    <img style=\\\"height:60px; width:60px; float:left;\\\" src=\\\"$gatewayurl\"\"$imagepath\\\" alt=\\\"Splash Page: For access to the Internet.\\\">",
          "",
          "---------------"
        ],
        "forward_authentication_service/PreAuth/theme_user-email-login-custom-placeholders.sh||forward_authentication_service/PreAuth/theme_user-email-login-custom-placeholders.sh": [
          "File: forward_authentication_service/PreAuth/theme_user-email-login-custom-placeholders.sh -> forward_authentication_service/PreAuth/theme_user-email-login-custom-placeholders.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "68:   <hr>",
          "69:   <div style=\\\"font-size:0.5em;\\\">",
          "70:    <br>",
          "72:    &copy; Portal: BlueWave Projects and Services 2015 - $year<br>",
          "73:    <br>",
          "74:    Portal Version: $version",
          "",
          "[Removed Lines]",
          "71:    <img style=\\\"height:60px; width:60px; float:left;\\\" src=\\\"$gatewayurl/$imagepath\\\" alt=\\\"Splash Page: For access to the Internet.\\\">",
          "",
          "[Added Lines]",
          "71:    <img style=\\\"height:60px; width:60px; float:left;\\\" src=\\\"$gatewayurl\"\"$imagepath\\\" alt=\\\"Splash Page: For access to the Internet.\\\">",
          "",
          "---------------"
        ]
      }
    }
  ]
}