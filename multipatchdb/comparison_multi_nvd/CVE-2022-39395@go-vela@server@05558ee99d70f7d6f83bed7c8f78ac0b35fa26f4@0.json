{
  "cve_id": "CVE-2022-39395",
  "cve_desc": "Vela is a Pipeline Automation (CI/CD) framework built on Linux container technology written in Golang. In Vela Server and Vela Worker prior to version 0.16.0 and Vela UI prior to version 0.17.0, some default configurations for Vela allow exploitation and container breakouts. Users should upgrade to Server 0.16.0, Worker 0.16.0, and UI 0.17.0 to fix the issue. After upgrading, Vela administrators will need to explicitly change the default settings to configure Vela as desired. Some of the fixes will interrupt existing workflows and will require Vela administrators to modify default settings. However, not applying the patch (or workarounds) will continue existing risk exposure. Some workarounds are available. Vela administrators can adjust the worker's `VELA_RUNTIME_PRIVILEGED_IMAGES` setting to be explicitly empty, leverage the `VELA_REPO_ALLOWLIST` setting on the server component to restrict access to a list of repositories that are allowed to be enabled, and/or audit enabled repositories and disable pull_requests if they are not needed.",
  "repo": "go-vela/server",
  "patch_hash": "05558ee99d70f7d6f83bed7c8f78ac0b35fa26f4",
  "patch_info": {
    "commit_hash": "05558ee99d70f7d6f83bed7c8f78ac0b35fa26f4",
    "repo": "go-vela/server",
    "commit_url": "https://github.com/go-vela/server/commit/05558ee99d70f7d6f83bed7c8f78ac0b35fa26f4",
    "files": [
      "api/repo.go"
    ],
    "message": "Merge pull request from GHSA-5m7g-pj8w-7593\n\n* fix(allowlist)!: modify repo allowlist behavior\n\n* setting allow pull to false on create repo endpoint by default\n\nCo-authored-by: ecrupper <easton.crupper12@gmail.com>",
    "before_after_code_files": [
      "api/repo.go||api/repo.go"
    ]
  },
  "patch_diff": {
    "api/repo.go||api/repo.go": [
      "File: api/repo.go -> api/repo.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "153:  if !input.GetAllowPull() && !input.GetAllowPush() &&",
      "154:   !input.GetAllowDeploy() && !input.GetAllowTag() &&",
      "155:   !input.GetAllowComment() {",
      "158:   r.SetAllowPush(true)",
      "159:  } else {",
      "160:   r.SetAllowComment(input.GetAllowComment())",
      "",
      "[Removed Lines]",
      "157:   r.SetAllowPull(true)",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "1044: }",
      "1049: func checkAllowlist(r *library.Repo, allowlist []string) bool {",
      "1052:   return true",
      "1053:  }",
      "",
      "[Removed Lines]",
      "1051:  if len(allowlist) == 0 {",
      "",
      "[Added Lines]",
      "1051:  if len(allowlist) == 1 && allowlist[0] == \"*\" {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "204a90605a83fe2e6f55a87f1d90a06d6e4251fb",
      "candidate_info": {
        "commit_hash": "204a90605a83fe2e6f55a87f1d90a06d6e4251fb",
        "repo": "go-vela/server",
        "commit_url": "https://github.com/go-vela/server/commit/204a90605a83fe2e6f55a87f1d90a06d6e4251fb",
        "files": [
          "api/repo.go",
          "cmd/vela-server/main.go",
          "cmd/vela-server/server.go",
          "cmd/vela-server/validate.go",
          "router/middleware/default_repo_events.go",
          "router/middleware/default_repo_events_test.go"
        ],
        "message": "enhance(repo): customizable default events for new repos (#758)\n\n* chore: add another test case for substitute\n\n* show failing behavior\n\n* refactor both substitute tests\n\n* remove todo\n\n* address feedback\n\n* add import that goland removed\n\n* goimports\n\n* enhance(repo): customizable default events for new repos\n\n* remove default push\n\n* goimports\n\n---------\n\nCo-authored-by: dave vader <48764154+plyr4@users.noreply.github.com>\nCo-authored-by: David May <1301201+wass3r@users.noreply.github.com>\nCo-authored-by: Jordan Brockopp <jordan.brockopp@target.com>",
        "before_after_code_files": [
          "api/repo.go||api/repo.go",
          "cmd/vela-server/main.go||cmd/vela-server/main.go",
          "cmd/vela-server/server.go||cmd/vela-server/server.go",
          "cmd/vela-server/validate.go||cmd/vela-server/validate.go",
          "router/middleware/default_repo_events.go||router/middleware/default_repo_events.go",
          "router/middleware/default_repo_events_test.go||router/middleware/default_repo_events_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "api/repo.go||api/repo.go"
          ],
          "candidate": [
            "api/repo.go||api/repo.go"
          ]
        }
      },
      "candidate_diff": {
        "api/repo.go||api/repo.go": [
          "File: api/repo.go -> api/repo.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "77:  defaultBuildLimit := c.Value(\"defaultBuildLimit\").(int64)",
          "78:  defaultTimeout := c.Value(\"defaultTimeout\").(int64)",
          "79:  maxBuildLimit := c.Value(\"maxBuildLimit\").(int64)",
          "82:  input := new(library.Repo)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "80:  defaultRepoEvents := c.Value(\"defaultRepoEvents\").([]string)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "161:  if !input.GetAllowPull() && !input.GetAllowPush() &&",
          "162:   !input.GetAllowDeploy() && !input.GetAllowTag() &&",
          "163:   !input.GetAllowComment() {",
          "166:  } else {",
          "167:   r.SetAllowComment(input.GetAllowComment())",
          "168:   r.SetAllowDeploy(input.GetAllowDeploy())",
          "",
          "[Removed Lines]",
          "165:   r.SetAllowPush(true)",
          "",
          "[Added Lines]",
          "165:   for _, event := range defaultRepoEvents {",
          "166:    switch event {",
          "167:    case constants.EventPull:",
          "168:     r.SetAllowPull(true)",
          "169:    case constants.EventPush:",
          "170:     r.SetAllowPush(true)",
          "171:    case constants.EventDeploy:",
          "172:     r.SetAllowDeploy(true)",
          "173:    case constants.EventTag:",
          "174:     r.SetAllowTag(true)",
          "175:    case constants.EventComment:",
          "176:     r.SetAllowComment(true)",
          "177:    }",
          "178:   }",
          "",
          "---------------"
        ],
        "cmd/vela-server/main.go||cmd/vela-server/main.go": [
          "File: cmd/vela-server/main.go -> cmd/vela-server/main.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "112:    Usage:   \"override default build timeout (minutes)\",",
          "113:    Value:   constants.BuildTimeoutDefault,",
          "114:   },",
          "116:   &cli.DurationFlag{",
          "117:    EnvVars: []string{\"VELA_ACCESS_TOKEN_DURATION\", \"ACCESS_TOKEN_DURATION\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "115:   &cli.StringSliceFlag{",
          "116:    EnvVars: []string{\"VELA_DEFAULT_REPO_EVENTS\"},",
          "117:    Name:    \"default-repo-events\",",
          "118:    Usage:   \"override default events for newly activated repositories\",",
          "119:    Value:   cli.NewStringSlice(constants.EventPush),",
          "120:   },",
          "",
          "---------------"
        ],
        "cmd/vela-server/server.go||cmd/vela-server/server.go": [
          "File: cmd/vela-server/server.go -> cmd/vela-server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "100:   middleware.WebhookValidation(!c.Bool(\"vela-disable-webhook-validation\")),",
          "101:   middleware.SecureCookie(c.Bool(\"vela-enable-secure-cookie\")),",
          "102:   middleware.Worker(c.Duration(\"worker-active-interval\")),",
          "103:  )",
          "105:  addr, err := url.Parse(c.String(\"server-addr\"))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "103:   middleware.DefaultRepoEvents(c.StringSlice(\"default-repo-events\")),",
          "",
          "---------------"
        ],
        "cmd/vela-server/validate.go||cmd/vela-server/validate.go": [
          "File: cmd/vela-server/validate.go -> cmd/vela-server/validate.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7: import (",
          "8:  \"fmt\"",
          "9:  \"strings\"",
          "11:  \"github.com/sirupsen/logrus\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9:  \"github.com/go-vela/types/constants\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:   return fmt.Errorf(\"max-build-limit (VELA_MAX_BUILD_LIMIT) flag must be greater than 0\")",
          "79:  }",
          "81:  return nil",
          "82: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:  for _, event := range c.StringSlice(\"default-repo-events\") {",
          "83:   switch event {",
          "84:   case constants.EventPull:",
          "85:   case constants.EventPush:",
          "86:   case constants.EventDeploy:",
          "87:   case constants.EventTag:",
          "88:   case constants.EventComment:",
          "89:   default:",
          "90:    return fmt.Errorf(\"default-repo-events (VELA_DEFAULT_REPO_EVENTS) has the unsupported value of %s\", event)",
          "91:   }",
          "92:  }",
          "",
          "---------------"
        ],
        "router/middleware/default_repo_events.go||router/middleware/default_repo_events.go": [
          "File: router/middleware/default_repo_events.go -> router/middleware/default_repo_events.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: package middleware",
          "7: import (",
          "8:  \"github.com/gin-gonic/gin\"",
          "9: )",
          "13: func DefaultRepoEvents(defaultRepoEvents []string) gin.HandlerFunc {",
          "14:  return func(c *gin.Context) {",
          "15:   c.Set(\"defaultRepoEvents\", defaultRepoEvents)",
          "16:   c.Next()",
          "17:  }",
          "18: }",
          "",
          "---------------"
        ],
        "router/middleware/default_repo_events_test.go||router/middleware/default_repo_events_test.go": [
          "File: router/middleware/default_repo_events_test.go -> router/middleware/default_repo_events_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: package middleware",
          "7: import (",
          "8:  \"net/http\"",
          "9:  \"net/http/httptest\"",
          "10:  \"reflect\"",
          "11:  \"testing\"",
          "13:  \"github.com/go-vela/types/constants\"",
          "15:  \"github.com/gin-gonic/gin\"",
          "16: )",
          "18: func TestMiddleware_DefaultRepoEvents(t *testing.T) {",
          "20:  var got []string",
          "22:  want := []string{constants.EventPush}",
          "25:  gin.SetMode(gin.TestMode)",
          "27:  resp := httptest.NewRecorder()",
          "28:  context, engine := gin.CreateTestContext(resp)",
          "29:  context.Request, _ = http.NewRequest(http.MethodGet, \"/health\", nil)",
          "32:  engine.Use(DefaultRepoEvents(want))",
          "33:  engine.GET(\"/health\", func(c *gin.Context) {",
          "34:   got = c.Value(\"defaultRepoEvents\").([]string)",
          "36:   c.Status(http.StatusOK)",
          "37:  })",
          "40:  engine.ServeHTTP(context.Writer, context.Request)",
          "42:  if resp.Code != http.StatusOK {",
          "43:   t.Errorf(\"DefaultRepoEvents returned %v, want %v\", resp.Code, http.StatusOK)",
          "44:  }",
          "46:  if !reflect.DeepEqual(got, want) {",
          "47:   t.Errorf(\"DefaultRepoEvents is %v, want %v\", got, want)",
          "48:  }",
          "49: }",
          "",
          "---------------"
        ]
      }
    }
  ]
}