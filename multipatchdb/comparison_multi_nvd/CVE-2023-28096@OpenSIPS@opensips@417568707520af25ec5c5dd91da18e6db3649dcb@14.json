{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "34e144783fab7c13bc238cfca9688981c6bf2af4",
      "candidate_info": {
        "commit_hash": "34e144783fab7c13bc238cfca9688981c6bf2af4",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/34e144783fab7c13bc238cfca9688981c6bf2af4",
        "files": [
          "modules/cachedb_redis/cachedb_redis_dbase.c"
        ],
        "message": "[cachedb_redis] Fix merging error on 7cb182de0bf1f31dfe6e697b4321d0b7528268f3",
        "before_after_code_files": [
          "modules/cachedb_redis/cachedb_redis_dbase.c||modules/cachedb_redis/cachedb_redis_dbase.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/cachedb_redis/cachedb_redis_dbase.c||modules/cachedb_redis/cachedb_redis_dbase.c": [
          "File: modules/cachedb_redis/cachedb_redis_dbase.c -> modules/cachedb_redis/cachedb_redis_dbase.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "161:    LM_ERR(\"failed to auth to redis - %.*s\\n\",",
          "162:     rpl?(unsigned)rpl->len:7,rpl?rpl->str:\"FAILURE\");",
          "163:    freeReplyObject(rpl);",
          "167:   }",
          "168:   LM_DBG(\"AUTH [password] -  %.*s\\n\",(unsigned)rpl->len,rpl->str);",
          "169:   freeReplyObject(rpl);",
          "",
          "[Removed Lines]",
          "164:    redisFree(node->context);",
          "165:    node->context = NULL;",
          "166:    return -1;",
          "",
          "[Added Lines]",
          "164:    goto error;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "175:    LM_ERR(\"failed to select database %s - %.*s\\n\",con->id->database,",
          "176:     rpl?(unsigned)rpl->len:7,rpl?rpl->str:\"FAILURE\");",
          "177:    freeReplyObject(rpl);",
          "181:   }",
          "183:   LM_DBG(\"SELECT [%s] - %.*s\\n\",con->id->database,(unsigned)rpl->len,rpl->str);",
          "",
          "[Removed Lines]",
          "178:    redisFree(node->context);",
          "179:    node->context = NULL;",
          "180:    return -1;",
          "",
          "[Added Lines]",
          "176:    goto error;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "192:   tls_api.release_domain(node->tls_dom);",
          "193:   node->tls_dom = NULL;",
          "194:  }",
          "195:  return -1;",
          "196: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "191:  node->context = NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c5708b4c39a79512b7ec37a50ddd20e5f45eeba3",
      "candidate_info": {
        "commit_hash": "c5708b4c39a79512b7ec37a50ddd20e5f45eeba3",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/c5708b4c39a79512b7ec37a50ddd20e5f45eeba3",
        "files": [
          "modules/dialog/dlg_timer.c"
        ],
        "message": "dialog: Fix crash in debugging function (debug_main_timer_list())\n\nDBG:dialog:debug_main_timer_list: testing forward loop with visited = 1\nDBG:dialog:debug_main_timer_list: testing backward loop with visited = 2\nDBG:dialog:insert_dlg_timer_unsafe: inserting 0x7f303dba8d80 for 7205\nDBG:dialog:debug_main_timer_list: testing forward loop with visited = 1\nERROR:dialog:debug_main_timer_list: Detected something wrong with main timer list on forward linking for entry 0x7f303dba8d80\nDBG:core:handle_sigs: OpenSIPS exit status = 134\nINFO:core:handle_sigs: child process 139408 exited by a signal 6\n(cherry picked from commit 4c6a8ec5d4ac6e0faceaa5e0acb6863d992f59a7)",
        "before_after_code_files": [
          "modules/dialog/dlg_timer.c||modules/dialog/dlg_timer.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/dialog/dlg_timer.c||modules/dialog/dlg_timer.c": [
          "File: modules/dialog/dlg_timer.c -> modules/dialog/dlg_timer.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "104: void debug_main_timer_list(void)",
          "105: {",
          "106:  struct dlg_tl *start,*finish;",
          "109:  start = finish = &(d_timer->first);",
          "110:  LM_DBG(\"testing forward loop with visited = %d\\n\",visited);",
          "",
          "[Removed Lines]",
          "107:  int visited=1;",
          "",
          "[Added Lines]",
          "106:  static int visited;",
          "110:  visited++;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "54d8ff7c2342a5264be010511e8612f2a6de181e",
      "candidate_info": {
        "commit_hash": "54d8ff7c2342a5264be010511e8612f2a6de181e",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/54d8ff7c2342a5264be010511e8612f2a6de181e",
        "files": [
          "net/net_tcp.c"
        ],
        "message": "[TCP] fix init TCP support for auto-scalled procs\n\nWhen starting the TCP Main proc, be sure we initialize the MAIN<>Worker communication sockets also for the procs to be potentially scaled in the future.\n`pt[n].unix_sock` is valid only for running procs (not for the \"autoscale to-be\"), so use the `pt[n].tcp_socks_holder[0]` holder (valid for all procs, running or not).\nThanks go to Yury Kirsanov and Slava Bendersky for reporting and helping with the troubleshooting.\n\n(cherry picked from commit d7a4bf8f134d3d2cd761f528e6963445c9ef9b06)",
        "before_after_code_files": [
          "net/net_tcp.c||net/net_tcp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "net/net_tcp.c||net/net_tcp.c": [
          "File: net/net_tcp.c -> net/net_tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1566:  for (n=1; n<counted_max_processes; n++) {",
          "1571:    RCT_PRIO_PROC, &pt[n])<0){",
          "1572:     LM_ERR(\"failed to add process %d (%s) unix socket \"",
          "1573:      \"to the fd list\\n\", n, pt[n].desc);",
          "",
          "[Removed Lines]",
          "1569:   if (n!=process_no && pt[n].unix_sock>0)",
          "1570:    if (reactor_add_reader( pt[n].unix_sock, F_TCP_WORKER,",
          "",
          "[Added Lines]",
          "1569:   if (n!=process_no && pt[n].tcp_socks_holder[0]>0)",
          "1570:    if (reactor_add_reader( pt[n].tcp_socks_holder[0], F_TCP_WORKER,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cf353bf612372f299febc9dd452f3c573d066586",
      "candidate_info": {
        "commit_hash": "cf353bf612372f299febc9dd452f3c573d066586",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/cf353bf612372f299febc9dd452f3c573d066586",
        "files": [
          "modules/mi_script/mi_script.c"
        ],
        "message": "mi_script: fix value of parameters provided through AVP\n\n(cherry picked from commit d6e91459d3fb3fd8e8278561242af56047f51e16)",
        "before_after_code_files": [
          "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c": [
          "File: modules/mi_script/mi_script.c -> modules/mi_script/mi_script.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "160:  mi_request_t *req = NULL;",
          "161:  struct usr_avp *v_avp = NULL;",
          "162:  struct usr_avp *a_avp = NULL;",
          "164:  unsigned int tmp;",
          "165:  cJSON *val;",
          "166:  char *p;",
          "",
          "[Removed Lines]",
          "163:  int_str avp_val;",
          "",
          "[Added Lines]",
          "163:  int_str avp_val, avp_val_v;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "240:   if (vals) {",
          "241:    v_avp = search_first_avp(vals->pvp.pvn.u.isname.type,",
          "243:    if (!v_avp) {",
          "244:     LM_ERR(\"missing attribute\\n\");",
          "245:     goto error;",
          "246:    }",
          "247:    if (a_avp->flags & AVP_VAL_STR)",
          "249:    else",
          "252:    cJSON_AddItemToObject(req->params, avp_val.s.s, val);",
          "253:   } else {",
          "",
          "[Removed Lines]",
          "242:      vals->pvp.pvn.u.isname.name.n, &avp_val, v_avp);",
          "248:     val = cJSON_CreateStr(avp_val.s.s, avp_val.s.len);",
          "250:     val = cJSON_CreateNumber(avp_val.n);",
          "",
          "[Added Lines]",
          "242:      vals->pvp.pvn.u.isname.name.n, &avp_val_v, v_avp);",
          "248:     val = cJSON_CreateStr(avp_val_v.s.s, avp_val_v.s.len);",
          "250:     val = cJSON_CreateNumber(avp_val_v.n);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fa2145b12cb6590e4366cb8a2659b7b79813b374",
      "candidate_info": {
        "commit_hash": "fa2145b12cb6590e4366cb8a2659b7b79813b374",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/fa2145b12cb6590e4366cb8a2659b7b79813b374",
        "files": [
          "modules/b2b_logic/records.c"
        ],
        "message": "b2b_logic: fix possible crash when init_callid_hdr param is set\n\nThe crash would occur if the Call-ID header name is received in compact\nform(\"i\" instead of \"Call-ID\").\n\nThanks to David Escartin from Sonoc for reporting.",
        "before_after_code_files": [
          "modules/b2b_logic/records.c||modules/b2b_logic/records.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_logic/records.c||modules/b2b_logic/records.c": [
          "File: modules/b2b_logic/records.c -> modules/b2b_logic/records.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "917:   len += hdrs[i]->len;",
          "919:  if(init_callid_hdr.len && msg->callid)",
          "922:  if(custom_hdrs && custom_hdrs->s && custom_hdrs->len)",
          "923:  {",
          "",
          "[Removed Lines]",
          "920:   len+= init_callid_hdr.len + msg->callid->len;",
          "",
          "[Added Lines]",
          "920:   len += init_callid_hdr.len +",
          "921:    (int)(msg->callid->name.s+msg->callid->len-msg->callid->body.s) +",
          "",
          "---------------"
        ]
      }
    }
  ]
}