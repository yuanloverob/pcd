{
  "cve_id": "CVE-2018-1000074",
  "cve_desc": "RubyGems version Ruby 2.2 series: 2.2.9 and earlier, Ruby 2.3 series: 2.3.6 and earlier, Ruby 2.4 series: 2.4.3 and earlier, Ruby 2.5 series: 2.5.0 and earlier, prior to trunk revision 62422 contains a Deserialization of Untrusted Data vulnerability in owner command that can result in code execution. This attack appear to be exploitable via victim must run the `gem owner` command on a gem with a specially crafted YAML file. This vulnerability appears to have been fixed in 2.7.6.",
  "repo": "rubygems/rubygems",
  "patch_hash": "254e3d0ee873c008c0b74e8b8abcbdab4caa0a6d",
  "patch_info": {
    "commit_hash": "254e3d0ee873c008c0b74e8b8abcbdab4caa0a6d",
    "repo": "rubygems/rubygems",
    "commit_url": "https://github.com/rubygems/rubygems/commit/254e3d0ee873c008c0b74e8b8abcbdab4caa0a6d",
    "files": [
      "lib/rubygems/commands/owner_command.rb",
      "test/rubygems/test_gem_commands_owner_command.rb"
    ],
    "message": "Fix possible Unsafe Object Deserialization Vulnerability in gem owner",
    "before_after_code_files": [
      "lib/rubygems/commands/owner_command.rb||lib/rubygems/commands/owner_command.rb",
      "test/rubygems/test_gem_commands_owner_command.rb||test/rubygems/test_gem_commands_owner_command.rb"
    ]
  },
  "patch_diff": {
    "lib/rubygems/commands/owner_command.rb||lib/rubygems/commands/owner_command.rb": [
      "File: lib/rubygems/commands/owner_command.rb -> lib/rubygems/commands/owner_command.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "64:     end",
      "66:     with_response response do |resp|",
      "69:       say \"Owners for gem: #{name}\"",
      "70:       owners.each do |owner|",
      "",
      "[Removed Lines]",
      "67:       owners = YAML.load resp.body",
      "",
      "[Added Lines]",
      "67:       owners = Gem::SafeYAML.load resp.body",
      "",
      "---------------"
    ],
    "test/rubygems/test_gem_commands_owner_command.rb||test/rubygems/test_gem_commands_owner_command.rb": [
      "File: test/rubygems/test_gem_commands_owner_command.rb -> test/rubygems/test_gem_commands_owner_command.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: require 'rubygems/test_case'",
      "3: require 'rubygems/commands/owner_command'",
      "5: class TestGemCommandsOwnerCommand < Gem::TestCase",
      "7:   def setup",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5: class Foo",
      "6: end",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "43:     assert_match %r{- 4}, @ui.output",
      "44:   end",
      "46:   def test_show_owners_setting_up_host_through_env_var",
      "47:     response = \"- email: user1@example.com\\n\"",
      "48:     host = \"http://rubygems.example\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "49:   def test_show_owners_dont_load_objects",
      "50:     skip \"testing a psych-only API\" unless defined?(::Psych::DisallowedClass)",
      "52:     response = <<EOF",
      "53: ---",
      "54: - email: !ruby/object:Foo {}",
      "55:   id: 1",
      "56:   handle: user1",
      "57: - email: user2@example.com",
      "58: - id: 3",
      "59:   handle: user3",
      "60: - id: 4",
      "61: EOF",
      "63:     @fetcher.data[\"#{Gem.host}/api/v1/gems/freewill/owners.yaml\"] = [response, 200, 'OK']",
      "65:     assert_raises Psych::DisallowedClass do",
      "66:       use_ui @ui do",
      "67:         @cmd.show_owners(\"freewill\")",
      "68:       end",
      "69:     end",
      "71:   end",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "4751dd48b10cd7275e990c61238877fb184065f4",
      "candidate_info": {
        "commit_hash": "4751dd48b10cd7275e990c61238877fb184065f4",
        "repo": "rubygems/rubygems",
        "commit_url": "https://github.com/rubygems/rubygems/commit/4751dd48b10cd7275e990c61238877fb184065f4",
        "files": [
          "test/rubygems/test_gem_commands_owner_command.rb"
        ],
        "message": "Use ::Object for deserialization test, instead of introducing new constant",
        "before_after_code_files": [
          "test/rubygems/test_gem_commands_owner_command.rb||test/rubygems/test_gem_commands_owner_command.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "test/rubygems/test_gem_commands_owner_command.rb||test/rubygems/test_gem_commands_owner_command.rb"
          ],
          "candidate": [
            "test/rubygems/test_gem_commands_owner_command.rb||test/rubygems/test_gem_commands_owner_command.rb"
          ]
        }
      },
      "candidate_diff": {
        "test/rubygems/test_gem_commands_owner_command.rb||test/rubygems/test_gem_commands_owner_command.rb": [
          "File: test/rubygems/test_gem_commands_owner_command.rb -> test/rubygems/test_gem_commands_owner_command.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: require 'rubygems/test_case'",
          "3: require 'rubygems/commands/owner_command'",
          "8: class TestGemCommandsOwnerCommand < Gem::TestCase",
          "10:   def setup",
          "",
          "[Removed Lines]",
          "5: class Foo",
          "6: end",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "52:     response = <<EOF",
          "53: ---",
          "55:   id: 1",
          "56:   handle: user1",
          "57: - email: user2@example.com",
          "",
          "[Removed Lines]",
          "54: - email: !ruby/object:Foo {}",
          "",
          "[Added Lines]",
          "51: - email: !ruby/object:Object {}",
          "",
          "---------------"
        ]
      }
    }
  ]
}