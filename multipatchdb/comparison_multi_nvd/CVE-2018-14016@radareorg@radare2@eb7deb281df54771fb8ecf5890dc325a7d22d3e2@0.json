{
  "cve_id": "CVE-2018-14016",
  "cve_desc": "The r_bin_mdmp_init_directory_entry function in mdmp.c in radare2 2.7.0 allows remote attackers to cause a denial of service (heap-based buffer over-read and application crash) via a crafted Mini Crash Dump file.",
  "repo": "radareorg/radare2",
  "patch_hash": "eb7deb281df54771fb8ecf5890dc325a7d22d3e2",
  "patch_info": {
    "commit_hash": "eb7deb281df54771fb8ecf5890dc325a7d22d3e2",
    "repo": "radareorg/radare2",
    "commit_url": "https://github.com/radareorg/radare2/commit/eb7deb281df54771fb8ecf5890dc325a7d22d3e2",
    "files": [
      "libr/bin/format/mdmp/mdmp.c"
    ],
    "message": "Fix #10464 - oobread crash in mdmp (#10683)",
    "before_after_code_files": [
      "libr/bin/format/mdmp/mdmp.c||libr/bin/format/mdmp/mdmp.c"
    ]
  },
  "patch_diff": {
    "libr/bin/format/mdmp/mdmp.c||libr/bin/format/mdmp/mdmp.c": [
      "File: libr/bin/format/mdmp/mdmp.c -> libr/bin/format/mdmp/mdmp.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "364:  if (entry->location.rva + entry->location.data_size > obj->b->length) {",
      "366:   return false;",
      "367:  }",
      "",
      "[Removed Lines]",
      "365:   eprintf(\"[ERROR] Size Mismatch - Stream data is larger than file size!\\n\");",
      "",
      "[Added Lines]",
      "365:   eprintf (\"[ERROR] Size Mismatch - Stream data is larger than file size!\\n\");",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "647: static bool r_bin_mdmp_init_directory(struct r_bin_mdmp_obj *obj) {",
      "648:  int i;",
      "654:  sdb_num_set (obj->kv, \"mdmp_directory.offset\",",
      "655:    obj->hdr->stream_directory_rva, 0);",
      "",
      "[Removed Lines]",
      "649:  ut8 *directory_base;",
      "650:  struct minidump_directory *entry;",
      "652:  directory_base = obj->b->buf + obj->hdr->stream_directory_rva;",
      "",
      "[Added Lines]",
      "649:  struct minidump_directory entry;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "658:    \"(mdmp_location_descriptor)Location\", 0);",
      "661:  for (i = 0; i < (int)obj->hdr->number_of_streams; i++) {",
      "664:  }",
      "666:  return true;",
      "",
      "[Removed Lines]",
      "662:   entry = (struct minidump_directory *)(directory_base + (i * sizeof (struct minidump_directory)));",
      "663:   r_bin_mdmp_init_directory_entry (obj, entry);",
      "",
      "[Added Lines]",
      "658:  ut64 rvadir = obj->hdr->stream_directory_rva;",
      "660:   ut32 delta = i * sizeof (struct minidump_directory);",
      "661:   int r = r_buf_read_at (obj->b, rvadir + delta, (ut8*) &entry, sizeof (struct minidump_directory));",
      "662:   if (r) {",
      "663:    r_bin_mdmp_init_directory_entry (obj, &entry);",
      "664:   }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "533da1306534ece22d67eaa3c32e46b717cd9199",
      "candidate_info": {
        "commit_hash": "533da1306534ece22d67eaa3c32e46b717cd9199",
        "repo": "radareorg/radare2",
        "commit_url": "https://github.com/radareorg/radare2/commit/533da1306534ece22d67eaa3c32e46b717cd9199",
        "files": [
          "libr/bin/format/mdmp/mdmp.c"
        ],
        "message": "Fix #11554, by checking the return code of r_bin_mdmp_init_directory_entry (#11565)\n\nAnd do not return false on mdmp stream type we do not handle yet,\nsince this is neither future-proof nor what the norm\nrecommend, cf https://docs.microsoft.com/fr-fr/windows/desktop/api/minidumpapiset/ne-minidumpapiset-_minidump_stream_type",
        "before_after_code_files": [
          "libr/bin/format/mdmp/mdmp.c||libr/bin/format/mdmp/mdmp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "libr/bin/format/mdmp/mdmp.c||libr/bin/format/mdmp/mdmp.c"
          ],
          "candidate": [
            "libr/bin/format/mdmp/mdmp.c||libr/bin/format/mdmp/mdmp.c"
          ]
        }
      },
      "candidate_diff": {
        "libr/bin/format/mdmp/mdmp.c||libr/bin/format/mdmp/mdmp.c": [
          "File: libr/bin/format/mdmp/mdmp.c -> libr/bin/format/mdmp/mdmp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "700:   break;",
          "701:  default:",
          "702:   eprintf (\"[WARN] Invalid or unsupported enumeration encountered %i\\n\", entry->stream_type);",
          "704:  }",
          "705:  return true;",
          "706: }",
          "",
          "[Removed Lines]",
          "703:   return false;",
          "",
          "[Added Lines]",
          "703:   break;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "721:   ut32 delta = i * sizeof (struct minidump_directory);",
          "722:   int r = r_buf_read_at (obj->b, rvadir + delta, (ut8*) &entry, sizeof (struct minidump_directory));",
          "723:   if (r) {",
          "725:   }",
          "726:  }",
          "",
          "[Removed Lines]",
          "724:    r_bin_mdmp_init_directory_entry (obj, &entry);",
          "",
          "[Added Lines]",
          "724:    if (!r_bin_mdmp_init_directory_entry (obj, &entry)) {",
          "725:     return false;",
          "726:    }",
          "",
          "---------------"
        ]
      }
    }
  ]
}