{
  "cve_id": "CVE-2023-2251",
  "cve_desc": "Uncaught Exception in GitHub repository eemeli/yaml prior to 2.0.0-5.",
  "repo": "eemeli/yaml",
  "patch_hash": "984f5781ffd807e58cad3b5c8da1f940dab75fba",
  "patch_info": {
    "commit_hash": "984f5781ffd807e58cad3b5c8da1f940dab75fba",
    "repo": "eemeli/yaml",
    "commit_url": "https://github.com/eemeli/yaml/commit/984f5781ffd807e58cad3b5c8da1f940dab75fba",
    "files": [
      "src/errors.ts",
      "tests/doc/errors.js"
    ],
    "message": "fix: Corner case failure in error pretty-printer",
    "before_after_code_files": [
      "src/errors.ts||src/errors.ts"
    ]
  },
  "patch_diff": {
    "src/errors.ts||src/errors.ts": [
      "File: src/errors.ts -> src/errors.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "91:       let count = 1",
      "92:       const end = error.linePos[1]",
      "93:       if (end && end.line === line && end.col > col) {",
      "95:       }",
      "96:       const pointer = ' '.repeat(ci) + '^'.repeat(count)",
      "97:       error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`",
      "",
      "[Removed Lines]",
      "94:         count = Math.min(end.col - col, 80 - ci)",
      "",
      "[Added Lines]",
      "94:         count = Math.max(1, Math.min(end.col - col, 80 - ci))",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "984f5781ffd807e58cad3b5c8da1f940dab75fba",
      "candidate_info": {
        "commit_hash": "984f5781ffd807e58cad3b5c8da1f940dab75fba",
        "repo": "eemeli/yaml",
        "commit_url": "https://github.com/eemeli/yaml/commit/984f5781ffd807e58cad3b5c8da1f940dab75fba",
        "files": [
          "src/errors.ts",
          "tests/doc/errors.js"
        ],
        "message": "fix: Corner case failure in error pretty-printer",
        "before_after_code_files": [
          "src/errors.ts||src/errors.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/errors.ts||src/errors.ts"
          ],
          "candidate": [
            "src/errors.ts||src/errors.ts"
          ]
        }
      },
      "candidate_diff": {
        "src/errors.ts||src/errors.ts": [
          "File: src/errors.ts -> src/errors.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "91:       let count = 1",
          "92:       const end = error.linePos[1]",
          "93:       if (end && end.line === line && end.col > col) {",
          "95:       }",
          "96:       const pointer = ' '.repeat(ci) + '^'.repeat(count)",
          "97:       error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`",
          "",
          "[Removed Lines]",
          "94:         count = Math.min(end.col - col, 80 - ci)",
          "",
          "[Added Lines]",
          "94:         count = Math.max(1, Math.min(end.col - col, 80 - ci))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a67a019afe9c8f785fdfd6255b6b69d97a8bd385",
      "candidate_info": {
        "commit_hash": "a67a019afe9c8f785fdfd6255b6b69d97a8bd385",
        "repo": "eemeli/yaml",
        "commit_url": "https://github.com/eemeli/yaml/commit/a67a019afe9c8f785fdfd6255b6b69d97a8bd385",
        "files": [
          "src/errors.ts",
          "tests/doc/errors.ts"
        ],
        "message": "fix: Corner case failure in error pretty-printer",
        "before_after_code_files": [
          "src/errors.ts||src/errors.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/errors.ts||src/errors.ts"
          ],
          "candidate": [
            "src/errors.ts||src/errors.ts"
          ]
        }
      },
      "candidate_diff": {
        "src/errors.ts||src/errors.ts": [
          "File: src/errors.ts -> src/errors.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "91:       let count = 1",
          "92:       const end = error.linePos[1]",
          "93:       if (end && end.line === line && end.col > col) {",
          "95:       }",
          "96:       const pointer = ' '.repeat(ci) + '^'.repeat(count)",
          "97:       error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`",
          "",
          "[Removed Lines]",
          "94:         count = Math.min(end.col - col, 80 - ci)",
          "",
          "[Added Lines]",
          "94:         count = Math.max(1, Math.min(end.col - col, 80 - ci))",
          "",
          "---------------"
        ]
      }
    }
  ]
}