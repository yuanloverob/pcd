{
  "cve_id": "CVE-2023-26144",
  "cve_desc": "Versions of the package graphql from 16.3.0 and before 16.8.1 are vulnerable to Denial of Service (DoS) due to insufficient checks in the OverlappingFieldsCanBeMergedRule.ts file when parsing large queries. This vulnerability allows an attacker to degrade system performance.\r\r**Note:** It was not proven that this vulnerability can crash the process.",
  "repo": "graphql/graphql-js",
  "patch_hash": "f94b511386c7e47bd0380dcd56553dc063320226",
  "patch_info": {
    "commit_hash": "f94b511386c7e47bd0380dcd56553dc063320226",
    "repo": "graphql/graphql-js",
    "commit_url": "https://github.com/graphql/graphql-js/commit/f94b511386c7e47bd0380dcd56553dc063320226",
    "files": [
      "benchmark/repeated-fields-benchmark.js",
      "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts",
      "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts"
    ],
    "message": "OverlappingFieldsCanBeMergedRule: Fix performance degradation (#3958)\n\nCo-authored-by: AaronMoat <AaronMoat@users.noreply.github.com>\nCo-authored-by: Ivan Goncharov <ivan.goncharov.ua@gmail.com>\nResolves https://github.com/graphql/graphql-js/issues/3955 (at least",
    "before_after_code_files": [
      "benchmark/repeated-fields-benchmark.js||benchmark/repeated-fields-benchmark.js",
      "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts||src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts",
      "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts||src/validation/rules/OverlappingFieldsCanBeMergedRule.ts"
    ]
  },
  "patch_diff": {
    "benchmark/repeated-fields-benchmark.js||benchmark/repeated-fields-benchmark.js": [
      "File: benchmark/repeated-fields-benchmark.js -> benchmark/repeated-fields-benchmark.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: import { graphqlSync } from 'graphql/graphql.js';",
      "2: import { buildSchema } from 'graphql/utilities/buildASTSchema.js';",
      "4: const schema = buildSchema('type Query { hello: String! }');",
      "5: const source = `{ ${'hello '.repeat(250)}}`;",
      "7: export const benchmark = {",
      "8:   name: 'Many repeated fields',",
      "9:   count: 5,",
      "10:   measure() {",
      "11:     graphqlSync({ schema, source });",
      "12:   },",
      "13: };",
      "",
      "---------------"
    ],
    "src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts||src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts": [
      "File: src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts -> src/validation/__tests__/OverlappingFieldsCanBeMergedRule-test.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "179:     ]);",
      "180:   });",
      "182:   it('mix of stream and no stream', () => {",
      "183:     expectErrors(`",
      "184:       fragment conflictingArgs on Dog {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "182:   it('different stream directive extra argument', () => {",
      "183:     expectErrors(`",
      "184:       fragment conflictingArgs on Dog {",
      "185:         name @stream(label: \"streamLabel\", initialCount: 1)",
      "186:         name @stream(label: \"streamLabel\", initialCount: 1, extraArg: true)",
      "187:       }",
      "188:     `).toDeepEqual([",
      "189:       {",
      "190:         message:",
      "191:           'Fields \"name\" conflict because they have differing stream directives. Use different aliases on the fields to fetch both if this was intentional.',",
      "192:         locations: [",
      "193:           { line: 3, column: 9 },",
      "194:           { line: 4, column: 9 },",
      "195:         ],",
      "196:       },",
      "197:     ]);",
      "198:   });",
      "",
      "---------------"
    ],
    "src/validation/rules/OverlappingFieldsCanBeMergedRule.ts||src/validation/rules/OverlappingFieldsCanBeMergedRule.ts": [
      "File: src/validation/rules/OverlappingFieldsCanBeMergedRule.ts -> src/validation/rules/OverlappingFieldsCanBeMergedRule.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "7:   DirectiveNode,",
      "8:   FieldNode,",
      "9:   FragmentDefinitionNode,",
      "11:   SelectionSetNode,",
      "12: } from '../../language/ast.js';",
      "13: import { Kind } from '../../language/kinds.js';",
      "14: import { print } from '../../language/printer.js';",
      "",
      "[Removed Lines]",
      "10:   ObjectValueNode,",
      "",
      "[Added Lines]",
      "11:   ValueNode,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "592:     }",
      "596:       return [",
      "597:         [responseName, 'they have differing arguments'],",
      "598:         [node1],",
      "",
      "[Removed Lines]",
      "595:     if (stringifyArguments(node1) !== stringifyArguments(node2)) {",
      "",
      "[Added Lines]",
      "595:     if (!sameArguments(node1, node2)) {",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "649:   }",
      "650: }",
      "665: }",
      "667: function getStreamDirective(",
      "",
      "[Removed Lines]",
      "652: function stringifyArguments(fieldNode: FieldNode | DirectiveNode): string {",
      "654:   const args = /* c8 ignore next */ fieldNode.arguments ?? [];",
      "656:   const inputObjectWithArgs: ObjectValueNode = {",
      "657:     kind: Kind.OBJECT,",
      "658:     fields: args.map((argNode) => ({",
      "659:       kind: Kind.OBJECT_FIELD,",
      "660:       name: argNode.name,",
      "661:       value: argNode.value,",
      "662:     })),",
      "663:   };",
      "664:   return print(sortValueNode(inputObjectWithArgs));",
      "",
      "[Added Lines]",
      "652: function sameArguments(",
      "653:   node1: FieldNode | DirectiveNode,",
      "654:   node2: FieldNode | DirectiveNode,",
      "655: ): boolean {",
      "656:   const args1 = node1.arguments;",
      "657:   const args2 = node2.arguments;",
      "659:   if (args1 === undefined || args1.length === 0) {",
      "660:     return args2 === undefined || args2.length === 0;",
      "661:   }",
      "662:   if (args2 === undefined || args2.length === 0) {",
      "663:     return false;",
      "664:   }",
      "666:   if (args1.length !== args2.length) {",
      "667:     return false;",
      "668:   }",
      "670:   const values2 = new Map(args2.map(({ name, value }) => [name.value, value]));",
      "671:   return args1.every((arg1) => {",
      "672:     const value1 = arg1.value;",
      "673:     const value2 = values2.get(arg1.name.value);",
      "674:     if (value2 === undefined) {",
      "675:       return false;",
      "676:     }",
      "678:     return stringifyValue(value1) === stringifyValue(value2);",
      "679:   });",
      "680: }",
      "682: function stringifyValue(value: ValueNode): string | null {",
      "683:   return print(sortValueNode(value));",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "681:     return true;",
      "682:   } else if (stream1 && stream2) {",
      "685:   }",
      "687:   return false;",
      "",
      "[Removed Lines]",
      "684:     return stringifyArguments(stream1) === stringifyArguments(stream2);",
      "",
      "[Added Lines]",
      "703:     return sameArguments(stream1, stream2);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1f2a43122ae3143c3d3f4dc64747595a5632e635",
      "candidate_info": {
        "commit_hash": "1f2a43122ae3143c3d3f4dc64747595a5632e635",
        "repo": "graphql/graphql-js",
        "commit_url": "https://github.com/graphql/graphql-js/commit/1f2a43122ae3143c3d3f4dc64747595a5632e635",
        "files": [
          "package.json",
          "resources/checkgit.sh"
        ],
        "message": "port[v17]: Fix publish scripts (#4121)",
        "before_after_code_files": [
          "resources/checkgit.sh||resources/checkgit.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/graphql/graphql-js/pull/4388",
          "https://github.com/graphql/graphql-js/pull/4385",
          "https://github.com/graphql/graphql-js/pull/4386"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "resources/checkgit.sh||resources/checkgit.sh": [
          "File: resources/checkgit.sh -> resources/checkgit.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # Exit immediately if any subcommand terminated",
          "2: trap \"exit 1\" ERR",
          "4: #",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: set -e",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0b7590f0a2b65e6210da2e49be0d8e6c27781af2",
      "candidate_info": {
        "commit_hash": "0b7590f0a2b65e6210da2e49be0d8e6c27781af2",
        "repo": "graphql/graphql-js",
        "commit_url": "https://github.com/graphql/graphql-js/commit/0b7590f0a2b65e6210da2e49be0d8e6c27781af2",
        "files": [
          "src/utilities/__tests__/printSchema-test.ts",
          "src/utilities/printSchema.ts"
        ],
        "message": "Add support for @oneOf directives in printSchema (#3969)\n\nfixes #3968",
        "before_after_code_files": [
          "src/utilities/__tests__/printSchema-test.ts||src/utilities/__tests__/printSchema-test.ts",
          "src/utilities/printSchema.ts||src/utilities/printSchema.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/graphql/graphql-js/pull/4388",
          "https://github.com/graphql/graphql-js/pull/4385",
          "https://github.com/graphql/graphql-js/pull/4386"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/utilities/__tests__/printSchema-test.ts||src/utilities/__tests__/printSchema-test.ts": [
          "File: src/utilities/__tests__/printSchema-test.ts -> src/utilities/__tests__/printSchema-test.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "509:     `);",
          "510:   });",
          "512:   it('Custom Scalar', () => {",
          "513:     const OddType = new GraphQLScalarType({ name: 'Odd' });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "512:   it('Print Input Type with @oneOf directive', () => {",
          "513:     const InputType = new GraphQLInputObjectType({",
          "514:       name: 'InputType',",
          "515:       isOneOf: true,",
          "516:       fields: {",
          "517:         int: { type: GraphQLInt },",
          "518:       },",
          "519:     });",
          "521:     const schema = new GraphQLSchema({ types: [InputType] });",
          "522:     expectPrintedSchema(schema).to.equal(dedent`",
          "523:       input InputType @oneOf {",
          "524:         int: Int",
          "525:       }",
          "526:     `);",
          "527:   });",
          "",
          "---------------"
        ],
        "src/utilities/printSchema.ts||src/utilities/printSchema.ts": [
          "File: src/utilities/printSchema.ts -> src/utilities/printSchema.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "204:   const fields = Object.values(type.getFields()).map(",
          "205:     (f, i) => printDescription(f, '  ', !i) + '  ' + printInputValue(f),",
          "206:   );",
          "208: }",
          "210: function printFields(type: GraphQLObjectType | GraphQLInterfaceType): string {",
          "",
          "[Removed Lines]",
          "207:   return printDescription(type) + `input ${type.name}` + printBlock(fields);",
          "",
          "[Added Lines]",
          "207:   return (",
          "208:     printDescription(type) +",
          "209:     `input ${type.name}` +",
          "210:     (type.isOneOf ? ' @oneOf' : '') +",
          "211:     printBlock(fields)",
          "212:   );",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b78377b1d15ca46185729a084a0c699cfc6efca4",
      "candidate_info": {
        "commit_hash": "b78377b1d15ca46185729a084a0c699cfc6efca4",
        "repo": "graphql/graphql-js",
        "commit_url": "https://github.com/graphql/graphql-js/commit/b78377b1d15ca46185729a084a0c699cfc6efca4",
        "files": [
          "package-lock.json",
          "package.json",
          "src/version.ts"
        ],
        "message": "17.0.0-alpha.5",
        "before_after_code_files": [
          "src/version.ts||src/version.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/graphql/graphql-js/pull/4388",
          "https://github.com/graphql/graphql-js/pull/4385",
          "https://github.com/graphql/graphql-js/pull/4386"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/version.ts||src/version.ts": [
          "File: src/version.ts -> src/version.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "7: export const version = '17.0.0-alpha.4' as string;",
          "",
          "[Added Lines]",
          "7: export const version = '17.0.0-alpha.5' as string;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13:   major: 17 as number,",
          "14:   minor: 0 as number,",
          "15:   patch: 0 as number,",
          "17: });",
          "",
          "[Removed Lines]",
          "16:   preReleaseTag: 'alpha.4' as string | null,",
          "",
          "[Added Lines]",
          "16:   preReleaseTag: 'alpha.5' as string | null,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "77e4a3dbb659addf776cb1f2b87495d0ea459c7c",
      "candidate_info": {
        "commit_hash": "77e4a3dbb659addf776cb1f2b87495d0ea459c7c",
        "repo": "graphql/graphql-js",
        "commit_url": "https://github.com/graphql/graphql-js/commit/77e4a3dbb659addf776cb1f2b87495d0ea459c7c",
        "files": [
          "src/execution/IncrementalGraph.ts"
        ],
        "message": "polish: remove outdated coverage ignore statement",
        "before_after_code_files": [
          "src/execution/IncrementalGraph.ts||src/execution/IncrementalGraph.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/graphql/graphql-js/pull/4388",
          "https://github.com/graphql/graphql-js/pull/4385",
          "https://github.com/graphql/graphql-js/pull/4386"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/execution/IncrementalGraph.ts||src/execution/IncrementalGraph.ts": [
          "File: src/execution/IncrementalGraph.ts -> src/execution/IncrementalGraph.ts"
        ]
      }
    },
    {
      "candidate_hash": "d57d5c76fb44980135093fd8d359ab33fba68d4b",
      "candidate_info": {
        "commit_hash": "d57d5c76fb44980135093fd8d359ab33fba68d4b",
        "repo": "graphql/graphql-js",
        "commit_url": "https://github.com/graphql/graphql-js/commit/d57d5c76fb44980135093fd8d359ab33fba68d4b",
        "files": [
          "src/execution/IncrementalGraph.ts"
        ],
        "message": "polish(incremental): remove unnecessary helper",
        "before_after_code_files": [
          "src/execution/IncrementalGraph.ts||src/execution/IncrementalGraph.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/graphql/graphql-js/pull/4388",
          "https://github.com/graphql/graphql-js/pull/4385",
          "https://github.com/graphql/graphql-js/pull/4386"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/execution/IncrementalGraph.ts||src/execution/IncrementalGraph.ts": [
          "File: src/execution/IncrementalGraph.ts -> src/execution/IncrementalGraph.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "116:     const successfulExecutionGroups = Array.from(",
          "117:       deferredFragmentRecord.successfulExecutionGroups,",
          "118:     );",
          "120:     for (const successfulExecutionGroup of successfulExecutionGroups) {",
          "121:       for (const otherDeferredFragmentRecord of successfulExecutionGroup",
          "122:         .pendingExecutionGroup.deferredFragmentRecords) {",
          "",
          "[Removed Lines]",
          "119:     this._removeRootNode(deferredFragmentRecord);",
          "",
          "[Added Lines]",
          "119:     this._rootNodes.delete(deferredFragmentRecord);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "137:     if (!this._rootNodes.has(deferredFragmentRecord)) {",
          "138:       return false;",
          "139:     }",
          "141:     return true;",
          "142:   }",
          "144:   removeStream(streamRecord: StreamRecord): void {",
          "150:   }",
          "152:   private _addIncrementalDataRecords(",
          "",
          "[Removed Lines]",
          "140:     this._removeRootNode(deferredFragmentRecord);",
          "145:     this._removeRootNode(streamRecord);",
          "146:   }",
          "148:   private _removeRootNode(deliveryGroup: DeliveryGroup): void {",
          "149:     this._rootNodes.delete(deliveryGroup);",
          "",
          "[Added Lines]",
          "140:     this._rootNodes.delete(deferredFragmentRecord);",
          "145:     this._rootNodes.delete(streamRecord);",
          "",
          "---------------"
        ]
      }
    }
  ]
}