{
  "cve_id": "CVE-2021-41248",
  "cve_desc": "GraphiQL is the reference implementation of this monorepo, GraphQL IDE, an official project under the GraphQL Foundation. All versions of graphiql older than graphiql@1.4.7 are vulnerable to compromised HTTP schema introspection responses or schema prop values with malicious GraphQL type names, exposing a dynamic XSS attack surface that can allow code injection on operation autocomplete. In order for the attack to take place, the user must load a vulnerable schema in graphiql. There are a number of ways that can occur. By default, the schema URL is not attacker-controllable in graphiql or in its suggested implementations or examples, leaving only very complex attack vectors. If a custom implementation of graphiql's fetcher allows the schema URL to be set dynamically, such as a URL query parameter like ?endpoint= in graphql-playground, or a database provided value, then this custom graphiql implementation is vulnerable to phishing attacks, and thus much more readily available, low or no privelege level xss attacks. The URLs could look like any generic looking graphql schema URL. It should be noted that desktop clients such as Altair, Insomnia, Postwoman, do not appear to be impacted by this. This vulnerability does not impact codemirror-graphql, monaco-graphql or other dependents, as it exists in onHasCompletion.ts in graphiql. It does impact all forks of graphiql, and every released version of graphiql.",
  "repo": "graphql/graphiql",
  "patch_hash": "cb237eeeaf7333c4954c752122261db7520f7bf4",
  "patch_info": {
    "commit_hash": "cb237eeeaf7333c4954c752122261db7520f7bf4",
    "repo": "graphql/graphiql",
    "commit_url": "https://github.com/graphql/graphiql/commit/cb237eeeaf7333c4954c752122261db7520f7bf4",
    "files": [
      "README.md",
      "SECURITY.md",
      "docs/security/2021-introspection-schema-xss.md",
      "packages/graphiql/README.md",
      "packages/graphiql/cypress/integration/init.spec.ts",
      "packages/graphiql/cypress/support/commands.ts",
      "packages/graphiql/package.json",
      "packages/graphiql/resources/renderExample.js",
      "packages/graphiql/src/components/DocExplorer.tsx",
      "packages/graphiql/src/components/GraphiQL.tsx",
      "packages/graphiql/src/utility/onHasCompletion.ts",
      "packages/graphiql/test/bad-schema.js",
      "packages/graphiql/test/beforeDevServer.js",
      "packages/graphiql/test/e2e-server.js",
      "yarn.lock"
    ],
    "message": "Merge pull request from GHSA-x4r7-m2q9-69c8\n\nThis change fixes an XSS vulnerability that has been present since the first\ncommit of GraphiQL when used with an untrusted GraphQL server. It applies three\nstrategies to fix via defense-in-depth: HTML escaping a string in a contexts\nthat uses innerHTML; validating incoming schemas with graphql-js validateSchema;\nand updating markdown-it to the latest version.\n\nSee docs/security/2021-introspection-schema-xss.md for more details.\n\nCo-authored-by: Rikki <rikki.schulte@gmail.com>",
    "before_after_code_files": [
      "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
      "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts",
      "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js",
      "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
      "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
      "packages/graphiql/src/utility/onHasCompletion.ts||packages/graphiql/src/utility/onHasCompletion.ts",
      "packages/graphiql/test/bad-schema.js||packages/graphiql/test/bad-schema.js",
      "packages/graphiql/test/beforeDevServer.js||packages/graphiql/test/beforeDevServer.js",
      "packages/graphiql/test/e2e-server.js||packages/graphiql/test/e2e-server.js",
      "yarn.lock||yarn.lock"
    ]
  },
  "patch_diff": {
    "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts": [
      "File: packages/graphiql/cypress/integration/init.spec.ts -> packages/graphiql/cypress/integration/init.spec.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "44:   it('Executes a GraphQL query over HTTP that has the expected result', () => {",
      "45:     cy.assertQueryResult({ query: testQuery }, mockSuccess);",
      "46:   });",
      "47: });",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "47:   it('Shows the expected error when the schema is invalid', () => {",
      "48:     cy.visit(`/?bad=true`);",
      "49:     cy.assertResult({",
      "50:       errors: [",
      "51:         {",
      "52:           message:",
      "53:             'Names must match /^[_a-zA-Z][_a-zA-Z0-9]*$/ but \"<img src=x onerror=alert(document.domain)>\" does not.',",
      "54:         },",
      "55:       ],",
      "56:     });",
      "57:   });",
      "",
      "---------------"
    ],
    "packages/graphiql/cypress/support/commands.ts||packages/graphiql/cypress/support/commands.ts": [
      "File: packages/graphiql/cypress/support/commands.ts -> packages/graphiql/cypress/support/commands.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "19:   type MockResult =",
      "20:     | { data: any }",
      "21:     | { data: any; hasNext?: boolean }",
      "23:   interface Chainable<Subject = any> {",
      "",
      "[Removed Lines]",
      "22:     | { error: any[] };",
      "",
      "[Added Lines]",
      "22:     | { error: any[] }",
      "23:     | { errors: any[] };",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "31:     visitWithOp(op: Op): Chainable<Element>;",
      "32:     clickPrettify(): Chainable<Element>;",
      "33:     assertHasValues(op: Op): Chainable<Element>;",
      "34:     assertQueryResult(",
      "35:       op: Op,",
      "36:       expectedResult: MockResult,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "35:     assertResult(result: MockResult): Chainable<Element>;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "91:     expect(value).to.deep.equal(JSON.stringify(mockSuccess, null, 2));",
      "92:   });",
      "93: });",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "97: Cypress.Commands.add('assertResult', (expectedResult, timeout = 200) => {",
      "98:   cy.wait(timeout);",
      "99:   cy.window().then(w => {",
      "101:     const value = w.g.resultComponent.viewer.getValue();",
      "102:     expect(value).to.deep.equal(JSON.stringify(expectedResult, null, 2));",
      "103:   });",
      "104: });",
      "",
      "---------------"
    ],
    "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js": [
      "File: packages/graphiql/resources/renderExample.js -> packages/graphiql/resources/renderExample.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "91:   history.replaceState(null, null, newSearch);",
      "92: }",
      "",
      "[Removed Lines]",
      "94: const isDev = window.location.hostname.match(/localhost$/);",
      "95: const api = isDev ? '/graphql' : '/.netlify/functions/schema-demo';",
      "",
      "[Added Lines]",
      "94: function getSchemaUrl() {",
      "95:   const isDev = window.location.hostname.match(/localhost$/);",
      "97:   if (isDev) {",
      "99:     if (parameters.bad && parameters.bad === 'true') {",
      "100:       return '/bad/graphql';",
      "101:     } else {",
      "102:       return '/graphql';",
      "103:     }",
      "104:   }",
      "105:   return '/.netlify/functions/schema-demo';",
      "106: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "101: ReactDOM.render(",
      "102:   React.createElement(GraphiQL, {",
      "104:     query: parameters.query,",
      "105:     variables: parameters.variables,",
      "106:     headers: parameters.headers,",
      "",
      "[Removed Lines]",
      "103:     fetcher: GraphiQL.createFetcher({ url: api }),",
      "",
      "[Added Lines]",
      "114:     fetcher: GraphiQL.createFetcher({ url: getSchemaUrl() }),",
      "",
      "---------------"
    ],
    "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx": [
      "File: packages/graphiql/src/components/DocExplorer.tsx -> packages/graphiql/src/components/DocExplorer.tsx",
      "--- Hunk 1 ---",
      "[Context before]",
      "8: import React from 'react';",
      "10: import { FieldType } from './DocExplorer/types';",
      "12: import FieldDoc from './DocExplorer/FieldDoc';",
      "",
      "[Removed Lines]",
      "9: import { GraphQLSchema, isType, GraphQLNamedType } from 'graphql';",
      "",
      "[Added Lines]",
      "9: import { GraphQLSchema, isType, GraphQLNamedType, GraphQLError } from 'graphql';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "30: type DocExplorerProps = {",
      "31:   schema?: GraphQLSchema | null;",
      "32: };",
      "34: type DocExplorerState = {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "32:   schemaErrors?: readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "68:   ) {",
      "69:     return (",
      "70:       this.props.schema !== nextProps.schema ||",
      "72:     );",
      "73:   }",
      "75:   render() {",
      "77:     const navStack = this.state.navStack;",
      "78:     const navItem = navStack[navStack.length - 1];",
      "80:     let content;",
      "83:       content = (",
      "84:         <div className=\"spinner-container\">",
      "",
      "[Removed Lines]",
      "71:       this.state.navStack !== nextState.navStack",
      "76:     const { schema } = this.props;",
      "81:     if (schema === undefined) {",
      "",
      "[Added Lines]",
      "72:       this.state.navStack !== nextState.navStack ||",
      "73:       this.props.schemaErrors !== nextProps.schemaErrors",
      "78:     const { schema, schemaErrors } = this.props;",
      "83:     if (schemaErrors) {",
      "84:       content = (",
      "85:         <div className=\"error-container\">{'Error fetching schema'}</div>",
      "86:       );",
      "87:     } else if (schema === undefined) {",
      "",
      "---------------"
    ],
    "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
      "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
      "--- Hunk 1 ---",
      "[Context before]",
      "23:   ValidationRule,",
      "24:   FragmentDefinitionNode,",
      "25:   DocumentNode,",
      "26: } from 'graphql';",
      "27: import copyToClipboard from 'copy-to-clipboard';",
      "28: import { getFragmentDependenciesForAST } from 'graphql-language-service-utils';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26:   GraphQLError,",
      "27:   formatError as formatGraphQLError,",
      "28:   GraphQLFormattedError,",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "66: } from '@graphiql/toolkit';",
      "67: import HistoryStore from '../utility/HistoryStore';",
      "69: const DEFAULT_DOC_EXPLORER_WIDTH = 350;",
      "71: const majorVersion = parseInt(React.version.slice(0, 2), 10);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "72: import { validateSchema } from 'graphql';",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "95:   additionalContent?: React.ReactNode;",
      "96: };",
      "98: export type GraphiQLProps = {",
      "99:   fetcher: Fetcher;",
      "100:   schema?: GraphQLSchema;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "103: export type GenericError =",
      "104:   | Error",
      "105:   | string",
      "106:   | readonly Error[]",
      "107:   | readonly string[]",
      "108:   | GraphQLError",
      "109:   | readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "121:   editorTheme?: string;",
      "122:   onToggleHistory?: (historyPaneOpen: boolean) => void;",
      "123:   ResultsTooltip?: typeof Component | FunctionComponent;",
      "124:   readOnly?: boolean;",
      "125:   docExplorerOpen?: boolean;",
      "126:   toolbar?: GraphiQLToolbarConfig;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "140:   dangerouslyAssumeSchemaIsValid?: boolean;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "143:   headerEditorEnabled: boolean;",
      "144:   shouldPersistHeaders: boolean;",
      "145:   historyPaneOpen: boolean;",
      "146:   docExplorerWidth: number;",
      "147:   isWaitingForResponse: boolean;",
      "148:   subscription?: Unsubscribable | null;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "163:   schemaErrors?: readonly GraphQLError[];",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "152:   maxHistoryLength: number;",
      "153: };",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "173: const stringify = (obj: unknown): string => JSON.stringify(obj, null, 2);",
      "175: const formatSingleError = (error: Error): Error => ({",
      "176:   ...error,",
      "178:   message: error.message,",
      "179:   stack: error.stack,",
      "180: });",
      "182: type InputError = Error | GraphQLError | string;",
      "184: const handleSingleError = (",
      "185:   error: InputError,",
      "186: ): GraphQLFormattedError | Error | string => {",
      "187:   if (error instanceof GraphQLError) {",
      "188:     return formatGraphQLError(error);",
      "189:   }",
      "190:   if (error instanceof Error) {",
      "191:     return formatSingleError(error);",
      "192:   }",
      "193:   return error;",
      "194: };",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "166:     return JSON.stringify(result, null, 2);",
      "167:   }",
      "177:   _editorQueryID = 0;",
      "",
      "[Removed Lines]",
      "169:   static formatError(rawError: Error) {",
      "170:     const result = Array.isArray(rawError)",
      "171:       ? rawError.map(formatSingleError)",
      "172:       : formatSingleError(rawError);",
      "173:     return JSON.stringify(result, null, 2);",
      "174:   }",
      "",
      "[Added Lines]",
      "210:   static formatError = (error: GenericError): string => {",
      "211:     if (Array.isArray(error)) {",
      "212:       return stringify({",
      "213:         errors: error.map((e: InputError) => handleSingleError(e)),",
      "214:       });",
      "215:     }",
      "217:     return stringify({ errors: handleSingleError(error) });",
      "218:   };",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "266:     const headerEditorEnabled = props.headerEditorEnabled ?? false;",
      "267:     const shouldPersistHeaders = props.shouldPersistHeaders ?? false;",
      "270:     this.state = {",
      "272:       query,",
      "273:       variables: variables as string,",
      "274:       headers: headers as string,",
      "275:       operationName,",
      "276:       docExplorerOpen,",
      "278:       editorFlex: Number(this._storage.get('editorFlex')) || 1,",
      "279:       secondaryEditorOpen,",
      "280:       secondaryEditorHeight:",
      "",
      "[Removed Lines]",
      "271:       schema: props.schema,",
      "277:       response: props.response,",
      "",
      "[Added Lines]",
      "313:     let schema = props.schema;",
      "314:     let response = props.response;",
      "315:     let schemaErrors: readonly GraphQLError[] | undefined = undefined;",
      "316:     if (schema && !this.props.dangerouslyAssumeSchemaIsValid) {",
      "317:       const validationErrors = validateSchema(schema);",
      "318:       if (validationErrors && validationErrors.length > 0) {",
      "321:         response = GraphiQL.formatError(validationErrors);",
      "322:         schema = undefined;",
      "323:         schemaErrors = validationErrors;",
      "324:       }",
      "325:     }",
      "329:       schema,",
      "335:       schemaErrors,",
      "336:       response,",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "357:         nextQuery !== this.state.query ||",
      "358:         nextOperationName !== this.state.operationName)",
      "359:     ) {",
      "360:       const updatedQueryAttributes = this._updateQueryFacts(",
      "361:         nextQuery,",
      "362:         nextOperationName,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "419:       if (!this.props.dangerouslyAssumeSchemaIsValid) {",
      "420:         const validationErrors = validateSchema(nextSchema);",
      "421:         if (validationErrors && validationErrors.length > 0) {",
      "422:           this.handleSchemaErrors(validationErrors);",
      "423:           nextSchema = undefined;",
      "424:         }",
      "425:       }",
      "",
      "---------------",
      "--- Hunk 10 ---",
      "[Context before]",
      "665:               ref={c => {",
      "666:                 this.docExplorerComponent = c;",
      "667:               }}",
      "668:               schema={this.state.schema}>",
      "669:               <button",
      "670:                 className=\"docExplorerHide\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "735:               schemaErrors={this.state.schemaErrors}",
      "",
      "---------------",
      "--- Hunk 11 ---",
      "[Context before]",
      "871:         }",
      "873:         if (typeof result !== 'string' && 'data' in result) {",
      "877:         } else {",
      "878:           const responseString =",
      "879:             typeof result === 'string' ? result : GraphiQL.formatResult(result);",
      "885:         }",
      "886:       })",
      "887:       .catch(error => {",
      "892:       });",
      "893:   }",
      "895:   private async _fetchQuery(",
      "896:     query: string,",
      "897:     variables: string,",
      "",
      "[Removed Lines]",
      "874:           const schema = buildClientSchema(result.data);",
      "875:           const queryFacts = getOperationFacts(schema, this.state.query);",
      "876:           this.safeSetState({ schema, ...queryFacts });",
      "880:           this.safeSetState({",
      "882:             schema: undefined,",
      "883:             response: responseString,",
      "884:           });",
      "888:         this.safeSetState({",
      "889:           schema: undefined,",
      "890:           response: error ? GraphiQL.formatError(error) : undefined,",
      "891:         });",
      "",
      "[Added Lines]",
      "942:           let schema: GraphQLSchema | undefined = buildClientSchema(",
      "943:             result.data,",
      "944:           );",
      "945:           if (!this.props.dangerouslyAssumeSchemaIsValid) {",
      "946:             const errors = validateSchema(schema);",
      "948:             if (errors && errors.length > 0) {",
      "949:               schema = undefined;",
      "950:               this.handleSchemaErrors(errors);",
      "951:             }",
      "952:           }",
      "953:           if (schema) {",
      "954:             const queryFacts = getOperationFacts(schema, this.state.query);",
      "955:             this.safeSetState({",
      "956:               schema,",
      "957:               ...queryFacts,",
      "958:               schemaErrors: undefined,",
      "959:             });",
      "960:           }",
      "965:           this.handleSchemaErrors([responseString]);",
      "969:         this.handleSchemaErrors([error]);",
      "973:   private handleSchemaErrors(",
      "974:     schemaErrors: readonly GraphQLError[] | readonly string[],",
      "975:   ) {",
      "976:     this.safeSetState({",
      "977:       response: schemaErrors ? GraphiQL.formatError(schemaErrors) : undefined,",
      "978:       schema: undefined,",
      "979:       schemaErrors,",
      "980:     });",
      "981:   }",
      "",
      "---------------",
      "--- Hunk 12 ---",
      "[Context before]",
      "908:       jsonVariables =",
      "909:         variables && variables.trim() !== '' ? JSON.parse(variables) : null;",
      "910:     } catch (error) {",
      "912:     }",
      "914:     if (typeof jsonVariables !== 'object') {",
      "",
      "[Removed Lines]",
      "911:       throw new Error(`Variables are invalid JSON: ${error.message}.`);",
      "",
      "[Added Lines]",
      "999:       throw new Error(",
      "1000:         `Variables are invalid JSON: ${(error as Error).message}.`,",
      "1001:       );",
      "",
      "---------------",
      "--- Hunk 13 ---",
      "[Context before]",
      "919:       jsonHeaders =",
      "920:         headers && headers.trim() !== '' ? JSON.parse(headers) : null;",
      "921:     } catch (error) {",
      "923:     }",
      "925:     if (typeof jsonHeaders !== 'object') {",
      "",
      "[Removed Lines]",
      "922:       throw new Error(`Headers are invalid JSON: ${error.message}.`);",
      "",
      "[Added Lines]",
      "1012:       throw new Error(`Headers are invalid JSON: ${(error as Error).message}.`);",
      "",
      "---------------",
      "--- Hunk 14 ---",
      "[Context before]",
      "1008:             } catch (error) {",
      "1009:               this.safeSetState({",
      "1010:                 isWaitingForResponse: false,",
      "1012:                 subscription: null,",
      "1013:               });",
      "1014:             }",
      "",
      "[Removed Lines]",
      "1011:                 response: error ? GraphiQL.formatError(error) : undefined,",
      "",
      "[Added Lines]",
      "1101:                 response: error",
      "1102:                   ? GraphiQL.formatError(error as Error)",
      "1103:                   : undefined,",
      "",
      "---------------",
      "--- Hunk 15 ---",
      "[Context before]",
      "1167:     } catch (error) {",
      "1168:       this.setState({",
      "1169:         isWaitingForResponse: false,",
      "1171:       });",
      "1172:     }",
      "1173:   };",
      "",
      "[Removed Lines]",
      "1170:         response: error.message,",
      "",
      "[Added Lines]",
      "1262:         response: (error as Error).message,",
      "",
      "---------------",
      "--- Hunk 16 ---",
      "[Context before]",
      "1699: }",
      "1700: GraphiQLFooter.displayName = 'GraphiQLFooter';",
      "1709: const defaultQuery = `# Welcome to GraphiQL",
      "1710: #",
      "1711: # GraphiQL is an in-browser tool for writing, validating, and",
      "",
      "[Removed Lines]",
      "1702: const formatSingleError = (error: Error) => ({",
      "1703:   ...error,",
      "1705:   message: error.message,",
      "1706:   stack: error.stack,",
      "1707: });",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "packages/graphiql/src/utility/onHasCompletion.ts||packages/graphiql/src/utility/onHasCompletion.ts": [
      "File: packages/graphiql/src/utility/onHasCompletion.ts -> packages/graphiql/src/utility/onHasCompletion.ts",
      "--- Hunk 1 ---",
      "[Context before]",
      "12:   GraphQLType,",
      "13:   GraphQLField,",
      "14: } from 'graphql';",
      "15: import MD from 'markdown-it';",
      "17: const md = new MD();",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "15: import escapeHTML from 'escape-html';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "108:   if (type instanceof GraphQLList) {",
      "109:     return `[${renderType(type.ofType)}]`;",
      "110:   }",
      "112: }",
      "",
      "[Removed Lines]",
      "111:   return `<a class=\"typeName\">${type.name}</a>`;",
      "",
      "[Added Lines]",
      "112:   return `<a class=\"typeName\">${escapeHTML(type.name)}</a>`;",
      "",
      "---------------"
    ],
    "packages/graphiql/test/bad-schema.js||packages/graphiql/test/bad-schema.js": [
      "File: packages/graphiql/test/bad-schema.js -> packages/graphiql/test/bad-schema.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1: const { buildClientSchema } = require('graphql');",
      "3: module.exports.schema = {",
      "4:   __schema: {",
      "5:     queryType: {",
      "6:       name: 'Query',",
      "7:     },",
      "8:     mutationType: null,",
      "9:     subscriptionType: null,",
      "10:     types: [",
      "11:       {",
      "12:         kind: 'OBJECT',",
      "13:         name: 'Query',",
      "14:         description: null,",
      "15:         fields: [",
      "16:           {",
      "17:             name: 'user',",
      "18:             description: null,",
      "19:             args: [",
      "20:               {",
      "21:                 name: 'id',",
      "22:                 description: null,",
      "23:                 type: {",
      "24:                   kind: 'NON_NULL',",
      "25:                   name: null,",
      "26:                   ofType: {",
      "27:                     kind: 'SCALAR',",
      "28:                     name: 'ID',",
      "29:                     ofType: null,",
      "30:                   },",
      "31:                 },",
      "32:                 defaultValue: null,",
      "33:               },",
      "34:             ],",
      "35:             type: {",
      "36:               kind: 'OBJECT',",
      "37:               name: '<img src=x onerror=alert(document.domain)>',",
      "38:               ofType: null,",
      "39:             },",
      "40:             isDeprecated: false,",
      "41:             deprecationReason: null,",
      "42:           },",
      "43:         ],",
      "44:         inputFields: null,",
      "45:         interfaces: [],",
      "46:         enumValues: null,",
      "47:         possibleTypes: null,",
      "48:       },",
      "49:       {",
      "50:         kind: 'SCALAR',",
      "51:         name: 'ID',",
      "52:         description: '',",
      "53:         fields: null,",
      "54:         inputFields: null,",
      "55:         interfaces: null,",
      "56:         enumValues: null,",
      "57:         possibleTypes: null,",
      "58:       },",
      "59:       {",
      "60:         kind: 'OBJECT',",
      "61:         name: '<img src=x onerror=alert(document.domain)>',",
      "62:         description: null,",
      "63:         fields: [",
      "64:           {",
      "65:             name: 'name',",
      "66:             description: null,",
      "67:             args: [],",
      "68:             type: {",
      "69:               kind: 'NON_NULL',",
      "70:               name: null,",
      "71:               ofType: {",
      "72:                 kind: 'SCALAR',",
      "73:                 name: 'String',",
      "74:                 ofType: null,",
      "75:               },",
      "76:             },",
      "77:             isDeprecated: false,",
      "78:             deprecationReason: null,",
      "79:           },",
      "80:         ],",
      "81:         inputFields: null,",
      "82:         interfaces: [],",
      "83:         enumValues: null,",
      "84:         possibleTypes: null,",
      "85:       },",
      "86:       {",
      "87:         kind: 'SCALAR',",
      "88:         name: 'String',",
      "89:         description: '',",
      "90:         fields: null,",
      "91:         inputFields: null,",
      "92:         interfaces: null,",
      "93:         enumValues: null,",
      "94:         possibleTypes: null,",
      "95:       },",
      "96:     ],",
      "97:     directives: [],",
      "98:   },",
      "99: };",
      "",
      "---------------"
    ],
    "packages/graphiql/test/beforeDevServer.js||packages/graphiql/test/beforeDevServer.js": [
      "File: packages/graphiql/test/beforeDevServer.js -> packages/graphiql/test/beforeDevServer.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "9: const path = require('path');",
      "10: const { graphqlHTTP } = require('express-graphql');",
      "11: const schema = require('./schema');",
      "13: module.exports = function beforeDevServer(app, _server, _compiler) {",
      "15:   app.post('/graphql', graphqlHTTP({ schema }));",
      "17:   app.get(",
      "18:     '/graphql',",
      "19:     graphqlHTTP({",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "12: const { schema: badSchema } = require('./bad-schema');",
      "18:   app.post('/bad/graphql', (_req, res, next) => {",
      "19:     res.json({ data: badSchema });",
      "20:     next();",
      "21:   });",
      "",
      "---------------"
    ],
    "packages/graphiql/test/e2e-server.js||packages/graphiql/test/e2e-server.js": [
      "File: packages/graphiql/test/e2e-server.js -> packages/graphiql/test/e2e-server.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "10: const path = require('path');",
      "11: const { graphqlHTTP } = require('express-graphql');",
      "12: const schema = require('./schema');",
      "14: const app = express();",
      "17: app.post('/graphql', graphqlHTTP({ schema }));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14: const { schema: badSchema } = require('./bad-schema');",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "23:   }),",
      "24: );",
      "26: app.use(express.static(path.resolve(__dirname, '../')));",
      "28: app.listen(process.env.PORT || 0, function () {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26: app.post('/bad/graphql', (_req, res, next) => {",
      "27:   res.json({ data: badSchema });",
      "28:   next();",
      "29: });",
      "",
      "---------------"
    ],
    "yarn.lock||yarn.lock": [
      "File: yarn.lock -> yarn.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "3288:   integrity sha512-6U71C2Wp7r5XtFtQzYrW5iKFT67OixrSxjI4MptCHzdSVlgabczzqLe0ZSgnub/5Kp4hSbpDB1tMytZY9pwxxA==",
      "3290: \"@graphiql/toolkit@file:packages/graphiql-toolkit\":",
      "3292:   dependencies:",
      "3293:     \"@n1ru4l/push-pull-async-iterable-iterator\" \"^3.0.0\"",
      "3294:     graphql-ws \"^4.9.0\"",
      "",
      "[Removed Lines]",
      "3291:   version \"0.3.0\"",
      "",
      "[Added Lines]",
      "3291:   version \"0.3.2\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "4881:   dependencies:",
      "4882:     \"@types/node\" \"*\"",
      "4884: \"@types/eslint-visitor-keys@^1.0.0\":",
      "4885:   version \"1.0.0\"",
      "4886:   resolved \"https://registry.yarnpkg.com/@types/eslint-visitor-keys/-/eslint-visitor-keys-1.0.0.tgz#1ee30d79544ca84d68d4b3cdb0af4f205663dd2d\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4884: \"@types/escape-html@^1.0.1\":",
      "4885:   version \"1.0.1\"",
      "4886:   resolved \"https://registry.yarnpkg.com/@types/escape-html/-/escape-html-1.0.1.tgz#b19b4646915f0ae2c306bf984dc0a59c5cfc97ba\"",
      "4887:   integrity sha512-4mI1FuUUZiuT95fSVqvZxp/ssQK9zsa86S43h9x3zPOSU9BBJ+BfDkXwuaU7BfsD+e7U0/cUUfJFk3iW2M4okA==",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "5021:   dependencies:",
      "5022:     \"@types/linkify-it\" \"*\"",
      "5024: \"@types/mime@^1\":",
      "5025:   version \"1.3.2\"",
      "5026:   resolved \"https://registry.yarnpkg.com/@types/mime/-/mime-1.3.2.tgz#93e25bf9ee75fe0fd80b594bc4feb0e862111b5a\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5029: \"@types/markdown-it@^12.2.3\":",
      "5030:   version \"12.2.3\"",
      "5031:   resolved \"https://registry.yarnpkg.com/@types/markdown-it/-/markdown-it-12.2.3.tgz#0d6f6e5e413f8daaa26522904597be3d6cd93b51\"",
      "5032:   integrity sha512-GKMHFfv3458yYy+v/N8gjufHO6MSZKCOXpZc5GXIWWy8uldwfmPn98vp81gZ5f9SVw8YYBctgfJ22a2d7AOMeQ==",
      "5033:   dependencies:",
      "5034:     \"@types/linkify-it\" \"*\"",
      "5035:     \"@types/mdurl\" \"*\"",
      "5037: \"@types/mdurl@*\":",
      "5038:   version \"1.0.2\"",
      "5039:   resolved \"https://registry.yarnpkg.com/@types/mdurl/-/mdurl-1.0.2.tgz#e2ce9d83a613bacf284c7be7d491945e39e1f8e9\"",
      "5040:   integrity sha512-eC4U9MlIcu2q0KQmXszyn5Akca/0jrQmwDRgpAMJai7qBWq4amIQhZyNau4VYGtCeALvW1/NtjzJJ567aZxfKA==",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "6121:   dependencies:",
      "6122:     sprintf-js \"~1.0.2\"",
      "6124: aria-query@^3.0.0:",
      "6125:   version \"3.0.0\"",
      "6126:   resolved \"https://registry.yarnpkg.com/aria-query/-/aria-query-3.0.0.tgz#65b3fcc1ca1155a8c9ae64d6eee297f15d5133cc\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "6142: argparse@^2.0.1:",
      "6143:   version \"2.0.1\"",
      "6144:   resolved \"https://registry.yarnpkg.com/argparse/-/argparse-2.0.1.tgz#246f50f3ca78a3240f6c997e8a9bd1eac49e4b38\"",
      "6145:   integrity sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "9586:   resolved \"https://registry.yarnpkg.com/entities/-/entities-2.0.3.tgz#5c487e5742ab93c15abb5da22759b8590ec03b7f\"",
      "9587:   integrity sha512-MyoZ0jgnLvB2X3Lg5HqpFmn1kybDiIfEQmKzTb5apr51Rb+T3KdmMiqa70T+bhGnyv7bQ6WMj2QMHpGMmlrUYQ==",
      "9589: envinfo@^7.3.1:",
      "9590:   version \"7.8.1\"",
      "9591:   resolved \"https://registry.yarnpkg.com/envinfo/-/envinfo-7.8.1.tgz#06377e3e5f4d379fea7ac592d5ad8927e0c4d475\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "9612: entities@~2.1.0:",
      "9613:   version \"2.1.0\"",
      "9614:   resolved \"https://registry.yarnpkg.com/entities/-/entities-2.1.0.tgz#992d3129cf7df6870b96c57858c249a120f8b8b5\"",
      "9615:   integrity sha512-hCx1oky9PFrJ611mf0ifBLBRW8lUUVRlFolb5gWRfIELabBlbp9xZvrqZLZAs+NxFnbfQoeGd8wDkygjg7U85w==",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "9751:   resolved \"https://registry.yarnpkg.com/escalade/-/escalade-3.1.1.tgz#d8cfdc7000965c5a0174b4a82eaa5c0552742e40\"",
      "9752:   integrity sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
      "9755:   version \"1.0.3\"",
      "9756:   resolved \"https://registry.yarnpkg.com/escape-html/-/escape-html-1.0.3.tgz#0258eae4d3d0c0974de1c169188ef0051d1d1988\"",
      "9757:   integrity sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=",
      "",
      "[Removed Lines]",
      "9754: escape-html@~1.0.3:",
      "",
      "[Added Lines]",
      "9782: escape-html@^1.0.3, escape-html@~1.0.3:",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "11512:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
      "11514: \"graphiql@file:packages/graphiql\":",
      "11516:   dependencies:",
      "11518:     codemirror \"^5.58.2\"",
      "11520:     copy-to-clipboard \"^3.2.0\"",
      "11521:     dset \"^3.1.0\"",
      "11522:     entities \"^2.0.0\"",
      "11526: graphql-config@^3.0.2:",
      "11527:   version \"3.0.3\"",
      "",
      "[Removed Lines]",
      "11515:   version \"1.4.3\"",
      "11517:     \"@graphiql/toolkit\" \"^0.3.0\"",
      "11519:     codemirror-graphql \"^1.0.0\"",
      "11523:     graphql-language-service \"^3.1.5\"",
      "11524:     markdown-it \"^10.0.0\"",
      "",
      "[Added Lines]",
      "11543:   version \"1.4.6\"",
      "11545:     \"@graphiql/toolkit\" \"^0.3.2\"",
      "11547:     codemirror-graphql \"^1.0.3\"",
      "11551:     escape-html \"^1.0.3\"",
      "11552:     graphql-language-service \"^3.1.6\"",
      "11553:     markdown-it \"^12.2.0\"",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "14280:   dependencies:",
      "14281:     uc.micro \"^1.0.1\"",
      "14283: lint-staged@^10.1.2:",
      "14284:   version \"10.1.3\"",
      "14285:   resolved \"https://registry.yarnpkg.com/lint-staged/-/lint-staged-10.1.3.tgz#da27713d3ac519da305381b4de87d5f866b1d2f1\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14312: linkify-it@^3.0.1:",
      "14313:   version \"3.0.3\"",
      "14314:   resolved \"https://registry.yarnpkg.com/linkify-it/-/linkify-it-3.0.3.tgz#a98baf44ce45a550efb4d49c769d07524cc2fa2e\"",
      "14315:   integrity sha512-ynTsyrFSdE5oZ/O9GEf00kPngmOfVwazR5GKDq6EYfhlpFug3J2zybX56a2PRRpc9P+FuSoGNAwjlbDs9jJBPQ==",
      "14316:   dependencies:",
      "14317:     uc.micro \"^1.0.1\"",
      "",
      "---------------",
      "--- Hunk 9 ---",
      "[Context before]",
      "14711:     mdurl \"^1.0.1\"",
      "14712:     uc.micro \"^1.0.5\"",
      "14714: markdown-to-jsx@^6.11.4:",
      "14715:   version \"6.11.4\"",
      "14716:   resolved \"https://registry.yarnpkg.com/markdown-to-jsx/-/markdown-to-jsx-6.11.4.tgz#b4528b1ab668aef7fe61c1535c27e837819392c5\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "14750: markdown-it@^12.2.0:",
      "14751:   version \"12.2.0\"",
      "14752:   resolved \"https://registry.yarnpkg.com/markdown-it/-/markdown-it-12.2.0.tgz#091f720fd5db206f80de7a8d1f1a7035fd0d38db\"",
      "14753:   integrity sha512-Wjws+uCrVQRqOoJvze4HCqkKl1AsSh95iFAeQDwnyfxM09divCBSXlDR1uTvyUP3Grzpn4Ru8GeCxYPM8vkCQg==",
      "14754:   dependencies:",
      "14755:     argparse \"^2.0.1\"",
      "14756:     entities \"~2.1.0\"",
      "14757:     linkify-it \"^3.0.1\"",
      "14758:     mdurl \"^1.0.1\"",
      "14759:     uc.micro \"^1.0.5\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a44772d6af97254c4f159ea7237e842a3e3719e8",
      "candidate_info": {
        "commit_hash": "a44772d6af97254c4f159ea7237e842a3e3719e8",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/a44772d6af97254c4f159ea7237e842a3e3719e8",
        "files": [
          ".changeset/cuddly-moons-shave.md",
          "examples/monaco-graphql-webpack/src/schema.ts",
          "packages/graphql-language-service/package.json",
          "packages/graphql-language-service/src/index.ts",
          "packages/graphql-language-service/src/schemaLoader.ts",
          "packages/monaco-graphql/package.json",
          "packages/monaco-graphql/src/GraphQLWorker.ts",
          "packages/monaco-graphql/src/LanguageService.ts",
          "packages/monaco-graphql/src/api.ts",
          "packages/monaco-graphql/src/schemaLoader.ts",
          "packages/monaco-graphql/src/typings/index.ts",
          "packages/monaco-graphql/src/typings/picomatch-browser.ts",
          "packages/monaco-graphql/src/utils.ts",
          "yarn.lock"
        ],
        "message": "fix: import LS only for monaco-graphql (#2103)",
        "before_after_code_files": [
          "examples/monaco-graphql-webpack/src/schema.ts||examples/monaco-graphql-webpack/src/schema.ts",
          "packages/graphql-language-service/src/index.ts||packages/graphql-language-service/src/index.ts",
          "packages/graphql-language-service/src/schemaLoader.ts||packages/graphql-language-service/src/schemaLoader.ts",
          "packages/monaco-graphql/src/GraphQLWorker.ts||packages/monaco-graphql/src/GraphQLWorker.ts",
          "packages/graphql-language-service/src/LanguageService.ts||packages/monaco-graphql/src/LanguageService.ts",
          "packages/monaco-graphql/src/api.ts||packages/monaco-graphql/src/api.ts",
          "packages/monaco-graphql/src/schemaLoader.ts||packages/monaco-graphql/src/schemaLoader.ts",
          "packages/monaco-graphql/src/typings/index.ts||packages/monaco-graphql/src/typings/index.ts",
          "packages/monaco-graphql/src/typings/picomatch-browser.ts||packages/monaco-graphql/src/typings/picomatch-browser.ts",
          "packages/monaco-graphql/src/utils.ts||packages/monaco-graphql/src/utils.ts",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "examples/monaco-graphql-webpack/src/schema.ts||examples/monaco-graphql-webpack/src/schema.ts": [
          "File: examples/monaco-graphql-webpack/src/schema.ts -> examples/monaco-graphql-webpack/src/schema.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { getIntrospectionQuery } from 'graphql';",
          "3: import { Uri } from 'monaco-editor';",
          "5: const SCHEMA_URL = 'https://api.github.com/graphql';",
          "",
          "[Removed Lines]",
          "2: import type { SchemaConfig } from 'graphql-language-service';",
          "",
          "[Added Lines]",
          "2: import type { SchemaConfig } from 'monaco-graphql/src/typings';",
          "",
          "---------------"
        ],
        "packages/graphql-language-service/src/index.ts||packages/graphql-language-service/src/index.ts": [
          "File: packages/graphql-language-service/src/index.ts -> packages/graphql-language-service/src/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "15: export type {",
          "16:   SchemaConfig,",
          "17:   BaseSchemaConfig,",
          "18:   SchemaLoader,",
          "19: } from './schemaLoader';",
          "20: export { defaultSchemaLoader } from './schemaLoader';",
          "22: export type { GraphQLLanguageConfig } from './LanguageService';",
          "23: export { LanguageService } from './LanguageService';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:   GraphQLLanguageService,",
          "44:   SEVERITY,",
          "45:   Severity,",
          "46:   SeverityEnum,",
          "47:   DIAGNOSTIC_SEVERITY,",
          "48:   DefinitionQueryResult,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36:   HoverConfig,",
          "",
          "---------------"
        ],
        "packages/graphql-language-service/src/schemaLoader.ts||packages/graphql-language-service/src/schemaLoader.ts": [
          "File: packages/graphql-language-service/src/schemaLoader.ts -> packages/graphql-language-service/src/schemaLoader.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/GraphQLWorker.ts||packages/monaco-graphql/src/GraphQLWorker.ts": [
          "File: packages/monaco-graphql/src/GraphQLWorker.ts -> packages/monaco-graphql/src/GraphQLWorker.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "10: import type { worker, Position } from 'monaco-editor';",
          "18: import {",
          "19:   toGraphQLPosition,",
          "",
          "[Removed Lines]",
          "8: import { FormattingOptions, ICreateData } from './typings';",
          "12: import {",
          "13:   getRange,",
          "14:   LanguageService,",
          "15:   SchemaConfig,",
          "16: } from 'graphql-language-service';",
          "",
          "[Added Lines]",
          "8: import { FormattingOptions, ICreateData, SchemaConfig } from './typings';",
          "12: import { getRange } from 'graphql-language-service';",
          "14: import { LanguageService } from './LanguageService';",
          "",
          "---------------"
        ],
        "packages/graphql-language-service/src/LanguageService.ts||packages/monaco-graphql/src/LanguageService.ts": [
          "File: packages/graphql-language-service/src/LanguageService.ts -> packages/monaco-graphql/src/LanguageService.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "12:   FragmentDefinitionNode,",
          "13:   visit,",
          "14:   DocumentNode,",
          "15: } from 'graphql';",
          "20: import {",
          "21:   getAutocompleteSuggestions,",
          "22:   getDiagnostics,",
          "23:   getHoverInformation,",
          "24:   HoverConfig,",
          "27: import {",
          "28:   getVariablesJSONSchema,",
          "",
          "[Removed Lines]",
          "17: import { default as picomatch } from 'picomatch';",
          "19: import type { IPosition } from 'graphql-language-service-types';",
          "25: } from 'graphql-language-service-interface';",
          "",
          "[Added Lines]",
          "15:   Source,",
          "18: import picomatch from 'picomatch-browser';",
          "20: import type { IPosition } from 'graphql-language-service';",
          "26: } from 'graphql-language-service';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:   JSONSchemaOptions,",
          "31: } from 'graphql-language-service-utils';",
          "73: type SchemaCacheItem = Omit<SchemaConfig, 'schema'> & { schema: GraphQLSchema };",
          "75: type SchemaCache = Map<string, SchemaCacheItem>;",
          "76: const schemaCache: SchemaCache = new Map();",
          "78: export class LanguageService {",
          "79:   private _parser: typeof parse = parse;",
          "80:   private _schemas: SchemaConfig[] = [];",
          "",
          "[Removed Lines]",
          "33: import {",
          "34:   defaultSchemaLoader,",
          "35:   SchemaConfig,",
          "36:   SchemaLoader,",
          "37: } from './schemaLoader';",
          "43: export type GraphQLLanguageConfig = {",
          "49:   parser?: typeof parse;",
          "53:   parseOptions?: ParseOptions;",
          "58:   schemaLoader?: SchemaLoader;",
          "62:   schemas?: SchemaConfig[];",
          "66:   exteralFragmentDefinitions?: FragmentDefinitionNode[] | string;",
          "70:   customValidationRules?: ValidationRule[];",
          "71: };",
          "",
          "[Added Lines]",
          "34: import { defaultSchemaLoader } from './schemaLoader';",
          "36: import { SchemaConfig, SchemaLoader, GraphQLLanguageConfig } from './typings';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "128:       schema,",
          "129:     });",
          "130:   }",
          "136:   public getSchemaForFile(uri: string): SchemaCacheItem | undefined {",
          "144:       });",
          "150:       }",
          "153:     }",
          "154:   }",
          "",
          "[Removed Lines]",
          "137:     const schema = this._schemas.find(schemaConfig => {",
          "138:       if (!schemaConfig.fileMatch) {",
          "139:         return false;",
          "140:       }",
          "141:       return schemaConfig.fileMatch.some(glob => {",
          "142:         const isMatch = picomatch(glob);",
          "143:         return isMatch(uri);",
          "145:     });",
          "146:     if (schema) {",
          "147:       const cacheEntry = this._schemaCache.get(schema.uri);",
          "148:       if (cacheEntry) {",
          "149:         return cacheEntry;",
          "151:       const cache = this._cacheSchema(schema);",
          "152:       return cache.get(schema.uri);",
          "",
          "[Added Lines]",
          "106:     if (!this._schemas || !this._schemas.length) {",
          "107:       return;",
          "108:     }",
          "109:     if (this._schemas.length === 1) {",
          "110:       return this._schemaCache.get(this._schemas[0].uri);",
          "111:     } else {",
          "112:       const schema = this._schemas.find(schemaConfig => {",
          "113:         if (!schemaConfig.fileMatch) {",
          "114:           return false;",
          "115:         }",
          "116:         return schemaConfig.fileMatch.some(glob => {",
          "117:           const isMatch = picomatch(glob);",
          "118:           return isMatch(uri);",
          "119:         });",
          "121:       if (schema) {",
          "122:         const cacheEntry = this._schemaCache.get(schema.uri);",
          "123:         if (cacheEntry) {",
          "124:           return cacheEntry;",
          "125:         }",
          "126:         const cache = this._cacheSchema(schema);",
          "127:         return cache.get(schema.uri);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "212:   }",
          "220:     return this._parser(text, options || this._parseOptions);",
          "221:   }",
          "",
          "[Removed Lines]",
          "219:   public parse(text: string, options?: ParseOptions): DocumentNode {",
          "",
          "[Added Lines]",
          "195:   public parse(text: string | Source, options?: ParseOptions): DocumentNode {",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/api.ts||packages/monaco-graphql/src/api.ts": [
          "File: packages/monaco-graphql/src/api.ts -> packages/monaco-graphql/src/api.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import { Emitter } from 'monaco-editor';",
          "11: import type { IEvent } from 'monaco-editor';",
          "",
          "[Removed Lines]",
          "8: import { SchemaConfig } from 'graphql-language-service';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "15:   FormattingOptions,",
          "16:   ModeConfiguration,",
          "17:   MonacoGraphQLInitializeConfig,",
          "18: } from './typings';",
          "20: export type MonacoGraphQLAPIOptions = {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17:   SchemaConfig,",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/schemaLoader.ts||packages/monaco-graphql/src/schemaLoader.ts": [
          "File: packages/monaco-graphql/src/schemaLoader.ts -> packages/monaco-graphql/src/schemaLoader.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { buildClientSchema, buildASTSchema } from 'graphql';",
          "3: import type { SchemaLoader } from './typings';",
          "5: export const defaultSchemaLoader: SchemaLoader = (schemaConfig, parser) => {",
          "6:   const {",
          "7:     schema,",
          "8:     documentAST,",
          "9:     introspectionJSON,",
          "10:     introspectionJSONString,",
          "11:     buildSchemaOptions,",
          "12:     documentString,",
          "13:   } = schemaConfig;",
          "14:   if (schema) {",
          "15:     return schema;",
          "16:   }",
          "17:   if (introspectionJSONString) {",
          "18:     const introspectionJSONResult = JSON.parse(introspectionJSONString);",
          "19:     return buildClientSchema(introspectionJSONResult, buildSchemaOptions);",
          "20:   }",
          "21:   if (documentString && parser) {",
          "22:     const docAST = parser(documentString);",
          "23:     return buildASTSchema(docAST, buildSchemaOptions);",
          "24:   }",
          "25:   if (introspectionJSON) {",
          "26:     return buildClientSchema(introspectionJSON, buildSchemaOptions);",
          "27:   }",
          "28:   if (documentAST) {",
          "29:     return buildASTSchema(documentAST, buildSchemaOptions);",
          "30:   }",
          "31:   throw Error('no schema supplied');",
          "32: };",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/typings/index.ts||packages/monaco-graphql/src/typings/index.ts": [
          "File: packages/monaco-graphql/src/typings/index.ts -> packages/monaco-graphql/src/typings/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import type { languages } from 'monaco-editor';",
          "7: import type { Options as PrettierConfig } from 'prettier';",
          "9: export interface IDisposable {",
          "10:   dispose(): void;",
          "11: }",
          "15: export type JSONDiagnosticOptions = languages.json.DiagnosticsOptions;",
          "16: export interface IEvent<T> {",
          "17:   (listener: (e: T) => any, thisArg?: any): IDisposable;",
          "",
          "[Removed Lines]",
          "1: import type {",
          "2:   SchemaConfig as SchemaConfiguration,",
          "3:   GraphQLLanguageConfig,",
          "4: } from 'graphql-language-service';",
          "13: export type SchemaConfig = SchemaConfiguration;",
          "",
          "[Added Lines]",
          "3: import {",
          "4:   IntrospectionQuery,",
          "5:   DocumentNode,",
          "6:   BuildSchemaOptions,",
          "7:   parse,",
          "8:   ParseOptions,",
          "9:   GraphQLSchema,",
          "10:   ValidationRule,",
          "11:   FragmentDefinitionNode,",
          "12: } from 'graphql';",
          "16: export type BaseSchemaConfig = {",
          "17:   buildSchemaOptions?: BuildSchemaOptions;",
          "18:   schema?: GraphQLSchema;",
          "19:   documentString?: string;",
          "20:   documentAST?: DocumentNode;",
          "21:   introspectionJSON?: IntrospectionQuery;",
          "22:   introspectionJSONString?: string;",
          "23: };",
          "33: export type SchemaConfig = {",
          "38:   uri: string;",
          "44:   fileMatch?: string[];",
          "48:   buildSchemaOptions?: BuildSchemaOptions;",
          "52:   schema?: GraphQLSchema;",
          "56:   documentString?: string;",
          "60:   documentAST?: DocumentNode;",
          "64:   introspectionJSON?: IntrospectionQuery;",
          "68:   introspectionJSONString?: string;",
          "69: };",
          "80: export type SchemaLoader = (",
          "81:   schemaConfig: SchemaConfig,",
          "82:   parser: GraphQLLanguageConfig['parser'],",
          "83: ) => GraphQLSchema;",
          "89: export type GraphQLLanguageConfig = {",
          "95:   parser?: typeof parse;",
          "99:   parseOptions?: ParseOptions;",
          "104:   schemaLoader?: SchemaLoader;",
          "109:   schemas?: SchemaConfig[];",
          "113:   exteralFragmentDefinitions?: FragmentDefinitionNode[] | string;",
          "117:   customValidationRules?: ValidationRule[];",
          "118: };",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/typings/picomatch-browser.ts||packages/monaco-graphql/src/typings/picomatch-browser.ts": [
          "File: packages/monaco-graphql/src/typings/picomatch-browser.ts -> packages/monaco-graphql/src/typings/picomatch-browser.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: declare module 'picomatch-browser';",
          "",
          "---------------"
        ],
        "packages/monaco-graphql/src/utils.ts||packages/monaco-graphql/src/utils.ts": [
          "File: packages/monaco-graphql/src/utils.ts -> packages/monaco-graphql/src/utils.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: import type {",
          "9:   IRange as GraphQLRange,",
          "10:   IPosition as GraphQLPosition,",
          "11:   Diagnostic,",
          "12:   CompletionItem as GraphQLCompletionItem,",
          "14: } from 'graphql-language-service';",
          "16: import { buildASTSchema, printSchema } from 'graphql';",
          "",
          "[Removed Lines]",
          "13:   SchemaConfig,",
          "",
          "[Added Lines]",
          "8: import { SchemaConfig } from './typings';",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "11047:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
          "11049: \"graphiql@file:packages/graphiql\":",
          "11051:   dependencies:",
          "11052:     \"@graphiql/toolkit\" \"^0.4.2\"",
          "11053:     codemirror \"^5.58.2\"",
          "11055:     copy-to-clipboard \"^3.2.0\"",
          "11056:     dset \"^3.1.0\"",
          "11057:     entities \"^2.0.0\"",
          "11058:     escape-html \"^1.0.3\"",
          "11060:     markdown-it \"^12.2.0\"",
          "11062: graphql-config@^4.1.0:",
          "",
          "[Removed Lines]",
          "11050:   version \"1.5.13\"",
          "11054:     codemirror-graphql \"^1.2.8\"",
          "11059:     graphql-language-service \"^4.1.1\"",
          "",
          "[Added Lines]",
          "11050:   version \"1.5.14\"",
          "11054:     codemirror-graphql \"^1.2.9\"",
          "11059:     graphql-language-service \"^4.1.2\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dec207e74f0506db069482cc30f8cd1f045d8107",
      "candidate_info": {
        "commit_hash": "dec207e74f0506db069482cc30f8cd1f045d8107",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/dec207e74f0506db069482cc30f8cd1f045d8107",
        "files": [
          ".changeset/lovely-cycles-call.md",
          "packages/graphiql-toolkit/docs/create-fetcher.md",
          "packages/graphiql-toolkit/package.json",
          "packages/graphiql-toolkit/src/create-fetcher/lib.ts",
          "packages/graphiql-toolkit/src/create-fetcher/types.ts",
          "packages/graphiql/cypress/integration/docs.spec.ts",
          "packages/graphiql/cypress/integration/graphqlWs.spec.ts",
          "packages/graphiql/cypress/integration/init.spec.ts",
          "packages/graphiql/package.json",
          "packages/graphiql/resources/renderExample.js",
          "packages/graphiql/resources/webpack.config.js",
          "packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/test/afterDevServer.js",
          "packages/graphiql/test/e2e-server.js",
          "packages/graphiql/test/schema.js",
          "packages/graphiql/tsconfig.esm.json",
          "packages/graphiql/tsconfig.json",
          "yarn.lock"
        ],
        "message": "graphql-ws upgrade, move to peerDependency (#2017)",
        "before_after_code_files": [
          "packages/graphiql-toolkit/src/create-fetcher/lib.ts||packages/graphiql-toolkit/src/create-fetcher/lib.ts",
          "packages/graphiql-toolkit/src/create-fetcher/types.ts||packages/graphiql-toolkit/src/create-fetcher/types.ts",
          "packages/graphiql/cypress/integration/docs.spec.ts||packages/graphiql/cypress/integration/docs.spec.ts",
          "packages/graphiql/cypress/integration/graphqlWs.spec.ts||packages/graphiql/cypress/integration/graphqlWs.spec.ts",
          "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
          "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js",
          "packages/graphiql/resources/webpack.config.js||packages/graphiql/resources/webpack.config.js",
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
          "packages/graphiql/test/afterDevServer.js||packages/graphiql/test/afterDevServer.js",
          "packages/graphiql/test/e2e-server.js||packages/graphiql/test/e2e-server.js",
          "packages/graphiql/test/schema.js||packages/graphiql/test/schema.js",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
            "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js",
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
            "packages/graphiql/test/e2e-server.js||packages/graphiql/test/e2e-server.js",
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts",
            "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js",
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx",
            "packages/graphiql/test/e2e-server.js||packages/graphiql/test/e2e-server.js",
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql-toolkit/src/create-fetcher/lib.ts||packages/graphiql-toolkit/src/create-fetcher/lib.ts": [
          "File: packages/graphiql-toolkit/src/create-fetcher/lib.ts -> packages/graphiql-toolkit/src/create-fetcher/lib.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { DocumentNode, visit, GraphQLError } from 'graphql';",
          "2: import { meros } from 'meros';",
          "4: import {",
          "5:   isAsyncIterable,",
          "6:   makeAsyncIterableIteratorFromSink,",
          "",
          "[Removed Lines]",
          "3: import { createClient, Client, ClientOptions } from 'graphql-ws';",
          "",
          "[Added Lines]",
          "3: import {",
          "4:   createClient,",
          "5:   Client,",
          "6:   ClientOptions,",
          "7:   ExecutionResult,",
          "8: } from 'graphql-ws';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9: import type {",
          "10:   Fetcher,",
          "12:   FetcherParams,",
          "13:   FetcherOpts,",
          "15:   CreateFetcherOptions,",
          "16: } from './types';",
          "",
          "[Removed Lines]",
          "11:   FetcherResult,",
          "14:   FetcherResultPayload,",
          "",
          "[Added Lines]",
          "18:   ExecutionResultPayload,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92: export const createWebsocketsFetcherFromClient = (wsClient: Client) => (",
          "93:   graphQLParams: FetcherParams,",
          "94: ) =>",
          "96:     wsClient!.subscribe(graphQLParams, {",
          "97:       ...sink,",
          "98:       error: err => {",
          "",
          "[Removed Lines]",
          "95:   makeAsyncIterableIteratorFromSink<FetcherResult>(sink =>",
          "",
          "[Added Lines]",
          "99:   makeAsyncIterableIteratorFromSink<ExecutionResult>(sink =>",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "126:   request: (params: FetcherParams) => unknown;",
          "127: }) => (graphQLParams: FetcherParams) => {",
          "128:   const observable = legacyWsClient.request(graphQLParams);",
          "131:     sink => observable.subscribe(sink).unsubscribe,",
          "132:   );",
          "",
          "[Removed Lines]",
          "129:   return makeAsyncIterableIteratorFromSink<FetcherResult>(",
          "",
          "[Added Lines]",
          "133:   return makeAsyncIterableIteratorFromSink<ExecutionResult>(",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "155:         ...fetcherOpts?.headers,",
          "156:       },",
          "157:     }).then(response =>",
          "159:         multiple: true,",
          "160:       }),",
          "161:     );",
          "",
          "[Removed Lines]",
          "158:       meros<Extract<FetcherResultPayload, { hasNext: boolean }>>(response, {",
          "",
          "[Added Lines]",
          "162:       meros<Extract<ExecutionResultPayload, { hasNext: boolean }>>(response, {",
          "",
          "---------------"
        ],
        "packages/graphiql-toolkit/src/create-fetcher/types.ts||packages/graphiql-toolkit/src/create-fetcher/types.ts": [
          "File: packages/graphiql-toolkit/src/create-fetcher/types.ts -> packages/graphiql-toolkit/src/create-fetcher/types.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import type { DocumentNode, IntrospectionQuery } from 'graphql';",
          "4: export type Observable<T> = {",
          "5:   subscribe(opts: {",
          "",
          "[Removed Lines]",
          "2: import type { Client, ClientOptions } from 'graphql-ws';",
          "",
          "[Added Lines]",
          "2: import type { Client, ClientOptions, ExecutionResult } from 'graphql-ws';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:   documentAST?: DocumentNode;",
          "37: };",
          "40:   | {",
          "41:       data: IntrospectionQuery;",
          "42:       errors?: Array<any>;",
          "",
          "[Removed Lines]",
          "39: export type FetcherResultPayload =",
          "",
          "[Added Lines]",
          "39: export type ExecutionResultPayload =",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53:       hasNext: boolean;",
          "54:     };",
          "58: export type MaybePromise<T> = T | Promise<T>;",
          "67: export type Fetcher = (",
          "68:   graphQLParams: FetcherParams,",
          "",
          "[Removed Lines]",
          "56: export type FetcherResult = FetcherResultPayload | string;",
          "60: export type SyncFetcherResult =",
          "61:   | FetcherResult",
          "62:   | Observable<FetcherResult>",
          "63:   | AsyncIterable<FetcherResult>;",
          "65: export type FetcherReturnType = MaybePromise<SyncFetcherResult>;",
          "",
          "[Added Lines]",
          "56: export type FetcherResultPayload = ExecutionResultPayload;",
          "60: export type FetcherResult = ExecutionResult | { data: IntrospectionQuery };",
          "62: export type SyncExecutionResult =",
          "63:   | ExecutionResult",
          "64:   | Observable<ExecutionResult>",
          "65:   | AsyncIterable<ExecutionResult>;",
          "67: export type SyncFetcherResult = SyncExecutionResult;",
          "69: export type FetcherReturnType = MaybePromise<SyncExecutionResult>;",
          "",
          "---------------"
        ],
        "packages/graphiql/cypress/integration/docs.spec.ts||packages/graphiql/cypress/integration/docs.spec.ts": [
          "File: packages/graphiql/cypress/integration/docs.spec.ts -> packages/graphiql/cypress/integration/docs.spec.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:   it('Searches docs for values', () => {",
          "24:     cy.get('label.search-box input').type('test');",
          "26:   });",
          "28:   it('Navigates to a docs entry on selecting a search result', () => {",
          "",
          "[Removed Lines]",
          "25:     cy.get('.doc-category-item').should('have.length', 8);",
          "",
          "[Added Lines]",
          "25:     cy.get('.doc-category-item').should('have.length', 7);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:   });",
          "52:   it('Type fields link to their own docs entry', () => {",
          "55:     cy.get('.doc-search-items>.doc-category-item')",
          "56:       .last()",
          "57:       .find('a:nth-child(2)')",
          "58:       .click();",
          "61:     cy.get('.doc-type-description').should(",
          "62:       'have.text',",
          "64:     );",
          "65:   });",
          "",
          "[Removed Lines]",
          "53:     cy.get('label.search-box input').type('test');",
          "54:     cy.pause();",
          "59:     cy.pause();",
          "60:     cy.get('.doc-explorer-title').should('have.text', 'subscribeToTest');",
          "63:       'Subscribe to the test type\\n',",
          "",
          "[Added Lines]",
          "58:     cy.get('.doc-explorer-title').should('have.text', 'isTest');",
          "61:       'Is this a test schema? Sure it is.\\n',",
          "",
          "---------------"
        ],
        "packages/graphiql/cypress/integration/graphqlWs.spec.ts||packages/graphiql/cypress/integration/graphqlWs.spec.ts": [
          "File: packages/graphiql/cypress/integration/graphqlWs.spec.ts -> packages/graphiql/cypress/integration/graphqlWs.spec.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: describe('IncrementalDelivery support via fetcher', () => {",
          "2:   describe('When operation contains @stream', () => {",
          "3:     const testSubscription = /* GraphQL */ `",
          "4:       subscription TestSubscription($delay: Int) {",
          "5:         message(delay: $delay)",
          "6:       }",
          "7:     `;",
          "8:     const mockSubscriptionSuccess = {",
          "9:       data: {",
          "10:         message: 'Zdravo',",
          "11:       },",
          "12:     };",
          "14:     it('Expects a subscription to resolve', () => {",
          "15:       cy.assertQueryResult(",
          "16:         { query: testSubscription, variables: { delay: 0 } },",
          "17:         mockSubscriptionSuccess,",
          "18:         1200,",
          "19:       );",
          "20:     });",
          "21:   });",
          "22: });",
          "",
          "---------------"
        ],
        "packages/graphiql/cypress/integration/init.spec.ts||packages/graphiql/cypress/integration/init.spec.ts": [
          "File: packages/graphiql/cypress/integration/init.spec.ts -> packages/graphiql/cypress/integration/init.spec.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "48:     cy.visit(`/?bad=true`);",
          "49:     cy.assertResult({",
          "50:       errors: [",
          "55:       ],",
          "56:     });",
          "57:   });",
          "",
          "[Removed Lines]",
          "51:         {",
          "52:           message:",
          "53:             'Names must only contain [_a-zA-Z0-9] but \"<img src=x onerror=alert(document.domain)>\" does not.',",
          "54:         },",
          "",
          "[Added Lines]",
          "51:         'Names must only contain [_a-zA-Z0-9] but \"<img src=x onerror=alert(document.domain)>\" does not.',",
          "",
          "---------------"
        ],
        "packages/graphiql/resources/renderExample.js||packages/graphiql/resources/renderExample.js": [
          "File: packages/graphiql/resources/renderExample.js -> packages/graphiql/resources/renderExample.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "112: ReactDOM.render(",
          "113:   React.createElement(GraphiQL, {",
          "115:     query: parameters.query,",
          "116:     variables: parameters.variables,",
          "117:     headers: parameters.headers,",
          "",
          "[Removed Lines]",
          "114:     fetcher: GraphiQL.createFetcher({ url: getSchemaUrl() }),",
          "",
          "[Added Lines]",
          "114:     fetcher: GraphiQL.createFetcher({",
          "115:       url: getSchemaUrl(),",
          "116:       subscriptionUrl: 'ws://localhost:8081/subscriptions',",
          "117:     }),",
          "",
          "---------------"
        ],
        "packages/graphiql/resources/webpack.config.js||packages/graphiql/resources/webpack.config.js": [
          "File: packages/graphiql/resources/webpack.config.js -> packages/graphiql/resources/webpack.config.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:     allowedHosts: ['local.example.com', 'graphiql.com'],",
          "31:     before: require('../test/beforeDevServer'),",
          "32:   },",
          "33:   devtool: isDev ? 'cheap-module-eval-source-map' : 'source-map',",
          "34:   node: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32:     after: require('../test/afterDevServer'),",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "24:   FragmentDefinitionNode,",
          "25:   DocumentNode,",
          "26:   GraphQLError,",
          "28:   GraphQLFormattedError,",
          "29: } from 'graphql';",
          "30: import copyToClipboard from 'copy-to-clipboard';",
          "33: import { ExecuteButton } from './ExecuteButton';",
          "34: import { ImagePreview } from './ImagePreview';",
          "",
          "[Removed Lines]",
          "27:   formatError as formatGraphQLError,",
          "31: import { getFragmentDependenciesForAST } from 'graphql-language-service-utils';",
          "",
          "[Added Lines]",
          "28:   IntrospectionQuery,",
          "31: import { getFragmentDependenciesForAST } from 'graphql-language-service';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "185:   error: InputError,",
          "186: ): GraphQLFormattedError | Error | string => {",
          "187:   if (error instanceof GraphQLError) {",
          "189:   }",
          "190:   if (error instanceof Error) {",
          "191:     return formatSingleError(error);",
          "",
          "[Removed Lines]",
          "188:     return formatGraphQLError(error);",
          "",
          "[Added Lines]",
          "188:     return error.toString();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "938:           return;",
          "939:         }",
          "942:           let schema: GraphQLSchema | undefined = buildClientSchema(",
          "944:           );",
          "945:           if (!this.props.dangerouslyAssumeSchemaIsValid) {",
          "946:             const errors = validateSchema(schema);",
          "",
          "[Removed Lines]",
          "941:         if (typeof result !== 'string' && 'data' in result) {",
          "943:             result.data,",
          "",
          "[Added Lines]",
          "941:         if (result && result.data && '__schema' in result?.data) {",
          "943:             result.data as IntrospectionQuery,",
          "",
          "---------------"
        ],
        "packages/graphiql/test/afterDevServer.js||packages/graphiql/test/afterDevServer.js": [
          "File: packages/graphiql/test/afterDevServer.js -> packages/graphiql/test/afterDevServer.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "2: const { useServer } = require('graphql-ws/lib/use/ws');",
          "3: const { Server: WebSocketServer } = require('ws');",
          "4: const schema = require('./schema');",
          "6: module.exports = function afterDevServer(app, _server, _compiler) {",
          "7:   const wsServer = new WebSocketServer({",
          "8:     path: '/subscriptions',",
          "9:     port: 8081,",
          "10:   });",
          "11:   useServer({ schema }, wsServer);",
          "12: };",
          "",
          "---------------"
        ],
        "packages/graphiql/test/e2e-server.js||packages/graphiql/test/e2e-server.js": [
          "File: packages/graphiql/test/e2e-server.js -> packages/graphiql/test/e2e-server.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "12: const schema = require('./schema');",
          "13: const app = express();",
          "14: const { schema: badSchema } = require('./bad-schema');",
          "17: app.post('/graphql', graphqlHTTP({ schema }));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "15: const WebSocketsServer = require('./afterDevServer');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43:     process.exit();",
          "44:   });",
          "45: });",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "48: WebSocketsServer();",
          "",
          "---------------"
        ],
        "packages/graphiql/test/schema.js||packages/graphiql/test/schema.js": [
          "File: packages/graphiql/test/schema.js -> packages/graphiql/test/schema.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "178:       },",
          "179:       type: GraphQLInt,",
          "180:       resolve: async function lazilyReturnValue(_value, args) {",
          "182:         await sleep(args.delay);",
          "183:         return Math.ceil(args.delay);",
          "184:       },",
          "",
          "[Removed Lines]",
          "181:         const seconds = args.delay / 1000;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "201: const TestType = new GraphQLObjectType({",
          "202:   name: 'Test',",
          "203:   fields: () => ({",
          "204:     test: {",
          "205:       type: TestType,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "203:   description: 'Test type for testing',",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "322: const TestSubscriptionType = new GraphQLObjectType({",
          "323:   name: 'SubscriptionType',",
          "324:   description:",
          "326:   fields: {",
          "330:       args: {",
          "332:       },",
          "333:     },",
          "334:   },",
          "",
          "[Removed Lines]",
          "325:     'This is a simple subscription type. Learn more at https://graphql.org/blog/subscriptions-in-graphql-and-relay/',",
          "327:     subscribeToTest: {",
          "328:       type: TestType,",
          "329:       description: 'Subscribe to the test type',",
          "331:         id: { type: GraphQLString },",
          "",
          "[Added Lines]",
          "326:     'This is a simple subscription type. Learn more at https://www.npmjs.com/package/graphql-ws',",
          "328:     message: {",
          "329:       type: GraphQLString,",
          "330:       description: 'Subscribe to a message',",
          "332:         delay: delayArgument(600),",
          "333:       },",
          "334:       async *subscribe(args) {",
          "335:         for (const hi of ['Hi', 'Bonjour', 'Hola', 'Ciao', 'Zdravo']) {",
          "336:           if (args?.delay) {",
          "337:             await sleep(args.delay);",
          "338:           }",
          "339:           yield { message: hi };",
          "340:         }",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "3288:   integrity sha512-6U71C2Wp7r5XtFtQzYrW5iKFT67OixrSxjI4MptCHzdSVlgabczzqLe0ZSgnub/5Kp4hSbpDB1tMytZY9pwxxA==",
          "3290: \"@graphiql/toolkit@file:packages/graphiql-toolkit\":",
          "3292:   dependencies:",
          "3295:     meros \"^1.1.4\"",
          "3297: \"@graphql-tools/delegate@6.2.1\":",
          "",
          "[Removed Lines]",
          "3291:   version \"0.3.2\"",
          "3293:     \"@n1ru4l/push-pull-async-iterable-iterator\" \"^3.0.0\"",
          "3294:     graphql-ws \"^4.9.0\"",
          "",
          "[Added Lines]",
          "3291:   version \"0.4.0\"",
          "3293:     \"@n1ru4l/push-pull-async-iterable-iterator\" \"^3.1.0\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3860:     call-me-maybe \"^1.0.1\"",
          "3861:     glob-to-regexp \"^0.3.0\"",
          "3868: \"@nicolo-ribaudo/chokidar-2@2.1.8-no-fsevents\":",
          "3869:   version \"2.1.8-no-fsevents\"",
          "",
          "[Removed Lines]",
          "3863: \"@n1ru4l/push-pull-async-iterable-iterator@^3.0.0\":",
          "3864:   version \"3.0.0\"",
          "3865:   resolved \"https://registry.yarnpkg.com/@n1ru4l/push-pull-async-iterable-iterator/-/push-pull-async-iterable-iterator-3.0.0.tgz#22dc34094c2de5f21b9a798d0ffab16b45de0eb7\"",
          "3866:   integrity sha512-gwoIwo/Dt1GOI+lbcG1G7IeRM2K+Fo0op3OGyFJ4tXUCf2a3Q8lUCm81aoevrXC0nu4gbAXeOWy7wWxjpSvZUw==",
          "",
          "[Added Lines]",
          "3862: \"@n1ru4l/push-pull-async-iterable-iterator@^3.1.0\":",
          "3863:   version \"3.1.0\"",
          "3864:   resolved \"https://registry.yarnpkg.com/@n1ru4l/push-pull-async-iterable-iterator/-/push-pull-async-iterable-iterator-3.1.0.tgz#be450c97d1c7cd6af1a992d53232704454345df9\"",
          "3865:   integrity sha512-K4scWxGhdQM0masHHy4gIQs2iGiLEXCrXttumknyPJqtdl4J179BjpibWSSQ1fxKdCcHgIlCTKXJU6cMM6D6Wg==",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "11540:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
          "11542: \"graphiql@file:packages/graphiql\":",
          "11544:   dependencies:",
          "11546:     codemirror \"^5.58.2\"",
          "11548:     copy-to-clipboard \"^3.2.0\"",
          "11549:     dset \"^3.1.0\"",
          "11550:     entities \"^2.0.0\"",
          "11551:     escape-html \"^1.0.3\"",
          "11553:     markdown-it \"^12.2.0\"",
          "11555: graphql-config@^3.0.2:",
          "",
          "[Removed Lines]",
          "11543:   version \"1.4.6\"",
          "11545:     \"@graphiql/toolkit\" \"^0.3.2\"",
          "11547:     codemirror-graphql \"^1.0.3\"",
          "11552:     graphql-language-service \"^3.1.6\"",
          "",
          "[Added Lines]",
          "11542:   version \"1.5.1\"",
          "11544:     \"@graphiql/toolkit\" \"^0.4.0\"",
          "11546:     codemirror-graphql \"^1.1.0\"",
          "11551:     graphql-language-service \"^3.2.1\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "11568:     string-env-interpolation \"1.0.1\"",
          "11569:     tslib \"^2.0.0\"",
          "11576: graphql@16.0.0-experimental-stream-defer.5:",
          "11577:   version \"16.0.0-experimental-stream-defer.5\"",
          "",
          "[Removed Lines]",
          "11571: graphql-ws@^4.9.0:",
          "11572:   version \"4.9.0\"",
          "11573:   resolved \"https://registry.yarnpkg.com/graphql-ws/-/graphql-ws-4.9.0.tgz#5cfd8bb490b35e86583d8322f5d5d099c26e365c\"",
          "11574:   integrity sha512-sHkK9+lUm20/BGawNEWNtVAeJzhZeBg21VmvmLoT5NdGVeZWv5PdIhkcayQIAgjSyyQ17WMKmbDijIPG2On+Ag==",
          "",
          "[Added Lines]",
          "11570: graphql-subscriptions@^2.0.0:",
          "11571:   version \"2.0.0\"",
          "11572:   resolved \"https://registry.yarnpkg.com/graphql-subscriptions/-/graphql-subscriptions-2.0.0.tgz#11ec181d475852d8aec879183e8e1eb94f2eb79a\"",
          "11573:   integrity sha512-s6k2b8mmt9gF9pEfkxsaO1lTxaySfKoEJzEfmwguBbQ//Oq23hIXCfR1hm4kdh5hnR20RdwB+s3BCb+0duHSZA==",
          "11574:   dependencies:",
          "11575:     iterall \"^1.3.0\"",
          "11577: graphql-ws@^5.5.5:",
          "11578:   version \"5.5.5\"",
          "11579:   resolved \"https://registry.yarnpkg.com/graphql-ws/-/graphql-ws-5.5.5.tgz#f375486d3f196e2a2527b503644693ae3a8670a9\"",
          "11580:   integrity sha512-hvyIS71vs4Tu/yUYHPvGXsTgo0t3arU820+lT5VjZS2go0ewp2LqyCgxEN56CzOG7Iys52eRhHBiD1gGRdiQtw==",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "13078:     html-escaper \"^2.0.0\"",
          "13079:     istanbul-lib-report \"^3.0.0\"",
          "13082:   version \"1.3.0\"",
          "13083:   resolved \"https://registry.yarnpkg.com/iterall/-/iterall-1.3.0.tgz#afcb08492e2915cbd8a0884eb93a8c94d0d72fea\"",
          "13084:   integrity sha512-QZ9qOMdF+QLHxy1QIpUHUU1D5pS2CG2P69LF6L6CPjPYA/XMOmKV3PZpawHoAjHNyB0swdVTRxdYT4tbBbxqwg==",
          "",
          "[Removed Lines]",
          "13081: iterall@^1.2.1:",
          "",
          "[Added Lines]",
          "13087: iterall@^1.2.1, iterall@^1.3.0:",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "19994:     postcss \"^7.0.0\"",
          "19995:     postcss-selector-parser \"^3.0.0\"",
          "19997: subscriptions-transport-ws@0.9.18:",
          "19998:   version \"0.9.18\"",
          "19999:   resolved \"https://registry.yarnpkg.com/subscriptions-transport-ws/-/subscriptions-transport-ws-0.9.18.tgz#bcf02320c911fbadb054f7f928e51c6041a37b97\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20003: subscriptions-transport-ws@0.11.0:",
          "20004:   version \"0.11.0\"",
          "20005:   resolved \"https://registry.yarnpkg.com/subscriptions-transport-ws/-/subscriptions-transport-ws-0.11.0.tgz#baf88f050cba51d52afe781de5e81b3c31f89883\"",
          "20006:   integrity sha512-8D4C6DIH5tGiAIpp5I0wD/xRlNiZAPGHygzCe7VzyzUoxHtawzjNAY9SUTXU05/EY2NMY9/9GF0ycizkXr1CWQ==",
          "20007:   dependencies:",
          "20008:     backo2 \"^1.0.2\"",
          "20009:     eventemitter3 \"^3.1.0\"",
          "20010:     iterall \"^1.2.1\"",
          "20011:     symbol-observable \"^1.0.4\"",
          "20012:     ws \"^5.2.0 || ^6.0.0 || ^7.0.0\"",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "21884:   dependencies:",
          "21885:     mkdirp \"^0.5.1\"",
          "21887: ws@^5.1.1:",
          "21888:   version \"5.2.3\"",
          "21889:   resolved \"https://registry.yarnpkg.com/ws/-/ws-5.2.3.tgz#05541053414921bc29c63bee14b8b0dd50b07b3d\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21904: ws@:",
          "21905:   version \"8.2.3\"",
          "21906:   resolved \"https://registry.yarnpkg.com/ws/-/ws-8.2.3.tgz#63a56456db1b04367d0b721a0b80cae6d8becbba\"",
          "21907:   integrity sha512-wBuoj1BDpC6ZQ1B7DWQBYVLphPWkm8i9Y0/3YdHjHKHiohOJ1ws+3OccDWtH+PoC9DZD5WOTrJvNbWvjS6JWaA==",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "3626f8d5012ee77a39e984ae347396cb00fcc6fa",
      "candidate_info": {
        "commit_hash": "3626f8d5012ee77a39e984ae347396cb00fcc6fa",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/3626f8d5012ee77a39e984ae347396cb00fcc6fa",
        "files": [
          ".changeset/giant-hats-camp.md",
          ".changeset/rude-walls-mix.md",
          "packages/graphql-language-service-cli/package.json",
          "yarn.lock"
        ],
        "message": "fix lockfile and imports from LSP merge (#2243)\n\n* fix lockfile and imports\n\n* create changeset",
        "before_after_code_files": [
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "11265:   integrity sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==",
          "11267: \"graphiql@file:packages/graphiql\":",
          "11269:   dependencies:",
          "11270:     \"@graphiql/toolkit\" \"^0.4.2\"",
          "11271:     codemirror \"^5.58.2\"",
          "11273:     copy-to-clipboard \"^3.2.0\"",
          "11274:     dset \"^3.1.0\"",
          "11275:     entities \"^2.0.0\"",
          "11276:     escape-html \"^1.0.3\"",
          "11278:     markdown-it \"^12.2.0\"",
          "11280: graphql-config@^4.1.0:",
          "",
          "[Removed Lines]",
          "11268:   version \"1.6.0\"",
          "11272:     codemirror-graphql \"^1.2.12\"",
          "11277:     graphql-language-service \"^4.1.5\"",
          "",
          "[Added Lines]",
          "11268:   version \"1.7.1\"",
          "11272:     codemirror-graphql \"^1.2.13\"",
          "11277:     graphql-language-service \"^5.0.0\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a0b02edaa629c6113c1c5518fd3aa05b355a1921",
      "candidate_info": {
        "commit_hash": "a0b02edaa629c6113c1c5518fd3aa05b355a1921",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/a0b02edaa629c6113c1c5518fd3aa05b355a1921",
        "files": [
          ".changeset/ninety-suns-tell.md",
          "packages/graphiql-react/src/editor/context.tsx",
          "packages/graphiql-react/src/editor/header-editor.tsx",
          "packages/graphiql-react/src/editor/hooks.ts",
          "packages/graphiql-react/src/editor/index.ts",
          "packages/graphiql-react/src/editor/query-editor.tsx",
          "packages/graphiql-react/src/editor/response-editor.tsx",
          "packages/graphiql-react/src/editor/variable-editor.tsx",
          "packages/graphiql-react/src/explorer.tsx",
          "packages/graphiql-react/src/history.tsx",
          "packages/graphiql-react/src/index.ts",
          "packages/graphiql-react/src/schema.tsx",
          "packages/graphiql-react/src/schema/hooks.ts",
          "packages/graphiql-react/src/schema/index.ts",
          "packages/graphiql-react/src/storage.tsx",
          "packages/graphiql-react/src/utility/context.ts",
          "packages/graphiql/__mocks__/@graphiql/react.ts",
          "packages/graphiql/src/components/DocExplorer.tsx",
          "packages/graphiql/src/components/GraphiQL.tsx"
        ],
        "message": "assume all context values are nullable and create hooks to consume individual contexts (#2449)",
        "before_after_code_files": [
          "packages/graphiql-react/src/editor/context.tsx||packages/graphiql-react/src/editor/context.tsx",
          "packages/graphiql-react/src/editor/header-editor.tsx||packages/graphiql-react/src/editor/header-editor.tsx",
          "packages/graphiql-react/src/editor/hooks.ts||packages/graphiql-react/src/editor/hooks.ts",
          "packages/graphiql-react/src/editor/index.ts||packages/graphiql-react/src/editor/index.ts",
          "packages/graphiql-react/src/editor/query-editor.tsx||packages/graphiql-react/src/editor/query-editor.tsx",
          "packages/graphiql-react/src/editor/response-editor.tsx||packages/graphiql-react/src/editor/response-editor.tsx",
          "packages/graphiql-react/src/editor/variable-editor.tsx||packages/graphiql-react/src/editor/variable-editor.tsx",
          "packages/graphiql-react/src/explorer.tsx||packages/graphiql-react/src/explorer.tsx",
          "packages/graphiql-react/src/history.tsx||packages/graphiql-react/src/history.tsx",
          "packages/graphiql-react/src/index.ts||packages/graphiql-react/src/index.ts",
          "packages/graphiql-react/src/schema/context.tsx||packages/graphiql-react/src/schema.tsx",
          "packages/graphiql-react/src/schema/hooks.ts||packages/graphiql-react/src/schema/hooks.ts",
          "packages/graphiql-react/src/schema/index.ts||packages/graphiql-react/src/schema/index.ts",
          "packages/graphiql-react/src/storage.tsx||packages/graphiql-react/src/storage.tsx",
          "packages/graphiql-react/src/utility/context.ts||packages/graphiql-react/src/utility/context.ts",
          "packages/graphiql/__mocks__/@graphiql/react.ts||packages/graphiql/__mocks__/@graphiql/react.ts",
          "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
          "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ],
          "candidate": [
            "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx",
            "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx"
          ]
        }
      },
      "candidate_diff": {
        "packages/graphiql-react/src/editor/context.tsx||packages/graphiql-react/src/editor/context.tsx": [
          "File: packages/graphiql-react/src/editor/context.tsx -> packages/graphiql-react/src/editor/context.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { fillLeafs, GetDefaultFieldNamesFn } from '@graphiql/toolkit';",
          "2: import { DocumentNode, OperationDefinitionNode } from 'graphql';",
          "3: import { VariableToType } from 'graphql-language-service';",
          "13: import { useCopyQuery, useMergeQuery, usePrettifyEditors } from './hooks';",
          "14: import { CodeMirrorEditor } from './types';",
          "",
          "[Removed Lines]",
          "4: import {",
          "5:   createContext,",
          "6:   ReactNode,",
          "7:   useCallback,",
          "8:   useMemo,",
          "9:   useState,",
          "10: } from 'react';",
          "12: import { useSchemaWithError } from '../schema';",
          "",
          "[Added Lines]",
          "4: import { ReactNode, useCallback, useMemo, useState } from 'react';",
          "5: import { useSchemaContext } from '../schema';",
          "7: import { createContextHook, createNullableContext } from '../utility/context';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35:   setVariableEditor(newEditor: CodeMirrorEditor): void;",
          "36: };",
          "55: type EditorContextProviderProps = {",
          "56:   children: ReactNode;",
          "",
          "[Removed Lines]",
          "38: export const EditorContext = createContext<EditorContextType>({",
          "39:   autoCompleteLeafs() {",
          "40:     return undefined;",
          "41:   },",
          "42:   copy() {},",
          "43:   merge() {},",
          "44:   prettify() {},",
          "45:   headerEditor: null,",
          "46:   queryEditor: null,",
          "47:   responseEditor: null,",
          "48:   variableEditor: null,",
          "49:   setHeaderEditor() {},",
          "50:   setQueryEditor() {},",
          "51:   setResponseEditor() {},",
          "52:   setVariableEditor() {},",
          "53: });",
          "",
          "[Added Lines]",
          "33: export const EditorContext = createNullableContext<EditorContextType>(",
          "34:   'EditorContext',",
          "35: );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "59: };",
          "61: export function EditorContextProvider(props: EditorContextProviderProps) {",
          "63:   const [headerEditor, setHeaderEditor] = useState<CodeMirrorEditor | null>(",
          "64:     null,",
          "65:   );",
          "",
          "[Removed Lines]",
          "62:   const { schema } = useSchemaWithError('component', 'EditorContextProvider');",
          "",
          "[Added Lines]",
          "44:   const { schema } = useSchemaContext({",
          "45:     nonNull: true,",
          "46:     caller: EditorContextProvider,",
          "47:   });",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "161:     </EditorContext.Provider>",
          "162:   );",
          "163: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "150: export const useEditorContext = createContextHook(EditorContext);",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/header-editor.tsx||packages/graphiql-react/src/editor/header-editor.tsx": [
          "File: packages/graphiql-react/src/editor/header-editor.tsx -> packages/graphiql-react/src/editor/header-editor.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import { commonKeys, importCodeMirror } from './common';",
          "6: import {",
          "7:   EditCallback,",
          "8:   EmptyCallback,",
          "",
          "[Removed Lines]",
          "1: import { useContext, useEffect, useRef } from 'react';",
          "3: import { StorageContext } from '../storage';",
          "5: import { EditorContext } from './context';",
          "",
          "[Added Lines]",
          "1: import { useEffect, useRef } from 'react';",
          "3: import { useStorageContext } from '../storage';",
          "5: import { useEditorContext } from './context';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:   shouldPersistHeaders = false,",
          "31:   value,",
          "32: }: UseHeaderEditorArgs = {}) {",
          "35:   const ref = useRef<HTMLDivElement>(null);",
          "45:   const initialValue = useRef(value ?? storage?.get(STORAGE_KEY) ?? '');",
          "47:   useEffect(() => {",
          "",
          "[Removed Lines]",
          "33:   const context = useContext(EditorContext);",
          "34:   const storage = useContext(StorageContext);",
          "37:   if (!context) {",
          "38:     throw new Error(",
          "39:       'Tried to call the `useHeaderEditor` hook without the necessary context. Make sure that the `EditorContextProvider` from `@graphiql/react` is rendered higher in the tree.',",
          "40:     );",
          "41:   }",
          "43:   const { headerEditor, setHeaderEditor } = context;",
          "",
          "[Added Lines]",
          "33:   const { headerEditor, merge, prettify, setHeaderEditor } = useEditorContext({",
          "34:     nonNull: true,",
          "35:     caller: useHeaderEditor,",
          "36:   });",
          "37:   const storage = useStorageContext();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "123:   useCompletion(headerEditor);",
          "125:   useKeyMap(headerEditor, ['Cmd-Enter', 'Ctrl-Enter'], onRunQuery);",
          "129:   useResizeEditor(headerEditor, ref);",
          "",
          "[Removed Lines]",
          "126:   useKeyMap(headerEditor, ['Shift-Ctrl-P'], context.prettify);",
          "127:   useKeyMap(headerEditor, ['Shift-Ctrl-M'], context.merge);",
          "",
          "[Added Lines]",
          "121:   useKeyMap(headerEditor, ['Shift-Ctrl-P'], prettify);",
          "122:   useKeyMap(headerEditor, ['Shift-Ctrl-M'], merge);",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/hooks.ts||packages/graphiql-react/src/editor/hooks.ts": [
          "File: packages/graphiql-react/src/editor/hooks.ts -> packages/graphiql-react/src/editor/hooks.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import { EditorChange } from 'codemirror';",
          "3: import copyToClipboard from 'copy-to-clipboard';",
          "4: import { GraphQLSchema, parse, print } from 'graphql';",
          "10: import debounce from '../utility/debounce';",
          "11: import { onHasCompletion } from './completion';",
          "12: import { CodeMirrorEditorWithOperationFacts } from './context';",
          "",
          "[Removed Lines]",
          "5: import { RefObject, useCallback, useContext, useEffect, useRef } from 'react';",
          "7: import { ExplorerContext } from '../explorer';",
          "8: import { useSchemaWithError } from '../schema';",
          "9: import { StorageContext } from '../storage';",
          "",
          "[Added Lines]",
          "5: import { RefObject, useCallback, useEffect, useRef } from 'react';",
          "7: import { useExplorerContext } from '../explorer';",
          "8: import { useSchemaContext } from '../schema';",
          "9: import { useStorageContext } from '../storage';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:   callback: EditCallback | undefined,",
          "31:   storageKey: string | null,",
          "32: ) {",
          "34:   useEffect(() => {",
          "35:     if (!editor) {",
          "36:       return;",
          "",
          "[Removed Lines]",
          "33:   const storage = useContext(StorageContext);",
          "",
          "[Added Lines]",
          "33:   const storage = useStorageContext();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "54: }",
          "56: export function useCompletion(editor: CodeMirrorEditor | null) {",
          "59:   useEffect(() => {",
          "60:     if (!editor) {",
          "61:       return;",
          "",
          "[Removed Lines]",
          "57:   const { schema } = useSchemaWithError('hook', 'useCompletion');",
          "58:   const explorer = useContext(ExplorerContext);",
          "",
          "[Added Lines]",
          "57:   const { schema } = useSchemaContext({ nonNull: true, caller: useCompletion });",
          "58:   const explorer = useExplorerContext();",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/index.ts||packages/graphiql-react/src/editor/index.ts": [
          "File: packages/graphiql-react/src/editor/index.ts -> packages/graphiql-react/src/editor/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { onHasCompletion } from './completion';",
          "2: import { ImagePreview } from './components';",
          "4: import { useHeaderEditor } from './header-editor';",
          "5: import { useQueryEditor } from './query-editor';",
          "6: import { useResponseEditor } from './response-editor';",
          "",
          "[Removed Lines]",
          "3: import { EditorContext, EditorContextProvider } from './context';",
          "",
          "[Added Lines]",
          "3: import {",
          "4:   EditorContext,",
          "5:   EditorContextProvider,",
          "6:   useEditorContext,",
          "7: } from './context';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "20:   ImagePreview,",
          "21:   EditorContext,",
          "22:   EditorContextProvider,",
          "23:   useHeaderEditor,",
          "24:   useQueryEditor,",
          "25:   useResponseEditor,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:   useEditorContext,",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/query-editor.tsx||packages/graphiql-react/src/editor/query-editor.tsx": [
          "File: packages/graphiql-react/src/editor/query-editor.tsx -> packages/graphiql-react/src/editor/query-editor.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:   ValidationRule,",
          "7: } from 'graphql';",
          "8: import { getOperationFacts } from 'graphql-language-service';",
          "12: import { markdown } from '../markdown';",
          "15: import debounce from '../utility/debounce';",
          "16: import { commonKeys, importCodeMirror } from './common';",
          "18: import {",
          "19:   EditCallback,",
          "20:   EmptyCallback,",
          "",
          "[Removed Lines]",
          "9: import { MutableRefObject, useContext, useEffect, useRef } from 'react';",
          "11: import { ExplorerContext } from '../explorer';",
          "13: import { useSchemaWithError } from '../schema';",
          "14: import { StorageContext } from '../storage';",
          "17: import { CodeMirrorEditorWithOperationFacts, EditorContext } from './context';",
          "",
          "[Added Lines]",
          "9: import { MutableRefObject, useEffect, useRef } from 'react';",
          "11: import { useExplorerContext } from '../explorer';",
          "13: import { useSchemaContext } from '../schema';",
          "14: import { useStorageContext } from '../storage';",
          "17: import {",
          "18:   CodeMirrorEditorWithOperationFacts,",
          "19:   useEditorContext,",
          "20: } from './context';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:   validationRules,",
          "52:   value,",
          "53: }: UseQueryEditorArgs = {}) {",
          "58:   const ref = useRef<HTMLDivElement>(null);",
          "59:   const codeMirrorRef = useRef<CodeMirrorType>();",
          "69:   const onClickReferenceRef = useRef<OnClickReference>(() => {});",
          "70:   useEffect(() => {",
          "71:     onClickReferenceRef.current = reference => {",
          "",
          "[Removed Lines]",
          "54:   const { schema } = useSchemaWithError('hook', 'useQueryEditor');",
          "55:   const editorContext = useContext(EditorContext);",
          "56:   const storage = useContext(StorageContext);",
          "57:   const explorer = useContext(ExplorerContext);",
          "61:   if (!editorContext) {",
          "62:     throw new Error(",
          "63:       'Tried to call the `useQueryEditor` hook without the necessary context. Make sure that the `EditorContextProvider` from `@graphiql/react` is rendered higher in the tree.',",
          "64:     );",
          "65:   }",
          "67:   const { queryEditor, setQueryEditor, variableEditor } = editorContext;",
          "",
          "[Added Lines]",
          "57:   const { schema } = useSchemaContext({",
          "58:     nonNull: true,",
          "59:     caller: useQueryEditor,",
          "60:   });",
          "61:   const {",
          "62:     copy,",
          "63:     merge,",
          "64:     prettify,",
          "65:     queryEditor,",
          "66:     setQueryEditor,",
          "67:     variableEditor,",
          "68:   } = useEditorContext({",
          "69:     nonNull: true,",
          "70:     caller: useQueryEditor,",
          "71:   });",
          "72:   const storage = useStorageContext();",
          "73:   const explorer = useExplorerContext();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "315:   useCompletion(queryEditor);",
          "317:   useKeyMap(queryEditor, ['Cmd-Enter', 'Ctrl-Enter'], onRunQuery);",
          "319:   useKeyMap(",
          "320:     queryEditor,",
          "321:     [",
          "",
          "[Removed Lines]",
          "318:   useKeyMap(queryEditor, ['Shift-Ctrl-C'], editorContext.copy);",
          "",
          "[Added Lines]",
          "326:   useKeyMap(queryEditor, ['Shift-Ctrl-C'], copy);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "324:       'Shift-Ctrl-F',",
          "325:     ],",
          "327:   );",
          "330:   useResizeEditor(queryEditor, ref);",
          "",
          "[Removed Lines]",
          "326:     editorContext.prettify,",
          "328:   useKeyMap(queryEditor, ['Shift-Ctrl-M'], editorContext.merge);",
          "",
          "[Added Lines]",
          "334:     prettify,",
          "336:   useKeyMap(queryEditor, ['Shift-Ctrl-M'], merge);",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/response-editor.tsx||packages/graphiql-react/src/editor/response-editor.tsx": [
          "File: packages/graphiql-react/src/editor/response-editor.tsx -> packages/graphiql-react/src/editor/response-editor.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { formatError } from '@graphiql/toolkit';",
          "2: import type { Position, Token } from 'codemirror';",
          "4: import ReactDOM from 'react-dom';",
          "6: import { commonKeys, importCodeMirror } from './common';",
          "7: import { ImagePreview } from './components';",
          "9: import { useResizeEditor, useSynchronizeValue } from './hooks';",
          "10: import { CodeMirrorEditor } from './types';",
          "13: export type ResponseTooltipType = ComponentType<{ pos: Position }>;",
          "",
          "[Removed Lines]",
          "3: import { ComponentType, useContext, useEffect, useRef } from 'react';",
          "8: import { EditorContext } from './context';",
          "11: import { useSchemaWithError } from '../schema';",
          "",
          "[Added Lines]",
          "3: import { ComponentType, useEffect, useRef } from 'react';",
          "5: import { useSchemaContext } from '../schema';",
          "9: import { useEditorContext } from './context';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:   editorTheme = 'graphiql',",
          "24:   value,",
          "25: }: UseResponseEditorArgs = {}) {",
          "31:   const ref = useRef<HTMLDivElement>(null);",
          "33:   const responseTooltipRef = useRef<ResponseTooltipType | undefined>(",
          "",
          "[Removed Lines]",
          "26:   const { fetchError, validationErrors } = useSchemaWithError(",
          "27:     'hook',",
          "28:     'useResponseEditor',",
          "29:   );",
          "30:   const editorContext = useContext(EditorContext);",
          "",
          "[Added Lines]",
          "26:   const { fetchError, validationErrors } = useSchemaContext({",
          "27:     nonNull: true,",
          "28:     caller: useResponseEditor,",
          "29:   });",
          "30:   const { responseEditor, setResponseEditor } = useEditorContext({",
          "31:     nonNull: true,",
          "32:     caller: useResponseEditor,",
          "33:   });",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "37:     responseTooltipRef.current = ResponseTooltip;",
          "38:   }, [ResponseTooltip]);",
          "48:   const initialValue = useRef(value);",
          "50:   useEffect(() => {",
          "",
          "[Removed Lines]",
          "40:   if (!editorContext) {",
          "41:     throw new Error(",
          "42:       'Tried to call the `useResponseEditor` hook without the necessary context. Make sure that the `EditorContextProvider` from `@graphiql/react` is rendered higher in the tree.',",
          "43:     );",
          "44:   }",
          "46:   const { responseEditor, setResponseEditor } = editorContext;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/editor/variable-editor.tsx||packages/graphiql-react/src/editor/variable-editor.tsx": [
          "File: packages/graphiql-react/src/editor/variable-editor.tsx -> packages/graphiql-react/src/editor/variable-editor.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: import { commonKeys, importCodeMirror } from './common';",
          "6: import {",
          "7:   EditCallback,",
          "8:   EmptyCallback,",
          "",
          "[Removed Lines]",
          "1: import { useContext, useEffect, useRef } from 'react';",
          "3: import { StorageContext } from '../storage';",
          "5: import { EditorContext } from './context';",
          "",
          "[Added Lines]",
          "1: import { useEffect, useRef } from 'react';",
          "3: import { useStorageContext } from '../storage';",
          "5: import { useEditorContext } from './context';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "29:   readOnly = false,",
          "30:   value,",
          "31: }: UseVariableEditorArgs = {}) {",
          "34:   const ref = useRef<HTMLDivElement>(null);",
          "35:   const codeMirrorRef = useRef<CodeMirrorType>();",
          "45:   const initialValue = useRef(value ?? storage?.get(STORAGE_KEY) ?? '');",
          "47:   useEffect(() => {",
          "",
          "[Removed Lines]",
          "32:   const context = useContext(EditorContext);",
          "33:   const storage = useContext(StorageContext);",
          "37:   if (!context) {",
          "38:     throw new Error(",
          "39:       'Tried to call the `useVariableEditor` hook without the necessary context. Make sure that the `EditorContextProvider` from `@graphiql/react` is rendered higher in the tree.',",
          "40:     );",
          "41:   }",
          "43:   const { variableEditor, setVariableEditor } = context;",
          "",
          "[Added Lines]",
          "32:   const {",
          "33:     merge,",
          "34:     prettify,",
          "35:     variableEditor,",
          "36:     setVariableEditor,",
          "37:   } = useEditorContext({",
          "38:     nonNull: true,",
          "39:     caller: useVariableEditor,",
          "40:   });",
          "41:   const storage = useStorageContext();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "133:   useCompletion(variableEditor);",
          "135:   useKeyMap(variableEditor, ['Cmd-Enter', 'Ctrl-Enter'], onRunQuery);",
          "139:   useResizeEditor(variableEditor, ref);",
          "",
          "[Removed Lines]",
          "136:   useKeyMap(variableEditor, ['Shift-Ctrl-P'], context.prettify);",
          "137:   useKeyMap(variableEditor, ['Shift-Ctrl-M'], context.merge);",
          "",
          "[Added Lines]",
          "136:   useKeyMap(variableEditor, ['Shift-Ctrl-P'], prettify);",
          "137:   useKeyMap(variableEditor, ['Shift-Ctrl-M'], merge);",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/explorer.tsx||packages/graphiql-react/src/explorer.tsx": [
          "File: packages/graphiql-react/src/explorer.tsx -> packages/graphiql-react/src/explorer.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "5:   GraphQLNamedType,",
          "6: } from 'graphql';",
          "7: import {",
          "9:   ReactNode,",
          "10:   useCallback,",
          "12:   useEffect,",
          "13:   useMemo,",
          "14:   useRef,",
          "15:   useState,",
          "16: } from 'react';",
          "20: export type ExplorerFieldDef =",
          "21:   | GraphQLField<{}, {}, {}>",
          "",
          "[Removed Lines]",
          "8:   createContext,",
          "11:   useContext,",
          "17: import { useSchemaWithError } from './schema';",
          "18: import { StorageContext } from './storage';",
          "",
          "[Added Lines]",
          "15: import { useSchemaContext } from './schema';",
          "17: import { useStorageContext } from './storage';",
          "18: import { createContextHook, createNullableContext } from './utility/context';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:   showSearch(search: string): void;",
          "52: };",
          "56: type ExplorerContextProviderProps = {",
          "57:   children: ReactNode;",
          "",
          "[Removed Lines]",
          "54: export const ExplorerContext = createContext<ExplorerContextType | null>(null);",
          "",
          "[Added Lines]",
          "54: export const ExplorerContext = createNullableContext<ExplorerContextType>(",
          "55:   'ExplorerContext',",
          "56: );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "60: };",
          "62: export function ExplorerContextProvider(props: ExplorerContextProviderProps) {",
          "69:   const [isVisible, setIsVisible] = useState(",
          "70:     props.isVisible ?? storage?.get(STORAGE_KEY) === 'true' ?? false,",
          "",
          "[Removed Lines]",
          "63:   const { isFetching } = useSchemaWithError(",
          "64:     'component',",
          "65:     'ExplorerContextProvider',",
          "66:   );",
          "67:   const storage = useContext(StorageContext);",
          "",
          "[Added Lines]",
          "65:   const { isFetching } = useSchemaContext({",
          "66:     nonNull: true,",
          "67:     caller: ExplorerContextProvider,",
          "68:   });",
          "69:   const storage = useStorageContext();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "155:   );",
          "156: }",
          "162: const STORAGE_KEY = 'docExplorerOpen';",
          "",
          "[Removed Lines]",
          "158: export function useExplorerNavStack() {",
          "159:   return useContext(ExplorerContext);",
          "160: }",
          "",
          "[Added Lines]",
          "160: export const useExplorerContext = createContextHook(ExplorerContext);",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/history.tsx||packages/graphiql-react/src/history.tsx": [
          "File: packages/graphiql-react/src/history.tsx -> packages/graphiql-react/src/history.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { HistoryStore, QueryStoreItem, StorageAPI } from '@graphiql/toolkit';",
          "14: export type HistoryContextType = {",
          "15:   addToHistory(operation: {",
          "",
          "[Removed Lines]",
          "2: import {",
          "3:   createContext,",
          "4:   ReactNode,",
          "5:   useCallback,",
          "6:   useContext,",
          "7:   useMemo,",
          "8:   useRef,",
          "9:   useState,",
          "10: } from 'react';",
          "12: import { StorageContext } from './storage';",
          "",
          "[Added Lines]",
          "2: import { ReactNode, useCallback, useMemo, useRef, useState } from 'react';",
          "4: import { useStorageContext } from './storage';",
          "5: import { createContextHook, createNullableContext } from './utility/context';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41:   }): void;",
          "42: };",
          "46: type HistoryContextProviderProps = {",
          "47:   children: ReactNode;",
          "",
          "[Removed Lines]",
          "44: export const HistoryContext = createContext<HistoryContextType | null>(null);",
          "",
          "[Added Lines]",
          "37: export const HistoryContext = createNullableContext<HistoryContextType>(",
          "38:   'HistoryContext',",
          "39: );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "50: };",
          "52: export function HistoryContextProvider(props: HistoryContextProviderProps) {",
          "54:   const historyStore = useRef(",
          "55:     new HistoryStore(",
          "",
          "[Removed Lines]",
          "53:   const storage = useContext(StorageContext);",
          "",
          "[Added Lines]",
          "48:   const storage = useStorageContext();",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "159:   );",
          "160: }",
          "162: const DEFAULT_HISTORY_LENGTH = 20;",
          "163: const STORAGE_KEY = 'historyPaneOpen';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "157: export const useHistoryContext = createContextHook(HistoryContext);",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/index.ts||packages/graphiql-react/src/index.ts": [
          "File: packages/graphiql-react/src/index.ts -> packages/graphiql-react/src/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "3:   EditorContextProvider,",
          "4:   ImagePreview,",
          "5:   onHasCompletion,",
          "6:   useHeaderEditor,",
          "7:   useQueryEditor,",
          "8:   useResponseEditor,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6:   useEditorContext,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "11: import {",
          "12:   ExplorerContext,",
          "13:   ExplorerContextProvider,",
          "15: } from './explorer';",
          "20: import type {",
          "21:   EditorContextType,",
          "",
          "[Removed Lines]",
          "14:   useExplorerNavStack,",
          "16: import { HistoryContext, HistoryContextProvider } from './history';",
          "17: import { SchemaContext, SchemaContextProvider, useSchema } from './schema';",
          "18: import { StorageContext, StorageContextProvider } from './storage';",
          "",
          "[Added Lines]",
          "15:   useExplorerContext,",
          "17: import {",
          "18:   HistoryContext,",
          "19:   HistoryContextProvider,",
          "20:   useHistoryContext,",
          "21: } from './history';",
          "22: import {",
          "23:   SchemaContext,",
          "24:   SchemaContextProvider,",
          "25:   useSchemaContext,",
          "26: } from './schema';",
          "27: import {",
          "28:   StorageContext,",
          "29:   StorageContextProvider,",
          "30:   useStorageContext,",
          "31: } from './storage';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "41:   EditorContextProvider,",
          "42:   ImagePreview,",
          "43:   onHasCompletion,",
          "44:   useHeaderEditor,",
          "45:   useQueryEditor,",
          "46:   useResponseEditor,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57:   useEditorContext,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "49:   ExplorerContext,",
          "50:   ExplorerContextProvider,",
          "53:   HistoryContext,",
          "54:   HistoryContextProvider,",
          "56:   SchemaContext,",
          "57:   SchemaContextProvider,",
          "60:   StorageContext,",
          "61:   StorageContextProvider,",
          "62: };",
          "64: export type {",
          "",
          "[Removed Lines]",
          "51:   useExplorerNavStack,",
          "58:   useSchema,",
          "",
          "[Added Lines]",
          "65:   useExplorerContext,",
          "69:   useHistoryContext,",
          "73:   useSchemaContext,",
          "77:   useStorageContext,",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/schema/context.tsx||packages/graphiql-react/src/schema.tsx": [
          "File: packages/graphiql-react/src/schema/context.tsx -> packages/graphiql-react/src/schema.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:   validateSchema,",
          "16: } from 'graphql';",
          "17: import {",
          "19:   Dispatch,",
          "20:   ReactNode,",
          "21:   SetStateAction,",
          "23:   useEffect,",
          "24:   useMemo,",
          "25:   useRef,",
          "26:   useState,",
          "27: } from 'react';",
          "",
          "[Removed Lines]",
          "18:   createContext,",
          "22:   useContext,",
          "28: import { EditorContext } from '../editor';",
          "",
          "[Added Lines]",
          "27: import { createContextHook, createNullableContext } from './utility/context';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:   validationErrors: readonly GraphQLError[] | null;",
          "47: };",
          "58: type SchemaContextProviderProps = {",
          "59:   children: ReactNode;",
          "",
          "[Removed Lines]",
          "49: export const SchemaContext = createContext<SchemaContextType>({",
          "50:   fetchError: null,",
          "51:   isFetching: false,",
          "52:   schema: null,",
          "53:   setFetchError() {},",
          "54:   setSchema() {},",
          "55:   validationErrors: null,",
          "56: });",
          "",
          "[Added Lines]",
          "48: export const SchemaContext = createNullableContext<SchemaContextType>(",
          "49:   'SchemaContext',",
          "50: );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "83:   const headersRef = useRef(parseHeaderString(props.initialHeaders));",
          "",
          "[Removed Lines]",
          "84:   const { headerEditor } = useContext(EditorContext);",
          "85:   useEffect(() => {",
          "86:     if (!headerEditor) {",
          "87:       return;",
          "88:     }",
          "89:     headersRef.current = parseHeaderString(headerEditor.getValue());",
          "90:   }, [headerEditor]);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "246:   );",
          "247: }",
          "249: type IntrospectionArgs = {",
          "250:   inputValueDeprecation?: boolean;",
          "251:   introspectionQueryName?: string;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "236: export const useSchemaContext = createContextHook(SchemaContext);",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/schema/hooks.ts||packages/graphiql-react/src/schema/hooks.ts": [
          "File: packages/graphiql-react/src/schema/hooks.ts -> packages/graphiql-react/src/schema/hooks.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/schema/index.ts||packages/graphiql-react/src/schema/index.ts": [
          "File: packages/graphiql-react/src/schema/index.ts -> packages/graphiql-react/src/schema/index.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/storage.tsx||packages/graphiql-react/src/storage.tsx": [
          "File: packages/graphiql-react/src/storage.tsx -> packages/graphiql-react/src/storage.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { Storage, StorageAPI } from '@graphiql/toolkit';",
          "4: export type StorageContextType = StorageAPI;",
          "8: type StorageContextProviderProps = {",
          "9:   children: ReactNode;",
          "",
          "[Removed Lines]",
          "2: import { createContext, ReactNode, useEffect, useRef, useState } from 'react';",
          "6: export const StorageContext = createContext<StorageContextType | null>(null);",
          "",
          "[Added Lines]",
          "2: import { ReactNode, useEffect, useRef, useState } from 'react';",
          "4: import { createContextHook, createNullableContext } from './utility/context';",
          "8: export const StorageContext = createNullableContext<StorageContextType>(",
          "9:   'StorageContext',",
          "10: );",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28:     </StorageContext.Provider>",
          "29:   );",
          "30: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36: export const useStorageContext = createContextHook(StorageContext);",
          "",
          "---------------"
        ],
        "packages/graphiql-react/src/utility/context.ts||packages/graphiql-react/src/utility/context.ts": [
          "File: packages/graphiql-react/src/utility/context.ts -> packages/graphiql-react/src/utility/context.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: import { Context, createContext, useContext } from 'react';",
          "3: export function createNullableContext<T>(name: string): Context<T | null> {",
          "4:   const context = createContext<T | null>(null);",
          "5:   context.displayName = name;",
          "6:   return context;",
          "7: }",
          "9: export function createContextHook<T>(context: Context<T | null>) {",
          "10:   function useGivenContext(options: { nonNull: true; caller?: Function }): T;",
          "11:   function useGivenContext(options: {",
          "12:     nonNull?: boolean;",
          "13:     caller?: Function;",
          "14:   }): T | null;",
          "15:   function useGivenContext(): T | null;",
          "16:   function useGivenContext(options?: {",
          "17:     nonNull?: boolean;",
          "18:     caller?: Function;",
          "19:   }): T | null {",
          "20:     const value = useContext(context);",
          "21:     if (value === null && options?.nonNull) {",
          "22:       throw new Error(",
          "23:         `Tried to use \\`${",
          "24:           options.caller?.name || useGivenContext.caller.name",
          "25:         }\\` without the necessary context. Make sure to render the \\`${",
          "26:           context.displayName",
          "27:         }Provider\\` component higher up the tree.`,",
          "28:       );",
          "29:     }",
          "30:     return value;",
          "31:   }",
          "32:   Object.defineProperty(useGivenContext, 'name', {",
          "33:     value: `use${context.displayName}`,",
          "34:   });",
          "35:   return useGivenContext;",
          "36: }",
          "",
          "---------------"
        ],
        "packages/graphiql/__mocks__/@graphiql/react.ts||packages/graphiql/__mocks__/@graphiql/react.ts": [
          "File: packages/graphiql/__mocks__/@graphiql/react.ts -> packages/graphiql/__mocks__/@graphiql/react.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   SchemaContextProvider,",
          "12:   StorageContext,",
          "13:   StorageContextProvider,",
          "15:   useHeaderEditor as _useHeaderEditor,",
          "16:   useQueryEditor as _useQueryEditor,",
          "17:   useResponseEditor as _useResponseEditor,",
          "19:   useVariableEditor as _useVariableEditor,",
          "20: } from '@graphiql/react';",
          "21: import type {",
          "",
          "[Removed Lines]",
          "14:   useExplorerNavStack,",
          "18:   useSchema,",
          "",
          "[Added Lines]",
          "14:   useEditorContext,",
          "15:   useExplorerContext,",
          "16:   useHistoryContext,",
          "17:   useSchemaContext,",
          "18:   useStorageContext,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "33:   UseQueryEditorArgs,",
          "34:   UseVariableEditorArgs,",
          "35: } from '@graphiql/react';",
          "38: export {",
          "39:   EditorContext,",
          "",
          "[Removed Lines]",
          "36: import { useContext, useEffect, useRef, useState } from 'react';",
          "",
          "[Added Lines]",
          "39: import { useEffect, useRef, useState } from 'react';",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "48:   SchemaContextProvider,",
          "49:   StorageContext,",
          "50:   StorageContextProvider,",
          "53: };",
          "55: export type {",
          "",
          "[Removed Lines]",
          "51:   useExplorerNavStack,",
          "52:   useSchema,",
          "",
          "[Added Lines]",
          "54:   useEditorContext,",
          "55:   useExplorerContext,",
          "56:   useHistoryContext,",
          "57:   useSchemaContext,",
          "58:   useStorageContext,",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "77:   const [code, setCode] = useState(value ?? defaultValue);",
          "78:   const ref = useRef<HTMLDivElement>(null);",
          "81:   const setEditor =",
          "82:     context[`set${name.slice(0, 1).toUpperCase()}${name.slice(1)}Editor`];",
          "",
          "[Removed Lines]",
          "80:   const context = useContext(EditorContext);",
          "",
          "[Added Lines]",
          "86:   const context = useEditorContext({ nonNull: true });",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/DocExplorer.tsx||packages/graphiql/src/components/DocExplorer.tsx": [
          "File: packages/graphiql/src/components/DocExplorer.tsx -> packages/graphiql/src/components/DocExplorer.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import { isType, GraphQLNamedType } from 'graphql';",
          "10: import {",
          "11:   ExplorerFieldDef,",
          "14: } from '@graphiql/react';",
          "16: import FieldDoc from './DocExplorer/FieldDoc';",
          "",
          "[Removed Lines]",
          "12:   useExplorerNavStack,",
          "13:   useSchema,",
          "",
          "[Added Lines]",
          "12:   useExplorerContext,",
          "13:   useSchemaContext,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28: export function DocExplorer() {",
          "38:   const navItem = explorerNavStack[explorerNavStack.length - 1];",
          "40:   function handleClickType(type: GraphQLNamedType) {",
          "",
          "[Removed Lines]",
          "29:   const { fetchError, isFetching, schema, validationErrors } = useSchema();",
          "30:   const explorerContext = useExplorerNavStack();",
          "31:   if (!explorerContext) {",
          "32:     throw new Error(",
          "33:       'Tried to render the `DocExplorer` component without the necessary context. Make sure that the `ExplorerContextProvider` from `@graphiql/react` is rendered higher in the tree.',",
          "34:     );",
          "35:   }",
          "37:   const { explorerNavStack, hide, pop, push, showSearch } = explorerContext;",
          "",
          "[Added Lines]",
          "29:   const {",
          "30:     fetchError,",
          "31:     isFetching,",
          "32:     schema,",
          "33:     validationErrors,",
          "34:   } = useSchemaContext({ nonNull: true });",
          "35:   const { explorerNavStack, hide, pop, push, showSearch } = useExplorerContext({",
          "36:     nonNull: true,",
          "37:   });",
          "",
          "---------------"
        ],
        "packages/graphiql/src/components/GraphiQL.tsx||packages/graphiql/src/components/GraphiQL.tsx": [
          "File: packages/graphiql/src/components/GraphiQL.tsx -> packages/graphiql/src/components/GraphiQL.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import { getFragmentDependenciesForAST } from 'graphql-language-service';",
          "25: import {",
          "27:   EditorContextProvider,",
          "29:   ExplorerContextProvider,",
          "31:   HistoryContextProvider,",
          "33:   SchemaContextProvider,",
          "34:   StorageContext,",
          "35:   StorageContextProvider,",
          "36: } from '@graphiql/react';",
          "37: import type {",
          "38:   EditorContextType,",
          "",
          "[Removed Lines]",
          "26:   EditorContext,",
          "28:   ExplorerContext,",
          "30:   HistoryContext,",
          "32:   SchemaContext,",
          "",
          "[Added Lines]",
          "32:   useEditorContext,",
          "33:   useExplorerContext,",
          "34:   useHistoryContext,",
          "35:   useSchemaContext,",
          "36:   useStorageContext,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "386:                 <HistoryContextProvider",
          "387:                   maxHistoryLength={maxHistoryLength}",
          "388:                   onToggle={onToggleHistory}>",
          "413:                 </HistoryContextProvider>",
          "414:               </EditorContextProvider>",
          "415:             </ExplorerContextProvider>",
          "",
          "[Removed Lines]",
          "389:                   <SchemaContext.Consumer>",
          "390:                     {schemaContext => (",
          "391:                       <ExplorerContext.Consumer>",
          "392:                         {explorerContext => (",
          "393:                           <EditorContext.Consumer>",
          "394:                             {editorContext => (",
          "395:                               <HistoryContext.Consumer>",
          "396:                                 {historyContext => (",
          "397:                                   <GraphiQLWithContext",
          "398:                                     {...props}",
          "399:                                     editorContext={editorContext}",
          "400:                                     explorerContext={explorerContext}",
          "401:                                     historyContext={historyContext}",
          "402:                                     schemaContext={schemaContext}",
          "403:                                     storageContext={storageContext}",
          "404:                                   />",
          "405:                                 )}",
          "406:                               </HistoryContext.Consumer>",
          "407:                             )}",
          "408:                           </EditorContext.Consumer>",
          "409:                         )}",
          "410:                       </ExplorerContext.Consumer>",
          "411:                     )}",
          "412:                   </SchemaContext.Consumer>",
          "",
          "[Added Lines]",
          "390:                   <GraphiQLConsumeContexts {...props} />",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "462:   GraphiQLProps,",
          "463:   | 'dangerouslyAssumeSchemaIsValid'",
          "464:   | 'docExplorerOpen'",
          "",
          "[Removed Lines]",
          "461: type GraphiQLWithContextProps = Omit<",
          "",
          "[Added Lines]",
          "439: type GraphiQLWithContextProviderProps = Omit<",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "472:   | 'schema'",
          "473:   | 'schemaDescription'",
          "474:   | 'storage'",
          "476:   editorContext: EditorContextType;",
          "477:   explorerContext: ExplorerContextType | null;",
          "478:   historyContext: HistoryContextType | null;",
          "",
          "[Removed Lines]",
          "475: > & {",
          "",
          "[Added Lines]",
          "453: >;",
          "455: function GraphiQLConsumeContexts(props: GraphiQLWithContextProviderProps) {",
          "456:   const editorContext = useEditorContext({ nonNull: true });",
          "457:   const explorerContext = useExplorerContext();",
          "458:   const historyContext = useHistoryContext();",
          "459:   const schemaContext = useSchemaContext({ nonNull: true });",
          "460:   const storageContext = useStorageContext();",
          "461:   return (",
          "462:     <GraphiQLWithContext",
          "463:       {...props}",
          "464:       editorContext={editorContext}",
          "465:       explorerContext={explorerContext}",
          "466:       historyContext={historyContext}",
          "467:       schemaContext={schemaContext}",
          "468:       storageContext={storageContext}",
          "469:     />",
          "470:   );",
          "471: }",
          "473: type GraphiQLWithContextConsumerProps = GraphiQLWithContextProviderProps & {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "481: };",
          "483: class GraphiQLWithContext extends React.Component<",
          "485:   GraphiQLState",
          "486: > {",
          "",
          "[Removed Lines]",
          "484:   GraphiQLWithContextProps,",
          "",
          "[Added Lines]",
          "482:   GraphiQLWithContextConsumerProps,",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "494:   graphiqlContainer: Maybe<HTMLDivElement>;",
          "495:   editorBarComponent: Maybe<HTMLDivElement>;",
          "498:     super(props);",
          "",
          "[Removed Lines]",
          "497:   constructor(props: GraphiQLWithContextProps) {",
          "",
          "[Added Lines]",
          "495:   constructor(props: GraphiQLWithContextConsumerProps) {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "645:     let nextResponse = this.state.response;",
          "647:     if (nextProps.response !== undefined) {",
          "",
          "[Removed Lines]",
          "644:   UNSAFE_componentWillReceiveProps(nextProps: GraphiQLWithContextProps) {",
          "",
          "[Added Lines]",
          "642:   UNSAFE_componentWillReceiveProps(",
          "643:     nextProps: GraphiQLWithContextConsumerProps,",
          "644:   ) {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "1742: function stateOnSelectTabReducer(",
          "1743:   index: number,",
          "1744:   state: GraphiQLState,",
          "1746: ): GraphiQLState {",
          "1747:   const query = getQuery(props);",
          "1748:   const variables = getVariables(props);",
          "",
          "[Removed Lines]",
          "1745:   props: GraphiQLWithContextProps,",
          "",
          "[Added Lines]",
          "1745:   props: GraphiQLWithContextConsumerProps,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1787: function stateOnCloseTabReducer(",
          "1788:   index: number,",
          "1789:   state: GraphiQLState,",
          "1791: ): GraphiQLState {",
          "1792:   const newActiveTabIndex =",
          "1793:     state.tabs.activeTabIndex > 0 ? state.tabs.activeTabIndex - 1 : 0;",
          "",
          "[Removed Lines]",
          "1790:   props: GraphiQLWithContextProps,",
          "",
          "[Added Lines]",
          "1790:   props: GraphiQLWithContextConsumerProps,",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "1811: function stateOnTabAddReducer(",
          "1812:   state: GraphiQLState,",
          "1814: ): GraphiQLState {",
          "1815:   const query = getQuery(props);",
          "1816:   const variables = getVariables(props);",
          "",
          "[Removed Lines]",
          "1813:   props: GraphiQLWithContextProps,",
          "",
          "[Added Lines]",
          "1813:   props: GraphiQLWithContextConsumerProps,",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "1865:   };",
          "1866: }",
          "1869:   return props.editorContext.queryEditor?.getValue();",
          "1870: }",
          "1873:   props.editorContext.queryEditor?.setValue(value);",
          "1874: }",
          "1877:   return props.editorContext.variableEditor?.getValue();",
          "1878: }",
          "1881:   props.editorContext.variableEditor?.setValue(value);",
          "1882: }",
          "1885:   return props.editorContext.headerEditor?.getValue();",
          "1886: }",
          "1889:   props.editorContext.headerEditor?.setValue(value);",
          "1890: }",
          "1893:   return props.editorContext.queryEditor?.operationName ?? undefined;",
          "1894: }",
          "1896: function setOperationName(",
          "1898:   value: string | null | undefined,",
          "1899: ) {",
          "1900:   if (props.editorContext.queryEditor) {",
          "",
          "[Removed Lines]",
          "1868: function getQuery(props: GraphiQLWithContextProps) {",
          "1872: function setQuery(props: GraphiQLWithContextProps, value: string) {",
          "1876: function getVariables(props: GraphiQLWithContextProps) {",
          "1880: function setVariables(props: GraphiQLWithContextProps, value: string) {",
          "1884: function getHeaders(props: GraphiQLWithContextProps) {",
          "1888: function setHeaders(props: GraphiQLWithContextProps, value: string) {",
          "1892: function getOperationName(props: GraphiQLWithContextProps) {",
          "1897:   props: GraphiQLWithContextProps,",
          "",
          "[Added Lines]",
          "1868: function getQuery(props: GraphiQLWithContextConsumerProps) {",
          "1872: function setQuery(props: GraphiQLWithContextConsumerProps, value: string) {",
          "1876: function getVariables(props: GraphiQLWithContextConsumerProps) {",
          "1880: function setVariables(props: GraphiQLWithContextConsumerProps, value: string) {",
          "1884: function getHeaders(props: GraphiQLWithContextConsumerProps) {",
          "1888: function setHeaders(props: GraphiQLWithContextConsumerProps, value: string) {",
          "1892: function getOperationName(props: GraphiQLWithContextConsumerProps) {",
          "1897:   props: GraphiQLWithContextConsumerProps,",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d291b768203e59bb80ec5312563fdc16bd16aeae",
      "candidate_info": {
        "commit_hash": "d291b768203e59bb80ec5312563fdc16bd16aeae",
        "repo": "graphql/graphiql",
        "commit_url": "https://github.com/graphql/graphiql/commit/d291b768203e59bb80ec5312563fdc16bd16aeae",
        "files": [
          ".changeset/fresh-starfishes-rhyme.md",
          ".vscode/tasks.json",
          "package.json",
          "packages/vscode-graphql-execution/.vscodeignore",
          "packages/vscode-graphql-execution/package.json",
          "packages/vscode-graphql-execution/src/helpers/source.ts",
          "packages/vscode-graphql-execution/src/providers/exec-content.ts",
          "packages/vscode-graphql/package.json",
          "resources/tsconfig.build.cjs.json",
          "yarn.lock"
        ],
        "message": "fix vscode-graphql bundling, update vsce, remove escape-html (#2802) solves #2801",
        "before_after_code_files": [
          "packages/vscode-graphql-execution/src/helpers/source.ts||packages/vscode-graphql-execution/src/helpers/source.ts",
          "packages/vscode-graphql-execution/src/providers/exec-content.ts||packages/vscode-graphql-execution/src/providers/exec-content.ts",
          "yarn.lock||yarn.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "yarn.lock||yarn.lock"
          ],
          "candidate": [
            "yarn.lock||yarn.lock"
          ]
        }
      },
      "candidate_diff": {
        "packages/vscode-graphql-execution/src/helpers/source.ts||packages/vscode-graphql-execution/src/helpers/source.ts": [
          "File: packages/vscode-graphql-execution/src/helpers/source.ts -> packages/vscode-graphql-execution/src/helpers/source.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "91:             JSON.parse(value);",
          "92:             return null;",
          "93:           } catch {",
          "95:           }",
          "96:       }",
          "97:     } catch {",
          "",
          "[Removed Lines]",
          "94:             return false;",
          "",
          "[Added Lines]",
          "94:             return undefined;",
          "",
          "---------------"
        ],
        "packages/vscode-graphql-execution/src/providers/exec-content.ts||packages/vscode-graphql-execution/src/providers/exec-content.ts": [
          "File: packages/vscode-graphql-execution/src/providers/exec-content.ts -> packages/vscode-graphql-execution/src/providers/exec-content.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "10:   WebviewPanel,",
          "11:   WorkspaceFolder,",
          "12: } from 'vscode';",
          "14: import type { ExtractedTemplateLiteral } from '../helpers/source';",
          "15: import { loadConfig, GraphQLProjectConfig } from 'graphql-config';",
          "16: import { visit, VariableDefinitionNode } from 'graphql';",
          "",
          "[Removed Lines]",
          "13: import escapeHtml from 'escape-html';",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "203:           const updateCallback = (data: string, operation: string) => {",
          "204:             if (operation === 'subscription') {",
          "206:             } else {",
          "208:             }",
          "209:             this.update(this.uri);",
          "210:             this.updatePanel();",
          "",
          "[Removed Lines]",
          "205:               this.html = `<pre>${escapeHtml(data)}</pre>` + this.html;",
          "207:               this.html += `<pre>${escapeHtml(data)}</pre>`;",
          "",
          "[Added Lines]",
          "204:               this.html = `<pre>${data}</pre>` + this.html;",
          "206:               this.html += `<pre>${data}</pre>`;",
          "",
          "---------------"
        ],
        "yarn.lock||yarn.lock": [
          "File: yarn.lock -> yarn.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "3590:     ts-node \"^9\"",
          "3591:     tslib \"^2\"",
          "3598: \"@eslint/eslintrc@^1.3.0\":",
          "3599:   version \"1.3.0\"",
          "",
          "[Removed Lines]",
          "3593: \"@esbuild/linux-loong64@0.15.1\":",
          "3594:   version \"0.15.1\"",
          "3595:   resolved \"https://registry.yarnpkg.com/@esbuild/linux-loong64/-/linux-loong64-0.15.1.tgz#f293d9442201fa7448248f05590139bb8e521856\"",
          "3596:   integrity sha512-1tORADNFK9QS4KYyUyh3Td9WGrdiI1rSoKvY6A43+9G0kPujBuT4lIGyoK0AweOSO1aRIR28xQUfiJCUa78bUw==",
          "",
          "[Added Lines]",
          "3593: \"@esbuild/android-arm@0.15.10\":",
          "3594:   version \"0.15.10\"",
          "3595:   resolved \"https://registry.yarnpkg.com/@esbuild/android-arm/-/android-arm-0.15.10.tgz#a5f9432eb221afc243c321058ef25fe899886892\"",
          "3596:   integrity sha512-FNONeQPy/ox+5NBkcSbYJxoXj9GWu8gVGJTVmUyoOCKQFDTrHVKgNSzChdNt0I8Aj/iKcsDf2r9BFwv+FSNUXg==",
          "3598: \"@esbuild/linux-loong64@0.15.10\":",
          "3599:   version \"0.15.10\"",
          "3600:   resolved \"https://registry.yarnpkg.com/@esbuild/linux-loong64/-/linux-loong64-0.15.10.tgz#78a42897c2cf8db9fd5f1811f7590393b77774c7\"",
          "3601:   integrity sha512-w0Ou3Z83LOYEkwaui2M8VwIp+nLi/NA60lBLMvaJ+vXVMcsARYdEzLNE7RSm4+lSg4zq4d7fAVuzk7PNQ5JFgg==",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "4700:   dependencies:",
          "4701:     dotenv \"*\"",
          "4708: \"@types/estree@*\":",
          "4709:   version \"0.0.44\"",
          "4710:   resolved \"https://registry.yarnpkg.com/@types/estree/-/estree-0.0.44.tgz#980cc5a29a3ef3bea6ff1f7d021047d7ea575e21\"",
          "",
          "[Removed Lines]",
          "4703: \"@types/escape-html@^1.0.2\":",
          "4704:   version \"1.0.2\"",
          "4705:   resolved \"https://registry.yarnpkg.com/@types/escape-html/-/escape-html-1.0.2.tgz#072b7b13784fb3cee9c2450c22f36405983f5e3c\"",
          "4706:   integrity sha512-gaBLT8pdcexFztLSPRtriHeXY/Kn4907uOCZ4Q3lncFBkheAWOuNt53ypsF8szgxbEJ513UeBzcf4utN0EzEwA==",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "6148:   dependencies:",
          "6149:     \"@babel/helper-define-polyfill-provider\" \"^0.3.1\"",
          "6152:   version \"6.26.0\"",
          "6153:   resolved \"https://registry.yarnpkg.com/babel-polyfill/-/babel-polyfill-6.26.0.tgz#379937abc67d7895970adc621f284cd966cf2153\"",
          "6154:   integrity sha1-N5k3q8Z9eJWXCtxiHyhM2WbPIVM=",
          "",
          "[Removed Lines]",
          "6151: babel-polyfill@6.26.0, babel-polyfill@^6.26.0:",
          "",
          "[Added Lines]",
          "6151: babel-polyfill@^6.26.0:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "8763:   resolved \"https://registry.yarnpkg.com/esbuild-android-64/-/esbuild-android-64-0.14.38.tgz#5b94a1306df31d55055f64a62ff6b763a47b7f64\"",
          "8764:   integrity sha512-aRFxR3scRKkbmNuGAK+Gee3+yFxkTJO/cx83Dkyzo4CnQl/2zVSurtG6+G86EQIZ+w+VYngVyK7P3HyTBKu3nw==",
          "8771: esbuild-android-arm64@0.14.38:",
          "8772:   version \"0.14.38\"",
          "8773:   resolved \"https://registry.yarnpkg.com/esbuild-android-arm64/-/esbuild-android-arm64-0.14.38.tgz#78acc80773d16007de5219ccce544c036abd50b8\"",
          "8774:   integrity sha512-L2NgQRWuHFI89IIZIlpAcINy9FvBk6xFVZ7xGdOwIm8VyhX1vNCEqUJO3DPSSy945Gzdg98cxtNt8Grv1CsyhA==",
          "8781: esbuild-darwin-64@0.14.38:",
          "8782:   version \"0.14.38\"",
          "8783:   resolved \"https://registry.yarnpkg.com/esbuild-darwin-64/-/esbuild-darwin-64-0.14.38.tgz#e02b1291f629ebdc2aa46fabfacc9aa28ff6aa46\"",
          "8784:   integrity sha512-5JJvgXkX87Pd1Og0u/NJuO7TSqAikAcQQ74gyJ87bqWRVeouky84ICoV4sN6VV53aTW+NE87qLdGY4QA2S7KNA==",
          "8791: esbuild-darwin-arm64@0.14.38:",
          "8792:   version \"0.14.38\"",
          "8793:   resolved \"https://registry.yarnpkg.com/esbuild-darwin-arm64/-/esbuild-darwin-arm64-0.14.38.tgz#01eb6650ec010b18c990e443a6abcca1d71290a9\"",
          "8794:   integrity sha512-eqF+OejMI3mC5Dlo9Kdq/Ilbki9sQBw3QlHW3wjLmsLh+quNfHmGMp3Ly1eWm981iGBMdbtSS9+LRvR2T8B3eQ==",
          "8801: esbuild-freebsd-64@0.14.38:",
          "8802:   version \"0.14.38\"",
          "8803:   resolved \"https://registry.yarnpkg.com/esbuild-freebsd-64/-/esbuild-freebsd-64-0.14.38.tgz#790b8786729d4aac7be17648f9ea8e0e16475b5e\"",
          "8804:   integrity sha512-epnPbhZUt93xV5cgeY36ZxPXDsQeO55DppzsIgWM8vgiG/Rz+qYDLmh5ts3e+Ln1wA9dQ+nZmVHw+RjaW3I5Ig==",
          "8811: esbuild-freebsd-arm64@0.14.38:",
          "8812:   version \"0.14.38\"",
          "8813:   resolved \"https://registry.yarnpkg.com/esbuild-freebsd-arm64/-/esbuild-freebsd-arm64-0.14.38.tgz#b66340ab28c09c1098e6d9d8ff656db47d7211e6\"",
          "8814:   integrity sha512-/9icXUYJWherhk+y5fjPI5yNUdFPtXHQlwP7/K/zg8t8lQdHVj20SqU9/udQmeUo5pDFHMYzcEFfJqgOVeKNNQ==",
          "8821: esbuild-linux-32@0.14.38:",
          "8822:   version \"0.14.38\"",
          "8823:   resolved \"https://registry.yarnpkg.com/esbuild-linux-32/-/esbuild-linux-32-0.14.38.tgz#7927f950986fd39f0ff319e92839455912b67f70\"",
          "8824:   integrity sha512-QfgfeNHRFvr2XeHFzP8kOZVnal3QvST3A0cgq32ZrHjSMFTdgXhMhmWdKzRXP/PKcfv3e2OW9tT9PpcjNvaq6g==",
          "8831: esbuild-linux-64@0.14.38:",
          "8832:   version \"0.14.38\"",
          "8833:   resolved \"https://registry.yarnpkg.com/esbuild-linux-64/-/esbuild-linux-64-0.14.38.tgz#4893d07b229d9cfe34a2b3ce586399e73c3ac519\"",
          "8834:   integrity sha512-uuZHNmqcs+Bj1qiW9k/HZU3FtIHmYiuxZ/6Aa+/KHb/pFKr7R3aVqvxlAudYI9Fw3St0VCPfv7QBpUITSmBR1Q==",
          "8841: esbuild-linux-arm64@0.14.38:",
          "8842:   version \"0.14.38\"",
          "8843:   resolved \"https://registry.yarnpkg.com/esbuild-linux-arm64/-/esbuild-linux-arm64-0.14.38.tgz#8442402e37d0b8ae946ac616784d9c1a2041056a\"",
          "8844:   integrity sha512-HlMGZTEsBrXrivr64eZ/EO0NQM8H8DuSENRok9d+Jtvq8hOLzrxfsAT9U94K3KOGk2XgCmkaI2KD8hX7F97lvA==",
          "8851: esbuild-linux-arm@0.14.38:",
          "8852:   version \"0.14.38\"",
          "8853:   resolved \"https://registry.yarnpkg.com/esbuild-linux-arm/-/esbuild-linux-arm-0.14.38.tgz#d5dbf32d38b7f79be0ec6b5fb2f9251fd9066986\"",
          "8854:   integrity sha512-FiFvQe8J3VKTDXG01JbvoVRXQ0x6UZwyrU4IaLBZeq39Bsbatd94Fuc3F1RGqPF5RbIWW7RvkVQjn79ejzysnA==",
          "8861: esbuild-linux-mips64le@0.14.38:",
          "8862:   version \"0.14.38\"",
          "8863:   resolved \"https://registry.yarnpkg.com/esbuild-linux-mips64le/-/esbuild-linux-mips64le-0.14.38.tgz#95081e42f698bbe35d8ccee0e3a237594b337eb5\"",
          "8864:   integrity sha512-qd1dLf2v7QBiI5wwfil9j0HG/5YMFBAmMVmdeokbNAMbcg49p25t6IlJFXAeLzogv1AvgaXRXvgFNhScYEUXGQ==",
          "8871: esbuild-linux-ppc64le@0.14.38:",
          "8872:   version \"0.14.38\"",
          "8873:   resolved \"https://registry.yarnpkg.com/esbuild-linux-ppc64le/-/esbuild-linux-ppc64le-0.14.38.tgz#dceb0a1b186f5df679618882a7990bd422089b47\"",
          "8874:   integrity sha512-mnbEm7o69gTl60jSuK+nn+pRsRHGtDPfzhrqEUXyCl7CTOCLtWN2bhK8bgsdp6J/2NyS/wHBjs1x8aBWwP2X9Q==",
          "8881: esbuild-linux-riscv64@0.14.38:",
          "8882:   version \"0.14.38\"",
          "8883:   resolved \"https://registry.yarnpkg.com/esbuild-linux-riscv64/-/esbuild-linux-riscv64-0.14.38.tgz#61fb8edb75f475f9208c4a93ab2bfab63821afd2\"",
          "8884:   integrity sha512-+p6YKYbuV72uikChRk14FSyNJZ4WfYkffj6Af0/Tw63/6TJX6TnIKE+6D3xtEc7DeDth1fjUOEqm+ApKFXbbVQ==",
          "8891: esbuild-linux-s390x@0.14.38:",
          "8892:   version \"0.14.38\"",
          "8893:   resolved \"https://registry.yarnpkg.com/esbuild-linux-s390x/-/esbuild-linux-s390x-0.14.38.tgz#34c7126a4937406bf6a5e69100185fd702d12fe0\"",
          "8894:   integrity sha512-0zUsiDkGJiMHxBQ7JDU8jbaanUY975CdOW1YDrurjrM0vWHfjv9tLQsW9GSyEb/heSK1L5gaweRjzfUVBFoybQ==",
          "8901: esbuild-netbsd-64@0.14.38:",
          "8902:   version \"0.14.38\"",
          "8903:   resolved \"https://registry.yarnpkg.com/esbuild-netbsd-64/-/esbuild-netbsd-64-0.14.38.tgz#322ea9937d9e529183ee281c7996b93eb38a5d95\"",
          "8904:   integrity sha512-cljBAApVwkpnJZfnRVThpRBGzCi+a+V9Ofb1fVkKhtrPLDYlHLrSYGtmnoTVWDQdU516qYI8+wOgcGZ4XIZh0Q==",
          "8911: esbuild-openbsd-64@0.14.38:",
          "8912:   version \"0.14.38\"",
          "8913:   resolved \"https://registry.yarnpkg.com/esbuild-openbsd-64/-/esbuild-openbsd-64-0.14.38.tgz#1ca29bb7a2bf09592dcc26afdb45108f08a2cdbd\"",
          "8914:   integrity sha512-CDswYr2PWPGEPpLDUO50mL3WO/07EMjnZDNKpmaxUPsrW+kVM3LoAqr/CE8UbzugpEiflYqJsGPLirThRB18IQ==",
          "8921: esbuild-sunos-64@0.14.38:",
          "8922:   version \"0.14.38\"",
          "8923:   resolved \"https://registry.yarnpkg.com/esbuild-sunos-64/-/esbuild-sunos-64-0.14.38.tgz#c9446f7d8ebf45093e7bb0e7045506a88540019b\"",
          "8924:   integrity sha512-2mfIoYW58gKcC3bck0j7lD3RZkqYA7MmujFYmSn9l6TiIcAMpuEvqksO+ntBgbLep/eyjpgdplF7b+4T9VJGOA==",
          "8931: esbuild-windows-32@0.14.38:",
          "8932:   version \"0.14.38\"",
          "8933:   resolved \"https://registry.yarnpkg.com/esbuild-windows-32/-/esbuild-windows-32-0.14.38.tgz#f8e9b4602fd0ccbd48e5c8d117ec0ba4040f2ad1\"",
          "8934:   integrity sha512-L2BmEeFZATAvU+FJzJiRLFUP+d9RHN+QXpgaOrs2klshoAm1AE6Us4X6fS9k33Uy5SzScn2TpcgecbqJza1Hjw==",
          "8941: esbuild-windows-64@0.14.38:",
          "8942:   version \"0.14.38\"",
          "8943:   resolved \"https://registry.yarnpkg.com/esbuild-windows-64/-/esbuild-windows-64-0.14.38.tgz#280f58e69f78535f470905ce3e43db1746518107\"",
          "8944:   integrity sha512-Khy4wVmebnzue8aeSXLC+6clo/hRYeNIm0DyikoEqX+3w3rcvrhzpoix0S+MF9vzh6JFskkIGD7Zx47ODJNyCw==",
          "8951: esbuild-windows-arm64@0.14.38:",
          "8952:   version \"0.14.38\"",
          "8953:   resolved \"https://registry.yarnpkg.com/esbuild-windows-arm64/-/esbuild-windows-arm64-0.14.38.tgz#d97e9ac0f95a4c236d9173fa9f86c983d6a53f54\"",
          "8954:   integrity sha512-k3FGCNmHBkqdJXuJszdWciAH77PukEyDsdIryEHn9cKLQFxzhT39dSumeTuggaQcXY57UlmLGIkklWZo2qzHpw==",
          "8965:   optionalDependencies:",
          "8988: esbuild@^0.14.27:",
          "8989:   version \"0.14.38\"",
          "",
          "[Removed Lines]",
          "8766: esbuild-android-64@0.15.1:",
          "8767:   version \"0.15.1\"",
          "8768:   resolved \"https://registry.yarnpkg.com/esbuild-android-64/-/esbuild-android-64-0.15.1.tgz#f609a37348a3784ae632e88517d2e5f579984806\"",
          "8769:   integrity sha512-q5kkJZsgLIkyh5e2ZJl4/kXKIueBKtjVMEihP9WCHadqhH6+F9qiycE7fBwUb/g2B15mYlmMBXjp8VmOT3J2gA==",
          "8776: esbuild-android-arm64@0.15.1:",
          "8777:   version \"0.15.1\"",
          "8778:   resolved \"https://registry.yarnpkg.com/esbuild-android-arm64/-/esbuild-android-arm64-0.15.1.tgz#94b064dfa87bacbfb623313ead8338d357175a10\"",
          "8779:   integrity sha512-IQuZOzqMaFceLlKJJA27CXAdh+Mzh2ZblHMmcNIu/wxb6iX1zgYXlPWle62iHnmNCtfAux1mzQvmNsP9aLhemA==",
          "8786: esbuild-darwin-64@0.15.1:",
          "8787:   version \"0.15.1\"",
          "8788:   resolved \"https://registry.yarnpkg.com/esbuild-darwin-64/-/esbuild-darwin-64-0.15.1.tgz#d15ed63dada464c18a8245199294df5b22c865ff\"",
          "8789:   integrity sha512-tyouWLyxwM/Y2fy/reuIvAvVB+KVQwuY9IVyV7LH5CGkJYxgtLb8xVEiwHFF8TG2uo9a2fqdgWffados4YA6Aw==",
          "8796: esbuild-darwin-arm64@0.15.1:",
          "8797:   version \"0.15.1\"",
          "8798:   resolved \"https://registry.yarnpkg.com/esbuild-darwin-arm64/-/esbuild-darwin-arm64-0.15.1.tgz#c8c6a8949faa88cccbc508143662d53a111d7ee0\"",
          "8799:   integrity sha512-fb4V1eB1nir3zJwsS75itsbahkbM71XuqUDJVH8iyBLS8VIQD7MWWAAekea2l9keueGfsn0+wTyDluMT+kg8Cw==",
          "8806: esbuild-freebsd-64@0.15.1:",
          "8807:   version \"0.15.1\"",
          "8808:   resolved \"https://registry.yarnpkg.com/esbuild-freebsd-64/-/esbuild-freebsd-64-0.15.1.tgz#4ebbbd954e2e72cf35e78185f4da810a8c3fce2f\"",
          "8809:   integrity sha512-1KxEv/FUPlQtUSOjFCwR8FVNEskB5LmkbfW9FNJ7lhpG+4RsLiHWw4Sl2Y1/S+aKX7inyWxLA05zYV6XAzO8DA==",
          "8816: esbuild-freebsd-arm64@0.15.1:",
          "8817:   version \"0.15.1\"",
          "8818:   resolved \"https://registry.yarnpkg.com/esbuild-freebsd-arm64/-/esbuild-freebsd-arm64-0.15.1.tgz#a377942ed5b2578f9d8e8aea1396db59df5e1742\"",
          "8819:   integrity sha512-ueUMGSNrcuHwAadioxBdfOCO4+bTVeI68a147BQ/AFFIrf4XJNow4UXxguvQlZO+ZYaVz6EztaL6mHslKie2Rw==",
          "8826: esbuild-linux-32@0.15.1:",
          "8827:   version \"0.15.1\"",
          "8828:   resolved \"https://registry.yarnpkg.com/esbuild-linux-32/-/esbuild-linux-32-0.15.1.tgz#7226edd9517ee0bdc0ea7a8be1b5047d31de9426\"",
          "8829:   integrity sha512-K5WWcN2OZkZ6arFN3+hi1leKc0at9ukKGrXK9Ia94kQOesBphTSmsNK/Gy/AoVoIa0bWrHtxDijS9j9+dz86oA==",
          "8836: esbuild-linux-64@0.15.1:",
          "8837:   version \"0.15.1\"",
          "8838:   resolved \"https://registry.yarnpkg.com/esbuild-linux-64/-/esbuild-linux-64-0.15.1.tgz#fbf0f6320a99f940170b76cc650e623c728d9480\"",
          "8839:   integrity sha512-+haiVm83DfRi9x8M+GgR4f4LtSN8lnEIG8XMGK8/FYpkYNQiKb398GxeHp2yvoMpX8IPvmWCt215tAm5BBNfZQ==",
          "8846: esbuild-linux-arm64@0.15.1:",
          "8847:   version \"0.15.1\"",
          "8848:   resolved \"https://registry.yarnpkg.com/esbuild-linux-arm64/-/esbuild-linux-arm64-0.15.1.tgz#4a33a9b9dc95d537264aaf05a3e3fdbf6fb8cce5\"",
          "8849:   integrity sha512-TP0BCVZEVu/aoVaZe2sn1vpvo63j0LPiH8rvd7AegqOfTwb+mcxLxpgyYwkibafUCMxnIrKdUTsSJeusoMhcLg==",
          "8856: esbuild-linux-arm@0.15.1:",
          "8857:   version \"0.15.1\"",
          "8858:   resolved \"https://registry.yarnpkg.com/esbuild-linux-arm/-/esbuild-linux-arm-0.15.1.tgz#31773327a2c8edfd77c7cf12ded141b2db0b25c6\"",
          "8859:   integrity sha512-qjAkEDcFhVNYwG2xgaDg/hA8JABoMvjzAzE6g1K8kR516oNkKbVf6rN68UrsQaV1zq1qR3dbVeMv/Ul2bheppA==",
          "8866: esbuild-linux-mips64le@0.15.1:",
          "8867:   version \"0.15.1\"",
          "8868:   resolved \"https://registry.yarnpkg.com/esbuild-linux-mips64le/-/esbuild-linux-mips64le-0.15.1.tgz#714b8c49886349d2a599f05fae5cb7dc5e574658\"",
          "8869:   integrity sha512-8vzQzp+kwrn1Y+OjvfFaLS8uL8aR39WnAtxOHwjB72s9g18kHFlE8IQLS9dWDQgKpBSFq9kazsJE65dSVmz+VA==",
          "8876: esbuild-linux-ppc64le@0.15.1:",
          "8877:   version \"0.15.1\"",
          "8878:   resolved \"https://registry.yarnpkg.com/esbuild-linux-ppc64le/-/esbuild-linux-ppc64le-0.15.1.tgz#5df1ec88d850745de2ce23d1a4117d04d36b8a32\"",
          "8879:   integrity sha512-QlWSOgC2Ad53Xvf7ZivXU7wM2y29YhQUrd50PjK0QJ3psh/eYSQx77PTe1iWm7Ovjiqv1wPKEAyC7CbyJUgriw==",
          "8886: esbuild-linux-riscv64@0.15.1:",
          "8887:   version \"0.15.1\"",
          "8888:   resolved \"https://registry.yarnpkg.com/esbuild-linux-riscv64/-/esbuild-linux-riscv64-0.15.1.tgz#3ccf408ec4682630862310e28038d30639e2623c\"",
          "8889:   integrity sha512-/PRNgNsiwb7G2n3rB5WcHinCwKj0OqUmtu8cdakV4CLNWnFnfChEGEJX1x5n8RcGD3xPUlI5CgqFe0/oBcUh+A==",
          "8896: esbuild-linux-s390x@0.15.1:",
          "8897:   version \"0.15.1\"",
          "8898:   resolved \"https://registry.yarnpkg.com/esbuild-linux-s390x/-/esbuild-linux-s390x-0.15.1.tgz#1340260371f01703fe91376d9550f0bcf709d7a4\"",
          "8899:   integrity sha512-TScRbO4mi4AUUXzIQ8sb6ZXhGkCb/PlJ82qFfBE6xxsioae/d6XaSdaha/+OUTvmPeoro3lNf3vwdw27v3wEgw==",
          "8906: esbuild-netbsd-64@0.15.1:",
          "8907:   version \"0.15.1\"",
          "8908:   resolved \"https://registry.yarnpkg.com/esbuild-netbsd-64/-/esbuild-netbsd-64-0.15.1.tgz#b3c31b64a88379d0a16f44ffc66a0c879a4105ae\"",
          "8909:   integrity sha512-ES2pbK8QfsMZbdPkgjkLwWfnEGtPa0vYzVFLQn7GFgP+RiemY+ulH7WWQ8ezMt9rZl4XAR3y14yKLGX0gsBLaw==",
          "8916: esbuild-openbsd-64@0.15.1:",
          "8917:   version \"0.15.1\"",
          "8918:   resolved \"https://registry.yarnpkg.com/esbuild-openbsd-64/-/esbuild-openbsd-64-0.15.1.tgz#2447e8734a8fccfa91f4cbfc2816b09ec38d468f\"",
          "8919:   integrity sha512-DxNWji11AxSEny4HzSKu21Skia8tEPQI1N+XO/RqVOJComOvsFLq+QeooKsK2caOsQIKl9mO14Hh+px+zFabMA==",
          "8926: esbuild-sunos-64@0.15.1:",
          "8927:   version \"0.15.1\"",
          "8928:   resolved \"https://registry.yarnpkg.com/esbuild-sunos-64/-/esbuild-sunos-64-0.15.1.tgz#bca632708b8fc124a15477433ad2ae22f3726e0d\"",
          "8929:   integrity sha512-lwZoWlv893qtQQx5H4QQCh2mcYzGbxEz09ESFdd4cHcUCfjb193bSAy6jPxW2efBx2fHEo2sw43TRtAkpCf+XQ==",
          "8936: esbuild-windows-32@0.15.1:",
          "8937:   version \"0.15.1\"",
          "8938:   resolved \"https://registry.yarnpkg.com/esbuild-windows-32/-/esbuild-windows-32-0.15.1.tgz#c5577ed48901075772db1332ed5098b0a3cf6e2f\"",
          "8939:   integrity sha512-jEFz8DxP+Hh67fk9XMoyLUqPjjoCT6m4bnl36aze0XpPZDuQm0SBDlG/ciOBCjzHDsu/MYUNwxVezvUT3sXh1A==",
          "8946: esbuild-windows-64@0.15.1:",
          "8947:   version \"0.15.1\"",
          "8948:   resolved \"https://registry.yarnpkg.com/esbuild-windows-64/-/esbuild-windows-64-0.15.1.tgz#4fd2d9c62b37e98adff350a2763622c5c0e27c21\"",
          "8949:   integrity sha512-bUetnfw4xXKBTOQx4sTzoENJVEdgAN29ZTLRtnMseRzsMO8pjObQMsRPpPL3Cstt6FJhj3k3uScHc5VnfC9QkA==",
          "8956: esbuild-windows-arm64@0.15.1:",
          "8957:   version \"0.15.1\"",
          "8958:   resolved \"https://registry.yarnpkg.com/esbuild-windows-arm64/-/esbuild-windows-arm64-0.15.1.tgz#6243dd249fccb7b6993096da51173d97a2714b37\"",
          "8959:   integrity sha512-oN0JMj7fQZOiqJ/f/wc8lkxjvWwj5Yz0ZhOeU90JFaPZAfafNnysi6GS95glY5uwLUUJz/RNc84cb0dK2qT89A==",
          "8961: esbuild@0.15.1:",
          "8962:   version \"0.15.1\"",
          "8963:   resolved \"https://registry.yarnpkg.com/esbuild/-/esbuild-0.15.1.tgz#8979137b6c125281d148553d0257ef47e2746793\"",
          "8964:   integrity sha512-zgxo2st9wSbdiR6rTo44l/L7ohttqdXFmhUi5tE6yWahgdBjCwZjBgIkm/gr/TcBTTIwyzd7em8WI37yZ+F2Mg==",
          "8966:     \"@esbuild/linux-loong64\" \"0.15.1\"",
          "8967:     esbuild-android-64 \"0.15.1\"",
          "8968:     esbuild-android-arm64 \"0.15.1\"",
          "8969:     esbuild-darwin-64 \"0.15.1\"",
          "8970:     esbuild-darwin-arm64 \"0.15.1\"",
          "8971:     esbuild-freebsd-64 \"0.15.1\"",
          "8972:     esbuild-freebsd-arm64 \"0.15.1\"",
          "8973:     esbuild-linux-32 \"0.15.1\"",
          "8974:     esbuild-linux-64 \"0.15.1\"",
          "8975:     esbuild-linux-arm \"0.15.1\"",
          "8976:     esbuild-linux-arm64 \"0.15.1\"",
          "8977:     esbuild-linux-mips64le \"0.15.1\"",
          "8978:     esbuild-linux-ppc64le \"0.15.1\"",
          "8979:     esbuild-linux-riscv64 \"0.15.1\"",
          "8980:     esbuild-linux-s390x \"0.15.1\"",
          "8981:     esbuild-netbsd-64 \"0.15.1\"",
          "8982:     esbuild-openbsd-64 \"0.15.1\"",
          "8983:     esbuild-sunos-64 \"0.15.1\"",
          "8984:     esbuild-windows-32 \"0.15.1\"",
          "8985:     esbuild-windows-64 \"0.15.1\"",
          "8986:     esbuild-windows-arm64 \"0.15.1\"",
          "",
          "[Added Lines]",
          "8766: esbuild-android-64@0.15.10:",
          "8767:   version \"0.15.10\"",
          "8768:   resolved \"https://registry.yarnpkg.com/esbuild-android-64/-/esbuild-android-64-0.15.10.tgz#8a59a84acbf2eca96996cadc35642cf055c494f0\"",
          "8769:   integrity sha512-UI7krF8OYO1N7JYTgLT9ML5j4+45ra3amLZKx7LO3lmLt1Ibn8t3aZbX5Pu4BjWiqDuJ3m/hsvhPhK/5Y/YpnA==",
          "8776: esbuild-android-arm64@0.15.10:",
          "8777:   version \"0.15.10\"",
          "8778:   resolved \"https://registry.yarnpkg.com/esbuild-android-arm64/-/esbuild-android-arm64-0.15.10.tgz#f453851dc1d8c5409a38cf7613a33852faf4915d\"",
          "8779:   integrity sha512-EOt55D6xBk5O05AK8brXUbZmoFj4chM8u3riGflLa6ziEoVvNjRdD7Cnp82NHQGfSHgYR06XsPI8/sMuA/cUwg==",
          "8786: esbuild-darwin-64@0.15.10:",
          "8787:   version \"0.15.10\"",
          "8788:   resolved \"https://registry.yarnpkg.com/esbuild-darwin-64/-/esbuild-darwin-64-0.15.10.tgz#778bd29c8186ff47b176c8af58c08cf0fb8e6b86\"",
          "8789:   integrity sha512-hbDJugTicqIm+WKZgp208d7FcXcaK8j2c0l+fqSJ3d2AzQAfjEYDRM3Z2oMeqSJ9uFxyj/muSACLdix7oTstRA==",
          "8796: esbuild-darwin-arm64@0.15.10:",
          "8797:   version \"0.15.10\"",
          "8798:   resolved \"https://registry.yarnpkg.com/esbuild-darwin-arm64/-/esbuild-darwin-arm64-0.15.10.tgz#b30bbefb46dc3c5d4708b0435e52f6456578d6df\"",
          "8799:   integrity sha512-M1t5+Kj4IgSbYmunf2BB6EKLkWUq+XlqaFRiGOk8bmBapu9bCDrxjf4kUnWn59Dka3I27EiuHBKd1rSO4osLFQ==",
          "8806: esbuild-freebsd-64@0.15.10:",
          "8807:   version \"0.15.10\"",
          "8808:   resolved \"https://registry.yarnpkg.com/esbuild-freebsd-64/-/esbuild-freebsd-64-0.15.10.tgz#ab301c5f6ded5110dbdd611140bef1a7c2e99236\"",
          "8809:   integrity sha512-KMBFMa7C8oc97nqDdoZwtDBX7gfpolkk6Bcmj6YFMrtCMVgoU/x2DI1p74DmYl7CSS6Ppa3xgemrLrr5IjIn0w==",
          "8816: esbuild-freebsd-arm64@0.15.10:",
          "8817:   version \"0.15.10\"",
          "8818:   resolved \"https://registry.yarnpkg.com/esbuild-freebsd-arm64/-/esbuild-freebsd-arm64-0.15.10.tgz#a5b09b867a6ff49110f52343b6f12265db63d43f\"",
          "8819:   integrity sha512-m2KNbuCX13yQqLlbSojFMHpewbn8wW5uDS6DxRpmaZKzyq8Dbsku6hHvh2U+BcLwWY4mpgXzFUoENEf7IcioGg==",
          "8826: esbuild-linux-32@0.15.10:",
          "8827:   version \"0.15.10\"",
          "8828:   resolved \"https://registry.yarnpkg.com/esbuild-linux-32/-/esbuild-linux-32-0.15.10.tgz#5282fe9915641caf9c8070e4ba2c3e16d358f837\"",
          "8829:   integrity sha512-guXrwSYFAvNkuQ39FNeV4sNkNms1bLlA5vF1H0cazZBOLdLFIny6BhT+TUbK/hdByMQhtWQ5jI9VAmPKbVPu1w==",
          "8836: esbuild-linux-64@0.15.10:",
          "8837:   version \"0.15.10\"",
          "8838:   resolved \"https://registry.yarnpkg.com/esbuild-linux-64/-/esbuild-linux-64-0.15.10.tgz#f3726e85a00149580cb19f8abfabcbb96f5d52bb\"",
          "8839:   integrity sha512-jd8XfaSJeucMpD63YNMO1JCrdJhckHWcMv6O233bL4l6ogQKQOxBYSRP/XLWP+6kVTu0obXovuckJDcA0DKtQA==",
          "8846: esbuild-linux-arm64@0.15.10:",
          "8847:   version \"0.15.10\"",
          "8848:   resolved \"https://registry.yarnpkg.com/esbuild-linux-arm64/-/esbuild-linux-arm64-0.15.10.tgz#2f0056e9d5286edb0185b56655caa8c574d8dbe7\"",
          "8849:   integrity sha512-GByBi4fgkvZFTHFDYNftu1DQ1GzR23jws0oWyCfhnI7eMOe+wgwWrc78dbNk709Ivdr/evefm2PJiUBMiusS1A==",
          "8856: esbuild-linux-arm@0.15.10:",
          "8857:   version \"0.15.10\"",
          "8858:   resolved \"https://registry.yarnpkg.com/esbuild-linux-arm/-/esbuild-linux-arm-0.15.10.tgz#40a9270da3c8ffa32cf72e24a79883e323dff08d\"",
          "8859:   integrity sha512-6N8vThLL/Lysy9y4Ex8XoLQAlbZKUyExCWyayGi2KgTBelKpPgj6RZnUaKri0dHNPGgReJriKVU6+KDGQwn10A==",
          "8866: esbuild-linux-mips64le@0.15.10:",
          "8867:   version \"0.15.10\"",
          "8868:   resolved \"https://registry.yarnpkg.com/esbuild-linux-mips64le/-/esbuild-linux-mips64le-0.15.10.tgz#90ce1c4ee0202edb4ac69807dea77f7e5804abc4\"",
          "8869:   integrity sha512-BxP+LbaGVGIdQNJUNF7qpYjEGWb0YyHVSKqYKrn+pTwH/SiHUxFyJYSP3pqkku61olQiSBnSmWZ+YUpj78Tw7Q==",
          "8876: esbuild-linux-ppc64le@0.15.10:",
          "8877:   version \"0.15.10\"",
          "8878:   resolved \"https://registry.yarnpkg.com/esbuild-linux-ppc64le/-/esbuild-linux-ppc64le-0.15.10.tgz#782837ae7bd5b279178106c9dd801755a21fabdf\"",
          "8879:   integrity sha512-LoSQCd6498PmninNgqd/BR7z3Bsk/mabImBWuQ4wQgmQEeanzWd5BQU2aNi9mBURCLgyheuZS6Xhrw5luw3OkQ==",
          "8886: esbuild-linux-riscv64@0.15.10:",
          "8887:   version \"0.15.10\"",
          "8888:   resolved \"https://registry.yarnpkg.com/esbuild-linux-riscv64/-/esbuild-linux-riscv64-0.15.10.tgz#d7420d806ece5174f24f4634303146f915ab4207\"",
          "8889:   integrity sha512-Lrl9Cr2YROvPV4wmZ1/g48httE8z/5SCiXIyebiB5N8VT7pX3t6meI7TQVHw/wQpqP/AF4SksDuFImPTM7Z32Q==",
          "8896: esbuild-linux-s390x@0.15.10:",
          "8897:   version \"0.15.10\"",
          "8898:   resolved \"https://registry.yarnpkg.com/esbuild-linux-s390x/-/esbuild-linux-s390x-0.15.10.tgz#21fdf0cb3494a7fb520a71934e4dffce67fe47be\"",
          "8899:   integrity sha512-ReP+6q3eLVVP2lpRrvl5EodKX7EZ1bS1/z5j6hsluAlZP5aHhk6ghT6Cq3IANvvDdscMMCB4QEbI+AjtvoOFpA==",
          "8906: esbuild-netbsd-64@0.15.10:",
          "8907:   version \"0.15.10\"",
          "8908:   resolved \"https://registry.yarnpkg.com/esbuild-netbsd-64/-/esbuild-netbsd-64-0.15.10.tgz#6c06b3107e3df53de381e6299184d4597db0440f\"",
          "8909:   integrity sha512-iGDYtJCMCqldMskQ4eIV+QSS/CuT7xyy9i2/FjpKvxAuCzrESZXiA1L64YNj6/afuzfBe9i8m/uDkFHy257hTw==",
          "8916: esbuild-openbsd-64@0.15.10:",
          "8917:   version \"0.15.10\"",
          "8918:   resolved \"https://registry.yarnpkg.com/esbuild-openbsd-64/-/esbuild-openbsd-64-0.15.10.tgz#4daef5f5d8e74bbda53b65160029445d582570cf\"",
          "8919:   integrity sha512-ftMMIwHWrnrYnvuJQRJs/Smlcb28F9ICGde/P3FUTCgDDM0N7WA0o9uOR38f5Xe2/OhNCgkjNeb7QeaE3cyWkQ==",
          "8926: esbuild-sunos-64@0.15.10:",
          "8927:   version \"0.15.10\"",
          "8928:   resolved \"https://registry.yarnpkg.com/esbuild-sunos-64/-/esbuild-sunos-64-0.15.10.tgz#5fe7bef267a02f322fd249a8214d0274937388a7\"",
          "8929:   integrity sha512-mf7hBL9Uo2gcy2r3rUFMjVpTaGpFJJE5QTDDqUFf1632FxteYANffDZmKbqX0PfeQ2XjUDE604IcE7OJeoHiyg==",
          "8936: esbuild-windows-32@0.15.10:",
          "8937:   version \"0.15.10\"",
          "8938:   resolved \"https://registry.yarnpkg.com/esbuild-windows-32/-/esbuild-windows-32-0.15.10.tgz#48e3dde25ab0135579a288b30ab6ddef6d1f0b28\"",
          "8939:   integrity sha512-ttFVo+Cg8b5+qHmZHbEc8Vl17kCleHhLzgT8X04y8zudEApo0PxPg9Mz8Z2cKH1bCYlve1XL8LkyXGFjtUYeGg==",
          "8946: esbuild-windows-64@0.15.10:",
          "8947:   version \"0.15.10\"",
          "8948:   resolved \"https://registry.yarnpkg.com/esbuild-windows-64/-/esbuild-windows-64-0.15.10.tgz#387a9515bef3fee502d277a5d0a2db49a4ecda05\"",
          "8949:   integrity sha512-2H0gdsyHi5x+8lbng3hLbxDWR7mKHWh5BXZGKVG830KUmXOOWFE2YKJ4tHRkejRduOGDrBvHBriYsGtmTv3ntA==",
          "8956: esbuild-windows-arm64@0.15.10:",
          "8957:   version \"0.15.10\"",
          "8958:   resolved \"https://registry.yarnpkg.com/esbuild-windows-arm64/-/esbuild-windows-arm64-0.15.10.tgz#5a6fcf2fa49e895949bf5495cf088ab1b43ae879\"",
          "8959:   integrity sha512-S+th4F+F8VLsHLR0zrUcG+Et4hx0RKgK1eyHc08kztmLOES8BWwMiaGdoW9hiXuzznXQ0I/Fg904MNbr11Nktw==",
          "8961: esbuild@0.15.10:",
          "8962:   version \"0.15.10\"",
          "8963:   resolved \"https://registry.yarnpkg.com/esbuild/-/esbuild-0.15.10.tgz#85c2f8446e9b1fe04fae68daceacba033eedbd42\"",
          "8964:   integrity sha512-N7wBhfJ/E5fzn/SpNgX+oW2RLRjwaL8Y0ezqNqhjD6w0H2p0rDuEz2FKZqpqLnO8DCaWumKe8dsC/ljvVSSxng==",
          "8966:     \"@esbuild/android-arm\" \"0.15.10\"",
          "8967:     \"@esbuild/linux-loong64\" \"0.15.10\"",
          "8968:     esbuild-android-64 \"0.15.10\"",
          "8969:     esbuild-android-arm64 \"0.15.10\"",
          "8970:     esbuild-darwin-64 \"0.15.10\"",
          "8971:     esbuild-darwin-arm64 \"0.15.10\"",
          "8972:     esbuild-freebsd-64 \"0.15.10\"",
          "8973:     esbuild-freebsd-arm64 \"0.15.10\"",
          "8974:     esbuild-linux-32 \"0.15.10\"",
          "8975:     esbuild-linux-64 \"0.15.10\"",
          "8976:     esbuild-linux-arm \"0.15.10\"",
          "8977:     esbuild-linux-arm64 \"0.15.10\"",
          "8978:     esbuild-linux-mips64le \"0.15.10\"",
          "8979:     esbuild-linux-ppc64le \"0.15.10\"",
          "8980:     esbuild-linux-riscv64 \"0.15.10\"",
          "8981:     esbuild-linux-s390x \"0.15.10\"",
          "8982:     esbuild-netbsd-64 \"0.15.10\"",
          "8983:     esbuild-openbsd-64 \"0.15.10\"",
          "8984:     esbuild-sunos-64 \"0.15.10\"",
          "8985:     esbuild-windows-32 \"0.15.10\"",
          "8986:     esbuild-windows-64 \"0.15.10\"",
          "8987:     esbuild-windows-arm64 \"0.15.10\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "9021:   resolved \"https://registry.yarnpkg.com/escalade/-/escalade-3.1.1.tgz#d8cfdc7000965c5a0174b4a82eaa5c0552742e40\"",
          "9022:   integrity sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==",
          "9025:   version \"1.0.3\"",
          "9026:   resolved \"https://registry.yarnpkg.com/escape-html/-/escape-html-1.0.3.tgz#0258eae4d3d0c0974de1c169188ef0051d1d1988\"",
          "9027:   integrity sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=",
          "",
          "[Removed Lines]",
          "9024: escape-html@1.0.3, escape-html@~1.0.3:",
          "",
          "[Added Lines]",
          "9025: escape-html@~1.0.3:",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "18226:   resolved \"https://registry.yarnpkg.com/vm-browserify/-/vm-browserify-1.1.2.tgz#78641c488b8e6ca91a75f511e7a3b32a86e5dda0\"",
          "18227:   integrity sha512-2ham8XPWTONajOR0ohOKOHXkm3+gaBmGut3SRuu75xLd/RRaY6vqgh8NBYYk7+RW3u5AtzPQZG8F10LHkl0lAQ==",
          "18233:   dependencies:",
          "18234:     azure-devops-node-api \"^11.0.1\"",
          "18235:     chalk \"^2.4.2\"",
          "",
          "[Removed Lines]",
          "18229: vsce@2.6.7:",
          "18230:   version \"2.6.7\"",
          "18231:   resolved \"https://registry.yarnpkg.com/vsce/-/vsce-2.6.7.tgz#e590ff957d07910c471334857627c3e7f57e87bc\"",
          "18232:   integrity sha512-5dEtdi/yzWQbOU7JDUSOs8lmSzzkewBR5P122BUkmXE6A/DEdFsKNsg2773NGXJTwwF1MfsOgUR6QVF3cLLJNQ==",
          "",
          "[Added Lines]",
          "18230: vsce@^2.11.0:",
          "18231:   version \"2.11.0\"",
          "18232:   resolved \"https://registry.yarnpkg.com/vsce/-/vsce-2.11.0.tgz#e60aac58ecfc3aec6e40024e13ea8c8d29764aef\"",
          "18233:   integrity sha512-pr9Y0va/HCer0tTifeqaUrK24JJSpRd6oLeF/PY6FtrY41e+lwxiAq6jfMXx4ShAZglYg2rFKoKROwa7E7SEqQ==",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "18252:     yauzl \"^2.3.1\"",
          "18253:     yazl \"^2.2.2\"",
          "18256:   version \"2.7.0\"",
          "18257:   resolved \"https://registry.yarnpkg.com/vsce/-/vsce-2.7.0.tgz#7be8deebd1e673b996238d608e7f7324c98744ed\"",
          "18258:   integrity sha512-CKU34wrQlbKDeJCRBkd1a8iwF9EvNxcYMg9hAUH6AxFGR6Wo2IKWwt3cJIcusHxx6XdjDHWlfAS/fJN30uvVnA==",
          "",
          "[Removed Lines]",
          "18255: vsce@^2.6.3, vsce@^2.7.0:",
          "",
          "[Added Lines]",
          "18256: vsce@^2.6.3:",
          "",
          "---------------"
        ]
      }
    }
  ]
}