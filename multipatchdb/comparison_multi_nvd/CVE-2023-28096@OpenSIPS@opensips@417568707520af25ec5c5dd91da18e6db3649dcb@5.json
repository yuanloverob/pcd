{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "aaaae0d151fb4e1f459505c890df2fc12745220c",
      "candidate_info": {
        "commit_hash": "aaaae0d151fb4e1f459505c890df2fc12745220c",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/aaaae0d151fb4e1f459505c890df2fc12745220c",
        "files": [
          "lib/digest_auth/digest_auth.c",
          "modules/auth/api.c",
          "modules/httpd/doc/httpd_admin.xml",
          "modules/mid_registrar/save.c",
          "modules/stir_shaken/doc/stir_shaken_admin.xml",
          "modules/usrloc/dlist.c",
          "time_rec.h",
          "ut.h"
        ],
        "message": "Various code/doc improvements; Var renames; Fix typos\n\n(cherry picked from commit 28d87ad30f99abcfaca678955cff6b38bdc2b24f)\n(cherry picked from commit 2aa0cafcbee13131bdc4793b893530fa8126576c)",
        "before_after_code_files": [
          "lib/digest_auth/digest_auth.c||lib/digest_auth/digest_auth.c",
          "modules/auth/api.c||modules/auth/api.c",
          "modules/mid_registrar/save.c||modules/mid_registrar/save.c",
          "modules/usrloc/dlist.c||modules/usrloc/dlist.c",
          "time_rec.h||time_rec.h",
          "ut.h||ut.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/digest_auth/digest_auth.c||lib/digest_auth/digest_auth.c": [
          "File: lib/digest_auth/digest_auth.c -> lib/digest_auth/digest_auth.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:  str *s = (str*)*param;",
          "64:  alg_t af;",
          "65:  int algflags = 0;",
          "70:   LM_ERR(\"Failed to parse list of algorithms\\n\");",
          "71:   return -1;",
          "72:  }",
          "74:   af = parse_digest_algorithm(&q->s);",
          "75:   if (!digest_algorithm_available(af)) {",
          "76:    LM_ERR(\"Unsupported algorithm type: \\\"%.*s\\\"\\n\",",
          "77:        q->s.len, q->s.s);",
          "79:    return (-1);",
          "80:   }",
          "81:   algflags |= ALG2ALGFLG(af);",
          "82:  }",
          "86:  return (0);",
          "",
          "[Removed Lines]",
          "66:  csv_record *q_csv, *q;",
          "68:  q_csv = parse_csv_record(s);",
          "69:  if (!q_csv) {",
          "73:  for (q = q_csv; q; q = q->next) {",
          "78:    free_csv_record(q_csv);",
          "83:  free_csv_record(q_csv);",
          "",
          "[Added Lines]",
          "66:  csv_record *alg_csv, *q;",
          "68:  alg_csv = parse_csv_record(s);",
          "69:  if (!alg_csv) {",
          "73:  for (q = alg_csv; q; q = q->next) {",
          "78:    free_csv_record(alg_csv);",
          "83:  free_csv_record(alg_csv);",
          "",
          "---------------"
        ],
        "modules/auth/api.c||modules/auth/api.c": [
          "File: modules/auth/api.c -> modules/auth/api.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "342:    return -1;",
          "343:  } else {",
          "344:   if (params->creds.ha1->len != digest_calc->HASHHEXLEN) {",
          "346:        \"for the algorithm \\\"%s\\\": %d expected, %d provided\\n\",",
          "347:        digest_calc->algorithm_val.s, digest_calc->HASHHEXLEN,",
          "348:        params->creds.ha1->len);",
          "",
          "[Removed Lines]",
          "345:    LM_ERR(\"Incorrect length if pre-hashed credentials \"",
          "",
          "[Added Lines]",
          "345:    LM_ERR(\"Incorrect length of pre-hashed credentials \"",
          "",
          "---------------"
        ],
        "modules/mid_registrar/save.c||modules/mid_registrar/save.c": [
          "File: modules/mid_registrar/save.c -> modules/mid_registrar/save.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1387:    if (reg_mode == MID_REG_THROTTLE_CT) {",
          "1389:     ci->pre_replicate_cb = mid_reg_store_ct_data;",
          "1391:       mri, &_c->uri, ctmap->expires, e_out,",
          "1392:       get_act_time(), ci->cseq",
          "1394:     ci->pre_replicate_info = &ct_data;",
          "1395:    }",
          "",
          "[Removed Lines]",
          "1390:     memcpy(&ct_data, &(struct mr_ct_data){",
          "1393:      }, sizeof ct_data);",
          "",
          "[Added Lines]",
          "1390:     ct_data = (struct mr_ct_data){",
          "1393:      };",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1653:    if (reg_mode == MID_REG_THROTTLE_AOR) {",
          "1655:     ci->pre_replicate_cb = mid_reg_store_ct_data;",
          "1657:       mri, &_c->uri, ctmap->expires, e_out,",
          "1658:       mri->last_reg_ts, ci->cseq",
          "1660:     ci->pre_replicate_info = &ct_data;",
          "1661:    }",
          "",
          "[Removed Lines]",
          "1656:     memcpy(&ct_data, &(struct mr_ct_data){",
          "1659:      }, sizeof ct_data);",
          "",
          "[Added Lines]",
          "1656:     ct_data = (struct mr_ct_data){",
          "1659:      };",
          "",
          "---------------"
        ],
        "modules/usrloc/dlist.c||modules/usrloc/dlist.c": [
          "File: modules/usrloc/dlist.c -> modules/usrloc/dlist.c"
        ],
        "time_rec.h||time_rec.h": [
          "File: time_rec.h -> time_rec.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "34: #define PKG_ALLOC    2",
          "35: #define TR_BYXXX     4",
          "39: tmrec *tmrec_parse(const char *tr, char alloc_type);",
          "41: int _tmrec_check(const tmrec *tr, time_t check_time);",
          "",
          "[Removed Lines]",
          "37: #define TR_NOVAL ((time_t)-1)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "141: #define FREQ_WEEKLY  3",
          "142: #define FREQ_DAILY   4",
          "144: typedef struct _tr_byxxx",
          "145: {",
          "146:  int nr;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "142: #define TR_NOVAL ((time_t)-1)",
          "",
          "---------------"
        ],
        "ut.h||ut.h": [
          "File: ut.h -> ut.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "789:   return 0;",
          "790:  }",
          "793:  if (!dst->s) {",
          "794:   LM_ERR(\"no shared memory left\\n\");",
          "795:   dst->len = 0;",
          "",
          "[Removed Lines]",
          "792:  dst->s = shm_malloc(src->len + 1);",
          "",
          "[Added Lines]",
          "792:  dst->s = shm_malloc(_src.len + 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1440: char *db_url_escape(const str *url);",
          "1442: {",
          "1443:  return db_url_escape(_str(url));",
          "1444: }",
          "",
          "[Removed Lines]",
          "1441: static inline char *_db_url_escape(char *url)",
          "",
          "[Added Lines]",
          "1441: static inline char *_db_url_escape(const char *url)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2d49e1f3a89b751942c1b6340355edb38ef6446c",
      "candidate_info": {
        "commit_hash": "2d49e1f3a89b751942c1b6340355edb38ef6446c",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/2d49e1f3a89b751942c1b6340355edb38ef6446c",
        "files": [
          "msg_translator.c"
        ],
        "message": "Fix bad body re-assembling when handling a multi part with empty parts\n\nCredits for the finding and for the fix go to John Burke ( @john08burke )\nCloses #2794\n\n(cherry picked from commit b0591d285ad966c2cb13672de8071c03fcba7414)",
        "before_after_code_files": [
          "msg_translator.c||msg_translator.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "msg_translator.c||msg_translator.c": [
          "File: msg_translator.c -> msg_translator.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1262:  char *hdr, *it;",
          "1267:  if (msg->body->updated_part_count==0) {",
          "",
          "[Removed Lines]",
          "1265:  orig_offs = msg->body->part_count ? msg->body->body.s-msg->buf : msg->len ;",
          "",
          "[Added Lines]",
          "1265:  orig_offs = msg->body ? msg->body->body.s-msg->buf : msg->len ;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1915:  } else {",
          "1920:   memcpy(new_buf+*new_offs, msg->buf+*orig_offs, size );",
          "",
          "[Removed Lines]",
          "1917:   size = (msg->body->part_count) ?",
          "",
          "[Added Lines]",
          "1917:   size = (msg->body->body.s - msg->buf) - *orig_offs;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "2423:   new_buf[(int)(msg->first_line.u.reply.status.s-msg->buf)+2] = '0';",
          "2425:  LM_DBG(\"copied size: orig:%d, new: %d, rest: %d\"",
          "2429:  return new_buf;",
          "",
          "[Removed Lines]",
          "2426:    \" msg=\\n%s\\n\", s_offset, offset, len-s_offset, new_buf);",
          "",
          "[Added Lines]",
          "2424:    \" msg=|\\n%s|\\n\", s_offset, offset, len-s_offset, new_buf);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "53017e0f89f6831b15117ed38b35b3c33b44a47a",
      "candidate_info": {
        "commit_hash": "53017e0f89f6831b15117ed38b35b3c33b44a47a",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/53017e0f89f6831b15117ed38b35b3c33b44a47a",
        "files": [
          "modules/cachedb_redis/cachedb_redis_dbase.c",
          "modules/cachedb_redis/cachedb_redis_utils.c"
        ],
        "message": "[cachedb_redis] re-align code with 3.1\n\nThe cherry-pick 7cb182d mixed a bit the order of the code lines\nThanks to @john08burke for this, see  #2806 for more",
        "before_after_code_files": [
          "modules/cachedb_redis/cachedb_redis_dbase.c||modules/cachedb_redis/cachedb_redis_dbase.c",
          "modules/cachedb_redis/cachedb_redis_utils.c||modules/cachedb_redis/cachedb_redis_utils.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/cachedb_redis/cachedb_redis_dbase.c||modules/cachedb_redis/cachedb_redis_dbase.c": [
          "File: modules/cachedb_redis/cachedb_redis_dbase.c -> modules/cachedb_redis/cachedb_redis_dbase.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:   redis_init_ssl(con->id->extra_options, node->context,",
          "152:    &node->tls_dom) < 0) {",
          "153:   redisFree(node->context);",
          "154:   return -1;",
          "155:  }",
          "156: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "154:   node->context = NULL;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "185: error:",
          "186:  redisFree(node->context);",
          "187:  if (use_tls && node->tls_dom) {",
          "188:   tls_api.release_domain(node->tls_dom);",
          "189:   node->tls_dom = NULL;",
          "190:  }",
          "192:  return -1;",
          "193: }",
          "",
          "[Removed Lines]",
          "191:  node->context = NULL;",
          "",
          "[Added Lines]",
          "188:  node->context = NULL;",
          "",
          "---------------"
        ],
        "modules/cachedb_redis/cachedb_redis_utils.c||modules/cachedb_redis/cachedb_redis_utils.c": [
          "File: modules/cachedb_redis/cachedb_redis_utils.c -> modules/cachedb_redis/cachedb_redis_utils.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "109:  new = con->nodes;",
          "110:  while (new) {",
          "111:   foo = new->next;",
          "114:   redisFree(new->context);",
          "115:   new->context = NULL;",
          "116:   pkg_free(new);",
          "117:   new = foo;",
          "118:  }",
          "",
          "[Removed Lines]",
          "112:   if (use_tls && new->tls_dom)",
          "113:    tls_api.release_domain(new->tls_dom);",
          "",
          "[Added Lines]",
          "114:   if (use_tls && new->tls_dom)",
          "115:    tls_api.release_domain(new->tls_dom);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "852f9d9d71d92b870072b07d44cf55a258b88f0a",
      "candidate_info": {
        "commit_hash": "852f9d9d71d92b870072b07d44cf55a258b88f0a",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/852f9d9d71d92b870072b07d44cf55a258b88f0a",
        "files": [
          "parser/sdp/sdp_helpr_funcs.c"
        ],
        "message": "Fix crash in parse_sdp for fmtp, rtpmap and hold\n\nWhen invalid strings would have been passed, the remaining value would\nhave resulted in an invalid memory access.\n\nIssue discovered during OpenSIPS Security Audit 2021,\n    by Alfred Farrugia & Sandro Gauci (Enable Security)",
        "before_after_code_files": [
          "parser/sdp/sdp_helpr_funcs.c||parser/sdp/sdp_helpr_funcs.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "parser/sdp/sdp_helpr_funcs.c||parser/sdp/sdp_helpr_funcs.c": [
          "File: parser/sdp/sdp_helpr_funcs.c -> parser/sdp/sdp_helpr_funcs.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:  char *cp, *cp1;",
          "58:  int len;",
          "60:  if (strncasecmp(body->s, \"a=rtpmap:\", 9) !=0) {",
          "62:   return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62:  if (body->len < 14)",
          "63:   return -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "124:  char *cp, *cp1;",
          "125:  int len;",
          "127:  if (strncasecmp(body->s, \"a=fmtp:\", 7) !=0) {",
          "129:   return -1;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "134:  if (body->len < 10)",
          "135:   return -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "222: {",
          "223:  char *cp1;",
          "225:  cp1 = body->s;",
          "226:  if ( !( (strncasecmp(cp1, \"a=sendrecv\", 10) == 0) ||",
          "227:   (strncasecmp(cp1, \"a=recvonly\", 10) == 0))) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "235:  if (body->len < 10)",
          "236:   return -1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b15d63018834432ffd6eddba4dde0083fe16ecba",
      "candidate_info": {
        "commit_hash": "b15d63018834432ffd6eddba4dde0083fe16ecba",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/b15d63018834432ffd6eddba4dde0083fe16ecba",
        "files": [
          "modules/rtpengine/rtpengine.c"
        ],
        "message": "rtpengine: fix switching set for rtpengine_play_dtmf\n\nReported by Slava Bendersky, close #2808",
        "before_after_code_files": [
          "modules/rtpengine/rtpengine.c||modules/rtpengine/rtpengine.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/rtpengine/rtpengine.c||modules/rtpengine/rtpengine.c": [
          "File: modules/rtpengine/rtpengine.c -> modules/rtpengine/rtpengine.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3505:  bencode_item_t *ret, *d_code;",
          "3506:  int rcode = -1;",
          "3508:  if (bencode_buffer_init(&bencbuf)) {",
          "3509:   LM_ERR(\"could not initialize bencode_buffer_t\\n\");",
          "3510:   return -2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3508:  if (set_rtpengine_set_from_avp(msg) == -1)",
          "3509:   return -1;",
          "",
          "---------------"
        ]
      }
    }
  ]
}