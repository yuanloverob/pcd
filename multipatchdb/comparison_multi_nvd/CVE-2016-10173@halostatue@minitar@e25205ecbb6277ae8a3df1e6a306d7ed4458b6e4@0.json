{
  "cve_id": "CVE-2016-10173",
  "cve_desc": "Directory traversal vulnerability in the minitar before 0.6 and archive-tar-minitar 0.5.2 gems for Ruby allows remote attackers to write to arbitrary files via a .. (dot dot) in a TAR archive entry.",
  "repo": "halostatue/minitar",
  "patch_hash": "e25205ecbb6277ae8a3df1e6a306d7ed4458b6e4",
  "patch_info": {
    "commit_hash": "e25205ecbb6277ae8a3df1e6a306d7ed4458b6e4",
    "repo": "halostatue/minitar",
    "commit_url": "https://github.com/halostatue/minitar/commit/e25205ecbb6277ae8a3df1e6a306d7ed4458b6e4",
    "files": [
      "History.md",
      "lib/archive/tar/minitar.rb",
      "lib/archive/tar/minitar/input.rb",
      "minitar.gemspec",
      "test/test_tar_input.rb"
    ],
    "message": "Resolve relative path vulnerability\n\nFixes #16",
    "before_after_code_files": [
      "lib/archive/tar/minitar.rb||lib/archive/tar/minitar.rb",
      "lib/archive/tar/minitar/input.rb||lib/archive/tar/minitar/input.rb",
      "minitar.gemspec||minitar.gemspec",
      "test/test_tar_input.rb||test/test_tar_input.rb"
    ]
  },
  "patch_diff": {
    "lib/archive/tar/minitar.rb||lib/archive/tar/minitar.rb": [
      "File: lib/archive/tar/minitar.rb -> lib/archive/tar/minitar.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "73: module Archive::Tar::Minitar",
      "74:   VERSION = '0.6' # :nodoc:",
      "76:   # Raised when a wrapped data stream class is not seekable.",
      "78:   # The exception raised when operations are performed on a stream that has",
      "79:   # previously been closed.",
      "81:   # The exception raised when a filename exceeds 256 bytes in length, the",
      "82:   # maximum supported by the standard Tar format.",
      "84:   # The exception raised when a data stream ends before the amount of data",
      "85:   # expected in the archive's PosixHeader.",
      "86:   UnexpectedEOF = Class.new(StandardError)",
      "88:   class << self",
      "89:     # Tests if +path+ refers to a directory. Fixes an apparently",
      "",
      "[Removed Lines]",
      "77:   NonSeekableStream = Class.new(StandardError)",
      "80:   ClosedStream = Class.new(StandardError)",
      "83:   FileNameTooLong = Class.new(StandardError)",
      "",
      "[Added Lines]",
      "76:   # The base class for any minitar error.",
      "77:   Error = Class.new(StandardError)",
      "79:   NonSeekableStream = Class.new(Error)",
      "82:   ClosedStream = Class.new(Error)",
      "85:   FileNameTooLong = Class.new(Error)",
      "89:   # The exception raised when a file contains a relative path in secure mode",
      "90:   # (the default for this version).",
      "91:   SecureRelativePathError = Class.new(Error)",
      "",
      "---------------"
    ],
    "lib/archive/tar/minitar/input.rb||lib/archive/tar/minitar/input.rb": [
      "File: lib/archive/tar/minitar/input.rb -> lib/archive/tar/minitar/input.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "97:         :entry    => entry",
      "98:       }",
      "100:       if entry.directory?",
      "105:         if Archive::Tar::Minitar.dir?(dest)",
      "106:           begin",
      "",
      "[Removed Lines]",
      "101:         dest = File.join(destdir, entry.full_name)",
      "103:         yield :dir, entry.full_name, stats if block_given?",
      "",
      "[Added Lines]",
      "100:       # extract_entry is not vulnerable to prefix '/' vulnerabilities, but it",
      "101:       # is vulnerable to relative path directories. This code will break this",
      "102:       # vulnerability. For this version, we are breaking relative paths HARD by",
      "103:       # throwing an exception.",
      "104:       #",
      "105:       # Future versions may permit relative paths as long as the file does not",
      "106:       # leave +destdir+.",
      "107:       #",
      "108:       # However, squeeze consecutive '/' characters together.",
      "109:       full_name = entry.full_name.squeeze('/')",
      "111:       if full_name =~ /\\.{2}(?:\\/|\\z)/",
      "112:         raise SecureRelativePathError, %q(Path contains '..')",
      "113:       end",
      "116:         dest = File.join(destdir, full_name)",
      "118:         yield :dir, full_name, stats if block_given?",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "109:             nil",
      "110:           end",
      "111:         else",
      "112:           FileUtils.mkdir_p(dest, :mode => entry.mode)",
      "113:           FileUtils.chmod(entry.mode, dest)",
      "114:         end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "127:           File.unlink(dest.chomp('/')) if File.symlink?(dest.chomp('/'))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "117:         fsync_dir(File.join(dest, \"..\"))",
      "118:         return",
      "119:       else # it's a file",
      "121:         FileUtils.mkdir_p(destdir, :mode => 0755)",
      "124:         FileUtils.chmod(0600, destfile) rescue nil  # Errno::ENOENT",
      "128:         File.open(destfile, \"wb\", entry.mode) do |os|",
      "129:           loop do",
      "",
      "[Removed Lines]",
      "120:         destdir = File.join(destdir, File.dirname(entry.full_name))",
      "123:         destfile = File.join(destdir, File.basename(entry.full_name))",
      "126:         yield :file_start, entry.full_name, stats if block_given?",
      "",
      "[Added Lines]",
      "137:         destdir = File.join(destdir, File.dirname(full_name))",
      "140:         destfile = File.join(destdir, File.basename(full_name))",
      "142:         File.unlink(destfile) if File.symlink?(destfile)",
      "146:         yield :file_start, full_name, stats if block_given?",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "133:             stats[:currinc] = os.write(data)",
      "134:             stats[:current] += stats[:currinc]",
      "137:           end",
      "138:           os.fsync",
      "139:         end",
      "",
      "[Removed Lines]",
      "136:             yield :file_progress, entry.full_name, stats if block_given?",
      "",
      "[Added Lines]",
      "156:             yield :file_progress, full_name, stats if block_given?",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "142:         fsync_dir(File.dirname(destfile))",
      "143:         fsync_dir(File.join(File.dirname(destfile), \"..\"))",
      "146:       end",
      "147:     end",
      "",
      "[Removed Lines]",
      "145:         yield :file_done, entry.full_name, stats if block_given?",
      "",
      "[Added Lines]",
      "165:         yield :file_done, full_name, stats if block_given?",
      "",
      "---------------"
    ],
    "minitar.gemspec||minitar.gemspec": [
      "File: minitar.gemspec -> minitar.gemspec",
      "--- Hunk 1 ---",
      "[Context before]",
      "8:   s.required_rubygems_version = Gem::Requirement.new(\">= 0\") if s.respond_to? :required_rubygems_version=",
      "9:   s.require_paths = [\"lib\"]",
      "10:   s.authors = [\"Austin Ziegler\"]",
      "12:   s.description = \"The minitar library is a pure-Ruby library that provides the ability to deal\\nwith POSIX tar(1) archive files.\\n\\nThis is release 0.6, \\u{2026}\\n\\nminitar (previously called Archive::Tar::Minitar) is based heavily on code\\noriginally written by Mauricio Julio Fern\\u{e1}ndez Pradier for the rpa-base\\nproject.\"",
      "13:   s.email = [\"halostatue@gmail.com\"]",
      "14:   s.extra_rdoc_files = [\"Code-of-Conduct.md\", \"Contributing.md\", \"History.md\", \"Licence.md\", \"Manifest.txt\", \"README.rdoc\", \"docs/bsdl.txt\", \"docs/ruby.txt\"]",
      "",
      "[Removed Lines]",
      "11:   s.date = \"2016-11-08\"",
      "",
      "[Added Lines]",
      "11:   s.date = \"2016-11-14\"",
      "",
      "---------------"
    ],
    "test/test_tar_input.rb||test/test_tar_input.rb": [
      "File: test/test_tar_input.rb -> test/test_tar_input.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "74:         outer += 1",
      "75:       end",
      "76:       assert_equal(2, outer)",
      "77:     end",
      "78:   end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "131:       assert_equal(2, outer_count)",
      "132:     end",
      "133:   end",
      "134: end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "136:   def test_extract_entry_breaks_symlinks",
      "137:     return if Minitar.windows?",
      "139:     IO.write('data__/file4', '')",
      "140:     File.symlink('data__/file4', 'data__/file3')",
      "141:     File.symlink('data__/file4', 'data__/data')",
      "143:     Minitar.unpack(Zlib::GzipReader.new(StringIO.new(TEST_TGZ)), 'data__')",
      "144:     Minitar.unpack(Zlib::GzipReader.new(File.open('data__/data.tar.gz', 'rb')),",
      "145:                    'data__')",
      "147:     refute File.symlink?('data__/file3')",
      "148:     refute File.symlink?('data__/data')",
      "149:   end",
      "151:   RELATIVE_DIRECTORY_TGZ = Base64.decode64 <<-EOS",
      "152: H4sICIIoKVgCA2JhZC1kaXIudGFyANPT0y8sTy0qqWSgHTAwMDAzMVEA0eZmpmDawAjChwEFQ2MDQyMg",
      "153: MDUzVDAwNDY0N2VQMGCgAygtLkksAjolEcjIzMOtDqgsLQ2/J0H+gNOjYBSMglEwyAEA2LchrwAGAAA=",
      "154:   EOS",
      "156:   def test_extract_entry_fails_with_relative_directory",
      "157:     reader = Zlib::GzipReader.new(StringIO.new(RELATIVE_DIRECTORY_TGZ))",
      "158:     Minitar::Input.open(reader) do |stream|",
      "159:       stream.each do |entry|",
      "160:         assert_raises Archive::Tar::Minitar::SecureRelativePathError do",
      "161:           stream.extract_entry(\"data__\", entry)",
      "162:         end",
      "163:       end",
      "164:     end",
      "165:   end",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "30e62689b614938dc96b4f2cb8e033e72f650670",
      "candidate_info": {
        "commit_hash": "30e62689b614938dc96b4f2cb8e033e72f650670",
        "repo": "halostatue/minitar",
        "commit_url": "https://github.com/halostatue/minitar/commit/30e62689b614938dc96b4f2cb8e033e72f650670",
        "files": [
          ".gitignore",
          ".hoerc",
          ".travis.yml",
          "Gemfile",
          "History.md",
          "Licence.md",
          "README.rdoc",
          "Rakefile",
          "archive-tar-minitar.gemspec",
          "lib/archive/tar/minitar.rb",
          "lib/archive/tar/minitar/input.rb",
          "minitar.gemspec",
          "support/hoe/deprecated_gem.rb",
          "test/test_tar_input.rb"
        ],
        "message": "Resolve relative path vulnerability\n\nFixes #16, CVE-2016-10173\n\nAlso makes the move from minitar.gemspec to archive-tar-minitar.gemspec.",
        "before_after_code_files": [
          "README.rdoc||README.rdoc",
          "archive-tar-minitar.gemspec||archive-tar-minitar.gemspec",
          "lib/archive/tar/minitar.rb||lib/archive/tar/minitar.rb",
          "lib/archive/tar/minitar/input.rb||lib/archive/tar/minitar/input.rb",
          "minitar.gemspec||minitar.gemspec",
          "support/hoe/deprecated_gem.rb||support/hoe/deprecated_gem.rb",
          "test/test_tar_input.rb||test/test_tar_input.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/archive/tar/minitar.rb||lib/archive/tar/minitar.rb",
            "lib/archive/tar/minitar/input.rb||lib/archive/tar/minitar/input.rb",
            "minitar.gemspec||minitar.gemspec",
            "test/test_tar_input.rb||test/test_tar_input.rb"
          ],
          "candidate": [
            "lib/archive/tar/minitar.rb||lib/archive/tar/minitar.rb",
            "lib/archive/tar/minitar/input.rb||lib/archive/tar/minitar/input.rb",
            "minitar.gemspec||minitar.gemspec",
            "test/test_tar_input.rb||test/test_tar_input.rb"
          ]
        }
      },
      "candidate_diff": {
        "README.rdoc||README.rdoc": [
          "File: README.rdoc -> README.rdoc",
          "--- Hunk 1 ---",
          "[Context before]",
          "4: code :: https://github.com/halostatue/minitar/",
          "5: bugs :: https://github.com/halostatue/minitar/issues",
          "6: rdoc :: http://rdoc.info/gems/minitar/",
          "8:                           {<img src=\"https://ci.appveyor.com/api/projects/status/bj4gqn3gp3gu45sa?svg=true\" />}[https://ci.appveyor.com/project/halostatue/minitar]",
          "12: == Description",
          "",
          "[Removed Lines]",
          "7: continuous integration :: {<img src=\"https://travis-ci.org/halostatue/minitar.png\" />}[https://travis-ci.org/halostatue/minitar]",
          "10: test coverage :: {<img src=\"https://coveralls.io/repos/halostatue/minitar/badge.png\" alt=\"Coverage Status\" />}[https://coveralls.io/r/halostatue/minitar]",
          "",
          "[Added Lines]",
          "7: continuous integration :: {<img src=\"https://travis-ci.org/halostatue/minitar.svg\" />}[https://travis-ci.org/halostatue/minitar]",
          "9: test coverage :: {<img src=\"https://coveralls.io/repos/halostatue/minitar/badge.svg\" alt=\"Coverage Status\" />}[https://coveralls.io/r/halostatue/minitar]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "49: wrapped data stream object.",
          "51:   begin",
          "53:     tar = Output.new(sgz)",
          "54:     Find.find('tests') do |entry|",
          "55:       Minitar.pack_file(entry, tar)",
          "",
          "[Removed Lines]",
          "52:     sgz = Zlib::GzipWriter.new(StringIO.new(\"\"))",
          "",
          "[Added Lines]",
          "51:     sgz = Zlib::GzipWriter.new(StringIO.new(String.new))",
          "",
          "---------------"
        ],
        "archive-tar-minitar.gemspec||archive-tar-minitar.gemspec": [
          "File: archive-tar-minitar.gemspec -> archive-tar-minitar.gemspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # -*- encoding: utf-8 -*-",
          "2: # stub: archive-tar-minitar 0.6 ruby lib",
          "",
          "[Removed Lines]",
          "4: minitar = Gem::Specification.load('minitar.gemspec')",
          "5: minitar.name = 'archive-tar-minitar'",
          "6: minitar.description =",
          "7:   minitar.summary = %q(This gem is deprecated. Just install 'minitar'.)",
          "8: minitar.files.delete_if { |f| f !~ %r{lib/archive-tar-minitar\\.rb} }",
          "9: minitar.extra_rdoc_files.clear",
          "10: minitar.rdoc_options.clear",
          "11: minitar.dependencies.clear",
          "12: minitar.add_dependency(%q<minitar>, \"~> #{minitar.version}\")",
          "13: minitar.add_dependency(%q<minitar-cli>, \"<= 1.0\")",
          "15: minitar",
          "",
          "[Added Lines]",
          "4: Gem::Specification.new do |s|",
          "5:   s.name = \"archive-tar-minitar\"",
          "6:   s.version = \"0.6\"",
          "8:   s.required_rubygems_version = Gem::Requirement.new(\">= 0\") if s.respond_to? :required_rubygems_version=",
          "9:   s.require_paths = [\"lib\"]",
          "10:   s.authors = [\"Austin Ziegler\"]",
          "11:   s.date = \"2017-02-06\"",
          "12:   s.description = \"'archive-tar-minitar' has been deprecated; just install 'minitar'. The minitar library is a pure-Ruby library that provides the ability to deal\\nwith POSIX tar(1) archive files.\\n\\nThis is release 0.6, \\u{2026}\\n\\nminitar (previously called Archive::Tar::Minitar) is based heavily on code\\noriginally written by Mauricio Julio Fern\\u{e1}ndez Pradier for the rpa-base\\nproject.\"",
          "13:   s.email = [\"halostatue@gmail.com\"]",
          "14:   s.files = [\"lib/archive-tar-minitar.rb\"]",
          "15:   s.homepage = \"https://github.com/halostatue/minitar/\"",
          "16:   s.licenses = [\"Ruby\", \"BSD-2-Clause\"]",
          "17:   s.post_install_message = \"'archive-tar-minitar' has been deprecated; just install 'minitar'.\"",
          "18:   s.required_ruby_version = Gem::Requirement.new(\">= 1.8\")",
          "19:   s.rubygems_version = \"2.5.1\"",
          "20:   s.summary = \"'archive-tar-minitar' has been deprecated; just install 'minitar'.\"",
          "22:   if s.respond_to? :specification_version then",
          "23:     s.specification_version = 4",
          "25:     if Gem::Version.new(Gem::VERSION) >= Gem::Version.new('1.2.0') then",
          "26:       s.add_runtime_dependency(%q<minitar>, [\"~> 0.6\"])",
          "27:       s.add_runtime_dependency(%q<minitar-cli>, [\"<= 1.0\"])",
          "28:     else",
          "29:       s.add_dependency(%q<minitar>, [\"~> 0.6\"])",
          "30:       s.add_dependency(%q<minitar-cli>, [\"<= 1.0\"])",
          "31:     end",
          "32:   else",
          "33:     s.add_dependency(%q<minitar>, [\"~> 0.6\"])",
          "34:     s.add_dependency(%q<minitar-cli>, [\"<= 1.0\"])",
          "35:   end",
          "36: end",
          "",
          "---------------"
        ],
        "lib/archive/tar/minitar.rb||lib/archive/tar/minitar.rb": [
          "File: lib/archive/tar/minitar.rb -> lib/archive/tar/minitar.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "73: module Archive::Tar::Minitar",
          "74:   VERSION = '0.6' # :nodoc:",
          "76:   # Raised when a wrapped data stream class is not seekable.",
          "78:   # The exception raised when operations are performed on a stream that has",
          "79:   # previously been closed.",
          "81:   # The exception raised when a filename exceeds 256 bytes in length, the",
          "82:   # maximum supported by the standard Tar format.",
          "84:   # The exception raised when a data stream ends before the amount of data",
          "85:   # expected in the archive's PosixHeader.",
          "86:   UnexpectedEOF = Class.new(StandardError)",
          "88:   class << self",
          "89:     # Tests if +path+ refers to a directory. Fixes an apparently",
          "",
          "[Removed Lines]",
          "77:   NonSeekableStream = Class.new(StandardError)",
          "80:   ClosedStream = Class.new(StandardError)",
          "83:   FileNameTooLong = Class.new(StandardError)",
          "",
          "[Added Lines]",
          "76:   # The base class for any minitar error.",
          "77:   Error = Class.new(StandardError)",
          "79:   NonSeekableStream = Class.new(Error)",
          "82:   ClosedStream = Class.new(Error)",
          "85:   FileNameTooLong = Class.new(Error)",
          "89:   # The exception raised when a file contains a relative path in secure mode",
          "90:   # (the default for this version).",
          "91:   SecureRelativePathError = Class.new(Error)",
          "",
          "---------------"
        ],
        "lib/archive/tar/minitar/input.rb||lib/archive/tar/minitar/input.rb": [
          "File: lib/archive/tar/minitar/input.rb -> lib/archive/tar/minitar/input.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "97:         :entry    => entry",
          "98:       }",
          "100:       if entry.directory?",
          "105:         if Archive::Tar::Minitar.dir?(dest)",
          "106:           begin",
          "",
          "[Removed Lines]",
          "101:         dest = File.join(destdir, entry.full_name)",
          "103:         yield :dir, entry.full_name, stats if block_given?",
          "",
          "[Added Lines]",
          "100:       # extract_entry is not vulnerable to prefix '/' vulnerabilities, but it",
          "101:       # is vulnerable to relative path directories. This code will break this",
          "102:       # vulnerability. For this version, we are breaking relative paths HARD by",
          "103:       # throwing an exception.",
          "104:       #",
          "105:       # Future versions may permit relative paths as long as the file does not",
          "106:       # leave +destdir+.",
          "107:       #",
          "108:       # However, squeeze consecutive '/' characters together.",
          "109:       full_name = entry.full_name.squeeze('/')",
          "111:       if full_name =~ /\\.{2}(?:\\/|\\z)/",
          "112:         raise SecureRelativePathError, %q(Path contains '..')",
          "113:       end",
          "116:         dest = File.join(destdir, full_name)",
          "118:         yield :dir, full_name, stats if block_given?",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "109:             nil",
          "110:           end",
          "111:         else",
          "112:           FileUtils.mkdir_p(dest, :mode => entry.mode)",
          "113:           FileUtils.chmod(entry.mode, dest)",
          "114:         end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "127:           File.unlink(dest.chomp('/')) if File.symlink?(dest.chomp('/'))",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "117:         fsync_dir(File.join(dest, \"..\"))",
          "118:         return",
          "119:       else # it's a file",
          "121:         FileUtils.mkdir_p(destdir, :mode => 0755)",
          "124:         FileUtils.chmod(0600, destfile) rescue nil  # Errno::ENOENT",
          "128:         File.open(destfile, \"wb\", entry.mode) do |os|",
          "129:           loop do",
          "",
          "[Removed Lines]",
          "120:         destdir = File.join(destdir, File.dirname(entry.full_name))",
          "123:         destfile = File.join(destdir, File.basename(entry.full_name))",
          "126:         yield :file_start, entry.full_name, stats if block_given?",
          "",
          "[Added Lines]",
          "137:         destdir = File.join(destdir, File.dirname(full_name))",
          "140:         destfile = File.join(destdir, File.basename(full_name))",
          "142:         File.unlink(destfile) if File.symlink?(destfile)",
          "146:         yield :file_start, full_name, stats if block_given?",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "133:             stats[:currinc] = os.write(data)",
          "134:             stats[:current] += stats[:currinc]",
          "137:           end",
          "138:           os.fsync",
          "139:         end",
          "",
          "[Removed Lines]",
          "136:             yield :file_progress, entry.full_name, stats if block_given?",
          "",
          "[Added Lines]",
          "156:             yield :file_progress, full_name, stats if block_given?",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "142:         fsync_dir(File.dirname(destfile))",
          "143:         fsync_dir(File.join(File.dirname(destfile), \"..\"))",
          "146:       end",
          "147:     end",
          "",
          "[Removed Lines]",
          "145:         yield :file_done, entry.full_name, stats if block_given?",
          "",
          "[Added Lines]",
          "165:         yield :file_done, full_name, stats if block_given?",
          "",
          "---------------"
        ],
        "minitar.gemspec||minitar.gemspec": [
          "File: minitar.gemspec -> minitar.gemspec",
          "--- Hunk 1 ---",
          "[Context before]",
          "8:   s.required_rubygems_version = Gem::Requirement.new(\">= 0\") if s.respond_to? :required_rubygems_version=",
          "9:   s.require_paths = [\"lib\"]",
          "10:   s.authors = [\"Austin Ziegler\"]",
          "12:   s.description = \"The minitar library is a pure-Ruby library that provides the ability to deal\\nwith POSIX tar(1) archive files.\\n\\nThis is release 0.6, \\u{2026}\\n\\nminitar (previously called Archive::Tar::Minitar) is based heavily on code\\noriginally written by Mauricio Julio Fern\\u{e1}ndez Pradier for the rpa-base\\nproject.\"",
          "13:   s.email = [\"halostatue@gmail.com\"]",
          "14:   s.extra_rdoc_files = [\"Code-of-Conduct.md\", \"Contributing.md\", \"History.md\", \"Licence.md\", \"Manifest.txt\", \"README.rdoc\", \"docs/bsdl.txt\", \"docs/ruby.txt\"]",
          "",
          "[Removed Lines]",
          "11:   s.date = \"2016-11-08\"",
          "",
          "[Added Lines]",
          "11:   s.date = \"2017-02-06\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:       s.add_development_dependency(%q<hoe-git>, [\"~> 1.6\"])",
          "31:       s.add_development_dependency(%q<hoe-rubygems>, [\"~> 1.0\"])",
          "32:       s.add_development_dependency(%q<hoe-travis>, [\"~> 1.2\"])",
          "35:       s.add_development_dependency(%q<rdoc>, [\">= 0.0\"])",
          "37:     else",
          "38:       s.add_dependency(%q<minitest>, [\"~> 5.9\"])",
          "39:       s.add_dependency(%q<hoe-doofus>, [\"~> 1.0\"])",
          "",
          "[Removed Lines]",
          "33:       s.add_development_dependency(%q<minitest-autotest>, [\"< 2\", \">= 1.0.b\"])",
          "34:       s.add_development_dependency(%q<rake>, [\"~> 10.0\"])",
          "36:       s.add_development_dependency(%q<hoe>, [\"~> 3.15\"])",
          "",
          "[Added Lines]",
          "33:       s.add_development_dependency(%q<minitest-autotest>, [\"< 2\", \">= 1.0\"])",
          "34:       s.add_development_dependency(%q<rake>, [\"< 12\", \">= 10.0\"])",
          "36:       s.add_development_dependency(%q<hoe>, [\"~> 3.16\"])",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "41:       s.add_dependency(%q<hoe-git>, [\"~> 1.6\"])",
          "42:       s.add_dependency(%q<hoe-rubygems>, [\"~> 1.0\"])",
          "43:       s.add_dependency(%q<hoe-travis>, [\"~> 1.2\"])",
          "46:       s.add_dependency(%q<rdoc>, [\">= 0.0\"])",
          "48:     end",
          "49:   else",
          "50:     s.add_dependency(%q<minitest>, [\"~> 5.9\"])",
          "",
          "[Removed Lines]",
          "44:       s.add_dependency(%q<minitest-autotest>, [\"< 2\", \">= 1.0.b\"])",
          "45:       s.add_dependency(%q<rake>, [\"~> 10.0\"])",
          "47:       s.add_dependency(%q<hoe>, [\"~> 3.15\"])",
          "",
          "[Added Lines]",
          "44:       s.add_dependency(%q<minitest-autotest>, [\"< 2\", \">= 1.0\"])",
          "45:       s.add_dependency(%q<rake>, [\"< 12\", \">= 10.0\"])",
          "47:       s.add_dependency(%q<hoe>, [\"~> 3.16\"])",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "53:     s.add_dependency(%q<hoe-git>, [\"~> 1.6\"])",
          "54:     s.add_dependency(%q<hoe-rubygems>, [\"~> 1.0\"])",
          "55:     s.add_dependency(%q<hoe-travis>, [\"~> 1.2\"])",
          "58:     s.add_dependency(%q<rdoc>, [\">= 0.0\"])",
          "60:   end",
          "61: end",
          "",
          "[Removed Lines]",
          "56:     s.add_dependency(%q<minitest-autotest>, [\"< 2\", \">= 1.0.b\"])",
          "57:     s.add_dependency(%q<rake>, [\"~> 10.0\"])",
          "59:     s.add_dependency(%q<hoe>, [\"~> 3.15\"])",
          "",
          "[Added Lines]",
          "56:     s.add_dependency(%q<minitest-autotest>, [\"< 2\", \">= 1.0\"])",
          "57:     s.add_dependency(%q<rake>, [\"< 12\", \">= 10.0\"])",
          "59:     s.add_dependency(%q<hoe>, [\"~> 3.16\"])",
          "",
          "---------------"
        ],
        "support/hoe/deprecated_gem.rb||support/hoe/deprecated_gem.rb": [
          "File: support/hoe/deprecated_gem.rb -> support/hoe/deprecated_gem.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: module Hoe::Deprecated_Gem",
          "2:   def linked_spec(spec)",
          "3:     atm = YAML.load(YAML.dump(spec))",
          "4:     atm.name = 'archive-tar-minitar'",
          "5:     d = %Q('#{atm.name}' has been deprecated; just install '#{spec.name}'.)",
          "6:     atm.description = \"#{d} #{spec.description}\"",
          "7:     atm.summary = atm.post_install_message = d",
          "8:     atm.files.delete_if { |f| f !~ %r{lib/archive-tar-minitar\\.rb} }",
          "9:     atm.extra_rdoc_files.clear",
          "10:     atm.rdoc_options.clear",
          "11:     atm.dependencies.clear",
          "12:     atm.add_dependency(%Q(#{spec.name}), \"~> #{spec.version}\")",
          "13:     atm.add_dependency(%Q(#{spec.name}-cli), \"<= 1.0\")",
          "15:     unless @include_all",
          "16:       [ :signing_key, :cert_chain ].each { |name|",
          "17:         atm.send(\"#{name}=\".to_sym, atm.default_value(name))",
          "18:       }",
          "19:     end",
          "21:     atm",
          "22:   end",
          "24:   def define_deprecated_gem_tasks",
          "25:     gemspec = spec.name + '.gemspec'",
          "26:     atmspec = 'archive-tar-minitar.gemspec'",
          "28:     file atmspec => gemspec do",
          "29:       open(atmspec, 'w') { |f| f.write(linked_spec(spec).to_ruby) }",
          "30:     end",
          "32:     task :gemspec => atmspec",
          "34:     Gem::PackageTask.new linked_spec(spec) do |pkg|",
          "35:       pkg.need_tar = @need_tar",
          "36:       pkg.need_zip = @need_zip",
          "37:     end",
          "38:   end",
          "39: end",
          "",
          "---------------"
        ],
        "test/test_tar_input.rb||test/test_tar_input.rb": [
          "File: test/test_tar_input.rb -> test/test_tar_input.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:       assert_equal(2, outer_count)",
          "132:     end",
          "133:   end",
          "134: end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136:   def test_extract_entry_breaks_symlinks",
          "137:     return if Minitar.windows?",
          "139:     IO.respond_to?(:write) &&",
          "140:       IO.write('data__/file4', '') ||",
          "141:       File.open('data__/file4', 'w') { |f| f.write '' }",
          "143:     File.symlink('data__/file4', 'data__/file3')",
          "144:     File.symlink('data__/file4', 'data__/data')",
          "146:     Minitar.unpack(Zlib::GzipReader.new(StringIO.new(TEST_TGZ)), 'data__')",
          "147:     Minitar.unpack(Zlib::GzipReader.new(File.open('data__/data.tar.gz', 'rb')),",
          "148:                    'data__')",
          "150:     refute File.symlink?('data__/file3')",
          "151:     refute File.symlink?('data__/data')",
          "152:   end",
          "154:   RELATIVE_DIRECTORY_TGZ = Base64.decode64 <<-EOS",
          "155: H4sICIIoKVgCA2JhZC1kaXIudGFyANPT0y8sTy0qqWSgHTAwMDAzMVEA0eZmpmDawAjChwEFQ2MDQyMg",
          "156: MDUzVDAwNDY0N2VQMGCgAygtLkksAjolEcjIzMOtDqgsLQ2/J0H+gNOjYBSMglEwyAEA2LchrwAGAAA=",
          "157:   EOS",
          "159:   def test_extract_entry_fails_with_relative_directory",
          "160:     reader = Zlib::GzipReader.new(StringIO.new(RELATIVE_DIRECTORY_TGZ))",
          "161:     Minitar::Input.open(reader) do |stream|",
          "162:       stream.each do |entry|",
          "163:         assert_raises Archive::Tar::Minitar::SecureRelativePathError do",
          "164:           stream.extract_entry(\"data__\", entry)",
          "165:         end",
          "166:       end",
          "167:     end",
          "168:   end",
          "",
          "---------------"
        ]
      }
    }
  ]
}