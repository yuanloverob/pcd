{
  "cve_id": "CVE-2022-0282",
  "cve_desc": "Cross-site Scripting in Packagist microweber/microweber prior to 1.2.11.\n\n",
  "repo": "microweber/microweber",
  "patch_hash": "51b5a4e3ef01e587797c0109159a8ad9d2bac77a",
  "patch_info": {
    "commit_hash": "51b5a4e3ef01e587797c0109159a8ad9d2bac77a",
    "repo": "microweber/microweber",
    "commit_url": "https://github.com/microweber/microweber/commit/51b5a4e3ef01e587797c0109159a8ad9d2bac77a",
    "files": [
      "src/MicroweberPackages/Comment/Models/Comment.php",
      "src/MicroweberPackages/Comment/Models/CommentsCrud.php",
      "src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php",
      "userfiles/modules/comments/src/Controllers/Admin.php"
    ],
    "message": "fix comments xss",
    "before_after_code_files": [
      "src/MicroweberPackages/Comment/Models/Comment.php||src/MicroweberPackages/Comment/Models/Comment.php",
      "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php",
      "src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php||src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php",
      "userfiles/modules/comments/src/Controllers/Admin.php||userfiles/modules/comments/src/Controllers/Admin.php"
    ]
  },
  "patch_diff": {
    "src/MicroweberPackages/Comment/Models/Comment.php||src/MicroweberPackages/Comment/Models/Comment.php": [
      "File: src/MicroweberPackages/Comment/Models/Comment.php -> src/MicroweberPackages/Comment/Models/Comment.php"
    ],
    "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php": [
      "File: src/MicroweberPackages/Comment/Models/CommentsCrud.php -> src/MicroweberPackages/Comment/Models/CommentsCrud.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "54:                 if (isset($item['comment_body']) and ($item['comment_body'] != '')) {",
      "55:                     $surl = site_url();",
      "56:                     $item['comment_body'] = str_replace('{SITE_URL}', $surl, $item['comment_body']);",
      "58:                 }",
      "60:                 if (isset($params['single'])) {",
      "",
      "[Removed Lines]",
      "57:                     $comments[$i]['comment_body'] = $item['comment_body']; // mw()->format->autolink($item['comment_body']);",
      "",
      "[Added Lines]",
      "57:                     $comments[$i]['comment_body'] = htmlentities($item['comment_body']);",
      "",
      "---------------"
    ],
    "src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php||src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php": [
      "File: src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php -> src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "55:                         </h6>",
      "57:                     <div class=\"mb-3\">",
      "59:                         <span class=\"js-comment-body-textarea\" style=\"display: none;\">",
      "60:                             <small class=\"text-muted\">Comment:</small>",
      "62:                         </span>",
      "63:                     </div>",
      "",
      "[Removed Lines]",
      "58:                         <div class=\"js-comment-body-text\"><?php print $comment['comment_body']; ?></div>",
      "61:                             <textarea name=\"comment_body\" class=\"form-control\"><?php print $comment['comment_body']; ?></textarea>",
      "",
      "[Added Lines]",
      "58:                         <div class=\"js-comment-body-text\">{{ $comment['comment_body'] }}</div>",
      "61:                             <textarea name=\"comment_body\" class=\"form-control\">{{ $comment['comment_body'] }}</textarea>",
      "",
      "---------------"
    ],
    "userfiles/modules/comments/src/Controllers/Admin.php||userfiles/modules/comments/src/Controllers/Admin.php": [
      "File: userfiles/modules/comments/src/Controllers/Admin.php -> userfiles/modules/comments/src/Controllers/Admin.php"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "cad3df99b7bb5cc89617ae1c0b2132ec98800f84",
      "candidate_info": {
        "commit_hash": "cad3df99b7bb5cc89617ae1c0b2132ec98800f84",
        "repo": "microweber/microweber",
        "commit_url": "https://github.com/microweber/microweber/commit/cad3df99b7bb5cc89617ae1c0b2132ec98800f84",
        "files": [
          "src/MicroweberPackages/Comment/Models/Comment.php",
          "src/MicroweberPackages/Comment/Models/CommentsCrud.php"
        ],
        "message": "update",
        "before_after_code_files": [
          "src/MicroweberPackages/Comment/Models/Comment.php||src/MicroweberPackages/Comment/Models/Comment.php",
          "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/MicroweberPackages/Comment/Models/Comment.php||src/MicroweberPackages/Comment/Models/Comment.php",
            "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php"
          ],
          "candidate": [
            "src/MicroweberPackages/Comment/Models/Comment.php||src/MicroweberPackages/Comment/Models/Comment.php",
            "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php"
          ]
        }
      },
      "candidate_diff": {
        "src/MicroweberPackages/Comment/Models/Comment.php||src/MicroweberPackages/Comment/Models/Comment.php": [
          "File: src/MicroweberPackages/Comment/Models/Comment.php -> src/MicroweberPackages/Comment/Models/Comment.php"
        ],
        "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php": [
          "File: src/MicroweberPackages/Comment/Models/CommentsCrud.php -> src/MicroweberPackages/Comment/Models/CommentsCrud.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace MicroweberPackages\\Comment\\Models;",
          "5: use MicroweberPackages\\Database\\Crud;",
          "8: class CommentsCrud extends Crud",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: use voku\\helper\\AntiXSS;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "54:                 if (isset($item['comment_body']) and ($item['comment_body'] != '')) {",
          "55:                     $surl = site_url();",
          "56:                     $item['comment_body'] = str_replace('{SITE_URL}', $surl, $item['comment_body']);",
          "58:                 }",
          "60:                 if (isset($params['single'])) {",
          "",
          "[Removed Lines]",
          "57:                     $comments[$i]['comment_body'] = htmlentities($item['comment_body']);",
          "",
          "[Added Lines]",
          "59:                     $antiXss = new AntiXSS();",
          "60:                     $comments[$i]['comment_body'] = $antiXss->xss_clean($item['comment_body']);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8e42417d598f5a1a792e805698143d6adc9ef570",
      "candidate_info": {
        "commit_hash": "8e42417d598f5a1a792e805698143d6adc9ef570",
        "repo": "microweber/microweber",
        "commit_url": "https://github.com/microweber/microweber/commit/8e42417d598f5a1a792e805698143d6adc9ef570",
        "files": [
          "src/MicroweberPackages/Comment/Models/CommentsCrud.php",
          "src/MicroweberPackages/Helper/AntiXSS.php",
          "src/MicroweberPackages/Helper/HTMLClean.php"
        ],
        "message": "update",
        "before_after_code_files": [
          "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php",
          "src/MicroweberPackages/Helper/AntiXSS.php||src/MicroweberPackages/Helper/HTMLClean.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php"
          ],
          "candidate": [
            "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php"
          ]
        }
      },
      "candidate_diff": {
        "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php": [
          "File: src/MicroweberPackages/Comment/Models/CommentsCrud.php -> src/MicroweberPackages/Comment/Models/CommentsCrud.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace MicroweberPackages\\Comment\\Models;",
          "5: use MicroweberPackages\\Database\\Crud;",
          "6: use voku\\helper\\AntiXSS;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "6: use MicroweberPackages\\Helper\\HTMLClean;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56:                     $surl = site_url();",
          "57:                     $item['comment_body'] = str_replace('{SITE_URL}', $surl, $item['comment_body']);",
          "61:                 }",
          "63:                 if (isset($params['single'])) {",
          "",
          "[Removed Lines]",
          "59:                     $antiXss = new AntiXSS();",
          "60:                     $comments[$i]['comment_body'] = $antiXss->xss_clean($item['comment_body']);",
          "",
          "[Added Lines]",
          "60:                     $clearInput = new HTMLClean();",
          "61:                     $comments[$i]['comment_body'] = $clearInput->clean($item['comment_body']);",
          "",
          "---------------"
        ],
        "src/MicroweberPackages/Helper/AntiXSS.php||src/MicroweberPackages/Helper/HTMLClean.php": [
          "File: src/MicroweberPackages/Helper/AntiXSS.php -> src/MicroweberPackages/Helper/HTMLClean.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: namespace MicroweberPackages\\Helper;",
          "6: {",
          "9:         $antiXss = new \\voku\\helper\\AntiXSS();",
          "10:         $html = $antiXss->xss_clean($html);",
          "",
          "[Removed Lines]",
          "5: class AntiXSS",
          "7:     public function clear($html) {",
          "",
          "[Added Lines]",
          "5: class HTMLClean",
          "7:     public function clean($html) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "231c190d21f69ef6cdf41ee28b93a69797dde813",
      "candidate_info": {
        "commit_hash": "231c190d21f69ef6cdf41ee28b93a69797dde813",
        "repo": "microweber/microweber",
        "commit_url": "https://github.com/microweber/microweber/commit/231c190d21f69ef6cdf41ee28b93a69797dde813",
        "files": [
          "src/MicroweberPackages/Comment/Http/Controllers/Admin/AdminCommentController.php",
          "src/MicroweberPackages/Comment/Models/CommentsCrud.php"
        ],
        "message": "update",
        "before_after_code_files": [
          "src/MicroweberPackages/Comment/Http/Controllers/Admin/AdminCommentController.php||src/MicroweberPackages/Comment/Http/Controllers/Admin/AdminCommentController.php",
          "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php"
          ],
          "candidate": [
            "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php"
          ]
        }
      },
      "candidate_diff": {
        "src/MicroweberPackages/Comment/Http/Controllers/Admin/AdminCommentController.php||src/MicroweberPackages/Comment/Http/Controllers/Admin/AdminCommentController.php": [
          "File: src/MicroweberPackages/Comment/Http/Controllers/Admin/AdminCommentController.php -> src/MicroweberPackages/Comment/Http/Controllers/Admin/AdminCommentController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "146:         $comment_body = $data['comment_body'];",
          "151:         if (!empty($comment_body) and !empty($data['format']) and $data['format'] == 'markdown') {",
          "152:             $comment_body = Markdown::convertToHtml($comment_body);",
          "153:         }",
          "155:         $data['comment_body'] = $comment_body;",
          "156:         $data['allow_html'] = '1';",
          "",
          "[Removed Lines]",
          "148:         $cleanHtml = new HTMLClean();",
          "149:         $comment_body = $cleanHtml->onlyTags($comment_body);",
          "",
          "[Added Lines]",
          "152:         $cleanHtml = new HTMLClean();",
          "153:         $comment_body = $cleanHtml->onlyTags($comment_body);",
          "",
          "---------------"
        ],
        "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php": [
          "File: src/MicroweberPackages/Comment/Models/CommentsCrud.php -> src/MicroweberPackages/Comment/Models/CommentsCrud.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "54:                     $comments[$i]['updated_at_display'] = date($date_format, strtotime($item['updated_at']));",
          "55:                 }",
          "56:                 if (isset($item['comment_body']) and ($item['comment_body'] != '')) {",
          "57:                     $surl = site_url();",
          "60:                     $clearInput = new HTMLClean();",
          "62:                 }",
          "64:                 if (isset($params['single'])) {",
          "",
          "[Removed Lines]",
          "58:                     $item['comment_body'] = str_replace('{SITE_URL}', $surl, $item['comment_body']);",
          "61:                     $comments[$i]['comment_body'] = $clearInput->onlyTags($item['comment_body']);",
          "",
          "[Added Lines]",
          "59:                     $comment_body = str_replace('{SITE_URL}', $surl, $item['comment_body']);",
          "62:                     $comment_body = $clearInput->onlyTags($comment_body);",
          "64:                     $pq = \\phpQuery::newDocument($comment_body);",
          "65:                     $pq->find('a')->attr('rel','nofollow ugc');",
          "66:                     $comment_body = $pq->htmlOuter();",
          "68:                     $comments[$i]['comment_body'] = $comment_body;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6e9fcaa043b4211ef21a494f9892dd19ba8a572c",
      "candidate_info": {
        "commit_hash": "6e9fcaa043b4211ef21a494f9892dd19ba8a572c",
        "repo": "microweber/microweber",
        "commit_url": "https://github.com/microweber/microweber/commit/6e9fcaa043b4211ef21a494f9892dd19ba8a572c",
        "files": [
          "src/MicroweberPackages/Comment/Http/Controllers/CommentController.php",
          "src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php",
          "src/MicroweberPackages/Comment/resources/views/admin/notifications/new_comment.blade.php"
        ],
        "message": "update",
        "before_after_code_files": [
          "src/MicroweberPackages/Comment/Http/Controllers/CommentController.php||src/MicroweberPackages/Comment/Http/Controllers/CommentController.php",
          "src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php||src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php",
          "src/MicroweberPackages/Comment/resources/views/admin/notifications/new_comment.blade.php||src/MicroweberPackages/Comment/resources/views/admin/notifications/new_comment.blade.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php||src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php"
          ],
          "candidate": [
            "src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php||src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php"
          ]
        }
      },
      "candidate_diff": {
        "src/MicroweberPackages/Comment/Http/Controllers/CommentController.php||src/MicroweberPackages/Comment/Http/Controllers/CommentController.php": [
          "File: src/MicroweberPackages/Comment/Http/Controllers/CommentController.php -> src/MicroweberPackages/Comment/Http/Controllers/CommentController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:         }",
          "106:         if (!empty($saveComment['comment_body']) and !empty($inputs['format']) and $inputs['format'] == 'markdown') {",
          "108:         }",
          "110:         $save = Comment::create($saveComment);",
          "",
          "[Removed Lines]",
          "107:             $saveComment['comment_body'] = Markdown::convertToHtml($saveComment['comment_body']);",
          "",
          "[Added Lines]",
          "103:             $saveComment['comment_body'] = htmlentities($saveComment['comment_body']);",
          "",
          "---------------"
        ],
        "src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php||src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php": [
          "File: src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php -> src/MicroweberPackages/Comment/resources/views/admin/comments/comment_item.blade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:                         <div class=\"js-comment-body-text\">{{ $comment['comment_body'] }}</div>",
          "59:                         <span class=\"js-comment-body-textarea\" style=\"display: none;\">",
          "60:                             <small class=\"text-muted\">Comment:</small>",
          "62:                         </span>",
          "63:                     </div>",
          "",
          "[Removed Lines]",
          "61:                             <textarea name=\"comment_body\" class=\"form-control\">{{ $comment['comment_body'] }}</textarea>",
          "",
          "[Added Lines]",
          "61:                             <textarea name=\"comment_body\" class=\"form-control\">{{ $comment['comment_body'] }}\u00a7</textarea>",
          "",
          "---------------"
        ],
        "src/MicroweberPackages/Comment/resources/views/admin/notifications/new_comment.blade.php||src/MicroweberPackages/Comment/resources/views/admin/notifications/new_comment.blade.php": [
          "File: src/MicroweberPackages/Comment/resources/views/admin/notifications/new_comment.blade.php -> src/MicroweberPackages/Comment/resources/views/admin/notifications/new_comment.blade.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "62:                         <small class=\"text-muted\">says:</small>",
          "63:                     </h6>",
          "64:                     <div>",
          "66:                     </div>",
          "",
          "[Removed Lines]",
          "65:                         <p>{!! $notification['comment_body'] !!}</p>",
          "",
          "[Added Lines]",
          "65:                         <p>{{ $notification['comment_body'] }}</p>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a15da374af81c3cd312ee1639e4c6f56c4839f7e",
      "candidate_info": {
        "commit_hash": "a15da374af81c3cd312ee1639e4c6f56c4839f7e",
        "repo": "microweber/microweber",
        "commit_url": "https://github.com/microweber/microweber/commit/a15da374af81c3cd312ee1639e4c6f56c4839f7e",
        "files": [
          "src/MicroweberPackages/Comment/Models/CommentsCrud.php"
        ],
        "message": "Update CommentsCrud.php",
        "before_after_code_files": [
          "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php"
          ],
          "candidate": [
            "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php"
          ]
        }
      },
      "candidate_diff": {
        "src/MicroweberPackages/Comment/Models/CommentsCrud.php||src/MicroweberPackages/Comment/Models/CommentsCrud.php": [
          "File: src/MicroweberPackages/Comment/Models/CommentsCrud.php -> src/MicroweberPackages/Comment/Models/CommentsCrud.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:                     $item['comment_body'] = str_replace('{SITE_URL}', $surl, $item['comment_body']);",
          "60:                     $clearInput = new HTMLClean();",
          "62:                 }",
          "64:                 if (isset($params['single'])) {",
          "",
          "[Removed Lines]",
          "61:                     $comments[$i]['comment_body'] = $clearInput->clean($item['comment_body']);",
          "",
          "[Added Lines]",
          "61:                     $comments[$i]['comment_body'] = $clearInput->onlyTags($item['comment_body']);",
          "",
          "---------------"
        ]
      }
    }
  ]
}