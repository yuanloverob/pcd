{
  "cve_id": "CVE-2023-47126",
  "cve_desc": "TYPO3 is an open source PHP based web content management system released under the GNU GPL. In affected versions the login screen of the standalone install tool discloses the full path of the transient data directory (e.g. /var/www/html/var/transient/). This applies to composer-based scenarios only - \u201cclassic\u201d non-composer installations are not affected. This issue has been addressed in version 12.4.8. Users are advised to upgrade. There are no known workarounds for this vulnerability.\n",
  "repo": "TYPO3/typo3",
  "patch_hash": "1a735dac01ec7b337ed0d80c738caa8967dea423",
  "patch_info": {
    "commit_hash": "1a735dac01ec7b337ed0d80c738caa8967dea423",
    "repo": "TYPO3/typo3",
    "commit_url": "https://github.com/TYPO3/typo3/commit/1a735dac01ec7b337ed0d80c738caa8967dea423",
    "files": [
      "typo3/sysext/install/Classes/Controller/LoginController.php",
      "typo3/sysext/install/Classes/Service/EnableFileService.php"
    ],
    "message": "[SECURITY] Do not display full path to ENABLE_INSTALL_TOOL file\n\nUsing the Install Tool in composer mode, the login\ndisplays a hint, where the ENABLE_INSTALL_TOOL file\nmust be placed to unlock the Install Tool.\n\nThis hint does not show the full path anymore.\nOnly the path relative to the project root is shown.\n\nResolves: #102242\nReleases: main, 12.4\nChange-Id: I1e9cbfe3ef7d4cc6af9635da71d0c7450fe44aa6\nSecurity-Bulletin: TYPO3-CORE-SA-2023-005\nSecurity-References: CVE-2023-47126\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/81736\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
    "before_after_code_files": [
      "typo3/sysext/install/Classes/Controller/LoginController.php||typo3/sysext/install/Classes/Controller/LoginController.php",
      "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php"
    ]
  },
  "patch_diff": {
    "typo3/sysext/install/Classes/Controller/LoginController.php||typo3/sysext/install/Classes/Controller/LoginController.php": [
      "File: typo3/sysext/install/Classes/Controller/LoginController.php -> typo3/sysext/install/Classes/Controller/LoginController.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "20: use Psr\\Http\\Message\\ResponseInterface;",
      "21: use Psr\\Http\\Message\\ServerRequestInterface;",
      "22: use TYPO3\\CMS\\Core\\Configuration\\ConfigurationManager;",
      "24: use TYPO3\\CMS\\Core\\FormProtection\\FormProtectionFactory;",
      "25: use TYPO3\\CMS\\Core\\Http\\JsonResponse;",
      "26: use TYPO3\\CMS\\Install\\Service\\EnableFileService;",
      "",
      "[Removed Lines]",
      "23: use TYPO3\\CMS\\Core\\Core\\Environment;",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42:     public function showEnableInstallToolFileAction(ServerRequestInterface $request): ResponseInterface",
      "43:     {",
      "44:         $view = $this->initializeView($request);",
      "47:         return new JsonResponse([",
      "48:             'success' => true,",
      "49:             'html' => $view->render('Login/ShowEnableInstallToolFile'),",
      "",
      "[Removed Lines]",
      "45:         $path = str_replace(Environment::getPublicPath() . '/', '', dirname(EnableFileService::getBestLocationForInstallToolEnableFile())) . '/';",
      "46:         $view->assign('enableInstallToolPath', $path);",
      "",
      "[Added Lines]",
      "44:         $view->assign('enableInstallToolPath', EnableFileService::getStaticLocationForInstallToolEnableFileDirectory());",
      "",
      "---------------"
    ],
    "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php": [
      "File: typo3/sysext/install/Classes/Service/EnableFileService.php -> typo3/sysext/install/Classes/Service/EnableFileService.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "158:         }",
      "159:     }",
      "161:     public static function getBestLocationForInstallToolEnableFile(): string",
      "162:     {",
      "163:         $possibleLocations = [",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "165:     public static function getStaticLocationForInstallToolEnableFileDirectory(): string",
      "166:     {",
      "167:         return Environment::isComposerMode() ? 'var/transient/' : 'typo3conf/';",
      "168:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0ba54ae6e226ed0b6436612e5fbc6bc6261b4aaa",
      "candidate_info": {
        "commit_hash": "0ba54ae6e226ed0b6436612e5fbc6bc6261b4aaa",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/0ba54ae6e226ed0b6436612e5fbc6bc6261b4aaa",
        "files": [
          "typo3/sysext/backend/Classes/Authentication/BackendLocker.php",
          "typo3/sysext/backend/Classes/Command/LockBackendCommand.php",
          "typo3/sysext/backend/Classes/Command/UnlockBackendCommand.php",
          "typo3/sysext/backend/Classes/Controller/AjaxLoginController.php",
          "typo3/sysext/backend/Classes/Middleware/LockedBackendGuard.php",
          "typo3/sysext/core/Configuration/DefaultConfiguration.php",
          "typo3/sysext/core/Configuration/DefaultConfigurationDescription.yaml",
          "typo3/sysext/core/Documentation/Changelog/13.3/Feature-104126-AddConfigurationSettingToDefineBackendLockingFile.rst",
          "typo3/sysext/core/Documentation/Changelog/13.3/Important-104126-DropTypo3confDirectoryFromSystemStatusAndBackendLocking.rst",
          "typo3/sysext/install/Classes/Service/EnableFileService.php"
        ],
        "message": "[FEATURE] Add setting for backend lock file location, drop typo3conf\n\nAs a follow-up to #104074, the directory \"typo3conf\" is no longer\nrequired to store the `LOCK_BACKEND` file.\n\nA new configuration option TYPO3_CONF_VARS[BE][lockBackendFile]\nis added alongside a distinct `BackendLocker` service class to\nindicate where the backend lock and unlock commands store\ntheir lockfile. By default this uses `var/lock/` for composer mode,\nand `config/` for legacy installations as a fallback for when\nthe setting is empty (default).\n\nResolves: #104126\nRelated: #104074\nRelated: #104119\nReleases: main\nChange-Id: I1fdbd48434c2c6cfd0a6617a1be71ac21195a8e4\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/84729\nTested-by: Garvin Hicking <gh@faktor-e.de>\nReviewed-by: Helmut Hummel <typo3@helhum.io>\nTested-by: core-ci <typo3@b13.com>\nTested-by: Helmut Hummel <typo3@helhum.io>\nReviewed-by: Markus Klein <markus.klein@typo3.org>\nTested-by: Markus Klein <markus.klein@typo3.org>\nReviewed-by: Garvin Hicking <gh@faktor-e.de>",
        "before_after_code_files": [
          "typo3/sysext/backend/Classes/Authentication/BackendLocker.php||typo3/sysext/backend/Classes/Authentication/BackendLocker.php",
          "typo3/sysext/backend/Classes/Command/LockBackendCommand.php||typo3/sysext/backend/Classes/Command/LockBackendCommand.php",
          "typo3/sysext/backend/Classes/Command/UnlockBackendCommand.php||typo3/sysext/backend/Classes/Command/UnlockBackendCommand.php",
          "typo3/sysext/backend/Classes/Controller/AjaxLoginController.php||typo3/sysext/backend/Classes/Controller/AjaxLoginController.php",
          "typo3/sysext/backend/Classes/Middleware/LockedBackendGuard.php||typo3/sysext/backend/Classes/Middleware/LockedBackendGuard.php",
          "typo3/sysext/core/Configuration/DefaultConfiguration.php||typo3/sysext/core/Configuration/DefaultConfiguration.php",
          "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php"
          ],
          "candidate": [
            "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/backend/Classes/Authentication/BackendLocker.php||typo3/sysext/backend/Classes/Authentication/BackendLocker.php": [
          "File: typo3/sysext/backend/Classes/Authentication/BackendLocker.php -> typo3/sysext/backend/Classes/Authentication/BackendLocker.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: declare(strict_types=1);",
          "18: namespace TYPO3\\CMS\\Backend\\Authentication;",
          "20: use TYPO3\\CMS\\Core\\Core\\Environment;",
          "21: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "32: class BackendLocker",
          "33: {",
          "34:     public function isLocked(): bool",
          "35:     {",
          "36:         return @is_file($this->getAbsolutePathToLockFile());",
          "37:     }",
          "39:     public function lockBackend(string $redirectUriFromFileContent): void",
          "40:     {",
          "41:         GeneralUtility::writeFile($this->getAbsolutePathToLockFile(), $redirectUriFromFileContent);",
          "42:     }",
          "44:     public function unlock(): void",
          "45:     {",
          "46:         unlink($this->getAbsolutePathToLockFile());",
          "47:     }",
          "49:     public function getAbsolutePathToLockFile(): string",
          "50:     {",
          "53:         if (($GLOBALS['TYPO3_CONF_VARS']['BE']['lockBackendFile'] ?? '') !== '') {",
          "54:             return Environment::getProjectPath() . '/' . $GLOBALS['TYPO3_CONF_VARS']['BE']['lockBackendFile'];",
          "55:         }",
          "57:         return $this->getLockPath() . '/LOCK_BACKEND';",
          "58:     }",
          "60:     public function getRedirectUriFromLockContents(): string",
          "61:     {",
          "62:         return file_get_contents($this->getAbsolutePathToLockFile());",
          "63:     }",
          "73:     protected function getLockPath(): string",
          "74:     {",
          "75:         return Environment::isComposerMode()",
          "76:                ? Environment::getVarPath() . '/lock'",
          "77:                : Environment::getConfigPath();",
          "78:     }",
          "79: }",
          "",
          "---------------"
        ],
        "typo3/sysext/backend/Classes/Command/LockBackendCommand.php||typo3/sysext/backend/Classes/Command/LockBackendCommand.php": [
          "File: typo3/sysext/backend/Classes/Command/LockBackendCommand.php -> typo3/sysext/backend/Classes/Command/LockBackendCommand.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: use Symfony\\Component\\Console\\Input\\InputInterface;",
          "22: use Symfony\\Component\\Console\\Output\\OutputInterface;",
          "23: use Symfony\\Component\\Console\\Style\\SymfonyStyle;",
          "",
          "[Removed Lines]",
          "24: use TYPO3\\CMS\\Core\\Core\\Environment;",
          "25: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "",
          "[Added Lines]",
          "24: use TYPO3\\CMS\\Backend\\Authentication\\BackendLocker;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: #[AsCommand('backend:lock', 'Lock the TYPO3 Backend')]",
          "31: class LockBackendCommand extends Command",
          "32: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32:     public function __construct(protected readonly BackendLocker $lockService, ?string $name = null)",
          "33:     {",
          "34:         parent::__construct($name);",
          "35:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "39:             ->addArgument(",
          "40:                 'redirect',",
          "41:                 InputArgument::OPTIONAL,",
          "43:             );",
          "44:     }",
          "",
          "[Removed Lines]",
          "42:                 'If set, then the TYPO3 Backend will redirect to the locking state (only used when locking the TYPO3 Backend'",
          "",
          "[Added Lines]",
          "46:                 'If set, a locked TYPO3 Backend will redirect to URI specified with this argument. The URI is saved as a string in the lockfile that is specified in the system configuration.'",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "50:     {",
          "51:         $io = new SymfonyStyle($input, $output);",
          "52:         $io->title($this->getDescription());",
          "55:             $io->note('A lock file already exists. Overwriting it.');",
          "56:         }",
          "58:         if ($input->getArgument('redirect')) {",
          "62:         } else {",
          "64:             $output .= '.';",
          "65:         }",
          "67:         $io->success($output);",
          "68:         return Command::SUCCESS;",
          "69:     }",
          "80: }",
          "",
          "[Removed Lines]",
          "53:         $lockFile = $this->getLockFileName();",
          "54:         if (@is_file($lockFile)) {",
          "57:         $output = 'Wrote lock file to \"' . $lockFile . '\"';",
          "59:             $lockFileContent = $input->getArgument('redirect');",
          "60:             $lockFileContent = is_string($lockFileContent) ? $lockFileContent : '';",
          "61:             $output .= LF . 'with content \"' . $lockFileContent . '\".';",
          "63:             $lockFileContent = '';",
          "66:         GeneralUtility::writeFile($lockFile, $lockFileContent);",
          "76:     protected function getLockFileName()",
          "77:     {",
          "78:         return Environment::getLegacyConfigPath() . '/LOCK_BACKEND';",
          "79:     }",
          "",
          "[Added Lines]",
          "57:         if ($this->lockService->isLocked()) {",
          "60:         $output = 'Wrote lock file to \"' . $this->lockService->getAbsolutePathToLockFile() . '\"';",
          "62:             $redirectUriFromLockFileContent = $input->getArgument('redirect');",
          "63:             $redirectUriFromLockFileContent = is_string($redirectUriFromLockFileContent) ? $redirectUriFromLockFileContent : '';",
          "64:             $output .= LF . 'with target URI \"' . $redirectUriFromLockFileContent . '\".';",
          "66:             $redirectUriFromLockFileContent = '';",
          "69:         $this->lockService->lockBackend($redirectUriFromLockFileContent);",
          "",
          "---------------"
        ],
        "typo3/sysext/backend/Classes/Command/UnlockBackendCommand.php||typo3/sysext/backend/Classes/Command/UnlockBackendCommand.php": [
          "File: typo3/sysext/backend/Classes/Command/UnlockBackendCommand.php -> typo3/sysext/backend/Classes/Command/UnlockBackendCommand.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use Symfony\\Component\\Console\\Input\\InputInterface;",
          "21: use Symfony\\Component\\Console\\Output\\OutputInterface;",
          "22: use Symfony\\Component\\Console\\Style\\SymfonyStyle;",
          "",
          "[Removed Lines]",
          "23: use TYPO3\\CMS\\Core\\Core\\Environment;",
          "",
          "[Added Lines]",
          "23: use TYPO3\\CMS\\Backend\\Authentication\\BackendLocker;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "28: #[AsCommand('backend:unlock', 'Unlock the TYPO3 Backend')]",
          "29: class UnlockBackendCommand extends Command",
          "30: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31:     public function __construct(protected readonly BackendLocker $lockService, ?string $name = null)",
          "32:     {",
          "33:         parent::__construct($name);",
          "34:     }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "35:     {",
          "36:         $io = new SymfonyStyle($input, $output);",
          "37:         $io->title($this->getDescription());",
          "42:                 $io->caution('Could not remove lock file \"' . $lockFile . '\"!');",
          "43:                 return Command::FAILURE;",
          "44:             }",
          "",
          "[Removed Lines]",
          "38:         $lockFile = $this->getLockFileName();",
          "39:         if (@is_file($lockFile)) {",
          "40:             unlink($lockFile);",
          "41:             if (@is_file($lockFile)) {",
          "",
          "[Added Lines]",
          "43:         $lockFile = $this->lockService->getAbsolutePathToLockFile();",
          "44:         if ($this->lockService->isLocked()) {",
          "45:             $this->lockService->unlock();",
          "46:             if ($this->lockService->isLocked()) {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "48:         }",
          "49:         return Command::SUCCESS;",
          "50:     }",
          "61: }",
          "",
          "[Removed Lines]",
          "57:     protected function getLockFileName()",
          "58:     {",
          "59:         return Environment::getLegacyConfigPath() . '/LOCK_BACKEND';",
          "60:     }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "typo3/sysext/backend/Classes/Controller/AjaxLoginController.php||typo3/sysext/backend/Classes/Controller/AjaxLoginController.php": [
          "File: typo3/sysext/backend/Classes/Controller/AjaxLoginController.php -> typo3/sysext/backend/Classes/Controller/AjaxLoginController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use Psr\\Http\\Message\\ResponseInterface;",
          "21: use Psr\\Http\\Message\\ServerRequestInterface;",
          "22: use TYPO3\\CMS\\Backend\\Attribute\\AsController;",
          "23: use TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication;",
          "24: use TYPO3\\CMS\\Core\\Authentication\\LoginType;",
          "26: use TYPO3\\CMS\\Core\\FormProtection\\BackendFormProtection;",
          "27: use TYPO3\\CMS\\Core\\FormProtection\\FormProtectionFactory;",
          "28: use TYPO3\\CMS\\Core\\Http\\JsonResponse;",
          "",
          "[Removed Lines]",
          "25: use TYPO3\\CMS\\Core\\Core\\Environment;",
          "",
          "[Added Lines]",
          "23: use TYPO3\\CMS\\Backend\\Authentication\\BackendLocker;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36: class AjaxLoginController",
          "37: {",
          "38:     public function __construct(",
          "40:     ) {}",
          "",
          "[Removed Lines]",
          "39:         protected readonly FormProtectionFactory $formProtectionFactory",
          "",
          "[Added Lines]",
          "39:         protected readonly FormProtectionFactory $formProtectionFactory,",
          "40:         protected readonly BackendLocker $lockService,",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "114:             'locked' => false,",
          "115:         ];",
          "116:         $backendUser = $this->getBackendUser();",
          "118:             $session['locked'] = true;",
          "119:         } elseif (!isset($backendUser->user['uid'])) {",
          "120:             $session['timed_out'] = true;",
          "",
          "[Removed Lines]",
          "117:         if (@is_file(Environment::getLegacyConfigPath() . '/LOCK_BACKEND')) {",
          "",
          "[Added Lines]",
          "118:         if ($this->lockService->isLocked()) {",
          "",
          "---------------"
        ],
        "typo3/sysext/backend/Classes/Middleware/LockedBackendGuard.php||typo3/sysext/backend/Classes/Middleware/LockedBackendGuard.php": [
          "File: typo3/sysext/backend/Classes/Middleware/LockedBackendGuard.php -> typo3/sysext/backend/Classes/Middleware/LockedBackendGuard.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: use Psr\\Http\\Message\\ServerRequestInterface;",
          "22: use Psr\\Http\\Server\\MiddlewareInterface;",
          "23: use Psr\\Http\\Server\\RequestHandlerInterface;",
          "24: use TYPO3\\CMS\\Backend\\Exception\\BackendAccessDeniedException;",
          "25: use TYPO3\\CMS\\Backend\\Exception\\BackendLockedException;",
          "27: use TYPO3\\CMS\\Core\\Http\\JsonResponse;",
          "28: use TYPO3\\CMS\\Core\\Http\\RedirectResponse;",
          "29: use TYPO3\\CMS\\Core\\Utility\\GeneralUtility;",
          "",
          "[Removed Lines]",
          "26: use TYPO3\\CMS\\Core\\Core\\Environment;",
          "",
          "[Added Lines]",
          "24: use TYPO3\\CMS\\Backend\\Authentication\\BackendLocker;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40: class LockedBackendGuard implements MiddlewareInterface",
          "41: {",
          "45:     public function process(ServerRequestInterface $request, RequestHandlerInterface $handler): ResponseInterface",
          "46:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42:     public function __construct(",
          "43:         protected readonly BackendLocker $lockService",
          "44:     ) {}",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "86:                 1517949794",
          "87:             );",
          "88:         }",
          "93:             }",
          "94:             throw new BackendLockedException(",
          "95:                 HttpUtility::HTTP_STATUS_403,",
          "97:                 'TYPO3 Backend locked',",
          "98:                 1517949793",
          "99:             );",
          "",
          "[Removed Lines]",
          "89:         if (@is_file(Environment::getLegacyConfigPath() . '/LOCK_BACKEND')) {",
          "90:             $fileContent = file_get_contents(Environment::getLegacyConfigPath() . '/LOCK_BACKEND');",
          "91:             if ($fileContent) {",
          "92:                 return $fileContent;",
          "96:                 'Backend access by browser is locked for maintenance. Remove lock by removing the file \"typo3conf/LOCK_BACKEND\" or use CLI-scripts.',",
          "",
          "[Added Lines]",
          "95:         if ($this->lockService->isLocked()) {",
          "96:             $redirectUri = $this->lockService->getRedirectUriFromLockContents();",
          "97:             if ($redirectUri) {",
          "98:                 return $redirectUri;",
          "102:                 'Backend access by browser is locked for maintenance. Remove lock by removing the file \"LOCK_BACKEND\" as configured in TYPO3_CONF_VARS[BE][lockBackendFile]. Or (better) use CLI-script \"bin/typo3 backend:unlock\".',",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "111:     {",
          "112:         if ($ipMaskList !== '' && !GeneralUtility::cmpIP($ipAddress, $ipMaskList)) {",
          "113:             throw new BackendAccessDeniedException(",
          "",
          "[Removed Lines]",
          "110:     protected function validateVisitorsIpAgainstIpMaskList(string $ipAddress, string $ipMaskList = '')",
          "",
          "[Added Lines]",
          "114:     protected function validateVisitorsIpAgainstIpMaskList(string $ipAddress, string $ipMaskList = ''): void",
          "",
          "---------------"
        ],
        "typo3/sysext/core/Configuration/DefaultConfiguration.php||typo3/sysext/core/Configuration/DefaultConfiguration.php": [
          "File: typo3/sysext/core/Configuration/DefaultConfiguration.php -> typo3/sysext/core/Configuration/DefaultConfiguration.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "1309:         'entryPoint' => '/typo3',",
          "1310:         'fileadminDir' => 'fileadmin/',",
          "1311:         'lockRootPath' => '',",
          "1312:         'userHomePath' => '',",
          "1313:         'groupHomePath' => '',",
          "1314:         'userUploadDir' => '',",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1312:         'lockBackendFile' => '',",
          "",
          "---------------"
        ],
        "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php": [
          "File: typo3/sysext/install/Classes/Service/EnableFileService.php -> typo3/sysext/install/Classes/Service/EnableFileService.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:     public static function getStaticLocationForInstallToolEnableFileDirectory(): string",
          "166:     {",
          "168:     }",
          "170:     public static function getBestLocationForInstallToolEnableFile(): string",
          "171:     {",
          "172:         $possibleLocations = [",
          "175:         ];",
          "177:     }",
          "",
          "[Removed Lines]",
          "167:         return Environment::isComposerMode() ? 'var/transient/' : 'typo3conf/';",
          "173:             'default' => Environment::getVarPath() . '/transient/' . self::INSTALL_TOOL_ENABLE_FILE_PATH,",
          "174:             'permanent' => Environment::getConfigPath() . '/' . self::INSTALL_TOOL_ENABLE_FILE_PATH,",
          "176:         return Environment::isComposerMode() ? $possibleLocations['default'] : $possibleLocations['permanent'];",
          "",
          "[Added Lines]",
          "168:         return Environment::isComposerMode() ? 'var/transient/' : 'config/';",
          "172:     {",
          "173:         return self::getTransientPath() . '/' . self::INSTALL_TOOL_ENABLE_FILE_PATH;",
          "174:     }",
          "180:     protected static function getTransientPath(): string",
          "183:             'composer' => Environment::getVarPath() . '/transient',",
          "184:             'legacy'   => Environment::getConfigPath(),",
          "186:         return Environment::isComposerMode() ? $possibleLocations['composer'] : $possibleLocations['legacy'];",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c146241b42dbc88d9266e6eab9de958e74df8281",
      "candidate_info": {
        "commit_hash": "c146241b42dbc88d9266e6eab9de958e74df8281",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/c146241b42dbc88d9266e6eab9de958e74df8281",
        "files": [
          "typo3/sysext/install/Classes/Service/EnableFileService.php"
        ],
        "message": "[BUGFIX] Adjust displayed ENABLE_INSTALL_TOOL legacy install location\n\nThe backend screen that shows the \"Create an enable install tool file\"\nmessage was adapted in #104126, mainly aimed for composer-mode.\n\nInstead of pointing to \"typo3conf/\" it was also adjusted to \"config/\".\n\nThis patch restores the displayed target directory for an\nENABLE_INSTALL_TOOL file to \"typo3conf/\". In composer-mode, it\nwill point to \"var/transient/\".\n\nResolves: #105326\nRelated: #104126\nRelated: #104074\nReleases: main, 13.4\nChange-Id: I3d92d76679c7a4ba6d1d95404ca0566308d10502\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/86738\nTested-by: Andreas Kienast <akienast@scripting-base.de>\nReviewed-by: Andreas Kienast <akienast@scripting-base.de>\nTested-by: core-ci <typo3@b13.com>",
        "before_after_code_files": [
          "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php"
          ],
          "candidate": [
            "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php": [
          "File: typo3/sysext/install/Classes/Service/EnableFileService.php -> typo3/sysext/install/Classes/Service/EnableFileService.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:     public static function getStaticLocationForInstallToolEnableFileDirectory(): string",
          "167:     {",
          "169:     }",
          "171:     public static function getBestLocationForInstallToolEnableFile(): string",
          "",
          "[Removed Lines]",
          "168:         return Environment::isComposerMode() ? 'var/transient/' : 'config/';",
          "",
          "[Added Lines]",
          "168:         return Environment::isComposerMode() ? 'var/transient/' : 'typo3conf/';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e054be79ec5ba971005b88b11b9acfb340fdc7d4",
      "candidate_info": {
        "commit_hash": "e054be79ec5ba971005b88b11b9acfb340fdc7d4",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/e054be79ec5ba971005b88b11b9acfb340fdc7d4",
        "files": [
          "typo3/sysext/install/Classes/Service/EnableFileService.php"
        ],
        "message": "[BUGFIX] Adjust displayed ENABLE_INSTALL_TOOL legacy install location\n\nThe backend screen that shows the \"Create an enable install tool file\"\nmessage was adapted in #104126, mainly aimed for composer-mode.\n\nInstead of pointing to \"typo3conf/\" it was also adjusted to \"config/\".\n\nThis patch restores the displayed target directory for an\nENABLE_INSTALL_TOOL file to \"typo3conf/\". In composer-mode, it\nwill point to \"var/transient/\".\n\nResolves: #105326\nRelated: #104126\nRelated: #104074\nReleases: main, 13.4\nChange-Id: I3d92d76679c7a4ba6d1d95404ca0566308d10502\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/86632\nTested-by: Benjamin Franzke <ben@bnf.dev>\nReviewed-by: Benjamin Franzke <ben@bnf.dev>\nTested-by: Simon Schaufelberger <simonschaufi+typo3@gmail.com>\nTested-by: core-ci <typo3@b13.com>\nTested-by: Andreas Kienast <akienast@scripting-base.de>\nReviewed-by: Simon Schaufelberger <simonschaufi+typo3@gmail.com>\nReviewed-by: Andreas Kienast <akienast@scripting-base.de>",
        "before_after_code_files": [
          "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php"
          ],
          "candidate": [
            "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php": [
          "File: typo3/sysext/install/Classes/Service/EnableFileService.php -> typo3/sysext/install/Classes/Service/EnableFileService.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "166:     public static function getStaticLocationForInstallToolEnableFileDirectory(): string",
          "167:     {",
          "169:     }",
          "171:     public static function getBestLocationForInstallToolEnableFile(): string",
          "",
          "[Removed Lines]",
          "168:         return Environment::isComposerMode() ? 'var/transient/' : 'config/';",
          "",
          "[Added Lines]",
          "168:         return Environment::isComposerMode() ? 'var/transient/' : 'typo3conf/';",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "24b5f8d4711ad4ea8c45a73fc88a888f76e60af0",
      "candidate_info": {
        "commit_hash": "24b5f8d4711ad4ea8c45a73fc88a888f76e60af0",
        "repo": "TYPO3/typo3",
        "commit_url": "https://github.com/TYPO3/typo3/commit/24b5f8d4711ad4ea8c45a73fc88a888f76e60af0",
        "files": [
          "typo3/sysext/install/Classes/Controller/LoginController.php",
          "typo3/sysext/install/Classes/Service/EnableFileService.php"
        ],
        "message": "[SECURITY] Do not display full path to ENABLE_INSTALL_TOOL file\n\nUsing the Install Tool in composer mode, the login\ndisplays a hint, where the ENABLE_INSTALL_TOOL file\nmust be placed to unlock the Install Tool.\n\nThis hint does not show the full path anymore.\nOnly the path relative to the project root is shown.\n\nResolves: #102242\nReleases: main, 12.4\nChange-Id: I1e9cbfe3ef7d4cc6af9635da71d0c7450fe44aa6\nSecurity-Bulletin: TYPO3-CORE-SA-2023-005\nSecurity-References: CVE-2023-47126\nReviewed-on: https://review.typo3.org/c/Packages/TYPO3.CMS/+/81733\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>\nTested-by: Oliver Hader <oliver.hader@typo3.org>",
        "before_after_code_files": [
          "typo3/sysext/install/Classes/Controller/LoginController.php||typo3/sysext/install/Classes/Controller/LoginController.php",
          "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "typo3/sysext/install/Classes/Controller/LoginController.php||typo3/sysext/install/Classes/Controller/LoginController.php",
            "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php"
          ],
          "candidate": [
            "typo3/sysext/install/Classes/Controller/LoginController.php||typo3/sysext/install/Classes/Controller/LoginController.php",
            "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php"
          ]
        }
      },
      "candidate_diff": {
        "typo3/sysext/install/Classes/Controller/LoginController.php||typo3/sysext/install/Classes/Controller/LoginController.php": [
          "File: typo3/sysext/install/Classes/Controller/LoginController.php -> typo3/sysext/install/Classes/Controller/LoginController.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: use Psr\\Http\\Message\\ResponseInterface;",
          "21: use Psr\\Http\\Message\\ServerRequestInterface;",
          "22: use TYPO3\\CMS\\Core\\Configuration\\ConfigurationManager;",
          "24: use TYPO3\\CMS\\Core\\FormProtection\\FormProtectionFactory;",
          "25: use TYPO3\\CMS\\Core\\Http\\JsonResponse;",
          "26: use TYPO3\\CMS\\Install\\Service\\EnableFileService;",
          "",
          "[Removed Lines]",
          "23: use TYPO3\\CMS\\Core\\Core\\Environment;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "42:     public function showEnableInstallToolFileAction(ServerRequestInterface $request): ResponseInterface",
          "43:     {",
          "44:         $view = $this->initializeView($request);",
          "47:         return new JsonResponse([",
          "48:             'success' => true,",
          "49:             'html' => $view->render('Login/ShowEnableInstallToolFile'),",
          "",
          "[Removed Lines]",
          "45:         $path = str_replace(Environment::getPublicPath() . '/', '', dirname(EnableFileService::getBestLocationForInstallToolEnableFile())) . '/';",
          "46:         $view->assign('enableInstallToolPath', $path);",
          "",
          "[Added Lines]",
          "44:         $view->assign('enableInstallToolPath', EnableFileService::getStaticLocationForInstallToolEnableFileDirectory());",
          "",
          "---------------"
        ],
        "typo3/sysext/install/Classes/Service/EnableFileService.php||typo3/sysext/install/Classes/Service/EnableFileService.php": [
          "File: typo3/sysext/install/Classes/Service/EnableFileService.php -> typo3/sysext/install/Classes/Service/EnableFileService.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "158:         }",
          "159:     }",
          "161:     public static function getBestLocationForInstallToolEnableFile(): string",
          "162:     {",
          "163:         $possibleLocations = [",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "165:     public static function getStaticLocationForInstallToolEnableFileDirectory(): string",
          "166:     {",
          "167:         return Environment::isComposerMode() ? 'var/transient/' : 'typo3conf/';",
          "168:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}