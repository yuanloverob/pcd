{
  "cve_id": "CVE-2016-6186",
  "cve_desc": "Cross-site scripting (XSS) vulnerability in the dismissChangeRelatedObjectPopup function in contrib/admin/static/admin/js/admin/RelatedObjectLookups.js in Django before 1.8.14, 1.9.x before 1.9.8, and 1.10.x before 1.10rc1 allows remote attackers to inject arbitrary web script or HTML via vectors involving unsafe usage of Element.innerHTML.",
  "repo": "django/django",
  "patch_hash": "d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158",
  "patch_info": {
    "commit_hash": "d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158",
    "repo": "django/django",
    "commit_url": "https://github.com/django/django/commit/d03bf6fe4e9bf5b07de62c1a271c4b41a7d3d158",
    "files": [
      "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
      "django/views/debug.py",
      "docs/releases/1.8.14.txt",
      "docs/releases/1.9.8.txt",
      "tests/admin_views/models.py",
      "tests/admin_views/tests.py"
    ],
    "message": "[1.9.x] Fixed XSS in admin's add/change related popup.\n\nThis is a security fix.",
    "before_after_code_files": [
      "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js||django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
      "django/views/debug.py||django/views/debug.py",
      "tests/admin_views/models.py||tests/admin_views/models.py",
      "tests/admin_views/tests.py||tests/admin_views/tests.py"
    ]
  },
  "patch_diff": {
    "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js||django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js": [
      "File: django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js -> django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "120:         var selects = django.jQuery(selectsSelector);",
      "121:         selects.find('option').each(function() {",
      "122:             if (this.value === objId) {",
      "124:                 this.value = newId;",
      "125:             }",
      "126:         });",
      "",
      "[Removed Lines]",
      "123:                 this.innerHTML = newRepr;",
      "",
      "[Added Lines]",
      "123:                 this.textContent = newRepr;",
      "",
      "---------------"
    ],
    "django/views/debug.py||django/views/debug.py": [
      "File: django/views/debug.py -> django/views/debug.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "631:       var s = link.getElementsByTagName('span')[0];",
      "632:       var uarr = String.fromCharCode(0x25b6);",
      "633:       var darr = String.fromCharCode(0x25bc);",
      "635:       return false;",
      "636:     }",
      "637:     function switchPastebinFriendly(link) {",
      "638:       s1 = \"Switch to copy-and-paste view\";",
      "639:       s2 = \"Switch back to interactive view\";",
      "641:       toggle('browserTraceback', 'pastebinTraceback');",
      "642:       return false;",
      "643:     }",
      "",
      "[Removed Lines]",
      "634:       s.innerHTML = s.innerHTML == uarr ? darr : uarr;",
      "640:       link.innerHTML = link.innerHTML.trim() == s1 ? s2: s1;",
      "",
      "[Added Lines]",
      "634:       s.textContent = s.textContent == uarr ? darr : uarr;",
      "640:       link.textContent = link.textContent.trim() == s1 ? s2: s1;",
      "",
      "---------------"
    ],
    "tests/admin_views/models.py||tests/admin_views/models.py": [
      "File: tests/admin_views/models.py -> tests/admin_views/models.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: from django.utils.encoding import python_2_unicode_compatible",
      "20: class Section(models.Model):",
      "21:     \"\"\"",
      "22:     A simple section that links to articles, to test linking to related items",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20: @python_2_unicode_compatible",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "24:     \"\"\"",
      "25:     name = models.CharField(max_length=100)",
      "27:     @property",
      "28:     def name_property(self):",
      "29:         \"\"\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28:     def __str__(self):",
      "29:         return self.name",
      "",
      "---------------"
    ],
    "tests/admin_views/tests.py||tests/admin_views/tests.py": [
      "File: tests/admin_views/tests.py -> tests/admin_views/tests.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "4625:         \"\"\"",
      "4626:         list_editable foreign keys have add/change popups.",
      "4627:         \"\"\"",
      "4628:         s1 = Section.objects.create(name='Test section')",
      "4629:         Article.objects.create(",
      "4630:             content='<p>Middle content</p>',",
      "4631:             date=datetime.datetime(2008, 3, 18, 11, 54, 58),",
      "4632:             section=s1,",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "4628:         from selenium.webdriver.support.ui import Select",
      "4631:             title='foo',",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "4638:         self.wait_for_popup()",
      "4639:         self.selenium.switch_to.window(self.selenium.window_handles[-1])",
      "4640:         self.wait_for_text('#content h1', 'Change section')",
      "4642:         self.selenium.switch_to.window(self.selenium.window_handles[0])",
      "4644:         # Add popup",
      "4645:         self.selenium.find_element_by_id('add_id_form-0-section').click()",
      "",
      "[Removed Lines]",
      "4641:         self.selenium.close()",
      "",
      "[Added Lines]",
      "4643:         name_input = self.selenium.find_element_by_id('id_name')",
      "4644:         name_input.clear()",
      "4645:         name_input.send_keys('<i>edited section</i>')",
      "4646:         self.selenium.find_element_by_xpath('//input[@value=\"Save\"]').click()",
      "4648:         select = Select(self.selenium.find_element_by_id('id_form-0-section'))",
      "4649:         self.assertEqual(select.first_selected_option.text, '<i>edited section</i>')",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "f68e5a99164867ab0e071a936470958ed867479d",
      "candidate_info": {
        "commit_hash": "f68e5a99164867ab0e071a936470958ed867479d",
        "repo": "django/django",
        "commit_url": "https://github.com/django/django/commit/f68e5a99164867ab0e071a936470958ed867479d",
        "files": [
          "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
          "django/views/debug.py",
          "docs/releases/1.8.14.txt",
          "tests/admin_views/admin.py",
          "tests/admin_views/models.py",
          "tests/admin_views/tests.py"
        ],
        "message": "[1.8.x] Fixed XSS in admin's add/change related popup.\n\nThis is a security fix.",
        "before_after_code_files": [
          "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js||django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
          "django/views/debug.py||django/views/debug.py",
          "tests/admin_views/admin.py||tests/admin_views/admin.py",
          "tests/admin_views/models.py||tests/admin_views/models.py",
          "tests/admin_views/tests.py||tests/admin_views/tests.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js||django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
            "django/views/debug.py||django/views/debug.py",
            "tests/admin_views/models.py||tests/admin_views/models.py",
            "tests/admin_views/tests.py||tests/admin_views/tests.py"
          ],
          "candidate": [
            "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js||django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
            "django/views/debug.py||django/views/debug.py",
            "tests/admin_views/models.py||tests/admin_views/models.py",
            "tests/admin_views/tests.py||tests/admin_views/tests.py"
          ]
        }
      },
      "candidate_diff": {
        "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js||django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js": [
          "File: django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js -> django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "105:     var selects = django.jQuery(selectsSelector);",
          "106:     selects.find('option').each(function() {",
          "107:         if (this.value == objId) {",
          "109:             this.value = newId;",
          "110:         }",
          "111:     });",
          "",
          "[Removed Lines]",
          "108:             this.innerHTML = newRepr;",
          "",
          "[Added Lines]",
          "108:             this.textContent = newRepr;",
          "",
          "---------------"
        ],
        "django/views/debug.py||django/views/debug.py": [
          "File: django/views/debug.py -> django/views/debug.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "704:       var s = link.getElementsByTagName('span')[0];",
          "705:       var uarr = String.fromCharCode(0x25b6);",
          "706:       var darr = String.fromCharCode(0x25bc);",
          "708:       return false;",
          "709:     }",
          "710:     function switchPastebinFriendly(link) {",
          "711:       s1 = \"Switch to copy-and-paste view\";",
          "712:       s2 = \"Switch back to interactive view\";",
          "714:       toggle('browserTraceback', 'pastebinTraceback');",
          "715:       return false;",
          "716:     }",
          "",
          "[Removed Lines]",
          "707:       s.innerHTML = s.innerHTML == uarr ? darr : uarr;",
          "713:       link.innerHTML = link.innerHTML.trim() == s1 ? s2: s1;",
          "",
          "[Added Lines]",
          "707:       s.textContent = s.textContent == uarr ? darr : uarr;",
          "713:       link.textContent = link.textContent.trim() == s1 ? s2: s1;",
          "",
          "---------------"
        ],
        "tests/admin_views/admin.py||tests/admin_views/admin.py": [
          "File: tests/admin_views/admin.py -> tests/admin_views/admin.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "89: class ArticleAdmin(admin.ModelAdmin):",
          "90:     list_display = ('content', 'date', callable_year, 'model_year',",
          "92:     list_filter = ('date', 'section')",
          "93:     view_on_site = False",
          "94:     fieldsets = (",
          "",
          "[Removed Lines]",
          "91:                     'modeladmin_year', 'model_year_reversed')",
          "",
          "[Added Lines]",
          "91:                     'modeladmin_year', 'model_year_reversed', 'section')",
          "92:     list_editable = ('section',)",
          "",
          "---------------"
        ],
        "tests/admin_views/models.py||tests/admin_views/models.py": [
          "File: tests/admin_views/models.py -> tests/admin_views/models.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "16: from django.utils.encoding import python_2_unicode_compatible",
          "19: class Section(models.Model):",
          "20:     \"\"\"",
          "21:     A simple section that links to articles, to test linking to related items",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19: @python_2_unicode_compatible",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "23:     \"\"\"",
          "24:     name = models.CharField(max_length=100)",
          "26:     @property",
          "27:     def name_property(self):",
          "28:         \"\"\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "27:     def __str__(self):",
          "28:         return self.name",
          "",
          "---------------"
        ],
        "tests/admin_views/tests.py||tests/admin_views/tests.py": [
          "File: tests/admin_views/tests.py -> tests/admin_views/tests.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4056:         self.assertEqual(Pizza.objects.count(), 1)",
          "4057:         self.assertEqual(Topping.objects.count(), 2)",
          "4059:     def test_list_editable_raw_id_fields(self):",
          "4060:         parent = ParentWithUUIDPK.objects.create(title='test')",
          "4061:         parent2 = ParentWithUUIDPK.objects.create(title='test2')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4059:     def test_list_editable_popups(self):",
          "4060:         \"\"\"",
          "4061:         list_editable foreign keys have add/change popups.",
          "4062:         \"\"\"",
          "4063:         from selenium.webdriver.support.ui import Select",
          "4064:         s1 = Section.objects.create(name='Test section')",
          "4065:         Article.objects.create(",
          "4066:             title='foo',",
          "4067:             content='<p>Middle content</p>',",
          "4068:             date=datetime.datetime(2008, 3, 18, 11, 54, 58),",
          "4069:             section=s1,",
          "4070:         )",
          "4071:         self.admin_login(username='super', password='secret', login_url=reverse('admin:index'))",
          "4072:         self.selenium.get(self.live_server_url + reverse('admin:admin_views_article_changelist'))",
          "4073:         # Change popup",
          "4074:         self.selenium.find_element_by_id('change_id_form-0-section').click()",
          "4075:         self.wait_for_popup()",
          "4076:         self.selenium.switch_to.window(self.selenium.window_handles[-1])",
          "4077:         self.wait_for_text('#content h1', 'Change section')",
          "4078:         name_input = self.selenium.find_element_by_id('id_name')",
          "4079:         name_input.clear()",
          "4080:         name_input.send_keys('<i>edited section</i>')",
          "4081:         self.selenium.find_element_by_xpath('//input[@value=\"Save\"]').click()",
          "4082:         self.selenium.switch_to.window(self.selenium.window_handles[0])",
          "4083:         select = Select(self.selenium.find_element_by_id('id_form-0-section'))",
          "4084:         self.assertEqual(select.first_selected_option.text, '<i>edited section</i>')",
          "4086:         # Add popup",
          "4087:         self.selenium.find_element_by_id('add_id_form-0-section').click()",
          "4088:         self.wait_for_popup()",
          "4089:         self.selenium.switch_to.window(self.selenium.window_handles[-1])",
          "4090:         self.wait_for_text('#content h1', 'Add section')",
          "4091:         self.selenium.find_element_by_id('id_name').send_keys('new section')",
          "4092:         self.selenium.find_element_by_xpath('//input[@value=\"Save\"]').click()",
          "4093:         self.selenium.switch_to.window(self.selenium.window_handles[0])",
          "4094:         select = Select(self.selenium.find_element_by_id('id_form-0-section'))",
          "4095:         self.assertEqual(select.first_selected_option.text, 'new section')",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6fa150b2f8b601668083042324c4add534143cb1",
      "candidate_info": {
        "commit_hash": "6fa150b2f8b601668083042324c4add534143cb1",
        "repo": "django/django",
        "commit_url": "https://github.com/django/django/commit/6fa150b2f8b601668083042324c4add534143cb1",
        "files": [
          "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
          "django/views/debug.py",
          "docs/releases/1.8.14.txt",
          "docs/releases/1.9.8.txt",
          "tests/admin_views/tests.py"
        ],
        "message": "[1.10.x] Fixed XSS in admin's add/change related popup.\n\nThis is a security fix.",
        "before_after_code_files": [
          "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js||django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
          "django/views/debug.py||django/views/debug.py",
          "tests/admin_views/tests.py||tests/admin_views/tests.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js||django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
            "django/views/debug.py||django/views/debug.py",
            "tests/admin_views/tests.py||tests/admin_views/tests.py"
          ],
          "candidate": [
            "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js||django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
            "django/views/debug.py||django/views/debug.py",
            "tests/admin_views/tests.py||tests/admin_views/tests.py"
          ]
        }
      },
      "candidate_diff": {
        "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js||django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js": [
          "File: django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js -> django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:         var selects = $(selectsSelector);",
          "105:         selects.find('option').each(function() {",
          "106:             if (this.value === objId) {",
          "108:                 this.value = newId;",
          "109:             }",
          "110:         });",
          "",
          "[Removed Lines]",
          "107:                 this.innerHTML = newRepr;",
          "",
          "[Added Lines]",
          "107:                 this.textContent = newRepr;",
          "",
          "---------------"
        ],
        "django/views/debug.py||django/views/debug.py": [
          "File: django/views/debug.py -> django/views/debug.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "636:       var s = link.getElementsByTagName('span')[0];",
          "637:       var uarr = String.fromCharCode(0x25b6);",
          "638:       var darr = String.fromCharCode(0x25bc);",
          "640:       return false;",
          "641:     }",
          "642:     function switchPastebinFriendly(link) {",
          "643:       s1 = \"Switch to copy-and-paste view\";",
          "644:       s2 = \"Switch back to interactive view\";",
          "646:       toggle('browserTraceback', 'pastebinTraceback');",
          "647:       return false;",
          "648:     }",
          "",
          "[Removed Lines]",
          "639:       s.innerHTML = s.innerHTML == uarr ? darr : uarr;",
          "645:       link.innerHTML = link.innerHTML.trim() == s1 ? s2: s1;",
          "",
          "[Added Lines]",
          "639:       s.textContent = s.textContent == uarr ? darr : uarr;",
          "645:       link.textContent = link.textContent.trim() == s1 ? s2: s1;",
          "",
          "---------------"
        ],
        "tests/admin_views/tests.py||tests/admin_views/tests.py": [
          "File: tests/admin_views/tests.py -> tests/admin_views/tests.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4450:         self.wait_for_text('#content h1', 'Change section')",
          "4451:         name_input = self.selenium.find_element_by_id('id_name')",
          "4452:         name_input.clear()",
          "4454:         self.selenium.find_element_by_xpath('//input[@value=\"Save\"]').click()",
          "4455:         self.selenium.switch_to.window(self.selenium.window_handles[0])",
          "4456:         select = Select(self.selenium.find_element_by_id('id_form-0-section'))",
          "4459:         # Add popup",
          "4460:         self.selenium.find_element_by_id('add_id_form-0-section').click()",
          "",
          "[Removed Lines]",
          "4453:         name_input.send_keys('edited section')",
          "4457:         self.assertEqual(select.first_selected_option.text, 'edited section')",
          "",
          "[Added Lines]",
          "4453:         name_input.send_keys('<i>edited section</i>')",
          "4457:         self.assertEqual(select.first_selected_option.text, '<i>edited section</i>')",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "93c538694e6b14a29cb0f52b784a3bfed604fda6",
      "candidate_info": {
        "commit_hash": "93c538694e6b14a29cb0f52b784a3bfed604fda6",
        "repo": "django/django",
        "commit_url": "https://github.com/django/django/commit/93c538694e6b14a29cb0f52b784a3bfed604fda6",
        "files": [
          "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
          "django/views/debug.py",
          "docs/releases/1.8.14.txt",
          "docs/releases/1.9.8.txt",
          "tests/admin_views/tests.py"
        ],
        "message": "Fixed XSS in admin's add/change related popup.\n\nThis is a security fix.",
        "before_after_code_files": [
          "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js||django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
          "django/views/debug.py||django/views/debug.py",
          "tests/admin_views/tests.py||tests/admin_views/tests.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js||django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
            "django/views/debug.py||django/views/debug.py",
            "tests/admin_views/tests.py||tests/admin_views/tests.py"
          ],
          "candidate": [
            "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js||django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
            "django/views/debug.py||django/views/debug.py",
            "tests/admin_views/tests.py||tests/admin_views/tests.py"
          ]
        }
      },
      "candidate_diff": {
        "django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js||django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js": [
          "File: django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js -> django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:         var selects = $(selectsSelector);",
          "105:         selects.find('option').each(function() {",
          "106:             if (this.value === objId) {",
          "108:                 this.value = newId;",
          "109:             }",
          "110:         });",
          "",
          "[Removed Lines]",
          "107:                 this.innerHTML = newRepr;",
          "",
          "[Added Lines]",
          "107:                 this.textContent = newRepr;",
          "",
          "---------------"
        ],
        "django/views/debug.py||django/views/debug.py": [
          "File: django/views/debug.py -> django/views/debug.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "636:       var s = link.getElementsByTagName('span')[0];",
          "637:       var uarr = String.fromCharCode(0x25b6);",
          "638:       var darr = String.fromCharCode(0x25bc);",
          "640:       return false;",
          "641:     }",
          "642:     function switchPastebinFriendly(link) {",
          "643:       s1 = \"Switch to copy-and-paste view\";",
          "644:       s2 = \"Switch back to interactive view\";",
          "646:       toggle('browserTraceback', 'pastebinTraceback');",
          "647:       return false;",
          "648:     }",
          "",
          "[Removed Lines]",
          "639:       s.innerHTML = s.innerHTML == uarr ? darr : uarr;",
          "645:       link.innerHTML = link.innerHTML.trim() == s1 ? s2: s1;",
          "",
          "[Added Lines]",
          "639:       s.textContent = s.textContent == uarr ? darr : uarr;",
          "645:       link.textContent = link.textContent.trim() == s1 ? s2: s1;",
          "",
          "---------------"
        ],
        "tests/admin_views/tests.py||tests/admin_views/tests.py": [
          "File: tests/admin_views/tests.py -> tests/admin_views/tests.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "4475:         self.wait_for_text('#content h1', 'Change section')",
          "4476:         name_input = self.selenium.find_element_by_id('id_name')",
          "4477:         name_input.clear()",
          "4479:         self.selenium.find_element_by_xpath('//input[@value=\"Save\"]').click()",
          "4480:         self.selenium.switch_to.window(self.selenium.window_handles[0])",
          "4481:         select = Select(self.selenium.find_element_by_id('id_form-0-section'))",
          "4484:         # Add popup",
          "4485:         self.selenium.find_element_by_id('add_id_form-0-section').click()",
          "",
          "[Removed Lines]",
          "4478:         name_input.send_keys('edited section')",
          "4482:         self.assertEqual(select.first_selected_option.text, 'edited section')",
          "",
          "[Added Lines]",
          "4478:         name_input.send_keys('<i>edited section</i>')",
          "4482:         self.assertEqual(select.first_selected_option.text, '<i>edited section</i>')",
          "",
          "---------------"
        ]
      }
    }
  ]
}