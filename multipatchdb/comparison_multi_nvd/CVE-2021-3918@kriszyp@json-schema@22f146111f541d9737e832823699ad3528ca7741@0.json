{
  "cve_id": "CVE-2021-3918",
  "cve_desc": "json-schema is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution')",
  "repo": "kriszyp/json-schema",
  "patch_hash": "22f146111f541d9737e832823699ad3528ca7741",
  "patch_info": {
    "commit_hash": "22f146111f541d9737e832823699ad3528ca7741",
    "repo": "kriszyp/json-schema",
    "commit_url": "https://github.com/kriszyp/json-schema/commit/22f146111f541d9737e832823699ad3528ca7741",
    "files": [
      ".gitignore",
      "lib/validate.js",
      "test/tests.js"
    ],
    "message": "Don't allow __proto__ property to be used for schema default/coerce, fixes #84",
    "before_after_code_files": [
      "lib/validate.js||lib/validate.js",
      "test/tests.js||test/tests.js"
    ]
  },
  "patch_diff": {
    "lib/validate.js||lib/validate.js": [
      "File: lib/validate.js -> lib/validate.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "207:    }",
      "209:    for(var i in objTypeDef){",
      "211:      var value = instance[i];",
      "213:      if (value === undefined && options.existingOnly) continue;",
      "",
      "[Removed Lines]",
      "210:     if(objTypeDef.hasOwnProperty(i)){",
      "",
      "[Added Lines]",
      "210:     if(objTypeDef.hasOwnProperty(i) && i != '__proto__'){",
      "",
      "---------------"
    ],
    "test/tests.js||test/tests.js": [
      "File: test/tests.js -> test/tests.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "92:     'Json-Ref self-validates': assertSelfValidates('json-ref'),",
      "93:     'Json-Ref/Hyper': assertValidates('json-ref', 'hyper-schema'),",
      "95: }).export(module);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "95:     prototypePollution: function() {",
      "96:         console.log('testing')",
      "97:         const instance = JSON.parse(`",
      "98:         {",
      "99:         \"$schema\":{",
      "100:             \"type\": \"object\",",
      "101:             \"properties\":{",
      "102:             \"__proto__\": {",
      "103:                 \"type\": \"object\",",
      "105:                 \"properties\":{",
      "106:                 \"polluted\": {",
      "107:                     \"type\": \"string\",",
      "108:                     \"default\": \"polluted\"",
      "109:                 }",
      "110:                 }",
      "111:             }",
      "112:             },",
      "113:             \"__proto__\": {}",
      "114:         }",
      "115:         }`);",
      "117:         const a = {};",
      "118:         validate(instance);",
      "119:         assert.equal(a.polluted, undefined);",
      "120:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b62f1da1ff5442f23443d6be6a92d00e65cba93a",
      "candidate_info": {
        "commit_hash": "b62f1da1ff5442f23443d6be6a92d00e65cba93a",
        "repo": "kriszyp/json-schema",
        "commit_url": "https://github.com/kriszyp/json-schema/commit/b62f1da1ff5442f23443d6be6a92d00e65cba93a",
        "files": [
          "lib/validate.js"
        ],
        "message": "Protect against constructor modification, #84",
        "before_after_code_files": [
          "lib/validate.js||lib/validate.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/validate.js||lib/validate.js"
          ],
          "candidate": [
            "lib/validate.js||lib/validate.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/validate.js||lib/validate.js": [
          "File: lib/validate.js -> lib/validate.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:    }",
          "209:    for(var i in objTypeDef){",
          "211:      var value = instance[i];",
          "213:      if (value === undefined && options.existingOnly) continue;",
          "",
          "[Removed Lines]",
          "210:     if(objTypeDef.hasOwnProperty(i) && i != '__proto__'){",
          "",
          "[Added Lines]",
          "210:     if(objTypeDef.hasOwnProperty(i) && i != '__proto__' && i != 'constructor'){",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa",
      "candidate_info": {
        "commit_hash": "f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa",
        "repo": "kriszyp/json-schema",
        "commit_url": "https://github.com/kriszyp/json-schema/commit/f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa",
        "files": [
          "lib/validate.js"
        ],
        "message": "Use a little more robust method of checking instances",
        "before_after_code_files": [
          "lib/validate.js||lib/validate.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/validate.js||lib/validate.js"
          ],
          "candidate": [
            "lib/validate.js||lib/validate.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/validate.js||lib/validate.js": [
          "File: lib/validate.js -> lib/validate.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "209:    for(var i in objTypeDef){",
          "210:     if(objTypeDef.hasOwnProperty(i) && i != '__proto__' && i != 'constructor'){",
          "213:      if (value === undefined && options.existingOnly) continue;",
          "214:      var propDef = objTypeDef[i];",
          "",
          "[Removed Lines]",
          "211:      var value = instance[i];",
          "",
          "[Added Lines]",
          "211:      var value = instance.hasOwnProperty(i) ? instance[i] : undefined;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7b1a8000cc2d35f4bb83d186a2d1f77dbb26fd5b",
      "candidate_info": {
        "commit_hash": "7b1a8000cc2d35f4bb83d186a2d1f77dbb26fd5b",
        "repo": "kriszyp/json-schema",
        "commit_url": "https://github.com/kriszyp/json-schema/commit/7b1a8000cc2d35f4bb83d186a2d1f77dbb26fd5b",
        "files": [
          "lib/validate.js",
          "test/tests.js"
        ],
        "message": "Explicitly use Object.prototype.hasOwnProperty",
        "before_after_code_files": [
          "lib/validate.js||lib/validate.js",
          "test/tests.js||test/tests.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/validate.js||lib/validate.js",
            "test/tests.js||test/tests.js"
          ],
          "candidate": [
            "lib/validate.js||lib/validate.js",
            "test/tests.js||test/tests.js"
          ]
        }
      },
      "candidate_diff": {
        "lib/validate.js||lib/validate.js": [
          "File: lib/validate.js -> lib/validate.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "207:    }",
          "209:    for(var i in objTypeDef){",
          "213:      if (value === undefined && options.existingOnly) continue;",
          "214:      var propDef = objTypeDef[i];",
          "",
          "[Removed Lines]",
          "210:     if(objTypeDef.hasOwnProperty(i) && i != '__proto__' && i != 'constructor'){",
          "211:      var value = instance.hasOwnProperty(i) ? instance[i] : undefined;",
          "",
          "[Added Lines]",
          "210:     if(Object.prototype.hasOwnProperty.call(objTypeDef, i) && i != '__proto__' && i != 'constructor'){",
          "211:      var value = Object.prototype.hasOwnProperty.call(instance, i) ? instance[i] : undefined;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "224:    }",
          "225:   }",
          "226:   for(i in instance){",
          "228:     if (options.filter) {",
          "229:      delete instance[i];",
          "230:      continue;",
          "",
          "[Removed Lines]",
          "227:    if(instance.hasOwnProperty(i) && !(i.charAt(0) == '_' && i.charAt(1) == '_') && objTypeDef && !objTypeDef[i] && additionalProp===false){",
          "",
          "[Added Lines]",
          "227:    if(Object.prototype.hasOwnProperty.call(instance, i) && !(i.charAt(0) == '_' && i.charAt(1) == '_') && objTypeDef && !objTypeDef[i] && additionalProp===false){",
          "",
          "---------------"
        ],
        "test/tests.js||test/tests.js": [
          "File: test/tests.js -> test/tests.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "117:         const a = {};",
          "118:         validate(instance);",
          "119:         assert.equal(a.polluted, undefined);",
          "121: }).export(module);",
          "",
          "[Removed Lines]",
          "120:     }",
          "",
          "[Added Lines]",
          "120:     },",
          "121:     'validation of object with overridden hasOwnProperty does not throw': function() {",
          "122:         const schema = {",
          "123:             type: 'object',",
          "124:             properties: {",
          "125:                 property: {",
          "126:                     type: 'string',",
          "127:                 }",
          "128:             },",
          "129:         };",
          "131:         const instance = { hasOwnProperty: true };",
          "132:         assert.doesNotThrow(function() {",
          "133:             validate(instance, schema);",
          "134:         });",
          "135:     },",
          "136:     'validation of object with null prototype does not throw': function() {",
          "137:         const schema = {",
          "138:             type: 'object',",
          "139:             properties: {",
          "140:                 property: {",
          "141:                     type: 'string',",
          "142:                 }",
          "143:             },",
          "144:         };",
          "146:         const instance = Object.assign(Object.create(null), {",
          "147:             property: \"value\"",
          "148:         });",
          "149:         assert.doesNotThrow(function() {",
          "150:             validate(instance, schema);",
          "151:         });",
          "152:     },",
          "",
          "---------------"
        ]
      }
    }
  ]
}