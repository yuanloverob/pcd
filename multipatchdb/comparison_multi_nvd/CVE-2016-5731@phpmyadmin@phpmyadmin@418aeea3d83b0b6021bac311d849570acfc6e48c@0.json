{
  "cve_id": "CVE-2016-5731",
  "cve_desc": "Cross-site scripting (XSS) vulnerability in examples/openid.php in phpMyAdmin 4.0.x before 4.0.10.16, 4.4.x before 4.4.15.7, and 4.6.x before 4.6.3 allows remote attackers to inject arbitrary web script or HTML via vectors involving an OpenID error message.",
  "repo": "phpmyadmin/phpmyadmin",
  "patch_hash": "418aeea3d83b0b6021bac311d849570acfc6e48c",
  "patch_info": {
    "commit_hash": "418aeea3d83b0b6021bac311d849570acfc6e48c",
    "repo": "phpmyadmin/phpmyadmin",
    "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/418aeea3d83b0b6021bac311d849570acfc6e48c",
    "files": [
      "examples/openid.php"
    ],
    "message": "Add error handling to constructing openid message\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
    "before_after_code_files": [
      "examples/openid.php||examples/openid.php"
    ]
  },
  "patch_diff": {
    "examples/openid.php||examples/openid.php": [
      "File: examples/openid.php -> examples/openid.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "63:     <?php",
      "64: }",
      "67: session_set_cookie_params(0, '/', '', false);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "66: function Die_error($e)",
      "67: {",
      "68:     $contents = \"<div class='relyingparty_results'>\\n\";",
      "69:     $contents .= \"<pre>\" . htmlspecialchars($e->getMessage()) . \"</pre>\\n\";",
      "70:     $contents .= \"</div class='relyingparty_results'>\";",
      "71:     Show_page($contents);",
      "72:     exit;",
      "73: }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "110: try {",
      "111:     $o = new OpenID_RelyingParty($returnTo, $realm, $identifier);",
      "112: } catch (Exception $e) {",
      "118: }",
      "",
      "[Removed Lines]",
      "113:     $contents = \"<div class='relyingparty_results'>\\n\";",
      "114:     $contents .= \"<pre>\" . htmlspecialchars($e->getMessage()) . \"</pre>\\n\";",
      "115:     $contents .= \"</div class='relyingparty_results'>\";",
      "116:     Show_page($contents);",
      "117:     exit;",
      "",
      "[Added Lines]",
      "123:     Die_error($e);",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "122:     try {",
      "123:         $authRequest = $o->prepare();",
      "124:     } catch (Exception $e) {",
      "130:     }",
      "132:     $url = $authRequest->getAuthorizeURL();",
      "",
      "[Removed Lines]",
      "125:         $contents = \"<div class='relyingparty_results'>\\n\";",
      "126:         $contents .= \"<pre>\" . htmlspecialchars($e->getMessage()) . \"</pre>\\n\";",
      "127:         $contents .= \"</div class='relyingparty_results'>\";",
      "128:         Show_page($contents);",
      "129:         exit;",
      "",
      "[Added Lines]",
      "131:         Die_error($e);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "143:     }",
      "148:     $id = $message->get('openid.claimed_id');",
      "",
      "[Removed Lines]",
      "146:     $message = new OpenID_Message($queryString, OpenID_Message::FORMAT_HTTP);",
      "",
      "[Added Lines]",
      "148:     try {",
      "149:         $message = new OpenID_Message($queryString, OpenID_Message::FORMAT_HTTP);",
      "150:     } catch (Exception $e) {",
      "151:         Die_error($e);",
      "152:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "27664605b945b13e1d2b71adea822ace2099cc96",
      "candidate_info": {
        "commit_hash": "27664605b945b13e1d2b71adea822ace2099cc96",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/27664605b945b13e1d2b71adea822ace2099cc96",
        "files": [
          "examples/openid.php"
        ],
        "message": "Improve error handling in OpenID example\n\n- properly check parameter types\n- catch all exceptions (eg. network error)\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
        "before_after_code_files": [
          "examples/openid.php||examples/openid.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "examples/openid.php||examples/openid.php"
          ],
          "candidate": [
            "examples/openid.php||examples/openid.php"
          ]
        }
      },
      "candidate_diff": {
        "examples/openid.php||examples/openid.php": [
          "File: examples/openid.php -> examples/openid.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "98: }",
          "102:     $identifier = $_POST['identifier'];",
          "104:     $identifier = $_SESSION['identifier'];",
          "105: } else {",
          "106:     $identifier = null;",
          "",
          "[Removed Lines]",
          "101: if (isset($_POST['identifier'])) {",
          "103: } else if (isset($_SESSION['identifier'])) {",
          "",
          "[Added Lines]",
          "101: if (isset($_POST['identifier']) && is_string($_POST['identifier'])) {",
          "103: } else if (isset($_SESSION['identifier']) && is_string($_SESSION['identifier'])) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "110: try {",
          "111:     $o = new OpenID_RelyingParty($returnTo, $realm, $identifier);",
          "113:     $contents = \"<div class='relyingparty_results'>\\n\";",
          "114:     $contents .= \"<pre>\" . $e->getMessage() . \"</pre>\\n\";",
          "115:     $contents .= \"</div class='relyingparty_results'>\";",
          "",
          "[Removed Lines]",
          "112: } catch (OpenID_Exception $e) {",
          "",
          "[Added Lines]",
          "112: } catch (Exception $e) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d005ba65304f254d393d5dfee5ac66f1750cec89",
      "candidate_info": {
        "commit_hash": "d005ba65304f254d393d5dfee5ac66f1750cec89",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/d005ba65304f254d393d5dfee5ac66f1750cec89",
        "files": [
          "examples/openid.php"
        ],
        "message": "Add error handling to constructing openid message\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
        "before_after_code_files": [
          "examples/openid.php||examples/openid.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "examples/openid.php||examples/openid.php"
          ],
          "candidate": [
            "examples/openid.php||examples/openid.php"
          ]
        }
      },
      "candidate_diff": {
        "examples/openid.php||examples/openid.php": [
          "File: examples/openid.php -> examples/openid.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "63:     <?php",
          "64: }",
          "67: session_set_cookie_params(0, '/', '', false);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "66: function Die_error($e)",
          "67: {",
          "68:     $contents = \"<div class='relyingparty_results'>\\n\";",
          "69:     $contents .= \"<pre>\" . htmlspecialchars($e->getMessage()) . \"</pre>\\n\";",
          "70:     $contents .= \"</div class='relyingparty_results'>\";",
          "71:     Show_page($contents);",
          "72:     exit;",
          "73: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "110: try {",
          "111:     $o = new OpenID_RelyingParty($returnTo, $realm, $identifier);",
          "112: } catch (Exception $e) {",
          "118: }",
          "",
          "[Removed Lines]",
          "113:     $contents = \"<div class='relyingparty_results'>\\n\";",
          "114:     $contents .= \"<pre>\" . htmlspecialchars($e->getMessage()) . \"</pre>\\n\";",
          "115:     $contents .= \"</div class='relyingparty_results'>\";",
          "116:     Show_page($contents);",
          "117:     exit;",
          "",
          "[Added Lines]",
          "123:     Die_error($e);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "122:     try {",
          "123:         $authRequest = $o->prepare();",
          "124:     } catch (Exception $e) {",
          "130:     }",
          "132:     $url = $authRequest->getAuthorizeURL();",
          "",
          "[Removed Lines]",
          "125:         $contents = \"<div class='relyingparty_results'>\\n\";",
          "126:         $contents .= \"<pre>\" . htmlspecialchars($e->getMessage()) . \"</pre>\\n\";",
          "127:         $contents .= \"</div class='relyingparty_results'>\";",
          "128:         Show_page($contents);",
          "129:         exit;",
          "",
          "[Added Lines]",
          "131:         Die_error($e);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "143:     }",
          "148:     $id = $message->get('openid.claimed_id');",
          "",
          "[Removed Lines]",
          "146:     $message = new OpenID_Message($queryString, OpenID_Message::FORMAT_HTTP);",
          "",
          "[Added Lines]",
          "148:     try {",
          "149:         $message = new OpenID_Message($queryString, OpenID_Message::FORMAT_HTTP);",
          "150:     } catch (Exception $e) {",
          "151:         Die_error($e);",
          "152:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "78f6c54f1b404c639277d98123429b90d43fb088",
      "candidate_info": {
        "commit_hash": "78f6c54f1b404c639277d98123429b90d43fb088",
        "repo": "phpmyadmin/phpmyadmin",
        "commit_url": "https://github.com/phpmyadmin/phpmyadmin/commit/78f6c54f1b404c639277d98123429b90d43fb088",
        "files": [
          "examples/openid.php"
        ],
        "message": "Add error handling to constructing openid message\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
        "before_after_code_files": [
          "examples/openid.php||examples/openid.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "examples/openid.php||examples/openid.php"
          ],
          "candidate": [
            "examples/openid.php||examples/openid.php"
          ]
        }
      },
      "candidate_diff": {
        "examples/openid.php||examples/openid.php": [
          "File: examples/openid.php -> examples/openid.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "61: <?php",
          "62: }",
          "65: session_set_cookie_params(0, '/', '', 0);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "64: function die_error($e)",
          "65: {",
          "66:     $contents = \"<div class='relyingparty_results'>\\n\";",
          "67:     $contents .= \"<pre>\" . htmlspecialchars($e->getMessage()) . \"</pre>\\n\";",
          "68:     $contents .= \"</div class='relyingparty_results'>\";",
          "69:     show_page($contents);",
          "70:     exit;",
          "71: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "108: try {",
          "109:     $o = new OpenID_RelyingParty($returnTo, $realm, $identifier);",
          "110: } catch (Exception $e) {",
          "116: }",
          "",
          "[Removed Lines]",
          "111:     $contents = \"<div class='relyingparty_results'>\\n\";",
          "112:     $contents .= \"<pre>\" . htmlspecialchars($e->getMessage()) . \"</pre>\\n\";",
          "113:     $contents .= \"</div class='relyingparty_results'>\";",
          "114:     show_page($contents);",
          "115:     exit;",
          "",
          "[Added Lines]",
          "121:     die_error($e);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "120:     try {",
          "121:         $authRequest = $o->prepare();",
          "122:     } catch (Exception $e) {",
          "128:     }",
          "130:     $url = $authRequest->getAuthorizeURL();",
          "",
          "[Removed Lines]",
          "123:         $contents = \"<div class='relyingparty_results'>\\n\";",
          "124:         $contents .= \"<pre>\" . htmlspecialchars($e->getMessage()) . \"</pre>\\n\";",
          "125:         $contents .= \"</div class='relyingparty_results'>\";",
          "126:         show_page($contents);",
          "127:         exit;",
          "",
          "[Added Lines]",
          "129:         die_error($e);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "141:     }",
          "146:     $id = $message->get('openid.claimed_id');",
          "",
          "[Removed Lines]",
          "144:     $message = new OpenID_Message($queryString, OpenID_Message::FORMAT_HTTP);",
          "",
          "[Added Lines]",
          "146:     try {",
          "147:         $message = new OpenID_Message($queryString, OpenID_Message::FORMAT_HTTP);",
          "148:     } catch (Exception $e) {",
          "149:         die_error($e);",
          "150:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}