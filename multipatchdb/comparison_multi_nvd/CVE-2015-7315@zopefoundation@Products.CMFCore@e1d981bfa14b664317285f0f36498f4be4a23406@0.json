{
  "cve_id": "CVE-2015-7315",
  "cve_desc": "Plone 3.3.0 through 3.3.6, 4.0.0 through 4.0.10, 4.1.0 through 4.1.6, 4.2.0 through 4.2.7, 4.3.0 through 4.3.6, and 5.0rc1 allows remote attackers to add a new member to a Plone site with registration enabled, without acknowledgment of site administrator.",
  "repo": "zopefoundation/Products.CMFCore",
  "patch_hash": "e1d981bfa14b664317285f0f36498f4be4a23406",
  "patch_info": {
    "commit_hash": "e1d981bfa14b664317285f0f36498f4be4a23406",
    "repo": "zopefoundation/Products.CMFCore",
    "commit_url": "https://github.com/zopefoundation/Products.CMFCore/commit/e1d981bfa14b664317285f0f36498f4be4a23406",
    "files": [
      "Products/CMFCore/CHANGES.txt",
      "Products/CMFCore/RegistrationTool.py"
    ],
    "message": "Make sure RegistrationTool.addMember is not published",
    "before_after_code_files": [
      "Products/CMFCore/RegistrationTool.py||Products/CMFCore/RegistrationTool.py"
    ]
  },
  "patch_diff": {
    "Products/CMFCore/RegistrationTool.py||Products/CMFCore/RegistrationTool.py": [
      "File: Products/CMFCore/RegistrationTool.py -> Products/CMFCore/RegistrationTool.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "132:     @postonly",
      "133:     def addMember(self, id, password, roles=('Member',), domains='',",
      "134:                   properties=None, REQUEST=None):",
      "143:         if not self.isMemberIdAllowed(id):",
      "144:             raise ValueError(_(u'The login name you selected is already in '",
      "145:                                u'use or is not valid. Please choose another.'))",
      "",
      "[Removed Lines]",
      "135:         '''Creates a PortalMember and returns it. The properties argument",
      "136:         can be a mapping with additional member properties. Raises an",
      "137:         exception if the given id already exists, the password does not",
      "138:         comply with the policy in effect, or the authenticated user is not",
      "139:         allowed to grant one of the roles listed (where Member is a special",
      "140:         role that can always be granted); these conditions should be",
      "141:         detected before the fact so that a cleaner message can be printed.",
      "142:         '''",
      "",
      "[Added Lines]",
      "135:         # XXX Do not make this a normal method comment. Doing so makes",
      "136:         # this method publishable",
      "138:         # Creates a PortalMember and returns it. The properties argument",
      "139:         # can be a mapping with additional member properties. Raises an",
      "140:         # exception if the given id already exists, the password does not",
      "141:         # comply with the policy in effect, or the authenticated user is not",
      "142:         # allowed to grant one of the roles listed (where Member is a special",
      "143:         # role that can always be granted); these conditions should be",
      "144:         # detected before the fact so that a cleaner message can be printed.",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "e1dc70a6198073f2ceedbe725a93cde57c7bfb34",
      "candidate_info": {
        "commit_hash": "e1dc70a6198073f2ceedbe725a93cde57c7bfb34",
        "repo": "zopefoundation/Products.CMFCore",
        "commit_url": "https://github.com/zopefoundation/Products.CMFCore/commit/e1dc70a6198073f2ceedbe725a93cde57c7bfb34",
        "files": [
          "Products/CMFCore/CHANGES.txt",
          "Products/CMFCore/RegistrationTool.py"
        ],
        "message": "Make sure RegistrationTool.addMember is not published",
        "before_after_code_files": [
          "Products/CMFCore/RegistrationTool.py||Products/CMFCore/RegistrationTool.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "Products/CMFCore/RegistrationTool.py||Products/CMFCore/RegistrationTool.py"
          ],
          "candidate": [
            "Products/CMFCore/RegistrationTool.py||Products/CMFCore/RegistrationTool.py"
          ]
        }
      },
      "candidate_diff": {
        "Products/CMFCore/RegistrationTool.py||Products/CMFCore/RegistrationTool.py": [
          "File: Products/CMFCore/RegistrationTool.py -> Products/CMFCore/RegistrationTool.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "129:     @postonly",
          "130:     def addMember(self, id, password, roles=('Member',), domains='',",
          "131:                   properties=None, REQUEST=None):",
          "140:         # XXX: this method violates the rules for tools/utilities:",
          "141:         # it depends on a non-utility tool",
          "142:         if not self.isMemberIdAllowed(id):",
          "",
          "[Removed Lines]",
          "132:         '''Creates a PortalMember and returns it. The properties argument",
          "133:         can be a mapping with additional member properties. Raises an",
          "134:         exception if the given id already exists, the password does not",
          "135:         comply with the policy in effect, or the authenticated user is not",
          "136:         allowed to grant one of the roles listed (where Member is a special",
          "137:         role that can always be granted); these conditions should be",
          "138:         detected before the fact so that a cleaner message can be printed.",
          "139:         '''",
          "",
          "[Added Lines]",
          "132:         # XXX Do not make this a normal method comment. Doing so makes",
          "133:         # this method publishable",
          "135:         # Creates a PortalMember and returns it. The properties argument",
          "136:         # can be a mapping with additional member properties. Raises an",
          "137:         # exception if the given id already exists, the password does not",
          "138:         # comply with the policy in effect, or the authenticated user is not",
          "139:         # allowed to grant one of the roles listed (where Member is a special",
          "140:         # role that can always be granted); these conditions should be",
          "141:         # detected before the fact so that a cleaner message can be printed.",
          "",
          "---------------"
        ]
      }
    }
  ]
}