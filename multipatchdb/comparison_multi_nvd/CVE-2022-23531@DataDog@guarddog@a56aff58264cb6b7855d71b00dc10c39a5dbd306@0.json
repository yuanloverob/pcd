{
  "cve_id": "CVE-2022-23531",
  "cve_desc": "GuardDog is a CLI tool to identify malicious PyPI packages. Versions prior to 0.1.5 are vulnerable to Relative Path Traversal when scanning a specially-crafted local PyPI package. Running GuardDog against a specially-crafted package can allow an attacker to write an arbitrary file on the machine where GuardDog is executed due to a path traversal vulnerability when extracting the .tar.gz file of the package being scanned, which exists by design in the tarfile.TarFile.extractall function. This issue is patched in version 0.1.5.",
  "repo": "DataDog/guarddog",
  "patch_hash": "a56aff58264cb6b7855d71b00dc10c39a5dbd306",
  "patch_info": {
    "commit_hash": "a56aff58264cb6b7855d71b00dc10c39a5dbd306",
    "repo": "DataDog/guarddog",
    "commit_url": "https://github.com/DataDog/guarddog/pull/89/commits/a56aff58264cb6b7855d71b00dc10c39a5dbd306",
    "files": [
      "guarddog/scanners/package_scanner.py",
      "poetry.lock",
      "pyproject.toml",
      "requirements.txt"
    ],
    "message": "Use tarsafe instead of built-in tarfile to extract archives",
    "before_after_code_files": [
      "guarddog/scanners/package_scanner.py||guarddog/scanners/package_scanner.py",
      "poetry.lock||poetry.lock"
    ]
  },
  "patch_diff": {
    "guarddog/scanners/package_scanner.py||guarddog/scanners/package_scanner.py": [
      "File: guarddog/scanners/package_scanner.py -> guarddog/scanners/package_scanner.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: import os",
      "3: import shutil",
      "4: import sys",
      "6: import tempfile",
      "7: import requests",
      "",
      "[Removed Lines]",
      "5: import tarfile",
      "",
      "[Added Lines]",
      "5: import tarsafe",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "44:         if os.path.exists(path):",
      "45:             if path.endswith('.tar.gz'):",
      "46:                 with tempfile.TemporaryDirectory() as tmpdirname:",
      "48:                     return self.analyzer.analyze_sourcecode(tmpdirname, rules=rules)",
      "49:             elif os.path.isdir(path):",
      "50:                 return self.analyzer.analyze_sourcecode(path, rules=rules)",
      "",
      "[Removed Lines]",
      "47:                     tarfile.open(path).extractall(tmpdirname)",
      "",
      "[Added Lines]",
      "47:                     tarsafe.open(path).extractall(tmpdirname)",
      "",
      "---------------"
    ],
    "poetry.lock||poetry.lock": [
      "File: poetry.lock -> poetry.lock",
      "--- Hunk 1 ---",
      "[Context before]",
      "526: optional = false",
      "527: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*\"",
      "529: [[package]]",
      "530: name = \"termcolor\"",
      "531: version = \"2.1.1\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "529: [[package]]",
      "530: name = \"tarsafe\"",
      "531: version = \"0.0.4\"",
      "532: description = \"A safe subclass of the TarFile class for interacting with tar files. Can be used as a direct drop-in replacement for safe usage of extractall()\"",
      "533: category = \"main\"",
      "534: optional = false",
      "535: python-versions = \">=3.6\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "618: [metadata]",
      "619: lock-version = \"1.1\"",
      "620: python-versions = \">=3.9, <4\"",
      "623: [metadata.files]",
      "624: attrs = [",
      "",
      "[Removed Lines]",
      "621: content-hash = \"a2ee2a3bf8cdebfd91939977044d2a626e5b54500965da9d66a70c3c9b71ca2c\"",
      "",
      "[Added Lines]",
      "629: content-hash = \"5f87d4bc67f5f12d7c9d697aa4e1cdde39f517e30e5c10745caee788464ac2a9\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "880:     {file = \"six-1.16.0-py2.py3-none-any.whl\", hash = \"sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254\"},",
      "881:     {file = \"six-1.16.0.tar.gz\", hash = \"sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926\"},",
      "882: ]",
      "883: termcolor = [",
      "884:     {file = \"termcolor-2.1.1-py3-none-any.whl\", hash = \"sha256:fa852e957f97252205e105dd55bbc23b419a70fec0085708fc0515e399f304fd\"},",
      "885:     {file = \"termcolor-2.1.1.tar.gz\", hash = \"sha256:67cee2009adc6449c650f6bcf3bdeed00c8ba53a8cda5362733c53e0a39fb70b\"},",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "891: tarsafe = [",
      "892:     {file = \"tarsafe-0.0.4-py3-none-any.whl\", hash = \"sha256:12903a81f2612c09d22117115301ea510944af5caa1e358636e0fc1d0e6134df\"},",
      "893:     {file = \"tarsafe-0.0.4.tar.gz\", hash = \"sha256:a376f4138005298c11c30cb60a5081fa2c09f44384c966106fbaeee3059e9ec5\"},",
      "894: ]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "98af5c8c1e9c15fa888c900252e76116b0ec25d1",
      "candidate_info": {
        "commit_hash": "98af5c8c1e9c15fa888c900252e76116b0ec25d1",
        "repo": "DataDog/guarddog",
        "commit_url": "https://github.com/DataDog/guarddog/commit/98af5c8c1e9c15fa888c900252e76116b0ec25d1",
        "files": [
          "guarddog/scanners/package_scanner.py",
          "poetry.lock",
          "pyproject.toml",
          "requirements.txt"
        ],
        "message": "Use tarsafe instead of built-in tarfile to extract archives (#89)\n\n* Use tarsafe instead of built-in tarfile to extract archives\n\n* Bump down Semgrep version to 0.112.1\n\nSee also https://github.com/returntocorp/semgrep/issues/6631",
        "before_after_code_files": [
          "guarddog/scanners/package_scanner.py||guarddog/scanners/package_scanner.py",
          "poetry.lock||poetry.lock"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/DataDog/guarddog/pull/89"
        ],
        "olp_code_files": {
          "patch": [
            "guarddog/scanners/package_scanner.py||guarddog/scanners/package_scanner.py",
            "poetry.lock||poetry.lock"
          ],
          "candidate": [
            "guarddog/scanners/package_scanner.py||guarddog/scanners/package_scanner.py",
            "poetry.lock||poetry.lock"
          ]
        }
      },
      "candidate_diff": {
        "guarddog/scanners/package_scanner.py||guarddog/scanners/package_scanner.py": [
          "File: guarddog/scanners/package_scanner.py -> guarddog/scanners/package_scanner.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: import os",
          "3: import shutil",
          "4: import sys",
          "6: import tempfile",
          "7: import requests",
          "",
          "[Removed Lines]",
          "5: import tarfile",
          "",
          "[Added Lines]",
          "5: import tarsafe",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:         if os.path.exists(path):",
          "45:             if path.endswith('.tar.gz'):",
          "46:                 with tempfile.TemporaryDirectory() as tmpdirname:",
          "48:                     return self.analyzer.analyze_sourcecode(tmpdirname, rules=rules)",
          "49:             elif os.path.isdir(path):",
          "50:                 return self.analyzer.analyze_sourcecode(path, rules=rules)",
          "",
          "[Removed Lines]",
          "47:                     tarfile.open(path).extractall(tmpdirname)",
          "",
          "[Added Lines]",
          "47:                     tarsafe.open(path).extractall(tmpdirname)",
          "",
          "---------------"
        ],
        "poetry.lock||poetry.lock": [
          "File: poetry.lock -> poetry.lock",
          "--- Hunk 1 ---",
          "[Context before]",
          "477: [[package]]",
          "478: name = \"semgrep\"",
          "480: description = \"Lightweight static analysis for many languages. Find bug variants with patterns that look like source code.\"",
          "481: category = \"main\"",
          "482: optional = false",
          "",
          "[Removed Lines]",
          "479: version = \"0.122.0\"",
          "",
          "[Added Lines]",
          "479: version = \"0.112.1\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "496: python-lsp-jsonrpc = \">=1.0.0,<1.1.0\"",
          "497: requests = \">=2.22,<3.0\"",
          "498: \"ruamel.yaml\" = \">=0.16.0,<0.18\"",
          "500: tqdm = \">=4.46,<5.0\"",
          "501: typing-extensions = \">=4.2,<5.0\"",
          "502: urllib3 = \">=1.26,<2.0\"",
          "",
          "[Removed Lines]",
          "499: tomli = \">=2.0.1,<2.1.0\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "526: optional = false",
          "527: python-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*\"",
          "529: [[package]]",
          "530: name = \"termcolor\"",
          "531: version = \"2.1.1\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "528: [[package]]",
          "529: name = \"tarsafe\"",
          "530: version = \"0.0.4\"",
          "531: description = \"A safe subclass of the TarFile class for interacting with tar files. Can be used as a direct drop-in replacement for safe usage of extractall()\"",
          "532: category = \"main\"",
          "533: optional = false",
          "534: python-versions = \">=3.6\"",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "618: [metadata]",
          "619: lock-version = \"1.1\"",
          "620: python-versions = \">=3.9, <4\"",
          "623: [metadata.files]",
          "624: attrs = [",
          "",
          "[Removed Lines]",
          "621: content-hash = \"a2ee2a3bf8cdebfd91939977044d2a626e5b54500965da9d66a70c3c9b71ca2c\"",
          "",
          "[Added Lines]",
          "628: content-hash = \"0faf892801caefce1e994f6fdee7254ac4e2e95ad947d7459b75113af80eed74\"",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "867:     {file = \"ruamel.yaml.clib-0.2.7.tar.gz\", hash = \"sha256:1f08fd5a2bea9c4180db71678e850b995d2a5f4537be0e94557668cf0f5f9497\"},",
          "868: ]",
          "869: semgrep = [",
          "874: ]",
          "875: setuptools = [",
          "876:     {file = \"setuptools-65.6.3-py3-none-any.whl\", hash = \"sha256:57f6f22bde4e042978bcd50176fdb381d7c21a9efa4041202288d3737a0c6a54\"},",
          "",
          "[Removed Lines]",
          "870:     {file = \"semgrep-0.122.0-cp37.cp38.cp39.py37.py38.py39-none-any.whl\", hash = \"sha256:c7002b9aba97deb6677f4cabfa5dcc8faef2808ce6a6f28ecdd70cd8e90b01b5\"},",
          "871:     {file = \"semgrep-0.122.0-cp37.cp38.cp39.py37.py38.py39-none-macosx_10_14_x86_64.whl\", hash = \"sha256:e3fb9956e2bb926cfeff52deafe4cec24d5f1e91fe6d3fc4f81e86ec452b2ad5\"},",
          "872:     {file = \"semgrep-0.122.0-cp37.cp38.cp39.py37.py38.py39-none-macosx_11_0_arm64.whl\", hash = \"sha256:6116391b0c8c87581d9d72113702b6f8c2938d799cdae7d71a845ec89249566c\"},",
          "873:     {file = \"semgrep-0.122.0.tar.gz\", hash = \"sha256:a4c7400eb8bec9fe8df25520d1ffcb5d78b87c73dc654f1c2aec1195789bc611\"},",
          "",
          "[Added Lines]",
          "877:     {file = \"semgrep-0.112.1-cp37.cp38.cp39.py37.py38.py39-none-any.whl\", hash = \"sha256:2a62bc6321d371dadc41df2c68678e87df807ddfa3d1faafb40bd0998abfe503\"},",
          "878:     {file = \"semgrep-0.112.1-cp37.cp38.cp39.py37.py38.py39-none-macosx_10_14_x86_64.whl\", hash = \"sha256:b690a84cbaa6a4670ff6c11a674818b8ad99736e89520a3c47d1542cc45e6d05\"},",
          "879:     {file = \"semgrep-0.112.1-cp37.cp38.cp39.py37.py38.py39-none-macosx_11_0_arm64.whl\", hash = \"sha256:bc2437f12e41ac5e28a303e463098565a3d948c7744f6745bdb0fea341ccdae1\"},",
          "880:     {file = \"semgrep-0.112.1.tar.gz\", hash = \"sha256:2140a0fd16f3ac0a0e330980613ba65fe58faea7808a965e219c4199bab96102\"},",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "880:     {file = \"six-1.16.0-py2.py3-none-any.whl\", hash = \"sha256:8abb2f1d86890a2dfb989f9a77cfcfd3e47c2a354b01111771326f8aa26e0254\"},",
          "881:     {file = \"six-1.16.0.tar.gz\", hash = \"sha256:1e61c37477a1626458e36f7b1d82aa5c9b094fa4802892072e49de9c60c4c926\"},",
          "882: ]",
          "883: termcolor = [",
          "884:     {file = \"termcolor-2.1.1-py3-none-any.whl\", hash = \"sha256:fa852e957f97252205e105dd55bbc23b419a70fec0085708fc0515e399f304fd\"},",
          "885:     {file = \"termcolor-2.1.1.tar.gz\", hash = \"sha256:67cee2009adc6449c650f6bcf3bdeed00c8ba53a8cda5362733c53e0a39fb70b\"},",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "890: tarsafe = [",
          "891:     {file = \"tarsafe-0.0.4-py3-none-any.whl\", hash = \"sha256:12903a81f2612c09d22117115301ea510944af5caa1e358636e0fc1d0e6134df\"},",
          "892:     {file = \"tarsafe-0.0.4.tar.gz\", hash = \"sha256:a376f4138005298c11c30cb60a5081fa2c09f44384c966106fbaeee3059e9ec5\"},",
          "893: ]",
          "",
          "---------------"
        ]
      }
    }
  ]
}