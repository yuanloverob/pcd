{
  "cve_id": "CVE-2017-7481",
  "cve_desc": "Ansible before versions 2.3.1.0 and 2.4.0.0 fails to properly mark lookup-plugin results as unsafe. If an attacker could control the results of lookup() calls, they could inject Unicode strings to be parsed by the jinja2 templating system, resulting in code execution. By default, the jinja2 templating language is now marked as 'unsafe' and is not evaluated.",
  "repo": "ansible/ansible",
  "patch_hash": "ed56f51f185a1ffd7ea57130d260098686fcc7c2",
  "patch_info": {
    "commit_hash": "ed56f51f185a1ffd7ea57130d260098686fcc7c2",
    "repo": "ansible/ansible",
    "commit_url": "https://github.com/ansible/ansible/commit/ed56f51f185a1ffd7ea57130d260098686fcc7c2",
    "files": [
      "docs/docsite/rst/intro_configuration.rst",
      "examples/ansible.cfg",
      "lib/ansible/constants.py",
      "lib/ansible/template/__init__.py"
    ],
    "message": "Fixing security issue with lookup returns not tainting the jinja2 environment\n\nCVE-2017-7481\n\nLookup returns wrap the result in unsafe, however when used through the\nstandard templar engine, this does not result in the jinja2 environment being\nmarked as unsafe as a whole. This means the lookup result looses the unsafe\nprotection and may become simple unicode strings, which can result in bad\nthings being re-templated.\n\nThis also adds a global lookup param and cfg options for lookups to allow\nunsafe returns, so users can force the previous (insecure) behavior.",
    "before_after_code_files": [
      "examples/ansible.cfg||examples/ansible.cfg",
      "lib/ansible/constants.py||lib/ansible/constants.py",
      "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py"
    ]
  },
  "patch_diff": {
    "examples/ansible.cfg||examples/ansible.cfg": [
      "File: examples/ansible.cfg -> examples/ansible.cfg",
      "--- Hunk 1 ---",
      "[Context before]",
      "282: # Controls showing custom stats at the end, off by default",
      "283: #show_custom_stats = True",
      "286: # possibly multiple sources (both static and dynamic)",
      "287: #inventory_ignore_extensions = ~, .orig, .bak, .ini, .cfg, .retry, .pyc, .pyo",
      "",
      "[Removed Lines]",
      "285: # Controlls which files to ignore when using a directory as inventory with",
      "",
      "[Added Lines]",
      "285: # Controls which files to ignore when using a directory as inventory with",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "294: # Setting to True keeps them under the ansible_facts namespace, the default is False",
      "295: #restrict_facts_namespace: True",
      "297: [privilege_escalation]",
      "298: #become=True",
      "299: #become_method=sudo",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "297: # When enabled, this option allows lookups (via variables like {{lookup('foo')}} or when used as",
      "298: # a loop with `with_foo`) to return data that is not marked \"unsafe\". This means the data may contain",
      "299: # jinja2 templating language which will be run through the templating engine.",
      "300: # ENABLING THIS COULD BE A SECURITY RISK",
      "301: #allow_unsafe_lookups = False",
      "",
      "---------------"
    ],
    "lib/ansible/constants.py||lib/ansible/constants.py": [
      "File: lib/ansible/constants.py -> lib/ansible/constants.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "236:                                        [\"~\", \".orig\", \".bak\", \".ini\", \".cfg\", \".retry\", \".pyc\", \".pyo\"], value_type='list')",
      "237: DEFAULT_VAR_COMPRESSION_LEVEL = get_config(p, DEFAULTS, 'var_compression_level', 'ANSIBLE_VAR_COMPRESSION_LEVEL', 0, value_type='integer')",
      "238: DEFAULT_INTERNAL_POLL_INTERVAL = get_config(p, DEFAULTS, 'internal_poll_interval', None, 0.001, value_type='float')",
      "239: ERROR_ON_MISSING_HANDLER  = get_config(p, DEFAULTS, 'error_on_missing_handler', 'ANSIBLE_ERROR_ON_MISSING_HANDLER', True, value_type='boolean')",
      "240: SHOW_CUSTOM_STATS = get_config(p, DEFAULTS, 'show_custom_stats', 'ANSIBLE_SHOW_CUSTOM_STATS', False, value_type='boolean')",
      "241: NAMESPACE_FACTS = get_config(p, DEFAULTS, 'restrict_facts_namespace', 'ANSIBLE_RESTRICT_FACTS', False, value_type='boolean')",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "239: DEFAULT_ALLOW_UNSAFE_LOOKUPS = get_config(p, DEFAULTS, 'allow_unsafe_lookups', None, False, value_type='boolean')",
      "",
      "---------------"
    ],
    "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py": [
      "File: lib/ansible/template/__init__.py -> lib/ansible/template/__init__.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "252:             loader=FileSystemLoader(self._basedir),",
      "253:         )",
      "255:         self.SINGLE_VAR = re.compile(r\"^%s\\s*(\\w*)\\s*%s$\" % (self.environment.variable_start_string, self.environment.variable_end_string))",
      "257:         self._clean_regex   = re.compile(r'(?:%s|%s|%s|%s)' % (",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "255:         # the current rendering context under which the templar class is working",
      "256:         self.cur_context = None",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "575:         if instance is not None:",
      "576:             wantlist = kwargs.pop('wantlist', False)",
      "578:             from ansible.utils.listify import listify_lookup_plugin_terms",
      "579:             loop_terms = listify_lookup_plugin_terms(terms=args, templar=self, loader=self._loader, fail_on_undefined=True, convert_bare=False)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "580:             allow_unsafe = kwargs.pop('allow_unsafe', C.DEFAULT_ALLOW_UNSAFE_LOOKUPS)",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "588:                                        \"original message: %s\" % (name, type(e), e))",
      "589:                 ran = None",
      "592:                 if wantlist:",
      "593:                     ran = wrap_var(ran)",
      "594:                 else:",
      "",
      "[Removed Lines]",
      "591:             if ran:",
      "",
      "[Added Lines]",
      "595:             if ran and not allow_unsafe:",
      "596:                 from ansible.vars.unsafe_proxy import UnsafeProxy, wrap_var",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "600:                         else:",
      "601:                             ran = wrap_var(ran)",
      "603:             return ran",
      "604:         else:",
      "605:             raise AnsibleError(\"lookup plugin (%s) not found\" % name)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "608:                 if self.cur_context:",
      "609:                     self.cur_context.unsafe = True",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "657:             jvars = AnsibleJ2Vars(self, t.globals)",
      "660:             rf = t.root_render_func(new_context)",
      "662:             try:",
      "",
      "[Removed Lines]",
      "659:             new_context = t.new_context(jvars, shared=True)",
      "",
      "[Added Lines]",
      "666:             self.cur_context = new_context = t.new_context(jvars, shared=True)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "72fc9f5cbe26f6cf37949d7f5e1c5896ec635821",
      "candidate_info": {
        "commit_hash": "72fc9f5cbe26f6cf37949d7f5e1c5896ec635821",
        "repo": "ansible/ansible",
        "commit_url": "https://github.com/ansible/ansible/commit/72fc9f5cbe26f6cf37949d7f5e1c5896ec635821",
        "files": [
          "lib/ansible/template/__init__.py"
        ],
        "message": "fix deprecation import ansible.vars.unsafe_proxy to ansible.utils.unsafe_proxy",
        "before_after_code_files": [
          "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py"
          ],
          "candidate": [
            "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py"
          ]
        }
      },
      "candidate_diff": {
        "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py": [
          "File: lib/ansible/template/__init__.py -> lib/ansible/template/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "593:                 ran = None",
          "595:             if ran and not allow_unsafe:",
          "597:                 if wantlist:",
          "598:                     ran = wrap_var(ran)",
          "599:                 else:",
          "",
          "[Removed Lines]",
          "596:                 from ansible.vars.unsafe_proxy import UnsafeProxy, wrap_var",
          "",
          "[Added Lines]",
          "596:                 from ansible.utils.unsafe_proxy import UnsafeProxy, wrap_var",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a1886911fcf4b691130cfc70dfc5daa5e07c46a3",
      "candidate_info": {
        "commit_hash": "a1886911fcf4b691130cfc70dfc5daa5e07c46a3",
        "repo": "ansible/ansible",
        "commit_url": "https://github.com/ansible/ansible/commit/a1886911fcf4b691130cfc70dfc5daa5e07c46a3",
        "files": [
          "docs/docsite/rst/intro_configuration.rst",
          "examples/ansible.cfg",
          "lib/ansible/constants.py",
          "lib/ansible/template/__init__.py"
        ],
        "message": "Fixing security issue with lookup returns not tainting the jinja2 environment\n\nCVE-2017-7481\n\nLookup returns wrap the result in unsafe, however when used through the\nstandard templar engine, this does not result in the jinja2 environment being\nmarked as unsafe as a whole. This means the lookup result looses the unsafe\nprotection and may become simple unicode strings, which can result in bad\nthings being re-templated.\n\nThis also adds a global lookup param and cfg options for lookups to allow\nunsafe returns, so users can force the previous (insecure) behavior.\n\n(cherry picked from commit 72dfb1570d22ac519350a8c09e76c458789120ed)",
        "before_after_code_files": [
          "examples/ansible.cfg||examples/ansible.cfg",
          "lib/ansible/constants.py||lib/ansible/constants.py",
          "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "examples/ansible.cfg||examples/ansible.cfg",
            "lib/ansible/constants.py||lib/ansible/constants.py",
            "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py"
          ],
          "candidate": [
            "examples/ansible.cfg||examples/ansible.cfg",
            "lib/ansible/constants.py||lib/ansible/constants.py",
            "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py"
          ]
        }
      },
      "candidate_diff": {
        "examples/ansible.cfg||examples/ansible.cfg": [
          "File: examples/ansible.cfg -> examples/ansible.cfg",
          "--- Hunk 1 ---",
          "[Context before]",
          "281: # Controls showing custom stats at the end, off by default",
          "282: #show_custom_stats = True",
          "285: # possibly multiple sources (both static and dynamic)",
          "286: #inventory_ignore_extensions = ~, .orig, .bak, .ini, .cfg, .retry, .pyc, .pyo",
          "",
          "[Removed Lines]",
          "284: # Controlls which files to ignore when using a directory as inventory with",
          "",
          "[Added Lines]",
          "284: # Controls which files to ignore when using a directory as inventory with",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "289: # only update this setting if you know how this works, otherwise it can break module execution",
          "290: #network_group_modules=['eos', 'nxos', 'ios', 'iosxr', 'junos', 'vyos']",
          "292: [privilege_escalation]",
          "293: #become=True",
          "294: #become_method=sudo",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "292: # When enabled, this option allows lookups (via variables like {{lookup('foo')}} or when used as",
          "293: # a loop with `with_foo`) to return data that is not marked \"unsafe\". This means the data may contain",
          "294: # jinja2 templating language which will be run through the templating engine.",
          "295: # ENABLING THIS COULD BE A SECURITY RISK",
          "296: #allow_unsafe_lookups = False",
          "",
          "---------------"
        ],
        "lib/ansible/constants.py||lib/ansible/constants.py": [
          "File: lib/ansible/constants.py -> lib/ansible/constants.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "234: DEFAULT_INVENTORY_IGNORE  = get_config(p, DEFAULTS, 'inventory_ignore_extensions', 'ANSIBLE_INVENTORY_IGNORE', [\"~\", \".orig\", \".bak\", \".ini\", \".cfg\", \".retry\", \".pyc\", \".pyo\"], value_type='list')",
          "235: DEFAULT_VAR_COMPRESSION_LEVEL = get_config(p, DEFAULTS, 'var_compression_level', 'ANSIBLE_VAR_COMPRESSION_LEVEL', 0, value_type='integer')",
          "236: DEFAULT_INTERNAL_POLL_INTERVAL = get_config(p, DEFAULTS, 'internal_poll_interval', None, 0.001, value_type='float')",
          "237: ERROR_ON_MISSING_HANDLER  = get_config(p, DEFAULTS, 'error_on_missing_handler', 'ANSIBLE_ERROR_ON_MISSING_HANDLER', True, value_type='boolean')",
          "238: SHOW_CUSTOM_STATS = get_config(p, DEFAULTS, 'show_custom_stats', 'ANSIBLE_SHOW_CUSTOM_STATS', False, value_type='boolean')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "237: DEFAULT_ALLOW_UNSAFE_LOOKUPS = get_config(p, DEFAULTS, 'allow_unsafe_lookups', None, False, value_type='boolean')",
          "",
          "---------------"
        ],
        "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py": [
          "File: lib/ansible/template/__init__.py -> lib/ansible/template/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "251:             loader=FileSystemLoader(self._basedir),",
          "252:         )",
          "254:         self.SINGLE_VAR = re.compile(r\"^%s\\s*(\\w*)\\s*%s$\" % (self.environment.variable_start_string, self.environment.variable_end_string))",
          "256:         self.block_start    = self.environment.block_start_string",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "254:         # the current rendering context under which the templar class is working",
          "255:         self.cur_context = None",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "565:         if instance is not None:",
          "566:             wantlist = kwargs.pop('wantlist', False)",
          "568:             from ansible.utils.listify import listify_lookup_plugin_terms",
          "569:             loop_terms = listify_lookup_plugin_terms(terms=args, templar=self, loader=self._loader, fail_on_undefined=True, convert_bare=False)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "570:             allow_unsafe = kwargs.pop('allow_unsafe', C.DEFAULT_ALLOW_UNSAFE_LOOKUPS)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "577:                     raise AnsibleError(\"An unhandled exception occurred while running the lookup plugin '%s'. Error was a %s, original message: %s\" % (name, type(e), e))",
          "578:                 ran = None",
          "581:                 if wantlist:",
          "582:                     ran = wrap_var(ran)",
          "583:                 else:",
          "",
          "[Removed Lines]",
          "580:             if ran:",
          "",
          "[Added Lines]",
          "584:             if ran and not allow_unsafe:",
          "585:                 from ansible.vars.unsafe_proxy import UnsafeProxy, wrap_var",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "589:                         else:",
          "590:                             ran = wrap_var(ran)",
          "592:             return ran",
          "593:         else:",
          "594:             raise AnsibleError(\"lookup plugin (%s) not found\" % name)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "597:                 if self.cur_context:",
          "598:                     self.cur_context.unsafe = True",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "646:             jvars = AnsibleJ2Vars(self, t.globals)",
          "649:             rf = t.root_render_func(new_context)",
          "651:             try:",
          "",
          "[Removed Lines]",
          "648:             new_context = t.new_context(jvars, shared=True)",
          "",
          "[Added Lines]",
          "655:             self.cur_context = new_context = t.new_context(jvars, shared=True)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd30f5328986f9e1da434474481f32bf918a600c",
      "candidate_info": {
        "commit_hash": "fd30f5328986f9e1da434474481f32bf918a600c",
        "repo": "ansible/ansible",
        "commit_url": "https://github.com/ansible/ansible/commit/fd30f5328986f9e1da434474481f32bf918a600c",
        "files": [
          "docsite/rst/intro_configuration.rst",
          "examples/ansible.cfg",
          "lib/ansible/constants.py",
          "lib/ansible/template/__init__.py"
        ],
        "message": "Fixing security issue with lookup returns not tainting the jinja2 environment\n\nCVE-2017-7481\n\nLookup returns wrap the result in unsafe, however when used through the\nstandard templar engine, this does not result in the jinja2 environment being\nmarked as unsafe as a whole. This means the lookup result looses the unsafe\nprotection and may become simple unicode strings, which can result in bad\nthings being re-templated.\n\nThis also adds a global lookup param and cfg options for lookups to allow\nunsafe returns, so users can force the previous (insecure) behavior.\n\n(cherry picked from commit 72dfb1570d22ac519350a8c09e76c458789120ed)\n(cherry picked from commit fadccda7c7a2e8d0650f4dee8e3cea93cf17acfd)",
        "before_after_code_files": [
          "examples/ansible.cfg||examples/ansible.cfg",
          "lib/ansible/constants.py||lib/ansible/constants.py",
          "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "examples/ansible.cfg||examples/ansible.cfg",
            "lib/ansible/constants.py||lib/ansible/constants.py",
            "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py"
          ],
          "candidate": [
            "examples/ansible.cfg||examples/ansible.cfg",
            "lib/ansible/constants.py||lib/ansible/constants.py",
            "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py"
          ]
        }
      },
      "candidate_diff": {
        "examples/ansible.cfg||examples/ansible.cfg": [
          "File: examples/ansible.cfg -> examples/ansible.cfg",
          "--- Hunk 1 ---",
          "[Context before]",
          "252: # set to 0 for unlimited (RAM may suffer!).",
          "253: #max_diff_size = 1048576",
          "255: [privilege_escalation]",
          "256: #become=True",
          "257: #become_method=sudo",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "255: # When enabled, this option allows lookups (via variables like {{lookup('foo')}} or when used as",
          "256: # a loop with `with_foo`) to return data that is not marked \"unsafe\". This means the data may contain",
          "257: # jinja2 templating language which will be run through the templating engine.",
          "258: # ENABLING THIS COULD BE A SECURITY RISK",
          "259: #allow_unsafe_lookups = False",
          "",
          "---------------"
        ],
        "lib/ansible/constants.py||lib/ansible/constants.py": [
          "File: lib/ansible/constants.py -> lib/ansible/constants.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "182: DEFAULT_FORCE_HANDLERS    = get_config(p, DEFAULTS, 'force_handlers', 'ANSIBLE_FORCE_HANDLERS', False, boolean=True)",
          "183: DEFAULT_INVENTORY_IGNORE  = get_config(p, DEFAULTS, 'inventory_ignore_extensions', 'ANSIBLE_INVENTORY_IGNORE', [\"~\", \".orig\", \".bak\", \".ini\", \".cfg\", \".retry\", \".pyc\", \".pyo\"], islist=True)",
          "184: DEFAULT_VAR_COMPRESSION_LEVEL = get_config(p, DEFAULTS, 'var_compression_level', 'ANSIBLE_VAR_COMPRESSION_LEVEL', 0, integer=True)",
          "186: # static includes",
          "187: DEFAULT_TASK_INCLUDES_STATIC    = get_config(p, DEFAULTS, 'task_includes_static', 'ANSIBLE_TASK_INCLUDES_STATIC', False, boolean=True)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "185: DEFAULT_ALLOW_UNSAFE_LOOKUPS = get_config(p, DEFAULTS, 'allow_unsafe_lookups', None, False, boolean=True)",
          "",
          "---------------"
        ],
        "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py": [
          "File: lib/ansible/template/__init__.py -> lib/ansible/template/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "213:             loader=FileSystemLoader(self._basedir),",
          "214:         )",
          "216:         self.SINGLE_VAR = re.compile(r\"^%s\\s*(\\w*)\\s*%s$\" % (self.environment.variable_start_string, self.environment.variable_end_string))",
          "218:         self.block_start    = self.environment.block_start_string",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "216:         # the current rendering context under which the templar class is working",
          "217:         self.cur_context = None",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "483:         if instance is not None:",
          "484:             wantlist = kwargs.pop('wantlist', False)",
          "486:             from ansible.utils.listify import listify_lookup_plugin_terms",
          "487:             loop_terms = listify_lookup_plugin_terms(terms=args, templar=self, loader=self._loader, fail_on_undefined=True, convert_bare=False)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "488:             allow_unsafe = kwargs.pop('allow_unsafe', C.DEFAULT_ALLOW_UNSAFE_LOOKUPS)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "495:                     raise AnsibleError(\"An unhandled exception occurred while running the lookup plugin '%s'. Error was a %s, original message: %s\" % (name, type(e), e))",
          "496:                 ran = None",
          "499:                 from ansible.vars.unsafe_proxy import UnsafeProxy, wrap_var",
          "500:                 if wantlist:",
          "501:                     ran = wrap_var(ran)",
          "",
          "[Removed Lines]",
          "498:             if ran:",
          "",
          "[Added Lines]",
          "502:             if ran and not allow_unsafe:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "508:                         else:",
          "509:                             ran = wrap_var(ran)",
          "511:             return ran",
          "512:         else:",
          "513:             raise AnsibleError(\"lookup plugin (%s) not found\" % name)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "515:                 if self.cur_context:",
          "516:                     self.cur_context.unsafe = True",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "567:             jvars = AnsibleJ2Vars(self, t.globals)",
          "570:             rf = t.root_render_func(new_context)",
          "572:             try:",
          "",
          "[Removed Lines]",
          "569:             new_context = t.new_context(jvars, shared=True)",
          "",
          "[Added Lines]",
          "575:             self.cur_context = new_context = t.new_context(jvars, shared=True)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f0e348f5eeb70c1fb3127d90891da43b5c0a9d29",
      "candidate_info": {
        "commit_hash": "f0e348f5eeb70c1fb3127d90891da43b5c0a9d29",
        "repo": "ansible/ansible",
        "commit_url": "https://github.com/ansible/ansible/commit/f0e348f5eeb70c1fb3127d90891da43b5c0a9d29",
        "files": [
          "docsite/rst/intro_configuration.rst",
          "examples/ansible.cfg",
          "lib/ansible/constants.py",
          "lib/ansible/template/__init__.py"
        ],
        "message": "Fixing security issue with lookup returns not tainting the jinja2 environment\n\nCVE-2017-7481\n\nLookup returns wrap the result in unsafe, however when used through the\nstandard templar engine, this does not result in the jinja2 environment being\nmarked as unsafe as a whole. This means the lookup result looses the unsafe\nprotection and may become simple unicode strings, which can result in bad\nthings being re-templated.\n\nThis also adds a global lookup param and cfg options for lookups to allow\nunsafe returns, so users can force the previous (insecure) behavior.\n\n(cherry picked from commit 72dfb1570d22ac519350a8c09e76c458789120ed)",
        "before_after_code_files": [
          "examples/ansible.cfg||examples/ansible.cfg",
          "lib/ansible/constants.py||lib/ansible/constants.py",
          "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "examples/ansible.cfg||examples/ansible.cfg",
            "lib/ansible/constants.py||lib/ansible/constants.py",
            "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py"
          ],
          "candidate": [
            "examples/ansible.cfg||examples/ansible.cfg",
            "lib/ansible/constants.py||lib/ansible/constants.py",
            "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py"
          ]
        }
      },
      "candidate_diff": {
        "examples/ansible.cfg||examples/ansible.cfg": [
          "File: examples/ansible.cfg -> examples/ansible.cfg",
          "--- Hunk 1 ---",
          "[Context before]",
          "265: # set to 0 for unlimited (RAM may suffer!).",
          "266: #max_diff_size = 1048576",
          "268: [privilege_escalation]",
          "269: #become=True",
          "270: #become_method=sudo",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "268: # When enabled, this option allows lookups (via variables like {{lookup('foo')}} or when used as",
          "269: # a loop with `with_foo`) to return data that is not marked \"unsafe\". This means the data may contain",
          "270: # jinja2 templating language which will be run through the templating engine.",
          "271: # ENABLING THIS COULD BE A SECURITY RISK",
          "272: #allow_unsafe_lookups = False",
          "",
          "---------------"
        ],
        "lib/ansible/constants.py||lib/ansible/constants.py": [
          "File: lib/ansible/constants.py -> lib/ansible/constants.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "191: DEFAULT_INVENTORY_IGNORE  = get_config(p, DEFAULTS, 'inventory_ignore_extensions', 'ANSIBLE_INVENTORY_IGNORE', [\"~\", \".orig\", \".bak\", \".ini\", \".cfg\", \".retry\", \".pyc\", \".pyo\"], islist=True)",
          "192: DEFAULT_VAR_COMPRESSION_LEVEL = get_config(p, DEFAULTS, 'var_compression_level', 'ANSIBLE_VAR_COMPRESSION_LEVEL', 0, integer=True)",
          "193: DEFAULT_INTERNAL_POLL_INTERVAL = get_config(p, DEFAULTS, 'internal_poll_interval', None, 0.001, floating=True)",
          "194: ERROR_ON_MISSING_HANDLER  = get_config(p, DEFAULTS, 'error_on_missing_handler', 'ANSIBLE_ERROR_ON_MISSING_HANDLER', True, boolean=True)",
          "196: # static includes",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "194: DEFAULT_ALLOW_UNSAFE_LOOKUPS = get_config(p, DEFAULTS, 'allow_unsafe_lookups', None, False, boolean=True)",
          "",
          "---------------"
        ],
        "lib/ansible/template/__init__.py||lib/ansible/template/__init__.py": [
          "File: lib/ansible/template/__init__.py -> lib/ansible/template/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "213:             loader=FileSystemLoader(self._basedir),",
          "214:         )",
          "216:         self.SINGLE_VAR = re.compile(r\"^%s\\s*(\\w*)\\s*%s$\" % (self.environment.variable_start_string, self.environment.variable_end_string))",
          "218:         self.block_start    = self.environment.block_start_string",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "216:         # the current rendering context under which the templar class is working",
          "217:         self.cur_context = None",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "494:         if instance is not None:",
          "495:             wantlist = kwargs.pop('wantlist', False)",
          "497:             from ansible.utils.listify import listify_lookup_plugin_terms",
          "498:             loop_terms = listify_lookup_plugin_terms(terms=args, templar=self, loader=self._loader, fail_on_undefined=True, convert_bare=False)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "499:             allow_unsafe = kwargs.pop('allow_unsafe', C.DEFAULT_ALLOW_UNSAFE_LOOKUPS)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "506:                     raise AnsibleError(\"An unhandled exception occurred while running the lookup plugin '%s'. Error was a %s, original message: %s\" % (name, type(e), e))",
          "507:                 ran = None",
          "510:                 from ansible.vars.unsafe_proxy import UnsafeProxy, wrap_var",
          "511:                 if wantlist:",
          "512:                     ran = wrap_var(ran)",
          "",
          "[Removed Lines]",
          "509:             if ran:",
          "",
          "[Added Lines]",
          "513:             if ran and not allow_unsafe:",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "519:                         else:",
          "520:                             ran = wrap_var(ran)",
          "522:             return ran",
          "523:         else:",
          "524:             raise AnsibleError(\"lookup plugin (%s) not found\" % name)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "526:                 if self.cur_context:",
          "527:                     self.cur_context.unsafe = True",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "577:             jvars = AnsibleJ2Vars(self, t.globals)",
          "580:             rf = t.root_render_func(new_context)",
          "582:             try:",
          "",
          "[Removed Lines]",
          "579:             new_context = t.new_context(jvars, shared=True)",
          "",
          "[Added Lines]",
          "585:             self.cur_context = new_context = t.new_context(jvars, shared=True)",
          "",
          "---------------"
        ]
      }
    }
  ]
}