{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0c2e70058fe3e5f5071ce4677017cb3eaf2511c3",
      "candidate_info": {
        "commit_hash": "0c2e70058fe3e5f5071ce4677017cb3eaf2511c3",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/0c2e70058fe3e5f5071ce4677017cb3eaf2511c3",
        "files": [
          "lib/csv.c"
        ],
        "message": "lib/csv: Fix some memleak corner-cases (reported by OSS-Fuzz)\n\nFixes OSS-Fuzz#39925\n\n(cherry picked from commit ff34d213cad9c2b24460aecc206520bac5411bdc)",
        "before_after_code_files": [
          "lib/csv.c||lib/csv.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/csv.c||lib/csv.c": [
          "File: lib/csv.c -> lib/csv.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:  return record;",
          "117: rfc_4180_parsing:",
          "118:  if (in.len >= 2 && in.s[in.len - 2] == '\\r' && in.s[in.len - 1] == '\\n')",
          "119:   in.len -= 2;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "118:  parse_flags |= CSV_DUP_FIELDS;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "180:    field.len = c - field.s;",
          "183:     goto oom;",
          "185:    last = &(*last)->next;",
          "187:    if (ch == lim - 1)",
          "",
          "[Removed Lines]",
          "182:    if (!push_csv_field(&field, last, parse_flags & (~CSV_DUP_FIELDS)))",
          "",
          "[Added Lines]",
          "184:    if (!push_csv_field(&field, last, parse_flags)) {",
          "185:     free_f(field.s);",
          "187:    }",
          "189:    free_f(field.s);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "56eacbe95ff9958945b81d577bb142792aa1fea9",
      "candidate_info": {
        "commit_hash": "56eacbe95ff9958945b81d577bb142792aa1fea9",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/56eacbe95ff9958945b81d577bb142792aa1fea9",
        "files": [
          "receive.c"
        ],
        "message": "Fix possible bogus exec_msg_threshold reporting\n\nReset the exec_msg_threshold stack (longest found actions) when a parse error is detected (before running the actual scritp). Otherwise we may inherit old records from previous runs\n\n(cherry picked from commit e7ed29e50f8dc76717fe38281945aa331958db25)",
        "before_after_code_files": [
          "receive.c||receive.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "receive.c||receive.c": [
          "File: receive.c -> receive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "171:    LM_ERR(\"no via found in request\\n\");",
          "172:    update_stat( err_reqs, 1);",
          "174:   }",
          "",
          "[Removed Lines]",
          "173:    goto parse_error;",
          "",
          "[Added Lines]",
          "175:    goto parse_error_reset;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "192:   if (existing_context == NULL)",
          "194:   current_processing_ctx = ctx;",
          "",
          "[Removed Lines]",
          "193:    prepare_context( ctx, parse_error );",
          "",
          "[Added Lines]",
          "195:    prepare_context( ctx, parse_error_reset );",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "226:    LM_ERR(\"no via found in reply\\n\");",
          "227:    update_stat( err_rpls, 1);",
          "229:   }",
          "",
          "[Removed Lines]",
          "228:    goto parse_error;",
          "",
          "[Added Lines]",
          "230:    goto parse_error_reset;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "236:   if (existing_context == NULL)",
          "238:   current_processing_ctx = ctx;",
          "",
          "[Removed Lines]",
          "237:    prepare_context( ctx, parse_error );",
          "",
          "[Added Lines]",
          "239:    prepare_context( ctx, parse_error_reset );",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "294:  if (in_buff.s != buf)",
          "295:   pkg_free(in_buff.s);",
          "296:  return 0;",
          "297: parse_error:",
          "298:  exec_parse_err_cb(msg);",
          "299:  free_sip_msg(msg);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "299: parse_error_reset:",
          "300:  reset_longest_action_list(execmsgthreshold);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c32349f4833bf4b57dc3597346fdafc241a301ec",
      "candidate_info": {
        "commit_hash": "c32349f4833bf4b57dc3597346fdafc241a301ec",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/c32349f4833bf4b57dc3597346fdafc241a301ec",
        "files": [
          "parser/parse_uri.c"
        ],
        "message": "parse_uri: Avoid dereferencing invalid memory on error logging\n\n(cherry picked from commit 99c9a828dd80f2874e89a520150565fa9e9162c7)\n(cherry picked from commit 7df9ff7176497c3109ac0648f381aad751ec90dd)",
        "before_after_code_files": [
          "parser/parse_uri.c||parser/parse_uri.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "parser/parse_uri.c||parser/parse_uri.c": [
          "File: parser/parse_uri.c -> parser/parse_uri.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1604: error_bad_char:",
          "1605:  LM_ERR(\"bad char '%c' in state %d\"",
          "1606:    \" parsed: <%.*s> (%d) / <%.*s> (%d)\\n\",",
          "1609:  goto error_exit;",
          "1610: error_bad_host:",
          "1611:  LM_ERR(\"bad host in uri (error at char %c in\"",
          "1612:    \" state %d) parsed: <%.*s>(%d) /<%.*s> (%d)\\n\",",
          "1615:  goto error_exit;",
          "1616: error_bad_port:",
          "1617:  LM_ERR(\"bad port in uri (error at char '%c' in\"",
          "1618:    \" state %d) parsed: <%.*s>(%d) /<%.*s> (%d)\\n\",",
          "1621:  goto error_exit;",
          "1622: error_bad_uri:",
          "1623:  LM_ERR(\"bad uri, state %d parsed: <%.*s> (%d) / <%.*s> (%d)\\n\",",
          "",
          "[Removed Lines]",
          "1608:    len, ZSW(buf), len);",
          "1614:    len, ZSW(buf), len);",
          "1620:    len, ZSW(buf), len);",
          "",
          "[Added Lines]",
          "1607:    p < end ? *p : *(buf+len-1), state, (int)(p-buf), ZSW(buf),",
          "1608:    (int)(p-buf), len, ZSW(buf), len);",
          "1613:    p < end ? *p : *(buf+len-1), state, (int)(p-buf), ZSW(buf),",
          "1614:    (int)(p-buf), len, ZSW(buf), len);",
          "1619:    p < end ? *p : *(buf+len-1), state, (int)(p-buf), ZSW(buf),",
          "1620:    (int)(p-buf), len, ZSW(buf), len);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "1d314b2ad07046e3a80b0c1de59daab3cd4e08f2",
      "candidate_info": {
        "commit_hash": "1d314b2ad07046e3a80b0c1de59daab3cd4e08f2",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/1d314b2ad07046e3a80b0c1de59daab3cd4e08f2",
        "files": [
          "parser/parse_content.c"
        ],
        "message": "parse_content_length(): Fix integer overflow edge-case (OSS-Fuzz)\n\nThis completes commit 7cab422e2f, where it was still possible to cause\nan integer overflow even after the fix, with input such as 2147483609,\ndue to missing parentheses in the number equation.\n\nFixes OSS-Fuzz#52112\n\n(cherry picked from commit 837263b47dcb33909b109b5cc050c1ab4a6c64a2)",
        "before_after_code_files": [
          "parser/parse_content.c||parser/parse_content.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "parser/parse_content.c||parser/parse_content.c": [
          "File: parser/parse_content.c -> parser/parse_content.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "242:  number = 0;",
          "243:  while (p<end && *p>='0' && *p<='9') {",
          "247:     (int)(p-buffer),(int)(end-buffer), buffer);",
          "249:   }",
          "252:   size ++;",
          "253:   p++;",
          "254:  }",
          "",
          "[Removed Lines]",
          "245:   if (number > 214748363) {",
          "246:    LM_ERR(\"integer overflow risk at pos %d in len number [%.*s]\\n\",",
          "248:    return 0;",
          "251:   number = number*10 + (*p)-'0';",
          "",
          "[Added Lines]",
          "245:   if (number >= INT_MAX/10) {",
          "246:    LM_ERR(\"integer overflow risk at pos %d in length value [%.*s]\\n\",",
          "248:    return NULL;",
          "251:   number = number*10 + ((*p)-'0');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268:  return p;",
          "269: error:",
          "270:  LM_ERR(\"parse error near char [%d][%c]\\n\",*p,*p);",
          "272: }",
          "",
          "[Removed Lines]",
          "271:  return 0;",
          "",
          "[Added Lines]",
          "271:  return NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a778bf8cf047a5836ffde69135e82a7e4c94df76",
      "candidate_info": {
        "commit_hash": "a778bf8cf047a5836ffde69135e82a7e4c94df76",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/a778bf8cf047a5836ffde69135e82a7e4c94df76",
        "files": [
          "modules/b2b_logic/logic.c"
        ],
        "message": "Merge pull request #2929 from nikbyte/b2b_fix_transfer_rollback\n\nB2B: Fix rollback of transfer in case of using of separate media server url\n(cherry picked from commit e6a848b65b3e16baf80820a90e2d2dd1fdfb3243)",
        "before_after_code_files": [
          "modules/b2b_logic/logic.c||modules/b2b_logic/logic.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_logic/logic.c||modules/b2b_logic/logic.c": [
          "File: modules/b2b_logic/logic.c -> modules/b2b_logic/logic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "80: int post_cb_sanity_check(b2bl_tuple_t **tuple, unsigned int hash_index, unsigned int local_index,",
          "81:    b2bl_entity_id_t **entity, int etype, str *ekey);",
          "82: int udh_to_uri(str user, str host, str port, str* uri);",
          "83: static str method_invite= {INVITE, INVITE_LEN};",
          "84: static str method_ack   = {ACK, ACK_LEN};",
          "85: static str method_bye   = {BYE, BYE_LEN};",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "84: static b2bl_entity_id_t* b2bl_new_client(str* to_uri, str *proxy, str* from_uri,",
          "85:    b2bl_tuple_t* tuple, str* ssid, str* hdrs, str *adv_ct, struct sip_msg* msg);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "486: int process_bridge_dialog_end(b2bl_tuple_t* tuple, unsigned int hash_index,",
          "487:  int entity_no, b2bl_entity_id_t* bentity)",
          "488: {",
          "490:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "493:  b2bl_entity_id_t* entity;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "494:   b2b_mark_todel(tuple);",
          "495:  }",
          "496:  else",
          "498:  {",
          "500:   if(tuple->bridge_entities[2])",
          "",
          "[Removed Lines]",
          "497:  if(entity_no == 1)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "503:    b2bl_delete_entity(bentity, tuple, hash_index, 1);",
          "511:   }",
          "512:   else",
          "513:   {",
          "",
          "[Removed Lines]",
          "505:    tuple->bridge_entities[1] = tuple->bridge_entities[0];",
          "506:    tuple->bridge_entities[0] = tuple->bridge_entities[2];",
          "507:    tuple->bridge_entities[2] = NULL;",
          "509:    tuple->bridge_entities[1]->peer = tuple->bridge_entities[0];",
          "510:    tuple->bridge_entities[0]->peer = tuple->bridge_entities[1];",
          "",
          "[Added Lines]",
          "512:    entity =  b2bl_new_client(&tuple->bridge_entities[2]->to_uri,",
          "513:     &tuple->bridge_entities[2]->proxy, &tuple->bridge_entities[0]->from_uri, tuple,",
          "514:     &tuple->bridge_entities[2]->scenario_id, &tuple->bridge_entities[2]->hdrs, NULL, NULL);",
          "516:    if(entity == NULL)",
          "517:    {",
          "518:     LM_ERR(\"Failed to generate new client\\n\");",
          "519:     return -1;",
          "520:    }",
          "521:    entity->no = 1;",
          "522:    b2bl_delete_entity(tuple->bridge_entities[2], tuple, hash_index, 1);",
          "523:    if (0 != b2bl_add_client(tuple, entity))",
          "524:     return -1;",
          "527:    tuple->bridge_entities[2]= entity;",
          "529:    return 1; // Don't delete tuple",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "528:     tuple->state = B2B_NOTDEF_STATE;",
          "529:     tuple->bridge_initiator = 0;",
          "530:    } else {",
          "532:     b2b_end_dialog(tuple->bridge_entities[0], tuple, hash_index);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "550:     return 1; // Don't delete tuple",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "535:   }",
          "536:  }",
          "537:  else",
          "538:  {",
          "540:   b2b_end_dialog(tuple->bridge_entities[0], tuple, hash_index);",
          "541:   b2b_end_dialog(tuple->bridge_entities[1], tuple, hash_index);",
          "542:   b2b_mark_todel(tuple);",
          "543:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "561:   if(tuple->bridge_flags & B2BL_BR_FLAG_RETURN_AFTER_FAILURE &&",
          "562:    tuple->bridge_initiator != 0 && tuple->bridge_initiator->peer)",
          "563:   {",
          "565:    b2bl_delete_entity(bentity, tuple, hash_index, 1);",
          "568:    b2b_end_dialog(tuple->bridge_entities[1], tuple, hash_index);",
          "570:    tuple->bridge_entities[2] = NULL;",
          "571:    tuple->bridge_entities[1] = tuple->bridge_entities[0];",
          "572:    tuple->bridge_entities[0] = tuple->bridge_initiator;",
          "574:    tuple->bridge_entities[1]->peer = tuple->bridge_entities[0];",
          "575:    tuple->bridge_entities[0]->peer = tuple->bridge_entities[1];",
          "578:    tuple->state = B2B_NOTDEF_STATE;",
          "579:    tuple->bridge_initiator = 0;",
          "581:    return 1; // Don't delete tuple",
          "582:   } else {",
          "584:    b2b_end_dialog(tuple->bridge_entities[0], tuple, hash_index);",
          "585:    b2b_end_dialog(tuple->bridge_entities[1], tuple, hash_index);",
          "586:    b2b_mark_todel(tuple);",
          "587:   }",
          "588:  }",
          "590:  {",
          "594:   b2b_end_dialog(tuple->bridge_entities[2], tuple, hash_index);",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "551:  int entity_no;",
          "552:  b2b_rpl_data_t rpl_data;",
          "556:  {",
          "559:  }",
          "561:  memset(&rpl_data, 0, sizeof(b2b_rpl_data_t));",
          "",
          "[Removed Lines]",
          "554:  entity_no = bridge_get_entityno(tuple, entity);",
          "555:  if(entity_no < 0)",
          "557:   LM_ERR(\"No match found\\n\");",
          "558:   return -1;",
          "",
          "[Added Lines]",
          "607:  if (tuple->bridge_flags & B2BL_BR_FLAG_RETURN_AFTER_FAILURE &&",
          "608:   entity && tuple->bridge_initiator == entity)",
          "610:   entity_no = 3; // Bridge initiator",
          "611:  } else {",
          "612:   entity_no = bridge_get_entityno(tuple, entity);",
          "613:   if(entity_no < 0)",
          "614:   {",
          "615:    LM_ERR(\"No match found\\n\");",
          "616:    return -1;",
          "617:   }",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "629:    tuple->state = B2B_NONE;",
          "630:    break;",
          "631:   case 1: break;",
          "632:   default:",
          "633:    LM_ERR(\"unexpected entity_no [%d] for tuple [%p]\\n\",",
          "634:     entity_no, tuple);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "691:   case 2: break;",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "1261:   }",
          "1265:    tuple->bridge_flags & B2BL_BR_FLAG_NOTIFY && tuple->bridge_initiator != 0)",
          "1266:   {",
          "1267:    process_bridge_notify(tuple->bridge_initiator, cur_route_ctx.hash_index, msg);",
          "",
          "[Removed Lines]",
          "1264:   if(statuscode >= 200 && entity == tuple->bridge_entities[1] &&",
          "",
          "[Added Lines]",
          "1324:   if(statuscode >= 200 &&",
          "1325:    entity == (tuple->bridge_entities[2]?tuple->bridge_entities[2]:tuple->bridge_entities[1]) &&",
          "",
          "---------------"
        ]
      }
    }
  ]
}