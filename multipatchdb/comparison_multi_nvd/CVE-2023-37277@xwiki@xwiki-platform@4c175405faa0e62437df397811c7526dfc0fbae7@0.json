{
  "cve_id": "CVE-2023-37277",
  "cve_desc": "XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. The REST API allows executing all actions via POST requests and accepts `text/plain`, `multipart/form-data` or `application/www-form-urlencoded` as content types which can be sent via regular HTML forms, thus allowing cross-site request forgery. With the interaction of a user with programming rights, this allows remote code execution through script macros and thus impacts the integrity, availability and confidentiality of the whole XWiki installation. For regular cookie-based authentication, the vulnerability is mitigated by SameSite cookie restrictions but as of March 2023, these are not enabled by default in Firefox and Safari. The vulnerability has been patched in XWiki 14.10.8 and 15.2 by requiring a CSRF token header for certain request types that are susceptible to CSRF attacks.\n\n",
  "repo": "xwiki/xwiki-platform",
  "patch_hash": "4c175405faa0e62437df397811c7526dfc0fbae7",
  "patch_info": {
    "commit_hash": "4c175405faa0e62437df397811c7526dfc0fbae7",
    "repo": "xwiki/xwiki-platform",
    "commit_url": "https://github.com/xwiki/xwiki-platform/commit/4c175405faa0e62437df397811c7526dfc0fbae7",
    "files": [
      "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java",
      "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
      "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js",
      "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java",
      "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java",
      "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java",
      "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java",
      "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java",
      "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java",
      "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js"
    ],
    "message": "XWIKI-20135: Require a CSRF token for some request types in the REST API\n\n* Require a CSRF token in the XWiki-Form-Token header in content types\n  allowed in simple requests.\n* Add integration tests to check that the check is indeed working.\n* Automatically add the CSRF token header in same-origin requests\n  initiated from JavaScript.\n* Add an integration test to check that the form token is correctly\n  added and fetch requests are still working.\n\nCo-authored-by: Marius Dumitru Florea <marius@xwiki.com>",
    "before_after_code_files": [
      "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java",
      "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
      "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js",
      "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java",
      "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java",
      "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java",
      "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java",
      "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java",
      "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java",
      "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js||xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js"
    ]
  },
  "patch_diff": {
    "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java": [
      "File: xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java -> xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "188:     class NestedScriptAuthorIT extends ScriptAuthorIT",
      "189:     {",
      "190:     }",
      "191: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "192:     @Nested",
      "193:     @DisplayName(\"Form Token injection Tests\")",
      "194:     class NestedFormTokenInjectionIT extends FormTokenInjectionIT",
      "195:     {",
      "196:     }",
      "",
      "---------------"
    ],
    "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java": [
      "File: xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java -> xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20: package org.xwiki.flamingo.test.docker;",
      "22: import java.nio.charset.StandardCharsets;",
      "23: import java.util.Objects;",
      "24: import java.util.stream.Stream;",
      "26: import org.apache.commons.io.IOUtils;",
      "27: import org.junit.jupiter.api.Order;",
      "28: import org.junit.jupiter.api.Test;",
      "29: import org.xwiki.test.docker.junit5.TestReference;",
      "30: import org.xwiki.test.docker.junit5.UITest;",
      "31: import org.xwiki.test.ui.TestUtils;",
      "32: import org.xwiki.test.ui.po.ViewPage;",
      "34: import static org.hamcrest.MatcherAssert.assertThat;",
      "35: import static org.hamcrest.Matchers.containsString;",
      "36: import static org.junit.jupiter.api.Assertions.assertAll;",
      "43: @UITest",
      "44: class FormTokenInjectionIT",
      "45: {",
      "46:     @Test",
      "47:     @Order(1)",
      "48:     void simpleRESTPost(TestUtils setup, TestReference reference) throws Exception",
      "49:     {",
      "50:         setup.loginAsSuperAdmin();",
      "51:         setup.deletePage(reference);",
      "53:         String content = \"{{html clean=\\\"false\\\"}}\"",
      "54:             + \"<div id='results'></div>\"",
      "55:             + \"<script>\"",
      "56:             + IOUtils.toString(",
      "57:             Objects.requireNonNull(getClass().getResourceAsStream(\"/FormTokenInjectionIT/testCode.js\")),",
      "58:             StandardCharsets.UTF_8)",
      "59:             + \"</script>\"",
      "60:             + \"{{/html}}\";",
      "61:         setup.createPage(reference, content);",
      "63:         ViewPage viewPage = setup.gotoPage(reference);",
      "64:         String pageContent = viewPage.getContent();",
      "66:         assertAll(",
      "67:             Stream.of(",
      "68:                 \"Simple POST: 201\",",
      "69:                 \"Only Request: 201\",",
      "70:                 \"Request with init: 201\",",
      "71:                 \"Simple with array headers: 201\",",
      "72:                 \"Request with init body\",",
      "73:                 \"Request Body\",",
      "74:                 \"Simple with array headers body\"",
      "75:             ).map(expected -> (() -> assertThat(pageContent, containsString(expected))))",
      "76:         );",
      "77:     }",
      "78: }",
      "",
      "---------------"
    ],
    "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js": [
      "File: xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js -> xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20: require(['xwiki-meta'], function (xm) {",
      "21:   const postURL = xm.restURL + '/comments';",
      "22:   const resultDiv = document.getElementById('results');",
      "24:   async function addComments() {",
      "27:     await fetch(postURL, {",
      "28:       method: \"POST\",",
      "29:       body: \"Simple POST\"",
      "30:     }).then(response => resultDiv.textContent += 'Simple POST: ' + response.status);",
      "32:     await fetch(new Request(postURL, {",
      "33:       method: \"POST\",",
      "34:       body: \"Request Body\",",
      "35:       headers: {\"Accept\": \"application/json\"}",
      "36:     })).then(async response => {",
      "37:       resultDiv.textContent += 'Only Request: ' + response.status;",
      "38:       return response.json();",
      "39:     }).then(comment => resultDiv.textContent += comment.text);",
      "41:     await fetch(new Request(postURL), {",
      "42:       method: \"POST\",",
      "43:       body: \"Request with init body\",",
      "44:       headers: {\"Accept\": \"application/json\"}",
      "45:     }).then(response => {",
      "46:       resultDiv.textContent += 'Request with init: ' + response.status;",
      "47:       return response.json();",
      "48:     }).then(comment => resultDiv.textContent += comment.text);",
      "50:     await fetch(postURL, {",
      "51:       method: \"POST\",",
      "52:       body: \"Simple with array headers body\",",
      "53:       headers: [[\"Accept\", \"application/json\"]]",
      "54:     }).then(response => {",
      "55:       resultDiv.textContent += 'Simple with array headers: ' + response.status;",
      "56:       return response.json();",
      "57:     }).then(comment => resultDiv.textContent += comment.text);",
      "58:   }",
      "60:   addComments();",
      "61: });",
      "",
      "---------------"
    ],
    "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java": [
      "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "20: package org.xwiki.rest.internal;",
      "22: import org.apache.commons.lang3.exception.ExceptionUtils;",
      "23: import org.restlet.Context;",
      "24: import org.restlet.Request;",
      "25: import org.restlet.Response;",
      "26: import org.restlet.data.Header;",
      "27: import org.restlet.engine.header.HeaderConstants;",
      "28: import org.restlet.routing.Filter;",
      "29: import org.restlet.util.Series;",
      "30: import org.xwiki.component.manager.ComponentLookupException;",
      "31: import org.xwiki.component.manager.ComponentManager;",
      "32: import org.xwiki.model.reference.EntityReferenceSerializer;",
      "34: import com.xpn.xwiki.XWikiContext;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.List;",
      "24: import javax.servlet.http.HttpServletRequest;",
      "26: import org.apache.commons.lang3.StringUtils;",
      "32: import org.restlet.data.MediaType;",
      "33: import org.restlet.data.Status;",
      "35: import org.restlet.ext.servlet.ServletUtils;",
      "40: import org.xwiki.csrf.CSRFToken;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "43: public class XWikiFilter extends Filter",
      "44: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "59:     private static final List<String> SIMPLE_CONTENT_TYPES = List.of(",
      "60:         \"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"",
      "61:     );",
      "63:     private static final String FORM_TOKEN_HEADER = \"XWiki-Form-Token\";",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "58:         ComponentManager componentManager =",
      "59:             (ComponentManager) getContext().getAttributes().get(Constants.XWIKI_COMPONENT_MANAGER);",
      "60:         XWikiContext xwikiContext = Utils.getXWikiContext(componentManager);",
      "62:         try {",
      "63:             EntityReferenceSerializer<String> serializer =",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "81:         CSRFToken csrfToken = null;",
      "83:         try {",
      "84:             csrfToken = componentManager.getInstance(CSRFToken.class);",
      "85:         } catch (ComponentLookupException e) {",
      "86:             getLogger().warning(\"Failed to lookup CSRF token validator: \" + ExceptionUtils.getRootCauseMessage(e));",
      "87:         }",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "75:             }",
      "76:             responseHeaders.add(\"XWiki-User\", serializer.serialize(xwikiContext.getUserReference()));",
      "77:             responseHeaders.add(\"XWiki-Version\", xwikiContext.getWiki().getVersion());",
      "78:         } catch (ComponentLookupException e) {",
      "79:             getLogger()",
      "80:                 .warning(\"Failed to lookup the entity reference serializer: \" + ExceptionUtils.getRootCauseMessage(e));",
      "81:         }",
      "84:     }",
      "85: }",
      "",
      "[Removed Lines]",
      "83:         return CONTINUE;",
      "",
      "[Added Lines]",
      "106:             if (csrfToken != null) {",
      "107:                 responseHeaders.add(FORM_TOKEN_HEADER, csrfToken.getToken());",
      "108:             }",
      "114:         int result = CONTINUE;",
      "116:         HttpServletRequest servletRequest = ServletUtils.getRequest(Request.getCurrent());",
      "122:         if (\"POST\".equals(servletRequest.getMethod()) && SIMPLE_CONTENT_TYPES.stream().anyMatch(expectedType ->",
      "123:             StringUtils.startsWith(StringUtils.lowerCase(servletRequest.getContentType()), expectedType)))",
      "124:         {",
      "125:             Series<Header> requestHeaders = request.getHeaders();",
      "126:             String formToken = requestHeaders.getFirstValue(FORM_TOKEN_HEADER);",
      "130:             if (csrfToken == null) {",
      "131:                 response.setStatus(Status.SERVER_ERROR_INTERNAL);",
      "132:                 response.setEntity(\"Failed to lookup the CSRF token validator.\", MediaType.TEXT_PLAIN);",
      "133:                 result = SKIP;",
      "134:             } else if (!csrfToken.isTokenValid(formToken)) {",
      "135:                 response.setStatus(Status.CLIENT_ERROR_FORBIDDEN);",
      "136:                 response.setEntity(\"Invalid or missing form token.\", MediaType.TEXT_PLAIN);",
      "137:                 result = SKIP;",
      "138:             }",
      "139:         }",
      "141:         return result;",
      "",
      "---------------"
    ],
    "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java": [
      "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "319:         PostMethod postMethod = new PostMethod(attachmentsUri);",
      "320:         MultipartRequestEntity mpre = new MultipartRequestEntity(parts, postMethod.getParams());",
      "321:         postMethod.setRequestEntity(mpre);",
      "322:         httpClient.executeMethod(postMethod);",
      "323:         Assert.assertEquals(getHttpMethodInfo(postMethod), HttpStatus.SC_CREATED, postMethod.getStatusCode());",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "322:         postMethod.setRequestHeader(\"XWiki-Form-Token\", getFormToken(TestUtils.SUPER_ADMIN_CREDENTIALS.getUserName(),",
      "323:             TestUtils.SUPER_ADMIN_CREDENTIALS.getPassword()));",
      "",
      "---------------"
    ],
    "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java": [
      "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "128:         Assert.assertEquals(numberOfComments + 1, comments.getComments().size());",
      "129:     }",
      "131:     @Test",
      "132:     public void testGETComment() throws Exception",
      "133:     {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "131:     @Test",
      "132:     public void testPOSTCommentWithTextPlainNoCSRF() throws Exception",
      "133:     {",
      "134:         String commentsUri = buildURI(CommentsResource.class, getWiki(), this.spaces, this.pageName).toString();",
      "136:         GetMethod getMethod = executeGet(commentsUri);",
      "137:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
      "139:         Comments comments = (Comments) unmarshaller.unmarshal(getMethod.getResponseBodyAsStream());",
      "141:         int numberOfComments = comments.getComments().size();",
      "143:         PostMethod postMethod = executePost(commentsUri, \"Comment\", MediaType.TEXT_PLAIN,",
      "144:             TestUtils.SUPER_ADMIN_CREDENTIALS.getUserName(), TestUtils.SUPER_ADMIN_CREDENTIALS.getPassword(), null);",
      "145:         Assert.assertEquals(getHttpMethodInfo(postMethod), HttpStatus.SC_FORBIDDEN, postMethod.getStatusCode());",
      "146:         Assert.assertEquals(\"Invalid or missing form token.\", postMethod.getResponseBodyAsString());",
      "148:         getMethod = executeGet(commentsUri);",
      "149:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
      "151:         comments = (Comments) unmarshaller.unmarshal(getMethod.getResponseBodyAsStream());",
      "153:         Assert.assertEquals(numberOfComments, comments.getComments().size());",
      "154:     }",
      "",
      "---------------"
    ],
    "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java": [
      "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "520:         Assert.assertEquals(TAG_VALUE, getProperty(object, \"tags\").getValue());",
      "521:     }",
      "523:     @Test",
      "524:     public void testPUTPropertyFormUrlEncoded() throws Exception",
      "525:     {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "523:     @Test",
      "524:     public void testPOSTObjectFormUrlEncodedNoCSRF() throws Exception",
      "525:     {",
      "526:         final String tagValue = \"TAG\";",
      "527:         NameValuePair[] nameValuePairs = new NameValuePair[2];",
      "528:         String className = \"XWiki.TagClass\";",
      "529:         nameValuePairs[0] = new NameValuePair(\"className\", className);",
      "530:         nameValuePairs[1] = new NameValuePair(\"property#tags\", tagValue);",
      "532:         String objectGetURI = buildURI(ObjectsResource.class, getWiki(), this.spaces, this.pageName, className);",
      "535:         GetMethod getMethod = executeGet(objectGetURI);",
      "536:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
      "537:         Objects objects = (Objects) unmarshaller.unmarshal(getMethod.getResponseBodyAsStream());",
      "538:         int numObjects = objects.getObjectSummaries().size();",
      "540:         PostMethod postMethod = executePostForm(",
      "541:             buildURI(ObjectsResource.class, getWiki(), this.spaces, this.pageName), nameValuePairs,",
      "542:             TestUtils.SUPER_ADMIN_CREDENTIALS.getUserName(), TestUtils.SUPER_ADMIN_CREDENTIALS.getPassword(), null);",
      "543:         Assert.assertEquals(getHttpMethodInfo(postMethod), HttpStatus.SC_FORBIDDEN, postMethod.getStatusCode());",
      "544:         Assert.assertEquals(\"Invalid or missing form token.\", postMethod.getResponseBodyAsString());",
      "546:         getMethod = executeGet(objectGetURI);",
      "547:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
      "549:         objects = (Objects) unmarshaller.unmarshal(getMethod.getResponseBodyAsStream());",
      "550:         Assert.assertEquals(numObjects, objects.getObjectSummaries().size());",
      "551:     }",
      "",
      "---------------"
    ],
    "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java": [
      "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "576:         Assert.assertEquals(TITLE, modifiedPage.getTitle());",
      "577:     }",
      "579:     @Test",
      "580:     public void testPUTPageSyntax() throws Exception",
      "581:     {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "579:     @Test",
      "580:     public void testPOSTPageFormUrlEncodedNoCSRF() throws Exception",
      "581:     {",
      "582:         final String CONTENT = String.format(\"This is a content (%d)\", System.currentTimeMillis());",
      "583:         final String TITLE = String.format(\"Title (%s)\", UUID.randomUUID().toString());",
      "585:         Page originalPage = getFirstPage();",
      "587:         Link link = getFirstLinkByRelation(originalPage, Relations.SELF);",
      "588:         Assert.assertNotNull(link);",
      "590:         NameValuePair[] nameValuePairs = new NameValuePair[2];",
      "591:         nameValuePairs[0] = new NameValuePair(\"title\", TITLE);",
      "592:         nameValuePairs[1] = new NameValuePair(\"content\", CONTENT);",
      "594:         PostMethod postMethod = executePostForm(String.format(\"%s?method=PUT\", link.getHref()), nameValuePairs,",
      "595:             TestUtils.SUPER_ADMIN_CREDENTIALS.getUserName(), TestUtils.SUPER_ADMIN_CREDENTIALS.getPassword(), null);",
      "596:         Assert.assertEquals(getHttpMethodInfo(postMethod), HttpStatus.SC_FORBIDDEN, postMethod.getStatusCode());",
      "597:         Assert.assertEquals(\"Invalid or missing form token.\", postMethod.getResponseBodyAsString());",
      "600:         GetMethod getMethod = executeGet(link.getHref());",
      "601:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
      "603:         Page modifiedPage = (Page) this.unmarshaller.unmarshal(getMethod.getResponseBodyAsStream());",
      "605:         Assert.assertEquals(originalPage.getContent(), modifiedPage.getContent());",
      "606:         Assert.assertEquals(originalPage.getTitle(), modifiedPage.getTitle());",
      "607:     }",
      "",
      "---------------"
    ],
    "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java": [
      "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "281:         return postMethod;",
      "282:     }",
      "284:     protected PostMethod executePost(String uri, String string, String mediaType, String userName, String password)",
      "285:         throws Exception",
      "286:     {",
      "287:         HttpClient httpClient = new HttpClient();",
      "288:         httpClient.getState().setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(userName, password));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "284:     protected String getFormToken(String userName, String password) throws Exception",
      "285:     {",
      "286:         GetMethod getMethod = executeGet(getFullUri(WikisResource.class), userName, password);",
      "287:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
      "288:         return getMethod.getResponseHeader(\"XWiki-Form-Token\").getValue();",
      "289:     }",
      "293:     {",
      "294:         return executePost(uri, string, mediaType, userName, password, getFormToken(userName, password));",
      "295:     }",
      "297:     protected PostMethod executePost(String uri, String string, String mediaType, String userName, String password,",
      "298:         String formToken) throws Exception",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "291:         PostMethod postMethod = new PostMethod(uri);",
      "292:         postMethod.addRequestHeader(\"Accept\", MediaType.APPLICATION_XML.toString());",
      "294:         RequestEntity entity = new StringRequestEntity(string, mediaType, \"UTF-8\");",
      "295:         postMethod.setRequestEntity(entity);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "306:         if (formToken != null) {",
      "307:             postMethod.addRequestHeader(\"XWiki-Form-Token\", formToken);",
      "308:         }",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "302:     protected PostMethod executePostForm(String uri, NameValuePair[] nameValuePairs, String userName, String password)",
      "303:         throws Exception",
      "304:     {",
      "305:         HttpClient httpClient = new HttpClient();",
      "306:         httpClient.getState().setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(userName, password));",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "320:     {",
      "321:         return executePostForm(uri, nameValuePairs, userName, password, getFormToken(userName, password));",
      "322:     }",
      "324:     protected PostMethod executePostForm(String uri, NameValuePair[] nameValuePairs, String userName, String password,",
      "325:         String formToken) throws Exception",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "309:         PostMethod postMethod = new PostMethod(uri);",
      "310:         postMethod.addRequestHeader(\"Accept\", MediaType.APPLICATION_XML.toString());",
      "311:         postMethod.addRequestHeader(\"Content-type\", MediaType.APPLICATION_WWW_FORM.toString());",
      "313:         postMethod.setRequestBody(nameValuePairs);",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "334:         if (formToken != null) {",
      "335:             postMethod.addRequestHeader(\"XWiki-Form-Token\", formToken);",
      "336:         }",
      "",
      "---------------"
    ],
    "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js||xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js": [
      "File: xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js -> xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "1890:       this.addEventListener('load', function() {",
      "1891:         handleResponseHeaders(this.getResponseHeader.bind(this));",
      "1892:       });",
      "1894:     };",
      "1895:   };",
      "1900:   var interceptFetch = function() {",
      "1901:     var originalFetch = window.fetch;",
      "1902:     if (originalFetch) {",
      "1903:       window.fetch = function() {",
      "1905:           handleResponseHeaders(response.headers.get.bind(response.headers));",
      "1906:           return response;",
      "1907:         });",
      "",
      "[Removed Lines]",
      "1893:       return originalOpen.apply(this, arguments);",
      "1904:         return originalFetch.apply(this, arguments).then(function(response) {",
      "",
      "[Added Lines]",
      "1894:       const result = originalOpen.apply(this, arguments);",
      "1896:       if (arguments.length >= 2 && window.location.origin === (new URL(arguments[1], window.location.href)).origin) {",
      "1898:         const formToken = document?.documentElement?.dataset?.xwikiFormToken;",
      "1899:         if (formToken) {",
      "1900:           this.setRequestHeader(\"XWiki-Form-Token\", formToken);",
      "1901:         }",
      "1902:       }",
      "1903:       return result;",
      "1916:         let modifiedArguments = arguments;",
      "1918:         const formToken = document?.documentElement?.dataset?.xwikiFormToken;",
      "1919:         if (formToken) {",
      "1920:           let request = null;",
      "1923:           if (arguments.length === 1 && arguments[0] instanceof Request) {",
      "1924:             request = arguments[0];",
      "1925:           } else if (arguments.length) {",
      "1926:             request = new Request(...arguments);",
      "1927:           }",
      "1930:           if (request !== null && window.location.origin === (new URL(request.url, window.location.href).origin)) {",
      "1931:             request.headers.append(\"XWiki-Form-Token\", formToken);",
      "1932:             modifiedArguments = [request];",
      "1933:           }",
      "1934:         }",
      "1935:         return originalFetch.apply(this, modifiedArguments).then(function(response) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "5ea3ae48f2bb69637071f416fcc790662b62acfe",
      "candidate_info": {
        "commit_hash": "5ea3ae48f2bb69637071f416fcc790662b62acfe",
        "repo": "xwiki/xwiki-platform",
        "commit_url": "https://github.com/xwiki/xwiki-platform/commit/5ea3ae48f2bb69637071f416fcc790662b62acfe",
        "files": [
          "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java",
          "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
          "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java",
          "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js"
        ],
        "message": "XWIKI-20135: Require a CSRF token for some request types in the REST API\n\n* Require a CSRF token in the XWiki-Form-Token header in content types\n  allowed in simple requests.\n* Add integration tests to check that the check is indeed working.\n* Automatically add the CSRF token header in same-origin requests\n  initiated from JavaScript.\n* Add an integration test to check that the form token is correctly\n  added and fetch requests are still working.\n\nCo-authored-by: Marius Dumitru Florea <marius@xwiki.com>\n(cherry picked from commit 4c175405faa0e62437df397811c7526dfc0fbae7)",
        "before_after_code_files": [
          "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java",
          "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
          "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java",
          "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js||xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java",
            "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
            "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java",
            "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js||xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js"
          ],
          "candidate": [
            "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java",
            "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
            "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java",
            "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js||xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js"
          ]
        }
      },
      "candidate_diff": {
        "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java": [
          "File: xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java -> xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "188:     class NestedScriptAuthorIT extends ScriptAuthorIT",
          "189:     {",
          "190:     }",
          "191: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192:     @Nested",
          "193:     @DisplayName(\"Form Token injection Tests\")",
          "194:     class NestedFormTokenInjectionIT extends FormTokenInjectionIT",
          "195:     {",
          "196:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java": [
          "File: xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java -> xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: package org.xwiki.flamingo.test.docker;",
          "22: import java.nio.charset.StandardCharsets;",
          "23: import java.util.Objects;",
          "24: import java.util.stream.Stream;",
          "26: import org.apache.commons.io.IOUtils;",
          "27: import org.junit.jupiter.api.Order;",
          "28: import org.junit.jupiter.api.Test;",
          "29: import org.xwiki.test.docker.junit5.TestReference;",
          "30: import org.xwiki.test.docker.junit5.UITest;",
          "31: import org.xwiki.test.ui.TestUtils;",
          "32: import org.xwiki.test.ui.po.ViewPage;",
          "34: import static org.hamcrest.MatcherAssert.assertThat;",
          "35: import static org.hamcrest.Matchers.containsString;",
          "36: import static org.junit.jupiter.api.Assertions.assertAll;",
          "43: @UITest",
          "44: class FormTokenInjectionIT",
          "45: {",
          "46:     @Test",
          "47:     @Order(1)",
          "48:     void simpleRESTPost(TestUtils setup, TestReference reference) throws Exception",
          "49:     {",
          "50:         setup.loginAsSuperAdmin();",
          "51:         setup.deletePage(reference);",
          "53:         String content = \"{{html clean=\\\"false\\\"}}\"",
          "54:             + \"<div id='results'></div>\"",
          "55:             + \"<script>\"",
          "56:             + IOUtils.toString(",
          "57:             Objects.requireNonNull(getClass().getResourceAsStream(\"/FormTokenInjectionIT/testCode.js\")),",
          "58:             StandardCharsets.UTF_8)",
          "59:             + \"</script>\"",
          "60:             + \"{{/html}}\";",
          "61:         setup.createPage(reference, content);",
          "63:         ViewPage viewPage = setup.gotoPage(reference);",
          "64:         String pageContent = viewPage.getContent();",
          "66:         assertAll(",
          "67:             Stream.of(",
          "68:                 \"Simple POST: 201\",",
          "69:                 \"Only Request: 201\",",
          "70:                 \"Request with init: 201\",",
          "71:                 \"Simple with array headers: 201\",",
          "72:                 \"Request with init body\",",
          "73:                 \"Request Body\",",
          "74:                 \"Simple with array headers body\"",
          "75:             ).map(expected -> (() -> assertThat(pageContent, containsString(expected))))",
          "76:         );",
          "77:     }",
          "78: }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js": [
          "File: xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js -> xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: require(['xwiki-meta'], function (xm) {",
          "21:   const postURL = xm.restURL + '/comments';",
          "22:   const resultDiv = document.getElementById('results');",
          "24:   async function addComments() {",
          "27:     await fetch(postURL, {",
          "28:       method: \"POST\",",
          "29:       body: \"Simple POST\"",
          "30:     }).then(response => resultDiv.textContent += 'Simple POST: ' + response.status);",
          "32:     await fetch(new Request(postURL, {",
          "33:       method: \"POST\",",
          "34:       body: \"Request Body\",",
          "35:       headers: {\"Accept\": \"application/json\"}",
          "36:     })).then(async response => {",
          "37:       resultDiv.textContent += 'Only Request: ' + response.status;",
          "38:       return response.json();",
          "39:     }).then(comment => resultDiv.textContent += comment.text);",
          "41:     await fetch(new Request(postURL), {",
          "42:       method: \"POST\",",
          "43:       body: \"Request with init body\",",
          "44:       headers: {\"Accept\": \"application/json\"}",
          "45:     }).then(response => {",
          "46:       resultDiv.textContent += 'Request with init: ' + response.status;",
          "47:       return response.json();",
          "48:     }).then(comment => resultDiv.textContent += comment.text);",
          "50:     await fetch(postURL, {",
          "51:       method: \"POST\",",
          "52:       body: \"Simple with array headers body\",",
          "53:       headers: [[\"Accept\", \"application/json\"]]",
          "54:     }).then(response => {",
          "55:       resultDiv.textContent += 'Simple with array headers: ' + response.status;",
          "56:       return response.json();",
          "57:     }).then(comment => resultDiv.textContent += comment.text);",
          "58:   }",
          "60:   addComments();",
          "61: });",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java": [
          "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package org.xwiki.rest.internal;",
          "22: import org.apache.commons.lang3.exception.ExceptionUtils;",
          "23: import org.restlet.Context;",
          "24: import org.restlet.Request;",
          "25: import org.restlet.Response;",
          "26: import org.restlet.data.Header;",
          "27: import org.restlet.engine.header.HeaderConstants;",
          "28: import org.restlet.routing.Filter;",
          "29: import org.restlet.util.Series;",
          "30: import org.xwiki.component.manager.ComponentLookupException;",
          "31: import org.xwiki.component.manager.ComponentManager;",
          "32: import org.xwiki.model.reference.EntityReferenceSerializer;",
          "34: import com.xpn.xwiki.XWikiContext;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: import java.util.List;",
          "24: import javax.servlet.http.HttpServletRequest;",
          "26: import org.apache.commons.lang3.StringUtils;",
          "32: import org.restlet.data.MediaType;",
          "33: import org.restlet.data.Status;",
          "35: import org.restlet.ext.servlet.ServletUtils;",
          "40: import org.xwiki.csrf.CSRFToken;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: public class XWikiFilter extends Filter",
          "44: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:     private static final List<String> SIMPLE_CONTENT_TYPES = List.of(",
          "60:         \"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"",
          "61:     );",
          "63:     private static final String FORM_TOKEN_HEADER = \"XWiki-Form-Token\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "58:         ComponentManager componentManager =",
          "59:             (ComponentManager) getContext().getAttributes().get(Constants.XWIKI_COMPONENT_MANAGER);",
          "60:         XWikiContext xwikiContext = Utils.getXWikiContext(componentManager);",
          "62:         try {",
          "63:             EntityReferenceSerializer<String> serializer =",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:         CSRFToken csrfToken = null;",
          "83:         try {",
          "84:             csrfToken = componentManager.getInstance(CSRFToken.class);",
          "85:         } catch (ComponentLookupException e) {",
          "86:             getLogger().warning(\"Failed to lookup CSRF token validator: \" + ExceptionUtils.getRootCauseMessage(e));",
          "87:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "75:             }",
          "76:             responseHeaders.add(\"XWiki-User\", serializer.serialize(xwikiContext.getUserReference()));",
          "77:             responseHeaders.add(\"XWiki-Version\", xwikiContext.getWiki().getVersion());",
          "78:         } catch (ComponentLookupException e) {",
          "79:             getLogger()",
          "80:                 .warning(\"Failed to lookup the entity reference serializer: \" + ExceptionUtils.getRootCauseMessage(e));",
          "81:         }",
          "84:     }",
          "85: }",
          "",
          "[Removed Lines]",
          "83:         return CONTINUE;",
          "",
          "[Added Lines]",
          "106:             if (csrfToken != null) {",
          "107:                 responseHeaders.add(FORM_TOKEN_HEADER, csrfToken.getToken());",
          "108:             }",
          "114:         int result = CONTINUE;",
          "116:         HttpServletRequest servletRequest = ServletUtils.getRequest(Request.getCurrent());",
          "122:         if (\"POST\".equals(servletRequest.getMethod()) && SIMPLE_CONTENT_TYPES.stream().anyMatch(expectedType ->",
          "123:             StringUtils.startsWith(StringUtils.lowerCase(servletRequest.getContentType()), expectedType)))",
          "124:         {",
          "125:             Series<Header> requestHeaders = request.getHeaders();",
          "126:             String formToken = requestHeaders.getFirstValue(FORM_TOKEN_HEADER);",
          "130:             if (csrfToken == null) {",
          "131:                 response.setStatus(Status.SERVER_ERROR_INTERNAL);",
          "132:                 response.setEntity(\"Failed to lookup the CSRF token validator.\", MediaType.TEXT_PLAIN);",
          "133:                 result = SKIP;",
          "134:             } else if (!csrfToken.isTokenValid(formToken)) {",
          "135:                 response.setStatus(Status.CLIENT_ERROR_FORBIDDEN);",
          "136:                 response.setEntity(\"Invalid or missing form token.\", MediaType.TEXT_PLAIN);",
          "137:                 result = SKIP;",
          "138:             }",
          "139:         }",
          "141:         return result;",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java": [
          "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "319:         PostMethod postMethod = new PostMethod(attachmentsUri);",
          "320:         MultipartRequestEntity mpre = new MultipartRequestEntity(parts, postMethod.getParams());",
          "321:         postMethod.setRequestEntity(mpre);",
          "322:         httpClient.executeMethod(postMethod);",
          "323:         Assert.assertEquals(getHttpMethodInfo(postMethod), HttpStatus.SC_CREATED, postMethod.getStatusCode());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "322:         postMethod.setRequestHeader(\"XWiki-Form-Token\", getFormToken(TestUtils.SUPER_ADMIN_CREDENTIALS.getUserName(),",
          "323:             TestUtils.SUPER_ADMIN_CREDENTIALS.getPassword()));",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java": [
          "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:         Assert.assertEquals(numberOfComments + 1, comments.getComments().size());",
          "129:     }",
          "131:     @Test",
          "132:     public void testGETComment() throws Exception",
          "133:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131:     @Test",
          "132:     public void testPOSTCommentWithTextPlainNoCSRF() throws Exception",
          "133:     {",
          "134:         String commentsUri = buildURI(CommentsResource.class, getWiki(), this.spaces, this.pageName).toString();",
          "136:         GetMethod getMethod = executeGet(commentsUri);",
          "137:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
          "139:         Comments comments = (Comments) unmarshaller.unmarshal(getMethod.getResponseBodyAsStream());",
          "141:         int numberOfComments = comments.getComments().size();",
          "143:         PostMethod postMethod = executePost(commentsUri, \"Comment\", MediaType.TEXT_PLAIN,",
          "144:             TestUtils.SUPER_ADMIN_CREDENTIALS.getUserName(), TestUtils.SUPER_ADMIN_CREDENTIALS.getPassword(), null);",
          "145:         Assert.assertEquals(getHttpMethodInfo(postMethod), HttpStatus.SC_FORBIDDEN, postMethod.getStatusCode());",
          "146:         Assert.assertEquals(\"Invalid or missing form token.\", postMethod.getResponseBodyAsString());",
          "148:         getMethod = executeGet(commentsUri);",
          "149:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
          "151:         comments = (Comments) unmarshaller.unmarshal(getMethod.getResponseBodyAsStream());",
          "153:         Assert.assertEquals(numberOfComments, comments.getComments().size());",
          "154:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java": [
          "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "520:         Assert.assertEquals(TAG_VALUE, getProperty(object, \"tags\").getValue());",
          "521:     }",
          "523:     @Test",
          "524:     public void testPUTPropertyFormUrlEncoded() throws Exception",
          "525:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "523:     @Test",
          "524:     public void testPOSTObjectFormUrlEncodedNoCSRF() throws Exception",
          "525:     {",
          "526:         final String tagValue = \"TAG\";",
          "527:         NameValuePair[] nameValuePairs = new NameValuePair[2];",
          "528:         String className = \"XWiki.TagClass\";",
          "529:         nameValuePairs[0] = new NameValuePair(\"className\", className);",
          "530:         nameValuePairs[1] = new NameValuePair(\"property#tags\", tagValue);",
          "532:         String objectGetURI = buildURI(ObjectsResource.class, getWiki(), this.spaces, this.pageName, className);",
          "535:         GetMethod getMethod = executeGet(objectGetURI);",
          "536:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
          "537:         Objects objects = (Objects) unmarshaller.unmarshal(getMethod.getResponseBodyAsStream());",
          "538:         int numObjects = objects.getObjectSummaries().size();",
          "540:         PostMethod postMethod = executePostForm(",
          "541:             buildURI(ObjectsResource.class, getWiki(), this.spaces, this.pageName), nameValuePairs,",
          "542:             TestUtils.SUPER_ADMIN_CREDENTIALS.getUserName(), TestUtils.SUPER_ADMIN_CREDENTIALS.getPassword(), null);",
          "543:         Assert.assertEquals(getHttpMethodInfo(postMethod), HttpStatus.SC_FORBIDDEN, postMethod.getStatusCode());",
          "544:         Assert.assertEquals(\"Invalid or missing form token.\", postMethod.getResponseBodyAsString());",
          "546:         getMethod = executeGet(objectGetURI);",
          "547:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
          "549:         objects = (Objects) unmarshaller.unmarshal(getMethod.getResponseBodyAsStream());",
          "550:         Assert.assertEquals(numObjects, objects.getObjectSummaries().size());",
          "551:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java": [
          "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "576:         Assert.assertEquals(TITLE, modifiedPage.getTitle());",
          "577:     }",
          "579:     @Test",
          "580:     public void testPUTPageSyntax() throws Exception",
          "581:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "579:     @Test",
          "580:     public void testPOSTPageFormUrlEncodedNoCSRF() throws Exception",
          "581:     {",
          "582:         final String CONTENT = String.format(\"This is a content (%d)\", System.currentTimeMillis());",
          "583:         final String TITLE = String.format(\"Title (%s)\", UUID.randomUUID().toString());",
          "585:         Page originalPage = getFirstPage();",
          "587:         Link link = getFirstLinkByRelation(originalPage, Relations.SELF);",
          "588:         Assert.assertNotNull(link);",
          "590:         NameValuePair[] nameValuePairs = new NameValuePair[2];",
          "591:         nameValuePairs[0] = new NameValuePair(\"title\", TITLE);",
          "592:         nameValuePairs[1] = new NameValuePair(\"content\", CONTENT);",
          "594:         PostMethod postMethod = executePostForm(String.format(\"%s?method=PUT\", link.getHref()), nameValuePairs,",
          "595:             TestUtils.SUPER_ADMIN_CREDENTIALS.getUserName(), TestUtils.SUPER_ADMIN_CREDENTIALS.getPassword(), null);",
          "596:         Assert.assertEquals(getHttpMethodInfo(postMethod), HttpStatus.SC_FORBIDDEN, postMethod.getStatusCode());",
          "597:         Assert.assertEquals(\"Invalid or missing form token.\", postMethod.getResponseBodyAsString());",
          "600:         GetMethod getMethod = executeGet(link.getHref());",
          "601:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
          "603:         Page modifiedPage = (Page) this.unmarshaller.unmarshal(getMethod.getResponseBodyAsStream());",
          "605:         Assert.assertEquals(originalPage.getContent(), modifiedPage.getContent());",
          "606:         Assert.assertEquals(originalPage.getTitle(), modifiedPage.getTitle());",
          "607:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java": [
          "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "281:         return postMethod;",
          "282:     }",
          "284:     protected PostMethod executePost(String uri, String string, String mediaType, String userName, String password)",
          "285:         throws Exception",
          "286:     {",
          "287:         HttpClient httpClient = new HttpClient();",
          "288:         httpClient.getState().setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(userName, password));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "284:     protected String getFormToken(String userName, String password) throws Exception",
          "285:     {",
          "286:         GetMethod getMethod = executeGet(getFullUri(WikisResource.class), userName, password);",
          "287:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
          "288:         return getMethod.getResponseHeader(\"XWiki-Form-Token\").getValue();",
          "289:     }",
          "293:     {",
          "294:         return executePost(uri, string, mediaType, userName, password, getFormToken(userName, password));",
          "295:     }",
          "297:     protected PostMethod executePost(String uri, String string, String mediaType, String userName, String password,",
          "298:         String formToken) throws Exception",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "291:         PostMethod postMethod = new PostMethod(uri);",
          "292:         postMethod.addRequestHeader(\"Accept\", MediaType.APPLICATION_XML.toString());",
          "294:         RequestEntity entity = new StringRequestEntity(string, mediaType, \"UTF-8\");",
          "295:         postMethod.setRequestEntity(entity);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "306:         if (formToken != null) {",
          "307:             postMethod.addRequestHeader(\"XWiki-Form-Token\", formToken);",
          "308:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "302:     protected PostMethod executePostForm(String uri, NameValuePair[] nameValuePairs, String userName, String password)",
          "303:         throws Exception",
          "304:     {",
          "305:         HttpClient httpClient = new HttpClient();",
          "306:         httpClient.getState().setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(userName, password));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "320:     {",
          "321:         return executePostForm(uri, nameValuePairs, userName, password, getFormToken(userName, password));",
          "322:     }",
          "324:     protected PostMethod executePostForm(String uri, NameValuePair[] nameValuePairs, String userName, String password,",
          "325:         String formToken) throws Exception",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "309:         PostMethod postMethod = new PostMethod(uri);",
          "310:         postMethod.addRequestHeader(\"Accept\", MediaType.APPLICATION_XML.toString());",
          "311:         postMethod.addRequestHeader(\"Content-type\", MediaType.APPLICATION_WWW_FORM.toString());",
          "313:         postMethod.setRequestBody(nameValuePairs);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "334:         if (formToken != null) {",
          "335:             postMethod.addRequestHeader(\"XWiki-Form-Token\", formToken);",
          "336:         }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js||xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js": [
          "File: xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js -> xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1890:       this.addEventListener('load', function() {",
          "1891:         handleResponseHeaders(this.getResponseHeader.bind(this));",
          "1892:       });",
          "1894:     };",
          "1895:   };",
          "1900:   var interceptFetch = function() {",
          "1901:     var originalFetch = window.fetch;",
          "1902:     if (originalFetch) {",
          "1903:       window.fetch = function() {",
          "1905:           handleResponseHeaders(response.headers.get.bind(response.headers));",
          "1906:           return response;",
          "1907:         });",
          "",
          "[Removed Lines]",
          "1893:       return originalOpen.apply(this, arguments);",
          "1904:         return originalFetch.apply(this, arguments).then(function(response) {",
          "",
          "[Added Lines]",
          "1894:       const result = originalOpen.apply(this, arguments);",
          "1896:       if (arguments.length >= 2 && window.location.origin === (new URL(arguments[1], window.location.href)).origin) {",
          "1898:         const formToken = document?.documentElement?.dataset?.xwikiFormToken;",
          "1899:         if (formToken) {",
          "1900:           this.setRequestHeader(\"XWiki-Form-Token\", formToken);",
          "1901:         }",
          "1902:       }",
          "1903:       return result;",
          "1916:         let modifiedArguments = arguments;",
          "1918:         const formToken = document?.documentElement?.dataset?.xwikiFormToken;",
          "1919:         if (formToken) {",
          "1920:           let request = null;",
          "1923:           if (arguments.length === 1 && arguments[0] instanceof Request) {",
          "1924:             request = arguments[0];",
          "1925:           } else if (arguments.length) {",
          "1926:             request = new Request(...arguments);",
          "1927:           }",
          "1930:           if (request !== null && window.location.origin === (new URL(request.url, window.location.href).origin)) {",
          "1931:             request.headers.append(\"XWiki-Form-Token\", formToken);",
          "1932:             modifiedArguments = [request];",
          "1933:           }",
          "1934:         }",
          "1935:         return originalFetch.apply(this, modifiedArguments).then(function(response) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "96d4207bf59212af5acf6efbd07801fe997ef892",
      "candidate_info": {
        "commit_hash": "96d4207bf59212af5acf6efbd07801fe997ef892",
        "repo": "xwiki/xwiki-platform",
        "commit_url": "https://github.com/xwiki/xwiki-platform/commit/96d4207bf59212af5acf6efbd07801fe997ef892",
        "files": [
          "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java",
          "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
          "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java",
          "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js"
        ],
        "message": "XWIKI-20135: Require a CSRF token for some request types in the REST API\n\n* Require a CSRF token in the XWiki-Form-Token header in content types\n  allowed in simple requests.\n* Add integration tests to check that the check is indeed working.\n* Automatically add the CSRF token header in same-origin requests\n  initiated from JavaScript.\n* Add an integration test to check that the form token is correctly\n  added and fetch requests are still working.\n\nCo-authored-by: Marius Dumitru Florea <marius@xwiki.com>\n(cherry picked from commit 4c175405faa0e62437df397811c7526dfc0fbae7)",
        "before_after_code_files": [
          "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java",
          "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
          "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java",
          "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js||xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java",
            "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
            "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java",
            "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js||xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js"
          ],
          "candidate": [
            "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java",
            "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
            "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java",
            "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js||xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js"
          ]
        }
      },
      "candidate_diff": {
        "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java": [
          "File: xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java -> xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/AllITs.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "188:     class NestedScriptAuthorIT extends ScriptAuthorIT",
          "189:     {",
          "190:     }",
          "191: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "192:     @Nested",
          "193:     @DisplayName(\"Form Token injection Tests\")",
          "194:     class NestedFormTokenInjectionIT extends FormTokenInjectionIT",
          "195:     {",
          "196:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java": [
          "File: xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java -> xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: package org.xwiki.flamingo.test.docker;",
          "22: import java.nio.charset.StandardCharsets;",
          "23: import java.util.Objects;",
          "24: import java.util.stream.Stream;",
          "26: import org.apache.commons.io.IOUtils;",
          "27: import org.junit.jupiter.api.Order;",
          "28: import org.junit.jupiter.api.Test;",
          "29: import org.xwiki.test.docker.junit5.TestReference;",
          "30: import org.xwiki.test.docker.junit5.UITest;",
          "31: import org.xwiki.test.ui.TestUtils;",
          "32: import org.xwiki.test.ui.po.ViewPage;",
          "34: import static org.hamcrest.MatcherAssert.assertThat;",
          "35: import static org.hamcrest.Matchers.containsString;",
          "36: import static org.junit.jupiter.api.Assertions.assertAll;",
          "43: @UITest",
          "44: class FormTokenInjectionIT",
          "45: {",
          "46:     @Test",
          "47:     @Order(1)",
          "48:     void simpleRESTPost(TestUtils setup, TestReference reference) throws Exception",
          "49:     {",
          "50:         setup.loginAsSuperAdmin();",
          "51:         setup.deletePage(reference);",
          "53:         String content = \"{{html clean=\\\"false\\\"}}\"",
          "54:             + \"<div id='results'></div>\"",
          "55:             + \"<script>\"",
          "56:             + IOUtils.toString(",
          "57:             Objects.requireNonNull(getClass().getResourceAsStream(\"/FormTokenInjectionIT/testCode.js\")),",
          "58:             StandardCharsets.UTF_8)",
          "59:             + \"</script>\"",
          "60:             + \"{{/html}}\";",
          "61:         setup.createPage(reference, content);",
          "63:         ViewPage viewPage = setup.gotoPage(reference);",
          "64:         String pageContent = viewPage.getContent();",
          "66:         assertAll(",
          "67:             Stream.of(",
          "68:                 \"Simple POST: 201\",",
          "69:                 \"Only Request: 201\",",
          "70:                 \"Request with init: 201\",",
          "71:                 \"Simple with array headers: 201\",",
          "72:                 \"Request with init body\",",
          "73:                 \"Request Body\",",
          "74:                 \"Simple with array headers body\"",
          "75:             ).map(expected -> (() -> assertThat(pageContent, containsString(expected))))",
          "76:         );",
          "77:     }",
          "78: }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js": [
          "File: xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js -> xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/resources/FormTokenInjectionIT/testCode.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: require(['xwiki-meta'], function (xm) {",
          "21:   const postURL = xm.restURL + '/comments';",
          "22:   const resultDiv = document.getElementById('results');",
          "24:   async function addComments() {",
          "27:     await fetch(postURL, {",
          "28:       method: \"POST\",",
          "29:       body: \"Simple POST\"",
          "30:     }).then(response => resultDiv.textContent += 'Simple POST: ' + response.status);",
          "32:     await fetch(new Request(postURL, {",
          "33:       method: \"POST\",",
          "34:       body: \"Request Body\",",
          "35:       headers: {\"Accept\": \"application/json\"}",
          "36:     })).then(async response => {",
          "37:       resultDiv.textContent += 'Only Request: ' + response.status;",
          "38:       return response.json();",
          "39:     }).then(comment => resultDiv.textContent += comment.text);",
          "41:     await fetch(new Request(postURL), {",
          "42:       method: \"POST\",",
          "43:       body: \"Request with init body\",",
          "44:       headers: {\"Accept\": \"application/json\"}",
          "45:     }).then(response => {",
          "46:       resultDiv.textContent += 'Request with init: ' + response.status;",
          "47:       return response.json();",
          "48:     }).then(comment => resultDiv.textContent += comment.text);",
          "50:     await fetch(postURL, {",
          "51:       method: \"POST\",",
          "52:       body: \"Simple with array headers body\",",
          "53:       headers: [[\"Accept\", \"application/json\"]]",
          "54:     }).then(response => {",
          "55:       resultDiv.textContent += 'Simple with array headers: ' + response.status;",
          "56:       return response.json();",
          "57:     }).then(comment => resultDiv.textContent += comment.text);",
          "58:   }",
          "60:   addComments();",
          "61: });",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java": [
          "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package org.xwiki.rest.internal;",
          "22: import org.apache.commons.lang3.exception.ExceptionUtils;",
          "23: import org.restlet.Context;",
          "24: import org.restlet.Request;",
          "25: import org.restlet.Response;",
          "26: import org.restlet.data.Header;",
          "27: import org.restlet.engine.header.HeaderConstants;",
          "28: import org.restlet.routing.Filter;",
          "29: import org.restlet.util.Series;",
          "30: import org.xwiki.component.manager.ComponentLookupException;",
          "31: import org.xwiki.component.manager.ComponentManager;",
          "32: import org.xwiki.model.reference.EntityReferenceSerializer;",
          "34: import com.xpn.xwiki.XWikiContext;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: import java.util.List;",
          "24: import javax.servlet.http.HttpServletRequest;",
          "26: import org.apache.commons.lang3.StringUtils;",
          "32: import org.restlet.data.MediaType;",
          "33: import org.restlet.data.Status;",
          "35: import org.restlet.ext.servlet.ServletUtils;",
          "40: import org.xwiki.csrf.CSRFToken;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "43: public class XWikiFilter extends Filter",
          "44: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "59:     private static final List<String> SIMPLE_CONTENT_TYPES = List.of(",
          "60:         \"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"",
          "61:     );",
          "63:     private static final String FORM_TOKEN_HEADER = \"XWiki-Form-Token\";",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "58:         ComponentManager componentManager =",
          "59:             (ComponentManager) getContext().getAttributes().get(Constants.XWIKI_COMPONENT_MANAGER);",
          "60:         XWikiContext xwikiContext = Utils.getXWikiContext(componentManager);",
          "62:         try {",
          "63:             EntityReferenceSerializer<String> serializer =",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "81:         CSRFToken csrfToken = null;",
          "83:         try {",
          "84:             csrfToken = componentManager.getInstance(CSRFToken.class);",
          "85:         } catch (ComponentLookupException e) {",
          "86:             getLogger().warning(\"Failed to lookup CSRF token validator: \" + ExceptionUtils.getRootCauseMessage(e));",
          "87:         }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "75:             }",
          "76:             responseHeaders.add(\"XWiki-User\", serializer.serialize(xwikiContext.getUserReference()));",
          "77:             responseHeaders.add(\"XWiki-Version\", xwikiContext.getWiki().getVersion());",
          "78:         } catch (ComponentLookupException e) {",
          "79:             getLogger()",
          "80:                 .warning(\"Failed to lookup the entity reference serializer: \" + ExceptionUtils.getRootCauseMessage(e));",
          "81:         }",
          "84:     }",
          "85: }",
          "",
          "[Removed Lines]",
          "83:         return CONTINUE;",
          "",
          "[Added Lines]",
          "106:             if (csrfToken != null) {",
          "107:                 responseHeaders.add(FORM_TOKEN_HEADER, csrfToken.getToken());",
          "108:             }",
          "114:         int result = CONTINUE;",
          "116:         HttpServletRequest servletRequest = ServletUtils.getRequest(Request.getCurrent());",
          "122:         if (\"POST\".equals(servletRequest.getMethod()) && SIMPLE_CONTENT_TYPES.stream().anyMatch(expectedType ->",
          "123:             StringUtils.startsWith(StringUtils.lowerCase(servletRequest.getContentType()), expectedType)))",
          "124:         {",
          "125:             Series<Header> requestHeaders = request.getHeaders();",
          "126:             String formToken = requestHeaders.getFirstValue(FORM_TOKEN_HEADER);",
          "130:             if (csrfToken == null) {",
          "131:                 response.setStatus(Status.SERVER_ERROR_INTERNAL);",
          "132:                 response.setEntity(\"Failed to lookup the CSRF token validator.\", MediaType.TEXT_PLAIN);",
          "133:                 result = SKIP;",
          "134:             } else if (!csrfToken.isTokenValid(formToken)) {",
          "135:                 response.setStatus(Status.CLIENT_ERROR_FORBIDDEN);",
          "136:                 response.setEntity(\"Invalid or missing form token.\", MediaType.TEXT_PLAIN);",
          "137:                 result = SKIP;",
          "138:             }",
          "139:         }",
          "141:         return result;",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java": [
          "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/AttachmentsResourceIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "319:         PostMethod postMethod = new PostMethod(attachmentsUri);",
          "320:         MultipartRequestEntity mpre = new MultipartRequestEntity(parts, postMethod.getParams());",
          "321:         postMethod.setRequestEntity(mpre);",
          "322:         httpClient.executeMethod(postMethod);",
          "323:         Assert.assertEquals(getHttpMethodInfo(postMethod), HttpStatus.SC_CREATED, postMethod.getStatusCode());",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "322:         postMethod.setRequestHeader(\"XWiki-Form-Token\", getFormToken(TestUtils.SUPER_ADMIN_CREDENTIALS.getUserName(),",
          "323:             TestUtils.SUPER_ADMIN_CREDENTIALS.getPassword()));",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java": [
          "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/CommentsResourceIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:         Assert.assertEquals(numberOfComments + 1, comments.getComments().size());",
          "129:     }",
          "131:     @Test",
          "132:     public void testGETComment() throws Exception",
          "133:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "131:     @Test",
          "132:     public void testPOSTCommentWithTextPlainNoCSRF() throws Exception",
          "133:     {",
          "134:         String commentsUri = buildURI(CommentsResource.class, getWiki(), this.spaces, this.pageName).toString();",
          "136:         GetMethod getMethod = executeGet(commentsUri);",
          "137:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
          "139:         Comments comments = (Comments) unmarshaller.unmarshal(getMethod.getResponseBodyAsStream());",
          "141:         int numberOfComments = comments.getComments().size();",
          "143:         PostMethod postMethod = executePost(commentsUri, \"Comment\", MediaType.TEXT_PLAIN,",
          "144:             TestUtils.SUPER_ADMIN_CREDENTIALS.getUserName(), TestUtils.SUPER_ADMIN_CREDENTIALS.getPassword(), null);",
          "145:         Assert.assertEquals(getHttpMethodInfo(postMethod), HttpStatus.SC_FORBIDDEN, postMethod.getStatusCode());",
          "146:         Assert.assertEquals(\"Invalid or missing form token.\", postMethod.getResponseBodyAsString());",
          "148:         getMethod = executeGet(commentsUri);",
          "149:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
          "151:         comments = (Comments) unmarshaller.unmarshal(getMethod.getResponseBodyAsStream());",
          "153:         Assert.assertEquals(numberOfComments, comments.getComments().size());",
          "154:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java": [
          "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/ObjectsResourceIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "520:         Assert.assertEquals(TAG_VALUE, getProperty(object, \"tags\").getValue());",
          "521:     }",
          "523:     @Test",
          "524:     public void testPUTPropertyFormUrlEncoded() throws Exception",
          "525:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "523:     @Test",
          "524:     public void testPOSTObjectFormUrlEncodedNoCSRF() throws Exception",
          "525:     {",
          "526:         final String tagValue = \"TAG\";",
          "527:         NameValuePair[] nameValuePairs = new NameValuePair[2];",
          "528:         String className = \"XWiki.TagClass\";",
          "529:         nameValuePairs[0] = new NameValuePair(\"className\", className);",
          "530:         nameValuePairs[1] = new NameValuePair(\"property#tags\", tagValue);",
          "532:         String objectGetURI = buildURI(ObjectsResource.class, getWiki(), this.spaces, this.pageName, className);",
          "535:         GetMethod getMethod = executeGet(objectGetURI);",
          "536:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
          "537:         Objects objects = (Objects) unmarshaller.unmarshal(getMethod.getResponseBodyAsStream());",
          "538:         int numObjects = objects.getObjectSummaries().size();",
          "540:         PostMethod postMethod = executePostForm(",
          "541:             buildURI(ObjectsResource.class, getWiki(), this.spaces, this.pageName), nameValuePairs,",
          "542:             TestUtils.SUPER_ADMIN_CREDENTIALS.getUserName(), TestUtils.SUPER_ADMIN_CREDENTIALS.getPassword(), null);",
          "543:         Assert.assertEquals(getHttpMethodInfo(postMethod), HttpStatus.SC_FORBIDDEN, postMethod.getStatusCode());",
          "544:         Assert.assertEquals(\"Invalid or missing form token.\", postMethod.getResponseBodyAsString());",
          "546:         getMethod = executeGet(objectGetURI);",
          "547:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
          "549:         objects = (Objects) unmarshaller.unmarshal(getMethod.getResponseBodyAsStream());",
          "550:         Assert.assertEquals(numObjects, objects.getObjectSummaries().size());",
          "551:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java": [
          "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/PageResourceIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "576:         Assert.assertEquals(TITLE, modifiedPage.getTitle());",
          "577:     }",
          "579:     @Test",
          "580:     public void testPUTPageSyntax() throws Exception",
          "581:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "579:     @Test",
          "580:     public void testPOSTPageFormUrlEncodedNoCSRF() throws Exception",
          "581:     {",
          "582:         final String CONTENT = String.format(\"This is a content (%d)\", System.currentTimeMillis());",
          "583:         final String TITLE = String.format(\"Title (%s)\", UUID.randomUUID().toString());",
          "585:         Page originalPage = getFirstPage();",
          "587:         Link link = getFirstLinkByRelation(originalPage, Relations.SELF);",
          "588:         Assert.assertNotNull(link);",
          "590:         NameValuePair[] nameValuePairs = new NameValuePair[2];",
          "591:         nameValuePairs[0] = new NameValuePair(\"title\", TITLE);",
          "592:         nameValuePairs[1] = new NameValuePair(\"content\", CONTENT);",
          "594:         PostMethod postMethod = executePostForm(String.format(\"%s?method=PUT\", link.getHref()), nameValuePairs,",
          "595:             TestUtils.SUPER_ADMIN_CREDENTIALS.getUserName(), TestUtils.SUPER_ADMIN_CREDENTIALS.getPassword(), null);",
          "596:         Assert.assertEquals(getHttpMethodInfo(postMethod), HttpStatus.SC_FORBIDDEN, postMethod.getStatusCode());",
          "597:         Assert.assertEquals(\"Invalid or missing form token.\", postMethod.getResponseBodyAsString());",
          "600:         GetMethod getMethod = executeGet(link.getHref());",
          "601:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
          "603:         Page modifiedPage = (Page) this.unmarshaller.unmarshal(getMethod.getResponseBodyAsStream());",
          "605:         Assert.assertEquals(originalPage.getContent(), modifiedPage.getContent());",
          "606:         Assert.assertEquals(originalPage.getTitle(), modifiedPage.getTitle());",
          "607:     }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java": [
          "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-test/xwiki-platform-rest-test-tests/src/test/it/org/xwiki/rest/test/framework/AbstractHttpIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "281:         return postMethod;",
          "282:     }",
          "284:     protected PostMethod executePost(String uri, String string, String mediaType, String userName, String password)",
          "285:         throws Exception",
          "286:     {",
          "287:         HttpClient httpClient = new HttpClient();",
          "288:         httpClient.getState().setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(userName, password));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "284:     protected String getFormToken(String userName, String password) throws Exception",
          "285:     {",
          "286:         GetMethod getMethod = executeGet(getFullUri(WikisResource.class), userName, password);",
          "287:         Assert.assertEquals(getHttpMethodInfo(getMethod), HttpStatus.SC_OK, getMethod.getStatusCode());",
          "288:         return getMethod.getResponseHeader(\"XWiki-Form-Token\").getValue();",
          "289:     }",
          "293:     {",
          "294:         return executePost(uri, string, mediaType, userName, password, getFormToken(userName, password));",
          "295:     }",
          "297:     protected PostMethod executePost(String uri, String string, String mediaType, String userName, String password,",
          "298:         String formToken) throws Exception",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "291:         PostMethod postMethod = new PostMethod(uri);",
          "292:         postMethod.addRequestHeader(\"Accept\", MediaType.APPLICATION_XML.toString());",
          "294:         RequestEntity entity = new StringRequestEntity(string, mediaType, \"UTF-8\");",
          "295:         postMethod.setRequestEntity(entity);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "306:         if (formToken != null) {",
          "307:             postMethod.addRequestHeader(\"XWiki-Form-Token\", formToken);",
          "308:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "302:     protected PostMethod executePostForm(String uri, NameValuePair[] nameValuePairs, String userName, String password)",
          "303:         throws Exception",
          "304:     {",
          "305:         HttpClient httpClient = new HttpClient();",
          "306:         httpClient.getState().setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(userName, password));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "320:     {",
          "321:         return executePostForm(uri, nameValuePairs, userName, password, getFormToken(userName, password));",
          "322:     }",
          "324:     protected PostMethod executePostForm(String uri, NameValuePair[] nameValuePairs, String userName, String password,",
          "325:         String formToken) throws Exception",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "309:         PostMethod postMethod = new PostMethod(uri);",
          "310:         postMethod.addRequestHeader(\"Accept\", MediaType.APPLICATION_XML.toString());",
          "311:         postMethod.addRequestHeader(\"Content-type\", MediaType.APPLICATION_WWW_FORM.toString());",
          "313:         postMethod.setRequestBody(nameValuePairs);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "334:         if (formToken != null) {",
          "335:             postMethod.addRequestHeader(\"XWiki-Form-Token\", formToken);",
          "336:         }",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js||xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js": [
          "File: xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js -> xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-war/src/main/webapp/resources/js/xwiki/xwiki.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "1890:       this.addEventListener('load', function() {",
          "1891:         handleResponseHeaders(this.getResponseHeader.bind(this));",
          "1892:       });",
          "1894:     };",
          "1895:   };",
          "1900:   var interceptFetch = function() {",
          "1901:     var originalFetch = window.fetch;",
          "1902:     if (originalFetch) {",
          "1903:       window.fetch = function() {",
          "1905:           handleResponseHeaders(response.headers.get.bind(response.headers));",
          "1906:           return response;",
          "1907:         });",
          "",
          "[Removed Lines]",
          "1893:       return originalOpen.apply(this, arguments);",
          "1904:         return originalFetch.apply(this, arguments).then(function(response) {",
          "",
          "[Added Lines]",
          "1894:       const result = originalOpen.apply(this, arguments);",
          "1896:       if (arguments.length >= 2 && window.location.origin === (new URL(arguments[1], window.location.href)).origin) {",
          "1898:         const formToken = document?.documentElement?.dataset?.xwikiFormToken;",
          "1899:         if (formToken) {",
          "1900:           this.setRequestHeader(\"XWiki-Form-Token\", formToken);",
          "1901:         }",
          "1902:       }",
          "1903:       return result;",
          "1916:         let modifiedArguments = arguments;",
          "1918:         const formToken = document?.documentElement?.dataset?.xwikiFormToken;",
          "1919:         if (formToken) {",
          "1920:           let request = null;",
          "1923:           if (arguments.length === 1 && arguments[0] instanceof Request) {",
          "1924:             request = arguments[0];",
          "1925:           } else if (arguments.length) {",
          "1926:             request = new Request(...arguments);",
          "1927:           }",
          "1930:           if (request !== null && window.location.origin === (new URL(request.url, window.location.href).origin)) {",
          "1931:             request.headers.append(\"XWiki-Form-Token\", formToken);",
          "1932:             modifiedArguments = [request];",
          "1933:           }",
          "1934:         }",
          "1935:         return originalFetch.apply(this, modifiedArguments).then(function(response) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8fee746d188d13cd6642a18713ae2d2aa21b53d6",
      "candidate_info": {
        "commit_hash": "8fee746d188d13cd6642a18713ae2d2aa21b53d6",
        "repo": "xwiki/xwiki-platform",
        "commit_url": "https://github.com/xwiki/xwiki-platform/commit/8fee746d188d13cd6642a18713ae2d2aa21b53d6",
        "files": [
          "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java"
        ],
        "message": "XWIKI-20876: FormTokenInjectionIT.simpleRESTPost is flickering\n\n* Wait for the last message to appear. This should hopefully fix the\n  flickering.",
        "before_after_code_files": [
          "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java"
          ],
          "candidate": [
            "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java"
          ]
        }
      },
      "candidate_diff": {
        "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java": [
          "File: xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java -> xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: package org.xwiki.flamingo.test.docker;",
          "22: import java.nio.charset.StandardCharsets;",
          "23: import java.util.Objects;",
          "26: import org.apache.commons.io.IOUtils;",
          "27: import org.junit.jupiter.api.Order;",
          "",
          "[Removed Lines]",
          "24: import java.util.stream.Stream;",
          "",
          "[Added Lines]",
          "23: import java.util.List;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "59:             + \"</script>\"",
          "60:             + \"{{/html}}\";",
          "61:         ViewPage viewPage = setup.createPage(reference, content);",
          "74:         );",
          "75:     }",
          "76: }",
          "",
          "[Removed Lines]",
          "62:         String pageContent = viewPage.getContent();",
          "64:         assertAll(",
          "65:             Stream.of(",
          "66:                 \"Simple POST: 201\",",
          "67:                 \"Only Request: 201\",",
          "68:                 \"Request with init: 201\",",
          "69:                 \"Simple with array headers: 201\",",
          "70:                 \"Request with init body\",",
          "71:                 \"Request Body\",",
          "72:                 \"Simple with array headers body\"",
          "73:             ).map(expected -> (() -> assertThat(pageContent, containsString(expected))))",
          "",
          "[Added Lines]",
          "63:         List<String> expectedMessages = List.of(",
          "64:             \"Simple POST: 201\",",
          "65:             \"Only Request: 201\",",
          "66:             \"Request with init: 201\",",
          "67:             \"Simple with array headers: 201\",",
          "68:             \"Request with init body\",",
          "69:             \"Request Body\",",
          "70:             \"Simple with array headers body\"",
          "71:         );",
          "74:         setup.getDriver().waitUntilCondition(",
          "75:             driver -> viewPage.getContent().contains(expectedMessages.get(expectedMessages.size() - 1))",
          "78:         String pageContent = viewPage.getContent();",
          "80:         assertAll(expectedMessages.stream().map(expected -> (() -> assertThat(pageContent, containsString(expected)))));",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "29f032db380189e091aefcc56553921a59ad55e7",
      "candidate_info": {
        "commit_hash": "29f032db380189e091aefcc56553921a59ad55e7",
        "repo": "xwiki/xwiki-platform",
        "commit_url": "https://github.com/xwiki/xwiki-platform/commit/29f032db380189e091aefcc56553921a59ad55e7",
        "files": [
          "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java"
        ],
        "message": "XWIKI-20135: Require a CSRF token for some request types in the REST API\n\n* Don't request the document twice in FormTokenInjectionIT\n* Treat the header name as case-insensitive (which it really is), as\n  otherwise this breaks with Tomcat.",
        "before_after_code_files": [
          "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
          "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java"
          ],
          "candidate": [
            "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
            "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java"
          ]
        }
      },
      "candidate_diff": {
        "xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java||xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java": [
          "File: xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java -> xwiki-platform-core/xwiki-platform-flamingo/xwiki-platform-flamingo-skin/xwiki-platform-flamingo-skin-test/xwiki-platform-flamingo-skin-test-docker/src/test/it/org/xwiki/flamingo/test/docker/FormTokenInjectionIT.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "58:             StandardCharsets.UTF_8)",
          "59:             + \"</script>\"",
          "60:             + \"{{/html}}\";",
          "64:         String pageContent = viewPage.getContent();",
          "66:         assertAll(",
          "",
          "[Removed Lines]",
          "61:         setup.createPage(reference, content);",
          "63:         ViewPage viewPage = setup.gotoPage(reference);",
          "",
          "[Added Lines]",
          "61:         ViewPage viewPage = setup.createPage(reference, content);",
          "",
          "---------------"
        ],
        "xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java||xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java": [
          "File: xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java -> xwiki-platform-core/xwiki-platform-rest/xwiki-platform-rest-server/src/main/java/org/xwiki/rest/internal/XWikiFilter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "123:             StringUtils.startsWith(StringUtils.lowerCase(servletRequest.getContentType()), expectedType)))",
          "124:         {",
          "125:             Series<Header> requestHeaders = request.getHeaders();",
          "",
          "[Removed Lines]",
          "126:             String formToken = requestHeaders.getFirstValue(FORM_TOKEN_HEADER);",
          "",
          "[Added Lines]",
          "126:             String formToken = requestHeaders.getFirstValue(FORM_TOKEN_HEADER, true);",
          "",
          "---------------"
        ]
      }
    }
  ]
}