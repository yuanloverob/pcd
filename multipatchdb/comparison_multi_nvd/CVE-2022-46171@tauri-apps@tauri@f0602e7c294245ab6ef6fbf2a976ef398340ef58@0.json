{
  "cve_id": "CVE-2022-46171",
  "cve_desc": "Tauri is a framework for building binaries for all major desktop platforms. The filesystem glob pattern wildcards `*`, `?`, and `[...]` match file path literals and leading dots by default, which unintentionally exposes sub folder content of allowed paths. Scopes without the wildcards are not affected. As `**` allows for sub directories the behavior there is also as expected. The issue has been patched in the latest release and was backported into the currently supported 1.x branches. There are no known workarounds at the time of publication.",
  "repo": "tauri-apps/tauri",
  "patch_hash": "f0602e7c294245ab6ef6fbf2a976ef398340ef58",
  "patch_info": {
    "commit_hash": "f0602e7c294245ab6ef6fbf2a976ef398340ef58",
    "repo": "tauri-apps/tauri",
    "commit_url": "https://github.com/tauri-apps/tauri/commit/f0602e7c294245ab6ef6fbf2a976ef398340ef58",
    "files": [
      ".changes/glob-match-require_literal_separator.md",
      "core/tauri/src/scope/fs.rs"
    ],
    "message": "Merge pull request from GHSA-6mv3-wm7j-h4w5\n\n* fix(core): use `require_literal_separator` when matching paths\n\n* document the need for `require_literal_separator`\n\n* use `require_literal_leading_dot`",
    "before_after_code_files": [
      "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs"
    ]
  },
  "patch_diff": {
    "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs": [
      "File: core/tauri/src/scope/fs.rs -> core/tauri/src/scope/fs.rs",
      "--- Hunk 1 ---",
      "[Context before]",
      "217:     if let Ok(path) = path {",
      "218:       let path: PathBuf = path.components().collect();",
      "220:       let forbidden = self",
      "221:         .forbidden_patterns",
      "222:         .lock()",
      "223:         .unwrap()",
      "224:         .iter()",
      "227:       if forbidden {",
      "228:         false",
      "",
      "[Removed Lines]",
      "225:         .any(|p| p.matches_path(&path));",
      "",
      "[Added Lines]",
      "219:       let options = glob::MatchOptions {",
      "222:         require_literal_separator: true,",
      "224:         #[cfg(unix)]",
      "225:         require_literal_leading_dot: true,",
      "226:         ..Default::default()",
      "227:       };",
      "234:         .any(|p| p.matches_path_with(&path, options));",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "232:           .lock()",
      "233:           .unwrap()",
      "234:           .iter()",
      "236:         allowed",
      "237:       }",
      "238:     } else {",
      "",
      "[Removed Lines]",
      "235:           .any(|p| p.matches_path(&path));",
      "",
      "[Added Lines]",
      "244:           .any(|p| p.matches_path_with(&path, options));",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "269:   #[test]",
      "270:   fn path_is_escaped() {",
      "271:     let scope = new_scope();",
      "277:     let scope = new_scope();",
      "283:     let scope = new_scope();",
      "292:     let scope = new_scope();",
      "299:   }",
      "300: }",
      "",
      "[Removed Lines]",
      "272:     scope.allow_directory(\"/home/tauri/**\", false).unwrap();",
      "273:     assert!(scope.is_allowed(\"/home/tauri/**\"));",
      "274:     assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
      "275:     assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
      "278:     scope.allow_file(\"/home/tauri/**\").unwrap();",
      "279:     assert!(scope.is_allowed(\"/home/tauri/**\"));",
      "280:     assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
      "281:     assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
      "284:     scope.allow_directory(\"/home/tauri\", true).unwrap();",
      "285:     scope.forbid_directory(\"/home/tauri/**\", false).unwrap();",
      "286:     assert!(!scope.is_allowed(\"/home/tauri/**\"));",
      "287:     assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
      "288:     assert!(!scope.is_allowed(\"/home/tauri/**/inner/file\"));",
      "289:     assert!(scope.is_allowed(\"/home/tauri/inner/folder/anyfile\"));",
      "290:     assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
      "293:     scope.allow_directory(\"/home/tauri\", true).unwrap();",
      "294:     scope.forbid_file(\"/home/tauri/**\").unwrap();",
      "295:     assert!(!scope.is_allowed(\"/home/tauri/**\"));",
      "296:     assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
      "297:     assert!(scope.is_allowed(\"/home/tauri/**/inner/file\"));",
      "298:     assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
      "",
      "[Added Lines]",
      "281:     #[cfg(unix)]",
      "282:     {",
      "283:       scope.allow_directory(\"/home/tauri/**\", false).unwrap();",
      "284:       assert!(scope.is_allowed(\"/home/tauri/**\"));",
      "285:       assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
      "286:       assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
      "287:     }",
      "288:     #[cfg(windows)]",
      "289:     {",
      "290:       scope.allow_directory(\"C:\\\\home\\\\tauri\\\\**\", false).unwrap();",
      "291:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
      "292:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
      "293:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
      "294:     }",
      "297:     #[cfg(unix)]",
      "298:     {",
      "299:       scope.allow_file(\"/home/tauri/**\").unwrap();",
      "300:       assert!(scope.is_allowed(\"/home/tauri/**\"));",
      "301:       assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
      "302:       assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
      "303:     }",
      "304:     #[cfg(windows)]",
      "305:     {",
      "306:       scope.allow_file(\"C:\\\\home\\\\tauri\\\\**\").unwrap();",
      "307:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
      "308:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
      "309:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
      "310:     }",
      "312:     let scope = new_scope();",
      "313:     #[cfg(unix)]",
      "314:     {",
      "315:       scope.allow_directory(\"/home/tauri\", true).unwrap();",
      "316:       scope.forbid_directory(\"/home/tauri/**\", false).unwrap();",
      "317:       assert!(!scope.is_allowed(\"/home/tauri/**\"));",
      "318:       assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
      "319:       assert!(scope.is_allowed(\"/home/tauri/**/inner/file\"));",
      "320:       assert!(scope.is_allowed(\"/home/tauri/inner/folder/anyfile\"));",
      "321:       assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
      "322:     }",
      "323:     #[cfg(windows)]",
      "324:     {",
      "325:       scope.allow_directory(\"C:\\\\home\\\\tauri\", true).unwrap();",
      "326:       scope",
      "327:         .forbid_directory(\"C:\\\\home\\\\tauri\\\\**\", false)",
      "328:         .unwrap();",
      "329:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
      "330:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
      "331:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\inner\\\\file\"));",
      "332:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\inner\\\\folder\\\\anyfile\"));",
      "333:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
      "334:     }",
      "337:     #[cfg(unix)]",
      "338:     {",
      "339:       scope.allow_directory(\"/home/tauri\", true).unwrap();",
      "340:       scope.forbid_file(\"/home/tauri/**\").unwrap();",
      "341:       assert!(!scope.is_allowed(\"/home/tauri/**\"));",
      "342:       assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
      "343:       assert!(scope.is_allowed(\"/home/tauri/**/inner/file\"));",
      "344:       assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
      "345:     }",
      "346:     #[cfg(windows)]",
      "347:     {",
      "348:       scope.allow_directory(\"C:\\\\home\\\\tauri\", true).unwrap();",
      "349:       scope.forbid_file(\"C:\\\\home\\\\tauri\\\\**\").unwrap();",
      "350:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
      "351:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
      "352:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\inner\\\\file\"));",
      "353:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
      "354:     }",
      "357:     #[cfg(unix)]",
      "358:     {",
      "359:       scope.allow_directory(\"/home/tauri\", false).unwrap();",
      "360:       assert!(scope.is_allowed(\"/home/tauri/**\"));",
      "361:       assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
      "362:       assert!(!scope.is_allowed(\"/home/tauri/**/inner/file\"));",
      "363:       assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
      "364:     }",
      "365:     #[cfg(windows)]",
      "366:     {",
      "367:       scope.allow_directory(\"C:\\\\home\\\\tauri\", false).unwrap();",
      "368:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
      "369:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
      "370:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\inner\\\\file\"));",
      "371:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
      "372:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2654c0f49da23434d36447d0908fa24e61ff5e4e",
      "candidate_info": {
        "commit_hash": "2654c0f49da23434d36447d0908fa24e61ff5e4e",
        "repo": "tauri-apps/tauri",
        "commit_url": "https://github.com/tauri-apps/tauri/commit/2654c0f49da23434d36447d0908fa24e61ff5e4e",
        "files": [
          ".changes/glob-match-require_literal_separator.md",
          "core/tauri/src/scope/fs.rs"
        ],
        "message": "Merge pull request from GHSA-6mv3-wm7j-h4w5\n\n* fix(core): use `require_literal_separator` when matching paths\n\n* document the need for `require_literal_separator`\n\n* use `require_literal_leading_dot`",
        "before_after_code_files": [
          "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs"
          ],
          "candidate": [
            "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs"
          ]
        }
      },
      "candidate_diff": {
        "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs": [
          "File: core/tauri/src/scope/fs.rs -> core/tauri/src/scope/fs.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "217:     if let Ok(path) = path {",
          "218:       let path: PathBuf = path.components().collect();",
          "220:       let forbidden = self",
          "221:         .forbidden_patterns",
          "222:         .lock()",
          "223:         .unwrap()",
          "224:         .iter()",
          "227:       if forbidden {",
          "228:         false",
          "",
          "[Removed Lines]",
          "225:         .any(|p| p.matches_path(&path));",
          "",
          "[Added Lines]",
          "219:       let options = glob::MatchOptions {",
          "222:         require_literal_separator: true,",
          "224:         #[cfg(unix)]",
          "225:         require_literal_leading_dot: true,",
          "226:         ..Default::default()",
          "227:       };",
          "234:         .any(|p| p.matches_path_with(&path, options));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "232:           .lock()",
          "233:           .unwrap()",
          "234:           .iter()",
          "236:         allowed",
          "237:       }",
          "238:     } else {",
          "",
          "[Removed Lines]",
          "235:           .any(|p| p.matches_path(&path));",
          "",
          "[Added Lines]",
          "244:           .any(|p| p.matches_path_with(&path, options));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "269:   #[test]",
          "270:   fn path_is_escaped() {",
          "271:     let scope = new_scope();",
          "277:     let scope = new_scope();",
          "283:     let scope = new_scope();",
          "292:     let scope = new_scope();",
          "299:   }",
          "300: }",
          "",
          "[Removed Lines]",
          "272:     scope.allow_directory(\"/home/tauri/**\", false).unwrap();",
          "273:     assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "274:     assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
          "275:     assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
          "278:     scope.allow_file(\"/home/tauri/**\").unwrap();",
          "279:     assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "280:     assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "281:     assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
          "284:     scope.allow_directory(\"/home/tauri\", true).unwrap();",
          "285:     scope.forbid_directory(\"/home/tauri/**\", false).unwrap();",
          "286:     assert!(!scope.is_allowed(\"/home/tauri/**\"));",
          "287:     assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "288:     assert!(!scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "289:     assert!(scope.is_allowed(\"/home/tauri/inner/folder/anyfile\"));",
          "290:     assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "293:     scope.allow_directory(\"/home/tauri\", true).unwrap();",
          "294:     scope.forbid_file(\"/home/tauri/**\").unwrap();",
          "295:     assert!(!scope.is_allowed(\"/home/tauri/**\"));",
          "296:     assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
          "297:     assert!(scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "298:     assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "",
          "[Added Lines]",
          "281:     #[cfg(unix)]",
          "282:     {",
          "283:       scope.allow_directory(\"/home/tauri/**\", false).unwrap();",
          "284:       assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "285:       assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
          "286:       assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
          "287:     }",
          "288:     #[cfg(windows)]",
          "289:     {",
          "290:       scope.allow_directory(\"C:\\\\home\\\\tauri\\\\**\", false).unwrap();",
          "291:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "292:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "293:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "294:     }",
          "297:     #[cfg(unix)]",
          "298:     {",
          "299:       scope.allow_file(\"/home/tauri/**\").unwrap();",
          "300:       assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "301:       assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "302:       assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
          "303:     }",
          "304:     #[cfg(windows)]",
          "305:     {",
          "306:       scope.allow_file(\"C:\\\\home\\\\tauri\\\\**\").unwrap();",
          "307:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "308:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "309:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "310:     }",
          "312:     let scope = new_scope();",
          "313:     #[cfg(unix)]",
          "314:     {",
          "315:       scope.allow_directory(\"/home/tauri\", true).unwrap();",
          "316:       scope.forbid_directory(\"/home/tauri/**\", false).unwrap();",
          "317:       assert!(!scope.is_allowed(\"/home/tauri/**\"));",
          "318:       assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "319:       assert!(scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "320:       assert!(scope.is_allowed(\"/home/tauri/inner/folder/anyfile\"));",
          "321:       assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "322:     }",
          "323:     #[cfg(windows)]",
          "324:     {",
          "325:       scope.allow_directory(\"C:\\\\home\\\\tauri\", true).unwrap();",
          "326:       scope",
          "327:         .forbid_directory(\"C:\\\\home\\\\tauri\\\\**\", false)",
          "328:         .unwrap();",
          "329:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "330:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "331:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\inner\\\\file\"));",
          "332:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\inner\\\\folder\\\\anyfile\"));",
          "333:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "334:     }",
          "337:     #[cfg(unix)]",
          "338:     {",
          "339:       scope.allow_directory(\"/home/tauri\", true).unwrap();",
          "340:       scope.forbid_file(\"/home/tauri/**\").unwrap();",
          "341:       assert!(!scope.is_allowed(\"/home/tauri/**\"));",
          "342:       assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
          "343:       assert!(scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "344:       assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "345:     }",
          "346:     #[cfg(windows)]",
          "347:     {",
          "348:       scope.allow_directory(\"C:\\\\home\\\\tauri\", true).unwrap();",
          "349:       scope.forbid_file(\"C:\\\\home\\\\tauri\\\\**\").unwrap();",
          "350:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "351:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "352:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\inner\\\\file\"));",
          "353:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "354:     }",
          "357:     #[cfg(unix)]",
          "358:     {",
          "359:       scope.allow_directory(\"/home/tauri\", false).unwrap();",
          "360:       assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "361:       assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "362:       assert!(!scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "363:       assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "364:     }",
          "365:     #[cfg(windows)]",
          "366:     {",
          "367:       scope.allow_directory(\"C:\\\\home\\\\tauri\", false).unwrap();",
          "368:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "369:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "370:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\inner\\\\file\"));",
          "371:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "372:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1b0ad6e8b721cf1420a9a4b9be5b05c39941d16",
      "candidate_info": {
        "commit_hash": "f1b0ad6e8b721cf1420a9a4b9be5b05c39941d16",
        "repo": "tauri-apps/tauri",
        "commit_url": "https://github.com/tauri-apps/tauri/commit/f1b0ad6e8b721cf1420a9a4b9be5b05c39941d16",
        "files": [
          ".changes/glob-match-require_literal_separator.md",
          "core/tauri/src/scope/fs.rs"
        ],
        "message": "Merge pull request from GHSA-6mv3-wm7j-h4w5\n\n* fix(core): use `require_literal_separator` when matching paths\n\n* document the need for `require_literal_separator`\n\n* use `require_literal_leading_dot`",
        "before_after_code_files": [
          "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs"
          ],
          "candidate": [
            "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs"
          ]
        }
      },
      "candidate_diff": {
        "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs": [
          "File: core/tauri/src/scope/fs.rs -> core/tauri/src/scope/fs.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "217:     if let Ok(path) = path {",
          "218:       let path: PathBuf = path.components().collect();",
          "220:       let forbidden = self",
          "221:         .forbidden_patterns",
          "222:         .lock()",
          "223:         .unwrap()",
          "224:         .iter()",
          "227:       if forbidden {",
          "228:         false",
          "",
          "[Removed Lines]",
          "225:         .any(|p| p.matches_path(&path));",
          "",
          "[Added Lines]",
          "219:       let options = glob::MatchOptions {",
          "222:         require_literal_separator: true,",
          "224:         #[cfg(unix)]",
          "225:         require_literal_leading_dot: true,",
          "226:         ..Default::default()",
          "227:       };",
          "234:         .any(|p| p.matches_path_with(&path, options));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "232:           .lock()",
          "233:           .unwrap()",
          "234:           .iter()",
          "236:         allowed",
          "237:       }",
          "238:     } else {",
          "",
          "[Removed Lines]",
          "235:           .any(|p| p.matches_path(&path));",
          "",
          "[Added Lines]",
          "244:           .any(|p| p.matches_path_with(&path, options));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "269:   #[test]",
          "270:   fn path_is_escaped() {",
          "271:     let scope = new_scope();",
          "277:     let scope = new_scope();",
          "283:     let scope = new_scope();",
          "292:     let scope = new_scope();",
          "299:   }",
          "300: }",
          "",
          "[Removed Lines]",
          "272:     scope.allow_directory(\"/home/tauri/**\", false).unwrap();",
          "273:     assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "274:     assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
          "275:     assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
          "278:     scope.allow_file(\"/home/tauri/**\").unwrap();",
          "279:     assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "280:     assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "281:     assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
          "284:     scope.allow_directory(\"/home/tauri\", true).unwrap();",
          "285:     scope.forbid_directory(\"/home/tauri/**\", false).unwrap();",
          "286:     assert!(!scope.is_allowed(\"/home/tauri/**\"));",
          "287:     assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "288:     assert!(!scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "289:     assert!(scope.is_allowed(\"/home/tauri/inner/folder/anyfile\"));",
          "290:     assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "293:     scope.allow_directory(\"/home/tauri\", true).unwrap();",
          "294:     scope.forbid_file(\"/home/tauri/**\").unwrap();",
          "295:     assert!(!scope.is_allowed(\"/home/tauri/**\"));",
          "296:     assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
          "297:     assert!(scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "298:     assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "",
          "[Added Lines]",
          "281:     #[cfg(unix)]",
          "282:     {",
          "283:       scope.allow_directory(\"/home/tauri/**\", false).unwrap();",
          "284:       assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "285:       assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
          "286:       assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
          "287:     }",
          "288:     #[cfg(windows)]",
          "289:     {",
          "290:       scope.allow_directory(\"C:\\\\home\\\\tauri\\\\**\", false).unwrap();",
          "291:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "292:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "293:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "294:     }",
          "297:     #[cfg(unix)]",
          "298:     {",
          "299:       scope.allow_file(\"/home/tauri/**\").unwrap();",
          "300:       assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "301:       assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "302:       assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
          "303:     }",
          "304:     #[cfg(windows)]",
          "305:     {",
          "306:       scope.allow_file(\"C:\\\\home\\\\tauri\\\\**\").unwrap();",
          "307:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "308:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "309:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "310:     }",
          "312:     let scope = new_scope();",
          "313:     #[cfg(unix)]",
          "314:     {",
          "315:       scope.allow_directory(\"/home/tauri\", true).unwrap();",
          "316:       scope.forbid_directory(\"/home/tauri/**\", false).unwrap();",
          "317:       assert!(!scope.is_allowed(\"/home/tauri/**\"));",
          "318:       assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "319:       assert!(scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "320:       assert!(scope.is_allowed(\"/home/tauri/inner/folder/anyfile\"));",
          "321:       assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "322:     }",
          "323:     #[cfg(windows)]",
          "324:     {",
          "325:       scope.allow_directory(\"C:\\\\home\\\\tauri\", true).unwrap();",
          "326:       scope",
          "327:         .forbid_directory(\"C:\\\\home\\\\tauri\\\\**\", false)",
          "328:         .unwrap();",
          "329:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "330:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "331:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\inner\\\\file\"));",
          "332:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\inner\\\\folder\\\\anyfile\"));",
          "333:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "334:     }",
          "337:     #[cfg(unix)]",
          "338:     {",
          "339:       scope.allow_directory(\"/home/tauri\", true).unwrap();",
          "340:       scope.forbid_file(\"/home/tauri/**\").unwrap();",
          "341:       assert!(!scope.is_allowed(\"/home/tauri/**\"));",
          "342:       assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
          "343:       assert!(scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "344:       assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "345:     }",
          "346:     #[cfg(windows)]",
          "347:     {",
          "348:       scope.allow_directory(\"C:\\\\home\\\\tauri\", true).unwrap();",
          "349:       scope.forbid_file(\"C:\\\\home\\\\tauri\\\\**\").unwrap();",
          "350:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "351:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "352:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\inner\\\\file\"));",
          "353:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "354:     }",
          "357:     #[cfg(unix)]",
          "358:     {",
          "359:       scope.allow_directory(\"/home/tauri\", false).unwrap();",
          "360:       assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "361:       assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "362:       assert!(!scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "363:       assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "364:     }",
          "365:     #[cfg(windows)]",
          "366:     {",
          "367:       scope.allow_directory(\"C:\\\\home\\\\tauri\", false).unwrap();",
          "368:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "369:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "370:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\inner\\\\file\"));",
          "371:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "372:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "72389b00d7b495ffd7750eb1e75a3b8537d07cf3",
      "candidate_info": {
        "commit_hash": "72389b00d7b495ffd7750eb1e75a3b8537d07cf3",
        "repo": "tauri-apps/tauri",
        "commit_url": "https://github.com/tauri-apps/tauri/commit/72389b00d7b495ffd7750eb1e75a3b8537d07cf3",
        "files": [
          ".changes/glob-match-require_literal_separator.md",
          "core/tauri/src/scope/fs.rs"
        ],
        "message": "Merge pull request from GHSA-6mv3-wm7j-h4w5\n\n* fix(core): use `require_literal_separator` when matching paths\n\n* document the need for `require_literal_separator`\n\n* use `require_literal_leading_dot`",
        "before_after_code_files": [
          "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs"
          ],
          "candidate": [
            "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs"
          ]
        }
      },
      "candidate_diff": {
        "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs": [
          "File: core/tauri/src/scope/fs.rs -> core/tauri/src/scope/fs.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "217:     if let Ok(path) = path {",
          "218:       let path: PathBuf = path.components().collect();",
          "220:       let forbidden = self",
          "221:         .forbidden_patterns",
          "222:         .lock()",
          "223:         .unwrap()",
          "224:         .iter()",
          "227:       if forbidden {",
          "228:         false",
          "",
          "[Removed Lines]",
          "225:         .any(|p| p.matches_path(&path));",
          "",
          "[Added Lines]",
          "219:       let options = glob::MatchOptions {",
          "222:         require_literal_separator: true,",
          "224:         #[cfg(unix)]",
          "225:         require_literal_leading_dot: true,",
          "226:         ..Default::default()",
          "227:       };",
          "234:         .any(|p| p.matches_path_with(&path, options));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "232:           .lock()",
          "233:           .unwrap()",
          "234:           .iter()",
          "236:         allowed",
          "237:       }",
          "238:     } else {",
          "",
          "[Removed Lines]",
          "235:           .any(|p| p.matches_path(&path));",
          "",
          "[Added Lines]",
          "244:           .any(|p| p.matches_path_with(&path, options));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "269:   #[test]",
          "270:   fn path_is_escaped() {",
          "271:     let scope = new_scope();",
          "277:     let scope = new_scope();",
          "283:     let scope = new_scope();",
          "292:     let scope = new_scope();",
          "299:   }",
          "300: }",
          "",
          "[Removed Lines]",
          "272:     scope.allow_directory(\"/home/tauri/**\", false).unwrap();",
          "273:     assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "274:     assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
          "275:     assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
          "278:     scope.allow_file(\"/home/tauri/**\").unwrap();",
          "279:     assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "280:     assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "281:     assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
          "284:     scope.allow_directory(\"/home/tauri\", true).unwrap();",
          "285:     scope.forbid_directory(\"/home/tauri/**\", false).unwrap();",
          "286:     assert!(!scope.is_allowed(\"/home/tauri/**\"));",
          "287:     assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "288:     assert!(!scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "289:     assert!(scope.is_allowed(\"/home/tauri/inner/folder/anyfile\"));",
          "290:     assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "293:     scope.allow_directory(\"/home/tauri\", true).unwrap();",
          "294:     scope.forbid_file(\"/home/tauri/**\").unwrap();",
          "295:     assert!(!scope.is_allowed(\"/home/tauri/**\"));",
          "296:     assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
          "297:     assert!(scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "298:     assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "",
          "[Added Lines]",
          "281:     #[cfg(unix)]",
          "282:     {",
          "283:       scope.allow_directory(\"/home/tauri/**\", false).unwrap();",
          "284:       assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "285:       assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
          "286:       assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
          "287:     }",
          "288:     #[cfg(windows)]",
          "289:     {",
          "290:       scope.allow_directory(\"C:\\\\home\\\\tauri\\\\**\", false).unwrap();",
          "291:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "292:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "293:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "294:     }",
          "297:     #[cfg(unix)]",
          "298:     {",
          "299:       scope.allow_file(\"/home/tauri/**\").unwrap();",
          "300:       assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "301:       assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "302:       assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
          "303:     }",
          "304:     #[cfg(windows)]",
          "305:     {",
          "306:       scope.allow_file(\"C:\\\\home\\\\tauri\\\\**\").unwrap();",
          "307:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "308:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "309:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "310:     }",
          "312:     let scope = new_scope();",
          "313:     #[cfg(unix)]",
          "314:     {",
          "315:       scope.allow_directory(\"/home/tauri\", true).unwrap();",
          "316:       scope.forbid_directory(\"/home/tauri/**\", false).unwrap();",
          "317:       assert!(!scope.is_allowed(\"/home/tauri/**\"));",
          "318:       assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "319:       assert!(scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "320:       assert!(scope.is_allowed(\"/home/tauri/inner/folder/anyfile\"));",
          "321:       assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "322:     }",
          "323:     #[cfg(windows)]",
          "324:     {",
          "325:       scope.allow_directory(\"C:\\\\home\\\\tauri\", true).unwrap();",
          "326:       scope",
          "327:         .forbid_directory(\"C:\\\\home\\\\tauri\\\\**\", false)",
          "328:         .unwrap();",
          "329:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "330:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "331:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\inner\\\\file\"));",
          "332:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\inner\\\\folder\\\\anyfile\"));",
          "333:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "334:     }",
          "337:     #[cfg(unix)]",
          "338:     {",
          "339:       scope.allow_directory(\"/home/tauri\", true).unwrap();",
          "340:       scope.forbid_file(\"/home/tauri/**\").unwrap();",
          "341:       assert!(!scope.is_allowed(\"/home/tauri/**\"));",
          "342:       assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
          "343:       assert!(scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "344:       assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "345:     }",
          "346:     #[cfg(windows)]",
          "347:     {",
          "348:       scope.allow_directory(\"C:\\\\home\\\\tauri\", true).unwrap();",
          "349:       scope.forbid_file(\"C:\\\\home\\\\tauri\\\\**\").unwrap();",
          "350:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "351:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "352:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\inner\\\\file\"));",
          "353:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "354:     }",
          "357:     #[cfg(unix)]",
          "358:     {",
          "359:       scope.allow_directory(\"/home/tauri\", false).unwrap();",
          "360:       assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "361:       assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "362:       assert!(!scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "363:       assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "364:     }",
          "365:     #[cfg(windows)]",
          "366:     {",
          "367:       scope.allow_directory(\"C:\\\\home\\\\tauri\", false).unwrap();",
          "368:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "369:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "370:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\inner\\\\file\"));",
          "371:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "372:     }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9ad0a9a0aa88a67c3d81ef84df4aad23556affde",
      "candidate_info": {
        "commit_hash": "9ad0a9a0aa88a67c3d81ef84df4aad23556affde",
        "repo": "tauri-apps/tauri",
        "commit_url": "https://github.com/tauri-apps/tauri/commit/9ad0a9a0aa88a67c3d81ef84df4aad23556affde",
        "files": [
          ".changes/glob-match-require_literal_separator.md",
          "core/tauri/src/scope/fs.rs"
        ],
        "message": "Merge pull request from GHSA-6mv3-wm7j-h4w5\n\n* fix(core): use `require_literal_separator` when matching paths\n\n* document the need for `require_literal_separator`\n\n* use `require_literal_leading_dot`",
        "before_after_code_files": [
          "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs"
          ],
          "candidate": [
            "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs"
          ]
        }
      },
      "candidate_diff": {
        "core/tauri/src/scope/fs.rs||core/tauri/src/scope/fs.rs": [
          "File: core/tauri/src/scope/fs.rs -> core/tauri/src/scope/fs.rs",
          "--- Hunk 1 ---",
          "[Context before]",
          "217:     if let Ok(path) = path {",
          "218:       let path: PathBuf = path.components().collect();",
          "220:       let forbidden = self",
          "221:         .forbidden_patterns",
          "222:         .lock()",
          "223:         .unwrap()",
          "224:         .iter()",
          "227:       if forbidden {",
          "228:         false",
          "",
          "[Removed Lines]",
          "225:         .any(|p| p.matches_path(&path));",
          "",
          "[Added Lines]",
          "219:       let options = glob::MatchOptions {",
          "222:         require_literal_separator: true,",
          "224:         #[cfg(unix)]",
          "225:         require_literal_leading_dot: true,",
          "226:         ..Default::default()",
          "227:       };",
          "234:         .any(|p| p.matches_path_with(&path, options));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "232:           .lock()",
          "233:           .unwrap()",
          "234:           .iter()",
          "236:         allowed",
          "237:       }",
          "238:     } else {",
          "",
          "[Removed Lines]",
          "235:           .any(|p| p.matches_path(&path));",
          "",
          "[Added Lines]",
          "244:           .any(|p| p.matches_path_with(&path, options));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "269:   #[test]",
          "270:   fn path_is_escaped() {",
          "271:     let scope = new_scope();",
          "277:     let scope = new_scope();",
          "283:     let scope = new_scope();",
          "292:     let scope = new_scope();",
          "299:   }",
          "300: }",
          "",
          "[Removed Lines]",
          "272:     scope.allow_directory(\"/home/tauri/**\", false).unwrap();",
          "273:     assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "274:     assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
          "275:     assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
          "278:     scope.allow_file(\"/home/tauri/**\").unwrap();",
          "279:     assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "280:     assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "281:     assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
          "284:     scope.allow_directory(\"/home/tauri\", true).unwrap();",
          "285:     scope.forbid_directory(\"/home/tauri/**\", false).unwrap();",
          "286:     assert!(!scope.is_allowed(\"/home/tauri/**\"));",
          "287:     assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "288:     assert!(!scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "289:     assert!(scope.is_allowed(\"/home/tauri/inner/folder/anyfile\"));",
          "290:     assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "293:     scope.allow_directory(\"/home/tauri\", true).unwrap();",
          "294:     scope.forbid_file(\"/home/tauri/**\").unwrap();",
          "295:     assert!(!scope.is_allowed(\"/home/tauri/**\"));",
          "296:     assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
          "297:     assert!(scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "298:     assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "",
          "[Added Lines]",
          "281:     #[cfg(unix)]",
          "282:     {",
          "283:       scope.allow_directory(\"/home/tauri/**\", false).unwrap();",
          "284:       assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "285:       assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
          "286:       assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
          "287:     }",
          "288:     #[cfg(windows)]",
          "289:     {",
          "290:       scope.allow_directory(\"C:\\\\home\\\\tauri\\\\**\", false).unwrap();",
          "291:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "292:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "293:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "294:     }",
          "297:     #[cfg(unix)]",
          "298:     {",
          "299:       scope.allow_file(\"/home/tauri/**\").unwrap();",
          "300:       assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "301:       assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "302:       assert!(!scope.is_allowed(\"/home/tauri/anyfile\"));",
          "303:     }",
          "304:     #[cfg(windows)]",
          "305:     {",
          "306:       scope.allow_file(\"C:\\\\home\\\\tauri\\\\**\").unwrap();",
          "307:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "308:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "309:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "310:     }",
          "312:     let scope = new_scope();",
          "313:     #[cfg(unix)]",
          "314:     {",
          "315:       scope.allow_directory(\"/home/tauri\", true).unwrap();",
          "316:       scope.forbid_directory(\"/home/tauri/**\", false).unwrap();",
          "317:       assert!(!scope.is_allowed(\"/home/tauri/**\"));",
          "318:       assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "319:       assert!(scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "320:       assert!(scope.is_allowed(\"/home/tauri/inner/folder/anyfile\"));",
          "321:       assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "322:     }",
          "323:     #[cfg(windows)]",
          "324:     {",
          "325:       scope.allow_directory(\"C:\\\\home\\\\tauri\", true).unwrap();",
          "326:       scope",
          "327:         .forbid_directory(\"C:\\\\home\\\\tauri\\\\**\", false)",
          "328:         .unwrap();",
          "329:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "330:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "331:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\inner\\\\file\"));",
          "332:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\inner\\\\folder\\\\anyfile\"));",
          "333:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "334:     }",
          "337:     #[cfg(unix)]",
          "338:     {",
          "339:       scope.allow_directory(\"/home/tauri\", true).unwrap();",
          "340:       scope.forbid_file(\"/home/tauri/**\").unwrap();",
          "341:       assert!(!scope.is_allowed(\"/home/tauri/**\"));",
          "342:       assert!(scope.is_allowed(\"/home/tauri/**/file\"));",
          "343:       assert!(scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "344:       assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "345:     }",
          "346:     #[cfg(windows)]",
          "347:     {",
          "348:       scope.allow_directory(\"C:\\\\home\\\\tauri\", true).unwrap();",
          "349:       scope.forbid_file(\"C:\\\\home\\\\tauri\\\\**\").unwrap();",
          "350:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "351:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "352:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\inner\\\\file\"));",
          "353:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "354:     }",
          "357:     #[cfg(unix)]",
          "358:     {",
          "359:       scope.allow_directory(\"/home/tauri\", false).unwrap();",
          "360:       assert!(scope.is_allowed(\"/home/tauri/**\"));",
          "361:       assert!(!scope.is_allowed(\"/home/tauri/**/file\"));",
          "362:       assert!(!scope.is_allowed(\"/home/tauri/**/inner/file\"));",
          "363:       assert!(scope.is_allowed(\"/home/tauri/anyfile\"));",
          "364:     }",
          "365:     #[cfg(windows)]",
          "366:     {",
          "367:       scope.allow_directory(\"C:\\\\home\\\\tauri\", false).unwrap();",
          "368:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\"));",
          "369:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\file\"));",
          "370:       assert!(!scope.is_allowed(\"C:\\\\home\\\\tauri\\\\**\\\\inner\\\\file\"));",
          "371:       assert!(scope.is_allowed(\"C:\\\\home\\\\tauri\\\\anyfile\"));",
          "372:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}