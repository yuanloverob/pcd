{
  "cve_id": "CVE-2022-31076",
  "cve_desc": "KubeEdge is built upon Kubernetes and extends native containerized application orchestration and device management to hosts at the Edge. In affected versions a malicious message can crash CloudCore by triggering a nil-pointer dereference in the UDS Server. Since the UDS Server only communicates with the CSI Driver on the cloud side, the attack is limited to the local host network. As such, an attacker would already need to be an authenticated user of the Cloud. Additionally it will be affected only when users turn on the unixsocket switch in the config file cloudcore.yaml. This bug has been fixed in Kubeedge 1.11.0, 1.10.1, and 1.9.3. Users should update to these versions to resolve the issue. Users unable to upgrade should sisable the unixsocket switch of CloudHub in the config file cloudcore.yaml.",
  "repo": "kubeedge/kubeedge",
  "patch_hash": "5d60ae9eabd6b6b7afe38758e19bbe8137664701",
  "patch_info": {
    "commit_hash": "5d60ae9eabd6b6b7afe38758e19bbe8137664701",
    "repo": "kubeedge/kubeedge",
    "commit_url": "https://github.com/kubeedge/kubeedge/pull/3899/commits/5d60ae9eabd6b6b7afe38758e19bbe8137664701",
    "files": [
      "cloud/pkg/cloudhub/servers/udsserver/server.go",
      "cloud/pkg/csidriver/utils.go",
      "edge/pkg/metamanager/client/node.go",
      "edge/pkg/metamanager/client/persistentvolume.go",
      "edge/pkg/metamanager/client/persistentvolumeclaim.go",
      "edge/pkg/metamanager/client/volumeattachment.go"
    ],
    "message": "fix fuzzer extract message error\n\nSigned-off-by: vincentgoat <linguohui1@huawei.com>",
    "before_after_code_files": [
      "cloud/pkg/cloudhub/servers/udsserver/server.go||cloud/pkg/cloudhub/servers/udsserver/server.go",
      "cloud/pkg/csidriver/utils.go||cloud/pkg/csidriver/utils.go",
      "edge/pkg/metamanager/client/node.go||edge/pkg/metamanager/client/node.go",
      "edge/pkg/metamanager/client/persistentvolume.go||edge/pkg/metamanager/client/persistentvolume.go",
      "edge/pkg/metamanager/client/persistentvolumeclaim.go||edge/pkg/metamanager/client/persistentvolumeclaim.go",
      "edge/pkg/metamanager/client/volumeattachment.go||edge/pkg/metamanager/client/volumeattachment.go"
    ]
  },
  "patch_diff": {
    "cloud/pkg/cloudhub/servers/udsserver/server.go||cloud/pkg/cloudhub/servers/udsserver/server.go": [
      "File: cloud/pkg/cloudhub/servers/udsserver/server.go -> cloud/pkg/cloudhub/servers/udsserver/server.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "52: func ExtractMessage(context string) (*model.Message, error) {",
      "53:  if context == \"\" {",
      "55:  }",
      "58:  err := json.Unmarshal([]byte(context), &msg)",
      "59:  if err != nil {",
      "61:  }",
      "64: }",
      "",
      "[Removed Lines]",
      "54:   return nil, errors.New(\"failed with error: context is empty\")",
      "57:  var msg *model.Message",
      "60:   return nil, err",
      "63:  return msg, nil",
      "",
      "[Added Lines]",
      "53:  var msg model.Message",
      "55:   return &msg, errors.New(\"failed with error: context is empty\")",
      "59:   return &msg, err",
      "61:  return &msg, nil",
      "",
      "---------------"
    ],
    "cloud/pkg/csidriver/utils.go||cloud/pkg/csidriver/utils.go": [
      "File: cloud/pkg/csidriver/utils.go -> cloud/pkg/csidriver/utils.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "169: func extractMessage(context string) (*model.Message, error) {",
      "171:  if context == \"\" {",
      "172:   err := errors.New(\"failed to extract message with empty context\")",
      "173:   klog.Errorf(\"%v\", err)",
      "",
      "[Removed Lines]",
      "170:  var msg *model.Message",
      "",
      "[Added Lines]",
      "170:  var msg model.Message",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "179:   return nil, err",
      "180:  }",
      "183: }",
      "",
      "[Removed Lines]",
      "182:  return msg, nil",
      "",
      "[Added Lines]",
      "182:  return &msg, nil",
      "",
      "---------------"
    ],
    "edge/pkg/metamanager/client/node.go||edge/pkg/metamanager/client/node.go": [
      "File: edge/pkg/metamanager/client/node.go -> edge/pkg/metamanager/client/node.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "85:   return nil, fmt.Errorf(\"node length from meta db is %d\", len(lists))",
      "86:  }",
      "89:  err = json.Unmarshal([]byte(lists[0]), &node)",
      "90:  if err != nil {",
      "91:   return nil, fmt.Errorf(\"unmarshal message to node from db failed, err: %v\", err)",
      "92:  }",
      "94: }",
      "96: func handleNodeFromMetaManager(content []byte) (*api.Node, error) {",
      "98:  err := json.Unmarshal(content, &node)",
      "99:  if err != nil {",
      "100:   return nil, fmt.Errorf(\"unmarshal message to node failed, err: %v\", err)",
      "101:  }",
      "103: }",
      "",
      "[Removed Lines]",
      "88:  var node *api.Node",
      "93:  return node, nil",
      "97:  var node *api.Node",
      "102:  return node, nil",
      "",
      "[Added Lines]",
      "88:  var node api.Node",
      "93:  return &node, nil",
      "97:  var node api.Node",
      "102:  return &node, nil",
      "",
      "---------------"
    ],
    "edge/pkg/metamanager/client/persistentvolume.go||edge/pkg/metamanager/client/persistentvolume.go": [
      "File: edge/pkg/metamanager/client/persistentvolume.go -> edge/pkg/metamanager/client/persistentvolume.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "89: }",
      "91: func handlePersistentVolumeFromMetaManager(content []byte) (*api.PersistentVolume, error) {",
      "93:  err := json.Unmarshal(content, &pv)",
      "94:  if err != nil {",
      "95:   return nil, fmt.Errorf(\"unmarshal message to persistentvolume failed, err: %v\", err)",
      "96:  }",
      "98: }",
      "",
      "[Removed Lines]",
      "92:  var pv *api.PersistentVolume",
      "97:  return pv, nil",
      "",
      "[Added Lines]",
      "92:  var pv api.PersistentVolume",
      "97:  return &pv, nil",
      "",
      "---------------"
    ],
    "edge/pkg/metamanager/client/persistentvolumeclaim.go||edge/pkg/metamanager/client/persistentvolumeclaim.go": [
      "File: edge/pkg/metamanager/client/persistentvolumeclaim.go -> edge/pkg/metamanager/client/persistentvolumeclaim.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "80:   return nil, fmt.Errorf(\"persistentvolumeclaim length from meta db is %d\", len(lists))",
      "81:  }",
      "84:  err = json.Unmarshal([]byte(lists[0]), &pvc)",
      "85:  if err != nil {",
      "86:   return nil, fmt.Errorf(\"unmarshal message to persistentvolumeclaim from db failed, err: %v\", err)",
      "87:  }",
      "89: }",
      "91: func handlePersistentVolumeClaimFromMetaManager(content []byte) (*api.PersistentVolumeClaim, error) {",
      "93:  err := json.Unmarshal(content, &pvc)",
      "94:  if err != nil {",
      "95:   return nil, fmt.Errorf(\"unmarshal message to persistentvolumeclaim failed, err: %v\", err)",
      "96:  }",
      "98: }",
      "",
      "[Removed Lines]",
      "83:  var pvc *api.PersistentVolumeClaim",
      "88:  return pvc, nil",
      "92:  var pvc *api.PersistentVolumeClaim",
      "97:  return pvc, nil",
      "",
      "[Added Lines]",
      "83:  var pvc api.PersistentVolumeClaim",
      "88:  return &pvc, nil",
      "92:  var pvc api.PersistentVolumeClaim",
      "97:  return &pvc, nil",
      "",
      "---------------"
    ],
    "edge/pkg/metamanager/client/volumeattachment.go||edge/pkg/metamanager/client/volumeattachment.go": [
      "File: edge/pkg/metamanager/client/volumeattachment.go -> edge/pkg/metamanager/client/volumeattachment.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "92:   return nil, fmt.Errorf(\"volumeattachment length from meta db is %d\", len(lists))",
      "93:  }",
      "96:  err = json.Unmarshal([]byte(lists[0]), &va)",
      "97:  if err != nil {",
      "98:   return nil, fmt.Errorf(\"unmarshal message to volumeattachment from db failed, err: %v\", err)",
      "99:  }",
      "101: }",
      "103: func handleVolumeAttachmentFromMetaManager(content []byte) (*api.VolumeAttachment, error) {",
      "105:  err := json.Unmarshal(content, &va)",
      "106:  if err != nil {",
      "107:   return nil, fmt.Errorf(\"unmarshal message to volumeattachment failed, err: %v\", err)",
      "108:  }",
      "110: }",
      "",
      "[Removed Lines]",
      "95:  var va *api.VolumeAttachment",
      "100:  return va, nil",
      "104:  var va *api.VolumeAttachment",
      "109:  return va, nil",
      "",
      "[Added Lines]",
      "95:  var va api.VolumeAttachment",
      "100:  return &va, nil",
      "104:  var va api.VolumeAttachment",
      "109:  return &va, nil",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "6ae57ca235329ed318e32720e699aef07aff1459",
      "candidate_info": {
        "commit_hash": "6ae57ca235329ed318e32720e699aef07aff1459",
        "repo": "kubeedge/kubeedge",
        "commit_url": "https://github.com/kubeedge/kubeedge/commit/6ae57ca235329ed318e32720e699aef07aff1459",
        "files": [
          "cloud/pkg/cloudhub/servers/udsserver/server.go",
          "cloud/pkg/csidriver/utils.go",
          "edge/pkg/metamanager/client/node.go",
          "edge/pkg/metamanager/client/persistentvolume.go",
          "edge/pkg/metamanager/client/persistentvolumeclaim.go",
          "edge/pkg/metamanager/client/volumeattachment.go"
        ],
        "message": "fix fuzzer extract message error\n\nSigned-off-by: vincentgoat <linguohui1@huawei.com>",
        "before_after_code_files": [
          "cloud/pkg/cloudhub/servers/udsserver/server.go||cloud/pkg/cloudhub/servers/udsserver/server.go",
          "cloud/pkg/csidriver/utils.go||cloud/pkg/csidriver/utils.go",
          "edge/pkg/metamanager/client/node.go||edge/pkg/metamanager/client/node.go",
          "edge/pkg/metamanager/client/persistentvolume.go||edge/pkg/metamanager/client/persistentvolume.go",
          "edge/pkg/metamanager/client/persistentvolumeclaim.go||edge/pkg/metamanager/client/persistentvolumeclaim.go",
          "edge/pkg/metamanager/client/volumeattachment.go||edge/pkg/metamanager/client/volumeattachment.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "cloud/pkg/cloudhub/servers/udsserver/server.go||cloud/pkg/cloudhub/servers/udsserver/server.go",
            "cloud/pkg/csidriver/utils.go||cloud/pkg/csidriver/utils.go",
            "edge/pkg/metamanager/client/node.go||edge/pkg/metamanager/client/node.go",
            "edge/pkg/metamanager/client/persistentvolume.go||edge/pkg/metamanager/client/persistentvolume.go",
            "edge/pkg/metamanager/client/persistentvolumeclaim.go||edge/pkg/metamanager/client/persistentvolumeclaim.go",
            "edge/pkg/metamanager/client/volumeattachment.go||edge/pkg/metamanager/client/volumeattachment.go"
          ],
          "candidate": [
            "cloud/pkg/cloudhub/servers/udsserver/server.go||cloud/pkg/cloudhub/servers/udsserver/server.go",
            "cloud/pkg/csidriver/utils.go||cloud/pkg/csidriver/utils.go",
            "edge/pkg/metamanager/client/node.go||edge/pkg/metamanager/client/node.go",
            "edge/pkg/metamanager/client/persistentvolume.go||edge/pkg/metamanager/client/persistentvolume.go",
            "edge/pkg/metamanager/client/persistentvolumeclaim.go||edge/pkg/metamanager/client/persistentvolumeclaim.go",
            "edge/pkg/metamanager/client/volumeattachment.go||edge/pkg/metamanager/client/volumeattachment.go"
          ]
        }
      },
      "candidate_diff": {
        "cloud/pkg/cloudhub/servers/udsserver/server.go||cloud/pkg/cloudhub/servers/udsserver/server.go": [
          "File: cloud/pkg/cloudhub/servers/udsserver/server.go -> cloud/pkg/cloudhub/servers/udsserver/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: func ExtractMessage(context string) (*model.Message, error) {",
          "53:  if context == \"\" {",
          "55:  }",
          "58:  err := json.Unmarshal([]byte(context), &msg)",
          "59:  if err != nil {",
          "61:  }",
          "64: }",
          "",
          "[Removed Lines]",
          "54:   return nil, errors.New(\"failed with error: context is empty\")",
          "57:  var msg *model.Message",
          "60:   return nil, err",
          "63:  return msg, nil",
          "",
          "[Added Lines]",
          "53:  var msg model.Message",
          "55:   return &msg, errors.New(\"failed with error: context is empty\")",
          "59:   return &msg, err",
          "61:  return &msg, nil",
          "",
          "---------------"
        ],
        "cloud/pkg/csidriver/utils.go||cloud/pkg/csidriver/utils.go": [
          "File: cloud/pkg/csidriver/utils.go -> cloud/pkg/csidriver/utils.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "169: func extractMessage(context string) (*model.Message, error) {",
          "171:  if context == \"\" {",
          "172:   err := errors.New(\"failed to extract message with empty context\")",
          "173:   klog.Errorf(\"%v\", err)",
          "",
          "[Removed Lines]",
          "170:  var msg *model.Message",
          "",
          "[Added Lines]",
          "170:  var msg model.Message",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "179:   return nil, err",
          "180:  }",
          "183: }",
          "",
          "[Removed Lines]",
          "182:  return msg, nil",
          "",
          "[Added Lines]",
          "182:  return &msg, nil",
          "",
          "---------------"
        ],
        "edge/pkg/metamanager/client/node.go||edge/pkg/metamanager/client/node.go": [
          "File: edge/pkg/metamanager/client/node.go -> edge/pkg/metamanager/client/node.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:   return nil, fmt.Errorf(\"node length from meta db is %d\", len(lists))",
          "86:  }",
          "89:  err = json.Unmarshal([]byte(lists[0]), &node)",
          "90:  if err != nil {",
          "91:   return nil, fmt.Errorf(\"unmarshal message to node from db failed, err: %v\", err)",
          "92:  }",
          "94: }",
          "96: func handleNodeFromMetaManager(content []byte) (*api.Node, error) {",
          "98:  err := json.Unmarshal(content, &node)",
          "99:  if err != nil {",
          "100:   return nil, fmt.Errorf(\"unmarshal message to node failed, err: %v\", err)",
          "101:  }",
          "103: }",
          "",
          "[Removed Lines]",
          "88:  var node *api.Node",
          "93:  return node, nil",
          "97:  var node *api.Node",
          "102:  return node, nil",
          "",
          "[Added Lines]",
          "88:  var node api.Node",
          "93:  return &node, nil",
          "97:  var node api.Node",
          "102:  return &node, nil",
          "",
          "---------------"
        ],
        "edge/pkg/metamanager/client/persistentvolume.go||edge/pkg/metamanager/client/persistentvolume.go": [
          "File: edge/pkg/metamanager/client/persistentvolume.go -> edge/pkg/metamanager/client/persistentvolume.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "89: }",
          "91: func handlePersistentVolumeFromMetaManager(content []byte) (*api.PersistentVolume, error) {",
          "93:  err := json.Unmarshal(content, &pv)",
          "94:  if err != nil {",
          "95:   return nil, fmt.Errorf(\"unmarshal message to persistentvolume failed, err: %v\", err)",
          "96:  }",
          "98: }",
          "",
          "[Removed Lines]",
          "92:  var pv *api.PersistentVolume",
          "97:  return pv, nil",
          "",
          "[Added Lines]",
          "92:  var pv api.PersistentVolume",
          "97:  return &pv, nil",
          "",
          "---------------"
        ],
        "edge/pkg/metamanager/client/persistentvolumeclaim.go||edge/pkg/metamanager/client/persistentvolumeclaim.go": [
          "File: edge/pkg/metamanager/client/persistentvolumeclaim.go -> edge/pkg/metamanager/client/persistentvolumeclaim.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:   return nil, fmt.Errorf(\"persistentvolumeclaim length from meta db is %d\", len(lists))",
          "81:  }",
          "84:  err = json.Unmarshal([]byte(lists[0]), &pvc)",
          "85:  if err != nil {",
          "86:   return nil, fmt.Errorf(\"unmarshal message to persistentvolumeclaim from db failed, err: %v\", err)",
          "87:  }",
          "89: }",
          "91: func handlePersistentVolumeClaimFromMetaManager(content []byte) (*api.PersistentVolumeClaim, error) {",
          "93:  err := json.Unmarshal(content, &pvc)",
          "94:  if err != nil {",
          "95:   return nil, fmt.Errorf(\"unmarshal message to persistentvolumeclaim failed, err: %v\", err)",
          "96:  }",
          "98: }",
          "",
          "[Removed Lines]",
          "83:  var pvc *api.PersistentVolumeClaim",
          "88:  return pvc, nil",
          "92:  var pvc *api.PersistentVolumeClaim",
          "97:  return pvc, nil",
          "",
          "[Added Lines]",
          "83:  var pvc api.PersistentVolumeClaim",
          "88:  return &pvc, nil",
          "92:  var pvc api.PersistentVolumeClaim",
          "97:  return &pvc, nil",
          "",
          "---------------"
        ],
        "edge/pkg/metamanager/client/volumeattachment.go||edge/pkg/metamanager/client/volumeattachment.go": [
          "File: edge/pkg/metamanager/client/volumeattachment.go -> edge/pkg/metamanager/client/volumeattachment.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:   return nil, fmt.Errorf(\"volumeattachment length from meta db is %d\", len(lists))",
          "93:  }",
          "96:  err = json.Unmarshal([]byte(lists[0]), &va)",
          "97:  if err != nil {",
          "98:   return nil, fmt.Errorf(\"unmarshal message to volumeattachment from db failed, err: %v\", err)",
          "99:  }",
          "101: }",
          "103: func handleVolumeAttachmentFromMetaManager(content []byte) (*api.VolumeAttachment, error) {",
          "105:  err := json.Unmarshal(content, &va)",
          "106:  if err != nil {",
          "107:   return nil, fmt.Errorf(\"unmarshal message to volumeattachment failed, err: %v\", err)",
          "108:  }",
          "110: }",
          "",
          "[Removed Lines]",
          "95:  var va *api.VolumeAttachment",
          "100:  return va, nil",
          "104:  var va *api.VolumeAttachment",
          "109:  return va, nil",
          "",
          "[Added Lines]",
          "95:  var va api.VolumeAttachment",
          "100:  return &va, nil",
          "104:  var va api.VolumeAttachment",
          "109:  return &va, nil",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6c2b2298121a4695647a2e31df15169def547222",
      "candidate_info": {
        "commit_hash": "6c2b2298121a4695647a2e31df15169def547222",
        "repo": "kubeedge/kubeedge",
        "commit_url": "https://github.com/kubeedge/kubeedge/commit/6c2b2298121a4695647a2e31df15169def547222",
        "files": [
          "cloud/pkg/cloudhub/servers/udsserver/server.go",
          "cloud/pkg/csidriver/utils.go",
          "edge/pkg/metamanager/client/node.go",
          "edge/pkg/metamanager/client/persistentvolume.go",
          "edge/pkg/metamanager/client/persistentvolumeclaim.go",
          "edge/pkg/metamanager/client/volumeattachment.go"
        ],
        "message": "fix fuzzer extract message error\n\nSigned-off-by: vincentgoat <linguohui1@huawei.com>",
        "before_after_code_files": [
          "cloud/pkg/cloudhub/servers/udsserver/server.go||cloud/pkg/cloudhub/servers/udsserver/server.go",
          "cloud/pkg/csidriver/utils.go||cloud/pkg/csidriver/utils.go",
          "edge/pkg/metamanager/client/node.go||edge/pkg/metamanager/client/node.go",
          "edge/pkg/metamanager/client/persistentvolume.go||edge/pkg/metamanager/client/persistentvolume.go",
          "edge/pkg/metamanager/client/persistentvolumeclaim.go||edge/pkg/metamanager/client/persistentvolumeclaim.go",
          "edge/pkg/metamanager/client/volumeattachment.go||edge/pkg/metamanager/client/volumeattachment.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "cloud/pkg/cloudhub/servers/udsserver/server.go||cloud/pkg/cloudhub/servers/udsserver/server.go",
            "cloud/pkg/csidriver/utils.go||cloud/pkg/csidriver/utils.go",
            "edge/pkg/metamanager/client/node.go||edge/pkg/metamanager/client/node.go",
            "edge/pkg/metamanager/client/persistentvolume.go||edge/pkg/metamanager/client/persistentvolume.go",
            "edge/pkg/metamanager/client/persistentvolumeclaim.go||edge/pkg/metamanager/client/persistentvolumeclaim.go",
            "edge/pkg/metamanager/client/volumeattachment.go||edge/pkg/metamanager/client/volumeattachment.go"
          ],
          "candidate": [
            "cloud/pkg/cloudhub/servers/udsserver/server.go||cloud/pkg/cloudhub/servers/udsserver/server.go",
            "cloud/pkg/csidriver/utils.go||cloud/pkg/csidriver/utils.go",
            "edge/pkg/metamanager/client/node.go||edge/pkg/metamanager/client/node.go",
            "edge/pkg/metamanager/client/persistentvolume.go||edge/pkg/metamanager/client/persistentvolume.go",
            "edge/pkg/metamanager/client/persistentvolumeclaim.go||edge/pkg/metamanager/client/persistentvolumeclaim.go",
            "edge/pkg/metamanager/client/volumeattachment.go||edge/pkg/metamanager/client/volumeattachment.go"
          ]
        }
      },
      "candidate_diff": {
        "cloud/pkg/cloudhub/servers/udsserver/server.go||cloud/pkg/cloudhub/servers/udsserver/server.go": [
          "File: cloud/pkg/cloudhub/servers/udsserver/server.go -> cloud/pkg/cloudhub/servers/udsserver/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "52: func ExtractMessage(context string) (*model.Message, error) {",
          "53:  if context == \"\" {",
          "55:  }",
          "58:  err := json.Unmarshal([]byte(context), &msg)",
          "59:  if err != nil {",
          "61:  }",
          "64: }",
          "",
          "[Removed Lines]",
          "54:   return nil, errors.New(\"failed with error: context is empty\")",
          "57:  var msg *model.Message",
          "60:   return nil, err",
          "63:  return msg, nil",
          "",
          "[Added Lines]",
          "53:  var msg model.Message",
          "55:   return &msg, errors.New(\"failed with error: context is empty\")",
          "59:   return &msg, err",
          "61:  return &msg, nil",
          "",
          "---------------"
        ],
        "cloud/pkg/csidriver/utils.go||cloud/pkg/csidriver/utils.go": [
          "File: cloud/pkg/csidriver/utils.go -> cloud/pkg/csidriver/utils.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "169: func extractMessage(context string) (*model.Message, error) {",
          "171:  if context == \"\" {",
          "172:   err := errors.New(\"failed to extract message with empty context\")",
          "173:   klog.Errorf(\"%v\", err)",
          "",
          "[Removed Lines]",
          "170:  var msg *model.Message",
          "",
          "[Added Lines]",
          "170:  var msg model.Message",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "179:   return nil, err",
          "180:  }",
          "183: }",
          "",
          "[Removed Lines]",
          "182:  return msg, nil",
          "",
          "[Added Lines]",
          "182:  return &msg, nil",
          "",
          "---------------"
        ],
        "edge/pkg/metamanager/client/node.go||edge/pkg/metamanager/client/node.go": [
          "File: edge/pkg/metamanager/client/node.go -> edge/pkg/metamanager/client/node.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:   return nil, fmt.Errorf(\"node length from meta db is %d\", len(lists))",
          "86:  }",
          "89:  err = json.Unmarshal([]byte(lists[0]), &node)",
          "90:  if err != nil {",
          "91:   return nil, fmt.Errorf(\"unmarshal message to node from db failed, err: %v\", err)",
          "92:  }",
          "94: }",
          "96: func handleNodeFromMetaManager(content []byte) (*api.Node, error) {",
          "98:  err := json.Unmarshal(content, &node)",
          "99:  if err != nil {",
          "100:   return nil, fmt.Errorf(\"unmarshal message to node failed, err: %v\", err)",
          "101:  }",
          "103: }",
          "",
          "[Removed Lines]",
          "88:  var node *api.Node",
          "93:  return node, nil",
          "97:  var node *api.Node",
          "102:  return node, nil",
          "",
          "[Added Lines]",
          "88:  var node api.Node",
          "93:  return &node, nil",
          "97:  var node api.Node",
          "102:  return &node, nil",
          "",
          "---------------"
        ],
        "edge/pkg/metamanager/client/persistentvolume.go||edge/pkg/metamanager/client/persistentvolume.go": [
          "File: edge/pkg/metamanager/client/persistentvolume.go -> edge/pkg/metamanager/client/persistentvolume.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "89: }",
          "91: func handlePersistentVolumeFromMetaManager(content []byte) (*api.PersistentVolume, error) {",
          "93:  err := json.Unmarshal(content, &pv)",
          "94:  if err != nil {",
          "95:   return nil, fmt.Errorf(\"unmarshal message to persistentvolume failed, err: %v\", err)",
          "96:  }",
          "98: }",
          "",
          "[Removed Lines]",
          "92:  var pv *api.PersistentVolume",
          "97:  return pv, nil",
          "",
          "[Added Lines]",
          "92:  var pv api.PersistentVolume",
          "97:  return &pv, nil",
          "",
          "---------------"
        ],
        "edge/pkg/metamanager/client/persistentvolumeclaim.go||edge/pkg/metamanager/client/persistentvolumeclaim.go": [
          "File: edge/pkg/metamanager/client/persistentvolumeclaim.go -> edge/pkg/metamanager/client/persistentvolumeclaim.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "80:   return nil, fmt.Errorf(\"persistentvolumeclaim length from meta db is %d\", len(lists))",
          "81:  }",
          "84:  err = json.Unmarshal([]byte(lists[0]), &pvc)",
          "85:  if err != nil {",
          "86:   return nil, fmt.Errorf(\"unmarshal message to persistentvolumeclaim from db failed, err: %v\", err)",
          "87:  }",
          "89: }",
          "91: func handlePersistentVolumeClaimFromMetaManager(content []byte) (*api.PersistentVolumeClaim, error) {",
          "93:  err := json.Unmarshal(content, &pvc)",
          "94:  if err != nil {",
          "95:   return nil, fmt.Errorf(\"unmarshal message to persistentvolumeclaim failed, err: %v\", err)",
          "96:  }",
          "98: }",
          "",
          "[Removed Lines]",
          "83:  var pvc *api.PersistentVolumeClaim",
          "88:  return pvc, nil",
          "92:  var pvc *api.PersistentVolumeClaim",
          "97:  return pvc, nil",
          "",
          "[Added Lines]",
          "83:  var pvc api.PersistentVolumeClaim",
          "88:  return &pvc, nil",
          "92:  var pvc api.PersistentVolumeClaim",
          "97:  return &pvc, nil",
          "",
          "---------------"
        ],
        "edge/pkg/metamanager/client/volumeattachment.go||edge/pkg/metamanager/client/volumeattachment.go": [
          "File: edge/pkg/metamanager/client/volumeattachment.go -> edge/pkg/metamanager/client/volumeattachment.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "92:   return nil, fmt.Errorf(\"volumeattachment length from meta db is %d\", len(lists))",
          "93:  }",
          "96:  err = json.Unmarshal([]byte(lists[0]), &va)",
          "97:  if err != nil {",
          "98:   return nil, fmt.Errorf(\"unmarshal message to volumeattachment from db failed, err: %v\", err)",
          "99:  }",
          "101: }",
          "103: func handleVolumeAttachmentFromMetaManager(content []byte) (*api.VolumeAttachment, error) {",
          "105:  err := json.Unmarshal(content, &va)",
          "106:  if err != nil {",
          "107:   return nil, fmt.Errorf(\"unmarshal message to volumeattachment failed, err: %v\", err)",
          "108:  }",
          "110: }",
          "",
          "[Removed Lines]",
          "95:  var va *api.VolumeAttachment",
          "100:  return va, nil",
          "104:  var va *api.VolumeAttachment",
          "109:  return va, nil",
          "",
          "[Added Lines]",
          "95:  var va api.VolumeAttachment",
          "100:  return &va, nil",
          "104:  var va api.VolumeAttachment",
          "109:  return &va, nil",
          "",
          "---------------"
        ]
      }
    }
  ]
}