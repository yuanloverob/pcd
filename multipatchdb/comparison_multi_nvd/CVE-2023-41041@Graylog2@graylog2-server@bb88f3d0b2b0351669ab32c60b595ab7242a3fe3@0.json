{
  "cve_id": "CVE-2023-41041",
  "cve_desc": "Graylog is a free and open log management platform. In a multi-node Graylog cluster, after a user has explicitly logged out, a user session may still be used for API requests until it has reached its original expiry time. Each node maintains an in-memory cache of user sessions. Upon a cache-miss, the session is loaded from the database. After that, the node operates solely on the cached session. Modifications to sessions will update the cached version as well as the session persisted in the database. However, each node maintains their isolated version of the session. When the user logs out, the session is removed from the node-local cache and deleted from the database. The other nodes will however still use the cached session. These nodes will only fail to accept the session id if they intent to update the session in the database. They will then notice that the session is gone. This is true for most API requests originating from user interaction with the Graylog UI because these will lead to an update of the session's \"last access\" timestamp. If the session update is however prevented by setting the `X-Graylog-No-Session-Extension:true` header in the request, the node will consider the (cached) session valid until the session is expired according to its timeout setting. No session identifiers are leaked. After a user has logged out, the UI shows the login screen again, which gives the user the impression that their session is not valid anymore. However, if the session becomes compromised later, it can still be used to perform API requests against the Graylog cluster. The time frame for this is limited to the configured session lifetime, starting from the time when the user logged out. This issue has been addressed in versions 5.0.9 and 5.1.3. Users are advised to upgrade.\n\n\n",
  "repo": "Graylog2/graylog2-server",
  "patch_hash": "bb88f3d0b2b0351669ab32c60b595ab7242a3fe3",
  "patch_info": {
    "commit_hash": "bb88f3d0b2b0351669ab32c60b595ab7242a3fe3",
    "repo": "Graylog2/graylog2-server",
    "commit_url": "https://github.com/Graylog2/graylog2-server/commit/bb88f3d0b2b0351669ab32c60b595ab7242a3fe3",
    "files": [
      "changelog/unreleased/ghsa-3fqm-frhg-7c85.toml",
      "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java",
      "graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java",
      "graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java",
      "graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java",
      "graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java",
      "graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java",
      "graylog2-web-interface/src/components/users/TimeoutInput.tsx"
    ],
    "message": "Merge pull request from GHSA-3fqm-frhg-7c85\n\n- Clear session from cache on all nodes after deletion\n- Add changelog\n\nCo-authored-by: Othello Maurer <othello@graylog.com>",
    "before_after_code_files": [
      "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java||graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java",
      "graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java||graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java",
      "graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java||graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java",
      "graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java||graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java",
      "graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java||graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java",
      "graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java||graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java",
      "graylog2-web-interface/src/components/users/TimeoutInput.tsx||graylog2-web-interface/src/components/users/TimeoutInput.tsx"
    ]
  },
  "patch_diff": {
    "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java||graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java": [
      "File: graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java -> graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: import io.swagger.annotations.ApiResponse;",
      "29: import io.swagger.annotations.ApiResponses;",
      "30: import org.apache.commons.lang.StringUtils;",
      "32: import org.apache.shiro.authz.annotation.RequiresAuthentication;",
      "33: import org.apache.shiro.authz.annotation.RequiresPermissions;",
      "34: import org.apache.shiro.authz.permission.WildcardPermission;",
      "35: import org.apache.shiro.mgt.DefaultSecurityManager;",
      "36: import org.apache.shiro.session.Session;",
      "39: import org.graylog.security.UserContext;",
      "40: import org.graylog.security.permissions.GRNPermission;",
      "41: import org.graylog2.audit.AuditEventTypes;",
      "",
      "[Removed Lines]",
      "31: import org.apache.shiro.SecurityUtils;",
      "37: import org.apache.shiro.session.mgt.DefaultSessionManager;",
      "38: import org.apache.shiro.session.mgt.eis.SessionDAO;",
      "",
      "[Added Lines]",
      "36: import org.apache.shiro.subject.Subject;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "61: import org.graylog2.security.AccessTokenService;",
      "62: import org.graylog2.security.MongoDBSessionService;",
      "63: import org.graylog2.security.MongoDbSession;",
      "64: import org.graylog2.shared.rest.resources.RestResource;",
      "65: import org.graylog2.shared.security.RestPermissions;",
      "66: import org.graylog2.shared.users.ChangeUserRequest;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "62: import org.graylog2.security.UserSessionTerminationService;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "137:     private final RoleService roleService;",
      "138:     private final MongoDBSessionService sessionService;",
      "139:     private final SearchQueryParser searchQueryParser;",
      "141:     protected static final ImmutableMap<String, SearchQueryField> SEARCH_FIELD_MAPPING = ImmutableMap.<String, SearchQueryField>builder()",
      "142:             .put(UserOverviewDTO.FIELD_ID, SearchQueryField.create(\"_id\", SearchQueryField.Type.OBJECT_ID))",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "139:     private final UserSessionTerminationService sessionTerminationService;",
      "140:     private final DefaultSecurityManager securityManager;",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "150:                          PaginatedUserService paginatedUserService,",
      "151:                          AccessTokenService accessTokenService,",
      "152:                          RoleService roleService,",
      "154:         this.userManagementService = userManagementService;",
      "155:         this.accessTokenService = accessTokenService;",
      "156:         this.roleService = roleService;",
      "157:         this.sessionService = sessionService;",
      "158:         this.paginatedUserService = paginatedUserService;",
      "159:         this.searchQueryParser = new SearchQueryParser(UserOverviewDTO.FIELD_FULL_NAME, SEARCH_FIELD_MAPPING);",
      "160:     }",
      "",
      "[Removed Lines]",
      "153:                          MongoDBSessionService sessionService) {",
      "",
      "[Added Lines]",
      "154:                          MongoDBSessionService sessionService,",
      "155:                          UserSessionTerminationService sessionTerminationService, DefaultSecurityManager securityManager) {",
      "161:         this.sessionTerminationService = sessionTerminationService;",
      "162:         this.securityManager = securityManager;",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "439:         if (isPermitted(\"*\")) {",
      "440:             final Long sessionTimeoutMs = cr.sessionTimeoutMs();",
      "441:             if (Objects.nonNull(sessionTimeoutMs) && sessionTimeoutMs != 0 && (user.getSessionTimeoutMs() != sessionTimeoutMs)) {",
      "444:             }",
      "445:         }",
      "",
      "[Removed Lines]",
      "442:                     updateExistingSession(user, sessionTimeoutMs);",
      "443:                     user.setSessionTimeoutMs(sessionTimeoutMs);",
      "",
      "[Added Lines]",
      "446:                 user.setSessionTimeoutMs(sessionTimeoutMs);",
      "447:                 terminateSessions(user);",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "451:         userManagementService.update(user, cr);",
      "452:     }",
      "465:     }",
      "467:     private boolean rolesContainAdmin(List<String> roles) {",
      "",
      "[Removed Lines]",
      "454:     private void updateExistingSession(User user, long newSessionTimeOut) {",
      "455:         AllUserSessions allUserSessions = AllUserSessions.create(sessionService);",
      "456:         allUserSessions.forUser(user).ifPresent(userSession -> {",
      "457:             userSession.setTimeout(newSessionTimeOut);",
      "458:             Session session = sessionService.daoToSimpleSession(userSession);",
      "460:             DefaultSecurityManager securityManager = (DefaultSecurityManager) SecurityUtils.getSecurityManager();",
      "461:             DefaultSessionManager sessionManager = (DefaultSessionManager) securityManager.getSessionManager();",
      "462:             SessionDAO sessionDAO = sessionManager.getSessionDAO();",
      "463:             sessionDAO.update(session);",
      "464:         });",
      "",
      "[Added Lines]",
      "458:     private void terminateSessions(User user) {",
      "459:         final List<Session> allSessions = sessionTerminationService.getActiveSessionsForUser(user);",
      "461:         final Subject subject = getSubject();",
      "462:         final Session currentSession = subject.getSession(false);",
      "463:         final User currentUser = getCurrentUser();",
      "465:         if (currentSession != null && currentUser != null && user.getId().equals(currentUser.getId())) {",
      "467:             allSessions.stream()",
      "468:                     .filter(session -> !session.getId().equals(currentSession.getId()))",
      "469:                     .forEach(Session::stop);",
      "470:             securityManager.logout(subject);",
      "471:         } else {",
      "472:             allSessions.forEach(Session::stop);",
      "473:         }",
      "",
      "---------------"
    ],
    "graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java||graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java": [
      "File: graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java -> graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "27: import org.bson.types.ObjectId;",
      "28: import org.graylog2.database.MongoConnection;",
      "29: import org.graylog2.database.PersistedServiceImpl;",
      "31: import javax.annotation.Nullable;",
      "32: import javax.inject.Inject;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "30: import org.graylog2.events.ClusterEventBus;",
      "31: import org.graylog2.plugin.database.Persisted;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "37: @Singleton",
      "38: public class MongoDBSessionServiceImpl extends PersistedServiceImpl implements MongoDBSessionService {",
      "39:     @Inject",
      "41:         super(mongoConnection);",
      "43:         final MongoDatabase database = mongoConnection.getMongoDatabase();",
      "44:         final MongoCollection<Document> sessions = database.getCollection(MongoDbSession.COLLECTION_NAME);",
      "",
      "[Removed Lines]",
      "40:     public MongoDBSessionServiceImpl(MongoConnection mongoConnection) {",
      "",
      "[Added Lines]",
      "41:     private final ClusterEventBus eventBus;",
      "44:     public MongoDBSessionServiceImpl(MongoConnection mongoConnection, ClusterEventBus clusterEventBus) {",
      "46:         this.eventBus = clusterEventBus;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "84:         return session;",
      "85:     }",
      "87: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "92:     @Override",
      "93:     public <T extends Persisted> int destroy(T model) {",
      "94:         int affectedDocs = super.destroy(model);",
      "95:         if (affectedDocs != 0 && model instanceof MongoDbSession session) {",
      "96:             eventBus.post(new SessionDeletedEvent(session.getSessionId()));",
      "97:         }",
      "98:         return affectedDocs;",
      "99:     }",
      "",
      "---------------"
    ],
    "graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java||graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java": [
      "File: graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java -> graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "23: import com.github.rholder.retry.WaitStrategies;",
      "24: import com.google.common.collect.Lists;",
      "25: import com.google.common.collect.Maps;",
      "26: import com.mongodb.DuplicateKeyException;",
      "27: import org.apache.shiro.session.Session;",
      "28: import org.apache.shiro.session.mgt.SimpleSession;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "26: import com.google.common.eventbus.EventBus;",
      "27: import com.google.common.eventbus.Subscribe;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "44:     private final MongoDBSessionService mongoDBSessionService;",
      "46:     @Inject",
      "48:         this.mongoDBSessionService = mongoDBSessionService;",
      "49:     }",
      "51:     @Override",
      "",
      "[Removed Lines]",
      "47:     public MongoDbSessionDAO(MongoDBSessionService mongoDBSessionService) {",
      "",
      "[Added Lines]",
      "49:     public MongoDbSessionDAO(MongoDBSessionService mongoDBSessionService, EventBus eventBus) {",
      "51:         eventBus.register(this);",
      "52:     }",
      "54:     @SuppressWarnings(\"unused\")",
      "55:     @Subscribe",
      "56:     public void sessionDeleted(SessionDeletedEvent event) {",
      "57:         final Session cachedSession = getCachedSession(event.sessionId());",
      "58:         if (cachedSession != null) {",
      "59:             LOG.debug(\"Removing deleted session from cache.\");",
      "60:             uncache(cachedSession);",
      "61:         }",
      "",
      "---------------"
    ],
    "graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java||graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java": [
      "File: graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java -> graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "17: package org.graylog2.security;",
      "19: import com.fasterxml.jackson.annotation.JsonProperty;",
      "21: public record SessionDeletedEvent(@JsonProperty(\"session_id\") String sessionId) {",
      "22: }",
      "",
      "---------------"
    ],
    "graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java||graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java": [
      "File: graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java -> graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "39: import javax.inject.Singleton;",
      "40: import java.io.Serializable;",
      "41: import java.util.EnumSet;",
      "42: import java.util.Optional;",
      "43: import java.util.Set;",
      "44: import java.util.stream.Collectors;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "42: import java.util.List;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "140:         clusterConfigService.write(GlobalTerminationRevisionConfig.withCurrentRevision());",
      "141:     }",
      "143:     private void terminateSessionsForUser(User user) {",
      "144:         try {",
      "152:             }",
      "153:         } catch (Exception e) {",
      "154:             LOG.error(\"Couldn't terminate session for user <{}/{}>\", user.getName(), user.getId(), e);",
      "",
      "[Removed Lines]",
      "145:             final Set<String> sessionIds = getSessionIDsForUser(user);",
      "147:             for (final String sessionId : sessionIds) {",
      "148:                 getActiveSessionForID(sessionId).ifPresent(session -> {",
      "149:                     LOG.info(\"Terminating session for user <{}/{}>\", user.getName(), user.getId());",
      "150:                     session.stop();",
      "151:                 });",
      "",
      "[Added Lines]",
      "144:     public List<Session> getActiveSessionsForUser(User user) {",
      "145:         return getSessionIDsForUser(user).stream().map(this::getActiveSessionForID).flatMap(Optional::stream).toList();",
      "146:     }",
      "150:             for (final Session session : getActiveSessionsForUser(user)) {",
      "151:                 LOG.info(\"Terminating session for user <{}/{}>\", user.getName(), user.getId());",
      "152:                 session.stop();",
      "",
      "---------------"
    ],
    "graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java||graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java": [
      "File: graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java -> graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "17: package org.graylog2.rest.resources.users;",
      "19: import com.google.common.collect.ImmutableSet;",
      "20: import org.apache.shiro.subject.Subject;",
      "21: import org.bson.types.ObjectId;",
      "22: import org.graylog.testing.mongodb.MongoDBInstance;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "20: import org.apache.shiro.mgt.DefaultSecurityManager;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "29: import org.graylog2.security.AccessTokenService;",
      "30: import org.graylog2.security.MongoDBSessionService;",
      "31: import org.graylog2.security.PasswordAlgorithmFactory;",
      "32: import org.graylog2.security.hashing.SHA1HashPasswordAlgorithm;",
      "33: import org.graylog2.shared.security.Permissions;",
      "34: import org.graylog2.shared.security.RestPermissions;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "33: import org.graylog2.security.UserSessionTerminationService;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "88:     private Subject subject;",
      "89:     @Mock",
      "90:     private UserManagementService userManagementService;",
      "92:     UserImplFactory userImplFactory;",
      "94:     @Before",
      "95:     public void setUp() throws Exception {",
      "96:         userImplFactory = new UserImplFactory(new Configuration(),",
      "98:         usersResource = new TestUsersResource(userManagementService, paginatedUserService, accessTokenService,",
      "100:     }",
      "",
      "[Removed Lines]",
      "97:                                               new Permissions(ImmutableSet.of(new RestPermissions())));",
      "99:                                               roleService, sessionService, new HttpConfiguration(), subject);",
      "",
      "[Added Lines]",
      "93:     @Mock",
      "94:     private UserSessionTerminationService sessionTerminationService;",
      "95:     @Mock",
      "96:     private DefaultSecurityManager securityManager;",
      "103:                 new Permissions(ImmutableSet.of(new RestPermissions())));",
      "105:                 roleService, sessionService, new HttpConfiguration(), subject,",
      "106:                 sessionTerminationService, securityManager);",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "137:         public TestUsersResource(UserManagementService userManagementService, PaginatedUserService paginatedUserService,",
      "138:                                  AccessTokenService accessTokenService, RoleService roleService,",
      "139:                                  MongoDBSessionService sessionService, HttpConfiguration configuration,",
      "142:             this.subject = subject;",
      "143:             super.configuration = configuration;",
      "144:         }",
      "",
      "[Removed Lines]",
      "140:                                  Subject subject) {",
      "141:             super(userManagementService, paginatedUserService, accessTokenService, roleService, sessionService);",
      "",
      "[Added Lines]",
      "147:                                  Subject subject, UserSessionTerminationService sessionTerminationService,",
      "148:                                  DefaultSecurityManager securityManager) {",
      "149:             super(userManagementService, paginatedUserService, accessTokenService, roleService, sessionService,",
      "150:                     sessionTerminationService, securityManager);",
      "",
      "---------------"
    ],
    "graylog2-web-interface/src/components/users/TimeoutInput.tsx||graylog2-web-interface/src/components/users/TimeoutInput.tsx": [
      "File: graylog2-web-interface/src/components/users/TimeoutInput.tsx -> graylog2-web-interface/src/components/users/TimeoutInput.tsx",
      "--- Hunk 1 ---",
      "[Context before]",
      "18: import { useState, useEffect } from 'react';",
      "19: import PropTypes from 'prop-types';",
      "22: import TimeoutUnitSelect from 'components/users/TimeoutUnitSelect';",
      "24: import { MS_DAY, MS_HOUR, MS_MINUTE, MS_SECOND } from './timeoutConstants';",
      "",
      "[Removed Lines]",
      "21: import { Row, Col, HelpBlock, Input } from 'components/bootstrap';",
      "",
      "[Added Lines]",
      "21: import { Row, Col, HelpBlock, Input, Alert } from 'components/bootstrap';",
      "23: import { Icon } from 'components/common';",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "84:            labelClassName=\"col-sm-3\"",
      "85:            wrapperClassName=\"col-sm-9\"",
      "86:            label=\"Sessions Timeout\">",
      "87:       <>",
      "88:         <Input type=\"checkbox\"",
      "89:                id=\"session-timeout-never\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:       <Row className=\"no-bm\">",
      "89:         <Col xs={12}>",
      "90:           <Alert bsStyle=\"info\">",
      "91:             <Icon name=\"info-circle\" />{' '}<b>Changing the session timeout</b><br />",
      "92:             Changing the timeout setting for sessions will log the user out of Graylog and will invalidate all their",
      "93:             current sessions. If you are changing the setting for your own user, you will be logged out at the moment",
      "94:             of saving the setting. In that case, make sure to save any pending changes before changing the timeout.",
      "95:           </Alert>",
      "96:         </Col>",
      "97:       </Row>",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ff90f3e2aa4ae2e0bb613d3236e52c40aa154b20",
      "candidate_info": {
        "commit_hash": "ff90f3e2aa4ae2e0bb613d3236e52c40aa154b20",
        "repo": "Graylog2/graylog2-server",
        "commit_url": "https://github.com/Graylog2/graylog2-server/commit/ff90f3e2aa4ae2e0bb613d3236e52c40aa154b20",
        "files": [
          "changelog/unreleased/ghsa-3fqm-frhg-7c85.toml",
          "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java",
          "graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java",
          "graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java",
          "graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java",
          "graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java",
          "graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java",
          "graylog2-web-interface/src/components/users/TimeoutInput.tsx"
        ],
        "message": "Merge pull request from GHSA-3fqm-frhg-7c85\n\n- Clear session from cache on all nodes after deletion\n- Add changelog\n\nCo-authored-by: Othello Maurer <othello@graylog.com>",
        "before_after_code_files": [
          "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java||graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java",
          "graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java||graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java",
          "graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java||graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java",
          "graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java||graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java",
          "graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java||graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java",
          "graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java||graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java",
          "graylog2-web-interface/src/components/users/TimeoutInput.tsx||graylog2-web-interface/src/components/users/TimeoutInput.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java||graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java",
            "graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java||graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java",
            "graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java||graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java",
            "graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java||graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java",
            "graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java||graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java",
            "graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java||graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java",
            "graylog2-web-interface/src/components/users/TimeoutInput.tsx||graylog2-web-interface/src/components/users/TimeoutInput.tsx"
          ],
          "candidate": [
            "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java||graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java",
            "graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java||graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java",
            "graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java||graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java",
            "graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java||graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java",
            "graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java||graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java",
            "graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java||graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java",
            "graylog2-web-interface/src/components/users/TimeoutInput.tsx||graylog2-web-interface/src/components/users/TimeoutInput.tsx"
          ]
        }
      },
      "candidate_diff": {
        "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java||graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java": [
          "File: graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java -> graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: import io.swagger.annotations.ApiResponse;",
          "29: import io.swagger.annotations.ApiResponses;",
          "30: import org.apache.commons.lang.StringUtils;",
          "32: import org.apache.shiro.authz.annotation.RequiresAuthentication;",
          "33: import org.apache.shiro.authz.annotation.RequiresPermissions;",
          "34: import org.apache.shiro.authz.permission.WildcardPermission;",
          "35: import org.apache.shiro.mgt.DefaultSecurityManager;",
          "36: import org.apache.shiro.session.Session;",
          "39: import org.graylog.security.UserContext;",
          "40: import org.graylog.security.permissions.GRNPermission;",
          "41: import org.graylog2.audit.AuditEventTypes;",
          "",
          "[Removed Lines]",
          "31: import org.apache.shiro.SecurityUtils;",
          "37: import org.apache.shiro.session.mgt.DefaultSessionManager;",
          "38: import org.apache.shiro.session.mgt.eis.SessionDAO;",
          "",
          "[Added Lines]",
          "36: import org.apache.shiro.subject.Subject;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61: import org.graylog2.security.AccessTokenService;",
          "62: import org.graylog2.security.MongoDBSessionService;",
          "63: import org.graylog2.security.MongoDbSession;",
          "64: import org.graylog2.shared.rest.resources.RestResource;",
          "65: import org.graylog2.shared.security.RestPermissions;",
          "66: import org.graylog2.shared.users.ChangeUserRequest;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62: import org.graylog2.security.UserSessionTerminationService;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "137:     private final RoleService roleService;",
          "138:     private final MongoDBSessionService sessionService;",
          "139:     private final SearchQueryParser searchQueryParser;",
          "141:     protected static final ImmutableMap<String, SearchQueryField> SEARCH_FIELD_MAPPING = ImmutableMap.<String, SearchQueryField>builder()",
          "142:             .put(UserOverviewDTO.FIELD_ID, SearchQueryField.create(\"_id\", SearchQueryField.Type.OBJECT_ID))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:     private final UserSessionTerminationService sessionTerminationService;",
          "140:     private final DefaultSecurityManager securityManager;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "150:                          PaginatedUserService paginatedUserService,",
          "151:                          AccessTokenService accessTokenService,",
          "152:                          RoleService roleService,",
          "154:         this.userManagementService = userManagementService;",
          "155:         this.accessTokenService = accessTokenService;",
          "156:         this.roleService = roleService;",
          "157:         this.sessionService = sessionService;",
          "158:         this.paginatedUserService = paginatedUserService;",
          "159:         this.searchQueryParser = new SearchQueryParser(UserOverviewDTO.FIELD_FULL_NAME, SEARCH_FIELD_MAPPING);",
          "160:     }",
          "",
          "[Removed Lines]",
          "153:                          MongoDBSessionService sessionService) {",
          "",
          "[Added Lines]",
          "154:                          MongoDBSessionService sessionService,",
          "155:                          UserSessionTerminationService sessionTerminationService, DefaultSecurityManager securityManager) {",
          "161:         this.sessionTerminationService = sessionTerminationService;",
          "162:         this.securityManager = securityManager;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "439:         if (isPermitted(\"*\")) {",
          "440:             final Long sessionTimeoutMs = cr.sessionTimeoutMs();",
          "441:             if (Objects.nonNull(sessionTimeoutMs) && sessionTimeoutMs != 0 && (user.getSessionTimeoutMs() != sessionTimeoutMs)) {",
          "444:             }",
          "445:         }",
          "",
          "[Removed Lines]",
          "442:                     updateExistingSession(user, sessionTimeoutMs);",
          "443:                     user.setSessionTimeoutMs(sessionTimeoutMs);",
          "",
          "[Added Lines]",
          "446:                 user.setSessionTimeoutMs(sessionTimeoutMs);",
          "447:                 terminateSessions(user);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "451:         userManagementService.update(user, cr);",
          "452:     }",
          "465:     }",
          "467:     private boolean rolesContainAdmin(List<String> roles) {",
          "",
          "[Removed Lines]",
          "454:     private void updateExistingSession(User user, long newSessionTimeOut) {",
          "455:         AllUserSessions allUserSessions = AllUserSessions.create(sessionService);",
          "456:         allUserSessions.forUser(user).ifPresent(userSession -> {",
          "457:             userSession.setTimeout(newSessionTimeOut);",
          "458:             Session session = sessionService.daoToSimpleSession(userSession);",
          "460:             DefaultSecurityManager securityManager = (DefaultSecurityManager) SecurityUtils.getSecurityManager();",
          "461:             DefaultSessionManager sessionManager = (DefaultSessionManager) securityManager.getSessionManager();",
          "462:             SessionDAO sessionDAO = sessionManager.getSessionDAO();",
          "463:             sessionDAO.update(session);",
          "464:         });",
          "",
          "[Added Lines]",
          "458:     private void terminateSessions(User user) {",
          "459:         final List<Session> allSessions = sessionTerminationService.getActiveSessionsForUser(user);",
          "461:         final Subject subject = getSubject();",
          "462:         final Session currentSession = subject.getSession(false);",
          "463:         final User currentUser = getCurrentUser();",
          "465:         if (currentSession != null && currentUser != null && user.getId().equals(currentUser.getId())) {",
          "467:             allSessions.stream()",
          "468:                     .filter(session -> !session.getId().equals(currentSession.getId()))",
          "469:                     .forEach(Session::stop);",
          "470:             securityManager.logout(subject);",
          "471:         } else {",
          "472:             allSessions.forEach(Session::stop);",
          "473:         }",
          "",
          "---------------"
        ],
        "graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java||graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java": [
          "File: graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java -> graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: import org.bson.types.ObjectId;",
          "28: import org.graylog2.database.MongoConnection;",
          "29: import org.graylog2.database.PersistedServiceImpl;",
          "31: import javax.annotation.Nullable;",
          "32: import javax.inject.Inject;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: import org.graylog2.events.ClusterEventBus;",
          "31: import org.graylog2.plugin.database.Persisted;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37: @Singleton",
          "38: public class MongoDBSessionServiceImpl extends PersistedServiceImpl implements MongoDBSessionService {",
          "39:     @Inject",
          "41:         super(mongoConnection);",
          "43:         final MongoDatabase database = mongoConnection.getMongoDatabase();",
          "44:         final MongoCollection<Document> sessions = database.getCollection(MongoDbSession.COLLECTION_NAME);",
          "",
          "[Removed Lines]",
          "40:     public MongoDBSessionServiceImpl(MongoConnection mongoConnection) {",
          "",
          "[Added Lines]",
          "41:     private final ClusterEventBus eventBus;",
          "44:     public MongoDBSessionServiceImpl(MongoConnection mongoConnection, ClusterEventBus clusterEventBus) {",
          "46:         this.eventBus = clusterEventBus;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "84:         return session;",
          "85:     }",
          "87: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:     @Override",
          "93:     public <T extends Persisted> int destroy(T model) {",
          "94:         int affectedDocs = super.destroy(model);",
          "95:         if (affectedDocs != 0 && model instanceof MongoDbSession session) {",
          "96:             eventBus.post(new SessionDeletedEvent(session.getSessionId()));",
          "97:         }",
          "98:         return affectedDocs;",
          "99:     }",
          "",
          "---------------"
        ],
        "graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java||graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java": [
          "File: graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java -> graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import com.github.rholder.retry.WaitStrategies;",
          "24: import com.google.common.collect.Lists;",
          "25: import com.google.common.collect.Maps;",
          "26: import com.mongodb.DuplicateKeyException;",
          "27: import org.apache.shiro.session.Session;",
          "28: import org.apache.shiro.session.mgt.SimpleSession;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: import com.google.common.eventbus.EventBus;",
          "27: import com.google.common.eventbus.Subscribe;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:     private final MongoDBSessionService mongoDBSessionService;",
          "46:     @Inject",
          "48:         this.mongoDBSessionService = mongoDBSessionService;",
          "49:     }",
          "51:     @Override",
          "",
          "[Removed Lines]",
          "47:     public MongoDbSessionDAO(MongoDBSessionService mongoDBSessionService) {",
          "",
          "[Added Lines]",
          "49:     public MongoDbSessionDAO(MongoDBSessionService mongoDBSessionService, EventBus eventBus) {",
          "51:         eventBus.register(this);",
          "52:     }",
          "54:     @SuppressWarnings(\"unused\")",
          "55:     @Subscribe",
          "56:     public void sessionDeleted(SessionDeletedEvent event) {",
          "57:         final Session cachedSession = getCachedSession(event.sessionId());",
          "58:         if (cachedSession != null) {",
          "59:             LOG.debug(\"Removing deleted session from cache.\");",
          "60:             uncache(cachedSession);",
          "61:         }",
          "",
          "---------------"
        ],
        "graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java||graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java": [
          "File: graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java -> graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.graylog2.security;",
          "19: import com.fasterxml.jackson.annotation.JsonProperty;",
          "21: public record SessionDeletedEvent(@JsonProperty(\"session_id\") String sessionId) {",
          "22: }",
          "",
          "---------------"
        ],
        "graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java||graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java": [
          "File: graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java -> graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: import javax.inject.Singleton;",
          "40: import java.io.Serializable;",
          "41: import java.util.EnumSet;",
          "42: import java.util.Optional;",
          "43: import java.util.Set;",
          "44: import java.util.stream.Collectors;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42: import java.util.List;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "140:         clusterConfigService.write(GlobalTerminationRevisionConfig.withCurrentRevision());",
          "141:     }",
          "143:     private void terminateSessionsForUser(User user) {",
          "144:         try {",
          "152:             }",
          "153:         } catch (Exception e) {",
          "154:             LOG.error(\"Couldn't terminate session for user <{}/{}>\", user.getName(), user.getId(), e);",
          "",
          "[Removed Lines]",
          "145:             final Set<String> sessionIds = getSessionIDsForUser(user);",
          "147:             for (final String sessionId : sessionIds) {",
          "148:                 getActiveSessionForID(sessionId).ifPresent(session -> {",
          "149:                     LOG.info(\"Terminating session for user <{}/{}>\", user.getName(), user.getId());",
          "150:                     session.stop();",
          "151:                 });",
          "",
          "[Added Lines]",
          "144:     public List<Session> getActiveSessionsForUser(User user) {",
          "145:         return getSessionIDsForUser(user).stream().map(this::getActiveSessionForID).flatMap(Optional::stream).toList();",
          "146:     }",
          "150:             for (final Session session : getActiveSessionsForUser(user)) {",
          "151:                 LOG.info(\"Terminating session for user <{}/{}>\", user.getName(), user.getId());",
          "152:                 session.stop();",
          "",
          "---------------"
        ],
        "graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java||graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java": [
          "File: graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java -> graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.graylog2.rest.resources.users;",
          "19: import com.google.common.collect.ImmutableSet;",
          "20: import org.apache.shiro.subject.Subject;",
          "21: import org.bson.types.ObjectId;",
          "22: import org.graylog.testing.mongodb.MongoDBInstance;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import org.apache.shiro.mgt.DefaultSecurityManager;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: import org.graylog2.security.AccessTokenService;",
          "31: import org.graylog2.security.MongoDBSessionService;",
          "32: import org.graylog2.security.PasswordAlgorithmFactory;",
          "33: import org.graylog2.security.hashing.SHA1HashPasswordAlgorithm;",
          "34: import org.graylog2.shared.security.Permissions;",
          "35: import org.graylog2.shared.security.RestPermissions;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: import org.graylog2.security.UserSessionTerminationService;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "90:     private Subject subject;",
          "91:     @Mock",
          "92:     private UserManagementService userManagementService;",
          "94:     UserImplFactory userImplFactory;",
          "96:     @Before",
          "97:     public void setUp() throws Exception {",
          "98:         userImplFactory = new UserImplFactory(new Configuration(),",
          "100:         usersResource = new TestUsersResource(userManagementService, paginatedUserService, accessTokenService,",
          "102:     }",
          "",
          "[Removed Lines]",
          "99:                                               new Permissions(ImmutableSet.of(new RestPermissions())));",
          "101:                                               roleService, sessionService, new HttpConfiguration(), subject);",
          "",
          "[Added Lines]",
          "95:     @Mock",
          "96:     private UserSessionTerminationService sessionTerminationService;",
          "97:     @Mock",
          "98:     private DefaultSecurityManager securityManager;",
          "105:                 new Permissions(ImmutableSet.of(new RestPermissions())));",
          "107:                 roleService, sessionService, new HttpConfiguration(), subject,",
          "108:                 sessionTerminationService, securityManager);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "139:         public TestUsersResource(UserManagementService userManagementService, PaginatedUserService paginatedUserService,",
          "140:                                  AccessTokenService accessTokenService, RoleService roleService,",
          "141:                                  MongoDBSessionService sessionService, HttpConfiguration configuration,",
          "144:             this.subject = subject;",
          "145:             super.configuration = configuration;",
          "146:         }",
          "",
          "[Removed Lines]",
          "142:                                  Subject subject) {",
          "143:             super(userManagementService, paginatedUserService, accessTokenService, roleService, sessionService);",
          "",
          "[Added Lines]",
          "149:                                  Subject subject, UserSessionTerminationService sessionTerminationService,",
          "150:                                  DefaultSecurityManager securityManager) {",
          "151:             super(userManagementService, paginatedUserService, accessTokenService, roleService, sessionService,",
          "152:                     sessionTerminationService, securityManager);",
          "",
          "---------------"
        ],
        "graylog2-web-interface/src/components/users/TimeoutInput.tsx||graylog2-web-interface/src/components/users/TimeoutInput.tsx": [
          "File: graylog2-web-interface/src/components/users/TimeoutInput.tsx -> graylog2-web-interface/src/components/users/TimeoutInput.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: import { useState } from 'react';",
          "19: import PropTypes from 'prop-types';",
          "22: import TimeoutUnitSelect from 'components/users/TimeoutUnitSelect';",
          "24: import { MS_DAY, MS_HOUR, MS_MINUTE, MS_SECOND } from './timeoutConstants';",
          "",
          "[Removed Lines]",
          "21: import { Row, Col, HelpBlock, Input } from 'components/bootstrap';",
          "",
          "[Added Lines]",
          "21: import { Row, Col, HelpBlock, Input, Alert } from 'components/bootstrap';",
          "23: import { Icon } from 'components/common';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:            labelClassName=\"col-sm-3\"",
          "83:            wrapperClassName=\"col-sm-9\"",
          "84:            label=\"Sessions Timeout\">",
          "85:       <>",
          "86:         <Input type=\"checkbox\"",
          "87:                id=\"session-timeout-never\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:       <Row className=\"no-bm\">",
          "87:         <Col xs={12}>",
          "88:           <Alert bsStyle=\"info\">",
          "89:             <Icon name=\"info-circle\" />{' '}<b>Changing the session timeout</b><br />",
          "90:             Changing the timeout setting for sessions will log the user out of Graylog and will invalidate all their",
          "91:             current sessions. If you are changing the setting for your own user, you will be logged out at the moment",
          "92:             of saving the setting. In that case, make sure to save any pending changes before changing the timeout.",
          "93:           </Alert>",
          "94:         </Col>",
          "95:       </Row>",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ad339a29af1c9de1a83cfc84c0044ca6e493fe98",
      "candidate_info": {
        "commit_hash": "ad339a29af1c9de1a83cfc84c0044ca6e493fe98",
        "repo": "Graylog2/graylog2-server",
        "commit_url": "https://github.com/Graylog2/graylog2-server/commit/ad339a29af1c9de1a83cfc84c0044ca6e493fe98",
        "files": [
          "changelog/unreleased/ghsa-3fqm-frhg-7c85.toml",
          "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java",
          "graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java",
          "graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java",
          "graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java",
          "graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java",
          "graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java",
          "graylog2-web-interface/src/components/users/TimeoutInput.tsx"
        ],
        "message": "Merge pull request from GHSA-3fqm-frhg-7c85\n\n- Clear session from cache on all nodes after deletion\n- Add changelog",
        "before_after_code_files": [
          "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java||graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java",
          "graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java||graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java",
          "graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java||graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java",
          "graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java||graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java",
          "graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java||graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java",
          "graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java||graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java",
          "graylog2-web-interface/src/components/users/TimeoutInput.tsx||graylog2-web-interface/src/components/users/TimeoutInput.tsx"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java||graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java",
            "graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java||graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java",
            "graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java||graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java",
            "graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java||graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java",
            "graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java||graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java",
            "graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java||graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java",
            "graylog2-web-interface/src/components/users/TimeoutInput.tsx||graylog2-web-interface/src/components/users/TimeoutInput.tsx"
          ],
          "candidate": [
            "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java||graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java",
            "graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java||graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java",
            "graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java||graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java",
            "graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java||graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java",
            "graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java||graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java",
            "graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java||graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java",
            "graylog2-web-interface/src/components/users/TimeoutInput.tsx||graylog2-web-interface/src/components/users/TimeoutInput.tsx"
          ]
        }
      },
      "candidate_diff": {
        "graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java||graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java": [
          "File: graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java -> graylog2-server/src/main/java/org/graylog2/rest/resources/users/UsersResource.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: import io.swagger.annotations.ApiResponse;",
          "29: import io.swagger.annotations.ApiResponses;",
          "30: import org.apache.commons.lang.StringUtils;",
          "32: import org.apache.shiro.authz.annotation.RequiresAuthentication;",
          "33: import org.apache.shiro.authz.annotation.RequiresPermissions;",
          "34: import org.apache.shiro.authz.permission.WildcardPermission;",
          "35: import org.apache.shiro.mgt.DefaultSecurityManager;",
          "36: import org.apache.shiro.session.Session;",
          "39: import org.graylog.security.UserContext;",
          "40: import org.graylog.security.permissions.GRNPermission;",
          "41: import org.graylog2.audit.AuditEventTypes;",
          "",
          "[Removed Lines]",
          "31: import org.apache.shiro.SecurityUtils;",
          "37: import org.apache.shiro.session.mgt.DefaultSessionManager;",
          "38: import org.apache.shiro.session.mgt.eis.SessionDAO;",
          "",
          "[Added Lines]",
          "36: import org.apache.shiro.subject.Subject;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "61: import org.graylog2.security.AccessTokenService;",
          "62: import org.graylog2.security.MongoDBSessionService;",
          "63: import org.graylog2.security.MongoDbSession;",
          "64: import org.graylog2.shared.rest.resources.RestResource;",
          "65: import org.graylog2.shared.security.RestPermissions;",
          "66: import org.graylog2.shared.users.ChangeUserRequest;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "62: import org.graylog2.security.UserSessionTerminationService;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "137:     private final RoleService roleService;",
          "138:     private final MongoDBSessionService sessionService;",
          "139:     private final SearchQueryParser searchQueryParser;",
          "141:     protected static final ImmutableMap<String, SearchQueryField> SEARCH_FIELD_MAPPING = ImmutableMap.<String, SearchQueryField>builder()",
          "142:             .put(UserOverviewDTO.FIELD_ID, SearchQueryField.create(\"_id\", SearchQueryField.Type.OBJECT_ID))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "139:     private final UserSessionTerminationService sessionTerminationService;",
          "140:     private final DefaultSecurityManager securityManager;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "150:                          PaginatedUserService paginatedUserService,",
          "151:                          AccessTokenService accessTokenService,",
          "152:                          RoleService roleService,",
          "154:         this.userManagementService = userManagementService;",
          "155:         this.accessTokenService = accessTokenService;",
          "156:         this.roleService = roleService;",
          "157:         this.sessionService = sessionService;",
          "158:         this.paginatedUserService = paginatedUserService;",
          "159:         this.searchQueryParser = new SearchQueryParser(UserOverviewDTO.FIELD_FULL_NAME, SEARCH_FIELD_MAPPING);",
          "160:     }",
          "",
          "[Removed Lines]",
          "153:                          MongoDBSessionService sessionService) {",
          "",
          "[Added Lines]",
          "154:                          MongoDBSessionService sessionService,",
          "155:                          UserSessionTerminationService sessionTerminationService, DefaultSecurityManager securityManager) {",
          "161:         this.sessionTerminationService = sessionTerminationService;",
          "162:         this.securityManager = securityManager;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "439:         if (isPermitted(\"*\")) {",
          "440:             final Long sessionTimeoutMs = cr.sessionTimeoutMs();",
          "441:             if (Objects.nonNull(sessionTimeoutMs) && sessionTimeoutMs != 0 && (user.getSessionTimeoutMs() != sessionTimeoutMs)) {",
          "444:             }",
          "445:         }",
          "",
          "[Removed Lines]",
          "442:                     updateExistingSession(user, sessionTimeoutMs);",
          "443:                     user.setSessionTimeoutMs(sessionTimeoutMs);",
          "",
          "[Added Lines]",
          "446:                 user.setSessionTimeoutMs(sessionTimeoutMs);",
          "447:                 terminateSessions(user);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "451:         userManagementService.update(user, cr);",
          "452:     }",
          "465:     }",
          "467:     private boolean rolesContainAdmin(List<String> roles) {",
          "",
          "[Removed Lines]",
          "454:     private void updateExistingSession(User user, long newSessionTimeOut) {",
          "455:         AllUserSessions allUserSessions = AllUserSessions.create(sessionService);",
          "456:         allUserSessions.forUser(user).ifPresent(userSession -> {",
          "457:             userSession.setTimeout(newSessionTimeOut);",
          "458:             Session session = sessionService.daoToSimpleSession(userSession);",
          "460:             DefaultSecurityManager securityManager = (DefaultSecurityManager) SecurityUtils.getSecurityManager();",
          "461:             DefaultSessionManager sessionManager = (DefaultSessionManager) securityManager.getSessionManager();",
          "462:             SessionDAO sessionDAO = sessionManager.getSessionDAO();",
          "463:             sessionDAO.update(session);",
          "464:         });",
          "",
          "[Added Lines]",
          "458:     private void terminateSessions(User user) {",
          "459:         final List<Session> allSessions = sessionTerminationService.getActiveSessionsForUser(user);",
          "461:         final Subject subject = getSubject();",
          "462:         final Session currentSession = subject.getSession(false);",
          "463:         final User currentUser = getCurrentUser();",
          "465:         if (currentSession != null && currentUser != null && user.getId().equals(currentUser.getId())) {",
          "467:             allSessions.stream()",
          "468:                     .filter(session -> !session.getId().equals(currentSession.getId()))",
          "469:                     .forEach(Session::stop);",
          "470:             securityManager.logout(subject);",
          "471:         } else {",
          "472:             allSessions.forEach(Session::stop);",
          "473:         }",
          "",
          "---------------"
        ],
        "graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java||graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java": [
          "File: graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java -> graylog2-server/src/main/java/org/graylog2/security/MongoDBSessionServiceImpl.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "27: import org.bson.types.ObjectId;",
          "28: import org.graylog2.database.MongoConnection;",
          "29: import org.graylog2.database.PersistedServiceImpl;",
          "31: import javax.annotation.Nullable;",
          "32: import javax.inject.Inject;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30: import org.graylog2.events.ClusterEventBus;",
          "31: import org.graylog2.plugin.database.Persisted;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "37: @Singleton",
          "38: public class MongoDBSessionServiceImpl extends PersistedServiceImpl implements MongoDBSessionService {",
          "39:     @Inject",
          "41:         super(mongoConnection);",
          "43:         final MongoDatabase database = mongoConnection.getMongoDatabase();",
          "44:         final MongoCollection<Document> sessions = database.getCollection(MongoDbSession.COLLECTION_NAME);",
          "",
          "[Removed Lines]",
          "40:     public MongoDBSessionServiceImpl(MongoConnection mongoConnection) {",
          "",
          "[Added Lines]",
          "41:     private final ClusterEventBus eventBus;",
          "44:     public MongoDBSessionServiceImpl(MongoConnection mongoConnection, ClusterEventBus clusterEventBus) {",
          "46:         this.eventBus = clusterEventBus;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "84:         return session;",
          "85:     }",
          "87: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:     @Override",
          "93:     public <T extends Persisted> int destroy(T model) {",
          "94:         int affectedDocs = super.destroy(model);",
          "95:         if (affectedDocs != 0 && model instanceof MongoDbSession session) {",
          "96:             eventBus.post(new SessionDeletedEvent(session.getSessionId()));",
          "97:         }",
          "98:         return affectedDocs;",
          "99:     }",
          "",
          "---------------"
        ],
        "graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java||graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java": [
          "File: graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java -> graylog2-server/src/main/java/org/graylog2/security/MongoDbSessionDAO.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: import com.github.rholder.retry.WaitStrategies;",
          "24: import com.google.common.collect.Lists;",
          "25: import com.google.common.collect.Maps;",
          "26: import com.mongodb.DuplicateKeyException;",
          "27: import org.apache.shiro.session.Session;",
          "28: import org.apache.shiro.session.mgt.SimpleSession;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: import com.google.common.eventbus.EventBus;",
          "27: import com.google.common.eventbus.Subscribe;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "44:     private final MongoDBSessionService mongoDBSessionService;",
          "46:     @Inject",
          "48:         this.mongoDBSessionService = mongoDBSessionService;",
          "49:     }",
          "51:     @Override",
          "",
          "[Removed Lines]",
          "47:     public MongoDbSessionDAO(MongoDBSessionService mongoDBSessionService) {",
          "",
          "[Added Lines]",
          "49:     public MongoDbSessionDAO(MongoDBSessionService mongoDBSessionService, EventBus eventBus) {",
          "51:         eventBus.register(this);",
          "52:     }",
          "54:     @SuppressWarnings(\"unused\")",
          "55:     @Subscribe",
          "56:     public void sessionDeleted(SessionDeletedEvent event) {",
          "57:         final Session cachedSession = getCachedSession(event.sessionId());",
          "58:         if (cachedSession != null) {",
          "59:             LOG.debug(\"Removing deleted session from cache.\");",
          "60:             uncache(cachedSession);",
          "61:         }",
          "",
          "---------------"
        ],
        "graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java||graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java": [
          "File: graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java -> graylog2-server/src/main/java/org/graylog2/security/SessionDeletedEvent.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "17: package org.graylog2.security;",
          "19: import com.fasterxml.jackson.annotation.JsonProperty;",
          "21: public record SessionDeletedEvent(@JsonProperty(\"session_id\") String sessionId) {",
          "22: }",
          "",
          "---------------"
        ],
        "graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java||graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java": [
          "File: graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java -> graylog2-server/src/main/java/org/graylog2/security/UserSessionTerminationService.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: import javax.inject.Singleton;",
          "40: import java.io.Serializable;",
          "41: import java.util.EnumSet;",
          "42: import java.util.Optional;",
          "43: import java.util.Set;",
          "44: import java.util.stream.Collectors;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42: import java.util.List;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "140:         clusterConfigService.write(GlobalTerminationRevisionConfig.withCurrentRevision());",
          "141:     }",
          "143:     private void terminateSessionsForUser(User user) {",
          "144:         try {",
          "152:             }",
          "153:         } catch (Exception e) {",
          "154:             LOG.error(\"Couldn't terminate session for user <{}/{}>\", user.getName(), user.getId(), e);",
          "",
          "[Removed Lines]",
          "145:             final Set<String> sessionIds = getSessionIDsForUser(user);",
          "147:             for (final String sessionId : sessionIds) {",
          "148:                 getActiveSessionForID(sessionId).ifPresent(session -> {",
          "149:                     LOG.info(\"Terminating session for user <{}/{}>\", user.getName(), user.getId());",
          "150:                     session.stop();",
          "151:                 });",
          "",
          "[Added Lines]",
          "144:     public List<Session> getActiveSessionsForUser(User user) {",
          "145:         return getSessionIDsForUser(user).stream().map(this::getActiveSessionForID).flatMap(Optional::stream).toList();",
          "146:     }",
          "150:             for (final Session session : getActiveSessionsForUser(user)) {",
          "151:                 LOG.info(\"Terminating session for user <{}/{}>\", user.getName(), user.getId());",
          "152:                 session.stop();",
          "",
          "---------------"
        ],
        "graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java||graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java": [
          "File: graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java -> graylog2-server/src/test/java/org/graylog2/rest/resources/users/UsersResourceTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.graylog2.rest.resources.users;",
          "19: import com.google.common.collect.ImmutableSet;",
          "20: import org.apache.shiro.subject.Subject;",
          "21: import org.bson.types.ObjectId;",
          "22: import org.graylog.testing.mongodb.MongoDBInstance;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "20: import org.apache.shiro.mgt.DefaultSecurityManager;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: import org.graylog2.security.AccessTokenService;",
          "31: import org.graylog2.security.MongoDBSessionService;",
          "32: import org.graylog2.security.PasswordAlgorithmFactory;",
          "33: import org.graylog2.security.hashing.SHA1HashPasswordAlgorithm;",
          "34: import org.graylog2.shared.security.Permissions;",
          "35: import org.graylog2.shared.security.RestPermissions;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34: import org.graylog2.security.UserSessionTerminationService;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "90:     private Subject subject;",
          "91:     @Mock",
          "92:     private UserManagementService userManagementService;",
          "94:     UserImplFactory userImplFactory;",
          "96:     @Before",
          "97:     public void setUp() throws Exception {",
          "98:         userImplFactory = new UserImplFactory(new Configuration(),",
          "100:         usersResource = new TestUsersResource(userManagementService, paginatedUserService, accessTokenService,",
          "102:     }",
          "",
          "[Removed Lines]",
          "99:                                               new Permissions(ImmutableSet.of(new RestPermissions())));",
          "101:                                               roleService, sessionService, new HttpConfiguration(), subject);",
          "",
          "[Added Lines]",
          "95:     @Mock",
          "96:     private UserSessionTerminationService sessionTerminationService;",
          "97:     @Mock",
          "98:     private DefaultSecurityManager securityManager;",
          "105:                 new Permissions(ImmutableSet.of(new RestPermissions())));",
          "107:                 roleService, sessionService, new HttpConfiguration(), subject,",
          "108:                 sessionTerminationService, securityManager);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "139:         public TestUsersResource(UserManagementService userManagementService, PaginatedUserService paginatedUserService,",
          "140:                                  AccessTokenService accessTokenService, RoleService roleService,",
          "141:                                  MongoDBSessionService sessionService, HttpConfiguration configuration,",
          "144:             this.subject = subject;",
          "145:             super.configuration = configuration;",
          "146:         }",
          "",
          "[Removed Lines]",
          "142:                                  Subject subject) {",
          "143:             super(userManagementService, paginatedUserService, accessTokenService, roleService, sessionService);",
          "",
          "[Added Lines]",
          "149:                                  Subject subject, UserSessionTerminationService sessionTerminationService,",
          "150:                                  DefaultSecurityManager securityManager) {",
          "151:             super(userManagementService, paginatedUserService, accessTokenService, roleService, sessionService,",
          "152:                     sessionTerminationService, securityManager);",
          "",
          "---------------"
        ],
        "graylog2-web-interface/src/components/users/TimeoutInput.tsx||graylog2-web-interface/src/components/users/TimeoutInput.tsx": [
          "File: graylog2-web-interface/src/components/users/TimeoutInput.tsx -> graylog2-web-interface/src/components/users/TimeoutInput.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: import { useState } from 'react';",
          "19: import PropTypes from 'prop-types';",
          "22: import TimeoutUnitSelect from 'components/users/TimeoutUnitSelect';",
          "24: import { MS_DAY, MS_HOUR, MS_MINUTE, MS_SECOND } from './timeoutConstants';",
          "",
          "[Removed Lines]",
          "21: import { Row, Col, HelpBlock, Input } from 'components/bootstrap';",
          "",
          "[Added Lines]",
          "21: import { Row, Col, HelpBlock, Input, Alert } from 'components/bootstrap';",
          "23: import { Icon } from 'components/common';",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82:            labelClassName=\"col-sm-3\"",
          "83:            wrapperClassName=\"col-sm-9\"",
          "84:            label=\"Sessions Timeout\">",
          "85:       <>",
          "86:         <Input type=\"checkbox\"",
          "87:                id=\"session-timeout-never\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:       <Row className=\"no-bm\">",
          "87:         <Col xs={12}>",
          "88:           <Alert bsStyle=\"info\">",
          "89:             <Icon name=\"info-circle\" />{' '}<b>Changing the session timeout</b><br />",
          "90:             Changing the timeout setting for sessions will log the user out of Graylog and will invalidate all their",
          "91:             current sessions. If you are changing the setting for your own user, you will be logged out at the moment",
          "92:             of saving the setting. In that case, make sure to save any pending changes before changing the timeout.",
          "93:           </Alert>",
          "94:         </Col>",
          "95:       </Row>",
          "",
          "---------------"
        ]
      }
    }
  ]
}