{
  "cve_id": "CVE-2017-15377",
  "cve_desc": "In Suricata before 4.x, it was possible to trigger lots of redundant checks on the content of crafted network traffic with a certain signature, because of DetectEngineContentInspection in detect-engine-content-inspection.c. The search engine doesn't stop when it should after no match is found; instead, it stops only upon reaching inspection-recursion-limit (3000 by default).",
  "repo": "OISF/suricata",
  "patch_hash": "b9579fbe7dd408200ef03cbe20efddb624b73885",
  "patch_info": {
    "commit_hash": "b9579fbe7dd408200ef03cbe20efddb624b73885",
    "repo": "OISF/suricata",
    "commit_url": "https://github.com/OISF/suricata/commit/b9579fbe7dd408200ef03cbe20efddb624b73885",
    "files": [
      "src/detect-engine-content-inspection.c"
    ],
    "message": "detect: avoid needless recursive scanning\n\nDon't recursively inspect a detect list if the recursion\ndoesn't increase chance of success.",
    "before_after_code_files": [
      "src/detect-engine-content-inspection.c||src/detect-engine-content-inspection.c"
    ]
  },
  "patch_diff": {
    "src/detect-engine-content-inspection.c||src/detect-engine-content-inspection.c": [
      "File: src/detect-engine-content-inspection.c -> src/detect-engine-content-inspection.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "286:             SCLogDebug(\"found %p cd negated %s\", found, cd->flags & DETECT_CONTENT_NEGATED ? \"true\" : \"false\");",
      "288:             if (found == NULL && !(cd->flags & DETECT_CONTENT_NEGATED)) {",
      "289:                 goto no_match;",
      "290:             } else if (found == NULL && (cd->flags & DETECT_CONTENT_NEGATED)) {",
      "291:                 goto match;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "289:                 if ((cd->flags & (DETECT_CONTENT_DISTANCE|DETECT_CONTENT_WITHIN)) == 0) {",
      "291:                     det_ctx->discontinue_matching = 1;",
      "292:                 }",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "310:                         SCLogWarning(SC_ERR_INVALID_VALUE, \"Can't modify payload without packet\");",
      "311:                     }",
      "312:                 }",
      "321:                 if (smd->is_last) {",
      "323:                 }",
      "325:                 SCLogDebug(\"content %\"PRIu32, cd->id);",
      "",
      "[Removed Lines]",
      "313:                 if (!(cd->flags & DETECT_CONTENT_RELATIVE_NEXT)) {",
      "314:                     SCLogDebug(\"no relative match coming up, so this is a match\");",
      "315:                     goto match;",
      "316:                 }",
      "322:                     goto no_match;",
      "",
      "[Added Lines]",
      "321:                     goto match;",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "333:                 if (r == 1) {",
      "334:                     SCReturnInt(1);",
      "335:                 }",
      "338:                     goto no_match;",
      "341:                 prev_offset = (match_offset - (cd->content_len - 1));",
      "",
      "[Removed Lines]",
      "337:                 if (det_ctx->discontinue_matching)",
      "",
      "[Added Lines]",
      "335:                 SCLogDebug(\"no match for 'next sm'\");",
      "337:                 if (det_ctx->discontinue_matching) {",
      "338:                     SCLogDebug(\"'next sm' said to discontinue this right now\");",
      "340:                 }",
      "343:                 if ((cd->flags & DETECT_CONTENT_RELATIVE_NEXT) == 0) {",
      "344:                     SCLogDebug(\"'next sm' does not depend on me, so we can give up\");",
      "345:                     det_ctx->discontinue_matching = 1;",
      "346:                     goto no_match;",
      "347:                 }",
      "349:                 SCLogDebug(\"'next sm' depends on me %p, lets see what we can do (flags %u)\", cd, cd->flags);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bc7c01ecbc816618aa8a4a3be133d16a2728fc07",
      "candidate_info": {
        "commit_hash": "bc7c01ecbc816618aa8a4a3be133d16a2728fc07",
        "repo": "OISF/suricata",
        "commit_url": "https://github.com/OISF/suricata/commit/bc7c01ecbc816618aa8a4a3be133d16a2728fc07",
        "files": [
          "src/detect-content.h"
        ],
        "message": "detect: use BIT_U32 macro for content flags",
        "before_after_code_files": [
          "src/detect-content.h||src/detect-content.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OISF/suricata/pull/2681"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/detect-content.h||src/detect-content.h": [
          "File: src/detect-content.h -> src/detect-content.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "58: #define DETECT_CONTENT_IS_SINGLE(c) (!( ((c)->flags & DETECT_CONTENT_DISTANCE) || \\",
          "59:                                         ((c)->flags & DETECT_CONTENT_WITHIN) || \\",
          "",
          "[Removed Lines]",
          "29: #define DETECT_CONTENT_NOCASE            (1)",
          "30: #define DETECT_CONTENT_DISTANCE          (1 << 1)",
          "31: #define DETECT_CONTENT_WITHIN            (1 << 2)",
          "32: #define DETECT_CONTENT_OFFSET            (1 << 3)",
          "33: #define DETECT_CONTENT_DEPTH             (1 << 4)",
          "34: #define DETECT_CONTENT_FAST_PATTERN      (1 << 5)",
          "35: #define DETECT_CONTENT_FAST_PATTERN_ONLY (1 << 6)",
          "36: #define DETECT_CONTENT_FAST_PATTERN_CHOP (1 << 7)",
          "38: #define DETECT_CONTENT_RAWBYTES          (1 << 8)",
          "40: #define DETECT_CONTENT_NEGATED           (1 << 9)",
          "43: #define DETECT_CONTENT_RELATIVE_NEXT     (1 << 10)",
          "46: #define DETECT_CONTENT_OFFSET_BE         (1 << 11)",
          "47: #define DETECT_CONTENT_DEPTH_BE          (1 << 12)",
          "48: #define DETECT_CONTENT_DISTANCE_BE       (1 << 13)",
          "49: #define DETECT_CONTENT_WITHIN_BE         (1 << 14)",
          "52: #define DETECT_CONTENT_REPLACE           (1 << 15)",
          "56: #define DETECT_CONTENT_NO_DOUBLE_INSPECTION_REQUIRED (1 << 16)",
          "",
          "[Added Lines]",
          "29: #define DETECT_CONTENT_NOCASE            BIT_U32(0)",
          "30: #define DETECT_CONTENT_DISTANCE          BIT_U32(1)",
          "31: #define DETECT_CONTENT_WITHIN            BIT_U32(2)",
          "32: #define DETECT_CONTENT_OFFSET            BIT_U32(3)",
          "33: #define DETECT_CONTENT_DEPTH             BIT_U32(4)",
          "34: #define DETECT_CONTENT_FAST_PATTERN      BIT_U32(5)",
          "35: #define DETECT_CONTENT_FAST_PATTERN_ONLY BIT_U32(6)",
          "36: #define DETECT_CONTENT_FAST_PATTERN_CHOP BIT_U32(7)",
          "38: #define DETECT_CONTENT_RAWBYTES          BIT_U32(8)",
          "40: #define DETECT_CONTENT_NEGATED           BIT_U32(9)",
          "43: #define DETECT_CONTENT_RELATIVE_NEXT     BIT_U32(10)",
          "46: #define DETECT_CONTENT_OFFSET_BE         BIT_U32(11)",
          "47: #define DETECT_CONTENT_DEPTH_BE          BIT_U32(12)",
          "48: #define DETECT_CONTENT_DISTANCE_BE       BIT_U32(13)",
          "49: #define DETECT_CONTENT_WITHIN_BE         BIT_U32(14)",
          "52: #define DETECT_CONTENT_REPLACE           BIT_U32(15)",
          "56: #define DETECT_CONTENT_NO_DOUBLE_INSPECTION_REQUIRED BIT_U32(16)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c0275c2b29d405e60782da7c1cc975d854a4be64",
      "candidate_info": {
        "commit_hash": "c0275c2b29d405e60782da7c1cc975d854a4be64",
        "repo": "OISF/suricata",
        "commit_url": "https://github.com/OISF/suricata/commit/c0275c2b29d405e60782da7c1cc975d854a4be64",
        "files": [
          "src/tests/detect-engine-content-inspection.c"
        ],
        "message": "detect: more content inspection tests",
        "before_after_code_files": [
          "src/tests/detect-engine-content-inspection.c||src/tests/detect-engine-content-inspection.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OISF/suricata/pull/2681"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "src/tests/detect-engine-content-inspection.c||src/tests/detect-engine-content-inspection.c": [
          "File: src/tests/detect-engine-content-inspection.c -> src/tests/detect-engine-content-inspection.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "187:     TEST_FOOTER;",
          "188: }",
          "190: void DetectEngineContentInspectionRegisterTests(void)",
          "191: {",
          "192:     UtRegisterTest(\"DetectEngineContentInspectionTest01\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "191: static int DetectEngineContentInspectionTest09(void) {",
          "192:     TEST_HEADER;",
          "193:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; content:!\\\"d\\\";\", true, 3);",
          "194:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; content:!\\\"c\\\";\", false, 3);",
          "196:     TEST_RUN(\"abc03abcxyz\", 11, \"content:\\\"abc\\\"; byte_jump:2,0,relative,string,dec; content:\\\"xyz\\\"; within:3;\", true, 3);",
          "197:     TEST_RUN(\"abc03abc03abcxyz\", 16, \"content:\\\"abc\\\"; byte_jump:2,0,relative,string,dec; content:\\\"xyz\\\"; within:3;\", true, 5);",
          "198:     TEST_RUN(\"abc03abc03abcxyz\", 16, \"content:\\\"abc\\\"; byte_jump:2,0,relative,string,dec; content:\\\"xyz\\\"; within:3; isdataat:!1,relative;\", true, 6);",
          "199:     TEST_RUN(\"abc03abc03abcxyz\", 16, \"content:\\\"abc\\\"; byte_jump:2,0,relative,string,dec; content:\\\"xyz\\\"; within:3; pcre:\\\"/klm$/R\\\";\", false, 7);",
          "200:     TEST_RUN(\"abc03abc03abcxyzklm\", 19, \"content:\\\"abc\\\"; byte_jump:2,0,relative,string,dec; content:\\\"xyz\\\"; within:3; pcre:\\\"/klm$/R\\\";\", true, 6);",
          "201:     TEST_RUN(\"abc03abc03abcxyzklx\", 19, \"content:\\\"abc\\\"; byte_jump:2,0,relative,string,dec; content:\\\"xyz\\\"; within:3; pcre:\\\"/^klm$/R\\\";\", false, 7);",
          "202:     TEST_RUN(\"abc03abc03abc03abcxyzklm\", 24, \"content:\\\"abc\\\"; byte_jump:2,0,relative,string,dec; content:\\\"xyz\\\"; within:3; pcre:\\\"/^klm$/R\\\";\", true, 8);",
          "204:     TEST_FOOTER;",
          "205: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "205:                    DetectEngineContentInspectionTest07);",
          "206:     UtRegisterTest(\"DetectEngineContentInspectionTest08\",",
          "207:                    DetectEngineContentInspectionTest08);",
          "208: }",
          "210: #undef TEST_HEADER",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "225:     UtRegisterTest(\"DetectEngineContentInspectionTest09\",",
          "226:                    DetectEngineContentInspectionTest09);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "84b97ca15519ebffded1a475d9eda058620b1931",
      "candidate_info": {
        "commit_hash": "84b97ca15519ebffded1a475d9eda058620b1931",
        "repo": "OISF/suricata",
        "commit_url": "https://github.com/OISF/suricata/commit/84b97ca15519ebffded1a475d9eda058620b1931",
        "files": [
          "src/detect-engine-content-inspection.c",
          "src/detect-engine-content-inspection.h",
          "src/detect.c",
          "src/tests/detect-engine-content-inspection.c"
        ],
        "message": "detect: content-inspection tests\n\nAdd tests for the content inspection engine that count the number\nof steps it takes to eval a rule.",
        "before_after_code_files": [
          "src/detect-engine-content-inspection.c||src/detect-engine-content-inspection.c",
          "src/detect-engine-content-inspection.h||src/detect-engine-content-inspection.h",
          "src/detect.c||src/detect.c",
          "src/tests/detect-engine-content-inspection.c||src/tests/detect-engine-content-inspection.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/OISF/suricata/pull/2681"
        ],
        "olp_code_files": {
          "patch": [
            "src/detect-engine-content-inspection.c||src/detect-engine-content-inspection.c"
          ],
          "candidate": [
            "src/detect-engine-content-inspection.c||src/detect-engine-content-inspection.c"
          ]
        }
      },
      "candidate_diff": {
        "src/detect-engine-content-inspection.c||src/detect-engine-content-inspection.c": [
          "File: src/detect-engine-content-inspection.c -> src/detect-engine-content-inspection.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "592:     KEYWORD_PROFILING_END(det_ctx, smd->type, 1);",
          "593:     SCReturnInt(1);",
          "594: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "596: #ifdef UNITTESTS",
          "597: #include \"tests/detect-engine-content-inspection.c\"",
          "598: #endif",
          "",
          "---------------"
        ],
        "src/detect-engine-content-inspection.h||src/detect-engine-content-inspection.h": [
          "File: src/detect-engine-content-inspection.h -> src/detect-engine-content-inspection.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "40:                                   uint32_t stream_start_offset,",
          "41:                                   uint8_t inspection_mode, void *data);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "43: void DetectEngineContentInspectionRegisterTests(void);",
          "",
          "---------------"
        ],
        "src/detect.c||src/detect.c": [
          "File: src/detect.c -> src/detect.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "173: #include \"detect-template.h\"",
          "174: #include \"detect-template-buffer.h\"",
          "175: #include \"detect-bypass.h\"",
          "177: #include \"util-rule-vars.h\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "176: #include \"detect-engine-content-inspection.h\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9684:     UtRegisterTest(\"SigTestPorts01\", SigTestPorts01);",
          "9685:     UtRegisterTest(\"SigTestBug01\", SigTestBug01);",
          "9687: #if 0",
          "9688:     DetectSimdRegisterTests();",
          "9689: #endif",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "9688:     DetectEngineContentInspectionRegisterTests();",
          "",
          "---------------"
        ],
        "src/tests/detect-engine-content-inspection.c||src/tests/detect-engine-content-inspection.c": [
          "File: src/tests/detect-engine-content-inspection.c -> src/tests/detect-engine-content-inspection.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26: #include \"../suricata-common.h\"",
          "27: #include \"../decode.h\"",
          "28: #include \"../flow.h\"",
          "29: #include \"../detect.h\"",
          "31: #define TEST_HEADER                                     \\",
          "32:     ThreadVars tv;                                      \\",
          "33:     memset(&tv, 0, sizeof(tv));                         \\",
          "34:     Flow f;                                             \\",
          "35:     memset(&f, 0, sizeof(f));",
          "37: #define TEST_RUN(buf, buflen, sig, match, steps)                                            \\",
          "38: {                                                                                           \\",
          "39:     DetectEngineCtx *de_ctx = DetectEngineCtxInit();                                        \\",
          "40:     FAIL_IF_NULL(de_ctx);                                                                   \\",
          "41:     DetectEngineThreadCtx *det_ctx = NULL;                                                  \\",
          "42:     char rule[2048];                                                                        \\",
          "43:     snprintf(rule, sizeof(rule), \"alert tcp any any -> any any (%s sid:1; rev:1;)\", (sig)); \\",
          "44:     Signature *s = DetectEngineAppendSig(de_ctx, rule);                                     \\",
          "45:     FAIL_IF_NULL(s);                                                                        \\",
          "46:     SigGroupBuild(de_ctx);                                                                  \\",
          "47:     DetectEngineThreadCtxInit(&tv, (void *)de_ctx, (void *)&det_ctx);                       \\",
          "48:     FAIL_IF_NULL(det_ctx);                                                                  \\",
          "49:     int r = DetectEngineContentInspection(de_ctx, det_ctx,                                  \\",
          "50:                 s, s->sm_arrays[DETECT_SM_LIST_PMATCH], &f,                                 \\",
          "51:                 (uint8_t *)(buf), (buflen), 0,                                              \\",
          "52:                 DETECT_ENGINE_CONTENT_INSPECTION_MODE_PAYLOAD, NULL);                       \\",
          "53:     FAIL_IF_NOT(r == (match));                                                              \\",
          "54:     FAIL_IF_NOT(det_ctx->inspection_recursion_counter == (steps));                          \\",
          "55:     DetectEngineThreadCtxDeinit(&tv, det_ctx);                                              \\",
          "56:     DetectEngineCtxFree(de_ctx);                                                            \\",
          "57: }",
          "58: #define TEST_FOOTER     \\",
          "59:     PASS",
          "62: static int DetectEngineContentInspectionTest01(void) {",
          "63:     TEST_HEADER;",
          "64:     TEST_RUN(\"ab\", 2, \"content:\\\"a\\\"; content:\\\"b\\\";\", true, 2);",
          "65:     TEST_RUN(\"ab\", 2, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; \", true, 2);",
          "66:     TEST_RUN(\"ba\", 2, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; \", false, 2);",
          "67:     TEST_FOOTER;",
          "68: }",
          "71: static int DetectEngineContentInspectionTest02(void) {",
          "72:     TEST_HEADER;",
          "73:     TEST_RUN(\"ab\", 2, \"content:\\\"a\\\"; pcre:\\\"/b/\\\";\", true, 2);",
          "74:     TEST_RUN(\"ab\", 2, \"content:\\\"a\\\"; pcre:\\\"/b/R\\\";\", true, 2);",
          "75:     TEST_RUN(\"ba\", 2, \"content:\\\"a\\\"; pcre:\\\"/b/R\\\";\", false, 2);",
          "76:     TEST_FOOTER;",
          "77: }",
          "80: static int DetectEngineContentInspectionTest03(void) {",
          "81:     TEST_HEADER;",
          "82:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; content:\\\"c\\\";\", true, 3);",
          "83:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; content:\\\"d\\\";\", false, 3);",
          "85:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0;\", true, 3);",
          "86:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"d\\\"; distance:0;\", false, 6); // TODO should be 3?",
          "88:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:\\\"d\\\"; distance:0; within:1;\", false, 5);",
          "91:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:\\\"c\\\"; distance:0; within:1;\", true, 5);",
          "93:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:\\\"c\\\"; distance:0; within:1; content:\\\"bab\\\";\", true, 6);",
          "95:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:\\\"c\\\"; distance:0; within:1; content:\\\"no\\\";\", false, 6);",
          "98:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; pcre:\\\"/^c$/R\\\";\", true, 5);",
          "100:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; pcre:\\\"/^c$/R\\\"; content:\\\"bab\\\";\", true, 6);",
          "102:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; pcre:\\\"/^c$/R\\\"; content:\\\"no\\\";\", false, 6);",
          "104:     TEST_FOOTER;",
          "105: }",
          "108: static int DetectEngineContentInspectionTest04(void) {",
          "109:     TEST_HEADER;",
          "110:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; content:\\\"c\\\";\", true, 3);",
          "111:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; content:\\\"d\\\";\", false, 3);",
          "114:     TEST_RUN(\"ababc\", 5, \"pcre:\\\"/^a/\\\"; pcre:\\\"/^b/R\\\"; pcre:\\\"/c/R\\\"; \", true, 3);",
          "115:     TEST_RUN(\"ababc\", 5, \"pcre:\\\"/a/\\\"; pcre:\\\"/^b/R\\\"; pcre:\\\"/^c/R\\\"; \", true, 5);",
          "116:     TEST_RUN(\"ababc\", 5, \"pcre:\\\"/^a/\\\"; pcre:\\\"/^b/R\\\"; pcre:\\\"/d/R\\\"; \", false, 3);",
          "117:     TEST_RUN(\"ababc\", 5, \"pcre:\\\"/^a/\\\"; pcre:\\\"/^b/R\\\"; pcre:\\\"/c/R\\\"; pcre:\\\"/d/\\\"; \", false, 4);",
          "119:     TEST_FOOTER;",
          "120: }",
          "123: static int DetectEngineContentInspectionTest05(void) {",
          "124:     TEST_HEADER;",
          "125:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; content:\\\"c\\\";\", true, 3);",
          "126:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; content:\\\"d\\\";\", false, 3);",
          "130:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:\\\"b\\\"; content:\\\"c\\\"; distance:0; within:1;\", true, 5);",
          "132:     TEST_FOOTER;",
          "133: }",
          "136: static int DetectEngineContentInspectionTest06(void) {",
          "137:     TEST_HEADER;",
          "138:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; content:\\\"c\\\";\", true, 3);",
          "139:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; content:\\\"d\\\";\", false, 3);",
          "142:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:\\\"c\\\"; distance:0; within:1; isdataat:!1,relative;\", true, 6);",
          "143:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:\\\"c\\\"; distance:0; within:1; isdataat:1,relative;\", false, 6);",
          "145:     TEST_RUN(\"ababcabc\", 8, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:\\\"c\\\"; distance:0; within:1; isdataat:!1,relative;\", true, 9);",
          "146:     TEST_RUN(\"ababcabc\", 8, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:\\\"c\\\"; distance:0; within:1; isdataat:1,relative;\", true, 6);",
          "148:     TEST_FOOTER;",
          "149: }",
          "152: static int DetectEngineContentInspectionTest07(void) {",
          "153:     TEST_HEADER;",
          "154:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcd\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; within:1; distance:0; content:\\\"c\\\"; distance:0; within:1; content:\\\"d\\\";\", true, 4);",
          "155:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcd\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; within:1; distance:0; content:\\\"c\\\"; distance:0; within:1; content:\\\"d\\\"; within:1; distance:0; \", true, 31);",
          "156:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; within:1; distance:0; content:\\\"c\\\"; distance:0; within:1; content:\\\"d\\\"; within:1; distance:0; \", false, 31);",
          "158:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; \", false, 286); // TODO should be 4?",
          "159:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; pcre:\\\"/^d/R\\\"; \", false, 286); // TODO should be 4?",
          "160:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; isdataat:!1,relative; \", false, 286); // TODO should be 4?",
          "161:     TEST_RUN(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdx\", 41,",
          "162:             \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; content:\\\"e\\\"; distance:0; \", false, 1001); // TODO should be 5?",
          "163:     TEST_RUN(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdx\", 41,",
          "164:             \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; pcre:\\\"/^e/R\\\"; \", false, 1001); // TODO should be 5?",
          "165:     TEST_RUN(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdx\", 41,",
          "166:             \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; isdataat:!1,relative; \", false, 1001); // TODO should be 5?",
          "168:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcd\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; within:1; distance:0; content:\\\"c\\\"; distance:0; within:1; pcre:\\\"/d/\\\";\", true, 4);",
          "169:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcd\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; within:1; distance:0; content:\\\"c\\\"; distance:0; within:1; pcre:\\\"/d/R\\\";\", true, 4);",
          "170:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcd\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; within:1; distance:0; content:\\\"c\\\"; distance:0; within:1; pcre:\\\"/^d/R\\\";\", true, 31);",
          "172:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; within:1; distance:0; content:\\\"c\\\"; distance:0; within:1; pcre:\\\"/d/\\\";\", false, 4);",
          "173:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; within:1; distance:0; content:\\\"c\\\"; distance:0; within:1; pcre:\\\"/d/R\\\";\", false, 31);",
          "174:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; within:1; distance:0; content:\\\"c\\\"; distance:0; within:1; pcre:\\\"/^d/R\\\";\", false, 31);",
          "175:     TEST_FOOTER;",
          "176: }",
          "178: void DetectEngineContentInspectionRegisterTests(void)",
          "179: {",
          "180:     UtRegisterTest(\"DetectEngineContentInspectionTest01\",",
          "181:                    DetectEngineContentInspectionTest01);",
          "182:     UtRegisterTest(\"DetectEngineContentInspectionTest02\",",
          "183:                    DetectEngineContentInspectionTest02);",
          "184:     UtRegisterTest(\"DetectEngineContentInspectionTest03\",",
          "185:                    DetectEngineContentInspectionTest03);",
          "186:     UtRegisterTest(\"DetectEngineContentInspectionTest04\",",
          "187:                    DetectEngineContentInspectionTest04);",
          "188:     UtRegisterTest(\"DetectEngineContentInspectionTest05\",",
          "189:                    DetectEngineContentInspectionTest05);",
          "190:     UtRegisterTest(\"DetectEngineContentInspectionTest06\",",
          "191:                    DetectEngineContentInspectionTest06);",
          "192:     UtRegisterTest(\"DetectEngineContentInspectionTest07\",",
          "193:                    DetectEngineContentInspectionTest07);",
          "194: }",
          "196: #undef TEST_HEADER",
          "197: #undef TEST_RUN",
          "198: #undef TEST_FOOTER",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7eda6beade1b9227a5ad36c50610858c67155530",
      "candidate_info": {
        "commit_hash": "7eda6beade1b9227a5ad36c50610858c67155530",
        "repo": "OISF/suricata",
        "commit_url": "https://github.com/OISF/suricata/commit/7eda6beade1b9227a5ad36c50610858c67155530",
        "files": [
          "src/detect-byte-extract.c",
          "src/detect-content.h",
          "src/detect-distance.c",
          "src/detect-engine-content-inspection.c",
          "src/detect-within.c",
          "src/tests/detect-engine-content-inspection.c"
        ],
        "message": "detect: don't rescan when just distance is used\n\nContent inspection optimization: when just distance is used without\nwithin we don't need to search recursively.\n\nE.g. content:\"a\"; content:\"b\"; distance:1; will scan the buffer for\n'a' and when it finds 'a' it will scan the remainder for 'b'. Until\nnow, the failure to find 'b' would lead to looking for the next 'a'\nand then for 'b' after that. However, we already inspected the\nentire buffer for 'b', so we know this will fail.",
        "before_after_code_files": [
          "src/detect-byte-extract.c||src/detect-byte-extract.c",
          "src/detect-content.h||src/detect-content.h",
          "src/detect-distance.c||src/detect-distance.c",
          "src/detect-engine-content-inspection.c||src/detect-engine-content-inspection.c",
          "src/detect-within.c||src/detect-within.c",
          "src/tests/detect-engine-content-inspection.c||src/tests/detect-engine-content-inspection.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/detect-engine-content-inspection.c||src/detect-engine-content-inspection.c"
          ],
          "candidate": [
            "src/detect-engine-content-inspection.c||src/detect-engine-content-inspection.c"
          ]
        }
      },
      "candidate_diff": {
        "src/detect-byte-extract.c||src/detect-byte-extract.c": [
          "File: src/detect-byte-extract.c -> src/detect-byte-extract.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "2918:     if (strncmp((char *)cd->content, \"four\", cd->content_len) != 0 ||",
          "2919:         cd->flags != (DETECT_CONTENT_DISTANCE_BE |",
          "2920:                       DETECT_CONTENT_DISTANCE |",
          "2922:         cd->distance != bed1->local_id ||",
          "2923:         cd->depth != 0 ||",
          "2924:         cd->offset != 0) {",
          "",
          "[Removed Lines]",
          "2921:                       DETECT_CONTENT_RELATIVE_NEXT) ||",
          "",
          "[Added Lines]",
          "2921:                       DETECT_CONTENT_DISTANCE_NEXT) ||",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "3147:     if (strncmp((char *)cd->content, \"four\", cd->content_len) != 0 ||",
          "3148:         cd->flags != (DETECT_CONTENT_WITHIN_BE |",
          "3149:                       DETECT_CONTENT_WITHIN|",
          "3151:         cd->within != bed1->local_id ||",
          "3152:         cd->depth != 0 ||",
          "3153:         cd->offset != 0 ||",
          "",
          "[Removed Lines]",
          "3150:                       DETECT_CONTENT_RELATIVE_NEXT) ||",
          "",
          "[Added Lines]",
          "3150:                       DETECT_CONTENT_WITHIN_NEXT) ||",
          "",
          "---------------"
        ],
        "src/detect-content.h||src/detect-content.h": [
          "File: src/detect-content.h -> src/detect-content.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: #define DETECT_CONTENT_NEGATED           BIT_U32(9)",
          "46: #define DETECT_CONTENT_OFFSET_BE         BIT_U32(11)",
          "",
          "[Removed Lines]",
          "43: #define DETECT_CONTENT_RELATIVE_NEXT     BIT_U32(10)",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "56: #define DETECT_CONTENT_NO_DOUBLE_INSPECTION_REQUIRED BIT_U32(16)",
          "59: #define DETECT_CONTENT_IS_SINGLE(c) (!( ((c)->flags & DETECT_CONTENT_DISTANCE) || \\",
          "60:                                         ((c)->flags & DETECT_CONTENT_WITHIN) || \\",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "57: #define DETECT_CONTENT_WITHIN_NEXT      BIT_U32(17)",
          "58: #define DETECT_CONTENT_DISTANCE_NEXT    BIT_U32(18)",
          "60: #define DETECT_CONTENT_RELATIVE_NEXT    (DETECT_CONTENT_WITHIN_NEXT|DETECT_CONTENT_DISTANCE_NEXT)",
          "",
          "---------------"
        ],
        "src/detect-distance.c||src/detect-distance.c": [
          "File: src/detect-distance.c -> src/detect-distance.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "142:                        \"only content\");",
          "143:             goto end;",
          "144:         }",
          "146:     } else if (prev_pm->type == DETECT_PCRE) {",
          "147:         DetectPcreData *pd = (DetectPcreData *)prev_pm->ctx;",
          "148:         pd->flags |= DETECT_PCRE_RELATIVE_NEXT;",
          "",
          "[Removed Lines]",
          "145:         prev_cd->flags |= DETECT_CONTENT_RELATIVE_NEXT;",
          "",
          "[Added Lines]",
          "145:         if ((cd->flags & DETECT_CONTENT_NEGATED) == 0) {",
          "146:             prev_cd->flags |= DETECT_CONTENT_DISTANCE_NEXT;",
          "147:         } else {",
          "148:             prev_cd->flags |= DETECT_CONTENT_RELATIVE_NEXT;",
          "149:         }",
          "",
          "---------------"
        ],
        "src/detect-engine-content-inspection.c||src/detect-engine-content-inspection.c": [
          "File: src/detect-engine-content-inspection.c -> src/detect-engine-content-inspection.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "340:                 }",
          "344:                     SCLogDebug(\"'next sm' does not depend on me, so we can give up\");",
          "345:                     det_ctx->discontinue_matching = 1;",
          "346:                     goto no_match;",
          "",
          "[Removed Lines]",
          "343:                 if ((cd->flags & DETECT_CONTENT_RELATIVE_NEXT) == 0) {",
          "",
          "[Added Lines]",
          "343:                 if ((cd->flags & DETECT_CONTENT_WITHIN_NEXT) == 0) {",
          "",
          "---------------"
        ],
        "src/detect-within.c||src/detect-within.c": [
          "File: src/detect-within.c -> src/detect-within.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "152:                        \"only content\");",
          "153:             goto end;",
          "154:         }",
          "156:     } else if (prev_pm->type == DETECT_PCRE) {",
          "157:         DetectPcreData *pd = (DetectPcreData *)prev_pm->ctx;",
          "158:         pd->flags |= DETECT_PCRE_RELATIVE_NEXT;",
          "",
          "[Removed Lines]",
          "155:         prev_cd->flags |= DETECT_CONTENT_RELATIVE_NEXT;",
          "",
          "[Added Lines]",
          "155:         prev_cd->flags |= DETECT_CONTENT_WITHIN_NEXT;",
          "",
          "---------------"
        ],
        "src/tests/detect-engine-content-inspection.c||src/tests/detect-engine-content-inspection.c": [
          "File: src/tests/detect-engine-content-inspection.c -> src/tests/detect-engine-content-inspection.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; content:\\\"d\\\";\", false, 3);",
          "85:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0;\", true, 3);",
          "88:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:\\\"d\\\"; distance:0; within:1;\", false, 5);",
          "",
          "[Removed Lines]",
          "86:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"d\\\"; distance:0;\", false, 6); // TODO should be 3?",
          "",
          "[Added Lines]",
          "86:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"d\\\"; distance:0;\", false, 3);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "155:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcd\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; within:1; distance:0; content:\\\"c\\\"; distance:0; within:1; content:\\\"d\\\"; within:1; distance:0; \", true, 31);",
          "156:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; within:1; distance:0; content:\\\"c\\\"; distance:0; within:1; content:\\\"d\\\"; within:1; distance:0; \", false, 31);",
          "161:     TEST_RUN(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdx\", 41,",
          "163:     TEST_RUN(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdx\", 41,",
          "165:     TEST_RUN(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdx\", 41,",
          "168:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcd\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; within:1; distance:0; content:\\\"c\\\"; distance:0; within:1; pcre:\\\"/d/\\\";\", true, 4);",
          "169:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcd\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; within:1; distance:0; content:\\\"c\\\"; distance:0; within:1; pcre:\\\"/d/R\\\";\", true, 4);",
          "",
          "[Removed Lines]",
          "158:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; \", false, 286); // TODO should be 4?",
          "159:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; pcre:\\\"/^d/R\\\"; \", false, 286); // TODO should be 4?",
          "160:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; isdataat:!1,relative; \", false, 286); // TODO should be 4?",
          "162:             \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; content:\\\"e\\\"; distance:0; \", false, 1001); // TODO should be 5?",
          "164:             \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; pcre:\\\"/^e/R\\\"; \", false, 1001); // TODO should be 5?",
          "166:             \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; isdataat:!1,relative; \", false, 1001); // TODO should be 5?",
          "",
          "[Added Lines]",
          "158:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; \", false, 4);",
          "159:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; pcre:\\\"/^d/R\\\"; \", false, 13);",
          "160:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; isdataat:!1,relative; \", false, 13); // TODO should be 4?",
          "162:             \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; content:\\\"e\\\"; distance:0; \", false, 5);",
          "164:             \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; pcre:\\\"/^e/R\\\"; \", false, 14); // TODO should be 5?",
          "166:             \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; isdataat:!1,relative; \", false, 14); // TODO should be 5?",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "175:     TEST_FOOTER;",
          "176: }",
          "178: void DetectEngineContentInspectionRegisterTests(void)",
          "179: {",
          "180:     UtRegisterTest(\"DetectEngineContentInspectionTest01\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "179: static int DetectEngineContentInspectionTest08(void) {",
          "180:     TEST_HEADER;",
          "181:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; content:!\\\"d\\\";\", true, 3);",
          "182:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; content:!\\\"c\\\";\", false, 3);",
          "184:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:!\\\"a\\\"; distance:0; within:1;\", true, 5);",
          "185:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:!\\\"a\\\"; distance:0; \", true, 5);",
          "187:     TEST_FOOTER;",
          "188: }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "191:                    DetectEngineContentInspectionTest06);",
          "192:     UtRegisterTest(\"DetectEngineContentInspectionTest07\",",
          "193:                    DetectEngineContentInspectionTest07);",
          "194: }",
          "196: #undef TEST_HEADER",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "206:     UtRegisterTest(\"DetectEngineContentInspectionTest08\",",
          "207:                    DetectEngineContentInspectionTest08);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "842dfbc3f86cee39d19ae394d39f87be2e1eea94",
      "candidate_info": {
        "commit_hash": "842dfbc3f86cee39d19ae394d39f87be2e1eea94",
        "repo": "OISF/suricata",
        "commit_url": "https://github.com/OISF/suricata/commit/842dfbc3f86cee39d19ae394d39f87be2e1eea94",
        "files": [
          "src/detect-content.h",
          "src/detect-engine-content-inspection.c",
          "src/detect-isdataat.c",
          "src/tests/detect-engine-content-inspection.c"
        ],
        "message": "detect: enforce isdataat:!1,relative earlier\n\nThe expression 'isdataat:!1,relative' is used to make sure a match\nis at the end of a buffer quite often. This patch optimizes this case\nfor 'content' followed by the expression. It enforces it by setting\nand 'ends with' flag on the content and then taking that flag into\naccount while doing the pattern match.",
        "before_after_code_files": [
          "src/detect-content.h||src/detect-content.h",
          "src/detect-engine-content-inspection.c||src/detect-engine-content-inspection.c",
          "src/detect-isdataat.c||src/detect-isdataat.c",
          "src/tests/detect-engine-content-inspection.c||src/tests/detect-engine-content-inspection.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/detect-engine-content-inspection.c||src/detect-engine-content-inspection.c"
          ],
          "candidate": [
            "src/detect-engine-content-inspection.c||src/detect-engine-content-inspection.c"
          ]
        }
      },
      "candidate_diff": {
        "src/detect-content.h||src/detect-content.h": [
          "File: src/detect-content.h -> src/detect-content.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "40: #define DETECT_CONTENT_NEGATED           BIT_U32(9)",
          "45: #define DETECT_CONTENT_OFFSET_BE         BIT_U32(11)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "42: #define DETECT_CONTENT_ENDS_WITH         BIT_U32(10)",
          "",
          "---------------"
        ],
        "src/detect-engine-content-inspection.c||src/detect-engine-content-inspection.c": [
          "File: src/detect-engine-content-inspection.c -> src/detect-engine-content-inspection.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "273: #ifdef DEBUG",
          "274:             BUG_ON(sbuffer_len > buffer_len);",
          "275: #endif",
          "",
          "[Removed Lines]",
          "281:             found = SpmScan(cd->spm_ctx, det_ctx->spm_thread_ctx, sbuffer,",
          "282:                             sbuffer_len);",
          "",
          "[Added Lines]",
          "276:             if (cd->flags & DETECT_CONTENT_ENDS_WITH && depth < buffer_len) {",
          "277:                 SCLogDebug(\"depth < buffer_len while DETECT_CONTENT_ENDS_WITH is set. Can't possibly match.\");",
          "278:                 found = NULL;",
          "279:             } else if (cd->content_len > sbuffer_len) {",
          "280:                 found = NULL;",
          "281:             } else {",
          "283:                 found = SpmScan(cd->spm_ctx, det_ctx->spm_thread_ctx, sbuffer,",
          "284:                         sbuffer_len);",
          "285:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "306:                 SCLogDebug(\"content %\"PRIu32\" matched at offset %\"PRIu32\"\", cd->id, match_offset);",
          "307:                 det_ctx->buffer_offset = match_offset;",
          "316:                     }",
          "352:                 prev_offset = (match_offset - (cd->content_len - 1));",
          "353:                 SCLogDebug(\"trying to see if there is another match after prev_offset %\"PRIu32, prev_offset);",
          "",
          "[Removed Lines]",
          "310:                 if (cd->flags & DETECT_CONTENT_REPLACE) {",
          "311:                     if (inspection_mode == DETECT_ENGINE_CONTENT_INSPECTION_MODE_PAYLOAD) {",
          "313:                         det_ctx->replist = DetectReplaceAddToList(det_ctx->replist, found, cd);",
          "314:                     } else {",
          "315:                         SCLogWarning(SC_ERR_INVALID_VALUE, \"Can't modify payload without packet\");",
          "317:                 }",
          "320:                 if (smd->is_last) {",
          "321:                     goto match;",
          "322:                 }",
          "324:                 SCLogDebug(\"content %\"PRIu32, cd->id);",
          "325:                 KEYWORD_PROFILING_END(det_ctx, smd->type, 1);",
          "330:                 int r = DetectEngineContentInspection(de_ctx, det_ctx, s, smd+1,",
          "331:                         f, buffer, buffer_len, stream_start_offset, inspection_mode, data);",
          "332:                 if (r == 1) {",
          "333:                     SCReturnInt(1);",
          "334:                 }",
          "335:                 SCLogDebug(\"no match for 'next sm'\");",
          "337:                 if (det_ctx->discontinue_matching) {",
          "338:                     SCLogDebug(\"'next sm' said to discontinue this right now\");",
          "339:                     goto no_match;",
          "340:                 }",
          "343:                 if ((cd->flags & DETECT_CONTENT_WITHIN_NEXT) == 0) {",
          "344:                     SCLogDebug(\"'next sm' does not depend on me, so we can give up\");",
          "345:                     det_ctx->discontinue_matching = 1;",
          "346:                     goto no_match;",
          "347:                 }",
          "349:                 SCLogDebug(\"'next sm' depends on me %p, lets see what we can do (flags %u)\", cd, cd->flags);",
          "",
          "[Added Lines]",
          "312:                 if ((cd->flags & DETECT_CONTENT_ENDS_WITH) == 0 || match_offset == buffer_len) {",
          "314:                     if (cd->flags & DETECT_CONTENT_REPLACE) {",
          "315:                         if (inspection_mode == DETECT_ENGINE_CONTENT_INSPECTION_MODE_PAYLOAD) {",
          "317:                             det_ctx->replist = DetectReplaceAddToList(det_ctx->replist, found, cd);",
          "318:                         } else {",
          "319:                             SCLogWarning(SC_ERR_INVALID_VALUE, \"Can't modify payload without packet\");",
          "320:                         }",
          "324:                     if (smd->is_last) {",
          "325:                         goto match;",
          "326:                     }",
          "328:                     SCLogDebug(\"content %\"PRIu32, cd->id);",
          "329:                     KEYWORD_PROFILING_END(det_ctx, smd->type, 1);",
          "334:                     int r = DetectEngineContentInspection(de_ctx, det_ctx, s, smd+1,",
          "335:                             f, buffer, buffer_len, stream_start_offset, inspection_mode, data);",
          "336:                     if (r == 1) {",
          "337:                         SCReturnInt(1);",
          "338:                     }",
          "339:                     SCLogDebug(\"no match for 'next sm'\");",
          "341:                     if (det_ctx->discontinue_matching) {",
          "342:                         SCLogDebug(\"'next sm' said to discontinue this right now\");",
          "343:                         goto no_match;",
          "344:                     }",
          "347:                     if ((cd->flags & DETECT_CONTENT_WITHIN_NEXT) == 0) {",
          "348:                         SCLogDebug(\"'next sm' does not depend on me, so we can give up\");",
          "349:                         det_ctx->discontinue_matching = 1;",
          "350:                         goto no_match;",
          "351:                     }",
          "353:                     SCLogDebug(\"'next sm' depends on me %p, lets see what we can do (flags %u)\", cd, cd->flags);",
          "354:                 }",
          "",
          "---------------"
        ],
        "src/detect-isdataat.c||src/detect-isdataat.c": [
          "File: src/detect-isdataat.c -> src/detect-isdataat.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "242:         SCFree(offset);",
          "243:     }",
          "245:     sm = SigMatchAlloc();",
          "246:     if (sm == NULL)",
          "247:         goto end;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "246:     if (prev_pm != NULL && prev_pm->type == DETECT_CONTENT &&",
          "247:         idad->dataat == 1 &&",
          "248:         (idad->flags & (ISDATAAT_RELATIVE|ISDATAAT_NEGATED)) == (ISDATAAT_RELATIVE|ISDATAAT_NEGATED))",
          "249:     {",
          "250:         DetectContentData *cd = (DetectContentData *)prev_pm->ctx;",
          "251:         cd->flags |= DETECT_CONTENT_ENDS_WITH;",
          "252:         ret = 0;",
          "253:         goto end;",
          "254:     }",
          "",
          "---------------"
        ],
        "src/tests/detect-engine-content-inspection.c||src/tests/detect-engine-content-inspection.c": [
          "File: src/tests/detect-engine-content-inspection.c -> src/tests/detect-engine-content-inspection.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "139:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; content:\\\"d\\\";\", false, 3);",
          "143:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:\\\"c\\\"; distance:0; within:1; isdataat:1,relative;\", false, 6);",
          "146:     TEST_RUN(\"ababcabc\", 8, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:\\\"c\\\"; distance:0; within:1; isdataat:1,relative;\", true, 6);",
          "148:     TEST_FOOTER;",
          "149: }",
          "",
          "[Removed Lines]",
          "142:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:\\\"c\\\"; distance:0; within:1; isdataat:!1,relative;\", true, 6);",
          "145:     TEST_RUN(\"ababcabc\", 8, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:\\\"c\\\"; distance:0; within:1; isdataat:!1,relative;\", true, 9);",
          "",
          "[Added Lines]",
          "142:     TEST_RUN(\"ababc\", 5, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:\\\"c\\\"; distance:0; within:1; isdataat:!1,relative;\", true, 5);",
          "145:     TEST_RUN(\"ababcabc\", 8, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; within:1; content:\\\"c\\\"; distance:0; within:1; isdataat:!1,relative;\", true, 7);",
          "148:     TEST_RUN(\"abcXYZ\", 6, \"content:\\\"abc\\\"; content:\\\"XYZ\\\"; distance:0; within:3; isdataat:!1,relative;\", true, 2);",
          "149:     TEST_RUN(\"abcXYZ\", 6, \"content:\\\"XYZ\\\"; distance:3; within:3; isdataat:!1,relative;\", true, 1);",
          "150:     TEST_RUN(\"abcXYZ\", 6, \"content:\\\"cXY\\\"; distance:2; within:3; isdataat:!1,relative;\", false, 1);",
          "152:     TEST_RUN(\"xxxxxxxxxxxxxxxxxyYYYYYYYYYYYYYYYY\", 34, \"content:\\\"yYYYYYYYYYYYYYYYY\\\"; distance:9; within:29; isdataat:!1,relative;\", true, 1);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "158:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; \", false, 4);",
          "159:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; pcre:\\\"/^d/R\\\"; \", false, 13);",
          "161:     TEST_RUN(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdx\", 41,",
          "162:             \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; content:\\\"e\\\"; distance:0; \", false, 5);",
          "163:     TEST_RUN(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdx\", 41,",
          "164:             \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; pcre:\\\"/^e/R\\\"; \", false, 14); // TODO should be 5?",
          "165:     TEST_RUN(\"abcdabcdabcdabcdabcdabcdabcdabcdabcdabcdx\", 41,",
          "168:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcd\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; within:1; distance:0; content:\\\"c\\\"; distance:0; within:1; pcre:\\\"/d/\\\";\", true, 4);",
          "169:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcd\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; within:1; distance:0; content:\\\"c\\\"; distance:0; within:1; pcre:\\\"/d/R\\\";\", true, 4);",
          "",
          "[Removed Lines]",
          "160:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; isdataat:!1,relative; \", false, 13); // TODO should be 4?",
          "166:             \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; isdataat:!1,relative; \", false, 14); // TODO should be 5?",
          "",
          "[Added Lines]",
          "165:     TEST_RUN(\"abcabcabcabcabcabcabcabcabcabcx\", 31, \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; isdataat:!1,relative; \", false, 3);",
          "171:             \"content:\\\"a\\\"; content:\\\"b\\\"; distance:0; content:\\\"c\\\"; distance:0; content:\\\"d\\\"; distance:0; isdataat:!1,relative; \", false, 4);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "196:     TEST_RUN(\"abc03abcxyz\", 11, \"content:\\\"abc\\\"; byte_jump:2,0,relative,string,dec; content:\\\"xyz\\\"; within:3;\", true, 3);",
          "197:     TEST_RUN(\"abc03abc03abcxyz\", 16, \"content:\\\"abc\\\"; byte_jump:2,0,relative,string,dec; content:\\\"xyz\\\"; within:3;\", true, 5);",
          "199:     TEST_RUN(\"abc03abc03abcxyz\", 16, \"content:\\\"abc\\\"; byte_jump:2,0,relative,string,dec; content:\\\"xyz\\\"; within:3; pcre:\\\"/klm$/R\\\";\", false, 7);",
          "200:     TEST_RUN(\"abc03abc03abcxyzklm\", 19, \"content:\\\"abc\\\"; byte_jump:2,0,relative,string,dec; content:\\\"xyz\\\"; within:3; pcre:\\\"/klm$/R\\\";\", true, 6);",
          "201:     TEST_RUN(\"abc03abc03abcxyzklx\", 19, \"content:\\\"abc\\\"; byte_jump:2,0,relative,string,dec; content:\\\"xyz\\\"; within:3; pcre:\\\"/^klm$/R\\\";\", false, 7);",
          "",
          "[Removed Lines]",
          "198:     TEST_RUN(\"abc03abc03abcxyz\", 16, \"content:\\\"abc\\\"; byte_jump:2,0,relative,string,dec; content:\\\"xyz\\\"; within:3; isdataat:!1,relative;\", true, 6);",
          "",
          "[Added Lines]",
          "203:     TEST_RUN(\"abc03abc03abcxyz\", 16, \"content:\\\"abc\\\"; byte_jump:2,0,relative,string,dec; content:\\\"xyz\\\"; within:3; isdataat:!1,relative;\", true, 5);",
          "",
          "---------------"
        ]
      }
    }
  ]
}