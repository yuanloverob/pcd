{
  "cve_id": "CVE-2022-23837",
  "cve_desc": "In api.rb in Sidekiq before 5.2.10 and 6.4.0, there is no limit on the number of days when requesting stats for the graph. This overloads the system, affecting the Web UI, and makes it unavailable to users.",
  "repo": "mperham/sidekiq",
  "patch_hash": "7785ac1399f1b28992adb56055f6acd88fd1d956",
  "patch_info": {
    "commit_hash": "7785ac1399f1b28992adb56055f6acd88fd1d956",
    "repo": "mperham/sidekiq",
    "commit_url": "https://github.com/mperham/sidekiq/commit/7785ac1399f1b28992adb56055f6acd88fd1d956",
    "files": [
      "lib/sidekiq/api.rb",
      "lib/sidekiq/web/application.rb",
      "test/test_api.rb",
      "test/test_web.rb"
    ],
    "message": "Validate `days` parameter to avoid possible DoS in Web UI\n\nThank you to Sergey Shpakov of http://tutum.space for reporting.",
    "before_after_code_files": [
      "lib/sidekiq/api.rb||lib/sidekiq/api.rb",
      "lib/sidekiq/web/application.rb||lib/sidekiq/web/application.rb",
      "test/test_api.rb||test/test_api.rb",
      "test/test_web.rb||test/test_web.rb"
    ]
  },
  "patch_diff": {
    "lib/sidekiq/api.rb||lib/sidekiq/api.rb": [
      "File: lib/sidekiq/api.rb -> lib/sidekiq/api.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "162:     class History",
      "163:       def initialize(days_previous, start_date = nil)",
      "164:         @days_previous = days_previous",
      "165:         @start_date = start_date || Time.now.utc.to_date",
      "166:       end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "164:         # we only store five years of data in Redis",
      "165:         raise ArgumentError if days_previous < 1 || days_previous > (5 * 365)",
      "",
      "---------------"
    ],
    "lib/sidekiq/web/application.rb||lib/sidekiq/web/application.rb": [
      "File: lib/sidekiq/web/application.rb -> lib/sidekiq/web/application.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "51:     get \"/\" do",
      "52:       @redis_info = redis_info.select { |k, v| REDIS_KEYS.include? k }",
      "54:       @processed_history = stats_history.processed",
      "55:       @failed_history = stats_history.failed",
      "",
      "[Removed Lines]",
      "53:       stats_history = Sidekiq::Stats::History.new((params[\"days\"] || 30).to_i)",
      "",
      "[Added Lines]",
      "53:       days = (params[\"days\"] || 30).to_i",
      "54:       return halt(401) if days < 1 || days > 180",
      "56:       stats_history = Sidekiq::Stats::History.new(days)",
      "",
      "---------------"
    ],
    "test/test_api.rb||test/test_api.rb": [
      "File: test/test_api.rb -> test/test_api.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "156:         Time::DATE_FORMATS[:default] = @before",
      "157:       end",
      "159:       describe \"processed\" do",
      "160:         it 'retrieves hash of dates' do",
      "161:           Sidekiq.redis do |c|",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "159:       describe \"history\" do",
      "160:         it \"does not allow invalid input\" do",
      "161:           assert_raises(ArgumentError) { Sidekiq::Stats::History.new(-1) }",
      "162:           assert_raises(ArgumentError) { Sidekiq::Stats::History.new(0) }",
      "163:           assert_raises(ArgumentError) { Sidekiq::Stats::History.new(2000) }",
      "164:           assert Sidekiq::Stats::History.new(200)",
      "165:         end",
      "166:       end",
      "",
      "---------------"
    ],
    "test/test_web.rb||test/test_web.rb": [
      "File: test/test_web.rb -> test/test_web.rb",
      "--- Hunk 1 ---",
      "[Context before]",
      "748:       basic_authorize 'a', 'b'",
      "750:       get '/'",
      "752:       assert_equal 200, last_response.status",
      "753:     end",
      "754:   end",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "752:       get '/?days=1000000'",
      "753:       assert_equal 401, last_response.status",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8ab6d61b1872e022106d65e411d1b25589457f52",
      "candidate_info": {
        "commit_hash": "8ab6d61b1872e022106d65e411d1b25589457f52",
        "repo": "mperham/sidekiq",
        "commit_url": "https://github.com/mperham/sidekiq/commit/8ab6d61b1872e022106d65e411d1b25589457f52",
        "files": [
          "lib/sidekiq/api.rb",
          "lib/sidekiq/web/action.rb",
          "lib/sidekiq/web/application.rb",
          "test/test_api.rb",
          "test/test_web.rb"
        ],
        "message": "Backport 7785ac1399f1b28992adb56055f6acd88fd1d956 (#5157)\n\nThis was implemented because of the discussion in #5151\nOriginal commit message:\n\nValidate days parameter to avoid possible DoS in Web UI\n\nThank you to Sergey Shpakov of http://tutum.space for reporting.\n\nSigned-off-by: Sven Marquardt <dev@mail.smarquardt.space>",
        "before_after_code_files": [
          "lib/sidekiq/api.rb||lib/sidekiq/api.rb",
          "lib/sidekiq/web/action.rb||lib/sidekiq/web/action.rb",
          "lib/sidekiq/web/application.rb||lib/sidekiq/web/application.rb",
          "test/test_api.rb||test/test_api.rb",
          "test/test_web.rb||test/test_web.rb"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "lib/sidekiq/api.rb||lib/sidekiq/api.rb",
            "lib/sidekiq/web/application.rb||lib/sidekiq/web/application.rb",
            "test/test_api.rb||test/test_api.rb",
            "test/test_web.rb||test/test_web.rb"
          ],
          "candidate": [
            "lib/sidekiq/api.rb||lib/sidekiq/api.rb",
            "lib/sidekiq/web/application.rb||lib/sidekiq/web/application.rb",
            "test/test_api.rb||test/test_api.rb",
            "test/test_web.rb||test/test_web.rb"
          ]
        }
      },
      "candidate_diff": {
        "lib/sidekiq/api.rb||lib/sidekiq/api.rb": [
          "File: lib/sidekiq/api.rb -> lib/sidekiq/api.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "165:     class History",
          "166:       def initialize(days_previous, start_date = nil)",
          "167:         @days_previous = days_previous",
          "168:         @start_date = start_date || Time.now.utc.to_date",
          "169:       end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "167:         #we only store five years of data in Redis",
          "168:         raise ArgumentError if days_previous < 1 || days_previous > (5 * 365)",
          "",
          "---------------"
        ],
        "lib/sidekiq/web/action.rb||lib/sidekiq/web/action.rb": [
          "File: lib/sidekiq/web/action.rb -> lib/sidekiq/web/action.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "15:     end",
          "17:     def halt(res)",
          "19:     end",
          "21:     def redirect(location)",
          "",
          "[Removed Lines]",
          "18:       throw :halt, res",
          "",
          "[Added Lines]",
          "18:       throw :halt, [res, {\"Content-Type\" => \"text/plain\"}, [res.to_s]]",
          "",
          "---------------"
        ],
        "lib/sidekiq/web/application.rb||lib/sidekiq/web/application.rb": [
          "File: lib/sidekiq/web/application.rb -> lib/sidekiq/web/application.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:     get \"/\" do",
          "47:       @redis_info = redis_info.select{ |k, v| REDIS_KEYS.include? k }",
          "49:       @processed_history = stats_history.processed",
          "50:       @failed_history = stats_history.failed",
          "",
          "[Removed Lines]",
          "48:       stats_history = Sidekiq::Stats::History.new((params['days'] || 30).to_i)",
          "",
          "[Added Lines]",
          "48:       days = (params[\"days\"] || 30).to_i",
          "49:       return halt(401) if days < 1 || days > 180",
          "51:       stats_history = Sidekiq::Stats::History.new(days)",
          "",
          "---------------"
        ],
        "test/test_api.rb||test/test_api.rb": [
          "File: test/test_api.rb -> test/test_api.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "156:         Time::DATE_FORMATS[:default] = @before",
          "157:       end",
          "159:       describe \"processed\" do",
          "160:         it 'retrieves hash of dates' do",
          "161:           Sidekiq.redis do |c|",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "159:       describe \"histoy\" do",
          "160:         it \"does not allow invalid input\" do",
          "161:           assert_raises(ArgumentError) { Sidekiq::Stats::History.new(-1) }",
          "162:           assert_raises(ArgumentError) { Sidekiq::Stats::History.new(0) }",
          "163:           assert_raises(ArgumentError) { Sidekiq::Stats::History.new(2000) }",
          "164:           assert Sidekiq::Stats::History.new(200)",
          "165:         end",
          "166:       end",
          "",
          "---------------"
        ],
        "test/test_web.rb||test/test_web.rb": [
          "File: test/test_web.rb -> test/test_web.rb",
          "--- Hunk 1 ---",
          "[Context before]",
          "664:       get '/'",
          "666:       assert_equal 200, last_response.status",
          "667:     end",
          "668:   end",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "667:       get '/?days=100000000'",
          "668:       assert_equal 401, last_response.status",
          "",
          "---------------"
        ]
      }
    }
  ]
}