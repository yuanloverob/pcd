{
  "cve_id": "CVE-2022-4065",
  "cve_desc": "A vulnerability was found in cbeust testng 7.5.0/7.6.0/7.6.1/7.7.0. It has been declared as critical. Affected by this vulnerability is the function testngXmlExistsInJar of the file testng-core/src/main/java/org/testng/JarFileUtils.java of the component XML File Parser. The manipulation leads to path traversal. The attack can be launched remotely. Upgrading to version 7.5.1 and 7.7.1 is able to address this issue. The patch is named 9150736cd2c123a6a3b60e6193630859f9f0422b. It is recommended to upgrade the affected component. The associated identifier of this vulnerability is VDB-214027.",
  "repo": "cbeust/testng",
  "patch_hash": "9150736cd2c123a6a3b60e6193630859f9f0422b",
  "patch_info": {
    "commit_hash": "9150736cd2c123a6a3b60e6193630859f9f0422b",
    "repo": "cbeust/testng",
    "commit_url": "https://github.com/cbeust/testng/commit/9150736cd2c123a6a3b60e6193630859f9f0422b",
    "files": [
      "testng-core/src/main/java/org/testng/JarFileUtils.java"
    ],
    "message": "Merge pull request #2806 from BulkSecurityGeneratorProjectV2/fix/JLL/zip-slip-vulnerability\n\n[SECURITY] Fix Zip Slip Vulnerability",
    "before_after_code_files": [
      "testng-core/src/main/java/org/testng/JarFileUtils.java||testng-core/src/main/java/org/testng/JarFileUtils.java"
    ]
  },
  "patch_diff": {
    "testng-core/src/main/java/org/testng/JarFileUtils.java||testng-core/src/main/java/org/testng/JarFileUtils.java": [
      "File: testng-core/src/main/java/org/testng/JarFileUtils.java -> testng-core/src/main/java/org/testng/JarFileUtils.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "76:         if (Parser.canParse(jeName.toLowerCase())) {",
      "77:           InputStream inputStream = jf.getInputStream(je);",
      "78:           File copyFile = new File(file, jeName);",
      "79:           copyFile.getParentFile().mkdirs();",
      "80:           Files.copy(inputStream, copyFile.toPath());",
      "81:           if (matchesXmlPathInJar(je)) {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "79:           if (!copyFile.toPath().normalize().startsWith(file.toPath().normalize())) {",
      "80:             throw new IOException(\"Bad zip entry\");",
      "81:           }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "47afa2c8a29e2cf925238af1ad7c76fba282793f",
      "candidate_info": {
        "commit_hash": "47afa2c8a29e2cf925238af1ad7c76fba282793f",
        "repo": "cbeust/testng",
        "commit_url": "https://github.com/cbeust/testng/commit/47afa2c8a29e2cf925238af1ad7c76fba282793f",
        "files": [
          "testng-core/src/main/java/org/testng/JarFileUtils.java"
        ],
        "message": "vuln-fix: Zip Slip Vulnerability\n\nThis fixes a Zip-Slip vulnerability.\n\nThis change does one of two things. This change either\n\n1. Inserts a guard to protect against Zip Slip.\nOR\n2. Replaces `dir.getCanonicalPath().startsWith(parent.getCanonicalPath())`, which is vulnerable to partial path traversal attacks, with the more secure `dir.getCanonicalFile().toPath().startsWith(parent.getCanonicalFile().toPath())`.\n\nFor number 2, consider `\"/usr/outnot\".startsWith(\"/usr/out\")`.\nThe check is bypassed although `/outnot` is not under the `/out` directory.\nIt's important to understand that the terminating slash may be removed when using various `String` representations of the `File` object.\nFor example, on Linux, `println(new File(\"/var\"))` will print `/var`, but `println(new File(\"/var\", \"/\")` will print `/var/`;\nhowever, `println(new File(\"/var\", \"/\").getCanonicalPath())` will print `/var`.\n\nWeakness: CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')\nSeverity: High\nCVSSS: 7.4\nDetection: CodeQL (https://codeql.github.com/codeql-query-help/java/java-zipslip/) & OpenRewrite (https://public.moderne.io/recipes/org.openrewrite.java.security.ZipSlip)\n\nReported-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\nSigned-off-by: Jonathan Leitschuh <Jonathan.Leitschuh@gmail.com>\n\nBug-tracker: https://github.com/JLLeitschuh/security-research/issues/16\n\n\nCo-authored-by: Moderne <team@moderne.io>",
        "before_after_code_files": [
          "testng-core/src/main/java/org/testng/JarFileUtils.java||testng-core/src/main/java/org/testng/JarFileUtils.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/testng-team/testng/pull/2806"
        ],
        "olp_code_files": {
          "patch": [
            "testng-core/src/main/java/org/testng/JarFileUtils.java||testng-core/src/main/java/org/testng/JarFileUtils.java"
          ],
          "candidate": [
            "testng-core/src/main/java/org/testng/JarFileUtils.java||testng-core/src/main/java/org/testng/JarFileUtils.java"
          ]
        }
      },
      "candidate_diff": {
        "testng-core/src/main/java/org/testng/JarFileUtils.java||testng-core/src/main/java/org/testng/JarFileUtils.java": [
          "File: testng-core/src/main/java/org/testng/JarFileUtils.java -> testng-core/src/main/java/org/testng/JarFileUtils.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:         if (Parser.canParse(jeName.toLowerCase())) {",
          "77:           InputStream inputStream = jf.getInputStream(je);",
          "78:           File copyFile = new File(file, jeName);",
          "79:           copyFile.getParentFile().mkdirs();",
          "80:           Files.copy(inputStream, copyFile.toPath());",
          "81:           if (matchesXmlPathInJar(je)) {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79:           if (!copyFile.toPath().normalize().startsWith(file.toPath().normalize())) {",
          "80:             throw new IOException(\"Bad zip entry\");",
          "81:           }",
          "",
          "---------------"
        ]
      }
    }
  ]
}