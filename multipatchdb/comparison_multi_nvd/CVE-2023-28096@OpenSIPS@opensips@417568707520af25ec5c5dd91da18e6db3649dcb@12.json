{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "a37fab2d5fd603bde4343b185e2b75149676be06",
      "candidate_info": {
        "commit_hash": "a37fab2d5fd603bde4343b185e2b75149676be06",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/a37fab2d5fd603bde4343b185e2b75149676be06",
        "files": [
          "cfg_pp.c"
        ],
        "message": "Cfg Parser: Allow whitespace before the \"include_file\" statement\n\nFixes #2892",
        "before_after_code_files": [
          "cfg_pp.c||cfg_pp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "cfg_pp.c||cfg_pp.c": [
          "File: cfg_pp.c -> cfg_pp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "169:  char *p = NULL, enclose = 0;",
          "170:  int len1, len2, fplen;",
          "172:  if (line_len > include_v1.len &&",
          "173:          !memcmp(line, include_v1.s, include_v1.len)) {",
          "174:   p = line + include_v1.len;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "172:  while (line_len > 0 && is_ws(*line)) {",
          "173:   line_len--;",
          "174:   line++;",
          "175:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6b6551ac7694e354ee19f90952e7452be410afe0",
      "candidate_info": {
        "commit_hash": "6b6551ac7694e354ee19f90952e7452be410afe0",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/6b6551ac7694e354ee19f90952e7452be410afe0",
        "files": [
          "receive.c"
        ],
        "message": "Fix global msg context leakage in error_route\n\nWhile commit b5bcf046 fixed an issue with missing contexts during\nerror_route, it was missed that the \"parse_error\" label does *not* free\nup the global context.\n\nThe effects of this bug were mostly hidden, affecting only opensips.cfg\nscripts which employ the \"error_route\", causing a slow PKG memory leak,\nproportional to the amount of bad SIP received.  Moreover, if these\nscripts also use async(), they may occassionally run into a quick\nabort() in t_resume_async(), due to a context being already set (BUG).\n\n(cherry picked from commit 43ee34bbbb48cfcfe02217b03ef72726c01cc83e)",
        "before_after_code_files": [
          "receive.c||receive.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "receive.c||receive.c": [
          "File: receive.c -> receive.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "99: int receive_msg(char* buf, unsigned int len, struct receive_info* rcv_info,",
          "100:   context_p existing_context, unsigned int msg_flags)",
          "101: {",
          "102:  static context_p ctx = NULL;",
          "103:  struct sip_msg* msg;",
          "104:  struct timeval start;",
          "105:  int rc, old_route_type;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "102:  #define reset_global_context() \\",
          "103:   do {\\",
          "104:    if (!current_processing_ctx) { \\",
          "105:     ctx = NULL; \\",
          "106:    } else { \\",
          "107:     context_destroy(CONTEXT_GLOBAL, ctx); \\",
          "108:     current_processing_ctx = NULL; \\",
          "109:    } \\",
          "110:   } while (0)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "153:     prepare_context( ctx, parse_error );",
          "154:    current_processing_ctx = ctx;",
          "155:    run_error_route(msg, 1);",
          "156:   }",
          "157:   goto parse_error;",
          "158:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "166:    reset_global_context();",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "275:  }",
          "277: end:",
          "287:  __stop_expire_timer( start, execmsgthreshold, \"msg processing\",",
          "288:   msg->buf, msg->len, 0, slow_msgs);",
          "289:  reset_longest_action_list(execmsgthreshold);",
          "",
          "[Removed Lines]",
          "281:  if (current_processing_ctx == NULL)",
          "282:   ctx = NULL;",
          "283:  else",
          "284:   context_destroy(CONTEXT_GLOBAL, ctx);",
          "286:  current_processing_ctx = NULL;",
          "",
          "[Added Lines]",
          "289:  reset_global_context();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "159ffbbf5c10138b1e8bc06e2b72c30510c0bac3",
      "candidate_info": {
        "commit_hash": "159ffbbf5c10138b1e8bc06e2b72c30510c0bac3",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/159ffbbf5c10138b1e8bc06e2b72c30510c0bac3",
        "files": [
          "modules/b2b_entities/client.c",
          "modules/b2b_entities/dlg.c",
          "modules/b2b_entities/dlg.h"
        ],
        "message": "b2b_entities: use the proxy from b2b_client_new() for all requests\n\nFixes #2759\n\n(cherry picked from commit ceb1d6a074383bca96df0e7a592719dda52bd60b)",
        "before_after_code_files": [
          "modules/b2b_entities/client.c||modules/b2b_entities/client.c",
          "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c",
          "modules/b2b_entities/dlg.h||modules/b2b_entities/dlg.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_entities/client.c||modules/b2b_entities/client.c": [
          "File: modules/b2b_entities/client.c -> modules/b2b_entities/client.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "115:  size = sizeof(b2b_dlg_t) + ci->to_uri.len + ci->from_uri.len",
          "117:   from_tag.len + ci->local_contact.len + B2B_MAX_KEY_SIZE +",
          "118:   B2BL_MAX_KEY_LEN + mod_name->len;",
          "",
          "[Removed Lines]",
          "116:   + ci->from_dname.len + ci->to_dname.len +",
          "",
          "[Added Lines]",
          "116:   + ci->from_dname.len + ci->to_dname.len + ci->dst_uri.len +",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "133:   CONT_COPY(dlg, dlg->to_dname, ci->to_dname);",
          "134:  if(ci->from_dname.s)",
          "135:   CONT_COPY(dlg, dlg->from_dname, ci->from_dname);",
          "136:  CONT_COPY(dlg, dlg->tag[CALLER_LEG], from_tag);",
          "137:  CONT_COPY(dlg, dlg->contact[CALLER_LEG], ci->local_contact);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "136:  if(ci->dst_uri.s)",
          "137:   CONT_COPY(dlg, dlg->proxy, ci->dst_uri);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "290:  td->loc_dname = dlg->from_dname;",
          "291:  td->rem_dname = dlg->to_dname;",
          "293:  if(leg)",
          "294:  {",
          "295:   if(leg->route_set.s && leg->route_set.len)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "295:  if(dlg->proxy.len)",
          "296:   td->obp = dlg->proxy;",
          "",
          "---------------"
        ],
        "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c": [
          "File: modules/b2b_entities/dlg.c -> modules/b2b_entities/dlg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "389:  b2b_dlg_t* new_dlg;",
          "390:  int size;",
          "393:   dlg->tag[0].len + dlg->tag[1].len+ dlg->route_set[0].len+ dlg->route_set[1].len+",
          "394:   dlg->contact[0].len+ dlg->contact[1].len+ dlg->ruri.len+ B2BL_MAX_KEY_LEN+",
          "395:   dlg->from_dname.len + dlg->to_dname.len + dlg->mod_name.len;",
          "",
          "[Removed Lines]",
          "392:  size = sizeof(b2b_dlg_t) + dlg->callid.len+ dlg->from_uri.len+ dlg->to_uri.len+",
          "",
          "[Added Lines]",
          "392:  size = sizeof(b2b_dlg_t) + dlg->callid.len+ dlg->from_uri.len+ dlg->to_uri.len+dlg->proxy.len+",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "406:  if(dlg->ruri.s)",
          "407:   CONT_COPY(new_dlg, new_dlg->ruri, dlg->ruri);",
          "408:  CONT_COPY(new_dlg, new_dlg->callid, dlg->callid);",
          "409:  CONT_COPY(new_dlg, new_dlg->from_uri, dlg->from_uri);",
          "410:  CONT_COPY(new_dlg, new_dlg->to_uri, dlg->to_uri);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "408:  if(dlg->proxy.s)",
          "409:   CONT_COPY(new_dlg, new_dlg->proxy, dlg->proxy);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "1386:   dlg.to_dname = init_dlg->to_dname;",
          "1387:   dlg.from_uri = init_dlg->from_uri;",
          "1388:   dlg.from_dname = init_dlg->from_dname;",
          "1389:  }",
          "1390:  else",
          "1391:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1391:   dlg.proxy = init_dlg->proxy;",
          "",
          "---------------"
        ],
        "modules/b2b_entities/dlg.h||modules/b2b_entities/dlg.h": [
          "File: modules/b2b_entities/dlg.h -> modules/b2b_entities/dlg.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "85:  unsigned int         id;",
          "86:  b2b_state_t          state;",
          "87:  str                  ruri;",
          "88:  str                  callid;",
          "89:  str                  from_uri;",
          "90:  str                  from_dname;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "88:  str                  proxy;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0b270ad04db8081bbb829f89fa515fa0c37698c7",
      "candidate_info": {
        "commit_hash": "0b270ad04db8081bbb829f89fa515fa0c37698c7",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/0b270ad04db8081bbb829f89fa515fa0c37698c7",
        "files": [
          "net/net_tcp.c",
          "net/proto_tcp/proto_tcp.c"
        ],
        "message": "Fix crash in bogus OOM handling while TCP async in enabled.\n\nThe async support assums the c->async exists all the time, so error if we cannot alloc the c->async struct while creating a new TCP conn",
        "before_after_code_files": [
          "net/net_tcp.c||net/net_tcp.c",
          "net/proto_tcp/proto_tcp.c||net/proto_tcp/proto_tcp.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "net/net_tcp.c||net/net_tcp.c": [
          "File: net/net_tcp.c -> net/net_tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "810:    c->async->allocated = protos[si->proto].net.async_chunks;",
          "811:    c->async->oldest = 0;",
          "812:    c->async->pending = 0;",
          "815:  }",
          "817:  tcp_connections_no++;",
          "",
          "[Removed Lines]",
          "813:   } else",
          "814:    LM_WARN(\"could not allocate async data for con!\\n\");",
          "",
          "[Added Lines]",
          "813:   } else {",
          "814:    LM_ERR(\"could not allocate async data for con!\\n\");",
          "815:    goto error;",
          "816:   }",
          "",
          "---------------"
        ],
        "net/proto_tcp/proto_tcp.c||net/proto_tcp/proto_tcp.c": [
          "File: net/proto_tcp/proto_tcp.c -> net/proto_tcp/proto_tcp.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "210:  }",
          "214:   pi->net.async_chunks= tcp_async_max_postponed_chunks;",
          "216:  return 0;",
          "217: }",
          "",
          "[Removed Lines]",
          "213:  if (tcp_async!=0)",
          "",
          "[Added Lines]",
          "213:  if (tcp_async!=0) {",
          "216:   if (tcp_async_max_postponed_chunks<=1)",
          "217:    tcp_async_max_postponed_chunks = 2;",
          "219:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7fea6bedae03786057c929fe82f83ceee8fa1156",
      "candidate_info": {
        "commit_hash": "7fea6bedae03786057c929fe82f83ceee8fa1156",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/7fea6bedae03786057c929fe82f83ceee8fa1156",
        "files": [
          "menuconfig/curses.c"
        ],
        "message": "Merge pull request #2821 from lemenkov/format_security\n\nFix -Werror=format-security\n\n(cherry picked from commit 47bfb3e3292a1acca6562427038b25a302d65ff1)",
        "before_after_code_files": [
          "menuconfig/curses.c||menuconfig/curses.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "menuconfig/curses.c||menuconfig/curses.c": [
          "File: menuconfig/curses.c -> menuconfig/curses.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "91:  attron(COLOR_PAIR(1));",
          "94:  print_notice(NOTICE_Y,NOTICE_X,0,\"Press h for navigation help.\");",
          "95:  attroff(COLOR_PAIR(1));",
          "",
          "[Removed Lines]",
          "92:  mvprintw(HIGH_NOTICE_Y,max_x/2-20,menu->parent?menu->parent->name:\"OpenSIPS Main Configuration Menu\");",
          "",
          "[Added Lines]",
          "92:  mvprintw(HIGH_NOTICE_Y,max_x/2-20,\"%s\",menu->parent?menu->parent->name:\"OpenSIPS Main Configuration Menu\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "207:  attron(COLOR_PAIR(1));",
          "209:  attroff(COLOR_PAIR(1));",
          "211:  if (should_scroll) {",
          "",
          "[Removed Lines]",
          "208:  mvprintw(HIGH_NOTICE_Y,max_x/2-20,menu->name);",
          "",
          "[Added Lines]",
          "208:  mvprintw(HIGH_NOTICE_Y,max_x/2-20,\"%s\",menu->name);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "249:  if (current->description) {",
          "250:   attron(COLOR_PAIR(1));",
          "252:   attroff(COLOR_PAIR(1));",
          "253:  }",
          "",
          "[Removed Lines]",
          "251:   print_notice(NOTICE_Y,NOTICE_X,0,current->description);",
          "",
          "[Added Lines]",
          "251:   print_notice(NOTICE_Y,NOTICE_X,0,\"%s\",current->description);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "341:  }",
          "343:  return 0;",
          "",
          "[Removed Lines]",
          "344: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}