{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "40290bc41058a4f12b737c6ad86f2c80c017c61e",
      "candidate_info": {
        "commit_hash": "40290bc41058a4f12b737c6ad86f2c80c017c61e",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/40290bc41058a4f12b737c6ad86f2c80c017c61e",
        "files": [
          "modules/mi_script/mi_script.c"
        ],
        "message": "mi_script: Fix error log on mi() with NULL output pvars\n\nProper handling for the 2nd parameter NULL case.  Fixes this error:\n\nJun  7 06:36:23 [61] ERROR:core:pv_set_value: bad parameters\n\n(cherry picked from commit bdc51cee33eb18c42abb37fe432e2c8c033384fa)",
        "before_after_code_files": [
          "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c": [
          "File: modules/mi_script/mi_script.c -> modules/mi_script/mi_script.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "407:   tmp = cJSON_GetObjectItem(item, JSONRPC_ERR_MSG_S);",
          "408:   if (!tmp)",
          "410:   else",
          "411:    r = tmp->valuestring;",
          "412:  } else if (res) {",
          "",
          "[Removed Lines]",
          "409:    r = \"no error message provideded\";",
          "",
          "[Added Lines]",
          "409:    r = \"no error message provided\";",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "428:   mi_response_t *resp, pv_spec_p r)",
          "429: {",
          "430:  int ret, release;",
          "432:  char *res = NULL;",
          "434:  ret = mi_script_handle_response(resp, (r?&res:NULL), &release);",
          "443:  }",
          "447:  if (release)",
          "448:   cJSON_PurgeString(res);",
          "449:  return ret;",
          "",
          "[Removed Lines]",
          "431:  pv_value_t val;",
          "435:  if (res) {",
          "436:   val.rs.s = res;",
          "437:   val.rs.len = strlen(res);",
          "438:   val.flags = PV_VAL_STR;",
          "439:  } else {",
          "440:   val.rs.s = NULL;",
          "441:   val.rs.len = 0;",
          "442:   val.flags = PV_VAL_NULL;",
          "445:  if (pv_set_value(msg, r, 0, &val) < 0)",
          "446:   ret = -3;",
          "",
          "[Added Lines]",
          "435:  if (r) {",
          "436:   pv_value_t val;",
          "438:   if (res) {",
          "439:    val.rs.s = res;",
          "440:    val.rs.len = strlen(res);",
          "441:    val.flags = PV_VAL_STR;",
          "442:   } else {",
          "443:    val.rs.s = NULL;",
          "444:    val.rs.len = 0;",
          "445:    val.flags = PV_VAL_NULL;",
          "446:   }",
          "448:   if (pv_set_value(msg, r, 0, &val) < 0)",
          "449:    ret = -3;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "e8df85a64a3b8095cd95c0b2d9254de605b61384",
      "candidate_info": {
        "commit_hash": "e8df85a64a3b8095cd95c0b2d9254de605b61384",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/e8df85a64a3b8095cd95c0b2d9254de605b61384",
        "files": [
          "modules/b2b_entities/dlg.c"
        ],
        "message": "b2b_entities: properly handle negative replies to reINVITEs\n\nDo not change the dialog state to terminated as a result of a sending a\nnegative reply to a reINVITE. This would have prevented the forwarding of\nfurther requests.\n\nThanks to David Escartin from Sonoc for reporting and testing the fix.",
        "before_after_code_files": [
          "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_entities/dlg.c||modules/b2b_entities/dlg.c": [
          "File: modules/b2b_entities/dlg.c -> modules/b2b_entities/dlg.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1632:   {",
          "1633:    if(code < 300)",
          "1634:     dlg->state = B2B_CONFIRMED;",
          "1636:     dlg->state= B2B_TERMINATED;",
          "1637:    UPDATE_DBFLAG(dlg);",
          "1638:   }",
          "",
          "[Removed Lines]",
          "1635:    else if (!dlg->uac_tran)",
          "",
          "[Added Lines]",
          "1635:    else if (!dlg->uac_tran && dlg->state != B2B_MODIFIED)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6b7559920bd650042ef23f61d554c3e40674ca99",
      "candidate_info": {
        "commit_hash": "6b7559920bd650042ef23f61d554c3e40674ca99",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/6b7559920bd650042ef23f61d554c3e40674ca99",
        "files": [
          "modules/db_virtual/db_virtual.c"
        ],
        "message": "[db_virtual] fixed the MI db_get output\n\nFix typos leading to bad json structure\nReported by @bctff\nCloses opensips-cli/#94\n\n(cherry picked from commit 96d8113e9da6f01dc1222364b80d975284d42336)",
        "before_after_code_files": [
          "modules/db_virtual/db_virtual.c||modules/db_virtual/db_virtual.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/db_virtual/db_virtual.c||modules/db_virtual/db_virtual.c": [
          "File: modules/db_virtual/db_virtual.c -> modules/db_virtual/db_virtual.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "543:             buf,strlen(buf)) < 0)",
          "544:             goto error;",
          "547:         if (!dbs_arr)",
          "548:             goto error;",
          "",
          "[Removed Lines]",
          "546:         dbs_arr = add_mi_array(resp_obj, MI_SSTR(\"DBS\"));",
          "",
          "[Added Lines]",
          "546:         dbs_arr = add_mi_array(set_item, MI_SSTR(\"DBS\"));",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "552:             if (!db_item)",
          "553:                 goto error;",
          "556:                 goto error;",
          "559:                 global->set_list[i].db_list[j].db_url.s,",
          "560:                 global->set_list[i].db_list[j].db_url.len) < 0)",
          "561:                 goto error;",
          "",
          "[Removed Lines]",
          "555:             if (add_mi_number(set_item, MI_SSTR(\"index\"), i) < 0)",
          "558:             if (add_mi_string(set_item, MI_SSTR(\"name\"),",
          "",
          "[Added Lines]",
          "555:             if (add_mi_number(db_item, MI_SSTR(\"index\"), j) < 0)",
          "558:             if (add_mi_string(db_item, MI_SSTR(\"name\"),",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "564:             may_use = (global->set_list[i].db_list[j].flags & MAY_USE) ? 1 : 0;",
          "565:             recon = (global->set_list[i].db_list[j].flags & RERECONNECT) ? 1 :0;",
          "568:                 goto error;",
          "570:                 goto error;",
          "572:                 goto error;",
          "573:         }",
          "574:     }",
          "",
          "[Removed Lines]",
          "567:             if (add_mi_number(set_item, MI_SSTR(\"can\"), can_use) < 0)",
          "569:             if (add_mi_number(set_item, MI_SSTR(\"may\"), may_use) < 0)",
          "571:             if (add_mi_number(set_item, MI_SSTR(\"r_rec\"), recon) < 0)",
          "",
          "[Added Lines]",
          "567:             if (add_mi_number(db_item, MI_SSTR(\"can\"), can_use) < 0)",
          "569:             if (add_mi_number(db_item, MI_SSTR(\"may\"), may_use) < 0)",
          "571:             if (add_mi_number(db_item, MI_SSTR(\"r_rec\"), recon) < 0)",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b9a1cb0c9103e46a11b26cc904c546acaa011032",
      "candidate_info": {
        "commit_hash": "b9a1cb0c9103e46a11b26cc904c546acaa011032",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/b9a1cb0c9103e46a11b26cc904c546acaa011032",
        "files": [
          "modules/rtp_relay/rtp_relay_ctx.c"
        ],
        "message": "rtp_relay: fix typo in test for ACK in late\n\n(cherry picked from commit 118dcebac717b6a3299407ac152719f38fda5bd4)",
        "before_after_code_files": [
          "modules/rtp_relay/rtp_relay_ctx.c||modules/rtp_relay/rtp_relay_ctx.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/rtp_relay/rtp_relay_ctx.c||modules/rtp_relay/rtp_relay_ctx.c": [
          "File: modules/rtp_relay/rtp_relay_ctx.c -> modules/rtp_relay/rtp_relay_ctx.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "747:  if (!ret)",
          "748:   return;",
          "749:  if (msg->REQ_METHOD == METHOD_ACK) {",
          "751:    return;",
          "752:   memset(&info, 0, sizeof info);",
          "753:   info.msg = msg;",
          "",
          "[Removed Lines]",
          "750:   if (ctx->main || !rtp_sess_late(ctx->main))",
          "",
          "[Added Lines]",
          "750:   if (!ctx->main || !rtp_sess_late(ctx->main))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0b38b5425e896c15313955489bd8a94d273e4990",
      "candidate_info": {
        "commit_hash": "0b38b5425e896c15313955489bd8a94d273e4990",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/0b38b5425e896c15313955489bd8a94d273e4990",
        "files": [
          "modules/rtpengine/rtpengine.c"
        ],
        "message": "rtpengine: fix API crash when no set/node is defined\n\n(cherry picked from commit 206b3a1d0f3cc899b6076657c9ccb89eeb3f8395)",
        "before_after_code_files": [
          "modules/rtpengine/rtpengine.c||modules/rtpengine/rtpengine.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/rtpengine/rtpengine.c||modules/rtpengine/rtpengine.c": [
          "File: modules/rtpengine/rtpengine.c -> modules/rtpengine/rtpengine.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3780:  if (!server->node.s) {",
          "3781:   node = NULL;",
          "3782:   rset = rtpengine_get_set(server->set);",
          "3783:   server->set = rset->id_set;",
          "3784:  } else {",
          "3785:   rset = select_rtpe_set(server->set);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3783:   if (!rset) {",
          "3784:    LM_ERR(\"no rtpengine set availble!\\n\");",
          "3785:    RTPE_STOP_READ();",
          "3786:    return -1;",
          "3787:   }",
          "",
          "---------------"
        ]
      }
    }
  ]
}