{
  "cve_id": "CVE-2021-41090",
  "cve_desc": "Grafana Agent is a telemetry collector for sending metrics, logs, and trace data to the opinionated Grafana observability stack. Prior to versions 0.20.1 and 0.21.2, inline secrets defined within a metrics instance config are exposed in plaintext over two endpoints: metrics instance configs defined in the base YAML file are exposed at `/-/config` and metrics instance configs defined for the scraping service are exposed at `/agent/api/v1/configs/:key`. Inline secrets will be exposed to anyone being able to reach these endpoints. If HTTPS with client authentication is not configured, these endpoints are accessible to unauthenticated users. Secrets found in these sections are used for delivering metrics to a Prometheus Remote Write system, authenticating against a system for discovering Prometheus targets, and authenticating against a system for collecting metrics. This does not apply for non-inlined secrets, such as `*_file` based secrets. This issue is patched in Grafana Agent versions 0.20.1 and 0.21.2. A few workarounds are available. Users who cannot upgrade should use non-inline secrets where possible. Users may also desire to restrict API access to Grafana Agent with some combination of restricting the network interfaces Grafana Agent listens on through `http_listen_address` in the `server` block, configuring Grafana Agent to use HTTPS with client authentication, and/or using firewall rules to restrict external access to Grafana Agent's API.",
  "repo": "grafana/agent",
  "patch_hash": "af7fb01e31fe2d389e5f1c36b399ddc46b412b21",
  "patch_info": {
    "commit_hash": "af7fb01e31fe2d389e5f1c36b399ddc46b412b21",
    "repo": "grafana/agent",
    "commit_url": "https://github.com/grafana/agent/commit/af7fb01e31fe2d389e5f1c36b399ddc46b412b21",
    "files": [
      "CHANGELOG.md",
      "docs/configuration/integrations/node-exporter-config.md",
      "docs/configuration/integrations/process-exporter-config.md",
      "docs/getting-started/_index.md",
      "docs/operator/custom-resource-quickstart.md",
      "docs/operator/getting-started.md",
      "docs/upgrade-guide/_index.md",
      "pkg/operator/defaults.go",
      "production/README.md",
      "production/grafanacloud-install.sh",
      "production/kubernetes/agent-bare.yaml",
      "production/kubernetes/agent-loki.yaml",
      "production/kubernetes/agent-traces.yaml",
      "production/kubernetes/build/lib/version.libsonnet",
      "production/kubernetes/install-bare.sh",
      "production/tanka/grafana-agent/v1/main.libsonnet",
      "production/tanka/grafana-agent/v2/internal/base.libsonnet",
      "production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
    ],
    "message": "announce patch releases for cve-2021-41090 (#1152)",
    "before_after_code_files": [
      "pkg/operator/defaults.go||pkg/operator/defaults.go",
      "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
      "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
      "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
      "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
      "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
      "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
    ]
  },
  "patch_diff": {
    "pkg/operator/defaults.go||pkg/operator/defaults.go": [
      "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "15:   \"v0.18.4\",",
      "16:   \"v0.19.0\",",
      "17:   \"v0.20.0\",",
      "18:   \"v0.21.0\",",
      "19:   \"v0.21.1\",",
      "22:  }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "18:   \"v0.20.1\",",
      "21:   \"v0.21.2\",",
      "",
      "---------------"
    ],
    "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
      "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
      "--- Hunk 1 ---",
      "[Context before]",
      "50: #",
      "51: # Global constants.",
      "52: #",
      "55: RELEASE_URL=\"https://github.com/grafana/agent/releases/download/v${RELEASE_VERSION}\"",
      "56: DEB_URL=\"${RELEASE_URL}/grafana-agent-${RELEASE_VERSION}-1.${ARCH}.deb\"",
      "",
      "[Removed Lines]",
      "53: RELEASE_VERSION=\"0.21.1\"",
      "",
      "[Added Lines]",
      "53: RELEASE_VERSION=\"0.21.2\"",
      "",
      "---------------"
    ],
    "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
      "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "1: 'grafana/agent:v0.21.1'",
      "",
      "[Added Lines]",
      "1: 'grafana/agent:v0.21.2'",
      "",
      "---------------"
    ],
    "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
      "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: check_installed curl",
      "26: check_installed envsubst",
      "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
      "30: NAMESPACE=${NAMESPACE:-default}",
      "",
      "[Removed Lines]",
      "28: MANIFEST_BRANCH=v0.21.1",
      "",
      "[Added Lines]",
      "28: MANIFEST_BRANCH=v0.21.2",
      "",
      "---------------"
    ],
    "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
      "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
      "--- Hunk 1 ---",
      "[Context before]",
      "15: (import './lib/traces.libsonnet') +",
      "16: {",
      "17:   _images:: {",
      "20:   },",
      "",
      "[Removed Lines]",
      "18:     agent: 'grafana/agent:v0.21.1',",
      "19:     agentctl: 'grafana/agentctl:v0.21.1',",
      "",
      "[Added Lines]",
      "18:     agent: 'grafana/agent:v0.21.2',",
      "19:     agentctl: 'grafana/agentctl:v0.21.2',",
      "",
      "---------------"
    ],
    "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet": [
      "File: production/tanka/grafana-agent/v2/internal/base.libsonnet -> production/tanka/grafana-agent/v2/internal/base.libsonnet",
      "--- Hunk 1 ---",
      "[Context before]",
      "10:   local this = self,",
      "12:   _images:: {",
      "15:   },",
      "16:   _config:: {",
      "17:     name: name,",
      "",
      "[Removed Lines]",
      "13:     agent: 'grafana/agent:v0.21.1',",
      "14:     agentctl: 'grafana/agentctl:v0.21.1',",
      "",
      "[Added Lines]",
      "13:     agent: 'grafana/agent:v0.21.2',",
      "14:     agentctl: 'grafana/agentctl:v0.21.2',",
      "",
      "---------------"
    ],
    "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet": [
      "File: production/tanka/grafana-agent/v2/internal/syncer.libsonnet -> production/tanka/grafana-agent/v2/internal/syncer.libsonnet",
      "--- Hunk 1 ---",
      "[Context before]",
      "14: ) {",
      "15:   local _config = {",
      "16:     api: error 'api must be set',",
      "18:     schedule: '*/5 * * * *',",
      "19:     configs: [],",
      "20:   } + config,",
      "",
      "[Removed Lines]",
      "17:     image: 'grafana/agentctl:v0.21.1',",
      "",
      "[Added Lines]",
      "17:     image: 'grafana/agentctl:v0.21.2',",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1216514bc685e2b385aef5f73195317cebc15182",
      "candidate_info": {
        "commit_hash": "1216514bc685e2b385aef5f73195317cebc15182",
        "repo": "grafana/agent",
        "commit_url": "https://github.com/grafana/agent/commit/1216514bc685e2b385aef5f73195317cebc15182",
        "files": [
          "docs/user/configuration/integrations/node-exporter-config.md",
          "docs/user/configuration/integrations/process-exporter-config.md",
          "docs/user/getting-started/_index.md",
          "docs/user/operator/custom-resource-quickstart.md",
          "docs/user/operator/getting-started.md",
          "pkg/operator/defaults.go",
          "production/README.md",
          "production/grafanacloud-install.sh",
          "production/kubernetes/agent-bare.yaml",
          "production/kubernetes/agent-loki.yaml",
          "production/kubernetes/agent-traces.yaml",
          "production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ],
        "message": "Final prep for v0.24.2",
        "before_after_code_files": [
          "pkg/operator/defaults.go||pkg/operator/defaults.go",
          "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
          "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ],
          "candidate": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ]
        }
      },
      "candidate_diff": {
        "pkg/operator/defaults.go||pkg/operator/defaults.go": [
          "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:   \"v0.23.0\",",
          "24:   \"v0.24.0\",",
          "25:   \"v0.24.1\",",
          "28:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "26:   \"v0.24.2\",",
          "",
          "---------------"
        ],
        "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
          "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: #",
          "51: # Global constants.",
          "52: #",
          "55: RELEASE_URL=\"https://github.com/grafana/agent/releases/download/v${RELEASE_VERSION}\"",
          "56: DEB_URL=\"${RELEASE_URL}/grafana-agent-${RELEASE_VERSION}-1.${ARCH}.deb\"",
          "",
          "[Removed Lines]",
          "53: RELEASE_VERSION=\"0.24.1\"",
          "",
          "[Added Lines]",
          "53: RELEASE_VERSION=\"0.24.2\"",
          "",
          "---------------"
        ],
        "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
          "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 'grafana/agent:v0.24.1'",
          "",
          "[Added Lines]",
          "1: 'grafana/agent:v0.24.2'",
          "",
          "---------------"
        ],
        "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
          "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: check_installed curl",
          "26: check_installed envsubst",
          "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
          "30: NAMESPACE=${NAMESPACE:-default}",
          "",
          "[Removed Lines]",
          "28: MANIFEST_BRANCH=v0.24.1",
          "",
          "[Added Lines]",
          "28: MANIFEST_BRANCH=v0.24.2",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
          "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: (import './lib/traces.libsonnet') +",
          "16: {",
          "17:   _images:: {",
          "20:   },",
          "",
          "[Removed Lines]",
          "18:     agent: 'grafana/agent:v0.24.1',",
          "19:     agentctl: 'grafana/agentctl:v0.24.1',",
          "",
          "[Added Lines]",
          "18:     agent: 'grafana/agent:v0.24.2',",
          "19:     agentctl: 'grafana/agentctl:v0.24.2',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/base.libsonnet -> production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   local this = self,",
          "13:   _images:: {",
          "16:   },",
          "17:   _config:: {",
          "18:     name: name,",
          "",
          "[Removed Lines]",
          "14:     agent: 'grafana/agent:v0.24.1',",
          "15:     agentctl: 'grafana/agentctl:v0.24.1',",
          "",
          "[Added Lines]",
          "14:     agent: 'grafana/agent:v0.24.2',",
          "15:     agentctl: 'grafana/agentctl:v0.24.2',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/syncer.libsonnet -> production/tanka/grafana-agent/v2/internal/syncer.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: ) {",
          "15:   local _config = {",
          "16:     api: error 'api must be set',",
          "18:     schedule: '*/5 * * * *',",
          "19:     configs: [],",
          "20:   } + config,",
          "",
          "[Removed Lines]",
          "17:     image: 'grafana/agentctl:v0.24.1',",
          "",
          "[Added Lines]",
          "17:     image: 'grafana/agentctl:v0.24.2',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a5ec5a09ffd743f7bd2e5bc9bc2bc743896d69e6",
      "candidate_info": {
        "commit_hash": "a5ec5a09ffd743f7bd2e5bc9bc2bc743896d69e6",
        "repo": "grafana/agent",
        "commit_url": "https://github.com/grafana/agent/commit/a5ec5a09ffd743f7bd2e5bc9bc2bc743896d69e6",
        "files": [
          "CHANGELOG.md",
          "docs/user/configuration/integrations/node-exporter-config.md",
          "docs/user/configuration/integrations/process-exporter-config.md",
          "docs/user/getting-started/_index.md",
          "docs/user/operator/custom-resource-quickstart.md",
          "docs/user/operator/getting-started.md",
          "pkg/operator/defaults.go",
          "production/README.md",
          "production/grafanacloud-install.sh",
          "production/kubernetes/agent-bare.yaml",
          "production/kubernetes/agent-loki.yaml",
          "production/kubernetes/agent-traces.yaml",
          "production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ],
        "message": "update main for v0.24.1 (#1616)",
        "before_after_code_files": [
          "pkg/operator/defaults.go||pkg/operator/defaults.go",
          "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
          "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ],
          "candidate": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ]
        }
      },
      "candidate_diff": {
        "pkg/operator/defaults.go||pkg/operator/defaults.go": [
          "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "22:   \"v0.22.0\",",
          "23:   \"v0.23.0\",",
          "24:   \"v0.24.0\",",
          "27:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25:   \"v0.24.1\",",
          "",
          "---------------"
        ],
        "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
          "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: #",
          "51: # Global constants.",
          "52: #",
          "55: RELEASE_URL=\"https://github.com/grafana/agent/releases/download/v${RELEASE_VERSION}\"",
          "56: DEB_URL=\"${RELEASE_URL}/grafana-agent-${RELEASE_VERSION}-1.${ARCH}.deb\"",
          "",
          "[Removed Lines]",
          "53: RELEASE_VERSION=\"0.24.0\"",
          "",
          "[Added Lines]",
          "53: RELEASE_VERSION=\"0.24.1\"",
          "",
          "---------------"
        ],
        "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
          "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 'grafana/agent:v0.24.0'",
          "",
          "[Added Lines]",
          "1: 'grafana/agent:v0.24.1'",
          "",
          "---------------"
        ],
        "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
          "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: check_installed curl",
          "26: check_installed envsubst",
          "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
          "30: NAMESPACE=${NAMESPACE:-default}",
          "",
          "[Removed Lines]",
          "28: MANIFEST_BRANCH=v0.24.0",
          "",
          "[Added Lines]",
          "28: MANIFEST_BRANCH=v0.24.1",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
          "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: (import './lib/traces.libsonnet') +",
          "16: {",
          "17:   _images:: {",
          "20:   },",
          "",
          "[Removed Lines]",
          "18:     agent: 'grafana/agent:v0.24.0',",
          "19:     agentctl: 'grafana/agentctl:v0.24.0',",
          "",
          "[Added Lines]",
          "18:     agent: 'grafana/agent:v0.24.1',",
          "19:     agentctl: 'grafana/agentctl:v0.24.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/base.libsonnet -> production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   local this = self,",
          "13:   _images:: {",
          "16:   },",
          "17:   _config:: {",
          "18:     name: name,",
          "",
          "[Removed Lines]",
          "14:     agent: 'grafana/agent:v0.24.0',",
          "15:     agentctl: 'grafana/agentctl:v0.24.0',",
          "",
          "[Added Lines]",
          "14:     agent: 'grafana/agent:v0.24.1',",
          "15:     agentctl: 'grafana/agentctl:v0.24.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/syncer.libsonnet -> production/tanka/grafana-agent/v2/internal/syncer.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: ) {",
          "15:   local _config = {",
          "16:     api: error 'api must be set',",
          "18:     schedule: '*/5 * * * *',",
          "19:     configs: [],",
          "20:   } + config,",
          "",
          "[Removed Lines]",
          "17:     image: 'grafana/agentctl:v0.24.0',",
          "",
          "[Added Lines]",
          "17:     image: 'grafana/agentctl:v0.24.1',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9fd7d9b325f78153b7b525ddda28d2a2d3e1ccb6",
      "candidate_info": {
        "commit_hash": "9fd7d9b325f78153b7b525ddda28d2a2d3e1ccb6",
        "repo": "grafana/agent",
        "commit_url": "https://github.com/grafana/agent/commit/9fd7d9b325f78153b7b525ddda28d2a2d3e1ccb6",
        "files": [
          "CHANGELOG.md",
          "Makefile",
          "cmd/agent-operator/Dockerfile",
          "cmd/agent-operator/Dockerfile.buildx",
          "cmd/agent/Dockerfile",
          "cmd/agent/Dockerfile.buildx",
          "cmd/agentctl/Dockerfile",
          "cmd/agentctl/Dockerfile.buildx",
          "docs/sources/configuration/integrations/node-exporter-config.md",
          "docs/sources/configuration/integrations/process-exporter-config.md",
          "docs/sources/operator/custom-resource-quickstart.md",
          "docs/sources/operator/getting-started.md",
          "docs/sources/set-up/install-agent-docker.md",
          "pkg/operator/defaults.go",
          "production/grafanacloud-install.sh",
          "production/kubernetes/agent-bare.yaml",
          "production/kubernetes/agent-loki.yaml",
          "production/kubernetes/agent-traces.yaml",
          "production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/build/templates/operator/main.jsonnet",
          "production/kubernetes/install-bare.sh",
          "production/operator/templates/agent-operator.yaml",
          "production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ],
        "message": "Release 0.27.1 (#2129)\n\n* update references and changelog for 0.27.1\n\n* Use ubuntu base image (#2078)\n\n* switch runtime images from debian to ubuntu\n\n* remove armv6 container image (#2091)",
        "before_after_code_files": [
          "cmd/agent-operator/Dockerfile.buildx||cmd/agent-operator/Dockerfile.buildx",
          "cmd/agent/Dockerfile.buildx||cmd/agent/Dockerfile.buildx",
          "cmd/agentctl/Dockerfile.buildx||cmd/agentctl/Dockerfile.buildx",
          "pkg/operator/defaults.go||pkg/operator/defaults.go",
          "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
          "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/build/templates/operator/main.jsonnet||production/kubernetes/build/templates/operator/main.jsonnet",
          "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ],
          "candidate": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ]
        }
      },
      "candidate_diff": {
        "cmd/agent-operator/Dockerfile.buildx||cmd/agent-operator/Dockerfile.buildx": [
          "File: cmd/agent-operator/Dockerfile.buildx -> cmd/agent-operator/Dockerfile.buildx",
          "--- Hunk 1 ---",
          "[Context before]",
          "20: RUN make clean && make IMAGE_TAG=${IMAGE_TAG} RELEASE_BUILD=${RELEASE_BUILD} BUILD_IN_CONTAINER=false DRONE=true agent-operator",
          "24: RUN apt-get update && \\",
          "25:   apt-get install -qy tzdata ca-certificates && \\",
          "",
          "[Removed Lines]",
          "22: FROM debian:bullseye-slim",
          "",
          "[Added Lines]",
          "22: FROM ubuntu:jammy",
          "",
          "---------------"
        ],
        "cmd/agent/Dockerfile.buildx||cmd/agent/Dockerfile.buildx": [
          "File: cmd/agent/Dockerfile.buildx -> cmd/agent/Dockerfile.buildx",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: RUN make clean && IMAGE_TAG=${IMAGE_TAG} RELEASE_BUILD=${RELEASE_BUILD} BUILD_IN_CONTAINER=false DRONE=true make agent",
          "32:   if [ `uname -m` = \"x86_64\" ]; then apt-get install -qy libbpfcc; fi && \\",
          "33:   rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*",
          "",
          "[Removed Lines]",
          "25: FROM debian:bullseye-slim",
          "27: # Backports repo required to get a libsystemd version 246 or newer which is required to handle journal +ZSTD compression",
          "28: # plus the libbpfcc library for running the eBPF integration.",
          "29: RUN echo \"deb http://deb.debian.org/debian bullseye-backports main\" >> /etc/apt/sources.list",
          "30: RUN apt-get update && apt-get install -t bullseye-backports -qy libsystemd-dev && \\",
          "31:   apt-get install -qy tzdata ca-certificates && \\",
          "",
          "[Added Lines]",
          "25: FROM ubuntu:jammy",
          "27: RUN apt-get update && apt-get install -qy libsystemd-dev tzdata ca-certificates && \\",
          "",
          "---------------"
        ],
        "cmd/agentctl/Dockerfile.buildx||cmd/agentctl/Dockerfile.buildx": [
          "File: cmd/agentctl/Dockerfile.buildx -> cmd/agentctl/Dockerfile.buildx",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: # Makefile.",
          "24: RUN make clean && IMAGE_TAG=${IMAGE_TAG} RELEASE_BUILD=${RELEASE_BUILD} BUILD_IN_CONTAINER=false DRONE=true make agentctl",
          "33:   if [ `uname -m` = \"x86_64\" ]; then apt-get install -qy libbpfcc; fi && \\",
          "34:   rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*",
          "36: COPY --from=build /src/agent/cmd/agentctl/agentctl /bin/agentctl",
          "38: ENTRYPOINT [\"/bin/agentctl\"]",
          "",
          "[Removed Lines]",
          "26: FROM debian:bullseye-slim",
          "28: # Backports repo required to get a libsystemd version 246 or newer which is required to handle journal +ZSTD compression",
          "29: # plus the libbpfcc library for running the eBPF integration.",
          "30: RUN echo \"deb http://deb.debian.org/debian bullseye-backports main\" >> /etc/apt/sources.list",
          "31: RUN apt-get update && apt-get install -t bullseye-backports -qy libsystemd-dev && \\",
          "32:   apt-get install -qy tzdata ca-certificates && \\",
          "",
          "[Added Lines]",
          "26: FROM ubuntu:jammy",
          "28: RUN apt-get update && apt-get install -qy libsystemd-dev tzdata ca-certificates && \\",
          "",
          "---------------"
        ],
        "pkg/operator/defaults.go||pkg/operator/defaults.go": [
          "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "29:   \"v0.26.0\",",
          "30:   \"v0.26.1\",",
          "31:   \"v0.27.0\",",
          "33:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "32:   \"v0.27.1\",",
          "",
          "---------------"
        ],
        "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
          "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: #",
          "51: # Global constants.",
          "52: #",
          "55: RELEASE_URL=\"https://github.com/grafana/agent/releases/download/v${RELEASE_VERSION}\"",
          "56: DEB_URL=\"${RELEASE_URL}/grafana-agent-${RELEASE_VERSION}-1.${ARCH}.deb\"",
          "",
          "[Removed Lines]",
          "53: RELEASE_VERSION=\"0.27.0\"",
          "",
          "[Added Lines]",
          "53: RELEASE_VERSION=\"0.27.1\"",
          "",
          "---------------"
        ],
        "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
          "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 'grafana/agent:v0.27.0'",
          "",
          "[Added Lines]",
          "1: 'grafana/agent:v0.27.1'",
          "",
          "---------------"
        ],
        "production/kubernetes/build/templates/operator/main.jsonnet||production/kubernetes/build/templates/operator/main.jsonnet": [
          "File: production/kubernetes/build/templates/operator/main.jsonnet -> production/kubernetes/build/templates/operator/main.jsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:   local this = self,",
          "25:   _images:: {",
          "28:     ksm: 'registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.5.0'",
          "29:   },",
          "",
          "[Removed Lines]",
          "26:     agent: 'grafana/agent:v0.27.0',",
          "27:     agent_operator: 'grafana/agent-operator:v0.27.0',",
          "",
          "[Added Lines]",
          "26:     agent: 'grafana/agent:v0.27.1',",
          "27:     agent_operator: 'grafana/agent-operator:v0.27.1',",
          "",
          "---------------"
        ],
        "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
          "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: check_installed curl",
          "26: check_installed envsubst",
          "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
          "30: NAMESPACE=${NAMESPACE:-default}",
          "",
          "[Removed Lines]",
          "28: MANIFEST_BRANCH=v0.27.0",
          "",
          "[Added Lines]",
          "28: MANIFEST_BRANCH=v0.27.1",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
          "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: (import './lib/traces.libsonnet') +",
          "16: {",
          "17:   _images:: {",
          "20:   },",
          "",
          "[Removed Lines]",
          "18:     agent: 'grafana/agent:v0.27.0',",
          "19:     agentctl: 'grafana/agentctl:v0.27.0',",
          "",
          "[Added Lines]",
          "18:     agent: 'grafana/agent:v0.27.1',",
          "19:     agentctl: 'grafana/agentctl:v0.27.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/base.libsonnet -> production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   local this = self,",
          "13:   _images:: {",
          "16:   },",
          "17:   _config:: {",
          "18:     name: name,",
          "",
          "[Removed Lines]",
          "14:     agent: 'grafana/agent:v0.27.0',",
          "15:     agentctl: 'grafana/agentctl:v0.27.0',",
          "",
          "[Added Lines]",
          "14:     agent: 'grafana/agent:v0.27.1',",
          "15:     agentctl: 'grafana/agentctl:v0.27.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/syncer.libsonnet -> production/tanka/grafana-agent/v2/internal/syncer.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: ) {",
          "15:   local _config = {",
          "16:     api: error 'api must be set',",
          "18:     schedule: '*/5 * * * *',",
          "19:     configs: [],",
          "20:   } + config,",
          "",
          "[Removed Lines]",
          "17:     image: 'grafana/agentctl:v0.27.0',",
          "",
          "[Added Lines]",
          "17:     image: 'grafana/agentctl:v0.27.1',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "87bb12c62762d770882652ad6ca6179dbcfb7d6e",
      "candidate_info": {
        "commit_hash": "87bb12c62762d770882652ad6ca6179dbcfb7d6e",
        "repo": "grafana/agent",
        "commit_url": "https://github.com/grafana/agent/commit/87bb12c62762d770882652ad6ca6179dbcfb7d6e",
        "files": [
          "CHANGELOG.md",
          "docs/sources/configuration/integrations/node-exporter-config.md",
          "docs/sources/configuration/integrations/process-exporter-config.md",
          "docs/sources/operator/custom-resource-quickstart.md",
          "docs/sources/operator/getting-started.md",
          "docs/sources/set-up/install-agent-docker.md",
          "pkg/operator/defaults.go",
          "production/grafanacloud-install.sh",
          "production/kubernetes/agent-bare.yaml",
          "production/kubernetes/agent-loki.yaml",
          "production/kubernetes/agent-traces.yaml",
          "production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/build/templates/operator/main.jsonnet",
          "production/kubernetes/install-bare.sh",
          "production/operator/templates/agent-operator.yaml",
          "production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ],
        "message": "final prep for 0.27.0 full release (#2102)",
        "before_after_code_files": [
          "pkg/operator/defaults.go||pkg/operator/defaults.go",
          "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
          "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/build/templates/operator/main.jsonnet||production/kubernetes/build/templates/operator/main.jsonnet",
          "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ],
          "candidate": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ]
        }
      },
      "candidate_diff": {
        "pkg/operator/defaults.go||pkg/operator/defaults.go": [
          "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:   \"v0.25.1\",",
          "29:   \"v0.26.0\",",
          "30:   \"v0.26.1\",",
          "34:  }",
          "",
          "[Removed Lines]",
          "31:   \"v0.27.0-rc.0\",",
          "32:   \"v0.27.0-rc.1\",",
          "",
          "[Added Lines]",
          "31:   \"v0.27.0\",",
          "",
          "---------------"
        ],
        "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
          "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: #",
          "51: # Global constants.",
          "52: #",
          "55: RELEASE_URL=\"https://github.com/grafana/agent/releases/download/v${RELEASE_VERSION}\"",
          "56: DEB_URL=\"${RELEASE_URL}/grafana-agent-${RELEASE_VERSION}-1.${ARCH}.deb\"",
          "",
          "[Removed Lines]",
          "53: RELEASE_VERSION=\"0.27.0-rc.1\"",
          "",
          "[Added Lines]",
          "53: RELEASE_VERSION=\"0.27.0\"",
          "",
          "---------------"
        ],
        "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
          "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 'grafana/agent:v0.27.0-rc.1'",
          "",
          "[Added Lines]",
          "1: 'grafana/agent:v0.27.0'",
          "",
          "---------------"
        ],
        "production/kubernetes/build/templates/operator/main.jsonnet||production/kubernetes/build/templates/operator/main.jsonnet": [
          "File: production/kubernetes/build/templates/operator/main.jsonnet -> production/kubernetes/build/templates/operator/main.jsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:   local this = self,",
          "25:   _images:: {",
          "28:     ksm: 'registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.5.0'",
          "29:   },",
          "",
          "[Removed Lines]",
          "26:     agent: 'grafana/agent:v0.27.0-rc.1',",
          "27:     agent_operator: 'grafana/agent-operator:v0.27.0-rc.1',",
          "",
          "[Added Lines]",
          "26:     agent: 'grafana/agent:v0.27.0',",
          "27:     agent_operator: 'grafana/agent-operator:v0.27.0',",
          "",
          "---------------"
        ],
        "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
          "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: check_installed curl",
          "26: check_installed envsubst",
          "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
          "30: NAMESPACE=${NAMESPACE:-default}",
          "",
          "[Removed Lines]",
          "28: MANIFEST_BRANCH=v0.27.0-rc.1",
          "",
          "[Added Lines]",
          "28: MANIFEST_BRANCH=v0.27.0",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
          "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: (import './lib/traces.libsonnet') +",
          "16: {",
          "17:   _images:: {",
          "20:   },",
          "",
          "[Removed Lines]",
          "18:     agent: 'grafana/agent:v0.27.0-rc.1',",
          "19:     agentctl: 'grafana/agentctl:v0.27.0-rc.1',",
          "",
          "[Added Lines]",
          "18:     agent: 'grafana/agent:v0.27.0',",
          "19:     agentctl: 'grafana/agentctl:v0.27.0',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/base.libsonnet -> production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   local this = self,",
          "13:   _images:: {",
          "16:   },",
          "17:   _config:: {",
          "18:     name: name,",
          "",
          "[Removed Lines]",
          "14:     agent: 'grafana/agent:v0.27.0-rc.1',",
          "15:     agentctl: 'grafana/agentctl:v0.27.0-rc.1',",
          "",
          "[Added Lines]",
          "14:     agent: 'grafana/agent:v0.27.0',",
          "15:     agentctl: 'grafana/agentctl:v0.27.0',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/syncer.libsonnet -> production/tanka/grafana-agent/v2/internal/syncer.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: ) {",
          "15:   local _config = {",
          "16:     api: error 'api must be set',",
          "18:     schedule: '*/5 * * * *',",
          "19:     configs: [],",
          "20:   } + config,",
          "",
          "[Removed Lines]",
          "17:     image: 'grafana/agentctl:v0.27.0-rc.1',",
          "",
          "[Added Lines]",
          "17:     image: 'grafana/agentctl:v0.27.0',",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2b88be375ed620fc496dd6e63faf846f4e66a82a",
      "candidate_info": {
        "commit_hash": "2b88be375ed620fc496dd6e63faf846f4e66a82a",
        "repo": "grafana/agent",
        "commit_url": "https://github.com/grafana/agent/commit/2b88be375ed620fc496dd6e63faf846f4e66a82a",
        "files": [
          "CHANGELOG.md",
          "Makefile",
          "docs/sources/configuration/integrations/node-exporter-config.md",
          "docs/sources/configuration/integrations/process-exporter-config.md",
          "docs/sources/configuration/server-config.md",
          "docs/sources/operator/custom-resource-quickstart.md",
          "docs/sources/operator/getting-started.md",
          "docs/sources/set-up/install-agent-docker.md",
          "pkg/operator/config/templates/component/metrics/service_monitor.libsonnet",
          "pkg/operator/defaults.go",
          "pkg/server/tls.go",
          "pkg/server/tls_certstore_windows.go",
          "pkg/server/tls_certstore_windows_test.go",
          "production/grafanacloud-install.sh",
          "production/kubernetes/agent-bare.yaml",
          "production/kubernetes/agent-loki.yaml",
          "production/kubernetes/agent-traces.yaml",
          "production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ],
        "message": "Get patch v0.26.1 ready  (#1931)\n\n* Update windows certificate store so that the client certificate is no longer needer in certificate store (#1905)\n\n* Update windows certificate store so that the client certificate is not needed in the store.\n\n* Update capitalization\n\n* Add note that tls certificate is breaking change\n\n* move note around\n\n* operator/config: fix label used when targetPort is set in ServiceMonitor (#1925)\n\n* Use opt-out flag for ebpf_exporter when building release artifacts (#1929)\n\nSigned-off-by: Paschalis Tsilias <paschalis.tsilias@grafana.com>\n\n* Update changelog\n\n* Update changelog\n\n* Update version numbers\n\n* remove duplicated change in changelog\n\nCo-authored-by: Robert Fratto <robertfratto@gmail.com>\nCo-authored-by: Paschalis Tsilias <tpaschalis@users.noreply.github.com>",
        "before_after_code_files": [
          "pkg/operator/config/templates/component/metrics/service_monitor.libsonnet||pkg/operator/config/templates/component/metrics/service_monitor.libsonnet",
          "pkg/operator/defaults.go||pkg/operator/defaults.go",
          "pkg/server/tls.go||pkg/server/tls.go",
          "pkg/server/tls_certstore_windows.go||pkg/server/tls_certstore_windows.go",
          "pkg/server/tls_certstore_windows_test.go||pkg/server/tls_certstore_windows_test.go",
          "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
          "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
          "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
          "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
          "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ],
          "candidate": [
            "pkg/operator/defaults.go||pkg/operator/defaults.go",
            "production/grafanacloud-install.sh||production/grafanacloud-install.sh",
            "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet",
            "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh",
            "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet",
            "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet",
            "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet"
          ]
        }
      },
      "candidate_diff": {
        "pkg/operator/config/templates/component/metrics/service_monitor.libsonnet||pkg/operator/config/templates/component/metrics/service_monitor.libsonnet": [
          "File: pkg/operator/config/templates/component/metrics/service_monitor.libsonnet -> pkg/operator/config/templates/component/metrics/service_monitor.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "131:         action: 'keep',",
          "132:       } else if endpoint.TargetPort != null then (",
          "133:         if endpoint.TargetPort.StrVal != '' then {",
          "135:           regex: endpoint.TargetPort.StrVal,",
          "136:           action: 'keep',",
          "137:         } else if endpoint.TargetPort.IntVal != 0 then {",
          "",
          "[Removed Lines]",
          "134:           source_labels: ['__meta_kubernetes_pod_container_name'],",
          "",
          "[Added Lines]",
          "134:           source_labels: ['__meta_kubernetes_pod_container_port_name'],",
          "",
          "---------------"
        ],
        "pkg/operator/defaults.go||pkg/operator/defaults.go": [
          "File: pkg/operator/defaults.go -> pkg/operator/defaults.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:   \"v0.25.0\",",
          "28:   \"v0.25.1\",",
          "29:   \"v0.26.0\",",
          "32:  }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "30:   \"v0.26.1\",",
          "",
          "---------------"
        ],
        "pkg/server/tls.go||pkg/server/tls.go": [
          "File: pkg/server/tls.go -> pkg/server/tls.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "38: type WindowsClientFilter struct {",
          "41:  IssuerCommonNames []string `yaml:\"issuer_common_names,omitempty\"`",
          "42:  SubjectRegEx      string   `yaml:\"subject_regex,omitempty\"`",
          "43:  TemplateID        string   `yaml:\"template_id,omitempty\"`",
          "",
          "[Removed Lines]",
          "39:  Store             string   `yaml:\"store,omitempty\"`",
          "40:  SystemStore       string   `yaml:\"system_store,omitempty\"`",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/server/tls_certstore_windows.go||pkg/server/tls_certstore_windows.go": [
          "File: pkg/server/tls_certstore_windows.go -> pkg/server/tls_certstore_windows.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"crypto/x509\"",
          "8:  \"encoding/asn1\"",
          "9:  \"fmt\"",
          "10:  \"regexp\"",
          "11:  \"sort\"",
          "12:  \"sync\"",
          "13:  \"time\"",
          "21: func (l *tlsListener) applyWindowsCertificateStore(c TLSConfig) error {",
          "",
          "[Removed Lines]",
          "15:  \"github.com/go-kit/log\"",
          "16:  \"github.com/go-kit/log/level\"",
          "18:  \"github.com/github/smimesign/certstore\"",
          "19: )",
          "",
          "[Added Lines]",
          "10:  \"github.com/github/smimesign/certstore\"",
          "11:  \"github.com/go-kit/log\"",
          "12:  \"github.com/go-kit/log/level\"",
          "17: )",
          "20: type winCertStoreHandler struct {",
          "21:  cfg          WindowsCertificateFilter",
          "22:  subjectRegEx *regexp.Regexp",
          "23:  log          log.Logger",
          "25:  winMut       sync.Mutex",
          "26:  serverCert   *x509.Certificate",
          "27:  serverSigner crypto.PrivateKey",
          "31:  serverIdentity certstore.Identity",
          "32:  clientAuth     tls.ClientAuthType",
          "34:  cancelContext context.Context",
          "35: }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:  if err != nil {",
          "59:   return err",
          "60:  }",
          "68:  config := &tls.Config{",
          "70:   VerifyPeerCertificate: cn.VerifyPeer,",
          "71:   GetCertificate: func(info *tls.ClientHelloInfo) (*tls.Certificate, error) {",
          "72:    cn.winMut.Lock()",
          "",
          "[Removed Lines]",
          "62:  var certPool *x509.CertPool",
          "63:  if cn.clientRootCA != nil {",
          "64:   certPool = x509.NewCertPool()",
          "65:   certPool.AddCert(cn.clientRootCA)",
          "66:  }",
          "69:   ClientCAs:             certPool,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "102:  return nil",
          "103: }",
          "124: }",
          "126: func (c *winCertStoreHandler) startUpdateTimer() {",
          "",
          "[Removed Lines]",
          "106: var asnTemplateOID = \"1.3.6.1.4.1.311.21.7\"",
          "108: type winCertStoreHandler struct {",
          "109:  cfg          WindowsCertificateFilter",
          "110:  subjectRegEx *regexp.Regexp",
          "111:  log          log.Logger",
          "113:  winMut       sync.Mutex",
          "114:  serverCert   *x509.Certificate",
          "115:  serverSigner crypto.PrivateKey",
          "119:  serverIdentity certstore.Identity",
          "120:  clientRootCA   *x509.Certificate",
          "121:  clientAuth     tls.ClientAuthType",
          "123:  cancelContext context.Context",
          "",
          "[Added Lines]",
          "115: func (c *winCertStoreHandler) VerifyPeer(_ [][]byte, verifiedChains [][]*x509.Certificate) error {",
          "116:  opts := x509.VerifyOptions{}",
          "117:  clientCert := verifiedChains[0][0]",
          "120:  issuerMatches := len(c.cfg.Client.IssuerCommonNames) == 0",
          "121:  for _, cn := range c.cfg.Client.IssuerCommonNames {",
          "122:   if cn == clientCert.Issuer.CommonName {",
          "123:    issuerMatches = true",
          "124:    break",
          "125:   }",
          "126:  }",
          "127:  if !issuerMatches {",
          "128:   return fmt.Errorf(\"unable to match client issuer\")",
          "129:  }",
          "132:  subjectMatches := true",
          "133:  if c.subjectRegEx != nil {",
          "134:   if !c.subjectRegEx.MatchString(clientCert.Subject.CommonName) {",
          "135:    subjectMatches = false",
          "136:   }",
          "137:  }",
          "138:  if !subjectMatches {",
          "139:   return fmt.Errorf(\"unable to match client subject\")",
          "140:  }",
          "143:  if c.cfg.Client.TemplateID != \"\" {",
          "144:   templateid := getTemplateID(clientCert)",
          "145:   if templateid != c.cfg.Client.TemplateID {",
          "146:    return fmt.Errorf(\"unable to match client template id\")",
          "147:   }",
          "148:  }",
          "151:  _, err := clientCert.Verify(opts)",
          "152:  return err",
          "154: }",
          "157: var asnTemplateOID = \"1.3.6.1.4.1.311.21.7\"",
          "159: type templateInformation struct {",
          "160:  Template     asn1.ObjectIdentifier",
          "161:  MajorVersion int",
          "162:  MinorVersion int",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "159:   c.serverIdentity.Close()",
          "160:  }",
          "161:  var serverIdentity certstore.Identity",
          "165:  defer func() {",
          "",
          "[Removed Lines]",
          "162:  var clientIdentity certstore.Identity",
          "163:  var clientCertificate *x509.Certificate",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "168:   if serverIdentity != nil && err != nil {",
          "169:    serverIdentity.Close()",
          "170:   }",
          "175:  }()",
          "176:  serverIdentity, err = c.findServerIdentity()",
          "177:  if err != nil {",
          "",
          "[Removed Lines]",
          "172:   if clientIdentity != nil {",
          "173:    clientIdentity.Close()",
          "174:   }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "186:   return fmt.Errorf(\"failed getting server signer %w\", err)",
          "188:  }",
          "203:  c.serverCert = sc",
          "204:  c.serverSigner = signer",
          "206:  c.serverIdentity = serverIdentity",
          "207:  return",
          "208: }",
          "",
          "[Removed Lines]",
          "189:  clientIdentity, err = c.findClientIdentity()",
          "190:  if err != nil {",
          "191:   return fmt.Errorf(\"failed getting client identity %w\", err)",
          "192:  }",
          "193:  if clientIdentity == nil && (c.clientAuth == tls.RequireAndVerifyClientCert || c.clientAuth == tls.RequestClientCert) {",
          "194:   return fmt.Errorf(\"client auth requires a certificate (RequireAndVerifyClientCert or RequestClientCert) and failed getting client identity\")",
          "195:  }",
          "196:  if clientIdentity != nil {",
          "197:   clientCertificate, err = clientIdentity.Certificate()",
          "198:   if err != nil {",
          "199:    return fmt.Errorf(\"failed getting client certificate %w\", err)",
          "200:   }",
          "201:  }",
          "205:  c.clientRootCA = clientCertificate",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "210: func (c *winCertStoreHandler) findServerIdentity() (certstore.Identity, error) {",
          "211:  return c.findCertificate(c.cfg.Server.SystemStore, c.cfg.Server.Store, c.cfg.Server.IssuerCommonNames, c.cfg.Server.TemplateID, nil, c.getStore)",
          "212: }",
          "222: func (c *winCertStoreHandler) getStore(systemStore string, storeName string) (certstore.Store, error) {",
          "223:  st, err := certstore.StringToStoreType(systemStore)",
          "224:  if err != nil {",
          "",
          "[Removed Lines]",
          "213: func (c *winCertStoreHandler) findClientIdentity() (certstore.Identity, error) {",
          "216:  if c.cfg.Client == nil {",
          "217:   return nil, nil",
          "218:  }",
          "219:  return c.findCertificate(c.cfg.Client.SystemStore, c.cfg.Client.Store, c.cfg.Client.IssuerCommonNames, c.cfg.Client.TemplateID, c.subjectRegEx, c.getStore)",
          "220: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "325:   if err != nil {",
          "326:    return nil, err",
          "327:   }",
          "339:   }",
          "340:  }",
          "341:  return returnIdentities, nil",
          "342: }",
          "348: }",
          "350: func (c *winCertStoreHandler) filterBySubjectRegularExpression(input []certstore.Identity, regEx *regexp.Regexp) ([]certstore.Identity, error) {",
          "",
          "[Removed Lines]",
          "328:   for _, ext := range cert.Extensions {",
          "329:    if ext.Id.String() == asnTemplateOID {",
          "330:     templateInfo := &templateInformation{}",
          "331:     _, err := asn1.Unmarshal(ext.Value, templateInfo)",
          "332:     if err != nil {",
          "333:      return nil, err",
          "334:     }",
          "335:     if templateInfo.Template.String() == id {",
          "336:      returnIdentities = append(returnIdentities, identity)",
          "337:     }",
          "338:    }",
          "344: type templateInformation struct {",
          "345:  Template     asn1.ObjectIdentifier",
          "346:  MajorVersion int",
          "347:  MinorVersion int",
          "",
          "[Added Lines]",
          "341:   templateid := getTemplateID(cert)",
          "342:   if templateid == id {",
          "343:    returnIdentities = append(returnIdentities, identity)",
          "349: func getTemplateID(cert *x509.Certificate) string {",
          "350:  for _, ext := range cert.Extensions {",
          "351:   if ext.Id.String() == asnTemplateOID {",
          "352:    templateInfo := &templateInformation{}",
          "353:    _, err := asn1.Unmarshal(ext.Value, templateInfo)",
          "354:    if err != nil {",
          "355:     return \"\"",
          "356:    }",
          "357:    return templateInfo.Template.String()",
          "358:   }",
          "359:  }",
          "360:  return \"\"",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "364:  }",
          "365:  return returnIdentities, nil",
          "366: }",
          "",
          "[Removed Lines]",
          "368: func (c *winCertStoreHandler) VerifyPeer(_ [][]byte, verifiedChains [][]*x509.Certificate) error {",
          "369:  opts := x509.VerifyOptions{}",
          "370:  clientCert := verifiedChains[0][0]",
          "371:  _, err := clientCert.Verify(opts)",
          "372:  return err",
          "374: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "pkg/server/tls_certstore_windows_test.go||pkg/server/tls_certstore_windows_test.go": [
          "File: pkg/server/tls_certstore_windows_test.go -> pkg/server/tls_certstore_windows_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "6:  \"crypto/x509/pkix\"",
          "7:  \"encoding/asn1\"",
          "8:  \"math/big\"",
          "10:  \"testing\"",
          "11:  \"time\"",
          "",
          "[Removed Lines]",
          "9:  \"regexp\"",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "154:  require.Equal(t, foundCert, shouldFind)",
          "155: }",
          "215: type fakeStore struct {",
          "216:  identities []fakeIdentity",
          "217:  closed     bool",
          "",
          "[Removed Lines]",
          "157: func TestRegularExpression(t *testing.T) {",
          "158:  c := &winCertStoreHandler{",
          "159:   cfg: WindowsCertificateFilter{",
          "160:    Client: &WindowsClientFilter{",
          "161:     Store:        \"My\",",
          "162:     SystemStore:  \"LocalMachine\",",
          "163:     TemplateID:   \"1.2.3\",",
          "164:     SubjectRegEx: \"[Villa]\",",
          "165:    },",
          "166:   },",
          "167:  }",
          "168:  var subjectRegEx *regexp.Regexp",
          "169:  subjectRegEx, err := regexp.Compile(c.cfg.Client.SubjectRegEx)",
          "170:  require.NoError(t, err)",
          "171:  c.subjectRegEx = subjectRegEx",
          "172:  serverSt := newFakeStore()",
          "173:  sc := makeCert(time.Now().Add(time.Duration(-5)*time.Minute), time.Now().Add(5*time.Minute), []int{1, 2, 3}, \"BobVilla\", \"\")",
          "174:  serverSt.identities = append(serverSt.identities, newFakeIdentity(sc))",
          "175:  findCert := func(systemStore, _ string) (certstore.Store, error) {",
          "176:   return serverSt, nil",
          "177:  }",
          "178:  identity, err := c.findCertificate(c.cfg.Client.SystemStore, c.cfg.Client.Store, c.cfg.Client.IssuerCommonNames, c.cfg.Client.TemplateID, c.subjectRegEx, findCert)",
          "180:  require.NoError(t, err)",
          "181:  foundCert, err := identity.Certificate()",
          "182:  require.NoError(t, err)",
          "183:  require.Equal(t, foundCert, sc)",
          "184: }",
          "186: func TestRegularExpression_Fail(t *testing.T) {",
          "187:  c := &winCertStoreHandler{",
          "188:   cfg: WindowsCertificateFilter{",
          "189:    Client: &WindowsClientFilter{",
          "190:     Store:        \"My\",",
          "191:     SystemStore:  \"LocalMachine\",",
          "192:     TemplateID:   \"1.2.3\",",
          "193:     SubjectRegEx: \"[Villa]\",",
          "194:    },",
          "195:   },",
          "196:  }",
          "197:  var subjectRegEx *regexp.Regexp",
          "198:  subjectRegEx, err := regexp.Compile(c.cfg.Client.SubjectRegEx)",
          "199:  require.NoError(t, err)",
          "200:  c.subjectRegEx = subjectRegEx",
          "201:  serverSt := newFakeStore()",
          "202:  sc := makeCert(time.Now().Add(time.Duration(-5)*time.Minute), time.Now().Add(5*time.Minute), []int{1, 2, 3}, \"BAD_EXAMPLE\", \"\")",
          "203:  serverSt.identities = append(serverSt.identities, newFakeIdentity(sc))",
          "205:  findCert := func(systemStore, _ string) (certstore.Store, error) {",
          "206:   return serverSt, nil",
          "207:  }",
          "208:  identity, err := c.findCertificate(c.cfg.Client.SystemStore, c.cfg.Client.Store, c.cfg.Client.IssuerCommonNames, c.cfg.Client.TemplateID, c.subjectRegEx, findCert)",
          "210:  require.Error(t, err)",
          "211:  require.Nil(t, identity)",
          "213: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "production/grafanacloud-install.sh||production/grafanacloud-install.sh": [
          "File: production/grafanacloud-install.sh -> production/grafanacloud-install.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "50: #",
          "51: # Global constants.",
          "52: #",
          "55: RELEASE_URL=\"https://github.com/grafana/agent/releases/download/v${RELEASE_VERSION}\"",
          "56: DEB_URL=\"${RELEASE_URL}/grafana-agent-${RELEASE_VERSION}-1.${ARCH}.deb\"",
          "",
          "[Removed Lines]",
          "53: RELEASE_VERSION=\"0.26.0\"",
          "",
          "[Added Lines]",
          "53: RELEASE_VERSION=\"0.26.1\"",
          "",
          "---------------"
        ],
        "production/kubernetes/build/lib/version.libsonnet||production/kubernetes/build/lib/version.libsonnet": [
          "File: production/kubernetes/build/lib/version.libsonnet -> production/kubernetes/build/lib/version.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "1: 'grafana/agent:v0.26.0'",
          "",
          "[Added Lines]",
          "1: 'grafana/agent:v0.26.1'",
          "",
          "---------------"
        ],
        "production/kubernetes/install-bare.sh||production/kubernetes/install-bare.sh": [
          "File: production/kubernetes/install-bare.sh -> production/kubernetes/install-bare.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "25: check_installed curl",
          "26: check_installed envsubst",
          "29: MANIFEST_URL=${MANIFEST_URL:-https://raw.githubusercontent.com/grafana/agent/${MANIFEST_BRANCH}/production/kubernetes/agent-bare.yaml}",
          "30: NAMESPACE=${NAMESPACE:-default}",
          "",
          "[Removed Lines]",
          "28: MANIFEST_BRANCH=v0.26.0",
          "",
          "[Added Lines]",
          "28: MANIFEST_BRANCH=v0.26.1",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v1/main.libsonnet||production/tanka/grafana-agent/v1/main.libsonnet": [
          "File: production/tanka/grafana-agent/v1/main.libsonnet -> production/tanka/grafana-agent/v1/main.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "15: (import './lib/traces.libsonnet') +",
          "16: {",
          "17:   _images:: {",
          "20:   },",
          "",
          "[Removed Lines]",
          "18:     agent: 'grafana/agent:v0.26.0',",
          "19:     agentctl: 'grafana/agentctl:v0.26.0',",
          "",
          "[Added Lines]",
          "18:     agent: 'grafana/agent:v0.26.1',",
          "19:     agentctl: 'grafana/agentctl:v0.26.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/base.libsonnet||production/tanka/grafana-agent/v2/internal/base.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/base.libsonnet -> production/tanka/grafana-agent/v2/internal/base.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "11:   local this = self,",
          "13:   _images:: {",
          "16:   },",
          "17:   _config:: {",
          "18:     name: name,",
          "",
          "[Removed Lines]",
          "14:     agent: 'grafana/agent:v0.26.0',",
          "15:     agentctl: 'grafana/agentctl:v0.26.0',",
          "",
          "[Added Lines]",
          "14:     agent: 'grafana/agent:v0.26.1',",
          "15:     agentctl: 'grafana/agentctl:v0.26.1',",
          "",
          "---------------"
        ],
        "production/tanka/grafana-agent/v2/internal/syncer.libsonnet||production/tanka/grafana-agent/v2/internal/syncer.libsonnet": [
          "File: production/tanka/grafana-agent/v2/internal/syncer.libsonnet -> production/tanka/grafana-agent/v2/internal/syncer.libsonnet",
          "--- Hunk 1 ---",
          "[Context before]",
          "14: ) {",
          "15:   local _config = {",
          "16:     api: error 'api must be set',",
          "18:     schedule: '*/5 * * * *',",
          "19:     configs: [],",
          "20:   } + config,",
          "",
          "[Removed Lines]",
          "17:     image: 'grafana/agentctl:v0.26.0',",
          "",
          "[Added Lines]",
          "17:     image: 'grafana/agentctl:v0.26.1',",
          "",
          "---------------"
        ]
      }
    }
  ]
}