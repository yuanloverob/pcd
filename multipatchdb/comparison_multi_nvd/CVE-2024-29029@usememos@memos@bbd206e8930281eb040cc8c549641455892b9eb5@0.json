{
  "cve_id": "CVE-2024-29029",
  "cve_desc": "memos is a privacy-first, lightweight note-taking service. In memos 0.13.2, an SSRF vulnerability exists at the /o/get/image that allows unauthenticated users to enumerate the internal network and retrieve images. The response from the image request is then copied into the response of the current server request, causing a reflected XSS vulnerability. Version 0.22.0 of memos removes the vulnerable file.",
  "repo": "usememos/memos",
  "patch_hash": "bbd206e8930281eb040cc8c549641455892b9eb5",
  "patch_info": {
    "commit_hash": "bbd206e8930281eb040cc8c549641455892b9eb5",
    "repo": "usememos/memos",
    "commit_url": "https://github.com/usememos/memos/commit/bbd206e8930281eb040cc8c549641455892b9eb5",
    "files": [
      "internal/jobs/presign_link.go",
      "server/integration/telegram.go",
      "server/route/api/v1/auth.go",
      "server/route/api/v1/common.go",
      "server/route/api/v1/docs.go",
      "server/route/api/v1/http_getter.go",
      "server/route/api/v1/jwt.go",
      "server/route/api/v1/memo.go",
      "server/route/api/v1/memo_organizer.go",
      "server/route/api/v1/memo_relation.go",
      "server/route/api/v1/resource.go",
      "server/route/api/v1/storage.go",
      "server/route/api/v1/swagger.md",
      "server/route/api/v1/swagger.yaml",
      "server/route/api/v1/system.go",
      "server/route/api/v1/system_setting.go",
      "server/route/api/v1/tag.go",
      "server/route/api/v1/tag_test.go",
      "server/route/api/v1/user.go",
      "server/route/api/v1/v1.go",
      "server/route/api/v2/storage_service.go",
      "server/server.go"
    ],
    "message": "chore: retire legacy api",
    "before_after_code_files": [
      "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
      "server/integration/telegram.go||server/integration/telegram.go",
      "server/route/api/v1/auth.go||server/route/api/v1/auth.go",
      "server/route/api/v1/common.go||server/route/api/v1/common.go",
      "server/route/api/v1/docs.go||server/route/api/v1/docs.go",
      "server/route/api/v1/http_getter.go||server/route/api/v1/http_getter.go",
      "server/route/api/v1/jwt.go||server/route/api/v1/jwt.go",
      "server/route/api/v1/memo.go||server/route/api/v1/memo.go",
      "server/route/api/v1/memo_organizer.go||server/route/api/v1/memo_organizer.go",
      "server/route/api/v1/memo_relation.go||server/route/api/v1/memo_relation.go",
      "server/route/api/v1/resource.go||server/route/api/v1/resource.go",
      "server/route/api/v1/storage.go||server/route/api/v1/storage.go",
      "server/route/api/v1/system.go||server/route/api/v1/system.go",
      "server/route/api/v1/system_setting.go||server/route/api/v1/system_setting.go",
      "server/route/api/v1/tag.go||server/route/api/v1/tag.go",
      "server/route/api/v1/tag_test.go||server/route/api/v1/tag_test.go",
      "server/route/api/v1/user.go||server/route/api/v1/user.go",
      "server/route/api/v1/v1.go||server/route/api/v1/v1.go",
      "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go",
      "server/server.go||server/server.go"
    ]
  },
  "patch_diff": {
    "internal/jobs/presign_link.go||internal/jobs/presign_link.go": [
      "File: internal/jobs/presign_link.go -> internal/jobs/presign_link.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "3: import (",
      "4:  \"context\"",
      "6:  \"log/slog\"",
      "7:  \"strings\"",
      "8:  \"time\"",
      "",
      "[Removed Lines]",
      "5:  \"encoding/json\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "10:  \"github.com/pkg/errors\"",
      "12:  \"github.com/usememos/memos/plugin/storage/s3\"",
      "14:  \"github.com/usememos/memos/store\"",
      "15: )",
      "",
      "[Removed Lines]",
      "13:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
      "",
      "[Added Lines]",
      "12:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
      "13:  storepb \"github.com/usememos/memos/proto/gen/store\"",
      "14:  apiv2 \"github.com/usememos/memos/server/route/api/v2\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "97: func findObjectStorage(ctx context.Context, dataStore *store.Store) (*s3.Client, error) {",
      "99:  if err != nil {",
      "101:  }",
      "109:  }",
      "111:  if err != nil {",
      "113:  }",
      "115:  if storage == nil {",
      "117:  }",
      "124:   return nil, nil",
      "125:  }",
      "128:  return s3.NewClient(ctx, &s3.Config{",
      "129:   AccessKey: s3Config.AccessKey,",
      "130:   SecretKey: s3Config.SecretKey,",
      "131:   EndPoint:  s3Config.EndPoint,",
      "132:   Region:    s3Config.Region,",
      "133:   Bucket:    s3Config.Bucket,",
      "136:   PreSign:   s3Config.PreSign,",
      "137:  })",
      "138: }",
      "",
      "[Removed Lines]",
      "98:  systemSettingStorageServiceID, err := dataStore.GetWorkspaceSetting(ctx, &store.FindWorkspaceSetting{Name: apiv1.SystemSettingStorageServiceIDName.String()})",
      "100:   return nil, errors.Wrap(err, \"Failed to find SystemSettingStorageServiceIDName\")",
      "103:  storageServiceID := apiv1.DefaultStorage",
      "104:  if systemSettingStorageServiceID != nil {",
      "105:   err = json.Unmarshal([]byte(systemSettingStorageServiceID.Value), &storageServiceID)",
      "106:   if err != nil {",
      "107:    return nil, errors.Wrap(err, \"Failed to unmarshal storage service id\")",
      "108:   }",
      "110:  storage, err := dataStore.GetStorage(ctx, &store.FindStorage{ID: &storageServiceID})",
      "112:   return nil, errors.Wrap(err, \"Failed to find StorageServiceID\")",
      "116:   return nil, nil // storage not configured - not an error, just return empty ref",
      "118:  storageMessage, err := apiv1.ConvertStorageFromStore(storage)",
      "120:  if err != nil {",
      "121:   return nil, errors.Wrap(err, \"Failed to ConvertStorageFromStore\")",
      "122:  }",
      "123:  if storageMessage.Type != apiv1.StorageS3 {",
      "127:  s3Config := storageMessage.Config.S3Config",
      "134:   URLPrefix: s3Config.URLPrefix,",
      "135:   URLSuffix: s3Config.URLSuffix,",
      "",
      "[Added Lines]",
      "99:  workspaceStorageSetting, err := dataStore.GetWorkspaceStorageSetting(ctx)",
      "101:   return nil, errors.Wrap(err, \"Failed to find workspaceStorageSetting\")",
      "103:  if workspaceStorageSetting.StorageType != storepb.WorkspaceStorageSetting_STORAGE_TYPE_EXTERNAL || workspaceStorageSetting.ActivedExternalStorageId == nil {",
      "104:   return nil, nil",
      "106:  storage, err := dataStore.GetStorageV1(ctx, &store.FindStorage{ID: workspaceStorageSetting.ActivedExternalStorageId})",
      "108:   return nil, errors.Wrap(err, \"Failed to find storage\")",
      "111:   return nil, nil",
      "114:  storageMessage := apiv2.ConvertStorageFromStore(storage)",
      "115:  if storageMessage.Type != apiv2pb.Storage_S3 {",
      "119:  s3Config := storageMessage.Config.GetS3Config()",
      "126:   URLPrefix: s3Config.UrlPrefix,",
      "127:   URLSuffix: s3Config.UrlSuffix,",
      "",
      "---------------"
    ],
    "server/integration/telegram.go||server/integration/telegram.go": [
      "File: server/integration/telegram.go -> server/integration/telegram.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "1: package integration",
      "3: import (",
      "5:  \"context\"",
      "6:  \"fmt\"",
      "7:  \"path/filepath\"",
      "",
      "[Removed Lines]",
      "4:  \"bytes\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "19:  \"github.com/usememos/memos/plugin/telegram\"",
      "20:  \"github.com/usememos/memos/plugin/webhook\"",
      "21:  storepb \"github.com/usememos/memos/proto/gen/store\"",
      "23:  apiv2 \"github.com/usememos/memos/server/route/api/v2\"",
      "24:  \"github.com/usememos/memos/store\"",
      "25: )",
      "",
      "[Removed Lines]",
      "22:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "126:    Type:      attachment.GetMimeType(),",
      "127:    Size:      attachment.FileSize,",
      "128:    MemoID:    &memoMessage.ID,",
      "129:   }",
      "132:   if err != nil {",
      "133:    _, err := bot.EditMessage(ctx, message.Chat.ID, reply.MessageID, fmt.Sprintf(\"Failed to SaveResourceBlob: %s\", err), nil)",
      "134:    return err",
      "",
      "[Removed Lines]",
      "131:   err := apiv1.SaveResourceBlob(ctx, t.store, &create, bytes.NewReader(attachment.Data))",
      "",
      "[Added Lines]",
      "127:    Blob:      attachment.Data,",
      "130:   err := apiv2.SaveResourceBlob(ctx, t.store, &create)",
      "",
      "---------------"
    ],
    "server/route/api/v1/auth.go||server/route/api/v1/auth.go": [
      "File: server/route/api/v1/auth.go -> server/route/api/v1/auth.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/common.go||server/route/api/v1/common.go": [
      "File: server/route/api/v1/common.go -> server/route/api/v1/common.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/docs.go||server/route/api/v1/docs.go": [
      "File: server/route/api/v1/docs.go -> server/route/api/v1/docs.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/http_getter.go||server/route/api/v1/http_getter.go": [
      "File: server/route/api/v1/http_getter.go -> server/route/api/v1/http_getter.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/jwt.go||server/route/api/v1/jwt.go": [
      "File: server/route/api/v1/jwt.go -> server/route/api/v1/jwt.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/memo.go||server/route/api/v1/memo.go": [
      "File: server/route/api/v1/memo.go -> server/route/api/v1/memo.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/memo_organizer.go||server/route/api/v1/memo_organizer.go": [
      "File: server/route/api/v1/memo_organizer.go -> server/route/api/v1/memo_organizer.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/memo_relation.go||server/route/api/v1/memo_relation.go": [
      "File: server/route/api/v1/memo_relation.go -> server/route/api/v1/memo_relation.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/resource.go||server/route/api/v1/resource.go": [
      "File: server/route/api/v1/resource.go -> server/route/api/v1/resource.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/storage.go||server/route/api/v1/storage.go": [
      "File: server/route/api/v1/storage.go -> server/route/api/v1/storage.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/system.go||server/route/api/v1/system.go": [
      "File: server/route/api/v1/system.go -> server/route/api/v1/system.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/system_setting.go||server/route/api/v1/system_setting.go": [
      "File: server/route/api/v1/system_setting.go -> server/route/api/v1/system_setting.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/tag.go||server/route/api/v1/tag.go": [
      "File: server/route/api/v1/tag.go -> server/route/api/v1/tag.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/tag_test.go||server/route/api/v1/tag_test.go": [
      "File: server/route/api/v1/tag_test.go -> server/route/api/v1/tag_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/user.go||server/route/api/v1/user.go": [
      "File: server/route/api/v1/user.go -> server/route/api/v1/user.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v1/v1.go||server/route/api/v1/v1.go": [
      "File: server/route/api/v1/v1.go -> server/route/api/v1/v1.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "[No context available]",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go": [
      "File: server/route/api/v2/storage_service.go -> server/route/api/v2/storage_service.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "25:   return nil, status.Errorf(codes.Internal, \"failed to create storage, error: %+v\", err)",
      "26:  }",
      "27:  return &apiv2pb.CreateStorageResponse{",
      "29:  }, nil",
      "30: }",
      "",
      "[Removed Lines]",
      "28:   Storage: convertStorageFromStore(storage),",
      "",
      "[Added Lines]",
      "28:   Storage: ConvertStorageFromStore(storage),",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "39:   Storages: []*apiv2pb.Storage{},",
      "40:  }",
      "41:  for _, storage := range storages {",
      "43:  }",
      "44:  return response, nil",
      "45: }",
      "",
      "[Removed Lines]",
      "42:   response.Storages = append(response.Storages, convertStorageFromStore(storage))",
      "",
      "[Added Lines]",
      "42:   response.Storages = append(response.Storages, ConvertStorageFromStore(storage))",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "55:   return nil, status.Errorf(codes.NotFound, \"storage not found\")",
      "56:  }",
      "57:  return &apiv2pb.GetStorageResponse{",
      "59:  }, nil",
      "60: }",
      "",
      "[Removed Lines]",
      "58:   Storage: convertStorageFromStore(storage),",
      "",
      "[Added Lines]",
      "58:   Storage: ConvertStorageFromStore(storage),",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "82:   return nil, status.Errorf(codes.Internal, \"failed to update storage, error: %+v\", err)",
      "83:  }",
      "84:  return &apiv2pb.UpdateStorageResponse{",
      "86:  }, nil",
      "87: }",
      "",
      "[Removed Lines]",
      "85:   Storage: convertStorageFromStore(storage),",
      "",
      "[Added Lines]",
      "85:   Storage: ConvertStorageFromStore(storage),",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "96:  return &apiv2pb.DeleteStorageResponse{}, nil",
      "97: }",
      "100:  temp := &apiv2pb.Storage{",
      "101:   Id:    storage.Id,",
      "102:   Title: storage.Name,",
      "",
      "[Removed Lines]",
      "99: func convertStorageFromStore(storage *storepb.Storage) *apiv2pb.Storage {",
      "",
      "[Added Lines]",
      "99: func ConvertStorageFromStore(storage *storepb.Storage) *apiv2pb.Storage {",
      "",
      "---------------"
    ],
    "server/server.go||server/server.go": [
      "File: server/server.go -> server/server.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "15:  storepb \"github.com/usememos/memos/proto/gen/store\"",
      "16:  \"github.com/usememos/memos/server/integration\"",
      "17:  \"github.com/usememos/memos/server/profile\"",
      "19:  apiv2 \"github.com/usememos/memos/server/route/api/v2\"",
      "20:  \"github.com/usememos/memos/server/route/frontend\"",
      "21:  versionchecker \"github.com/usememos/memos/server/service/version_checker\"",
      "",
      "[Removed Lines]",
      "18:  apiv1 \"github.com/usememos/memos/server/route/api/v1\"",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "75:   frontendService.Serve(ctx, e)",
      "76:  }",
      "83:  apiV2Service := apiv2.NewAPIV2Service(s.Secret, profile, store, s.Profile.Port+1)",
      "85:  if err := apiV2Service.RegisterGateway(ctx, e); err != nil {",
      "",
      "[Removed Lines]",
      "79:  rootGroup := e.Group(\"\")",
      "80:  apiV1Service := apiv1.NewAPIV1Service(s.Secret, profile, store, s.telegramBot)",
      "81:  apiV1Service.Register(rootGroup)",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "14d4cfd5a4870766ac6d2ec21dfc651118f679c2",
      "candidate_info": {
        "commit_hash": "14d4cfd5a4870766ac6d2ec21dfc651118f679c2",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/14d4cfd5a4870766ac6d2ec21dfc651118f679c2",
        "files": [
          "internal/jobs/presign_link.go",
          "server/route/api/v2/auth_service.go",
          "server/route/api/v2/idp_service.go",
          "server/route/api/v2/resource_service.go",
          "server/route/api/v2/storage_service.go",
          "server/route/api/v2/workspace_setting_service.go",
          "server/server.go",
          "store/cache.go",
          "store/idp.go",
          "store/migrator.go",
          "store/storage.go",
          "store/store.go",
          "store/user_setting.go",
          "store/workspace_setting.go",
          "test/store/idp_test.go",
          "test/store/storage_test.go",
          "test/store/workspace_setting_test.go"
        ],
        "message": "chore: tweak store methods name",
        "before_after_code_files": [
          "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
          "server/route/api/v2/auth_service.go||server/route/api/v2/auth_service.go",
          "server/route/api/v2/idp_service.go||server/route/api/v2/idp_service.go",
          "server/route/api/v2/resource_service.go||server/route/api/v2/resource_service.go",
          "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go",
          "server/route/api/v2/workspace_setting_service.go||server/route/api/v2/workspace_setting_service.go",
          "server/server.go||server/server.go",
          "store/cache.go||store/cache.go",
          "store/idp.go||store/idp.go",
          "store/migrator.go||store/migrator.go",
          "store/storage.go||store/storage.go",
          "store/store.go||store/store.go",
          "store/user_setting.go||store/user_setting.go",
          "store/workspace_setting.go||store/workspace_setting.go",
          "test/store/idp_test.go||test/store/idp_test.go",
          "test/store/storage_test.go||test/store/storage_test.go",
          "test/store/workspace_setting_test.go||test/store/workspace_setting_test.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
            "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go",
            "server/server.go||server/server.go"
          ],
          "candidate": [
            "internal/jobs/presign_link.go||internal/jobs/presign_link.go",
            "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go",
            "server/server.go||server/server.go"
          ]
        }
      },
      "candidate_diff": {
        "internal/jobs/presign_link.go||internal/jobs/presign_link.go": [
          "File: internal/jobs/presign_link.go -> internal/jobs/presign_link.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "103:  if workspaceStorageSetting.StorageType != storepb.WorkspaceStorageSetting_STORAGE_TYPE_EXTERNAL || workspaceStorageSetting.ActivedExternalStorageId == nil {",
          "104:   return nil, nil",
          "105:  }",
          "107:  if err != nil {",
          "108:   return nil, errors.Wrap(err, \"Failed to find storage\")",
          "109:  }",
          "",
          "[Removed Lines]",
          "106:  storage, err := dataStore.GetStorageV1(ctx, &store.FindStorage{ID: workspaceStorageSetting.ActivedExternalStorageId})",
          "",
          "[Added Lines]",
          "106:  storage, err := dataStore.GetStorage(ctx, &store.FindStorage{ID: workspaceStorageSetting.ActivedExternalStorageId})",
          "",
          "---------------"
        ],
        "server/route/api/v2/auth_service.go||server/route/api/v2/auth_service.go": [
          "File: server/route/api/v2/auth_service.go -> server/route/api/v2/auth_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "72: }",
          "74: func (s *APIV2Service) SignInWithSSO(ctx context.Context, request *apiv2pb.SignInWithSSORequest) (*apiv2pb.SignInWithSSOResponse, error) {",
          "76:   ID: &request.IdpId,",
          "77:  })",
          "78:  if err != nil {",
          "",
          "[Removed Lines]",
          "75:  identityProvider, err := s.Store.GetIdentityProviderV1(ctx, &store.FindIdentityProvider{",
          "",
          "[Added Lines]",
          "75:  identityProvider, err := s.Store.GetIdentityProvider(ctx, &store.FindIdentityProvider{",
          "",
          "---------------"
        ],
        "server/route/api/v2/idp_service.go||server/route/api/v2/idp_service.go": [
          "File: server/route/api/v2/idp_service.go -> server/route/api/v2/idp_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "21:   return nil, status.Errorf(codes.PermissionDenied, \"permission denied\")",
          "22:  }",
          "25:  if err != nil {",
          "26:   return nil, status.Errorf(codes.Internal, \"failed to create identity provider, error: %+v\", err)",
          "27:  }",
          "",
          "[Removed Lines]",
          "24:  identityProvider, err := s.Store.CreateIdentityProviderV1(ctx, convertIdentityProviderToStore(request.IdentityProvider))",
          "",
          "[Added Lines]",
          "24:  identityProvider, err := s.Store.CreateIdentityProvider(ctx, convertIdentityProviderToStore(request.IdentityProvider))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31: }",
          "33: func (s *APIV2Service) ListIdentityProviders(ctx context.Context, _ *apiv2pb.ListIdentityProvidersRequest) (*apiv2pb.ListIdentityProvidersResponse, error) {",
          "35:  if err != nil {",
          "36:   return nil, status.Errorf(codes.Internal, \"failed to list identity providers, error: %+v\", err)",
          "37:  }",
          "",
          "[Removed Lines]",
          "34:  identityProviders, err := s.Store.ListIdentityProvidersV1(ctx, &store.FindIdentityProvider{})",
          "",
          "[Added Lines]",
          "34:  identityProviders, err := s.Store.ListIdentityProviders(ctx, &store.FindIdentityProvider{})",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "50:  if err != nil {",
          "51:   return nil, status.Errorf(codes.InvalidArgument, \"invalid identity provider name: %v\", err)",
          "52:  }",
          "54:   ID: &id,",
          "55:  })",
          "56:  if err != nil {",
          "",
          "[Removed Lines]",
          "53:  identityProvider, err := s.Store.GetIdentityProviderV1(ctx, &store.FindIdentityProvider{",
          "",
          "[Added Lines]",
          "53:  identityProvider, err := s.Store.GetIdentityProvider(ctx, &store.FindIdentityProvider{",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "86:   }",
          "87:  }",
          "90:  if err != nil {",
          "91:   return nil, status.Errorf(codes.Internal, \"failed to update identity provider, error: %+v\", err)",
          "92:  }",
          "",
          "[Removed Lines]",
          "89:  identityProvider, err := s.Store.UpdateIdentityProviderV1(ctx, update)",
          "",
          "[Added Lines]",
          "89:  identityProvider, err := s.Store.UpdateIdentityProvider(ctx, update)",
          "",
          "---------------"
        ],
        "server/route/api/v2/resource_service.go||server/route/api/v2/resource_service.go": [
          "File: server/route/api/v2/resource_service.go -> server/route/api/v2/resource_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "296:   if workspaceStorageSetting.ActivedExternalStorageId == nil {",
          "297:    return errors.Errorf(\"No actived external storage found\")",
          "298:   }",
          "300:   if err != nil {",
          "301:    return errors.Wrap(err, \"Failed to find actived external storage\")",
          "302:   }",
          "",
          "[Removed Lines]",
          "299:   storage, err := s.GetStorageV1(ctx, &store.FindStorage{ID: workspaceStorageSetting.ActivedExternalStorageId})",
          "",
          "[Added Lines]",
          "299:   storage, err := s.GetStorage(ctx, &store.FindStorage{ID: workspaceStorageSetting.ActivedExternalStorageId})",
          "",
          "---------------"
        ],
        "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go": [
          "File: server/route/api/v2/storage_service.go -> server/route/api/v2/storage_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "20:   return nil, status.Errorf(codes.PermissionDenied, \"permission denied\")",
          "21:  }",
          "24:  if err != nil {",
          "25:   return nil, status.Errorf(codes.Internal, \"failed to create storage, error: %+v\", err)",
          "26:  }",
          "",
          "[Removed Lines]",
          "23:  storage, err := s.Store.CreateStorageV1(ctx, convertStorageToStore(request.Storage))",
          "",
          "[Added Lines]",
          "23:  storage, err := s.Store.CreateStorage(ctx, convertStorageToStore(request.Storage))",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30: }",
          "32: func (s *APIV2Service) ListStorages(ctx context.Context, _ *apiv2pb.ListStoragesRequest) (*apiv2pb.ListStoragesResponse, error) {",
          "34:  if err != nil {",
          "35:   return nil, status.Errorf(codes.Internal, \"failed to list storages, error: %+v\", err)",
          "36:  }",
          "",
          "[Removed Lines]",
          "33:  storages, err := s.Store.ListStoragesV1(ctx, &store.FindStorage{})",
          "",
          "[Added Lines]",
          "33:  storages, err := s.Store.ListStorages(ctx, &store.FindStorage{})",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "45: }",
          "47: func (s *APIV2Service) GetStorage(ctx context.Context, request *apiv2pb.GetStorageRequest) (*apiv2pb.GetStorageResponse, error) {",
          "49:   ID: &request.Id,",
          "50:  })",
          "51:  if err != nil {",
          "",
          "[Removed Lines]",
          "48:  storage, err := s.Store.GetStorageV1(ctx, &store.FindStorage{",
          "",
          "[Added Lines]",
          "48:  storage, err := s.Store.GetStorage(ctx, &store.FindStorage{",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "77:   }",
          "78:  }",
          "81:  if err != nil {",
          "82:   return nil, status.Errorf(codes.Internal, \"failed to update storage, error: %+v\", err)",
          "83:  }",
          "",
          "[Removed Lines]",
          "80:  storage, err := s.Store.UpdateStorageV1(ctx, update)",
          "",
          "[Added Lines]",
          "80:  storage, err := s.Store.UpdateStorage(ctx, update)",
          "",
          "---------------"
        ],
        "server/route/api/v2/workspace_setting_service.go||server/route/api/v2/workspace_setting_service.go": [
          "File: server/route/api/v2/workspace_setting_service.go -> server/route/api/v2/workspace_setting_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: )",
          "15: func (s *APIV2Service) ListWorkspaceSettings(ctx context.Context, _ *apiv2pb.ListWorkspaceSettingsRequest) (*apiv2pb.ListWorkspaceSettingsResponse, error) {",
          "17:  if err != nil {",
          "18:   return nil, status.Errorf(codes.Internal, \"failed to get workspace setting: %v\", err)",
          "19:  }",
          "",
          "[Removed Lines]",
          "16:  workspaceSettings, err := s.Store.ListWorkspaceSettingsV1(ctx, &store.FindWorkspaceSetting{})",
          "",
          "[Added Lines]",
          "16:  workspaceSettings, err := s.Store.ListWorkspaceSettings(ctx, &store.FindWorkspaceSetting{})",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:   return nil, status.Errorf(codes.InvalidArgument, \"invalid workspace setting name: %v\", err)",
          "37:  }",
          "38:  settingKey := storepb.WorkspaceSettingKey(storepb.WorkspaceSettingKey_value[settingKeyString])",
          "40:   Name: settingKey.String(),",
          "41:  })",
          "42:  if err != nil {",
          "",
          "[Removed Lines]",
          "39:  workspaceSetting, err := s.Store.GetWorkspaceSettingV1(ctx, &store.FindWorkspaceSetting{",
          "",
          "[Added Lines]",
          "39:  workspaceSetting, err := s.Store.GetWorkspaceSetting(ctx, &store.FindWorkspaceSetting{",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "64:   return nil, status.Errorf(codes.PermissionDenied, \"permission denied\")",
          "65:  }",
          "68:   return nil, status.Errorf(codes.Internal, \"failed to upsert workspace setting: %v\", err)",
          "69:  }",
          "",
          "[Removed Lines]",
          "67:  if _, err := s.Store.UpsertWorkspaceSettingV1(ctx, convertWorkspaceSettingToStore(request.Setting)); err != nil {",
          "",
          "[Added Lines]",
          "67:  if _, err := s.Store.UpsertWorkspaceSetting(ctx, convertWorkspaceSettingToStore(request.Setting)); err != nil {",
          "",
          "---------------"
        ],
        "server/server.go||server/server.go": [
          "File: server/server.go -> server/server.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "133:   modified = true",
          "134:  }",
          "135:  if modified {",
          "137:    Key:   storepb.WorkspaceSettingKey_WORKSPACE_SETTING_BASIC,",
          "138:    Value: &storepb.WorkspaceSetting_BasicSetting{BasicSetting: workspaceBasicSetting},",
          "139:   })",
          "",
          "[Removed Lines]",
          "136:   workspaceSetting, err := s.Store.UpsertWorkspaceSettingV1(ctx, &storepb.WorkspaceSetting{",
          "",
          "[Added Lines]",
          "136:   workspaceSetting, err := s.Store.UpsertWorkspaceSetting(ctx, &storepb.WorkspaceSetting{",
          "",
          "---------------"
        ],
        "store/cache.go||store/cache.go": [
          "File: store/cache.go -> store/cache.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"fmt\"",
          "5: )",
          "8:  return fmt.Sprintf(\"%d-%s-v1\", userID, key)",
          "9: }",
          "",
          "[Removed Lines]",
          "7: func getUserSettingV1CacheKey(userID int32, key string) string {",
          "",
          "[Added Lines]",
          "7: func getUserSettingCacheKey(userID int32, key string) string {",
          "",
          "---------------"
        ],
        "store/idp.go||store/idp.go": [
          "File: store/idp.go -> store/idp.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:  ID int32",
          "33: }",
          "36:  raw, err := convertIdentityProviderToRaw(create)",
          "37:  if err != nil {",
          "38:   return nil, err",
          "",
          "[Removed Lines]",
          "35: func (s *Store) CreateIdentityProviderV1(ctx context.Context, create *storepb.IdentityProvider) (*storepb.IdentityProvider, error) {",
          "",
          "[Added Lines]",
          "35: func (s *Store) CreateIdentityProvider(ctx context.Context, create *storepb.IdentityProvider) (*storepb.IdentityProvider, error) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:  if err != nil {",
          "47:   return nil, err",
          "48:  }",
          "50:  return identityProvider, nil",
          "51: }",
          "54:  list, err := s.driver.ListIdentityProviders(ctx, find)",
          "55:  if err != nil {",
          "56:   return nil, err",
          "",
          "[Removed Lines]",
          "49:  s.idpV1Cache.Store(identityProvider.Id, identityProvider)",
          "53: func (s *Store) ListIdentityProvidersV1(ctx context.Context, find *FindIdentityProvider) ([]*storepb.IdentityProvider, error) {",
          "",
          "[Added Lines]",
          "49:  s.idpCache.Store(identityProvider.Id, identityProvider)",
          "53: func (s *Store) ListIdentityProviders(ctx context.Context, find *FindIdentityProvider) ([]*storepb.IdentityProvider, error) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "62:   if err != nil {",
          "63:    return nil, err",
          "64:   }",
          "66:  }",
          "67:  return identityProviders, nil",
          "68: }",
          "71:  if find.ID != nil {",
          "73:    return cache.(*storepb.IdentityProvider), nil",
          "74:   }",
          "75:  }",
          "78:  if err != nil {",
          "79:   return nil, err",
          "80:  }",
          "",
          "[Removed Lines]",
          "65:   s.idpV1Cache.Store(identityProvider.Id, identityProvider)",
          "70: func (s *Store) GetIdentityProviderV1(ctx context.Context, find *FindIdentityProvider) (*storepb.IdentityProvider, error) {",
          "72:   if cache, ok := s.idpV1Cache.Load(*find.ID); ok {",
          "77:  list, err := s.ListIdentityProvidersV1(ctx, find)",
          "",
          "[Added Lines]",
          "65:   s.idpCache.Store(identityProvider.Id, identityProvider)",
          "70: func (s *Store) GetIdentityProvider(ctx context.Context, find *FindIdentityProvider) (*storepb.IdentityProvider, error) {",
          "72:   if cache, ok := s.idpCache.Load(*find.ID); ok {",
          "77:  list, err := s.ListIdentityProviders(ctx, find)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "97:  Config           *storepb.IdentityProviderConfig",
          "98: }",
          "101:  updateRaw := &UpdateIdentityProvider{",
          "102:   ID: update.ID,",
          "103:  }",
          "",
          "[Removed Lines]",
          "100: func (s *Store) UpdateIdentityProviderV1(ctx context.Context, update *UpdateIdentityProviderV1) (*storepb.IdentityProvider, error) {",
          "",
          "[Added Lines]",
          "100: func (s *Store) UpdateIdentityProvider(ctx context.Context, update *UpdateIdentityProviderV1) (*storepb.IdentityProvider, error) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "123:  if err != nil {",
          "124:   return nil, err",
          "125:  }",
          "127:  return identityProvider, nil",
          "128: }",
          "",
          "[Removed Lines]",
          "126:  s.idpV1Cache.Store(identityProvider.Id, identityProvider)",
          "",
          "[Added Lines]",
          "126:  s.idpCache.Store(identityProvider.Id, identityProvider)",
          "",
          "---------------"
        ],
        "store/migrator.go||store/migrator.go": [
          "File: store/migrator.go -> store/migrator.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package store",
          "",
          "[Removed Lines]",
          "3: import (",
          "4:  \"context\"",
          "5:  \"encoding/json\"",
          "6:  \"fmt\"",
          "8:  \"github.com/pkg/errors\"",
          "10:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "11: )",
          "14: func (s *Store) MigrateWorkspaceSetting(ctx context.Context) error {",
          "15:  workspaceSettings, err := s.ListWorkspaceSettings(ctx, &FindWorkspaceSetting{})",
          "16:  if err != nil {",
          "17:   return errors.Wrap(err, \"failed to list workspace settings\")",
          "18:  }",
          "20:  workspaceBasicSetting, err := s.GetWorkspaceBasicSetting(ctx)",
          "21:  if err != nil {",
          "22:   return errors.Wrap(err, \"failed to get workspace basic setting\")",
          "23:  }",
          "25:  workspaceGeneralSetting, err := s.GetWorkspaceGeneralSetting(ctx)",
          "26:  if err != nil {",
          "27:   return errors.Wrap(err, \"failed to get workspace general setting\")",
          "28:  }",
          "30:  for _, workspaceSetting := range workspaceSettings {",
          "31:   matched := true",
          "32:   var baseValue any",
          "34:   json.Unmarshal([]byte(workspaceSetting.Value), &baseValue)",
          "35:   if workspaceSetting.Name == \"server-id\" {",
          "36:    workspaceBasicSetting.ServerId = workspaceSetting.Value",
          "37:   } else if workspaceSetting.Name == \"secret-session\" {",
          "38:    workspaceBasicSetting.SecretKey = workspaceSetting.Value",
          "39:   } else if workspaceSetting.Name == \"allow-signup\" {",
          "40:    workspaceGeneralSetting.DisallowSignup = !baseValue.(bool)",
          "41:   } else if workspaceSetting.Name == \"disable-password-login\" {",
          "42:    workspaceGeneralSetting.DisallowPasswordLogin = baseValue.(bool)",
          "43:   } else if workspaceSetting.Name == \"additional-style\" {",
          "44:    workspaceGeneralSetting.AdditionalStyle = baseValue.(string)",
          "45:   } else if workspaceSetting.Name == \"additional-script\" {",
          "46:    workspaceGeneralSetting.AdditionalScript = baseValue.(string)",
          "47:   } else if workspaceSetting.Name == \"instance-url\" {",
          "48:    workspaceGeneralSetting.InstanceUrl = workspaceSetting.Value",
          "49:   } else {",
          "50:    matched = false",
          "51:   }",
          "53:   if matched {",
          "54:    if err := s.DeleteWorkspaceSetting(ctx, &DeleteWorkspaceSetting{",
          "55:     Name: workspaceSetting.Name,",
          "56:    }); err != nil {",
          "57:     return errors.Wrap(err, fmt.Sprintf(\"failed to delete workspace setting: %s\", workspaceSetting.Name))",
          "58:    }",
          "59:   }",
          "60:  }",
          "62:  if _, err := s.UpsertWorkspaceSettingV1(ctx, &storepb.WorkspaceSetting{",
          "63:   Key:   storepb.WorkspaceSettingKey_WORKSPACE_SETTING_BASIC,",
          "64:   Value: &storepb.WorkspaceSetting_BasicSetting{BasicSetting: workspaceBasicSetting},",
          "65:  }); err != nil {",
          "66:   return errors.Wrap(err, \"failed to upsert workspace basic setting\")",
          "67:  }",
          "69:  if _, err := s.UpsertWorkspaceSettingV1(ctx, &storepb.WorkspaceSetting{",
          "70:   Key:   storepb.WorkspaceSettingKey_WORKSPACE_SETTING_GENERAL,",
          "71:   Value: &storepb.WorkspaceSetting_GeneralSetting{GeneralSetting: workspaceGeneralSetting},",
          "72:  }); err != nil {",
          "73:   return errors.Wrap(err, \"failed to upsert workspace general setting\")",
          "74:  }",
          "76:  return nil",
          "77: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "store/storage.go||store/storage.go": [
          "File: store/storage.go -> store/storage.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  ID int32",
          "31: }",
          "62:  storageRaw := &Storage{",
          "63:   Name: create.Name,",
          "64:   Type: create.Type.String(),",
          "",
          "[Removed Lines]",
          "33: func (s *Store) CreateStorage(ctx context.Context, create *Storage) (*Storage, error) {",
          "34:  return s.driver.CreateStorage(ctx, create)",
          "35: }",
          "37: func (s *Store) ListStorages(ctx context.Context, find *FindStorage) ([]*Storage, error) {",
          "38:  return s.driver.ListStorages(ctx, find)",
          "39: }",
          "41: func (s *Store) GetStorage(ctx context.Context, find *FindStorage) (*Storage, error) {",
          "42:  list, err := s.ListStorages(ctx, find)",
          "43:  if err != nil {",
          "44:   return nil, err",
          "45:  }",
          "46:  if len(list) == 0 {",
          "47:   return nil, nil",
          "48:  }",
          "50:  return list[0], nil",
          "51: }",
          "53: func (s *Store) UpdateStorage(ctx context.Context, update *UpdateStorage) (*Storage, error) {",
          "54:  return s.driver.UpdateStorage(ctx, update)",
          "55: }",
          "57: func (s *Store) DeleteStorage(ctx context.Context, delete *DeleteStorage) error {",
          "58:  return s.driver.DeleteStorage(ctx, delete)",
          "59: }",
          "61: func (s *Store) CreateStorageV1(ctx context.Context, create *storepb.Storage) (*storepb.Storage, error) {",
          "",
          "[Added Lines]",
          "33: func (s *Store) CreateStorage(ctx context.Context, create *storepb.Storage) (*storepb.Storage, error) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "83:  return storage, nil",
          "84: }",
          "87:  list, err := s.driver.ListStorages(ctx, find)",
          "88:  if err != nil {",
          "89:   return nil, err",
          "",
          "[Removed Lines]",
          "86: func (s *Store) ListStoragesV1(ctx context.Context, find *FindStorage) ([]*storepb.Storage, error) {",
          "",
          "[Added Lines]",
          "58: func (s *Store) ListStorages(ctx context.Context, find *FindStorage) ([]*storepb.Storage, error) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "100:  return storages, nil",
          "101: }",
          "105:  if err != nil {",
          "106:   return nil, err",
          "107:  }",
          "",
          "[Removed Lines]",
          "103: func (s *Store) GetStorageV1(ctx context.Context, find *FindStorage) (*storepb.Storage, error) {",
          "104:  list, err := s.ListStoragesV1(ctx, find)",
          "",
          "[Added Lines]",
          "75: func (s *Store) GetStorage(ctx context.Context, find *FindStorage) (*storepb.Storage, error) {",
          "76:  list, err := s.ListStorages(ctx, find)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "119:  Config *storepb.StorageConfig",
          "120: }",
          "123:  updateRaw := &UpdateStorage{",
          "124:   ID: update.ID,",
          "125:  }",
          "",
          "[Removed Lines]",
          "122: func (s *Store) UpdateStorageV1(ctx context.Context, update *UpdateStorageV1) (*storepb.Storage, error) {",
          "",
          "[Added Lines]",
          "94: func (s *Store) UpdateStorage(ctx context.Context, update *UpdateStorageV1) (*storepb.Storage, error) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "144:  return storage, nil",
          "145: }",
          "147: func convertStorageFromRaw(storageRaw *Storage) (*storepb.Storage, error) {",
          "148:  storage := &storepb.Storage{",
          "149:   Id:   storageRaw.ID,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "119: func (s *Store) DeleteStorage(ctx context.Context, delete *DeleteStorage) error {",
          "120:  return s.driver.DeleteStorage(ctx, delete)",
          "121: }",
          "",
          "---------------"
        ],
        "store/store.go||store/store.go": [
          "File: store/store.go -> store/store.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "14:  workspaceSettingCache sync.Map // map[string]*storepb.WorkspaceSetting",
          "15:  userCache             sync.Map // map[int]*User",
          "16:  userSettingCache      sync.Map // map[string]*UserSetting",
          "19: }",
          "",
          "[Removed Lines]",
          "17:  idpCache              sync.Map // map[int]*IdentityProvider",
          "18:  idpV1Cache            sync.Map // map[int]*storepb.IdentityProvider",
          "",
          "[Added Lines]",
          "17:  idpCache              sync.Map // map[int]*storepb.IdentityProvider",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "27: }",
          "29: func (s *Store) MigrateManually(ctx context.Context) error {",
          "33:  return nil",
          "34: }",
          "",
          "[Removed Lines]",
          "30:  if err := s.MigrateWorkspaceSetting(ctx); err != nil {",
          "31:   return err",
          "32:  }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "store/user_setting.go||store/user_setting.go": [
          "File: store/user_setting.go -> store/user_setting.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:  if err != nil {",
          "35:   return nil, err",
          "36:  }",
          "38:  return userSetting, nil",
          "39: }",
          "",
          "[Removed Lines]",
          "37:  s.userSettingCache.Store(getUserSettingV1CacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "[Added Lines]",
          "37:  s.userSettingCache.Store(getUserSettingCacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "50:   if err != nil {",
          "51:    return nil, err",
          "52:   }",
          "54:   userSettings = append(userSettings, userSetting)",
          "55:  }",
          "56:  return userSettings, nil",
          "",
          "[Removed Lines]",
          "53:   s.userSettingCache.Store(getUserSettingV1CacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "[Added Lines]",
          "53:   s.userSettingCache.Store(getUserSettingCacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "59: func (s *Store) GetUserSetting(ctx context.Context, find *FindUserSetting) (*storepb.UserSetting, error) {",
          "60:  if find.UserID != nil {",
          "62:    return cache.(*storepb.UserSetting), nil",
          "63:   }",
          "64:  }",
          "",
          "[Removed Lines]",
          "61:   if cache, ok := s.userSettingCache.Load(getUserSettingV1CacheKey(*find.UserID, find.Key.String())); ok {",
          "",
          "[Added Lines]",
          "61:   if cache, ok := s.userSettingCache.Load(getUserSettingCacheKey(*find.UserID, find.Key.String())); ok {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "75:  }",
          "77:  userSetting := list[0]",
          "79:  return userSetting, nil",
          "80: }",
          "",
          "[Removed Lines]",
          "78:  s.userSettingCache.Store(getUserSettingV1CacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "[Added Lines]",
          "78:  s.userSettingCache.Store(getUserSettingCacheKey(userSetting.UserId, userSetting.Key.String()), userSetting)",
          "",
          "---------------"
        ],
        "store/workspace_setting.go||store/workspace_setting.go": [
          "File: store/workspace_setting.go -> store/workspace_setting.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "23:  Name string",
          "24: }",
          "61:  workspaceSettingRaw := &WorkspaceSetting{",
          "62:   Name: upsert.Key.String(),",
          "63:  }",
          "",
          "[Removed Lines]",
          "26: func (s *Store) UpsertWorkspaceSetting(ctx context.Context, upsert *WorkspaceSetting) (*WorkspaceSetting, error) {",
          "27:  return s.driver.UpsertWorkspaceSetting(ctx, upsert)",
          "28: }",
          "30: func (s *Store) ListWorkspaceSettings(ctx context.Context, find *FindWorkspaceSetting) ([]*WorkspaceSetting, error) {",
          "31:  list, err := s.driver.ListWorkspaceSettings(ctx, find)",
          "32:  if err != nil {",
          "33:   return nil, err",
          "34:  }",
          "35:  return list, nil",
          "36: }",
          "38: func (s *Store) GetWorkspaceSetting(ctx context.Context, find *FindWorkspaceSetting) (*WorkspaceSetting, error) {",
          "39:  list, err := s.ListWorkspaceSettings(ctx, find)",
          "40:  if err != nil {",
          "41:   return nil, err",
          "42:  }",
          "44:  if len(list) == 0 {",
          "45:   return nil, nil",
          "46:  }",
          "48:  systemSettingMessage := list[0]",
          "49:  return systemSettingMessage, nil",
          "50: }",
          "52: func (s *Store) DeleteWorkspaceSetting(ctx context.Context, delete *DeleteWorkspaceSetting) error {",
          "53:  err := s.driver.DeleteWorkspaceSetting(ctx, delete)",
          "54:  if err != nil {",
          "55:   return errors.Wrap(err, \"Failed to delete workspace setting\")",
          "56:  }",
          "57:  return nil",
          "58: }",
          "60: func (s *Store) UpsertWorkspaceSettingV1(ctx context.Context, upsert *storepb.WorkspaceSetting) (*storepb.WorkspaceSetting, error) {",
          "",
          "[Added Lines]",
          "26: func (s *Store) UpsertWorkspaceSetting(ctx context.Context, upsert *storepb.WorkspaceSetting) (*storepb.WorkspaceSetting, error) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "91:  return workspaceSetting, nil",
          "92: }",
          "95:  list, err := s.driver.ListWorkspaceSettings(ctx, find)",
          "96:  if err != nil {",
          "97:   return nil, err",
          "",
          "[Removed Lines]",
          "94: func (s *Store) ListWorkspaceSettingsV1(ctx context.Context, find *FindWorkspaceSetting) ([]*storepb.WorkspaceSetting, error) {",
          "",
          "[Added Lines]",
          "60: func (s *Store) ListWorkspaceSettings(ctx context.Context, find *FindWorkspaceSetting) ([]*storepb.WorkspaceSetting, error) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "109:  return workspaceSettings, nil",
          "110: }",
          "113:  if cache, ok := s.workspaceSettingCache.Load(find.Name); ok {",
          "114:   return cache.(*storepb.WorkspaceSetting), nil",
          "115:  }",
          "118:  if err != nil {",
          "119:   return nil, err",
          "120:  }",
          "",
          "[Removed Lines]",
          "112: func (s *Store) GetWorkspaceSettingV1(ctx context.Context, find *FindWorkspaceSetting) (*storepb.WorkspaceSetting, error) {",
          "117:  list, err := s.ListWorkspaceSettingsV1(ctx, find)",
          "",
          "[Added Lines]",
          "78: func (s *Store) GetWorkspaceSetting(ctx context.Context, find *FindWorkspaceSetting) (*storepb.WorkspaceSetting, error) {",
          "83:  list, err := s.ListWorkspaceSettings(ctx, find)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "128: }",
          "130: func (s *Store) GetWorkspaceBasicSetting(ctx context.Context) (*storepb.WorkspaceBasicSetting, error) {",
          "132:   Name: storepb.WorkspaceSettingKey_WORKSPACE_SETTING_BASIC.String(),",
          "133:  })",
          "134:  if err != nil {",
          "",
          "[Removed Lines]",
          "131:  workspaceSetting, err := s.GetWorkspaceSettingV1(ctx, &FindWorkspaceSetting{",
          "",
          "[Added Lines]",
          "97:  workspaceSetting, err := s.GetWorkspaceSetting(ctx, &FindWorkspaceSetting{",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "143: }",
          "145: func (s *Store) GetWorkspaceGeneralSetting(ctx context.Context) (*storepb.WorkspaceGeneralSetting, error) {",
          "147:   Name: storepb.WorkspaceSettingKey_WORKSPACE_SETTING_GENERAL.String(),",
          "148:  })",
          "149:  if err != nil {",
          "",
          "[Removed Lines]",
          "146:  workspaceSetting, err := s.GetWorkspaceSettingV1(ctx, &FindWorkspaceSetting{",
          "",
          "[Added Lines]",
          "112:  workspaceSetting, err := s.GetWorkspaceSetting(ctx, &FindWorkspaceSetting{",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "158: }",
          "160: func (s *Store) GetWorkspaceMemoRelatedSetting(ctx context.Context) (*storepb.WorkspaceMemoRelatedSetting, error) {",
          "162:   Name: storepb.WorkspaceSettingKey_WORKSPACE_SETTING_MEMO_RELATED.String(),",
          "163:  })",
          "164:  if err != nil {",
          "",
          "[Removed Lines]",
          "161:  workspaceSetting, err := s.GetWorkspaceSettingV1(ctx, &FindWorkspaceSetting{",
          "",
          "[Added Lines]",
          "127:  workspaceSetting, err := s.GetWorkspaceSetting(ctx, &FindWorkspaceSetting{",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "179: )",
          "181: func (s *Store) GetWorkspaceStorageSetting(ctx context.Context) (*storepb.WorkspaceStorageSetting, error) {",
          "183:   Name: storepb.WorkspaceSettingKey_WORKSPACE_SETTING_STORAGE.String(),",
          "184:  })",
          "185:  if err != nil {",
          "",
          "[Removed Lines]",
          "182:  workspaceSetting, err := s.GetWorkspaceSettingV1(ctx, &FindWorkspaceSetting{",
          "",
          "[Added Lines]",
          "148:  workspaceSetting, err := s.GetWorkspaceSetting(ctx, &FindWorkspaceSetting{",
          "",
          "---------------"
        ],
        "test/store/idp_test.go||test/store/idp_test.go": [
          "File: test/store/idp_test.go -> test/store/idp_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: func TestIdentityProviderStore(t *testing.T) {",
          "14:  ctx := context.Background()",
          "15:  ts := NewTestingStore(ctx, t)",
          "17:   Name:             \"GitHub OAuth\",",
          "18:   Type:             storepb.IdentityProvider_OAUTH2,",
          "19:   IdentifierFilter: \"\",",
          "",
          "[Removed Lines]",
          "16:  createdIDP, err := ts.CreateIdentityProviderV1(ctx, &storepb.IdentityProvider{",
          "",
          "[Added Lines]",
          "16:  createdIDP, err := ts.CreateIdentityProvider(ctx, &storepb.IdentityProvider{",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "36:   },",
          "37:  })",
          "38:  require.NoError(t, err)",
          "40:   ID: &createdIDP.Id,",
          "41:  })",
          "42:  require.NoError(t, err)",
          "43:  require.NotNil(t, idp)",
          "44:  require.Equal(t, createdIDP, idp)",
          "45:  newName := \"My GitHub OAuth\"",
          "47:   ID:   idp.Id,",
          "48:   Name: &newName,",
          "49:  })",
          "",
          "[Removed Lines]",
          "39:  idp, err := ts.GetIdentityProviderV1(ctx, &store.FindIdentityProvider{",
          "46:  updatedIdp, err := ts.UpdateIdentityProviderV1(ctx, &store.UpdateIdentityProviderV1{",
          "",
          "[Added Lines]",
          "39:  idp, err := ts.GetIdentityProvider(ctx, &store.FindIdentityProvider{",
          "46:  updatedIdp, err := ts.UpdateIdentityProvider(ctx, &store.UpdateIdentityProviderV1{",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "53:   ID: idp.Id,",
          "54:  })",
          "55:  require.NoError(t, err)",
          "57:  require.NoError(t, err)",
          "58:  require.Equal(t, 0, len(idpList))",
          "59:  ts.Close()",
          "",
          "[Removed Lines]",
          "56:  idpList, err := ts.ListIdentityProvidersV1(ctx, &store.FindIdentityProvider{})",
          "",
          "[Added Lines]",
          "56:  idpList, err := ts.ListIdentityProviders(ctx, &store.FindIdentityProvider{})",
          "",
          "---------------"
        ],
        "test/store/storage_test.go||test/store/storage_test.go": [
          "File: test/store/storage_test.go -> test/store/storage_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "7:  \"github.com/stretchr/testify/require\"",
          "9:  \"github.com/usememos/memos/store\"",
          "10: )",
          "12: func TestStorageStore(t *testing.T) {",
          "13:  ctx := context.Background()",
          "14:  ts := NewTestingStore(ctx, t)",
          "19:  })",
          "20:  require.NoError(t, err)",
          "21:  newStorageName := \"new_storage_name\"",
          "24:   Name: &newStorageName,",
          "25:  })",
          "26:  require.NoError(t, err)",
          "",
          "[Removed Lines]",
          "15:  storage, err := ts.CreateStorage(ctx, &store.Storage{",
          "16:   Name:   \"test_storage\",",
          "17:   Type:   \"S3\",",
          "18:   Config: \"{}\",",
          "22:  updatedStorage, err := ts.UpdateStorage(ctx, &store.UpdateStorage{",
          "23:   ID:   storage.ID,",
          "",
          "[Added Lines]",
          "9:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "16:  storage, err := ts.CreateStorage(ctx, &storepb.Storage{",
          "17:   Name: \"test_storage\",",
          "18:   Type: storepb.Storage_S3,",
          "19:   Config: &storepb.StorageConfig{",
          "20:    StorageConfig: &storepb.StorageConfig_S3Config{",
          "21:     S3Config: &storepb.S3Config{",
          "22:      EndPoint: \"http://localhost:9000\",",
          "23:     },",
          "24:    },",
          "25:   },",
          "29:  updatedStorage, err := ts.UpdateStorage(ctx, &store.UpdateStorageV1{",
          "30:   ID:   storage.Id,",
          "31:   Type: storage.Type,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "30:  require.Equal(t, 1, len(storageList))",
          "31:  require.Equal(t, updatedStorage, storageList[0])",
          "32:  err = ts.DeleteStorage(ctx, &store.DeleteStorage{",
          "34:  })",
          "35:  require.NoError(t, err)",
          "36:  storageList, err = ts.ListStorages(ctx, &store.FindStorage{})",
          "",
          "[Removed Lines]",
          "33:   ID: storage.ID,",
          "",
          "[Added Lines]",
          "41:   ID: storage.Id,",
          "",
          "---------------"
        ],
        "test/store/workspace_setting_test.go||test/store/workspace_setting_test.go": [
          "File: test/store/workspace_setting_test.go -> test/store/workspace_setting_test.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "13: func TestWorkspaceSettingV1Store(t *testing.T) {",
          "14:  ctx := context.Background()",
          "15:  ts := NewTestingStore(ctx, t)",
          "17:   Key: storepb.WorkspaceSettingKey_WORKSPACE_SETTING_GENERAL,",
          "18:   Value: &storepb.WorkspaceSetting_GeneralSetting{",
          "19:    GeneralSetting: &storepb.WorkspaceGeneralSetting{",
          "",
          "[Removed Lines]",
          "16:  workspaceSetting, err := ts.UpsertWorkspaceSettingV1(ctx, &storepb.WorkspaceSetting{",
          "",
          "[Added Lines]",
          "16:  workspaceSetting, err := ts.UpsertWorkspaceSetting(ctx, &storepb.WorkspaceSetting{",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "22:   },",
          "23:  })",
          "24:  require.NoError(t, err)",
          "26:  require.NoError(t, err)",
          "27:  require.Equal(t, 1, len(list))",
          "28:  require.Equal(t, workspaceSetting, list[0])",
          "",
          "[Removed Lines]",
          "25:  list, err := ts.ListWorkspaceSettingsV1(ctx, &store.FindWorkspaceSetting{})",
          "",
          "[Added Lines]",
          "25:  list, err := ts.ListWorkspaceSettings(ctx, &store.FindWorkspaceSetting{})",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8f51529c78ada178cb6bd4cfe960ee7c9d025bb4",
      "candidate_info": {
        "commit_hash": "8f51529c78ada178cb6bd4cfe960ee7c9d025bb4",
        "repo": "usememos/memos",
        "commit_url": "https://github.com/usememos/memos/commit/8f51529c78ada178cb6bd4cfe960ee7c9d025bb4",
        "files": [
          "proto/api/v2/idp_service.proto",
          "proto/api/v2/storage_service.proto",
          "proto/gen/api/v2/README.md",
          "proto/gen/api/v2/idp_service.pb.go",
          "proto/gen/api/v2/storage_service.pb.go",
          "proto/gen/api/v2/storage_service.pb.gw.go",
          "proto/gen/api/v2/storage_service_grpc.pb.go",
          "proto/gen/store/README.md",
          "proto/gen/store/idp.pb.go",
          "proto/store/idp.proto",
          "server/route/api/v2/apidocs.swagger.yaml",
          "server/route/api/v2/storage_service.go",
          "server/route/api/v2/v2.go",
          "server/route/api/v2/webhook_service.go",
          "store/storage.go",
          "store/webhook.go",
          "web/src/components/CreateStorageServiceDialog.tsx",
          "web/src/components/Settings/StorageSection.tsx",
          "web/src/grpcweb.ts",
          "web/src/helpers/api.ts",
          "web/src/types/modules/storage.d.ts"
        ],
        "message": "chore: implement storage service",
        "before_after_code_files": [
          "proto/api/v2/idp_service.proto||proto/api/v2/idp_service.proto",
          "proto/api/v2/storage_service.proto||proto/api/v2/storage_service.proto",
          "proto/gen/api/v2/idp_service.pb.go||proto/gen/api/v2/idp_service.pb.go",
          "proto/gen/api/v2/storage_service.pb.go||proto/gen/api/v2/storage_service.pb.go",
          "proto/gen/api/v2/storage_service.pb.gw.go||proto/gen/api/v2/storage_service.pb.gw.go",
          "proto/gen/api/v2/storage_service_grpc.pb.go||proto/gen/api/v2/storage_service_grpc.pb.go",
          "proto/gen/store/idp.pb.go||proto/gen/store/idp.pb.go",
          "proto/store/idp.proto||proto/store/idp.proto",
          "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go",
          "server/route/api/v2/v2.go||server/route/api/v2/v2.go",
          "server/route/api/v2/webhook_service.go||server/route/api/v2/webhook_service.go",
          "store/storage.go||store/storage.go",
          "store/webhook.go||store/webhook.go",
          "web/src/components/CreateStorageServiceDialog.tsx||wesrc/components/CreateStorageServiceDialog.tsx",
          "web/src/components/Settings/StorageSection.tsx||wesrc/components/Settings/StorageSection.tsx",
          "web/src/grpcweb.ts||wesrc/grpcweb.ts",
          "web/src/helpers/api.ts||wesrc/helpers/api.ts",
          "web/src/types/modules/storage.d.ts||wesrc/types/modules/storage.d.ts"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go"
          ],
          "candidate": [
            "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go"
          ]
        }
      },
      "candidate_diff": {
        "proto/api/v2/idp_service.proto||proto/api/v2/idp_service.proto": [
          "File: proto/api/v2/idp_service.proto -> proto/api/v2/idp_service.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:   string identifier_filter = 4;",
          "72:   }",
          "75: }",
          "77: message ListIdentityProvidersRequest {}",
          "",
          "[Removed Lines]",
          "52:   message Config {",
          "53:     message FieldMapping {",
          "54:       string identifier = 1;",
          "55:       string display_name = 2;",
          "56:       string email = 3;",
          "57:     }",
          "59:     message OAuth2 {",
          "60:       string client_id = 1;",
          "61:       string client_secret = 2;",
          "62:       string auth_url = 3;",
          "63:       string token_url = 4;",
          "64:       string user_info_url = 5;",
          "65:       repeated string scopes = 6;",
          "66:       FieldMapping field_mapping = 7;",
          "67:     }",
          "69:     oneof config {",
          "70:       OAuth2 oauth2 = 1;",
          "71:     }",
          "74:   Config config = 5;",
          "",
          "[Added Lines]",
          "52:   IdentityProviderConfig config = 5;",
          "53: }",
          "55: message IdentityProviderConfig {",
          "56:   oneof config {",
          "57:     OAuth2Config oauth2 = 1;",
          "59: }",
          "61: message FieldMapping {",
          "62:   string identifier = 1;",
          "63:   string display_name = 2;",
          "64:   string email = 3;",
          "65: }",
          "67: message OAuth2Config {",
          "68:   string client_id = 1;",
          "69:   string client_secret = 2;",
          "70:   string auth_url = 3;",
          "71:   string token_url = 4;",
          "72:   string user_info_url = 5;",
          "73:   repeated string scopes = 6;",
          "74:   FieldMapping field_mapping = 7;",
          "",
          "---------------"
        ],
        "proto/api/v2/storage_service.proto||proto/api/v2/storage_service.proto": [
          "File: proto/api/v2/storage_service.proto -> proto/api/v2/storage_service.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: syntax = \"proto3\";",
          "3: package memos.api.v2;",
          "5: import \"google/api/annotations.proto\";",
          "6: import \"google/api/client.proto\";",
          "7: import \"google/protobuf/field_mask.proto\";",
          "9: option go_package = \"gen/api/v2\";",
          "11: service StorageService {",
          "13:   rpc CreateStorage(CreateStorageRequest) returns (CreateStorageResponse) {",
          "14:     option (google.api.http) = {",
          "15:       post: \"/api/v2/storages\"",
          "16:       body: \"*\"",
          "17:     };",
          "18:   }",
          "20:   rpc GetStorage(GetStorageRequest) returns (GetStorageResponse) {",
          "21:     option (google.api.http) = {get: \"/api/v2/storages/{id}\"};",
          "22:     option (google.api.method_signature) = \"id\";",
          "23:   }",
          "25:   rpc ListStorages(ListStoragesRequest) returns (ListStoragesResponse) {",
          "26:     option (google.api.http) = {get: \"/api/v2/storages\"};",
          "27:   }",
          "29:   rpc UpdateStorage(UpdateStorageRequest) returns (UpdateStorageResponse) {",
          "30:     option (google.api.http) = {",
          "31:       patch: \"/api/v2/storages/{storage.id}\"",
          "32:       body: \"storage\"",
          "33:     };",
          "34:     option (google.api.method_signature) = \"storage,update_mask\";",
          "35:   }",
          "37:   rpc DeleteStorage(DeleteStorageRequest) returns (DeleteStorageResponse) {",
          "38:     option (google.api.http) = {delete: \"/api/v2/storages/{id}\"};",
          "39:     option (google.api.method_signature) = \"id\";",
          "40:   }",
          "41: }",
          "43: message Storage {",
          "44:   int32 id = 1;",
          "45:   string title = 2;",
          "47:   enum Type {",
          "48:     TYPE_UNSPECIFIED = 0;",
          "49:     S3 = 1;",
          "50:   }",
          "51:   Type type = 3;",
          "52:   StorageConfig config = 4;",
          "53: }",
          "55: message StorageConfig {",
          "56:   oneof storage_config {",
          "57:     S3Config s3_config = 1;",
          "58:   }",
          "59: }",
          "61: message S3Config {",
          "62:   string end_point = 1;",
          "63:   string path = 2;",
          "64:   string region = 3;",
          "65:   string access_key = 4;",
          "66:   string secret_key = 5;",
          "67:   string bucket = 6;",
          "68:   string url_prefix = 7;",
          "69:   string url_suffix = 8;",
          "70:   bool pre_sign = 9;",
          "71: }",
          "73: message CreateStorageRequest {",
          "74:   Storage storage = 1;",
          "75: }",
          "77: message CreateStorageResponse {",
          "78:   Storage storage = 1;",
          "79: }",
          "81: message GetStorageRequest {",
          "82:   int32 id = 1;",
          "83: }",
          "85: message GetStorageResponse {",
          "86:   Storage storage = 1;",
          "87: }",
          "89: message ListStoragesRequest {}",
          "91: message ListStoragesResponse {",
          "92:   repeated Storage storages = 1;",
          "93: }",
          "95: message UpdateStorageRequest {",
          "96:   Storage storage = 1;",
          "98:   google.protobuf.FieldMask update_mask = 2;",
          "99: }",
          "101: message UpdateStorageResponse {",
          "102:   Storage storage = 1;",
          "103: }",
          "105: message DeleteStorageRequest {",
          "106:   int32 id = 1;",
          "107: }",
          "109: message DeleteStorageResponse {}",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/idp_service.pb.go||proto/gen/api/v2/idp_service.pb.go": [
          "File: proto/gen/api/v2/idp_service.pb.go -> proto/gen/api/v2/idp_service.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "83: }",
          "85: func (x *IdentityProvider) Reset() {",
          "",
          "[Removed Lines]",
          "78:  Name             string                   `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`",
          "79:  Type             IdentityProvider_Type    `protobuf:\"varint,2,opt,name=type,proto3,enum=memos.api.v2.IdentityProvider_Type\" json:\"type,omitempty\"`",
          "80:  Title            string                   `protobuf:\"bytes,3,opt,name=title,proto3\" json:\"title,omitempty\"`",
          "81:  IdentifierFilter string                   `protobuf:\"bytes,4,opt,name=identifier_filter,json=identifierFilter,proto3\" json:\"identifier_filter,omitempty\"`",
          "82:  Config           *IdentityProvider_Config `protobuf:\"bytes,5,opt,name=config,proto3\" json:\"config,omitempty\"`",
          "",
          "[Added Lines]",
          "78:  Name             string                  `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`",
          "79:  Type             IdentityProvider_Type   `protobuf:\"varint,2,opt,name=type,proto3,enum=memos.api.v2.IdentityProvider_Type\" json:\"type,omitempty\"`",
          "80:  Title            string                  `protobuf:\"bytes,3,opt,name=title,proto3\" json:\"title,omitempty\"`",
          "81:  IdentifierFilter string                  `protobuf:\"bytes,4,opt,name=identifier_filter,json=identifierFilter,proto3\" json:\"identifier_filter,omitempty\"`",
          "82:  Config           *IdentityProviderConfig `protobuf:\"bytes,5,opt,name=config,proto3\" json:\"config,omitempty\"`",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "142:  return \"\"",
          "143: }",
          "146:  if x != nil {",
          "147:   return x.Config",
          "148:  }",
          "149:  return nil",
          "150: }",
          "153:  state         protoimpl.MessageState",
          "154:  sizeCache     protoimpl.SizeCache",
          "155:  unknownFields protoimpl.UnknownFields",
          "156: }",
          "160:  if protoimpl.UnsafeEnabled {",
          "161:   mi := &file_api_v2_idp_service_proto_msgTypes[1]",
          "162:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "145: func (x *IdentityProvider) GetConfig() *IdentityProvider_Config {",
          "152: type ListIdentityProvidersRequest struct {",
          "158: func (x *ListIdentityProvidersRequest) Reset() {",
          "",
          "[Added Lines]",
          "145: func (x *IdentityProvider) GetConfig() *IdentityProviderConfig {",
          "152: type IdentityProviderConfig struct {",
          "160:  Config isIdentityProviderConfig_Config `protobuf_oneof:\"config\"`",
          "163: func (x *IdentityProviderConfig) Reset() {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "164:  }",
          "165: }",
          "168:  return protoimpl.X.MessageStringOf(x)",
          "169: }",
          "174:  mi := &file_api_v2_idp_service_proto_msgTypes[1]",
          "175:  if protoimpl.UnsafeEnabled && x != nil {",
          "176:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "167: func (x *ListIdentityProvidersRequest) String() string {",
          "171: func (*ListIdentityProvidersRequest) ProtoMessage() {}",
          "173: func (x *ListIdentityProvidersRequest) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "172: func (x *IdentityProviderConfig) String() string {",
          "176: func (*IdentityProviderConfig) ProtoMessage() {}",
          "178: func (x *IdentityProviderConfig) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "182:  return mi.MessageOf(x)",
          "183: }",
          "187:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{1}",
          "188: }",
          "191:  state         protoimpl.MessageState",
          "192:  sizeCache     protoimpl.SizeCache",
          "193:  unknownFields protoimpl.UnknownFields",
          "196: }",
          "200:  if protoimpl.UnsafeEnabled {",
          "201:   mi := &file_api_v2_idp_service_proto_msgTypes[2]",
          "202:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "186: func (*ListIdentityProvidersRequest) Descriptor() ([]byte, []int) {",
          "190: type ListIdentityProvidersResponse struct {",
          "195:  IdentityProviders []*IdentityProvider `protobuf:\"bytes,1,rep,name=identity_providers,json=identityProviders,proto3\" json:\"identity_providers,omitempty\"`",
          "198: func (x *ListIdentityProvidersResponse) Reset() {",
          "",
          "[Added Lines]",
          "191: func (*IdentityProviderConfig) Descriptor() ([]byte, []int) {",
          "195: func (m *IdentityProviderConfig) GetConfig() isIdentityProviderConfig_Config {",
          "196:  if m != nil {",
          "197:   return m.Config",
          "198:  }",
          "199:  return nil",
          "200: }",
          "202: func (x *IdentityProviderConfig) GetOauth2() *OAuth2Config {",
          "203:  if x, ok := x.GetConfig().(*IdentityProviderConfig_Oauth2); ok {",
          "204:   return x.Oauth2",
          "205:  }",
          "206:  return nil",
          "207: }",
          "209: type isIdentityProviderConfig_Config interface {",
          "210:  isIdentityProviderConfig_Config()",
          "211: }",
          "213: type IdentityProviderConfig_Oauth2 struct {",
          "214:  Oauth2 *OAuth2Config `protobuf:\"bytes,1,opt,name=oauth2,proto3,oneof\"`",
          "215: }",
          "217: func (*IdentityProviderConfig_Oauth2) isIdentityProviderConfig_Config() {}",
          "219: type FieldMapping struct {",
          "224:  Identifier  string `protobuf:\"bytes,1,opt,name=identifier,proto3\" json:\"identifier,omitempty\"`",
          "225:  DisplayName string `protobuf:\"bytes,2,opt,name=display_name,json=displayName,proto3\" json:\"display_name,omitempty\"`",
          "226:  Email       string `protobuf:\"bytes,3,opt,name=email,proto3\" json:\"email,omitempty\"`",
          "229: func (x *FieldMapping) Reset() {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "204:  }",
          "205: }",
          "208:  return protoimpl.X.MessageStringOf(x)",
          "209: }",
          "214:  mi := &file_api_v2_idp_service_proto_msgTypes[2]",
          "215:  if protoimpl.UnsafeEnabled && x != nil {",
          "216:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "207: func (x *ListIdentityProvidersResponse) String() string {",
          "211: func (*ListIdentityProvidersResponse) ProtoMessage() {}",
          "213: func (x *ListIdentityProvidersResponse) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "238: func (x *FieldMapping) String() string {",
          "242: func (*FieldMapping) ProtoMessage() {}",
          "244: func (x *FieldMapping) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "222:  return mi.MessageOf(x)",
          "223: }",
          "227:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{2}",
          "228: }",
          "231:  if x != nil {",
          "233:  }",
          "235: }",
          "238:  state         protoimpl.MessageState",
          "239:  sizeCache     protoimpl.SizeCache",
          "240:  unknownFields protoimpl.UnknownFields",
          "245: }",
          "249:  if protoimpl.UnsafeEnabled {",
          "250:   mi := &file_api_v2_idp_service_proto_msgTypes[3]",
          "251:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "226: func (*ListIdentityProvidersResponse) Descriptor() ([]byte, []int) {",
          "230: func (x *ListIdentityProvidersResponse) GetIdentityProviders() []*IdentityProvider {",
          "232:   return x.IdentityProviders",
          "234:  return nil",
          "237: type GetIdentityProviderRequest struct {",
          "244:  Name string `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`",
          "247: func (x *GetIdentityProviderRequest) Reset() {",
          "",
          "[Added Lines]",
          "257: func (*FieldMapping) Descriptor() ([]byte, []int) {",
          "261: func (x *FieldMapping) GetIdentifier() string {",
          "263:   return x.Identifier",
          "265:  return \"\"",
          "268: func (x *FieldMapping) GetDisplayName() string {",
          "269:  if x != nil {",
          "270:   return x.DisplayName",
          "271:  }",
          "272:  return \"\"",
          "273: }",
          "275: func (x *FieldMapping) GetEmail() string {",
          "276:  if x != nil {",
          "277:   return x.Email",
          "278:  }",
          "279:  return \"\"",
          "280: }",
          "282: type OAuth2Config struct {",
          "287:  ClientId     string        `protobuf:\"bytes,1,opt,name=client_id,json=clientId,proto3\" json:\"client_id,omitempty\"`",
          "288:  ClientSecret string        `protobuf:\"bytes,2,opt,name=client_secret,json=clientSecret,proto3\" json:\"client_secret,omitempty\"`",
          "289:  AuthUrl      string        `protobuf:\"bytes,3,opt,name=auth_url,json=authUrl,proto3\" json:\"auth_url,omitempty\"`",
          "290:  TokenUrl     string        `protobuf:\"bytes,4,opt,name=token_url,json=tokenUrl,proto3\" json:\"token_url,omitempty\"`",
          "291:  UserInfoUrl  string        `protobuf:\"bytes,5,opt,name=user_info_url,json=userInfoUrl,proto3\" json:\"user_info_url,omitempty\"`",
          "292:  Scopes       []string      `protobuf:\"bytes,6,rep,name=scopes,proto3\" json:\"scopes,omitempty\"`",
          "293:  FieldMapping *FieldMapping `protobuf:\"bytes,7,opt,name=field_mapping,json=fieldMapping,proto3\" json:\"field_mapping,omitempty\"`",
          "296: func (x *OAuth2Config) Reset() {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "253:  }",
          "254: }",
          "257:  return protoimpl.X.MessageStringOf(x)",
          "258: }",
          "263:  mi := &file_api_v2_idp_service_proto_msgTypes[3]",
          "264:  if protoimpl.UnsafeEnabled && x != nil {",
          "265:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "256: func (x *GetIdentityProviderRequest) String() string {",
          "260: func (*GetIdentityProviderRequest) ProtoMessage() {}",
          "262: func (x *GetIdentityProviderRequest) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "305: func (x *OAuth2Config) String() string {",
          "309: func (*OAuth2Config) ProtoMessage() {}",
          "311: func (x *OAuth2Config) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "271:  return mi.MessageOf(x)",
          "272: }",
          "276:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{3}",
          "277: }",
          "280:  if x != nil {",
          "282:  }",
          "283:  return \"\"",
          "284: }",
          "287:  state         protoimpl.MessageState",
          "288:  sizeCache     protoimpl.SizeCache",
          "289:  unknownFields protoimpl.UnknownFields",
          "293: }",
          "297:  if protoimpl.UnsafeEnabled {",
          "298:   mi := &file_api_v2_idp_service_proto_msgTypes[4]",
          "299:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "275: func (*GetIdentityProviderRequest) Descriptor() ([]byte, []int) {",
          "279: func (x *GetIdentityProviderRequest) GetName() string {",
          "281:   return x.Name",
          "286: type GetIdentityProviderResponse struct {",
          "292:  IdentityProvider *IdentityProvider `protobuf:\"bytes,1,opt,name=identity_provider,json=identityProvider,proto3\" json:\"identity_provider,omitempty\"`",
          "295: func (x *GetIdentityProviderResponse) Reset() {",
          "",
          "[Added Lines]",
          "324: func (*OAuth2Config) Descriptor() ([]byte, []int) {",
          "328: func (x *OAuth2Config) GetClientId() string {",
          "330:   return x.ClientId",
          "335: func (x *OAuth2Config) GetClientSecret() string {",
          "336:  if x != nil {",
          "337:   return x.ClientSecret",
          "338:  }",
          "339:  return \"\"",
          "340: }",
          "342: func (x *OAuth2Config) GetAuthUrl() string {",
          "343:  if x != nil {",
          "344:   return x.AuthUrl",
          "345:  }",
          "346:  return \"\"",
          "347: }",
          "349: func (x *OAuth2Config) GetTokenUrl() string {",
          "350:  if x != nil {",
          "351:   return x.TokenUrl",
          "352:  }",
          "353:  return \"\"",
          "354: }",
          "356: func (x *OAuth2Config) GetUserInfoUrl() string {",
          "357:  if x != nil {",
          "358:   return x.UserInfoUrl",
          "359:  }",
          "360:  return \"\"",
          "361: }",
          "363: func (x *OAuth2Config) GetScopes() []string {",
          "364:  if x != nil {",
          "365:   return x.Scopes",
          "366:  }",
          "367:  return nil",
          "368: }",
          "370: func (x *OAuth2Config) GetFieldMapping() *FieldMapping {",
          "371:  if x != nil {",
          "372:   return x.FieldMapping",
          "373:  }",
          "374:  return nil",
          "375: }",
          "377: type ListIdentityProvidersRequest struct {",
          "383: func (x *ListIdentityProvidersRequest) Reset() {",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "301:  }",
          "302: }",
          "305:  return protoimpl.X.MessageStringOf(x)",
          "306: }",
          "311:  mi := &file_api_v2_idp_service_proto_msgTypes[4]",
          "312:  if protoimpl.UnsafeEnabled && x != nil {",
          "313:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "304: func (x *GetIdentityProviderResponse) String() string {",
          "308: func (*GetIdentityProviderResponse) ProtoMessage() {}",
          "310: func (x *GetIdentityProviderResponse) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "392: func (x *ListIdentityProvidersRequest) String() string {",
          "396: func (*ListIdentityProvidersRequest) ProtoMessage() {}",
          "398: func (x *ListIdentityProvidersRequest) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "319:  return mi.MessageOf(x)",
          "320: }",
          "324:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{4}",
          "325: }",
          "335:  state         protoimpl.MessageState",
          "336:  sizeCache     protoimpl.SizeCache",
          "337:  unknownFields protoimpl.UnknownFields",
          "341: }",
          "345:  if protoimpl.UnsafeEnabled {",
          "346:   mi := &file_api_v2_idp_service_proto_msgTypes[5]",
          "347:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "323: func (*GetIdentityProviderResponse) Descriptor() ([]byte, []int) {",
          "327: func (x *GetIdentityProviderResponse) GetIdentityProvider() *IdentityProvider {",
          "328:  if x != nil {",
          "329:   return x.IdentityProvider",
          "330:  }",
          "331:  return nil",
          "332: }",
          "334: type CreateIdentityProviderRequest struct {",
          "340:  IdentityProvider *IdentityProvider `protobuf:\"bytes,1,opt,name=identity_provider,json=identityProvider,proto3\" json:\"identity_provider,omitempty\"`",
          "343: func (x *CreateIdentityProviderRequest) Reset() {",
          "",
          "[Added Lines]",
          "411: func (*ListIdentityProvidersRequest) Descriptor() ([]byte, []int) {",
          "415: type ListIdentityProvidersResponse struct {",
          "420:  IdentityProviders []*IdentityProvider `protobuf:\"bytes,1,rep,name=identity_providers,json=identityProviders,proto3\" json:\"identity_providers,omitempty\"`",
          "423: func (x *ListIdentityProvidersResponse) Reset() {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "349:  }",
          "350: }",
          "353:  return protoimpl.X.MessageStringOf(x)",
          "354: }",
          "359:  mi := &file_api_v2_idp_service_proto_msgTypes[5]",
          "360:  if protoimpl.UnsafeEnabled && x != nil {",
          "361:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "352: func (x *CreateIdentityProviderRequest) String() string {",
          "356: func (*CreateIdentityProviderRequest) ProtoMessage() {}",
          "358: func (x *CreateIdentityProviderRequest) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "432: func (x *ListIdentityProvidersResponse) String() string {",
          "436: func (*ListIdentityProvidersResponse) ProtoMessage() {}",
          "438: func (x *ListIdentityProvidersResponse) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "367:  return mi.MessageOf(x)",
          "368: }",
          "372:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{5}",
          "373: }",
          "376:  if x != nil {",
          "378:  }",
          "379:  return nil",
          "380: }",
          "383:  state         protoimpl.MessageState",
          "384:  sizeCache     protoimpl.SizeCache",
          "385:  unknownFields protoimpl.UnknownFields",
          "389: }",
          "393:  if protoimpl.UnsafeEnabled {",
          "394:   mi := &file_api_v2_idp_service_proto_msgTypes[6]",
          "395:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "371: func (*CreateIdentityProviderRequest) Descriptor() ([]byte, []int) {",
          "375: func (x *CreateIdentityProviderRequest) GetIdentityProvider() *IdentityProvider {",
          "377:   return x.IdentityProvider",
          "382: type CreateIdentityProviderResponse struct {",
          "388:  IdentityProvider *IdentityProvider `protobuf:\"bytes,1,opt,name=identity_provider,json=identityProvider,proto3\" json:\"identity_provider,omitempty\"`",
          "391: func (x *CreateIdentityProviderResponse) Reset() {",
          "",
          "[Added Lines]",
          "451: func (*ListIdentityProvidersResponse) Descriptor() ([]byte, []int) {",
          "455: func (x *ListIdentityProvidersResponse) GetIdentityProviders() []*IdentityProvider {",
          "457:   return x.IdentityProviders",
          "462: type GetIdentityProviderRequest struct {",
          "469:  Name string `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`",
          "472: func (x *GetIdentityProviderRequest) Reset() {",
          "",
          "---------------",
          "--- Hunk 13 ---",
          "[Context before]",
          "397:  }",
          "398: }",
          "401:  return protoimpl.X.MessageStringOf(x)",
          "402: }",
          "407:  mi := &file_api_v2_idp_service_proto_msgTypes[6]",
          "408:  if protoimpl.UnsafeEnabled && x != nil {",
          "409:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "400: func (x *CreateIdentityProviderResponse) String() string {",
          "404: func (*CreateIdentityProviderResponse) ProtoMessage() {}",
          "406: func (x *CreateIdentityProviderResponse) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "481: func (x *GetIdentityProviderRequest) String() string {",
          "485: func (*GetIdentityProviderRequest) ProtoMessage() {}",
          "487: func (x *GetIdentityProviderRequest) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 14 ---",
          "[Context before]",
          "415:  return mi.MessageOf(x)",
          "416: }",
          "420:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{6}",
          "421: }",
          "424:  if x != nil {",
          "426:  }",
          "428: }",
          "431:  state         protoimpl.MessageState",
          "432:  sizeCache     protoimpl.SizeCache",
          "433:  unknownFields protoimpl.UnknownFields",
          "436:  IdentityProvider *IdentityProvider `protobuf:\"bytes,1,opt,name=identity_provider,json=identityProvider,proto3\" json:\"identity_provider,omitempty\"`",
          "440: }",
          "444:  if protoimpl.UnsafeEnabled {",
          "445:   mi := &file_api_v2_idp_service_proto_msgTypes[7]",
          "446:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "419: func (*CreateIdentityProviderResponse) Descriptor() ([]byte, []int) {",
          "423: func (x *CreateIdentityProviderResponse) GetIdentityProvider() *IdentityProvider {",
          "425:   return x.IdentityProvider",
          "427:  return nil",
          "430: type UpdateIdentityProviderRequest struct {",
          "439:  UpdateMask *fieldmaskpb.FieldMask `protobuf:\"bytes,2,opt,name=update_mask,json=updateMask,proto3\" json:\"update_mask,omitempty\"`",
          "442: func (x *UpdateIdentityProviderRequest) Reset() {",
          "",
          "[Added Lines]",
          "500: func (*GetIdentityProviderRequest) Descriptor() ([]byte, []int) {",
          "504: func (x *GetIdentityProviderRequest) GetName() string {",
          "506:   return x.Name",
          "508:  return \"\"",
          "511: type GetIdentityProviderResponse struct {",
          "520: func (x *GetIdentityProviderResponse) Reset() {",
          "",
          "---------------",
          "--- Hunk 15 ---",
          "[Context before]",
          "448:  }",
          "449: }",
          "452:  return protoimpl.X.MessageStringOf(x)",
          "453: }",
          "458:  mi := &file_api_v2_idp_service_proto_msgTypes[7]",
          "459:  if protoimpl.UnsafeEnabled && x != nil {",
          "460:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "451: func (x *UpdateIdentityProviderRequest) String() string {",
          "455: func (*UpdateIdentityProviderRequest) ProtoMessage() {}",
          "457: func (x *UpdateIdentityProviderRequest) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "529: func (x *GetIdentityProviderResponse) String() string {",
          "533: func (*GetIdentityProviderResponse) ProtoMessage() {}",
          "535: func (x *GetIdentityProviderResponse) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 16 ---",
          "[Context before]",
          "466:  return mi.MessageOf(x)",
          "467: }",
          "471:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{7}",
          "472: }",
          "475:  if x != nil {",
          "476:   return x.IdentityProvider",
          "477:  }",
          "478:  return nil",
          "479: }",
          "489:  state         protoimpl.MessageState",
          "490:  sizeCache     protoimpl.SizeCache",
          "491:  unknownFields protoimpl.UnknownFields",
          "494:  IdentityProvider *IdentityProvider `protobuf:\"bytes,1,opt,name=identity_provider,json=identityProvider,proto3\" json:\"identity_provider,omitempty\"`",
          "495: }",
          "499:  if protoimpl.UnsafeEnabled {",
          "500:   mi := &file_api_v2_idp_service_proto_msgTypes[8]",
          "501:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "470: func (*UpdateIdentityProviderRequest) Descriptor() ([]byte, []int) {",
          "474: func (x *UpdateIdentityProviderRequest) GetIdentityProvider() *IdentityProvider {",
          "481: func (x *UpdateIdentityProviderRequest) GetUpdateMask() *fieldmaskpb.FieldMask {",
          "482:  if x != nil {",
          "483:   return x.UpdateMask",
          "484:  }",
          "485:  return nil",
          "486: }",
          "488: type UpdateIdentityProviderResponse struct {",
          "497: func (x *UpdateIdentityProviderResponse) Reset() {",
          "",
          "[Added Lines]",
          "548: func (*GetIdentityProviderResponse) Descriptor() ([]byte, []int) {",
          "552: func (x *GetIdentityProviderResponse) GetIdentityProvider() *IdentityProvider {",
          "559: type CreateIdentityProviderRequest struct {",
          "568: func (x *CreateIdentityProviderRequest) Reset() {",
          "",
          "---------------",
          "--- Hunk 17 ---",
          "[Context before]",
          "503:  }",
          "504: }",
          "507:  return protoimpl.X.MessageStringOf(x)",
          "508: }",
          "513:  mi := &file_api_v2_idp_service_proto_msgTypes[8]",
          "514:  if protoimpl.UnsafeEnabled && x != nil {",
          "515:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "506: func (x *UpdateIdentityProviderResponse) String() string {",
          "510: func (*UpdateIdentityProviderResponse) ProtoMessage() {}",
          "512: func (x *UpdateIdentityProviderResponse) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "577: func (x *CreateIdentityProviderRequest) String() string {",
          "581: func (*CreateIdentityProviderRequest) ProtoMessage() {}",
          "583: func (x *CreateIdentityProviderRequest) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 18 ---",
          "[Context before]",
          "521:  return mi.MessageOf(x)",
          "522: }",
          "526:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{8}",
          "527: }",
          "530:  if x != nil {",
          "531:   return x.IdentityProvider",
          "532:  }",
          "533:  return nil",
          "534: }",
          "537:  state         protoimpl.MessageState",
          "538:  sizeCache     protoimpl.SizeCache",
          "539:  unknownFields protoimpl.UnknownFields",
          "544: }",
          "548:  if protoimpl.UnsafeEnabled {",
          "549:   mi := &file_api_v2_idp_service_proto_msgTypes[9]",
          "550:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "525: func (*UpdateIdentityProviderResponse) Descriptor() ([]byte, []int) {",
          "529: func (x *UpdateIdentityProviderResponse) GetIdentityProvider() *IdentityProvider {",
          "536: type DeleteIdentityProviderRequest struct {",
          "543:  Name string `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`",
          "546: func (x *DeleteIdentityProviderRequest) Reset() {",
          "",
          "[Added Lines]",
          "596: func (*CreateIdentityProviderRequest) Descriptor() ([]byte, []int) {",
          "600: func (x *CreateIdentityProviderRequest) GetIdentityProvider() *IdentityProvider {",
          "607: type CreateIdentityProviderResponse struct {",
          "613:  IdentityProvider *IdentityProvider `protobuf:\"bytes,1,opt,name=identity_provider,json=identityProvider,proto3\" json:\"identity_provider,omitempty\"`",
          "616: func (x *CreateIdentityProviderResponse) Reset() {",
          "",
          "---------------",
          "--- Hunk 19 ---",
          "[Context before]",
          "552:  }",
          "553: }",
          "556:  return protoimpl.X.MessageStringOf(x)",
          "557: }",
          "562:  mi := &file_api_v2_idp_service_proto_msgTypes[9]",
          "563:  if protoimpl.UnsafeEnabled && x != nil {",
          "564:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "555: func (x *DeleteIdentityProviderRequest) String() string {",
          "559: func (*DeleteIdentityProviderRequest) ProtoMessage() {}",
          "561: func (x *DeleteIdentityProviderRequest) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "625: func (x *CreateIdentityProviderResponse) String() string {",
          "629: func (*CreateIdentityProviderResponse) ProtoMessage() {}",
          "631: func (x *CreateIdentityProviderResponse) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 20 ---",
          "[Context before]",
          "570:  return mi.MessageOf(x)",
          "571: }",
          "575:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{9}",
          "576: }",
          "579:  if x != nil {",
          "581:  }",
          "583: }",
          "586:  state         protoimpl.MessageState",
          "587:  sizeCache     protoimpl.SizeCache",
          "588:  unknownFields protoimpl.UnknownFields",
          "589: }",
          "593:  if protoimpl.UnsafeEnabled {",
          "594:   mi := &file_api_v2_idp_service_proto_msgTypes[10]",
          "595:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "574: func (*DeleteIdentityProviderRequest) Descriptor() ([]byte, []int) {",
          "578: func (x *DeleteIdentityProviderRequest) GetName() string {",
          "580:   return x.Name",
          "582:  return \"\"",
          "585: type DeleteIdentityProviderResponse struct {",
          "591: func (x *DeleteIdentityProviderResponse) Reset() {",
          "",
          "[Added Lines]",
          "644: func (*CreateIdentityProviderResponse) Descriptor() ([]byte, []int) {",
          "648: func (x *CreateIdentityProviderResponse) GetIdentityProvider() *IdentityProvider {",
          "650:   return x.IdentityProvider",
          "652:  return nil",
          "655: type UpdateIdentityProviderRequest struct {",
          "661:  IdentityProvider *IdentityProvider `protobuf:\"bytes,1,opt,name=identity_provider,json=identityProvider,proto3\" json:\"identity_provider,omitempty\"`",
          "664:  UpdateMask *fieldmaskpb.FieldMask `protobuf:\"bytes,2,opt,name=update_mask,json=updateMask,proto3\" json:\"update_mask,omitempty\"`",
          "667: func (x *UpdateIdentityProviderRequest) Reset() {",
          "",
          "---------------",
          "--- Hunk 21 ---",
          "[Context before]",
          "597:  }",
          "598: }",
          "601:  return protoimpl.X.MessageStringOf(x)",
          "602: }",
          "607:  mi := &file_api_v2_idp_service_proto_msgTypes[10]",
          "608:  if protoimpl.UnsafeEnabled && x != nil {",
          "609:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "600: func (x *DeleteIdentityProviderResponse) String() string {",
          "604: func (*DeleteIdentityProviderResponse) ProtoMessage() {}",
          "606: func (x *DeleteIdentityProviderResponse) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "676: func (x *UpdateIdentityProviderRequest) String() string {",
          "680: func (*UpdateIdentityProviderRequest) ProtoMessage() {}",
          "682: func (x *UpdateIdentityProviderRequest) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 22 ---",
          "[Context before]",
          "615:  return mi.MessageOf(x)",
          "616: }",
          "620:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{10}",
          "621: }",
          "624:  state         protoimpl.MessageState",
          "625:  sizeCache     protoimpl.SizeCache",
          "626:  unknownFields protoimpl.UnknownFields",
          "632: }",
          "636:  if protoimpl.UnsafeEnabled {",
          "637:   mi := &file_api_v2_idp_service_proto_msgTypes[11]",
          "638:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "619: func (*DeleteIdentityProviderResponse) Descriptor() ([]byte, []int) {",
          "623: type IdentityProvider_Config struct {",
          "631:  Config isIdentityProvider_Config_Config `protobuf_oneof:\"config\"`",
          "634: func (x *IdentityProvider_Config) Reset() {",
          "",
          "[Added Lines]",
          "695: func (*UpdateIdentityProviderRequest) Descriptor() ([]byte, []int) {",
          "699: func (x *UpdateIdentityProviderRequest) GetIdentityProvider() *IdentityProvider {",
          "700:  if x != nil {",
          "701:   return x.IdentityProvider",
          "702:  }",
          "703:  return nil",
          "704: }",
          "706: func (x *UpdateIdentityProviderRequest) GetUpdateMask() *fieldmaskpb.FieldMask {",
          "707:  if x != nil {",
          "708:   return x.UpdateMask",
          "709:  }",
          "710:  return nil",
          "711: }",
          "713: type UpdateIdentityProviderResponse struct {",
          "719:  IdentityProvider *IdentityProvider `protobuf:\"bytes,1,opt,name=identity_provider,json=identityProvider,proto3\" json:\"identity_provider,omitempty\"`",
          "722: func (x *UpdateIdentityProviderResponse) Reset() {",
          "",
          "---------------",
          "--- Hunk 23 ---",
          "[Context before]",
          "640:  }",
          "641: }",
          "644:  return protoimpl.X.MessageStringOf(x)",
          "645: }",
          "650:  mi := &file_api_v2_idp_service_proto_msgTypes[11]",
          "651:  if protoimpl.UnsafeEnabled && x != nil {",
          "652:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "643: func (x *IdentityProvider_Config) String() string {",
          "647: func (*IdentityProvider_Config) ProtoMessage() {}",
          "649: func (x *IdentityProvider_Config) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "731: func (x *UpdateIdentityProviderResponse) String() string {",
          "735: func (*UpdateIdentityProviderResponse) ProtoMessage() {}",
          "737: func (x *UpdateIdentityProviderResponse) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 24 ---",
          "[Context before]",
          "658:  return mi.MessageOf(x)",
          "659: }",
          "671: }",
          "676:  }",
          "677:  return nil",
          "678: }",
          "691:  state         protoimpl.MessageState",
          "692:  sizeCache     protoimpl.SizeCache",
          "693:  unknownFields protoimpl.UnknownFields",
          "698: }",
          "702:  if protoimpl.UnsafeEnabled {",
          "703:   mi := &file_api_v2_idp_service_proto_msgTypes[12]",
          "704:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "662: func (*IdentityProvider_Config) Descriptor() ([]byte, []int) {",
          "663:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{0, 0}",
          "664: }",
          "666: func (m *IdentityProvider_Config) GetConfig() isIdentityProvider_Config_Config {",
          "667:  if m != nil {",
          "668:   return m.Config",
          "669:  }",
          "670:  return nil",
          "673: func (x *IdentityProvider_Config) GetOauth2() *IdentityProvider_Config_OAuth2 {",
          "674:  if x, ok := x.GetConfig().(*IdentityProvider_Config_Oauth2); ok {",
          "675:   return x.Oauth2",
          "680: type isIdentityProvider_Config_Config interface {",
          "681:  isIdentityProvider_Config_Config()",
          "682: }",
          "684: type IdentityProvider_Config_Oauth2 struct {",
          "685:  Oauth2 *IdentityProvider_Config_OAuth2 `protobuf:\"bytes,1,opt,name=oauth2,proto3,oneof\"`",
          "686: }",
          "688: func (*IdentityProvider_Config_Oauth2) isIdentityProvider_Config_Config() {}",
          "690: type IdentityProvider_Config_FieldMapping struct {",
          "695:  Identifier  string `protobuf:\"bytes,1,opt,name=identifier,proto3\" json:\"identifier,omitempty\"`",
          "696:  DisplayName string `protobuf:\"bytes,2,opt,name=display_name,json=displayName,proto3\" json:\"display_name,omitempty\"`",
          "697:  Email       string `protobuf:\"bytes,3,opt,name=email,proto3\" json:\"email,omitempty\"`",
          "700: func (x *IdentityProvider_Config_FieldMapping) Reset() {",
          "",
          "[Added Lines]",
          "750: func (*UpdateIdentityProviderResponse) Descriptor() ([]byte, []int) {",
          "751:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{11}",
          "754: func (x *UpdateIdentityProviderResponse) GetIdentityProvider() *IdentityProvider {",
          "755:  if x != nil {",
          "756:   return x.IdentityProvider",
          "761: type DeleteIdentityProviderRequest struct {",
          "768:  Name string `protobuf:\"bytes,1,opt,name=name,proto3\" json:\"name,omitempty\"`",
          "771: func (x *DeleteIdentityProviderRequest) Reset() {",
          "",
          "---------------",
          "--- Hunk 25 ---",
          "[Context before]",
          "706:  }",
          "707: }",
          "710:  return protoimpl.X.MessageStringOf(x)",
          "711: }",
          "716:  mi := &file_api_v2_idp_service_proto_msgTypes[12]",
          "717:  if protoimpl.UnsafeEnabled && x != nil {",
          "718:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "709: func (x *IdentityProvider_Config_FieldMapping) String() string {",
          "713: func (*IdentityProvider_Config_FieldMapping) ProtoMessage() {}",
          "715: func (x *IdentityProvider_Config_FieldMapping) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "780: func (x *DeleteIdentityProviderRequest) String() string {",
          "784: func (*DeleteIdentityProviderRequest) ProtoMessage() {}",
          "786: func (x *DeleteIdentityProviderRequest) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 26 ---",
          "[Context before]",
          "724:  return mi.MessageOf(x)",
          "725: }",
          "744: }",
          "747:  if x != nil {",
          "749:  }",
          "750:  return \"\"",
          "751: }",
          "754:  state         protoimpl.MessageState",
          "755:  sizeCache     protoimpl.SizeCache",
          "756:  unknownFields protoimpl.UnknownFields",
          "765: }",
          "769:  if protoimpl.UnsafeEnabled {",
          "770:   mi := &file_api_v2_idp_service_proto_msgTypes[13]",
          "771:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "728: func (*IdentityProvider_Config_FieldMapping) Descriptor() ([]byte, []int) {",
          "729:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{0, 0, 0}",
          "730: }",
          "732: func (x *IdentityProvider_Config_FieldMapping) GetIdentifier() string {",
          "733:  if x != nil {",
          "734:   return x.Identifier",
          "735:  }",
          "736:  return \"\"",
          "737: }",
          "739: func (x *IdentityProvider_Config_FieldMapping) GetDisplayName() string {",
          "740:  if x != nil {",
          "741:   return x.DisplayName",
          "742:  }",
          "743:  return \"\"",
          "746: func (x *IdentityProvider_Config_FieldMapping) GetEmail() string {",
          "748:   return x.Email",
          "753: type IdentityProvider_Config_OAuth2 struct {",
          "758:  ClientId     string                                `protobuf:\"bytes,1,opt,name=client_id,json=clientId,proto3\" json:\"client_id,omitempty\"`",
          "759:  ClientSecret string                                `protobuf:\"bytes,2,opt,name=client_secret,json=clientSecret,proto3\" json:\"client_secret,omitempty\"`",
          "760:  AuthUrl      string                                `protobuf:\"bytes,3,opt,name=auth_url,json=authUrl,proto3\" json:\"auth_url,omitempty\"`",
          "761:  TokenUrl     string                                `protobuf:\"bytes,4,opt,name=token_url,json=tokenUrl,proto3\" json:\"token_url,omitempty\"`",
          "762:  UserInfoUrl  string                                `protobuf:\"bytes,5,opt,name=user_info_url,json=userInfoUrl,proto3\" json:\"user_info_url,omitempty\"`",
          "763:  Scopes       []string                              `protobuf:\"bytes,6,rep,name=scopes,proto3\" json:\"scopes,omitempty\"`",
          "764:  FieldMapping *IdentityProvider_Config_FieldMapping `protobuf:\"bytes,7,opt,name=field_mapping,json=fieldMapping,proto3\" json:\"field_mapping,omitempty\"`",
          "767: func (x *IdentityProvider_Config_OAuth2) Reset() {",
          "",
          "[Added Lines]",
          "799: func (*DeleteIdentityProviderRequest) Descriptor() ([]byte, []int) {",
          "800:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{12}",
          "803: func (x *DeleteIdentityProviderRequest) GetName() string {",
          "805:   return x.Name",
          "810: type DeleteIdentityProviderResponse struct {",
          "816: func (x *DeleteIdentityProviderResponse) Reset() {",
          "",
          "---------------",
          "--- Hunk 27 ---",
          "[Context before]",
          "773:  }",
          "774: }",
          "777:  return protoimpl.X.MessageStringOf(x)",
          "778: }",
          "783:  mi := &file_api_v2_idp_service_proto_msgTypes[13]",
          "784:  if protoimpl.UnsafeEnabled && x != nil {",
          "785:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "776: func (x *IdentityProvider_Config_OAuth2) String() string {",
          "780: func (*IdentityProvider_Config_OAuth2) ProtoMessage() {}",
          "782: func (x *IdentityProvider_Config_OAuth2) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "825: func (x *DeleteIdentityProviderResponse) String() string {",
          "829: func (*DeleteIdentityProviderResponse) ProtoMessage() {}",
          "831: func (x *DeleteIdentityProviderResponse) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 28 ---",
          "[Context before]",
          "791:  return mi.MessageOf(x)",
          "792: }",
          "846: }",
          "848: var File_api_v2_idp_service_proto protoreflect.FileDescriptor",
          "",
          "[Removed Lines]",
          "795: func (*IdentityProvider_Config_OAuth2) Descriptor() ([]byte, []int) {",
          "796:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{0, 0, 1}",
          "797: }",
          "799: func (x *IdentityProvider_Config_OAuth2) GetClientId() string {",
          "800:  if x != nil {",
          "801:   return x.ClientId",
          "802:  }",
          "803:  return \"\"",
          "804: }",
          "806: func (x *IdentityProvider_Config_OAuth2) GetClientSecret() string {",
          "807:  if x != nil {",
          "808:   return x.ClientSecret",
          "809:  }",
          "810:  return \"\"",
          "811: }",
          "813: func (x *IdentityProvider_Config_OAuth2) GetAuthUrl() string {",
          "814:  if x != nil {",
          "815:   return x.AuthUrl",
          "816:  }",
          "817:  return \"\"",
          "818: }",
          "820: func (x *IdentityProvider_Config_OAuth2) GetTokenUrl() string {",
          "821:  if x != nil {",
          "822:   return x.TokenUrl",
          "823:  }",
          "824:  return \"\"",
          "825: }",
          "827: func (x *IdentityProvider_Config_OAuth2) GetUserInfoUrl() string {",
          "828:  if x != nil {",
          "829:   return x.UserInfoUrl",
          "830:  }",
          "831:  return \"\"",
          "832: }",
          "834: func (x *IdentityProvider_Config_OAuth2) GetScopes() []string {",
          "835:  if x != nil {",
          "836:   return x.Scopes",
          "837:  }",
          "838:  return nil",
          "839: }",
          "841: func (x *IdentityProvider_Config_OAuth2) GetFieldMapping() *IdentityProvider_Config_FieldMapping {",
          "842:  if x != nil {",
          "843:   return x.FieldMapping",
          "844:  }",
          "845:  return nil",
          "",
          "[Added Lines]",
          "844: func (*DeleteIdentityProviderResponse) Descriptor() ([]byte, []int) {",
          "845:  return file_api_v2_idp_service_proto_rawDescGZIP(), []int{13}",
          "",
          "---------------",
          "--- Hunk 29 ---",
          "[Context before]",
          "856:  0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,",
          "857:  0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,",
          "858:  0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,",
          "860:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,",
          "861:  0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x79,",
          "862:  0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "",
          "[Removed Lines]",
          "859:  0x6f, 0x22, 0xeb, 0x05, 0x0a, 0x10, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "",
          "[Added Lines]",
          "859:  0x6f, 0x22, 0x8a, 0x02, 0x0a, 0x10, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "",
          "---------------",
          "--- Hunk 30 ---",
          "[Context before]",
          "866:  0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x64, 0x65,",
          "867:  0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04,",
          "868:  0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,",
          "871:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "879:  0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e,",
          "880:  0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64,",
          "881:  0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70,",
          "882:  0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,",
          "883:  0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,",
          "884:  0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,",
          "950:  0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,",
          "952:  0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,",
          "953:  0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,",
          "954:  0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69,",
          "955:  0x64, 0x65, 0x72, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,",
          "957:  0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,",
          "976:  0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,",
          "978:  0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69,",
          "993:  0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,",
          "1010:  0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,",
          "1029: }",
          "1031: var (",
          "",
          "[Removed Lines]",
          "869:  0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,",
          "870:  0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "872:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63,",
          "873:  0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0xdd, 0x03, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,",
          "874:  0x12, 0x46, 0x0a, 0x06, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,",
          "875:  0x32, 0x2c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,",
          "876:  0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,",
          "877:  0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x48, 0x00,",
          "878:  0x52, 0x06, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x1a, 0x67, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c,",
          "885:  0x6c, 0x1a, 0x97, 0x02, 0x0a, 0x06, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x12, 0x1b, 0x0a, 0x09,",
          "886:  0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,",
          "887:  0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69,",
          "888:  0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,",
          "889:  0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x19,",
          "890:  0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,",
          "891:  0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x6b,",
          "892:  0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f,",
          "893:  0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,",
          "894:  0x6e, 0x66, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75,",
          "895:  0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63,",
          "896:  0x6f, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70,",
          "897:  0x65, 0x73, 0x12, 0x57, 0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x70,",
          "898:  0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "899:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "900:  0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,",
          "901:  0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x66,",
          "902:  0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x63,",
          "903:  0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,",
          "904:  0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,",
          "905:  0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x41, 0x55, 0x54, 0x48, 0x32, 0x10, 0x01, 0x22,",
          "906:  0x1e, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,",
          "907:  0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,",
          "908:  0x6e, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,",
          "909:  0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,",
          "910:  0x12, 0x4d, 0x0a, 0x12, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f,",
          "911:  0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d,",
          "912:  0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e,",
          "913:  0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x11, 0x69, 0x64,",
          "914:  0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x22,",
          "915:  0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "916:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,",
          "917:  0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,",
          "918:  0x65, 0x22, 0x6a, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,",
          "919:  0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,",
          "920:  0x12, 0x4b, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f,",
          "921:  0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65,",
          "922:  0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74,",
          "923:  0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x69, 0x64, 0x65,",
          "924:  0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x6c, 0x0a,",
          "925:  0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,",
          "926:  0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b,",
          "927:  0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,",
          "928:  0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "929:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "930:  0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74,",
          "931:  0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x6d, 0x0a, 0x1e, 0x43,",
          "932:  0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,",
          "933:  0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,",
          "934:  0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,",
          "935:  0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "936:  0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,",
          "937:  0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,",
          "938:  0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0xa9, 0x01, 0x0a, 0x1d, 0x55,",
          "939:  0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,",
          "940:  0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x11,",
          "941:  0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,",
          "942:  0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e,",
          "943:  0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,",
          "944:  0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "945:  0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64,",
          "946:  0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,",
          "947:  0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,",
          "948:  0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,",
          "949:  0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x6d, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,",
          "951:  0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e,",
          "956:  0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x33, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,",
          "958:  0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,",
          "959:  0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x44, 0x65,",
          "960:  0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76,",
          "961:  0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf8, 0x06, 0x0a,",
          "962:  0x17, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,",
          "963:  0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73,",
          "964:  0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,",
          "965:  0x72, 0x73, 0x12, 0x2a, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,",
          "966:  0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "967:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,",
          "968:  0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69,",
          "969:  0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,",
          "970:  0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4,",
          "971:  0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x64, 0x65,",
          "972:  0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x9d,",
          "973:  0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "974:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x28, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "975:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "977:  0x1a, 0x29, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,",
          "979:  0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0xda, 0x41, 0x04,",
          "980:  0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69,",
          "981:  0x2f, 0x76, 0x32, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,",
          "982:  0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x96,",
          "983:  0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "984:  0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "985:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,",
          "986:  0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,",
          "987:  0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "988:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e,",
          "989:  0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,",
          "990:  0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x19, 0x2f, 0x61,",
          "991:  0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "992:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0xe4, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61,",
          "994:  0x65, 0x72, 0x12, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,",
          "995:  0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,",
          "996:  0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,",
          "997:  0x2c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x55,",
          "998:  0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,",
          "999:  0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0xda,",
          "1000:  0x41, 0x1d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,",
          "1001:  0x64, 0x65, 0x72, 0x2c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x82,",
          "1002:  0xd3, 0xe4, 0x93, 0x02, 0x49, 0x3a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,",
          "1003:  0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x32, 0x34, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,",
          "1004:  0x32, 0x2f, 0x7b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76,",
          "1005:  0x69, 0x64, 0x65, 0x72, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,",
          "1006:  0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xa6,",
          "1007:  0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "1008:  0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "1009:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,",
          "1011:  0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "1012:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e,",
          "1013:  0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,",
          "1014:  0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4,",
          "1015:  0x93, 0x02, 0x24, 0x2a, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x7b, 0x6e, 0x61,",
          "1016:  0x6d, 0x65, 0x3d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69,",
          "1017:  0x64, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x42, 0xa7, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e,",
          "1018:  0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x42, 0x0f, 0x49, 0x64,",
          "1019:  0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,",
          "1020:  0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x6d,",
          "1021:  0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,",
          "1022:  0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x3b, 0x61, 0x70, 0x69, 0x76,",
          "1023:  0x32, 0xa2, 0x02, 0x03, 0x4d, 0x41, 0x58, 0xaa, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x2e,",
          "1024:  0x41, 0x70, 0x69, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41,",
          "1025:  0x70, 0x69, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x18, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70,",
          "1026:  0x69, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,",
          "1027:  0xea, 0x02, 0x0e, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56,",
          "1028:  0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,",
          "",
          "[Added Lines]",
          "869:  0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,",
          "870:  0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "872:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f,",
          "873:  0x6e, 0x66, 0x69, 0x67, 0x22, 0x28, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10,",
          "874:  0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,",
          "875:  0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x41, 0x55, 0x54, 0x48, 0x32, 0x10, 0x01, 0x22, 0x58,",
          "876:  0x0a, 0x16, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,",
          "877:  0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x06, 0x6f, 0x61, 0x75, 0x74,",
          "878:  0x68, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "879:  0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6f,",
          "880:  0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x42, 0x08,",
          "881:  0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x67, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c,",
          "888:  0x6c, 0x22, 0x85, 0x02, 0x0a, 0x0c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6f, 0x6e, 0x66,",
          "889:  0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,",
          "890:  0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,",
          "891:  0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,",
          "892:  0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65,",
          "893:  0x63, 0x72, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c,",
          "894:  0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x12,",
          "895:  0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,",
          "896:  0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0d,",
          "897:  0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,",
          "898:  0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x72, 0x6c,",
          "899:  0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,",
          "900:  0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c,",
          "901:  0x64, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,",
          "902:  0x1a, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x46,",
          "903:  0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x66, 0x69, 0x65,",
          "904:  0x6c, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x22, 0x1e, 0x0a, 0x1c, 0x4c, 0x69, 0x73,",
          "905:  0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,",
          "906:  0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6e, 0x0a, 0x1d, 0x4c, 0x69, 0x73,",
          "907:  0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,",
          "908:  0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x69, 0x64,",
          "909:  0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73,",
          "910:  0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "911:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "912:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,",
          "913:  0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x22, 0x30, 0x0a, 0x1a, 0x47, 0x65, 0x74,",
          "915:  0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,",
          "916:  0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x1b, 0x47,",
          "917:  0x65, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,",
          "918:  0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x11, 0x69, 0x64,",
          "919:  0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,",
          "920:  0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70,",
          "921:  0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,",
          "922:  0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,",
          "923:  0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x6c, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74,",
          "924:  0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,",
          "925:  0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e,",
          "930:  0x76, 0x69, 0x64, 0x65, 0x72, 0x22, 0x6d, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,",
          "932:  0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74,",
          "933:  0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,",
          "934:  0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,",
          "935:  0x32, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,",
          "936:  0x65, 0x72, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76,",
          "937:  0x69, 0x64, 0x65, 0x72, 0x22, 0xa9, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,",
          "938:  0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52,",
          "939:  0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,",
          "940:  0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,",
          "941:  0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,",
          "942:  0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,",
          "943:  0x72, 0x52, 0x10, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69,",
          "944:  0x64, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61,",
          "945:  0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,",
          "946:  0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,",
          "947:  0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b,",
          "948:  0x22, 0x6d, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,",
          "949:  0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,",
          "950:  0x73, 0x65, 0x12, 0x4b, 0x0a, 0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70,",
          "951:  0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,",
          "952:  0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x49, 0x64, 0x65,",
          "953:  0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x69,",
          "954:  0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x22,",
          "955:  0x33, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "957:  0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,",
          "958:  0x6e, 0x61, 0x6d, 0x65, 0x22, 0x20, 0x0a, 0x1e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64,",
          "959:  0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65,",
          "960:  0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xf8, 0x06, 0x0a, 0x17, 0x49, 0x64, 0x65, 0x6e, 0x74,",
          "961:  0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,",
          "962:  0x63, 0x65, 0x12, 0x93, 0x01, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74,",
          "963:  0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x2e, 0x6d,",
          "964:  0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74,",
          "965:  0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,",
          "966:  0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "967:  0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x65, 0x6e,",
          "968:  0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,",
          "969:  0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f,",
          "970:  0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,",
          "971:  0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x9d, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74,",
          "972:  0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,",
          "973:  0x12, 0x28, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,",
          "975:  0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x65, 0x6d,",
          "976:  0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x65,",
          "977:  0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,",
          "978:  0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3,",
          "979:  0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x7b, 0x6e,",
          "980:  0x61, 0x6d, 0x65, 0x3d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76,",
          "981:  0x69, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x96, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65,",
          "982:  0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69,",
          "983:  0x64, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,",
          "984:  0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "985:  0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,",
          "986:  0x1a, 0x2c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,",
          "987:  0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "988:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21,",
          "989:  0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f,",
          "990:  0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,",
          "991:  0x73, 0x12, 0xe4, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e,",
          "992:  0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x6d,",
          "993:  0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61,",
          "995:  0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "996:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,",
          "998:  0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0xda, 0x41, 0x1d, 0x69, 0x64, 0x65, 0x6e,",
          "999:  0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2c, 0x75, 0x70,",
          "1000:  0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x49, 0x3a,",
          "1001:  0x11, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,",
          "1002:  0x65, 0x72, 0x32, 0x34, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x7b, 0x69, 0x64, 0x65,",
          "1003:  0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x2e, 0x6e,",
          "1004:  0x61, 0x6d, 0x65, 0x3d, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76,",
          "1005:  0x69, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xa6, 0x01, 0x0a, 0x16, 0x44, 0x65, 0x6c,",
          "1006:  0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69,",
          "1007:  0x64, 0x65, 0x72, 0x12, 0x2b, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,",
          "1008:  0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,",
          "1009:  0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,",
          "1010:  0x1a, 0x2c, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,",
          "1011:  0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72,",
          "1012:  0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31,",
          "1013:  0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x2a, 0x22, 0x2f,",
          "1014:  0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x69, 0x64, 0x65,",
          "1015:  0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x2a,",
          "1016:  0x7d, 0x42, 0xa7, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e,",
          "1017:  0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x42, 0x0f, 0x49, 0x64, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69,",
          "1018:  0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75,",
          "1019:  0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x6d,",
          "1020:  0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61,",
          "1021:  0x70, 0x69, 0x2f, 0x76, 0x32, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x4d, 0x41,",
          "1022:  0x58, 0xaa, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x32,",
          "1023:  0xca, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32, 0xe2,",
          "1024:  0x02, 0x18, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32, 0x5c, 0x47,",
          "1025:  0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x4d, 0x65, 0x6d,",
          "1026:  0x6f, 0x73, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f,",
          "1027:  0x74, 0x6f, 0x33,",
          "",
          "---------------",
          "--- Hunk 31 ---",
          "[Context before]",
          "1043: var file_api_v2_idp_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)",
          "1044: var file_api_v2_idp_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)",
          "1045: var file_api_v2_idp_service_proto_goTypes = []interface{}{",
          "1062: }",
          "1063: var file_api_v2_idp_service_proto_depIdxs = []int32{",
          "1064:  0,  // 0: memos.api.v2.IdentityProvider.type:type_name -> memos.api.v2.IdentityProvider.Type",
          "1085:  16, // [16:21] is the sub-list for method output_type",
          "1086:  11, // [11:16] is the sub-list for method input_type",
          "1087:  11, // [11:11] is the sub-list for extension type_name",
          "",
          "[Removed Lines]",
          "1046:  (IdentityProvider_Type)(0),                   // 0: memos.api.v2.IdentityProvider.Type",
          "1047:  (*IdentityProvider)(nil),                     // 1: memos.api.v2.IdentityProvider",
          "1048:  (*ListIdentityProvidersRequest)(nil),         // 2: memos.api.v2.ListIdentityProvidersRequest",
          "1049:  (*ListIdentityProvidersResponse)(nil),        // 3: memos.api.v2.ListIdentityProvidersResponse",
          "1050:  (*GetIdentityProviderRequest)(nil),           // 4: memos.api.v2.GetIdentityProviderRequest",
          "1051:  (*GetIdentityProviderResponse)(nil),          // 5: memos.api.v2.GetIdentityProviderResponse",
          "1052:  (*CreateIdentityProviderRequest)(nil),        // 6: memos.api.v2.CreateIdentityProviderRequest",
          "1053:  (*CreateIdentityProviderResponse)(nil),       // 7: memos.api.v2.CreateIdentityProviderResponse",
          "1054:  (*UpdateIdentityProviderRequest)(nil),        // 8: memos.api.v2.UpdateIdentityProviderRequest",
          "1055:  (*UpdateIdentityProviderResponse)(nil),       // 9: memos.api.v2.UpdateIdentityProviderResponse",
          "1056:  (*DeleteIdentityProviderRequest)(nil),        // 10: memos.api.v2.DeleteIdentityProviderRequest",
          "1057:  (*DeleteIdentityProviderResponse)(nil),       // 11: memos.api.v2.DeleteIdentityProviderResponse",
          "1058:  (*IdentityProvider_Config)(nil),              // 12: memos.api.v2.IdentityProvider.Config",
          "1059:  (*IdentityProvider_Config_FieldMapping)(nil), // 13: memos.api.v2.IdentityProvider.Config.FieldMapping",
          "1060:  (*IdentityProvider_Config_OAuth2)(nil),       // 14: memos.api.v2.IdentityProvider.Config.OAuth2",
          "1061:  (*fieldmaskpb.FieldMask)(nil),                // 15: google.protobuf.FieldMask",
          "1065:  12, // 1: memos.api.v2.IdentityProvider.config:type_name -> memos.api.v2.IdentityProvider.Config",
          "1066:  1,  // 2: memos.api.v2.ListIdentityProvidersResponse.identity_providers:type_name -> memos.api.v2.IdentityProvider",
          "1067:  1,  // 3: memos.api.v2.GetIdentityProviderResponse.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1068:  1,  // 4: memos.api.v2.CreateIdentityProviderRequest.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1069:  1,  // 5: memos.api.v2.CreateIdentityProviderResponse.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1070:  1,  // 6: memos.api.v2.UpdateIdentityProviderRequest.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1071:  15, // 7: memos.api.v2.UpdateIdentityProviderRequest.update_mask:type_name -> google.protobuf.FieldMask",
          "1072:  1,  // 8: memos.api.v2.UpdateIdentityProviderResponse.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1073:  14, // 9: memos.api.v2.IdentityProvider.Config.oauth2:type_name -> memos.api.v2.IdentityProvider.Config.OAuth2",
          "1074:  13, // 10: memos.api.v2.IdentityProvider.Config.OAuth2.field_mapping:type_name -> memos.api.v2.IdentityProvider.Config.FieldMapping",
          "1075:  2,  // 11: memos.api.v2.IdentityProviderService.ListIdentityProviders:input_type -> memos.api.v2.ListIdentityProvidersRequest",
          "1076:  4,  // 12: memos.api.v2.IdentityProviderService.GetIdentityProvider:input_type -> memos.api.v2.GetIdentityProviderRequest",
          "1077:  6,  // 13: memos.api.v2.IdentityProviderService.CreateIdentityProvider:input_type -> memos.api.v2.CreateIdentityProviderRequest",
          "1078:  8,  // 14: memos.api.v2.IdentityProviderService.UpdateIdentityProvider:input_type -> memos.api.v2.UpdateIdentityProviderRequest",
          "1079:  10, // 15: memos.api.v2.IdentityProviderService.DeleteIdentityProvider:input_type -> memos.api.v2.DeleteIdentityProviderRequest",
          "1080:  3,  // 16: memos.api.v2.IdentityProviderService.ListIdentityProviders:output_type -> memos.api.v2.ListIdentityProvidersResponse",
          "1081:  5,  // 17: memos.api.v2.IdentityProviderService.GetIdentityProvider:output_type -> memos.api.v2.GetIdentityProviderResponse",
          "1082:  7,  // 18: memos.api.v2.IdentityProviderService.CreateIdentityProvider:output_type -> memos.api.v2.CreateIdentityProviderResponse",
          "1083:  9,  // 19: memos.api.v2.IdentityProviderService.UpdateIdentityProvider:output_type -> memos.api.v2.UpdateIdentityProviderResponse",
          "1084:  11, // 20: memos.api.v2.IdentityProviderService.DeleteIdentityProvider:output_type -> memos.api.v2.DeleteIdentityProviderResponse",
          "",
          "[Added Lines]",
          "1045:  (IdentityProvider_Type)(0),             // 0: memos.api.v2.IdentityProvider.Type",
          "1046:  (*IdentityProvider)(nil),               // 1: memos.api.v2.IdentityProvider",
          "1047:  (*IdentityProviderConfig)(nil),         // 2: memos.api.v2.IdentityProviderConfig",
          "1048:  (*FieldMapping)(nil),                   // 3: memos.api.v2.FieldMapping",
          "1049:  (*OAuth2Config)(nil),                   // 4: memos.api.v2.OAuth2Config",
          "1050:  (*ListIdentityProvidersRequest)(nil),   // 5: memos.api.v2.ListIdentityProvidersRequest",
          "1051:  (*ListIdentityProvidersResponse)(nil),  // 6: memos.api.v2.ListIdentityProvidersResponse",
          "1052:  (*GetIdentityProviderRequest)(nil),     // 7: memos.api.v2.GetIdentityProviderRequest",
          "1053:  (*GetIdentityProviderResponse)(nil),    // 8: memos.api.v2.GetIdentityProviderResponse",
          "1054:  (*CreateIdentityProviderRequest)(nil),  // 9: memos.api.v2.CreateIdentityProviderRequest",
          "1055:  (*CreateIdentityProviderResponse)(nil), // 10: memos.api.v2.CreateIdentityProviderResponse",
          "1056:  (*UpdateIdentityProviderRequest)(nil),  // 11: memos.api.v2.UpdateIdentityProviderRequest",
          "1057:  (*UpdateIdentityProviderResponse)(nil), // 12: memos.api.v2.UpdateIdentityProviderResponse",
          "1058:  (*DeleteIdentityProviderRequest)(nil),  // 13: memos.api.v2.DeleteIdentityProviderRequest",
          "1059:  (*DeleteIdentityProviderResponse)(nil), // 14: memos.api.v2.DeleteIdentityProviderResponse",
          "1060:  (*fieldmaskpb.FieldMask)(nil),          // 15: google.protobuf.FieldMask",
          "1064:  2,  // 1: memos.api.v2.IdentityProvider.config:type_name -> memos.api.v2.IdentityProviderConfig",
          "1065:  4,  // 2: memos.api.v2.IdentityProviderConfig.oauth2:type_name -> memos.api.v2.OAuth2Config",
          "1066:  3,  // 3: memos.api.v2.OAuth2Config.field_mapping:type_name -> memos.api.v2.FieldMapping",
          "1067:  1,  // 4: memos.api.v2.ListIdentityProvidersResponse.identity_providers:type_name -> memos.api.v2.IdentityProvider",
          "1068:  1,  // 5: memos.api.v2.GetIdentityProviderResponse.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1069:  1,  // 6: memos.api.v2.CreateIdentityProviderRequest.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1070:  1,  // 7: memos.api.v2.CreateIdentityProviderResponse.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1071:  1,  // 8: memos.api.v2.UpdateIdentityProviderRequest.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1072:  15, // 9: memos.api.v2.UpdateIdentityProviderRequest.update_mask:type_name -> google.protobuf.FieldMask",
          "1073:  1,  // 10: memos.api.v2.UpdateIdentityProviderResponse.identity_provider:type_name -> memos.api.v2.IdentityProvider",
          "1074:  5,  // 11: memos.api.v2.IdentityProviderService.ListIdentityProviders:input_type -> memos.api.v2.ListIdentityProvidersRequest",
          "1075:  7,  // 12: memos.api.v2.IdentityProviderService.GetIdentityProvider:input_type -> memos.api.v2.GetIdentityProviderRequest",
          "1076:  9,  // 13: memos.api.v2.IdentityProviderService.CreateIdentityProvider:input_type -> memos.api.v2.CreateIdentityProviderRequest",
          "1077:  11, // 14: memos.api.v2.IdentityProviderService.UpdateIdentityProvider:input_type -> memos.api.v2.UpdateIdentityProviderRequest",
          "1078:  13, // 15: memos.api.v2.IdentityProviderService.DeleteIdentityProvider:input_type -> memos.api.v2.DeleteIdentityProviderRequest",
          "1079:  6,  // 16: memos.api.v2.IdentityProviderService.ListIdentityProviders:output_type -> memos.api.v2.ListIdentityProvidersResponse",
          "1080:  8,  // 17: memos.api.v2.IdentityProviderService.GetIdentityProvider:output_type -> memos.api.v2.GetIdentityProviderResponse",
          "1081:  10, // 18: memos.api.v2.IdentityProviderService.CreateIdentityProvider:output_type -> memos.api.v2.CreateIdentityProviderResponse",
          "1082:  12, // 19: memos.api.v2.IdentityProviderService.UpdateIdentityProvider:output_type -> memos.api.v2.UpdateIdentityProviderResponse",
          "1083:  14, // 20: memos.api.v2.IdentityProviderService.DeleteIdentityProvider:output_type -> memos.api.v2.DeleteIdentityProviderResponse",
          "",
          "---------------",
          "--- Hunk 32 ---",
          "[Context before]",
          "1108:    }",
          "1109:   }",
          "1110:   file_api_v2_idp_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {",
          "1112:    case 0:",
          "1113:     return &v.state",
          "1114:    case 1:",
          "",
          "[Removed Lines]",
          "1111:    switch v := v.(*ListIdentityProvidersRequest); i {",
          "",
          "[Added Lines]",
          "1110:    switch v := v.(*IdentityProviderConfig); i {",
          "",
          "---------------",
          "--- Hunk 33 ---",
          "[Context before]",
          "1120:    }",
          "1121:   }",
          "1122:   file_api_v2_idp_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {",
          "1124:    case 0:",
          "1125:     return &v.state",
          "1126:    case 1:",
          "",
          "[Removed Lines]",
          "1123:    switch v := v.(*ListIdentityProvidersResponse); i {",
          "",
          "[Added Lines]",
          "1122:    switch v := v.(*FieldMapping); i {",
          "",
          "---------------",
          "--- Hunk 34 ---",
          "[Context before]",
          "1132:    }",
          "1133:   }",
          "1134:   file_api_v2_idp_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {",
          "1136:    case 0:",
          "1137:     return &v.state",
          "1138:    case 1:",
          "",
          "[Removed Lines]",
          "1135:    switch v := v.(*GetIdentityProviderRequest); i {",
          "",
          "[Added Lines]",
          "1134:    switch v := v.(*OAuth2Config); i {",
          "",
          "---------------",
          "--- Hunk 35 ---",
          "[Context before]",
          "1144:    }",
          "1145:   }",
          "1146:   file_api_v2_idp_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {",
          "1148:    case 0:",
          "1149:     return &v.state",
          "1150:    case 1:",
          "",
          "[Removed Lines]",
          "1147:    switch v := v.(*GetIdentityProviderResponse); i {",
          "",
          "[Added Lines]",
          "1146:    switch v := v.(*ListIdentityProvidersRequest); i {",
          "",
          "---------------",
          "--- Hunk 36 ---",
          "[Context before]",
          "1156:    }",
          "1157:   }",
          "1158:   file_api_v2_idp_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {",
          "1160:    case 0:",
          "1161:     return &v.state",
          "1162:    case 1:",
          "",
          "[Removed Lines]",
          "1159:    switch v := v.(*CreateIdentityProviderRequest); i {",
          "",
          "[Added Lines]",
          "1158:    switch v := v.(*ListIdentityProvidersResponse); i {",
          "",
          "---------------",
          "--- Hunk 37 ---",
          "[Context before]",
          "1168:    }",
          "1169:   }",
          "1170:   file_api_v2_idp_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {",
          "1172:    case 0:",
          "1173:     return &v.state",
          "1174:    case 1:",
          "",
          "[Removed Lines]",
          "1171:    switch v := v.(*CreateIdentityProviderResponse); i {",
          "",
          "[Added Lines]",
          "1170:    switch v := v.(*GetIdentityProviderRequest); i {",
          "",
          "---------------",
          "--- Hunk 38 ---",
          "[Context before]",
          "1180:    }",
          "1181:   }",
          "1182:   file_api_v2_idp_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {",
          "1184:    case 0:",
          "1185:     return &v.state",
          "1186:    case 1:",
          "",
          "[Removed Lines]",
          "1183:    switch v := v.(*UpdateIdentityProviderRequest); i {",
          "",
          "[Added Lines]",
          "1182:    switch v := v.(*GetIdentityProviderResponse); i {",
          "",
          "---------------",
          "--- Hunk 39 ---",
          "[Context before]",
          "1192:    }",
          "1193:   }",
          "1194:   file_api_v2_idp_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {",
          "1196:    case 0:",
          "1197:     return &v.state",
          "1198:    case 1:",
          "",
          "[Removed Lines]",
          "1195:    switch v := v.(*UpdateIdentityProviderResponse); i {",
          "",
          "[Added Lines]",
          "1194:    switch v := v.(*CreateIdentityProviderRequest); i {",
          "",
          "---------------",
          "--- Hunk 40 ---",
          "[Context before]",
          "1204:    }",
          "1205:   }",
          "1206:   file_api_v2_idp_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {",
          "1208:    case 0:",
          "1209:     return &v.state",
          "1210:    case 1:",
          "",
          "[Removed Lines]",
          "1207:    switch v := v.(*DeleteIdentityProviderRequest); i {",
          "",
          "[Added Lines]",
          "1206:    switch v := v.(*CreateIdentityProviderResponse); i {",
          "",
          "---------------",
          "--- Hunk 41 ---",
          "[Context before]",
          "1216:    }",
          "1217:   }",
          "1218:   file_api_v2_idp_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {",
          "1220:    case 0:",
          "1221:     return &v.state",
          "1222:    case 1:",
          "",
          "[Removed Lines]",
          "1219:    switch v := v.(*DeleteIdentityProviderResponse); i {",
          "",
          "[Added Lines]",
          "1218:    switch v := v.(*UpdateIdentityProviderRequest); i {",
          "",
          "---------------",
          "--- Hunk 42 ---",
          "[Context before]",
          "1228:    }",
          "1229:   }",
          "1230:   file_api_v2_idp_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {",
          "1232:    case 0:",
          "1233:     return &v.state",
          "1234:    case 1:",
          "",
          "[Removed Lines]",
          "1231:    switch v := v.(*IdentityProvider_Config); i {",
          "",
          "[Added Lines]",
          "1230:    switch v := v.(*UpdateIdentityProviderResponse); i {",
          "",
          "---------------",
          "--- Hunk 43 ---",
          "[Context before]",
          "1240:    }",
          "1241:   }",
          "1242:   file_api_v2_idp_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {",
          "1244:    case 0:",
          "1245:     return &v.state",
          "1246:    case 1:",
          "",
          "[Removed Lines]",
          "1243:    switch v := v.(*IdentityProvider_Config_FieldMapping); i {",
          "",
          "[Added Lines]",
          "1242:    switch v := v.(*DeleteIdentityProviderRequest); i {",
          "",
          "---------------",
          "--- Hunk 44 ---",
          "[Context before]",
          "1252:    }",
          "1253:   }",
          "1254:   file_api_v2_idp_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {",
          "1256:    case 0:",
          "1257:     return &v.state",
          "1258:    case 1:",
          "",
          "[Removed Lines]",
          "1255:    switch v := v.(*IdentityProvider_Config_OAuth2); i {",
          "",
          "[Added Lines]",
          "1254:    switch v := v.(*DeleteIdentityProviderResponse); i {",
          "",
          "---------------",
          "--- Hunk 45 ---",
          "[Context before]",
          "1264:    }",
          "1265:   }",
          "1266:  }",
          "1269:  }",
          "1270:  type x struct{}",
          "1271:  out := protoimpl.TypeBuilder{",
          "",
          "[Removed Lines]",
          "1267:  file_api_v2_idp_service_proto_msgTypes[11].OneofWrappers = []interface{}{",
          "1268:   (*IdentityProvider_Config_Oauth2)(nil),",
          "",
          "[Added Lines]",
          "1266:  file_api_v2_idp_service_proto_msgTypes[1].OneofWrappers = []interface{}{",
          "1267:   (*IdentityProviderConfig_Oauth2)(nil),",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/storage_service.pb.go||proto/gen/api/v2/storage_service.pb.go": [
          "File: proto/gen/api/v2/storage_service.pb.go -> proto/gen/api/v2/storage_service.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: package apiv2",
          "9: import (",
          "10:  _ \"google.golang.org/genproto/googleapis/api/annotations\"",
          "11:  protoreflect \"google.golang.org/protobuf/reflect/protoreflect\"",
          "12:  protoimpl \"google.golang.org/protobuf/runtime/protoimpl\"",
          "13:  fieldmaskpb \"google.golang.org/protobuf/types/known/fieldmaskpb\"",
          "14:  reflect \"reflect\"",
          "15:  sync \"sync\"",
          "16: )",
          "18: const (",
          "20:  _ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)",
          "22:  _ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)",
          "23: )",
          "25: type Storage_Type int32",
          "27: const (",
          "28:  Storage_TYPE_UNSPECIFIED Storage_Type = 0",
          "29:  Storage_S3               Storage_Type = 1",
          "30: )",
          "33: var (",
          "34:  Storage_Type_name = map[int32]string{",
          "35:   0: \"TYPE_UNSPECIFIED\",",
          "36:   1: \"S3\",",
          "37:  }",
          "38:  Storage_Type_value = map[string]int32{",
          "39:   \"TYPE_UNSPECIFIED\": 0,",
          "40:   \"S3\":               1,",
          "41:  }",
          "42: )",
          "44: func (x Storage_Type) Enum() *Storage_Type {",
          "45:  p := new(Storage_Type)",
          "47:  return p",
          "48: }",
          "50: func (x Storage_Type) String() string {",
          "51:  return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))",
          "52: }",
          "54: func (Storage_Type) Descriptor() protoreflect.EnumDescriptor {",
          "55:  return file_api_v2_storage_service_proto_enumTypes[0].Descriptor()",
          "56: }",
          "58: func (Storage_Type) Type() protoreflect.EnumType {",
          "59:  return &file_api_v2_storage_service_proto_enumTypes[0]",
          "60: }",
          "62: func (x Storage_Type) Number() protoreflect.EnumNumber {",
          "63:  return protoreflect.EnumNumber(x)",
          "64: }",
          "67: func (Storage_Type) EnumDescriptor() ([]byte, []int) {",
          "68:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{0, 0}",
          "69: }",
          "71: type Storage struct {",
          "72:  state         protoimpl.MessageState",
          "73:  sizeCache     protoimpl.SizeCache",
          "74:  unknownFields protoimpl.UnknownFields",
          "76:  Id     int32          `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`",
          "77:  Title  string         `protobuf:\"bytes,2,opt,name=title,proto3\" json:\"title,omitempty\"`",
          "78:  Type   Storage_Type   `protobuf:\"varint,3,opt,name=type,proto3,enum=memos.api.v2.Storage_Type\" json:\"type,omitempty\"`",
          "79:  Config *StorageConfig `protobuf:\"bytes,4,opt,name=config,proto3\" json:\"config,omitempty\"`",
          "80: }",
          "82: func (x *Storage) Reset() {",
          "84:  if protoimpl.UnsafeEnabled {",
          "85:   mi := &file_api_v2_storage_service_proto_msgTypes[0]",
          "86:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "87:   ms.StoreMessageInfo(mi)",
          "88:  }",
          "89: }",
          "91: func (x *Storage) String() string {",
          "92:  return protoimpl.X.MessageStringOf(x)",
          "93: }",
          "95: func (*Storage) ProtoMessage() {}",
          "97: func (x *Storage) ProtoReflect() protoreflect.Message {",
          "98:  mi := &file_api_v2_storage_service_proto_msgTypes[0]",
          "99:  if protoimpl.UnsafeEnabled && x != nil {",
          "100:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "101:   if ms.LoadMessageInfo() == nil {",
          "102:    ms.StoreMessageInfo(mi)",
          "103:   }",
          "104:   return ms",
          "105:  }",
          "106:  return mi.MessageOf(x)",
          "107: }",
          "110: func (*Storage) Descriptor() ([]byte, []int) {",
          "111:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{0}",
          "112: }",
          "114: func (x *Storage) GetId() int32 {",
          "115:  if x != nil {",
          "116:   return x.Id",
          "117:  }",
          "118:  return 0",
          "119: }",
          "121: func (x *Storage) GetTitle() string {",
          "122:  if x != nil {",
          "123:   return x.Title",
          "124:  }",
          "125:  return \"\"",
          "126: }",
          "128: func (x *Storage) GetType() Storage_Type {",
          "129:  if x != nil {",
          "130:   return x.Type",
          "131:  }",
          "132:  return Storage_TYPE_UNSPECIFIED",
          "133: }",
          "135: func (x *Storage) GetConfig() *StorageConfig {",
          "136:  if x != nil {",
          "137:   return x.Config",
          "138:  }",
          "139:  return nil",
          "140: }",
          "142: type StorageConfig struct {",
          "143:  state         protoimpl.MessageState",
          "144:  sizeCache     protoimpl.SizeCache",
          "145:  unknownFields protoimpl.UnknownFields",
          "150:  StorageConfig isStorageConfig_StorageConfig `protobuf_oneof:\"storage_config\"`",
          "151: }",
          "153: func (x *StorageConfig) Reset() {",
          "155:  if protoimpl.UnsafeEnabled {",
          "156:   mi := &file_api_v2_storage_service_proto_msgTypes[1]",
          "157:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "158:   ms.StoreMessageInfo(mi)",
          "159:  }",
          "160: }",
          "162: func (x *StorageConfig) String() string {",
          "163:  return protoimpl.X.MessageStringOf(x)",
          "164: }",
          "166: func (*StorageConfig) ProtoMessage() {}",
          "168: func (x *StorageConfig) ProtoReflect() protoreflect.Message {",
          "169:  mi := &file_api_v2_storage_service_proto_msgTypes[1]",
          "170:  if protoimpl.UnsafeEnabled && x != nil {",
          "171:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "172:   if ms.LoadMessageInfo() == nil {",
          "173:    ms.StoreMessageInfo(mi)",
          "174:   }",
          "175:   return ms",
          "176:  }",
          "177:  return mi.MessageOf(x)",
          "178: }",
          "181: func (*StorageConfig) Descriptor() ([]byte, []int) {",
          "182:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{1}",
          "183: }",
          "185: func (m *StorageConfig) GetStorageConfig() isStorageConfig_StorageConfig {",
          "186:  if m != nil {",
          "187:   return m.StorageConfig",
          "188:  }",
          "189:  return nil",
          "190: }",
          "192: func (x *StorageConfig) GetS3Config() *S3Config {",
          "193:  if x, ok := x.GetStorageConfig().(*StorageConfig_S3Config); ok {",
          "194:   return x.S3Config",
          "195:  }",
          "196:  return nil",
          "197: }",
          "199: type isStorageConfig_StorageConfig interface {",
          "200:  isStorageConfig_StorageConfig()",
          "201: }",
          "203: type StorageConfig_S3Config struct {",
          "204:  S3Config *S3Config `protobuf:\"bytes,1,opt,name=s3_config,json=s3Config,proto3,oneof\"`",
          "205: }",
          "207: func (*StorageConfig_S3Config) isStorageConfig_StorageConfig() {}",
          "209: type S3Config struct {",
          "210:  state         protoimpl.MessageState",
          "211:  sizeCache     protoimpl.SizeCache",
          "212:  unknownFields protoimpl.UnknownFields",
          "214:  EndPoint  string `protobuf:\"bytes,1,opt,name=end_point,json=endPoint,proto3\" json:\"end_point,omitempty\"`",
          "215:  Path      string `protobuf:\"bytes,2,opt,name=path,proto3\" json:\"path,omitempty\"`",
          "216:  Region    string `protobuf:\"bytes,3,opt,name=region,proto3\" json:\"region,omitempty\"`",
          "217:  AccessKey string `protobuf:\"bytes,4,opt,name=access_key,json=accessKey,proto3\" json:\"access_key,omitempty\"`",
          "218:  SecretKey string `protobuf:\"bytes,5,opt,name=secret_key,json=secretKey,proto3\" json:\"secret_key,omitempty\"`",
          "219:  Bucket    string `protobuf:\"bytes,6,opt,name=bucket,proto3\" json:\"bucket,omitempty\"`",
          "220:  UrlPrefix string `protobuf:\"bytes,7,opt,name=url_prefix,json=urlPrefix,proto3\" json:\"url_prefix,omitempty\"`",
          "221:  UrlSuffix string `protobuf:\"bytes,8,opt,name=url_suffix,json=urlSuffix,proto3\" json:\"url_suffix,omitempty\"`",
          "222:  PreSign   bool   `protobuf:\"varint,9,opt,name=pre_sign,json=preSign,proto3\" json:\"pre_sign,omitempty\"`",
          "223: }",
          "225: func (x *S3Config) Reset() {",
          "227:  if protoimpl.UnsafeEnabled {",
          "228:   mi := &file_api_v2_storage_service_proto_msgTypes[2]",
          "229:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "230:   ms.StoreMessageInfo(mi)",
          "231:  }",
          "232: }",
          "234: func (x *S3Config) String() string {",
          "235:  return protoimpl.X.MessageStringOf(x)",
          "236: }",
          "238: func (*S3Config) ProtoMessage() {}",
          "240: func (x *S3Config) ProtoReflect() protoreflect.Message {",
          "241:  mi := &file_api_v2_storage_service_proto_msgTypes[2]",
          "242:  if protoimpl.UnsafeEnabled && x != nil {",
          "243:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "244:   if ms.LoadMessageInfo() == nil {",
          "245:    ms.StoreMessageInfo(mi)",
          "246:   }",
          "247:   return ms",
          "248:  }",
          "249:  return mi.MessageOf(x)",
          "250: }",
          "253: func (*S3Config) Descriptor() ([]byte, []int) {",
          "254:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{2}",
          "255: }",
          "257: func (x *S3Config) GetEndPoint() string {",
          "258:  if x != nil {",
          "259:   return x.EndPoint",
          "260:  }",
          "261:  return \"\"",
          "262: }",
          "264: func (x *S3Config) GetPath() string {",
          "265:  if x != nil {",
          "266:   return x.Path",
          "267:  }",
          "268:  return \"\"",
          "269: }",
          "271: func (x *S3Config) GetRegion() string {",
          "272:  if x != nil {",
          "273:   return x.Region",
          "274:  }",
          "275:  return \"\"",
          "276: }",
          "278: func (x *S3Config) GetAccessKey() string {",
          "279:  if x != nil {",
          "280:   return x.AccessKey",
          "281:  }",
          "282:  return \"\"",
          "283: }",
          "285: func (x *S3Config) GetSecretKey() string {",
          "286:  if x != nil {",
          "287:   return x.SecretKey",
          "288:  }",
          "289:  return \"\"",
          "290: }",
          "292: func (x *S3Config) GetBucket() string {",
          "293:  if x != nil {",
          "294:   return x.Bucket",
          "295:  }",
          "296:  return \"\"",
          "297: }",
          "299: func (x *S3Config) GetUrlPrefix() string {",
          "300:  if x != nil {",
          "301:   return x.UrlPrefix",
          "302:  }",
          "303:  return \"\"",
          "304: }",
          "306: func (x *S3Config) GetUrlSuffix() string {",
          "307:  if x != nil {",
          "308:   return x.UrlSuffix",
          "309:  }",
          "310:  return \"\"",
          "311: }",
          "313: func (x *S3Config) GetPreSign() bool {",
          "314:  if x != nil {",
          "315:   return x.PreSign",
          "316:  }",
          "317:  return false",
          "318: }",
          "320: type CreateStorageRequest struct {",
          "321:  state         protoimpl.MessageState",
          "322:  sizeCache     protoimpl.SizeCache",
          "323:  unknownFields protoimpl.UnknownFields",
          "325:  Storage *Storage `protobuf:\"bytes,1,opt,name=storage,proto3\" json:\"storage,omitempty\"`",
          "326: }",
          "328: func (x *CreateStorageRequest) Reset() {",
          "330:  if protoimpl.UnsafeEnabled {",
          "331:   mi := &file_api_v2_storage_service_proto_msgTypes[3]",
          "332:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "333:   ms.StoreMessageInfo(mi)",
          "334:  }",
          "335: }",
          "337: func (x *CreateStorageRequest) String() string {",
          "338:  return protoimpl.X.MessageStringOf(x)",
          "339: }",
          "341: func (*CreateStorageRequest) ProtoMessage() {}",
          "343: func (x *CreateStorageRequest) ProtoReflect() protoreflect.Message {",
          "344:  mi := &file_api_v2_storage_service_proto_msgTypes[3]",
          "345:  if protoimpl.UnsafeEnabled && x != nil {",
          "346:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "347:   if ms.LoadMessageInfo() == nil {",
          "348:    ms.StoreMessageInfo(mi)",
          "349:   }",
          "350:   return ms",
          "351:  }",
          "352:  return mi.MessageOf(x)",
          "353: }",
          "356: func (*CreateStorageRequest) Descriptor() ([]byte, []int) {",
          "357:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{3}",
          "358: }",
          "360: func (x *CreateStorageRequest) GetStorage() *Storage {",
          "361:  if x != nil {",
          "362:   return x.Storage",
          "363:  }",
          "364:  return nil",
          "365: }",
          "367: type CreateStorageResponse struct {",
          "368:  state         protoimpl.MessageState",
          "369:  sizeCache     protoimpl.SizeCache",
          "370:  unknownFields protoimpl.UnknownFields",
          "372:  Storage *Storage `protobuf:\"bytes,1,opt,name=storage,proto3\" json:\"storage,omitempty\"`",
          "373: }",
          "375: func (x *CreateStorageResponse) Reset() {",
          "377:  if protoimpl.UnsafeEnabled {",
          "378:   mi := &file_api_v2_storage_service_proto_msgTypes[4]",
          "379:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "380:   ms.StoreMessageInfo(mi)",
          "381:  }",
          "382: }",
          "384: func (x *CreateStorageResponse) String() string {",
          "385:  return protoimpl.X.MessageStringOf(x)",
          "386: }",
          "388: func (*CreateStorageResponse) ProtoMessage() {}",
          "390: func (x *CreateStorageResponse) ProtoReflect() protoreflect.Message {",
          "391:  mi := &file_api_v2_storage_service_proto_msgTypes[4]",
          "392:  if protoimpl.UnsafeEnabled && x != nil {",
          "393:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "394:   if ms.LoadMessageInfo() == nil {",
          "395:    ms.StoreMessageInfo(mi)",
          "396:   }",
          "397:   return ms",
          "398:  }",
          "399:  return mi.MessageOf(x)",
          "400: }",
          "403: func (*CreateStorageResponse) Descriptor() ([]byte, []int) {",
          "404:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{4}",
          "405: }",
          "407: func (x *CreateStorageResponse) GetStorage() *Storage {",
          "408:  if x != nil {",
          "409:   return x.Storage",
          "410:  }",
          "411:  return nil",
          "412: }",
          "414: type GetStorageRequest struct {",
          "415:  state         protoimpl.MessageState",
          "416:  sizeCache     protoimpl.SizeCache",
          "417:  unknownFields protoimpl.UnknownFields",
          "419:  Id int32 `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`",
          "420: }",
          "422: func (x *GetStorageRequest) Reset() {",
          "424:  if protoimpl.UnsafeEnabled {",
          "425:   mi := &file_api_v2_storage_service_proto_msgTypes[5]",
          "426:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "427:   ms.StoreMessageInfo(mi)",
          "428:  }",
          "429: }",
          "431: func (x *GetStorageRequest) String() string {",
          "432:  return protoimpl.X.MessageStringOf(x)",
          "433: }",
          "435: func (*GetStorageRequest) ProtoMessage() {}",
          "437: func (x *GetStorageRequest) ProtoReflect() protoreflect.Message {",
          "438:  mi := &file_api_v2_storage_service_proto_msgTypes[5]",
          "439:  if protoimpl.UnsafeEnabled && x != nil {",
          "440:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "441:   if ms.LoadMessageInfo() == nil {",
          "442:    ms.StoreMessageInfo(mi)",
          "443:   }",
          "444:   return ms",
          "445:  }",
          "446:  return mi.MessageOf(x)",
          "447: }",
          "450: func (*GetStorageRequest) Descriptor() ([]byte, []int) {",
          "451:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{5}",
          "452: }",
          "454: func (x *GetStorageRequest) GetId() int32 {",
          "455:  if x != nil {",
          "456:   return x.Id",
          "457:  }",
          "458:  return 0",
          "459: }",
          "461: type GetStorageResponse struct {",
          "462:  state         protoimpl.MessageState",
          "463:  sizeCache     protoimpl.SizeCache",
          "464:  unknownFields protoimpl.UnknownFields",
          "466:  Storage *Storage `protobuf:\"bytes,1,opt,name=storage,proto3\" json:\"storage,omitempty\"`",
          "467: }",
          "469: func (x *GetStorageResponse) Reset() {",
          "471:  if protoimpl.UnsafeEnabled {",
          "472:   mi := &file_api_v2_storage_service_proto_msgTypes[6]",
          "473:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "474:   ms.StoreMessageInfo(mi)",
          "475:  }",
          "476: }",
          "478: func (x *GetStorageResponse) String() string {",
          "479:  return protoimpl.X.MessageStringOf(x)",
          "480: }",
          "482: func (*GetStorageResponse) ProtoMessage() {}",
          "484: func (x *GetStorageResponse) ProtoReflect() protoreflect.Message {",
          "485:  mi := &file_api_v2_storage_service_proto_msgTypes[6]",
          "486:  if protoimpl.UnsafeEnabled && x != nil {",
          "487:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "488:   if ms.LoadMessageInfo() == nil {",
          "489:    ms.StoreMessageInfo(mi)",
          "490:   }",
          "491:   return ms",
          "492:  }",
          "493:  return mi.MessageOf(x)",
          "494: }",
          "497: func (*GetStorageResponse) Descriptor() ([]byte, []int) {",
          "498:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{6}",
          "499: }",
          "501: func (x *GetStorageResponse) GetStorage() *Storage {",
          "502:  if x != nil {",
          "503:   return x.Storage",
          "504:  }",
          "505:  return nil",
          "506: }",
          "508: type ListStoragesRequest struct {",
          "509:  state         protoimpl.MessageState",
          "510:  sizeCache     protoimpl.SizeCache",
          "511:  unknownFields protoimpl.UnknownFields",
          "512: }",
          "514: func (x *ListStoragesRequest) Reset() {",
          "516:  if protoimpl.UnsafeEnabled {",
          "517:   mi := &file_api_v2_storage_service_proto_msgTypes[7]",
          "518:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "519:   ms.StoreMessageInfo(mi)",
          "520:  }",
          "521: }",
          "523: func (x *ListStoragesRequest) String() string {",
          "524:  return protoimpl.X.MessageStringOf(x)",
          "525: }",
          "527: func (*ListStoragesRequest) ProtoMessage() {}",
          "529: func (x *ListStoragesRequest) ProtoReflect() protoreflect.Message {",
          "530:  mi := &file_api_v2_storage_service_proto_msgTypes[7]",
          "531:  if protoimpl.UnsafeEnabled && x != nil {",
          "532:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "533:   if ms.LoadMessageInfo() == nil {",
          "534:    ms.StoreMessageInfo(mi)",
          "535:   }",
          "536:   return ms",
          "537:  }",
          "538:  return mi.MessageOf(x)",
          "539: }",
          "542: func (*ListStoragesRequest) Descriptor() ([]byte, []int) {",
          "543:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{7}",
          "544: }",
          "546: type ListStoragesResponse struct {",
          "547:  state         protoimpl.MessageState",
          "548:  sizeCache     protoimpl.SizeCache",
          "549:  unknownFields protoimpl.UnknownFields",
          "551:  Storages []*Storage `protobuf:\"bytes,1,rep,name=storages,proto3\" json:\"storages,omitempty\"`",
          "552: }",
          "554: func (x *ListStoragesResponse) Reset() {",
          "556:  if protoimpl.UnsafeEnabled {",
          "557:   mi := &file_api_v2_storage_service_proto_msgTypes[8]",
          "558:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "559:   ms.StoreMessageInfo(mi)",
          "560:  }",
          "561: }",
          "563: func (x *ListStoragesResponse) String() string {",
          "564:  return protoimpl.X.MessageStringOf(x)",
          "565: }",
          "567: func (*ListStoragesResponse) ProtoMessage() {}",
          "569: func (x *ListStoragesResponse) ProtoReflect() protoreflect.Message {",
          "570:  mi := &file_api_v2_storage_service_proto_msgTypes[8]",
          "571:  if protoimpl.UnsafeEnabled && x != nil {",
          "572:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "573:   if ms.LoadMessageInfo() == nil {",
          "574:    ms.StoreMessageInfo(mi)",
          "575:   }",
          "576:   return ms",
          "577:  }",
          "578:  return mi.MessageOf(x)",
          "579: }",
          "582: func (*ListStoragesResponse) Descriptor() ([]byte, []int) {",
          "583:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{8}",
          "584: }",
          "586: func (x *ListStoragesResponse) GetStorages() []*Storage {",
          "587:  if x != nil {",
          "588:   return x.Storages",
          "589:  }",
          "590:  return nil",
          "591: }",
          "593: type UpdateStorageRequest struct {",
          "594:  state         protoimpl.MessageState",
          "595:  sizeCache     protoimpl.SizeCache",
          "596:  unknownFields protoimpl.UnknownFields",
          "598:  Storage    *Storage               `protobuf:\"bytes,1,opt,name=storage,proto3\" json:\"storage,omitempty\"`",
          "599:  UpdateMask *fieldmaskpb.FieldMask `protobuf:\"bytes,2,opt,name=update_mask,json=updateMask,proto3\" json:\"update_mask,omitempty\"`",
          "600: }",
          "602: func (x *UpdateStorageRequest) Reset() {",
          "604:  if protoimpl.UnsafeEnabled {",
          "605:   mi := &file_api_v2_storage_service_proto_msgTypes[9]",
          "606:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "607:   ms.StoreMessageInfo(mi)",
          "608:  }",
          "609: }",
          "611: func (x *UpdateStorageRequest) String() string {",
          "612:  return protoimpl.X.MessageStringOf(x)",
          "613: }",
          "615: func (*UpdateStorageRequest) ProtoMessage() {}",
          "617: func (x *UpdateStorageRequest) ProtoReflect() protoreflect.Message {",
          "618:  mi := &file_api_v2_storage_service_proto_msgTypes[9]",
          "619:  if protoimpl.UnsafeEnabled && x != nil {",
          "620:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "621:   if ms.LoadMessageInfo() == nil {",
          "622:    ms.StoreMessageInfo(mi)",
          "623:   }",
          "624:   return ms",
          "625:  }",
          "626:  return mi.MessageOf(x)",
          "627: }",
          "630: func (*UpdateStorageRequest) Descriptor() ([]byte, []int) {",
          "631:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{9}",
          "632: }",
          "634: func (x *UpdateStorageRequest) GetStorage() *Storage {",
          "635:  if x != nil {",
          "636:   return x.Storage",
          "637:  }",
          "638:  return nil",
          "639: }",
          "641: func (x *UpdateStorageRequest) GetUpdateMask() *fieldmaskpb.FieldMask {",
          "642:  if x != nil {",
          "643:   return x.UpdateMask",
          "644:  }",
          "645:  return nil",
          "646: }",
          "648: type UpdateStorageResponse struct {",
          "649:  state         protoimpl.MessageState",
          "650:  sizeCache     protoimpl.SizeCache",
          "651:  unknownFields protoimpl.UnknownFields",
          "653:  Storage *Storage `protobuf:\"bytes,1,opt,name=storage,proto3\" json:\"storage,omitempty\"`",
          "654: }",
          "656: func (x *UpdateStorageResponse) Reset() {",
          "658:  if protoimpl.UnsafeEnabled {",
          "659:   mi := &file_api_v2_storage_service_proto_msgTypes[10]",
          "660:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "661:   ms.StoreMessageInfo(mi)",
          "662:  }",
          "663: }",
          "665: func (x *UpdateStorageResponse) String() string {",
          "666:  return protoimpl.X.MessageStringOf(x)",
          "667: }",
          "669: func (*UpdateStorageResponse) ProtoMessage() {}",
          "671: func (x *UpdateStorageResponse) ProtoReflect() protoreflect.Message {",
          "672:  mi := &file_api_v2_storage_service_proto_msgTypes[10]",
          "673:  if protoimpl.UnsafeEnabled && x != nil {",
          "674:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "675:   if ms.LoadMessageInfo() == nil {",
          "676:    ms.StoreMessageInfo(mi)",
          "677:   }",
          "678:   return ms",
          "679:  }",
          "680:  return mi.MessageOf(x)",
          "681: }",
          "684: func (*UpdateStorageResponse) Descriptor() ([]byte, []int) {",
          "685:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{10}",
          "686: }",
          "688: func (x *UpdateStorageResponse) GetStorage() *Storage {",
          "689:  if x != nil {",
          "690:   return x.Storage",
          "691:  }",
          "692:  return nil",
          "693: }",
          "695: type DeleteStorageRequest struct {",
          "696:  state         protoimpl.MessageState",
          "697:  sizeCache     protoimpl.SizeCache",
          "698:  unknownFields protoimpl.UnknownFields",
          "700:  Id int32 `protobuf:\"varint,1,opt,name=id,proto3\" json:\"id,omitempty\"`",
          "701: }",
          "703: func (x *DeleteStorageRequest) Reset() {",
          "705:  if protoimpl.UnsafeEnabled {",
          "706:   mi := &file_api_v2_storage_service_proto_msgTypes[11]",
          "707:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "708:   ms.StoreMessageInfo(mi)",
          "709:  }",
          "710: }",
          "712: func (x *DeleteStorageRequest) String() string {",
          "713:  return protoimpl.X.MessageStringOf(x)",
          "714: }",
          "716: func (*DeleteStorageRequest) ProtoMessage() {}",
          "718: func (x *DeleteStorageRequest) ProtoReflect() protoreflect.Message {",
          "719:  mi := &file_api_v2_storage_service_proto_msgTypes[11]",
          "720:  if protoimpl.UnsafeEnabled && x != nil {",
          "721:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "722:   if ms.LoadMessageInfo() == nil {",
          "723:    ms.StoreMessageInfo(mi)",
          "724:   }",
          "725:   return ms",
          "726:  }",
          "727:  return mi.MessageOf(x)",
          "728: }",
          "731: func (*DeleteStorageRequest) Descriptor() ([]byte, []int) {",
          "732:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{11}",
          "733: }",
          "735: func (x *DeleteStorageRequest) GetId() int32 {",
          "736:  if x != nil {",
          "737:   return x.Id",
          "738:  }",
          "739:  return 0",
          "740: }",
          "742: type DeleteStorageResponse struct {",
          "743:  state         protoimpl.MessageState",
          "744:  sizeCache     protoimpl.SizeCache",
          "745:  unknownFields protoimpl.UnknownFields",
          "746: }",
          "748: func (x *DeleteStorageResponse) Reset() {",
          "750:  if protoimpl.UnsafeEnabled {",
          "751:   mi := &file_api_v2_storage_service_proto_msgTypes[12]",
          "752:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "753:   ms.StoreMessageInfo(mi)",
          "754:  }",
          "755: }",
          "757: func (x *DeleteStorageResponse) String() string {",
          "758:  return protoimpl.X.MessageStringOf(x)",
          "759: }",
          "761: func (*DeleteStorageResponse) ProtoMessage() {}",
          "763: func (x *DeleteStorageResponse) ProtoReflect() protoreflect.Message {",
          "764:  mi := &file_api_v2_storage_service_proto_msgTypes[12]",
          "765:  if protoimpl.UnsafeEnabled && x != nil {",
          "766:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "767:   if ms.LoadMessageInfo() == nil {",
          "768:    ms.StoreMessageInfo(mi)",
          "769:   }",
          "770:   return ms",
          "771:  }",
          "772:  return mi.MessageOf(x)",
          "773: }",
          "776: func (*DeleteStorageResponse) Descriptor() ([]byte, []int) {",
          "777:  return file_api_v2_storage_service_proto_rawDescGZIP(), []int{12}",
          "778: }",
          "780: var File_api_v2_storage_service_proto protoreflect.FileDescriptor",
          "782: var file_api_v2_storage_service_proto_rawDesc = []byte{",
          "783:  0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,",
          "784:  0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c,",
          "785:  0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x1a, 0x1c, 0x67, 0x6f,",
          "786:  0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,",
          "787:  0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67,",
          "788:  0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,",
          "789:  0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,",
          "790:  0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e,",
          "791:  0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x01, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,",
          "792:  0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,",
          "793:  0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,",
          "794:  0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,",
          "795:  0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70,",
          "796:  0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70,",
          "797:  0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,",
          "798:  0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e,",
          "799:  0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f,",
          "800:  0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x24, 0x0a, 0x04,",
          "801:  0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,",
          "802:  0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x33,",
          "803:  0x10, 0x01, 0x22, 0x58, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,",
          "804:  0x66, 0x69, 0x67, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x33, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,",
          "805:  0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "806:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00,",
          "807:  0x52, 0x08, 0x73, 0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x10, 0x0a, 0x0e, 0x73, 0x74,",
          "808:  0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x82, 0x02, 0x0a,",
          "809:  0x08, 0x53, 0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64,",
          "810:  0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e,",
          "811:  0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,",
          "812:  0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,",
          "813:  0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,",
          "814:  0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79,",
          "815:  0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65,",
          "816:  0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x18,",
          "817:  0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79,",
          "818:  0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,",
          "819:  0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x72, 0x6c, 0x5f,",
          "820:  0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x72,",
          "821:  0x6c, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x72, 0x6c, 0x5f, 0x73,",
          "822:  0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x72, 0x6c,",
          "823:  0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x5f, 0x73, 0x69,",
          "824:  0x67, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65, 0x53, 0x69, 0x67,",
          "825:  0x6e, 0x22, 0x47, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61,",
          "826:  0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x74, 0x6f,",
          "827:  0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6d,",
          "828:  0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,",
          "829:  0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x15, 0x43, 0x72,",
          "830:  0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,",
          "831:  0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01,",
          "832:  0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69,",
          "833:  0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f,",
          "834:  0x72, 0x61, 0x67, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,",
          "835:  0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,",
          "836:  0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x12, 0x47, 0x65, 0x74,",
          "837:  0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,",
          "838:  0x2f, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,",
          "839:  0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,",
          "840:  0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,",
          "841:  0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73,",
          "842:  0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53,",
          "843:  0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,",
          "844:  0x31, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,",
          "845:  0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,",
          "846:  0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,",
          "847:  0x65, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f,",
          "848:  0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x73,",
          "849:  0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d,",
          "850:  0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x74, 0x6f, 0x72,",
          "851:  0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0b,",
          "852:  0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,",
          "853:  0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,",
          "854:  0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75,",
          "855:  0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x48, 0x0a, 0x15, 0x55, 0x70, 0x64,",
          "856:  0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,",
          "857:  0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,",
          "858:  0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,",
          "859:  0x76, 0x32, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72,",
          "860:  0x61, 0x67, 0x65, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f,",
          "861:  0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,",
          "862:  0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x44,",
          "863:  0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,",
          "864:  0x6f, 0x6e, 0x73, 0x65, 0x32, 0x8c, 0x05, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,",
          "865:  0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x75, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,",
          "866:  0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "867:  0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,",
          "868:  0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d,",
          "869:  0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61,",
          "870:  0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,",
          "871:  0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x61,",
          "872:  0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x12, 0x73,",
          "873:  0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x6d,",
          "874:  0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x53,",
          "875:  0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,",
          "876:  0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74,",
          "877:  0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,",
          "878:  0x22, 0xda, 0x41, 0x02, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61,",
          "879:  0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x7b,",
          "880:  0x69, 0x64, 0x7d, 0x12, 0x6f, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61,",
          "881:  0x67, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,",
          "882:  0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x52,",
          "883:  0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "884:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,",
          "885:  0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93,",
          "886:  0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x74, 0x6f, 0x72,",
          "887:  0x61, 0x67, 0x65, 0x73, 0x12, 0x9e, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,",
          "888:  0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "889:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72,",
          "890:  0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x65, 0x6d,",
          "891:  0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,",
          "892:  0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,",
          "893:  0x44, 0xda, 0x41, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2c, 0x75, 0x70, 0x64, 0x61,",
          "894:  0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x07, 0x73,",
          "895:  0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x32, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f,",
          "896:  0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,",
          "897:  0x65, 0x2e, 0x69, 0x64, 0x7d, 0x12, 0x7c, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,",
          "898:  0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x61,",
          "899:  0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72,",
          "900:  0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x65, 0x6d,",
          "901:  0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,",
          "902:  0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,",
          "903:  0x22, 0xda, 0x41, 0x02, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x2a, 0x15, 0x2f, 0x61,",
          "904:  0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x7b,",
          "905:  0x69, 0x64, 0x7d, 0x42, 0xab, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "906:  0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x42, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,",
          "907:  0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,",
          "908:  0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x6d,",
          "909:  0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,",
          "910:  0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x3b, 0x61, 0x70, 0x69, 0x76,",
          "911:  0x32, 0xa2, 0x02, 0x03, 0x4d, 0x41, 0x58, 0xaa, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x2e,",
          "912:  0x41, 0x70, 0x69, 0x2e, 0x56, 0x32, 0xca, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41,",
          "913:  0x70, 0x69, 0x5c, 0x56, 0x32, 0xe2, 0x02, 0x18, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x41, 0x70,",
          "914:  0x69, 0x5c, 0x56, 0x32, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,",
          "915:  0xea, 0x02, 0x0e, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56,",
          "916:  0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,",
          "917: }",
          "919: var (",
          "920:  file_api_v2_storage_service_proto_rawDescOnce sync.Once",
          "921:  file_api_v2_storage_service_proto_rawDescData = file_api_v2_storage_service_proto_rawDesc",
          "922: )",
          "924: func file_api_v2_storage_service_proto_rawDescGZIP() []byte {",
          "925:  file_api_v2_storage_service_proto_rawDescOnce.Do(func() {",
          "926:   file_api_v2_storage_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v2_storage_service_proto_rawDescData)",
          "927:  })",
          "928:  return file_api_v2_storage_service_proto_rawDescData",
          "929: }",
          "931: var file_api_v2_storage_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)",
          "932: var file_api_v2_storage_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)",
          "933: var file_api_v2_storage_service_proto_goTypes = []interface{}{",
          "934:  (Storage_Type)(0),             // 0: memos.api.v2.Storage.Type",
          "935:  (*Storage)(nil),               // 1: memos.api.v2.Storage",
          "936:  (*StorageConfig)(nil),         // 2: memos.api.v2.StorageConfig",
          "937:  (*S3Config)(nil),              // 3: memos.api.v2.S3Config",
          "938:  (*CreateStorageRequest)(nil),  // 4: memos.api.v2.CreateStorageRequest",
          "939:  (*CreateStorageResponse)(nil), // 5: memos.api.v2.CreateStorageResponse",
          "940:  (*GetStorageRequest)(nil),     // 6: memos.api.v2.GetStorageRequest",
          "941:  (*GetStorageResponse)(nil),    // 7: memos.api.v2.GetStorageResponse",
          "942:  (*ListStoragesRequest)(nil),   // 8: memos.api.v2.ListStoragesRequest",
          "943:  (*ListStoragesResponse)(nil),  // 9: memos.api.v2.ListStoragesResponse",
          "944:  (*UpdateStorageRequest)(nil),  // 10: memos.api.v2.UpdateStorageRequest",
          "945:  (*UpdateStorageResponse)(nil), // 11: memos.api.v2.UpdateStorageResponse",
          "946:  (*DeleteStorageRequest)(nil),  // 12: memos.api.v2.DeleteStorageRequest",
          "947:  (*DeleteStorageResponse)(nil), // 13: memos.api.v2.DeleteStorageResponse",
          "948:  (*fieldmaskpb.FieldMask)(nil), // 14: google.protobuf.FieldMask",
          "949: }",
          "950: var file_api_v2_storage_service_proto_depIdxs = []int32{",
          "951:  0,  // 0: memos.api.v2.Storage.type:type_name -> memos.api.v2.Storage.Type",
          "952:  2,  // 1: memos.api.v2.Storage.config:type_name -> memos.api.v2.StorageConfig",
          "953:  3,  // 2: memos.api.v2.StorageConfig.s3_config:type_name -> memos.api.v2.S3Config",
          "954:  1,  // 3: memos.api.v2.CreateStorageRequest.storage:type_name -> memos.api.v2.Storage",
          "955:  1,  // 4: memos.api.v2.CreateStorageResponse.storage:type_name -> memos.api.v2.Storage",
          "956:  1,  // 5: memos.api.v2.GetStorageResponse.storage:type_name -> memos.api.v2.Storage",
          "957:  1,  // 6: memos.api.v2.ListStoragesResponse.storages:type_name -> memos.api.v2.Storage",
          "958:  1,  // 7: memos.api.v2.UpdateStorageRequest.storage:type_name -> memos.api.v2.Storage",
          "959:  14, // 8: memos.api.v2.UpdateStorageRequest.update_mask:type_name -> google.protobuf.FieldMask",
          "960:  1,  // 9: memos.api.v2.UpdateStorageResponse.storage:type_name -> memos.api.v2.Storage",
          "961:  4,  // 10: memos.api.v2.StorageService.CreateStorage:input_type -> memos.api.v2.CreateStorageRequest",
          "962:  6,  // 11: memos.api.v2.StorageService.GetStorage:input_type -> memos.api.v2.GetStorageRequest",
          "963:  8,  // 12: memos.api.v2.StorageService.ListStorages:input_type -> memos.api.v2.ListStoragesRequest",
          "964:  10, // 13: memos.api.v2.StorageService.UpdateStorage:input_type -> memos.api.v2.UpdateStorageRequest",
          "965:  12, // 14: memos.api.v2.StorageService.DeleteStorage:input_type -> memos.api.v2.DeleteStorageRequest",
          "966:  5,  // 15: memos.api.v2.StorageService.CreateStorage:output_type -> memos.api.v2.CreateStorageResponse",
          "967:  7,  // 16: memos.api.v2.StorageService.GetStorage:output_type -> memos.api.v2.GetStorageResponse",
          "968:  9,  // 17: memos.api.v2.StorageService.ListStorages:output_type -> memos.api.v2.ListStoragesResponse",
          "969:  11, // 18: memos.api.v2.StorageService.UpdateStorage:output_type -> memos.api.v2.UpdateStorageResponse",
          "970:  13, // 19: memos.api.v2.StorageService.DeleteStorage:output_type -> memos.api.v2.DeleteStorageResponse",
          "971:  15, // [15:20] is the sub-list for method output_type",
          "972:  10, // [10:15] is the sub-list for method input_type",
          "973:  10, // [10:10] is the sub-list for extension type_name",
          "974:  10, // [10:10] is the sub-list for extension extendee",
          "975:  0,  // [0:10] is the sub-list for field type_name",
          "976: }",
          "978: func init() { file_api_v2_storage_service_proto_init() }",
          "979: func file_api_v2_storage_service_proto_init() {",
          "980:  if File_api_v2_storage_service_proto != nil {",
          "981:   return",
          "982:  }",
          "983:  if !protoimpl.UnsafeEnabled {",
          "984:   file_api_v2_storage_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {",
          "985:    switch v := v.(*Storage); i {",
          "986:    case 0:",
          "987:     return &v.state",
          "988:    case 1:",
          "989:     return &v.sizeCache",
          "990:    case 2:",
          "991:     return &v.unknownFields",
          "992:    default:",
          "993:     return nil",
          "994:    }",
          "995:   }",
          "996:   file_api_v2_storage_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {",
          "997:    switch v := v.(*StorageConfig); i {",
          "998:    case 0:",
          "999:     return &v.state",
          "1000:    case 1:",
          "1001:     return &v.sizeCache",
          "1002:    case 2:",
          "1003:     return &v.unknownFields",
          "1004:    default:",
          "1005:     return nil",
          "1006:    }",
          "1007:   }",
          "1008:   file_api_v2_storage_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {",
          "1009:    switch v := v.(*S3Config); i {",
          "1010:    case 0:",
          "1011:     return &v.state",
          "1012:    case 1:",
          "1013:     return &v.sizeCache",
          "1014:    case 2:",
          "1015:     return &v.unknownFields",
          "1016:    default:",
          "1017:     return nil",
          "1018:    }",
          "1019:   }",
          "1020:   file_api_v2_storage_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {",
          "1021:    switch v := v.(*CreateStorageRequest); i {",
          "1022:    case 0:",
          "1023:     return &v.state",
          "1024:    case 1:",
          "1025:     return &v.sizeCache",
          "1026:    case 2:",
          "1027:     return &v.unknownFields",
          "1028:    default:",
          "1029:     return nil",
          "1030:    }",
          "1031:   }",
          "1032:   file_api_v2_storage_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {",
          "1033:    switch v := v.(*CreateStorageResponse); i {",
          "1034:    case 0:",
          "1035:     return &v.state",
          "1036:    case 1:",
          "1037:     return &v.sizeCache",
          "1038:    case 2:",
          "1039:     return &v.unknownFields",
          "1040:    default:",
          "1041:     return nil",
          "1042:    }",
          "1043:   }",
          "1044:   file_api_v2_storage_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {",
          "1045:    switch v := v.(*GetStorageRequest); i {",
          "1046:    case 0:",
          "1047:     return &v.state",
          "1048:    case 1:",
          "1049:     return &v.sizeCache",
          "1050:    case 2:",
          "1051:     return &v.unknownFields",
          "1052:    default:",
          "1053:     return nil",
          "1054:    }",
          "1055:   }",
          "1056:   file_api_v2_storage_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {",
          "1057:    switch v := v.(*GetStorageResponse); i {",
          "1058:    case 0:",
          "1059:     return &v.state",
          "1060:    case 1:",
          "1061:     return &v.sizeCache",
          "1062:    case 2:",
          "1063:     return &v.unknownFields",
          "1064:    default:",
          "1065:     return nil",
          "1066:    }",
          "1067:   }",
          "1068:   file_api_v2_storage_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {",
          "1069:    switch v := v.(*ListStoragesRequest); i {",
          "1070:    case 0:",
          "1071:     return &v.state",
          "1072:    case 1:",
          "1073:     return &v.sizeCache",
          "1074:    case 2:",
          "1075:     return &v.unknownFields",
          "1076:    default:",
          "1077:     return nil",
          "1078:    }",
          "1079:   }",
          "1080:   file_api_v2_storage_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {",
          "1081:    switch v := v.(*ListStoragesResponse); i {",
          "1082:    case 0:",
          "1083:     return &v.state",
          "1084:    case 1:",
          "1085:     return &v.sizeCache",
          "1086:    case 2:",
          "1087:     return &v.unknownFields",
          "1088:    default:",
          "1089:     return nil",
          "1090:    }",
          "1091:   }",
          "1092:   file_api_v2_storage_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {",
          "1093:    switch v := v.(*UpdateStorageRequest); i {",
          "1094:    case 0:",
          "1095:     return &v.state",
          "1096:    case 1:",
          "1097:     return &v.sizeCache",
          "1098:    case 2:",
          "1099:     return &v.unknownFields",
          "1100:    default:",
          "1101:     return nil",
          "1102:    }",
          "1103:   }",
          "1104:   file_api_v2_storage_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {",
          "1105:    switch v := v.(*UpdateStorageResponse); i {",
          "1106:    case 0:",
          "1107:     return &v.state",
          "1108:    case 1:",
          "1109:     return &v.sizeCache",
          "1110:    case 2:",
          "1111:     return &v.unknownFields",
          "1112:    default:",
          "1113:     return nil",
          "1114:    }",
          "1115:   }",
          "1116:   file_api_v2_storage_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {",
          "1117:    switch v := v.(*DeleteStorageRequest); i {",
          "1118:    case 0:",
          "1119:     return &v.state",
          "1120:    case 1:",
          "1121:     return &v.sizeCache",
          "1122:    case 2:",
          "1123:     return &v.unknownFields",
          "1124:    default:",
          "1125:     return nil",
          "1126:    }",
          "1127:   }",
          "1128:   file_api_v2_storage_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {",
          "1129:    switch v := v.(*DeleteStorageResponse); i {",
          "1130:    case 0:",
          "1131:     return &v.state",
          "1132:    case 1:",
          "1133:     return &v.sizeCache",
          "1134:    case 2:",
          "1135:     return &v.unknownFields",
          "1136:    default:",
          "1137:     return nil",
          "1138:    }",
          "1139:   }",
          "1140:  }",
          "1141:  file_api_v2_storage_service_proto_msgTypes[1].OneofWrappers = []interface{}{",
          "1142:   (*StorageConfig_S3Config)(nil),",
          "1143:  }",
          "1144:  type x struct{}",
          "1145:  out := protoimpl.TypeBuilder{",
          "1146:   File: protoimpl.DescBuilder{",
          "1147:    GoPackagePath: reflect.TypeOf(x{}).PkgPath(),",
          "1148:    RawDescriptor: file_api_v2_storage_service_proto_rawDesc,",
          "1149:    NumEnums:      1,",
          "1150:    NumMessages:   13,",
          "1151:    NumExtensions: 0,",
          "1152:    NumServices:   1,",
          "1153:   },",
          "1154:   GoTypes:           file_api_v2_storage_service_proto_goTypes,",
          "1155:   DependencyIndexes: file_api_v2_storage_service_proto_depIdxs,",
          "1156:   EnumInfos:         file_api_v2_storage_service_proto_enumTypes,",
          "1157:   MessageInfos:      file_api_v2_storage_service_proto_msgTypes,",
          "1158:  }.Build()",
          "1159:  File_api_v2_storage_service_proto = out.File",
          "1160:  file_api_v2_storage_service_proto_rawDesc = nil",
          "1161:  file_api_v2_storage_service_proto_goTypes = nil",
          "1162:  file_api_v2_storage_service_proto_depIdxs = nil",
          "1163: }",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/storage_service.pb.gw.go||proto/gen/api/v2/storage_service.pb.gw.go": [
          "File: proto/gen/api/v2/storage_service.pb.gw.go -> proto/gen/api/v2/storage_service.pb.gw.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "5: Package apiv2 is a reverse proxy.",
          "7: It translates gRPC into RESTful JSON APIs.",
          "9: package apiv2",
          "11: import (",
          "12:  \"context\"",
          "13:  \"io\"",
          "14:  \"net/http\"",
          "16:  \"github.com/grpc-ecosystem/grpc-gateway/v2/runtime\"",
          "17:  \"github.com/grpc-ecosystem/grpc-gateway/v2/utilities\"",
          "18:  \"google.golang.org/grpc\"",
          "19:  \"google.golang.org/grpc/codes\"",
          "20:  \"google.golang.org/grpc/grpclog\"",
          "21:  \"google.golang.org/grpc/metadata\"",
          "22:  \"google.golang.org/grpc/status\"",
          "23:  \"google.golang.org/protobuf/proto\"",
          "24: )",
          "27: var _ codes.Code",
          "28: var _ io.Reader",
          "29: var _ status.Status",
          "30: var _ = runtime.String",
          "31: var _ = utilities.NewDoubleArray",
          "32: var _ = metadata.Join",
          "34: func request_StorageService_CreateStorage_0(ctx context.Context, marshaler runtime.Marshaler, client StorageServiceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "35:  var protoReq CreateStorageRequest",
          "36:  var metadata runtime.ServerMetadata",
          "38:  newReader, berr := utilities.IOReaderFactory(req.Body)",
          "39:  if berr != nil {",
          "40:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)",
          "41:  }",
          "42:  if err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {",
          "43:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "44:  }",
          "46:  msg, err := client.CreateStorage(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))",
          "47:  return msg, metadata, err",
          "49: }",
          "51: func local_request_StorageService_CreateStorage_0(ctx context.Context, marshaler runtime.Marshaler, server StorageServiceServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "52:  var protoReq CreateStorageRequest",
          "53:  var metadata runtime.ServerMetadata",
          "55:  newReader, berr := utilities.IOReaderFactory(req.Body)",
          "56:  if berr != nil {",
          "57:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)",
          "58:  }",
          "59:  if err := marshaler.NewDecoder(newReader()).Decode(&protoReq); err != nil && err != io.EOF {",
          "60:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "61:  }",
          "63:  msg, err := server.CreateStorage(ctx, &protoReq)",
          "64:  return msg, metadata, err",
          "66: }",
          "68: func request_StorageService_GetStorage_0(ctx context.Context, marshaler runtime.Marshaler, client StorageServiceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "69:  var protoReq GetStorageRequest",
          "70:  var metadata runtime.ServerMetadata",
          "72:  var (",
          "73:   val string",
          "74:   ok  bool",
          "75:   err error",
          "76:   _   = err",
          "77:  )",
          "79:  val, ok = pathParams[\"id\"]",
          "80:  if !ok {",
          "81:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"id\")",
          "82:  }",
          "84:  protoReq.Id, err = runtime.Int32(val)",
          "85:  if err != nil {",
          "86:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"id\", err)",
          "87:  }",
          "89:  msg, err := client.GetStorage(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))",
          "90:  return msg, metadata, err",
          "92: }",
          "94: func local_request_StorageService_GetStorage_0(ctx context.Context, marshaler runtime.Marshaler, server StorageServiceServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "95:  var protoReq GetStorageRequest",
          "96:  var metadata runtime.ServerMetadata",
          "98:  var (",
          "99:   val string",
          "100:   ok  bool",
          "101:   err error",
          "102:   _   = err",
          "103:  )",
          "105:  val, ok = pathParams[\"id\"]",
          "106:  if !ok {",
          "107:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"id\")",
          "108:  }",
          "110:  protoReq.Id, err = runtime.Int32(val)",
          "111:  if err != nil {",
          "112:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"id\", err)",
          "113:  }",
          "115:  msg, err := server.GetStorage(ctx, &protoReq)",
          "116:  return msg, metadata, err",
          "118: }",
          "120: func request_StorageService_ListStorages_0(ctx context.Context, marshaler runtime.Marshaler, client StorageServiceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "121:  var protoReq ListStoragesRequest",
          "122:  var metadata runtime.ServerMetadata",
          "124:  msg, err := client.ListStorages(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))",
          "125:  return msg, metadata, err",
          "127: }",
          "129: func local_request_StorageService_ListStorages_0(ctx context.Context, marshaler runtime.Marshaler, server StorageServiceServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "130:  var protoReq ListStoragesRequest",
          "131:  var metadata runtime.ServerMetadata",
          "133:  msg, err := server.ListStorages(ctx, &protoReq)",
          "134:  return msg, metadata, err",
          "136: }",
          "138: var (",
          "139:  filter_StorageService_UpdateStorage_0 = &utilities.DoubleArray{Encoding: map[string]int{\"storage\": 0, \"id\": 1}, Base: []int{1, 4, 5, 2, 0, 0, 0, 0}, Check: []int{0, 1, 1, 2, 4, 2, 2, 3}}",
          "140: )",
          "142: func request_StorageService_UpdateStorage_0(ctx context.Context, marshaler runtime.Marshaler, client StorageServiceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "143:  var protoReq UpdateStorageRequest",
          "144:  var metadata runtime.ServerMetadata",
          "146:  newReader, berr := utilities.IOReaderFactory(req.Body)",
          "147:  if berr != nil {",
          "148:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)",
          "149:  }",
          "150:  if err := marshaler.NewDecoder(newReader()).Decode(&protoReq.Storage); err != nil && err != io.EOF {",
          "151:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "152:  }",
          "153:  if protoReq.UpdateMask == nil || len(protoReq.UpdateMask.GetPaths()) == 0 {",
          "154:   if fieldMask, err := runtime.FieldMaskFromRequestBody(newReader(), protoReq.Storage); err != nil {",
          "155:    return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "156:   } else {",
          "157:    protoReq.UpdateMask = fieldMask",
          "158:   }",
          "159:  }",
          "161:  var (",
          "162:   val string",
          "163:   ok  bool",
          "164:   err error",
          "165:   _   = err",
          "166:  )",
          "168:  val, ok = pathParams[\"storage.id\"]",
          "169:  if !ok {",
          "170:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"storage.id\")",
          "171:  }",
          "173:  err = runtime.PopulateFieldFromPath(&protoReq, \"storage.id\", val)",
          "174:  if err != nil {",
          "175:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"storage.id\", err)",
          "176:  }",
          "178:  if err := req.ParseForm(); err != nil {",
          "179:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "180:  }",
          "181:  if err := runtime.PopulateQueryParameters(&protoReq, req.Form, filter_StorageService_UpdateStorage_0); err != nil {",
          "182:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "183:  }",
          "185:  msg, err := client.UpdateStorage(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))",
          "186:  return msg, metadata, err",
          "188: }",
          "190: func local_request_StorageService_UpdateStorage_0(ctx context.Context, marshaler runtime.Marshaler, server StorageServiceServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "191:  var protoReq UpdateStorageRequest",
          "192:  var metadata runtime.ServerMetadata",
          "194:  newReader, berr := utilities.IOReaderFactory(req.Body)",
          "195:  if berr != nil {",
          "196:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", berr)",
          "197:  }",
          "198:  if err := marshaler.NewDecoder(newReader()).Decode(&protoReq.Storage); err != nil && err != io.EOF {",
          "199:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "200:  }",
          "201:  if protoReq.UpdateMask == nil || len(protoReq.UpdateMask.GetPaths()) == 0 {",
          "202:   if fieldMask, err := runtime.FieldMaskFromRequestBody(newReader(), protoReq.Storage); err != nil {",
          "203:    return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "204:   } else {",
          "205:    protoReq.UpdateMask = fieldMask",
          "206:   }",
          "207:  }",
          "209:  var (",
          "210:   val string",
          "211:   ok  bool",
          "212:   err error",
          "213:   _   = err",
          "214:  )",
          "216:  val, ok = pathParams[\"storage.id\"]",
          "217:  if !ok {",
          "218:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"storage.id\")",
          "219:  }",
          "221:  err = runtime.PopulateFieldFromPath(&protoReq, \"storage.id\", val)",
          "222:  if err != nil {",
          "223:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"storage.id\", err)",
          "224:  }",
          "226:  if err := req.ParseForm(); err != nil {",
          "227:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "228:  }",
          "229:  if err := runtime.PopulateQueryParameters(&protoReq, req.Form, filter_StorageService_UpdateStorage_0); err != nil {",
          "230:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"%v\", err)",
          "231:  }",
          "233:  msg, err := server.UpdateStorage(ctx, &protoReq)",
          "234:  return msg, metadata, err",
          "236: }",
          "238: func request_StorageService_DeleteStorage_0(ctx context.Context, marshaler runtime.Marshaler, client StorageServiceClient, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "239:  var protoReq DeleteStorageRequest",
          "240:  var metadata runtime.ServerMetadata",
          "242:  var (",
          "243:   val string",
          "244:   ok  bool",
          "245:   err error",
          "246:   _   = err",
          "247:  )",
          "249:  val, ok = pathParams[\"id\"]",
          "250:  if !ok {",
          "251:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"id\")",
          "252:  }",
          "254:  protoReq.Id, err = runtime.Int32(val)",
          "255:  if err != nil {",
          "256:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"id\", err)",
          "257:  }",
          "259:  msg, err := client.DeleteStorage(ctx, &protoReq, grpc.Header(&metadata.HeaderMD), grpc.Trailer(&metadata.TrailerMD))",
          "260:  return msg, metadata, err",
          "262: }",
          "264: func local_request_StorageService_DeleteStorage_0(ctx context.Context, marshaler runtime.Marshaler, server StorageServiceServer, req *http.Request, pathParams map[string]string) (proto.Message, runtime.ServerMetadata, error) {",
          "265:  var protoReq DeleteStorageRequest",
          "266:  var metadata runtime.ServerMetadata",
          "268:  var (",
          "269:   val string",
          "270:   ok  bool",
          "271:   err error",
          "272:   _   = err",
          "273:  )",
          "275:  val, ok = pathParams[\"id\"]",
          "276:  if !ok {",
          "277:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"missing parameter %s\", \"id\")",
          "278:  }",
          "280:  protoReq.Id, err = runtime.Int32(val)",
          "281:  if err != nil {",
          "282:   return nil, metadata, status.Errorf(codes.InvalidArgument, \"type mismatch, parameter: %s, error: %v\", \"id\", err)",
          "283:  }",
          "285:  msg, err := server.DeleteStorage(ctx, &protoReq)",
          "286:  return msg, metadata, err",
          "288: }",
          "294: func RegisterStorageServiceHandlerServer(ctx context.Context, mux *runtime.ServeMux, server StorageServiceServer) error {",
          "296:  mux.Handle(\"POST\", pattern_StorageService_CreateStorage_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "297:   ctx, cancel := context.WithCancel(req.Context())",
          "298:   defer cancel()",
          "299:   var stream runtime.ServerTransportStream",
          "300:   ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)",
          "301:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "302:   var err error",
          "303:   var annotatedContext context.Context",
          "304:   annotatedContext, err = runtime.AnnotateIncomingContext(ctx, mux, req, \"/memos.api.v2.StorageService/CreateStorage\", runtime.WithHTTPPathPattern(\"/api/v2/storages\"))",
          "305:   if err != nil {",
          "306:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "307:    return",
          "308:   }",
          "309:   resp, md, err := local_request_StorageService_CreateStorage_0(annotatedContext, inboundMarshaler, server, req, pathParams)",
          "310:   md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())",
          "311:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "312:   if err != nil {",
          "313:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "314:    return",
          "315:   }",
          "317:   forward_StorageService_CreateStorage_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "319:  })",
          "321:  mux.Handle(\"GET\", pattern_StorageService_GetStorage_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "322:   ctx, cancel := context.WithCancel(req.Context())",
          "323:   defer cancel()",
          "324:   var stream runtime.ServerTransportStream",
          "325:   ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)",
          "326:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "327:   var err error",
          "328:   var annotatedContext context.Context",
          "329:   annotatedContext, err = runtime.AnnotateIncomingContext(ctx, mux, req, \"/memos.api.v2.StorageService/GetStorage\", runtime.WithHTTPPathPattern(\"/api/v2/storages/{id}\"))",
          "330:   if err != nil {",
          "331:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "332:    return",
          "333:   }",
          "334:   resp, md, err := local_request_StorageService_GetStorage_0(annotatedContext, inboundMarshaler, server, req, pathParams)",
          "335:   md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())",
          "336:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "337:   if err != nil {",
          "338:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "339:    return",
          "340:   }",
          "342:   forward_StorageService_GetStorage_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "344:  })",
          "346:  mux.Handle(\"GET\", pattern_StorageService_ListStorages_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "347:   ctx, cancel := context.WithCancel(req.Context())",
          "348:   defer cancel()",
          "349:   var stream runtime.ServerTransportStream",
          "350:   ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)",
          "351:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "352:   var err error",
          "353:   var annotatedContext context.Context",
          "354:   annotatedContext, err = runtime.AnnotateIncomingContext(ctx, mux, req, \"/memos.api.v2.StorageService/ListStorages\", runtime.WithHTTPPathPattern(\"/api/v2/storages\"))",
          "355:   if err != nil {",
          "356:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "357:    return",
          "358:   }",
          "359:   resp, md, err := local_request_StorageService_ListStorages_0(annotatedContext, inboundMarshaler, server, req, pathParams)",
          "360:   md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())",
          "361:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "362:   if err != nil {",
          "363:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "364:    return",
          "365:   }",
          "367:   forward_StorageService_ListStorages_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "369:  })",
          "371:  mux.Handle(\"PATCH\", pattern_StorageService_UpdateStorage_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "372:   ctx, cancel := context.WithCancel(req.Context())",
          "373:   defer cancel()",
          "374:   var stream runtime.ServerTransportStream",
          "375:   ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)",
          "376:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "377:   var err error",
          "378:   var annotatedContext context.Context",
          "379:   annotatedContext, err = runtime.AnnotateIncomingContext(ctx, mux, req, \"/memos.api.v2.StorageService/UpdateStorage\", runtime.WithHTTPPathPattern(\"/api/v2/storages/{storage.id}\"))",
          "380:   if err != nil {",
          "381:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "382:    return",
          "383:   }",
          "384:   resp, md, err := local_request_StorageService_UpdateStorage_0(annotatedContext, inboundMarshaler, server, req, pathParams)",
          "385:   md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())",
          "386:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "387:   if err != nil {",
          "388:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "389:    return",
          "390:   }",
          "392:   forward_StorageService_UpdateStorage_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "394:  })",
          "396:  mux.Handle(\"DELETE\", pattern_StorageService_DeleteStorage_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "397:   ctx, cancel := context.WithCancel(req.Context())",
          "398:   defer cancel()",
          "399:   var stream runtime.ServerTransportStream",
          "400:   ctx = grpc.NewContextWithServerTransportStream(ctx, &stream)",
          "401:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "402:   var err error",
          "403:   var annotatedContext context.Context",
          "404:   annotatedContext, err = runtime.AnnotateIncomingContext(ctx, mux, req, \"/memos.api.v2.StorageService/DeleteStorage\", runtime.WithHTTPPathPattern(\"/api/v2/storages/{id}\"))",
          "405:   if err != nil {",
          "406:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "407:    return",
          "408:   }",
          "409:   resp, md, err := local_request_StorageService_DeleteStorage_0(annotatedContext, inboundMarshaler, server, req, pathParams)",
          "410:   md.HeaderMD, md.TrailerMD = metadata.Join(md.HeaderMD, stream.Header()), metadata.Join(md.TrailerMD, stream.Trailer())",
          "411:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "412:   if err != nil {",
          "413:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "414:    return",
          "415:   }",
          "417:   forward_StorageService_DeleteStorage_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "419:  })",
          "421:  return nil",
          "422: }",
          "426: func RegisterStorageServiceHandlerFromEndpoint(ctx context.Context, mux *runtime.ServeMux, endpoint string, opts []grpc.DialOption) (err error) {",
          "427:  conn, err := grpc.DialContext(ctx, endpoint, opts...)",
          "428:  if err != nil {",
          "429:   return err",
          "430:  }",
          "431:  defer func() {",
          "432:   if err != nil {",
          "433:    if cerr := conn.Close(); cerr != nil {",
          "434:     grpclog.Infof(\"Failed to close conn to %s: %v\", endpoint, cerr)",
          "435:    }",
          "436:    return",
          "437:   }",
          "438:   go func() {",
          "439:    <-ctx.Done()",
          "440:    if cerr := conn.Close(); cerr != nil {",
          "441:     grpclog.Infof(\"Failed to close conn to %s: %v\", endpoint, cerr)",
          "442:    }",
          "443:   }()",
          "444:  }()",
          "446:  return RegisterStorageServiceHandler(ctx, mux, conn)",
          "447: }",
          "451: func RegisterStorageServiceHandler(ctx context.Context, mux *runtime.ServeMux, conn *grpc.ClientConn) error {",
          "452:  return RegisterStorageServiceHandlerClient(ctx, mux, NewStorageServiceClient(conn))",
          "453: }",
          "460: func RegisterStorageServiceHandlerClient(ctx context.Context, mux *runtime.ServeMux, client StorageServiceClient) error {",
          "462:  mux.Handle(\"POST\", pattern_StorageService_CreateStorage_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "463:   ctx, cancel := context.WithCancel(req.Context())",
          "464:   defer cancel()",
          "465:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "466:   var err error",
          "467:   var annotatedContext context.Context",
          "468:   annotatedContext, err = runtime.AnnotateContext(ctx, mux, req, \"/memos.api.v2.StorageService/CreateStorage\", runtime.WithHTTPPathPattern(\"/api/v2/storages\"))",
          "469:   if err != nil {",
          "470:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "471:    return",
          "472:   }",
          "473:   resp, md, err := request_StorageService_CreateStorage_0(annotatedContext, inboundMarshaler, client, req, pathParams)",
          "474:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "475:   if err != nil {",
          "476:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "477:    return",
          "478:   }",
          "480:   forward_StorageService_CreateStorage_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "482:  })",
          "484:  mux.Handle(\"GET\", pattern_StorageService_GetStorage_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "485:   ctx, cancel := context.WithCancel(req.Context())",
          "486:   defer cancel()",
          "487:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "488:   var err error",
          "489:   var annotatedContext context.Context",
          "490:   annotatedContext, err = runtime.AnnotateContext(ctx, mux, req, \"/memos.api.v2.StorageService/GetStorage\", runtime.WithHTTPPathPattern(\"/api/v2/storages/{id}\"))",
          "491:   if err != nil {",
          "492:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "493:    return",
          "494:   }",
          "495:   resp, md, err := request_StorageService_GetStorage_0(annotatedContext, inboundMarshaler, client, req, pathParams)",
          "496:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "497:   if err != nil {",
          "498:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "499:    return",
          "500:   }",
          "502:   forward_StorageService_GetStorage_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "504:  })",
          "506:  mux.Handle(\"GET\", pattern_StorageService_ListStorages_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "507:   ctx, cancel := context.WithCancel(req.Context())",
          "508:   defer cancel()",
          "509:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "510:   var err error",
          "511:   var annotatedContext context.Context",
          "512:   annotatedContext, err = runtime.AnnotateContext(ctx, mux, req, \"/memos.api.v2.StorageService/ListStorages\", runtime.WithHTTPPathPattern(\"/api/v2/storages\"))",
          "513:   if err != nil {",
          "514:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "515:    return",
          "516:   }",
          "517:   resp, md, err := request_StorageService_ListStorages_0(annotatedContext, inboundMarshaler, client, req, pathParams)",
          "518:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "519:   if err != nil {",
          "520:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "521:    return",
          "522:   }",
          "524:   forward_StorageService_ListStorages_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "526:  })",
          "528:  mux.Handle(\"PATCH\", pattern_StorageService_UpdateStorage_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "529:   ctx, cancel := context.WithCancel(req.Context())",
          "530:   defer cancel()",
          "531:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "532:   var err error",
          "533:   var annotatedContext context.Context",
          "534:   annotatedContext, err = runtime.AnnotateContext(ctx, mux, req, \"/memos.api.v2.StorageService/UpdateStorage\", runtime.WithHTTPPathPattern(\"/api/v2/storages/{storage.id}\"))",
          "535:   if err != nil {",
          "536:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "537:    return",
          "538:   }",
          "539:   resp, md, err := request_StorageService_UpdateStorage_0(annotatedContext, inboundMarshaler, client, req, pathParams)",
          "540:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "541:   if err != nil {",
          "542:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "543:    return",
          "544:   }",
          "546:   forward_StorageService_UpdateStorage_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "548:  })",
          "550:  mux.Handle(\"DELETE\", pattern_StorageService_DeleteStorage_0, func(w http.ResponseWriter, req *http.Request, pathParams map[string]string) {",
          "551:   ctx, cancel := context.WithCancel(req.Context())",
          "552:   defer cancel()",
          "553:   inboundMarshaler, outboundMarshaler := runtime.MarshalerForRequest(mux, req)",
          "554:   var err error",
          "555:   var annotatedContext context.Context",
          "556:   annotatedContext, err = runtime.AnnotateContext(ctx, mux, req, \"/memos.api.v2.StorageService/DeleteStorage\", runtime.WithHTTPPathPattern(\"/api/v2/storages/{id}\"))",
          "557:   if err != nil {",
          "558:    runtime.HTTPError(ctx, mux, outboundMarshaler, w, req, err)",
          "559:    return",
          "560:   }",
          "561:   resp, md, err := request_StorageService_DeleteStorage_0(annotatedContext, inboundMarshaler, client, req, pathParams)",
          "562:   annotatedContext = runtime.NewServerMetadataContext(annotatedContext, md)",
          "563:   if err != nil {",
          "564:    runtime.HTTPError(annotatedContext, mux, outboundMarshaler, w, req, err)",
          "565:    return",
          "566:   }",
          "568:   forward_StorageService_DeleteStorage_0(annotatedContext, mux, outboundMarshaler, w, req, resp, mux.GetForwardResponseOptions()...)",
          "570:  })",
          "572:  return nil",
          "573: }",
          "575: var (",
          "576:  pattern_StorageService_CreateStorage_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{\"api\", \"v2\", \"storages\"}, \"\"))",
          "578:  pattern_StorageService_GetStorage_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 1, 0, 4, 1, 5, 3}, []string{\"api\", \"v2\", \"storages\", \"id\"}, \"\"))",
          "580:  pattern_StorageService_ListStorages_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2}, []string{\"api\", \"v2\", \"storages\"}, \"\"))",
          "582:  pattern_StorageService_UpdateStorage_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 1, 0, 4, 1, 5, 3}, []string{\"api\", \"v2\", \"storages\", \"storage.id\"}, \"\"))",
          "584:  pattern_StorageService_DeleteStorage_0 = runtime.MustPattern(runtime.NewPattern(1, []int{2, 0, 2, 1, 2, 2, 1, 0, 4, 1, 5, 3}, []string{\"api\", \"v2\", \"storages\", \"id\"}, \"\"))",
          "585: )",
          "587: var (",
          "588:  forward_StorageService_CreateStorage_0 = runtime.ForwardResponseMessage",
          "590:  forward_StorageService_GetStorage_0 = runtime.ForwardResponseMessage",
          "592:  forward_StorageService_ListStorages_0 = runtime.ForwardResponseMessage",
          "594:  forward_StorageService_UpdateStorage_0 = runtime.ForwardResponseMessage",
          "596:  forward_StorageService_DeleteStorage_0 = runtime.ForwardResponseMessage",
          "597: )",
          "",
          "---------------"
        ],
        "proto/gen/api/v2/storage_service_grpc.pb.go||proto/gen/api/v2/storage_service_grpc.pb.go": [
          "File: proto/gen/api/v2/storage_service_grpc.pb.go -> proto/gen/api/v2/storage_service_grpc.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: package apiv2",
          "9: import (",
          "10:  context \"context\"",
          "11:  grpc \"google.golang.org/grpc\"",
          "12:  codes \"google.golang.org/grpc/codes\"",
          "13:  status \"google.golang.org/grpc/status\"",
          "14: )",
          "19: const _ = grpc.SupportPackageIsVersion7",
          "21: const (",
          "22:  StorageService_CreateStorage_FullMethodName = \"/memos.api.v2.StorageService/CreateStorage\"",
          "23:  StorageService_GetStorage_FullMethodName    = \"/memos.api.v2.StorageService/GetStorage\"",
          "24:  StorageService_ListStorages_FullMethodName  = \"/memos.api.v2.StorageService/ListStorages\"",
          "25:  StorageService_UpdateStorage_FullMethodName = \"/memos.api.v2.StorageService/UpdateStorage\"",
          "26:  StorageService_DeleteStorage_FullMethodName = \"/memos.api.v2.StorageService/DeleteStorage\"",
          "27: )",
          "32: type StorageServiceClient interface {",
          "34:  CreateStorage(ctx context.Context, in *CreateStorageRequest, opts ...grpc.CallOption) (*CreateStorageResponse, error)",
          "36:  GetStorage(ctx context.Context, in *GetStorageRequest, opts ...grpc.CallOption) (*GetStorageResponse, error)",
          "38:  ListStorages(ctx context.Context, in *ListStoragesRequest, opts ...grpc.CallOption) (*ListStoragesResponse, error)",
          "40:  UpdateStorage(ctx context.Context, in *UpdateStorageRequest, opts ...grpc.CallOption) (*UpdateStorageResponse, error)",
          "42:  DeleteStorage(ctx context.Context, in *DeleteStorageRequest, opts ...grpc.CallOption) (*DeleteStorageResponse, error)",
          "43: }",
          "45: type storageServiceClient struct {",
          "46:  cc grpc.ClientConnInterface",
          "47: }",
          "49: func NewStorageServiceClient(cc grpc.ClientConnInterface) StorageServiceClient {",
          "50:  return &storageServiceClient{cc}",
          "51: }",
          "53: func (c *storageServiceClient) CreateStorage(ctx context.Context, in *CreateStorageRequest, opts ...grpc.CallOption) (*CreateStorageResponse, error) {",
          "54:  out := new(CreateStorageResponse)",
          "55:  err := c.cc.Invoke(ctx, StorageService_CreateStorage_FullMethodName, in, out, opts...)",
          "56:  if err != nil {",
          "57:   return nil, err",
          "58:  }",
          "59:  return out, nil",
          "60: }",
          "62: func (c *storageServiceClient) GetStorage(ctx context.Context, in *GetStorageRequest, opts ...grpc.CallOption) (*GetStorageResponse, error) {",
          "63:  out := new(GetStorageResponse)",
          "64:  err := c.cc.Invoke(ctx, StorageService_GetStorage_FullMethodName, in, out, opts...)",
          "65:  if err != nil {",
          "66:   return nil, err",
          "67:  }",
          "68:  return out, nil",
          "69: }",
          "71: func (c *storageServiceClient) ListStorages(ctx context.Context, in *ListStoragesRequest, opts ...grpc.CallOption) (*ListStoragesResponse, error) {",
          "72:  out := new(ListStoragesResponse)",
          "73:  err := c.cc.Invoke(ctx, StorageService_ListStorages_FullMethodName, in, out, opts...)",
          "74:  if err != nil {",
          "75:   return nil, err",
          "76:  }",
          "77:  return out, nil",
          "78: }",
          "80: func (c *storageServiceClient) UpdateStorage(ctx context.Context, in *UpdateStorageRequest, opts ...grpc.CallOption) (*UpdateStorageResponse, error) {",
          "81:  out := new(UpdateStorageResponse)",
          "82:  err := c.cc.Invoke(ctx, StorageService_UpdateStorage_FullMethodName, in, out, opts...)",
          "83:  if err != nil {",
          "84:   return nil, err",
          "85:  }",
          "86:  return out, nil",
          "87: }",
          "89: func (c *storageServiceClient) DeleteStorage(ctx context.Context, in *DeleteStorageRequest, opts ...grpc.CallOption) (*DeleteStorageResponse, error) {",
          "90:  out := new(DeleteStorageResponse)",
          "91:  err := c.cc.Invoke(ctx, StorageService_DeleteStorage_FullMethodName, in, out, opts...)",
          "92:  if err != nil {",
          "93:   return nil, err",
          "94:  }",
          "95:  return out, nil",
          "96: }",
          "101: type StorageServiceServer interface {",
          "103:  CreateStorage(context.Context, *CreateStorageRequest) (*CreateStorageResponse, error)",
          "105:  GetStorage(context.Context, *GetStorageRequest) (*GetStorageResponse, error)",
          "107:  ListStorages(context.Context, *ListStoragesRequest) (*ListStoragesResponse, error)",
          "109:  UpdateStorage(context.Context, *UpdateStorageRequest) (*UpdateStorageResponse, error)",
          "111:  DeleteStorage(context.Context, *DeleteStorageRequest) (*DeleteStorageResponse, error)",
          "112:  mustEmbedUnimplementedStorageServiceServer()",
          "113: }",
          "116: type UnimplementedStorageServiceServer struct {",
          "117: }",
          "119: func (UnimplementedStorageServiceServer) CreateStorage(context.Context, *CreateStorageRequest) (*CreateStorageResponse, error) {",
          "120:  return nil, status.Errorf(codes.Unimplemented, \"method CreateStorage not implemented\")",
          "121: }",
          "122: func (UnimplementedStorageServiceServer) GetStorage(context.Context, *GetStorageRequest) (*GetStorageResponse, error) {",
          "123:  return nil, status.Errorf(codes.Unimplemented, \"method GetStorage not implemented\")",
          "124: }",
          "125: func (UnimplementedStorageServiceServer) ListStorages(context.Context, *ListStoragesRequest) (*ListStoragesResponse, error) {",
          "126:  return nil, status.Errorf(codes.Unimplemented, \"method ListStorages not implemented\")",
          "127: }",
          "128: func (UnimplementedStorageServiceServer) UpdateStorage(context.Context, *UpdateStorageRequest) (*UpdateStorageResponse, error) {",
          "129:  return nil, status.Errorf(codes.Unimplemented, \"method UpdateStorage not implemented\")",
          "130: }",
          "131: func (UnimplementedStorageServiceServer) DeleteStorage(context.Context, *DeleteStorageRequest) (*DeleteStorageResponse, error) {",
          "132:  return nil, status.Errorf(codes.Unimplemented, \"method DeleteStorage not implemented\")",
          "133: }",
          "134: func (UnimplementedStorageServiceServer) mustEmbedUnimplementedStorageServiceServer() {}",
          "139: type UnsafeStorageServiceServer interface {",
          "140:  mustEmbedUnimplementedStorageServiceServer()",
          "141: }",
          "143: func RegisterStorageServiceServer(s grpc.ServiceRegistrar, srv StorageServiceServer) {",
          "144:  s.RegisterService(&StorageService_ServiceDesc, srv)",
          "145: }",
          "147: func _StorageService_CreateStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {",
          "148:  in := new(CreateStorageRequest)",
          "149:  if err := dec(in); err != nil {",
          "150:   return nil, err",
          "151:  }",
          "152:  if interceptor == nil {",
          "153:   return srv.(StorageServiceServer).CreateStorage(ctx, in)",
          "154:  }",
          "155:  info := &grpc.UnaryServerInfo{",
          "156:   Server:     srv,",
          "157:   FullMethod: StorageService_CreateStorage_FullMethodName,",
          "158:  }",
          "159:  handler := func(ctx context.Context, req interface{}) (interface{}, error) {",
          "160:   return srv.(StorageServiceServer).CreateStorage(ctx, req.(*CreateStorageRequest))",
          "161:  }",
          "162:  return interceptor(ctx, in, info, handler)",
          "163: }",
          "165: func _StorageService_GetStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {",
          "166:  in := new(GetStorageRequest)",
          "167:  if err := dec(in); err != nil {",
          "168:   return nil, err",
          "169:  }",
          "170:  if interceptor == nil {",
          "171:   return srv.(StorageServiceServer).GetStorage(ctx, in)",
          "172:  }",
          "173:  info := &grpc.UnaryServerInfo{",
          "174:   Server:     srv,",
          "175:   FullMethod: StorageService_GetStorage_FullMethodName,",
          "176:  }",
          "177:  handler := func(ctx context.Context, req interface{}) (interface{}, error) {",
          "178:   return srv.(StorageServiceServer).GetStorage(ctx, req.(*GetStorageRequest))",
          "179:  }",
          "180:  return interceptor(ctx, in, info, handler)",
          "181: }",
          "183: func _StorageService_ListStorages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {",
          "184:  in := new(ListStoragesRequest)",
          "185:  if err := dec(in); err != nil {",
          "186:   return nil, err",
          "187:  }",
          "188:  if interceptor == nil {",
          "189:   return srv.(StorageServiceServer).ListStorages(ctx, in)",
          "190:  }",
          "191:  info := &grpc.UnaryServerInfo{",
          "192:   Server:     srv,",
          "193:   FullMethod: StorageService_ListStorages_FullMethodName,",
          "194:  }",
          "195:  handler := func(ctx context.Context, req interface{}) (interface{}, error) {",
          "196:   return srv.(StorageServiceServer).ListStorages(ctx, req.(*ListStoragesRequest))",
          "197:  }",
          "198:  return interceptor(ctx, in, info, handler)",
          "199: }",
          "201: func _StorageService_UpdateStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {",
          "202:  in := new(UpdateStorageRequest)",
          "203:  if err := dec(in); err != nil {",
          "204:   return nil, err",
          "205:  }",
          "206:  if interceptor == nil {",
          "207:   return srv.(StorageServiceServer).UpdateStorage(ctx, in)",
          "208:  }",
          "209:  info := &grpc.UnaryServerInfo{",
          "210:   Server:     srv,",
          "211:   FullMethod: StorageService_UpdateStorage_FullMethodName,",
          "212:  }",
          "213:  handler := func(ctx context.Context, req interface{}) (interface{}, error) {",
          "214:   return srv.(StorageServiceServer).UpdateStorage(ctx, req.(*UpdateStorageRequest))",
          "215:  }",
          "216:  return interceptor(ctx, in, info, handler)",
          "217: }",
          "219: func _StorageService_DeleteStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {",
          "220:  in := new(DeleteStorageRequest)",
          "221:  if err := dec(in); err != nil {",
          "222:   return nil, err",
          "223:  }",
          "224:  if interceptor == nil {",
          "225:   return srv.(StorageServiceServer).DeleteStorage(ctx, in)",
          "226:  }",
          "227:  info := &grpc.UnaryServerInfo{",
          "228:   Server:     srv,",
          "229:   FullMethod: StorageService_DeleteStorage_FullMethodName,",
          "230:  }",
          "231:  handler := func(ctx context.Context, req interface{}) (interface{}, error) {",
          "232:   return srv.(StorageServiceServer).DeleteStorage(ctx, req.(*DeleteStorageRequest))",
          "233:  }",
          "234:  return interceptor(ctx, in, info, handler)",
          "235: }",
          "240: var StorageService_ServiceDesc = grpc.ServiceDesc{",
          "241:  ServiceName: \"memos.api.v2.StorageService\",",
          "242:  HandlerType: (*StorageServiceServer)(nil),",
          "243:  Methods: []grpc.MethodDesc{",
          "244:   {",
          "245:    MethodName: \"CreateStorage\",",
          "246:    Handler:    _StorageService_CreateStorage_Handler,",
          "247:   },",
          "248:   {",
          "249:    MethodName: \"GetStorage\",",
          "250:    Handler:    _StorageService_GetStorage_Handler,",
          "251:   },",
          "252:   {",
          "253:    MethodName: \"ListStorages\",",
          "254:    Handler:    _StorageService_ListStorages_Handler,",
          "255:   },",
          "256:   {",
          "257:    MethodName: \"UpdateStorage\",",
          "258:    Handler:    _StorageService_UpdateStorage_Handler,",
          "259:   },",
          "260:   {",
          "261:    MethodName: \"DeleteStorage\",",
          "262:    Handler:    _StorageService_DeleteStorage_Handler,",
          "263:   },",
          "264:  },",
          "265:  Streams:  []grpc.StreamDesc{},",
          "266:  Metadata: \"api/v2/storage_service.proto\",",
          "267: }",
          "",
          "---------------"
        ],
        "proto/gen/store/idp.pb.go||proto/gen/store/idp.pb.go": [
          "File: proto/gen/store/idp.pb.go -> proto/gen/store/idp.pb.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "70:  return nil",
          "71: }",
          "74:  if x, ok := x.GetConfig().(*IdentityProviderConfig_Oauth2); ok {",
          "75:   return x.Oauth2",
          "76:  }",
          "",
          "[Removed Lines]",
          "73: func (x *IdentityProviderConfig) GetOauth2() *IdentityProviderConfig_OAuth2 {",
          "",
          "[Added Lines]",
          "73: func (x *IdentityProviderConfig) GetOauth2() *OAuth2Config {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "82: }",
          "84: type IdentityProviderConfig_Oauth2 struct {",
          "86: }",
          "88: func (*IdentityProviderConfig_Oauth2) isIdentityProviderConfig_Config() {}",
          "91:  state         protoimpl.MessageState",
          "92:  sizeCache     protoimpl.SizeCache",
          "93:  unknownFields protoimpl.UnknownFields",
          "",
          "[Removed Lines]",
          "85:  Oauth2 *IdentityProviderConfig_OAuth2 `protobuf:\"bytes,1,opt,name=oauth2,proto3,oneof\"`",
          "90: type IdentityProviderConfig_FieldMapping struct {",
          "",
          "[Added Lines]",
          "85:  Oauth2 *OAuth2Config `protobuf:\"bytes,1,opt,name=oauth2,proto3,oneof\"`",
          "90: type FieldMapping struct {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "97:  Email       string `protobuf:\"bytes,3,opt,name=email,proto3\" json:\"email,omitempty\"`",
          "98: }",
          "102:  if protoimpl.UnsafeEnabled {",
          "103:   mi := &file_store_idp_proto_msgTypes[1]",
          "104:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "100: func (x *IdentityProviderConfig_FieldMapping) Reset() {",
          "",
          "[Added Lines]",
          "100: func (x *FieldMapping) Reset() {",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "106:  }",
          "107: }",
          "110:  return protoimpl.X.MessageStringOf(x)",
          "111: }",
          "116:  mi := &file_store_idp_proto_msgTypes[1]",
          "117:  if protoimpl.UnsafeEnabled && x != nil {",
          "118:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "109: func (x *IdentityProviderConfig_FieldMapping) String() string {",
          "113: func (*IdentityProviderConfig_FieldMapping) ProtoMessage() {}",
          "115: func (x *IdentityProviderConfig_FieldMapping) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "109: func (x *FieldMapping) String() string {",
          "113: func (*FieldMapping) ProtoMessage() {}",
          "115: func (x *FieldMapping) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "124:  return mi.MessageOf(x)",
          "125: }",
          "130: }",
          "133:  if x != nil {",
          "134:   return x.Identifier",
          "135:  }",
          "136:  return \"\"",
          "137: }",
          "140:  if x != nil {",
          "141:   return x.DisplayName",
          "142:  }",
          "143:  return \"\"",
          "144: }",
          "147:  if x != nil {",
          "148:   return x.Email",
          "149:  }",
          "150:  return \"\"",
          "151: }",
          "154:  state         protoimpl.MessageState",
          "155:  sizeCache     protoimpl.SizeCache",
          "156:  unknownFields protoimpl.UnknownFields",
          "165: }",
          "169:  if protoimpl.UnsafeEnabled {",
          "170:   mi := &file_store_idp_proto_msgTypes[2]",
          "171:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "128: func (*IdentityProviderConfig_FieldMapping) Descriptor() ([]byte, []int) {",
          "129:  return file_store_idp_proto_rawDescGZIP(), []int{0, 0}",
          "132: func (x *IdentityProviderConfig_FieldMapping) GetIdentifier() string {",
          "139: func (x *IdentityProviderConfig_FieldMapping) GetDisplayName() string {",
          "146: func (x *IdentityProviderConfig_FieldMapping) GetEmail() string {",
          "153: type IdentityProviderConfig_OAuth2 struct {",
          "158:  ClientId     string                               `protobuf:\"bytes,1,opt,name=client_id,json=clientId,proto3\" json:\"client_id,omitempty\"`",
          "159:  ClientSecret string                               `protobuf:\"bytes,2,opt,name=client_secret,json=clientSecret,proto3\" json:\"client_secret,omitempty\"`",
          "160:  AuthUrl      string                               `protobuf:\"bytes,3,opt,name=auth_url,json=authUrl,proto3\" json:\"auth_url,omitempty\"`",
          "161:  TokenUrl     string                               `protobuf:\"bytes,4,opt,name=token_url,json=tokenUrl,proto3\" json:\"token_url,omitempty\"`",
          "162:  UserInfoUrl  string                               `protobuf:\"bytes,5,opt,name=user_info_url,json=userInfoUrl,proto3\" json:\"user_info_url,omitempty\"`",
          "163:  Scopes       []string                             `protobuf:\"bytes,6,rep,name=scopes,proto3\" json:\"scopes,omitempty\"`",
          "164:  FieldMapping *IdentityProviderConfig_FieldMapping `protobuf:\"bytes,7,opt,name=field_mapping,json=fieldMapping,proto3\" json:\"field_mapping,omitempty\"`",
          "167: func (x *IdentityProviderConfig_OAuth2) Reset() {",
          "",
          "[Added Lines]",
          "128: func (*FieldMapping) Descriptor() ([]byte, []int) {",
          "129:  return file_store_idp_proto_rawDescGZIP(), []int{1}",
          "132: func (x *FieldMapping) GetIdentifier() string {",
          "139: func (x *FieldMapping) GetDisplayName() string {",
          "146: func (x *FieldMapping) GetEmail() string {",
          "153: type OAuth2Config struct {",
          "158:  ClientId     string        `protobuf:\"bytes,1,opt,name=client_id,json=clientId,proto3\" json:\"client_id,omitempty\"`",
          "159:  ClientSecret string        `protobuf:\"bytes,2,opt,name=client_secret,json=clientSecret,proto3\" json:\"client_secret,omitempty\"`",
          "160:  AuthUrl      string        `protobuf:\"bytes,3,opt,name=auth_url,json=authUrl,proto3\" json:\"auth_url,omitempty\"`",
          "161:  TokenUrl     string        `protobuf:\"bytes,4,opt,name=token_url,json=tokenUrl,proto3\" json:\"token_url,omitempty\"`",
          "162:  UserInfoUrl  string        `protobuf:\"bytes,5,opt,name=user_info_url,json=userInfoUrl,proto3\" json:\"user_info_url,omitempty\"`",
          "163:  Scopes       []string      `protobuf:\"bytes,6,rep,name=scopes,proto3\" json:\"scopes,omitempty\"`",
          "164:  FieldMapping *FieldMapping `protobuf:\"bytes,7,opt,name=field_mapping,json=fieldMapping,proto3\" json:\"field_mapping,omitempty\"`",
          "167: func (x *OAuth2Config) Reset() {",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "173:  }",
          "174: }",
          "177:  return protoimpl.X.MessageStringOf(x)",
          "178: }",
          "183:  mi := &file_store_idp_proto_msgTypes[2]",
          "184:  if protoimpl.UnsafeEnabled && x != nil {",
          "185:   ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))",
          "",
          "[Removed Lines]",
          "176: func (x *IdentityProviderConfig_OAuth2) String() string {",
          "180: func (*IdentityProviderConfig_OAuth2) ProtoMessage() {}",
          "182: func (x *IdentityProviderConfig_OAuth2) ProtoReflect() protoreflect.Message {",
          "",
          "[Added Lines]",
          "176: func (x *OAuth2Config) String() string {",
          "180: func (*OAuth2Config) ProtoMessage() {}",
          "182: func (x *OAuth2Config) ProtoReflect() protoreflect.Message {",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "191:  return mi.MessageOf(x)",
          "192: }",
          "197: }",
          "200:  if x != nil {",
          "201:   return x.ClientId",
          "202:  }",
          "203:  return \"\"",
          "204: }",
          "207:  if x != nil {",
          "208:   return x.ClientSecret",
          "209:  }",
          "210:  return \"\"",
          "211: }",
          "214:  if x != nil {",
          "215:   return x.AuthUrl",
          "216:  }",
          "217:  return \"\"",
          "218: }",
          "221:  if x != nil {",
          "222:   return x.TokenUrl",
          "223:  }",
          "224:  return \"\"",
          "225: }",
          "228:  if x != nil {",
          "229:   return x.UserInfoUrl",
          "230:  }",
          "231:  return \"\"",
          "232: }",
          "235:  if x != nil {",
          "236:   return x.Scopes",
          "237:  }",
          "238:  return nil",
          "239: }",
          "242:  if x != nil {",
          "243:   return x.FieldMapping",
          "244:  }",
          "",
          "[Removed Lines]",
          "195: func (*IdentityProviderConfig_OAuth2) Descriptor() ([]byte, []int) {",
          "196:  return file_store_idp_proto_rawDescGZIP(), []int{0, 1}",
          "199: func (x *IdentityProviderConfig_OAuth2) GetClientId() string {",
          "206: func (x *IdentityProviderConfig_OAuth2) GetClientSecret() string {",
          "213: func (x *IdentityProviderConfig_OAuth2) GetAuthUrl() string {",
          "220: func (x *IdentityProviderConfig_OAuth2) GetTokenUrl() string {",
          "227: func (x *IdentityProviderConfig_OAuth2) GetUserInfoUrl() string {",
          "234: func (x *IdentityProviderConfig_OAuth2) GetScopes() []string {",
          "241: func (x *IdentityProviderConfig_OAuth2) GetFieldMapping() *IdentityProviderConfig_FieldMapping {",
          "",
          "[Added Lines]",
          "195: func (*OAuth2Config) Descriptor() ([]byte, []int) {",
          "196:  return file_store_idp_proto_rawDescGZIP(), []int{2}",
          "199: func (x *OAuth2Config) GetClientId() string {",
          "206: func (x *OAuth2Config) GetClientSecret() string {",
          "213: func (x *OAuth2Config) GetAuthUrl() string {",
          "220: func (x *OAuth2Config) GetTokenUrl() string {",
          "227: func (x *OAuth2Config) GetUserInfoUrl() string {",
          "234: func (x *OAuth2Config) GetScopes() []string {",
          "241: func (x *OAuth2Config) GetFieldMapping() *FieldMapping {",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "250: var file_store_idp_proto_rawDesc = []byte{",
          "251:  0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2f, 0x69, 0x64, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,",
          "294: }",
          "296: var (",
          "",
          "[Removed Lines]",
          "252:  0x6f, 0x12, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0xe9,",
          "253:  0x03, 0x0a, 0x16, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69,",
          "254:  0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x44, 0x0a, 0x06, 0x6f, 0x61, 0x75,",
          "255:  0x74, 0x68, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x65, 0x6d, 0x6f,",
          "256:  0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,",
          "257:  0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4f,",
          "258:  0x41, 0x75, 0x74, 0x68, 0x32, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x1a,",
          "259:  0x67, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12,",
          "260:  0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,",
          "261:  0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,",
          "262:  0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,",
          "263:  0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61,",
          "264:  0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,",
          "265:  0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x95, 0x02, 0x0a, 0x06, 0x4f, 0x41, 0x75,",
          "266:  0x74, 0x68, 0x32, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,",
          "267:  0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,",
          "268:  0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65,",
          "269:  0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53,",
          "270:  0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72,",
          "271:  0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c,",
          "272:  0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,",
          "273:  0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a,",
          "274:  0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05,",
          "275:  0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x72,",
          "276:  0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,",
          "277:  0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x0d, 0x66, 0x69, 0x65,",
          "278:  0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,",
          "279:  0x32, 0x30, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x49,",
          "280:  0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43,",
          "281:  0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69,",
          "282:  0x6e, 0x67, 0x52, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,",
          "283:  0x42, 0x08, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x93, 0x01, 0x0a, 0x0f, 0x63,",
          "284:  0x6f, 0x6d, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x08,",
          "285:  0x49, 0x64, 0x70, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68,",
          "286:  0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f,",
          "287:  0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f,",
          "288:  0x73, 0x74, 0x6f, 0x72, 0x65, 0xa2, 0x02, 0x03, 0x4d, 0x53, 0x58, 0xaa, 0x02, 0x0b, 0x4d, 0x65,",
          "289:  0x6d, 0x6f, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0xca, 0x02, 0x0b, 0x4d, 0x65, 0x6d, 0x6f,",
          "290:  0x73, 0x5c, 0x53, 0x74, 0x6f, 0x72, 0x65, 0xe2, 0x02, 0x17, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c,",
          "291:  0x53, 0x74, 0x6f, 0x72, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,",
          "292:  0x61, 0xea, 0x02, 0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x53, 0x74, 0x6f, 0x72, 0x65,",
          "293:  0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,",
          "",
          "[Added Lines]",
          "252:  0x6f, 0x12, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x57,",
          "253:  0x0a, 0x16, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,",
          "254:  0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x33, 0x0a, 0x06, 0x6f, 0x61, 0x75, 0x74,",
          "255:  0x68, 0x32, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73,",
          "256:  0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6f, 0x6e,",
          "257:  0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x42, 0x08, 0x0a,",
          "258:  0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x67, 0x0a, 0x0c, 0x46, 0x69, 0x65, 0x6c, 0x64,",
          "259:  0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,",
          "260:  0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65,",
          "261:  0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c,",
          "262:  0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,",
          "263:  0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,",
          "264:  0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,",
          "265:  0x22, 0x84, 0x02, 0x0a, 0x0c, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x43, 0x6f, 0x6e, 0x66, 0x69,",
          "266:  0x67, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,",
          "267:  0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23,",
          "268:  0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,",
          "269:  0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63,",
          "270:  0x72, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x72, 0x6c, 0x18,",
          "271:  0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x1b,",
          "272:  0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,",
          "273:  0x09, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x75,",
          "274:  0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,",
          "275:  0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x55, 0x72, 0x6c, 0x12,",
          "276:  0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,",
          "277:  0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x0d, 0x66, 0x69, 0x65, 0x6c, 0x64,",
          "278:  0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,",
          "279:  0x2e, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x46, 0x69, 0x65,",
          "280:  0x6c, 0x64, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64,",
          "281:  0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x42, 0x93, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e,",
          "282:  0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x08, 0x49, 0x64, 0x70,",
          "283:  0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,",
          "284:  0x63, 0x6f, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x6d, 0x65, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x65, 0x6d,",
          "285:  0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x74, 0x6f,",
          "286:  0x72, 0x65, 0xa2, 0x02, 0x03, 0x4d, 0x53, 0x58, 0xaa, 0x02, 0x0b, 0x4d, 0x65, 0x6d, 0x6f, 0x73,",
          "287:  0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0xca, 0x02, 0x0b, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x53,",
          "288:  0x74, 0x6f, 0x72, 0x65, 0xe2, 0x02, 0x17, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x5c, 0x53, 0x74, 0x6f,",
          "289:  0x72, 0x65, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,",
          "290:  0x0c, 0x4d, 0x65, 0x6d, 0x6f, 0x73, 0x3a, 0x3a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70,",
          "291:  0x72, 0x6f, 0x74, 0x6f, 0x33,",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "308: var file_store_idp_proto_msgTypes = make([]protoimpl.MessageInfo, 3)",
          "309: var file_store_idp_proto_goTypes = []interface{}{",
          "313: }",
          "314: var file_store_idp_proto_depIdxs = []int32{",
          "317:  2, // [2:2] is the sub-list for method output_type",
          "318:  2, // [2:2] is the sub-list for method input_type",
          "319:  2, // [2:2] is the sub-list for extension type_name",
          "",
          "[Removed Lines]",
          "310:  (*IdentityProviderConfig)(nil),              // 0: memos.store.IdentityProviderConfig",
          "311:  (*IdentityProviderConfig_FieldMapping)(nil), // 1: memos.store.IdentityProviderConfig.FieldMapping",
          "312:  (*IdentityProviderConfig_OAuth2)(nil),       // 2: memos.store.IdentityProviderConfig.OAuth2",
          "315:  2, // 0: memos.store.IdentityProviderConfig.oauth2:type_name -> memos.store.IdentityProviderConfig.OAuth2",
          "316:  1, // 1: memos.store.IdentityProviderConfig.OAuth2.field_mapping:type_name -> memos.store.IdentityProviderConfig.FieldMapping",
          "",
          "[Added Lines]",
          "308:  (*IdentityProviderConfig)(nil), // 0: memos.store.IdentityProviderConfig",
          "309:  (*FieldMapping)(nil),           // 1: memos.store.FieldMapping",
          "310:  (*OAuth2Config)(nil),           // 2: memos.store.OAuth2Config",
          "313:  2, // 0: memos.store.IdentityProviderConfig.oauth2:type_name -> memos.store.OAuth2Config",
          "314:  1, // 1: memos.store.OAuth2Config.field_mapping:type_name -> memos.store.FieldMapping",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "340:    }",
          "341:   }",
          "342:   file_store_idp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {",
          "344:    case 0:",
          "345:     return &v.state",
          "346:    case 1:",
          "",
          "[Removed Lines]",
          "343:    switch v := v.(*IdentityProviderConfig_FieldMapping); i {",
          "",
          "[Added Lines]",
          "341:    switch v := v.(*FieldMapping); i {",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "352:    }",
          "353:   }",
          "354:   file_store_idp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {",
          "356:    case 0:",
          "357:     return &v.state",
          "358:    case 1:",
          "",
          "[Removed Lines]",
          "355:    switch v := v.(*IdentityProviderConfig_OAuth2); i {",
          "",
          "[Added Lines]",
          "353:    switch v := v.(*OAuth2Config); i {",
          "",
          "---------------"
        ],
        "proto/store/idp.proto||proto/store/idp.proto": [
          "File: proto/store/idp.proto -> proto/store/idp.proto",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: option go_package = \"gen/store\";",
          "7: message IdentityProviderConfig {",
          "12:   }",
          "27: }",
          "",
          "[Removed Lines]",
          "8:   message FieldMapping {",
          "9:     string identifier = 1;",
          "10:     string display_name = 2;",
          "11:     string email = 3;",
          "14:   message OAuth2 {",
          "15:     string client_id = 1;",
          "16:     string client_secret = 2;",
          "17:     string auth_url = 3;",
          "18:     string token_url = 4;",
          "19:     string user_info_url = 5;",
          "20:     repeated string scopes = 6;",
          "21:     FieldMapping field_mapping = 7;",
          "22:   }",
          "24:   oneof config {",
          "25:     OAuth2 oauth2 = 1;",
          "26:   }",
          "",
          "[Added Lines]",
          "8:   oneof config {",
          "9:     OAuth2Config oauth2 = 1;",
          "11: }",
          "13: message FieldMapping {",
          "14:   string identifier = 1;",
          "15:   string display_name = 2;",
          "16:   string email = 3;",
          "17: }",
          "19: message OAuth2Config {",
          "20:   string client_id = 1;",
          "21:   string client_secret = 2;",
          "22:   string auth_url = 3;",
          "23:   string token_url = 4;",
          "24:   string user_info_url = 5;",
          "25:   repeated string scopes = 6;",
          "26:   FieldMapping field_mapping = 7;",
          "",
          "---------------"
        ],
        "server/route/api/v2/storage_service.go||server/route/api/v2/storage_service.go": [
          "File: server/route/api/v2/storage_service.go -> server/route/api/v2/storage_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package v2",
          "3: import (",
          "4:  \"context\"",
          "6:  \"google.golang.org/grpc/codes\"",
          "7:  \"google.golang.org/grpc/status\"",
          "9:  apiv2pb \"github.com/usememos/memos/proto/gen/api/v2\"",
          "10:  storepb \"github.com/usememos/memos/proto/gen/store\"",
          "11:  \"github.com/usememos/memos/store\"",
          "12: )",
          "14: func (s *APIV2Service) CreateStorage(ctx context.Context, request *apiv2pb.CreateStorageRequest) (*apiv2pb.CreateStorageResponse, error) {",
          "15:  currentUser, err := getCurrentUser(ctx, s.Store)",
          "16:  if err != nil {",
          "17:   return nil, status.Errorf(codes.Internal, \"failed to get user: %v\", err)",
          "18:  }",
          "19:  if currentUser.Role != store.RoleHost {",
          "20:   return nil, status.Errorf(codes.PermissionDenied, \"permission denied\")",
          "21:  }",
          "23:  storage, err := s.Store.CreateStorageV1(ctx, convertStorageToStore(request.Storage))",
          "24:  if err != nil {",
          "25:   return nil, status.Errorf(codes.Internal, \"failed to create storage, error: %+v\", err)",
          "26:  }",
          "27:  return &apiv2pb.CreateStorageResponse{",
          "28:   Storage: convertStorageFromStore(storage),",
          "29:  }, nil",
          "30: }",
          "32: func (s *APIV2Service) ListStorages(ctx context.Context, _ *apiv2pb.ListStoragesRequest) (*apiv2pb.ListStoragesResponse, error) {",
          "33:  storages, err := s.Store.ListStoragesV1(ctx, &store.FindStorage{})",
          "34:  if err != nil {",
          "35:   return nil, status.Errorf(codes.Internal, \"failed to list storages, error: %+v\", err)",
          "36:  }",
          "38:  response := &apiv2pb.ListStoragesResponse{",
          "39:   Storages: []*apiv2pb.Storage{},",
          "40:  }",
          "41:  for _, storage := range storages {",
          "42:   response.Storages = append(response.Storages, convertStorageFromStore(storage))",
          "43:  }",
          "44:  return response, nil",
          "45: }",
          "47: func (s *APIV2Service) GetStorage(ctx context.Context, request *apiv2pb.GetStorageRequest) (*apiv2pb.GetStorageResponse, error) {",
          "48:  storage, err := s.Store.GetStorageV1(ctx, &store.FindStorage{",
          "49:   ID: &request.Id,",
          "50:  })",
          "51:  if err != nil {",
          "52:   return nil, status.Errorf(codes.Internal, \"failed to get storage, error: %+v\", err)",
          "53:  }",
          "54:  if storage == nil {",
          "55:   return nil, status.Errorf(codes.NotFound, \"storage not found\")",
          "56:  }",
          "57:  return &apiv2pb.GetStorageResponse{",
          "58:   Storage: convertStorageFromStore(storage),",
          "59:  }, nil",
          "60: }",
          "62: func (s *APIV2Service) UpdateStorage(ctx context.Context, request *apiv2pb.UpdateStorageRequest) (*apiv2pb.UpdateStorageResponse, error) {",
          "63:  if request.UpdateMask == nil || len(request.UpdateMask.Paths) == 0 {",
          "64:   return nil, status.Errorf(codes.InvalidArgument, \"update_mask is required\")",
          "65:  }",
          "67:  update := &store.UpdateStorageV1{",
          "68:   ID:   request.Storage.Id,",
          "69:   Type: storepb.Storage_Type(storepb.Storage_Type_value[request.Storage.Type.String()]),",
          "70:  }",
          "71:  for _, field := range request.UpdateMask.Paths {",
          "72:   switch field {",
          "73:   case \"name\":",
          "74:    update.Name = &request.Storage.Title",
          "75:   case \"config\":",
          "76:    update.Config = convertStorageConfigToStore(request.Storage.Type, request.Storage.Config)",
          "77:   }",
          "78:  }",
          "80:  storage, err := s.Store.UpdateStorageV1(ctx, update)",
          "81:  if err != nil {",
          "82:   return nil, status.Errorf(codes.Internal, \"failed to update storage, error: %+v\", err)",
          "83:  }",
          "84:  return &apiv2pb.UpdateStorageResponse{",
          "85:   Storage: convertStorageFromStore(storage),",
          "86:  }, nil",
          "87: }",
          "89: func (s *APIV2Service) DeleteStorage(ctx context.Context, request *apiv2pb.DeleteStorageRequest) (*apiv2pb.DeleteStorageResponse, error) {",
          "90:  err := s.Store.DeleteStorage(ctx, &store.DeleteStorage{",
          "91:   ID: request.Id,",
          "92:  })",
          "93:  if err != nil {",
          "94:   return nil, status.Errorf(codes.Internal, \"failed to delete storage, error: %+v\", err)",
          "95:  }",
          "96:  return &apiv2pb.DeleteStorageResponse{}, nil",
          "97: }",
          "99: func convertStorageFromStore(storage *storepb.Storage) *apiv2pb.Storage {",
          "100:  temp := &apiv2pb.Storage{",
          "101:   Id:    storage.Id,",
          "102:   Title: storage.Name,",
          "103:   Type:  apiv2pb.Storage_Type(apiv2pb.Storage_Type_value[storage.Type.String()]),",
          "104:  }",
          "105:  if storage.Type == storepb.Storage_S3 {",
          "106:   s3Config := storage.Config.GetS3Config()",
          "107:   temp.Config = &apiv2pb.StorageConfig{",
          "108:    StorageConfig: &apiv2pb.StorageConfig_S3Config{",
          "109:     S3Config: &apiv2pb.S3Config{",
          "110:      EndPoint:  s3Config.EndPoint,",
          "111:      Path:      s3Config.Path,",
          "112:      Region:    s3Config.Region,",
          "113:      AccessKey: s3Config.AccessKey,",
          "114:      SecretKey: s3Config.SecretKey,",
          "115:      Bucket:    s3Config.Bucket,",
          "116:      UrlPrefix: s3Config.UrlPrefix,",
          "117:      UrlSuffix: s3Config.UrlSuffix,",
          "118:      PreSign:   s3Config.PreSign,",
          "119:     },",
          "120:    },",
          "121:   }",
          "122:  }",
          "123:  return temp",
          "124: }",
          "126: func convertStorageToStore(storage *apiv2pb.Storage) *storepb.Storage {",
          "127:  temp := &storepb.Storage{",
          "128:   Id:     storage.Id,",
          "129:   Name:   storage.Title,",
          "130:   Type:   storepb.Storage_Type(storepb.Storage_Type_value[storage.Type.String()]),",
          "131:   Config: convertStorageConfigToStore(storage.Type, storage.Config),",
          "132:  }",
          "133:  return temp",
          "134: }",
          "136: func convertStorageConfigToStore(storageType apiv2pb.Storage_Type, config *apiv2pb.StorageConfig) *storepb.StorageConfig {",
          "137:  if storageType == apiv2pb.Storage_S3 {",
          "138:   s3Config := config.GetS3Config()",
          "139:   return &storepb.StorageConfig{",
          "140:    StorageConfig: &storepb.StorageConfig_S3Config{",
          "141:     S3Config: &storepb.S3Config{",
          "142:      EndPoint:  s3Config.EndPoint,",
          "143:      Path:      s3Config.Path,",
          "144:      Region:    s3Config.Region,",
          "145:      AccessKey: s3Config.AccessKey,",
          "146:      SecretKey: s3Config.SecretKey,",
          "147:      Bucket:    s3Config.Bucket,",
          "148:      UrlPrefix: s3Config.UrlPrefix,",
          "149:      UrlSuffix: s3Config.UrlSuffix,",
          "150:      PreSign:   s3Config.PreSign,",
          "151:     },",
          "152:    },",
          "153:   }",
          "154:  }",
          "155:  return nil",
          "156: }",
          "",
          "---------------"
        ],
        "server/route/api/v2/v2.go||server/route/api/v2/v2.go": [
          "File: server/route/api/v2/v2.go -> server/route/api/v2/v2.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "31:  apiv2pb.UnimplementedActivityServiceServer",
          "32:  apiv2pb.UnimplementedWebhookServiceServer",
          "33:  apiv2pb.UnimplementedLinkServiceServer",
          "35:  Secret  string",
          "36:  Profile *profile.Profile",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "34:  apiv2pb.UnimplementedStorageServiceServer",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "68:  apiv2pb.RegisterActivityServiceServer(grpcServer, apiv2Service)",
          "69:  apiv2pb.RegisterWebhookServiceServer(grpcServer, apiv2Service)",
          "70:  apiv2pb.RegisterLinkServiceServer(grpcServer, apiv2Service)",
          "71:  reflection.Register(grpcServer)",
          "73:  return apiv2Service",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "72:  apiv2pb.RegisterStorageServiceServer(grpcServer, apiv2Service)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "124:  if err := apiv2pb.RegisterLinkServiceHandler(context.Background(), gwMux, conn); err != nil {",
          "125:   return err",
          "126:  }",
          "127:  e.Any(\"/api/v2/*\", echo.WrapHandler(gwMux))",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "129:  if err := apiv2pb.RegisterStorageServiceHandler(context.Background(), gwMux, conn); err != nil {",
          "130:   return err",
          "131:  }",
          "",
          "---------------"
        ],
        "server/route/api/v2/webhook_service.go||server/route/api/v2/webhook_service.go": [
          "File: server/route/api/v2/webhook_service.go -> server/route/api/v2/webhook_service.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "55:   return nil, status.Errorf(codes.Internal, \"failed to get user: %v\", err)",
          "56:  }",
          "59:   ID:        &request.Id,",
          "60:   CreatorID: &currentUser.ID,",
          "61:  })",
          "",
          "[Removed Lines]",
          "58:  webhook, err := s.Store.GetWebhooks(ctx, &store.FindWebhook{",
          "",
          "[Added Lines]",
          "58:  webhook, err := s.Store.GetWebhook(ctx, &store.FindWebhook{",
          "",
          "---------------"
        ],
        "store/storage.go||store/storage.go": [
          "File: store/storage.go -> store/storage.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "162:  storageConfig := &storepb.StorageConfig{}",
          "163:  if storageType == storepb.Storage_S3 {",
          "164:   s3Config := &storepb.S3Config{}",
          "166:   if err != nil {",
          "167:    return nil, err",
          "168:   }",
          "",
          "[Removed Lines]",
          "165:   err := proto.Unmarshal([]byte(configRaw), s3Config)",
          "",
          "[Added Lines]",
          "165:   err := protojsonUnmarshaler.Unmarshal([]byte(configRaw), s3Config)",
          "",
          "---------------"
        ],
        "store/webhook.go||store/webhook.go": [
          "File: store/webhook.go -> store/webhook.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:  return s.driver.ListWebhooks(ctx, find)",
          "31: }",
          "34:  list, err := s.ListWebhooks(ctx, find)",
          "35:  if err != nil {",
          "36:   return nil, err",
          "",
          "[Removed Lines]",
          "33: func (s *Store) GetWebhooks(ctx context.Context, find *FindWebhook) (*storepb.Webhook, error) {",
          "",
          "[Added Lines]",
          "33: func (s *Store) GetWebhook(ctx context.Context, find *FindWebhook) (*storepb.Webhook, error) {",
          "",
          "---------------"
        ],
        "web/src/components/CreateStorageServiceDialog.tsx||wesrc/components/CreateStorageServiceDialog.tsx": [
          "File: web/src/components/CreateStorageServiceDialog.tsx -> wesrc/components/CreateStorageServiceDialog.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: import { Button, IconButton, Input, Checkbox, Typography } from \"@mui/joy\";",
          "2: import React, { useEffect, useState } from \"react\";",
          "3: import { toast } from \"react-hot-toast\";",
          "5: import { useTranslate } from \"@/utils/i18n\";",
          "6: import { generateDialog } from \"./Dialog\";",
          "7: import Icon from \"./Icon\";",
          "",
          "[Removed Lines]",
          "4: import * as api from \"@/helpers/api\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "9: import RequiredBadge from \"./RequiredBadge\";",
          "11: interface Props extends DialogProps {",
          "13:   confirmCallback?: () => void;",
          "14: }",
          "",
          "[Removed Lines]",
          "12:   storage?: ObjectStorage;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "17:   const t = useTranslate();",
          "18:   const { destroy, storage, confirmCallback } = props;",
          "19:   const [basicInfo, setBasicInfo] = useState({",
          "21:   });",
          "24:     endPoint: \"\",",
          "25:     region: \"\",",
          "26:     accessKey: \"\",",
          "",
          "[Removed Lines]",
          "20:     name: \"\",",
          "22:   const [type, setType] = useState<StorageType>(\"S3\");",
          "23:   const [s3Config, setS3Config] = useState<StorageS3Config>({",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "29:     bucket: \"\",",
          "30:     urlPrefix: \"\",",
          "31:     urlSuffix: \"\",",
          "33:   });",
          "34:   const isCreating = storage === undefined;",
          "36:   useEffect(() => {",
          "37:     if (storage) {",
          "38:       setBasicInfo({",
          "40:       });",
          "42:       if (storage.type === \"S3\") {",
          "44:       }",
          "45:     }",
          "46:   }, []);",
          "",
          "[Removed Lines]",
          "32:     presign: false,",
          "39:         name: storage.name,",
          "41:       setType(storage.type);",
          "43:         setS3Config(storage.config.s3Config);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "50:   };",
          "52:   const allowConfirmAction = () => {",
          "54:       return false;",
          "55:     }",
          "56:     if (type === \"S3\") {",
          "",
          "[Removed Lines]",
          "53:     if (basicInfo.name === \"\") {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "70:   const handleConfirmBtnClick = async () => {",
          "71:     try {",
          "72:       if (isCreating) {",
          "79:         });",
          "80:       } else {",
          "88:         });",
          "89:       }",
          "90:     } catch (error: any) {",
          "",
          "[Removed Lines]",
          "73:         await api.createStorage({",
          "74:           ...basicInfo,",
          "75:           type: type,",
          "76:           config: {",
          "77:             s3Config: s3Config,",
          "78:           },",
          "81:         await api.patchStorage({",
          "82:           id: storage.id,",
          "83:           type: type,",
          "84:           ...basicInfo,",
          "85:           config: {",
          "86:             s3Config: s3Config,",
          "87:           },",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "97:     destroy();",
          "98:   };",
          "101:     setS3Config({",
          "102:       ...s3Config,",
          "103:       ...state,",
          "",
          "[Removed Lines]",
          "100:   const setPartialS3Config = (state: Partial<StorageS3Config>) => {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "120:         <Input",
          "121:           className=\"mb-2\"",
          "122:           placeholder={t(\"common.name\")}",
          "124:           onChange={(e) =>",
          "125:             setBasicInfo({",
          "126:               ...basicInfo,",
          "128:             })",
          "129:           }",
          "130:           fullWidth",
          "",
          "[Removed Lines]",
          "123:           value={basicInfo.name}",
          "127:               name: e.target.value,",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "222:         <Checkbox",
          "223:           className=\"mb-2\"",
          "224:           label={t(\"setting.storage-section.presign-placeholder\")}",
          "227:         />",
          "228:         <div className=\"mt-2 w-full flex flex-row justify-end items-center space-x-1\">",
          "229:           <Button variant=\"plain\" color=\"neutral\" onClick={handleCloseBtnClick}>",
          "",
          "[Removed Lines]",
          "225:           checked={s3Config.presign}",
          "226:           onChange={(e) => setPartialS3Config({ presign: e.target.checked })}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "238:   );",
          "239: };",
          "242:   generateDialog(",
          "243:     {",
          "244:       className: \"create-storage-service-dialog\",",
          "",
          "[Removed Lines]",
          "241: function showCreateStorageServiceDialog(storage?: ObjectStorage, confirmCallback?: () => void) {",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "web/src/components/Settings/StorageSection.tsx||wesrc/components/Settings/StorageSection.tsx": [
          "File: web/src/components/Settings/StorageSection.tsx -> wesrc/components/Settings/StorageSection.tsx",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: import { useEffect, useMemo, useState } from \"react\";",
          "19: import { toast } from \"react-hot-toast\";",
          "20: import { Link } from \"react-router-dom\";",
          "22: import { WorkspaceSettingPrefix, useWorkspaceSettingStore } from \"@/store/v1\";",
          "23: import { WorkspaceStorageSetting, WorkspaceStorageSetting_StorageType } from \"@/types/proto/api/v2/workspace_setting_service\";",
          "24: import { WorkspaceSettingKey } from \"@/types/proto/store/workspace_setting\";",
          "25: import { useTranslate } from \"@/utils/i18n\";",
          "",
          "[Removed Lines]",
          "21: import * as api from \"@/helpers/api\";",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "31: const StorageSection = () => {",
          "32:   const t = useTranslate();",
          "33:   const workspaceSettingStore = useWorkspaceSettingStore();",
          "35:   const [workspaceStorageSetting, setWorkspaceStorageSetting] = useState<WorkspaceStorageSetting>(",
          "36:     WorkspaceStorageSetting.fromPartial(",
          "37:       workspaceSettingStore.getWorkspaceSettingByKey(WorkspaceSettingKey.WORKSPACE_SETTING_STORAGE)?.storageSetting || {},",
          "",
          "[Removed Lines]",
          "34:   const [storageList, setStorageList] = useState<ObjectStorage[]>([]);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "63:   }, []);",
          "65:   const fetchStorageList = async () => {",
          "68:   };",
          "70:   const handleMaxUploadSizeChanged = async (event: React.FocusEvent<HTMLInputElement>) => {",
          "",
          "[Removed Lines]",
          "66:     const { data: storageList } = await api.getStorageList();",
          "67:     setStorageList(storageList);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "111:     toast.success(\"Updated\");",
          "112:   };",
          "115:     showCommonDialog({",
          "116:       title: t(\"setting.storage-section.delete-storage\"),",
          "118:       style: \"danger\",",
          "119:       dialogName: \"delete-storage-dialog\",",
          "120:       onConfirm: async () => {",
          "121:         try {",
          "123:         } catch (error: any) {",
          "124:           console.error(error);",
          "125:           toast.error(error.response.data.message);",
          "",
          "[Removed Lines]",
          "114:   const handleDeleteStorage = (storage: ObjectStorage) => {",
          "117:       content: t(\"setting.storage-section.warning-text\", { name: storage.name }),",
          "122:           await api.deleteStorage(storage.id);",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "179:           >",
          "180:             {storageList.map((storage) => (",
          "181:               <Option key={storage.id} value={storage.id}>",
          "183:               </Option>",
          "184:             ))}",
          "185:           </Select>",
          "",
          "[Removed Lines]",
          "182:                 {storage.name}",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "205:             className=\"py-2 w-full border-t last:border-b dark:border-zinc-700 flex flex-row items-center justify-between\"",
          "206:           >",
          "207:             <div className=\"flex flex-row items-center\">",
          "209:             </div>",
          "210:             <div className=\"flex flex-row items-center\">",
          "211:               <Dropdown>",
          "",
          "[Removed Lines]",
          "208:               <p className=\"ml-2\">{storage.name}</p>",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "web/src/grpcweb.ts||wesrc/grpcweb.ts": [
          "File: web/src/grpcweb.ts -> wesrc/grpcweb.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: import { LinkServiceDefinition } from \"./types/proto/api/v2/link_service\";",
          "6: import { MemoServiceDefinition } from \"./types/proto/api/v2/memo_service\";",
          "7: import { ResourceServiceDefinition } from \"./types/proto/api/v2/resource_service\";",
          "8: import { TagServiceDefinition } from \"./types/proto/api/v2/tag_service\";",
          "9: import { UserServiceDefinition } from \"./types/proto/api/v2/user_service\";",
          "10: import { WebhookServiceDefinition } from \"./types/proto/api/v2/webhook_service\";",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "41: export const webhookServiceClient = clientFactory.create(WebhookServiceDefinition, channel);",
          "43: export const linkServiceClient = clientFactory.create(LinkServiceDefinition, channel);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "web/src/helpers/api.ts||wesrc/helpers/api.ts": [
          "File: web/src/helpers/api.ts -> wesrc/helpers/api.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: axios.defaults.baseURL = import.meta.env.VITE_API_BASE_URL || \"\";",
          "4: axios.defaults.withCredentials = true;",
          "22: export function getIdentityProviderList() {",
          "23:   return axios.get<IdentityProvider[]>(`/api/v1/idp`);",
          "24: }",
          "",
          "[Removed Lines]",
          "6: export function getStorageList() {",
          "7:   return axios.get<ObjectStorage[]>(`/api/v1/storage`);",
          "8: }",
          "10: export function createStorage(storageCreate: StorageCreate) {",
          "11:   return axios.post<ObjectStorage>(`/api/v1/storage`, storageCreate);",
          "12: }",
          "14: export function patchStorage(storagePatch: StoragePatch) {",
          "15:   return axios.patch<ObjectStorage>(`/api/v1/storage/${storagePatch.id}`, storagePatch);",
          "16: }",
          "18: export function deleteStorage(storageId: StorageId) {",
          "19:   return axios.delete(`/api/v1/storage/${storageId}`);",
          "20: }",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "web/src/types/modules/storage.d.ts||wesrc/types/modules/storage.d.ts": [
          "File: web/src/types/modules/storage.d.ts -> wesrc/types/modules/storage.d.ts",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}