{
  "cve_id": "CVE-2020-36559",
  "cve_desc": "Due to improper sanitization of user input, HTTPEngine.Handle allows for directory traversal, allowing an attacker to read files outside of the target directory that the server has permission to read.",
  "repo": "go-aah/aah",
  "patch_hash": "881dc9f71d1f7a4e8a9a39df9c5c081d3a2da1ec",
  "patch_info": {
    "commit_hash": "881dc9f71d1f7a4e8a9a39df9c5c081d3a2da1ec",
    "repo": "go-aah/aah",
    "commit_url": "https://github.com/go-aah/aah/commit/881dc9f71d1f7a4e8a9a39df9c5c081d3a2da1ec",
    "files": [
      "README.md",
      "http_engine.go",
      "static.go",
      "static_test.go",
      "version.go"
    ],
    "message": "#266 addressing path traversal issue on static file delivery (#267)",
    "before_after_code_files": [
      "http_engine.go||http_engine.go",
      "static.go||static.go",
      "static_test.go||static_test.go",
      "version.go||version.go"
    ]
  },
  "patch_diff": {
    "http_engine.go||http_engine.go": [
      "File: http_engine.go -> http_engine.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "8:  \"errors\"",
      "9:  \"io\"",
      "10:  \"net/http\"",
      "11:  \"sync\"",
      "12:  \"time\"",
      "14:  \"aahframe.work/ahttp\"",
      "15:  \"aahframe.work/ainsp\"",
      "16:  \"aahframe.work/aruntime\"",
      "18:  \"aahframe.work/internal/settings\"",
      "19:  \"aahframe.work/log\"",
      "20:  \"aahframe.work/security\"",
      "",
      "[Removed Lines]",
      "17:  \"aahframe.work/essentials\"",
      "",
      "[Added Lines]",
      "11:  \"path\"",
      "18:  ess \"aahframe.work/essentials\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "80:   defer e.a.accessLog.Log(ctx)",
      "81:  }",
      "83:  ctx.Req, ctx.Res = ahttp.AcquireRequest(r), ahttp.AcquireResponseWriter(w)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "85:  r.URL.Path = path.Clean(r.URL.Path)",
      "",
      "---------------"
    ],
    "static.go||static.go": [
      "File: static.go -> static.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "19:  \"strings\"",
      "21:  \"aahframe.work/ahttp\"",
      "23:  \"aahframe.work/internal/util\"",
      "24:  \"aahframe.work/vfs\"",
      "25: )",
      "",
      "[Removed Lines]",
      "22:  \"aahframe.work/essentials\"",
      "",
      "[Added Lines]",
      "22:  ess \"aahframe.work/essentials\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "135:  if fi.Mode().IsDir() && ctx.route.ListDir {",
      "137:   if ctx.Req.Path[len(ctx.Req.Path)-1] != '/' {",
      "138:    ctx.Log().Debugf(\"redirecting to dir: %s\", ctx.Req.Path+\"/\")",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "136:   fmt.Println(\"here 1\")",
      "",
      "---------------"
    ],
    "static_test.go||static_test.go": [
      "File: static_test.go -> static_test.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "45:  assert.Equal(t, \"no-cache, no-store, must-revalidate\", resp.Header.Get(ahttp.HeaderCacheControl))",
      "59:  t.Log(\"Static File - /assets/img/aah-framework-logo.png\")",
      "",
      "[Removed Lines]",
      "48:  t.Log(\"Directory Listing - /assets\")",
      "49:  resp, err = httpClient.Get(ts.URL + \"/assets\")",
      "50:  assert.Nil(t, err)",
      "51:  assert.Equal(t, 200, resp.StatusCode)",
      "52:  body := responseBody(resp)",
      "53:  assert.True(t, strings.Contains(body, \"<title>Listing of /assets/</title>\"))",
      "54:  assert.True(t, strings.Contains(body, \"<h1>Listing of /assets/</h1><hr>\"))",
      "55:  assert.True(t, strings.Contains(body, `<a href=\"robots.txt\">robots.txt</a>`))",
      "56:  assert.Equal(t, \"\", resp.Header.Get(ahttp.HeaderCacheControl))",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------"
    ],
    "version.go||version.go": [
      "File: version.go -> version.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: package aah",
      "",
      "[Removed Lines]",
      "8: const Version = \"0.12.3\"",
      "",
      "[Added Lines]",
      "8: const Version = \"0.12.4\"",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "29ef52ba6b0effc49779eb64389519df84839d0e",
      "candidate_info": {
        "commit_hash": "29ef52ba6b0effc49779eb64389519df84839d0e",
        "repo": "go-aah/aah",
        "commit_url": "https://github.com/go-aah/aah/commit/29ef52ba6b0effc49779eb64389519df84839d0e",
        "files": [
          "static.go",
          "version.go"
        ],
        "message": "cleanup debug print line (#268)",
        "before_after_code_files": [
          "static.go||static.go",
          "version.go||version.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "static.go||static.go",
            "version.go||version.go"
          ],
          "candidate": [
            "static.go||static.go",
            "version.go||version.go"
          ]
        }
      },
      "candidate_diff": {
        "static.go||static.go": [
          "File: static.go -> static.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:  if fi.Mode().IsDir() && ctx.route.ListDir {",
          "138:   if ctx.Req.Path[len(ctx.Req.Path)-1] != '/' {",
          "139:    ctx.Log().Debugf(\"redirecting to dir: %s\", ctx.Req.Path+\"/\")",
          "",
          "[Removed Lines]",
          "136:   fmt.Println(\"here 1\")",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "version.go||version.go": [
          "File: version.go -> version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: package aah",
          "",
          "[Removed Lines]",
          "8: const Version = \"0.12.4\"",
          "",
          "[Added Lines]",
          "8: const Version = \"0.12.5\"",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a03721cd353ae025dd2bd651d9b3af1b30ce2a4b",
      "candidate_info": {
        "commit_hash": "a03721cd353ae025dd2bd651d9b3af1b30ce2a4b",
        "repo": "go-aah/aah",
        "commit_url": "https://github.com/go-aah/aah/commit/a03721cd353ae025dd2bd651d9b3af1b30ce2a4b",
        "files": [
          "static.go",
          "version.go"
        ],
        "message": "cleanup debug print line",
        "before_after_code_files": [
          "static.go||static.go",
          "version.go||version.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "static.go||static.go",
            "version.go||version.go"
          ],
          "candidate": [
            "static.go||static.go",
            "version.go||version.go"
          ]
        }
      },
      "candidate_diff": {
        "static.go||static.go": [
          "File: static.go -> static.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "135:  if fi.Mode().IsDir() && ctx.route.ListDir {",
          "138:   if ctx.Req.Path[len(ctx.Req.Path)-1] != '/' {",
          "139:    ctx.Log().Debugf(\"redirecting to dir: %s\", ctx.Req.Path+\"/\")",
          "",
          "[Removed Lines]",
          "136:   fmt.Println(\"here 1\")",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "version.go||version.go": [
          "File: version.go -> version.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: package aah",
          "",
          "[Removed Lines]",
          "8: const Version = \"0.12.4\"",
          "",
          "[Added Lines]",
          "8: const Version = \"0.12.5\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}