{
  "cve_id": "CVE-2015-1493",
  "cve_desc": "Directory traversal vulnerability in the min_get_slash_argument function in lib/configonlylib.php in Moodle through 2.5.9, 2.6.x before 2.6.8, 2.7.x before 2.7.5, and 2.8.x before 2.8.3 allows remote authenticated users to read arbitrary files via a .. (dot dot) in the file parameter, as demonstrated by reading PHP scripts.",
  "repo": "moodle/moodle",
  "patch_hash": "af9a7937cc085f96bdbc4724cadec6eeae0242fc",
  "patch_info": {
    "commit_hash": "af9a7937cc085f96bdbc4724cadec6eeae0242fc",
    "repo": "moodle/moodle",
    "commit_url": "https://github.com/moodle/moodle/commit/af9a7937cc085f96bdbc4724cadec6eeae0242fc",
    "files": [
      "lib/configonlylib.php",
      "lib/tests/configonlylib_test.php"
    ],
    "message": "MDL-48980 Security: Always clean the result from min_get_slash_argument\n\nThe result from this function is used in send_file calls and if unclean\n(windows dir separators, or .. path components) it could expose sensitive\nfiles (e.g. .php files). Now we always clean the result from this function\neven if it means double cleaning.\n\nI also fixed the unit test for this function and added a new test for this cleaning.\n\nI also updated the comments to point to get_file_argument as the full version of\nmin_get_slash_argument.",
    "before_after_code_files": [
      "lib/configonlylib.php||lib/configonlylib.php",
      "lib/tests/configonlylib_test.php||lib/tests/configonlylib_test.php"
    ]
  },
  "patch_diff": {
    "lib/configonlylib.php||lib/configonlylib.php": [
      "File: lib/configonlylib.php -> lib/configonlylib.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "173: function min_get_slash_argument() {",
      "178:     $relativepath = '';",
      "180:     if (!empty($_GET['file']) and strpos($_GET['file'], '/') === 0) {",
      "184:     } else if (stripos($_SERVER['SERVER_SOFTWARE'], 'iis') !== false) {",
      "185:         if (isset($_SERVER['PATH_INFO']) and $_SERVER['PATH_INFO'] !== '') {",
      "",
      "[Removed Lines]",
      "182:         return $_GET['file'];",
      "",
      "[Added Lines]",
      "183:         return min_clean_param($_GET['file'], 'SAFEPATH');",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "197:         $relativepath = $matches[1];",
      "198:     }",
      "201: }",
      "",
      "[Removed Lines]",
      "200:     return $relativepath;",
      "",
      "[Added Lines]",
      "202:     return min_clean_param($relativepath, 'SAFEPATH');",
      "",
      "---------------"
    ],
    "lib/tests/configonlylib_test.php||lib/tests/configonlylib_test.php": [
      "File: lib/tests/configonlylib_test.php -> lib/tests/configonlylib_test.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "93:         global $CFG;",
      "95:         $this->resetAfterTest();",
      "98:         $_SERVER = array();",
      "99:         $_SERVER['SERVER_SOFTWARE'] = 'Apache/2.2.22 (Unix)';",
      "",
      "[Removed Lines]",
      "92:     public function min_get_slash_argument() {",
      "96:         $this->assertEquals('http://www.example.com/moode', $CFG->wwwroot);",
      "",
      "[Added Lines]",
      "92:     public function test_min_get_slash_argument() {",
      "96:         $this->assertEquals('http://www.example.com/moodle', $CFG->wwwroot);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "140:         $_SERVER['SCRIPT_NAME'] = '/moodle/theme/image.php';",
      "141:         $_GET = array();",
      "142:         $this->assertSame('/standard/core/5/u/f1', min_get_slash_argument());",
      "143:     }",
      "144: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "144:         $_SERVER = array();",
      "145:         $_SERVER['SERVER_SOFTWARE'] = 'Hacker server';",
      "146:         $_SERVER['QUERY_STRING'] = '';",
      "147:         $_SERVER['REQUEST_URI'] = '/moodle/theme/image.php/standard/core/5/u/f1';",
      "148:         $_SERVER['PATH_INFO'] = '/moodle/theme/image.php/standard\\\\core/..\\\\../5/u/f1';",
      "149:         $_SERVER['SCRIPT_NAME'] = '/moodle/theme/image.php';",
      "150:         $_GET = array();",
      "152:         $this->assertSame('/standardcore/./5/u/f1', min_get_slash_argument());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "0bb431e3ac7ea5173aa6318122c1a7cbeb24a44b",
      "candidate_info": {
        "commit_hash": "0bb431e3ac7ea5173aa6318122c1a7cbeb24a44b",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/0bb431e3ac7ea5173aa6318122c1a7cbeb24a44b",
        "files": [
          "lib/configonlylib.php",
          "theme/yui_combo.php"
        ],
        "message": "MDL-49167 YUI: Fix for theme/yui_combo.php and $CFG->yuislashargs\n\nIt was too aggressively cleaning it's params (broken in MDL-48980).",
        "before_after_code_files": [
          "lib/configonlylib.php||lib/configonlylib.php",
          "theme/yui_combo.php||theme/yui_combo.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "lib/configonlylib.php||lib/configonlylib.php"
          ],
          "candidate": [
            "lib/configonlylib.php||lib/configonlylib.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/configonlylib.php||lib/configonlylib.php": [
          "File: lib/configonlylib.php -> lib/configonlylib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "173: function min_get_slash_argument() {",
          "",
          "[Added Lines]",
          "175: function min_get_slash_argument($clean = true) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "180:     if (!empty($_GET['file']) and strpos($_GET['file'], '/') === 0) {",
          "185:     } else if (stripos($_SERVER['SERVER_SOFTWARE'], 'iis') !== false) {",
          "186:         if (isset($_SERVER['PATH_INFO']) and $_SERVER['PATH_INFO'] !== '') {",
          "",
          "[Removed Lines]",
          "183:         return min_clean_param($_GET['file'], 'SAFEPATH');",
          "",
          "[Added Lines]",
          "185:         $relativepath = $_GET['file'];",
          "186:         if ($clean) {",
          "187:             $relativepath = min_clean_param($relativepath, 'SAFEPATH');",
          "188:         }",
          "190:         return $relativepath;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "199:     }",
          "203: }",
          "",
          "[Removed Lines]",
          "202:     return min_clean_param($relativepath, 'SAFEPATH');",
          "",
          "[Added Lines]",
          "209:     if ($clean) {",
          "210:         $relativepath = min_clean_param($relativepath, 'SAFEPATH');",
          "211:     }",
          "212:     return $relativepath;",
          "",
          "---------------"
        ],
        "theme/yui_combo.php||theme/yui_combo.php": [
          "File: theme/yui_combo.php -> theme/yui_combo.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "459:         return array($_SERVER['QUERY_STRING'], false);",
          "462:         $slashargument = ltrim($slashargument, '/');",
          "463:         return array($slashargument, true);",
          "",
          "[Removed Lines]",
          "461:     } else if ($slashargument = min_get_slash_argument()) {",
          "",
          "[Added Lines]",
          "461:     } else if ($slashargument = min_get_slash_argument(false)) {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "a72f2cca7f08c354c18a3923c3f05eee50bdd434",
      "candidate_info": {
        "commit_hash": "a72f2cca7f08c354c18a3923c3f05eee50bdd434",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/a72f2cca7f08c354c18a3923c3f05eee50bdd434",
        "files": [
          "lib/configonlylib.php",
          "lib/tests/configonlylib_test.php"
        ],
        "message": "MDL-48980 Security: Always clean the result from min_get_slash_argument\n\nThe result from this function is used in send_file calls and if unclean\n(windows dir separators, or .. path components) it could expose sensitive\nfiles (e.g. .php files). Now we always clean the result from this function\neven if it means double cleaning.\n\nI also fixed the unit test for this function and added a new test for this cleaning.\n\nI also updated the comments to point to get_file_argument as the full version of\nmin_get_slash_argument.",
        "before_after_code_files": [
          "lib/configonlylib.php||lib/configonlylib.php",
          "lib/tests/configonlylib_test.php||lib/tests/configonlylib_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/configonlylib.php||lib/configonlylib.php",
            "lib/tests/configonlylib_test.php||lib/tests/configonlylib_test.php"
          ],
          "candidate": [
            "lib/configonlylib.php||lib/configonlylib.php",
            "lib/tests/configonlylib_test.php||lib/tests/configonlylib_test.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/configonlylib.php||lib/configonlylib.php": [
          "File: lib/configonlylib.php -> lib/configonlylib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "173: function min_get_slash_argument() {",
          "178:     $relativepath = '';",
          "180:     if (!empty($_GET['file']) and strpos($_GET['file'], '/') === 0) {",
          "184:     } else if (stripos($_SERVER['SERVER_SOFTWARE'], 'iis') !== false) {",
          "185:         if (isset($_SERVER['PATH_INFO']) and $_SERVER['PATH_INFO'] !== '') {",
          "",
          "[Removed Lines]",
          "182:         return $_GET['file'];",
          "",
          "[Added Lines]",
          "183:         return min_clean_param($_GET['file'], 'SAFEPATH');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "197:         $relativepath = $matches[1];",
          "198:     }",
          "201: }",
          "",
          "[Removed Lines]",
          "200:     return $relativepath;",
          "",
          "[Added Lines]",
          "202:     return min_clean_param($relativepath, 'SAFEPATH');",
          "",
          "---------------"
        ],
        "lib/tests/configonlylib_test.php||lib/tests/configonlylib_test.php": [
          "File: lib/tests/configonlylib_test.php -> lib/tests/configonlylib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:         global $CFG;",
          "95:         $this->resetAfterTest();",
          "98:         $_SERVER = array();",
          "99:         $_SERVER['SERVER_SOFTWARE'] = 'Apache/2.2.22 (Unix)';",
          "",
          "[Removed Lines]",
          "92:     public function min_get_slash_argument() {",
          "96:         $this->assertEquals('http://www.example.com/moode', $CFG->wwwroot);",
          "",
          "[Added Lines]",
          "92:     public function test_min_get_slash_argument() {",
          "96:         $this->assertEquals('http://www.example.com/moodle', $CFG->wwwroot);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "140:         $_SERVER['SCRIPT_NAME'] = '/moodle/theme/image.php';",
          "141:         $_GET = array();",
          "142:         $this->assertSame('/standard/core/5/u/f1', min_get_slash_argument());",
          "143:     }",
          "144: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "144:         $_SERVER = array();",
          "145:         $_SERVER['SERVER_SOFTWARE'] = 'Hacker server';",
          "146:         $_SERVER['QUERY_STRING'] = '';",
          "147:         $_SERVER['REQUEST_URI'] = '/moodle/theme/image.php/standard/core/5/u/f1';",
          "148:         $_SERVER['PATH_INFO'] = '/moodle/theme/image.php/standard\\\\core/..\\\\../5/u/f1';",
          "149:         $_SERVER['SCRIPT_NAME'] = '/moodle/theme/image.php';",
          "150:         $_GET = array();",
          "152:         $this->assertSame('/standardcore/./5/u/f1', min_get_slash_argument());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "0289be1321babfa588fb5b18ebb08a296eed9eee",
      "candidate_info": {
        "commit_hash": "0289be1321babfa588fb5b18ebb08a296eed9eee",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/0289be1321babfa588fb5b18ebb08a296eed9eee",
        "files": [
          "lib/configonlylib.php",
          "lib/tests/configonlylib_test.php"
        ],
        "message": "MDL-48980 Security: Always clean the result from min_get_slash_argument\n\nThe result from this function is used in send_file calls and if unclean\n(windows dir separators, or .. path components) it could expose sensitive\nfiles (e.g. .php files). Now we always clean the result from this function\neven if it means double cleaning.\n\nI also fixed the unit test for this function and added a new test for this cleaning.\n\nI also updated the comments to point to get_file_argument as the full version of\nmin_get_slash_argument.",
        "before_after_code_files": [
          "lib/configonlylib.php||lib/configonlylib.php",
          "lib/tests/configonlylib_test.php||lib/tests/configonlylib_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/configonlylib.php||lib/configonlylib.php",
            "lib/tests/configonlylib_test.php||lib/tests/configonlylib_test.php"
          ],
          "candidate": [
            "lib/configonlylib.php||lib/configonlylib.php",
            "lib/tests/configonlylib_test.php||lib/tests/configonlylib_test.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/configonlylib.php||lib/configonlylib.php": [
          "File: lib/configonlylib.php -> lib/configonlylib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "173: function min_get_slash_argument() {",
          "178:     $relativepath = '';",
          "180:     if (!empty($_GET['file']) and strpos($_GET['file'], '/') === 0) {",
          "184:     } else if (stripos($_SERVER['SERVER_SOFTWARE'], 'iis') !== false) {",
          "185:         if (isset($_SERVER['PATH_INFO']) and $_SERVER['PATH_INFO'] !== '') {",
          "",
          "[Removed Lines]",
          "182:         return $_GET['file'];",
          "",
          "[Added Lines]",
          "183:         return min_clean_param($_GET['file'], 'SAFEPATH');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "197:         $relativepath = $matches[1];",
          "198:     }",
          "201: }",
          "",
          "[Removed Lines]",
          "200:     return $relativepath;",
          "",
          "[Added Lines]",
          "202:     return min_clean_param($relativepath, 'SAFEPATH');",
          "",
          "---------------"
        ],
        "lib/tests/configonlylib_test.php||lib/tests/configonlylib_test.php": [
          "File: lib/tests/configonlylib_test.php -> lib/tests/configonlylib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:         global $CFG;",
          "95:         $this->resetAfterTest();",
          "98:         $_SERVER = array();",
          "99:         $_SERVER['SERVER_SOFTWARE'] = 'Apache/2.2.22 (Unix)';",
          "",
          "[Removed Lines]",
          "92:     public function min_get_slash_argument() {",
          "96:         $this->assertEquals('http://www.example.com/moode', $CFG->wwwroot);",
          "",
          "[Added Lines]",
          "92:     public function test_min_get_slash_argument() {",
          "96:         $this->assertEquals('http://www.example.com/moodle', $CFG->wwwroot);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "140:         $_SERVER['SCRIPT_NAME'] = '/moodle/theme/image.php';",
          "141:         $_GET = array();",
          "142:         $this->assertSame('/standard/core/5/u/f1', min_get_slash_argument());",
          "143:     }",
          "144: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "144:         $_SERVER = array();",
          "145:         $_SERVER['SERVER_SOFTWARE'] = 'Hacker server';",
          "146:         $_SERVER['QUERY_STRING'] = '';",
          "147:         $_SERVER['REQUEST_URI'] = '/moodle/theme/image.php/standard/core/5/u/f1';",
          "148:         $_SERVER['PATH_INFO'] = '/moodle/theme/image.php/standard\\\\core/..\\\\../5/u/f1';",
          "149:         $_SERVER['SCRIPT_NAME'] = '/moodle/theme/image.php';",
          "150:         $_GET = array();",
          "152:         $this->assertSame('/standardcore/./5/u/f1', min_get_slash_argument());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "cc496f5b27d36a8df4bcede997a484eb9719363b",
      "candidate_info": {
        "commit_hash": "cc496f5b27d36a8df4bcede997a484eb9719363b",
        "repo": "moodle/moodle",
        "commit_url": "https://github.com/moodle/moodle/commit/cc496f5b27d36a8df4bcede997a484eb9719363b",
        "files": [
          "lib/configonlylib.php",
          "lib/tests/configonlylib_test.php"
        ],
        "message": "MDL-48980 Security: Always clean the result from min_get_slash_argument\n\nThe result from this function is used in send_file calls and if unclean\n(windows dir separators, or .. path components) it could expose sensitive\nfiles (e.g. .php files). Now we always clean the result from this function\neven if it means double cleaning.\n\nI also fixed the unit test for this function and added a new test for this cleaning.\n\nI also updated the comments to point to get_file_argument as the full version of\nmin_get_slash_argument.",
        "before_after_code_files": [
          "lib/configonlylib.php||lib/configonlylib.php",
          "lib/tests/configonlylib_test.php||lib/tests/configonlylib_test.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/configonlylib.php||lib/configonlylib.php",
            "lib/tests/configonlylib_test.php||lib/tests/configonlylib_test.php"
          ],
          "candidate": [
            "lib/configonlylib.php||lib/configonlylib.php",
            "lib/tests/configonlylib_test.php||lib/tests/configonlylib_test.php"
          ]
        }
      },
      "candidate_diff": {
        "lib/configonlylib.php||lib/configonlylib.php": [
          "File: lib/configonlylib.php -> lib/configonlylib.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "173: function min_get_slash_argument() {",
          "178:     $relativepath = '';",
          "180:     if (!empty($_GET['file']) and strpos($_GET['file'], '/') === 0) {",
          "184:     } else if (stripos($_SERVER['SERVER_SOFTWARE'], 'iis') !== false) {",
          "185:         if (isset($_SERVER['PATH_INFO']) and $_SERVER['PATH_INFO'] !== '') {",
          "",
          "[Removed Lines]",
          "182:         return $_GET['file'];",
          "",
          "[Added Lines]",
          "183:         return min_clean_param($_GET['file'], 'SAFEPATH');",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "197:         $relativepath = $matches[1];",
          "198:     }",
          "201: }",
          "",
          "[Removed Lines]",
          "200:     return $relativepath;",
          "",
          "[Added Lines]",
          "202:     return min_clean_param($relativepath, 'SAFEPATH');",
          "",
          "---------------"
        ],
        "lib/tests/configonlylib_test.php||lib/tests/configonlylib_test.php": [
          "File: lib/tests/configonlylib_test.php -> lib/tests/configonlylib_test.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:         global $CFG;",
          "95:         $this->resetAfterTest();",
          "98:         $_SERVER = array();",
          "99:         $_SERVER['SERVER_SOFTWARE'] = 'Apache/2.2.22 (Unix)';",
          "",
          "[Removed Lines]",
          "92:     public function min_get_slash_argument() {",
          "96:         $this->assertEquals('http://www.example.com/moode', $CFG->wwwroot);",
          "",
          "[Added Lines]",
          "92:     public function test_min_get_slash_argument() {",
          "96:         $this->assertEquals('http://www.example.com/moodle', $CFG->wwwroot);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "140:         $_SERVER['SCRIPT_NAME'] = '/moodle/theme/image.php';",
          "141:         $_GET = array();",
          "142:         $this->assertSame('/standard/core/5/u/f1', min_get_slash_argument());",
          "143:     }",
          "144: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "144:         $_SERVER = array();",
          "145:         $_SERVER['SERVER_SOFTWARE'] = 'Hacker server';",
          "146:         $_SERVER['QUERY_STRING'] = '';",
          "147:         $_SERVER['REQUEST_URI'] = '/moodle/theme/image.php/standard/core/5/u/f1';",
          "148:         $_SERVER['PATH_INFO'] = '/moodle/theme/image.php/standard\\\\core/..\\\\../5/u/f1';",
          "149:         $_SERVER['SCRIPT_NAME'] = '/moodle/theme/image.php';",
          "150:         $_GET = array();",
          "152:         $this->assertSame('/standardcore/./5/u/f1', min_get_slash_argument());",
          "",
          "---------------"
        ]
      }
    }
  ]
}