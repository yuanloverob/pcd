{
  "cve_id": "CVE-2022-0415",
  "cve_desc": "Remote Command Execution in uploading repository file in GitHub repository gogs/gogs prior to 0.12.6.",
  "repo": "gogs/gogs",
  "patch_hash": "0fef3c9082269e9a4e817274942a5d7c50617284",
  "patch_info": {
    "commit_hash": "0fef3c9082269e9a4e817274942a5d7c50617284",
    "repo": "gogs/gogs",
    "commit_url": "https://github.com/gogs/gogs/commit/0fef3c9082269e9a4e817274942a5d7c50617284",
    "files": [
      "internal/db/repo_editor.go"
    ],
    "message": "repo_editor: check upload `TreePath` and file name (#6838)",
    "before_after_code_files": [
      "internal/db/repo_editor.go||internal/db/repo_editor.go"
    ]
  },
  "patch_diff": {
    "internal/db/repo_editor.go||internal/db/repo_editor.go": [
      "File: internal/db/repo_editor.go -> internal/db/repo_editor.go",
      "--- Hunk 1 ---",
      "[Context before]",
      "16:  \"strings\"",
      "17:  \"time\"",
      "19:  gouuid \"github.com/satori/go.uuid\"",
      "20:  \"github.com/unknwon/com\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "19:  \"github.com/pkg/errors\"",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "24:  \"gogs.io/gogs/internal/conf\"",
      "25:  \"gogs.io/gogs/internal/cryptoutil\"",
      "27:  \"gogs.io/gogs/internal/gitutil\"",
      "28:  \"gogs.io/gogs/internal/osutil\"",
      "29:  \"gogs.io/gogs/internal/process\"",
      "30:  \"gogs.io/gogs/internal/tool\"",
      "31: )",
      "",
      "[Removed Lines]",
      "26:  \"gogs.io/gogs/internal/db/errors\"",
      "",
      "[Added Lines]",
      "27:  dberrors \"gogs.io/gogs/internal/db/errors\"",
      "30:  \"gogs.io/gogs/internal/pathutil\"",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "134:  if opts.OldBranch != opts.NewBranch {",
      "136:   if git.RepoHasBranch(repoPath, opts.NewBranch) {",
      "138:   }",
      "",
      "[Removed Lines]",
      "137:    return errors.BranchAlreadyExists{Name: opts.NewBranch}",
      "",
      "[Added Lines]",
      "139:    return dberrors.BranchAlreadyExists{Name: opts.NewBranch}",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "449:  return strings.HasSuffix(path, \".git\") || strings.Contains(path, \".git\"+string(os.PathSeparator))",
      "450: }",
      "453:  if len(opts.Files) == 0 {",
      "454:   return nil",
      "455:  }",
      "457:  uploads, err := GetUploadsByUUIDs(opts.Files)",
      "458:  if err != nil {",
      "459:   return fmt.Errorf(\"get uploads by UUIDs[%v]: %v\", opts.Files, err)",
      "",
      "[Removed Lines]",
      "452: func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions) (err error) {",
      "",
      "[Added Lines]",
      "454: func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions) error {",
      "460:  if isRepositoryGitPath(opts.TreePath) {",
      "461:   return errors.Errorf(\"bad tree path %q\", opts.TreePath)",
      "462:  }",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "487:    continue",
      "488:   }",
      "491:   if isRepositoryGitPath(upload.Name) {",
      "492:    continue",
      "493:   }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "497:   upload.Name = pathutil.Clean(upload.Name)",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "775901058d8a7ca1a58901b7eef3ee768e39612e",
      "candidate_info": {
        "commit_hash": "775901058d8a7ca1a58901b7eef3ee768e39612e",
        "repo": "gogs/gogs",
        "commit_url": "https://github.com/gogs/gogs/commit/775901058d8a7ca1a58901b7eef3ee768e39612e",
        "files": [
          "internal/db/repo_editor.go"
        ],
        "message": "repo_editor: check upload `TreePath` and file name (#6838)",
        "before_after_code_files": [
          "internal/db/repo_editor.go||internal/db/repo_editor.go"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "internal/db/repo_editor.go||internal/db/repo_editor.go"
          ],
          "candidate": [
            "internal/db/repo_editor.go||internal/db/repo_editor.go"
          ]
        }
      },
      "candidate_diff": {
        "internal/db/repo_editor.go||internal/db/repo_editor.go": [
          "File: internal/db/repo_editor.go -> internal/db/repo_editor.go",
          "--- Hunk 1 ---",
          "[Context before]",
          "16:  \"strings\"",
          "17:  \"time\"",
          "19:  gouuid \"github.com/satori/go.uuid\"",
          "20:  \"github.com/unknwon/com\"",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "19:  \"github.com/pkg/errors\"",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "24:  \"gogs.io/gogs/internal/conf\"",
          "25:  \"gogs.io/gogs/internal/cryptoutil\"",
          "27:  \"gogs.io/gogs/internal/gitutil\"",
          "28:  \"gogs.io/gogs/internal/osutil\"",
          "29:  \"gogs.io/gogs/internal/process\"",
          "30:  \"gogs.io/gogs/internal/tool\"",
          "31: )",
          "",
          "[Removed Lines]",
          "26:  \"gogs.io/gogs/internal/db/errors\"",
          "",
          "[Added Lines]",
          "27:  dberrors \"gogs.io/gogs/internal/db/errors\"",
          "30:  \"gogs.io/gogs/internal/pathutil\"",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "134:  if opts.OldBranch != opts.NewBranch {",
          "136:   if git.RepoHasBranch(repoPath, opts.NewBranch) {",
          "138:   }",
          "",
          "[Removed Lines]",
          "137:    return errors.BranchAlreadyExists{Name: opts.NewBranch}",
          "",
          "[Added Lines]",
          "139:    return dberrors.BranchAlreadyExists{Name: opts.NewBranch}",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "449:  return strings.HasSuffix(path, \".git\") || strings.Contains(path, \".git\"+string(os.PathSeparator))",
          "450: }",
          "453:  if len(opts.Files) == 0 {",
          "454:   return nil",
          "455:  }",
          "457:  uploads, err := GetUploadsByUUIDs(opts.Files)",
          "458:  if err != nil {",
          "459:   return fmt.Errorf(\"get uploads by UUIDs[%v]: %v\", opts.Files, err)",
          "",
          "[Removed Lines]",
          "452: func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions) (err error) {",
          "",
          "[Added Lines]",
          "454: func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions) error {",
          "460:  if isRepositoryGitPath(opts.TreePath) {",
          "461:   return errors.Errorf(\"bad tree path %q\", opts.TreePath)",
          "462:  }",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "487:    continue",
          "488:   }",
          "491:   if isRepositoryGitPath(upload.Name) {",
          "492:    continue",
          "493:   }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "497:   upload.Name = pathutil.Clean(upload.Name)",
          "",
          "---------------"
        ]
      }
    }
  ]
}