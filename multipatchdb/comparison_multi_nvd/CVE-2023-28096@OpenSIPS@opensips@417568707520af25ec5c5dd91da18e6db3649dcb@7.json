{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "7cb182de0bf1f31dfe6e697b4321d0b7528268f3",
      "candidate_info": {
        "commit_hash": "7cb182de0bf1f31dfe6e697b4321d0b7528268f3",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/7cb182de0bf1f31dfe6e697b4321d0b7528268f3",
        "files": [
          "modules/cachedb_redis/cachedb_redis_dbase.c",
          "modules/cachedb_redis/cachedb_redis_utils.c"
        ],
        "message": "Merge pull request #2806 from john08burke/redis_bugfix_3_1\n\n[cachedb_redis] cleanup stale context pointer, branch 3.1\n\n(cherry picked from commit 6ea4a7ac1cddae536a4bc3d2a3fe8ed279d671dc)",
        "before_after_code_files": [
          "modules/cachedb_redis/cachedb_redis_dbase.c||modules/cachedb_redis/cachedb_redis_dbase.c",
          "modules/cachedb_redis/cachedb_redis_utils.c||modules/cachedb_redis/cachedb_redis_utils.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/cachedb_redis/cachedb_redis_dbase.c||modules/cachedb_redis/cachedb_redis_dbase.c": [
          "File: modules/cachedb_redis/cachedb_redis_dbase.c -> modules/cachedb_redis/cachedb_redis_dbase.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "161:    LM_ERR(\"failed to auth to redis - %.*s\\n\",",
          "162:     rpl?(unsigned)rpl->len:7,rpl?rpl->str:\"FAILURE\");",
          "163:    freeReplyObject(rpl);",
          "165:   }",
          "166:   LM_DBG(\"AUTH [password] -  %.*s\\n\",(unsigned)rpl->len,rpl->str);",
          "167:   freeReplyObject(rpl);",
          "",
          "[Removed Lines]",
          "164:    goto error;",
          "",
          "[Added Lines]",
          "164:    redisFree(node->context);",
          "165:    node->context = NULL;",
          "166:    return -1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "173:    LM_ERR(\"failed to select database %s - %.*s\\n\",con->id->database,",
          "174:     rpl?(unsigned)rpl->len:7,rpl?rpl->str:\"FAILURE\");",
          "175:    freeReplyObject(rpl);",
          "177:   }",
          "179:   LM_DBG(\"SELECT [%s] - %.*s\\n\",con->id->database,(unsigned)rpl->len,rpl->str);",
          "",
          "[Removed Lines]",
          "176:    goto error;",
          "",
          "[Added Lines]",
          "178:    redisFree(node->context);",
          "179:    node->context = NULL;",
          "180:    return -1;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "196:  LM_DBG(\"reconnecting node %s:%d \\n\",node->ip,node->port);",
          "200:   redisFree(node->context);",
          "202:  return redis_connect_node(con,node);",
          "203: }",
          "",
          "[Removed Lines]",
          "199:  if(node->context)",
          "",
          "[Added Lines]",
          "203:  if(node->context) {",
          "205:   node->context = NULL;",
          "206:  }",
          "",
          "---------------"
        ],
        "modules/cachedb_redis/cachedb_redis_utils.c||modules/cachedb_redis/cachedb_redis_utils.c": [
          "File: modules/cachedb_redis/cachedb_redis_utils.c -> modules/cachedb_redis/cachedb_redis_utils.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "109:  new = con->nodes;",
          "110:  while (new) {",
          "111:   foo = new->next;",
          "113:   if (use_tls && new->tls_dom)",
          "114:    tls_api.release_domain(new->tls_dom);",
          "115:   pkg_free(new);",
          "116:   new = foo;",
          "117:  }",
          "",
          "[Removed Lines]",
          "112:   redisFree(new->context);",
          "",
          "[Added Lines]",
          "114:   redisFree(new->context);",
          "115:   new->context = NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8eb0c6ff783a6342fc33adb052ba20e526367ecc",
      "candidate_info": {
        "commit_hash": "8eb0c6ff783a6342fc33adb052ba20e526367ecc",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/8eb0c6ff783a6342fc33adb052ba20e526367ecc",
        "files": [
          "modules/b2b_logic/logic.c",
          "modules/b2b_logic/records.h"
        ],
        "message": "b2b_logic: complete the Max-Forwards fix in commit cb6d7fa\n\nAlso decrease Max-Forwards when bridging, based on the value from the\ninitial INVITE of the server entity, if it's still present in the session.\n\n(cherry picked from commit c328eb06d01c52d7d0a1fadd717c59003c4456b8)",
        "before_after_code_files": [
          "modules/b2b_logic/logic.c||modules/b2b_logic/logic.c",
          "modules/b2b_logic/records.h||modules/b2b_logic/records.h"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/b2b_logic/logic.c||modules/b2b_logic/logic.c": [
          "File: modules/b2b_logic/logic.c -> modules/b2b_logic/logic.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "702:  ci.body          = (tuple->sdp.s?&tuple->sdp:NULL);",
          "703:  ci.from_tag      = NULL;",
          "704:  ci.send_sock     = msg?(msg->force_send_socket?msg->force_send_socket:msg->rcv.bind_address):NULL;",
          "706:  if (adv_ct) {",
          "707:   ci.local_contact = *adv_ct;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "705:  ci.maxfwd = tuple->bridge_entities[0]->init_maxfwd;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "842:    ci.body          = body;",
          "843:    ci.from_tag      = NULL;",
          "844:    ci.send_sock     = msg->force_send_socket?msg->force_send_socket:msg->rcv.bind_address;",
          "846:    if (bentity1->adv_contact.s) {",
          "847:     ci.local_contact = bentity1->adv_contact;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "846:    ci.maxfwd = bentity0->init_maxfwd;",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "3483:   msg->force_send_socket:msg->rcv.bind_address;",
          "3487:   ci.maxfwd = maxfwd;",
          "3489:  if (new_entity->adv_contact.s) {",
          "3490:   ci.local_contact = new_entity->adv_contact;",
          "",
          "[Removed Lines]",
          "3486:  if ((maxfwd = b2b_msg_get_maxfwd(msg)) > 0)",
          "",
          "[Added Lines]",
          "3488:  if ((maxfwd = b2b_msg_get_maxfwd(msg)) > 0) {",
          "3490:   tuple->servers[0]->init_maxfwd = maxfwd;",
          "3491:  }",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "4067:   ci.body          = tuple->b1_sdp.s?&tuple->b1_sdp:0;",
          "4068:   ci.cseq          = 1;",
          "4069:   ci.local_contact = tuple->local_contact;",
          "4071:   b2bl_htable[hash_index].locked_by = process_no;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4074:   ci.maxfwd = tuple->servers[0]->init_maxfwd;",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "4496:  int ret;",
          "4497:  struct sip_uri ct_uri;",
          "4498:  str local_contact;",
          "4500:  if(!msg || !key)",
          "4501:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4504:  int maxfwd;",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "4713:  req_data.method =&method_invite;",
          "4714:  req_data.client_headers =&bridging_entity->hdrs;",
          "4715:  req_data.body = &body;",
          "4716:  b2bl_htable[hash_index].locked_by = process_no;",
          "4717:  if(b2b_api.send_request(&req_data) < 0)",
          "4718:  {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "4723:  if ((maxfwd = b2b_msg_get_maxfwd(msg)) > 0)",
          "4724:   req_data.maxfwd = maxfwd;",
          "",
          "---------------"
        ],
        "modules/b2b_logic/records.h||modules/b2b_logic/records.h": [
          "File: modules/b2b_logic/records.h -> modules/b2b_logic/records.h",
          "--- Hunk 1 ---",
          "[Context before]",
          "47:  int rejected;",
          "48:  int disconnected;",
          "49:  int state;",
          "50:  unsigned short no;",
          "51:  unsigned short sdp_type;",
          "52:  enum b2b_entity_type type;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "50:  int init_maxfwd;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d4a05448c4822bac6ffe744e8ee1747e14614ff9",
      "candidate_info": {
        "commit_hash": "d4a05448c4822bac6ffe744e8ee1747e14614ff9",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/d4a05448c4822bac6ffe744e8ee1747e14614ff9",
        "files": [
          "modules/mi_script/mi_script.c"
        ],
        "message": "mi_script: fix infinite loop where there are multiple params\n\n(cherry picked from commit 34ce451c664a3f51299cccbc263a8fb1bca214c7)",
        "before_after_code_files": [
          "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/mi_script/mi_script.c||modules/mi_script/mi_script.c": [
          "File: modules/mi_script/mi_script.c -> modules/mi_script/mi_script.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "211:    trim_leading(params);",
          "212:    p = q_memchr(params->s, ' ', params->len);",
          "213:    avp_val.s = *params;",
          "215:     avp_val.s.len = p - avp_val.s.s;",
          "216:    if (avp_val.s.len <= 0)",
          "217:     break;",
          "218:    val = cJSON_CreateStr(avp_val.s.s, avp_val.s.len);",
          "",
          "[Removed Lines]",
          "214:    if (p)",
          "",
          "[Added Lines]",
          "214:    if (p) {",
          "216:     params->s += avp_val.s.len;",
          "217:     params->len -= avp_val.s.len;",
          "218:    }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "c22da3e06611cc7a7aec8019d8469c28abe53507",
      "candidate_info": {
        "commit_hash": "c22da3e06611cc7a7aec8019d8469c28abe53507",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/c22da3e06611cc7a7aec8019d8469c28abe53507",
        "files": [
          "modules/rtpengine/rtpengine.c"
        ],
        "message": "[rtpengine] avoid returning 0 as it breaks the script execution\n\nFixes #2796\n\n(cherry picked from commit 1763c7a5c894c9adecd19023cd1470a408f626fb)",
        "before_after_code_files": [
          "modules/rtpengine/rtpengine.c||modules/rtpengine/rtpengine.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/rtpengine/rtpengine.c||modules/rtpengine/rtpengine.c": [
          "File: modules/rtpengine/rtpengine.c -> modules/rtpengine/rtpengine.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "3523:  if (bencode_dictionary_get_strcmp(ret, \"result\", \"ok\")) {",
          "3524:   LM_ERR(\"proxy didn't return \\\"ok\\\" result\\n\");",
          "3525:  } else",
          "3528:  bencode_buffer_free(&bencbuf);",
          "3529:  return rcode;",
          "",
          "[Removed Lines]",
          "3526:   rcode = 0;",
          "",
          "[Added Lines]",
          "3526:   rcode = 1;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d03f17c4dffff5f8b9d114b036ff4d6dc0ad83ba",
      "candidate_info": {
        "commit_hash": "d03f17c4dffff5f8b9d114b036ff4d6dc0ad83ba",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/d03f17c4dffff5f8b9d114b036ff4d6dc0ad83ba",
        "files": [
          "modules/cachedb_redis/cachedb_redis_dbase.c"
        ],
        "message": "cachedb_redis: Use argv API instead of fmt-string API for raw queries\n\nThis change allows \"%\" to be safely used in raw queries (e.g. maybe some\nRedis key contains a random \"%\" char), while also making the raw query\noperation a lot more safe and/or unexploitable from the outside.\n\nMany thanks to David Escartin (Sonoc) for a detailed bug report!",
        "before_after_code_files": [
          "modules/cachedb_redis/cachedb_redis_dbase.c||modules/cachedb_redis/cachedb_redis_dbase.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/cachedb_redis/cachedb_redis_dbase.c||modules/cachedb_redis/cachedb_redis_dbase.c": [
          "File: modules/cachedb_redis/cachedb_redis_dbase.c -> modules/cachedb_redis/cachedb_redis_dbase.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "744:  return 0;",
          "745: }",
          "748: {",
          "749:  redis_con *con;",
          "750:  cluster_node *node;",
          "755:  con = (redis_con *)connection->data;",
          "",
          "[Removed Lines]",
          "747: int redis_raw_query_send(cachedb_con *connection,redisReply **reply,cdb_raw_entry ***rpl,int expected_kv_no,int *reply_no,str *attr, ...)",
          "751:  int i,end;",
          "752:  va_list ap;",
          "753:  str query_key;",
          "",
          "[Added Lines]",
          "747: #define MAP_SET_MAX_FIELDS 128",
          "748: static int redis_raw_query_send(cachedb_con *connection, redisReply **reply,",
          "749:   cdb_raw_entry ***_, int __, int *___, str *attr)",
          "751:  int i, argc = 0;",
          "752:  const char *argv[MAP_SET_MAX_FIELDS];",
          "753:  size_t argvlen[MAP_SET_MAX_FIELDS];",
          "756:  str key, st, arg;",
          "757:  char *p;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "759:   return -9;",
          "760:  }",
          "764:   return -1;",
          "765:  }",
          "768:  if (node == NULL) {",
          "769:   LM_ERR(\"Bad cluster configuration\\n\");",
          "770:   return -10;",
          "",
          "[Removed Lines]",
          "762:  if (redis_raw_query_extract_key(attr,&query_key) < 0) {",
          "763:   LM_ERR(\"Failed to extra Redis raw query key \\n\");",
          "767:  node = get_redis_connection(con,&query_key);",
          "",
          "[Added Lines]",
          "766:  st = *attr;",
          "767:  trim(&st);",
          "768:  while (st.len > 0 && (p = q_memchr(st.s, ' ', st.len))) {",
          "769:   if (argc == MAP_SET_MAX_FIELDS) {",
          "770:    LM_ERR(\"max raw query args exceeded (%d)\\n\", MAP_SET_MAX_FIELDS);",
          "771:    return -1;",
          "772:   }",
          "774:   arg.s = st.s;",
          "775:   arg.len = p - st.s;",
          "776:   trim(&arg);",
          "778:   argv[argc] = arg.s;",
          "779:   argvlen[argc++] = arg.len;",
          "781:   st.len -= p - st.s + 1;",
          "782:   st.s = p + 1;",
          "783:   trim(&st);",
          "784:  }",
          "786:  if (st.len > 0) {",
          "787:   argv[argc] = st.s;",
          "788:   argvlen[argc++] = st.len;",
          "789:  }",
          "791:  if (argc < 2) {",
          "792:   LM_ERR(\"malformed Redis RAW query: '%.*s' (%d)\\n\",",
          "793:          attr->len, attr->s, attr->len);",
          "799:  key.s = (char *)argv[1];",
          "800:  key.len = argvlen[1];",
          "802: #ifdef EXTRA_DEBUG",
          "803:  LM_DBG(\"raw query key: %.*s\\n\", key.len, key.s);",
          "804:  for (i = 0; i < argc; i++)",
          "805:   LM_DBG(\"raw query arg %d: '%.*s' (%d)\\n\", i, (int)argvlen[i], argv[i],",
          "806:          (int)argvlen[i]);",
          "807: #endif",
          "809:  node = get_redis_connection(con, &key);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "776:   }",
          "777:  }",
          "783:  for (i = QUERY_ATTEMPTS; i; i--) {",
          "785:   if (*reply == NULL || (*reply)->type == REDIS_REPLY_ERROR) {",
          "786:    LM_INFO(\"Redis query failed: %.*s\\n\",",
          "",
          "[Removed Lines]",
          "779:  va_start(ap,attr);",
          "780:  end = attr->s[attr->len];",
          "781:  attr->s[attr->len] = 0;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "793:   } else break;",
          "794:  }",
          "799:  if (i==0) {",
          "800:   LM_ERR(\"giving up on query\\n\");",
          "801:   return -1;",
          "",
          "[Removed Lines]",
          "796:  va_end(ap);",
          "797:  attr->s[attr->len]=end;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    }
  ]
}