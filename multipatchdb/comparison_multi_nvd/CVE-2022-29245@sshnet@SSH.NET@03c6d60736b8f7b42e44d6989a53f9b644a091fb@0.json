{
  "cve_id": "CVE-2022-29245",
  "cve_desc": "SSH.NET is a Secure Shell (SSH) library for .NET. In versions 2020.0.0 and 2020.0.1, during an `X25519` key exchange, the client\u2019s private key is generated with `System.Random`. `System.Random` is not a cryptographically secure random number generator, it must therefore not be used for cryptographic purposes. When establishing an SSH connection to a remote host, during the X25519 key exchange, the private key is generated with a weak random number generator whose seed can be brute forced. This allows an attacker who is able to eavesdrop on the communications to decrypt them. Version 2020.0.2 contains a patch for this issue. As a workaround, one may disable support for `curve25519-sha256` and `curve25519-sha256@libssh.org` key exchange algorithms.",
  "repo": "sshnet/SSH.NET",
  "patch_hash": "03c6d60736b8f7b42e44d6989a53f9b644a091fb",
  "patch_info": {
    "commit_hash": "03c6d60736b8f7b42e44d6989a53f9b644a091fb",
    "repo": "sshnet/SSH.NET",
    "commit_url": "https://github.com/sshnet/SSH.NET/commit/03c6d60736b8f7b42e44d6989a53f9b644a091fb",
    "files": [
      "src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs"
    ],
    "message": "Use cryptographically secure random number generator. Fixes CVE-2022-29245.",
    "before_after_code_files": [
      "src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs||src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs"
    ]
  },
  "patch_diff": {
    "src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs||src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs": [
      "File: src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs -> src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs",
      "--- Hunk 1 ---",
      "[Context before]",
      "46:             var basepoint = new byte[MontgomeryCurve25519.PublicKeySizeInBytes];",
      "47:             basepoint[0] = 9;",
      "53:             _clientExchangeValue = new byte[MontgomeryCurve25519.PublicKeySizeInBytes];",
      "54:             MontgomeryOperations.scalarmult(_clientExchangeValue, 0, _privateKey, 0, basepoint, 0);",
      "",
      "[Removed Lines]",
      "49:             var rnd = new Random();",
      "50:             _privateKey = new byte[MontgomeryCurve25519.PrivateKeySizeInBytes];",
      "51:             rnd.NextBytes(_privateKey);",
      "",
      "[Added Lines]",
      "49:             _privateKey = CryptoAbstraction.GenerateRandom(MontgomeryCurve25519.PrivateKeySizeInBytes);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "bd7c02f6e43e9de77fad745fda9b053605ef9c67",
      "candidate_info": {
        "commit_hash": "bd7c02f6e43e9de77fad745fda9b053605ef9c67",
        "repo": "sshnet/SSH.NET",
        "commit_url": "https://github.com/sshnet/SSH.NET/commit/bd7c02f6e43e9de77fad745fda9b053605ef9c67",
        "files": [
          "src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs"
        ],
        "message": "Remove unused import.",
        "before_after_code_files": [
          "src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs||src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/sshnet/SSH.NET/pull/1201"
        ],
        "olp_code_files": {
          "patch": [
            "src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs||src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs"
          ],
          "candidate": [
            "src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs||src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs"
          ]
        }
      },
      "candidate_diff": {
        "src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs||src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs": [
          "File: src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs -> src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "3: using Renci.SshNet.Common;",
          "4: using Renci.SshNet.Messages.Transport;",
          "5: using Renci.SshNet.Security.Chaos.NaCl;",
          "",
          "[Removed Lines]",
          "1: \ufeffusing System;",
          "2: using Renci.SshNet.Abstractions;",
          "",
          "[Added Lines]",
          "1: \ufeffusing Renci.SshNet.Abstractions;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f1f273cf349532b9d41c1de51d3b83a9accedc88",
      "candidate_info": {
        "commit_hash": "f1f273cf349532b9d41c1de51d3b83a9accedc88",
        "repo": "sshnet/SSH.NET",
        "commit_url": "https://github.com/sshnet/SSH.NET/commit/f1f273cf349532b9d41c1de51d3b83a9accedc88",
        "files": [
          "src/Renci.SshNet/Properties/CommonAssemblyInfo.cs",
          "src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs"
        ],
        "message": "Use cryptographically secure random number generator. Fixes CVE-2022-29245.",
        "before_after_code_files": [
          "src/Renci.SshNet/Properties/CommonAssemblyInfo.cs||src/Renci.SshNet/Properties/CommonAssemblyInfo.cs",
          "src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs||src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs||src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs"
          ],
          "candidate": [
            "src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs||src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs"
          ]
        }
      },
      "candidate_diff": {
        "src/Renci.SshNet/Properties/CommonAssemblyInfo.cs||src/Renci.SshNet/Properties/CommonAssemblyInfo.cs": [
          "File: src/Renci.SshNet/Properties/CommonAssemblyInfo.cs -> src/Renci.SshNet/Properties/CommonAssemblyInfo.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: [assembly: AssemblyDescription(\"SSH.NET is a Secure Shell (SSH) library for .NET, optimized for parallelism.\")]",
          "6: [assembly: AssemblyCompany(\"Renci\")]",
          "7: [assembly: AssemblyProduct(\"SSH.NET\")]",
          "9: [assembly: AssemblyTrademark(\"\")]",
          "10: [assembly: AssemblyCulture(\"\")]",
          "15: [assembly: CLSCompliant(false)]",
          "",
          "[Removed Lines]",
          "8: [assembly: AssemblyCopyright(\"Copyright \ufffd Renci 2010-2021\")]",
          "12: [assembly: AssemblyVersion(\"2020.0.1\")]",
          "13: [assembly: AssemblyFileVersion(\"2020.0.1\")]",
          "14: [assembly: AssemblyInformationalVersion(\"2020.0.1\")]",
          "",
          "[Added Lines]",
          "8: [assembly: AssemblyCopyright(\"Copyright \ufffd Renci 2010-2022\")]",
          "12: [assembly: AssemblyVersion(\"2020.0.2\")]",
          "13: [assembly: AssemblyFileVersion(\"2020.0.2\")]",
          "14: [assembly: AssemblyInformationalVersion(\"2020.0.2\")]",
          "",
          "---------------"
        ],
        "src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs||src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs": [
          "File: src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs -> src/Renci.SshNet/Security/KeyExchangeECCurve25519.cs",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:             var basepoint = new byte[MontgomeryCurve25519.PublicKeySizeInBytes];",
          "47:             basepoint[0] = 9;",
          "53:             _clientExchangeValue = new byte[MontgomeryCurve25519.PublicKeySizeInBytes];",
          "54:             MontgomeryOperations.scalarmult(_clientExchangeValue, 0, _privateKey, 0, basepoint, 0);",
          "",
          "[Removed Lines]",
          "49:             var rnd = new Random();",
          "50:             _privateKey = new byte[MontgomeryCurve25519.PrivateKeySizeInBytes];",
          "51:             rnd.NextBytes(_privateKey);",
          "",
          "[Added Lines]",
          "49:             _privateKey = CryptoAbstraction.GenerateRandom(MontgomeryCurve25519.PrivateKeySizeInBytes);",
          "",
          "---------------"
        ]
      }
    }
  ]
}