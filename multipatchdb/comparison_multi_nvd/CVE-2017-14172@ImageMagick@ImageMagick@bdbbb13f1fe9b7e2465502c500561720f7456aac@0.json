{
  "cve_id": "CVE-2017-14172",
  "cve_desc": "In coders/ps.c in ImageMagick 7.0.7-0 Q16, a DoS in ReadPSImage() due to lack of an EOF (End of File) check might cause huge CPU consumption. When a crafted PSD file, which claims a large \"extent\" field in the header but does not contain sufficient backing data, is provided, the loop over \"length\" would consume huge CPU resources, since there is no EOF check inside the loop.",
  "repo": "ImageMagick/ImageMagick",
  "patch_hash": "bdbbb13f1fe9b7e2465502c500561720f7456aac",
  "patch_info": {
    "commit_hash": "bdbbb13f1fe9b7e2465502c500561720f7456aac",
    "repo": "ImageMagick/ImageMagick",
    "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/bdbbb13f1fe9b7e2465502c500561720f7456aac",
    "files": [
      "coders/ps.c"
    ],
    "message": "https://github.com/ImageMagick/ImageMagick/issues/715",
    "before_after_code_files": [
      "coders/ps.c||coders/ps.c"
    ]
  },
  "patch_diff": {
    "coders/ps.c||coders/ps.c": [
      "File: coders/ps.c -> coders/ps.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "659:           Read Photoshop profile.",
      "661:         count=(ssize_t) sscanf(command,PhotoshopProfile \" %lu\",&extent);",
      "662:         if (count != 1)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "661:         count=(ssize_t) sscanf(command,PhotoshopProfile \" %lu\",&extent);",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "726:         register char",
      "730:           Note spot names.",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "895:     }",
      "896:   if (*image_info->magick == 'E')",
      "897:     {",
      "899:       if ((option == (const char *) NULL) ||",
      "900:           (IsStringTrue(option) != MagickFalse))",
      "901:         (void) ConcatenateMagickString(options,\"-dEPSCrop \",MagickPathExtent);",
      "",
      "[Removed Lines]",
      "898:       option=GetImageOption(image_info,\"eps:use-cropbox\");",
      "",
      "[Added Lines]",
      "900:       option=GetImageOption(image_info,\"eps:use-cropbox\");",
      "901:       if ((option == (const char *) NULL) ||",
      "",
      "---------------",
      "--- Hunk 4 ---",
      "[Context before]",
      "1043: {",
      "1044:   MagickInfo",
      "1047:   entry=AcquireMagickInfo(\"PS\",\"EPI\",",
      "1048:     \"Encapsulated PostScript Interchange format\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "[None]",
      "",
      "---------------",
      "--- Hunk 5 ---",
      "[Context before]",
      "1051:   entry->magick=(IsImageFormatHandler *) IsPS;",
      "1052:   entry->flags^=CoderAdjoinFlag;",
      "1053:   entry->flags^=CoderBlobSupportFlag;",
      "1054:   entry->mime_type=ConstantString(\"application/postscript\");",
      "1055:   (void) RegisterMagickInfo(entry);",
      "1056:   entry=AcquireMagickInfo(\"PS\",\"EPS\",\"Encapsulated PostScript\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1058:   entry->mime_type=ConstantString(\"application/postscript\");",
      "",
      "---------------",
      "--- Hunk 6 ---",
      "[Context before]",
      "1059:   entry->magick=(IsImageFormatHandler *) IsPS;",
      "1060:   entry->flags^=CoderAdjoinFlag;",
      "1061:   entry->flags^=CoderBlobSupportFlag;",
      "1062:   entry->mime_type=ConstantString(\"application/postscript\");",
      "1063:   (void) RegisterMagickInfo(entry);",
      "1064:   entry=AcquireMagickInfo(\"PS\",\"EPSF\",\"Encapsulated PostScript\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1067:   entry->mime_type=ConstantString(\"application/postscript\");",
      "",
      "---------------",
      "--- Hunk 7 ---",
      "[Context before]",
      "1068:   entry->flags^=CoderAdjoinFlag;",
      "1069:   entry->flags^=CoderBlobSupportFlag;",
      "1070:   entry->mime_type=ConstantString(\"application/postscript\");",
      "1071:   (void) RegisterMagickInfo(entry);",
      "1072:   entry=AcquireMagickInfo(\"PS\",\"EPSI\",",
      "1073:     \"Encapsulated PostScript Interchange format\");",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1077:   (void) RegisterMagickInfo(entry);",
      "",
      "---------------",
      "--- Hunk 8 ---",
      "[Context before]",
      "1077:   entry->flags^=CoderAdjoinFlag;",
      "1078:   entry->flags^=CoderBlobSupportFlag;",
      "1079:   entry->mime_type=ConstantString(\"application/postscript\");",
      "1080:   (void) RegisterMagickInfo(entry);",
      "1081:   entry=AcquireMagickInfo(\"PS\",\"PS\",\"PostScript\");",
      "1082:   entry->decoder=(DecodeImageHandler *) ReadPSImage;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "1087:   (void) RegisterMagickInfo(entry);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "ba9e36555434ebe9da38a1341cfd9f304a326348",
      "candidate_info": {
        "commit_hash": "ba9e36555434ebe9da38a1341cfd9f304a326348",
        "repo": "ImageMagick/ImageMagick",
        "commit_url": "https://github.com/ImageMagick/ImageMagick/commit/ba9e36555434ebe9da38a1341cfd9f304a326348",
        "files": [
          "coders/ps.c"
        ],
        "message": "https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=6107",
        "before_after_code_files": [
          "coders/ps.c||coders/ps.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "coders/ps.c||coders/ps.c"
          ],
          "candidate": [
            "coders/ps.c||coders/ps.c"
          ]
        }
      },
      "candidate_diff": {
        "coders/ps.c||coders/ps.c": [
          "File: coders/ps.c -> coders/ps.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "449:   ImageInfo",
          "452:   int",
          "453:     c,",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "452:   int",
          "453:     c,",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "581:   page.height=(size_t) ceil((double) (page.height*resolution.y/delta.y)-0.5);",
          "583:     Determine page geometry from the Postscript bounding box.",
          "585:   (void) ResetMagickMemory(&bounds,0,sizeof(bounds));",
          "586:   (void) ResetMagickMemory(command,0,sizeof(command));",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "643:           if (i >= (ssize_t) GetStringInfoLength(profile))",
          "644:             {",
          "645:               SetStringInfoLength(profile,(size_t) i << 1);",
          "647:             }",
          "648:           datum[i]=(unsigned char) c;",
          "649:         }",
          "",
          "[Removed Lines]",
          "646:               datum=GetStringInfoDatum(profile);",
          "",
          "[Added Lines]",
          "650:               datum=GetStringInfoDatum(profile);",
          "651:             }",
          "652:           datum[i]=(unsigned char) c;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "661:           Read Photoshop profile.",
          "663:         count=(ssize_t) sscanf(command,PhotoshopProfile \" %lu\",&extent);",
          "664:         if (count != 1)",
          "665:           continue;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "667:         if (length > GetBlobSize(image))",
          "668:           ThrowReaderException(CorruptImageError,\"InsufficientImageDataInFile\");",
          "669:         profile=BlobToStringInfo((const void *) NULL,length);",
          "671:           {",
          "672:             q=GetStringInfoDatum(profile);",
          "673:             for (i=0; i < (ssize_t) length; i++)",
          "",
          "[Removed Lines]",
          "670:         if (profile != (StringInfo *) NULL)",
          "",
          "[Added Lines]",
          "676:         if (profile != (StringInfo *) NULL)",
          "677:           {",
          "678:             q=GetStringInfoDatum(profile);",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "679:       }",
          "680:     if (LocaleNCompare(BeginXMPPacket,command,strlen(BeginXMPPacket)) == 0)",
          "681:       {",
          "683:           Read XMP profile.",
          "685:         p=command;",
          "686:         profile=StringToStringInfo(command);",
          "687:         for (i=GetStringInfoLength(profile)-1; c != EOF; i++)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "695:           if ((strchr(\"\\n\\r%\",c) == (char *) NULL) &&",
          "696:               ((size_t) (p-command) < (MagickPathExtent-1)))",
          "697:             continue;",
          "699:           p=command;",
          "701:             break;",
          "702:         }",
          "703:         SetStringInfoLength(profile,i);",
          "",
          "[Removed Lines]",
          "700:           if (LocaleNCompare(EndXMPPacket,command,strlen(EndXMPPacket)) == 0)",
          "",
          "[Added Lines]",
          "708:           if (LocaleNCompare(EndXMPPacket,command,strlen(EndXMPPacket)) == 0)",
          "709:             break;",
          "710:         }",
          "711:         SetStringInfoLength(profile,(size_t) i);",
          "712:         if (EOFBlob(image) == MagickFalse)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "820:     page_geometry=GetPageGeometry(option);",
          "821:     flags=ParseMetaGeometry(page_geometry,&page.x,&page.y,&page.width,",
          "822:       &page.height);",
          "823:     if (flags == NoValue)",
          "824:       {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "834:       &page.height);",
          "835:     if (flags == NoValue)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "841:     Create Ghostscript control file.",
          "843:   file=AcquireUniqueFileResource(postscript_filename);",
          "844:   if (file == -1)",
          "845:     {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "857:   file=AcquireUniqueFileResource(postscript_filename);",
          "858:   if (file == -1)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "871:   else",
          "872:     if (cmyk != MagickFalse)",
          "873:       delegate_info=GetDelegateInfo(\"ps:cmyk\",(char *) NULL,exception);",
          "874:     else",
          "875:       delegate_info=GetDelegateInfo(\"ps:alpha\",(char *) NULL,exception);",
          "876:   if (delegate_info == (const DelegateInfo *) NULL)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "890:     else",
          "891:       delegate_info=GetDelegateInfo(\"ps:alpha\",(char *) NULL,exception);",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "961:     }",
          "962:   (void) RelinquishUniqueFileResource(read_info->filename);",
          "963:   read_info=DestroyImageInfo(read_info);",
          "964:   if (postscript_image == (Image *) NULL)",
          "965:     {",
          "966:       if (*message != '\\0')",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "982:   if (postscript_image == (Image *) NULL)",
          "983:     {",
          "",
          "---------------",
          "--- Hunk 12 ---",
          "[Context before]",
          "992:       for (i=0; i < (ssize_t) image_info->scene; i++)",
          "993:       {",
          "994:         clone_image=CloneImage(postscript_image,1,1,MagickTrue,exception);",
          "995:         if (clone_image != (Image *) NULL)",
          "996:           PrependImageToList(&postscript_image,clone_image);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1014:         clone_image=CloneImage(postscript_image,1,1,MagickTrue,exception);",
          "1015:         if (clone_image != (Image *) NULL)",
          "1016:           PrependImageToList(&postscript_image,clone_image);",
          "1017:       }",
          "1018:     }",
          "1019:   if (profiles != (LinkedListInfo *) NULL)",
          "1020:     {",
          "1021:       const char",
          "1024:       const StringInfo",
          "1028:         Read image profiles.",
          "1030:       ResetLinkedListIterator(profiles);",
          "1031:       name=(const char *) GetNextValueInLinkedList(profiles);",
          "1032:       while (name != (const char *) NULL)",
          "1033:       {",
          "1034:         profile=GetImageProfile(image,name);",
          "1035:         if (profile != (StringInfo *) NULL)",
          "1036:           {",
          "1037:             register unsigned char",
          "1040:             p=GetStringInfoDatum(profile);",
          "1041:             count=ReadBlob(image,GetStringInfoLength(profile),p);",
          "1042:             (void) count;",
          "",
          "---------------"
        ]
      }
    }
  ]
}