{
  "cve_id": "CVE-2015-9251",
  "cve_desc": "jQuery before 3.0.0 is vulnerable to Cross-site Scripting (XSS) attacks when a cross-domain Ajax request is performed without the dataType option, causing text/javascript responses to be executed.",
  "repo": "jquery/jquery",
  "patch_hash": "f60729f3903d17917dc351f3ac87794de379b0cc",
  "patch_info": {
    "commit_hash": "f60729f3903d17917dc351f3ac87794de379b0cc",
    "repo": "jquery/jquery",
    "commit_url": "https://github.com/jquery/jquery/commit/f60729f3903d17917dc351f3ac87794de379b0cc",
    "files": [
      "src/ajax/script.js",
      "test/unit/ajax.js"
    ],
    "message": "Ajax: Mitigate possible XSS vulnerability\n\nProposed by @jaubourg\n\nCherry-picked from b078a62013782c7424a4a61a240c23c4c0b42614\nFixes gh-2432\nCloses gh-2588",
    "before_after_code_files": [
      "src/ajax/script.js||src/ajax/script.js",
      "test/unit/ajax.js||test/unit/ajax.js"
    ]
  },
  "patch_diff": {
    "src/ajax/script.js||src/ajax/script.js": [
      "File: src/ajax/script.js -> src/ajax/script.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "4:  \"../ajax\"",
      "5: ], function( jQuery, document ) {",
      "8: jQuery.ajaxSetup( {",
      "9:  accepts: {",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "8: jQuery.ajaxPrefilter( function( s ) {",
      "9:     if ( s.crossDomain ) {",
      "10:         s.contents.script = false;",
      "11:     }",
      "12: } );",
      "",
      "---------------"
    ],
    "test/unit/ajax.js||test/unit/ajax.js": [
      "File: test/unit/ajax.js -> test/unit/ajax.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "85:   };",
      "86:  } );",
      "88:  ajaxTest( \"jQuery.ajax() - success callbacks (late binding)\", 8, function( assert ) {",
      "89:   return {",
      "90:    setup: addGlobalEvents( \"ajaxStart ajaxStop ajaxSend ajaxComplete ajaxSuccess\", assert ),",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "88:  ajaxTest( \"jQuery.ajax() - do not execute js (crossOrigin)\", 2, function( assert ) {",
      "89:   return {",
      "90:    create: function( options ) {",
      "91:     options.crossDomain = true;",
      "92:     return jQuery.ajax( url( \"data/script.php?header=ecma\" ), options );",
      "93:    },",
      "94:    success: function() {",
      "95:     assert.ok( true, \"success\" );",
      "96:    },",
      "97:    complete: function() {",
      "98:     assert.ok( true, \"complete\" );",
      "99:    }",
      "100:   };",
      "101:  } );",
      "103:  ajaxTest( \"jQuery.ajax() - execute js for crossOrigin when dataType option is provided\", 3,",
      "104:   function( assert ) {",
      "105:    return {",
      "106:     create: function( options ) {",
      "107:      options.crossDomain = true;",
      "108:      options.dataType = \"script\";",
      "109:      return jQuery.ajax( url( \"data/script.php?header=ecma\" ), options );",
      "110:     },",
      "111:     success: function() {",
      "112:      assert.ok( true, \"success\" );",
      "113:     },",
      "114:     complete: function() {",
      "115:      assert.ok( true, \"complete\" );",
      "116:     }",
      "117:    };",
      "118:   }",
      "119:  );",
      "121:  ajaxTest( \"jQuery.ajax() - do not execute js (crossOrigin)\", 2, function( assert ) {",
      "122:   return {",
      "123:    create: function( options ) {",
      "124:     options.crossDomain = true;",
      "125:     return jQuery.ajax( url( \"data/script.php\" ), options );",
      "126:    },",
      "127:    success: function() {",
      "128:     assert.ok( true, \"success\" );",
      "129:    },",
      "130:    complete: function() {",
      "131:     assert.ok( true, \"complete\" );",
      "132:    }",
      "133:   };",
      "134:  } );",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "2a8341787acc8519ff49172777c628c28c2c5ec3",
      "candidate_info": {
        "commit_hash": "2a8341787acc8519ff49172777c628c28c2c5ec3",
        "repo": "jquery/jquery",
        "commit_url": "https://github.com/jquery/jquery/commit/2a8341787acc8519ff49172777c628c28c2c5ec3",
        "files": [
          "src/ajax/script.js"
        ],
        "message": "Ajax: correct indentation\n\nAs noted by @arthurvr\n\nFollow-up for f60729f3903d17917dc351f3ac87794de379b0cc",
        "before_after_code_files": [
          "src/ajax/script.js||src/ajax/script.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "src/ajax/script.js||src/ajax/script.js"
          ],
          "candidate": [
            "src/ajax/script.js||src/ajax/script.js"
          ]
        }
      },
      "candidate_diff": {
        "src/ajax/script.js||src/ajax/script.js": [
          "File: src/ajax/script.js -> src/ajax/script.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: jQuery.ajaxPrefilter( function( s ) {",
          "12: } );",
          "",
          "[Removed Lines]",
          "9:     if ( s.crossDomain ) {",
          "10:         s.contents.script = false;",
          "11:     }",
          "",
          "[Added Lines]",
          "9:  if ( s.crossDomain ) {",
          "10:   s.contents.script = false;",
          "11:  }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b078a62013782c7424a4a61a240c23c4c0b42614",
      "candidate_info": {
        "commit_hash": "b078a62013782c7424a4a61a240c23c4c0b42614",
        "repo": "jquery/jquery",
        "commit_url": "https://github.com/jquery/jquery/commit/b078a62013782c7424a4a61a240c23c4c0b42614",
        "files": [
          "src/ajax.js",
          "src/ajax/script.js",
          "test/unit/ajax.js"
        ],
        "message": "Ajax: Mitigate possible XSS vulnerability\n\nProposed by @jaubourg\n\nFixes gh-2432\nCloses gh-2588",
        "before_after_code_files": [
          "src/ajax.js||src/ajax.js",
          "src/ajax/script.js||src/ajax/script.js",
          "test/unit/ajax.js||test/unit/ajax.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "src/ajax/script.js||src/ajax/script.js",
            "test/unit/ajax.js||test/unit/ajax.js"
          ],
          "candidate": [
            "src/ajax/script.js||src/ajax/script.js",
            "test/unit/ajax.js||test/unit/ajax.js"
          ]
        }
      },
      "candidate_diff": {
        "src/ajax.js||src/ajax.js": [
          "File: src/ajax.js -> src/ajax.js"
        ],
        "src/ajax/script.js||src/ajax/script.js": [
          "File: src/ajax/script.js -> src/ajax/script.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "4:  \"../ajax\"",
          "5: ], function( jQuery, document ) {",
          "8: jQuery.ajaxSetup( {",
          "9:  accepts: {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "8: jQuery.ajaxPrefilter( function( s ) {",
          "9:     if ( s.crossDomain ) {",
          "10:         s.contents.script = false;",
          "11:     }",
          "12: } );",
          "",
          "---------------"
        ],
        "test/unit/ajax.js||test/unit/ajax.js": [
          "File: test/unit/ajax.js -> test/unit/ajax.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "71:   };",
          "72:  } );",
          "74:  ajaxTest( \"jQuery.ajax() - success callbacks (late binding)\", 8, function( assert ) {",
          "75:   return {",
          "76:    setup: addGlobalEvents( \"ajaxStart ajaxStop ajaxSend ajaxComplete ajaxSuccess\", assert ),",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "74:  ajaxTest( \"jQuery.ajax() - do not execute js (crossOrigin)\", 2, function( assert ) {",
          "75:   return {",
          "76:    create: function( options ) {",
          "77:     options.crossDomain = true;",
          "78:     return jQuery.ajax( url( \"data/script.php?header=ecma\" ), options );",
          "79:    },",
          "80:    success: function() {",
          "81:     assert.ok( true, \"success\" );",
          "82:    },",
          "83:    complete: function() {",
          "84:     assert.ok( true, \"complete\" );",
          "85:    }",
          "86:   };",
          "87:  } );",
          "89:  ajaxTest( \"jQuery.ajax() - execute js for crossOrigin when dataType option is provided\", 3,",
          "90:   function( assert ) {",
          "91:    return {",
          "92:     create: function( options ) {",
          "93:      options.crossDomain = true;",
          "94:      options.dataType = \"script\";",
          "95:      return jQuery.ajax( url( \"data/script.php?header=ecma\" ), options );",
          "96:     },",
          "97:     success: function() {",
          "98:      assert.ok( true, \"success\" );",
          "99:     },",
          "100:     complete: function() {",
          "101:      assert.ok( true, \"complete\" );",
          "102:     }",
          "103:    };",
          "104:   }",
          "105:  );",
          "107:  ajaxTest( \"jQuery.ajax() - do not execute js (crossOrigin)\", 2, function( assert ) {",
          "108:   return {",
          "109:    create: function( options ) {",
          "110:     options.crossDomain = true;",
          "111:     return jQuery.ajax( url( \"data/script.php\" ), options );",
          "112:    },",
          "113:    success: function() {",
          "114:     assert.ok( true, \"success\" );",
          "115:    },",
          "116:    complete: function() {",
          "117:     assert.ok( true, \"complete\" );",
          "118:    }",
          "119:   };",
          "120:  } );",
          "",
          "---------------"
        ]
      }
    }
  ]
}