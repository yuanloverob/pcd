{
  "cve_id": "CVE-2022-36020",
  "cve_desc": "The typo3/html-sanitizer package is an HTML sanitizer, written in PHP, aiming to provide XSS-safe markup based on explicitly allowed tags, attributes and values. Due to a parsing issue in the upstream package `masterminds/html5`, malicious markup used in a sequence with special HTML comments cannot be filtered and sanitized. This allows for a bypass of the cross-site scripting mechanism of `typo3/html-sanitizer`. This issue has been addressed in versions 1.0.7 and 2.0.16 of the `typo3/html-sanitizer` package. Users are advised to upgrade. There are no known workarounds for this issue.",
  "repo": "TYPO3/html-sanitizer",
  "patch_hash": "60bfdc7f9b394d0236e16ee4cea8372a7defa493",
  "patch_info": {
    "commit_hash": "60bfdc7f9b394d0236e16ee4cea8372a7defa493",
    "repo": "TYPO3/html-sanitizer",
    "commit_url": "https://github.com/TYPO3/html-sanitizer/commit/60bfdc7f9b394d0236e16ee4cea8372a7defa493",
    "files": [
      "composer.json",
      "tests/ScenarioTest.php"
    ],
    "message": "[SECURITY] Correctly handle comment end bang state (#86)\n\nUpgrade to https://github.com/Masterminds/html5-php/releases/tag/2.7.6\n\nSecurity-References: CVE-2022-36020",
    "before_after_code_files": [
      "tests/ScenarioTest.php||tests/ScenarioTest.php"
    ]
  },
  "patch_diff": {
    "tests/ScenarioTest.php||tests/ScenarioTest.php": [
      "File: tests/ScenarioTest.php -> tests/ScenarioTest.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "22: class ScenarioTest extends TestCase",
      "23: {",
      "24:     public static function tagFlagsAreProcessedDataProvider(): array",
      "25:     {",
      "26:         return [",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "24:     public static function allTagsAreRemovedOnMissingDeclarationDataProvider(): array",
      "25:     {",
      "26:         return [",
      "27:             ['<div class=\"content\">value</div><span class=\"content\">value</span>', ''],",
      "28:             ['<!--any--><div class=\"content\">value</div>', '<!--any-->'],",
      "29:             ['<!--any--!><div class=\"content\">value</div>', '<!--any-->'],",
      "30:         ];",
      "31:     }",
      "37:     public function allTagsAreRemovedOnMissingDeclaration(string $payload, string $expectation): void",
      "38:     {",
      "39:         $behavior = new Behavior();",
      "40:         $sanitizer = new Sanitizer(",
      "41:             new CommonVisitor($behavior)",
      "42:         );",
      "43:         self::assertSame($expectation, $sanitizer->sanitize($payload));",
      "44:     }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "307cbd69c0cf54fbed8c7a55fc5bd524c4d4998d",
      "candidate_info": {
        "commit_hash": "307cbd69c0cf54fbed8c7a55fc5bd524c4d4998d",
        "repo": "TYPO3/html-sanitizer",
        "commit_url": "https://github.com/TYPO3/html-sanitizer/commit/307cbd69c0cf54fbed8c7a55fc5bd524c4d4998d",
        "files": [
          ".github/workflows/tests.yml",
          "README.md",
          "UPGRADING.md",
          "composer.json",
          "src/Behavior.php",
          "src/Behavior/Attr.php",
          "src/Behavior/Handler/AsTextHandler.php",
          "src/Behavior/Handler/ClosureHandler.php",
          "src/Behavior/HandlerInterface.php",
          "src/Behavior/NodeException.php",
          "src/Behavior/NodeHandler.php",
          "src/Behavior/Tag.php",
          "src/Sanitizer.php",
          "src/Serializer/Rules.php",
          "src/Serializer/RulesInterface.php",
          "src/Visitor/AbstractVisitor.php",
          "src/Visitor/CommonVisitor.php",
          "src/Visitor/VisitorInterface.php",
          "tests/Behavior/AttrTest.php",
          "tests/Behavior/TagTest.php",
          "tests/BehaviorTest.php",
          "tests/CommonBuilderTest.php",
          "tests/EnvironmentTest.php",
          "tests/ScenarioTest.php"
        ],
        "message": "[TASK] Backport library to support PHP 7.0 and 7.1 (#103)\n\nThe PHP code of this library is backported to additionally support both\nPHP 7.0 and PHP 7.1.\n\nIn order to achieve this, const visibility, nullable types and `void`\ntypes were removed and replaced with PHPDoc comments where applicable.\n\nThe v1.5 branch is a back-port of v2 and only considered as a\ntransitional version between v1 and v2 of typo3/html-sanitizer.",
        "before_after_code_files": [
          "src/Behavior.php||src/Behavior.php",
          "src/Behavior/Attr.php||src/Behavior/Attr.php",
          "src/Behavior/Handler/AsTextHandler.php||src/Behavior/Handler/AsTextHandler.php",
          "src/Behavior/Handler/ClosureHandler.php||src/Behavior/Handler/ClosureHandler.php",
          "src/Behavior/HandlerInterface.php||src/Behavior/HandlerInterface.php",
          "src/Behavior/NodeException.php||src/Behavior/NodeException.php",
          "src/Behavior/NodeHandler.php||src/Behavior/NodeHandler.php",
          "src/Behavior/Tag.php||src/Behavior/Tag.php",
          "src/Sanitizer.php||src/Sanitizer.php",
          "src/Serializer/Rules.php||src/Serializer/Rules.php",
          "src/Serializer/RulesInterface.php||src/Serializer/RulesInterface.php",
          "src/Visitor/AbstractVisitor.php||src/Visitor/AbstractVisitor.php",
          "src/Visitor/CommonVisitor.php||src/Visitor/CommonVisitor.php",
          "src/Visitor/VisitorInterface.php||src/Visitor/VisitorInterface.php",
          "tests/Behavior/AttrTest.php||tests/Behavior/AttrTest.php",
          "tests/Behavior/TagTest.php||tests/Behavior/TagTest.php",
          "tests/BehaviorTest.php||tests/BehaviorTest.php",
          "tests/CommonBuilderTest.php||tests/CommonBuilderTest.php",
          "tests/EnvironmentTest.php||tests/EnvironmentTest.php",
          "tests/ScenarioTest.php||tests/ScenarioTest.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "tests/ScenarioTest.php||tests/ScenarioTest.php"
          ],
          "candidate": [
            "tests/ScenarioTest.php||tests/ScenarioTest.php"
          ]
        }
      },
      "candidate_diff": {
        "src/Behavior.php||src/Behavior.php": [
          "File: src/Behavior.php -> src/Behavior.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "30:     public const BLUNT = 0;",
          "35:     public const ENCODE_INVALID_TAG = 1;",
          "40:     public const ENCODE_INVALID_ATTR = 2;",
          "45:     public const REMOVE_UNEXPECTED_CHILDREN = 4;",
          "51:     public const ALLOW_CUSTOM_ELEMENTS = 8;",
          "56:     public const ENCODE_INVALID_COMMENT = 16;",
          "61:     public const ENCODE_INVALID_CDATA_SECTION = 32;",
          "",
          "[Added Lines]",
          "30:     const BLUNT = 0;",
          "35:     const ENCODE_INVALID_TAG = 1;",
          "40:     const ENCODE_INVALID_ATTR = 2;",
          "45:     const REMOVE_UNEXPECTED_CHILDREN = 4;",
          "51:     const ALLOW_CUSTOM_ELEMENTS = 8;",
          "56:     const ENCODE_INVALID_COMMENT = 16;",
          "61:     const ENCODE_INVALID_CDATA_SECTION = 32;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "136:         $names = array_map([$this, 'getNodeName'], $nodes);",
          "137:         $filteredNodes = array_filter(",
          "138:             $this->nodes,",
          "140:                 return $node === null && !in_array($name, $names, true)",
          "141:                     || $node !== null && !in_array($node, $nodes, true);",
          "142:             },",
          "",
          "[Removed Lines]",
          "139:             static function (?NodeInterface $node, string $name) use ($nodes, $names) {",
          "",
          "[Added Lines]",
          "139:             static function ($node, string $name) use ($nodes, $names) {",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "173:         );",
          "174:     }",
          "177:     {",
          "178:         $name = strtolower($name);",
          "179:         $node = $this->nodes[$name] ?? null;",
          "",
          "[Removed Lines]",
          "176:     public function getTag(string $name): ?Tag",
          "",
          "[Added Lines]",
          "179:     public function getTag(string $name)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "188:         return $this->nodes;",
          "189:     }",
          "192:     {",
          "193:         $name = strtolower($name);",
          "194:         return $this->nodes[$name] ?? null;",
          "",
          "[Removed Lines]",
          "191:     public function getNode(string $name): ?NodeInterface",
          "",
          "[Added Lines]",
          "197:     public function getNode(string $name)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "237:     {",
          "238:         $ambiguousNames = array_diff_assoc($names, array_unique($names));",
          "239:         if ($ambiguousNames !== []) {",
          "",
          "[Removed Lines]",
          "236:     protected function assertScalarUniqueness(array $names): void",
          "",
          "[Added Lines]",
          "243:     protected function assertScalarUniqueness(array $names)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "254:     {",
          "255:         $existingNodeNames = array_intersect_key(array_filter($this->nodes), $nodes);",
          "256:         if ($existingNodeNames !== []) {",
          "",
          "[Removed Lines]",
          "253:     protected function assertNodeUniqueness(array $nodes): void",
          "",
          "[Added Lines]",
          "261:     protected function assertNodeUniqueness(array $nodes)",
          "",
          "---------------"
        ],
        "src/Behavior/Attr.php||src/Behavior/Attr.php": [
          "File: src/Behavior/Attr.php -> src/Behavior/Attr.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "25:     public const BLUNT = 0;",
          "31:     public const NAME_PREFIX = 1;",
          "",
          "[Added Lines]",
          "25:     const BLUNT = 0;",
          "31:     const NAME_PREFIX = 1;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "40:     public const MATCH_FIRST_VALUE = 2;",
          "47:     public const MATCH_ALL_VALUES = 4;",
          "52:     public const MANDATORY = 8;",
          "",
          "[Added Lines]",
          "40:     const MATCH_FIRST_VALUE = 2;",
          "47:     const MATCH_ALL_VALUES = 4;",
          "52:     const MANDATORY = 8;",
          "",
          "---------------"
        ],
        "src/Behavior/Handler/AsTextHandler.php||src/Behavior/Handler/AsTextHandler.php": [
          "File: src/Behavior/Handler/AsTextHandler.php -> src/Behavior/Handler/AsTextHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: class AsTextHandler implements HandlerInterface",
          "25: {",
          "27:     {",
          "28:         if ($domNode === null) {",
          "29:             return null;",
          "",
          "[Removed Lines]",
          "26:     public function handle(NodeInterface $node, ?DOMNode $domNode, Context $context, Behavior $behavior = null): ?DOMNode",
          "",
          "[Added Lines]",
          "33:     public function handle(NodeInterface $node, $domNode, Context $context, Behavior $behavior = null)",
          "",
          "---------------"
        ],
        "src/Behavior/Handler/ClosureHandler.php||src/Behavior/Handler/ClosureHandler.php": [
          "File: src/Behavior/Handler/ClosureHandler.php -> src/Behavior/Handler/ClosureHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "34:         $this->closure = $closure;",
          "35:     }",
          "38:     {",
          "39:         $result = call_user_func($this->closure, $node, $domNode, $context, $behavior);",
          "40:         if ($result !== null && !$result instanceof DOMNode) {",
          "",
          "[Removed Lines]",
          "37:     public function handle(NodeInterface $node, ?DOMNode $domNode, Context $context, Behavior $behavior = null): ?DOMNode",
          "",
          "[Added Lines]",
          "44:     public function handle(NodeInterface $node, $domNode, Context $context, Behavior $behavior = null)",
          "",
          "---------------"
        ],
        "src/Behavior/HandlerInterface.php||src/Behavior/HandlerInterface.php": [
          "File: src/Behavior/HandlerInterface.php -> src/Behavior/HandlerInterface.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "21: interface HandlerInterface",
          "22: {",
          "24: }",
          "",
          "[Removed Lines]",
          "23:     public function handle(NodeInterface $node, ?DOMNode $domNode, Context $context, Behavior $behavior = null): ?DOMNode;",
          "",
          "[Added Lines]",
          "30:     public function handle(NodeInterface $node, $domNode, Context $context, Behavior $behavior = null);",
          "",
          "---------------"
        ],
        "src/Behavior/NodeException.php||src/Behavior/NodeException.php": [
          "File: src/Behavior/NodeException.php -> src/Behavior/NodeException.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "30:     protected $domNode;",
          "33:     {",
          "34:         $this->domNode = $domNode;",
          "35:         return $this;",
          "36:     }",
          "42:     {",
          "43:         $this->domNode = $domNode;",
          "44:         return $this;",
          "45:     }",
          "48:     {",
          "49:         return $this->domNode;",
          "50:     }",
          "56:     {",
          "57:         return $this->domNode;",
          "58:     }",
          "",
          "[Removed Lines]",
          "32:     public function withDomNode(?DOMNode $domNode): self",
          "41:     public function withNode(?DOMNode $domNode): self",
          "47:     public function getDomNode(): ?DOMNode",
          "55:     public function getNode(): ?DOMNode",
          "",
          "[Added Lines]",
          "35:     public function withDomNode($domNode): self",
          "45:     public function withNode($domNode): self",
          "54:     public function getDomNode()",
          "63:     public function getNode()",
          "",
          "---------------"
        ],
        "src/Behavior/NodeHandler.php||src/Behavior/NodeHandler.php": [
          "File: src/Behavior/NodeHandler.php -> src/Behavior/NodeHandler.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "22:     public const PROCESS_DEFAULTS = 1;",
          "27:     public const HANDLE_FIRST = 2;",
          "",
          "[Added Lines]",
          "22:     const PROCESS_DEFAULTS = 1;",
          "27:     const HANDLE_FIRST = 2;",
          "",
          "---------------"
        ],
        "src/Behavior/Tag.php||src/Behavior/Tag.php": [
          "File: src/Behavior/Tag.php -> src/Behavior/Tag.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "27:     public const BLUNT = 0;",
          "32:     public const PURGE_WITHOUT_ATTRS = 1;",
          "37:     public const PURGE_WITHOUT_CHILDREN = 2;",
          "42:     public const ALLOW_CHILDREN = 8;",
          "",
          "[Added Lines]",
          "27:     const BLUNT = 0;",
          "32:     const PURGE_WITHOUT_ATTRS = 1;",
          "37:     const PURGE_WITHOUT_CHILDREN = 2;",
          "42:     const ALLOW_CHILDREN = 8;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "112:         return ($this->flags & self::ALLOW_CHILDREN) === self::ALLOW_CHILDREN;",
          "113:     }",
          "116:     {",
          "117:         $name = strtolower($name);",
          "118:         if (isset($this->attrs[$name])) {",
          "",
          "[Removed Lines]",
          "115:     public function getAttr(string $name): ?Attr",
          "",
          "[Added Lines]",
          "118:     public function getAttr(string $name)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "134:     {",
          "135:         $ambiguousNames = array_diff_assoc($names, array_unique($names));",
          "136:         if ($ambiguousNames !== []) {",
          "",
          "[Removed Lines]",
          "133:     protected function assertScalarUniqueness(array $names): void",
          "",
          "[Added Lines]",
          "137:     protected function assertScalarUniqueness(array $names)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "152:     {",
          "153:         $existingAttrNames = [];",
          "154:         $currentAttrNames = array_keys($this->attrs);",
          "",
          "[Removed Lines]",
          "151:     protected function assertAttrUniqueness(array $attrs): void",
          "",
          "[Added Lines]",
          "156:     protected function assertAttrUniqueness(array $attrs)",
          "",
          "---------------"
        ],
        "src/Sanitizer.php||src/Sanitizer.php": [
          "File: src/Sanitizer.php -> src/Sanitizer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "39: class Sanitizer",
          "40: {",
          "43:         'encode_entities' => false,",
          "",
          "[Removed Lines]",
          "41:     protected const mastermindsDefaultOptions = [",
          "",
          "[Added Lines]",
          "44:     const mastermindsDefaultOptions = [",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "126:         return stream_get_contents($rules->getStream(), -1, 0);",
          "127:     }",
          "130:     {",
          "131:         foreach ($this->visitors as $visitor) {",
          "132:             $visitor->beforeTraverse($this->context);",
          "133:         }",
          "134:     }",
          "137:     {",
          "138:         foreach ($this->visitors as $visitor) {",
          "139:             $result = $visitor->enterNode($domNode);",
          "",
          "[Removed Lines]",
          "129:     protected function beforeTraverse(): void",
          "136:     protected function traverse(DOMNode $domNode): void",
          "",
          "[Added Lines]",
          "135:     protected function beforeTraverse()",
          "145:     protected function traverse(DOMNode $domNode)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "166:     {",
          "167:         for ($i = $domNodeList->length - 1; $i >= 0; $i--) {",
          "",
          "[Removed Lines]",
          "165:     protected function traverseNodeList(DOMNodeList $domNodeList): void",
          "",
          "[Added Lines]",
          "175:     protected function traverseNodeList(DOMNodeList $domNodeList)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "171:         }",
          "172:     }",
          "175:     {",
          "176:         foreach ($this->visitors as $visitor) {",
          "177:             $visitor->afterTraverse($this->context);",
          "178:         }",
          "179:     }",
          "182:     {",
          "183:         if ($target === null) {",
          "184:             $source->parentNode->removeChild($source);",
          "",
          "[Removed Lines]",
          "174:     protected function afterTraverse(): void",
          "181:     protected function replaceNode(DOMNode $source, ?DOMNode $target): ?DOMNode",
          "",
          "[Added Lines]",
          "187:     protected function afterTraverse()",
          "198:     protected function replaceNode(DOMNode $source, $target)",
          "",
          "---------------"
        ],
        "src/Serializer/Rules.php||src/Serializer/Rules.php": [
          "File: src/Serializer/Rules.php -> src/Serializer/Rules.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "76:         return $target;",
          "77:     }",
          "80:     {",
          "81:         if ($this->initiator === $initiator) {",
          "82:             return $this;",
          "",
          "[Removed Lines]",
          "79:     public function withInitiator(?InitiatorInterface $initiator): self",
          "",
          "[Added Lines]",
          "82:     public function withInitiator($initiator): self",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "86:         return $target;",
          "87:     }",
          "90:     {",
          "91:         $traverser = new Traverser($domNode, $this->out, $this, $this->options);",
          "92:         $traverser->walk();",
          "",
          "[Removed Lines]",
          "89:     public function traverse(DOMNode $domNode): void",
          "",
          "[Added Lines]",
          "95:     public function traverse(DOMNode $domNode)",
          "",
          "---------------"
        ],
        "src/Serializer/RulesInterface.php||src/Serializer/RulesInterface.php": [
          "File: src/Serializer/RulesInterface.php -> src/Serializer/RulesInterface.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "27:     public function withBehavior(Behavior $behavior);",
          "",
          "[Removed Lines]",
          "32:     public function withInitiator(?InitiatorInterface $initiator);",
          "34:     public function traverse(DOMNode $domNode): void;",
          "",
          "[Added Lines]",
          "33:     public function withInitiator($initiator);",
          "38:     public function traverse(DOMNode $domNode);",
          "",
          "---------------"
        ],
        "src/Visitor/AbstractVisitor.php||src/Visitor/AbstractVisitor.php": [
          "File: src/Visitor/AbstractVisitor.php -> src/Visitor/AbstractVisitor.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: abstract class AbstractVisitor implements VisitorInterface",
          "24: {",
          "26:     {",
          "27:     }",
          "30:     {",
          "31:         return $domNode;",
          "32:     }",
          "35:     {",
          "36:         return $domNode;",
          "37:     }",
          "40:     {",
          "41:     }",
          "42: }",
          "",
          "[Removed Lines]",
          "25:     public function beforeTraverse(Context $context): void",
          "29:     public function enterNode(DOMNode $domNode): ?DOMNode",
          "34:     public function leaveNode(DOMNode $domNode): ?DOMNode",
          "39:     public function afterTraverse(Context $context): void",
          "",
          "[Added Lines]",
          "28:     public function beforeTraverse(Context $context)",
          "35:     public function enterNode(DOMNode $domNode)",
          "43:     public function leaveNode(DOMNode $domNode)",
          "51:     public function afterTraverse(Context $context)",
          "",
          "---------------"
        ],
        "src/Visitor/CommonVisitor.php||src/Visitor/CommonVisitor.php": [
          "File: src/Visitor/CommonVisitor.php -> src/Visitor/CommonVisitor.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "50:         $this->behavior = $behavior;",
          "51:     }",
          "54:     {",
          "55:         $this->context = $context;",
          "",
          "[Removed Lines]",
          "53:     public function beforeTraverse(Context $context): void",
          "",
          "[Added Lines]",
          "56:     public function beforeTraverse(Context $context)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "62:         }",
          "63:     }",
          "66:     {",
          "67:         if (!$domNode instanceof DOMCdataSection",
          "68:             && !$domNode instanceof DOMComment",
          "",
          "[Removed Lines]",
          "65:     public function enterNode(DOMNode $domNode): ?DOMNode",
          "",
          "[Added Lines]",
          "71:     public function enterNode(DOMNode $domNode)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "92:         return $domNode;",
          "93:     }",
          "96:     {",
          "97:         if (!$domNode instanceof DOMElement || !$node instanceof Behavior\\Tag) {",
          "98:             return $domNode;",
          "",
          "[Removed Lines]",
          "95:     protected function enterDomElement(?DOMNode $domNode, Behavior\\NodeInterface $node): ?DOMNode",
          "",
          "[Added Lines]",
          "105:     protected function enterDomElement($domNode, Behavior\\NodeInterface $node)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "106:         return $this->handleMandatoryAttributes($domNode, $node);",
          "107:     }",
          "110:     {",
          "111:         if (!$domNode instanceof DOMElement) {",
          "112:             return $domNode;",
          "",
          "[Removed Lines]",
          "109:     public function leaveNode(DOMNode $domNode): ?DOMNode",
          "",
          "[Added Lines]",
          "122:     public function leaveNode(DOMNode $domNode)",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "127:         return $domNode;",
          "128:     }",
          "131:     {",
          "132:         if (!$domNode instanceof DOMElement) {",
          "133:             return $domNode;",
          "",
          "[Removed Lines]",
          "130:     protected function processAttributes(?DOMNode $domNode, Behavior\\Tag $tag): ?DOMNode",
          "",
          "[Added Lines]",
          "147:     protected function processAttributes($domNode, Behavior\\Tag $tag)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "146:         return $domNode;",
          "147:     }",
          "150:     {",
          "151:         if (!$domNode instanceof DOMElement) {",
          "152:             return $domNode;",
          "",
          "[Removed Lines]",
          "149:     protected function processChildren(?DOMNode $domNode, Behavior\\Tag $tag): ?DOMNode",
          "",
          "[Added Lines]",
          "170:     protected function processChildren($domNode, Behavior\\Tag $tag)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "171:     }",
          "177:     {",
          "178:         $name = strtolower($attribute->name);",
          "179:         $attr = $tag->getAttr($name);",
          "",
          "[Removed Lines]",
          "176:     protected function processAttribute(DOMElement $domNode, Behavior\\Tag $tag, DOMAttr $attribute): void",
          "",
          "[Added Lines]",
          "198:     protected function processAttribute(DOMElement $domNode, Behavior\\Tag $tag, DOMAttr $attribute)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "187:         }",
          "188:     }",
          "191:     {",
          "192:         if (!$domNode instanceof DOMElement) {",
          "193:             return $domNode;",
          "",
          "[Removed Lines]",
          "190:     protected function handleMandatoryAttributes(?DOMNode $domNode, Behavior\\Tag $tag): ?DOMNode",
          "",
          "[Added Lines]",
          "216:     protected function handleMandatoryAttributes($domNode, Behavior\\Tag $tag)",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "205:         return $domNode;",
          "206:     }",
          "209:     {",
          "210:         if ($domNode instanceof DOMComment && $this->behavior->shallEncodeInvalidComment()) {",
          "211:             return $this->convertToText($domNode);",
          "",
          "[Removed Lines]",
          "208:     protected function handleInvalidNode(DOMNode $domNode): ?DOMNode",
          "",
          "[Added Lines]",
          "237:     protected function handleInvalidNode(DOMNode $domNode)",
          "",
          "---------------",
          "--- Hunk 10 ---",
          "[Context before]",
          "234:     }",
          "240:     {",
          "241:         if ($this->behavior->shallEncodeInvalidAttr()) {",
          "242:             throw Behavior\\NodeException::create()->withDomNode($this->convertToText($domNode));",
          "",
          "[Removed Lines]",
          "239:     protected function handleInvalidAttr(DOMNode $domNode, string $name): void",
          "",
          "[Added Lines]",
          "269:     protected function handleInvalidAttr(DOMNode $domNode, string $name)",
          "",
          "---------------",
          "--- Hunk 11 ---",
          "[Context before]",
          "291:             && preg_match('#^[a-z][a-z0-9]*-.+#', $domNode->nodeName) > 0;",
          "292:     }",
          "295:     {",
          "297:         if (!isset($context['initiator'])) {",
          "",
          "[Removed Lines]",
          "294:     protected function log(string $message, array $context = [], $level = null): void",
          "",
          "[Added Lines]",
          "327:     protected function log(string $message, array $context = [], $level = null)",
          "",
          "---------------"
        ],
        "src/Visitor/VisitorInterface.php||src/Visitor/VisitorInterface.php": [
          "File: src/Visitor/VisitorInterface.php -> src/Visitor/VisitorInterface.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "42:     public function enterNode(DOMNode $domNode): ?DOMNode;",
          "",
          "[Added Lines]",
          "42:     public function enterNode(DOMNode $domNode);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "53:     public function leaveNode(DOMNode $domNode): ?DOMNode;",
          "",
          "[Added Lines]",
          "53:     public function leaveNode(DOMNode $domNode);",
          "",
          "---------------"
        ],
        "tests/Behavior/AttrTest.php||tests/Behavior/AttrTest.php": [
          "File: tests/Behavior/AttrTest.php -> tests/Behavior/AttrTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "28:     {",
          "29:         $attr = new Attr('test', Attr::BLUNT);",
          "30:         $modifiedAttr = $attr->withFlags(Attr::MANDATORY);",
          "",
          "[Removed Lines]",
          "27:     public function withFlagsClonesInstance(): void",
          "",
          "[Added Lines]",
          "27:     public function withFlagsClonesInstance()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "40:     {",
          "41:         $valueA = new DatasetAttrValue('a1', 'a2');",
          "42:         $valueB = new DatasetAttrValue('b1', 'b2');",
          "",
          "[Removed Lines]",
          "39:     public function addValuesKeepsInstance(): void",
          "",
          "[Added Lines]",
          "39:     public function addValuesKeepsInstance()",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "52:     {",
          "53:         $valueA = new DatasetAttrValue('a1', 'a2');",
          "54:         $valueB = new DatasetAttrValue('b1', 'b2');",
          "",
          "[Removed Lines]",
          "51:     public function withValuesKeepsInstanceWhenNotModified(): void",
          "",
          "[Added Lines]",
          "51:     public function withValuesKeepsInstanceWhenNotModified()",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "67:     {",
          "68:         $valueA = new DatasetAttrValue('a1', 'a2');",
          "69:         $valueB = new DatasetAttrValue('b1', 'b2');",
          "",
          "[Removed Lines]",
          "66:     public function withValuesClonesInstanceWhenModified(): void",
          "",
          "[Added Lines]",
          "66:     public function withValuesClonesInstanceWhenModified()",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "103:     {",
          "104:         $attr = new Attr($name, $flags);",
          "105:         self::assertSame($expectation, $attr->matchesName($matchName));",
          "",
          "[Removed Lines]",
          "102:     public function matchesName(int $flags, string $name, string $matchName, bool $expectation): void",
          "",
          "[Added Lines]",
          "102:     public function matchesName(int $flags, string $name, string $matchName, bool $expectation)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "143:     {",
          "144:         $attr = new Attr('test', $flags);",
          "145:         $attr->addValues(...$values);",
          "",
          "[Removed Lines]",
          "142:     public function matchesValue(int $flags, array $values, string $matchValue, bool $expectation): void",
          "",
          "[Added Lines]",
          "142:     public function matchesValue(int $flags, array $values, string $matchValue, bool $expectation)",
          "",
          "---------------"
        ],
        "tests/Behavior/TagTest.php||tests/Behavior/TagTest.php": [
          "File: tests/Behavior/TagTest.php -> tests/Behavior/TagTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:     {",
          "44:         $this->expectException(LogicException::class);",
          "45:         $this->expectExceptionCode($code);",
          "",
          "[Removed Lines]",
          "42:     public function ambiguityIsDetected(array $originalNames, array $additionalNames, int $code = 0): void",
          "",
          "[Added Lines]",
          "42:     public function ambiguityIsDetected(array $originalNames, array $additionalNames, int $code = 0)",
          "",
          "---------------"
        ],
        "tests/BehaviorTest.php||tests/BehaviorTest.php": [
          "File: tests/BehaviorTest.php -> tests/BehaviorTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "43:     {",
          "44:         $this->expectException(LogicException::class);",
          "45:         $this->expectExceptionCode($code);",
          "",
          "[Removed Lines]",
          "42:     public function ambiguityIsDetected(array $originalNames, array $additionalNames, int $code = 0): void",
          "",
          "[Added Lines]",
          "42:     public function ambiguityIsDetected(array $originalNames, array $additionalNames, int $code = 0)",
          "",
          "---------------"
        ],
        "tests/CommonBuilderTest.php||tests/CommonBuilderTest.php": [
          "File: tests/CommonBuilderTest.php -> tests/CommonBuilderTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "276:     {",
          "277:         $builder = new CommonBuilder();",
          "278:         $sanitizer = $builder->build();",
          "",
          "[Removed Lines]",
          "275:     public function isSanitized(string $payload, string $expectation): void",
          "",
          "[Added Lines]",
          "275:     public function isSanitized(string $payload, string $expectation)",
          "",
          "---------------"
        ],
        "tests/EnvironmentTest.php||tests/EnvironmentTest.php": [
          "File: tests/EnvironmentTest.php -> tests/EnvironmentTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "25:     {",
          "26:         self::assertSame(E_ALL, error_reporting());",
          "27:     }",
          "",
          "[Removed Lines]",
          "24:     public function reportsAllErrors(): void",
          "",
          "[Added Lines]",
          "24:     public function reportsAllErrors()",
          "",
          "---------------"
        ],
        "tests/ScenarioTest.php||tests/ScenarioTest.php": [
          "File: tests/ScenarioTest.php -> tests/ScenarioTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "32:     {",
          "33:         $this->markTestSkipped('see https://github.com/TYPO3/html-sanitizer/issues/99');",
          "",
          "[Removed Lines]",
          "31:     public function missingBehaviorTriggersDeprecationError(): void",
          "",
          "[Added Lines]",
          "31:     public function missingBehaviorTriggersDeprecationError()",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "58:     {",
          "59:         $behavior = new Behavior();",
          "60:         $sanitizer = new Sanitizer(",
          "",
          "[Removed Lines]",
          "57:     public function allTagsAreRemovedOnMissingDeclaration(string $payload, string $expectation): void",
          "",
          "[Added Lines]",
          "57:     public function allTagsAreRemovedOnMissingDeclaration(string $payload, string $expectation)",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "110:     {",
          "111:         $behavior = (new Behavior())",
          "112:             ->withFlags(Behavior::ENCODE_INVALID_TAG | Behavior::REMOVE_UNEXPECTED_CHILDREN)",
          "",
          "[Removed Lines]",
          "109:     public function tagFlagsAreProcessed(int $flags, string $payload, string $expectation): void",
          "",
          "[Added Lines]",
          "109:     public function tagFlagsAreProcessed(int $flags, string $payload, string $expectation)",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "129:         $node = new Behavior\\Tag('div');",
          "130:         $asTextHandler = new Behavior\\Handler\\AsTextHandler();",
          "131:         $closureHandler = new Behavior\\Handler\\ClosureHandler(",
          "133:                 if ($domNode === null) {",
          "134:                     return null;",
          "135:                 }",
          "",
          "[Removed Lines]",
          "132:             static function (NodeInterface $node, ?DOMNode $domNode): ?\\DOMNode {",
          "",
          "[Added Lines]",
          "132:             static function (NodeInterface $node, $domNode) {",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "201:     {",
          "202:         $behavior = (new Behavior())",
          "203:             ->withFlags(Behavior::REMOVE_UNEXPECTED_CHILDREN)",
          "",
          "[Removed Lines]",
          "200:     public function tagIsHandled(Behavior\\NodeHandler $nodeHandler, string $payload, string $expectation): void",
          "",
          "[Added Lines]",
          "200:     public function tagIsHandled(Behavior\\NodeHandler $nodeHandler, string $payload, string $expectation)",
          "",
          "---------------",
          "--- Hunk 6 ---",
          "[Context before]",
          "248:     {",
          "249:         $behavior = (new Behavior())",
          "250:             ->withFlags($flags)",
          "",
          "[Removed Lines]",
          "247:     public function commentsAreHandled(bool $allowed, int $flags, string $payload, string $expectation): void",
          "",
          "[Added Lines]",
          "247:     public function commentsAreHandled(bool $allowed, int $flags, string $payload, string $expectation)",
          "",
          "---------------",
          "--- Hunk 7 ---",
          "[Context before]",
          "297:     {",
          "298:         $behavior = (new Behavior())",
          "299:             ->withFlags($flags)",
          "",
          "[Removed Lines]",
          "296:     public function cdataSectionsAreHandled(bool $allowed, int $flags, string $payload, string $expectation): void",
          "",
          "[Added Lines]",
          "296:     public function cdataSectionsAreHandled(bool $allowed, int $flags, string $payload, string $expectation)",
          "",
          "---------------",
          "--- Hunk 8 ---",
          "[Context before]",
          "315:     {",
          "316:         $payload = implode(\"\\n\" , [",
          "",
          "[Removed Lines]",
          "314:     public function isJsonLdScriptAllowed(): void",
          "",
          "[Added Lines]",
          "314:     public function isJsonLdScriptAllowed()",
          "",
          "---------------",
          "--- Hunk 9 ---",
          "[Context before]",
          "372:     {",
          "373:         $payload = implode(\"\\n\" , [",
          "374:             '1:<iframe src=\"https://example.org/\"></iframe>',",
          "",
          "[Removed Lines]",
          "371:     public function iframeSandboxIsAllowed(): void",
          "",
          "[Added Lines]",
          "371:     public function iframeSandboxIsAllowed()",
          "",
          "---------------"
        ]
      }
    }
  ]
}