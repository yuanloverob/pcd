{
  "cve_id": "CVE-2023-28096",
  "cve_desc": "OpenSIPS, a Session Initiation Protocol (SIP) server implementation, has a memory leak starting in the 2.3 branch and priot to versions 3.1.8 and 3.2.5. The memory leak was detected in the function `parse_mi_request` while performing coverage-guided fuzzing. This issue can be reproduced by sending multiple requests of the form `{\"jsonrpc\": \"2.0\",\"method\": \"log_le`. This malformed message was tested against an instance of OpenSIPS via FIFO transport layer and was found to increase the memory consumption over time.\n\nTo abuse this memory leak, attackers need to reach the management interface (MI) which typically should only be exposed on trusted interfaces. In cases where the MI is exposed to the internet without authentication, abuse of this issue will lead to memory exhaustion which may affect the underlying system\u2019s availability. No authentication is typically required to reproduce this issue. On the other hand, memory leaks may occur in other areas of OpenSIPS where the cJSON library is used for parsing JSON objects.\n\nThe issue has been fixed in versions 3.1.8 and 3.2.5.",
  "repo": "OpenSIPS/opensips",
  "patch_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
  "patch_info": {
    "commit_hash": "417568707520af25ec5c5dd91da18e6db3649dcb",
    "repo": "OpenSIPS/opensips",
    "commit_url": "https://github.com/OpenSIPS/opensips/commit/417568707520af25ec5c5dd91da18e6db3649dcb",
    "files": [
      "lib/cJSON.c"
    ],
    "message": "cJSON: fix memory leak on object parsing error\n\nIssue discovered during OpenSIPS Security Audit 2021/2022,\nby Alfred Farrugia & Sandro Gauci (Enable Security)\n\nhttps://github.com/OpenSIPS/opensips/security/advisories/GHSA-2mg2-g46r-j4qr",
    "before_after_code_files": [
      "lib/cJSON.c||lib/cJSON.c"
    ]
  },
  "patch_diff": {
    "lib/cJSON.c||lib/cJSON.c": [
      "File: lib/cJSON.c -> lib/cJSON.c",
      "--- Hunk 1 ---",
      "[Context before]",
      "1483: fail:",
      "1484:     if (item->child != NULL)",
      "1485:     {",
      "1487:         item->child = NULL;",
      "1488:     }",
      "",
      "[Removed Lines]",
      "1486:         cJSON_Delete(child);",
      "",
      "[Added Lines]",
      "1486:         cJSON_Delete(item->child);",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "51aa2a8bc0a7cc814eff34e3639329ce8b33e304",
      "candidate_info": {
        "commit_hash": "51aa2a8bc0a7cc814eff34e3639329ce8b33e304",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/51aa2a8bc0a7cc814eff34e3639329ce8b33e304",
        "files": [
          "modules/rtpengine/rtpengine.c"
        ],
        "message": "rtpengine: do not specify interfaces for non-offer/answer\n\nAvoid getting bogus `no more memory` errors when trying to specify in\nin/out interface when `direction` node is NULL.\n\nClose #2880\n\n(cherry picked from commit bbb6f313bba3fdb7f32f80140ceb9c8dff1e8f1b)",
        "before_after_code_files": [
          "modules/rtpengine/rtpengine.c||modules/rtpengine/rtpengine.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/rtpengine/rtpengine.c||modules/rtpengine/rtpengine.c": [
          "File: modules/rtpengine/rtpengine.c -> modules/rtpengine/rtpengine.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "1933:  }",
          "1935:  if (iniface.len != 0 && outiface.len != 0) {",
          "1946:   }",
          "1948:  } else if (iniface.len) {",
          "1949:   LM_ERR(\"in-iface value without out-iface\\n\");",
          "1950:   return -1;",
          "",
          "[Removed Lines]",
          "1936:   bitem = bencode_str(bencode_item_buffer(ng_flags->direction), &iniface);",
          "1937:   if (!bitem) {",
          "1938:    err = \"no more memory\";",
          "1939:    goto error;",
          "1940:   }",
          "1941:   BCHECK(bencode_list_add(ng_flags->direction, bitem));",
          "1942:   bitem = bencode_str(bencode_item_buffer(ng_flags->direction), &outiface);",
          "1943:   if (!bitem) {",
          "1944:    err = \"no more memory\";",
          "1945:    goto error;",
          "1947:   BCHECK(bencode_list_add(ng_flags->direction, bitem));",
          "",
          "[Added Lines]",
          "1936:   if (ng_flags->direction) {",
          "1937:    bitem = bencode_str(bencode_item_buffer(ng_flags->direction), &iniface);",
          "1938:    if (!bitem) {",
          "1939:     err = iniface.s;",
          "1940:     goto error;",
          "1941:    }",
          "1942:    BCHECK(bencode_list_add(ng_flags->direction, bitem));",
          "1943:    bitem = bencode_str(bencode_item_buffer(ng_flags->direction), &outiface);",
          "1944:    if (!bitem) {",
          "1945:     err = \"no more memory\";",
          "1946:     goto error;",
          "1947:    }",
          "1948:    BCHECK(bencode_list_add(ng_flags->direction, bitem));",
          "1949:   } else {",
          "1950:    LM_DBG(\"cannot set interfaces for non-offer/answer commands\\n\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ff17c36863b4582f597f3750444c12e7ce323cc8",
      "candidate_info": {
        "commit_hash": "ff17c36863b4582f597f3750444c12e7ce323cc8",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/ff17c36863b4582f597f3750444c12e7ce323cc8",
        "files": [
          "parser/parse_hname2.c"
        ],
        "message": "Fix rare UB on left-shift signed int overflow\n\nBy default, most commonly used compilers *define* some behaviour when\nthis overflow occurs, such that the program will continue normally,\nwithout any negative consequences.\n\nSeverity: Minor\nFixes OSS-Fuzz#40201\n\n(cherry picked from commit 2ba963b0c5e2b6705a3f28ce44e57b248988a103)",
        "before_after_code_files": [
          "parser/parse_hname2.c||parser/parse_hname2.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "parser/parse_hname2.c||parser/parse_hname2.c": [
          "File: parser/parse_hname2.c -> parser/parse_hname2.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "32: #include \"keys.h\"",
          "",
          "[Removed Lines]",
          "35: #define LOWER_BYTE(b) ((b) | 0x20)",
          "36: #define LOWER_DWORD(d) ((d) | 0x20202020)",
          "",
          "[Added Lines]",
          "35: #define LOWER_BYTE(b) ((b) | 0x20U)",
          "36: #define LOWER_DWORD(d) ((d) | 0x20202020U)",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "94: #ifdef FUZZ_BUILD",
          "",
          "[Removed Lines]",
          "91: #define READ(val) \\",
          "92: (*(val + 0) + (*(val + 1) << 8) + (*(val + 2) << 16) + (*(val + 3) << 24))",
          "",
          "[Added Lines]",
          "97: #define READ(addr) \\",
          "98:  ((unsigned)*((unsigned char *)addr + 0) + \\",
          "99:   ((unsigned)*((unsigned char *)addr + 1) << 8) + \\",
          "100:   ((unsigned)*((unsigned char *)addr + 2) << 16) + \\",
          "101:   ((unsigned)*((unsigned char *)addr + 3) << 24))",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "80a7df2433934a880a728ae9305a9a04c37d69a4",
      "candidate_info": {
        "commit_hash": "80a7df2433934a880a728ae9305a9a04c37d69a4",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/80a7df2433934a880a728ae9305a9a04c37d69a4",
        "files": [
          "modules/clusterer/sync.c"
        ],
        "message": "clusterer: queue sync request after all send errors\n\n(cherry picked from commit 46e56d4170079eed46686c57986c2ccf5756779e)",
        "before_after_code_files": [
          "modules/clusterer/sync.c||modules/clusterer/sync.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/clusterer/sync.c||modules/clusterer/sync.c": [
          "File: modules/clusterer/sync.c -> modules/clusterer/sync.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:  cluster_info_t *cluster;",
          "94:  struct local_cap *lcap;",
          "95:  int source_id;",
          "98:  LM_DBG(\"requesting %.*s sync in cluster %d\\n\",",
          "99:         capability->len, capability->s, cluster_id);",
          "",
          "[Removed Lines]",
          "96:  int rc;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "152:   lock_release(cluster->lock);",
          "153:  } else {",
          "154:   LM_DBG(\"found donor node: %d\\n\", source_id);",
          "158:    lock_get(cluster->lock);",
          "159:    lcap->flags |= CAP_SYNC_PENDING;",
          "161:    if (cluster->current_node->flags & NODE_IS_SEED)",
          "162:     gettimeofday(&lcap->sync_req_time, NULL);",
          "163:    lock_release(cluster->lock);",
          "166:  }",
          "168:  return 0;",
          "",
          "[Removed Lines]",
          "155:   rc = send_sync_req(capability, cluster_id, source_id);",
          "156:   if (rc == CLUSTERER_DEST_DOWN || rc == CLUSTERER_CURR_DISABLED) {",
          "164:   } else if (rc == CLUSTERER_SEND_ERR)",
          "165:    return -1;",
          "",
          "[Added Lines]",
          "154:   if (send_sync_req(capability, cluster_id, source_id) !=",
          "155:    CLUSTERER_SEND_SUCCESS) {",
          "163:   }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "35e2ed8bbae92993f4dae4818188c6a95afb69c4",
      "candidate_info": {
        "commit_hash": "35e2ed8bbae92993f4dae4818188c6a95afb69c4",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/35e2ed8bbae92993f4dae4818188c6a95afb69c4",
        "files": [
          "modules/dialog/dlg_hash.c"
        ],
        "message": "dialog: do not corelate the number of legs with branches\n\nFor a single transaction branch, we may have multiple dialog legs\nresulted by forking downstream.\n\nThanks go to Rizwan Syed and Jonathan Hulme from ConnexCS for reporting,\nproviding testing environment and support the troubleshooting and fix!\n\n(cherry picked from commit 1b944d21229e3f598e31a1d946e56e6098026ac8)",
        "before_after_code_files": [
          "modules/dialog/dlg_hash.c||modules/dialog/dlg_hash.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/dialog/dlg_hash.c||modules/dialog/dlg_hash.c": [
          "File: modules/dialog/dlg_hash.c -> modules/dialog/dlg_hash.c"
        ]
      }
    },
    {
      "candidate_hash": "cb9c2d09a0cacc5e3c246f5cfb4829313d09d962",
      "candidate_info": {
        "commit_hash": "cb9c2d09a0cacc5e3c246f5cfb4829313d09d962",
        "repo": "OpenSIPS/opensips",
        "commit_url": "https://github.com/OpenSIPS/opensips/commit/cb9c2d09a0cacc5e3c246f5cfb4829313d09d962",
        "files": [
          "modules/perl/perlfunc.c"
        ],
        "message": "perl: Fix PKG corruption in perl_exec() (off-by-one)\n\n(cherry picked from commit d7f9a851149010d1b99aeb9e04339994414c8731)",
        "before_after_code_files": [
          "modules/perl/perlfunc.c||modules/perl/perlfunc.c"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/naveenecosmob/opensips/pull/1",
          "https://github.com/naveenecosmob/opensips/pull/5"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/perl/perlfunc.c||modules/perl/perlfunc.c": [
          "File: modules/perl/perlfunc.c -> modules/perl/perlfunc.c",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:  str pfnc, pparam;",
          "107:  char *fnc;",
          "110:  if (!fnc) {",
          "111:   LM_ERR(\"No more pkg mem!\\n\");",
          "112:   return -1;",
          "113:  }",
          "114:  memcpy(fnc, _fnc_s->s, _fnc_s->len);",
          "117:  dSP;",
          "",
          "[Removed Lines]",
          "109:  fnc = pkg_malloc(_fnc_s->len);",
          "115:  fnc[_fnc_s->len] = 0;",
          "",
          "[Added Lines]",
          "109:  fnc = pkg_malloc(_fnc_s->len + 1);",
          "115:  fnc[_fnc_s->len] = '\\0';",
          "",
          "---------------"
        ]
      }
    }
  ]
}