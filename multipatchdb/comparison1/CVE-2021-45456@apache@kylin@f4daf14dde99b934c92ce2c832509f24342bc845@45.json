{
  "cve_id": "CVE-2021-45456",
  "cve_desc": "Apache kylin checks the legitimacy of the project before executing some commands with the project name passed in by the user. There is a mismatch between what is being checked and what is being used as the shell command argument in DiagnosisService. This may cause an illegal project name to pass the check and perform the following steps, resulting in a command injection vulnerability. This issue affects Apache Kylin 4.0.0.",
  "repo": "apache/kylin",
  "patch_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
  "patch_info": {
    "commit_hash": "f4daf14dde99b934c92ce2c832509f24342bc845",
    "repo": "apache/kylin",
    "commit_url": "https://github.com/apache/kylin/commit/f4daf14dde99b934c92ce2c832509f24342bc845",
    "files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "server/src/main/webapp/WEB-INF/web.xml"
    ],
    "message": "test fix",
    "before_after_code_files": [
      "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java"
    ]
  },
  "patch_diff": {
    "core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java||core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java -> core-common/src/main/java/org/apache/kylin/common/KylinConfigBase.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "3403:     public String getKerberosPrincipal() {",
      "3404:         return getOptional(\"kylin.kerberos.principal\");",
      "3405:     }",
      "3406: }",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "3407:     public String getEncryptCipherIvSpec() {",
      "3408:         return getOptional(\"kylin.security.encrypt.cipher.ivSpec\", \"AAAAAAAAAAAAAAAA\");",
      "3409:     }",
      "",
      "---------------"
    ],
    "core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java||core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java": [
      "File: core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java -> core-common/src/main/java/org/apache/kylin/common/util/EncryptUtil.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "25: import java.security.NoSuchAlgorithmException;",
      "27: import org.apache.commons.codec.binary.Base64;",
      "29: import javax.crypto.Cipher;",
      "30: import javax.crypto.NoSuchPaddingException;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28: import org.apache.kylin.common.KylinConfig;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "42:             InvalidKeyException, NoSuchPaddingException, NoSuchAlgorithmException, UnsupportedEncodingException {",
      "43:         Cipher cipher = Cipher.getInstance(\"AES/CFB/PKCS5Padding\");",
      "44:         final SecretKeySpec secretKey = new SecretKeySpec(key, \"AES\");",
      "46:         cipher.init(cipherMode, secretKey, ivSpec);",
      "47:         return cipher;",
      "48:     }",
      "",
      "[Removed Lines]",
      "45:         IvParameterSpec ivSpec = new IvParameterSpec(\"AAAAAAAAAAAAAAAA\".getBytes(\"UTF-8\"));",
      "",
      "[Added Lines]",
      "46:         IvParameterSpec ivSpec = new IvParameterSpec(KylinConfig.getInstanceFromEnv().getEncryptCipherIvSpec().getBytes(\"UTF-8\"));",
      "",
      "---------------"
    ],
    "core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java||core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java": [
      "File: core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java -> core-common/src/test/java/org/apache/kylin/common/util/EncryptUtilTest.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: package org.apache.kylin.common.util;",
      "21: import org.junit.Assert;",
      "22: import org.junit.Test;",
      "26:     @Test",
      "27:     public void testAESEncrypt(){",
      "",
      "[Removed Lines]",
      "24: public class EncryptUtilTest {",
      "",
      "[Added Lines]",
      "21: import org.junit.After;",
      "23: import org.junit.Before;",
      "26: public class EncryptUtilTest extends LocalFileMetadataTestCase {",
      "27:     @Before",
      "28:     public void setUp() throws Exception {",
      "29:         this.createTestMetadata();",
      "30:     }",
      "32:     @After",
      "33:     public void after() throws Exception {",
      "34:         this.cleanupTestMetadata();",
      "35:     }",
      "",
      "---------------"
    ],
    "server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java||server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java": [
      "File: server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java -> server-base/src/main/java/org/apache/kylin/rest/service/DiagnosisService.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "87:     public String dumpProjectDiagnosisInfo(String project, File exportPath) throws IOException {",
      "88:         Message msg = MsgPicker.getMsg();",
      "89:         ProjectInstance projectInstance =",
      "90:                 ProjectManager.getInstance(KylinConfig.getInstanceFromEnv())",
      "92:         if (null == projectInstance) {",
      "93:             throw new BadRequestException(",
      "95:         }",
      "96:         aclEvaluate.checkProjectOperationPermission(projectInstance);",
      "98:         runDiagnosisCLI(args);",
      "99:         return getDiagnosisPackageName(exportPath);",
      "100:     }",
      "",
      "[Removed Lines]",
      "91:                         .getProject(ValidateUtil.convertStringToBeAlphanumericUnderscore(project));",
      "94:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), project));",
      "97:         String[] args = { project, exportPath.getAbsolutePath() };",
      "",
      "[Added Lines]",
      "89:         String projectName = ValidateUtil.convertStringToBeAlphanumericUnderscore(project);",
      "92:                         .getProject(projectName);",
      "95:                     String.format(Locale.ROOT, msg.getDIAG_PROJECT_NOT_FOUND(), projectName));",
      "98:         String[] args = { projectName, exportPath.getAbsolutePath() };",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "8111bb0f4c3f277a2a259a784ba3b758dc72f586",
      "candidate_info": {
        "commit_hash": "8111bb0f4c3f277a2a259a784ba3b758dc72f586",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/8111bb0f4c3f277a2a259a784ba3b758dc72f586",
        "files": [
          "docker/README-cluster.md",
          "docker/README-standalone.md",
          "docker/README.md",
          "docker/build_standalone_image.sh"
        ],
        "message": "Fix typos for Docker docs (#1990)\n\n* [tyro] fix typo in CuboidCLI\n\n* update docker README.md && fix some typo\n\n* update docker README.md && fix some typo\n\nCo-authored-by: ClownXC <chen3494269@163.com>",
        "before_after_code_files": [
          "docker/dockerfile/standalone/build_standalone_image.sh||docker/build_standalone_image.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "docker/dockerfile/standalone/build_standalone_image.sh||docker/build_standalone_image.sh": [
          "File: docker/dockerfile/standalone/build_standalone_image.sh -> docker/build_standalone_image.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: #",
          "20: DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"",
          "24: echo \"start build Hadoop docker image\"",
          "25: docker build -f Dockerfile_hadoop -t hadoop2.8-all-in-one-for-kylin4 .",
          "",
          "[Removed Lines]",
          "21: cd ${DIR}",
          "22: echo \"build image in dir \"${DIR}",
          "",
          "[Added Lines]",
          "21: BUILD_DIR=\"${DIR}/dockerfile/standalone/\"",
          "22: cd ${BUILD_DIR}",
          "23: echo \"build image in dir \"${BUILD_DIR}",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6face85dd87385aa19f355cb23ac7a3448254378",
      "candidate_info": {
        "commit_hash": "6face85dd87385aa19f355cb23ac7a3448254378",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/6face85dd87385aa19f355cb23ac7a3448254378",
        "files": [
          "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/application/SparkEntry.java",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala"
        ],
        "message": "KYLIN-5245 fix incorrect job status is displayed when deployMode is cluster execution error (#1959)\n\nCo-authored-by: zhaoliu4 <zhaoliu4@iflytek.com>\nCo-authored-by: XiaoxiangYu <xxyu@apache.org>",
        "before_after_code_files": [
          "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/application/SparkEntry.java||kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/application/SparkEntry.java",
          "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/application/SparkEntry.java||kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/application/SparkEntry.java": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/application/SparkEntry.java -> kylin-spark-project/kylin-spark-engine/src/main/java/org/apache/kylin/engine/spark/application/SparkEntry.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "23: public class SparkEntry {",
          "24:     public static void main(String[] args) {",
          "26:     }",
          "27: }",
          "",
          "[Removed Lines]",
          "25:         JobWorkSpace.execute(args);",
          "",
          "[Added Lines]",
          "25:         int retCode = JobWorkSpace.execute(args);",
          "26:         if (retCode == 2) {",
          "27:             System.exit(1);",
          "28:         } else if (System.getProperty(\"spark.master\").equals(\"yarn\") && System.getProperty(\"spark.submit.deployMode\").equals(\"cluster\")) {",
          "29:             if (retCode == 1) {",
          "30:                 throw new RuntimeException(\"Job failed!\");",
          "31:             }",
          "32:         } else {",
          "33:             System.exit(retCode);",
          "34:         }",
          "",
          "---------------"
        ],
        "kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala||kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala": [
          "File: kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala -> kylin-spark-project/kylin-spark-engine/src/main/scala/org/apache/spark/application/JobWorkSpace.scala",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: import org.apache.spark.scheduler.KylinJobEventLoop",
          "30: object JobWorkSpace extends Logging {",
          "32:     try {",
          "33:       val (application, appArgs) = resolveArgs(args)",
          "34:       val eventLoop = new KylinJobEventLoop",
          "35:       val worker = new JobWorker(application, appArgs, eventLoop)",
          "36:       val monitor = new JobMonitor(eventLoop)",
          "37:       val workspace = new JobWorkSpace(eventLoop, monitor, worker)",
          "38:       if (System.getProperty(\"spark.master\").equals(\"yarn\") && System.getProperty(\"spark.submit.deployMode\").equals(\"cluster\")) {",
          "39:         val res = workspace.run()",
          "40:         if (res != 0) {",
          "",
          "[Removed Lines]",
          "31:   def execute(args: Array[String]): Unit = {",
          "",
          "[Added Lines]",
          "31:   def execute(args: Array[String]): Int = {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:     } catch {",
          "47:       case throwable: Throwable =>",
          "48:         logError(\"Error occurred when init job workspace.\", throwable)",
          "50:     }",
          "51:   }",
          "",
          "[Removed Lines]",
          "49:         System.exit(1)",
          "",
          "[Added Lines]",
          "50:         2",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "66e83b46a0868742e9ead9838f01efdccc74e378",
      "candidate_info": {
        "commit_hash": "66e83b46a0868742e9ead9838f01efdccc74e378",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/66e83b46a0868742e9ead9838f01efdccc74e378",
        "files": [
          "build/bin/check-env.sh"
        ],
        "message": "Kylin 5190, fix kylin.sh error when directory starts with s3a:// (#1895)\n\n* KYLIN-5190, fix kylin.sh error when directory starts with s3a://, replace s3a:// with s3://",
        "before_after_code_files": [
          "build/bin/check-env.sh||build/bin/check-env.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/1913",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "build/bin/check-env.sh||build/bin/check-env.sh": [
          "File: build/bin/check-env.sh -> build/bin/check-env.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "76: then",
          "77:     quit \"Please set kylin.env.hdfs-working-dir in kylin.properties\"",
          "78: fi",
          "80: echo \"Checking hdfs working dir\"",
          "81: hadoop ${hadoop_conf_param} fs -mkdir -p $WORKING_DIR",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "79: if [[ ${WORKING_DIR:0:3} -eq \"s3a\" ]]",
          "80: then",
          "81:     WORKING_DIR=${WORKING_DIR/\"s3a\"/\"s3\"}",
          "82: fi",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "90: SPARK_EVENTLOG_DIR=`bash $KYLIN_HOME/bin/get-properties.sh kylin.engine.spark-conf.spark.eventLog.dir`",
          "91: if [ -n \"$SPARK_EVENTLOG_DIR\" ]",
          "92: then",
          "93:     hadoop ${hadoop_conf_param} fs -mkdir -p $SPARK_EVENTLOG_DIR",
          "94:     if [ $? != 0 ]",
          "95:     then",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "97:     if [[ ${SPARK_EVENTLOG_DIR:0:3} -eq \"s3a\" ]]",
          "98:     then",
          "99:         SPARK_EVENTLOG_DIR=${SPARK_EVENTLOG_DIR/\"s3a\"/\"s3\"}",
          "100:     fi",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "100: SPARK_HISTORYLOG_DIR=`bash $KYLIN_HOME/bin/get-properties.sh kylin.engine.spark-conf.spark.history.fs.logDirectory`",
          "101: if [ -n \"$SPARK_HISTORYLOG_DIR\" ]",
          "102: then",
          "103:     hadoop ${hadoop_conf_param} fs -mkdir -p $SPARK_HISTORYLOG_DIR",
          "104:     if [ $? != 0 ]",
          "105:     then",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "111:     if [[ ${SPARK_HISTORYLOG_DIR:0:3} -eq \"s3a\" ]]",
          "112:     then",
          "113:         SPARK_HISTORYLOG_DIR=${SPARK_HISTORYLOG_DIR/\"s3a\"/\"s3\"}",
          "114:     fi",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "28cedc4048cc3b7ea8837ffe9d4071e3f75b0324",
      "candidate_info": {
        "commit_hash": "28cedc4048cc3b7ea8837ffe9d4071e3f75b0324",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/28cedc4048cc3b7ea8837ffe9d4071e3f75b0324",
        "files": [
          "pom.xml",
          "server-base/src/main/java/org/apache/kylin/rest/util/Log4jConfigListener.java",
          "server/pom.xml",
          "server/src/main/resources/kylinSecurity.xml",
          "tool/pom.xml"
        ],
        "message": "KYLIN-5214 upgrade spring-core and spring-security",
        "before_after_code_files": [
          "server-base/src/main/java/org/apache/kylin/rest/util/Log4jConfigListener.java||server-base/src/main/java/org/apache/kylin/rest/util/Log4jConfigListener.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "server-base/src/main/java/org/apache/kylin/rest/util/Log4jConfigListener.java||server-base/src/main/java/org/apache/kylin/rest/util/Log4jConfigListener.java": [
          "File: server-base/src/main/java/org/apache/kylin/rest/util/Log4jConfigListener.java -> server-base/src/main/java/org/apache/kylin/rest/util/Log4jConfigListener.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: package org.apache.kylin.rest.util;",
          "49: }",
          "",
          "[Removed Lines]",
          "21: import javax.servlet.ServletContextEvent;",
          "23: import org.apache.kylin.common.KylinConfig;",
          "25: public class Log4jConfigListener extends org.springframework.web.util.Log4jConfigListener {",
          "27:     private boolean isDebugTomcat;",
          "29:     public Log4jConfigListener() {",
          "30:         this.isDebugTomcat = KylinConfig.getInstanceFromEnv().isDevEnv();",
          "31:     }",
          "33:     @Override",
          "34:     public void contextInitialized(ServletContextEvent event) {",
          "35:         if (!isDebugTomcat) {",
          "36:             super.contextInitialized(event);",
          "37:         }",
          "38:         System.setProperty(\"needCheckCC\", \"true\");",
          "40:     }",
          "42:     @Override",
          "43:     public void contextDestroyed(ServletContextEvent event) {",
          "44:         if (!isDebugTomcat) {",
          "45:             super.contextDestroyed(event);",
          "46:         }",
          "47:     }",
          "",
          "[Added Lines]",
          "21: public class Log4jConfigListener {",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9e28c8732a0bf50290584dc047fe48b73890bcae",
      "candidate_info": {
        "commit_hash": "9e28c8732a0bf50290584dc047fe48b73890bcae",
        "repo": "apache/kylin",
        "commit_url": "https://github.com/apache/kylin/commit/9e28c8732a0bf50290584dc047fe48b73890bcae",
        "files": [
          "build/bin/download-spark.sh"
        ],
        "message": "KYLIN-5225 update download-spark.sh to spark 3.1.3",
        "before_after_code_files": [
          "build/bin/download-spark.sh||build/bin/download-spark.sh"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/kylin/pull/2018",
          "https://github.com/apache/kylin/pull/2125",
          "https://github.com/apache/kylin/pull/2033",
          "https://github.com/apache/kylin/pull/2112",
          "https://github.com/apache/kylin/pull/2115",
          "https://github.com/apache/kylin/pull/2135"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "build/bin/download-spark.sh||build/bin/download-spark.sh": [
          "File: build/bin/download-spark.sh -> build/bin/download-spark.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "36:     alias md5cmd=\"md5 -q\"",
          "37: fi",
          "42: if [ ! -f \"spark-${spark_version}-bin-hadoop2.7.tgz\" ]",
          "43: then",
          "",
          "[Removed Lines]",
          "39: spark_version=\"2.4.7\"",
          "40: spark_pkg_md5=\"76afb611aaac5721c9fa91fdc9defa99\"",
          "",
          "[Added Lines]",
          "39: spark_version=\"3.1.3\"",
          "40: spark_pkg_md5=\"b96761a4dfbc82fffd5bd698c743d190\"",
          "",
          "---------------"
        ]
      }
    }
  ]
}