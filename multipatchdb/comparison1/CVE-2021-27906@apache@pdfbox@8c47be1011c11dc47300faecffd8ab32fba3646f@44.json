{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "d25afcda8ab74726fb47c68d29a2e7616a168a5e",
      "candidate_info": {
        "commit_hash": "d25afcda8ab74726fb47c68d29a2e7616a168a5e",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/d25afcda8ab74726fb47c68d29a2e7616a168a5e",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/TTFDataStream.java"
        ],
        "message": "PDFBOX-4892: optimize, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890841 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/TTFDataStream.java||fontbox/src/main/java/org/apache/fontbox/ttf/TTFDataStream.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/ttf/TTFDataStream.java||fontbox/src/main/java/org/apache/fontbox/ttf/TTFDataStream.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/TTFDataStream.java -> fontbox/src/main/java/org/apache/fontbox/ttf/TTFDataStream.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "46:     public float read32Fixed() throws IOException",
          "47:     {",
          "50:         retval += (readUnsignedShort() / 65536.0);",
          "51:         return retval;",
          "52:     }",
          "",
          "[Removed Lines]",
          "48:         float retval = 0;",
          "49:         retval = readSignedShort();",
          "",
          "[Added Lines]",
          "48:         float retval = readSignedShort();",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d54ca428595603d9a73c473344165afce0da1322",
      "candidate_info": {
        "commit_hash": "d54ca428595603d9a73c473344165afce0da1322",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/d54ca428595603d9a73c473344165afce0da1322",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java"
        ],
        "message": "PDFBOX-4892: simplify code, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887602 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java||pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java -> pdfbox/src/main/java/org/apache/pdfbox/cos/COSDictionary.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1559:         objs.add(base);",
          "1560:         if (base instanceof COSDictionary)",
          "1561:         {",
          "1564:             for (Map.Entry<COSName, COSBase> x : ((COSDictionary) base).entrySet())",
          "1565:             {",
          "1566:                 sb.append(x.getKey());",
          "",
          "[Removed Lines]",
          "1562:             StringBuilder sb = new StringBuilder();",
          "1563:             sb.append(\"COSDictionary{\");",
          "",
          "[Added Lines]",
          "1562:             StringBuilder sb = new StringBuilder(\"COSDictionary{\");",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1580:         }",
          "1581:         if (base instanceof COSArray)",
          "1582:         {",
          "1585:             for (COSBase x : ((COSArray) base))",
          "1586:             {",
          "1587:                 sb.append(getDictionaryString(x, objs));",
          "",
          "[Removed Lines]",
          "1583:             StringBuilder sb = new StringBuilder();",
          "1584:             sb.append(\"COSArray{\");",
          "",
          "[Added Lines]",
          "1582:             StringBuilder sb = new StringBuilder(\"COSArray{\");",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "6aaedd13fe28c0a412dfa1b685072d1968244aff",
      "candidate_info": {
        "commit_hash": "6aaedd13fe28c0a412dfa1b685072d1968244aff",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/6aaedd13fe28c0a412dfa1b685072d1968244aff",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java"
        ],
        "message": "PDFBOX-4928: revert accidental change\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884241 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java||pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java -> pdfbox/src/main/java/org/apache/pdfbox/rendering/PDFRenderer.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "286:         PDRectangle cropbBox = page.getCropBox();",
          "287:         float widthPt = cropbBox.getWidth();",
          "288:         float heightPt = cropbBox.getHeight();",
          "292:         if ((long) widthPx * (long) heightPx > Integer.MAX_VALUE)",
          "293:         {",
          "",
          "[Removed Lines]",
          "289:         int widthPx = Math.round(widthPt * scale);",
          "290:         int heightPx = Math.round(heightPt * scale);",
          "",
          "[Added Lines]",
          "291:         int widthPx = (int) Math.max(Math.floor(widthPt * scale), 1);",
          "292:         int heightPx = (int) Math.max(Math.floor(heightPt * scale), 1);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f8f99d4104f8bddd72fb95dec9ec4a15da4a6f20",
      "candidate_info": {
        "commit_hash": "f8f99d4104f8bddd72fb95dec9ec4a15da4a6f20",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/f8f99d4104f8bddd72fb95dec9ec4a15da4a6f20",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/NameRecord.java",
          "fontbox/src/main/java/org/apache/fontbox/ttf/NamingTable.java",
          "fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java",
          "xmpbox/src/test/java/org/apache/xmpbox/schema/AbstractSchemaTester.java"
        ],
        "message": "PDFBOX-5040: fix typo in NameRecord as suggested by NekoCaffeine\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884308 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/ttf/NameRecord.java||fontbox/src/main/java/org/apache/fontbox/ttf/NameRecord.java",
          "fontbox/src/main/java/org/apache/fontbox/ttf/NamingTable.java||fontbox/src/main/java/org/apache/fontbox/ttf/NamingTable.java",
          "fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java||fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java",
          "xmpbox/src/test/java/org/apache/xmpbox/schema/AbstractSchemaTester.java||xmpbox/src/test/java/org/apache/xmpbox/schema/AbstractSchemaTester.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/ttf/NameRecord.java||fontbox/src/main/java/org/apache/fontbox/ttf/NameRecord.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/NameRecord.java -> fontbox/src/main/java/org/apache/fontbox/ttf/NameRecord.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:     public static final int ENCODING_UNICODE_2_0_FULL = 4;",
          "44:     public static final int ENCODING_WINDOWS_SYMBOL = 0;",
          "",
          "[Removed Lines]",
          "41:     public static final int LANGUGAE_UNICODE = 0;",
          "",
          "[Added Lines]",
          "41:     public static final int LANGUAGE_UNICODE = 0;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "46:     public static final int ENCODING_WINDOWS_UNICODE_UCS4 = 10;",
          "52:     public static final int ENCODING_MACINTOSH_ROMAN = 0;",
          "58:     public static final int NAME_COPYRIGHT = 0;",
          "",
          "[Removed Lines]",
          "49:     public static final int LANGUGAE_WINDOWS_EN_US = 0x0409;",
          "55:     public static final int LANGUGAE_MACINTOSH_ENGLISH = 0;",
          "",
          "[Added Lines]",
          "49:     public static final int LANGUAGE_WINDOWS_EN_US = 0x0409;",
          "55:     public static final int LANGUAGE_MACINTOSH_ENGLISH = 0;",
          "",
          "---------------"
        ],
        "fontbox/src/main/java/org/apache/fontbox/ttf/NamingTable.java||fontbox/src/main/java/org/apache/fontbox/ttf/NamingTable.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/NamingTable.java -> fontbox/src/main/java/org/apache/fontbox/ttf/NamingTable.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "151:         psName = getName(NameRecord.NAME_POSTSCRIPT_NAME,",
          "152:                          NameRecord.PLATFORM_MACINTOSH,",
          "153:                          NameRecord.ENCODING_MACINTOSH_ROMAN,",
          "155:         if (psName == null)",
          "156:         {",
          "157:             psName = getName(NameRecord.NAME_POSTSCRIPT_NAME,",
          "158:                              NameRecord.PLATFORM_WINDOWS,",
          "159:                              NameRecord.ENCODING_WINDOWS_UNICODE_BMP,",
          "161:         }",
          "162:         if (psName != null)",
          "163:         {",
          "",
          "[Removed Lines]",
          "154:                          NameRecord.LANGUGAE_MACINTOSH_ENGLISH);",
          "160:                              NameRecord.LANGUGAE_WINDOWS_EN_US);",
          "",
          "[Added Lines]",
          "154:                          NameRecord.LANGUAGE_MACINTOSH_ENGLISH);",
          "160:                              NameRecord.LANGUAGE_WINDOWS_EN_US);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "179:                     getName(nameId,",
          "180:                             NameRecord.PLATFORM_UNICODE,",
          "181:                             i,",
          "183:             if (nameUni != null)",
          "184:             {",
          "185:                 return nameUni;",
          "",
          "[Removed Lines]",
          "182:                             NameRecord.LANGUGAE_UNICODE);",
          "",
          "[Added Lines]",
          "182:                             NameRecord.LANGUAGE_UNICODE);",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "191:                 getName(nameId,",
          "192:                         NameRecord.PLATFORM_WINDOWS,",
          "193:                         NameRecord.ENCODING_WINDOWS_UNICODE_BMP,",
          "195:         if (nameWin != null)",
          "196:         {",
          "197:             return nameWin;",
          "",
          "[Removed Lines]",
          "194:                         NameRecord.LANGUGAE_WINDOWS_EN_US);",
          "",
          "[Added Lines]",
          "194:                         NameRecord.LANGUAGE_WINDOWS_EN_US);",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "202:                 getName(nameId,",
          "203:                         NameRecord.PLATFORM_MACINTOSH,",
          "204:                         NameRecord.ENCODING_MACINTOSH_ROMAN,",
          "206:         if (nameMac != null)",
          "207:         {",
          "208:             return nameMac;",
          "",
          "[Removed Lines]",
          "205:                         NameRecord.LANGUGAE_MACINTOSH_ENGLISH);",
          "",
          "[Added Lines]",
          "205:                         NameRecord.LANGUAGE_MACINTOSH_ENGLISH);",
          "",
          "---------------"
        ],
        "fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java||fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java -> fontbox/src/main/java/org/apache/fontbox/ttf/TTFSubsetter.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "272:     {",
          "273:         return nr.getPlatformId() == NameRecord.PLATFORM_WINDOWS",
          "274:                 && nr.getPlatformEncodingId() == NameRecord.ENCODING_WINDOWS_UNICODE_BMP",
          "276:                 && nr.getNameId() >= 0 && nr.getNameId() < 7;",
          "277:     }",
          "",
          "[Removed Lines]",
          "275:                 && nr.getLanguageId() == NameRecord.LANGUGAE_WINDOWS_EN_US",
          "",
          "[Added Lines]",
          "275:                 && nr.getLanguageId() == NameRecord.LANGUAGE_WINDOWS_EN_US",
          "",
          "---------------"
        ],
        "xmpbox/src/test/java/org/apache/xmpbox/schema/AbstractSchemaTester.java||xmpbox/src/test/java/org/apache/xmpbox/schema/AbstractSchemaTester.java": [
          "File: xmpbox/src/test/java/org/apache/xmpbox/schema/AbstractSchemaTester.java -> xmpbox/src/test/java/org/apache/xmpbox/schema/AbstractSchemaTester.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "254:             return;",
          "255:         }",
          "256:         XMPSchema schema = getSchema();",
          "258:         String setter = \"add\" + calculateFieldNameForMethod(fieldName);",
          "261:         Object value1 = getJavaValue(type);",
          "262:         Method set = getSchemaClass().getMethod(setter, getJavaType(type));",
          "263:         set.invoke(schema, value1);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "258:         System.out.println(fieldName);",
          "265:         System.out.println(type);",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "268:         Assert.assertTrue(ocp instanceof ArrayProperty);",
          "269:         ArrayProperty cp = (ArrayProperty) ocp;",
          "271:         Assert.assertEquals(1, cp.getContainer().getAllProperties().size());",
          "273:         Object value2 = getJavaValue(type);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "275:         System.out.println(cp.getContainer().getAllProperties());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "66774203728df883ecfba6dac4903470e24977f9",
      "candidate_info": {
        "commit_hash": "66774203728df883ecfba6dac4903470e24977f9",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/66774203728df883ecfba6dac4903470e24977f9",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java"
        ],
        "message": "PDFBOX-4847: fix typo\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881260 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/image/SampledImageReader.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "261:         try",
          "262:         {",
          "264:             if (bitsPerComponent > 8)",
          "265:             {",
          "267:             }",
          "269:                     new Point(0, 0));",
          "270:             readRasterFromAny(pdImage, raster);",
          "271:             return raster;",
          "",
          "[Removed Lines]",
          "263:             int dataBuffeType = DataBuffer.TYPE_BYTE;",
          "266:                 dataBuffeType = DataBuffer.TYPE_USHORT;",
          "268:             WritableRaster raster = Raster.createInterleavedRaster(dataBuffeType, width, height, numComponents,",
          "",
          "[Added Lines]",
          "263:             int dataBufferType = DataBuffer.TYPE_BYTE;",
          "266:                 dataBufferType = DataBuffer.TYPE_USHORT;",
          "268:             WritableRaster raster = Raster.createInterleavedRaster(dataBufferType, width, height, numComponents,",
          "",
          "---------------"
        ]
      }
    }
  ]
}