{
  "cve_id": "CVE-2022-0839",
  "cve_desc": "Improper Restriction of XML External Entity Reference in GitHub repository liquibase/liquibase prior to 4.8.0.",
  "repo": "liquibase/liquibase",
  "patch_hash": "33d9d925082097fb1a3d2fc8e44423d964cd9381",
  "patch_info": {
    "commit_hash": "33d9d925082097fb1a3d2fc8e44423d964cd9381",
    "repo": "liquibase/liquibase",
    "commit_url": "https://github.com/liquibase/liquibase/commit/33d9d925082097fb1a3d2fc8e44423d964cd9381",
    "files": [
      "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy"
    ],
    "message": "Added liquibase.secureParsing test",
    "before_after_code_files": [
      "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy||liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy"
    ]
  },
  "patch_diff": {
    "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy||liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy": [
      "File: liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy -> liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy",
      "--- Hunk 1 ---",
      "[Context before]",
      "24:     def INSECURE_XML = \"\"\"",
      "25: <!DOCTYPE databaseChangeLog [",
      "27:         ]>",
      "29: <databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"",
      "",
      "[Removed Lines]",
      "26:         <!ENTITY insecure SYSTEM \"https://localhost/insecure\">",
      "",
      "[Added Lines]",
      "26:         <!ENTITY insecure SYSTEM \"file://invalid.txt\">",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "84:         then:",
      "85:         def e = thrown(ChangeLogParseException)",
      "87:     }",
      "89:     def \"allows liquibase.secureParsing=false to disable secure parsing\"() {",
      "",
      "[Removed Lines]",
      "86:         e.message.contains(\"Failed to read external document 'insecure'\")",
      "",
      "[Added Lines]",
      "86:         e.message.contains(\"access is not allowed due to restriction set by the accessExternalDTD property\")",
      "",
      "---------------",
      "--- Hunk 3 ---",
      "[Context before]",
      "98:         then:",
      "99:         def e = thrown(ChangeLogParseException)",
      "101:     }",
      "103: }",
      "",
      "[Removed Lines]",
      "100:         e.message.contains(\"Connection refused\")",
      "",
      "[Added Lines]",
      "100:         e.message.contains(\"Error Reading Changelog File: invalid.txt\")",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "569d4806120f7243d28f499da297cbb0337b616d",
      "candidate_info": {
        "commit_hash": "569d4806120f7243d28f499da297cbb0337b616d",
        "repo": "liquibase/liquibase",
        "commit_url": "https://github.com/liquibase/liquibase/commit/569d4806120f7243d28f499da297cbb0337b616d",
        "files": [
          "liquibase-core/src/main/java/liquibase/GlobalConfiguration.java",
          "liquibase-core/src/main/java/liquibase/parser/core/xml/XMLChangeLogSAXParser.java"
        ],
        "message": "Allow disabling of FEATURE_SECURE_PROCESSING by configuration",
        "before_after_code_files": [
          "liquibase-core/src/main/java/liquibase/GlobalConfiguration.java||liquibase-core/src/main/java/liquibase/GlobalConfiguration.java",
          "liquibase-core/src/main/java/liquibase/parser/core/xml/XMLChangeLogSAXParser.java||liquibase-core/src/main/java/liquibase/parser/core/xml/XMLChangeLogSAXParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/liquibase/liquibase/pull/2384"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "liquibase-core/src/main/java/liquibase/GlobalConfiguration.java||liquibase-core/src/main/java/liquibase/GlobalConfiguration.java": [
          "File: liquibase-core/src/main/java/liquibase/GlobalConfiguration.java -> liquibase-core/src/main/java/liquibase/GlobalConfiguration.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "33:     public static final ConfigurationDefinition<Boolean> HEADLESS;",
          "34:     public static final ConfigurationDefinition<Boolean> STRICT;",
          "35:     public static final ConfigurationDefinition<Integer> DDL_LOCK_TIMEOUT;",
          "37:     static {",
          "38:         ConfigurationDefinition.Builder builder = new ConfigurationDefinition.Builder(\"liquibase\");",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "36:     public static final ConfigurationDefinition<Boolean> SECURE_PARSING;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "175:                 .addAliasKey(\"liquibase.ddl_lock_timeout\")",
          "176:                 .setDescription(\"The DDL_LOCK_TIMEOUT parameter indicates the number of seconds a DDL command should wait for the locks to become available before throwing the resource busy error message. This applies only to Oracle databases.\")",
          "177:                 .build();",
          "178:     }",
          "179: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "180:         SECURE_PARSING = builder.define(\"secureParsing\", Boolean.class)",
          "181:                 .setDescription(\"If true, remove functionality from file parsers which could be used insecurely. Examples include (but not limited to) disabling remote XML entity support.\")",
          "182:                 .setDefaultValue(true)",
          "183:                 .build();",
          "",
          "---------------"
        ],
        "liquibase-core/src/main/java/liquibase/parser/core/xml/XMLChangeLogSAXParser.java||liquibase-core/src/main/java/liquibase/parser/core/xml/XMLChangeLogSAXParser.java": [
          "File: liquibase-core/src/main/java/liquibase/parser/core/xml/XMLChangeLogSAXParser.java -> liquibase-core/src/main/java/liquibase/parser/core/xml/XMLChangeLogSAXParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: package liquibase.parser.core.xml;",
          "3: import liquibase.Scope;",
          "4: import liquibase.changelog.ChangeLogParameters;",
          "5: import liquibase.exception.ChangeLogParseException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "3: import liquibase.GlobalConfiguration;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "26:         saxParserFactory = SAXParserFactory.newInstance();",
          "27:         saxParserFactory.setValidating(true);",
          "28:         saxParserFactory.setNamespaceAware(true);",
          "33:         }",
          "34:     }",
          "",
          "[Removed Lines]",
          "29:         try {",
          "30:             saxParserFactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);",
          "31:         } catch (Throwable e) {",
          "32:             Scope.getCurrentScope().getLog(getClass()).fine(\"Cannot enable FEATURE_SECURE_PROCESSING: \"+e.getMessage(), e);",
          "",
          "[Added Lines]",
          "30:         if (GlobalConfiguration.SECURE_PARSING.getCurrentValue()) {",
          "31:             try {",
          "32:                 saxParserFactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);",
          "33:             } catch (Throwable e) {",
          "34:                 Scope.getCurrentScope().getLog(getClass()).fine(\"Cannot enable FEATURE_SECURE_PROCESSING: \" + e.getMessage(), e);",
          "35:             }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "55:     protected ParsedNode parseToNode(String physicalChangeLogLocation, ChangeLogParameters changeLogParameters, ResourceAccessor resourceAccessor) throws ChangeLogParseException {",
          "56:         try (InputStream inputStream = resourceAccessor.openStream(null, physicalChangeLogLocation)) {",
          "57:             SAXParser parser = saxParserFactory.newSAXParser();",
          "62:             }",
          "63:             trySetSchemaLanguageProperty(parser);",
          "",
          "[Removed Lines]",
          "58:             try {",
          "59:                 parser.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"http,https\"); //need to allow external schemas on http/https to support the liquibase.org xsd files",
          "60:             } catch (SAXException e) {",
          "61:                 Scope.getCurrentScope().getLog(getClass()).fine(\"Cannot enable ACCESS_EXTERNAL_SCHEMA: \"+e.getMessage(), e);",
          "",
          "[Added Lines]",
          "61:             if (GlobalConfiguration.SECURE_PARSING.getCurrentValue()) {",
          "62:                 try {",
          "63:                     parser.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"http,https\"); //need to allow external schemas on http/https to support the liquibase.org xsd files",
          "64:                 } catch (SAXException e) {",
          "65:                     Scope.getCurrentScope().getLog(getClass()).fine(\"Cannot enable ACCESS_EXTERNAL_SCHEMA: \" + e.getMessage(), e);",
          "66:                 }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b90ca28c9b61ec450d49eff89bb1f8c0cdf8fbca",
      "candidate_info": {
        "commit_hash": "b90ca28c9b61ec450d49eff89bb1f8c0cdf8fbca",
        "repo": "liquibase/liquibase",
        "commit_url": "https://github.com/liquibase/liquibase/commit/b90ca28c9b61ec450d49eff89bb1f8c0cdf8fbca",
        "files": [
          "liquibase-core/src/main/java/liquibase/parser/core/xml/XMLChangeLogSAXParser.java"
        ],
        "message": "Enable FEATURE_SECURE_PROCESSING",
        "before_after_code_files": [
          "liquibase-core/src/main/java/liquibase/parser/core/xml/XMLChangeLogSAXParser.java||liquibase-core/src/main/java/liquibase/parser/core/xml/XMLChangeLogSAXParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/liquibase/liquibase/pull/2384"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "liquibase-core/src/main/java/liquibase/parser/core/xml/XMLChangeLogSAXParser.java||liquibase-core/src/main/java/liquibase/parser/core/xml/XMLChangeLogSAXParser.java": [
          "File: liquibase-core/src/main/java/liquibase/parser/core/xml/XMLChangeLogSAXParser.java -> liquibase-core/src/main/java/liquibase/parser/core/xml/XMLChangeLogSAXParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "9: import liquibase.util.FileUtil;",
          "10: import org.xml.sax.*;",
          "12: import javax.xml.parsers.SAXParser;",
          "13: import javax.xml.parsers.SAXParserFactory;",
          "14: import java.io.IOException;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "12: import javax.xml.XMLConstants;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "25:         saxParserFactory = SAXParserFactory.newInstance();",
          "26:         saxParserFactory.setValidating(true);",
          "27:         saxParserFactory.setNamespaceAware(true);",
          "28:     }",
          "30:     @Override",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "29:         try {",
          "30:             saxParserFactory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);",
          "31:         } catch (Throwable e) {",
          "32:             Scope.getCurrentScope().getLog(getClass()).fine(\"Cannot enable FEATURE_SECURE_PROCESSING: \"+e.getMessage(), e);",
          "33:         }",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "49:     protected ParsedNode parseToNode(String physicalChangeLogLocation, ChangeLogParameters changeLogParameters, ResourceAccessor resourceAccessor) throws ChangeLogParseException {",
          "50:         try (InputStream inputStream = resourceAccessor.openStream(null, physicalChangeLogLocation)) {",
          "51:             SAXParser parser = saxParserFactory.newSAXParser();",
          "52:             trySetSchemaLanguageProperty(parser);",
          "54:             XMLReader xmlReader = parser.getXMLReader();",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "58:             try {",
          "59:                 parser.setProperty(XMLConstants.ACCESS_EXTERNAL_SCHEMA, \"http,https\"); //need to allow external schemas on http/https to support the liquibase.org xsd files",
          "60:             } catch (SAXException e) {",
          "61:                 Scope.getCurrentScope().getLog(getClass()).fine(\"Cannot enable ACCESS_EXTERNAL_SCHEMA: \"+e.getMessage(), e);",
          "62:             }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "bbbd3a8250731b52d27b5a8594c3aa3bbf0d75dc",
      "candidate_info": {
        "commit_hash": "bbbd3a8250731b52d27b5a8594c3aa3bbf0d75dc",
        "repo": "liquibase/liquibase",
        "commit_url": "https://github.com/liquibase/liquibase/commit/bbbd3a8250731b52d27b5a8594c3aa3bbf0d75dc",
        "files": [
          ".github/util/re-version.sh",
          ".github/workflows/build.yml",
          ".github/workflows/create-release.yml",
          ".github/workflows/release-published.yml",
          "liquibase-cli/src/main/java/liquibase/integration/commandline/LiquibaseCommandLine.java",
          "liquibase-cli/src/main/java/liquibase/integration/commandline/LiquibaseLauncher.java",
          "liquibase-core/src/main/java/liquibase/parser/core/xml/LiquibaseEntityResolver.java",
          "liquibase-core/src/main/resources/liquibase/examples/start-h2.bat",
          "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy",
          "liquibase-dist/pom.xml",
          "liquibase-dist/src/main/archive/README.txt",
          "liquibase-dist/src/main/archive/liquibase",
          "liquibase-dist/src/main/archive/liquibase.bat",
          "liquibase-dist/src/main/assembly/assembly-bin-common.xml",
          "liquibase-dist/src/main/assembly/assembly-bin-pro.xml",
          "liquibase-dist/src/main/assembly/assembly-bin.xml",
          "liquibase-integration-tests/setup/build.xml",
          "liquibase-integration-tests/setup/oracle/build.xml",
          "liquibase-integration-tests/src/test/resources/commandline/README.txt",
          "liquibase-integration-tests/src/test/resources/commandline/liquibase.h2.properties",
          "liquibase-integration-tests/src/test/resources/commandline/liquibase.mariadb.properties",
          "liquibase-integration-tests/src/test/resources/commandline/liquibase.mssql.properties",
          "liquibase-integration-tests/src/test/resources/commandline/liquibase.mysql.properties",
          "liquibase-integration-tests/src/test/resources/commandline/liquibase.oracle.properties",
          "liquibase-integration-tests/src/test/resources/commandline/liquibase.postgres.properties",
          "liquibase-maven-plugin/pom.xml",
          "liquibase-maven-plugin/src/main/maven/liquibase-deployment-pom.xslt",
          "liquibase-maven-plugin/src/main/maven/release.pom.xml"
        ],
        "message": "Split liquibase-core and liquibase-commercial jar files (#3050)\n\n- Include liquibase-commercial.jar as a separate artifact in the CLI internal/lib dir\n- Move liquibase.jar in the CLI to internal/lib\n- Updated release logic for new liquibase-core/liquibase-commerical jars\n- Updated \"XSD not found\" error message to include missing extensions\n\nCo-authored-by: ap-liquibase <apierre@liquibase.com>",
        "before_after_code_files": [
          ".github/util/re-version.sh||.github/util/re-version.sh",
          "liquibase-cli/src/main/java/liquibase/integration/commandline/LiquibaseCommandLine.java||liquibase-cli/src/main/java/liquibase/integration/commandline/LiquibaseCommandLine.java",
          "liquibase-cli/src/main/java/liquibase/integration/commandline/LiquibaseLauncher.java||liquibase-cli/src/main/java/liquibase/integration/commandline/LiquibaseLauncher.java",
          "liquibase-core/src/main/java/liquibase/parser/core/xml/LiquibaseEntityResolver.java||liquibase-core/src/main/java/liquibase/parser/core/xml/LiquibaseEntityResolver.java",
          "liquibase-core/src/main/resources/liquibase/examples/start-h2.bat||liquibase-core/src/main/resources/liquibase/examples/start-h2.bat",
          "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy||liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy",
          "liquibase-dist/src/main/archive/liquibase.bat||liquibase-dist/src/main/archive/liquibase.bat",
          "liquibase-integration-tests/src/test/resources/commandline/liquibase.h2.properties||liquibase-integration-tests/src/test/resources/commandline/liquibase.h2.properties",
          "liquibase-integration-tests/src/test/resources/commandline/liquibase.mariadb.properties||liquibase-integration-tests/src/test/resources/commandline/liquibase.mariadb.properties",
          "liquibase-integration-tests/src/test/resources/commandline/liquibase.mssql.properties||liquibase-integration-tests/src/test/resources/commandline/liquibase.mssql.properties",
          "liquibase-integration-tests/src/test/resources/commandline/liquibase.mysql.properties||liquibase-integration-tests/src/test/resources/commandline/liquibase.mysql.properties",
          "liquibase-integration-tests/src/test/resources/commandline/liquibase.oracle.properties||liquibase-integration-tests/src/test/resources/commandline/liquibase.oracle.properties",
          "liquibase-integration-tests/src/test/resources/commandline/liquibase.postgres.properties||liquibase-integration-tests/src/test/resources/commandline/liquibase.postgres.properties",
          "liquibase-maven-plugin/src/main/maven/liquibase-deployment-pom.xslt||liquibase-maven-plugin/src/main/maven/liquibase-deployment-pom.xslt"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy||liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy"
          ],
          "candidate": [
            "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy||liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy"
          ]
        }
      },
      "candidate_diff": {
        ".github/util/re-version.sh||.github/util/re-version.sh": [
          "File: .github/util/re-version.sh -> .github/util/re-version.sh",
          "--- Hunk 1 ---",
          "[Context before]",
          "43: (cd $scriptDir && javac ManifestReversion.java)",
          "45: #### Update  jars",
          "48: for jar in \"${jars[@]}\"",
          "49: do",
          "",
          "[Removed Lines]",
          "46: declare -a jars=(\"liquibase-0-SNAPSHOT.jar\" \"liquibase-0-SNAPSHOT-sources.jar\" \"liquibase-cdi-0-SNAPSHOT.jar\" \"liquibase-cdi-0-SNAPSHOT-sources.jar\" \"liquibase-maven-plugin-0-SNAPSHOT.jar\" \"liquibase-maven-plugin-0-SNAPSHOT-sources.jar\")",
          "",
          "[Added Lines]",
          "46: declare -a jars=(\"liquibase-core-0-SNAPSHOT.jar\" \"liquibase-core-0-SNAPSHOT-sources.jar\" \"liquibase-commercial-0-SNAPSHOT.jar\" \"liquibase-cdi-0-SNAPSHOT.jar\" \"liquibase-cdi-0-SNAPSHOT-sources.jar\" \"liquibase-maven-plugin-0-SNAPSHOT.jar\" \"liquibase-maven-plugin-0-SNAPSHOT-sources.jar\")",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "51:   unzip -q $workdir/$jar META-INF/* -d $workdir",
          "53:   java -cp $scriptDir ManifestReversion $workdir/META-INF/MANIFEST.MF $version",
          "57:   (cd $workdir && jar -uMf $jar META-INF)",
          "58:   rm -rf $workdir/META-INF",
          "60:   ## Fix up liquibase.build.properties",
          "62:     unzip -q $workdir/$jar liquibase.build.properties -d $workdir",
          "63:     sed -i -e \"s/build.version=.*/build.version=$version/\" $workdir/liquibase.build.properties",
          "64:     (cd $workdir && jar -uf $jar liquibase.build.properties)",
          "",
          "[Removed Lines]",
          "54:   find $workdir/META-INF -name pom.xml -exec sed -i -e \"s/<version>0-SNAPSHOT<\\/version>/<version>$version<\\/version>/\" {} \\;",
          "55:   find $workdir/META-INF -name pom.properties -exec sed -i -e \"s/0-SNAPSHOT/$version/\" {} \\;",
          "56:   find $workdir/META-INF -name plugin*.xml -exec sed -i -e \"s/<version>0-SNAPSHOT<\\/version>/<version>$version<\\/version>/\" {} \\;",
          "61:   if [ $jar == \"liquibase-0-SNAPSHOT.jar\" ]; then",
          "",
          "[Added Lines]",
          "54:   find $workdir/META-INF -name pom.xml -exec sed -i -e \"s/<version>0-SNAPSHOT<\\/version>/<version>$version<\\/version>/g\" {} \\;",
          "55:   find $workdir/META-INF -name pom.properties -exec sed -i -e \"s/0-SNAPSHOT/$version/g\" {} \\;",
          "56:   find $workdir/META-INF -name plugin*.xml -exec sed -i -e \"s/<version>0-SNAPSHOT<\\/version>/<version>$version<\\/version>/g\" {} \\;",
          "61:   if [[ $jar == \"liquibase-core-0-SNAPSHOT.jar\" || $jar == \"liquibase-commercial-0-SNAPSHOT.jar\" ]]; then",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "79: done",
          "81: #### Update  javadoc jars",
          "84: for jar in \"${javadocJars[@]}\"",
          "85: do",
          "86:   mkdir $workdir/rebuild",
          "87:   unzip -q $workdir/$jar -d $workdir/rebuild",
          "92:   (cd $workdir/rebuild && jar -uf ../$jar *)",
          "93:   rm -rf $workdir/rebuild",
          "",
          "[Removed Lines]",
          "82: declare -a javadocJars=(\"liquibase-0-SNAPSHOT-javadoc.jar\" \"liquibase-cdi-0-SNAPSHOT-javadoc.jar\" \"liquibase-maven-plugin-0-SNAPSHOT-javadoc.jar\")",
          "89:   find $workdir/rebuild -name \"*.html\" -exec sed -i -e \"s/0-SNAPSHOT/$version/\" {} \\;",
          "90:   find $workdir/rebuild -name \"*.xml\" -exec sed -i -e \"s/<version>0-SNAPSHOT<\\/version>/<version>$version<\\/version>/\" {} \\;",
          "",
          "[Added Lines]",
          "82: declare -a javadocJars=(\"liquibase-core-0-SNAPSHOT-javadoc.jar\" \"liquibase-cdi-0-SNAPSHOT-javadoc.jar\" \"liquibase-maven-plugin-0-SNAPSHOT-javadoc.jar\")",
          "89:   find $workdir/rebuild -name \"*.html\" -exec sed -i -e \"s/0-SNAPSHOT/$version/g\" {} \\;",
          "90:   find $workdir/rebuild -name \"*.xml\" -exec sed -i -e \"s/<version>0-SNAPSHOT<\\/version>/<version>$version<\\/version>/g\" {} \\;",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "134: ##### update zip/tar files",
          "137: ## Extract tar.gz and rebuild it back into the tar.gz and zip",
          "138: mkdir $workdir/tgz-repackage",
          "139: (cd $workdir/tgz-repackage && tar -xzf $workdir/liquibase-0-SNAPSHOT.tar.gz)",
          "141: find $workdir/tgz-repackage -name \"*.txt\" -exec sed -i -e \"s/0-SNAPSHOT/$version/\" {} \\;",
          "142: (cd $workdir/tgz-repackage && tar -czf $outdir/liquibase-$version.tar.gz *)",
          "143: (cd $workdir/tgz-repackage && zip -qr $outdir/liquibase-$version.zip *)",
          "",
          "[Removed Lines]",
          "135: cp $outdir/liquibase-$version.jar $workdir/liquibase.jar ##save versioned jar as unversioned to include in zip/tar",
          "140: cp $workdir/liquibase.jar $workdir/tgz-repackage/liquibase.jar",
          "",
          "[Added Lines]",
          "135: mkdir -p $workdir/internal/lib",
          "136: cp $outdir/liquibase-core-$version.jar $workdir/internal/lib/liquibase-core.jar ##save versioned jar as unversioned to include in zip/tar",
          "137: cp $outdir/liquibase-commercial-$version.jar $workdir/internal/lib/liquibase-commercial.jar ##save versioned jar as unversioned to include in zip/tar",
          "142: cp $workdir/internal/lib/liquibase-core.jar $workdir/tgz-repackage/internal/lib/liquibase-core.jar",
          "143: cp $workdir/internal/lib/liquibase-commercial.jar $workdir/tgz-repackage/internal/lib/liquibase-commercial.jar",
          "",
          "---------------"
        ],
        "liquibase-cli/src/main/java/liquibase/integration/commandline/LiquibaseCommandLine.java||liquibase-cli/src/main/java/liquibase/integration/commandline/LiquibaseCommandLine.java": [
          "File: liquibase-cli/src/main/java/liquibase/integration/commandline/LiquibaseCommandLine.java -> liquibase-cli/src/main/java/liquibase/integration/commandline/LiquibaseCommandLine.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "1142:                         continue;",
          "1143:                     }",
          "1144:                     final File file = new File(url.toURI());",
          "1146:                         continue;",
          "1147:                     }",
          "1148:                     if (file.exists() && file.getName().toLowerCase().endsWith(\".jar\")) {",
          "",
          "[Removed Lines]",
          "1145:                     if (file.getName().equals(\"liquibase.jar\")) {",
          "",
          "[Added Lines]",
          "1145:                     if (file.getName().equals(\"liquibase-core.jar\")) {",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "1195:                 libraryInfo.file = pathEntryFile;",
          "1197:                 final Manifest manifest = jarFile.getManifest();",
          "1202:                 if (libraryInfo.name == null) {",
          "1203:                     libraryInfo.name = pathEntryFile.getName().replace(\".jar\", \"\");",
          "",
          "[Removed Lines]",
          "1198:                 libraryInfo.name = getValue(manifest, \"Bundle-Name\", \"Implementation-Title\", \"Specification-Title\");",
          "1199:                 libraryInfo.version = getValue(manifest, \"Bundle-Version\", \"Implementation-Version\", \"Specification-Version\");",
          "1200:                 libraryInfo.vendor = getValue(manifest, \"Bundle-Vendor\", \"Implementation-Vendor\", \"Specification-Vendor\");",
          "",
          "[Added Lines]",
          "1198:                 if (manifest != null) {",
          "1199:                     libraryInfo.name = getValue(manifest, \"Bundle-Name\", \"Implementation-Title\", \"Specification-Title\");",
          "1200:                     libraryInfo.version = getValue(manifest, \"Bundle-Version\", \"Implementation-Version\", \"Specification-Version\");",
          "1201:                     libraryInfo.vendor = getValue(manifest, \"Bundle-Vendor\", \"Implementation-Vendor\", \"Specification-Vendor\");",
          "1202:                 }",
          "",
          "---------------"
        ],
        "liquibase-cli/src/main/java/liquibase/integration/commandline/LiquibaseLauncher.java||liquibase-cli/src/main/java/liquibase/integration/commandline/LiquibaseLauncher.java": [
          "File: liquibase-cli/src/main/java/liquibase/integration/commandline/LiquibaseLauncher.java -> liquibase-cli/src/main/java/liquibase/integration/commandline/LiquibaseLauncher.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "38:         File liquibaseHome = new File(liquibaseHomeEnv);",
          "40:         List<URL> urls = new ArrayList<>();",
          "43:         File[] libDirs = new File[]{",
          "44:                 new File(\"./liquibase_libs\"),",
          "",
          "[Removed Lines]",
          "41:         urls.add(new File(liquibaseHome, \"liquibase.jar\").toURI().toURL());",
          "",
          "[Added Lines]",
          "41:         urls.add(new File(liquibaseHome, \"internal/lib/liquibase-core.jar\").toURI().toURL()); //make sure liquibase-core.jar is first in the list",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "60:             }",
          "62:             for (File lib : files) {",
          "64:                     try {",
          "65:                         urls.add(lib.toURI().toURL());",
          "66:                         debug(\"Added \" + lib.getAbsolutePath() + \" to classpath\");",
          "",
          "[Removed Lines]",
          "63:                 if (lib.getName().toLowerCase(Locale.US).endsWith(\".jar\")) {",
          "",
          "[Added Lines]",
          "63:                 if (lib.getName().toLowerCase(Locale.US).endsWith(\".jar\") && !lib.getName().toLowerCase(Locale.US).equals(\"liquibase-core.jar\")) {",
          "",
          "---------------"
        ],
        "liquibase-core/src/main/java/liquibase/parser/core/xml/LiquibaseEntityResolver.java||liquibase-core/src/main/java/liquibase/parser/core/xml/LiquibaseEntityResolver.java": [
          "File: liquibase-core/src/main/java/liquibase/parser/core/xml/LiquibaseEntityResolver.java -> liquibase-core/src/main/java/liquibase/parser/core/xml/LiquibaseEntityResolver.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "57:             if (streams.isEmpty()) {",
          "58:                 if (GlobalConfiguration.SECURE_PARSING.getCurrentValue()) {",
          "60:                             GlobalConfiguration.SECURE_PARSING.getKey() + \" is set to 'true' which does not allow remote lookups. \" +",
          "62:                     throw new XSDLookUpException(errorMessage);",
          "63:                 } else {",
          "64:                     log.fine(\"Unable to resolve XML entity locally. Will load from network.\");",
          "",
          "[Removed Lines]",
          "59:                     String errorMessage = \"Unable to resolve xml entity \" + systemId + \" locally: \" +",
          "61:                             \"Set it to 'false' to allow remote lookups of xsd files.\";",
          "",
          "[Added Lines]",
          "59:                     String errorMessage = \"Unable to resolve xml entity \" + systemId + \". \" +",
          "61:                             \"Check for spelling or capitalization errors and missing extensions such as liquibase-commercial in your XSD definition. Or, set it to 'false' to allow remote lookups of xsd files.\";",
          "",
          "---------------"
        ],
        "liquibase-core/src/main/resources/liquibase/examples/start-h2.bat||liquibase-core/src/main/resources/liquibase/examples/start-h2.bat": [
          "File: liquibase-core/src/main/resources/liquibase/examples/start-h2.bat -> liquibase-core/src/main/resources/liquibase/examples/start-h2.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "6: rem %~dp0 is expanded pathname of the current script under NT",
          "7: rem %~p0 is the directory of the current script",
          "11: if \"%LIQUIBASE_HOME%\"==\"\" (",
          "12:     FOR /F \"tokens=* USEBACKQ\" %%g IN (`where liquibase.bat`) do (SET \"LIQUIBASE_HOME=%%~dpg\")",
          "",
          "[Removed Lines]",
          "9: if exist %~p0\\..\\liquibase.jar SET LIQUIBASE_HOME=%~p0..",
          "",
          "[Added Lines]",
          "9: if exist %~p0\\..\\liquibase.bat SET LIQUIBASE_HOME=%~p0..",
          "",
          "---------------"
        ],
        "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy||liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy": [
          "File: liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy -> liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy",
          "--- Hunk 1 ---",
          "[Context before]",
          "81:         then:",
          "82:         def e = thrown(ChangeLogParseException)",
          "84:     }",
          "86:     def \"allows liquibase.secureParsing=false to disable secure parsing\"() {",
          "",
          "[Removed Lines]",
          "83:         e.message.contains(\"Unable to resolve xml entity file:///invalid.txt locally: liquibase.secureParsing is set to 'true' which does not allow remote lookups. Set it to 'false' to allow remote lookups of xsd files\")",
          "",
          "[Added Lines]",
          "83:         e.message.contains(\"Unable to resolve xml entity file:///invalid.txt. liquibase.secureParsing is set to 'true'\")",
          "",
          "---------------"
        ],
        "liquibase-dist/src/main/archive/liquibase.bat||liquibase-dist/src/main/archive/liquibase.bat": [
          "File: liquibase-dist/src/main/archive/liquibase.bat -> liquibase-dist/src/main/archive/liquibase.bat",
          "--- Hunk 1 ---",
          "[Context before]",
          "30: set JAVA_PATH=java",
          "31: if NOT \"%JAVA_HOME%\" == \"\" set JAVA_PATH=%JAVA_HOME%\\bin\\java",
          "",
          "[Removed Lines]",
          "33: \"%JAVA_PATH%\" %JAVA_OPTS% -jar \"%LIQUIBASE_HOME%\\liquibase.jar\" %*",
          "",
          "[Added Lines]",
          "33: \"%JAVA_PATH%\" %JAVA_OPTS% -jar \"%LIQUIBASE_HOME%\\internal\\lib\\liquibase-core.jar\" %*",
          "",
          "---------------"
        ],
        "liquibase-integration-tests/src/test/resources/commandline/liquibase.h2.properties||liquibase-integration-tests/src/test/resources/commandline/liquibase.h2.properties": [
          "File: liquibase-integration-tests/src/test/resources/commandline/liquibase.h2.properties -> liquibase-integration-tests/src/test/resources/commandline/liquibase.h2.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "liquibase-integration-tests/src/test/resources/commandline/liquibase.mariadb.properties||liquibase-integration-tests/src/test/resources/commandline/liquibase.mariadb.properties": [
          "File: liquibase-integration-tests/src/test/resources/commandline/liquibase.mariadb.properties -> liquibase-integration-tests/src/test/resources/commandline/liquibase.mariadb.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "liquibase-integration-tests/src/test/resources/commandline/liquibase.mssql.properties||liquibase-integration-tests/src/test/resources/commandline/liquibase.mssql.properties": [
          "File: liquibase-integration-tests/src/test/resources/commandline/liquibase.mssql.properties -> liquibase-integration-tests/src/test/resources/commandline/liquibase.mssql.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "liquibase-integration-tests/src/test/resources/commandline/liquibase.mysql.properties||liquibase-integration-tests/src/test/resources/commandline/liquibase.mysql.properties": [
          "File: liquibase-integration-tests/src/test/resources/commandline/liquibase.mysql.properties -> liquibase-integration-tests/src/test/resources/commandline/liquibase.mysql.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "liquibase-integration-tests/src/test/resources/commandline/liquibase.oracle.properties||liquibase-integration-tests/src/test/resources/commandline/liquibase.oracle.properties": [
          "File: liquibase-integration-tests/src/test/resources/commandline/liquibase.oracle.properties -> liquibase-integration-tests/src/test/resources/commandline/liquibase.oracle.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "liquibase-integration-tests/src/test/resources/commandline/liquibase.postgres.properties||liquibase-integration-tests/src/test/resources/commandline/liquibase.postgres.properties": [
          "File: liquibase-integration-tests/src/test/resources/commandline/liquibase.postgres.properties -> liquibase-integration-tests/src/test/resources/commandline/liquibase.postgres.properties",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ],
        "liquibase-maven-plugin/src/main/maven/liquibase-deployment-pom.xslt||liquibase-maven-plugin/src/main/maven/liquibase-deployment-pom.xslt": [
          "File: liquibase-maven-plugin/src/main/maven/liquibase-deployment-pom.xslt -> liquibase-maven-plugin/src/main/maven/liquibase-deployment-pom.xslt",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "8d90124793d0053520365b7686688a1af7cc5102",
      "candidate_info": {
        "commit_hash": "8d90124793d0053520365b7686688a1af7cc5102",
        "repo": "liquibase/liquibase",
        "commit_url": "https://github.com/liquibase/liquibase/commit/8d90124793d0053520365b7686688a1af7cc5102",
        "files": [
          "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy",
          "liquibase-core/src/test/java/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.java"
        ],
        "message": "Added liquibase.secureParsing test",
        "before_after_code_files": [
          "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy||liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy",
          "liquibase-core/src/test/java/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.java||liquibase-core/src/test/java/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy||liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy"
          ],
          "candidate": [
            "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy||liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy"
          ]
        }
      },
      "candidate_diff": {
        "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy||liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy": [
          "File: liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy -> liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: package liquibase.parser.core.xml",
          "3: import liquibase.Contexts",
          "4: import liquibase.GlobalConfiguration",
          "5: import liquibase.LabelExpression",
          "6: import liquibase.RuntimeEnvironment",
          "7: import liquibase.Scope",
          "8: import liquibase.changelog.ChangeLogIterator",
          "9: import liquibase.changelog.ChangeLogParameters",
          "10: import liquibase.changelog.ChangeSet",
          "11: import liquibase.changelog.DatabaseChangeLog",
          "12: import liquibase.changelog.filter.ChangeSetFilterResult",
          "13: import liquibase.changelog.visitor.ChangeSetVisitor",
          "14: import liquibase.database.Database",
          "15: import liquibase.database.core.MockDatabase",
          "16: import liquibase.exception.ChangeLogParseException",
          "17: import liquibase.exception.LiquibaseException",
          "18: import liquibase.sdk.resource.MockResourceAccessor",
          "19: import liquibase.test.JUnitResourceAccessor",
          "20: import spock.lang.Specification",
          "22: class XMLChangeLogSAXParserTest extends Specification {",
          "24:     def INSECURE_XML = \"\"\"",
          "25: <!DOCTYPE databaseChangeLog [",
          "26:         <!ENTITY insecure SYSTEM \"https://localhost/insecure\">",
          "27:         ]>",
          "29: <databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"",
          "30:                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"",
          "31:                    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog",
          "32:                       http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.6.xsd\">",
          "34:     <changeSet id=\"1\" author=\"example\">",
          "35:         <output>&insecure;</output>",
          "36:     </changeSet>",
          "38: </databaseChangeLog>",
          "39: \"\"\"",
          "41:     def testIgnoreDuplicateChangeSets() throws ChangeLogParseException, Exception {",
          "42:         when:",
          "43:         def xmlParser = new XMLChangeLogSAXParser()",
          "44:         def changeLog = xmlParser.parse(\"liquibase/parser/core/xml/ignoreDuplicatedChangeLogs/master.changelog.xml\",",
          "45:                 new ChangeLogParameters(), new JUnitResourceAccessor())",
          "47:         final List<ChangeSet> changeSets = new ArrayList<ChangeSet>()",
          "49:         new ChangeLogIterator(changeLog).run(new ChangeSetVisitor() {",
          "50:             @Override",
          "51:             ChangeSetVisitor.Direction getDirection() {",
          "52:                 return ChangeSetVisitor.Direction.FORWARD",
          "53:             }",
          "55:             @Override",
          "56:             void visit(ChangeSet changeSet, DatabaseChangeLog databaseChangeLog, Database database, Set<ChangeSetFilterResult> filterResults) throws LiquibaseException {",
          "57:                 changeSets.add(changeSet)",
          "58:             }",
          "59:         }, new RuntimeEnvironment(new MockDatabase(), new Contexts(), new LabelExpression()))",
          "62:         then:",
          "63:         changeSets.size() == 8",
          "64:         changeSets.get(0).toString() == \"liquibase/parser/core/xml/ignoreDuplicatedChangeLogs/included.changelog4.xml::1::testuser\"",
          "65:         changeSets.get(1).toString() == \"liquibase/parser/core/xml/ignoreDuplicatedChangeLogs/included.changelog4.xml::1::testuser\"",
          "66:         changeSets.get(1).getContexts().getContexts().size() == 1",
          "67:         changeSets.get(2).toString() == \"liquibase/parser/core/xml/ignoreDuplicatedChangeLogs/included.changelog4.xml::1::testuser\"",
          "68:         changeSets.get(2).getLabels().getLabels().size() == 1",
          "69:         changeSets.get(3).toString() == \"liquibase/parser/core/xml/ignoreDuplicatedChangeLogs/included.changelog4.xml::1::testuser\"",
          "70:         changeSets.get(3).getLabels().getLabels().size() == 2",
          "71:         changeSets.get(4).toString() == \"liquibase/parser/core/xml/ignoreDuplicatedChangeLogs/included.changelog4.xml::1::testuser\"",
          "72:         changeSets.get(4).getDbmsSet().size() == 1",
          "73:         changeSets.get(5).toString() == \"liquibase/parser/core/xml/ignoreDuplicatedChangeLogs/included.changelog1.xml::1::testuser\"",
          "74:         changeSets.get(6).toString() == \"liquibase/parser/core/xml/ignoreDuplicatedChangeLogs/included.changelog3.xml::1::testuser\"",
          "75:         changeSets.get(7).toString() == \"liquibase/parser/core/xml/ignoreDuplicatedChangeLogs/included.changelog2.xml::1::testuser\"",
          "76:     }",
          "78:     def \"uses liquibase.secureParsing by default\"() {",
          "79:         when:",
          "80:         def resourceAccessor = new MockResourceAccessor([\"com/example/insecure.xml\": INSECURE_XML])",
          "82:         new XMLChangeLogSAXParser().parse(\"com/example/insecure.xml\", new ChangeLogParameters(), resourceAccessor)",
          "84:         then:",
          "85:         def e = thrown(ChangeLogParseException)",
          "86:         e.message.contains(\"Failed to read external document 'insecure'\")",
          "87:     }",
          "89:     def \"allows liquibase.secureParsing=false to disable secure parsing\"() {",
          "90:         when:",
          "91:         def resourceAccessor = new MockResourceAccessor([\"com/example/insecure.xml\": INSECURE_XML])",
          "93:         Scope.child(GlobalConfiguration.SECURE_PARSING.key, \"false\", { ->",
          "94:             new XMLChangeLogSAXParser().parse(\"com/example/insecure.xml\", new ChangeLogParameters(), resourceAccessor)",
          "95:         })",
          "98:         then:",
          "99:         def e = thrown(ChangeLogParseException)",
          "100:         e.message.contains(\"Connection refused\")",
          "101:     }",
          "103: }",
          "",
          "---------------"
        ],
        "liquibase-core/src/test/java/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.java||liquibase-core/src/test/java/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.java": [
          "File: liquibase-core/src/test/java/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.java -> liquibase-core/src/test/java/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f793f0c9f453b349272d5b29199fe1160998a193",
      "candidate_info": {
        "commit_hash": "f793f0c9f453b349272d5b29199fe1160998a193",
        "repo": "liquibase/liquibase",
        "commit_url": "https://github.com/liquibase/liquibase/commit/f793f0c9f453b349272d5b29199fe1160998a193",
        "files": [
          "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy"
        ],
        "message": "Revert \"Playing with ResourceAccessor changes\"\n\nThis reverts commit 3edac0f17d572ba2047de9f9a42a3cde82cf340c.",
        "before_after_code_files": [
          "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy||liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy||liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy"
          ],
          "candidate": [
            "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy||liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy"
          ]
        }
      },
      "candidate_diff": {
        "liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy||liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy": [
          "File: liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy -> liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy",
          "--- Hunk 1 ---",
          "[Context before]",
          "83:         e.message.contains(\"Unable to resolve xml entity file:///invalid.txt. liquibase.secureParsing is set to 'true'\")",
          "84:     }",
          "98:     }",
          "100:     def \"getSchemaVersion\"() {",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "86:     def \"allows liquibase.secureParsing=false to disable secure parsing\"() {",
          "87:         when:",
          "88:         def resourceAccessor = new MockResourceAccessor([\"com/example/insecure.xml\": INSECURE_XML])",
          "90:         Scope.child(GlobalConfiguration.SECURE_PARSING.key, \"false\", { ->",
          "91:             new XMLChangeLogSAXParser().parse(\"com/example/insecure.xml\", new ChangeLogParameters(), resourceAccessor)",
          "92:         })",
          "95:         then:",
          "96:         def e = thrown(ChangeLogParseException)",
          "97:         e.message.contains(\"Error Reading Changelog File: \" + File.separator + \"invalid.txt\")",
          "",
          "---------------"
        ]
      }
    }
  ]
}