{
  "cve_id": "CVE-2024-34341",
  "cve_desc": "Trix is a rich text editor. The Trix editor, versions prior to 2.1.1, is vulnerable to arbitrary code execution when copying and pasting content from the web or other documents with markup into the editor. The vulnerability stems from improper sanitization of pasted content, allowing an attacker to embed malicious scripts which are executed within the context of the application. Users should upgrade to Trix editor version 2.1.1 or later, which incorporates proper sanitization of input from copied content.",
  "repo": "basecamp/trix",
  "patch_hash": "1a5c68a14d48421fc368e30026f4a7918028b7ad",
  "patch_info": {
    "commit_hash": "1a5c68a14d48421fc368e30026f4a7918028b7ad",
    "repo": "basecamp/trix",
    "commit_url": "https://github.com/basecamp/trix/commit/1a5c68a14d48421fc368e30026f4a7918028b7ad",
    "files": [
      "src/test/system/pasting_test.js",
      "src/trix/models/html_parser.js"
    ],
    "message": "Merge pull request #1149 from basecamp/paste-html-sanitize\n\nSanitize HTML content in data-trix-* attributes",
    "before_after_code_files": [
      "src/test/system/pasting_test.js||src/test/system/pasting_test.js",
      "src/trix/models/html_parser.js||src/trix/models/html_parser.js"
    ]
  },
  "patch_diff": {
    "src/test/system/pasting_test.js||src/test/system/pasting_test.js": [
      "File: src/test/system/pasting_test.js -> src/test/system/pasting_test.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "104:     delete window.unsanitized",
      "105:   })",
      "107:   test(\"prefers plain text when html lacks formatting\", async () => {",
      "108:     const pasteData = {",
      "109:       \"text/html\": \"<meta charset='utf-8'>a\\nb\",",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "107:   test(\"paste data-trix-attachment unsafe html\", async () => {",
      "108:     window.unsanitized = []",
      "109:     const pasteData = {",
      "110:       \"text/plain\": \"x\",",
      "111:       \"text/html\": `\\",
      "112:       copy<div data-trix-attachment=\"{&quot;contentType&quot;:&quot;text/html&quot;,&quot;content&quot;:&quot;&lt;img src=1 onerror=window.unsanitized.push(1)&gt;HELLO123&quot;}\"></div>me",
      "113:       `,",
      "114:     }",
      "116:     await pasteContent(pasteData)",
      "117:     await delay(20)",
      "118:     assert.deepEqual(window.unsanitized, [])",
      "119:     delete window.unsanitized",
      "120:   })",
      "",
      "---------------"
    ],
    "src/trix/models/html_parser.js||src/trix/models/html_parser.js": [
      "File: src/trix/models/html_parser.js -> src/trix/models/html_parser.js",
      "--- Hunk 1 ---",
      "[Context before]",
      "41: const parseTrixDataAttribute = (element, name) => {",
      "42:   try {",
      "44:   } catch (error) {",
      "45:     return {}",
      "46:   }",
      "",
      "[Removed Lines]",
      "43:     return JSON.parse(element.getAttribute(`data-trix-${name}`))",
      "",
      "[Added Lines]",
      "43:     const data = JSON.parse(element.getAttribute(`data-trix-${name}`))",
      "45:     if (data.contentType === \"text/html\" && data.content) {",
      "46:       data.content = HTMLSanitizer.sanitize(data.content).getHTML()",
      "47:     }",
      "49:     return data",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "1abe3d27ee66135d7e759632f834cde9d36a1696",
      "candidate_info": {
        "commit_hash": "1abe3d27ee66135d7e759632f834cde9d36a1696",
        "repo": "basecamp/trix",
        "commit_url": "https://github.com/basecamp/trix/commit/1abe3d27ee66135d7e759632f834cde9d36a1696",
        "files": [
          "src/test/system/pasting_test.js"
        ],
        "message": "Test attachment content is sanitized",
        "before_after_code_files": [
          "src/test/system/pasting_test.js||src/test/system/pasting_test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/basecamp/trix/pull/1149"
        ],
        "olp_code_files": {
          "patch": [
            "src/test/system/pasting_test.js||src/test/system/pasting_test.js"
          ],
          "candidate": [
            "src/test/system/pasting_test.js||src/test/system/pasting_test.js"
          ]
        }
      },
      "candidate_diff": {
        "src/test/system/pasting_test.js||src/test/system/pasting_test.js": [
          "File: src/test/system/pasting_test.js -> src/test/system/pasting_test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "104:     delete window.unsanitized",
          "105:   })",
          "107:   test(\"prefers plain text when html lacks formatting\", async () => {",
          "108:     const pasteData = {",
          "109:       \"text/html\": \"<meta charset='utf-8'>a\\nb\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "107:   test(\"paste data-trix-attachment unsafe html\", async () => {",
          "108:     window.unsanitized = []",
          "109:     const pasteData = {",
          "110:       \"text/plain\": \"x\",",
          "111:       \"text/html\": `\\",
          "112:       copy<div data-trix-attachment=\"{&quot;contentType&quot;:&quot;text/html&quot;,&quot;content&quot;:&quot;&lt;img src=1 onerror=window.unsanitized.push(1)&gt;HELLO123&quot;}\"></div>me",
          "113:       `,",
          "114:     }",
          "116:     await pasteContent(pasteData)",
          "117:     await delay(20)",
          "118:     assert.deepEqual(window.unsanitized, [])",
          "119:     delete window.unsanitized",
          "120:   })",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "14bac183313e5fb0ea61eafae4eed5de84848d10",
      "candidate_info": {
        "commit_hash": "14bac183313e5fb0ea61eafae4eed5de84848d10",
        "repo": "basecamp/trix",
        "commit_url": "https://github.com/basecamp/trix/commit/14bac183313e5fb0ea61eafae4eed5de84848d10",
        "files": [
          "src/trix/models/html_parser.js"
        ],
        "message": "Sanitize HTML content in data-trix-* attributes\n\nPrevents XSS attacks by crafting a malicious HTML content in the\ndata-trix-* attributes.",
        "before_after_code_files": [
          "src/trix/models/html_parser.js||src/trix/models/html_parser.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/basecamp/trix/pull/1149"
        ],
        "olp_code_files": {
          "patch": [
            "src/trix/models/html_parser.js||src/trix/models/html_parser.js"
          ],
          "candidate": [
            "src/trix/models/html_parser.js||src/trix/models/html_parser.js"
          ]
        }
      },
      "candidate_diff": {
        "src/trix/models/html_parser.js||src/trix/models/html_parser.js": [
          "File: src/trix/models/html_parser.js -> src/trix/models/html_parser.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "41: const parseTrixDataAttribute = (element, name) => {",
          "42:   try {",
          "44:   } catch (error) {",
          "45:     return {}",
          "46:   }",
          "",
          "[Removed Lines]",
          "43:     return JSON.parse(element.getAttribute(`data-trix-${name}`))",
          "",
          "[Added Lines]",
          "43:     const data = JSON.parse(element.getAttribute(`data-trix-${name}`))",
          "45:     if (data.contentType === \"text/html\" && data.content) {",
          "46:       data.content = HTMLSanitizer.sanitize(data.content).getHTML()",
          "47:     }",
          "49:     return data",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "96407f6d0fd838595b99ddeb0fe081948f192b10",
      "candidate_info": {
        "commit_hash": "96407f6d0fd838595b99ddeb0fe081948f192b10",
        "repo": "basecamp/trix",
        "commit_url": "https://github.com/basecamp/trix/commit/96407f6d0fd838595b99ddeb0fe081948f192b10",
        "files": [
          "src/test/system/pasting_test.js"
        ],
        "message": "Test attachment content is sanitized",
        "before_after_code_files": [
          "src/test/system/pasting_test.js||src/test/system/pasting_test.js"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_olp_changes": 1,
        "olp_code_files": {
          "patch": [
            "src/test/system/pasting_test.js||src/test/system/pasting_test.js"
          ],
          "candidate": [
            "src/test/system/pasting_test.js||src/test/system/pasting_test.js"
          ]
        }
      },
      "candidate_diff": {
        "src/test/system/pasting_test.js||src/test/system/pasting_test.js": [
          "File: src/test/system/pasting_test.js -> src/test/system/pasting_test.js",
          "--- Hunk 1 ---",
          "[Context before]",
          "89:     delete window.unsanitized",
          "90:   })",
          "92:   test(\"prefers plain text when html lacks formatting\", async () => {",
          "93:     const pasteData = {",
          "94:       \"text/html\": \"<meta charset='utf-8'>a\\nb\",",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "92:   test(\"paste data-trix-attachment unsafe html\", async () => {",
          "93:     window.unsanitized = []",
          "94:     const pasteData = {",
          "95:       \"text/plain\": \"x\",",
          "96:       \"text/html\": `\\",
          "97:       copy<div data-trix-attachment=\"{&quot;contentType&quot;:&quot;text/html&quot;,&quot;content&quot;:&quot;&lt;img src=1 onerror=window.unsanitized.push(1)&gt;HELLO123&quot;}\"></div>me",
          "98:       `,",
          "99:     }",
          "101:     await pasteContent(pasteData)",
          "102:     await delay(20)",
          "103:     assert.deepEqual(window.unsanitized, [])",
          "104:     delete window.unsanitized",
          "105:   })",
          "",
          "---------------"
        ]
      }
    }
  ]
}