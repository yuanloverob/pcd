{
  "cve_id": "CVE-2024-23454",
  "cve_desc": "Apache Hadoop\u2019s RunJar.run()\u00a0does not set permissions for temporary directory\u00a0by default. If sensitive data will be present in this file, all the other local users may be able to view the content.\nThis is because, on unix-like systems, the system temporary directory is\nshared between all local users. As such, files written in this directory,\nwithout setting the correct posix permissions explicitly, may be viewable\nby all other local users.",
  "repo": "apache/hadoop",
  "patch_hash": "8c2836402fbb2f619f1fef4ef625a8542e853a64",
  "patch_info": {
    "commit_hash": "8c2836402fbb2f619f1fef4ef625a8542e853a64",
    "repo": "apache/hadoop",
    "commit_url": "https://github.com/apache/hadoop/commit/8c2836402fbb2f619f1fef4ef625a8542e853a64",
    "files": [
      "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java"
    ],
    "message": "HADOOP-19031. Enhance access control for RunJar. (#6427). Contributed by He Xiaoqiao.\n\nSigned-off-by: Shuyan Zhang <zhangshuyan@apache.org>\nSigned-off-by: Shilun Fan <slfan1989@apache.org>\nSigned-off-by: Ayush Saxena <ayushsaxena@apache.org>\n(cherry picked from commit 9634bd31e6594312b68d9e07b736d18d29f7648c)",
    "before_after_code_files": [
      "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java||hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java"
    ]
  },
  "patch_diff": {
    "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java||hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java": [
      "File: hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java -> hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "28: import java.net.URL;",
      "29: import java.net.URLClassLoader;",
      "30: import java.nio.file.Files;",
      "31: import java.util.ArrayList;",
      "32: import java.util.Arrays;",
      "33: import java.util.Enumeration;",
      "34: import java.util.List;",
      "35: import java.util.jar.JarEntry;",
      "36: import java.util.jar.JarFile;",
      "37: import java.util.jar.JarInputStream;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "31: import java.nio.file.attribute.FileAttribute;",
      "32: import java.nio.file.attribute.PosixFilePermission;",
      "33: import java.nio.file.attribute.PosixFilePermissions;",
      "38: import java.util.Set;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "288:     final File workDir;",
      "289:     try {",
      "294:       System.err.println(\"Error creating temp dir in java.io.tmpdir \"",
      "296:       System.exit(-1);",
      "297:       return;",
      "298:     }",
      "304:     ensureDirectory(workDir);",
      "306:     ShutdownHookManager.get().addShutdownHook(",
      "",
      "[Removed Lines]",
      "290:       workDir = File.createTempFile(\"hadoop-unjar\", \"\", tmpDir);",
      "291:     } catch (IOException ioe) {",
      "295:                          + tmpDir + \" due to \" + ioe.getMessage());",
      "300:     if (!workDir.delete()) {",
      "301:       System.err.println(\"Delete failed for \" + workDir);",
      "302:       System.exit(-1);",
      "303:     }",
      "",
      "[Added Lines]",
      "294:       FileAttribute<Set<PosixFilePermission>> perms = PosixFilePermissions",
      "295:           .asFileAttribute(PosixFilePermissions.fromString(\"rwx------\"));",
      "296:       workDir = Files.createTempDirectory(tmpDir.toPath(), \"hadoop-unjar\", perms).toFile();",
      "297:     } catch (IOException | SecurityException e) {",
      "301:                          + tmpDir + \" due to \" + e.getMessage());",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "61c38bb7897e884a1dc15914e4a380d310932bd6",
      "candidate_info": {
        "commit_hash": "61c38bb7897e884a1dc15914e4a380d310932bd6",
        "repo": "apache/hadoop",
        "commit_url": "https://github.com/apache/hadoop/commit/61c38bb7897e884a1dc15914e4a380d310932bd6",
        "files": [
          "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java"
        ],
        "message": "HADOOP-19031. Enhance access control for RunJar. (#6427). Contributed by He Xiaoqiao.\n\nSigned-off-by: Shuyan Zhang <zhangshuyan@apache.org>\nSigned-off-by: Shilun Fan <slfan1989@apache.org>\nSigned-off-by: Ayush Saxena <ayushsaxena@apache.org>\n(cherry picked from commit 9634bd31e6594312b68d9e07b736d18d29f7648c)",
        "before_after_code_files": [
          "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java||hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java||hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java"
          ],
          "candidate": [
            "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java||hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java"
          ]
        }
      },
      "candidate_diff": {
        "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java||hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java": [
          "File: hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java -> hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: import java.net.URL;",
          "29: import java.net.URLClassLoader;",
          "30: import java.nio.file.Files;",
          "31: import java.util.ArrayList;",
          "32: import java.util.Arrays;",
          "33: import java.util.Enumeration;",
          "34: import java.util.List;",
          "35: import java.util.jar.JarEntry;",
          "36: import java.util.jar.JarFile;",
          "37: import java.util.jar.JarInputStream;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: import java.nio.file.attribute.FileAttribute;",
          "32: import java.nio.file.attribute.PosixFilePermission;",
          "33: import java.nio.file.attribute.PosixFilePermissions;",
          "38: import java.util.Set;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "288:     final File workDir;",
          "289:     try {",
          "294:       System.err.println(\"Error creating temp dir in java.io.tmpdir \"",
          "296:       System.exit(-1);",
          "297:       return;",
          "298:     }",
          "304:     ensureDirectory(workDir);",
          "306:     ShutdownHookManager.get().addShutdownHook(",
          "",
          "[Removed Lines]",
          "290:       workDir = File.createTempFile(\"hadoop-unjar\", \"\", tmpDir);",
          "291:     } catch (IOException ioe) {",
          "295:                          + tmpDir + \" due to \" + ioe.getMessage());",
          "300:     if (!workDir.delete()) {",
          "301:       System.err.println(\"Delete failed for \" + workDir);",
          "302:       System.exit(-1);",
          "303:     }",
          "",
          "[Added Lines]",
          "294:       FileAttribute<Set<PosixFilePermission>> perms = PosixFilePermissions",
          "295:           .asFileAttribute(PosixFilePermissions.fromString(\"rwx------\"));",
          "296:       workDir = Files.createTempDirectory(tmpDir.toPath(), \"hadoop-unjar\", perms).toFile();",
          "297:     } catch (IOException | SecurityException e) {",
          "301:                          + tmpDir + \" due to \" + e.getMessage());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9634bd31e6594312b68d9e07b736d18d29f7648c",
      "candidate_info": {
        "commit_hash": "9634bd31e6594312b68d9e07b736d18d29f7648c",
        "repo": "apache/hadoop",
        "commit_url": "https://github.com/apache/hadoop/commit/9634bd31e6594312b68d9e07b736d18d29f7648c",
        "files": [
          "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java"
        ],
        "message": "HADOOP-19031. Enhance access control for RunJar. (#6427). Contributed by He Xiaoqiao.\n\nSigned-off-by: Shuyan Zhang <zhangshuyan@apache.org>\nSigned-off-by: Shilun Fan <slfan1989@apache.org>\nSigned-off-by: Ayush Saxena <ayushsaxena@apache.org>",
        "before_after_code_files": [
          "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java||hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java||hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java"
          ],
          "candidate": [
            "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java||hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java"
          ]
        }
      },
      "candidate_diff": {
        "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java||hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java": [
          "File: hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java -> hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: import java.net.URL;",
          "29: import java.net.URLClassLoader;",
          "30: import java.nio.file.Files;",
          "31: import java.util.ArrayList;",
          "32: import java.util.Arrays;",
          "33: import java.util.Enumeration;",
          "34: import java.util.List;",
          "35: import java.util.jar.JarEntry;",
          "36: import java.util.jar.JarFile;",
          "37: import java.util.jar.JarInputStream;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: import java.nio.file.attribute.FileAttribute;",
          "32: import java.nio.file.attribute.PosixFilePermission;",
          "33: import java.nio.file.attribute.PosixFilePermissions;",
          "38: import java.util.Set;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "288:     final File workDir;",
          "289:     try {",
          "294:       System.err.println(\"Error creating temp dir in java.io.tmpdir \"",
          "296:       System.exit(-1);",
          "297:       return;",
          "298:     }",
          "304:     ensureDirectory(workDir);",
          "306:     ShutdownHookManager.get().addShutdownHook(",
          "",
          "[Removed Lines]",
          "290:       workDir = File.createTempFile(\"hadoop-unjar\", \"\", tmpDir);",
          "291:     } catch (IOException ioe) {",
          "295:                          + tmpDir + \" due to \" + ioe.getMessage());",
          "300:     if (!workDir.delete()) {",
          "301:       System.err.println(\"Delete failed for \" + workDir);",
          "302:       System.exit(-1);",
          "303:     }",
          "",
          "[Added Lines]",
          "294:       FileAttribute<Set<PosixFilePermission>> perms = PosixFilePermissions",
          "295:           .asFileAttribute(PosixFilePermissions.fromString(\"rwx------\"));",
          "296:       workDir = Files.createTempDirectory(tmpDir.toPath(), \"hadoop-unjar\", perms).toFile();",
          "297:     } catch (IOException | SecurityException e) {",
          "301:                          + tmpDir + \" due to \" + e.getMessage());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fa80205ad702bab011fe5edee5635bf8a539d5b1",
      "candidate_info": {
        "commit_hash": "fa80205ad702bab011fe5edee5635bf8a539d5b1",
        "repo": "apache/hadoop",
        "commit_url": "https://github.com/apache/hadoop/commit/fa80205ad702bab011fe5edee5635bf8a539d5b1",
        "files": [
          "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java"
        ],
        "message": "HADOOP-19031. Enhance access control for RunJar. (#6427). Contributed by He Xiaoqiao.\n\nSigned-off-by: Shuyan Zhang <zhangshuyan@apache.org>\nSigned-off-by: Shilun Fan <slfan1989@apache.org>\nSigned-off-by: Ayush Saxena <ayushsaxena@apache.org>\n(cherry picked from commit 9634bd31e6594312b68d9e07b736d18d29f7648c)",
        "before_after_code_files": [
          "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java||hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_cherry_pick": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java||hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java"
          ],
          "candidate": [
            "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java||hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java"
          ]
        }
      },
      "candidate_diff": {
        "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java||hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java": [
          "File: hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java -> hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/RunJar.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "28: import java.net.URL;",
          "29: import java.net.URLClassLoader;",
          "30: import java.nio.file.Files;",
          "31: import java.util.ArrayList;",
          "32: import java.util.Arrays;",
          "33: import java.util.Enumeration;",
          "34: import java.util.List;",
          "35: import java.util.jar.JarEntry;",
          "36: import java.util.jar.JarFile;",
          "37: import java.util.jar.JarInputStream;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "31: import java.nio.file.attribute.FileAttribute;",
          "32: import java.nio.file.attribute.PosixFilePermission;",
          "33: import java.nio.file.attribute.PosixFilePermissions;",
          "38: import java.util.Set;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "288:     final File workDir;",
          "289:     try {",
          "294:       System.err.println(\"Error creating temp dir in java.io.tmpdir \"",
          "296:       System.exit(-1);",
          "297:       return;",
          "298:     }",
          "304:     ensureDirectory(workDir);",
          "306:     ShutdownHookManager.get().addShutdownHook(",
          "",
          "[Removed Lines]",
          "290:       workDir = File.createTempFile(\"hadoop-unjar\", \"\", tmpDir);",
          "291:     } catch (IOException ioe) {",
          "295:                          + tmpDir + \" due to \" + ioe.getMessage());",
          "300:     if (!workDir.delete()) {",
          "301:       System.err.println(\"Delete failed for \" + workDir);",
          "302:       System.exit(-1);",
          "303:     }",
          "",
          "[Added Lines]",
          "294:       FileAttribute<Set<PosixFilePermission>> perms = PosixFilePermissions",
          "295:           .asFileAttribute(PosixFilePermissions.fromString(\"rwx------\"));",
          "296:       workDir = Files.createTempDirectory(tmpDir.toPath(), \"hadoop-unjar\", perms).toFile();",
          "297:     } catch (IOException | SecurityException e) {",
          "301:                          + tmpDir + \" due to \" + e.getMessage());",
          "",
          "---------------"
        ]
      }
    }
  ]
}