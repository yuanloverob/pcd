{
  "cve_id": "CVE-2022-1091",
  "cve_desc": "The sanitisation step of the Safe SVG WordPress plugin before 1.9.10 can be bypassed by spoofing the content-type in the POST request to upload a file. Exploiting this vulnerability, an attacker will be able to perform the kinds of attacks that this plugin should prevent (mainly XSS, but depending on further use of uploaded SVG files potentially other XML attacks).",
  "repo": "10up/safe-svg",
  "patch_hash": "00cb9a86d1bff2214714557d1901ec3896564e50",
  "patch_info": {
    "commit_hash": "00cb9a86d1bff2214714557d1901ec3896564e50",
    "repo": "10up/safe-svg",
    "commit_url": "https://github.com/10up/safe-svg/commit/00cb9a86d1bff2214714557d1901ec3896564e50",
    "files": [
      "safe-svg.php"
    ],
    "message": "Merge pull request #28 from 10up/fix/proper-type-checking\n\nBetter checking of the file type when determining which files are SVGs",
    "before_after_code_files": [
      "safe-svg.php||safe-svg.php"
    ]
  },
  "patch_diff": {
    "safe-svg.php||safe-svg.php": [
      "File: safe-svg.php -> safe-svg.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "106:         public function check_for_svg( $file ) {",
      "109:                 if ( ! $this->sanitize( $file['tmp_name'] ) ) {",
      "110:                     $file['error'] = __( \"Sorry, this file couldn't be sanitized so for security reasons wasn't uploaded\",",
      "111:                         'safe-svg' );",
      "",
      "[Removed Lines]",
      "108:             if ( $file['type'] === 'image/svg+xml' ) {",
      "",
      "[Added Lines]",
      "108:             $wp_filetype = wp_check_filetype_and_ext( $file['tmp_name'], $file['name'] );",
      "109:             $type        = ! empty( $wp_filetype['type'] ) ? $wp_filetype['type'] : '';",
      "111:             if ( $type === 'image/svg+xml' ) {",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "44752cf0c875fdda2e3f58b386ee9460c81106fc",
      "candidate_info": {
        "commit_hash": "44752cf0c875fdda2e3f58b386ee9460c81106fc",
        "repo": "10up/safe-svg",
        "commit_url": "https://github.com/10up/safe-svg/commit/44752cf0c875fdda2e3f58b386ee9460c81106fc",
        "files": [
          "safe-svg.php"
        ],
        "message": "Instead of relying on the file type that comes from the file array, use a core WordPress function to determine this, to avoid any issues around spoofing the content-type",
        "before_after_code_files": [
          "safe-svg.php||safe-svg.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/10up/safe-svg/pull/28"
        ],
        "olp_code_files": {
          "patch": [
            "safe-svg.php||safe-svg.php"
          ],
          "candidate": [
            "safe-svg.php||safe-svg.php"
          ]
        }
      },
      "candidate_diff": {
        "safe-svg.php||safe-svg.php": [
          "File: safe-svg.php -> safe-svg.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "106:         public function check_for_svg( $file ) {",
          "109:                 if ( ! $this->sanitize( $file['tmp_name'] ) ) {",
          "110:                     $file['error'] = __( \"Sorry, this file couldn't be sanitized so for security reasons wasn't uploaded\",",
          "111:                         'safe-svg' );",
          "",
          "[Removed Lines]",
          "108:             if ( $file['type'] === 'image/svg+xml' ) {",
          "",
          "[Added Lines]",
          "108:             $wp_filetype = wp_check_filetype_and_ext( $file['tmp_name'], $file['name'] );",
          "109:             $type        = ! empty( $wp_filetype['type'] ) ? $wp_filetype['type'] : '';",
          "111:             if ( $type === 'image/svg+xml' ) {",
          "",
          "---------------"
        ]
      }
    }
  ]
}