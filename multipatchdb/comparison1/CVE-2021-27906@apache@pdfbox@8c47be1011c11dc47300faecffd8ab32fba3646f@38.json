{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "c6808cc38bae249f0052b1423898f6802adee559",
      "candidate_info": {
        "commit_hash": "c6808cc38bae249f0052b1423898f6802adee559",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/c6808cc38bae249f0052b1423898f6802adee559",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java"
        ],
        "message": "PDFBOX-4892: set individual initial ArrayList size, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887274 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java||pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java -> pdfbox/src/main/java/org/apache/pdfbox/multipdf/PDFMergerUtility.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "439:             try",
          "440:             {",
          "",
          "[Removed Lines]",
          "437:             List<PDDocument> tobeclosed = new ArrayList<PDDocument>();",
          "",
          "[Added Lines]",
          "437:             List<PDDocument> tobeclosed = new ArrayList<PDDocument>(sources.size());",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "807d143f14c4e21e0b1df8c15de6f46b25e5f9b2",
      "candidate_info": {
        "commit_hash": "807d143f14c4e21e0b1df8c15de6f46b25e5f9b2",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/807d143f14c4e21e0b1df8c15de6f46b25e5f9b2",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java"
        ],
        "message": "PDFBOX-4892: remove unused import\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1889881 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/graphics/color/PDCIEDictionaryBasedColorSpace.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "18: import java.awt.color.ColorSpace;",
          "19: import org.apache.pdfbox.cos.COSArray;",
          "21: import org.apache.pdfbox.cos.COSDictionary;",
          "22: import org.apache.pdfbox.cos.COSFloat;",
          "23: import org.apache.pdfbox.cos.COSName;",
          "",
          "[Removed Lines]",
          "20: import org.apache.pdfbox.cos.COSBase;",
          "",
          "[Added Lines]",
          "[None]",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "12c9cff16f3020652a71d45842e1b72ff6601aac",
      "candidate_info": {
        "commit_hash": "12c9cff16f3020652a71d45842e1b72ff6601aac",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/12c9cff16f3020652a71d45842e1b72ff6601aac",
        "files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java",
          "examples/src/main/java/org/apache/pdfbox/examples/signature/validation/AddValidationInformation.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java"
        ],
        "message": "PDFBOX-5055: fix javadoc, as suggested by Arturo Bernal\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1884714 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java||examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java",
          "examples/src/main/java/org/apache/pdfbox/examples/signature/validation/AddValidationInformation.java||examples/src/main/java/org/apache/pdfbox/examples/signature/validation/AddValidationInformation.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java||examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/ShowSignature.java"
        ],
        "examples/src/main/java/org/apache/pdfbox/examples/signature/validation/AddValidationInformation.java||examples/src/main/java/org/apache/pdfbox/examples/signature/validation/AddValidationInformation.java": [
          "File: examples/src/main/java/org/apache/pdfbox/examples/signature/validation/AddValidationInformation.java -> examples/src/main/java/org/apache/pdfbox/examples/signature/validation/AddValidationInformation.java"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/PDDocument.java"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/fdf/FDFAnnotationStamp.java"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/font/PDTrueTypeFontEmbedder.java"
        ]
      }
    },
    {
      "candidate_hash": "7afe6b0cbed0baa4ed5b446240c33544ece4f221",
      "candidate_info": {
        "commit_hash": "7afe6b0cbed0baa4ed5b446240c33544ece4f221",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/7afe6b0cbed0baa4ed5b446240c33544ece4f221",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java"
        ],
        "message": "PDFBOX-4892: improve performance, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887853 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/annotation/layout/PlainText.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     public PlainText(String textValue)",
          "53:     {",
          "56:         for (String part : parts)",
          "57:         {",
          "63:             paragraphs.add(new Paragraph(part));",
          "64:         }",
          "65:     }",
          "",
          "[Removed Lines]",
          "54:         List<String> parts = Arrays.asList(textValue.replaceAll(\"\\t\", \" \").split(\"\\\\r\\\\n|\\\\n|\\\\r|\\\\u2028|\\\\u2029\"));",
          "55:         paragraphs = new ArrayList<Paragraph>();",
          "59:          if (part.length() == 0)",
          "60:          {",
          "61:           part = \" \";",
          "62:          }",
          "",
          "[Added Lines]",
          "54:         String[] parts = textValue.replaceAll(\"\\t\", \" \").split(\"\\\\r\\\\n|\\\\n|\\\\r|\\\\u2028|\\\\u2029\");",
          "55:         paragraphs = new ArrayList<Paragraph>(parts.length);",
          "59:             if (part.length() == 0)",
          "60:             {",
          "61:                 part = \" \";",
          "62:             }",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "75:     public PlainText(List<String> listValue)",
          "76:     {",
          "78:         for (String part : listValue)",
          "79:         {",
          "80:             paragraphs.add(new Paragraph(part));",
          "",
          "[Removed Lines]",
          "77:         paragraphs = new ArrayList<Paragraph>();",
          "",
          "[Added Lines]",
          "77:         paragraphs = new ArrayList<Paragraph>(listValue.size());",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PlainText.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "52:     PlainText(String textValue)",
          "53:     {",
          "56:             paragraphs.add(new Paragraph(\"\"));",
          "57:         }",
          "58:         else",
          "59:         {",
          "61:             for (String part : parts)",
          "62:             {",
          "",
          "[Removed Lines]",
          "54:         paragraphs = new ArrayList<Paragraph>();",
          "55:         if (textValue.isEmpty()) {",
          "60:             List<String> parts = Arrays.asList(textValue.replaceAll(\"\\t\", \" \").split(\"\\\\r\\\\n|\\\\n|\\\\r|\\\\u2028|\\\\u2029\"));",
          "",
          "[Added Lines]",
          "54:         if (textValue.isEmpty())",
          "55:         {",
          "56:             paragraphs = new ArrayList<Paragraph>(1);",
          "61:             String[] parts = textValue.replaceAll(\"\\t\", \" \").split(\"\\\\r\\\\n|\\\\n|\\\\r|\\\\u2028|\\\\u2029\");",
          "62:             paragraphs = new ArrayList<Paragraph>(parts.length);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f52194547a817ecbf1eb9603ad82397ae7592f92",
      "candidate_info": {
        "commit_hash": "f52194547a817ecbf1eb9603ad82397ae7592f92",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/f52194547a817ecbf1eb9603ad82397ae7592f92",
        "files": [
          "fontbox/src/test/java/org/apache/fontbox/cmap/TestCMapParser.java",
          "fontbox/src/test/resources/cmap/Identitybfrange"
        ],
        "message": "PDFBOX-5090: add a test for an identity bfrange mapping\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1886093 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/test/java/org/apache/fontbox/cmap/TestCMapParser.java||fontbox/src/test/java/org/apache/fontbox/cmap/TestCMapParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/test/java/org/apache/fontbox/cmap/TestCMapParser.java||fontbox/src/test/java/org/apache/fontbox/cmap/TestCMapParser.java": [
          "File: fontbox/src/test/java/org/apache/fontbox/cmap/TestCMapParser.java -> fontbox/src/test/java/org/apache/fontbox/cmap/TestCMapParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: import java.io.File;",
          "20: import java.io.IOException;",
          "22: import junit.framework.TestCase;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "21: import java.nio.charset.Charset;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "38:     public void testLookup() throws IOException",
          "39:     {",
          "47:         byte[] bytes1 = {0, 1};",
          "",
          "[Removed Lines]",
          "40:         final String resourceDir = \"src/test/resources/cmap\";",
          "41:         File inDir = new File(resourceDir);",
          "43:         CMapParser parser = new CMapParser();",
          "44:         CMap cMap = parser.parse(new File(inDir, \"CMapTest\"));",
          "",
          "[Added Lines]",
          "41:         CMap cMap = new CMapParser().parse(new File(\"src/test/resources/cmap\", \"CMapTest\"));",
          "",
          "---------------",
          "--- Hunk 3 ---",
          "[Context before]",
          "91:     public void testIdentity() throws IOException",
          "92:     {",
          "99:         assertEquals(\"Indentity-H CID 65\", 65, cMap.toCID(65));",
          "100:         assertEquals(\"Indentity-H CID 12345\", 12345, cMap.toCID(12345));",
          "",
          "[Removed Lines]",
          "93:         final String resourceDir = \"src/main/resources/org/apache/fontbox/cmap\";",
          "94:         File inDir = new File(resourceDir);",
          "96:         CMapParser parser = new CMapParser();",
          "97:         CMap cMap = parser.parse(new File(inDir, \"Identity-H\"));",
          "",
          "[Added Lines]",
          "90:         CMap cMap = new CMapParser().parsePredefined(\"Identity-H\");",
          "",
          "---------------",
          "--- Hunk 4 ---",
          "[Context before]",
          "104:     public void testUniJIS_UCS2_H() throws IOException",
          "105:     {",
          "112:         assertEquals(\"UniJIS-UCS2-H CID 65 -> 34\", 34, cMap.toCID(65));",
          "113:     }",
          "",
          "[Removed Lines]",
          "106:         final String resourceDir = \"src/main/resources/org/apache/fontbox/cmap\";",
          "107:         File inDir = new File(resourceDir);",
          "109:         CMapParser parser = new CMapParser();",
          "110:         CMap cMap = parser.parse(new File(inDir, \"UniJIS-UCS2-H\"));",
          "",
          "[Added Lines]",
          "99:         CMap cMap = new CMapParser().parsePredefined(\"UniJIS-UCS2-H\");",
          "",
          "---------------",
          "--- Hunk 5 ---",
          "[Context before]",
          "176:         assertNotNull(\"Failed to parse predefined CMap Identity-V\", cMap);",
          "177:     }",
          "179: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "168:     public void testIdentitybfrange() throws IOException",
          "169:     {",
          "171:         CMap cMap = new CMapParser(true)",
          "172:                 .parse(new File(\"src/test/resources/cmap\", \"Identitybfrange\"));",
          "173:         assertEquals(\"wrong CMap name\", \"Adobe-Identity-UCS\", cMap.getName());",
          "175:         Charset UTF_16BE = Charset.forName(\"UTF-16BE\");",
          "177:         byte[] bytes = new byte[] { 0, 0x48 };",
          "178:         assertEquals(\"Indentity 0x0048\", new String(bytes, UTF_16BE), cMap.toUnicode(0x0048));",
          "180:         bytes = new byte[] { 0x30, 0x39 };",
          "181:         assertEquals(\"Indentity 0x3039\", new String(bytes, UTF_16BE), cMap.toUnicode(0x3039));",
          "184:         bytes = new byte[] { 0x30, (byte) 0xFF };",
          "185:         assertEquals(\"Indentity 0x30FF\", new String(bytes, UTF_16BE), cMap.toUnicode(0x30FF));",
          "187:         bytes = new byte[] { 0x31, 0x00 };",
          "188:         assertEquals(\"Indentity 0x3100\", new String(bytes, UTF_16BE), cMap.toUnicode(0x3100));",
          "190:         bytes = new byte[] { (byte) 0xFF, (byte) 0xFF };",
          "191:         assertEquals(\"Indentity 0xFFFF\", new String(bytes, UTF_16BE), cMap.toUnicode(0xFFFF));",
          "193:     }",
          "",
          "---------------"
        ]
      }
    }
  ]
}