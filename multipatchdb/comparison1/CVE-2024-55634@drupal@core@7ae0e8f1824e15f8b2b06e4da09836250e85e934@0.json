{
  "cve_id": "CVE-2024-55634",
  "cve_desc": "A vulnerability in Drupal Core allows Privilege Escalation.This issue affects Drupal Core: from 8.0.0 before 10.2.11, from 10.3.0 before 10.3.9, from 11.0.0 before 11.0.8.",
  "repo": "drupal/core",
  "patch_hash": "7ae0e8f1824e15f8b2b06e4da09836250e85e934",
  "patch_info": {
    "commit_hash": "7ae0e8f1824e15f8b2b06e4da09836250e85e934",
    "repo": "drupal/core",
    "commit_url": "https://github.com/drupal/core/commit/7ae0e8f1824e15f8b2b06e4da09836250e85e934",
    "files": [
      "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php",
      "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php",
      "modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php",
      "modules/user/user.install"
    ],
    "message": "SA-CORE-2024-004 by zengenuity, cilefen, kristiaanvandeneynde, mcdruid, larowlan",
    "before_after_code_files": [
      "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php",
      "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php",
      "modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php||modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php",
      "modules/user/user.install||modules/user/user.install"
    ]
  },
  "patch_diff": {
    "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php": [
      "File: lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php -> lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "18:   public $message = 'A @entity_type with @field_name %value already exists.';",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "28:   public $caseSensitive = FALSE;",
      "",
      "---------------"
    ],
    "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php": [
      "File: lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php -> lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "64:       ->getStorage($entity_type_id)",
      "65:       ->getAggregateQuery()",
      "66:       ->accessCheck(FALSE)",
      "68:       ->groupBy(\"$field_name.$property_name\");",
      "69:     if (!$is_new) {",
      "70:       $entity_id = $entity->id();",
      "71:       $query->condition($id_key, $entity_id, '<>');",
      "72:     }",
      "73:     $results = $query->execute();",
      "75:     if (!empty($results)) {",
      "",
      "[Removed Lines]",
      "67:       ->condition($field_name, $item_values, 'IN')",
      "",
      "[Added Lines]",
      "73:     if ($constraint->caseSensitive) {",
      "74:       $query->condition($field_name, $item_values, 'IN');",
      "75:     }",
      "76:     else {",
      "77:       $or_group = $query->orConditionGroup();",
      "78:       foreach ($item_values as $item_value) {",
      "79:         $or_group->condition($field_name, \\Drupal::database()->escapeLike($item_value), 'LIKE');",
      "80:       }",
      "81:       $query->condition($or_group);",
      "82:     }",
      "",
      "---------------"
    ],
    "modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php||modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php": [
      "File: modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php -> modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php",
      "--- Hunk 1 ---",
      "[Context before]",
      "5: use Drupal\\Core\\StringTranslation\\TranslatableMarkup;",
      "6: use Drupal\\Core\\Validation\\Attribute\\Constraint;",
      "",
      "[Removed Lines]",
      "7: use Symfony\\Component\\Validator\\Constraint as SymfonyConstraint;",
      "",
      "[Added Lines]",
      "7: use Drupal\\Core\\Validation\\Plugin\\Validation\\Constraint\\UniqueFieldConstraint;",
      "8: use Drupal\\Core\\Validation\\Plugin\\Validation\\Constraint\\UniqueFieldValueValidator;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "13:   id: 'FileUriUnique',",
      "14:   label: new TranslatableMarkup('File URI', [], ['context' => 'Validation'])",
      "15: )]",
      "18:   public $message = 'The file %value already exists. Enter a unique file URI.';",
      "23:   public function validatedBy(): string {",
      "25:   }",
      "27: }",
      "",
      "[Removed Lines]",
      "16: class FileUriUnique extends SymfonyConstraint {",
      "24:     return '\\Drupal\\Core\\Validation\\Plugin\\Validation\\Constraint\\UniqueFieldValueValidator';",
      "",
      "[Added Lines]",
      "17: class FileUriUnique extends UniqueFieldConstraint {",
      "29:   public $caseSensitive = TRUE;",
      "35:     return UniqueFieldValueValidator::class;",
      "",
      "---------------"
    ],
    "modules/user/user.install||modules/user/user.install": [
      "File: modules/user/user.install -> modules/user/user.install",
      "--- Hunk 1 ---",
      "[Context before]",
      "98:   if ($phase !== 'runtime') {",
      "99:     return [];",
      "100:   }",
      "102:   $result = (bool) \\Drupal::entityQuery('user')",
      "103:     ->accessCheck(FALSE)",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "101:   $return = [];",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "106:     ->execute();",
      "108:   if ($result === FALSE) {",
      "117:     ];",
      "118:   }",
      "120: }",
      "",
      "[Removed Lines]",
      "109:     return [",
      "110:       'anonymous user' => [",
      "111:         'title' => t('Anonymous user'),",
      "112:         'description' => t('The anonymous user does not exist. See the <a href=\":url\">restore the anonymous (user ID 0) user record</a> for more information', [",
      "113:           ':url' => 'https://www.drupal.org/node/1029506',",
      "114:         ]),",
      "115:         'severity' => REQUIREMENT_WARNING,",
      "116:       ],",
      "119:   return [];",
      "",
      "[Added Lines]",
      "110:     $return['anonymous user'] = [",
      "111:       'title' => t('Anonymous user'),",
      "112:       'description' => t('The anonymous user does not exist. See the <a href=\":url\">restore the anonymous (user ID 0) user record</a> for more information', [",
      "113:         ':url' => 'https://www.drupal.org/node/1029506',",
      "114:       ]),",
      "115:       'severity' => REQUIREMENT_WARNING,",
      "116:     ];",
      "117:   }",
      "119:   $query = \\Drupal::database()->select('users_field_data');",
      "120:   $query->addExpression('LOWER(mail)', 'lower_mail');",
      "121:   $query->groupBy('lower_mail');",
      "122:   $query->having('COUNT(uid) > :matches', [':matches' => 1]);",
      "123:   $conflicts = $query->countQuery()->execute()->fetchField();",
      "125:   if ($conflicts > 0) {",
      "126:     $return['conflicting emails'] = [",
      "127:       'title' => t('Conflicting user emails'),",
      "128:       'description' => t('Some user accounts have email addresses that differ only by case. For example, one account might have alice@example.com and another might have Alice@Example.com. See <a href=\":url\">Conflicting User Emails</a> for more information.', [",
      "129:         ':url' => 'https://www.drupal.org/node/3486109',",
      "130:       ]),",
      "131:       'severity' => REQUIREMENT_WARNING,",
      "135:   return $return;",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "611fb34443fc5985dd18335fa9df96956ac03343",
      "candidate_info": {
        "commit_hash": "611fb34443fc5985dd18335fa9df96956ac03343",
        "repo": "drupal/core",
        "commit_url": "https://github.com/drupal/core/commit/611fb34443fc5985dd18335fa9df96956ac03343",
        "files": [
          "modules/user/tests/src/Functional/UserRequirementsTest.php",
          "modules/user/user.install"
        ],
        "message": "Issue #3057399 by quietone, Akhil Babu, kristiaanvandeneynde, alexpott, pradhumanjain2311, smustgrave, catch, poker10, longwave, jimafisk, Newb_Druper, robpowell, dpi, tomdewild: Add user_requirements to check for missing anonymous user",
        "before_after_code_files": [
          "modules/user/tests/src/Functional/UserRequirementsTest.php||modules/user/tests/src/Functional/UserRequirementsTest.php",
          "modules/user/user.install||modules/user/user.install"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_branch_evolution": 1,
        "olp_code_files": {
          "patch": [
            "modules/user/user.install||modules/user/user.install"
          ],
          "candidate": [
            "modules/user/user.install||modules/user/user.install"
          ]
        }
      },
      "candidate_diff": {
        "modules/user/tests/src/Functional/UserRequirementsTest.php||modules/user/tests/src/Functional/UserRequirementsTest.php": [
          "File: modules/user/tests/src/Functional/UserRequirementsTest.php -> modules/user/tests/src/Functional/UserRequirementsTest.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "1: <?php",
          "3: declare(strict_types=1);",
          "5: namespace Drupal\\Tests\\user\\Functional;",
          "7: use Drupal\\Tests\\BrowserTestBase;",
          "14: class UserRequirementsTest extends BrowserTestBase {",
          "19:   protected $defaultTheme = 'stark';",
          "24:   public function testAnonymousUser(): void {",
          "26:     \\Drupal::database()",
          "27:       ->delete('users')",
          "28:       ->condition('uid', 0)",
          "29:       ->execute();",
          "31:     $this->drupalLogin($this->rootUser);",
          "32:     $this->drupalGet('/admin/reports/status');",
          "33:     $this->assertSession()->statusCodeEquals(200);",
          "34:     $this->assertSession()->pageTextContains(\"The anonymous user does not exist.\");",
          "35:   }",
          "37: }",
          "",
          "---------------"
        ],
        "modules/user/user.install||modules/user/user.install": [
          "File: modules/user/user.install -> modules/user/user.install",
          "--- Hunk 1 ---",
          "[Context before]",
          "93:     ->save();",
          "94: }",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "99: function user_requirements($phase): array {",
          "100:   if ($phase !== 'runtime') {",
          "101:     return [];",
          "102:   }",
          "104:   $result = (bool) \\Drupal::entityQuery('user')",
          "105:     ->accessCheck(FALSE)",
          "106:     ->condition('uid', 0)",
          "107:     ->range(0, 1)",
          "108:     ->execute();",
          "110:   if ($result === FALSE) {",
          "111:     return [",
          "112:       'anonymous user' => [",
          "113:         'title' => t('Anonymous user'),",
          "114:         'description' => t('The anonymous user does not exist. See the <a href=\":url\">restore the anonymous (user ID 0) user record</a> for more information', [",
          "115:           ':url' => 'https://www.drupal.org/node/1029506',",
          "116:         ]),",
          "117:         'severity' => REQUIREMENT_WARNING,",
          "118:       ],",
          "119:     ];",
          "120:   }",
          "121:   return [];",
          "122: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "2a3224ee6d4e144a6af9fc23eb88a2341bca2996",
      "candidate_info": {
        "commit_hash": "2a3224ee6d4e144a6af9fc23eb88a2341bca2996",
        "repo": "drupal/core",
        "commit_url": "https://github.com/drupal/core/commit/2a3224ee6d4e144a6af9fc23eb88a2341bca2996",
        "files": [
          "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php",
          "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php",
          "modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php",
          "modules/user/user.install"
        ],
        "message": "SA-CORE-2024-004 by zengenuity, cilefen, kristiaanvandeneynde, mcdruid, larowlan",
        "before_after_code_files": [
          "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php",
          "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php",
          "modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php||modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php",
          "modules/user/user.install||modules/user/user.install"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php",
            "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php",
            "modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php||modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php",
            "modules/user/user.install||modules/user/user.install"
          ],
          "candidate": [
            "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php",
            "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php",
            "modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php||modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php",
            "modules/user/user.install||modules/user/user.install"
          ]
        }
      },
      "candidate_diff": {
        "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php": [
          "File: lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php -> lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:   public $message = 'A @entity_type with @field_name %value already exists.';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:   public $caseSensitive = FALSE;",
          "",
          "---------------"
        ],
        "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php": [
          "File: lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php -> lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:       ->getStorage($entity_type_id)",
          "65:       ->getAggregateQuery()",
          "66:       ->accessCheck(FALSE)",
          "68:       ->groupBy(\"$field_name.$property_name\");",
          "69:     if (!$is_new) {",
          "70:       $entity_id = $entity->id();",
          "71:       $query->condition($id_key, $entity_id, '<>');",
          "72:     }",
          "73:     $results = $query->execute();",
          "75:     if (!empty($results)) {",
          "",
          "[Removed Lines]",
          "67:       ->condition($field_name, $item_values, 'IN')",
          "",
          "[Added Lines]",
          "73:     if ($constraint->caseSensitive) {",
          "74:       $query->condition($field_name, $item_values, 'IN');",
          "75:     }",
          "76:     else {",
          "77:       $or_group = $query->orConditionGroup();",
          "78:       foreach ($item_values as $item_value) {",
          "79:         $or_group->condition($field_name, \\Drupal::database()->escapeLike($item_value), 'LIKE');",
          "80:       }",
          "81:       $query->condition($or_group);",
          "82:     }",
          "",
          "---------------"
        ],
        "modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php||modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php": [
          "File: modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php -> modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: use Drupal\\Core\\StringTranslation\\TranslatableMarkup;",
          "6: use Drupal\\Core\\Validation\\Attribute\\Constraint;",
          "",
          "[Removed Lines]",
          "7: use Symfony\\Component\\Validator\\Constraint as SymfonyConstraint;",
          "",
          "[Added Lines]",
          "7: use Drupal\\Core\\Validation\\Plugin\\Validation\\Constraint\\UniqueFieldConstraint;",
          "8: use Drupal\\Core\\Validation\\Plugin\\Validation\\Constraint\\UniqueFieldValueValidator;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13:   id: 'FileUriUnique',",
          "14:   label: new TranslatableMarkup('File URI', [], ['context' => 'Validation'])",
          "15: )]",
          "18:   public $message = 'The file %value already exists. Enter a unique file URI.';",
          "23:   public function validatedBy(): string {",
          "25:   }",
          "27: }",
          "",
          "[Removed Lines]",
          "16: class FileUriUnique extends SymfonyConstraint {",
          "24:     return '\\Drupal\\Core\\Validation\\Plugin\\Validation\\Constraint\\UniqueFieldValueValidator';",
          "",
          "[Added Lines]",
          "17: class FileUriUnique extends UniqueFieldConstraint {",
          "29:   public $caseSensitive = TRUE;",
          "35:     return UniqueFieldValueValidator::class;",
          "",
          "---------------"
        ],
        "modules/user/user.install||modules/user/user.install": [
          "File: modules/user/user.install -> modules/user/user.install",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:   if ($phase !== 'runtime') {",
          "99:     return [];",
          "100:   }",
          "102:   $result = (bool) \\Drupal::entityQuery('user')",
          "103:     ->accessCheck(FALSE)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:   $return = [];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "106:     ->execute();",
          "108:   if ($result === FALSE) {",
          "117:     ];",
          "118:   }",
          "120: }",
          "",
          "[Removed Lines]",
          "109:     return [",
          "110:       'anonymous user' => [",
          "111:         'title' => t('Anonymous user'),",
          "112:         'description' => t('The anonymous user does not exist. See the <a href=\":url\">restore the anonymous (user ID 0) user record</a> for more information', [",
          "113:           ':url' => 'https://www.drupal.org/node/1029506',",
          "114:         ]),",
          "115:         'severity' => REQUIREMENT_WARNING,",
          "116:       ],",
          "119:   return [];",
          "",
          "[Added Lines]",
          "110:     $return['anonymous user'] = [",
          "111:       'title' => t('Anonymous user'),",
          "112:       'description' => t('The anonymous user does not exist. See the <a href=\":url\">restore the anonymous (user ID 0) user record</a> for more information', [",
          "113:         ':url' => 'https://www.drupal.org/node/1029506',",
          "114:       ]),",
          "115:       'severity' => REQUIREMENT_WARNING,",
          "116:     ];",
          "117:   }",
          "119:   $query = \\Drupal::database()->select('users_field_data');",
          "120:   $query->addExpression('LOWER(mail)', 'lower_mail');",
          "121:   $query->groupBy('lower_mail');",
          "122:   $query->having('COUNT(uid) > :matches', [':matches' => 1]);",
          "123:   $conflicts = $query->countQuery()->execute()->fetchField();",
          "125:   if ($conflicts > 0) {",
          "126:     $return['conflicting emails'] = [",
          "127:       'title' => t('Conflicting user emails'),",
          "128:       'description' => t('Some user accounts have email addresses that differ only by case. For example, one account might have alice@example.com and another might have Alice@Example.com. See <a href=\":url\">Conflicting User Emails</a> for more information.', [",
          "129:         ':url' => 'https://www.drupal.org/node/3486109',",
          "130:       ]),",
          "131:       'severity' => REQUIREMENT_WARNING,",
          "135:   return $return;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "7b9b4f744a3b8ee52dc3ae7e87a816dc66248c96",
      "candidate_info": {
        "commit_hash": "7b9b4f744a3b8ee52dc3ae7e87a816dc66248c96",
        "repo": "drupal/core",
        "commit_url": "https://github.com/drupal/core/commit/7b9b4f744a3b8ee52dc3ae7e87a816dc66248c96",
        "files": [
          "lib/Drupal/Core/Config/StorageComparer.php"
        ],
        "message": "SA-CORE-2024-006 by mcdruid, larowlan",
        "before_after_code_files": [
          "lib/Drupal/Core/Config/StorageComparer.php||lib/Drupal/Core/Config/StorageComparer.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "lib/Drupal/Core/Config/StorageComparer.php||lib/Drupal/Core/Config/StorageComparer.php": [
          "File: lib/Drupal/Core/Config/StorageComparer.php -> lib/Drupal/Core/Config/StorageComparer.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: use Drupal\\Component\\Datetime\\Time;",
          "6: use Drupal\\Component\\Datetime\\TimeInterface;",
          "7: use Drupal\\Core\\Cache\\MemoryBackend;",
          "8: use Drupal\\Core\\Cache\\NullBackend;",
          "9: use Drupal\\Core\\Config\\Entity\\ConfigDependencyManager;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "7: use Drupal\\Core\\Cache\\CacheBackendInterface;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "88:   protected $targetCacheStorage;",
          "",
          "[Added Lines]",
          "89:   protected CacheBackendInterface $targetCacheStorage;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "ebcb799d83cbffe843a99c1907afd1b1fc880ce3",
      "candidate_info": {
        "commit_hash": "ebcb799d83cbffe843a99c1907afd1b1fc880ce3",
        "repo": "drupal/core",
        "commit_url": "https://github.com/drupal/core/commit/ebcb799d83cbffe843a99c1907afd1b1fc880ce3",
        "files": [
          "modules/views/src/ViewExecutable.php"
        ],
        "message": "SA-CORE-2024-007 by mcdruid, larowlan",
        "before_after_code_files": [
          "modules/views/src/ViewExecutable.php||modules/views/src/ViewExecutable.php"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "modules/views/src/ViewExecutable.php||modules/views/src/ViewExecutable.php": [
          "File: modules/views/src/ViewExecutable.php -> modules/views/src/ViewExecutable.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "8: use Drupal\\Core\\Routing\\RouteProviderInterface;",
          "9: use Drupal\\Core\\Session\\AccountInterface;",
          "10: use Drupal\\views\\Plugin\\views\\display\\DisplayRouterInterface;",
          "11: use Drupal\\views\\Plugin\\ViewsPluginManager;",
          "12: use Symfony\\Component\\HttpFoundation\\Request;",
          "13: use Symfony\\Component\\HttpFoundation\\Response;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "11: use Drupal\\views\\Plugin\\views\\query\\QueryPluginBase;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "[No context available]",
          "",
          "[Removed Lines]",
          "222:   public $query = NULL;",
          "",
          "[Added Lines]",
          "223:   public ?QueryPluginBase $query = NULL;",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "fd436d88e39025535b1e00420bfe59f19fde058a",
      "candidate_info": {
        "commit_hash": "fd436d88e39025535b1e00420bfe59f19fde058a",
        "repo": "drupal/core",
        "commit_url": "https://github.com/drupal/core/commit/fd436d88e39025535b1e00420bfe59f19fde058a",
        "files": [
          "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php",
          "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php",
          "modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php",
          "modules/user/user.install"
        ],
        "message": "SA-CORE-2024-004 by zengenuity, cilefen, kristiaanvandeneynde, mcdruid, larowlan",
        "before_after_code_files": [
          "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php",
          "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php",
          "modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php||modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php",
          "modules/user/user.install||modules/user/user.install"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "diff_branch_same_aad": 1,
        "olp_code_files": {
          "patch": [
            "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php",
            "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php",
            "modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php||modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php",
            "modules/user/user.install||modules/user/user.install"
          ],
          "candidate": [
            "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php",
            "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php",
            "modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php||modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php",
            "modules/user/user.install||modules/user/user.install"
          ]
        }
      },
      "candidate_diff": {
        "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php": [
          "File: lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php -> lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldConstraint.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "18:   public $message = 'A @entity_type with @field_name %value already exists.';",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "28:   public $caseSensitive = FALSE;",
          "",
          "---------------"
        ],
        "lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php||lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php": [
          "File: lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php -> lib/Drupal/Core/Validation/Plugin/Validation/Constraint/UniqueFieldValueValidator.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "64:       ->getStorage($entity_type_id)",
          "65:       ->getAggregateQuery()",
          "66:       ->accessCheck(FALSE)",
          "68:       ->groupBy(\"$field_name.$property_name\");",
          "69:     if (!$is_new) {",
          "70:       $entity_id = $entity->id();",
          "71:       $query->condition($id_key, $entity_id, '<>');",
          "72:     }",
          "73:     $results = $query->execute();",
          "75:     if (!empty($results)) {",
          "",
          "[Removed Lines]",
          "67:       ->condition($field_name, $item_values, 'IN')",
          "",
          "[Added Lines]",
          "73:     if ($constraint->caseSensitive) {",
          "74:       $query->condition($field_name, $item_values, 'IN');",
          "75:     }",
          "76:     else {",
          "77:       $or_group = $query->orConditionGroup();",
          "78:       foreach ($item_values as $item_value) {",
          "79:         $or_group->condition($field_name, \\Drupal::database()->escapeLike($item_value), 'LIKE');",
          "80:       }",
          "81:       $query->condition($or_group);",
          "82:     }",
          "",
          "---------------"
        ],
        "modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php||modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php": [
          "File: modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php -> modules/file/src/Plugin/Validation/Constraint/FileUriUnique.php",
          "--- Hunk 1 ---",
          "[Context before]",
          "5: use Drupal\\Core\\StringTranslation\\TranslatableMarkup;",
          "6: use Drupal\\Core\\Validation\\Attribute\\Constraint;",
          "",
          "[Removed Lines]",
          "7: use Symfony\\Component\\Validator\\Constraint as SymfonyConstraint;",
          "",
          "[Added Lines]",
          "7: use Drupal\\Core\\Validation\\Plugin\\Validation\\Constraint\\UniqueFieldConstraint;",
          "8: use Drupal\\Core\\Validation\\Plugin\\Validation\\Constraint\\UniqueFieldValueValidator;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "13:   id: 'FileUriUnique',",
          "14:   label: new TranslatableMarkup('File URI', [], ['context' => 'Validation'])",
          "15: )]",
          "18:   public $message = 'The file %value already exists. Enter a unique file URI.';",
          "23:   public function validatedBy(): string {",
          "25:   }",
          "27: }",
          "",
          "[Removed Lines]",
          "16: class FileUriUnique extends SymfonyConstraint {",
          "24:     return '\\Drupal\\Core\\Validation\\Plugin\\Validation\\Constraint\\UniqueFieldValueValidator';",
          "",
          "[Added Lines]",
          "17: class FileUriUnique extends UniqueFieldConstraint {",
          "29:   public $caseSensitive = TRUE;",
          "35:     return UniqueFieldValueValidator::class;",
          "",
          "---------------"
        ],
        "modules/user/user.install||modules/user/user.install": [
          "File: modules/user/user.install -> modules/user/user.install",
          "--- Hunk 1 ---",
          "[Context before]",
          "98:   if ($phase !== 'runtime') {",
          "99:     return [];",
          "100:   }",
          "102:   $result = (bool) \\Drupal::entityQuery('user')",
          "103:     ->accessCheck(FALSE)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "101:   $return = [];",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "106:     ->execute();",
          "108:   if ($result === FALSE) {",
          "117:     ];",
          "118:   }",
          "120: }",
          "",
          "[Removed Lines]",
          "109:     return [",
          "110:       'anonymous user' => [",
          "111:         'title' => t('Anonymous user'),",
          "112:         'description' => t('The anonymous user does not exist. See the <a href=\":url\">restore the anonymous (user ID 0) user record</a> for more information', [",
          "113:           ':url' => 'https://www.drupal.org/node/1029506',",
          "114:         ]),",
          "115:         'severity' => REQUIREMENT_WARNING,",
          "116:       ],",
          "119:   return [];",
          "",
          "[Added Lines]",
          "110:     $return['anonymous user'] = [",
          "111:       'title' => t('Anonymous user'),",
          "112:       'description' => t('The anonymous user does not exist. See the <a href=\":url\">restore the anonymous (user ID 0) user record</a> for more information', [",
          "113:         ':url' => 'https://www.drupal.org/node/1029506',",
          "114:       ]),",
          "115:       'severity' => REQUIREMENT_WARNING,",
          "116:     ];",
          "117:   }",
          "119:   $query = \\Drupal::database()->select('users_field_data');",
          "120:   $query->addExpression('LOWER(mail)', 'lower_mail');",
          "121:   $query->groupBy('lower_mail');",
          "122:   $query->having('COUNT(uid) > :matches', [':matches' => 1]);",
          "123:   $conflicts = $query->countQuery()->execute()->fetchField();",
          "125:   if ($conflicts > 0) {",
          "126:     $return['conflicting emails'] = [",
          "127:       'title' => t('Conflicting user emails'),",
          "128:       'description' => t('Some user accounts have email addresses that differ only by case. For example, one account might have alice@example.com and another might have Alice@Example.com. See <a href=\":url\">Conflicting User Emails</a> for more information.', [",
          "129:         ':url' => 'https://www.drupal.org/node/3486109',",
          "130:       ]),",
          "131:       'severity' => REQUIREMENT_WARNING,",
          "135:   return $return;",
          "",
          "---------------"
        ]
      }
    }
  ]
}