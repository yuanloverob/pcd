{
  "cve_id": "CVE-2018-21019",
  "cve_desc": "Home Assistant before 0.67.0 was vulnerable to an information disclosure that allowed an unauthenticated attacker to read the application's error log via components/api.py.",
  "repo": "home-assistant/core",
  "patch_hash": "598f093bf0fecdefaa3d95d1ddae71317a05321e",
  "patch_info": {
    "commit_hash": "598f093bf0fecdefaa3d95d1ddae71317a05321e",
    "repo": "home-assistant/core",
    "commit_url": "https://github.com/home-assistant/core/commit/598f093bf0fecdefaa3d95d1ddae71317a05321e",
    "files": [
      "homeassistant/components/api.py",
      "tests/components/test_api.py"
    ],
    "message": "Add authentication to error log endpoint (#13836)",
    "before_after_code_files": [
      "homeassistant/components/api.py||homeassistant/components/api.py",
      "tests/components/test_api.py||tests/components/test_api.py"
    ]
  },
  "patch_diff": {
    "homeassistant/components/api.py||homeassistant/components/api.py": [
      "File: homeassistant/components/api.py -> homeassistant/components/api.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "52:     hass.http.register_view(APIComponentsView)",
      "53:     hass.http.register_view(APITemplateView)",
      "59:     return True",
      "",
      "[Removed Lines]",
      "55:     log_path = hass.data.get(DATA_LOGGING, None)",
      "56:     if log_path:",
      "57:         hass.http.register_static_path(URL_API_ERROR_LOG, log_path, False)",
      "",
      "[Added Lines]",
      "55:     if DATA_LOGGING in hass.data:",
      "56:         hass.http.register_view(APIErrorLog)",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "356:                                      HTTP_BAD_REQUEST)",
      "359: @asyncio.coroutine",
      "360: def async_services_json(hass):",
      "361:     \"\"\"Generate services data to JSONify.\"\"\"",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "358: class APIErrorLog(HomeAssistantView):",
      "359:     \"\"\"View to fetch the error log.\"\"\"",
      "361:     url = URL_API_ERROR_LOG",
      "362:     name = \"api:error_log\"",
      "364:     async def get(self, request):",
      "365:         \"\"\"Retrieve API error log.\"\"\"",
      "366:         return await self.file(request, request.app['hass'].data[DATA_LOGGING])",
      "",
      "---------------"
    ],
    "tests/components/test_api.py||tests/components/test_api.py": [
      "File: tests/components/test_api.py -> tests/components/test_api.py",
      "--- Hunk 1 ---",
      "[Context before]",
      "2: # pylint: disable=protected-access",
      "3: import asyncio",
      "4: import json",
      "6: import pytest",
      "8: from homeassistant import const",
      "9: import homeassistant.core as ha",
      "10: from homeassistant.setup import async_setup_component",
      "13: @pytest.fixture",
      "14: def mock_api_client(hass, aiohttp_client):",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "5: from unittest.mock import patch",
      "7: from aiohttp import web",
      "11: from homeassistant.bootstrap import DATA_LOGGING",
      "15: from tests.common import mock_coro",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "398: def _listen_count(hass):",
      "399:     \"\"\"Return number of event listeners.\"\"\"",
      "400:     return sum(hass.bus.async_listeners().values())",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "408: async def test_api_error_log(hass, aiohttp_client):",
      "409:     \"\"\"Test if we can fetch the error log.\"\"\"",
      "410:     hass.data[DATA_LOGGING] = '/some/path'",
      "411:     await async_setup_component(hass, 'api', {",
      "412:         'http': {",
      "413:             'api_password': 'yolo'",
      "414:         }",
      "415:     })",
      "416:     client = await aiohttp_client(hass.http.app)",
      "418:     resp = await client.get(const.URL_API_ERROR_LOG)",
      "419:     # Verufy auth required",
      "420:     assert resp.status == 401",
      "422:     with patch(",
      "423:                 'homeassistant.components.http.view.HomeAssistantView.file',",
      "424:                 return_value=mock_coro(web.Response(status=200, text='Hello'))",
      "425:             ) as mock_file:",
      "426:         resp = await client.get(const.URL_API_ERROR_LOG, headers={",
      "427:             'x-ha-access': 'yolo'",
      "428:         })",
      "430:     assert len(mock_file.mock_calls) == 1",
      "431:     assert mock_file.mock_calls[0][1][1] == hass.data[DATA_LOGGING]",
      "432:     assert resp.status == 200",
      "433:     assert await resp.text() == 'Hello'",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "b159484a79b769b280884ed1ceb5f595d149c671",
      "candidate_info": {
        "commit_hash": "b159484a79b769b280884ed1ceb5f595d149c671",
        "repo": "home-assistant/core",
        "commit_url": "https://github.com/home-assistant/core/commit/b159484a79b769b280884ed1ceb5f595d149c671",
        "files": [
          "homeassistant/const.py"
        ],
        "message": "Version bump to 0.67.0.dev0",
        "before_after_code_files": [
          "homeassistant/const.py||homeassistant/const.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/home-assistant/core/pull/13856"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "homeassistant/const.py||homeassistant/const.py": [
          "File: homeassistant/const.py -> homeassistant/const.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "1: # coding: utf-8",
          "2: \"\"\"Constants used by Home Assistant components.\"\"\"",
          "3: MAJOR_VERSION = 0",
          "5: PATCH_VERSION = '0.dev0'",
          "6: __short_version__ = '{}.{}'.format(MAJOR_VERSION, MINOR_VERSION)",
          "7: __version__ = '{}.{}'.format(__short_version__, PATCH_VERSION)",
          "",
          "[Removed Lines]",
          "4: MINOR_VERSION = 66",
          "",
          "[Added Lines]",
          "4: MINOR_VERSION = 67",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "9bd29589d50a7832a63378cdcaa5674d1fe4ef2c",
      "candidate_info": {
        "commit_hash": "9bd29589d50a7832a63378cdcaa5674d1fe4ef2c",
        "repo": "home-assistant/core",
        "commit_url": "https://github.com/home-assistant/core/commit/9bd29589d50a7832a63378cdcaa5674d1fe4ef2c",
        "files": [
          "homeassistant/const.py"
        ],
        "message": "Version bump to 0.67.0b1",
        "before_after_code_files": [
          "homeassistant/const.py||homeassistant/const.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/home-assistant/core/pull/13856"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "homeassistant/const.py||homeassistant/const.py": [
          "File: homeassistant/const.py -> homeassistant/const.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "2: \"\"\"Constants used by Home Assistant components.\"\"\"",
          "3: MAJOR_VERSION = 0",
          "4: MINOR_VERSION = 67",
          "6: __short_version__ = '{}.{}'.format(MAJOR_VERSION, MINOR_VERSION)",
          "7: __version__ = '{}.{}'.format(__short_version__, PATCH_VERSION)",
          "8: REQUIRED_PYTHON_VER = (3, 5, 3)",
          "",
          "[Removed Lines]",
          "5: PATCH_VERSION = '0b0'",
          "",
          "[Added Lines]",
          "5: PATCH_VERSION = '0b1'",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "13bda2669eaf063b75bc23248edb4db18a7b7cb7",
      "candidate_info": {
        "commit_hash": "13bda2669eaf063b75bc23248edb4db18a7b7cb7",
        "repo": "home-assistant/core",
        "commit_url": "https://github.com/home-assistant/core/commit/13bda2669eaf063b75bc23248edb4db18a7b7cb7",
        "files": [
          "homeassistant/components/frontend/__init__.py",
          "requirements_all.txt",
          "requirements_test_all.txt"
        ],
        "message": "Bump frontend to 20180404.0",
        "before_after_code_files": [
          "homeassistant/components/frontend/__init__.py||homeassistant/components/frontend/__init__.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/home-assistant/core/pull/13856"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "homeassistant/components/frontend/__init__.py||homeassistant/components/frontend/__init__.py": [
          "File: homeassistant/components/frontend/__init__.py -> homeassistant/components/frontend/__init__.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "24: from homeassistant.helpers.translation import async_get_translations",
          "25: from homeassistant.loader import bind_hass",
          "29: DOMAIN = 'frontend'",
          "30: DEPENDENCIES = ['api', 'websocket_api', 'http', 'system_log']",
          "",
          "[Removed Lines]",
          "27: REQUIREMENTS = ['home-assistant-frontend==20180401.0']",
          "",
          "[Added Lines]",
          "27: REQUIREMENTS = ['home-assistant-frontend==20180404.0']",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "b9306a5e521b855b6dddf4b92136a2c3c24b82e2",
      "candidate_info": {
        "commit_hash": "b9306a5e521b855b6dddf4b92136a2c3c24b82e2",
        "repo": "home-assistant/core",
        "commit_url": "https://github.com/home-assistant/core/commit/b9306a5e521b855b6dddf4b92136a2c3c24b82e2",
        "files": [
          "homeassistant/components/media_player/webostv.py"
        ],
        "message": "Channel up/down for LiveTV and next/previous for other apps (#13829)",
        "before_after_code_files": [
          "homeassistant/components/media_player/webostv.py||homeassistant/components/media_player/webostv.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/home-assistant/core/pull/13856"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "homeassistant/components/media_player/webostv.py||homeassistant/components/media_player/webostv.py": [
          "File: homeassistant/components/media_player/webostv.py -> homeassistant/components/media_player/webostv.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "35: CONF_ON_ACTION = 'turn_on_action'",
          "37: DEFAULT_NAME = 'LG webOS Smart TV'",
          "39: WEBOSTV_CONFIG_FILE = 'webostv.conf'",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "38: LIVETV_APP_ID = 'com.webos.app.livetv'",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "358:     def media_next_track(self):",
          "359:         \"\"\"Send next track command.\"\"\"",
          "362:     def media_previous_track(self):",
          "363:         \"\"\"Send the previous track command.\"\"\"",
          "",
          "[Removed Lines]",
          "360:         self._client.channel_up()",
          "364:         self._client.channel_down()",
          "",
          "[Added Lines]",
          "361:         current_input = self._client.get_input()",
          "362:         if current_input == LIVETV_APP_ID:",
          "363:             self._client.channel_up()",
          "364:         else:",
          "365:             self._client.fast_forward()",
          "369:         current_input = self._client.get_input()",
          "370:         if current_input == LIVETV_APP_ID:",
          "371:             self._client.channel_down()",
          "372:         else:",
          "373:             self._client.rewind()",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "09dbd94467490e2d780181a70f00d709913400ee",
      "candidate_info": {
        "commit_hash": "09dbd94467490e2d780181a70f00d709913400ee",
        "repo": "home-assistant/core",
        "commit_url": "https://github.com/home-assistant/core/commit/09dbd94467490e2d780181a70f00d709913400ee",
        "files": [
          "homeassistant/components/light/iglo.py"
        ],
        "message": "iglo hs color fix (#13808)",
        "before_after_code_files": [
          "homeassistant/components/light/iglo.py||homeassistant/components/light/iglo.py"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/home-assistant/core/pull/13856"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "homeassistant/components/light/iglo.py||homeassistant/components/light/iglo.py": [
          "File: homeassistant/components/light/iglo.py -> homeassistant/components/light/iglo.py",
          "--- Hunk 1 ---",
          "[Context before]",
          "79:     @property",
          "80:     def hs_color(self):",
          "81:         \"\"\"Return the hs value.\"\"\"",
          "84:     @property",
          "85:     def effect(self):",
          "",
          "[Removed Lines]",
          "82:         return color_util.color_RGB_to_hsv(*self._lamp.state()['rgb'])",
          "",
          "[Added Lines]",
          "82:         return color_util.color_RGB_to_hs(*self._lamp.state()['rgb'])",
          "",
          "---------------"
        ]
      }
    }
  ]
}