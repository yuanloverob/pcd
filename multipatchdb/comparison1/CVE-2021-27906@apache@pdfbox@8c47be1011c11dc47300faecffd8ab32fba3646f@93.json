{
  "cve_id": "CVE-2021-27906",
  "cve_desc": "A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
  "repo": "apache/pdfbox",
  "patch_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
  "patch_info": {
    "commit_hash": "8c47be1011c11dc47300faecffd8ab32fba3646f",
    "repo": "apache/pdfbox",
    "commit_url": "https://github.com/apache/pdfbox/commit/8c47be1011c11dc47300faecffd8ab32fba3646f",
    "files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ],
    "message": "PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
    "before_after_code_files": [
      "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
    ]
  },
  "patch_diff": {
    "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
      "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
      "--- Hunk 1 ---",
      "[Context before]",
      "19: import java.io.IOException;",
      "20: import java.util.Arrays;",
      "21: import java.util.Iterator;",
      "23: import org.apache.pdfbox.cos.COSArray;",
      "24: import org.apache.pdfbox.cos.COSBase;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "22: import java.util.NoSuchElementException;",
      "",
      "---------------",
      "--- Hunk 2 ---",
      "[Context before]",
      "212:         @Override",
      "213:         public Long next()",
      "214:         {",
      "215:             if (currentNumber < currentEnd)",
      "216:             {",
      "217:                 return currentNumber++;",
      "",
      "[Removed Lines]",
      "[None]",
      "",
      "[Added Lines]",
      "216:             if (currentNumber >= maxValue)",
      "217:             {",
      "218:                 throw new NoSuchElementException();",
      "219:             }",
      "",
      "---------------"
    ]
  },
  "candidates": [
    {
      "candidate_hash": "21e743dccfb70d0f5db4f15718afdb73e2b46653",
      "candidate_info": {
        "commit_hash": "21e743dccfb70d0f5db4f15718afdb73e2b46653",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/21e743dccfb70d0f5db4f15718afdb73e2b46653",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
        ],
        "message": "PDFBOX-5108: avoid negative /W values\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1886852 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [
            "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
          ],
          "candidate": [
            "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java"
          ]
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java||pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java -> pdfbox/src/main/java/org/apache/pdfbox/pdfparser/PDFXrefStreamParser.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "19: import java.io.IOException;",
          "21: import java.util.ArrayList;",
          "22: import java.util.Iterator;",
          "23: import java.util.List;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "22: import java.util.Arrays;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "78:         {",
          "79:             w[i] = wArray.getInt(i, 0);",
          "80:         }",
          "82:         COSArray indexArray = stream.getCOSArray(COSName.INDEX);",
          "83:         if (indexArray == null)",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "82:         if (w[0] < 0 || w[1] < 0 || w[2] < 0)",
          "83:         {",
          "84:             throw new IOException(\"Incorrect /W array in XRef: \" + Arrays.toString(w));",
          "85:         }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "d2e47f02be9c820d4973445c0983df7bcdae27bc",
      "candidate_info": {
        "commit_hash": "d2e47f02be9c820d4973445c0983df7bcdae27bc",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/d2e47f02be9c820d4973445c0983df7bcdae27bc",
        "files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestRubberStampWithImage.java"
        ],
        "message": "PDFBOX-4892: increase test coverage\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1881251 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestRubberStampWithImage.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestRubberStampWithImage.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestRubberStampWithImage.java||examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestRubberStampWithImage.java": [
          "File: examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestRubberStampWithImage.java -> examples/src/test/java/org/apache/pdfbox/examples/pdmodel/TestRubberStampWithImage.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "17: package org.apache.pdfbox.examples.pdmodel;",
          "21: import java.io.File;",
          "22: import java.io.IOException;",
          "28: {",
          "29:     public void test() throws IOException",
          "30:     {",
          "31:         String documentFile = \"src/test/resources/org/apache/pdfbox/examples/pdmodel/document.pdf\";",
          "",
          "[Removed Lines]",
          "19: import junit.framework.TestCase;",
          "27: public class TestRubberStampWithImage extends TestCase",
          "",
          "[Added Lines]",
          "19: import java.awt.image.BufferedImage;",
          "24: import javax.imageio.ImageIO;",
          "26: import org.apache.pdfbox.cos.COSName;",
          "27: import org.apache.pdfbox.pdmodel.PDDocument;",
          "28: import org.apache.pdfbox.pdmodel.graphics.image.PDImageXObject;",
          "29: import org.apache.pdfbox.pdmodel.interactive.annotation.PDAnnotationRubberStamp;",
          "30: import org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceDictionary;",
          "31: import org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceEntry;",
          "32: import org.apache.pdfbox.pdmodel.interactive.annotation.PDAppearanceStream;",
          "33: import org.apache.pdfbox.rendering.PDFRenderer;",
          "35: import org.junit.Assert;",
          "36: import org.junit.Test;",
          "41: public class TestRubberStampWithImage",
          "43:     @Test",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "35:         new File(\"target/test-output\").mkdirs();",
          "37:         String[] args = new String[] { documentFile, outFile, stampFile };",
          "38:         RubberStampWithImage rubberStamp = new RubberStampWithImage();",
          "39:         rubberStamp.doIt(args);",
          "40:     }",
          "",
          "[Removed Lines]",
          "41: }",
          "",
          "[Added Lines]",
          "52:         PDDocument doc1 = PDDocument.load(new File(documentFile));",
          "53:         BufferedImage bim1 = new PDFRenderer(doc1).renderImage(0);",
          "54:         doc1.close();",
          "60:         PDDocument doc2 = PDDocument.load(new File(documentFile));",
          "61:         BufferedImage bim2 = new PDFRenderer(doc2).renderImage(0);",
          "62:         Assert.assertFalse(compareImages(bim1, bim2));",
          "63:         PDAnnotationRubberStamp rubberStampAnnotation = (PDAnnotationRubberStamp) doc2.getPage(0).getAnnotations().get(0);",
          "64:         PDAppearanceDictionary appearance = rubberStampAnnotation.getAppearance();",
          "65:         PDAppearanceEntry normalAppearance = appearance.getNormalAppearance();",
          "66:         PDAppearanceStream appearanceStream = normalAppearance.getAppearanceStream();",
          "67:         PDImageXObject ximage = (PDImageXObject) appearanceStream.getResources().getXObject(COSName.getPDFName(\"Im1\"));",
          "68:         BufferedImage actualStampImage = ximage.getImage();",
          "69:         BufferedImage expectedStampImage = ImageIO.read(new File(stampFile));",
          "70:         Assert.assertTrue(compareImages(expectedStampImage, actualStampImage));",
          "71:         doc2.close();",
          "72:     }",
          "74:     private boolean compareImages(BufferedImage bim1, BufferedImage bim2)",
          "75:     {",
          "76:         if (bim1.getWidth() != bim2.getWidth())",
          "77:         {",
          "78:             return false;",
          "79:         }",
          "80:         if (bim1.getHeight() != bim2.getHeight())",
          "81:         {",
          "82:             return false;",
          "83:         }",
          "84:         for (int x = 0; x < bim1.getWidth(); ++x)",
          "85:         {",
          "86:             for (int y = 0; y < bim1.getHeight(); ++y)",
          "87:             {",
          "88:                 if (bim1.getRGB(x, y) != bim2.getRGB(x, y))",
          "89:                 {",
          "90:                     return false;",
          "91:                 }",
          "92:             }",
          "93:         }",
          "94:         return true;",
          "96: }",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "f774812536ae31da2e369bee1cae2f49c85f85f1",
      "candidate_info": {
        "commit_hash": "f774812536ae31da2e369bee1cae2f49c85f85f1",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/f774812536ae31da2e369bee1cae2f49c85f85f1",
        "files": [
          "fontbox/src/main/java/org/apache/fontbox/cmap/CMap.java"
        ],
        "message": "PDFBOX-4892: optimize + fix javadoc, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1891623 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "fontbox/src/main/java/org/apache/fontbox/cmap/CMap.java||fontbox/src/main/java/org/apache/fontbox/cmap/CMap.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "fontbox/src/main/java/org/apache/fontbox/cmap/CMap.java||fontbox/src/main/java/org/apache/fontbox/cmap/CMap.java": [
          "File: fontbox/src/main/java/org/apache/fontbox/cmap/CMap.java -> fontbox/src/main/java/org/apache/fontbox/cmap/CMap.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "128:                 bytes[byteCount] = (byte)in.read();",
          "129:             }",
          "130:         }",
          "133:         {",
          "135:         }",
          "138:         if (in.markSupported())",
          "139:         {",
          "",
          "[Removed Lines]",
          "131:         String seq = \"\";",
          "132:         for (int i = 0; i < maxCodeLength; ++i)",
          "134:             seq += String.format(\"0x%02X (%04o) \", bytes[i], bytes[i]);",
          "136:         LOG.warn(\"Invalid character code sequence \" + seq + \"in CMap \" + cmapName);",
          "",
          "[Added Lines]",
          "131:         if (LOG.isWarnEnabled())",
          "133:             StringBuilder sb = new StringBuilder();",
          "134:             for (int i = 0; i < maxCodeLength; ++i)",
          "135:             {",
          "136:                 sb.append(String.format(\"0x%02X (%04o) \", bytes[i], bytes[i]));",
          "137:             }",
          "138:             LOG.warn(\"Invalid character code sequence \" + sb + \"in CMap \" + cmapName);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "db73eb99318fc69a11c30b8107b72cfca0d02cfd",
      "candidate_info": {
        "commit_hash": "db73eb99318fc69a11c30b8107b72cfca0d02cfd",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/db73eb99318fc69a11c30b8107b72cfca0d02cfd",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java"
        ],
        "message": "PDFBOX-5016: deprecate setting the subtype from PDButton\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1883400 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java",
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 1,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDButton.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "99:     public void setPushButton(boolean pushbutton)",
          "100:     {",
          "101:         getCOSObject().setFlag(COSName.FF, FLAG_PUSHBUTTON, pushbutton);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "100:     @Deprecated",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "123:     public void setRadioButton(boolean radiobutton)",
          "124:     {",
          "125:         getCOSObject().setFlag(COSName.FF, FLAG_RADIO, radiobutton);",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "126:     @Deprecated",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDPushButton.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "22: import java.util.Set;",
          "24: import org.apache.pdfbox.cos.COSDictionary;",
          "",
          "[Removed Lines]",
          "[None]",
          "",
          "[Added Lines]",
          "25: import org.apache.pdfbox.cos.COSName;",
          "",
          "---------------",
          "--- Hunk 2 ---",
          "[Context before]",
          "39:     public PDPushButton(PDAcroForm acroForm)",
          "40:     {",
          "41:         super(acroForm);",
          "43:     }",
          "",
          "[Removed Lines]",
          "42:         setPushButton(true);",
          "",
          "[Added Lines]",
          "43:         getCOSObject().setFlag(COSName.FF, FLAG_PUSHBUTTON, true);",
          "",
          "---------------"
        ],
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/interactive/form/PDRadioButton.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "44:     public PDRadioButton(PDAcroForm acroForm)",
          "45:     {",
          "46:         super(acroForm);",
          "48:     }",
          "",
          "[Removed Lines]",
          "47:         setRadioButton(true);",
          "",
          "[Added Lines]",
          "47:         getCOSObject().setFlag(COSName.FF, FLAG_RADIO, true);",
          "",
          "---------------"
        ]
      }
    },
    {
      "candidate_hash": "dec337500b45453a3496cbb8e06b5cde347e1a1c",
      "candidate_info": {
        "commit_hash": "dec337500b45453a3496cbb8e06b5cde347e1a1c",
        "repo": "apache/pdfbox",
        "commit_url": "https://github.com/apache/pdfbox/commit/dec337500b45453a3496cbb8e06b5cde347e1a1c",
        "files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java"
        ],
        "message": "PDFBOX-4892: remove double initialization, as suggested by valerybokov\n\ngit-svn-id: https://svn.apache.org/repos/asf/pdfbox/branches/2.0@1890474 13f79535-47bb-0310-9956-ffa450edef68",
        "before_after_code_files": [
          "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java"
        ]
      },
      "candidate_patch_features": {
        "candidate_earlier_than_patch": 0,
        "same_pr": 1,
        "olp_pr_links": [
          "https://github.com/apache/pdfbox/pull/104"
        ],
        "olp_code_files": {
          "patch": [],
          "candidate": []
        }
      },
      "candidate_diff": {
        "pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java||pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java": [
          "File: pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java -> pdfbox/src/main/java/org/apache/pdfbox/pdmodel/encryption/AccessPermission.java",
          "--- Hunk 1 ---",
          "[Context before]",
          "59:     private static final int ASSEMBLE_DOCUMENT_BIT = 11;",
          "60:     private static final int DEGRADED_PRINT_BIT = 12;",
          "64:     private boolean readOnly = false;",
          "",
          "[Removed Lines]",
          "62:     private int bytes = DEFAULT_PERMISSIONS;",
          "",
          "[Added Lines]",
          "62:     private int bytes;",
          "",
          "---------------"
        ]
      }
    }
  ]
}